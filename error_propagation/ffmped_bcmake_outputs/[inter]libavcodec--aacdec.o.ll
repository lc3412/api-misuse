; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x float], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.AVFloatDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [16 x i8], [128 x float], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x float], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x float], [1024 x float], [1536 x float], [2048 x float], [3072 x float], [1024 x float], [1024 x float], [672 x %struct.PredictorState], float*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, float, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x float]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { float, float, float, float, float, float, float, float }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x float]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x float]]], [64 x [40 x [2 x float]]], [2 x [2 x [38 x [64 x float]]]], [64 x [2 x float]], [64 x [2 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x i8]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [16 x i8], [5 x [64 x float]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x float], [1312 x float], i32, [2 x i32], [5 x float], [2 x [32 x [32 x [2 x float]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x float]]]], [42 x [48 x float]], [42 x [48 x float]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x float]], [3 x [5 x i8]], [3 x [5 x float]], [8 x i8], i8, [3 x i8], i32, i32, [16 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x float]]], [91 x [46 x [2 x float]]], [50 x [3 x [37 x [2 x float]]]], [34 x float], [8 x i8], [34 x float], [8 x i8], [34 x float], [8 x i8], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [91 x [32 x [2 x float]]], [91 x [32 x [2 x float]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (float*, [2 x float]*, i32)*, void ([2 x float]*, [2 x float]*, float*, i32)*, void ([2 x float]*, [2 x float]*, [8 x [2 x float]]*, i64, i32)*, void ([32 x [2 x float]]*, [38 x [64 x float]]*, i32, i32)*, void ([38 x [64 x float]]*, [32 x [2 x float]]*, i32, i32)*, void ([2 x float]*, [2 x float]*, [37 x [2 x float]]*, float*, [2 x float]*, float*, float, i32)*, [2 x void ([2 x float]*, [2 x float]*, [4 x float]*, [4 x float]*, i32)*] }
%struct.SBRDSPContext = type { void (float*)*, float ([2 x float]*, i32)*, void (float*)*, void (float*)*, void ([2 x float]*, float*)*, void (float*, float*)*, void (float*, float*, float*)*, void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.LATMContext = type { %struct.AACContext, i32, i32, i32, i32, [16 x i8] }
%union.unaligned_32 = type { i32 }
%struct.elem_to_channel = type { i64, i8, i8, i8 }
%union.anon.0 = type { i32 }
%union.av_intfloat32 = type { i32 }
%struct.AACADTSHeaderInfo = type { i32, i32, i32, i8, i8, i8, i8, i8 }

@.str = private unnamed_addr constant [4 x i8] c"aac\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"AAC (Advanced Audio Coding)\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@aac_channel_layout = internal constant [16 x i64] [i64 4, i64 3, i64 7, i64 263, i64 55, i64 63, i64 255, i64 0, i64 0, i64 0, i64 1807, i64 1599, i64 0, i64 0, i64 0, i64 0], align 16
@aac_decoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([6 x %struct.AVOption], [6 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_aac_profiles = external constant [0 x %struct.AVProfile], align 8
@ff_aac_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86018, i32 1026, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* getelementptr inbounds ([16 x i64], [16 x i64]* @aac_channel_layout, i32 0, i32 0), i8 0, %struct.AVClass* @aac_decoder_class, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_aac_profiles, i32 0, i32 0), i8* null, i32 7776, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @aac_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @aac_decode_frame, i32 (%struct.AVCodecContext*)* @aac_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"aac_latm\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"AAC LATM (Advanced Audio Coding LATM syntax)\00", align 1
@.compoundliteral.4 = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_aac_latm_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 86065, i32 1026, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.4, i32 0, i32 0), i64* getelementptr inbounds ([16 x i64], [16 x i64]* @aac_channel_layout, i32 0, i32 0), i8 0, %struct.AVClass* null, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_aac_profiles, i32 0, i32 0), i8* null, i32 7808, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @latm_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @latm_decode_frame, i32 (%struct.AVCodecContext*)* @aac_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"AAC decoder\00", align 1
@options = internal constant [6 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i32 0, i32 0), i32 6632, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 2.000000e+00, i32 10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0) }, %struct.AVOption zeroinitializer], align 16
@.str.6 = private unnamed_addr constant [15 x i8] c"dual_mono_mode\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"Select the channel to decode for dual mono\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"autoselection\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Select Main/Left channel\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"Select Sub/Right channel\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Select both channels\00", align 1
@aac_table_init = internal global i32 0, align 4
@ff_mpeg4audio_channels = external constant [8 x i8], align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Too many channels\0A\00", align 1
@aac_static_table_init.table = internal global [304 x [2 x i16]] zeroinitializer, align 16
@vlc_spectral = internal global [11 x %struct.VLC] zeroinitializer, align 16
@ff_aac_spectral_sizes = external constant [11 x i16], align 16
@ff_aac_spectral_bits = external constant [11 x i8*], align 16
@ff_aac_spectral_codes = external constant [11 x i16*], align 16
@aac_static_table_init.table.17 = internal global [270 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.18 = internal global [550 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.19 = internal global [300 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.20 = internal global [328 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.21 = internal global [294 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.22 = internal global [306 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.23 = internal global [268 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.24 = internal global [510 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.25 = internal global [366 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.26 = internal global [462 x [2 x i16]] zeroinitializer, align 16
@aac_static_table_init.table.27 = internal global [352 x [2 x i16]] zeroinitializer, align 16
@vlc_scalefactors = internal global %struct.VLC zeroinitializer, align 8
@ff_aac_scalefactor_bits = external constant [121 x i8], align 16
@ff_aac_scalefactor_code = external constant [121 x i32], align 16
@ff_aac_kbd_long_1024 = external global [1024 x float], align 32
@ff_aac_kbd_short_128 = external global [128 x float], align 32
@ff_aac_kbd_long_960 = external global [960 x float], align 32
@ff_aac_kbd_short_120 = external global [120 x float], align 32
@ff_sine_960 = external global [960 x float], align 32
@ff_sine_120 = external global [120 x float], align 32
@ff_aac_tableinit.exp2_lut = internal constant [16 x float] [float 1.000000e+00, float 0x3FF0B55860000000, float 0x3FF172B840000000, float 0x3FF2387A60000000, float 0x3FF306FE00000000, float 0x3FF3DEA640000000, float 0x3FF4BFDAE0000000, float 0x3FF5AB07E0000000, float 0x3FF6A09E60000000, float 0x3FF7A11480000000, float 0x3FF8ACE540000000, float 0x3FF9C49180000000, float 0x3FFAE89FA0000000, float 0x3FFC199BE0000000, float 0x3FFD5818E0000000, float 0x3FFEA4AFA0000000], align 16
@ff_aac_pow2sf_tab = external global [428 x float], align 16
@ff_aac_pow34sf_tab = external global [428 x float], align 16
@ff_sine_128 = external global [128 x float], align 32
@ff_sine_1024 = external global [1024 x float], align 32
@.str.28 = private unnamed_addr constant [39 x i8] c"Audio specific config size is invalid\0A\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"invalid sampling rate index %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"invalid low delay sampling rate index %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"Audio object type %s%d\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"SBR+\00", align 1
@.str.33 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"SBR with 960 frame length\00", align 1
@.str.35 = private unnamed_addr constant [31 x i8] c"AAC data resilience (flags %x)\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"epConfig %d\00", align 1
@.str.37 = private unnamed_addr constant [111 x i8] c"Sample rate index in program config element does not match the sample rate index configured by the container.\0A\00", align 1
@.str.38 = private unnamed_addr constant [61 x i8] c"decode_pce: Input buffer exhausted before END element found\0A\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.41 = private unnamed_addr constant [29 x i8] c"libavcodec/aacdec_template.c\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"Low Delay SBR\00", align 1
@.str.43 = private unnamed_addr constant [49 x i8] c"Input buffer exhausted before END element found\0A\00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"invalid default channel configuration (%d)\0A\00", align 1
@tags_per_config = internal constant [16 x i8] c"\00\01\01\02\03\03\04\05\00\00\00\04\05\00\05\00", align 16
@aac_channel_layout_map = internal constant [16 x [5 x [3 x i8]]] [[5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\01\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\00\01\03", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] zeroinitializer, [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] c"\03\00\04", [3 x i8] zeroinitializer], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\01", [3 x i8] c"\01\02\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\03", [3 x i8] c"\00\01\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] [[3 x i8] c"\00\00\01", [3 x i8] c"\01\00\01", [3 x i8] c"\01\01\02", [3 x i8] c"\01\02\03", [3 x i8] c"\03\00\04"], [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer, [5 x [3 x i8]] zeroinitializer], align 16
@.str.45 = private unnamed_addr constant [163 x i8] c"Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\0A\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"Too large remapped id\00", align 1
@.str.47 = private unnamed_addr constant [36 x i8] c"Unknown ER channel configuration %d\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"channel element %d.%d is not allocated\0A\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"no frame data found\0A\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"mono with CPE\0A\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"stereo with SCE\0A\00", align 1
@.str.52 = private unnamed_addr constant [87 x i8] c"This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\0A\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"SCE\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"LFE\00", align 1
@.str.55 = private unnamed_addr constant [87 x i8] c"This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\0A\00", align 1
@.str.56 = private unnamed_addr constant [49 x i8] c"Pulse tool not allowed in eight short sequence.\0A\00", align 1
@.str.57 = private unnamed_addr constant [32 x i8] c"Pulse data corrupt or invalid.\0A\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"Gain control\00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"Reserved bit set.\0A\00", align 1
@.str.60 = private unnamed_addr constant [77 x i8] c"AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\0A\00", align 1
@ff_swb_offset_120 = external constant [13 x i16*], align 16
@ff_aac_num_swb_120 = external constant [0 x i8], align 1
@ff_swb_offset_128 = external constant [13 x i16*], align 16
@ff_aac_num_swb_128 = external constant [0 x i8], align 1
@ff_tns_max_bands_128 = external constant [13 x i8], align 1
@ff_swb_offset_480 = external constant [13 x i16*], align 16
@ff_aac_num_swb_480 = external constant [0 x i8], align 1
@ff_tns_max_bands_480 = external constant [13 x i8], align 1
@ff_swb_offset_512 = external constant [13 x i16*], align 16
@ff_aac_num_swb_512 = external constant [0 x i8], align 1
@ff_tns_max_bands_512 = external constant [13 x i8], align 1
@ff_aac_num_swb_960 = external constant [0 x i8], align 1
@ff_swb_offset_960 = external constant [13 x i16*], align 16
@ff_aac_num_swb_1024 = external constant [0 x i8], align 1
@ff_swb_offset_1024 = external constant [13 x i16*], align 16
@ff_tns_max_bands_1024 = external constant [13 x i8], align 1
@.str.61 = private unnamed_addr constant [38 x i8] c"Prediction is not allowed in AAC-LC.\0A\00", align 1
@.str.62 = private unnamed_addr constant [39 x i8] c"LTP in ER AAC LD not yet implemented.\0A\00", align 1
@.str.63 = private unnamed_addr constant [63 x i8] c"Number of scalefactor bands in group (%d) exceeds limit (%d).\0A\00", align 1
@.str.64 = private unnamed_addr constant [32 x i8] c"Invalid Predictor Reset Group.\0A\00", align 1
@ff_aac_pred_sfb_max = external constant [0 x i8], align 1
@ltp_coef = internal constant [8 x float] [float 0x3FE2443B20000000, float 0x3FE64AADA0000000, float 0x3FEA042100000000, float 0x3FED296700000000, float 0x3FEF844D00000000, float 0x3FF1161800000000, float 0x3FF31D1600000000, float 0x3FF5E99B60000000], align 16
@.str.65 = private unnamed_addr constant [19 x i8] c"invalid band type\0A\00", align 1
@.str.66 = private unnamed_addr constant [68 x i8] c"decode_band_types: Input buffer exhausted before END element found\0A\00", align 1
@.str.67 = private unnamed_addr constant [42 x i8] c"Number of bands (%d) exceeds limit (%d).\0A\00", align 1
@.str.68 = private unnamed_addr constant [114 x i8] c"If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)\00", align 1
@.str.69 = private unnamed_addr constant [99 x i8] c"If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)\00", align 1
@.str.70 = private unnamed_addr constant [32 x i8] c"Scalefactor (%d) out of range.\0A\00", align 1
@.str.71 = private unnamed_addr constant [49 x i8] c"TNS filter order %d is greater than maximum %d.\0A\00", align 1
@tns_tmp2_map = internal constant [4 x float*] [float* getelementptr inbounds ([8 x float], [8 x float]* @tns_tmp2_map_0_3, i32 0, i32 0), float* getelementptr inbounds ([16 x float], [16 x float]* @tns_tmp2_map_0_4, i32 0, i32 0), float* getelementptr inbounds ([4 x float], [4 x float]* @tns_tmp2_map_1_3, i32 0, i32 0), float* getelementptr inbounds ([8 x float], [8 x float]* @tns_tmp2_map_1_4, i32 0, i32 0)], align 16
@tns_tmp2_map_0_3 = internal constant [8 x float] [float 0.000000e+00, float 0xBFDBC4C040000000, float 0xBFE904C380000000, float 0xBFEF329C00000000, float 0x3FEF838B80000000, float 0x3FEBB67AE0000000, float 0x3FE491B740000000, float 0x3FD5E3A880000000], align 16
@tns_tmp2_map_0_4 = internal constant [16 x float] [float 0.000000e+00, float 0xBFCA9CD9C0000000, float 0xBFDA07F920000000, float 0xBFE2CF2300000000, float 0xBFE7C7D7A0000000, float 0xBFEBB67AE0000000, float 0xBFEE6F0E20000000, float 0xBFEFD31FA0000000, float 0x3FEFDD0DE0000000, float 0x3FEEC74680000000, float 0x3FECA52D80000000, float 0x3FE9895B60000000, float 0x3FE58EEA20000000, float 0x3FE0D88840000000, float 0x3FD71E9560000000, float 0x3FC7851AA0000000], align 16
@tns_tmp2_map_1_3 = internal constant [4 x float] [float 0.000000e+00, float 0xBFDBC4C040000000, float 0x3FE491B740000000, float 0x3FD5E3A880000000], align 16
@tns_tmp2_map_1_4 = internal constant [8 x float] [float 0.000000e+00, float 0xBFCA9CD9C0000000, float 0xBFDA07F920000000, float 0xBFE2CF2300000000, float 0x3FE58EEA20000000, float 0x3FE0D88840000000, float 0x3FD71E9560000000, float 0x3FC7851AA0000000], align 16
@decode_gain_control.gain_mode = internal constant [4 x [3 x i8]] [[3 x i8] c"\01\00\05", [3 x i8] c"\02\01\02", [3 x i8] c"\08\00\02", [3 x i8] c"\02\01\05"], align 1
@ff_aac_codebook_vector_vals = external global [0 x float*], align 8
@ff_aac_codebook_vector_idx = external global [0 x i16*], align 8
@.str.72 = private unnamed_addr constant [38 x i8] c"error in spectral data, ESC overflow\0A\00", align 1
@ff_cbrt_tab = external global [8192 x i32], align 16
@.str.73 = private unnamed_addr constant [29 x i8] c"ms_present = 3 is reserved.\0A\00", align 1
@.str.74 = private unnamed_addr constant [31 x i8] c"ChannelElement %d.%d missing \0A\00", align 1
@ff_sine_512 = external global [512 x float], align 32
@ff_aac_eld_window_480 = external constant [1800 x float], align 32
@ff_aac_eld_window_512 = external constant [1920 x float], align 32
@.str.75 = private unnamed_addr constant [55 x i8] c"Dependent coupling is not supported together with LTP\0A\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"Error decoding AAC frame header.\0A\00", align 1
@.str.77 = private unnamed_addr constant [20 x i8] c"Elem type:%x id:%x\0A\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"channel element %d.%d duplicate\0A\00", align 1
@.str.79 = private unnamed_addr constant [87 x i8] c"Not evaluating a further program_config_element as this construct is dubious at best.\0A\00", align 1
@.str.80 = private unnamed_addr constant [59 x i8] c"TYPE_FIL: Input buffer exhausted before END element found\0A\00", align 1
@.str.81 = private unnamed_addr constant [37 x i8] c"More than one AAC RDB per ADTS frame\00", align 1
@cce_scale = internal constant [4 x float] [float 0x3FF172B840000000, float 0x3FF306FE00000000, float 0x3FF6A09E60000000, float 2.000000e+00], align 16
@.str.82 = private unnamed_addr constant [75 x i8] c"skip_data_stream_element: Input buffer exhausted before END element found\0A\00", align 1
@.str.83 = private unnamed_addr constant [27 x i8] c"extension type: %d len:%d\0A\00", align 1
@.str.84 = private unnamed_addr constant [49 x i8] c"SBR was found before the first channel element.\0A\00", align 1
@.str.85 = private unnamed_addr constant [64 x i8] c"SBR signaled to be not-present but was found in the bitstream.\0A\00", align 1
@.str.86 = private unnamed_addr constant [71 x i8] c"Implicit SBR was found with a first occurrence after the first frame.\0A\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"FILL:%s\0A\00", align 1
@.str.88 = private unnamed_addr constant [14 x i8] c"libfaac %d.%d\00", align 1
@.str.89 = private unnamed_addr constant [70 x i8] c"ADTS header detected, probably as result of configuration misparsing\0A\00", align 1
@.str.90 = private unnamed_addr constant [25 x i8] c"no decoder config found\0A\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"incomplete frame\0A\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"frame length mismatch %d << %d\0A\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"Multiple programs\00", align 1
@.str.94 = private unnamed_addr constant [16 x i8] c"Multiple layers\00", align 1
@.str.95 = private unnamed_addr constant [55 x i8] c"audio config changed (sample_rate=%d, chan_config=%d)\0A\00", align 1
@.str.96 = private unnamed_addr constant [22 x i8] c"initializing latmctx\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2060 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %ret = alloca i32, align 4
  %sr = alloca i32, align 4
  %i = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %ret53 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2061, metadata !2062), !dbg !2063
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !2064, metadata !2062), !dbg !2663
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2664
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2665
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2665
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !2664
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !2663
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2666, metadata !2062), !dbg !2667
  %call = call i32 @pthread_once(i32* @aac_table_init, void ()* @aac_static_table_init), !dbg !2668
  store i32 %call, i32* %ret, align 4, !dbg !2669
  %3 = load i32, i32* %ret, align 4, !dbg !2670
  %cmp = icmp ne i32 %3, 0, !dbg !2672
  br i1 %cmp, label %if.then, label %if.end, !dbg !2673

if.then:                                          ; preds = %entry
  store i32 -1313558101, i32* %retval, align 4, !dbg !2674
  br label %return, !dbg !2674

if.end:                                           ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2675
  %5 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2676
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !2677
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %avctx1, align 8, !dbg !2678
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2679
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 82, !dbg !2680
  %7 = load i32, i32* %sample_rate, align 8, !dbg !2680
  %8 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2681
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 24, !dbg !2682
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2681
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !2683
  %sample_rate2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !2684
  store i32 %7, i32* %sample_rate2, align 8, !dbg !2685
  %9 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2686
  call void @aacdec_init(%struct.AACContext* %9), !dbg !2687
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2688
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 84, !dbg !2689
  store i32 8, i32* %sample_fmt, align 8, !dbg !2690
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2691
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2693
  %12 = load i32, i32* %extradata_size, align 8, !dbg !2693
  %cmp3 = icmp sgt i32 %12, 0, !dbg !2694
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !2695

if.then4:                                         ; preds = %if.end
  %13 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2696
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2699
  %avctx5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !2700
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !2700
  %16 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2701
  %oc6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 24, !dbg !2702
  %arrayidx7 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc6, i64 0, i64 1, !dbg !2701
  %m4ac8 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx7, i32 0, i32 0, !dbg !2703
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2704
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 15, !dbg !2705
  %18 = load i8*, i8** %extradata, align 8, !dbg !2705
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2706
  %extradata_size9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 16, !dbg !2707
  %20 = load i32, i32* %extradata_size9, align 8, !dbg !2707
  %conv = sext i32 %20 to i64, !dbg !2706
  %mul = mul nsw i64 %conv, 8, !dbg !2708
  %call10 = call i32 @decode_audio_specific_config(%struct.AACContext* %13, %struct.AVCodecContext* %15, %struct.MPEG4AudioConfig* %m4ac8, i8* %18, i64 %mul, i32 1), !dbg !2709
  store i32 %call10, i32* %ret, align 4, !dbg !2710
  %cmp11 = icmp slt i32 %call10, 0, !dbg !2711
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !2712

if.then13:                                        ; preds = %if.then4
  %21 = load i32, i32* %ret, align 4, !dbg !2713
  store i32 %21, i32* %retval, align 4, !dbg !2714
  br label %return, !dbg !2714

if.end14:                                         ; preds = %if.then4
  br label %if.end69, !dbg !2715

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %sr, metadata !2716, metadata !2062), !dbg !2718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2719, metadata !2062), !dbg !2720
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !2721, metadata !2062), !dbg !2722
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !2723, metadata !2062), !dbg !2724
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2725
  %sample_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 82, !dbg !2726
  %23 = load i32, i32* %sample_rate15, align 8, !dbg !2726
  %call16 = call i32 @sample_rate_idx(i32 %23), !dbg !2727
  store i32 %call16, i32* %sr, align 4, !dbg !2728
  %24 = load i32, i32* %sr, align 4, !dbg !2729
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2730
  %oc17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 24, !dbg !2731
  %arrayidx18 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc17, i64 0, i64 1, !dbg !2730
  %m4ac19 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx18, i32 0, i32 0, !dbg !2732
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac19, i32 0, i32 1, !dbg !2733
  store i32 %24, i32* %sampling_index, align 4, !dbg !2734
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2735
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 83, !dbg !2736
  %27 = load i32, i32* %channels, align 4, !dbg !2736
  %28 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2737
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 24, !dbg !2738
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !2737
  %m4ac22 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 0, !dbg !2739
  %channels23 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac22, i32 0, i32 9, !dbg !2740
  store i32 %27, i32* %channels23, align 4, !dbg !2741
  %29 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2742
  %oc24 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 24, !dbg !2743
  %arrayidx25 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc24, i64 0, i64 1, !dbg !2742
  %m4ac26 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx25, i32 0, i32 0, !dbg !2744
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac26, i32 0, i32 4, !dbg !2745
  store i32 -1, i32* %sbr, align 8, !dbg !2746
  %30 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2747
  %oc27 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 24, !dbg !2748
  %arrayidx28 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc27, i64 0, i64 1, !dbg !2747
  %m4ac29 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx28, i32 0, i32 0, !dbg !2749
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac29, i32 0, i32 10, !dbg !2750
  store i32 -1, i32* %ps, align 8, !dbg !2751
  store i32 0, i32* %i, align 4, !dbg !2752
  br label %for.cond, !dbg !2754

for.cond:                                         ; preds = %for.inc, %if.else
  %31 = load i32, i32* %i, align 4, !dbg !2755
  %conv30 = sext i32 %31 to i64, !dbg !2755
  %cmp31 = icmp ult i64 %conv30, 8, !dbg !2758
  br i1 %cmp31, label %for.body, label %for.end, !dbg !2759

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !2760
  %idxprom = sext i32 %32 to i64, !dbg !2762
  %arrayidx33 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_mpeg4audio_channels, i64 0, i64 %idxprom, !dbg !2762
  %33 = load i8, i8* %arrayidx33, align 1, !dbg !2762
  %conv34 = zext i8 %33 to i32, !dbg !2762
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2763
  %channels35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 83, !dbg !2764
  %35 = load i32, i32* %channels35, align 4, !dbg !2764
  %cmp36 = icmp eq i32 %conv34, %35, !dbg !2765
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2766

if.then38:                                        ; preds = %for.body
  br label %for.end, !dbg !2767

if.end39:                                         ; preds = %for.body
  br label %for.inc, !dbg !2768

for.inc:                                          ; preds = %if.end39
  %36 = load i32, i32* %i, align 4, !dbg !2770
  %inc = add nsw i32 %36, 1, !dbg !2770
  store i32 %inc, i32* %i, align 4, !dbg !2770
  br label %for.cond, !dbg !2772, !llvm.loop !2773

for.end:                                          ; preds = %if.then38, %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !2775
  %conv40 = sext i32 %37 to i64, !dbg !2775
  %cmp41 = icmp eq i64 %conv40, 8, !dbg !2777
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !2778

if.then43:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2779
  br label %if.end44, !dbg !2781

if.end44:                                         ; preds = %if.then43, %for.end
  %38 = load i32, i32* %i, align 4, !dbg !2782
  %39 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2783
  %oc45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 24, !dbg !2784
  %arrayidx46 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc45, i64 0, i64 1, !dbg !2783
  %m4ac47 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx46, i32 0, i32 0, !dbg !2785
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac47, i32 0, i32 3, !dbg !2786
  store i32 %38, i32* %chan_config, align 4, !dbg !2787
  %40 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2788
  %oc48 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 24, !dbg !2790
  %arrayidx49 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc48, i64 0, i64 1, !dbg !2788
  %m4ac50 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx49, i32 0, i32 0, !dbg !2791
  %chan_config51 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac50, i32 0, i32 3, !dbg !2792
  %41 = load i32, i32* %chan_config51, align 4, !dbg !2792
  %tobool = icmp ne i32 %41, 0, !dbg !2788
  br i1 %tobool, label %if.then52, label %if.end68, !dbg !2793

if.then52:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i32* %ret53, metadata !2794, metadata !2062), !dbg !2796
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2797
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !2798
  %43 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2799
  %oc54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 24, !dbg !2800
  %arrayidx55 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc54, i64 0, i64 1, !dbg !2799
  %m4ac56 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx55, i32 0, i32 0, !dbg !2801
  %chan_config57 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac56, i32 0, i32 3, !dbg !2802
  %44 = load i32, i32* %chan_config57, align 4, !dbg !2802
  %call58 = call i32 @set_default_channel_config(%struct.AVCodecContext* %42, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 %44), !dbg !2803
  store i32 %call58, i32* %ret53, align 4, !dbg !2796
  %45 = load i32, i32* %ret53, align 4, !dbg !2804
  %tobool59 = icmp ne i32 %45, 0, !dbg !2804
  br i1 %tobool59, label %if.else63, label %if.then60, !dbg !2806

if.then60:                                        ; preds = %if.then52
  %46 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2807
  %arraydecay61 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !2808
  %47 = load i32, i32* %layout_map_tags, align 4, !dbg !2809
  %call62 = call i32 @output_configure(%struct.AACContext* %46, [3 x i8]* %arraydecay61, i32 %47, i32 3, i32 0), !dbg !2810
  br label %if.end67, !dbg !2810

if.else63:                                        ; preds = %if.then52
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2811
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 135, !dbg !2813
  %49 = load i32, i32* %err_recognition, align 8, !dbg !2813
  %and = and i32 %49, 8, !dbg !2814
  %tobool64 = icmp ne i32 %and, 0, !dbg !2814
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2815

if.then65:                                        ; preds = %if.else63
  store i32 -1094995529, i32* %retval, align 4, !dbg !2816
  br label %return, !dbg !2816

if.end66:                                         ; preds = %if.else63
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then60
  br label %if.end68, !dbg !2817

if.end68:                                         ; preds = %if.end67, %if.end44
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end14
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2818
  %channels70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 83, !dbg !2820
  %51 = load i32, i32* %channels70, align 4, !dbg !2820
  %cmp71 = icmp sgt i32 %51, 64, !dbg !2821
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !2822

if.then73:                                        ; preds = %if.end69
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2823
  %53 = bitcast %struct.AVCodecContext* %52 to i8*, !dbg !2823
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0)), !dbg !2825
  store i32 -1094995529, i32* %retval, align 4, !dbg !2826
  br label %return, !dbg !2826

if.end74:                                         ; preds = %if.end69
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2827
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 13, !dbg !2828
  %55 = load i32, i32* %flags, align 4, !dbg !2828
  %and75 = and i32 %55, 8388608, !dbg !2829
  %call76 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and75), !dbg !2830
  %56 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2831
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 17, !dbg !2832
  store %struct.AVFloatDSPContext* %call76, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2833
  %57 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2834
  %fdsp77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 17, !dbg !2836
  %58 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp77, align 8, !dbg !2836
  %tobool78 = icmp ne %struct.AVFloatDSPContext* %58, null, !dbg !2834
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !2837

if.then79:                                        ; preds = %if.end74
  store i32 -12, i32* %retval, align 4, !dbg !2838
  br label %return, !dbg !2838

if.end80:                                         ; preds = %if.end74
  %59 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2840
  %random_state = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 18, !dbg !2841
  store i32 523124044, i32* %random_state, align 32, !dbg !2842
  %60 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2843
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 10, !dbg !2844
  %call81 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct, i32 11, i32 1, double 0x3E60000000000000), !dbg !2845
  %61 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2846
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 12, !dbg !2847
  %call82 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_ld, i32 10, i32 1, double 0x3E70000000000000), !dbg !2848
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2849
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 11, !dbg !2850
  %call83 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_small, i32 8, i32 1, double 0x3E90000000000000), !dbg !2851
  %63 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2852
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 13, !dbg !2853
  %call84 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_ltp, i32 11, i32 0, double -6.553600e+04), !dbg !2854
  %64 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2855
  %mdct120 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 14, !dbg !2856
  %call85 = call i32 @ff_mdct15_init(%struct.MDCT15Context** %mdct120, i32 1, i32 3, double 0x3E91111120000000), !dbg !2857
  store i32 %call85, i32* %ret, align 4, !dbg !2858
  %65 = load i32, i32* %ret, align 4, !dbg !2859
  %cmp86 = icmp slt i32 %65, 0, !dbg !2861
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !2862

if.then88:                                        ; preds = %if.end80
  %66 = load i32, i32* %ret, align 4, !dbg !2863
  store i32 %66, i32* %retval, align 4, !dbg !2864
  br label %return, !dbg !2864

if.end89:                                         ; preds = %if.end80
  %67 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2865
  %mdct480 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %67, i32 0, i32 15, !dbg !2866
  %call90 = call i32 @ff_mdct15_init(%struct.MDCT15Context** %mdct480, i32 1, i32 5, double 0x3E71111120000000), !dbg !2867
  store i32 %call90, i32* %ret, align 4, !dbg !2868
  %68 = load i32, i32* %ret, align 4, !dbg !2869
  %cmp91 = icmp slt i32 %68, 0, !dbg !2871
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !2872

if.then93:                                        ; preds = %if.end89
  %69 = load i32, i32* %ret, align 4, !dbg !2873
  store i32 %69, i32* %retval, align 4, !dbg !2874
  br label %return, !dbg !2874

if.end94:                                         ; preds = %if.end89
  %70 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2875
  %mdct960 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %70, i32 0, i32 16, !dbg !2876
  %call95 = call i32 @ff_mdct15_init(%struct.MDCT15Context** %mdct960, i32 1, i32 6, double 0x3E61111120000000), !dbg !2877
  store i32 %call95, i32* %ret, align 4, !dbg !2878
  %71 = load i32, i32* %ret, align 4, !dbg !2879
  %cmp96 = icmp slt i32 %71, 0, !dbg !2881
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !2882

if.then98:                                        ; preds = %if.end94
  %72 = load i32, i32* %ret, align 4, !dbg !2883
  store i32 %72, i32* %retval, align 4, !dbg !2884
  br label %return, !dbg !2884

if.end99:                                         ; preds = %if.end94
  store i32 0, i32* %retval, align 4, !dbg !2885
  br label %return, !dbg !2885

return:                                           ; preds = %if.end99, %if.then98, %if.then93, %if.then88, %if.then79, %if.then73, %if.then65, %if.then13, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !2886
  ret i32 %73, !dbg !2886
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2887 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %buf_consumed = alloca i32, align 4
  %buf_offset = alloca i32, align 4
  %err = alloca i32, align 4
  %new_extradata_size = alloca i32, align 4
  %new_extradata = alloca i8*, align 8
  %jp_dualmono_size = alloca i32, align 4
  %jp_dualmono = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2888, metadata !2062), !dbg !2889
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2890, metadata !2062), !dbg !2891
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2892, metadata !2062), !dbg !2893
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2894, metadata !2062), !dbg !2895
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !2896, metadata !2062), !dbg !2897
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2898
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2899
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2899
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !2898
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !2897
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2900, metadata !2062), !dbg !2901
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2902
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 3, !dbg !2903
  %4 = load i8*, i8** %data1, align 8, !dbg !2903
  store i8* %4, i8** %buf, align 8, !dbg !2901
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2904, metadata !2062), !dbg !2905
  %5 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2906
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !2907
  %6 = load i32, i32* %size, align 8, !dbg !2907
  store i32 %6, i32* %buf_size, align 4, !dbg !2905
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2908, metadata !2062), !dbg !2909
  call void @llvm.dbg.declare(metadata i32* %buf_consumed, metadata !2910, metadata !2062), !dbg !2911
  call void @llvm.dbg.declare(metadata i32* %buf_offset, metadata !2912, metadata !2062), !dbg !2913
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2914, metadata !2062), !dbg !2915
  call void @llvm.dbg.declare(metadata i32* %new_extradata_size, metadata !2916, metadata !2062), !dbg !2917
  call void @llvm.dbg.declare(metadata i8** %new_extradata, metadata !2918, metadata !2062), !dbg !2919
  %7 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2920
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %7, i32 1, i32* %new_extradata_size), !dbg !2921
  store i8* %call, i8** %new_extradata, align 8, !dbg !2919
  call void @llvm.dbg.declare(metadata i32* %jp_dualmono_size, metadata !2922, metadata !2062), !dbg !2923
  call void @llvm.dbg.declare(metadata i8** %jp_dualmono, metadata !2924, metadata !2062), !dbg !2925
  %8 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2926
  %call2 = call i8* @av_packet_get_side_data(%struct.AVPacket* %8, i32 12, i32* %jp_dualmono_size), !dbg !2927
  store i8* %call2, i8** %jp_dualmono, align 8, !dbg !2925
  %9 = load i8*, i8** %new_extradata, align 8, !dbg !2928
  %tobool = icmp ne i8* %9, null, !dbg !2928
  br i1 %tobool, label %if.then, label %if.end9, !dbg !2930

if.then:                                          ; preds = %entry
  %10 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2931
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 24, !dbg !2933
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2931
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !2934
  store i32 0, i32* %status, align 8, !dbg !2935
  %11 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2936
  %12 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2937
  %avctx3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 1, !dbg !2938
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !2938
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2939
  %oc4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 24, !dbg !2940
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc4, i64 0, i64 1, !dbg !2939
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !2941
  %15 = load i8*, i8** %new_extradata, align 8, !dbg !2942
  %16 = load i32, i32* %new_extradata_size, align 4, !dbg !2943
  %conv = sext i32 %16 to i64, !dbg !2943
  %mul = mul nsw i64 %conv, 8, !dbg !2944
  %call6 = call i32 @decode_audio_specific_config(%struct.AACContext* %11, %struct.AVCodecContext* %13, %struct.MPEG4AudioConfig* %m4ac, i8* %15, i64 %mul, i32 1), !dbg !2945
  store i32 %call6, i32* %err, align 4, !dbg !2946
  %17 = load i32, i32* %err, align 4, !dbg !2947
  %cmp = icmp slt i32 %17, 0, !dbg !2949
  br i1 %cmp, label %if.then8, label %if.end, !dbg !2950

if.then8:                                         ; preds = %if.then
  %18 = load i32, i32* %err, align 4, !dbg !2951
  store i32 %18, i32* %retval, align 4, !dbg !2953
  br label %return, !dbg !2953

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !2954

if.end9:                                          ; preds = %if.end, %entry
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2955
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 21, !dbg !2956
  store i32 0, i32* %dmono_mode, align 4, !dbg !2957
  %20 = load i8*, i8** %jp_dualmono, align 8, !dbg !2958
  %tobool10 = icmp ne i8* %20, null, !dbg !2958
  br i1 %tobool10, label %land.lhs.true, label %if.end16, !dbg !2960

land.lhs.true:                                    ; preds = %if.end9
  %21 = load i32, i32* %jp_dualmono_size, align 4, !dbg !2961
  %cmp11 = icmp sgt i32 %21, 0, !dbg !2963
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !2964

if.then13:                                        ; preds = %land.lhs.true
  %22 = load i8*, i8** %jp_dualmono, align 8, !dbg !2965
  %23 = load i8, i8* %22, align 1, !dbg !2966
  %conv14 = zext i8 %23 to i32, !dbg !2966
  %add = add nsw i32 1, %conv14, !dbg !2967
  %24 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2968
  %dmono_mode15 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 21, !dbg !2969
  store i32 %add, i32* %dmono_mode15, align 4, !dbg !2970
  br label %if.end16, !dbg !2968

if.end16:                                         ; preds = %if.then13, %land.lhs.true, %if.end9
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2971
  %force_dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 20, !dbg !2973
  %26 = load i32, i32* %force_dmono_mode, align 8, !dbg !2973
  %cmp17 = icmp sge i32 %26, 0, !dbg !2974
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !2975

if.then19:                                        ; preds = %if.end16
  %27 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2976
  %force_dmono_mode20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 20, !dbg !2977
  %28 = load i32, i32* %force_dmono_mode20, align 8, !dbg !2977
  %29 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2978
  %dmono_mode21 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 21, !dbg !2979
  store i32 %28, i32* %dmono_mode21, align 4, !dbg !2980
  br label %if.end22, !dbg !2978

if.end22:                                         ; preds = %if.then19, %if.end16
  %30 = load i32, i32* %buf_size, align 4, !dbg !2981
  %cmp23 = icmp sle i32 268435455, %30, !dbg !2983
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2984

if.then25:                                        ; preds = %if.end22
  store i32 -1094995529, i32* %retval, align 4, !dbg !2985
  br label %return, !dbg !2985

if.end26:                                         ; preds = %if.end22
  %31 = load i8*, i8** %buf, align 8, !dbg !2986
  %32 = load i32, i32* %buf_size, align 4, !dbg !2988
  %call27 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %31, i32 %32), !dbg !2989
  store i32 %call27, i32* %err, align 4, !dbg !2990
  %cmp28 = icmp slt i32 %call27, 0, !dbg !2991
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2992

if.then30:                                        ; preds = %if.end26
  %33 = load i32, i32* %err, align 4, !dbg !2993
  store i32 %33, i32* %retval, align 4, !dbg !2994
  br label %return, !dbg !2994

if.end31:                                         ; preds = %if.end26
  %34 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !2995
  %oc32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 24, !dbg !2996
  %arrayidx33 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc32, i64 0, i64 1, !dbg !2995
  %m4ac34 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx33, i32 0, i32 0, !dbg !2997
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac34, i32 0, i32 0, !dbg !2998
  %35 = load i32, i32* %object_type, align 8, !dbg !2998
  switch i32 %35, label %sw.default [
    i32 17, label %sw.bb
    i32 19, label %sw.bb
    i32 23, label %sw.bb
    i32 39, label %sw.bb
  ], !dbg !2999

sw.bb:                                            ; preds = %if.end31, %if.end31, %if.end31, %if.end31
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3000
  %37 = load i8*, i8** %data.addr, align 8, !dbg !3002
  %38 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3003
  %call35 = call i32 @aac_decode_er_frame(%struct.AVCodecContext* %36, i8* %37, i32* %38, %struct.GetBitContext* %gb), !dbg !3004
  store i32 %call35, i32* %err, align 4, !dbg !3005
  br label %sw.epilog, !dbg !3006

sw.default:                                       ; preds = %if.end31
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3007
  %40 = load i8*, i8** %data.addr, align 8, !dbg !3008
  %41 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3009
  %42 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3010
  %call36 = call i32 @aac_decode_frame_int(%struct.AVCodecContext* %39, i8* %40, i32* %41, %struct.GetBitContext* %gb, %struct.AVPacket* %42), !dbg !3011
  store i32 %call36, i32* %err, align 4, !dbg !3012
  br label %sw.epilog, !dbg !3013

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %43 = load i32, i32* %err, align 4, !dbg !3014
  %cmp37 = icmp slt i32 %43, 0, !dbg !3016
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3017

if.then39:                                        ; preds = %sw.epilog
  %44 = load i32, i32* %err, align 4, !dbg !3018
  store i32 %44, i32* %retval, align 4, !dbg !3019
  br label %return, !dbg !3019

if.end40:                                         ; preds = %sw.epilog
  %call41 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3020
  %add42 = add nsw i32 %call41, 7, !dbg !3021
  %shr = ashr i32 %add42, 3, !dbg !3022
  store i32 %shr, i32* %buf_consumed, align 4, !dbg !3023
  %45 = load i32, i32* %buf_consumed, align 4, !dbg !3024
  store i32 %45, i32* %buf_offset, align 4, !dbg !3026
  br label %for.cond, !dbg !3027

for.cond:                                         ; preds = %for.inc, %if.end40
  %46 = load i32, i32* %buf_offset, align 4, !dbg !3028
  %47 = load i32, i32* %buf_size, align 4, !dbg !3031
  %cmp43 = icmp slt i32 %46, %47, !dbg !3032
  br i1 %cmp43, label %for.body, label %for.end, !dbg !3033

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %buf_offset, align 4, !dbg !3034
  %idxprom = sext i32 %48 to i64, !dbg !3036
  %49 = load i8*, i8** %buf, align 8, !dbg !3036
  %arrayidx45 = getelementptr inbounds i8, i8* %49, i64 %idxprom, !dbg !3036
  %50 = load i8, i8* %arrayidx45, align 1, !dbg !3036
  %tobool46 = icmp ne i8 %50, 0, !dbg !3036
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !3037

if.then47:                                        ; preds = %for.body
  br label %for.end, !dbg !3038

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !3039

for.inc:                                          ; preds = %if.end48
  %51 = load i32, i32* %buf_offset, align 4, !dbg !3041
  %inc = add nsw i32 %51, 1, !dbg !3041
  store i32 %inc, i32* %buf_offset, align 4, !dbg !3041
  br label %for.cond, !dbg !3043, !llvm.loop !3044

for.end:                                          ; preds = %if.then47, %for.cond
  %52 = load i32, i32* %buf_size, align 4, !dbg !3046
  %53 = load i32, i32* %buf_offset, align 4, !dbg !3047
  %cmp49 = icmp sgt i32 %52, %53, !dbg !3048
  br i1 %cmp49, label %cond.true, label %cond.false, !dbg !3046

cond.true:                                        ; preds = %for.end
  %54 = load i32, i32* %buf_consumed, align 4, !dbg !3049
  br label %cond.end, !dbg !3051

cond.false:                                       ; preds = %for.end
  %55 = load i32, i32* %buf_size, align 4, !dbg !3052
  br label %cond.end, !dbg !3054

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %54, %cond.true ], [ %55, %cond.false ], !dbg !3055
  store i32 %cond, i32* %retval, align 4, !dbg !3057
  br label %return, !dbg !3057

return:                                           ; preds = %cond.end, %if.then39, %if.then30, %if.then25, %if.then8
  %56 = load i32, i32* %retval, align 4, !dbg !3058
  ret i32 %56, !dbg !3058
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !3059 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3060, metadata !2062), !dbg !3061
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !3062, metadata !2062), !dbg !3063
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3064
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3065
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3065
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !3064
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !3063
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3066, metadata !2062), !dbg !3067
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3068, metadata !2062), !dbg !3069
  store i32 0, i32* %i, align 4, !dbg !3070
  br label %for.cond, !dbg !3072

for.cond:                                         ; preds = %for.inc16, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3073
  %cmp = icmp slt i32 %3, 16, !dbg !3076
  br i1 %cmp, label %for.body, label %for.end18, !dbg !3077

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %type, align 4, !dbg !3078
  br label %for.cond1, !dbg !3081

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %type, align 4, !dbg !3082
  %cmp2 = icmp slt i32 %4, 4, !dbg !3085
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3086

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %i, align 4, !dbg !3087
  %idxprom = sext i32 %5 to i64, !dbg !3090
  %6 = load i32, i32* %type, align 4, !dbg !3091
  %idxprom4 = sext i32 %6 to i64, !dbg !3090
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3090
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !3092
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom4, !dbg !3090
  %arrayidx5 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !3090
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx5, align 8, !dbg !3090
  %tobool = icmp ne %struct.ChannelElement* %8, null, !dbg !3090
  br i1 %tobool, label %if.then, label %if.end, !dbg !3093

if.then:                                          ; preds = %for.body3
  %9 = load i32, i32* %i, align 4, !dbg !3094
  %idxprom6 = sext i32 %9 to i64, !dbg !3095
  %10 = load i32, i32* %type, align 4, !dbg !3096
  %idxprom7 = sext i32 %10 to i64, !dbg !3095
  %11 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3095
  %che8 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 5, !dbg !3097
  %arrayidx9 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che8, i64 0, i64 %idxprom7, !dbg !3095
  %arrayidx10 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx9, i64 0, i64 %idxprom6, !dbg !3095
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx10, align 8, !dbg !3095
  %sbr = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 10, !dbg !3098
  call void @ff_aac_sbr_ctx_close(%struct.SpectralBandReplication* %sbr), !dbg !3099
  br label %if.end, !dbg !3099

if.end:                                           ; preds = %if.then, %for.body3
  %13 = load i32, i32* %i, align 4, !dbg !3100
  %idxprom11 = sext i32 %13 to i64, !dbg !3101
  %14 = load i32, i32* %type, align 4, !dbg !3102
  %idxprom12 = sext i32 %14 to i64, !dbg !3101
  %15 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3101
  %che13 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 5, !dbg !3103
  %arrayidx14 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che13, i64 0, i64 %idxprom12, !dbg !3101
  %arrayidx15 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !3101
  %16 = bitcast %struct.ChannelElement** %arrayidx15 to i8*, !dbg !3104
  call void @av_freep(i8* %16), !dbg !3105
  br label %for.inc, !dbg !3106

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %type, align 4, !dbg !3107
  %inc = add nsw i32 %17, 1, !dbg !3107
  store i32 %inc, i32* %type, align 4, !dbg !3107
  br label %for.cond1, !dbg !3109, !llvm.loop !3110

for.end:                                          ; preds = %for.cond1
  br label %for.inc16, !dbg !3112

for.inc16:                                        ; preds = %for.end
  %18 = load i32, i32* %i, align 4, !dbg !3113
  %inc17 = add nsw i32 %18, 1, !dbg !3113
  store i32 %inc17, i32* %i, align 4, !dbg !3113
  br label %for.cond, !dbg !3115, !llvm.loop !3116

for.end18:                                        ; preds = %for.cond
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3118
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 10, !dbg !3119
  call void @ff_mdct_end(%struct.FFTContext* %mdct), !dbg !3120
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3121
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 11, !dbg !3122
  call void @ff_mdct_end(%struct.FFTContext* %mdct_small), !dbg !3123
  %21 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3124
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 12, !dbg !3125
  call void @ff_mdct_end(%struct.FFTContext* %mdct_ld), !dbg !3126
  %22 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3127
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 13, !dbg !3128
  call void @ff_mdct_end(%struct.FFTContext* %mdct_ltp), !dbg !3129
  %23 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3130
  %mdct120 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 14, !dbg !3131
  call void @ff_mdct15_uninit(%struct.MDCT15Context** %mdct120), !dbg !3132
  %24 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3133
  %mdct480 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 15, !dbg !3134
  call void @ff_mdct15_uninit(%struct.MDCT15Context** %mdct480), !dbg !3135
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3136
  %mdct960 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 16, !dbg !3137
  call void @ff_mdct15_uninit(%struct.MDCT15Context** %mdct960), !dbg !3138
  %26 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3139
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 17, !dbg !3140
  %27 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !3141
  call void @av_freep(i8* %27), !dbg !3142
  ret i32 0, !dbg !3143
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !3144 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %che = alloca %struct.ChannelElement*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3145, metadata !2062), !dbg !3146
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !3147, metadata !2062), !dbg !3148
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3149
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3150
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3150
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !3149
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !3148
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3151, metadata !2062), !dbg !3152
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3153, metadata !2062), !dbg !3154
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3155, metadata !2062), !dbg !3156
  store i32 3, i32* %type, align 4, !dbg !3157
  br label %for.cond, !dbg !3159

for.cond:                                         ; preds = %for.inc15, %entry
  %3 = load i32, i32* %type, align 4, !dbg !3160
  %cmp = icmp sge i32 %3, 0, !dbg !3163
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3164

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3165
  br label %for.cond1, !dbg !3168

for.cond1:                                        ; preds = %for.inc12, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3169
  %cmp2 = icmp slt i32 %4, 16, !dbg !3172
  br i1 %cmp2, label %for.body3, label %for.end14, !dbg !3173

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !3174, metadata !2062), !dbg !3176
  %5 = load i32, i32* %i, align 4, !dbg !3177
  %idxprom = sext i32 %5 to i64, !dbg !3178
  %6 = load i32, i32* %type, align 4, !dbg !3179
  %idxprom4 = sext i32 %6 to i64, !dbg !3178
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !3178
  %che5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !3180
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che5, i64 0, i64 %idxprom4, !dbg !3178
  %arrayidx6 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !3178
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx6, align 8, !dbg !3178
  store %struct.ChannelElement* %8, %struct.ChannelElement** %che, align 8, !dbg !3176
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !3181
  %tobool = icmp ne %struct.ChannelElement* %9, null, !dbg !3181
  br i1 %tobool, label %if.then, label %if.end, !dbg !3183

if.then:                                          ; preds = %for.body3
  store i32 0, i32* %j, align 4, !dbg !3184
  br label %for.cond7, !dbg !3187

for.cond7:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %j, align 4, !dbg !3188
  %cmp8 = icmp sle i32 %10, 1, !dbg !3191
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !3192

for.body9:                                        ; preds = %for.cond7
  %11 = load i32, i32* %j, align 4, !dbg !3193
  %idxprom10 = sext i32 %11 to i64, !dbg !3195
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !3195
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !3196
  %arrayidx11 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 %idxprom10, !dbg !3195
  %saved = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx11, i32 0, i32 15, !dbg !3197
  %arraydecay = getelementptr inbounds [1536 x float], [1536 x float]* %saved, i32 0, i32 0, !dbg !3198
  %13 = bitcast float* %arraydecay to i8*, !dbg !3198
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 6144, i32 32, i1 false), !dbg !3198
  br label %for.inc, !dbg !3199

for.inc:                                          ; preds = %for.body9
  %14 = load i32, i32* %j, align 4, !dbg !3200
  %inc = add nsw i32 %14, 1, !dbg !3200
  store i32 %inc, i32* %j, align 4, !dbg !3200
  br label %for.cond7, !dbg !3202, !llvm.loop !3203

for.end:                                          ; preds = %for.cond7
  br label %if.end, !dbg !3205

if.end:                                           ; preds = %for.end, %for.body3
  br label %for.inc12, !dbg !3206

for.inc12:                                        ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !3207
  %inc13 = add nsw i32 %15, 1, !dbg !3207
  store i32 %inc13, i32* %i, align 4, !dbg !3207
  br label %for.cond1, !dbg !3209, !llvm.loop !3210

for.end14:                                        ; preds = %for.cond1
  br label %for.inc15, !dbg !3212

for.inc15:                                        ; preds = %for.end14
  %16 = load i32, i32* %type, align 4, !dbg !3213
  %dec = add nsw i32 %16, -1, !dbg !3213
  store i32 %dec, i32* %type, align 4, !dbg !3213
  br label %for.cond, !dbg !3215, !llvm.loop !3216

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3218
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @latm_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !3219 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %latmctx = alloca %struct.LATMContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3220, metadata !2062), !dbg !3221
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %latmctx, metadata !3222, metadata !2062), !dbg !3231
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3232
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3233
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3233
  %2 = bitcast i8* %1 to %struct.LATMContext*, !dbg !3232
  store %struct.LATMContext* %2, %struct.LATMContext** %latmctx, align 8, !dbg !3231
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3234, metadata !2062), !dbg !3235
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3236
  %call = call i32 @aac_decode_init(%struct.AVCodecContext* %3), !dbg !3237
  store i32 %call, i32* %ret, align 4, !dbg !3235
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3238
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 16, !dbg !3240
  %5 = load i32, i32* %extradata_size, align 8, !dbg !3240
  %cmp = icmp sgt i32 %5, 0, !dbg !3241
  br i1 %cmp, label %if.then, label %if.end, !dbg !3242

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !3243
  %tobool = icmp ne i32 %6, 0, !dbg !3244
  %lnot = xor i1 %tobool, true, !dbg !3244
  %lnot.ext = zext i1 %lnot to i32, !dbg !3244
  %7 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3245
  %initialized = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %7, i32 0, i32 1, !dbg !3246
  store i32 %lnot.ext, i32* %initialized, align 32, !dbg !3247
  br label %if.end, !dbg !3245

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !3248
  ret i32 %8, !dbg !3249
}

; Function Attrs: nounwind uwtable
define internal i32 @latm_decode_frame(%struct.AVCodecContext* %avctx, i8* %out, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !3250 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %out.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %latmctx = alloca %struct.LATMContext*, align 8
  %muxlength = alloca i32, align 4
  %err = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3251, metadata !2062), !dbg !3252
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !3253, metadata !2062), !dbg !3254
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !3255, metadata !2062), !dbg !3256
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3257, metadata !2062), !dbg !3258
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %latmctx, metadata !3259, metadata !2062), !dbg !3260
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3261
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3262
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3262
  %2 = bitcast i8* %1 to %struct.LATMContext*, !dbg !3261
  store %struct.LATMContext* %2, %struct.LATMContext** %latmctx, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata i32* %muxlength, metadata !3263, metadata !2062), !dbg !3264
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3265, metadata !2062), !dbg !3266
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3267, metadata !2062), !dbg !3268
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3269
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 3, !dbg !3271
  %4 = load i8*, i8** %data, align 8, !dbg !3271
  %5 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3272
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !3273
  %6 = load i32, i32* %size, align 8, !dbg !3273
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !3274
  store i32 %call, i32* %err, align 4, !dbg !3275
  %cmp = icmp slt i32 %call, 0, !dbg !3276
  br i1 %cmp, label %if.then, label %if.end, !dbg !3277

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !3278
  store i32 %7, i32* %retval, align 4, !dbg !3279
  br label %return, !dbg !3279

if.end:                                           ; preds = %entry
  %call1 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 11), !dbg !3280
  %cmp2 = icmp ne i32 %call1, 695, !dbg !3282
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3283

if.then3:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3284
  br label %return, !dbg !3284

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 13), !dbg !3285
  %add = add i32 %call5, 3, !dbg !3286
  store i32 %add, i32* %muxlength, align 4, !dbg !3287
  %8 = load i32, i32* %muxlength, align 4, !dbg !3288
  %9 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3290
  %size6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %9, i32 0, i32 4, !dbg !3291
  %10 = load i32, i32* %size6, align 8, !dbg !3291
  %cmp7 = icmp sgt i32 %8, %10, !dbg !3292
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3293

if.then8:                                         ; preds = %if.end4
  store i32 -1094995529, i32* %retval, align 4, !dbg !3294
  br label %return, !dbg !3294

if.end9:                                          ; preds = %if.end4
  %11 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3295
  %call10 = call i32 @read_audio_mux_element(%struct.LATMContext* %11, %struct.GetBitContext* %gb), !dbg !3297
  store i32 %call10, i32* %err, align 4, !dbg !3298
  %tobool = icmp ne i32 %call10, 0, !dbg !3298
  br i1 %tobool, label %if.then11, label %if.end14, !dbg !3299

if.then11:                                        ; preds = %if.end9
  %12 = load i32, i32* %err, align 4, !dbg !3300
  %cmp12 = icmp slt i32 %12, 0, !dbg !3301
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !3302

cond.true:                                        ; preds = %if.then11
  %13 = load i32, i32* %err, align 4, !dbg !3303
  br label %cond.end, !dbg !3305

cond.false:                                       ; preds = %if.then11
  %14 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3306
  %size13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 4, !dbg !3308
  %15 = load i32, i32* %size13, align 8, !dbg !3308
  br label %cond.end, !dbg !3309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %15, %cond.false ], !dbg !3310
  store i32 %cond, i32* %retval, align 4, !dbg !3312
  br label %return, !dbg !3312

if.end14:                                         ; preds = %if.end9
  %16 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3313
  %initialized = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %16, i32 0, i32 1, !dbg !3315
  %17 = load i32, i32* %initialized, align 32, !dbg !3315
  %tobool15 = icmp ne i32 %17, 0, !dbg !3313
  br i1 %tobool15, label %if.end32, label %if.then16, !dbg !3316

if.then16:                                        ; preds = %if.end14
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3317
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 15, !dbg !3320
  %19 = load i8*, i8** %extradata, align 8, !dbg !3320
  %tobool17 = icmp ne i8* %19, null, !dbg !3317
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !3321

if.then18:                                        ; preds = %if.then16
  %20 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3322
  store i32 0, i32* %20, align 4, !dbg !3324
  %21 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3325
  %size19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %21, i32 0, i32 4, !dbg !3326
  %22 = load i32, i32* %size19, align 8, !dbg !3326
  store i32 %22, i32* %retval, align 4, !dbg !3327
  br label %return, !dbg !3327

if.else:                                          ; preds = %if.then16
  %23 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3328
  %aac_ctx = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %23, i32 0, i32 0, !dbg !3330
  %call20 = call i32 @push_output_configuration(%struct.AACContext* %aac_ctx), !dbg !3331
  %24 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3332
  %aac_ctx21 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %24, i32 0, i32 0, !dbg !3334
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3335
  %26 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3336
  %aac_ctx22 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %26, i32 0, i32 0, !dbg !3337
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx22, i32 0, i32 24, !dbg !3338
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !3336
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !3339
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3340
  %extradata23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 15, !dbg !3341
  %28 = load i8*, i8** %extradata23, align 8, !dbg !3341
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3342
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 16, !dbg !3343
  %30 = load i32, i32* %extradata_size, align 8, !dbg !3343
  %conv = sext i32 %30 to i64, !dbg !3342
  %mul = mul nsw i64 %conv, 8, !dbg !3344
  %call24 = call i32 @decode_audio_specific_config(%struct.AACContext* %aac_ctx21, %struct.AVCodecContext* %25, %struct.MPEG4AudioConfig* %m4ac, i8* %28, i64 %mul, i32 1), !dbg !3345
  store i32 %call24, i32* %err, align 4, !dbg !3346
  %cmp25 = icmp slt i32 %call24, 0, !dbg !3347
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !3348

if.then27:                                        ; preds = %if.else
  %31 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3349
  %aac_ctx28 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %31, i32 0, i32 0, !dbg !3351
  call void @pop_output_configuration(%struct.AACContext* %aac_ctx28), !dbg !3352
  %32 = load i32, i32* %err, align 4, !dbg !3353
  store i32 %32, i32* %retval, align 4, !dbg !3354
  br label %return, !dbg !3354

if.end29:                                         ; preds = %if.else
  %33 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3355
  %initialized30 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %33, i32 0, i32 1, !dbg !3356
  store i32 1, i32* %initialized30, align 32, !dbg !3357
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %if.end32, !dbg !3358

if.end32:                                         ; preds = %if.end31, %if.end14
  %call33 = call i32 @show_bits(%struct.GetBitContext* %gb, i32 12), !dbg !3359
  %cmp34 = icmp eq i32 %call33, 4095, !dbg !3361
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !3362

if.then36:                                        ; preds = %if.end32
  %34 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3363
  %aac_ctx37 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %34, i32 0, i32 0, !dbg !3365
  %avctx38 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx37, i32 0, i32 1, !dbg !3366
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx38, align 8, !dbg !3366
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !3363
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i32 0, i32 0)), !dbg !3367
  store i32 -1094995529, i32* %retval, align 4, !dbg !3368
  br label %return, !dbg !3368

if.end39:                                         ; preds = %if.end32
  %37 = load %struct.LATMContext*, %struct.LATMContext** %latmctx, align 8, !dbg !3369
  %aac_ctx40 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %37, i32 0, i32 0, !dbg !3370
  %oc41 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx40, i32 0, i32 24, !dbg !3371
  %arrayidx42 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc41, i64 0, i64 1, !dbg !3369
  %m4ac43 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx42, i32 0, i32 0, !dbg !3372
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac43, i32 0, i32 0, !dbg !3373
  %38 = load i32, i32* %object_type, align 8, !dbg !3373
  switch i32 %38, label %sw.default [
    i32 17, label %sw.bb
    i32 19, label %sw.bb
    i32 23, label %sw.bb
    i32 39, label %sw.bb
  ], !dbg !3374

sw.bb:                                            ; preds = %if.end39, %if.end39, %if.end39, %if.end39
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3375
  %40 = load i8*, i8** %out.addr, align 8, !dbg !3377
  %41 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3378
  %call44 = call i32 @aac_decode_er_frame(%struct.AVCodecContext* %39, i8* %40, i32* %41, %struct.GetBitContext* %gb), !dbg !3379
  store i32 %call44, i32* %err, align 4, !dbg !3380
  br label %sw.epilog, !dbg !3381

sw.default:                                       ; preds = %if.end39
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3382
  %43 = load i8*, i8** %out.addr, align 8, !dbg !3383
  %44 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3384
  %45 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3385
  %call45 = call i32 @aac_decode_frame_int(%struct.AVCodecContext* %42, i8* %43, i32* %44, %struct.GetBitContext* %gb, %struct.AVPacket* %45), !dbg !3386
  store i32 %call45, i32* %err, align 4, !dbg !3387
  br label %sw.epilog, !dbg !3388

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %46 = load i32, i32* %err, align 4, !dbg !3389
  %cmp46 = icmp slt i32 %46, 0, !dbg !3391
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !3392

if.then48:                                        ; preds = %sw.epilog
  %47 = load i32, i32* %err, align 4, !dbg !3393
  store i32 %47, i32* %retval, align 4, !dbg !3394
  br label %return, !dbg !3394

if.end49:                                         ; preds = %sw.epilog
  %48 = load i32, i32* %muxlength, align 4, !dbg !3395
  store i32 %48, i32* %retval, align 4, !dbg !3396
  br label %return, !dbg !3396

return:                                           ; preds = %if.end49, %if.then48, %if.then36, %if.then27, %if.then18, %cond.end, %if.then8, %if.then3, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !3397
  ret i32 %49, !dbg !3397
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare i32 @pthread_once(i32*, void ()*) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @aac_static_table_init() #0 !dbg !1814 {
entry:
  br label %do.body, !dbg !3398, !llvm.loop !3399

do.body:                                          ; preds = %entry
  store [2 x i16]* getelementptr inbounds ([304 x [2 x i16]], [304 x [2 x i16]]* @aac_static_table_init.table, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0, i32 1), align 8, !dbg !3400
  store i32 304, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0, i32 3), align 4, !dbg !3403
  %0 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 0), align 16, !dbg !3404
  %conv = zext i16 %0 to i32, !dbg !3404
  %1 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 0), align 16, !dbg !3405
  %2 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 0), align 16, !dbg !3406
  %3 = bitcast i16* %2 to i8*, !dbg !3406
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 0), i32 8, i32 %conv, i8* %1, i32 1, i32 1, i8* %3, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3407
  br label %do.end, !dbg !3408

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !3409, !llvm.loop !3410

do.body1:                                         ; preds = %do.end
  store [2 x i16]* getelementptr inbounds ([270 x [2 x i16]], [270 x [2 x i16]]* @aac_static_table_init.table.17, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1, i32 1), align 8, !dbg !3411
  store i32 270, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1, i32 3), align 4, !dbg !3414
  %4 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 1), align 2, !dbg !3415
  %conv2 = zext i16 %4 to i32, !dbg !3415
  %5 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 1), align 8, !dbg !3416
  %6 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 1), align 8, !dbg !3417
  %7 = bitcast i16* %6 to i8*, !dbg !3417
  %call3 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 1), i32 8, i32 %conv2, i8* %5, i32 1, i32 1, i8* %7, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3418
  br label %do.end4, !dbg !3419

do.end4:                                          ; preds = %do.body1
  br label %do.body5, !dbg !3420, !llvm.loop !3421

do.body5:                                         ; preds = %do.end4
  store [2 x i16]* getelementptr inbounds ([550 x [2 x i16]], [550 x [2 x i16]]* @aac_static_table_init.table.18, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2, i32 1), align 8, !dbg !3422
  store i32 550, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2, i32 3), align 4, !dbg !3425
  %8 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 2), align 4, !dbg !3426
  %conv6 = zext i16 %8 to i32, !dbg !3426
  %9 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 2), align 16, !dbg !3427
  %10 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 2), align 16, !dbg !3428
  %11 = bitcast i16* %10 to i8*, !dbg !3428
  %call7 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 2), i32 8, i32 %conv6, i8* %9, i32 1, i32 1, i8* %11, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3429
  br label %do.end8, !dbg !3430

do.end8:                                          ; preds = %do.body5
  br label %do.body9, !dbg !3431, !llvm.loop !3432

do.body9:                                         ; preds = %do.end8
  store [2 x i16]* getelementptr inbounds ([300 x [2 x i16]], [300 x [2 x i16]]* @aac_static_table_init.table.19, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3, i32 1), align 8, !dbg !3433
  store i32 300, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3, i32 3), align 4, !dbg !3436
  %12 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 3), align 2, !dbg !3437
  %conv10 = zext i16 %12 to i32, !dbg !3437
  %13 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 3), align 8, !dbg !3438
  %14 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 3), align 8, !dbg !3439
  %15 = bitcast i16* %14 to i8*, !dbg !3439
  %call11 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 3), i32 8, i32 %conv10, i8* %13, i32 1, i32 1, i8* %15, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3440
  br label %do.end12, !dbg !3441

do.end12:                                         ; preds = %do.body9
  br label %do.body13, !dbg !3442, !llvm.loop !3443

do.body13:                                        ; preds = %do.end12
  store [2 x i16]* getelementptr inbounds ([328 x [2 x i16]], [328 x [2 x i16]]* @aac_static_table_init.table.20, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4, i32 1), align 8, !dbg !3444
  store i32 328, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4, i32 3), align 4, !dbg !3447
  %16 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 4), align 8, !dbg !3448
  %conv14 = zext i16 %16 to i32, !dbg !3448
  %17 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 4), align 16, !dbg !3449
  %18 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 4), align 16, !dbg !3450
  %19 = bitcast i16* %18 to i8*, !dbg !3450
  %call15 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 4), i32 8, i32 %conv14, i8* %17, i32 1, i32 1, i8* %19, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3451
  br label %do.end16, !dbg !3452

do.end16:                                         ; preds = %do.body13
  br label %do.body17, !dbg !3453, !llvm.loop !3454

do.body17:                                        ; preds = %do.end16
  store [2 x i16]* getelementptr inbounds ([294 x [2 x i16]], [294 x [2 x i16]]* @aac_static_table_init.table.21, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5, i32 1), align 8, !dbg !3455
  store i32 294, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5, i32 3), align 4, !dbg !3458
  %20 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 5), align 2, !dbg !3459
  %conv18 = zext i16 %20 to i32, !dbg !3459
  %21 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 5), align 8, !dbg !3460
  %22 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 5), align 8, !dbg !3461
  %23 = bitcast i16* %22 to i8*, !dbg !3461
  %call19 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 5), i32 8, i32 %conv18, i8* %21, i32 1, i32 1, i8* %23, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3462
  br label %do.end20, !dbg !3463

do.end20:                                         ; preds = %do.body17
  br label %do.body21, !dbg !3464, !llvm.loop !3465

do.body21:                                        ; preds = %do.end20
  store [2 x i16]* getelementptr inbounds ([306 x [2 x i16]], [306 x [2 x i16]]* @aac_static_table_init.table.22, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6, i32 1), align 8, !dbg !3466
  store i32 306, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6, i32 3), align 4, !dbg !3469
  %24 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 6), align 4, !dbg !3470
  %conv22 = zext i16 %24 to i32, !dbg !3470
  %25 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 6), align 16, !dbg !3471
  %26 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 6), align 16, !dbg !3472
  %27 = bitcast i16* %26 to i8*, !dbg !3472
  %call23 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 6), i32 8, i32 %conv22, i8* %25, i32 1, i32 1, i8* %27, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3473
  br label %do.end24, !dbg !3474

do.end24:                                         ; preds = %do.body21
  br label %do.body25, !dbg !3475, !llvm.loop !3476

do.body25:                                        ; preds = %do.end24
  store [2 x i16]* getelementptr inbounds ([268 x [2 x i16]], [268 x [2 x i16]]* @aac_static_table_init.table.23, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7, i32 1), align 8, !dbg !3477
  store i32 268, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7, i32 3), align 4, !dbg !3480
  %28 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 7), align 2, !dbg !3481
  %conv26 = zext i16 %28 to i32, !dbg !3481
  %29 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 7), align 8, !dbg !3482
  %30 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 7), align 8, !dbg !3483
  %31 = bitcast i16* %30 to i8*, !dbg !3483
  %call27 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 7), i32 8, i32 %conv26, i8* %29, i32 1, i32 1, i8* %31, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3484
  br label %do.end28, !dbg !3485

do.end28:                                         ; preds = %do.body25
  br label %do.body29, !dbg !3486, !llvm.loop !3487

do.body29:                                        ; preds = %do.end28
  store [2 x i16]* getelementptr inbounds ([510 x [2 x i16]], [510 x [2 x i16]]* @aac_static_table_init.table.24, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8, i32 1), align 8, !dbg !3488
  store i32 510, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8, i32 3), align 4, !dbg !3491
  %32 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 8), align 16, !dbg !3492
  %conv30 = zext i16 %32 to i32, !dbg !3492
  %33 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 8), align 16, !dbg !3493
  %34 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 8), align 16, !dbg !3494
  %35 = bitcast i16* %34 to i8*, !dbg !3494
  %call31 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 8), i32 8, i32 %conv30, i8* %33, i32 1, i32 1, i8* %35, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3495
  br label %do.end32, !dbg !3496

do.end32:                                         ; preds = %do.body29
  br label %do.body33, !dbg !3497, !llvm.loop !3498

do.body33:                                        ; preds = %do.end32
  store [2 x i16]* getelementptr inbounds ([366 x [2 x i16]], [366 x [2 x i16]]* @aac_static_table_init.table.25, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9, i32 1), align 8, !dbg !3499
  store i32 366, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9, i32 3), align 4, !dbg !3502
  %36 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 9), align 2, !dbg !3503
  %conv34 = zext i16 %36 to i32, !dbg !3503
  %37 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 9), align 8, !dbg !3504
  %38 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 9), align 8, !dbg !3505
  %39 = bitcast i16* %38 to i8*, !dbg !3505
  %call35 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 9), i32 8, i32 %conv34, i8* %37, i32 1, i32 1, i8* %39, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3506
  br label %do.end36, !dbg !3507

do.end36:                                         ; preds = %do.body33
  br label %do.body37, !dbg !3508, !llvm.loop !3509

do.body37:                                        ; preds = %do.end36
  store [2 x i16]* getelementptr inbounds ([462 x [2 x i16]], [462 x [2 x i16]]* @aac_static_table_init.table.26, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10, i32 1), align 8, !dbg !3510
  store i32 462, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10, i32 3), align 4, !dbg !3513
  %40 = load i16, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @ff_aac_spectral_sizes, i64 0, i64 10), align 4, !dbg !3514
  %conv38 = zext i16 %40 to i32, !dbg !3514
  %41 = load i8*, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 10), align 16, !dbg !3515
  %42 = load i16*, i16** getelementptr inbounds ([11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 10), align 16, !dbg !3516
  %43 = bitcast i16* %42 to i8*, !dbg !3516
  %call39 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 10), i32 8, i32 %conv38, i8* %41, i32 1, i32 1, i8* %43, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3517
  br label %do.end40, !dbg !3518

do.end40:                                         ; preds = %do.body37
  call void @ff_aac_sbr_init(), !dbg !3519
  call void @ff_aac_tableinit(), !dbg !3520
  br label %do.body41, !dbg !3521, !llvm.loop !3522

do.body41:                                        ; preds = %do.end40
  store [2 x i16]* getelementptr inbounds ([352 x [2 x i16]], [352 x [2 x i16]]* @aac_static_table_init.table.27, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !3523
  store i32 352, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 3), align 4, !dbg !3526
  %call42 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_scalefactors, i32 7, i32 121, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([121 x i32]* @ff_aac_scalefactor_code to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 4), !dbg !3527
  br label %do.end43, !dbg !3528

do.end43:                                         ; preds = %do.body41
  call void @ff_kbd_window_init(float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float 4.000000e+00, i32 1024), !dbg !3529
  call void @ff_kbd_window_init(float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float 6.000000e+00, i32 128), !dbg !3530
  call void @ff_kbd_window_init(float* getelementptr inbounds ([960 x float], [960 x float]* @ff_aac_kbd_long_960, i32 0, i32 0), float 4.000000e+00, i32 960), !dbg !3531
  call void @ff_kbd_window_init(float* getelementptr inbounds ([120 x float], [120 x float]* @ff_aac_kbd_short_120, i32 0, i32 0), float 6.000000e+00, i32 120), !dbg !3532
  call void @ff_sine_window_init(float* getelementptr inbounds ([960 x float], [960 x float]* @ff_sine_960, i32 0, i32 0), i32 960), !dbg !3533
  call void @ff_sine_window_init(float* getelementptr inbounds ([120 x float], [120 x float]* @ff_sine_120, i32 0, i32 0), i32 120), !dbg !3534
  call void @ff_init_ff_sine_windows(i32 10), !dbg !3535
  call void @ff_init_ff_sine_windows(i32 9), !dbg !3536
  call void @ff_init_ff_sine_windows(i32 7), !dbg !3537
  call void @ff_cbrt_tableinit(), !dbg !3538
  ret void, !dbg !3539
}

; Function Attrs: nounwind uwtable
define internal void @aacdec_init(%struct.AACContext* %c) #1 !dbg !3540 {
entry:
  %c.addr = alloca %struct.AACContext*, align 8
  store %struct.AACContext* %c, %struct.AACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %c.addr, metadata !3543, metadata !2062), !dbg !3544
  %0 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3545
  %imdct_and_windowing = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 28, !dbg !3546
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_windowing, align 32, !dbg !3547
  %1 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3548
  %apply_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %1, i32 0, i32 29, !dbg !3549
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @apply_ltp, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp, align 8, !dbg !3550
  %2 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3551
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 30, !dbg !3552
  store void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)* @apply_tns, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !3553
  %3 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3554
  %windowing_and_mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 31, !dbg !3555
  store void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)* @windowing_and_mdct_ltp, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)** %windowing_and_mdct_ltp, align 8, !dbg !3556
  %4 = load %struct.AACContext*, %struct.AACContext** %c.addr, align 8, !dbg !3557
  %update_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 32, !dbg !3558
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @update_ltp, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp, align 32, !dbg !3559
  ret void, !dbg !3560
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, i8* %data, i64 %bit_size, i32 %sync_extension) #1 !dbg !3561 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %data.addr = alloca i8*, align 8
  %bit_size.addr = alloca i64, align 8
  %sync_extension.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3565, metadata !2062), !dbg !3566
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3567, metadata !2062), !dbg !3568
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !3569, metadata !2062), !dbg !3570
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3571, metadata !2062), !dbg !3572
  store i64 %bit_size, i64* %bit_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bit_size.addr, metadata !3573, metadata !2062), !dbg !3574
  store i32 %sync_extension, i32* %sync_extension.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync_extension.addr, metadata !3575, metadata !2062), !dbg !3576
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3577, metadata !2062), !dbg !3578
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3579, metadata !2062), !dbg !3580
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3581, metadata !2062), !dbg !3582
  %0 = load i64, i64* %bit_size.addr, align 8, !dbg !3583
  %cmp = icmp slt i64 %0, 0, !dbg !3585
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3586

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %bit_size.addr, align 8, !dbg !3587
  %cmp1 = icmp sgt i64 %1, 2147483647, !dbg !3589
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3590

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3591
  %3 = bitcast %struct.AVCodecContext* %2 to i8*, !dbg !3591
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i32 0, i32 0)), !dbg !3593
  store i32 -1094995529, i32* %retval, align 4, !dbg !3594
  br label %return, !dbg !3594

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !3595, !llvm.loop !3596

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !3597

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !3600
  br label %for.cond, !dbg !3602

for.cond:                                         ; preds = %for.inc, %do.end
  %4 = load i32, i32* %i, align 4, !dbg !3603
  %conv = sext i32 %4 to i64, !dbg !3603
  %5 = load i64, i64* %bit_size.addr, align 8, !dbg !3606
  %shr = ashr i64 %5, 3, !dbg !3607
  %cmp2 = icmp slt i64 %conv, %shr, !dbg !3608
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3609

for.body:                                         ; preds = %for.cond
  br label %do.body4, !dbg !3610, !llvm.loop !3611

do.body4:                                         ; preds = %for.body
  br label %do.end5, !dbg !3612

do.end5:                                          ; preds = %do.body4
  br label %for.inc, !dbg !3615

for.inc:                                          ; preds = %do.end5
  %6 = load i32, i32* %i, align 4, !dbg !3617
  %inc = add nsw i32 %6, 1, !dbg !3617
  store i32 %inc, i32* %i, align 4, !dbg !3617
  br label %for.cond, !dbg !3619, !llvm.loop !3620

for.end:                                          ; preds = %for.cond
  br label %do.body6, !dbg !3622, !llvm.loop !3623

do.body6:                                         ; preds = %for.end
  br label %do.end7, !dbg !3624

do.end7:                                          ; preds = %do.body6
  %7 = load i8*, i8** %data.addr, align 8, !dbg !3627
  %8 = load i64, i64* %bit_size.addr, align 8, !dbg !3629
  %conv8 = trunc i64 %8 to i32, !dbg !3629
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %7, i32 %conv8), !dbg !3630
  store i32 %call, i32* %ret, align 4, !dbg !3631
  %cmp9 = icmp slt i32 %call, 0, !dbg !3632
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !3633

if.then11:                                        ; preds = %do.end7
  %9 = load i32, i32* %ret, align 4, !dbg !3634
  store i32 %9, i32* %retval, align 4, !dbg !3635
  br label %return, !dbg !3635

if.end12:                                         ; preds = %do.end7
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3636
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3637
  %12 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !3638
  %13 = load i32, i32* %sync_extension.addr, align 4, !dbg !3639
  %call13 = call i32 @decode_audio_specific_config_gb(%struct.AACContext* %10, %struct.AVCodecContext* %11, %struct.MPEG4AudioConfig* %12, %struct.GetBitContext* %gb, i32 0, i32 %13), !dbg !3640
  store i32 %call13, i32* %retval, align 4, !dbg !3641
  br label %return, !dbg !3641

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !3642
  ret i32 %14, !dbg !3642
}

; Function Attrs: nounwind uwtable
define internal i32 @sample_rate_idx(i32 %rate) #1 !dbg !3643 {
entry:
  %retval = alloca i32, align 4
  %rate.addr = alloca i32, align 4
  store i32 %rate, i32* %rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rate.addr, metadata !3646, metadata !2062), !dbg !3647
  %0 = load i32, i32* %rate.addr, align 4, !dbg !3648
  %cmp = icmp sle i32 92017, %0, !dbg !3650
  br i1 %cmp, label %if.then, label %if.else, !dbg !3651

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3652
  br label %return, !dbg !3652

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %rate.addr, align 4, !dbg !3654
  %cmp1 = icmp sle i32 75132, %1, !dbg !3656
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !3657

if.then2:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !3658
  br label %return, !dbg !3658

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %rate.addr, align 4, !dbg !3660
  %cmp4 = icmp sle i32 55426, %2, !dbg !3662
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !3663

if.then5:                                         ; preds = %if.else3
  store i32 2, i32* %retval, align 4, !dbg !3664
  br label %return, !dbg !3664

if.else6:                                         ; preds = %if.else3
  %3 = load i32, i32* %rate.addr, align 4, !dbg !3666
  %cmp7 = icmp sle i32 46009, %3, !dbg !3668
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3669

if.then8:                                         ; preds = %if.else6
  store i32 3, i32* %retval, align 4, !dbg !3670
  br label %return, !dbg !3670

if.else9:                                         ; preds = %if.else6
  %4 = load i32, i32* %rate.addr, align 4, !dbg !3672
  %cmp10 = icmp sle i32 37566, %4, !dbg !3674
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !3675

if.then11:                                        ; preds = %if.else9
  store i32 4, i32* %retval, align 4, !dbg !3676
  br label %return, !dbg !3676

if.else12:                                        ; preds = %if.else9
  %5 = load i32, i32* %rate.addr, align 4, !dbg !3678
  %cmp13 = icmp sle i32 27713, %5, !dbg !3680
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !3681

if.then14:                                        ; preds = %if.else12
  store i32 5, i32* %retval, align 4, !dbg !3682
  br label %return, !dbg !3682

if.else15:                                        ; preds = %if.else12
  %6 = load i32, i32* %rate.addr, align 4, !dbg !3684
  %cmp16 = icmp sle i32 23004, %6, !dbg !3686
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !3687

if.then17:                                        ; preds = %if.else15
  store i32 6, i32* %retval, align 4, !dbg !3688
  br label %return, !dbg !3688

if.else18:                                        ; preds = %if.else15
  %7 = load i32, i32* %rate.addr, align 4, !dbg !3690
  %cmp19 = icmp sle i32 18783, %7, !dbg !3692
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !3693

if.then20:                                        ; preds = %if.else18
  store i32 7, i32* %retval, align 4, !dbg !3694
  br label %return, !dbg !3694

if.else21:                                        ; preds = %if.else18
  %8 = load i32, i32* %rate.addr, align 4, !dbg !3696
  %cmp22 = icmp sle i32 13856, %8, !dbg !3698
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !3699

if.then23:                                        ; preds = %if.else21
  store i32 8, i32* %retval, align 4, !dbg !3700
  br label %return, !dbg !3700

if.else24:                                        ; preds = %if.else21
  %9 = load i32, i32* %rate.addr, align 4, !dbg !3702
  %cmp25 = icmp sle i32 11502, %9, !dbg !3704
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !3705

if.then26:                                        ; preds = %if.else24
  store i32 9, i32* %retval, align 4, !dbg !3706
  br label %return, !dbg !3706

if.else27:                                        ; preds = %if.else24
  %10 = load i32, i32* %rate.addr, align 4, !dbg !3708
  %cmp28 = icmp sle i32 9391, %10, !dbg !3710
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !3711

if.then29:                                        ; preds = %if.else27
  store i32 10, i32* %retval, align 4, !dbg !3712
  br label %return, !dbg !3712

if.else30:                                        ; preds = %if.else27
  store i32 11, i32* %retval, align 4, !dbg !3714
  br label %return, !dbg !3714

return:                                           ; preds = %if.else30, %if.then29, %if.then26, %if.then23, %if.then20, %if.then17, %if.then14, %if.then11, %if.then8, %if.then5, %if.then2, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !3715
  ret i32 %11, !dbg !3715
}

; Function Attrs: nounwind uwtable
define internal i32 @set_default_channel_config(%struct.AVCodecContext* %avctx, [3 x i8]* %layout_map, i32* %tags, i32 %channel_config) #1 !dbg !3716 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32*, align 8
  %channel_config.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3720, metadata !2062), !dbg !3721
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !3722, metadata !2062), !dbg !3723
  store i32* %tags, i32** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tags.addr, metadata !3724, metadata !2062), !dbg !3725
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !3726, metadata !2062), !dbg !3727
  %0 = load i32, i32* %channel_config.addr, align 4, !dbg !3728
  %cmp = icmp slt i32 %0, 1, !dbg !3730
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3731

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %channel_config.addr, align 4, !dbg !3732
  %cmp1 = icmp sgt i32 %1, 7, !dbg !3734
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false3, !dbg !3735

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i32, i32* %channel_config.addr, align 4, !dbg !3736
  %cmp2 = icmp slt i32 %2, 11, !dbg !3738
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !3739

lor.lhs.false3:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i32, i32* %channel_config.addr, align 4, !dbg !3740
  %cmp4 = icmp sgt i32 %3, 12, !dbg !3741
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3742

if.then:                                          ; preds = %lor.lhs.false3, %land.lhs.true, %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3744
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !3744
  %6 = load i32, i32* %channel_config.addr, align 4, !dbg !3746
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i32 0, i32 0), i32 %6), !dbg !3747
  store i32 -1094995529, i32* %retval, align 4, !dbg !3748
  br label %return, !dbg !3748

if.end:                                           ; preds = %lor.lhs.false3
  %7 = load i32, i32* %channel_config.addr, align 4, !dbg !3749
  %idxprom = sext i32 %7 to i64, !dbg !3750
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom, !dbg !3750
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3750
  %conv = sext i8 %8 to i32, !dbg !3750
  %9 = load i32*, i32** %tags.addr, align 8, !dbg !3751
  store i32 %conv, i32* %9, align 4, !dbg !3752
  %10 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3753
  %11 = bitcast [3 x i8]* %10 to i8*, !dbg !3754
  %12 = load i32, i32* %channel_config.addr, align 4, !dbg !3755
  %sub = sub nsw i32 %12, 1, !dbg !3756
  %idxprom5 = sext i32 %sub to i64, !dbg !3757
  %arrayidx6 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom5, !dbg !3757
  %arraydecay = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx6, i32 0, i32 0, !dbg !3754
  %13 = bitcast [3 x i8]* %arraydecay to i8*, !dbg !3754
  %14 = load i32*, i32** %tags.addr, align 8, !dbg !3758
  %15 = load i32, i32* %14, align 4, !dbg !3759
  %conv7 = sext i32 %15 to i64, !dbg !3759
  %mul = mul i64 %conv7, 3, !dbg !3760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 %mul, i32 1, i1 false), !dbg !3754
  %16 = load i32, i32* %channel_config.addr, align 4, !dbg !3761
  %cmp8 = icmp eq i32 %16, 7, !dbg !3763
  br i1 %cmp8, label %land.lhs.true10, label %if.end16, !dbg !3764

land.lhs.true10:                                  ; preds = %if.end
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3765
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 132, !dbg !3767
  %18 = load i32, i32* %strict_std_compliance, align 4, !dbg !3767
  %cmp11 = icmp slt i32 %18, 1, !dbg !3768
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !3769

if.then13:                                        ; preds = %land.lhs.true10
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3770
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !3770
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 32, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.45, i32 0, i32 0), i32 1), !dbg !3772
  %21 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3773
  %arrayidx14 = getelementptr inbounds [3 x i8], [3 x i8]* %21, i64 2, !dbg !3773
  %arrayidx15 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx14, i64 0, i64 2, !dbg !3773
  store i8 2, i8* %arrayidx15, align 1, !dbg !3774
  br label %if.end16, !dbg !3775

if.end16:                                         ; preds = %if.then13, %land.lhs.true10, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3776
  br label %return, !dbg !3776

return:                                           ; preds = %if.end16, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !3777
  ret i32 %22, !dbg !3777
}

; Function Attrs: nounwind uwtable
define internal i32 @output_configure(%struct.AACContext* %ac, [3 x i8]* %layout_map, i32 %tags, i32 %oc_type, i32 %get_new_frame) #1 !dbg !3778 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %oc_type.addr = alloca i32, align 4
  %get_new_frame.addr = alloca i32, align 4
  %avctx = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %channels = alloca i32, align 4
  %ret = alloca i32, align 4
  %layout = alloca i64, align 8
  %id_map = alloca [7 x [16 x i8]], align 16
  %type_counts = alloca [7 x i8], align 1
  %type = alloca i32, align 4
  %id = alloca i32, align 4
  %type43 = alloca i32, align 4
  %id48 = alloca i32, align 4
  %iid = alloca i32, align 4
  %position = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3781, metadata !2062), !dbg !3782
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !3783, metadata !2062), !dbg !3784
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !3785, metadata !2062), !dbg !3786
  store i32 %oc_type, i32* %oc_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oc_type.addr, metadata !3787, metadata !2062), !dbg !3788
  store i32 %get_new_frame, i32* %get_new_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_new_frame.addr, metadata !3789, metadata !2062), !dbg !3790
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !3791, metadata !2062), !dbg !3792
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3793
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 1, !dbg !3794
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !3794
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3795, metadata !2062), !dbg !3796
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !3797, metadata !2062), !dbg !3798
  store i32 0, i32* %channels, align 4, !dbg !3798
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3799, metadata !2062), !dbg !3800
  call void @llvm.dbg.declare(metadata i64* %layout, metadata !3801, metadata !2062), !dbg !3802
  store i64 0, i64* %layout, align 8, !dbg !3802
  call void @llvm.dbg.declare(metadata [7 x [16 x i8]]* %id_map, metadata !3803, metadata !2062), !dbg !3806
  %2 = bitcast [7 x [16 x i8]]* %id_map to i8*, !dbg !3806
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 112, i32 16, i1 false), !dbg !3806
  call void @llvm.dbg.declare(metadata [7 x i8]* %type_counts, metadata !3807, metadata !2062), !dbg !3808
  %3 = bitcast [7 x i8]* %type_counts to i8*, !dbg !3808
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 7, i32 1, i1 false), !dbg !3808
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3809
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 24, !dbg !3811
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !3809
  %layout_map2 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 1, !dbg !3812
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map2, i32 0, i32 0, !dbg !3809
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3813
  %cmp = icmp ne [3 x i8]* %arraydecay, %5, !dbg !3814
  br i1 %cmp, label %if.then, label %if.end, !dbg !3815

if.then:                                          ; preds = %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3816
  %oc3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 24, !dbg !3818
  %arrayidx4 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc3, i64 0, i64 1, !dbg !3816
  %layout_map5 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx4, i32 0, i32 1, !dbg !3819
  %arraydecay6 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map5, i32 0, i32 0, !dbg !3820
  %7 = bitcast [3 x i8]* %arraydecay6 to i8*, !dbg !3820
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3821
  %9 = bitcast [3 x i8]* %8 to i8*, !dbg !3820
  %10 = load i32, i32* %tags.addr, align 4, !dbg !3822
  %conv = sext i32 %10 to i64, !dbg !3822
  %mul = mul i64 %conv, 3, !dbg !3823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %9, i64 %mul, i32 1, i1 false), !dbg !3820
  %11 = load i32, i32* %tags.addr, align 4, !dbg !3824
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3825
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 24, !dbg !3826
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !3825
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx8, i32 0, i32 2, !dbg !3827
  store i32 %11, i32* %layout_map_tags, align 8, !dbg !3828
  br label %if.end, !dbg !3829

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !3830
  br label %for.cond, !dbg !3832

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !3833
  %14 = load i32, i32* %tags.addr, align 4, !dbg !3836
  %cmp9 = icmp slt i32 %13, %14, !dbg !3837
  br i1 %cmp9, label %for.body, label %for.end, !dbg !3838

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3839, metadata !2062), !dbg !3841
  %15 = load i32, i32* %i, align 4, !dbg !3842
  %idxprom = sext i32 %15 to i64, !dbg !3843
  %16 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3843
  %arrayidx11 = getelementptr inbounds [3 x i8], [3 x i8]* %16, i64 %idxprom, !dbg !3843
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx11, i64 0, i64 0, !dbg !3843
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !3843
  %conv13 = zext i8 %17 to i32, !dbg !3843
  store i32 %conv13, i32* %type, align 4, !dbg !3841
  call void @llvm.dbg.declare(metadata i32* %id, metadata !3844, metadata !2062), !dbg !3845
  %18 = load i32, i32* %i, align 4, !dbg !3846
  %idxprom14 = sext i32 %18 to i64, !dbg !3847
  %19 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3847
  %arrayidx15 = getelementptr inbounds [3 x i8], [3 x i8]* %19, i64 %idxprom14, !dbg !3847
  %arrayidx16 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx15, i64 0, i64 1, !dbg !3847
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !3847
  %conv17 = zext i8 %20 to i32, !dbg !3847
  store i32 %conv17, i32* %id, align 4, !dbg !3845
  %21 = load i32, i32* %type, align 4, !dbg !3848
  %idxprom18 = sext i32 %21 to i64, !dbg !3849
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %type_counts, i64 0, i64 %idxprom18, !dbg !3849
  %22 = load i8, i8* %arrayidx19, align 1, !dbg !3850
  %inc = add i8 %22, 1, !dbg !3850
  store i8 %inc, i8* %arrayidx19, align 1, !dbg !3850
  %23 = load i32, i32* %id, align 4, !dbg !3851
  %idxprom20 = sext i32 %23 to i64, !dbg !3852
  %24 = load i32, i32* %type, align 4, !dbg !3853
  %idxprom21 = sext i32 %24 to i64, !dbg !3852
  %arrayidx22 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom21, !dbg !3852
  %arrayidx23 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !3852
  store i8 %22, i8* %arrayidx23, align 1, !dbg !3854
  %25 = load i32, i32* %id, align 4, !dbg !3855
  %idxprom24 = sext i32 %25 to i64, !dbg !3857
  %26 = load i32, i32* %type, align 4, !dbg !3858
  %idxprom25 = sext i32 %26 to i64, !dbg !3857
  %arrayidx26 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom25, !dbg !3857
  %arrayidx27 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !3857
  %27 = load i8, i8* %arrayidx27, align 1, !dbg !3857
  %conv28 = zext i8 %27 to i32, !dbg !3857
  %cmp29 = icmp sge i32 %conv28, 16, !dbg !3859
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !3860

if.then31:                                        ; preds = %for.body
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3861
  %avctx32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 1, !dbg !3863
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx32, align 8, !dbg !3863
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !3861
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0)), !dbg !3864
  store i32 -1163346256, i32* %retval, align 4, !dbg !3865
  br label %return, !dbg !3865

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !3866

for.inc:                                          ; preds = %if.end33
  %31 = load i32, i32* %i, align 4, !dbg !3867
  %inc34 = add nsw i32 %31, 1, !dbg !3867
  store i32 %inc34, i32* %i, align 4, !dbg !3867
  br label %for.cond, !dbg !3869, !llvm.loop !3870

for.end:                                          ; preds = %for.cond
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3872
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 90, !dbg !3874
  %33 = load i64, i64* %request_channel_layout, align 8, !dbg !3874
  %cmp35 = icmp ne i64 %33, -9223372036854775808, !dbg !3875
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !3876

if.then37:                                        ; preds = %for.end
  %34 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3877
  %35 = load i32, i32* %tags.addr, align 4, !dbg !3878
  %call = call i64 @sniff_channel_order([3 x i8]* %34, i32 %35), !dbg !3879
  store i64 %call, i64* %layout, align 8, !dbg !3880
  br label %if.end38, !dbg !3881

if.end38:                                         ; preds = %if.then37, %for.end
  store i32 0, i32* %i, align 4, !dbg !3882
  br label %for.cond39, !dbg !3884

for.cond39:                                       ; preds = %for.inc75, %if.end38
  %36 = load i32, i32* %i, align 4, !dbg !3885
  %37 = load i32, i32* %tags.addr, align 4, !dbg !3888
  %cmp40 = icmp slt i32 %36, %37, !dbg !3889
  br i1 %cmp40, label %for.body42, label %for.end77, !dbg !3890

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32* %type43, metadata !3891, metadata !2062), !dbg !3893
  %38 = load i32, i32* %i, align 4, !dbg !3894
  %idxprom44 = sext i32 %38 to i64, !dbg !3895
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3895
  %arrayidx45 = getelementptr inbounds [3 x i8], [3 x i8]* %39, i64 %idxprom44, !dbg !3895
  %arrayidx46 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx45, i64 0, i64 0, !dbg !3895
  %40 = load i8, i8* %arrayidx46, align 1, !dbg !3895
  %conv47 = zext i8 %40 to i32, !dbg !3895
  store i32 %conv47, i32* %type43, align 4, !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %id48, metadata !3896, metadata !2062), !dbg !3897
  %41 = load i32, i32* %i, align 4, !dbg !3898
  %idxprom49 = sext i32 %41 to i64, !dbg !3899
  %42 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3899
  %arrayidx50 = getelementptr inbounds [3 x i8], [3 x i8]* %42, i64 %idxprom49, !dbg !3899
  %arrayidx51 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx50, i64 0, i64 1, !dbg !3899
  %43 = load i8, i8* %arrayidx51, align 1, !dbg !3899
  %conv52 = zext i8 %43 to i32, !dbg !3899
  store i32 %conv52, i32* %id48, align 4, !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %iid, metadata !3900, metadata !2062), !dbg !3901
  %44 = load i32, i32* %id48, align 4, !dbg !3902
  %idxprom53 = sext i32 %44 to i64, !dbg !3903
  %45 = load i32, i32* %type43, align 4, !dbg !3904
  %idxprom54 = sext i32 %45 to i64, !dbg !3903
  %arrayidx55 = getelementptr inbounds [7 x [16 x i8]], [7 x [16 x i8]]* %id_map, i64 0, i64 %idxprom54, !dbg !3903
  %arrayidx56 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx55, i64 0, i64 %idxprom53, !dbg !3903
  %46 = load i8, i8* %arrayidx56, align 1, !dbg !3903
  %conv57 = zext i8 %46 to i32, !dbg !3903
  store i32 %conv57, i32* %iid, align 4, !dbg !3901
  call void @llvm.dbg.declare(metadata i32* %position, metadata !3905, metadata !2062), !dbg !3906
  %47 = load i32, i32* %i, align 4, !dbg !3907
  %idxprom58 = sext i32 %47 to i64, !dbg !3908
  %48 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !3908
  %arrayidx59 = getelementptr inbounds [3 x i8], [3 x i8]* %48, i64 %idxprom58, !dbg !3908
  %arrayidx60 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx59, i64 0, i64 2, !dbg !3908
  %49 = load i8, i8* %arrayidx60, align 1, !dbg !3908
  %conv61 = zext i8 %49 to i32, !dbg !3908
  store i32 %conv61, i32* %position, align 4, !dbg !3906
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3909
  %51 = load i32, i32* %position, align 4, !dbg !3910
  %52 = load i32, i32* %type43, align 4, !dbg !3911
  %53 = load i32, i32* %iid, align 4, !dbg !3912
  %call62 = call i32 @che_configure(%struct.AACContext* %50, i32 %51, i32 %52, i32 %53, i32* %channels), !dbg !3913
  store i32 %call62, i32* %ret, align 4, !dbg !3914
  %54 = load i32, i32* %ret, align 4, !dbg !3915
  %cmp63 = icmp slt i32 %54, 0, !dbg !3917
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !3918

if.then65:                                        ; preds = %for.body42
  %55 = load i32, i32* %ret, align 4, !dbg !3919
  store i32 %55, i32* %retval, align 4, !dbg !3920
  br label %return, !dbg !3920

if.end66:                                         ; preds = %for.body42
  %56 = load i32, i32* %iid, align 4, !dbg !3921
  %idxprom67 = sext i32 %56 to i64, !dbg !3922
  %57 = load i32, i32* %type43, align 4, !dbg !3923
  %idxprom68 = sext i32 %57 to i64, !dbg !3922
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3922
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %58, i32 0, i32 5, !dbg !3924
  %arrayidx69 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom68, !dbg !3922
  %arrayidx70 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx69, i64 0, i64 %idxprom67, !dbg !3922
  %59 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx70, align 8, !dbg !3922
  %60 = load i32, i32* %id48, align 4, !dbg !3925
  %idxprom71 = sext i32 %60 to i64, !dbg !3926
  %61 = load i32, i32* %type43, align 4, !dbg !3927
  %idxprom72 = sext i32 %61 to i64, !dbg !3926
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3926
  %tag_che_map = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 6, !dbg !3928
  %arrayidx73 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map, i64 0, i64 %idxprom72, !dbg !3926
  %arrayidx74 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx73, i64 0, i64 %idxprom71, !dbg !3926
  store %struct.ChannelElement* %59, %struct.ChannelElement** %arrayidx74, align 8, !dbg !3929
  br label %for.inc75, !dbg !3930

for.inc75:                                        ; preds = %if.end66
  %63 = load i32, i32* %i, align 4, !dbg !3931
  %inc76 = add nsw i32 %63, 1, !dbg !3931
  store i32 %inc76, i32* %i, align 4, !dbg !3931
  br label %for.cond39, !dbg !3933, !llvm.loop !3934

for.end77:                                        ; preds = %for.cond39
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3936
  %oc78 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 24, !dbg !3938
  %arrayidx79 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc78, i64 0, i64 1, !dbg !3936
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx79, i32 0, i32 0, !dbg !3939
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !3940
  %65 = load i32, i32* %ps, align 8, !dbg !3940
  %cmp80 = icmp eq i32 %65, 1, !dbg !3941
  br i1 %cmp80, label %land.lhs.true, label %if.end89, !dbg !3942

land.lhs.true:                                    ; preds = %for.end77
  %66 = load i32, i32* %channels, align 4, !dbg !3943
  %cmp82 = icmp eq i32 %66, 2, !dbg !3945
  br i1 %cmp82, label %if.then84, label %if.end89, !dbg !3946

if.then84:                                        ; preds = %land.lhs.true
  %67 = load i64, i64* %layout, align 8, !dbg !3947
  %cmp85 = icmp eq i64 %67, 4, !dbg !3950
  br i1 %cmp85, label %if.then87, label %if.else, !dbg !3951

if.then87:                                        ; preds = %if.then84
  store i64 3, i64* %layout, align 8, !dbg !3952
  br label %if.end88, !dbg !3954

if.else:                                          ; preds = %if.then84
  store i64 0, i64* %layout, align 8, !dbg !3955
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then87
  br label %if.end89, !dbg !3957

if.end89:                                         ; preds = %if.end88, %land.lhs.true, %for.end77
  %68 = load i64, i64* %layout, align 8, !dbg !3958
  %tobool = icmp ne i64 %68, 0, !dbg !3958
  br i1 %tobool, label %if.then90, label %if.end91, !dbg !3960

if.then90:                                        ; preds = %if.end89
  %69 = load i64, i64* %layout, align 8, !dbg !3961
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3963
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 89, !dbg !3964
  store i64 %69, i64* %channel_layout, align 8, !dbg !3965
  br label %if.end91, !dbg !3963

if.end91:                                         ; preds = %if.then90, %if.end89
  %71 = load i64, i64* %layout, align 8, !dbg !3966
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3967
  %oc92 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 24, !dbg !3968
  %arrayidx93 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc92, i64 0, i64 1, !dbg !3967
  %channel_layout94 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx93, i32 0, i32 4, !dbg !3969
  store i64 %71, i64* %channel_layout94, align 8, !dbg !3970
  %73 = load i32, i32* %channels, align 4, !dbg !3971
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3972
  %oc95 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %74, i32 0, i32 24, !dbg !3973
  %arrayidx96 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc95, i64 0, i64 1, !dbg !3972
  %channels97 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx96, i32 0, i32 3, !dbg !3974
  store i32 %73, i32* %channels97, align 4, !dbg !3975
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3976
  %channels98 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 83, !dbg !3977
  store i32 %73, i32* %channels98, align 4, !dbg !3978
  %76 = load i32, i32* %oc_type.addr, align 4, !dbg !3979
  %77 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3980
  %oc99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %77, i32 0, i32 24, !dbg !3981
  %arrayidx100 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc99, i64 0, i64 1, !dbg !3980
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx100, i32 0, i32 5, !dbg !3982
  store i32 %76, i32* %status, align 8, !dbg !3983
  %78 = load i32, i32* %get_new_frame.addr, align 4, !dbg !3984
  %tobool101 = icmp ne i32 %78, 0, !dbg !3984
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !3986

if.then102:                                       ; preds = %if.end91
  %79 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3987
  %avctx103 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %79, i32 0, i32 1, !dbg !3990
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx103, align 8, !dbg !3990
  %call104 = call i32 @frame_configure_elements(%struct.AVCodecContext* %80), !dbg !3991
  store i32 %call104, i32* %ret, align 4, !dbg !3992
  %cmp105 = icmp slt i32 %call104, 0, !dbg !3993
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !3994

if.then107:                                       ; preds = %if.then102
  %81 = load i32, i32* %ret, align 4, !dbg !3995
  store i32 %81, i32* %retval, align 4, !dbg !3996
  br label %return, !dbg !3996

if.end108:                                        ; preds = %if.then102
  br label %if.end109, !dbg !3997

if.end109:                                        ; preds = %if.end108, %if.end91
  store i32 0, i32* %retval, align 4, !dbg !3998
  br label %return, !dbg !3998

return:                                           ; preds = %if.end109, %if.then107, %if.then65, %if.then31
  %82 = load i32, i32* %retval, align 4, !dbg !3999
  ret i32 %82, !dbg !3999
}

declare void @av_log(i8*, i32, i8*, ...) #2

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #2

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #2

declare i32 @ff_mdct15_init(%struct.MDCT15Context**, i32, i32, double) #2

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #2

declare void @ff_aac_sbr_init() #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_aac_tableinit() #4 !dbg !1884 {
entry:
  %i = alloca i32, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  %t1_inc_cur = alloca i32, align 4
  %t2_inc_cur = alloca i32, align 4
  %t1_inc_prev = alloca i32, align 4
  %t2_inc_prev = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4000, metadata !2062), !dbg !4001
  call void @llvm.dbg.declare(metadata float* %t1, metadata !4002, metadata !2062), !dbg !4003
  store float 0x3CD0000000000000, float* %t1, align 4, !dbg !4003
  call void @llvm.dbg.declare(metadata float* %t2, metadata !4004, metadata !2062), !dbg !4005
  store float 0x3D90000000000000, float* %t2, align 4, !dbg !4005
  call void @llvm.dbg.declare(metadata i32* %t1_inc_cur, metadata !4006, metadata !2062), !dbg !4007
  call void @llvm.dbg.declare(metadata i32* %t2_inc_cur, metadata !4008, metadata !2062), !dbg !4009
  call void @llvm.dbg.declare(metadata i32* %t1_inc_prev, metadata !4010, metadata !2062), !dbg !4011
  store i32 0, i32* %t1_inc_prev, align 4, !dbg !4011
  call void @llvm.dbg.declare(metadata i32* %t2_inc_prev, metadata !4012, metadata !2062), !dbg !4013
  store i32 8, i32* %t2_inc_prev, align 4, !dbg !4013
  store i32 0, i32* %i, align 4, !dbg !4014
  br label %for.cond, !dbg !4016

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4017
  %cmp = icmp slt i32 %0, 428, !dbg !4020
  br i1 %cmp, label %for.body, label %for.end, !dbg !4021

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !4022
  %rem = srem i32 %1, 4, !dbg !4024
  %mul = mul nsw i32 4, %rem, !dbg !4025
  store i32 %mul, i32* %t1_inc_cur, align 4, !dbg !4026
  %2 = load i32, i32* %i, align 4, !dbg !4027
  %mul1 = mul nsw i32 3, %2, !dbg !4028
  %add = add nsw i32 8, %mul1, !dbg !4029
  %rem2 = srem i32 %add, 16, !dbg !4030
  store i32 %rem2, i32* %t2_inc_cur, align 4, !dbg !4031
  %3 = load i32, i32* %t1_inc_cur, align 4, !dbg !4032
  %4 = load i32, i32* %t1_inc_prev, align 4, !dbg !4034
  %cmp3 = icmp slt i32 %3, %4, !dbg !4035
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4036

if.then:                                          ; preds = %for.body
  %5 = load float, float* %t1, align 4, !dbg !4037
  %mul4 = fmul float %5, 2.000000e+00, !dbg !4037
  store float %mul4, float* %t1, align 4, !dbg !4037
  br label %if.end, !dbg !4038

if.end:                                           ; preds = %if.then, %for.body
  %6 = load i32, i32* %t2_inc_cur, align 4, !dbg !4039
  %7 = load i32, i32* %t2_inc_prev, align 4, !dbg !4041
  %cmp5 = icmp slt i32 %6, %7, !dbg !4042
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !4043

if.then6:                                         ; preds = %if.end
  %8 = load float, float* %t2, align 4, !dbg !4044
  %mul7 = fmul float %8, 2.000000e+00, !dbg !4044
  store float %mul7, float* %t2, align 4, !dbg !4044
  br label %if.end8, !dbg !4045

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load float, float* %t1, align 4, !dbg !4046
  %10 = load i32, i32* %t1_inc_cur, align 4, !dbg !4047
  %idxprom = sext i32 %10 to i64, !dbg !4048
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom, !dbg !4048
  %11 = load float, float* %arrayidx, align 4, !dbg !4048
  %mul9 = fmul float %9, %11, !dbg !4049
  %12 = load i32, i32* %i, align 4, !dbg !4050
  %idxprom10 = sext i32 %12 to i64, !dbg !4051
  %arrayidx11 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom10, !dbg !4051
  store float %mul9, float* %arrayidx11, align 4, !dbg !4052
  %13 = load float, float* %t2, align 4, !dbg !4053
  %14 = load i32, i32* %t2_inc_cur, align 4, !dbg !4054
  %idxprom12 = sext i32 %14 to i64, !dbg !4055
  %arrayidx13 = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom12, !dbg !4055
  %15 = load float, float* %arrayidx13, align 4, !dbg !4055
  %mul14 = fmul float %13, %15, !dbg !4056
  %16 = load i32, i32* %i, align 4, !dbg !4057
  %idxprom15 = sext i32 %16 to i64, !dbg !4058
  %arrayidx16 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom15, !dbg !4058
  store float %mul14, float* %arrayidx16, align 4, !dbg !4059
  %17 = load i32, i32* %t1_inc_cur, align 4, !dbg !4060
  store i32 %17, i32* %t1_inc_prev, align 4, !dbg !4061
  %18 = load i32, i32* %t2_inc_cur, align 4, !dbg !4062
  store i32 %18, i32* %t2_inc_prev, align 4, !dbg !4063
  br label %for.inc, !dbg !4064

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !4065
  %inc = add nsw i32 %19, 1, !dbg !4065
  store i32 %inc, i32* %i, align 4, !dbg !4065
  br label %for.cond, !dbg !4067, !llvm.loop !4068

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4070
}

declare void @ff_kbd_window_init(float*, float, i32) #2

declare void @ff_sine_window_init(float*, i32) #2

declare void @ff_init_ff_sine_windows(i32) #2

declare void @ff_cbrt_tableinit() #2

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !4071 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %saved = alloca float*, align 8
  %swindow = alloca float*, align 8
  %lwindow_prev = alloca float*, align 8
  %swindow_prev = alloca float*, align 8
  %buf = alloca float*, align 8
  %temp = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4072, metadata !2062), !dbg !4073
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4074, metadata !2062), !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !4076, metadata !2062), !dbg !4077
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4078
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4079
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !4077
  call void @llvm.dbg.declare(metadata float** %in, metadata !4080, metadata !2062), !dbg !4081
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4082
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 14, !dbg !4083
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !4082
  store float* %arraydecay, float** %in, align 8, !dbg !4081
  call void @llvm.dbg.declare(metadata float** %out, metadata !4084, metadata !2062), !dbg !4085
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4086
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 21, !dbg !4087
  %3 = load float*, float** %ret, align 32, !dbg !4087
  store float* %3, float** %out, align 8, !dbg !4085
  call void @llvm.dbg.declare(metadata float** %saved, metadata !4088, metadata !2062), !dbg !4089
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4090
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 15, !dbg !4091
  %arraydecay3 = getelementptr inbounds [1536 x float], [1536 x float]* %saved2, i32 0, i32 0, !dbg !4090
  store float* %arraydecay3, float** %saved, align 8, !dbg !4089
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !4092, metadata !2062), !dbg !4093
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4094
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !4095
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !4094
  %6 = load i8, i8* %arrayidx, align 4, !dbg !4094
  %conv = zext i8 %6 to i32, !dbg !4094
  %tobool = icmp ne i32 %conv, 0, !dbg !4094
  %cond = select i1 %tobool, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !4094
  store float* %cond, float** %swindow, align 8, !dbg !4093
  call void @llvm.dbg.declare(metadata float** %lwindow_prev, metadata !4096, metadata !2062), !dbg !4097
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4098
  %use_kb_window4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 2, !dbg !4099
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window4, i64 0, i64 1, !dbg !4098
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4098
  %conv6 = zext i8 %8 to i32, !dbg !4098
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !4098
  %cond8 = select i1 %tobool7, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !4098
  store float* %cond8, float** %lwindow_prev, align 8, !dbg !4097
  call void @llvm.dbg.declare(metadata float** %swindow_prev, metadata !4100, metadata !2062), !dbg !4101
  %9 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4102
  %use_kb_window9 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %9, i32 0, i32 2, !dbg !4103
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window9, i64 0, i64 1, !dbg !4102
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !4102
  %conv11 = zext i8 %10 to i32, !dbg !4102
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !4102
  %cond13 = select i1 %tobool12, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !4102
  store float* %cond13, float** %swindow_prev, align 8, !dbg !4101
  call void @llvm.dbg.declare(metadata float** %buf, metadata !4104, metadata !2062), !dbg !4105
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4106
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 9, !dbg !4107
  %arraydecay14 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !4106
  store float* %arraydecay14, float** %buf, align 8, !dbg !4105
  call void @llvm.dbg.declare(metadata float** %temp, metadata !4108, metadata !2062), !dbg !4109
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4110
  %temp15 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 23, !dbg !4111
  %arraydecay16 = getelementptr inbounds [128 x float], [128 x float]* %temp15, i32 0, i32 0, !dbg !4110
  store float* %arraydecay16, float** %temp, align 8, !dbg !4109
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4112, metadata !2062), !dbg !4113
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4114
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 1, !dbg !4116
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4114
  %14 = load i32, i32* %arrayidx17, align 4, !dbg !4114
  %cmp = icmp eq i32 %14, 2, !dbg !4117
  br i1 %cmp, label %if.then, label %if.else, !dbg !4118

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4119
  br label %for.cond, !dbg !4122

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !4123
  %cmp19 = icmp slt i32 %15, 1024, !dbg !4126
  br i1 %cmp19, label %for.body, label %for.end, !dbg !4127

for.body:                                         ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4128
  %mdct_small = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 11, !dbg !4129
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct_small, i32 0, i32 11, !dbg !4130
  %17 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !4130
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4131
  %mdct_small21 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 11, !dbg !4132
  %19 = load float*, float** %buf, align 8, !dbg !4133
  %20 = load i32, i32* %i, align 4, !dbg !4134
  %idx.ext = sext i32 %20 to i64, !dbg !4135
  %add.ptr = getelementptr inbounds float, float* %19, i64 %idx.ext, !dbg !4135
  %21 = load float*, float** %in, align 8, !dbg !4136
  %22 = load i32, i32* %i, align 4, !dbg !4137
  %idx.ext22 = sext i32 %22 to i64, !dbg !4138
  %add.ptr23 = getelementptr inbounds float, float* %21, i64 %idx.ext22, !dbg !4138
  call void %17(%struct.FFTContext* %mdct_small21, float* %add.ptr, float* %add.ptr23), !dbg !4128
  br label %for.inc, !dbg !4128

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !4139
  %add = add nsw i32 %23, 128, !dbg !4139
  store i32 %add, i32* %i, align 4, !dbg !4139
  br label %for.cond, !dbg !4141, !llvm.loop !4142

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !4144

if.else:                                          ; preds = %entry
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4145
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 10, !dbg !4147
  %imdct_half24 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !4148
  %25 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half24, align 8, !dbg !4148
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4149
  %mdct25 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 10, !dbg !4150
  %27 = load float*, float** %buf, align 8, !dbg !4151
  %28 = load float*, float** %in, align 8, !dbg !4152
  call void %25(%struct.FFTContext* %mdct25, float* %27, float* %28), !dbg !4145
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4153
  %window_sequence26 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 1, !dbg !4155
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence26, i64 0, i64 1, !dbg !4153
  %30 = load i32, i32* %arrayidx27, align 4, !dbg !4153
  %cmp28 = icmp eq i32 %30, 0, !dbg !4156
  br i1 %cmp28, label %land.lhs.true, label %lor.lhs.false, !dbg !4157

lor.lhs.false:                                    ; preds = %if.end
  %31 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4158
  %window_sequence30 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %31, i32 0, i32 1, !dbg !4160
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence30, i64 0, i64 1, !dbg !4158
  %32 = load i32, i32* %arrayidx31, align 4, !dbg !4158
  %cmp32 = icmp eq i32 %32, 3, !dbg !4161
  br i1 %cmp32, label %land.lhs.true, label %if.else44, !dbg !4162

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %33 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4163
  %window_sequence34 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %33, i32 0, i32 1, !dbg !4164
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence34, i64 0, i64 0, !dbg !4163
  %34 = load i32, i32* %arrayidx35, align 4, !dbg !4163
  %cmp36 = icmp eq i32 %34, 0, !dbg !4165
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38, !dbg !4166

lor.lhs.false38:                                  ; preds = %land.lhs.true
  %35 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4167
  %window_sequence39 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %35, i32 0, i32 1, !dbg !4168
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence39, i64 0, i64 0, !dbg !4167
  %36 = load i32, i32* %arrayidx40, align 4, !dbg !4167
  %cmp41 = icmp eq i32 %36, 1, !dbg !4169
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !4170

if.then43:                                        ; preds = %lor.lhs.false38, %land.lhs.true
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4172
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %37, i32 0, i32 17, !dbg !4174
  %38 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !4174
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %38, i32 0, i32 5, !dbg !4175
  %39 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !4175
  %40 = load float*, float** %out, align 8, !dbg !4176
  %41 = load float*, float** %saved, align 8, !dbg !4177
  %42 = load float*, float** %buf, align 8, !dbg !4178
  %43 = load float*, float** %lwindow_prev, align 8, !dbg !4179
  call void %39(float* %40, float* %41, float* %42, float* %43, i32 512), !dbg !4172
  br label %if.end92, !dbg !4180

if.else44:                                        ; preds = %lor.lhs.false38, %lor.lhs.false
  %44 = load float*, float** %out, align 8, !dbg !4181
  %45 = bitcast float* %44 to i8*, !dbg !4183
  %46 = load float*, float** %saved, align 8, !dbg !4184
  %47 = bitcast float* %46 to i8*, !dbg !4183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %47, i64 1792, i32 4, i1 false), !dbg !4183
  %48 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4185
  %window_sequence45 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %48, i32 0, i32 1, !dbg !4187
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence45, i64 0, i64 0, !dbg !4185
  %49 = load i32, i32* %arrayidx46, align 4, !dbg !4185
  %cmp47 = icmp eq i32 %49, 2, !dbg !4188
  br i1 %cmp47, label %if.then49, label %if.else84, !dbg !4189

if.then49:                                        ; preds = %if.else44
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4190
  %fdsp50 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %50, i32 0, i32 17, !dbg !4192
  %51 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp50, align 8, !dbg !4192
  %vector_fmul_window51 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %51, i32 0, i32 5, !dbg !4193
  %52 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window51, align 8, !dbg !4193
  %53 = load float*, float** %out, align 8, !dbg !4194
  %add.ptr52 = getelementptr inbounds float, float* %53, i64 448, !dbg !4195
  %add.ptr53 = getelementptr inbounds float, float* %add.ptr52, i64 0, !dbg !4196
  %54 = load float*, float** %saved, align 8, !dbg !4197
  %add.ptr54 = getelementptr inbounds float, float* %54, i64 448, !dbg !4198
  %55 = load float*, float** %buf, align 8, !dbg !4199
  %add.ptr55 = getelementptr inbounds float, float* %55, i64 0, !dbg !4200
  %56 = load float*, float** %swindow_prev, align 8, !dbg !4201
  call void %52(float* %add.ptr53, float* %add.ptr54, float* %add.ptr55, float* %56, i32 64), !dbg !4190
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4202
  %fdsp56 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 17, !dbg !4203
  %58 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp56, align 8, !dbg !4203
  %vector_fmul_window57 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %58, i32 0, i32 5, !dbg !4204
  %59 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window57, align 8, !dbg !4204
  %60 = load float*, float** %out, align 8, !dbg !4205
  %add.ptr58 = getelementptr inbounds float, float* %60, i64 448, !dbg !4206
  %add.ptr59 = getelementptr inbounds float, float* %add.ptr58, i64 128, !dbg !4207
  %61 = load float*, float** %buf, align 8, !dbg !4208
  %add.ptr60 = getelementptr inbounds float, float* %61, i64 0, !dbg !4209
  %add.ptr61 = getelementptr inbounds float, float* %add.ptr60, i64 64, !dbg !4210
  %62 = load float*, float** %buf, align 8, !dbg !4211
  %add.ptr62 = getelementptr inbounds float, float* %62, i64 128, !dbg !4212
  %63 = load float*, float** %swindow, align 8, !dbg !4213
  call void %59(float* %add.ptr59, float* %add.ptr61, float* %add.ptr62, float* %63, i32 64), !dbg !4202
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4214
  %fdsp63 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 17, !dbg !4215
  %65 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp63, align 8, !dbg !4215
  %vector_fmul_window64 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %65, i32 0, i32 5, !dbg !4216
  %66 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window64, align 8, !dbg !4216
  %67 = load float*, float** %out, align 8, !dbg !4217
  %add.ptr65 = getelementptr inbounds float, float* %67, i64 448, !dbg !4218
  %add.ptr66 = getelementptr inbounds float, float* %add.ptr65, i64 256, !dbg !4219
  %68 = load float*, float** %buf, align 8, !dbg !4220
  %add.ptr67 = getelementptr inbounds float, float* %68, i64 128, !dbg !4221
  %add.ptr68 = getelementptr inbounds float, float* %add.ptr67, i64 64, !dbg !4222
  %69 = load float*, float** %buf, align 8, !dbg !4223
  %add.ptr69 = getelementptr inbounds float, float* %69, i64 256, !dbg !4224
  %70 = load float*, float** %swindow, align 8, !dbg !4225
  call void %66(float* %add.ptr66, float* %add.ptr68, float* %add.ptr69, float* %70, i32 64), !dbg !4214
  %71 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4226
  %fdsp70 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 17, !dbg !4227
  %72 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp70, align 8, !dbg !4227
  %vector_fmul_window71 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %72, i32 0, i32 5, !dbg !4228
  %73 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window71, align 8, !dbg !4228
  %74 = load float*, float** %out, align 8, !dbg !4229
  %add.ptr72 = getelementptr inbounds float, float* %74, i64 448, !dbg !4230
  %add.ptr73 = getelementptr inbounds float, float* %add.ptr72, i64 384, !dbg !4231
  %75 = load float*, float** %buf, align 8, !dbg !4232
  %add.ptr74 = getelementptr inbounds float, float* %75, i64 256, !dbg !4233
  %add.ptr75 = getelementptr inbounds float, float* %add.ptr74, i64 64, !dbg !4234
  %76 = load float*, float** %buf, align 8, !dbg !4235
  %add.ptr76 = getelementptr inbounds float, float* %76, i64 384, !dbg !4236
  %77 = load float*, float** %swindow, align 8, !dbg !4237
  call void %73(float* %add.ptr73, float* %add.ptr75, float* %add.ptr76, float* %77, i32 64), !dbg !4226
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4238
  %fdsp77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 17, !dbg !4239
  %79 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp77, align 8, !dbg !4239
  %vector_fmul_window78 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %79, i32 0, i32 5, !dbg !4240
  %80 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window78, align 8, !dbg !4240
  %81 = load float*, float** %temp, align 8, !dbg !4241
  %82 = load float*, float** %buf, align 8, !dbg !4242
  %add.ptr79 = getelementptr inbounds float, float* %82, i64 384, !dbg !4243
  %add.ptr80 = getelementptr inbounds float, float* %add.ptr79, i64 64, !dbg !4244
  %83 = load float*, float** %buf, align 8, !dbg !4245
  %add.ptr81 = getelementptr inbounds float, float* %83, i64 512, !dbg !4246
  %84 = load float*, float** %swindow, align 8, !dbg !4247
  call void %80(float* %81, float* %add.ptr80, float* %add.ptr81, float* %84, i32 64), !dbg !4238
  %85 = load float*, float** %out, align 8, !dbg !4248
  %add.ptr82 = getelementptr inbounds float, float* %85, i64 448, !dbg !4249
  %add.ptr83 = getelementptr inbounds float, float* %add.ptr82, i64 512, !dbg !4250
  %86 = bitcast float* %add.ptr83 to i8*, !dbg !4251
  %87 = load float*, float** %temp, align 8, !dbg !4252
  %88 = bitcast float* %87 to i8*, !dbg !4251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %88, i64 256, i32 4, i1 false), !dbg !4251
  br label %if.end91, !dbg !4253

if.else84:                                        ; preds = %if.else44
  %89 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4254
  %fdsp85 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %89, i32 0, i32 17, !dbg !4256
  %90 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp85, align 8, !dbg !4256
  %vector_fmul_window86 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %90, i32 0, i32 5, !dbg !4257
  %91 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window86, align 8, !dbg !4257
  %92 = load float*, float** %out, align 8, !dbg !4258
  %add.ptr87 = getelementptr inbounds float, float* %92, i64 448, !dbg !4259
  %93 = load float*, float** %saved, align 8, !dbg !4260
  %add.ptr88 = getelementptr inbounds float, float* %93, i64 448, !dbg !4261
  %94 = load float*, float** %buf, align 8, !dbg !4262
  %95 = load float*, float** %swindow_prev, align 8, !dbg !4263
  call void %91(float* %add.ptr87, float* %add.ptr88, float* %94, float* %95, i32 64), !dbg !4254
  %96 = load float*, float** %out, align 8, !dbg !4264
  %add.ptr89 = getelementptr inbounds float, float* %96, i64 576, !dbg !4265
  %97 = bitcast float* %add.ptr89 to i8*, !dbg !4266
  %98 = load float*, float** %buf, align 8, !dbg !4267
  %add.ptr90 = getelementptr inbounds float, float* %98, i64 64, !dbg !4268
  %99 = bitcast float* %add.ptr90 to i8*, !dbg !4266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %99, i64 1792, i32 4, i1 false), !dbg !4266
  br label %if.end91

if.end91:                                         ; preds = %if.else84, %if.then49
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then43
  %100 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4269
  %window_sequence93 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %100, i32 0, i32 1, !dbg !4271
  %arrayidx94 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence93, i64 0, i64 0, !dbg !4269
  %101 = load i32, i32* %arrayidx94, align 4, !dbg !4269
  %cmp95 = icmp eq i32 %101, 2, !dbg !4272
  br i1 %cmp95, label %if.then97, label %if.else120, !dbg !4273

if.then97:                                        ; preds = %if.end92
  %102 = load float*, float** %saved, align 8, !dbg !4274
  %103 = bitcast float* %102 to i8*, !dbg !4276
  %104 = load float*, float** %temp, align 8, !dbg !4277
  %add.ptr98 = getelementptr inbounds float, float* %104, i64 64, !dbg !4278
  %105 = bitcast float* %add.ptr98 to i8*, !dbg !4276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %105, i64 256, i32 4, i1 false), !dbg !4276
  %106 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4279
  %fdsp99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %106, i32 0, i32 17, !dbg !4280
  %107 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp99, align 8, !dbg !4280
  %vector_fmul_window100 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %107, i32 0, i32 5, !dbg !4281
  %108 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window100, align 8, !dbg !4281
  %109 = load float*, float** %saved, align 8, !dbg !4282
  %add.ptr101 = getelementptr inbounds float, float* %109, i64 64, !dbg !4283
  %110 = load float*, float** %buf, align 8, !dbg !4284
  %add.ptr102 = getelementptr inbounds float, float* %110, i64 512, !dbg !4285
  %add.ptr103 = getelementptr inbounds float, float* %add.ptr102, i64 64, !dbg !4286
  %111 = load float*, float** %buf, align 8, !dbg !4287
  %add.ptr104 = getelementptr inbounds float, float* %111, i64 640, !dbg !4288
  %112 = load float*, float** %swindow, align 8, !dbg !4289
  call void %108(float* %add.ptr101, float* %add.ptr103, float* %add.ptr104, float* %112, i32 64), !dbg !4279
  %113 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4290
  %fdsp105 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %113, i32 0, i32 17, !dbg !4291
  %114 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp105, align 8, !dbg !4291
  %vector_fmul_window106 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %114, i32 0, i32 5, !dbg !4292
  %115 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window106, align 8, !dbg !4292
  %116 = load float*, float** %saved, align 8, !dbg !4293
  %add.ptr107 = getelementptr inbounds float, float* %116, i64 192, !dbg !4294
  %117 = load float*, float** %buf, align 8, !dbg !4295
  %add.ptr108 = getelementptr inbounds float, float* %117, i64 640, !dbg !4296
  %add.ptr109 = getelementptr inbounds float, float* %add.ptr108, i64 64, !dbg !4297
  %118 = load float*, float** %buf, align 8, !dbg !4298
  %add.ptr110 = getelementptr inbounds float, float* %118, i64 768, !dbg !4299
  %119 = load float*, float** %swindow, align 8, !dbg !4300
  call void %115(float* %add.ptr107, float* %add.ptr109, float* %add.ptr110, float* %119, i32 64), !dbg !4290
  %120 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4301
  %fdsp111 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %120, i32 0, i32 17, !dbg !4302
  %121 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp111, align 8, !dbg !4302
  %vector_fmul_window112 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %121, i32 0, i32 5, !dbg !4303
  %122 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window112, align 8, !dbg !4303
  %123 = load float*, float** %saved, align 8, !dbg !4304
  %add.ptr113 = getelementptr inbounds float, float* %123, i64 320, !dbg !4305
  %124 = load float*, float** %buf, align 8, !dbg !4306
  %add.ptr114 = getelementptr inbounds float, float* %124, i64 768, !dbg !4307
  %add.ptr115 = getelementptr inbounds float, float* %add.ptr114, i64 64, !dbg !4308
  %125 = load float*, float** %buf, align 8, !dbg !4309
  %add.ptr116 = getelementptr inbounds float, float* %125, i64 896, !dbg !4310
  %126 = load float*, float** %swindow, align 8, !dbg !4311
  call void %122(float* %add.ptr113, float* %add.ptr115, float* %add.ptr116, float* %126, i32 64), !dbg !4301
  %127 = load float*, float** %saved, align 8, !dbg !4312
  %add.ptr117 = getelementptr inbounds float, float* %127, i64 448, !dbg !4313
  %128 = bitcast float* %add.ptr117 to i8*, !dbg !4314
  %129 = load float*, float** %buf, align 8, !dbg !4315
  %add.ptr118 = getelementptr inbounds float, float* %129, i64 896, !dbg !4316
  %add.ptr119 = getelementptr inbounds float, float* %add.ptr118, i64 64, !dbg !4317
  %130 = bitcast float* %add.ptr119 to i8*, !dbg !4314
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %130, i64 256, i32 4, i1 false), !dbg !4314
  br label %if.end133, !dbg !4318

if.else120:                                       ; preds = %if.end92
  %131 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4319
  %window_sequence121 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %131, i32 0, i32 1, !dbg !4322
  %arrayidx122 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence121, i64 0, i64 0, !dbg !4319
  %132 = load i32, i32* %arrayidx122, align 4, !dbg !4319
  %cmp123 = icmp eq i32 %132, 1, !dbg !4323
  br i1 %cmp123, label %if.then125, label %if.else130, !dbg !4319

if.then125:                                       ; preds = %if.else120
  %133 = load float*, float** %saved, align 8, !dbg !4324
  %134 = bitcast float* %133 to i8*, !dbg !4326
  %135 = load float*, float** %buf, align 8, !dbg !4327
  %add.ptr126 = getelementptr inbounds float, float* %135, i64 512, !dbg !4328
  %136 = bitcast float* %add.ptr126 to i8*, !dbg !4326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %136, i64 1792, i32 4, i1 false), !dbg !4326
  %137 = load float*, float** %saved, align 8, !dbg !4329
  %add.ptr127 = getelementptr inbounds float, float* %137, i64 448, !dbg !4330
  %138 = bitcast float* %add.ptr127 to i8*, !dbg !4331
  %139 = load float*, float** %buf, align 8, !dbg !4332
  %add.ptr128 = getelementptr inbounds float, float* %139, i64 896, !dbg !4333
  %add.ptr129 = getelementptr inbounds float, float* %add.ptr128, i64 64, !dbg !4334
  %140 = bitcast float* %add.ptr129 to i8*, !dbg !4331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %140, i64 256, i32 4, i1 false), !dbg !4331
  br label %if.end132, !dbg !4335

if.else130:                                       ; preds = %if.else120
  %141 = load float*, float** %saved, align 8, !dbg !4336
  %142 = bitcast float* %141 to i8*, !dbg !4338
  %143 = load float*, float** %buf, align 8, !dbg !4339
  %add.ptr131 = getelementptr inbounds float, float* %143, i64 512, !dbg !4340
  %144 = bitcast float* %add.ptr131 to i8*, !dbg !4338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %144, i64 2048, i32 4, i1 false), !dbg !4338
  br label %if.end132

if.end132:                                        ; preds = %if.else130, %if.then125
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then97
  ret void, !dbg !4341
}

; Function Attrs: nounwind uwtable
define internal void @apply_ltp(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !4342 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ltp = alloca %struct.LongTermPrediction*, align 8
  %offsets = alloca i16*, align 8
  %i = alloca i32, align 4
  %sfb = alloca i32, align 4
  %predTime = alloca float*, align 8
  %predFreq = alloca float*, align 8
  %num_samples = alloca i16, align 2
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4343, metadata !2062), !dbg !4344
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4345, metadata !2062), !dbg !4346
  call void @llvm.dbg.declare(metadata %struct.LongTermPrediction** %ltp, metadata !4347, metadata !2062), !dbg !4350
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4351
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4352
  %ltp1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 5, !dbg !4353
  store %struct.LongTermPrediction* %ltp1, %struct.LongTermPrediction** %ltp, align 8, !dbg !4350
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !4354, metadata !2062), !dbg !4355
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4356
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !4357
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 6, !dbg !4358
  %2 = load i16*, i16** %swb_offset, align 16, !dbg !4358
  store i16* %2, i16** %offsets, align 8, !dbg !4355
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4359, metadata !2062), !dbg !4360
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !4361, metadata !2062), !dbg !4362
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4363
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 0, !dbg !4365
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 1, !dbg !4366
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4363
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4363
  %cmp = icmp ne i32 %4, 2, !dbg !4367
  br i1 %cmp, label %if.then, label %if.end67, !dbg !4368

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %predTime, metadata !4369, metadata !2062), !dbg !4371
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4372
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 21, !dbg !4373
  %6 = load float*, float** %ret, align 32, !dbg !4373
  store float* %6, float** %predTime, align 8, !dbg !4371
  call void @llvm.dbg.declare(metadata float** %predFreq, metadata !4374, metadata !2062), !dbg !4375
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4376
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 9, !dbg !4377
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !4376
  store float* %arraydecay, float** %predFreq, align 8, !dbg !4375
  call void @llvm.dbg.declare(metadata i16* %num_samples, metadata !4378, metadata !2062), !dbg !4379
  store i16 2048, i16* %num_samples, align 2, !dbg !4379
  %8 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4380
  %lag = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %8, i32 0, i32 1, !dbg !4382
  %9 = load i16, i16* %lag, align 2, !dbg !4382
  %conv = sext i16 %9 to i32, !dbg !4380
  %cmp4 = icmp slt i32 %conv, 1024, !dbg !4383
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !4384

if.then6:                                         ; preds = %if.then
  %10 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4385
  %lag7 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %10, i32 0, i32 1, !dbg !4386
  %11 = load i16, i16* %lag7, align 2, !dbg !4386
  %conv8 = sext i16 %11 to i32, !dbg !4385
  %add = add nsw i32 %conv8, 1024, !dbg !4387
  %conv9 = trunc i32 %add to i16, !dbg !4385
  store i16 %conv9, i16* %num_samples, align 2, !dbg !4388
  br label %if.end, !dbg !4389

if.end:                                           ; preds = %if.then6, %if.then
  store i32 0, i32* %i, align 4, !dbg !4390
  br label %for.cond, !dbg !4392

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !4393
  %13 = load i16, i16* %num_samples, align 2, !dbg !4396
  %conv10 = sext i16 %13 to i32, !dbg !4396
  %cmp11 = icmp slt i32 %12, %conv10, !dbg !4397
  br i1 %cmp11, label %for.body, label %for.end, !dbg !4398

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !4399
  %add13 = add nsw i32 %14, 2048, !dbg !4400
  %15 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4401
  %lag14 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %15, i32 0, i32 1, !dbg !4402
  %16 = load i16, i16* %lag14, align 2, !dbg !4402
  %conv15 = sext i16 %16 to i32, !dbg !4401
  %sub = sub nsw i32 %add13, %conv15, !dbg !4403
  %idxprom = sext i32 %sub to i64, !dbg !4404
  %17 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4404
  %ltp_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %17, i32 0, i32 17, !dbg !4405
  %arrayidx16 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state, i64 0, i64 %idxprom, !dbg !4404
  %18 = load float, float* %arrayidx16, align 4, !dbg !4404
  %19 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4406
  %coef = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %19, i32 0, i32 3, !dbg !4407
  %20 = load float, float* %coef, align 4, !dbg !4407
  %mul = fmul float %18, %20, !dbg !4408
  %21 = load i32, i32* %i, align 4, !dbg !4409
  %idxprom17 = sext i32 %21 to i64, !dbg !4410
  %22 = load float*, float** %predTime, align 8, !dbg !4410
  %arrayidx18 = getelementptr inbounds float, float* %22, i64 %idxprom17, !dbg !4410
  store float %mul, float* %arrayidx18, align 4, !dbg !4411
  br label %for.inc, !dbg !4410

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !4412
  %inc = add nsw i32 %23, 1, !dbg !4412
  store i32 %inc, i32* %i, align 4, !dbg !4412
  br label %for.cond, !dbg !4414, !llvm.loop !4415

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !4417
  %idxprom19 = sext i32 %24 to i64, !dbg !4418
  %25 = load float*, float** %predTime, align 8, !dbg !4418
  %arrayidx20 = getelementptr inbounds float, float* %25, i64 %idxprom19, !dbg !4418
  %26 = bitcast float* %arrayidx20 to i8*, !dbg !4419
  %27 = load i32, i32* %i, align 4, !dbg !4420
  %sub21 = sub nsw i32 2048, %27, !dbg !4421
  %conv22 = sext i32 %sub21 to i64, !dbg !4422
  %mul23 = mul i64 %conv22, 4, !dbg !4423
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %mul23, i32 4, i1 false), !dbg !4419
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4424
  %windowing_and_mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 31, !dbg !4425
  %29 = load void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)** %windowing_and_mdct_ltp, align 8, !dbg !4425
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4426
  %31 = load float*, float** %predFreq, align 8, !dbg !4427
  %32 = load float*, float** %predTime, align 8, !dbg !4428
  %33 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4429
  %ics24 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %33, i32 0, i32 0, !dbg !4430
  call void %29(%struct.AACContext* %30, float* %31, float* %32, %struct.IndividualChannelStream* %ics24), !dbg !4424
  %34 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4431
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %34, i32 0, i32 1, !dbg !4433
  %present = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns, i32 0, i32 0, !dbg !4434
  %35 = load i32, i32* %present, align 16, !dbg !4434
  %tobool = icmp ne i32 %35, 0, !dbg !4431
  br i1 %tobool, label %if.then25, label %if.end28, !dbg !4435

if.then25:                                        ; preds = %for.end
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4436
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 30, !dbg !4437
  %37 = load void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !4437
  %38 = load float*, float** %predFreq, align 8, !dbg !4438
  %39 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4439
  %tns26 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %39, i32 0, i32 1, !dbg !4440
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4441
  %ics27 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 0, !dbg !4442
  call void %37(float* %38, %struct.TemporalNoiseShaping* %tns26, %struct.IndividualChannelStream* %ics27, i32 0), !dbg !4436
  br label %if.end28, !dbg !4436

if.end28:                                         ; preds = %if.then25, %for.end
  store i32 0, i32* %sfb, align 4, !dbg !4443
  br label %for.cond29, !dbg !4445

for.cond29:                                       ; preds = %for.inc64, %if.end28
  %41 = load i32, i32* %sfb, align 4, !dbg !4446
  %42 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4449
  %ics30 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %42, i32 0, i32 0, !dbg !4450
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics30, i32 0, i32 0, !dbg !4451
  %43 = load i8, i8* %max_sfb, align 32, !dbg !4451
  %conv31 = zext i8 %43 to i32, !dbg !4452
  %cmp32 = icmp sgt i32 %conv31, 40, !dbg !4453
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !4452

cond.true:                                        ; preds = %for.cond29
  br label %cond.end, !dbg !4454

cond.false:                                       ; preds = %for.cond29
  %44 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4456
  %ics34 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %44, i32 0, i32 0, !dbg !4458
  %max_sfb35 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics34, i32 0, i32 0, !dbg !4459
  %45 = load i8, i8* %max_sfb35, align 32, !dbg !4459
  %conv36 = zext i8 %45 to i32, !dbg !4460
  br label %cond.end, !dbg !4461

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 40, %cond.true ], [ %conv36, %cond.false ], !dbg !4462
  %cmp37 = icmp slt i32 %41, %cond, !dbg !4464
  br i1 %cmp37, label %for.body39, label %for.end66, !dbg !4465

for.body39:                                       ; preds = %cond.end
  %46 = load i32, i32* %sfb, align 4, !dbg !4466
  %idxprom40 = sext i32 %46 to i64, !dbg !4468
  %47 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp, align 8, !dbg !4468
  %used = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %47, i32 0, i32 4, !dbg !4469
  %arrayidx41 = getelementptr inbounds [40 x i8], [40 x i8]* %used, i64 0, i64 %idxprom40, !dbg !4468
  %48 = load i8, i8* %arrayidx41, align 1, !dbg !4468
  %tobool42 = icmp ne i8 %48, 0, !dbg !4468
  br i1 %tobool42, label %if.then43, label %if.end63, !dbg !4470

if.then43:                                        ; preds = %for.body39
  %49 = load i32, i32* %sfb, align 4, !dbg !4471
  %idxprom44 = sext i32 %49 to i64, !dbg !4473
  %50 = load i16*, i16** %offsets, align 8, !dbg !4473
  %arrayidx45 = getelementptr inbounds i16, i16* %50, i64 %idxprom44, !dbg !4473
  %51 = load i16, i16* %arrayidx45, align 2, !dbg !4473
  %conv46 = zext i16 %51 to i32, !dbg !4473
  store i32 %conv46, i32* %i, align 4, !dbg !4474
  br label %for.cond47, !dbg !4475

for.cond47:                                       ; preds = %for.inc60, %if.then43
  %52 = load i32, i32* %i, align 4, !dbg !4476
  %53 = load i32, i32* %sfb, align 4, !dbg !4479
  %add48 = add nsw i32 %53, 1, !dbg !4480
  %idxprom49 = sext i32 %add48 to i64, !dbg !4481
  %54 = load i16*, i16** %offsets, align 8, !dbg !4481
  %arrayidx50 = getelementptr inbounds i16, i16* %54, i64 %idxprom49, !dbg !4481
  %55 = load i16, i16* %arrayidx50, align 2, !dbg !4481
  %conv51 = zext i16 %55 to i32, !dbg !4481
  %cmp52 = icmp slt i32 %52, %conv51, !dbg !4482
  br i1 %cmp52, label %for.body54, label %for.end62, !dbg !4483

for.body54:                                       ; preds = %for.cond47
  %56 = load i32, i32* %i, align 4, !dbg !4484
  %idxprom55 = sext i32 %56 to i64, !dbg !4485
  %57 = load float*, float** %predFreq, align 8, !dbg !4485
  %arrayidx56 = getelementptr inbounds float, float* %57, i64 %idxprom55, !dbg !4485
  %58 = load float, float* %arrayidx56, align 4, !dbg !4485
  %59 = load i32, i32* %i, align 4, !dbg !4486
  %idxprom57 = sext i32 %59 to i64, !dbg !4487
  %60 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4487
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %60, i32 0, i32 14, !dbg !4488
  %arrayidx58 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom57, !dbg !4487
  %61 = load float, float* %arrayidx58, align 4, !dbg !4489
  %add59 = fadd float %61, %58, !dbg !4489
  store float %add59, float* %arrayidx58, align 4, !dbg !4489
  br label %for.inc60, !dbg !4487

for.inc60:                                        ; preds = %for.body54
  %62 = load i32, i32* %i, align 4, !dbg !4490
  %inc61 = add nsw i32 %62, 1, !dbg !4490
  store i32 %inc61, i32* %i, align 4, !dbg !4490
  br label %for.cond47, !dbg !4492, !llvm.loop !4493

for.end62:                                        ; preds = %for.cond47
  br label %if.end63, !dbg !4495

if.end63:                                         ; preds = %for.end62, %for.body39
  br label %for.inc64, !dbg !4497

for.inc64:                                        ; preds = %if.end63
  %63 = load i32, i32* %sfb, align 4, !dbg !4499
  %inc65 = add nsw i32 %63, 1, !dbg !4499
  store i32 %inc65, i32* %sfb, align 4, !dbg !4499
  br label %for.cond29, !dbg !4501, !llvm.loop !4502

for.end66:                                        ; preds = %cond.end
  br label %if.end67, !dbg !4504

if.end67:                                         ; preds = %for.end66, %entry
  ret void, !dbg !4505
}

; Function Attrs: nounwind uwtable
define internal void @apply_tns(float* %coef_param, %struct.TemporalNoiseShaping* %tns, %struct.IndividualChannelStream* %ics, i32 %decode) #1 !dbg !4506 {
entry:
  %coef_param.addr = alloca float*, align 8
  %tns.addr = alloca %struct.TemporalNoiseShaping*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %decode.addr = alloca i32, align 4
  %mmm = alloca i32, align 4
  %w = alloca i32, align 4
  %filt = alloca i32, align 4
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %bottom = alloca i32, align 4
  %top = alloca i32, align 4
  %order = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %size = alloca i32, align 4
  %inc = alloca i32, align 4
  %lpc = alloca [20 x float], align 16
  %tmp = alloca [21 x float], align 16
  %coef = alloca float*, align 8
  store float* %coef_param, float** %coef_param.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coef_param.addr, metadata !4507, metadata !2062), !dbg !4508
  store %struct.TemporalNoiseShaping* %tns, %struct.TemporalNoiseShaping** %tns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns.addr, metadata !4509, metadata !2062), !dbg !4510
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !4511, metadata !2062), !dbg !4512
  store i32 %decode, i32* %decode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %decode.addr, metadata !4513, metadata !2062), !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %mmm, metadata !4515, metadata !2062), !dbg !4516
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4517
  %tns_max_bands = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 10, !dbg !4518
  %1 = load i32, i32* %tns_max_bands, align 8, !dbg !4518
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4519
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 0, !dbg !4520
  %3 = load i8, i8* %max_sfb, align 8, !dbg !4520
  %conv = zext i8 %3 to i32, !dbg !4521
  %cmp = icmp sgt i32 %1, %conv, !dbg !4522
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4523

cond.true:                                        ; preds = %entry
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4524
  %max_sfb2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 0, !dbg !4526
  %5 = load i8, i8* %max_sfb2, align 8, !dbg !4526
  %conv3 = zext i8 %5 to i32, !dbg !4527
  br label %cond.end, !dbg !4528

cond.false:                                       ; preds = %entry
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4529
  %tns_max_bands4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 10, !dbg !4531
  %7 = load i32, i32* %tns_max_bands4, align 8, !dbg !4531
  br label %cond.end, !dbg !4532

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %7, %cond.false ], !dbg !4533
  store i32 %cond, i32* %mmm, align 4, !dbg !4535
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4536, metadata !2062), !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %filt, metadata !4538, metadata !2062), !dbg !4539
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4540, metadata !2062), !dbg !4541
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4542, metadata !2062), !dbg !4543
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !4544, metadata !2062), !dbg !4545
  call void @llvm.dbg.declare(metadata i32* %top, metadata !4546, metadata !2062), !dbg !4547
  call void @llvm.dbg.declare(metadata i32* %order, metadata !4548, metadata !2062), !dbg !4549
  call void @llvm.dbg.declare(metadata i32* %start, metadata !4550, metadata !2062), !dbg !4551
  call void @llvm.dbg.declare(metadata i32* %end, metadata !4552, metadata !2062), !dbg !4553
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4554, metadata !2062), !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !4556, metadata !2062), !dbg !4557
  call void @llvm.dbg.declare(metadata [20 x float]* %lpc, metadata !4558, metadata !2062), !dbg !4561
  call void @llvm.dbg.declare(metadata [21 x float]* %tmp, metadata !4562, metadata !2062), !dbg !4566
  call void @llvm.dbg.declare(metadata float** %coef, metadata !4567, metadata !2062), !dbg !4569
  %8 = load float*, float** %coef_param.addr, align 8, !dbg !4570
  store float* %8, float** %coef, align 8, !dbg !4569
  store i32 0, i32* %w, align 4, !dbg !4571
  br label %for.cond, !dbg !4573

for.cond:                                         ; preds = %for.inc153, %cond.end
  %9 = load i32, i32* %w, align 4, !dbg !4574
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4577
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 9, !dbg !4578
  %11 = load i32, i32* %num_windows, align 4, !dbg !4578
  %cmp6 = icmp slt i32 %9, %11, !dbg !4579
  br i1 %cmp6, label %for.body, label %for.end155, !dbg !4580

for.body:                                         ; preds = %for.cond
  %12 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4581
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %12, i32 0, i32 8, !dbg !4583
  %13 = load i32, i32* %num_swb, align 8, !dbg !4583
  store i32 %13, i32* %bottom, align 4, !dbg !4584
  store i32 0, i32* %filt, align 4, !dbg !4585
  br label %for.cond8, !dbg !4587

for.cond8:                                        ; preds = %for.inc150, %for.body
  %14 = load i32, i32* %filt, align 4, !dbg !4588
  %15 = load i32, i32* %w, align 4, !dbg !4591
  %idxprom = sext i32 %15 to i64, !dbg !4592
  %16 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4592
  %n_filt = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %16, i32 0, i32 1, !dbg !4593
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt, i64 0, i64 %idxprom, !dbg !4592
  %17 = load i32, i32* %arrayidx, align 4, !dbg !4592
  %cmp9 = icmp slt i32 %14, %17, !dbg !4594
  br i1 %cmp9, label %for.body11, label %for.end152, !dbg !4595

for.body11:                                       ; preds = %for.cond8
  %18 = load i32, i32* %bottom, align 4, !dbg !4596
  store i32 %18, i32* %top, align 4, !dbg !4598
  %19 = load i32, i32* %top, align 4, !dbg !4599
  %20 = load i32, i32* %filt, align 4, !dbg !4600
  %idxprom12 = sext i32 %20 to i64, !dbg !4601
  %21 = load i32, i32* %w, align 4, !dbg !4602
  %idxprom13 = sext i32 %21 to i64, !dbg !4601
  %22 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4601
  %length = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %22, i32 0, i32 2, !dbg !4603
  %arrayidx14 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length, i64 0, i64 %idxprom13, !dbg !4601
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !4601
  %23 = load i32, i32* %arrayidx15, align 4, !dbg !4601
  %sub = sub nsw i32 %19, %23, !dbg !4604
  %cmp16 = icmp sgt i32 0, %sub, !dbg !4605
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !4606

cond.true18:                                      ; preds = %for.body11
  br label %cond.end26, !dbg !4607

cond.false19:                                     ; preds = %for.body11
  %24 = load i32, i32* %top, align 4, !dbg !4609
  %25 = load i32, i32* %filt, align 4, !dbg !4611
  %idxprom20 = sext i32 %25 to i64, !dbg !4612
  %26 = load i32, i32* %w, align 4, !dbg !4613
  %idxprom21 = sext i32 %26 to i64, !dbg !4612
  %27 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4612
  %length22 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %27, i32 0, i32 2, !dbg !4614
  %arrayidx23 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length22, i64 0, i64 %idxprom21, !dbg !4612
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx23, i64 0, i64 %idxprom20, !dbg !4612
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !4612
  %sub25 = sub nsw i32 %24, %28, !dbg !4615
  br label %cond.end26, !dbg !4616

cond.end26:                                       ; preds = %cond.false19, %cond.true18
  %cond27 = phi i32 [ 0, %cond.true18 ], [ %sub25, %cond.false19 ], !dbg !4617
  store i32 %cond27, i32* %bottom, align 4, !dbg !4619
  %29 = load i32, i32* %filt, align 4, !dbg !4620
  %idxprom28 = sext i32 %29 to i64, !dbg !4621
  %30 = load i32, i32* %w, align 4, !dbg !4622
  %idxprom29 = sext i32 %30 to i64, !dbg !4621
  %31 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4621
  %order30 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %31, i32 0, i32 4, !dbg !4623
  %arrayidx31 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order30, i64 0, i64 %idxprom29, !dbg !4621
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx31, i64 0, i64 %idxprom28, !dbg !4621
  %32 = load i32, i32* %arrayidx32, align 4, !dbg !4621
  store i32 %32, i32* %order, align 4, !dbg !4624
  %33 = load i32, i32* %order, align 4, !dbg !4625
  %cmp33 = icmp eq i32 %33, 0, !dbg !4627
  br i1 %cmp33, label %if.then, label %if.end, !dbg !4628

if.then:                                          ; preds = %cond.end26
  br label %for.inc150, !dbg !4629

if.end:                                           ; preds = %cond.end26
  %34 = load i32, i32* %filt, align 4, !dbg !4630
  %idxprom35 = sext i32 %34 to i64, !dbg !4631
  %35 = load i32, i32* %w, align 4, !dbg !4632
  %idxprom36 = sext i32 %35 to i64, !dbg !4631
  %36 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4631
  %coef37 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %36, i32 0, i32 6, !dbg !4633
  %arrayidx38 = getelementptr inbounds [8 x [4 x [20 x float]]], [8 x [4 x [20 x float]]]* %coef37, i64 0, i64 %idxprom36, !dbg !4631
  %arrayidx39 = getelementptr inbounds [4 x [20 x float]], [4 x [20 x float]]* %arrayidx38, i64 0, i64 %idxprom35, !dbg !4631
  %arraydecay = getelementptr inbounds [20 x float], [20 x float]* %arrayidx39, i32 0, i32 0, !dbg !4631
  %37 = load i32, i32* %order, align 4, !dbg !4634
  %arraydecay40 = getelementptr inbounds [20 x float], [20 x float]* %lpc, i32 0, i32 0, !dbg !4635
  %call = call i32 @compute_lpc_coefs(float* %arraydecay, i32 %37, float* %arraydecay40, i32 0, i32 0, i32 0), !dbg !4636
  %38 = load i32, i32* %bottom, align 4, !dbg !4637
  %39 = load i32, i32* %mmm, align 4, !dbg !4638
  %cmp41 = icmp sgt i32 %38, %39, !dbg !4639
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !4640

cond.true43:                                      ; preds = %if.end
  %40 = load i32, i32* %mmm, align 4, !dbg !4641
  br label %cond.end45, !dbg !4642

cond.false44:                                     ; preds = %if.end
  %41 = load i32, i32* %bottom, align 4, !dbg !4643
  br label %cond.end45, !dbg !4644

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i32 [ %40, %cond.true43 ], [ %41, %cond.false44 ], !dbg !4645
  %idxprom47 = sext i32 %cond46 to i64, !dbg !4646
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4646
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 6, !dbg !4647
  %43 = load i16*, i16** %swb_offset, align 8, !dbg !4647
  %arrayidx48 = getelementptr inbounds i16, i16* %43, i64 %idxprom47, !dbg !4646
  %44 = load i16, i16* %arrayidx48, align 2, !dbg !4646
  %conv49 = zext i16 %44 to i32, !dbg !4646
  store i32 %conv49, i32* %start, align 4, !dbg !4648
  %45 = load i32, i32* %top, align 4, !dbg !4649
  %46 = load i32, i32* %mmm, align 4, !dbg !4650
  %cmp50 = icmp sgt i32 %45, %46, !dbg !4651
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !4652

cond.true52:                                      ; preds = %cond.end45
  %47 = load i32, i32* %mmm, align 4, !dbg !4653
  br label %cond.end54, !dbg !4654

cond.false53:                                     ; preds = %cond.end45
  %48 = load i32, i32* %top, align 4, !dbg !4655
  br label %cond.end54, !dbg !4656

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %47, %cond.true52 ], [ %48, %cond.false53 ], !dbg !4657
  %idxprom56 = sext i32 %cond55 to i64, !dbg !4658
  %49 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4658
  %swb_offset57 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %49, i32 0, i32 6, !dbg !4659
  %50 = load i16*, i16** %swb_offset57, align 8, !dbg !4659
  %arrayidx58 = getelementptr inbounds i16, i16* %50, i64 %idxprom56, !dbg !4658
  %51 = load i16, i16* %arrayidx58, align 2, !dbg !4658
  %conv59 = zext i16 %51 to i32, !dbg !4658
  store i32 %conv59, i32* %end, align 4, !dbg !4660
  %52 = load i32, i32* %end, align 4, !dbg !4661
  %53 = load i32, i32* %start, align 4, !dbg !4663
  %sub60 = sub nsw i32 %52, %53, !dbg !4664
  store i32 %sub60, i32* %size, align 4, !dbg !4665
  %cmp61 = icmp sle i32 %sub60, 0, !dbg !4666
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4667

if.then63:                                        ; preds = %cond.end54
  br label %for.inc150, !dbg !4668

if.end64:                                         ; preds = %cond.end54
  %54 = load i32, i32* %filt, align 4, !dbg !4669
  %idxprom65 = sext i32 %54 to i64, !dbg !4671
  %55 = load i32, i32* %w, align 4, !dbg !4672
  %idxprom66 = sext i32 %55 to i64, !dbg !4671
  %56 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !4671
  %direction = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %56, i32 0, i32 3, !dbg !4673
  %arrayidx67 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %direction, i64 0, i64 %idxprom66, !dbg !4671
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !4671
  %57 = load i32, i32* %arrayidx68, align 4, !dbg !4671
  %tobool = icmp ne i32 %57, 0, !dbg !4671
  br i1 %tobool, label %if.then69, label %if.else, !dbg !4674

if.then69:                                        ; preds = %if.end64
  store i32 -1, i32* %inc, align 4, !dbg !4675
  %58 = load i32, i32* %end, align 4, !dbg !4677
  %sub70 = sub nsw i32 %58, 1, !dbg !4678
  store i32 %sub70, i32* %start, align 4, !dbg !4679
  br label %if.end71, !dbg !4680

if.else:                                          ; preds = %if.end64
  store i32 1, i32* %inc, align 4, !dbg !4681
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then69
  %59 = load i32, i32* %w, align 4, !dbg !4683
  %mul = mul nsw i32 %59, 128, !dbg !4684
  %60 = load i32, i32* %start, align 4, !dbg !4685
  %add = add nsw i32 %60, %mul, !dbg !4685
  store i32 %add, i32* %start, align 4, !dbg !4685
  %61 = load i32, i32* %decode.addr, align 4, !dbg !4686
  %tobool72 = icmp ne i32 %61, 0, !dbg !4686
  br i1 %tobool72, label %if.then73, label %if.else104, !dbg !4688

if.then73:                                        ; preds = %if.end71
  store i32 0, i32* %m, align 4, !dbg !4689
  br label %for.cond74, !dbg !4692

for.cond74:                                       ; preds = %for.inc100, %if.then73
  %62 = load i32, i32* %m, align 4, !dbg !4693
  %63 = load i32, i32* %size, align 4, !dbg !4696
  %cmp75 = icmp slt i32 %62, %63, !dbg !4697
  br i1 %cmp75, label %for.body77, label %for.end103, !dbg !4698

for.body77:                                       ; preds = %for.cond74
  store i32 1, i32* %i, align 4, !dbg !4699
  br label %for.cond78, !dbg !4701

for.cond78:                                       ; preds = %for.inc, %for.body77
  %64 = load i32, i32* %i, align 4, !dbg !4702
  %65 = load i32, i32* %m, align 4, !dbg !4705
  %66 = load i32, i32* %order, align 4, !dbg !4706
  %cmp79 = icmp sgt i32 %65, %66, !dbg !4707
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !4708

cond.true81:                                      ; preds = %for.cond78
  %67 = load i32, i32* %order, align 4, !dbg !4709
  br label %cond.end83, !dbg !4711

cond.false82:                                     ; preds = %for.cond78
  %68 = load i32, i32* %m, align 4, !dbg !4712
  br label %cond.end83, !dbg !4714

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ %67, %cond.true81 ], [ %68, %cond.false82 ], !dbg !4715
  %cmp85 = icmp sle i32 %64, %cond84, !dbg !4717
  br i1 %cmp85, label %for.body87, label %for.end, !dbg !4718

for.body87:                                       ; preds = %cond.end83
  %69 = load i32, i32* %start, align 4, !dbg !4719
  %70 = load i32, i32* %i, align 4, !dbg !4720
  %71 = load i32, i32* %inc, align 4, !dbg !4721
  %mul88 = mul nsw i32 %70, %71, !dbg !4722
  %sub89 = sub nsw i32 %69, %mul88, !dbg !4723
  %idxprom90 = sext i32 %sub89 to i64, !dbg !4724
  %72 = load float*, float** %coef, align 8, !dbg !4724
  %arrayidx91 = getelementptr inbounds float, float* %72, i64 %idxprom90, !dbg !4724
  %73 = load float, float* %arrayidx91, align 4, !dbg !4724
  %74 = load i32, i32* %i, align 4, !dbg !4725
  %sub92 = sub nsw i32 %74, 1, !dbg !4726
  %idxprom93 = sext i32 %sub92 to i64, !dbg !4727
  %arrayidx94 = getelementptr inbounds [20 x float], [20 x float]* %lpc, i64 0, i64 %idxprom93, !dbg !4727
  %75 = load float, float* %arrayidx94, align 4, !dbg !4727
  %mul95 = fmul float %73, %75, !dbg !4728
  %76 = load i32, i32* %start, align 4, !dbg !4729
  %idxprom96 = sext i32 %76 to i64, !dbg !4730
  %77 = load float*, float** %coef, align 8, !dbg !4730
  %arrayidx97 = getelementptr inbounds float, float* %77, i64 %idxprom96, !dbg !4730
  %78 = load float, float* %arrayidx97, align 4, !dbg !4731
  %sub98 = fsub float %78, %mul95, !dbg !4731
  store float %sub98, float* %arrayidx97, align 4, !dbg !4731
  br label %for.inc, !dbg !4730

for.inc:                                          ; preds = %for.body87
  %79 = load i32, i32* %i, align 4, !dbg !4732
  %inc99 = add nsw i32 %79, 1, !dbg !4732
  store i32 %inc99, i32* %i, align 4, !dbg !4732
  br label %for.cond78, !dbg !4734, !llvm.loop !4735

for.end:                                          ; preds = %cond.end83
  br label %for.inc100, !dbg !4737

for.inc100:                                       ; preds = %for.end
  %80 = load i32, i32* %m, align 4, !dbg !4739
  %inc101 = add nsw i32 %80, 1, !dbg !4739
  store i32 %inc101, i32* %m, align 4, !dbg !4739
  %81 = load i32, i32* %inc, align 4, !dbg !4741
  %82 = load i32, i32* %start, align 4, !dbg !4742
  %add102 = add nsw i32 %82, %81, !dbg !4742
  store i32 %add102, i32* %start, align 4, !dbg !4742
  br label %for.cond74, !dbg !4743, !llvm.loop !4744

for.end103:                                       ; preds = %for.cond74
  br label %if.end149, !dbg !4746

if.else104:                                       ; preds = %if.end71
  store i32 0, i32* %m, align 4, !dbg !4747
  br label %for.cond105, !dbg !4750

for.cond105:                                      ; preds = %for.inc145, %if.else104
  %83 = load i32, i32* %m, align 4, !dbg !4751
  %84 = load i32, i32* %size, align 4, !dbg !4754
  %cmp106 = icmp slt i32 %83, %84, !dbg !4755
  br i1 %cmp106, label %for.body108, label %for.end148, !dbg !4756

for.body108:                                      ; preds = %for.cond105
  %85 = load i32, i32* %start, align 4, !dbg !4757
  %idxprom109 = sext i32 %85 to i64, !dbg !4759
  %86 = load float*, float** %coef, align 8, !dbg !4759
  %arrayidx110 = getelementptr inbounds float, float* %86, i64 %idxprom109, !dbg !4759
  %87 = load float, float* %arrayidx110, align 4, !dbg !4759
  %arrayidx111 = getelementptr inbounds [21 x float], [21 x float]* %tmp, i64 0, i64 0, !dbg !4760
  store float %87, float* %arrayidx111, align 16, !dbg !4761
  store i32 1, i32* %i, align 4, !dbg !4762
  br label %for.cond112, !dbg !4764

for.cond112:                                      ; preds = %for.inc131, %for.body108
  %88 = load i32, i32* %i, align 4, !dbg !4765
  %89 = load i32, i32* %m, align 4, !dbg !4768
  %90 = load i32, i32* %order, align 4, !dbg !4769
  %cmp113 = icmp sgt i32 %89, %90, !dbg !4770
  br i1 %cmp113, label %cond.true115, label %cond.false116, !dbg !4771

cond.true115:                                     ; preds = %for.cond112
  %91 = load i32, i32* %order, align 4, !dbg !4772
  br label %cond.end117, !dbg !4774

cond.false116:                                    ; preds = %for.cond112
  %92 = load i32, i32* %m, align 4, !dbg !4775
  br label %cond.end117, !dbg !4777

cond.end117:                                      ; preds = %cond.false116, %cond.true115
  %cond118 = phi i32 [ %91, %cond.true115 ], [ %92, %cond.false116 ], !dbg !4778
  %cmp119 = icmp sle i32 %88, %cond118, !dbg !4780
  br i1 %cmp119, label %for.body121, label %for.end133, !dbg !4781

for.body121:                                      ; preds = %cond.end117
  %93 = load i32, i32* %i, align 4, !dbg !4782
  %idxprom122 = sext i32 %93 to i64, !dbg !4783
  %arrayidx123 = getelementptr inbounds [21 x float], [21 x float]* %tmp, i64 0, i64 %idxprom122, !dbg !4783
  %94 = load float, float* %arrayidx123, align 4, !dbg !4783
  %95 = load i32, i32* %i, align 4, !dbg !4784
  %sub124 = sub nsw i32 %95, 1, !dbg !4785
  %idxprom125 = sext i32 %sub124 to i64, !dbg !4786
  %arrayidx126 = getelementptr inbounds [20 x float], [20 x float]* %lpc, i64 0, i64 %idxprom125, !dbg !4786
  %96 = load float, float* %arrayidx126, align 4, !dbg !4786
  %mul127 = fmul float %94, %96, !dbg !4787
  %97 = load i32, i32* %start, align 4, !dbg !4788
  %idxprom128 = sext i32 %97 to i64, !dbg !4789
  %98 = load float*, float** %coef, align 8, !dbg !4789
  %arrayidx129 = getelementptr inbounds float, float* %98, i64 %idxprom128, !dbg !4789
  %99 = load float, float* %arrayidx129, align 4, !dbg !4790
  %add130 = fadd float %99, %mul127, !dbg !4790
  store float %add130, float* %arrayidx129, align 4, !dbg !4790
  br label %for.inc131, !dbg !4789

for.inc131:                                       ; preds = %for.body121
  %100 = load i32, i32* %i, align 4, !dbg !4791
  %inc132 = add nsw i32 %100, 1, !dbg !4791
  store i32 %inc132, i32* %i, align 4, !dbg !4791
  br label %for.cond112, !dbg !4793, !llvm.loop !4794

for.end133:                                       ; preds = %cond.end117
  %101 = load i32, i32* %order, align 4, !dbg !4796
  store i32 %101, i32* %i, align 4, !dbg !4798
  br label %for.cond134, !dbg !4799

for.cond134:                                      ; preds = %for.inc143, %for.end133
  %102 = load i32, i32* %i, align 4, !dbg !4800
  %cmp135 = icmp sgt i32 %102, 0, !dbg !4803
  br i1 %cmp135, label %for.body137, label %for.end144, !dbg !4804

for.body137:                                      ; preds = %for.cond134
  %103 = load i32, i32* %i, align 4, !dbg !4805
  %sub138 = sub nsw i32 %103, 1, !dbg !4806
  %idxprom139 = sext i32 %sub138 to i64, !dbg !4807
  %arrayidx140 = getelementptr inbounds [21 x float], [21 x float]* %tmp, i64 0, i64 %idxprom139, !dbg !4807
  %104 = load float, float* %arrayidx140, align 4, !dbg !4807
  %105 = load i32, i32* %i, align 4, !dbg !4808
  %idxprom141 = sext i32 %105 to i64, !dbg !4809
  %arrayidx142 = getelementptr inbounds [21 x float], [21 x float]* %tmp, i64 0, i64 %idxprom141, !dbg !4809
  store float %104, float* %arrayidx142, align 4, !dbg !4810
  br label %for.inc143, !dbg !4809

for.inc143:                                       ; preds = %for.body137
  %106 = load i32, i32* %i, align 4, !dbg !4811
  %dec = add nsw i32 %106, -1, !dbg !4811
  store i32 %dec, i32* %i, align 4, !dbg !4811
  br label %for.cond134, !dbg !4813, !llvm.loop !4814

for.end144:                                       ; preds = %for.cond134
  br label %for.inc145, !dbg !4816

for.inc145:                                       ; preds = %for.end144
  %107 = load i32, i32* %m, align 4, !dbg !4817
  %inc146 = add nsw i32 %107, 1, !dbg !4817
  store i32 %inc146, i32* %m, align 4, !dbg !4817
  %108 = load i32, i32* %inc, align 4, !dbg !4819
  %109 = load i32, i32* %start, align 4, !dbg !4820
  %add147 = add nsw i32 %109, %108, !dbg !4820
  store i32 %add147, i32* %start, align 4, !dbg !4820
  br label %for.cond105, !dbg !4821, !llvm.loop !4822

for.end148:                                       ; preds = %for.cond105
  br label %if.end149

if.end149:                                        ; preds = %for.end148, %for.end103
  br label %for.inc150, !dbg !4824

for.inc150:                                       ; preds = %if.end149, %if.then63, %if.then
  %110 = load i32, i32* %filt, align 4, !dbg !4825
  %inc151 = add nsw i32 %110, 1, !dbg !4825
  store i32 %inc151, i32* %filt, align 4, !dbg !4825
  br label %for.cond8, !dbg !4827, !llvm.loop !4828

for.end152:                                       ; preds = %for.cond8
  br label %for.inc153, !dbg !4830

for.inc153:                                       ; preds = %for.end152
  %111 = load i32, i32* %w, align 4, !dbg !4831
  %inc154 = add nsw i32 %111, 1, !dbg !4831
  store i32 %inc154, i32* %w, align 4, !dbg !4831
  br label %for.cond, !dbg !4833, !llvm.loop !4834

for.end155:                                       ; preds = %for.cond
  ret void, !dbg !4836
}

; Function Attrs: nounwind uwtable
define internal void @windowing_and_mdct_ltp(%struct.AACContext* %ac, float* %out, float* %in, %struct.IndividualChannelStream* %ics) #1 !dbg !4837 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %out.addr = alloca float*, align 8
  %in.addr = alloca float*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %lwindow = alloca float*, align 8
  %swindow = alloca float*, align 8
  %lwindow_prev = alloca float*, align 8
  %swindow_prev = alloca float*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4838, metadata !2062), !dbg !4839
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !4840, metadata !2062), !dbg !4841
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4842, metadata !2062), !dbg !4843
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !4844, metadata !2062), !dbg !4845
  call void @llvm.dbg.declare(metadata float** %lwindow, metadata !4846, metadata !2062), !dbg !4847
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4848
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 2, !dbg !4849
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !4848
  %1 = load i8, i8* %arrayidx, align 4, !dbg !4848
  %conv = zext i8 %1 to i32, !dbg !4848
  %tobool = icmp ne i32 %conv, 0, !dbg !4848
  %cond = select i1 %tobool, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !4848
  store float* %cond, float** %lwindow, align 8, !dbg !4847
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !4850, metadata !2062), !dbg !4851
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4852
  %use_kb_window1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 2, !dbg !4853
  %arrayidx2 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window1, i64 0, i64 0, !dbg !4852
  %3 = load i8, i8* %arrayidx2, align 4, !dbg !4852
  %conv3 = zext i8 %3 to i32, !dbg !4852
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !4852
  %cond5 = select i1 %tobool4, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !4852
  store float* %cond5, float** %swindow, align 8, !dbg !4851
  call void @llvm.dbg.declare(metadata float** %lwindow_prev, metadata !4854, metadata !2062), !dbg !4855
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4856
  %use_kb_window6 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 2, !dbg !4857
  %arrayidx7 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window6, i64 0, i64 1, !dbg !4856
  %5 = load i8, i8* %arrayidx7, align 1, !dbg !4856
  %conv8 = zext i8 %5 to i32, !dbg !4856
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !4856
  %cond10 = select i1 %tobool9, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !4856
  store float* %cond10, float** %lwindow_prev, align 8, !dbg !4855
  call void @llvm.dbg.declare(metadata float** %swindow_prev, metadata !4858, metadata !2062), !dbg !4859
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4860
  %use_kb_window11 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 2, !dbg !4861
  %arrayidx12 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window11, i64 0, i64 1, !dbg !4860
  %7 = load i8, i8* %arrayidx12, align 1, !dbg !4860
  %conv13 = zext i8 %7 to i32, !dbg !4860
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !4860
  %cond15 = select i1 %tobool14, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !4860
  store float* %cond15, float** %swindow_prev, align 8, !dbg !4859
  %8 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4862
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %8, i32 0, i32 1, !dbg !4864
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4862
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !4862
  %cmp = icmp ne i32 %9, 3, !dbg !4865
  br i1 %cmp, label %if.then, label %if.else, !dbg !4866

if.then:                                          ; preds = %entry
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4867
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 17, !dbg !4869
  %11 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !4869
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %11, i32 0, i32 0, !dbg !4870
  %12 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !4870
  %13 = load float*, float** %in.addr, align 8, !dbg !4871
  %14 = load float*, float** %in.addr, align 8, !dbg !4872
  %15 = load float*, float** %lwindow_prev, align 8, !dbg !4873
  call void %12(float* %13, float* %14, float* %15, i32 1024), !dbg !4867
  br label %if.end, !dbg !4874

if.else:                                          ; preds = %entry
  %16 = load float*, float** %in.addr, align 8, !dbg !4875
  %17 = bitcast float* %16 to i8*, !dbg !4877
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 1792, i32 4, i1 false), !dbg !4877
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4878
  %fdsp18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 17, !dbg !4879
  %19 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp18, align 8, !dbg !4879
  %vector_fmul19 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %19, i32 0, i32 0, !dbg !4880
  %20 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul19, align 8, !dbg !4880
  %21 = load float*, float** %in.addr, align 8, !dbg !4881
  %add.ptr = getelementptr inbounds float, float* %21, i64 448, !dbg !4882
  %22 = load float*, float** %in.addr, align 8, !dbg !4883
  %add.ptr20 = getelementptr inbounds float, float* %22, i64 448, !dbg !4884
  %23 = load float*, float** %swindow_prev, align 8, !dbg !4885
  call void %20(float* %add.ptr, float* %add.ptr20, float* %23, i32 128), !dbg !4878
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !4886
  %window_sequence21 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %24, i32 0, i32 1, !dbg !4888
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence21, i64 0, i64 0, !dbg !4886
  %25 = load i32, i32* %arrayidx22, align 4, !dbg !4886
  %cmp23 = icmp ne i32 %25, 1, !dbg !4889
  br i1 %cmp23, label %if.then25, label %if.else29, !dbg !4890

if.then25:                                        ; preds = %if.end
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4891
  %fdsp26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 17, !dbg !4893
  %27 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp26, align 8, !dbg !4893
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %27, i32 0, i32 7, !dbg !4894
  %28 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !4894
  %29 = load float*, float** %in.addr, align 8, !dbg !4895
  %add.ptr27 = getelementptr inbounds float, float* %29, i64 1024, !dbg !4896
  %30 = load float*, float** %in.addr, align 8, !dbg !4897
  %add.ptr28 = getelementptr inbounds float, float* %30, i64 1024, !dbg !4898
  %31 = load float*, float** %lwindow, align 8, !dbg !4899
  call void %28(float* %add.ptr27, float* %add.ptr28, float* %31, i32 1024), !dbg !4891
  br label %if.end38, !dbg !4900

if.else29:                                        ; preds = %if.end
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4901
  %fdsp30 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %32, i32 0, i32 17, !dbg !4903
  %33 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp30, align 8, !dbg !4903
  %vector_fmul_reverse31 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %33, i32 0, i32 7, !dbg !4904
  %34 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse31, align 8, !dbg !4904
  %35 = load float*, float** %in.addr, align 8, !dbg !4905
  %add.ptr32 = getelementptr inbounds float, float* %35, i64 1024, !dbg !4906
  %add.ptr33 = getelementptr inbounds float, float* %add.ptr32, i64 448, !dbg !4907
  %36 = load float*, float** %in.addr, align 8, !dbg !4908
  %add.ptr34 = getelementptr inbounds float, float* %36, i64 1024, !dbg !4909
  %add.ptr35 = getelementptr inbounds float, float* %add.ptr34, i64 448, !dbg !4910
  %37 = load float*, float** %swindow, align 8, !dbg !4911
  call void %34(float* %add.ptr33, float* %add.ptr35, float* %37, i32 128), !dbg !4901
  %38 = load float*, float** %in.addr, align 8, !dbg !4912
  %add.ptr36 = getelementptr inbounds float, float* %38, i64 1024, !dbg !4913
  %add.ptr37 = getelementptr inbounds float, float* %add.ptr36, i64 576, !dbg !4914
  %39 = bitcast float* %add.ptr37 to i8*, !dbg !4915
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 1792, i32 4, i1 false), !dbg !4915
  br label %if.end38

if.end38:                                         ; preds = %if.else29, %if.then25
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4916
  %mdct_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 13, !dbg !4917
  %mdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct_ltp, i32 0, i32 12, !dbg !4918
  %41 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %mdct_calc, align 16, !dbg !4918
  %42 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4919
  %mdct_ltp39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %42, i32 0, i32 13, !dbg !4920
  %43 = load float*, float** %out.addr, align 8, !dbg !4921
  %44 = load float*, float** %in.addr, align 8, !dbg !4922
  call void %41(%struct.FFTContext* %mdct_ltp39, float* %43, float* %44), !dbg !4916
  ret void, !dbg !4923
}

; Function Attrs: nounwind uwtable
define internal void @update_ltp(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !4924 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %saved = alloca float*, align 8
  %saved_ltp = alloca float*, align 8
  %lwindow = alloca float*, align 8
  %swindow = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4925, metadata !2062), !dbg !4926
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4927, metadata !2062), !dbg !4928
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !4929, metadata !2062), !dbg !4930
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4931
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4932
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !4930
  call void @llvm.dbg.declare(metadata float** %saved, metadata !4933, metadata !2062), !dbg !4934
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4935
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 15, !dbg !4936
  %arraydecay = getelementptr inbounds [1536 x float], [1536 x float]* %saved2, i32 0, i32 0, !dbg !4935
  store float* %arraydecay, float** %saved, align 8, !dbg !4934
  call void @llvm.dbg.declare(metadata float** %saved_ltp, metadata !4937, metadata !2062), !dbg !4938
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4939
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 14, !dbg !4940
  %arraydecay3 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !4939
  store float* %arraydecay3, float** %saved_ltp, align 8, !dbg !4938
  call void @llvm.dbg.declare(metadata float** %lwindow, metadata !4941, metadata !2062), !dbg !4942
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4943
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 2, !dbg !4944
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !4943
  %4 = load i8, i8* %arrayidx, align 4, !dbg !4943
  %conv = zext i8 %4 to i32, !dbg !4943
  %tobool = icmp ne i32 %conv, 0, !dbg !4943
  %cond = select i1 %tobool, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !4943
  store float* %cond, float** %lwindow, align 8, !dbg !4942
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !4945, metadata !2062), !dbg !4946
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4947
  %use_kb_window4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !4948
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window4, i64 0, i64 0, !dbg !4947
  %6 = load i8, i8* %arrayidx5, align 4, !dbg !4947
  %conv6 = zext i8 %6 to i32, !dbg !4947
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !4947
  %cond8 = select i1 %tobool7, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !4947
  store float* %cond8, float** %swindow, align 8, !dbg !4946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4949, metadata !2062), !dbg !4950
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4951
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 1, !dbg !4953
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !4951
  %8 = load i32, i32* %arrayidx9, align 4, !dbg !4951
  %cmp = icmp eq i32 %8, 2, !dbg !4954
  br i1 %cmp, label %if.then, label %if.else, !dbg !4955

if.then:                                          ; preds = %entry
  %9 = load float*, float** %saved_ltp, align 8, !dbg !4956
  %10 = bitcast float* %9 to i8*, !dbg !4958
  %11 = load float*, float** %saved, align 8, !dbg !4959
  %12 = bitcast float* %11 to i8*, !dbg !4958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %12, i64 2048, i32 4, i1 false), !dbg !4958
  %13 = load float*, float** %saved_ltp, align 8, !dbg !4960
  %add.ptr = getelementptr inbounds float, float* %13, i64 576, !dbg !4961
  %14 = bitcast float* %add.ptr to i8*, !dbg !4962
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 1792, i32 4, i1 false), !dbg !4962
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4963
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 17, !dbg !4964
  %16 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !4964
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %16, i32 0, i32 7, !dbg !4965
  %17 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !4965
  %18 = load float*, float** %saved_ltp, align 8, !dbg !4966
  %add.ptr11 = getelementptr inbounds float, float* %18, i64 448, !dbg !4967
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4968
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 9, !dbg !4969
  %arraydecay12 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !4968
  %add.ptr13 = getelementptr inbounds float, float* %arraydecay12, i64 960, !dbg !4970
  %20 = load float*, float** %swindow, align 8, !dbg !4971
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 64, !dbg !4971
  call void %17(float* %add.ptr11, float* %add.ptr13, float* %arrayidx14, i32 64), !dbg !4963
  store i32 0, i32* %i, align 4, !dbg !4972
  br label %for.cond, !dbg !4974

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !4975
  %cmp15 = icmp slt i32 %21, 64, !dbg !4978
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4979

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %i, align 4, !dbg !4980
  %sub = sub nsw i32 1023, %22, !dbg !4981
  %idxprom = sext i32 %sub to i64, !dbg !4982
  %23 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4982
  %buf_mdct17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 9, !dbg !4983
  %arrayidx18 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct17, i64 0, i64 %idxprom, !dbg !4982
  %24 = load float, float* %arrayidx18, align 4, !dbg !4982
  %25 = load i32, i32* %i, align 4, !dbg !4984
  %sub19 = sub nsw i32 63, %25, !dbg !4985
  %idxprom20 = sext i32 %sub19 to i64, !dbg !4986
  %26 = load float*, float** %swindow, align 8, !dbg !4986
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 %idxprom20, !dbg !4986
  %27 = load float, float* %arrayidx21, align 4, !dbg !4986
  %mul = fmul float %24, %27, !dbg !4987
  %28 = load i32, i32* %i, align 4, !dbg !4988
  %add = add nsw i32 %28, 512, !dbg !4989
  %idxprom22 = sext i32 %add to i64, !dbg !4990
  %29 = load float*, float** %saved_ltp, align 8, !dbg !4990
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 %idxprom22, !dbg !4990
  store float %mul, float* %arrayidx23, align 4, !dbg !4991
  br label %for.inc, !dbg !4990

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !4992
  %inc = add nsw i32 %30, 1, !dbg !4992
  store i32 %inc, i32* %i, align 4, !dbg !4992
  br label %for.cond, !dbg !4994, !llvm.loop !4995

for.end:                                          ; preds = %for.cond
  br label %if.end83, !dbg !4997

if.else:                                          ; preds = %entry
  %31 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4998
  %window_sequence24 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %31, i32 0, i32 1, !dbg !5001
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence24, i64 0, i64 0, !dbg !4998
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !4998
  %cmp26 = icmp eq i32 %32, 1, !dbg !5002
  br i1 %cmp26, label %if.then28, label %if.else58, !dbg !4998

if.then28:                                        ; preds = %if.else
  %33 = load float*, float** %saved_ltp, align 8, !dbg !5003
  %34 = bitcast float* %33 to i8*, !dbg !5005
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5006
  %buf_mdct29 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 9, !dbg !5007
  %arraydecay30 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct29, i32 0, i32 0, !dbg !5006
  %add.ptr31 = getelementptr inbounds float, float* %arraydecay30, i64 512, !dbg !5008
  %36 = bitcast float* %add.ptr31 to i8*, !dbg !5005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %36, i64 1792, i32 4, i1 false), !dbg !5005
  %37 = load float*, float** %saved_ltp, align 8, !dbg !5009
  %add.ptr32 = getelementptr inbounds float, float* %37, i64 576, !dbg !5010
  %38 = bitcast float* %add.ptr32 to i8*, !dbg !5011
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 1792, i32 4, i1 false), !dbg !5011
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5012
  %fdsp33 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 17, !dbg !5013
  %40 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp33, align 8, !dbg !5013
  %vector_fmul_reverse34 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %40, i32 0, i32 7, !dbg !5014
  %41 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse34, align 8, !dbg !5014
  %42 = load float*, float** %saved_ltp, align 8, !dbg !5015
  %add.ptr35 = getelementptr inbounds float, float* %42, i64 448, !dbg !5016
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5017
  %buf_mdct36 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 9, !dbg !5018
  %arraydecay37 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct36, i32 0, i32 0, !dbg !5017
  %add.ptr38 = getelementptr inbounds float, float* %arraydecay37, i64 960, !dbg !5019
  %44 = load float*, float** %swindow, align 8, !dbg !5020
  %arrayidx39 = getelementptr inbounds float, float* %44, i64 64, !dbg !5020
  call void %41(float* %add.ptr35, float* %add.ptr38, float* %arrayidx39, i32 64), !dbg !5012
  store i32 0, i32* %i, align 4, !dbg !5021
  br label %for.cond40, !dbg !5023

for.cond40:                                       ; preds = %for.inc55, %if.then28
  %45 = load i32, i32* %i, align 4, !dbg !5024
  %cmp41 = icmp slt i32 %45, 64, !dbg !5027
  br i1 %cmp41, label %for.body43, label %for.end57, !dbg !5028

for.body43:                                       ; preds = %for.cond40
  %46 = load i32, i32* %i, align 4, !dbg !5029
  %sub44 = sub nsw i32 1023, %46, !dbg !5030
  %idxprom45 = sext i32 %sub44 to i64, !dbg !5031
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5031
  %buf_mdct46 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %47, i32 0, i32 9, !dbg !5032
  %arrayidx47 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct46, i64 0, i64 %idxprom45, !dbg !5031
  %48 = load float, float* %arrayidx47, align 4, !dbg !5031
  %49 = load i32, i32* %i, align 4, !dbg !5033
  %sub48 = sub nsw i32 63, %49, !dbg !5034
  %idxprom49 = sext i32 %sub48 to i64, !dbg !5035
  %50 = load float*, float** %swindow, align 8, !dbg !5035
  %arrayidx50 = getelementptr inbounds float, float* %50, i64 %idxprom49, !dbg !5035
  %51 = load float, float* %arrayidx50, align 4, !dbg !5035
  %mul51 = fmul float %48, %51, !dbg !5036
  %52 = load i32, i32* %i, align 4, !dbg !5037
  %add52 = add nsw i32 %52, 512, !dbg !5038
  %idxprom53 = sext i32 %add52 to i64, !dbg !5039
  %53 = load float*, float** %saved_ltp, align 8, !dbg !5039
  %arrayidx54 = getelementptr inbounds float, float* %53, i64 %idxprom53, !dbg !5039
  store float %mul51, float* %arrayidx54, align 4, !dbg !5040
  br label %for.inc55, !dbg !5039

for.inc55:                                        ; preds = %for.body43
  %54 = load i32, i32* %i, align 4, !dbg !5041
  %inc56 = add nsw i32 %54, 1, !dbg !5041
  store i32 %inc56, i32* %i, align 4, !dbg !5041
  br label %for.cond40, !dbg !5043, !llvm.loop !5044

for.end57:                                        ; preds = %for.cond40
  br label %if.end, !dbg !5046

if.else58:                                        ; preds = %if.else
  %55 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5047
  %fdsp59 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %55, i32 0, i32 17, !dbg !5049
  %56 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp59, align 8, !dbg !5049
  %vector_fmul_reverse60 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %56, i32 0, i32 7, !dbg !5050
  %57 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse60, align 8, !dbg !5050
  %58 = load float*, float** %saved_ltp, align 8, !dbg !5051
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5052
  %buf_mdct61 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 9, !dbg !5053
  %arraydecay62 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct61, i32 0, i32 0, !dbg !5052
  %add.ptr63 = getelementptr inbounds float, float* %arraydecay62, i64 512, !dbg !5054
  %60 = load float*, float** %lwindow, align 8, !dbg !5055
  %arrayidx64 = getelementptr inbounds float, float* %60, i64 512, !dbg !5055
  call void %57(float* %58, float* %add.ptr63, float* %arrayidx64, i32 512), !dbg !5047
  store i32 0, i32* %i, align 4, !dbg !5056
  br label %for.cond65, !dbg !5058

for.cond65:                                       ; preds = %for.inc80, %if.else58
  %61 = load i32, i32* %i, align 4, !dbg !5059
  %cmp66 = icmp slt i32 %61, 512, !dbg !5062
  br i1 %cmp66, label %for.body68, label %for.end82, !dbg !5063

for.body68:                                       ; preds = %for.cond65
  %62 = load i32, i32* %i, align 4, !dbg !5064
  %sub69 = sub nsw i32 1023, %62, !dbg !5065
  %idxprom70 = sext i32 %sub69 to i64, !dbg !5066
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5066
  %buf_mdct71 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 9, !dbg !5067
  %arrayidx72 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct71, i64 0, i64 %idxprom70, !dbg !5066
  %64 = load float, float* %arrayidx72, align 4, !dbg !5066
  %65 = load i32, i32* %i, align 4, !dbg !5068
  %sub73 = sub nsw i32 511, %65, !dbg !5069
  %idxprom74 = sext i32 %sub73 to i64, !dbg !5070
  %66 = load float*, float** %lwindow, align 8, !dbg !5070
  %arrayidx75 = getelementptr inbounds float, float* %66, i64 %idxprom74, !dbg !5070
  %67 = load float, float* %arrayidx75, align 4, !dbg !5070
  %mul76 = fmul float %64, %67, !dbg !5071
  %68 = load i32, i32* %i, align 4, !dbg !5072
  %add77 = add nsw i32 %68, 512, !dbg !5073
  %idxprom78 = sext i32 %add77 to i64, !dbg !5074
  %69 = load float*, float** %saved_ltp, align 8, !dbg !5074
  %arrayidx79 = getelementptr inbounds float, float* %69, i64 %idxprom78, !dbg !5074
  store float %mul76, float* %arrayidx79, align 4, !dbg !5075
  br label %for.inc80, !dbg !5074

for.inc80:                                        ; preds = %for.body68
  %70 = load i32, i32* %i, align 4, !dbg !5076
  %inc81 = add nsw i32 %70, 1, !dbg !5076
  store i32 %inc81, i32* %i, align 4, !dbg !5076
  br label %for.cond65, !dbg !5078, !llvm.loop !5079

for.end82:                                        ; preds = %for.cond65
  br label %if.end

if.end:                                           ; preds = %for.end82, %for.end57
  br label %if.end83

if.end83:                                         ; preds = %if.end, %for.end
  %71 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !5081
  %ltp_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %71, i32 0, i32 17, !dbg !5082
  %arraydecay84 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state, i32 0, i32 0, !dbg !5083
  %72 = bitcast float* %arraydecay84 to i8*, !dbg !5083
  %73 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !5084
  %ltp_state85 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %73, i32 0, i32 17, !dbg !5085
  %arraydecay86 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state85, i32 0, i32 0, !dbg !5084
  %add.ptr87 = getelementptr inbounds float, float* %arraydecay86, i64 1024, !dbg !5086
  %74 = bitcast float* %add.ptr87 to i8*, !dbg !5083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %74, i64 4096, i32 4, i1 false), !dbg !5083
  %75 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !5087
  %ltp_state88 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %75, i32 0, i32 17, !dbg !5088
  %arraydecay89 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state88, i32 0, i32 0, !dbg !5087
  %add.ptr90 = getelementptr inbounds float, float* %arraydecay89, i64 1024, !dbg !5089
  %76 = bitcast float* %add.ptr90 to i8*, !dbg !5090
  %77 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !5091
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %77, i32 0, i32 21, !dbg !5092
  %78 = load float*, float** %ret, align 32, !dbg !5092
  %79 = bitcast float* %78 to i8*, !dbg !5090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %79, i64 4096, i32 4, i1 false), !dbg !5090
  %80 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !5093
  %ltp_state91 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %80, i32 0, i32 17, !dbg !5094
  %arraydecay92 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state91, i32 0, i32 0, !dbg !5093
  %add.ptr93 = getelementptr inbounds float, float* %arraydecay92, i64 2048, !dbg !5095
  %81 = bitcast float* %add.ptr93 to i8*, !dbg !5096
  %82 = load float*, float** %saved_ltp, align 8, !dbg !5097
  %83 = bitcast float* %82 to i8*, !dbg !5096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %83, i64 4096, i32 4, i1 false), !dbg !5096
  ret void, !dbg !5098
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @compute_lpc_coefs(float* %autoc, i32 %max_order, float* %lpc, i32 %lpc_stride, i32 %fail, i32 %normalize) #4 !dbg !5099 {
entry:
  %retval = alloca i32, align 4
  %autoc.addr = alloca float*, align 8
  %max_order.addr = alloca i32, align 4
  %lpc.addr = alloca float*, align 8
  %lpc_stride.addr = alloca i32, align 4
  %fail.addr = alloca i32, align 4
  %normalize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %err = alloca float, align 4
  %lpc_last = alloca float*, align 8
  %r = alloca float, align 4
  %f = alloca float, align 4
  %b = alloca float, align 4
  store float* %autoc, float** %autoc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %autoc.addr, metadata !5106, metadata !2062), !dbg !5107
  store i32 %max_order, i32* %max_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_order.addr, metadata !5108, metadata !2062), !dbg !5109
  store float* %lpc, float** %lpc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lpc.addr, metadata !5110, metadata !2062), !dbg !5111
  store i32 %lpc_stride, i32* %lpc_stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lpc_stride.addr, metadata !5112, metadata !2062), !dbg !5113
  store i32 %fail, i32* %fail.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fail.addr, metadata !5114, metadata !2062), !dbg !5115
  store i32 %normalize, i32* %normalize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalize.addr, metadata !5116, metadata !2062), !dbg !5117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5118, metadata !2062), !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5120, metadata !2062), !dbg !5121
  call void @llvm.dbg.declare(metadata float* %err, metadata !5122, metadata !2062), !dbg !5123
  store float 0.000000e+00, float* %err, align 4, !dbg !5123
  call void @llvm.dbg.declare(metadata float** %lpc_last, metadata !5124, metadata !2062), !dbg !5125
  %0 = load float*, float** %lpc.addr, align 8, !dbg !5126
  store float* %0, float** %lpc_last, align 8, !dbg !5125
  %1 = load i32, i32* %normalize.addr, align 4, !dbg !5127
  %tobool = icmp ne i32 %1, 0, !dbg !5127
  br i1 %tobool, label %if.then, label %if.end, !dbg !5129

if.then:                                          ; preds = %entry
  %2 = load float*, float** %autoc.addr, align 8, !dbg !5130
  %incdec.ptr = getelementptr inbounds float, float* %2, i32 1, !dbg !5130
  store float* %incdec.ptr, float** %autoc.addr, align 8, !dbg !5130
  %3 = load float, float* %2, align 4, !dbg !5131
  store float %3, float* %err, align 4, !dbg !5132
  br label %if.end, !dbg !5133

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fail.addr, align 4, !dbg !5134
  %tobool1 = icmp ne i32 %4, 0, !dbg !5134
  br i1 %tobool1, label %land.lhs.true, label %if.end4, !dbg !5136

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %max_order.addr, align 4, !dbg !5137
  %sub = sub nsw i32 %5, 1, !dbg !5139
  %idxprom = sext i32 %sub to i64, !dbg !5140
  %6 = load float*, float** %autoc.addr, align 8, !dbg !5140
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !5140
  %7 = load float, float* %arrayidx, align 4, !dbg !5140
  %cmp = fcmp oeq float %7, 0.000000e+00, !dbg !5141
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !5142

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load float, float* %err, align 4, !dbg !5143
  %cmp2 = fcmp ole float %8, 0.000000e+00, !dbg !5145
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5146

if.then3:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !5147
  br label %return, !dbg !5147

if.end4:                                          ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %i, align 4, !dbg !5148
  br label %for.cond, !dbg !5150

for.cond:                                         ; preds = %for.inc54, %if.end4
  %9 = load i32, i32* %i, align 4, !dbg !5151
  %10 = load i32, i32* %max_order.addr, align 4, !dbg !5154
  %cmp5 = icmp slt i32 %9, %10, !dbg !5155
  br i1 %cmp5, label %for.body, label %for.end56, !dbg !5156

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %r, metadata !5157, metadata !2062), !dbg !5159
  %11 = load i32, i32* %i, align 4, !dbg !5160
  %idxprom6 = sext i32 %11 to i64, !dbg !5161
  %12 = load float*, float** %autoc.addr, align 8, !dbg !5161
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 %idxprom6, !dbg !5161
  %13 = load float, float* %arrayidx7, align 4, !dbg !5161
  %sub8 = fsub float -0.000000e+00, %13, !dbg !5162
  store float %sub8, float* %r, align 4, !dbg !5159
  %14 = load i32, i32* %normalize.addr, align 4, !dbg !5163
  %tobool9 = icmp ne i32 %14, 0, !dbg !5163
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !5165

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !5166
  br label %for.cond11, !dbg !5169

for.cond11:                                       ; preds = %for.inc, %if.then10
  %15 = load i32, i32* %j, align 4, !dbg !5170
  %16 = load i32, i32* %i, align 4, !dbg !5173
  %cmp12 = icmp slt i32 %15, %16, !dbg !5174
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !5175

for.body13:                                       ; preds = %for.cond11
  %17 = load i32, i32* %j, align 4, !dbg !5176
  %idxprom14 = sext i32 %17 to i64, !dbg !5177
  %18 = load float*, float** %lpc_last, align 8, !dbg !5177
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 %idxprom14, !dbg !5177
  %19 = load float, float* %arrayidx15, align 4, !dbg !5177
  %20 = load i32, i32* %i, align 4, !dbg !5178
  %21 = load i32, i32* %j, align 4, !dbg !5179
  %sub16 = sub nsw i32 %20, %21, !dbg !5180
  %sub17 = sub nsw i32 %sub16, 1, !dbg !5181
  %idxprom18 = sext i32 %sub17 to i64, !dbg !5182
  %22 = load float*, float** %autoc.addr, align 8, !dbg !5182
  %arrayidx19 = getelementptr inbounds float, float* %22, i64 %idxprom18, !dbg !5182
  %23 = load float, float* %arrayidx19, align 4, !dbg !5182
  %mul = fmul float %19, %23, !dbg !5183
  %24 = load float, float* %r, align 4, !dbg !5184
  %sub20 = fsub float %24, %mul, !dbg !5184
  store float %sub20, float* %r, align 4, !dbg !5184
  br label %for.inc, !dbg !5185

for.inc:                                          ; preds = %for.body13
  %25 = load i32, i32* %j, align 4, !dbg !5186
  %inc = add nsw i32 %25, 1, !dbg !5186
  store i32 %inc, i32* %j, align 4, !dbg !5186
  br label %for.cond11, !dbg !5188, !llvm.loop !5189

for.end:                                          ; preds = %for.cond11
  %26 = load float, float* %err, align 4, !dbg !5191
  %27 = load float, float* %r, align 4, !dbg !5192
  %div = fdiv float %27, %26, !dbg !5192
  store float %div, float* %r, align 4, !dbg !5192
  %28 = load float, float* %r, align 4, !dbg !5193
  %29 = load float, float* %r, align 4, !dbg !5194
  %mul21 = fmul float %28, %29, !dbg !5195
  %sub22 = fsub float 1.000000e+00, %mul21, !dbg !5196
  %30 = load float, float* %err, align 4, !dbg !5197
  %mul23 = fmul float %30, %sub22, !dbg !5197
  store float %mul23, float* %err, align 4, !dbg !5197
  br label %if.end24, !dbg !5198

if.end24:                                         ; preds = %for.end, %for.body
  %31 = load float, float* %r, align 4, !dbg !5199
  %32 = load i32, i32* %i, align 4, !dbg !5200
  %idxprom25 = sext i32 %32 to i64, !dbg !5201
  %33 = load float*, float** %lpc.addr, align 8, !dbg !5201
  %arrayidx26 = getelementptr inbounds float, float* %33, i64 %idxprom25, !dbg !5201
  store float %31, float* %arrayidx26, align 4, !dbg !5202
  store i32 0, i32* %j, align 4, !dbg !5203
  br label %for.cond27, !dbg !5205

for.cond27:                                       ; preds = %for.inc46, %if.end24
  %34 = load i32, i32* %j, align 4, !dbg !5206
  %35 = load i32, i32* %i, align 4, !dbg !5209
  %add = add nsw i32 %35, 1, !dbg !5210
  %shr = ashr i32 %add, 1, !dbg !5211
  %cmp28 = icmp slt i32 %34, %shr, !dbg !5212
  br i1 %cmp28, label %for.body29, label %for.end48, !dbg !5213

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata float* %f, metadata !5214, metadata !2062), !dbg !5216
  %36 = load i32, i32* %j, align 4, !dbg !5217
  %idxprom30 = sext i32 %36 to i64, !dbg !5218
  %37 = load float*, float** %lpc_last, align 8, !dbg !5218
  %arrayidx31 = getelementptr inbounds float, float* %37, i64 %idxprom30, !dbg !5218
  %38 = load float, float* %arrayidx31, align 4, !dbg !5218
  store float %38, float* %f, align 4, !dbg !5216
  call void @llvm.dbg.declare(metadata float* %b, metadata !5219, metadata !2062), !dbg !5220
  %39 = load i32, i32* %i, align 4, !dbg !5221
  %sub32 = sub nsw i32 %39, 1, !dbg !5222
  %40 = load i32, i32* %j, align 4, !dbg !5223
  %sub33 = sub nsw i32 %sub32, %40, !dbg !5224
  %idxprom34 = sext i32 %sub33 to i64, !dbg !5225
  %41 = load float*, float** %lpc_last, align 8, !dbg !5225
  %arrayidx35 = getelementptr inbounds float, float* %41, i64 %idxprom34, !dbg !5225
  %42 = load float, float* %arrayidx35, align 4, !dbg !5225
  store float %42, float* %b, align 4, !dbg !5220
  %43 = load float, float* %f, align 4, !dbg !5226
  %44 = load float, float* %r, align 4, !dbg !5227
  %45 = load float, float* %b, align 4, !dbg !5228
  %mul36 = fmul float %44, %45, !dbg !5229
  %add37 = fadd float %43, %mul36, !dbg !5230
  %46 = load i32, i32* %j, align 4, !dbg !5231
  %idxprom38 = sext i32 %46 to i64, !dbg !5232
  %47 = load float*, float** %lpc.addr, align 8, !dbg !5232
  %arrayidx39 = getelementptr inbounds float, float* %47, i64 %idxprom38, !dbg !5232
  store float %add37, float* %arrayidx39, align 4, !dbg !5233
  %48 = load float, float* %b, align 4, !dbg !5234
  %49 = load float, float* %r, align 4, !dbg !5235
  %50 = load float, float* %f, align 4, !dbg !5236
  %mul40 = fmul float %49, %50, !dbg !5237
  %add41 = fadd float %48, %mul40, !dbg !5238
  %51 = load i32, i32* %i, align 4, !dbg !5239
  %sub42 = sub nsw i32 %51, 1, !dbg !5240
  %52 = load i32, i32* %j, align 4, !dbg !5241
  %sub43 = sub nsw i32 %sub42, %52, !dbg !5242
  %idxprom44 = sext i32 %sub43 to i64, !dbg !5243
  %53 = load float*, float** %lpc.addr, align 8, !dbg !5243
  %arrayidx45 = getelementptr inbounds float, float* %53, i64 %idxprom44, !dbg !5243
  store float %add41, float* %arrayidx45, align 4, !dbg !5244
  br label %for.inc46, !dbg !5245

for.inc46:                                        ; preds = %for.body29
  %54 = load i32, i32* %j, align 4, !dbg !5246
  %inc47 = add nsw i32 %54, 1, !dbg !5246
  store i32 %inc47, i32* %j, align 4, !dbg !5246
  br label %for.cond27, !dbg !5248, !llvm.loop !5249

for.end48:                                        ; preds = %for.cond27
  %55 = load i32, i32* %fail.addr, align 4, !dbg !5251
  %tobool49 = icmp ne i32 %55, 0, !dbg !5251
  br i1 %tobool49, label %land.lhs.true50, label %if.end53, !dbg !5253

land.lhs.true50:                                  ; preds = %for.end48
  %56 = load float, float* %err, align 4, !dbg !5254
  %cmp51 = fcmp olt float %56, 0.000000e+00, !dbg !5256
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !5257

if.then52:                                        ; preds = %land.lhs.true50
  store i32 -1, i32* %retval, align 4, !dbg !5258
  br label %return, !dbg !5258

if.end53:                                         ; preds = %land.lhs.true50, %for.end48
  %57 = load float*, float** %lpc.addr, align 8, !dbg !5259
  store float* %57, float** %lpc_last, align 8, !dbg !5260
  %58 = load i32, i32* %lpc_stride.addr, align 4, !dbg !5261
  %59 = load float*, float** %lpc.addr, align 8, !dbg !5262
  %idx.ext = sext i32 %58 to i64, !dbg !5262
  %add.ptr = getelementptr inbounds float, float* %59, i64 %idx.ext, !dbg !5262
  store float* %add.ptr, float** %lpc.addr, align 8, !dbg !5262
  br label %for.inc54, !dbg !5263

for.inc54:                                        ; preds = %if.end53
  %60 = load i32, i32* %i, align 4, !dbg !5264
  %inc55 = add nsw i32 %60, 1, !dbg !5264
  store i32 %inc55, i32* %i, align 4, !dbg !5264
  br label %for.cond, !dbg !5266, !llvm.loop !5267

for.end56:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5269
  br label %return, !dbg !5269

return:                                           ; preds = %for.end56, %if.then52, %if.then3
  %61 = load i32, i32* %retval, align 4, !dbg !5270
  ret i32 %61, !dbg !5270
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !5271 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5274, metadata !2062), !dbg !5275
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5276, metadata !2062), !dbg !5277
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5278, metadata !2062), !dbg !5279
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5280, metadata !2062), !dbg !5281
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5282, metadata !2062), !dbg !5283
  store i32 0, i32* %ret, align 4, !dbg !5283
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5284
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5286
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5287

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5288
  %cmp1 = icmp slt i32 %1, 0, !dbg !5290
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5291

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5292
  %tobool = icmp ne i8* %2, null, !dbg !5292
  br i1 %tobool, label %if.end, label %if.then, !dbg !5294

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !5295
  store i8* null, i8** %buffer.addr, align 8, !dbg !5297
  store i32 -1094995529, i32* %ret, align 4, !dbg !5298
  br label %if.end, !dbg !5299

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !5300
  %add = add nsw i32 %3, 7, !dbg !5301
  %shr = ashr i32 %add, 3, !dbg !5302
  store i32 %shr, i32* %buffer_size, align 4, !dbg !5303
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !5304
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5305
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !5306
  store i8* %4, i8** %buffer3, align 8, !dbg !5307
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !5308
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5309
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !5310
  store i32 %6, i32* %size_in_bits, align 4, !dbg !5311
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !5312
  %add4 = add nsw i32 %8, 8, !dbg !5313
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5314
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !5315
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !5316
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !5317
  %11 = load i32, i32* %buffer_size, align 4, !dbg !5318
  %idx.ext = sext i32 %11 to i64, !dbg !5319
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5319
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5320
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !5321
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !5322
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5323
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !5324
  store i32 0, i32* %index, align 8, !dbg !5325
  %14 = load i32, i32* %ret, align 4, !dbg !5326
  ret i32 %14, !dbg !5327
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_specific_config_gb(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, %struct.GetBitContext* %gb, i32 %get_bit_alignment, i32 %sync_extension) #1 !dbg !5328 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %get_bit_alignment.addr = alloca i32, align 4
  %sync_extension.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5331, metadata !2062), !dbg !5332
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5333, metadata !2062), !dbg !5334
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5335, metadata !2062), !dbg !5336
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5337, metadata !2062), !dbg !5338
  store i32 %get_bit_alignment, i32* %get_bit_alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_bit_alignment.addr, metadata !5339, metadata !2062), !dbg !5340
  store i32 %sync_extension, i32* %sync_extension.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync_extension.addr, metadata !5341, metadata !2062), !dbg !5342
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5343, metadata !2062), !dbg !5344
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5345, metadata !2062), !dbg !5346
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !5347, metadata !2062), !dbg !5348
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5349
  %1 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !5350
  %2 = bitcast %struct.GetBitContext* %0 to i8*, !dbg !5350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 32, i32 8, i1 false), !dbg !5350
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5351
  %4 = load i32, i32* %sync_extension.addr, align 4, !dbg !5353
  %call = call i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig* %3, %struct.GetBitContext* %gbc, i32 %4), !dbg !5354
  store i32 %call, i32* %i, align 4, !dbg !5355
  %cmp = icmp slt i32 %call, 0, !dbg !5356
  br i1 %cmp, label %if.then, label %if.end, !dbg !5357

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !5358
  br label %return, !dbg !5358

if.end:                                           ; preds = %entry
  %5 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5359
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %5, i32 0, i32 1, !dbg !5361
  %6 = load i32, i32* %sampling_index, align 4, !dbg !5361
  %cmp1 = icmp sgt i32 %6, 12, !dbg !5362
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5363

if.then2:                                         ; preds = %if.end
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5364
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !5364
  %9 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5366
  %sampling_index3 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %9, i32 0, i32 1, !dbg !5367
  %10 = load i32, i32* %sampling_index3, align 4, !dbg !5367
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0), i32 %10), !dbg !5368
  store i32 -1094995529, i32* %retval, align 4, !dbg !5369
  br label %return, !dbg !5369

if.end4:                                          ; preds = %if.end
  %11 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5370
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %11, i32 0, i32 0, !dbg !5372
  %12 = load i32, i32* %object_type, align 4, !dbg !5372
  %cmp5 = icmp eq i32 %12, 23, !dbg !5373
  br i1 %cmp5, label %land.lhs.true, label %if.end12, !dbg !5374

land.lhs.true:                                    ; preds = %if.end4
  %13 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5375
  %sampling_index6 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %13, i32 0, i32 1, !dbg !5376
  %14 = load i32, i32* %sampling_index6, align 4, !dbg !5376
  %cmp7 = icmp slt i32 %14, 3, !dbg !5377
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !5378

lor.lhs.false:                                    ; preds = %land.lhs.true
  %15 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5379
  %sampling_index8 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %15, i32 0, i32 1, !dbg !5381
  %16 = load i32, i32* %sampling_index8, align 4, !dbg !5381
  %cmp9 = icmp sgt i32 %16, 7, !dbg !5382
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5383

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5385
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !5385
  %19 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5387
  %sampling_index11 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %19, i32 0, i32 1, !dbg !5388
  %20 = load i32, i32* %sampling_index11, align 4, !dbg !5388
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i32 0, i32 0), i32 %20), !dbg !5389
  store i32 -1094995529, i32* %retval, align 4, !dbg !5390
  br label %return, !dbg !5390

if.end12:                                         ; preds = %lor.lhs.false, %if.end4
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5391
  %22 = load i32, i32* %i, align 4, !dbg !5392
  call void @skip_bits_long(%struct.GetBitContext* %21, i32 %22), !dbg !5393
  %23 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5394
  %object_type13 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %23, i32 0, i32 0, !dbg !5395
  %24 = load i32, i32* %object_type13, align 4, !dbg !5395
  switch i32 %24, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 17, label %sw.bb
    i32 23, label %sw.bb
    i32 39, label %sw.bb18
  ], !dbg !5396

sw.bb:                                            ; preds = %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5397
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5400
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5401
  %28 = load i32, i32* %get_bit_alignment.addr, align 4, !dbg !5402
  %29 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5403
  %30 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5404
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %30, i32 0, i32 3, !dbg !5405
  %31 = load i32, i32* %chan_config, align 4, !dbg !5405
  %call14 = call i32 @decode_ga_specific_config(%struct.AACContext* %25, %struct.AVCodecContext* %26, %struct.GetBitContext* %27, i32 %28, %struct.MPEG4AudioConfig* %29, i32 %31), !dbg !5406
  store i32 %call14, i32* %ret, align 4, !dbg !5407
  %cmp15 = icmp slt i32 %call14, 0, !dbg !5408
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !5409

if.then16:                                        ; preds = %sw.bb
  %32 = load i32, i32* %ret, align 4, !dbg !5410
  store i32 %32, i32* %retval, align 4, !dbg !5411
  br label %return, !dbg !5411

if.end17:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !5412

sw.bb18:                                          ; preds = %if.end12
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5413
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5415
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5416
  %36 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5417
  %37 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5418
  %chan_config19 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %37, i32 0, i32 3, !dbg !5419
  %38 = load i32, i32* %chan_config19, align 4, !dbg !5419
  %call20 = call i32 @decode_eld_specific_config(%struct.AACContext* %33, %struct.AVCodecContext* %34, %struct.GetBitContext* %35, %struct.MPEG4AudioConfig* %36, i32 %38), !dbg !5420
  store i32 %call20, i32* %ret, align 4, !dbg !5421
  %cmp21 = icmp slt i32 %call20, 0, !dbg !5422
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5423

if.then22:                                        ; preds = %sw.bb18
  %39 = load i32, i32* %ret, align 4, !dbg !5424
  store i32 %39, i32* %retval, align 4, !dbg !5425
  br label %return, !dbg !5425

if.end23:                                         ; preds = %sw.bb18
  br label %sw.epilog, !dbg !5426

sw.default:                                       ; preds = %if.end12
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5427
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !5427
  %42 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5428
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %42, i32 0, i32 4, !dbg !5429
  %43 = load i32, i32* %sbr, align 4, !dbg !5429
  %cmp24 = icmp eq i32 %43, 1, !dbg !5430
  %cond = select i1 %cmp24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), !dbg !5428
  %44 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5431
  %object_type25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %44, i32 0, i32 0, !dbg !5432
  %45 = load i32, i32* %object_type25, align 4, !dbg !5432
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i8* %cond, i32 %45), !dbg !5433
  store i32 -38, i32* %retval, align 4, !dbg !5434
  br label %return, !dbg !5434

sw.epilog:                                        ; preds = %if.end23, %if.end17
  br label %do.body, !dbg !5435, !llvm.loop !5436

do.body:                                          ; preds = %sw.epilog
  br label %do.end, !dbg !5437

do.end:                                           ; preds = %do.body
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5440
  %call26 = call i32 @get_bits_count(%struct.GetBitContext* %46), !dbg !5441
  store i32 %call26, i32* %retval, align 4, !dbg !5442
  br label %return, !dbg !5442

return:                                           ; preds = %do.end, %sw.default, %if.then22, %if.then16, %if.then10, %if.then2, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5443
  ret i32 %47, !dbg !5443
}

declare i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig*, %struct.GetBitContext*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5444 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5447, metadata !2062), !dbg !5452
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5454, metadata !2062), !dbg !5455
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5456, metadata !2062), !dbg !5457
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5458, metadata !2062), !dbg !5459
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5460, metadata !2062), !dbg !5461
  %0 = load i32, i32* %n.addr, align 4, !dbg !5462
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5463
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !5464
  %2 = load i32, i32* %index, align 8, !dbg !5464
  %sub = sub nsw i32 0, %2, !dbg !5465
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5466
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !5467
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5467
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5468
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !5469
  %6 = load i32, i32* %index1, align 8, !dbg !5469
  %sub2 = sub nsw i32 %4, %6, !dbg !5470
  store i32 %0, i32* %a.addr.i, align 4, !dbg !5471
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !5471
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !5471
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !5472
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !5474
  %cmp.i = icmp slt i32 %7, %8, !dbg !5475
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5476

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !5477
  store i32 %9, i32* %retval.i, align 4, !dbg !5479
  br label %av_clip_c.exit, !dbg !5479

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !5480
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !5482
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !5483
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5484

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !5485
  store i32 %12, i32* %retval.i, align 4, !dbg !5487
  br label %av_clip_c.exit, !dbg !5487

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !5488
  store i32 %13, i32* %retval.i, align 4, !dbg !5489
  br label %av_clip_c.exit, !dbg !5489

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !5490
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5491
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5492
  %16 = load i32, i32* %index3, align 8, !dbg !5493
  %add = add nsw i32 %16, %14, !dbg !5493
  store i32 %add, i32* %index3, align 8, !dbg !5493
  ret void, !dbg !5494
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ga_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, i32 %get_bit_alignment, %struct.MPEG4AudioConfig* %m4ac, i32 %channel_config) #1 !dbg !5495 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %get_bit_alignment.addr = alloca i32, align 4
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %channel_config.addr = alloca i32, align 4
  %extension_flag = alloca i32, align 4
  %ret = alloca i32, align 4
  %ep_config = alloca i32, align 4
  %res_flags = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5498, metadata !2062), !dbg !5499
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5500, metadata !2062), !dbg !5501
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5502, metadata !2062), !dbg !5503
  store i32 %get_bit_alignment, i32* %get_bit_alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %get_bit_alignment.addr, metadata !5504, metadata !2062), !dbg !5505
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5506, metadata !2062), !dbg !5507
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !5508, metadata !2062), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %extension_flag, metadata !5510, metadata !2062), !dbg !5511
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5512, metadata !2062), !dbg !5513
  call void @llvm.dbg.declare(metadata i32* %ep_config, metadata !5514, metadata !2062), !dbg !5515
  call void @llvm.dbg.declare(metadata i32* %res_flags, metadata !5516, metadata !2062), !dbg !5517
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !5518, metadata !2062), !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5520, metadata !2062), !dbg !5521
  store i32 0, i32* %tags, align 4, !dbg !5521
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5522
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !5523
  %1 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5524
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %1, i32 0, i32 11, !dbg !5525
  store i32 %call, i32* %frame_length_short, align 4, !dbg !5526
  %2 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5527
  %frame_length_short1 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %2, i32 0, i32 11, !dbg !5529
  %3 = load i32, i32* %frame_length_short1, align 4, !dbg !5529
  %tobool = icmp ne i32 %3, 0, !dbg !5527
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !5530

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5531
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %4, i32 0, i32 4, !dbg !5533
  %5 = load i32, i32* %sbr, align 4, !dbg !5533
  %cmp = icmp eq i32 %5, 1, !dbg !5534
  br i1 %cmp, label %if.then, label %if.end5, !dbg !5535

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5536
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !5536
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0)), !dbg !5538
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5539
  %tobool2 = icmp ne %struct.AACContext* %8, null, !dbg !5539
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5541

if.then3:                                         ; preds = %if.then
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5542
  %warned_960_sbr = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 26, !dbg !5544
  store i32 1, i32* %warned_960_sbr, align 4, !dbg !5545
  br label %if.end, !dbg !5542

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5546
  %sbr4 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %10, i32 0, i32 4, !dbg !5547
  store i32 0, i32* %sbr4, align 4, !dbg !5548
  %11 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5549
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %11, i32 0, i32 10, !dbg !5550
  store i32 0, i32* %ps, align 4, !dbg !5551
  br label %if.end5, !dbg !5552

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5553
  %call6 = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !5555
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5555
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5556

if.then8:                                         ; preds = %if.end5
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5557
  call void @skip_bits(%struct.GetBitContext* %13, i32 14), !dbg !5558
  br label %if.end9, !dbg !5558

if.end9:                                          ; preds = %if.then8, %if.end5
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5559
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %14), !dbg !5560
  store i32 %call10, i32* %extension_flag, align 4, !dbg !5561
  %15 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5562
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %15, i32 0, i32 0, !dbg !5564
  %16 = load i32, i32* %object_type, align 4, !dbg !5564
  %cmp11 = icmp eq i32 %16, 6, !dbg !5565
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !5566

lor.lhs.false:                                    ; preds = %if.end9
  %17 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5567
  %object_type12 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %17, i32 0, i32 0, !dbg !5568
  %18 = load i32, i32* %object_type12, align 4, !dbg !5568
  %cmp13 = icmp eq i32 %18, 20, !dbg !5569
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5570

if.then14:                                        ; preds = %lor.lhs.false, %if.end9
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5572
  call void @skip_bits(%struct.GetBitContext* %19, i32 3), !dbg !5573
  br label %if.end15, !dbg !5573

if.end15:                                         ; preds = %if.then14, %lor.lhs.false
  %20 = load i32, i32* %channel_config.addr, align 4, !dbg !5574
  %cmp16 = icmp eq i32 %20, 0, !dbg !5576
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !5577

if.then17:                                        ; preds = %if.end15
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5578
  call void @skip_bits(%struct.GetBitContext* %21, i32 4), !dbg !5580
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5581
  %23 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5582
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5583
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5584
  %25 = load i32, i32* %get_bit_alignment.addr, align 4, !dbg !5585
  %call18 = call i32 @decode_pce(%struct.AVCodecContext* %22, %struct.MPEG4AudioConfig* %23, [3 x i8]* %arraydecay, %struct.GetBitContext* %24, i32 %25), !dbg !5586
  store i32 %call18, i32* %tags, align 4, !dbg !5587
  %26 = load i32, i32* %tags, align 4, !dbg !5588
  %cmp19 = icmp slt i32 %26, 0, !dbg !5590
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5591

if.then20:                                        ; preds = %if.then17
  %27 = load i32, i32* %tags, align 4, !dbg !5592
  store i32 %27, i32* %retval, align 4, !dbg !5593
  br label %return, !dbg !5593

if.end21:                                         ; preds = %if.then17
  br label %if.end27, !dbg !5594

if.else:                                          ; preds = %if.end15
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5595
  %arraydecay22 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5598
  %29 = load i32, i32* %channel_config.addr, align 4, !dbg !5599
  %call23 = call i32 @set_default_channel_config(%struct.AVCodecContext* %28, [3 x i8]* %arraydecay22, i32* %tags, i32 %29), !dbg !5600
  store i32 %call23, i32* %ret, align 4, !dbg !5601
  %tobool24 = icmp ne i32 %call23, 0, !dbg !5601
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5602

if.then25:                                        ; preds = %if.else
  %30 = load i32, i32* %ret, align 4, !dbg !5603
  store i32 %30, i32* %retval, align 4, !dbg !5604
  br label %return, !dbg !5604

if.end26:                                         ; preds = %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end21
  %arraydecay28 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5605
  %31 = load i32, i32* %tags, align 4, !dbg !5607
  %call29 = call i32 @count_channels([3 x i8]* %arraydecay28, i32 %31), !dbg !5608
  %cmp30 = icmp sgt i32 %call29, 1, !dbg !5609
  br i1 %cmp30, label %if.then31, label %if.else33, !dbg !5610

if.then31:                                        ; preds = %if.end27
  %32 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5611
  %ps32 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %32, i32 0, i32 10, !dbg !5613
  store i32 0, i32* %ps32, align 4, !dbg !5614
  br label %if.end42, !dbg !5615

if.else33:                                        ; preds = %if.end27
  %33 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5616
  %sbr34 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %33, i32 0, i32 4, !dbg !5619
  %34 = load i32, i32* %sbr34, align 4, !dbg !5619
  %cmp35 = icmp eq i32 %34, 1, !dbg !5620
  br i1 %cmp35, label %land.lhs.true36, label %if.end41, !dbg !5621

land.lhs.true36:                                  ; preds = %if.else33
  %35 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5622
  %ps37 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %35, i32 0, i32 10, !dbg !5624
  %36 = load i32, i32* %ps37, align 4, !dbg !5624
  %cmp38 = icmp eq i32 %36, -1, !dbg !5625
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !5626

if.then39:                                        ; preds = %land.lhs.true36
  %37 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5627
  %ps40 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %37, i32 0, i32 10, !dbg !5628
  store i32 1, i32* %ps40, align 4, !dbg !5629
  br label %if.end41, !dbg !5627

if.end41:                                         ; preds = %if.then39, %land.lhs.true36, %if.else33
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then31
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5630
  %tobool43 = icmp ne %struct.AACContext* %38, null, !dbg !5630
  br i1 %tobool43, label %land.lhs.true44, label %if.end49, !dbg !5632

land.lhs.true44:                                  ; preds = %if.end42
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5633
  %arraydecay45 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5635
  %40 = load i32, i32* %tags, align 4, !dbg !5636
  %call46 = call i32 @output_configure(%struct.AACContext* %39, [3 x i8]* %arraydecay45, i32 %40, i32 3, i32 0), !dbg !5637
  store i32 %call46, i32* %ret, align 4, !dbg !5638
  %tobool47 = icmp ne i32 %call46, 0, !dbg !5638
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !5639

if.then48:                                        ; preds = %land.lhs.true44
  %41 = load i32, i32* %ret, align 4, !dbg !5640
  store i32 %41, i32* %retval, align 4, !dbg !5641
  br label %return, !dbg !5641

if.end49:                                         ; preds = %land.lhs.true44, %if.end42
  %42 = load i32, i32* %extension_flag, align 4, !dbg !5642
  %tobool50 = icmp ne i32 %42, 0, !dbg !5642
  br i1 %tobool50, label %if.then51, label %if.end58, !dbg !5644

if.then51:                                        ; preds = %if.end49
  %43 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5645
  %object_type52 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %43, i32 0, i32 0, !dbg !5647
  %44 = load i32, i32* %object_type52, align 4, !dbg !5647
  switch i32 %44, label %sw.epilog [
    i32 22, label %sw.bb
    i32 17, label %sw.bb53
    i32 19, label %sw.bb53
    i32 20, label %sw.bb53
    i32 23, label %sw.bb53
  ], !dbg !5648

sw.bb:                                            ; preds = %if.then51
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5649
  call void @skip_bits(%struct.GetBitContext* %45, i32 5), !dbg !5651
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5652
  call void @skip_bits(%struct.GetBitContext* %46, i32 11), !dbg !5653
  br label %sw.epilog, !dbg !5654

sw.bb53:                                          ; preds = %if.then51, %if.then51, %if.then51, %if.then51
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5655
  %call54 = call i32 @get_bits(%struct.GetBitContext* %47, i32 3), !dbg !5656
  store i32 %call54, i32* %res_flags, align 4, !dbg !5657
  %48 = load i32, i32* %res_flags, align 4, !dbg !5658
  %tobool55 = icmp ne i32 %48, 0, !dbg !5658
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5660

if.then56:                                        ; preds = %sw.bb53
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5661
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !5661
  %51 = load i32, i32* %res_flags, align 4, !dbg !5663
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %50, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i32 0, i32 0), i32 %51), !dbg !5664
  store i32 -1163346256, i32* %retval, align 4, !dbg !5665
  br label %return, !dbg !5665

if.end57:                                         ; preds = %sw.bb53
  br label %sw.epilog, !dbg !5666

sw.epilog:                                        ; preds = %if.then51, %if.end57, %sw.bb
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5667
  call void @skip_bits1(%struct.GetBitContext* %52), !dbg !5668
  br label %if.end58, !dbg !5669

if.end58:                                         ; preds = %sw.epilog, %if.end49
  %53 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5670
  %object_type59 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %53, i32 0, i32 0, !dbg !5671
  %54 = load i32, i32* %object_type59, align 4, !dbg !5671
  switch i32 %54, label %sw.epilog65 [
    i32 17, label %sw.bb60
    i32 19, label %sw.bb60
    i32 20, label %sw.bb60
    i32 23, label %sw.bb60
  ], !dbg !5672

sw.bb60:                                          ; preds = %if.end58, %if.end58, %if.end58, %if.end58
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5673
  %call61 = call i32 @get_bits(%struct.GetBitContext* %55, i32 2), !dbg !5675
  store i32 %call61, i32* %ep_config, align 4, !dbg !5676
  %56 = load i32, i32* %ep_config, align 4, !dbg !5677
  %tobool62 = icmp ne i32 %56, 0, !dbg !5677
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !5679

if.then63:                                        ; preds = %sw.bb60
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5680
  %58 = bitcast %struct.AVCodecContext* %57 to i8*, !dbg !5680
  %59 = load i32, i32* %ep_config, align 4, !dbg !5682
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i32 %59), !dbg !5683
  store i32 -1163346256, i32* %retval, align 4, !dbg !5684
  br label %return, !dbg !5684

if.end64:                                         ; preds = %sw.bb60
  br label %sw.epilog65, !dbg !5685

sw.epilog65:                                      ; preds = %if.end64, %if.end58
  store i32 0, i32* %retval, align 4, !dbg !5686
  br label %return, !dbg !5686

return:                                           ; preds = %sw.epilog65, %if.then63, %if.then56, %if.then48, %if.then25, %if.then20
  %60 = load i32, i32* %retval, align 4, !dbg !5687
  ret i32 %60, !dbg !5687
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_eld_specific_config(%struct.AACContext* %ac, %struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.MPEG4AudioConfig* %m4ac, i32 %channel_config) #1 !dbg !5688 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %channel_config.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %ep_config = alloca i32, align 4
  %res_flags = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  %ELDEXT_TERM = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5691, metadata !2062), !dbg !5692
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5693, metadata !2062), !dbg !5694
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5695, metadata !2062), !dbg !5696
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5697, metadata !2062), !dbg !5698
  store i32 %channel_config, i32* %channel_config.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_config.addr, metadata !5699, metadata !2062), !dbg !5700
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5701, metadata !2062), !dbg !5702
  call void @llvm.dbg.declare(metadata i32* %ep_config, metadata !5703, metadata !2062), !dbg !5704
  call void @llvm.dbg.declare(metadata i32* %res_flags, metadata !5705, metadata !2062), !dbg !5706
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !5707, metadata !2062), !dbg !5708
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5709, metadata !2062), !dbg !5710
  store i32 0, i32* %tags, align 4, !dbg !5710
  call void @llvm.dbg.declare(metadata i32* %ELDEXT_TERM, metadata !5711, metadata !2062), !dbg !5712
  store i32 0, i32* %ELDEXT_TERM, align 4, !dbg !5712
  %0 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5713
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i32 0, i32 10, !dbg !5714
  store i32 0, i32* %ps, align 4, !dbg !5715
  %1 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5716
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %1, i32 0, i32 4, !dbg !5717
  store i32 0, i32* %sbr, align 4, !dbg !5718
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5719
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !5720
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5721
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %3, i32 0, i32 11, !dbg !5722
  store i32 %call, i32* %frame_length_short, align 4, !dbg !5723
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5724
  %call1 = call i32 @get_bits(%struct.GetBitContext* %4, i32 3), !dbg !5725
  store i32 %call1, i32* %res_flags, align 4, !dbg !5726
  %5 = load i32, i32* %res_flags, align 4, !dbg !5727
  %tobool = icmp ne i32 %5, 0, !dbg !5727
  br i1 %tobool, label %if.then, label %if.end, !dbg !5729

if.then:                                          ; preds = %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5730
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !5730
  %8 = load i32, i32* %res_flags, align 4, !dbg !5732
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i32 0, i32 0), i32 %8), !dbg !5733
  store i32 -1163346256, i32* %retval, align 4, !dbg !5734
  br label %return, !dbg !5734

if.end:                                           ; preds = %entry
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5735
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %9), !dbg !5737
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5737
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5738

if.then4:                                         ; preds = %if.end
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5739
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !5739
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0)), !dbg !5741
  store i32 -1163346256, i32* %retval, align 4, !dbg !5742
  br label %return, !dbg !5742

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !5743

while.cond:                                       ; preds = %if.end21, %if.end5
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5744
  %call6 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !5746
  %cmp = icmp ne i32 %call6, 0, !dbg !5747
  br i1 %cmp, label %while.body, label %while.end, !dbg !5748

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5749, metadata !2062), !dbg !5751
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5752
  %call7 = call i32 @get_bits(%struct.GetBitContext* %13, i32 4), !dbg !5753
  store i32 %call7, i32* %len, align 4, !dbg !5751
  %14 = load i32, i32* %len, align 4, !dbg !5754
  %cmp8 = icmp eq i32 %14, 15, !dbg !5756
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5757

if.then9:                                         ; preds = %while.body
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5758
  %call10 = call i32 @get_bits(%struct.GetBitContext* %15, i32 8), !dbg !5759
  %16 = load i32, i32* %len, align 4, !dbg !5760
  %add = add i32 %16, %call10, !dbg !5760
  store i32 %add, i32* %len, align 4, !dbg !5760
  br label %if.end11, !dbg !5761

if.end11:                                         ; preds = %if.then9, %while.body
  %17 = load i32, i32* %len, align 4, !dbg !5762
  %cmp12 = icmp eq i32 %17, 270, !dbg !5764
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !5765

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5766
  %call14 = call i32 @get_bits(%struct.GetBitContext* %18, i32 16), !dbg !5767
  %19 = load i32, i32* %len, align 4, !dbg !5768
  %add15 = add i32 %19, %call14, !dbg !5768
  store i32 %add15, i32* %len, align 4, !dbg !5768
  br label %if.end16, !dbg !5769

if.end16:                                         ; preds = %if.then13, %if.end11
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5770
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %20), !dbg !5772
  %21 = load i32, i32* %len, align 4, !dbg !5773
  %mul = mul nsw i32 %21, 8, !dbg !5774
  %add18 = add nsw i32 %mul, 4, !dbg !5775
  %cmp19 = icmp slt i32 %call17, %add18, !dbg !5776
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5777

if.then20:                                        ; preds = %if.end16
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5778
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !5778
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.43, i32 0, i32 0)), !dbg !5780
  store i32 -1094995529, i32* %retval, align 4, !dbg !5781
  br label %return, !dbg !5781

if.end21:                                         ; preds = %if.end16
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5782
  %25 = load i32, i32* %len, align 4, !dbg !5783
  %mul22 = mul nsw i32 8, %25, !dbg !5784
  call void @skip_bits_long(%struct.GetBitContext* %24, i32 %mul22), !dbg !5785
  br label %while.cond, !dbg !5786, !llvm.loop !5788

while.end:                                        ; preds = %while.cond
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5789
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5791
  %27 = load i32, i32* %channel_config.addr, align 4, !dbg !5792
  %call23 = call i32 @set_default_channel_config(%struct.AVCodecContext* %26, [3 x i8]* %arraydecay, i32* %tags, i32 %27), !dbg !5793
  store i32 %call23, i32* %ret, align 4, !dbg !5794
  %tobool24 = icmp ne i32 %call23, 0, !dbg !5794
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5795

if.then25:                                        ; preds = %while.end
  %28 = load i32, i32* %ret, align 4, !dbg !5796
  store i32 %28, i32* %retval, align 4, !dbg !5797
  br label %return, !dbg !5797

if.end26:                                         ; preds = %while.end
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5798
  %tobool27 = icmp ne %struct.AACContext* %29, null, !dbg !5798
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !5800

land.lhs.true:                                    ; preds = %if.end26
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5801
  %arraydecay28 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !5803
  %31 = load i32, i32* %tags, align 4, !dbg !5804
  %call29 = call i32 @output_configure(%struct.AACContext* %30, [3 x i8]* %arraydecay28, i32 %31, i32 3, i32 0), !dbg !5805
  store i32 %call29, i32* %ret, align 4, !dbg !5806
  %tobool30 = icmp ne i32 %call29, 0, !dbg !5806
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5807

if.then31:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %ret, align 4, !dbg !5808
  store i32 %32, i32* %retval, align 4, !dbg !5809
  br label %return, !dbg !5809

if.end32:                                         ; preds = %land.lhs.true, %if.end26
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5810
  %call33 = call i32 @get_bits(%struct.GetBitContext* %33, i32 2), !dbg !5811
  store i32 %call33, i32* %ep_config, align 4, !dbg !5812
  %34 = load i32, i32* %ep_config, align 4, !dbg !5813
  %tobool34 = icmp ne i32 %34, 0, !dbg !5813
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !5815

if.then35:                                        ; preds = %if.end32
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5816
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !5816
  %37 = load i32, i32* %ep_config, align 4, !dbg !5818
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %36, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i32 %37), !dbg !5819
  store i32 -1163346256, i32* %retval, align 4, !dbg !5820
  br label %return, !dbg !5820

if.end36:                                         ; preds = %if.end32
  store i32 0, i32* %retval, align 4, !dbg !5821
  br label %return, !dbg !5821

return:                                           ; preds = %if.end36, %if.then35, %if.then31, %if.then25, %if.then20, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5822
  ret i32 %38, !dbg !5822
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !5823 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5828, metadata !2062), !dbg !5829
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5830
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5831
  %1 = load i32, i32* %index, align 8, !dbg !5831
  ret i32 %1, !dbg !5832
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !5833 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5836, metadata !2062), !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5838, metadata !2062), !dbg !5839
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5840
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5841
  %1 = load i32, i32* %index1, align 8, !dbg !5841
  store i32 %1, i32* %index, align 4, !dbg !5839
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5842, metadata !2062), !dbg !5843
  %2 = load i32, i32* %index, align 4, !dbg !5844
  %shr = lshr i32 %2, 3, !dbg !5845
  %idxprom = zext i32 %shr to i64, !dbg !5846
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5846
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !5847
  %4 = load i8*, i8** %buffer, align 8, !dbg !5847
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5846
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5846
  store i8 %5, i8* %result, align 1, !dbg !5843
  %6 = load i32, i32* %index, align 4, !dbg !5848
  %and = and i32 %6, 7, !dbg !5849
  %7 = load i8, i8* %result, align 1, !dbg !5850
  %conv = zext i8 %7 to i32, !dbg !5850
  %shl = shl i32 %conv, %and, !dbg !5850
  %conv2 = trunc i32 %shl to i8, !dbg !5850
  store i8 %conv2, i8* %result, align 1, !dbg !5850
  %8 = load i8, i8* %result, align 1, !dbg !5851
  %conv3 = zext i8 %8 to i32, !dbg !5851
  %shr4 = ashr i32 %conv3, 7, !dbg !5851
  %conv5 = trunc i32 %shr4 to i8, !dbg !5851
  store i8 %conv5, i8* %result, align 1, !dbg !5851
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5852
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !5854
  %10 = load i32, i32* %index6, align 8, !dbg !5854
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5855
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !5856
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5856
  %cmp = icmp slt i32 %10, %12, !dbg !5857
  br i1 %cmp, label %if.then, label %if.end, !dbg !5858

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !5859
  %inc = add i32 %13, 1, !dbg !5859
  store i32 %inc, i32* %index, align 4, !dbg !5859
  br label %if.end, !dbg !5860

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !5861
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5862
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5863
  store i32 %14, i32* %index8, align 8, !dbg !5864
  %16 = load i8, i8* %result, align 1, !dbg !5865
  %conv9 = zext i8 %16 to i32, !dbg !5865
  ret i32 %conv9, !dbg !5866
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5867 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5868, metadata !2062), !dbg !5869
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5870, metadata !2062), !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5872, metadata !2062), !dbg !5873
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5874
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5875
  %1 = load i32, i32* %index, align 8, !dbg !5875
  store i32 %1, i32* %re_index, align 4, !dbg !5873
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5876, metadata !2062), !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5878, metadata !2062), !dbg !5879
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5880
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5881
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5881
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5879
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !5882
  %5 = load i32, i32* %re_index, align 4, !dbg !5883
  %6 = load i32, i32* %n.addr, align 4, !dbg !5884
  %add = add i32 %5, %6, !dbg !5885
  %cmp = icmp ugt i32 %4, %add, !dbg !5886
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5887

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !5888
  %8 = load i32, i32* %n.addr, align 4, !dbg !5890
  %add1 = add i32 %7, %8, !dbg !5891
  br label %cond.end, !dbg !5892

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !5893
  br label %cond.end, !dbg !5895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !5896
  store i32 %cond, i32* %re_index, align 4, !dbg !5898
  %10 = load i32, i32* %re_index, align 4, !dbg !5899
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5900
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !5901
  store i32 %10, i32* %index2, align 8, !dbg !5902
  ret void, !dbg !5903
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_pce(%struct.AVCodecContext* %avctx, %struct.MPEG4AudioConfig* %m4ac, [3 x i8]* %layout_map, %struct.GetBitContext* %gb, i32 %byte_align_ref) #1 !dbg !5904 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %m4ac.addr = alloca %struct.MPEG4AudioConfig*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %byte_align_ref.addr = alloca i32, align 4
  %num_front = alloca i32, align 4
  %num_side = alloca i32, align 4
  %num_back = alloca i32, align 4
  %num_lfe = alloca i32, align 4
  %num_assoc_data = alloca i32, align 4
  %num_cc = alloca i32, align 4
  %sampling_index = alloca i32, align 4
  %comment_len = alloca i32, align 4
  %tags = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5907, metadata !2062), !dbg !5908
  store %struct.MPEG4AudioConfig* %m4ac, %struct.MPEG4AudioConfig** %m4ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac.addr, metadata !5909, metadata !2062), !dbg !5910
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !5911, metadata !2062), !dbg !5912
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5913, metadata !2062), !dbg !5914
  store i32 %byte_align_ref, i32* %byte_align_ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_align_ref.addr, metadata !5915, metadata !2062), !dbg !5916
  call void @llvm.dbg.declare(metadata i32* %num_front, metadata !5917, metadata !2062), !dbg !5918
  call void @llvm.dbg.declare(metadata i32* %num_side, metadata !5919, metadata !2062), !dbg !5920
  call void @llvm.dbg.declare(metadata i32* %num_back, metadata !5921, metadata !2062), !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %num_lfe, metadata !5923, metadata !2062), !dbg !5924
  call void @llvm.dbg.declare(metadata i32* %num_assoc_data, metadata !5925, metadata !2062), !dbg !5926
  call void @llvm.dbg.declare(metadata i32* %num_cc, metadata !5927, metadata !2062), !dbg !5928
  call void @llvm.dbg.declare(metadata i32* %sampling_index, metadata !5929, metadata !2062), !dbg !5930
  call void @llvm.dbg.declare(metadata i32* %comment_len, metadata !5931, metadata !2062), !dbg !5932
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !5933, metadata !2062), !dbg !5934
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5935
  call void @skip_bits(%struct.GetBitContext* %0, i32 2), !dbg !5936
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5937
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !5938
  store i32 %call, i32* %sampling_index, align 4, !dbg !5939
  %2 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac.addr, align 8, !dbg !5940
  %sampling_index1 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %2, i32 0, i32 1, !dbg !5942
  %3 = load i32, i32* %sampling_index1, align 4, !dbg !5942
  %4 = load i32, i32* %sampling_index, align 4, !dbg !5943
  %cmp = icmp ne i32 %3, %4, !dbg !5944
  br i1 %cmp, label %if.then, label %if.end, !dbg !5945

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5946
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !5946
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 24, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.37, i32 0, i32 0)), !dbg !5947
  br label %if.end, !dbg !5947

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5948
  %call2 = call i32 @get_bits(%struct.GetBitContext* %7, i32 4), !dbg !5949
  store i32 %call2, i32* %num_front, align 4, !dbg !5950
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5951
  %call3 = call i32 @get_bits(%struct.GetBitContext* %8, i32 4), !dbg !5952
  store i32 %call3, i32* %num_side, align 4, !dbg !5953
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5954
  %call4 = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !5955
  store i32 %call4, i32* %num_back, align 4, !dbg !5956
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5957
  %call5 = call i32 @get_bits(%struct.GetBitContext* %10, i32 2), !dbg !5958
  store i32 %call5, i32* %num_lfe, align 4, !dbg !5959
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5960
  %call6 = call i32 @get_bits(%struct.GetBitContext* %11, i32 3), !dbg !5961
  store i32 %call6, i32* %num_assoc_data, align 4, !dbg !5962
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5963
  %call7 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !5964
  store i32 %call7, i32* %num_cc, align 4, !dbg !5965
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5966
  %call8 = call i32 @get_bits1(%struct.GetBitContext* %13), !dbg !5968
  %tobool = icmp ne i32 %call8, 0, !dbg !5968
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !5969

if.then9:                                         ; preds = %if.end
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5970
  call void @skip_bits(%struct.GetBitContext* %14, i32 4), !dbg !5971
  br label %if.end10, !dbg !5971

if.end10:                                         ; preds = %if.then9, %if.end
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5972
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %15), !dbg !5974
  %tobool12 = icmp ne i32 %call11, 0, !dbg !5974
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5975

if.then13:                                        ; preds = %if.end10
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5976
  call void @skip_bits(%struct.GetBitContext* %16, i32 4), !dbg !5977
  br label %if.end14, !dbg !5977

if.end14:                                         ; preds = %if.then13, %if.end10
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5978
  %call15 = call i32 @get_bits1(%struct.GetBitContext* %17), !dbg !5980
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5980
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5981

if.then17:                                        ; preds = %if.end14
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5982
  call void @skip_bits(%struct.GetBitContext* %18, i32 3), !dbg !5983
  br label %if.end18, !dbg !5983

if.end18:                                         ; preds = %if.then17, %if.end14
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5984
  %call19 = call i32 @get_bits_left(%struct.GetBitContext* %19), !dbg !5986
  %20 = load i32, i32* %num_front, align 4, !dbg !5987
  %21 = load i32, i32* %num_side, align 4, !dbg !5988
  %add = add nsw i32 %20, %21, !dbg !5989
  %22 = load i32, i32* %num_back, align 4, !dbg !5990
  %add20 = add nsw i32 %add, %22, !dbg !5991
  %23 = load i32, i32* %num_cc, align 4, !dbg !5992
  %add21 = add nsw i32 %add20, %23, !dbg !5993
  %mul = mul nsw i32 5, %add21, !dbg !5994
  %24 = load i32, i32* %num_lfe, align 4, !dbg !5995
  %25 = load i32, i32* %num_assoc_data, align 4, !dbg !5996
  %add22 = add nsw i32 %24, %25, !dbg !5997
  %26 = load i32, i32* %num_cc, align 4, !dbg !5998
  %add23 = add nsw i32 %add22, %26, !dbg !5999
  %mul24 = mul nsw i32 4, %add23, !dbg !6000
  %add25 = add nsw i32 %mul, %mul24, !dbg !6001
  %cmp26 = icmp slt i32 %call19, %add25, !dbg !6002
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6003

if.then27:                                        ; preds = %if.end18
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6004
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6004
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.38, i32 0, i32 0)), !dbg !6006
  store i32 -1, i32* %retval, align 4, !dbg !6007
  br label %return, !dbg !6007

if.end28:                                         ; preds = %if.end18
  %29 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6008
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6009
  %31 = load i32, i32* %num_front, align 4, !dbg !6010
  call void @decode_channel_map([3 x i8]* %29, i32 1, %struct.GetBitContext* %30, i32 %31), !dbg !6011
  %32 = load i32, i32* %num_front, align 4, !dbg !6012
  store i32 %32, i32* %tags, align 4, !dbg !6013
  %33 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6014
  %34 = load i32, i32* %tags, align 4, !dbg !6015
  %idx.ext = sext i32 %34 to i64, !dbg !6016
  %add.ptr = getelementptr inbounds [3 x i8], [3 x i8]* %33, i64 %idx.ext, !dbg !6016
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6017
  %36 = load i32, i32* %num_side, align 4, !dbg !6018
  call void @decode_channel_map([3 x i8]* %add.ptr, i32 2, %struct.GetBitContext* %35, i32 %36), !dbg !6019
  %37 = load i32, i32* %num_side, align 4, !dbg !6020
  %38 = load i32, i32* %tags, align 4, !dbg !6021
  %add29 = add nsw i32 %38, %37, !dbg !6021
  store i32 %add29, i32* %tags, align 4, !dbg !6021
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6022
  %40 = load i32, i32* %tags, align 4, !dbg !6023
  %idx.ext30 = sext i32 %40 to i64, !dbg !6024
  %add.ptr31 = getelementptr inbounds [3 x i8], [3 x i8]* %39, i64 %idx.ext30, !dbg !6024
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6025
  %42 = load i32, i32* %num_back, align 4, !dbg !6026
  call void @decode_channel_map([3 x i8]* %add.ptr31, i32 3, %struct.GetBitContext* %41, i32 %42), !dbg !6027
  %43 = load i32, i32* %num_back, align 4, !dbg !6028
  %44 = load i32, i32* %tags, align 4, !dbg !6029
  %add32 = add nsw i32 %44, %43, !dbg !6029
  store i32 %add32, i32* %tags, align 4, !dbg !6029
  %45 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6030
  %46 = load i32, i32* %tags, align 4, !dbg !6031
  %idx.ext33 = sext i32 %46 to i64, !dbg !6032
  %add.ptr34 = getelementptr inbounds [3 x i8], [3 x i8]* %45, i64 %idx.ext33, !dbg !6032
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6033
  %48 = load i32, i32* %num_lfe, align 4, !dbg !6034
  call void @decode_channel_map([3 x i8]* %add.ptr34, i32 4, %struct.GetBitContext* %47, i32 %48), !dbg !6035
  %49 = load i32, i32* %num_lfe, align 4, !dbg !6036
  %50 = load i32, i32* %tags, align 4, !dbg !6037
  %add35 = add nsw i32 %50, %49, !dbg !6037
  store i32 %add35, i32* %tags, align 4, !dbg !6037
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6038
  %52 = load i32, i32* %num_assoc_data, align 4, !dbg !6039
  %mul36 = mul nsw i32 4, %52, !dbg !6040
  call void @skip_bits_long(%struct.GetBitContext* %51, i32 %mul36), !dbg !6041
  %53 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6042
  %54 = load i32, i32* %tags, align 4, !dbg !6043
  %idx.ext37 = sext i32 %54 to i64, !dbg !6044
  %add.ptr38 = getelementptr inbounds [3 x i8], [3 x i8]* %53, i64 %idx.ext37, !dbg !6044
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6045
  %56 = load i32, i32* %num_cc, align 4, !dbg !6046
  call void @decode_channel_map([3 x i8]* %add.ptr38, i32 5, %struct.GetBitContext* %55, i32 %56), !dbg !6047
  %57 = load i32, i32* %num_cc, align 4, !dbg !6048
  %58 = load i32, i32* %tags, align 4, !dbg !6049
  %add39 = add nsw i32 %58, %57, !dbg !6049
  store i32 %add39, i32* %tags, align 4, !dbg !6049
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6050
  %60 = load i32, i32* %byte_align_ref.addr, align 4, !dbg !6051
  call void @relative_align_get_bits(%struct.GetBitContext* %59, i32 %60), !dbg !6052
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6053
  %call40 = call i32 @get_bits(%struct.GetBitContext* %61, i32 8), !dbg !6054
  %mul41 = mul i32 %call40, 8, !dbg !6055
  store i32 %mul41, i32* %comment_len, align 4, !dbg !6056
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6057
  %call42 = call i32 @get_bits_left(%struct.GetBitContext* %62), !dbg !6059
  %63 = load i32, i32* %comment_len, align 4, !dbg !6060
  %cmp43 = icmp slt i32 %call42, %63, !dbg !6061
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !6062

if.then44:                                        ; preds = %if.end28
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6063
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !6063
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.38, i32 0, i32 0)), !dbg !6065
  store i32 -1094995529, i32* %retval, align 4, !dbg !6066
  br label %return, !dbg !6066

if.end45:                                         ; preds = %if.end28
  %66 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6067
  %67 = load i32, i32* %comment_len, align 4, !dbg !6068
  call void @skip_bits_long(%struct.GetBitContext* %66, i32 %67), !dbg !6069
  %68 = load i32, i32* %tags, align 4, !dbg !6070
  store i32 %68, i32* %retval, align 4, !dbg !6071
  br label %return, !dbg !6071

return:                                           ; preds = %if.end45, %if.then44, %if.then27
  %69 = load i32, i32* %retval, align 4, !dbg !6072
  ret i32 %69, !dbg !6072
}

; Function Attrs: nounwind uwtable
define internal i32 @count_channels([3 x i8]* %layout, i32 %tags) #1 !dbg !6073 {
entry:
  %layout.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %sum = alloca i32, align 4
  %syn_ele = alloca i32, align 4
  %pos = alloca i32, align 4
  store [3 x i8]* %layout, [3 x i8]** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout.addr, metadata !6076, metadata !2062), !dbg !6077
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6078, metadata !2062), !dbg !6079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6080, metadata !2062), !dbg !6081
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !6082, metadata !2062), !dbg !6083
  store i32 0, i32* %sum, align 4, !dbg !6083
  store i32 0, i32* %i, align 4, !dbg !6084
  br label %for.cond, !dbg !6086

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6087
  %1 = load i32, i32* %tags.addr, align 4, !dbg !6090
  %cmp = icmp slt i32 %0, %1, !dbg !6091
  br i1 %cmp, label %for.body, label %for.end, !dbg !6092

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %syn_ele, metadata !6093, metadata !2062), !dbg !6095
  %2 = load i32, i32* %i, align 4, !dbg !6096
  %idxprom = sext i32 %2 to i64, !dbg !6097
  %3 = load [3 x i8]*, [3 x i8]** %layout.addr, align 8, !dbg !6097
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 %idxprom, !dbg !6097
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !6097
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !6097
  %conv = zext i8 %4 to i32, !dbg !6097
  store i32 %conv, i32* %syn_ele, align 4, !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6098, metadata !2062), !dbg !6099
  %5 = load i32, i32* %i, align 4, !dbg !6100
  %idxprom2 = sext i32 %5 to i64, !dbg !6101
  %6 = load [3 x i8]*, [3 x i8]** %layout.addr, align 8, !dbg !6101
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i64 %idxprom2, !dbg !6101
  %arrayidx4 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx3, i64 0, i64 2, !dbg !6101
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !6101
  %conv5 = zext i8 %7 to i32, !dbg !6101
  store i32 %conv5, i32* %pos, align 4, !dbg !6099
  %8 = load i32, i32* %syn_ele, align 4, !dbg !6102
  %cmp6 = icmp eq i32 %8, 1, !dbg !6103
  %conv7 = zext i1 %cmp6 to i32, !dbg !6103
  %add = add nsw i32 1, %conv7, !dbg !6104
  %9 = load i32, i32* %pos, align 4, !dbg !6105
  %cmp8 = icmp ne i32 %9, 0, !dbg !6106
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !6107

land.rhs:                                         ; preds = %for.body
  %10 = load i32, i32* %pos, align 4, !dbg !6108
  %cmp10 = icmp ne i32 %10, 5, !dbg !6110
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %11 = phi i1 [ false, %for.body ], [ %cmp10, %land.rhs ]
  %land.ext = zext i1 %11 to i32, !dbg !6111
  %mul = mul nsw i32 %add, %land.ext, !dbg !6113
  %12 = load i32, i32* %sum, align 4, !dbg !6114
  %add12 = add nsw i32 %12, %mul, !dbg !6114
  store i32 %add12, i32* %sum, align 4, !dbg !6114
  br label %for.inc, !dbg !6115

for.inc:                                          ; preds = %land.end
  %13 = load i32, i32* %i, align 4, !dbg !6116
  %inc = add nsw i32 %13, 1, !dbg !6116
  store i32 %inc, i32* %i, align 4, !dbg !6116
  br label %for.cond, !dbg !6118, !llvm.loop !6119

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %sum, align 4, !dbg !6121
  ret i32 %14, !dbg !6122
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6123 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6126, metadata !2062), !dbg !6131
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6133, metadata !2062), !dbg !6134
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6135, metadata !2062), !dbg !6136
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6137, metadata !2062), !dbg !6138
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6139, metadata !2062), !dbg !6140
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6141
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6142
  %1 = load i32, i32* %index, align 8, !dbg !6142
  store i32 %1, i32* %re_index, align 4, !dbg !6140
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6143, metadata !2062), !dbg !6144
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6145, metadata !2062), !dbg !6146
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6147
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6148
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6148
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6146
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6149
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6150
  %5 = load i8*, i8** %buffer, align 8, !dbg !6150
  %6 = load i32, i32* %re_index, align 4, !dbg !6151
  %shr = lshr i32 %6, 3, !dbg !6152
  %idx.ext = zext i32 %shr to i64, !dbg !6153
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6153
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6154
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6154
  %8 = load i32, i32* %l, align 1, !dbg !6154
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6155
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6156
  %shl.i = shl i32 %9, 8, !dbg !6157
  %and.i = and i32 %shl.i, 65280, !dbg !6158
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6159
  %shr.i = lshr i32 %10, 8, !dbg !6160
  %and1.i = and i32 %shr.i, 255, !dbg !6161
  %or.i = or i32 %and.i, %and1.i, !dbg !6162
  %shl2.i = shl i32 %or.i, 16, !dbg !6163
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6164
  %shr3.i = lshr i32 %11, 16, !dbg !6165
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6166
  %and5.i = and i32 %shl4.i, 65280, !dbg !6167
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6168
  %shr6.i = lshr i32 %12, 16, !dbg !6169
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6170
  %and8.i = and i32 %shr7.i, 255, !dbg !6171
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6172
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6173
  %13 = load i32, i32* %re_index, align 4, !dbg !6174
  %and = and i32 %13, 7, !dbg !6175
  %shl = shl i32 %or10.i, %and, !dbg !6176
  store i32 %shl, i32* %re_cache, align 4, !dbg !6177
  %14 = load i32, i32* %re_cache, align 4, !dbg !6178
  %15 = load i32, i32* %n.addr, align 4, !dbg !6179
  %conv = trunc i32 %15 to i8, !dbg !6179
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6180
  store i32 %call4, i32* %tmp, align 4, !dbg !6181
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6182
  %17 = load i32, i32* %re_index, align 4, !dbg !6183
  %18 = load i32, i32* %n.addr, align 4, !dbg !6184
  %add = add i32 %17, %18, !dbg !6185
  %cmp = icmp ugt i32 %16, %add, !dbg !6186
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6187

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6188
  %20 = load i32, i32* %n.addr, align 4, !dbg !6190
  %add6 = add i32 %19, %20, !dbg !6191
  br label %cond.end, !dbg !6192

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6193
  br label %cond.end, !dbg !6195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6196
  store i32 %cond, i32* %re_index, align 4, !dbg !6198
  %22 = load i32, i32* %re_index, align 4, !dbg !6199
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6200
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6201
  store i32 %22, i32* %index7, align 8, !dbg !6202
  %24 = load i32, i32* %tmp, align 4, !dbg !6203
  ret i32 %24, !dbg !6204
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #4 !dbg !6205 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6208, metadata !2062), !dbg !6209
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6210
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !6211
  ret void, !dbg !6212
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !6213 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6216, metadata !2062), !dbg !6217
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6218
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6219
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6219
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6220
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6221
  %sub = sub nsw i32 %1, %call, !dbg !6222
  ret i32 %sub, !dbg !6223
}

; Function Attrs: nounwind uwtable
define internal void @decode_channel_map([3 x i8]* %layout_map, i32 %type, %struct.GetBitContext* %gb, i32 %n) #1 !dbg !6224 {
entry:
  %layout_map.addr = alloca [3 x i8]*, align 8
  %type.addr = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %syn_ele = alloca i32, align 4
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6227, metadata !2062), !dbg !6228
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6229, metadata !2062), !dbg !6230
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6231, metadata !2062), !dbg !6232
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6233, metadata !2062), !dbg !6234
  br label %while.cond, !dbg !6235

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i32, i32* %n.addr, align 4, !dbg !6236
  %dec = add nsw i32 %0, -1, !dbg !6236
  store i32 %dec, i32* %n.addr, align 4, !dbg !6236
  %tobool = icmp ne i32 %0, 0, !dbg !6238
  br i1 %tobool, label %while.body, label %while.end, !dbg !6238

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %syn_ele, metadata !6239, metadata !2062), !dbg !6241
  %1 = load i32, i32* %type.addr, align 4, !dbg !6242
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb
    i32 5, label %sw.bb1
    i32 4, label %sw.bb2
  ], !dbg !6243

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6244
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !6246
  store i32 %call, i32* %syn_ele, align 4, !dbg !6247
  br label %sw.epilog, !dbg !6248

sw.bb1:                                           ; preds = %while.body
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6249
  call void @skip_bits1(%struct.GetBitContext* %3), !dbg !6250
  store i32 2, i32* %syn_ele, align 4, !dbg !6251
  br label %sw.epilog, !dbg !6252

sw.bb2:                                           ; preds = %while.body
  store i32 3, i32* %syn_ele, align 4, !dbg !6253
  br label %sw.epilog, !dbg !6254

sw.default:                                       ; preds = %while.body
  br label %do.body, !dbg !6255, !llvm.loop !6256

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i32 0, i32 0), i32 713), !dbg !6257
  call void @abort() #9, !dbg !6262
  unreachable, !dbg !6264

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !6265

sw.epilog:                                        ; preds = %do.end, %sw.bb2, %sw.bb1, %sw.bb
  %4 = load i32, i32* %syn_ele, align 4, !dbg !6266
  %conv = trunc i32 %4 to i8, !dbg !6266
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6267
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, !dbg !6267
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !6267
  store i8 %conv, i8* %arrayidx3, align 1, !dbg !6268
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6269
  %call4 = call i32 @get_bits(%struct.GetBitContext* %6, i32 4), !dbg !6270
  %conv5 = trunc i32 %call4 to i8, !dbg !6270
  %7 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6271
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i64 0, !dbg !6271
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 1, !dbg !6271
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !6272
  %8 = load i32, i32* %type.addr, align 4, !dbg !6273
  %conv8 = trunc i32 %8 to i8, !dbg !6273
  %9 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6274
  %arrayidx9 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, !dbg !6274
  %arrayidx10 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx9, i64 0, i64 2, !dbg !6274
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !6275
  %10 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6276
  %incdec.ptr = getelementptr inbounds [3 x i8], [3 x i8]* %10, i32 1, !dbg !6276
  store [3 x i8]* %incdec.ptr, [3 x i8]** %layout_map.addr, align 8, !dbg !6276
  br label %while.cond, !dbg !6277, !llvm.loop !6279

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6280
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @relative_align_get_bits(%struct.GetBitContext* %gb, i32 %reference_position) #4 !dbg !6281 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %reference_position.addr = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6282, metadata !2062), !dbg !6283
  store i32 %reference_position, i32* %reference_position.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reference_position.addr, metadata !6284, metadata !2062), !dbg !6285
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6286, metadata !2062), !dbg !6287
  %0 = load i32, i32* %reference_position.addr, align 4, !dbg !6288
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6289
  %call = call i32 @get_bits_count(%struct.GetBitContext* %1), !dbg !6290
  %sub = sub nsw i32 %0, %call, !dbg !6291
  %and = and i32 %sub, 7, !dbg !6292
  store i32 %and, i32* %n, align 4, !dbg !6287
  %2 = load i32, i32* %n, align 4, !dbg !6293
  %tobool = icmp ne i32 %2, 0, !dbg !6293
  br i1 %tobool, label %if.then, label %if.end, !dbg !6295

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6296
  %4 = load i32, i32* %n, align 4, !dbg !6297
  call void @skip_bits(%struct.GetBitContext* %3, i32 %4), !dbg !6298
  br label %if.end, !dbg !6298

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6299
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !6300 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6304, metadata !2062), !dbg !6305
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !6306, metadata !2062), !dbg !6307
  %0 = load i32, i32* %a.addr, align 4, !dbg !6308
  %1 = load i8, i8* %s.addr, align 1, !dbg !6309
  %conv = sext i8 %1 to i32, !dbg !6309
  %sub = sub nsw i32 0, %conv, !dbg !6310
  %conv1 = trunc i32 %sub to i8, !dbg !6311
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !6308, !srcloc !6312
  store i32 %2, i32* %a.addr, align 4, !dbg !6308
  %3 = load i32, i32* %a.addr, align 4, !dbg !6313
  ret i32 %3, !dbg !6314
}

declare void @avpriv_request_sample(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i64 @sniff_channel_order([3 x i8]* %layout_map, i32 %tags) #1 !dbg !6315 {
entry:
  %retval = alloca i64, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %total_non_cc_elements = alloca i32, align 4
  %e2c_vec = alloca [64 x %struct.elem_to_channel], align 16
  %num_front_channels = alloca i32, align 4
  %num_side_channels = alloca i32, align 4
  %num_back_channels = alloca i32, align 4
  %layout = alloca i64, align 8
  %.compoundliteral = alloca %struct.elem_to_channel, align 8
  %.compoundliteral85 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral108 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral130 = alloca %struct.elem_to_channel, align 8
  %next_n = alloca i32, align 4
  %SWAP_tmp = alloca %struct.elem_to_channel, align 8
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6318, metadata !2062), !dbg !6319
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6320, metadata !2062), !dbg !6321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6322, metadata !2062), !dbg !6323
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6324, metadata !2062), !dbg !6325
  call void @llvm.dbg.declare(metadata i32* %total_non_cc_elements, metadata !6326, metadata !2062), !dbg !6327
  call void @llvm.dbg.declare(metadata [64 x %struct.elem_to_channel]* %e2c_vec, metadata !6328, metadata !2062), !dbg !6336
  %0 = bitcast [64 x %struct.elem_to_channel]* %e2c_vec to i8*, !dbg !6336
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 1024, i32 16, i1 false), !dbg !6336
  call void @llvm.dbg.declare(metadata i32* %num_front_channels, metadata !6337, metadata !2062), !dbg !6338
  call void @llvm.dbg.declare(metadata i32* %num_side_channels, metadata !6339, metadata !2062), !dbg !6340
  call void @llvm.dbg.declare(metadata i32* %num_back_channels, metadata !6341, metadata !2062), !dbg !6342
  call void @llvm.dbg.declare(metadata i64* %layout, metadata !6343, metadata !2062), !dbg !6344
  %1 = load i32, i32* %tags.addr, align 4, !dbg !6345
  %conv = sext i32 %1 to i64, !dbg !6345
  %cmp = icmp ult i64 64, %conv, !dbg !6347
  br i1 %cmp, label %if.then, label %if.end, !dbg !6348

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !6349
  br label %return, !dbg !6349

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6350
  %2 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6351
  %3 = load i32, i32* %tags.addr, align 4, !dbg !6352
  %call = call i32 @count_paired_channels([3 x i8]* %2, i32 %3, i32 1, i32* %i), !dbg !6353
  store i32 %call, i32* %num_front_channels, align 4, !dbg !6354
  %4 = load i32, i32* %num_front_channels, align 4, !dbg !6355
  %cmp2 = icmp slt i32 %4, 0, !dbg !6357
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6358

if.then4:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !6359
  br label %return, !dbg !6359

if.end5:                                          ; preds = %if.end
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6360
  %6 = load i32, i32* %tags.addr, align 4, !dbg !6361
  %call6 = call i32 @count_paired_channels([3 x i8]* %5, i32 %6, i32 2, i32* %i), !dbg !6362
  store i32 %call6, i32* %num_side_channels, align 4, !dbg !6363
  %7 = load i32, i32* %num_side_channels, align 4, !dbg !6364
  %cmp7 = icmp slt i32 %7, 0, !dbg !6366
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6367

if.then9:                                         ; preds = %if.end5
  store i64 0, i64* %retval, align 8, !dbg !6368
  br label %return, !dbg !6368

if.end10:                                         ; preds = %if.end5
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6369
  %9 = load i32, i32* %tags.addr, align 4, !dbg !6370
  %call11 = call i32 @count_paired_channels([3 x i8]* %8, i32 %9, i32 3, i32* %i), !dbg !6371
  store i32 %call11, i32* %num_back_channels, align 4, !dbg !6372
  %10 = load i32, i32* %num_back_channels, align 4, !dbg !6373
  %cmp12 = icmp slt i32 %10, 0, !dbg !6375
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6376

if.then14:                                        ; preds = %if.end10
  store i64 0, i64* %retval, align 8, !dbg !6377
  br label %return, !dbg !6377

if.end15:                                         ; preds = %if.end10
  %11 = load i32, i32* %num_side_channels, align 4, !dbg !6378
  %cmp16 = icmp eq i32 %11, 0, !dbg !6380
  br i1 %cmp16, label %land.lhs.true, label %if.end21, !dbg !6381

land.lhs.true:                                    ; preds = %if.end15
  %12 = load i32, i32* %num_back_channels, align 4, !dbg !6382
  %cmp18 = icmp sge i32 %12, 4, !dbg !6384
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6385

if.then20:                                        ; preds = %land.lhs.true
  store i32 2, i32* %num_side_channels, align 4, !dbg !6386
  %13 = load i32, i32* %num_back_channels, align 4, !dbg !6388
  %sub = sub nsw i32 %13, 2, !dbg !6388
  store i32 %sub, i32* %num_back_channels, align 4, !dbg !6388
  br label %if.end21, !dbg !6389

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %if.end15
  store i32 0, i32* %i, align 4, !dbg !6390
  %14 = load i32, i32* %num_front_channels, align 4, !dbg !6391
  %and = and i32 %14, 1, !dbg !6393
  %tobool = icmp ne i32 %and, 0, !dbg !6393
  br i1 %tobool, label %if.then22, label %if.end26, !dbg !6394

if.then22:                                        ; preds = %if.end21
  %15 = load i32, i32* %i, align 4, !dbg !6395
  %idxprom = sext i32 %15 to i64, !dbg !6397
  %arrayidx = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom, !dbg !6397
  %av_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 0, !dbg !6398
  store i64 4, i64* %av_position, align 8, !dbg !6398
  %syn_ele = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 1, !dbg !6398
  store i8 0, i8* %syn_ele, align 8, !dbg !6398
  %elem_id = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 2, !dbg !6398
  %16 = load i32, i32* %i, align 4, !dbg !6399
  %idxprom23 = sext i32 %16 to i64, !dbg !6400
  %17 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6400
  %arrayidx24 = getelementptr inbounds [3 x i8], [3 x i8]* %17, i64 %idxprom23, !dbg !6400
  %arrayidx25 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx24, i64 0, i64 1, !dbg !6400
  %18 = load i8, i8* %arrayidx25, align 1, !dbg !6400
  store i8 %18, i8* %elem_id, align 1, !dbg !6398
  %aac_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 3, !dbg !6398
  store i8 1, i8* %aac_position, align 2, !dbg !6398
  %19 = bitcast %struct.elem_to_channel* %arrayidx to i8*, !dbg !6401
  %20 = bitcast %struct.elem_to_channel* %.compoundliteral to i8*, !dbg !6401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false), !dbg !6401
  %21 = load i32, i32* %i, align 4, !dbg !6402
  %inc = add nsw i32 %21, 1, !dbg !6402
  store i32 %inc, i32* %i, align 4, !dbg !6402
  %22 = load i32, i32* %num_front_channels, align 4, !dbg !6403
  %dec = add nsw i32 %22, -1, !dbg !6403
  store i32 %dec, i32* %num_front_channels, align 4, !dbg !6403
  br label %if.end26, !dbg !6404

if.end26:                                         ; preds = %if.then22, %if.end21
  %23 = load i32, i32* %num_front_channels, align 4, !dbg !6405
  %cmp27 = icmp sge i32 %23, 4, !dbg !6407
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !6408

if.then29:                                        ; preds = %if.end26
  %arraydecay = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6409
  %24 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6411
  %25 = load i32, i32* %i, align 4, !dbg !6412
  %call30 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay, [3 x i8]* %24, i32 %25, i64 64, i64 128, i32 1), !dbg !6413
  %26 = load i32, i32* %i, align 4, !dbg !6414
  %add = add nsw i32 %26, %call30, !dbg !6414
  store i32 %add, i32* %i, align 4, !dbg !6414
  %27 = load i32, i32* %num_front_channels, align 4, !dbg !6415
  %sub31 = sub nsw i32 %27, 2, !dbg !6415
  store i32 %sub31, i32* %num_front_channels, align 4, !dbg !6415
  br label %if.end32, !dbg !6416

if.end32:                                         ; preds = %if.then29, %if.end26
  %28 = load i32, i32* %num_front_channels, align 4, !dbg !6417
  %cmp33 = icmp sge i32 %28, 2, !dbg !6419
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !6420

if.then35:                                        ; preds = %if.end32
  %arraydecay36 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6421
  %29 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6423
  %30 = load i32, i32* %i, align 4, !dbg !6424
  %call37 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay36, [3 x i8]* %29, i32 %30, i64 1, i64 2, i32 1), !dbg !6425
  %31 = load i32, i32* %i, align 4, !dbg !6426
  %add38 = add nsw i32 %31, %call37, !dbg !6426
  store i32 %add38, i32* %i, align 4, !dbg !6426
  %32 = load i32, i32* %num_front_channels, align 4, !dbg !6427
  %sub39 = sub nsw i32 %32, 2, !dbg !6427
  store i32 %sub39, i32* %num_front_channels, align 4, !dbg !6427
  br label %if.end40, !dbg !6428

if.end40:                                         ; preds = %if.then35, %if.end32
  br label %while.cond, !dbg !6429

while.cond:                                       ; preds = %while.body, %if.end40
  %33 = load i32, i32* %num_front_channels, align 4, !dbg !6430
  %cmp41 = icmp sge i32 %33, 2, !dbg !6432
  br i1 %cmp41, label %while.body, label %while.end, !dbg !6433

while.body:                                       ; preds = %while.cond
  %arraydecay43 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6434
  %34 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6436
  %35 = load i32, i32* %i, align 4, !dbg !6437
  %call44 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay43, [3 x i8]* %34, i32 %35, i64 -1, i64 -1, i32 1), !dbg !6438
  %36 = load i32, i32* %i, align 4, !dbg !6439
  %add45 = add nsw i32 %36, %call44, !dbg !6439
  store i32 %add45, i32* %i, align 4, !dbg !6439
  %37 = load i32, i32* %num_front_channels, align 4, !dbg !6440
  %sub46 = sub nsw i32 %37, 2, !dbg !6440
  store i32 %sub46, i32* %num_front_channels, align 4, !dbg !6440
  br label %while.cond, !dbg !6441, !llvm.loop !6443

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %num_side_channels, align 4, !dbg !6444
  %cmp47 = icmp sge i32 %38, 2, !dbg !6446
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !6447

if.then49:                                        ; preds = %while.end
  %arraydecay50 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6448
  %39 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6450
  %40 = load i32, i32* %i, align 4, !dbg !6451
  %call51 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay50, [3 x i8]* %39, i32 %40, i64 512, i64 1024, i32 1), !dbg !6452
  %41 = load i32, i32* %i, align 4, !dbg !6453
  %add52 = add nsw i32 %41, %call51, !dbg !6453
  store i32 %add52, i32* %i, align 4, !dbg !6453
  %42 = load i32, i32* %num_side_channels, align 4, !dbg !6454
  %sub53 = sub nsw i32 %42, 2, !dbg !6454
  store i32 %sub53, i32* %num_side_channels, align 4, !dbg !6454
  br label %if.end54, !dbg !6455

if.end54:                                         ; preds = %if.then49, %while.end
  br label %while.cond55, !dbg !6456

while.cond55:                                     ; preds = %while.body58, %if.end54
  %43 = load i32, i32* %num_side_channels, align 4, !dbg !6457
  %cmp56 = icmp sge i32 %43, 2, !dbg !6458
  br i1 %cmp56, label %while.body58, label %while.end63, !dbg !6459

while.body58:                                     ; preds = %while.cond55
  %arraydecay59 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6460
  %44 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6462
  %45 = load i32, i32* %i, align 4, !dbg !6463
  %call60 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay59, [3 x i8]* %44, i32 %45, i64 -1, i64 -1, i32 2), !dbg !6464
  %46 = load i32, i32* %i, align 4, !dbg !6465
  %add61 = add nsw i32 %46, %call60, !dbg !6465
  store i32 %add61, i32* %i, align 4, !dbg !6465
  %47 = load i32, i32* %num_side_channels, align 4, !dbg !6466
  %sub62 = sub nsw i32 %47, 2, !dbg !6466
  store i32 %sub62, i32* %num_side_channels, align 4, !dbg !6466
  br label %while.cond55, !dbg !6467, !llvm.loop !6468

while.end63:                                      ; preds = %while.cond55
  br label %while.cond64, !dbg !6469

while.cond64:                                     ; preds = %while.body67, %while.end63
  %48 = load i32, i32* %num_back_channels, align 4, !dbg !6470
  %cmp65 = icmp sge i32 %48, 4, !dbg !6471
  br i1 %cmp65, label %while.body67, label %while.end72, !dbg !6472

while.body67:                                     ; preds = %while.cond64
  %arraydecay68 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6473
  %49 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6475
  %50 = load i32, i32* %i, align 4, !dbg !6476
  %call69 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay68, [3 x i8]* %49, i32 %50, i64 -1, i64 -1, i32 3), !dbg !6477
  %51 = load i32, i32* %i, align 4, !dbg !6478
  %add70 = add nsw i32 %51, %call69, !dbg !6478
  store i32 %add70, i32* %i, align 4, !dbg !6478
  %52 = load i32, i32* %num_back_channels, align 4, !dbg !6479
  %sub71 = sub nsw i32 %52, 2, !dbg !6479
  store i32 %sub71, i32* %num_back_channels, align 4, !dbg !6479
  br label %while.cond64, !dbg !6480, !llvm.loop !6481

while.end72:                                      ; preds = %while.cond64
  %53 = load i32, i32* %num_back_channels, align 4, !dbg !6482
  %cmp73 = icmp sge i32 %53, 2, !dbg !6484
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !6485

if.then75:                                        ; preds = %while.end72
  %arraydecay76 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i32 0, i32 0, !dbg !6486
  %54 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6488
  %55 = load i32, i32* %i, align 4, !dbg !6489
  %call77 = call i32 @assign_pair(%struct.elem_to_channel* %arraydecay76, [3 x i8]* %54, i32 %55, i64 16, i64 32, i32 3), !dbg !6490
  %56 = load i32, i32* %i, align 4, !dbg !6491
  %add78 = add nsw i32 %56, %call77, !dbg !6491
  store i32 %add78, i32* %i, align 4, !dbg !6491
  %57 = load i32, i32* %num_back_channels, align 4, !dbg !6492
  %sub79 = sub nsw i32 %57, 2, !dbg !6492
  store i32 %sub79, i32* %num_back_channels, align 4, !dbg !6492
  br label %if.end80, !dbg !6493

if.end80:                                         ; preds = %if.then75, %while.end72
  %58 = load i32, i32* %num_back_channels, align 4, !dbg !6494
  %tobool81 = icmp ne i32 %58, 0, !dbg !6494
  br i1 %tobool81, label %if.then82, label %if.end95, !dbg !6496

if.then82:                                        ; preds = %if.end80
  %59 = load i32, i32* %i, align 4, !dbg !6497
  %idxprom83 = sext i32 %59 to i64, !dbg !6499
  %arrayidx84 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom83, !dbg !6499
  %av_position86 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 0, !dbg !6500
  store i64 256, i64* %av_position86, align 8, !dbg !6500
  %syn_ele87 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 1, !dbg !6500
  store i8 0, i8* %syn_ele87, align 8, !dbg !6500
  %elem_id88 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 2, !dbg !6500
  %60 = load i32, i32* %i, align 4, !dbg !6501
  %idxprom89 = sext i32 %60 to i64, !dbg !6502
  %61 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6502
  %arrayidx90 = getelementptr inbounds [3 x i8], [3 x i8]* %61, i64 %idxprom89, !dbg !6502
  %arrayidx91 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx90, i64 0, i64 1, !dbg !6502
  %62 = load i8, i8* %arrayidx91, align 1, !dbg !6502
  store i8 %62, i8* %elem_id88, align 1, !dbg !6500
  %aac_position92 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral85, i32 0, i32 3, !dbg !6500
  store i8 3, i8* %aac_position92, align 2, !dbg !6500
  %63 = bitcast %struct.elem_to_channel* %arrayidx84 to i8*, !dbg !6503
  %64 = bitcast %struct.elem_to_channel* %.compoundliteral85 to i8*, !dbg !6503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false), !dbg !6503
  %65 = load i32, i32* %i, align 4, !dbg !6504
  %inc93 = add nsw i32 %65, 1, !dbg !6504
  store i32 %inc93, i32* %i, align 4, !dbg !6504
  %66 = load i32, i32* %num_back_channels, align 4, !dbg !6505
  %dec94 = add nsw i32 %66, -1, !dbg !6505
  store i32 %dec94, i32* %num_back_channels, align 4, !dbg !6505
  br label %if.end95, !dbg !6506

if.end95:                                         ; preds = %if.then82, %if.end80
  %67 = load i32, i32* %i, align 4, !dbg !6507
  %68 = load i32, i32* %tags.addr, align 4, !dbg !6509
  %cmp96 = icmp slt i32 %67, %68, !dbg !6510
  br i1 %cmp96, label %land.lhs.true98, label %if.end117, !dbg !6511

land.lhs.true98:                                  ; preds = %if.end95
  %69 = load i32, i32* %i, align 4, !dbg !6512
  %idxprom99 = sext i32 %69 to i64, !dbg !6514
  %70 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6514
  %arrayidx100 = getelementptr inbounds [3 x i8], [3 x i8]* %70, i64 %idxprom99, !dbg !6514
  %arrayidx101 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx100, i64 0, i64 2, !dbg !6514
  %71 = load i8, i8* %arrayidx101, align 1, !dbg !6514
  %conv102 = zext i8 %71 to i32, !dbg !6514
  %cmp103 = icmp eq i32 %conv102, 4, !dbg !6515
  br i1 %cmp103, label %if.then105, label %if.end117, !dbg !6516

if.then105:                                       ; preds = %land.lhs.true98
  %72 = load i32, i32* %i, align 4, !dbg !6517
  %idxprom106 = sext i32 %72 to i64, !dbg !6519
  %arrayidx107 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom106, !dbg !6519
  %av_position109 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 0, !dbg !6520
  store i64 8, i64* %av_position109, align 8, !dbg !6520
  %syn_ele110 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 1, !dbg !6520
  store i8 3, i8* %syn_ele110, align 8, !dbg !6520
  %elem_id111 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 2, !dbg !6520
  %73 = load i32, i32* %i, align 4, !dbg !6521
  %idxprom112 = sext i32 %73 to i64, !dbg !6522
  %74 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6522
  %arrayidx113 = getelementptr inbounds [3 x i8], [3 x i8]* %74, i64 %idxprom112, !dbg !6522
  %arrayidx114 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx113, i64 0, i64 1, !dbg !6522
  %75 = load i8, i8* %arrayidx114, align 1, !dbg !6522
  store i8 %75, i8* %elem_id111, align 1, !dbg !6520
  %aac_position115 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral108, i32 0, i32 3, !dbg !6520
  store i8 4, i8* %aac_position115, align 2, !dbg !6520
  %76 = bitcast %struct.elem_to_channel* %arrayidx107 to i8*, !dbg !6523
  %77 = bitcast %struct.elem_to_channel* %.compoundliteral108 to i8*, !dbg !6523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 16, i32 8, i1 false), !dbg !6523
  %78 = load i32, i32* %i, align 4, !dbg !6524
  %inc116 = add nsw i32 %78, 1, !dbg !6524
  store i32 %inc116, i32* %i, align 4, !dbg !6524
  br label %if.end117, !dbg !6525

if.end117:                                        ; preds = %if.then105, %land.lhs.true98, %if.end95
  br label %while.cond118, !dbg !6526

while.cond118:                                    ; preds = %while.body127, %if.end117
  %79 = load i32, i32* %i, align 4, !dbg !6527
  %80 = load i32, i32* %tags.addr, align 4, !dbg !6528
  %cmp119 = icmp slt i32 %79, %80, !dbg !6529
  br i1 %cmp119, label %land.rhs, label %land.end, !dbg !6530

land.rhs:                                         ; preds = %while.cond118
  %81 = load i32, i32* %i, align 4, !dbg !6531
  %idxprom121 = sext i32 %81 to i64, !dbg !6532
  %82 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6532
  %arrayidx122 = getelementptr inbounds [3 x i8], [3 x i8]* %82, i64 %idxprom121, !dbg !6532
  %arrayidx123 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx122, i64 0, i64 2, !dbg !6532
  %83 = load i8, i8* %arrayidx123, align 1, !dbg !6532
  %conv124 = zext i8 %83 to i32, !dbg !6532
  %cmp125 = icmp eq i32 %conv124, 4, !dbg !6533
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond118
  %84 = phi i1 [ false, %while.cond118 ], [ %cmp125, %land.rhs ]
  br i1 %84, label %while.body127, label %while.end139, !dbg !6534

while.body127:                                    ; preds = %land.end
  %85 = load i32, i32* %i, align 4, !dbg !6536
  %idxprom128 = sext i32 %85 to i64, !dbg !6538
  %arrayidx129 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom128, !dbg !6538
  %av_position131 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 0, !dbg !6539
  store i64 -1, i64* %av_position131, align 8, !dbg !6539
  %syn_ele132 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 1, !dbg !6539
  store i8 3, i8* %syn_ele132, align 8, !dbg !6539
  %elem_id133 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 2, !dbg !6539
  %86 = load i32, i32* %i, align 4, !dbg !6540
  %idxprom134 = sext i32 %86 to i64, !dbg !6541
  %87 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6541
  %arrayidx135 = getelementptr inbounds [3 x i8], [3 x i8]* %87, i64 %idxprom134, !dbg !6541
  %arrayidx136 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx135, i64 0, i64 1, !dbg !6541
  %88 = load i8, i8* %arrayidx136, align 1, !dbg !6541
  store i8 %88, i8* %elem_id133, align 1, !dbg !6539
  %aac_position137 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral130, i32 0, i32 3, !dbg !6539
  store i8 4, i8* %aac_position137, align 2, !dbg !6539
  %89 = bitcast %struct.elem_to_channel* %arrayidx129 to i8*, !dbg !6542
  %90 = bitcast %struct.elem_to_channel* %.compoundliteral130 to i8*, !dbg !6542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false), !dbg !6542
  %91 = load i32, i32* %i, align 4, !dbg !6543
  %inc138 = add nsw i32 %91, 1, !dbg !6543
  store i32 %inc138, i32* %i, align 4, !dbg !6543
  br label %while.cond118, !dbg !6544, !llvm.loop !6546

while.end139:                                     ; preds = %land.end
  %92 = load i32, i32* %i, align 4, !dbg !6547
  store i32 %92, i32* %n, align 4, !dbg !6548
  store i32 %92, i32* %total_non_cc_elements, align 4, !dbg !6549
  br label %do.body, !dbg !6550, !llvm.loop !6551

do.body:                                          ; preds = %do.cond, %while.end139
  call void @llvm.dbg.declare(metadata i32* %next_n, metadata !6552, metadata !2062), !dbg !6554
  store i32 0, i32* %next_n, align 4, !dbg !6554
  store i32 1, i32* %i, align 4, !dbg !6555
  br label %for.cond, !dbg !6557

for.cond:                                         ; preds = %for.inc, %do.body
  %93 = load i32, i32* %i, align 4, !dbg !6558
  %94 = load i32, i32* %n, align 4, !dbg !6561
  %cmp140 = icmp slt i32 %93, %94, !dbg !6562
  br i1 %cmp140, label %for.body, label %for.end, !dbg !6563

for.body:                                         ; preds = %for.cond
  %95 = load i32, i32* %i, align 4, !dbg !6564
  %sub142 = sub nsw i32 %95, 1, !dbg !6566
  %idxprom143 = sext i32 %sub142 to i64, !dbg !6567
  %arrayidx144 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom143, !dbg !6567
  %av_position145 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx144, i32 0, i32 0, !dbg !6568
  %96 = load i64, i64* %av_position145, align 16, !dbg !6568
  %97 = load i32, i32* %i, align 4, !dbg !6569
  %idxprom146 = sext i32 %97 to i64, !dbg !6570
  %arrayidx147 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom146, !dbg !6570
  %av_position148 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx147, i32 0, i32 0, !dbg !6571
  %98 = load i64, i64* %av_position148, align 16, !dbg !6571
  %cmp149 = icmp ugt i64 %96, %98, !dbg !6572
  br i1 %cmp149, label %if.then151, label %if.end163, !dbg !6573

if.then151:                                       ; preds = %for.body
  br label %do.body152, !dbg !6574, !llvm.loop !6576

do.body152:                                       ; preds = %if.then151
  call void @llvm.dbg.declare(metadata %struct.elem_to_channel* %SWAP_tmp, metadata !6577, metadata !2062), !dbg !6579
  %99 = load i32, i32* %i, align 4, !dbg !6580
  %idxprom153 = sext i32 %99 to i64, !dbg !6582
  %arrayidx154 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom153, !dbg !6582
  %100 = bitcast %struct.elem_to_channel* %SWAP_tmp to i8*, !dbg !6582
  %101 = bitcast %struct.elem_to_channel* %arrayidx154 to i8*, !dbg !6582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 16, i32 8, i1 false), !dbg !6582
  %102 = load i32, i32* %i, align 4, !dbg !6583
  %idxprom155 = sext i32 %102 to i64, !dbg !6584
  %arrayidx156 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom155, !dbg !6584
  %103 = load i32, i32* %i, align 4, !dbg !6585
  %sub157 = sub nsw i32 %103, 1, !dbg !6586
  %idxprom158 = sext i32 %sub157 to i64, !dbg !6587
  %arrayidx159 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom158, !dbg !6587
  %104 = bitcast %struct.elem_to_channel* %arrayidx156 to i8*, !dbg !6587
  %105 = bitcast %struct.elem_to_channel* %arrayidx159 to i8*, !dbg !6587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 16, i1 false), !dbg !6588
  %106 = load i32, i32* %i, align 4, !dbg !6590
  %sub160 = sub nsw i32 %106, 1, !dbg !6591
  %idxprom161 = sext i32 %sub160 to i64, !dbg !6592
  %arrayidx162 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom161, !dbg !6592
  %107 = bitcast %struct.elem_to_channel* %arrayidx162 to i8*, !dbg !6593
  %108 = bitcast %struct.elem_to_channel* %SWAP_tmp to i8*, !dbg !6593
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 16, i32 8, i1 false), !dbg !6594
  br label %do.end, !dbg !6596

do.end:                                           ; preds = %do.body152
  %109 = load i32, i32* %i, align 4, !dbg !6597
  store i32 %109, i32* %next_n, align 4, !dbg !6598
  br label %if.end163, !dbg !6599

if.end163:                                        ; preds = %do.end, %for.body
  br label %for.inc, !dbg !6600

for.inc:                                          ; preds = %if.end163
  %110 = load i32, i32* %i, align 4, !dbg !6602
  %inc164 = add nsw i32 %110, 1, !dbg !6602
  store i32 %inc164, i32* %i, align 4, !dbg !6602
  br label %for.cond, !dbg !6604, !llvm.loop !6605

for.end:                                          ; preds = %for.cond
  %111 = load i32, i32* %next_n, align 4, !dbg !6607
  store i32 %111, i32* %n, align 4, !dbg !6608
  br label %do.cond, !dbg !6609

do.cond:                                          ; preds = %for.end
  %112 = load i32, i32* %n, align 4, !dbg !6610
  %cmp165 = icmp sgt i32 %112, 0, !dbg !6611
  br i1 %cmp165, label %do.body, label %do.end167, !dbg !6612, !llvm.loop !6551

do.end167:                                        ; preds = %do.cond
  store i64 0, i64* %layout, align 8, !dbg !6613
  store i32 0, i32* %i, align 4, !dbg !6614
  br label %for.cond168, !dbg !6616

for.cond168:                                      ; preds = %for.inc200, %do.end167
  %113 = load i32, i32* %i, align 4, !dbg !6617
  %114 = load i32, i32* %total_non_cc_elements, align 4, !dbg !6620
  %cmp169 = icmp slt i32 %113, %114, !dbg !6621
  br i1 %cmp169, label %for.body171, label %for.end202, !dbg !6622

for.body171:                                      ; preds = %for.cond168
  %115 = load i32, i32* %i, align 4, !dbg !6623
  %idxprom172 = sext i32 %115 to i64, !dbg !6625
  %arrayidx173 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom172, !dbg !6625
  %syn_ele174 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx173, i32 0, i32 1, !dbg !6626
  %116 = load i8, i8* %syn_ele174, align 8, !dbg !6626
  %117 = load i32, i32* %i, align 4, !dbg !6627
  %idxprom175 = sext i32 %117 to i64, !dbg !6628
  %118 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6628
  %arrayidx176 = getelementptr inbounds [3 x i8], [3 x i8]* %118, i64 %idxprom175, !dbg !6628
  %arrayidx177 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx176, i64 0, i64 0, !dbg !6628
  store i8 %116, i8* %arrayidx177, align 1, !dbg !6629
  %119 = load i32, i32* %i, align 4, !dbg !6630
  %idxprom178 = sext i32 %119 to i64, !dbg !6631
  %arrayidx179 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom178, !dbg !6631
  %elem_id180 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx179, i32 0, i32 2, !dbg !6632
  %120 = load i8, i8* %elem_id180, align 1, !dbg !6632
  %121 = load i32, i32* %i, align 4, !dbg !6633
  %idxprom181 = sext i32 %121 to i64, !dbg !6634
  %122 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6634
  %arrayidx182 = getelementptr inbounds [3 x i8], [3 x i8]* %122, i64 %idxprom181, !dbg !6634
  %arrayidx183 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx182, i64 0, i64 1, !dbg !6634
  store i8 %120, i8* %arrayidx183, align 1, !dbg !6635
  %123 = load i32, i32* %i, align 4, !dbg !6636
  %idxprom184 = sext i32 %123 to i64, !dbg !6637
  %arrayidx185 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom184, !dbg !6637
  %aac_position186 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx185, i32 0, i32 3, !dbg !6638
  %124 = load i8, i8* %aac_position186, align 2, !dbg !6638
  %125 = load i32, i32* %i, align 4, !dbg !6639
  %idxprom187 = sext i32 %125 to i64, !dbg !6640
  %126 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6640
  %arrayidx188 = getelementptr inbounds [3 x i8], [3 x i8]* %126, i64 %idxprom187, !dbg !6640
  %arrayidx189 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx188, i64 0, i64 2, !dbg !6640
  store i8 %124, i8* %arrayidx189, align 1, !dbg !6641
  %127 = load i32, i32* %i, align 4, !dbg !6642
  %idxprom190 = sext i32 %127 to i64, !dbg !6644
  %arrayidx191 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom190, !dbg !6644
  %av_position192 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx191, i32 0, i32 0, !dbg !6645
  %128 = load i64, i64* %av_position192, align 16, !dbg !6645
  %cmp193 = icmp ne i64 %128, -1, !dbg !6646
  br i1 %cmp193, label %if.then195, label %if.end199, !dbg !6647

if.then195:                                       ; preds = %for.body171
  %129 = load i32, i32* %i, align 4, !dbg !6648
  %idxprom196 = sext i32 %129 to i64, !dbg !6650
  %arrayidx197 = getelementptr inbounds [64 x %struct.elem_to_channel], [64 x %struct.elem_to_channel]* %e2c_vec, i64 0, i64 %idxprom196, !dbg !6650
  %av_position198 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %arrayidx197, i32 0, i32 0, !dbg !6651
  %130 = load i64, i64* %av_position198, align 16, !dbg !6651
  %131 = load i64, i64* %layout, align 8, !dbg !6652
  %or = or i64 %131, %130, !dbg !6652
  store i64 %or, i64* %layout, align 8, !dbg !6652
  br label %if.end199, !dbg !6653

if.end199:                                        ; preds = %if.then195, %for.body171
  br label %for.inc200, !dbg !6654

for.inc200:                                       ; preds = %if.end199
  %132 = load i32, i32* %i, align 4, !dbg !6655
  %inc201 = add nsw i32 %132, 1, !dbg !6655
  store i32 %inc201, i32* %i, align 4, !dbg !6655
  br label %for.cond168, !dbg !6657, !llvm.loop !6658

for.end202:                                       ; preds = %for.cond168
  %133 = load i64, i64* %layout, align 8, !dbg !6660
  store i64 %133, i64* %retval, align 8, !dbg !6661
  br label %return, !dbg !6661

return:                                           ; preds = %for.end202, %if.then14, %if.then9, %if.then4, %if.then
  %134 = load i64, i64* %retval, align 8, !dbg !6662
  ret i64 %134, !dbg !6662
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @che_configure(%struct.AACContext* %ac, i32 %che_pos, i32 %type, i32 %id, i32* %channels) #0 !dbg !6663 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %che_pos.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %channels.addr = alloca i32*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !6666, metadata !2062), !dbg !6667
  store i32 %che_pos, i32* %che_pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %che_pos.addr, metadata !6668, metadata !2062), !dbg !6669
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6670, metadata !2062), !dbg !6671
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6672, metadata !2062), !dbg !6673
  store i32* %channels, i32** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %channels.addr, metadata !6674, metadata !2062), !dbg !6675
  %0 = load i32*, i32** %channels.addr, align 8, !dbg !6676
  %1 = load i32, i32* %0, align 4, !dbg !6678
  %cmp = icmp sge i32 %1, 64, !dbg !6679
  br i1 %cmp, label %if.then, label %if.end, !dbg !6680

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6681
  br label %return, !dbg !6681

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %che_pos.addr, align 4, !dbg !6682
  %tobool = icmp ne i32 %2, 0, !dbg !6682
  br i1 %tobool, label %if.then1, label %if.else, !dbg !6684

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %id.addr, align 4, !dbg !6685
  %idxprom = sext i32 %3 to i64, !dbg !6688
  %4 = load i32, i32* %type.addr, align 4, !dbg !6689
  %idxprom2 = sext i32 %4 to i64, !dbg !6688
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6688
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 5, !dbg !6690
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 %idxprom2, !dbg !6688
  %arrayidx3 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6688
  %6 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx3, align 8, !dbg !6688
  %tobool4 = icmp ne %struct.ChannelElement* %6, null, !dbg !6688
  br i1 %tobool4, label %if.end19, label %if.then5, !dbg !6691

if.then5:                                         ; preds = %if.then1
  %call = call noalias i8* @av_mallocz(i64 547744), !dbg !6692
  %7 = bitcast i8* %call to %struct.ChannelElement*, !dbg !6692
  %8 = load i32, i32* %id.addr, align 4, !dbg !6695
  %idxprom6 = sext i32 %8 to i64, !dbg !6696
  %9 = load i32, i32* %type.addr, align 4, !dbg !6697
  %idxprom7 = sext i32 %9 to i64, !dbg !6696
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6696
  %che8 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 5, !dbg !6698
  %arrayidx9 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che8, i64 0, i64 %idxprom7, !dbg !6696
  %arrayidx10 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx9, i64 0, i64 %idxprom6, !dbg !6696
  store %struct.ChannelElement* %7, %struct.ChannelElement** %arrayidx10, align 8, !dbg !6699
  %tobool11 = icmp ne %struct.ChannelElement* %7, null, !dbg !6699
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6700

if.then12:                                        ; preds = %if.then5
  store i32 -12, i32* %retval, align 4, !dbg !6701
  br label %return, !dbg !6701

if.end13:                                         ; preds = %if.then5
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6702
  %12 = load i32, i32* %id.addr, align 4, !dbg !6703
  %idxprom14 = sext i32 %12 to i64, !dbg !6704
  %13 = load i32, i32* %type.addr, align 4, !dbg !6705
  %idxprom15 = sext i32 %13 to i64, !dbg !6704
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6704
  %che16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 5, !dbg !6706
  %arrayidx17 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che16, i64 0, i64 %idxprom15, !dbg !6704
  %arrayidx18 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx17, i64 0, i64 %idxprom14, !dbg !6704
  %15 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx18, align 8, !dbg !6704
  %sbr = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %15, i32 0, i32 10, !dbg !6707
  %16 = load i32, i32* %type.addr, align 4, !dbg !6708
  call void @ff_aac_sbr_ctx_init(%struct.AACContext* %11, %struct.SpectralBandReplication* %sbr, i32 %16), !dbg !6709
  br label %if.end19, !dbg !6710

if.end19:                                         ; preds = %if.end13, %if.then1
  %17 = load i32, i32* %type.addr, align 4, !dbg !6711
  %cmp20 = icmp ne i32 %17, 2, !dbg !6713
  br i1 %cmp20, label %if.then21, label %if.end57, !dbg !6714

if.then21:                                        ; preds = %if.end19
  %18 = load i32*, i32** %channels.addr, align 8, !dbg !6715
  %19 = load i32, i32* %18, align 4, !dbg !6718
  %20 = load i32, i32* %type.addr, align 4, !dbg !6719
  %cmp22 = icmp eq i32 %20, 1, !dbg !6720
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !6721

lor.rhs:                                          ; preds = %if.then21
  %21 = load i32, i32* %type.addr, align 4, !dbg !6722
  %cmp23 = icmp eq i32 %21, 0, !dbg !6724
  br i1 %cmp23, label %land.rhs, label %land.end, !dbg !6725

land.rhs:                                         ; preds = %lor.rhs
  %22 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6726
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 24, !dbg !6728
  %arrayidx24 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !6726
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx24, i32 0, i32 0, !dbg !6729
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !6730
  %23 = load i32, i32* %ps, align 8, !dbg !6730
  %cmp25 = icmp eq i32 %23, 1, !dbg !6731
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %24 = phi i1 [ false, %lor.rhs ], [ %cmp25, %land.rhs ]
  br label %lor.end, !dbg !6732

lor.end:                                          ; preds = %land.end, %if.then21
  %25 = phi i1 [ true, %if.then21 ], [ %24, %land.end ]
  %lor.ext = zext i1 %25 to i32, !dbg !6734
  %sub = sub nsw i32 64, %lor.ext, !dbg !6736
  %cmp26 = icmp sge i32 %19, %sub, !dbg !6737
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6738

if.then27:                                        ; preds = %lor.end
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6739
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 1, !dbg !6741
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6741
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6739
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0)), !dbg !6742
  store i32 -1094995529, i32* %retval, align 4, !dbg !6743
  br label %return, !dbg !6743

if.end28:                                         ; preds = %lor.end
  %29 = load i32, i32* %id.addr, align 4, !dbg !6744
  %idxprom29 = sext i32 %29 to i64, !dbg !6745
  %30 = load i32, i32* %type.addr, align 4, !dbg !6746
  %idxprom30 = sext i32 %30 to i64, !dbg !6745
  %31 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6745
  %che31 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %31, i32 0, i32 5, !dbg !6747
  %arrayidx32 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che31, i64 0, i64 %idxprom30, !dbg !6745
  %arrayidx33 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !6745
  %32 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx33, align 8, !dbg !6745
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %32, i32 0, i32 7, !dbg !6748
  %arrayidx34 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !6745
  %33 = load i32*, i32** %channels.addr, align 8, !dbg !6749
  %34 = load i32, i32* %33, align 4, !dbg !6750
  %inc = add nsw i32 %34, 1, !dbg !6750
  store i32 %inc, i32* %33, align 4, !dbg !6750
  %idxprom35 = sext i32 %34 to i64, !dbg !6751
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6751
  %output_element = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 19, !dbg !6752
  %arrayidx36 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element, i64 0, i64 %idxprom35, !dbg !6751
  store %struct.SingleChannelElement* %arrayidx34, %struct.SingleChannelElement** %arrayidx36, align 8, !dbg !6753
  %36 = load i32, i32* %type.addr, align 4, !dbg !6754
  %cmp37 = icmp eq i32 %36, 1, !dbg !6756
  br i1 %cmp37, label %if.then44, label %lor.lhs.false, !dbg !6757

lor.lhs.false:                                    ; preds = %if.end28
  %37 = load i32, i32* %type.addr, align 4, !dbg !6758
  %cmp38 = icmp eq i32 %37, 0, !dbg !6759
  br i1 %cmp38, label %land.lhs.true, label %if.end56, !dbg !6760

land.lhs.true:                                    ; preds = %lor.lhs.false
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6761
  %oc39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 24, !dbg !6763
  %arrayidx40 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc39, i64 0, i64 1, !dbg !6761
  %m4ac41 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx40, i32 0, i32 0, !dbg !6764
  %ps42 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac41, i32 0, i32 10, !dbg !6765
  %39 = load i32, i32* %ps42, align 8, !dbg !6765
  %cmp43 = icmp eq i32 %39, 1, !dbg !6766
  br i1 %cmp43, label %if.then44, label %if.end56, !dbg !6767

if.then44:                                        ; preds = %land.lhs.true, %if.end28
  %40 = load i32, i32* %id.addr, align 4, !dbg !6769
  %idxprom45 = sext i32 %40 to i64, !dbg !6771
  %41 = load i32, i32* %type.addr, align 4, !dbg !6772
  %idxprom46 = sext i32 %41 to i64, !dbg !6771
  %42 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6771
  %che47 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %42, i32 0, i32 5, !dbg !6773
  %arrayidx48 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che47, i64 0, i64 %idxprom46, !dbg !6771
  %arrayidx49 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx48, i64 0, i64 %idxprom45, !dbg !6771
  %43 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx49, align 8, !dbg !6771
  %ch50 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %43, i32 0, i32 7, !dbg !6774
  %arrayidx51 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch50, i64 0, i64 1, !dbg !6771
  %44 = load i32*, i32** %channels.addr, align 8, !dbg !6775
  %45 = load i32, i32* %44, align 4, !dbg !6776
  %inc52 = add nsw i32 %45, 1, !dbg !6776
  store i32 %inc52, i32* %44, align 4, !dbg !6776
  %idxprom53 = sext i32 %45 to i64, !dbg !6777
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6777
  %output_element54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 19, !dbg !6778
  %arrayidx55 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element54, i64 0, i64 %idxprom53, !dbg !6777
  store %struct.SingleChannelElement* %arrayidx51, %struct.SingleChannelElement** %arrayidx55, align 8, !dbg !6779
  br label %if.end56, !dbg !6780

if.end56:                                         ; preds = %if.then44, %land.lhs.true, %lor.lhs.false
  br label %if.end57, !dbg !6781

if.end57:                                         ; preds = %if.end56, %if.end19
  br label %if.end77, !dbg !6782

if.else:                                          ; preds = %if.end
  %47 = load i32, i32* %id.addr, align 4, !dbg !6783
  %idxprom58 = sext i32 %47 to i64, !dbg !6786
  %48 = load i32, i32* %type.addr, align 4, !dbg !6787
  %idxprom59 = sext i32 %48 to i64, !dbg !6786
  %49 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6786
  %che60 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %49, i32 0, i32 5, !dbg !6788
  %arrayidx61 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che60, i64 0, i64 %idxprom59, !dbg !6786
  %arrayidx62 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx61, i64 0, i64 %idxprom58, !dbg !6786
  %50 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx62, align 8, !dbg !6786
  %tobool63 = icmp ne %struct.ChannelElement* %50, null, !dbg !6786
  br i1 %tobool63, label %if.then64, label %if.end71, !dbg !6789

if.then64:                                        ; preds = %if.else
  %51 = load i32, i32* %id.addr, align 4, !dbg !6790
  %idxprom65 = sext i32 %51 to i64, !dbg !6791
  %52 = load i32, i32* %type.addr, align 4, !dbg !6792
  %idxprom66 = sext i32 %52 to i64, !dbg !6791
  %53 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6791
  %che67 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %53, i32 0, i32 5, !dbg !6793
  %arrayidx68 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che67, i64 0, i64 %idxprom66, !dbg !6791
  %arrayidx69 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx68, i64 0, i64 %idxprom65, !dbg !6791
  %54 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx69, align 8, !dbg !6791
  %sbr70 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %54, i32 0, i32 10, !dbg !6794
  call void @ff_aac_sbr_ctx_close(%struct.SpectralBandReplication* %sbr70), !dbg !6795
  br label %if.end71, !dbg !6795

if.end71:                                         ; preds = %if.then64, %if.else
  %55 = load i32, i32* %id.addr, align 4, !dbg !6796
  %idxprom72 = sext i32 %55 to i64, !dbg !6797
  %56 = load i32, i32* %type.addr, align 4, !dbg !6798
  %idxprom73 = sext i32 %56 to i64, !dbg !6797
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !6797
  %che74 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 5, !dbg !6799
  %arrayidx75 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che74, i64 0, i64 %idxprom73, !dbg !6797
  %arrayidx76 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx75, i64 0, i64 %idxprom72, !dbg !6797
  %58 = bitcast %struct.ChannelElement** %arrayidx76 to i8*, !dbg !6800
  call void @av_freep(i8* %58), !dbg !6801
  br label %if.end77

if.end77:                                         ; preds = %if.end71, %if.end57
  store i32 0, i32* %retval, align 4, !dbg !6802
  br label %return, !dbg !6802

return:                                           ; preds = %if.end77, %if.then27, %if.then12, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !6803
  ret i32 %59, !dbg !6803
}

; Function Attrs: nounwind uwtable
define internal i32 @frame_configure_elements(%struct.AVCodecContext* %avctx) #1 !dbg !6804 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %type = alloca i32, align 4
  %id = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %che = alloca %struct.ChannelElement*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6805, metadata !2062), !dbg !6806
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !6807, metadata !2062), !dbg !6808
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6809
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !6810
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6810
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !6809
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !6808
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6811, metadata !2062), !dbg !6812
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6813, metadata !2062), !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6815, metadata !2062), !dbg !6816
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6817, metadata !2062), !dbg !6818
  store i32 0, i32* %type, align 4, !dbg !6819
  br label %for.cond, !dbg !6821

for.cond:                                         ; preds = %for.inc19, %entry
  %3 = load i32, i32* %type, align 4, !dbg !6822
  %cmp = icmp slt i32 %3, 4, !dbg !6825
  br i1 %cmp, label %for.body, label %for.end21, !dbg !6826

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %id, align 4, !dbg !6827
  br label %for.cond1, !dbg !6830

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %id, align 4, !dbg !6831
  %cmp2 = icmp slt i32 %4, 16, !dbg !6834
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6835

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !6836, metadata !2062), !dbg !6838
  %5 = load i32, i32* %id, align 4, !dbg !6839
  %idxprom = sext i32 %5 to i64, !dbg !6840
  %6 = load i32, i32* %type, align 4, !dbg !6841
  %idxprom4 = sext i32 %6 to i64, !dbg !6840
  %7 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6840
  %che5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 5, !dbg !6842
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che5, i64 0, i64 %idxprom4, !dbg !6840
  %arrayidx6 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6840
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx6, align 8, !dbg !6840
  store %struct.ChannelElement* %8, %struct.ChannelElement** %che, align 8, !dbg !6838
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6843
  %tobool = icmp ne %struct.ChannelElement* %9, null, !dbg !6843
  br i1 %tobool, label %if.then, label %if.end, !dbg !6845

if.then:                                          ; preds = %for.body3
  %10 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6846
  %ch7 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %10, i32 0, i32 7, !dbg !6848
  %arrayidx8 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch7, i64 0, i64 0, !dbg !6846
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx8, i32 0, i32 16, !dbg !6849
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !6846
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6850
  %ch9 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %11, i32 0, i32 7, !dbg !6851
  %arrayidx10 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch9, i64 0, i64 0, !dbg !6850
  %ret11 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx10, i32 0, i32 21, !dbg !6852
  store float* %arraydecay, float** %ret11, align 32, !dbg !6853
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6854
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !6855
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 1, !dbg !6854
  %ret_buf14 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 16, !dbg !6856
  %arraydecay15 = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf14, i32 0, i32 0, !dbg !6854
  %13 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !6857
  %ch16 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %13, i32 0, i32 7, !dbg !6858
  %arrayidx17 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch16, i64 0, i64 1, !dbg !6857
  %ret18 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx17, i32 0, i32 21, !dbg !6859
  store float* %arraydecay15, float** %ret18, align 32, !dbg !6860
  br label %if.end, !dbg !6861

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !6862

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %id, align 4, !dbg !6863
  %inc = add nsw i32 %14, 1, !dbg !6863
  store i32 %inc, i32* %id, align 4, !dbg !6863
  br label %for.cond1, !dbg !6865, !llvm.loop !6866

for.end:                                          ; preds = %for.cond1
  br label %for.inc19, !dbg !6868

for.inc19:                                        ; preds = %for.end
  %15 = load i32, i32* %type, align 4, !dbg !6869
  %inc20 = add nsw i32 %15, 1, !dbg !6869
  store i32 %inc20, i32* %type, align 4, !dbg !6869
  br label %for.cond, !dbg !6871, !llvm.loop !6872

for.end21:                                        ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6874
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 2, !dbg !6875
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 16, !dbg !6875
  call void @av_frame_unref(%struct.AVFrame* %17), !dbg !6876
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6877
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 83, !dbg !6879
  %19 = load i32, i32* %channels, align 4, !dbg !6879
  %tobool22 = icmp ne i32 %19, 0, !dbg !6877
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !6880

if.then23:                                        ; preds = %for.end21
  store i32 1, i32* %retval, align 4, !dbg !6881
  br label %return, !dbg !6881

if.end24:                                         ; preds = %for.end21
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6882
  %frame25 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 2, !dbg !6883
  %21 = load %struct.AVFrame*, %struct.AVFrame** %frame25, align 16, !dbg !6883
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 5, !dbg !6884
  store i32 2048, i32* %nb_samples, align 8, !dbg !6885
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6886
  %23 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6888
  %frame26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %23, i32 0, i32 2, !dbg !6889
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame26, align 16, !dbg !6889
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %22, %struct.AVFrame* %24, i32 0), !dbg !6890
  store i32 %call, i32* %ret, align 4, !dbg !6891
  %cmp27 = icmp slt i32 %call, 0, !dbg !6892
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !6893

if.then28:                                        ; preds = %if.end24
  %25 = load i32, i32* %ret, align 4, !dbg !6894
  store i32 %25, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

if.end29:                                         ; preds = %if.end24
  store i32 0, i32* %ch, align 4, !dbg !6896
  br label %for.cond30, !dbg !6898

for.cond30:                                       ; preds = %for.inc46, %if.end29
  %26 = load i32, i32* %ch, align 4, !dbg !6899
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6902
  %channels31 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 83, !dbg !6903
  %28 = load i32, i32* %channels31, align 4, !dbg !6903
  %cmp32 = icmp slt i32 %26, %28, !dbg !6904
  br i1 %cmp32, label %for.body33, label %for.end48, !dbg !6905

for.body33:                                       ; preds = %for.cond30
  %29 = load i32, i32* %ch, align 4, !dbg !6906
  %idxprom34 = sext i32 %29 to i64, !dbg !6909
  %30 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6909
  %output_element = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 19, !dbg !6910
  %arrayidx35 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element, i64 0, i64 %idxprom34, !dbg !6909
  %31 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %arrayidx35, align 8, !dbg !6909
  %tobool36 = icmp ne %struct.SingleChannelElement* %31, null, !dbg !6909
  br i1 %tobool36, label %if.then37, label %if.end45, !dbg !6911

if.then37:                                        ; preds = %for.body33
  %32 = load i32, i32* %ch, align 4, !dbg !6912
  %idxprom38 = sext i32 %32 to i64, !dbg !6913
  %33 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6913
  %frame39 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %33, i32 0, i32 2, !dbg !6914
  %34 = load %struct.AVFrame*, %struct.AVFrame** %frame39, align 16, !dbg !6914
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 2, !dbg !6915
  %35 = load i8**, i8*** %extended_data, align 8, !dbg !6915
  %arrayidx40 = getelementptr inbounds i8*, i8** %35, i64 %idxprom38, !dbg !6913
  %36 = load i8*, i8** %arrayidx40, align 8, !dbg !6913
  %37 = bitcast i8* %36 to float*, !dbg !6916
  %38 = load i32, i32* %ch, align 4, !dbg !6917
  %idxprom41 = sext i32 %38 to i64, !dbg !6918
  %39 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !6918
  %output_element42 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 19, !dbg !6919
  %arrayidx43 = getelementptr inbounds [64 x %struct.SingleChannelElement*], [64 x %struct.SingleChannelElement*]* %output_element42, i64 0, i64 %idxprom41, !dbg !6918
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %arrayidx43, align 8, !dbg !6918
  %ret44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 21, !dbg !6920
  store float* %37, float** %ret44, align 32, !dbg !6921
  br label %if.end45, !dbg !6918

if.end45:                                         ; preds = %if.then37, %for.body33
  br label %for.inc46, !dbg !6922

for.inc46:                                        ; preds = %if.end45
  %41 = load i32, i32* %ch, align 4, !dbg !6923
  %inc47 = add nsw i32 %41, 1, !dbg !6923
  store i32 %inc47, i32* %ch, align 4, !dbg !6923
  br label %for.cond30, !dbg !6925, !llvm.loop !6926

for.end48:                                        ; preds = %for.cond30
  store i32 0, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

return:                                           ; preds = %for.end48, %if.then28, %if.then23
  %42 = load i32, i32* %retval, align 4, !dbg !6929
  ret i32 %42, !dbg !6929
}

; Function Attrs: nounwind uwtable
define internal i32 @count_paired_channels([3 x i8]* %layout_map, i32 %tags, i32 %pos, i32* %current) #1 !dbg !6930 {
entry:
  %retval = alloca i32, align 4
  %layout_map.addr = alloca [3 x i8]*, align 8
  %tags.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %current.addr = alloca i32*, align 8
  %num_pos_channels = alloca i32, align 4
  %first_cpe = alloca i32, align 4
  %sce_parity = alloca i32, align 4
  %i = alloca i32, align 4
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !6933, metadata !2062), !dbg !6934
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !6935, metadata !2062), !dbg !6936
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !6937, metadata !2062), !dbg !6938
  store i32* %current, i32** %current.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %current.addr, metadata !6939, metadata !2062), !dbg !6940
  call void @llvm.dbg.declare(metadata i32* %num_pos_channels, metadata !6941, metadata !2062), !dbg !6942
  store i32 0, i32* %num_pos_channels, align 4, !dbg !6942
  call void @llvm.dbg.declare(metadata i32* %first_cpe, metadata !6943, metadata !2062), !dbg !6944
  store i32 0, i32* %first_cpe, align 4, !dbg !6944
  call void @llvm.dbg.declare(metadata i32* %sce_parity, metadata !6945, metadata !2062), !dbg !6946
  store i32 0, i32* %sce_parity, align 4, !dbg !6946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6947, metadata !2062), !dbg !6948
  %0 = load i32*, i32** %current.addr, align 8, !dbg !6949
  %1 = load i32, i32* %0, align 4, !dbg !6951
  store i32 %1, i32* %i, align 4, !dbg !6952
  br label %for.cond, !dbg !6953

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6954
  %3 = load i32, i32* %tags.addr, align 4, !dbg !6957
  %cmp = icmp slt i32 %2, %3, !dbg !6958
  br i1 %cmp, label %for.body, label %for.end, !dbg !6959

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !6960
  %idxprom = sext i32 %4 to i64, !dbg !6963
  %5 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6963
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 %idxprom, !dbg !6963
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 2, !dbg !6963
  %6 = load i8, i8* %arrayidx1, align 1, !dbg !6963
  %conv = zext i8 %6 to i32, !dbg !6963
  %7 = load i32, i32* %pos.addr, align 4, !dbg !6964
  %cmp2 = icmp ne i32 %conv, %7, !dbg !6965
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6966

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6967

if.end:                                           ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6968
  %idxprom4 = sext i32 %8 to i64, !dbg !6970
  %9 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !6970
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 %idxprom4, !dbg !6970
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx5, i64 0, i64 0, !dbg !6970
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !6970
  %conv7 = zext i8 %10 to i32, !dbg !6970
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !6971
  br i1 %cmp8, label %if.then10, label %if.else18, !dbg !6972

if.then10:                                        ; preds = %if.end
  %11 = load i32, i32* %sce_parity, align 4, !dbg !6973
  %tobool = icmp ne i32 %11, 0, !dbg !6973
  br i1 %tobool, label %if.then11, label %if.end17, !dbg !6976

if.then11:                                        ; preds = %if.then10
  %12 = load i32, i32* %pos.addr, align 4, !dbg !6977
  %cmp12 = icmp eq i32 %12, 1, !dbg !6980
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !6981

land.lhs.true:                                    ; preds = %if.then11
  %13 = load i32, i32* %first_cpe, align 4, !dbg !6982
  %tobool14 = icmp ne i32 %13, 0, !dbg !6982
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !6984

if.then15:                                        ; preds = %land.lhs.true
  store i32 0, i32* %sce_parity, align 4, !dbg !6985
  br label %if.end16, !dbg !6987

if.else:                                          ; preds = %land.lhs.true, %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !6988
  br label %return, !dbg !6988

if.end16:                                         ; preds = %if.then15
  br label %if.end17, !dbg !6990

if.end17:                                         ; preds = %if.end16, %if.then10
  %14 = load i32, i32* %num_pos_channels, align 4, !dbg !6991
  %add = add nsw i32 %14, 2, !dbg !6991
  store i32 %add, i32* %num_pos_channels, align 4, !dbg !6991
  store i32 1, i32* %first_cpe, align 4, !dbg !6992
  br label %if.end19, !dbg !6993

if.else18:                                        ; preds = %if.end
  %15 = load i32, i32* %num_pos_channels, align 4, !dbg !6994
  %inc = add nsw i32 %15, 1, !dbg !6994
  store i32 %inc, i32* %num_pos_channels, align 4, !dbg !6994
  %16 = load i32, i32* %sce_parity, align 4, !dbg !6996
  %xor = xor i32 %16, 1, !dbg !6996
  store i32 %xor, i32* %sce_parity, align 4, !dbg !6996
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.end17
  br label %for.inc, !dbg !6997

for.inc:                                          ; preds = %if.end19
  %17 = load i32, i32* %i, align 4, !dbg !6998
  %inc20 = add nsw i32 %17, 1, !dbg !6998
  store i32 %inc20, i32* %i, align 4, !dbg !6998
  br label %for.cond, !dbg !7000, !llvm.loop !7001

for.end:                                          ; preds = %if.then, %for.cond
  %18 = load i32, i32* %sce_parity, align 4, !dbg !7003
  %tobool21 = icmp ne i32 %18, 0, !dbg !7003
  br i1 %tobool21, label %land.lhs.true22, label %if.end30, !dbg !7005

land.lhs.true22:                                  ; preds = %for.end
  %19 = load i32, i32* %pos.addr, align 4, !dbg !7006
  %cmp23 = icmp eq i32 %19, 1, !dbg !7007
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false, !dbg !7008

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %20 = load i32, i32* %first_cpe, align 4, !dbg !7009
  %tobool26 = icmp ne i32 %20, 0, !dbg !7009
  br i1 %tobool26, label %if.then29, label %lor.lhs.false, !dbg !7011

lor.lhs.false:                                    ; preds = %land.lhs.true25, %land.lhs.true22
  %21 = load i32, i32* %pos.addr, align 4, !dbg !7012
  %cmp27 = icmp eq i32 %21, 2, !dbg !7014
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7015

if.then29:                                        ; preds = %lor.lhs.false, %land.lhs.true25
  store i32 -1, i32* %retval, align 4, !dbg !7017
  br label %return, !dbg !7017

if.end30:                                         ; preds = %lor.lhs.false, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !7018
  %23 = load i32*, i32** %current.addr, align 8, !dbg !7019
  store i32 %22, i32* %23, align 4, !dbg !7020
  %24 = load i32, i32* %num_pos_channels, align 4, !dbg !7021
  store i32 %24, i32* %retval, align 4, !dbg !7022
  br label %return, !dbg !7022

return:                                           ; preds = %if.end30, %if.then29, %if.else
  %25 = load i32, i32* %retval, align 4, !dbg !7023
  ret i32 %25, !dbg !7023
}

; Function Attrs: nounwind uwtable
define internal i32 @assign_pair(%struct.elem_to_channel* %e2c_vec, [3 x i8]* %layout_map, i32 %offset, i64 %left, i64 %right, i32 %pos) #1 !dbg !7024 {
entry:
  %retval = alloca i32, align 4
  %e2c_vec.addr = alloca %struct.elem_to_channel*, align 8
  %layout_map.addr = alloca [3 x i8]*, align 8
  %offset.addr = alloca i32, align 4
  %left.addr = alloca i64, align 8
  %right.addr = alloca i64, align 8
  %pos.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.elem_to_channel, align 8
  %.compoundliteral11 = alloca %struct.elem_to_channel, align 8
  %.compoundliteral22 = alloca %struct.elem_to_channel, align 8
  store %struct.elem_to_channel* %e2c_vec, %struct.elem_to_channel** %e2c_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.elem_to_channel** %e2c_vec.addr, metadata !7028, metadata !2062), !dbg !7029
  store [3 x i8]* %layout_map, [3 x i8]** %layout_map.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %layout_map.addr, metadata !7030, metadata !2062), !dbg !7031
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7032, metadata !2062), !dbg !7033
  store i64 %left, i64* %left.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %left.addr, metadata !7034, metadata !2062), !dbg !7035
  store i64 %right, i64* %right.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %right.addr, metadata !7036, metadata !2062), !dbg !7037
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !7038, metadata !2062), !dbg !7039
  %0 = load i32, i32* %offset.addr, align 4, !dbg !7040
  %idxprom = sext i32 %0 to i64, !dbg !7042
  %1 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7042
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 %idxprom, !dbg !7042
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !7042
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !7042
  %conv = zext i8 %2 to i32, !dbg !7042
  %cmp = icmp eq i32 %conv, 1, !dbg !7043
  br i1 %cmp, label %if.then, label %if.else, !dbg !7044

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %offset.addr, align 4, !dbg !7045
  %idxprom3 = sext i32 %3 to i64, !dbg !7047
  %4 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7047
  %arrayidx4 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %4, i64 %idxprom3, !dbg !7047
  %av_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 0, !dbg !7048
  %5 = load i64, i64* %left.addr, align 8, !dbg !7049
  %6 = load i64, i64* %right.addr, align 8, !dbg !7050
  %or = or i64 %5, %6, !dbg !7051
  store i64 %or, i64* %av_position, align 8, !dbg !7048
  %syn_ele = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 1, !dbg !7048
  store i8 1, i8* %syn_ele, align 8, !dbg !7048
  %elem_id = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 2, !dbg !7048
  %7 = load i32, i32* %offset.addr, align 4, !dbg !7052
  %idxprom5 = sext i32 %7 to i64, !dbg !7053
  %8 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7053
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 %idxprom5, !dbg !7053
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 1, !dbg !7053
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !7053
  store i8 %9, i8* %elem_id, align 1, !dbg !7048
  %aac_position = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral, i32 0, i32 3, !dbg !7048
  %10 = load i32, i32* %pos.addr, align 4, !dbg !7054
  %conv8 = trunc i32 %10 to i8, !dbg !7054
  store i8 %conv8, i8* %aac_position, align 2, !dbg !7048
  %11 = bitcast %struct.elem_to_channel* %arrayidx4 to i8*, !dbg !7055
  %12 = bitcast %struct.elem_to_channel* %.compoundliteral to i8*, !dbg !7055
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false), !dbg !7055
  store i32 1, i32* %retval, align 4, !dbg !7056
  br label %return, !dbg !7056

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %offset.addr, align 4, !dbg !7057
  %idxprom9 = sext i32 %13 to i64, !dbg !7059
  %14 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7059
  %arrayidx10 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %14, i64 %idxprom9, !dbg !7059
  %av_position12 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 0, !dbg !7060
  %15 = load i64, i64* %left.addr, align 8, !dbg !7061
  store i64 %15, i64* %av_position12, align 8, !dbg !7060
  %syn_ele13 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 1, !dbg !7060
  store i8 0, i8* %syn_ele13, align 8, !dbg !7060
  %elem_id14 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 2, !dbg !7060
  %16 = load i32, i32* %offset.addr, align 4, !dbg !7062
  %idxprom15 = sext i32 %16 to i64, !dbg !7063
  %17 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7063
  %arrayidx16 = getelementptr inbounds [3 x i8], [3 x i8]* %17, i64 %idxprom15, !dbg !7063
  %arrayidx17 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx16, i64 0, i64 1, !dbg !7063
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !7063
  store i8 %18, i8* %elem_id14, align 1, !dbg !7060
  %aac_position18 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral11, i32 0, i32 3, !dbg !7060
  %19 = load i32, i32* %pos.addr, align 4, !dbg !7064
  %conv19 = trunc i32 %19 to i8, !dbg !7064
  store i8 %conv19, i8* %aac_position18, align 2, !dbg !7060
  %20 = bitcast %struct.elem_to_channel* %arrayidx10 to i8*, !dbg !7065
  %21 = bitcast %struct.elem_to_channel* %.compoundliteral11 to i8*, !dbg !7065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false), !dbg !7065
  %22 = load i32, i32* %offset.addr, align 4, !dbg !7066
  %add = add nsw i32 %22, 1, !dbg !7067
  %idxprom20 = sext i32 %add to i64, !dbg !7068
  %23 = load %struct.elem_to_channel*, %struct.elem_to_channel** %e2c_vec.addr, align 8, !dbg !7068
  %arrayidx21 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %23, i64 %idxprom20, !dbg !7068
  %av_position23 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 0, !dbg !7069
  %24 = load i64, i64* %right.addr, align 8, !dbg !7070
  store i64 %24, i64* %av_position23, align 8, !dbg !7069
  %syn_ele24 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 1, !dbg !7069
  store i8 0, i8* %syn_ele24, align 8, !dbg !7069
  %elem_id25 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 2, !dbg !7069
  %25 = load i32, i32* %offset.addr, align 4, !dbg !7071
  %add26 = add nsw i32 %25, 1, !dbg !7072
  %idxprom27 = sext i32 %add26 to i64, !dbg !7073
  %26 = load [3 x i8]*, [3 x i8]** %layout_map.addr, align 8, !dbg !7073
  %arrayidx28 = getelementptr inbounds [3 x i8], [3 x i8]* %26, i64 %idxprom27, !dbg !7073
  %arrayidx29 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx28, i64 0, i64 1, !dbg !7073
  %27 = load i8, i8* %arrayidx29, align 1, !dbg !7073
  store i8 %27, i8* %elem_id25, align 1, !dbg !7069
  %aac_position30 = getelementptr inbounds %struct.elem_to_channel, %struct.elem_to_channel* %.compoundliteral22, i32 0, i32 3, !dbg !7069
  %28 = load i32, i32* %pos.addr, align 4, !dbg !7074
  %conv31 = trunc i32 %28 to i8, !dbg !7074
  store i8 %conv31, i8* %aac_position30, align 2, !dbg !7069
  %29 = bitcast %struct.elem_to_channel* %arrayidx21 to i8*, !dbg !7075
  %30 = bitcast %struct.elem_to_channel* %.compoundliteral22 to i8*, !dbg !7075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false), !dbg !7075
  store i32 2, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

return:                                           ; preds = %if.else, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !7077
  ret i32 %31, !dbg !7077
}

declare noalias i8* @av_mallocz(i64) #2

declare void @ff_aac_sbr_ctx_init(%struct.AACContext*, %struct.SpectralBandReplication*, i32) #2

declare void @ff_aac_sbr_ctx_close(%struct.SpectralBandReplication*) #2

declare void @av_freep(i8*) #2

declare void @av_frame_unref(%struct.AVFrame*) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

declare i8* @av_packet_get_side_data(%struct.AVPacket*, i32, i32*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !7078 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7079, metadata !2062), !dbg !7080
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7081, metadata !2062), !dbg !7082
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !7083, metadata !2062), !dbg !7084
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !7085
  %cmp = icmp sgt i32 %0, 268435455, !dbg !7087
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7088

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !7089
  %cmp1 = icmp slt i32 %1, 0, !dbg !7091
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7092

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !7093
  br label %if.end, !dbg !7094

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7095
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !7096
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !7097
  %mul = mul nsw i32 %4, 8, !dbg !7098
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !7099
  ret i32 %call, !dbg !7100
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_er_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.GetBitContext* %gb) #1 !dbg !7101 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %m4ac = alloca %struct.MPEG4AudioConfig*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %samples = alloca i32, align 4
  %chan_config = alloca i32, align 4
  %aot = alloca i32, align 4
  %elem_type = alloca i32, align 4
  %elem_id = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7104, metadata !2062), !dbg !7105
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7106, metadata !2062), !dbg !7107
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !7108, metadata !2062), !dbg !7109
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7110, metadata !2062), !dbg !7111
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !7112, metadata !2062), !dbg !7113
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7114
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !7115
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7115
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !7114
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !7113
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac, metadata !7116, metadata !2062), !dbg !7120
  %3 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7121
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 24, !dbg !7122
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7121
  %m4ac1 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7123
  store %struct.MPEG4AudioConfig* %m4ac1, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7120
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !7124, metadata !2062), !dbg !7125
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7126, metadata !2062), !dbg !7127
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7128, metadata !2062), !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !7130, metadata !2062), !dbg !7131
  %4 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7132
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %4, i32 0, i32 11, !dbg !7133
  %5 = load i32, i32* %frame_length_short, align 4, !dbg !7133
  %tobool = icmp ne i32 %5, 0, !dbg !7132
  %cond = select i1 %tobool, i32 960, i32 1024, !dbg !7132
  store i32 %cond, i32* %samples, align 4, !dbg !7131
  call void @llvm.dbg.declare(metadata i32* %chan_config, metadata !7134, metadata !2062), !dbg !7135
  %6 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7136
  %chan_config2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %6, i32 0, i32 3, !dbg !7137
  %7 = load i32, i32* %chan_config2, align 4, !dbg !7137
  store i32 %7, i32* %chan_config, align 4, !dbg !7135
  call void @llvm.dbg.declare(metadata i32* %aot, metadata !7138, metadata !2062), !dbg !7139
  %8 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !7140
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %8, i32 0, i32 0, !dbg !7141
  %9 = load i32, i32* %object_type, align 4, !dbg !7141
  store i32 %9, i32* %aot, align 4, !dbg !7139
  %10 = load i32, i32* %aot, align 4, !dbg !7142
  %cmp = icmp eq i32 %10, 23, !dbg !7144
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7145

lor.lhs.false:                                    ; preds = %entry
  %11 = load i32, i32* %aot, align 4, !dbg !7146
  %cmp3 = icmp eq i32 %11, 39, !dbg !7148
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7149

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load i32, i32* %samples, align 4, !dbg !7150
  %shr = ashr i32 %12, 1, !dbg !7150
  store i32 %shr, i32* %samples, align 4, !dbg !7150
  br label %if.end, !dbg !7151

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load i8*, i8** %data.addr, align 8, !dbg !7152
  %14 = bitcast i8* %13 to %struct.AVFrame*, !dbg !7152
  %15 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7153
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 2, !dbg !7154
  store %struct.AVFrame* %14, %struct.AVFrame** %frame, align 16, !dbg !7155
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7156
  %call = call i32 @frame_configure_elements(%struct.AVCodecContext* %16), !dbg !7158
  store i32 %call, i32* %err, align 4, !dbg !7159
  %cmp4 = icmp slt i32 %call, 0, !dbg !7160
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7161

if.then5:                                         ; preds = %if.end
  %17 = load i32, i32* %err, align 4, !dbg !7162
  store i32 %17, i32* %retval, align 4, !dbg !7163
  br label %return, !dbg !7163

if.end6:                                          ; preds = %if.end
  %18 = load i32, i32* %aot, align 4, !dbg !7164
  %sub = sub nsw i32 %18, 1, !dbg !7165
  %19 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7166
  %avctx7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !7167
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 8, !dbg !7167
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 153, !dbg !7168
  store i32 %sub, i32* %profile, align 4, !dbg !7169
  %21 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7170
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 7, !dbg !7171
  store i32 0, i32* %tags_mapped, align 8, !dbg !7172
  %22 = load i32, i32* %chan_config, align 4, !dbg !7173
  %cmp8 = icmp slt i32 %22, 0, !dbg !7175
  br i1 %cmp8, label %if.then14, label %lor.lhs.false9, !dbg !7176

lor.lhs.false9:                                   ; preds = %if.end6
  %23 = load i32, i32* %chan_config, align 4, !dbg !7177
  %cmp10 = icmp sge i32 %23, 8, !dbg !7179
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false12, !dbg !7180

land.lhs.true:                                    ; preds = %lor.lhs.false9
  %24 = load i32, i32* %chan_config, align 4, !dbg !7181
  %cmp11 = icmp slt i32 %24, 11, !dbg !7183
  br i1 %cmp11, label %if.then14, label %lor.lhs.false12, !dbg !7184

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false9
  %25 = load i32, i32* %chan_config, align 4, !dbg !7185
  %cmp13 = icmp sge i32 %25, 13, !dbg !7187
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7188

if.then14:                                        ; preds = %lor.lhs.false12, %land.lhs.true, %if.end6
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7189
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !7189
  %28 = load i32, i32* %chan_config, align 4, !dbg !7191
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %27, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.47, i32 0, i32 0), i32 %28), !dbg !7192
  store i32 -1094995529, i32* %retval, align 4, !dbg !7193
  br label %return, !dbg !7193

if.end15:                                         ; preds = %lor.lhs.false12
  store i32 0, i32* %i, align 4, !dbg !7194
  br label %for.cond, !dbg !7196

for.cond:                                         ; preds = %for.inc, %if.end15
  %29 = load i32, i32* %i, align 4, !dbg !7197
  %30 = load i32, i32* %chan_config, align 4, !dbg !7200
  %idxprom = sext i32 %30 to i64, !dbg !7201
  %arrayidx16 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom, !dbg !7201
  %31 = load i8, i8* %arrayidx16, align 1, !dbg !7201
  %conv = sext i8 %31 to i32, !dbg !7201
  %cmp17 = icmp slt i32 %29, %conv, !dbg !7202
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7203

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %elem_type, metadata !7204, metadata !2062), !dbg !7206
  %32 = load i32, i32* %i, align 4, !dbg !7207
  %idxprom19 = sext i32 %32 to i64, !dbg !7208
  %33 = load i32, i32* %chan_config, align 4, !dbg !7209
  %sub20 = sub nsw i32 %33, 1, !dbg !7210
  %idxprom21 = sext i32 %sub20 to i64, !dbg !7208
  %arrayidx22 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom21, !dbg !7208
  %arrayidx23 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !7208
  %arrayidx24 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx23, i64 0, i64 0, !dbg !7208
  %34 = load i8, i8* %arrayidx24, align 1, !dbg !7208
  %conv25 = zext i8 %34 to i32, !dbg !7208
  store i32 %conv25, i32* %elem_type, align 4, !dbg !7206
  call void @llvm.dbg.declare(metadata i32* %elem_id, metadata !7211, metadata !2062), !dbg !7212
  %35 = load i32, i32* %i, align 4, !dbg !7213
  %idxprom26 = sext i32 %35 to i64, !dbg !7214
  %36 = load i32, i32* %chan_config, align 4, !dbg !7215
  %sub27 = sub nsw i32 %36, 1, !dbg !7216
  %idxprom28 = sext i32 %sub27 to i64, !dbg !7214
  %arrayidx29 = getelementptr inbounds [16 x [5 x [3 x i8]]], [16 x [5 x [3 x i8]]]* @aac_channel_layout_map, i64 0, i64 %idxprom28, !dbg !7214
  %arrayidx30 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !7214
  %arrayidx31 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx30, i64 0, i64 1, !dbg !7214
  %37 = load i8, i8* %arrayidx31, align 1, !dbg !7214
  %conv32 = zext i8 %37 to i32, !dbg !7214
  store i32 %conv32, i32* %elem_id, align 4, !dbg !7212
  %38 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7217
  %39 = load i32, i32* %elem_type, align 4, !dbg !7219
  %40 = load i32, i32* %elem_id, align 4, !dbg !7220
  %call33 = call %struct.ChannelElement* @get_che(%struct.AACContext* %38, i32 %39, i32 %40), !dbg !7221
  store %struct.ChannelElement* %call33, %struct.ChannelElement** %che, align 8, !dbg !7222
  %tobool34 = icmp ne %struct.ChannelElement* %call33, null, !dbg !7222
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !7223

if.then35:                                        ; preds = %for.body
  %41 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7224
  %avctx36 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %41, i32 0, i32 1, !dbg !7226
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx36, align 8, !dbg !7226
  %43 = bitcast %struct.AVCodecContext* %42 to i8*, !dbg !7224
  %44 = load i32, i32* %elem_type, align 4, !dbg !7227
  %45 = load i32, i32* %elem_id, align 4, !dbg !7228
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i32 0, i32 0), i32 %44, i32 %45), !dbg !7229
  store i32 -1094995529, i32* %retval, align 4, !dbg !7230
  br label %return, !dbg !7230

if.end37:                                         ; preds = %for.body
  %46 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7231
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %46, i32 0, i32 0, !dbg !7232
  store i32 1, i32* %present, align 32, !dbg !7233
  %47 = load i32, i32* %aot, align 4, !dbg !7234
  %cmp38 = icmp ne i32 %47, 39, !dbg !7236
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7237

if.then40:                                        ; preds = %if.end37
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7238
  call void @skip_bits(%struct.GetBitContext* %48, i32 4), !dbg !7239
  br label %if.end41, !dbg !7239

if.end41:                                         ; preds = %if.then40, %if.end37
  %49 = load i32, i32* %elem_type, align 4, !dbg !7240
  switch i32 %49, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb44
    i32 3, label %sw.bb46
  ], !dbg !7241

sw.bb:                                            ; preds = %if.end41
  %50 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7242
  %51 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7244
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %51, i32 0, i32 7, !dbg !7245
  %arrayidx42 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !7244
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7246
  %call43 = call i32 @decode_ics(%struct.AACContext* %50, %struct.SingleChannelElement* %arrayidx42, %struct.GetBitContext* %52, i32 0, i32 0), !dbg !7247
  store i32 %call43, i32* %err, align 4, !dbg !7248
  br label %sw.epilog, !dbg !7249

sw.bb44:                                          ; preds = %if.end41
  %53 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7250
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7251
  %55 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7252
  %call45 = call i32 @decode_cpe(%struct.AACContext* %53, %struct.GetBitContext* %54, %struct.ChannelElement* %55), !dbg !7253
  store i32 %call45, i32* %err, align 4, !dbg !7254
  br label %sw.epilog, !dbg !7255

sw.bb46:                                          ; preds = %if.end41
  %56 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7256
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7257
  %ch47 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %57, i32 0, i32 7, !dbg !7258
  %arrayidx48 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch47, i64 0, i64 0, !dbg !7257
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7259
  %call49 = call i32 @decode_ics(%struct.AACContext* %56, %struct.SingleChannelElement* %arrayidx48, %struct.GetBitContext* %58, i32 0, i32 0), !dbg !7260
  store i32 %call49, i32* %err, align 4, !dbg !7261
  br label %sw.epilog, !dbg !7262

sw.epilog:                                        ; preds = %if.end41, %sw.bb46, %sw.bb44, %sw.bb
  %59 = load i32, i32* %err, align 4, !dbg !7263
  %cmp50 = icmp slt i32 %59, 0, !dbg !7265
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7266

if.then52:                                        ; preds = %sw.epilog
  %60 = load i32, i32* %err, align 4, !dbg !7267
  store i32 %60, i32* %retval, align 4, !dbg !7268
  br label %return, !dbg !7268

if.end53:                                         ; preds = %sw.epilog
  br label %for.inc, !dbg !7269

for.inc:                                          ; preds = %if.end53
  %61 = load i32, i32* %i, align 4, !dbg !7270
  %inc = add nsw i32 %61, 1, !dbg !7270
  store i32 %inc, i32* %i, align 4, !dbg !7270
  br label %for.cond, !dbg !7272, !llvm.loop !7273

for.end:                                          ; preds = %for.cond
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7275
  %63 = load i32, i32* %samples, align 4, !dbg !7276
  call void @spectral_to_sample(%struct.AACContext* %62, i32 %63), !dbg !7277
  %64 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7278
  %frame54 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 2, !dbg !7280
  %65 = load %struct.AVFrame*, %struct.AVFrame** %frame54, align 16, !dbg !7280
  %data55 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 0, !dbg !7281
  %arrayidx56 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data55, i64 0, i64 0, !dbg !7278
  %66 = load i8*, i8** %arrayidx56, align 8, !dbg !7278
  %tobool57 = icmp ne i8* %66, null, !dbg !7278
  br i1 %tobool57, label %if.end61, label %land.lhs.true58, !dbg !7282

land.lhs.true58:                                  ; preds = %for.end
  %67 = load i32, i32* %samples, align 4, !dbg !7283
  %tobool59 = icmp ne i32 %67, 0, !dbg !7283
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !7285

if.then60:                                        ; preds = %land.lhs.true58
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7286
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !7286
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i32 0, i32 0)), !dbg !7288
  store i32 -1094995529, i32* %retval, align 4, !dbg !7289
  br label %return, !dbg !7289

if.end61:                                         ; preds = %land.lhs.true58, %for.end
  %70 = load i32, i32* %samples, align 4, !dbg !7290
  %71 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7291
  %frame62 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 2, !dbg !7292
  %72 = load %struct.AVFrame*, %struct.AVFrame** %frame62, align 16, !dbg !7292
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %72, i32 0, i32 5, !dbg !7293
  store i32 %70, i32* %nb_samples, align 8, !dbg !7294
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7295
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %73, i32 0, i32 82, !dbg !7296
  %74 = load i32, i32* %sample_rate, align 8, !dbg !7296
  %75 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7297
  %frame63 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %75, i32 0, i32 2, !dbg !7298
  %76 = load %struct.AVFrame*, %struct.AVFrame** %frame63, align 16, !dbg !7298
  %sample_rate64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %76, i32 0, i32 23, !dbg !7299
  store i32 %74, i32* %sample_rate64, align 8, !dbg !7300
  %77 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7301
  store i32 1, i32* %77, align 4, !dbg !7302
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7303
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7304
  %call65 = call i32 @get_bits_left(%struct.GetBitContext* %79), !dbg !7305
  call void @skip_bits_long(%struct.GetBitContext* %78, i32 %call65), !dbg !7306
  store i32 0, i32* %retval, align 4, !dbg !7308
  br label %return, !dbg !7308

return:                                           ; preds = %if.end61, %if.then60, %if.then52, %if.then35, %if.then14, %if.then5
  %80 = load i32, i32* %retval, align 4, !dbg !7309
  ret i32 %80, !dbg !7309
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_decode_frame_int(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.GetBitContext* %gb, %struct.AVPacket* %avpkt) #1 !dbg !7310 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ac = alloca %struct.AACContext*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  %che_prev = alloca %struct.ChannelElement*, align 8
  %elem_type = alloca i32, align 4
  %che_prev_type = alloca i32, align 4
  %err = alloca i32, align 4
  %elem_id = alloca i32, align 4
  %samples = alloca i32, align 4
  %multiplier = alloca i32, align 4
  %audio_found = alloca i32, align 4
  %pce_found = alloca i32, align 4
  %is_dmono = alloca i32, align 4
  %sce_count = alloca i32, align 4
  %payload_alignment = alloca i32, align 4
  %che_presence = alloca [4 x [16 x i8]], align 16
  %error = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %tags = alloca i32, align 4
  %pushed = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7313, metadata !2062), !dbg !7314
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7315, metadata !2062), !dbg !7316
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !7317, metadata !2062), !dbg !7318
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7319, metadata !2062), !dbg !7320
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !7321, metadata !2062), !dbg !7322
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !7323, metadata !2062), !dbg !7324
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7325
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !7326
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7326
  %2 = bitcast i8* %1 to %struct.AACContext*, !dbg !7325
  store %struct.AACContext* %2, %struct.AACContext** %ac, align 8, !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !7327, metadata !2062), !dbg !7328
  store %struct.ChannelElement* null, %struct.ChannelElement** %che, align 8, !dbg !7328
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che_prev, metadata !7329, metadata !2062), !dbg !7330
  store %struct.ChannelElement* null, %struct.ChannelElement** %che_prev, align 8, !dbg !7330
  call void @llvm.dbg.declare(metadata i32* %elem_type, metadata !7331, metadata !2062), !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %che_prev_type, metadata !7333, metadata !2062), !dbg !7334
  store i32 7, i32* %che_prev_type, align 4, !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7335, metadata !2062), !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %elem_id, metadata !7337, metadata !2062), !dbg !7338
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !7339, metadata !2062), !dbg !7340
  store i32 0, i32* %samples, align 4, !dbg !7340
  call void @llvm.dbg.declare(metadata i32* %multiplier, metadata !7341, metadata !2062), !dbg !7342
  call void @llvm.dbg.declare(metadata i32* %audio_found, metadata !7343, metadata !2062), !dbg !7344
  store i32 0, i32* %audio_found, align 4, !dbg !7344
  call void @llvm.dbg.declare(metadata i32* %pce_found, metadata !7345, metadata !2062), !dbg !7346
  store i32 0, i32* %pce_found, align 4, !dbg !7346
  call void @llvm.dbg.declare(metadata i32* %is_dmono, metadata !7347, metadata !2062), !dbg !7348
  call void @llvm.dbg.declare(metadata i32* %sce_count, metadata !7349, metadata !2062), !dbg !7350
  store i32 0, i32* %sce_count, align 4, !dbg !7350
  call void @llvm.dbg.declare(metadata i32* %payload_alignment, metadata !7351, metadata !2062), !dbg !7352
  call void @llvm.dbg.declare(metadata [4 x [16 x i8]]* %che_presence, metadata !7353, metadata !2062), !dbg !7355
  %3 = bitcast [4 x [16 x i8]]* %che_presence to i8*, !dbg !7355
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 64, i32 16, i1 false), !dbg !7355
  %4 = load i8*, i8** %data.addr, align 8, !dbg !7356
  %5 = bitcast i8* %4 to %struct.AVFrame*, !dbg !7356
  %6 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7357
  %frame = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 2, !dbg !7358
  store %struct.AVFrame* %5, %struct.AVFrame** %frame, align 16, !dbg !7359
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7360
  %call = call i32 @show_bits(%struct.GetBitContext* %7, i32 12), !dbg !7362
  %cmp = icmp eq i32 %call, 4095, !dbg !7363
  br i1 %cmp, label %if.then, label %if.end12, !dbg !7364

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7365
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7368
  %call1 = call i32 @parse_adts_frame_header(%struct.AACContext* %8, %struct.GetBitContext* %9), !dbg !7369
  store i32 %call1, i32* %err, align 4, !dbg !7370
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7371
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7372

if.then3:                                         ; preds = %if.then
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7373
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !7373
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i32 0, i32 0)), !dbg !7375
  br label %fail, !dbg !7376

if.end:                                           ; preds = %if.then
  %12 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7377
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 24, !dbg !7379
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7377
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7380
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !7381
  %13 = load i32, i32* %sampling_index, align 4, !dbg !7381
  %cmp4 = icmp sgt i32 %13, 12, !dbg !7382
  br i1 %cmp4, label %if.then5, label %if.end11, !dbg !7383

if.then5:                                         ; preds = %if.end
  %14 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7384
  %avctx6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !7386
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !7386
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !7384
  %17 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7387
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 24, !dbg !7388
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !7387
  %m4ac9 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx8, i32 0, i32 0, !dbg !7389
  %sampling_index10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac9, i32 0, i32 1, !dbg !7390
  %18 = load i32, i32* %sampling_index10, align 4, !dbg !7390
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0), i32 %18), !dbg !7391
  store i32 -1094995529, i32* %err, align 4, !dbg !7392
  br label %fail, !dbg !7393

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !7394

if.end12:                                         ; preds = %if.end11, %entry
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7395
  %call13 = call i32 @frame_configure_elements(%struct.AVCodecContext* %19), !dbg !7397
  store i32 %call13, i32* %err, align 4, !dbg !7398
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7399
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7400

if.then15:                                        ; preds = %if.end12
  br label %fail, !dbg !7401

if.end16:                                         ; preds = %if.end12
  %20 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7402
  %oc17 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 24, !dbg !7403
  %arrayidx18 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc17, i64 0, i64 1, !dbg !7402
  %m4ac19 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx18, i32 0, i32 0, !dbg !7404
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac19, i32 0, i32 0, !dbg !7405
  %21 = load i32, i32* %object_type, align 8, !dbg !7405
  %sub = sub nsw i32 %21, 1, !dbg !7406
  %22 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7407
  %avctx20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %22, i32 0, i32 1, !dbg !7408
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 8, !dbg !7408
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 153, !dbg !7409
  store i32 %sub, i32* %profile, align 4, !dbg !7410
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7411
  %call21 = call i32 @get_bits_count(%struct.GetBitContext* %24), !dbg !7412
  store i32 %call21, i32* %payload_alignment, align 4, !dbg !7413
  %25 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7414
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 7, !dbg !7415
  store i32 0, i32* %tags_mapped, align 8, !dbg !7416
  br label %while.cond, !dbg !7417

while.cond:                                       ; preds = %if.end133, %if.end16
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7418
  %call22 = call i32 @get_bits(%struct.GetBitContext* %26, i32 3), !dbg !7420
  store i32 %call22, i32* %elem_type, align 4, !dbg !7421
  %cmp23 = icmp ne i32 %call22, 7, !dbg !7422
  br i1 %cmp23, label %while.body, label %while.end134, !dbg !7423

while.body:                                       ; preds = %while.cond
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7424
  %call24 = call i32 @get_bits(%struct.GetBitContext* %27, i32 4), !dbg !7426
  store i32 %call24, i32* %elem_id, align 4, !dbg !7427
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7428
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 134, !dbg !7430
  %29 = load i32, i32* %debug, align 4, !dbg !7430
  %and = and i32 %29, 256, !dbg !7431
  %tobool = icmp ne i32 %and, 0, !dbg !7431
  br i1 %tobool, label %if.then25, label %if.end26, !dbg !7432

if.then25:                                        ; preds = %while.body
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7433
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !7433
  %32 = load i32, i32* %elem_type, align 4, !dbg !7434
  %33 = load i32, i32* %elem_id, align 4, !dbg !7435
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i32 0, i32 0), i32 %32, i32 %33), !dbg !7436
  br label %if.end26, !dbg !7436

if.end26:                                         ; preds = %if.then25, %while.body
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7437
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 83, !dbg !7439
  %35 = load i32, i32* %channels, align 4, !dbg !7439
  %tobool27 = icmp ne i32 %35, 0, !dbg !7437
  br i1 %tobool27, label %if.end30, label %land.lhs.true, !dbg !7440

land.lhs.true:                                    ; preds = %if.end26
  %36 = load i32, i32* %elem_type, align 4, !dbg !7441
  %cmp28 = icmp ne i32 %36, 5, !dbg !7443
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !7444

if.then29:                                        ; preds = %land.lhs.true
  store i32 -1094995529, i32* %err, align 4, !dbg !7445
  br label %fail, !dbg !7447

if.end30:                                         ; preds = %land.lhs.true, %if.end26
  %37 = load i32, i32* %elem_type, align 4, !dbg !7448
  %cmp31 = icmp ult i32 %37, 4, !dbg !7450
  br i1 %cmp31, label %if.then32, label %if.end64, !dbg !7451

if.then32:                                        ; preds = %if.end30
  %38 = load i32, i32* %elem_id, align 4, !dbg !7452
  %idxprom = sext i32 %38 to i64, !dbg !7455
  %39 = load i32, i32* %elem_type, align 4, !dbg !7456
  %idxprom33 = zext i32 %39 to i64, !dbg !7455
  %arrayidx34 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom33, !dbg !7455
  %arrayidx35 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx34, i64 0, i64 %idxprom, !dbg !7455
  %40 = load i8, i8* %arrayidx35, align 1, !dbg !7455
  %tobool36 = icmp ne i8 %40, 0, !dbg !7455
  br i1 %tobool36, label %if.then37, label %if.end49, !dbg !7457

if.then37:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7458, metadata !2062), !dbg !7460
  %41 = load i32, i32* %elem_id, align 4, !dbg !7461
  %idxprom38 = sext i32 %41 to i64, !dbg !7462
  %42 = load i32, i32* %elem_type, align 4, !dbg !7463
  %idxprom39 = zext i32 %42 to i64, !dbg !7462
  %arrayidx40 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom39, !dbg !7462
  %arrayidx41 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx40, i64 0, i64 %idxprom38, !dbg !7462
  %43 = load i8, i8* %arrayidx41, align 1, !dbg !7462
  %conv = zext i8 %43 to i32, !dbg !7462
  %cmp42 = icmp sgt i32 %conv, 1, !dbg !7464
  %conv43 = zext i1 %cmp42 to i32, !dbg !7464
  store i32 %conv43, i32* %error, align 4, !dbg !7460
  %44 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7465
  %avctx44 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %44, i32 0, i32 1, !dbg !7466
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !7466
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !7465
  %47 = load i32, i32* %error, align 4, !dbg !7467
  %tobool45 = icmp ne i32 %47, 0, !dbg !7467
  %cond = select i1 %tobool45, i32 16, i32 48, !dbg !7467
  %48 = load i32, i32* %elem_type, align 4, !dbg !7468
  %49 = load i32, i32* %elem_id, align 4, !dbg !7469
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 %cond, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i32 0, i32 0), i32 %48, i32 %49), !dbg !7470
  %50 = load i32, i32* %error, align 4, !dbg !7471
  %tobool46 = icmp ne i32 %50, 0, !dbg !7471
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7473

if.then47:                                        ; preds = %if.then37
  store i32 -1094995529, i32* %err, align 4, !dbg !7474
  br label %fail, !dbg !7476

if.end48:                                         ; preds = %if.then37
  br label %if.end49, !dbg !7477

if.end49:                                         ; preds = %if.end48, %if.then32
  %51 = load i32, i32* %elem_id, align 4, !dbg !7478
  %idxprom50 = sext i32 %51 to i64, !dbg !7479
  %52 = load i32, i32* %elem_type, align 4, !dbg !7480
  %idxprom51 = zext i32 %52 to i64, !dbg !7479
  %arrayidx52 = getelementptr inbounds [4 x [16 x i8]], [4 x [16 x i8]]* %che_presence, i64 0, i64 %idxprom51, !dbg !7479
  %arrayidx53 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx52, i64 0, i64 %idxprom50, !dbg !7479
  %53 = load i8, i8* %arrayidx53, align 1, !dbg !7481
  %inc = add i8 %53, 1, !dbg !7481
  store i8 %inc, i8* %arrayidx53, align 1, !dbg !7481
  %54 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7482
  %55 = load i32, i32* %elem_type, align 4, !dbg !7484
  %56 = load i32, i32* %elem_id, align 4, !dbg !7485
  %call54 = call %struct.ChannelElement* @get_che(%struct.AACContext* %54, i32 %55, i32 %56), !dbg !7486
  store %struct.ChannelElement* %call54, %struct.ChannelElement** %che, align 8, !dbg !7487
  %tobool55 = icmp ne %struct.ChannelElement* %call54, null, !dbg !7487
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !7488

if.then56:                                        ; preds = %if.end49
  %57 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7489
  %avctx57 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %57, i32 0, i32 1, !dbg !7491
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 8, !dbg !7491
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !7489
  %60 = load i32, i32* %elem_type, align 4, !dbg !7492
  %61 = load i32, i32* %elem_id, align 4, !dbg !7493
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i32 0, i32 0), i32 %60, i32 %61), !dbg !7494
  store i32 -1094995529, i32* %err, align 4, !dbg !7495
  br label %fail, !dbg !7496

if.end58:                                         ; preds = %if.end49
  %62 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7497
  %oc59 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 24, !dbg !7498
  %arrayidx60 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc59, i64 0, i64 1, !dbg !7497
  %m4ac61 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx60, i32 0, i32 0, !dbg !7499
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac61, i32 0, i32 11, !dbg !7500
  %63 = load i32, i32* %frame_length_short, align 4, !dbg !7500
  %tobool62 = icmp ne i32 %63, 0, !dbg !7497
  %cond63 = select i1 %tobool62, i32 960, i32 1024, !dbg !7497
  store i32 %cond63, i32* %samples, align 4, !dbg !7501
  %64 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7502
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %64, i32 0, i32 0, !dbg !7503
  store i32 1, i32* %present, align 32, !dbg !7504
  br label %if.end64, !dbg !7505

if.end64:                                         ; preds = %if.end58, %if.end30
  %65 = load i32, i32* %elem_type, align 4, !dbg !7506
  switch i32 %65, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb68
    i32 2, label %sw.bb70
    i32 3, label %sw.bb72
    i32 4, label %sw.bb76
    i32 5, label %sw.bb78
    i32 6, label %sw.bb104
  ], !dbg !7507

sw.bb:                                            ; preds = %if.end64
  %66 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7508
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7510
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 7, !dbg !7511
  %arrayidx65 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !7510
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7512
  %call66 = call i32 @decode_ics(%struct.AACContext* %66, %struct.SingleChannelElement* %arrayidx65, %struct.GetBitContext* %68, i32 0, i32 0), !dbg !7513
  store i32 %call66, i32* %err, align 4, !dbg !7514
  store i32 1, i32* %audio_found, align 4, !dbg !7515
  %69 = load i32, i32* %sce_count, align 4, !dbg !7516
  %inc67 = add nsw i32 %69, 1, !dbg !7516
  store i32 %inc67, i32* %sce_count, align 4, !dbg !7516
  br label %sw.epilog, !dbg !7517

sw.bb68:                                          ; preds = %if.end64
  %70 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7518
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7519
  %72 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7520
  %call69 = call i32 @decode_cpe(%struct.AACContext* %70, %struct.GetBitContext* %71, %struct.ChannelElement* %72), !dbg !7521
  store i32 %call69, i32* %err, align 4, !dbg !7522
  store i32 1, i32* %audio_found, align 4, !dbg !7523
  br label %sw.epilog, !dbg !7524

sw.bb70:                                          ; preds = %if.end64
  %73 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7525
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7526
  %75 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7527
  %call71 = call i32 @decode_cce(%struct.AACContext* %73, %struct.GetBitContext* %74, %struct.ChannelElement* %75), !dbg !7528
  store i32 %call71, i32* %err, align 4, !dbg !7529
  br label %sw.epilog, !dbg !7530

sw.bb72:                                          ; preds = %if.end64
  %76 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7531
  %77 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7532
  %ch73 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %77, i32 0, i32 7, !dbg !7533
  %arrayidx74 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch73, i64 0, i64 0, !dbg !7532
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7534
  %call75 = call i32 @decode_ics(%struct.AACContext* %76, %struct.SingleChannelElement* %arrayidx74, %struct.GetBitContext* %78, i32 0, i32 0), !dbg !7535
  store i32 %call75, i32* %err, align 4, !dbg !7536
  store i32 1, i32* %audio_found, align 4, !dbg !7537
  br label %sw.epilog, !dbg !7538

sw.bb76:                                          ; preds = %if.end64
  %79 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7539
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7540
  %call77 = call i32 @skip_data_stream_element(%struct.AACContext* %79, %struct.GetBitContext* %80), !dbg !7541
  store i32 %call77, i32* %err, align 4, !dbg !7542
  br label %sw.epilog, !dbg !7543

sw.bb78:                                          ; preds = %if.end64
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !7544, metadata !2062), !dbg !7546
  call void @llvm.dbg.declare(metadata i32* %tags, metadata !7547, metadata !2062), !dbg !7548
  call void @llvm.dbg.declare(metadata i32* %pushed, metadata !7549, metadata !2062), !dbg !7550
  %81 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7551
  %call79 = call i32 @push_output_configuration(%struct.AACContext* %81), !dbg !7552
  store i32 %call79, i32* %pushed, align 4, !dbg !7550
  %82 = load i32, i32* %pce_found, align 4, !dbg !7553
  %tobool80 = icmp ne i32 %82, 0, !dbg !7553
  br i1 %tobool80, label %land.lhs.true81, label %if.end84, !dbg !7555

land.lhs.true81:                                  ; preds = %sw.bb78
  %83 = load i32, i32* %pushed, align 4, !dbg !7556
  %tobool82 = icmp ne i32 %83, 0, !dbg !7556
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !7558

if.then83:                                        ; preds = %land.lhs.true81
  store i32 -1094995529, i32* %err, align 4, !dbg !7559
  br label %fail, !dbg !7561

if.end84:                                         ; preds = %land.lhs.true81, %sw.bb78
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7562
  %85 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7563
  %oc85 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 24, !dbg !7564
  %arrayidx86 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc85, i64 0, i64 1, !dbg !7563
  %m4ac87 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx86, i32 0, i32 0, !dbg !7565
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7566
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7567
  %87 = load i32, i32* %payload_alignment, align 4, !dbg !7568
  %call88 = call i32 @decode_pce(%struct.AVCodecContext* %84, %struct.MPEG4AudioConfig* %m4ac87, [3 x i8]* %arraydecay, %struct.GetBitContext* %86, i32 %87), !dbg !7569
  store i32 %call88, i32* %tags, align 4, !dbg !7570
  %88 = load i32, i32* %tags, align 4, !dbg !7571
  %cmp89 = icmp slt i32 %88, 0, !dbg !7573
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7574

if.then91:                                        ; preds = %if.end84
  %89 = load i32, i32* %tags, align 4, !dbg !7575
  store i32 %89, i32* %err, align 4, !dbg !7577
  br label %sw.epilog, !dbg !7578

if.end92:                                         ; preds = %if.end84
  %90 = load i32, i32* %pce_found, align 4, !dbg !7579
  %tobool93 = icmp ne i32 %90, 0, !dbg !7579
  br i1 %tobool93, label %if.then94, label %if.else, !dbg !7581

if.then94:                                        ; preds = %if.end92
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7582
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !7582
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.79, i32 0, i32 0)), !dbg !7584
  %93 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7585
  call void @pop_output_configuration(%struct.AACContext* %93), !dbg !7586
  br label %if.end103, !dbg !7587

if.else:                                          ; preds = %if.end92
  %94 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7588
  %arraydecay95 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7590
  %95 = load i32, i32* %tags, align 4, !dbg !7591
  %call96 = call i32 @output_configure(%struct.AACContext* %94, [3 x i8]* %arraydecay95, i32 %95, i32 1, i32 1), !dbg !7592
  store i32 %call96, i32* %err, align 4, !dbg !7593
  %96 = load i32, i32* %err, align 4, !dbg !7594
  %tobool97 = icmp ne i32 %96, 0, !dbg !7594
  br i1 %tobool97, label %if.end102, label %if.then98, !dbg !7596

if.then98:                                        ; preds = %if.else
  %97 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7597
  %oc99 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %97, i32 0, i32 24, !dbg !7598
  %arrayidx100 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc99, i64 0, i64 1, !dbg !7597
  %m4ac101 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx100, i32 0, i32 0, !dbg !7599
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac101, i32 0, i32 3, !dbg !7600
  store i32 0, i32* %chan_config, align 4, !dbg !7601
  br label %if.end102, !dbg !7597

if.end102:                                        ; preds = %if.then98, %if.else
  store i32 1, i32* %pce_found, align 4, !dbg !7602
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then94
  br label %sw.epilog, !dbg !7603

sw.bb104:                                         ; preds = %if.end64
  %98 = load i32, i32* %elem_id, align 4, !dbg !7604
  %cmp105 = icmp eq i32 %98, 15, !dbg !7606
  br i1 %cmp105, label %if.then107, label %if.end110, !dbg !7607

if.then107:                                       ; preds = %sw.bb104
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7608
  %call108 = call i32 @get_bits(%struct.GetBitContext* %99, i32 8), !dbg !7609
  %sub109 = sub i32 %call108, 1, !dbg !7610
  %100 = load i32, i32* %elem_id, align 4, !dbg !7611
  %add = add i32 %100, %sub109, !dbg !7611
  store i32 %add, i32* %elem_id, align 4, !dbg !7611
  br label %if.end110, !dbg !7612

if.end110:                                        ; preds = %if.then107, %sw.bb104
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7613
  %call111 = call i32 @get_bits_left(%struct.GetBitContext* %101), !dbg !7615
  %102 = load i32, i32* %elem_id, align 4, !dbg !7616
  %mul = mul nsw i32 8, %102, !dbg !7617
  %cmp112 = icmp slt i32 %call111, %mul, !dbg !7618
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !7619

if.then114:                                       ; preds = %if.end110
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7620
  %104 = bitcast %struct.AVCodecContext* %103 to i8*, !dbg !7620
  call void (i8*, i32, i8*, ...) @av_log(i8* %104, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.80, i32 0, i32 0)), !dbg !7622
  store i32 -1094995529, i32* %err, align 4, !dbg !7623
  br label %fail, !dbg !7624

if.end115:                                        ; preds = %if.end110
  br label %while.cond116, !dbg !7625

while.cond116:                                    ; preds = %while.body119, %if.end115
  %105 = load i32, i32* %elem_id, align 4, !dbg !7626
  %cmp117 = icmp sgt i32 %105, 0, !dbg !7628
  br i1 %cmp117, label %while.body119, label %while.end, !dbg !7629

while.body119:                                    ; preds = %while.cond116
  %106 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7630
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7631
  %108 = load i32, i32* %elem_id, align 4, !dbg !7632
  %109 = load %struct.ChannelElement*, %struct.ChannelElement** %che_prev, align 8, !dbg !7633
  %110 = load i32, i32* %che_prev_type, align 4, !dbg !7634
  %call120 = call i32 @decode_extension_payload(%struct.AACContext* %106, %struct.GetBitContext* %107, i32 %108, %struct.ChannelElement* %109, i32 %110), !dbg !7635
  %111 = load i32, i32* %elem_id, align 4, !dbg !7636
  %sub121 = sub nsw i32 %111, %call120, !dbg !7636
  store i32 %sub121, i32* %elem_id, align 4, !dbg !7636
  br label %while.cond116, !dbg !7637, !llvm.loop !7639

while.end:                                        ; preds = %while.cond116
  store i32 0, i32* %err, align 4, !dbg !7640
  br label %sw.epilog, !dbg !7641

sw.default:                                       ; preds = %if.end64
  store i32 -558323010, i32* %err, align 4, !dbg !7642
  br label %sw.epilog, !dbg !7643

sw.epilog:                                        ; preds = %sw.default, %while.end, %if.end103, %if.then91, %sw.bb76, %sw.bb72, %sw.bb70, %sw.bb68, %sw.bb
  %112 = load i32, i32* %elem_type, align 4, !dbg !7644
  %cmp122 = icmp ult i32 %112, 4, !dbg !7646
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !7647

if.then124:                                       ; preds = %sw.epilog
  %113 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !7648
  store %struct.ChannelElement* %113, %struct.ChannelElement** %che_prev, align 8, !dbg !7650
  %114 = load i32, i32* %elem_type, align 4, !dbg !7651
  store i32 %114, i32* %che_prev_type, align 4, !dbg !7652
  br label %if.end125, !dbg !7653

if.end125:                                        ; preds = %if.then124, %sw.epilog
  %115 = load i32, i32* %err, align 4, !dbg !7654
  %tobool126 = icmp ne i32 %115, 0, !dbg !7654
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !7656

if.then127:                                       ; preds = %if.end125
  br label %fail, !dbg !7657

if.end128:                                        ; preds = %if.end125
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7658
  %call129 = call i32 @get_bits_left(%struct.GetBitContext* %116), !dbg !7660
  %cmp130 = icmp slt i32 %call129, 3, !dbg !7661
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !7662

if.then132:                                       ; preds = %if.end128
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7663
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !7663
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.43, i32 0, i32 0)), !dbg !7665
  store i32 -1094995529, i32* %err, align 4, !dbg !7666
  br label %fail, !dbg !7667

if.end133:                                        ; preds = %if.end128
  br label %while.cond, !dbg !7668, !llvm.loop !7670

while.end134:                                     ; preds = %while.cond
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7671
  %channels135 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 83, !dbg !7673
  %120 = load i32, i32* %channels135, align 4, !dbg !7673
  %tobool136 = icmp ne i32 %120, 0, !dbg !7671
  br i1 %tobool136, label %if.end138, label %if.then137, !dbg !7674

if.then137:                                       ; preds = %while.end134
  %121 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7675
  store i32 0, i32* %121, align 4, !dbg !7677
  store i32 0, i32* %retval, align 4, !dbg !7678
  br label %return, !dbg !7678

if.end138:                                        ; preds = %while.end134
  %122 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7679
  %oc139 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %122, i32 0, i32 24, !dbg !7680
  %arrayidx140 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc139, i64 0, i64 1, !dbg !7679
  %m4ac141 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx140, i32 0, i32 0, !dbg !7681
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac141, i32 0, i32 4, !dbg !7682
  %123 = load i32, i32* %sbr, align 8, !dbg !7682
  %cmp142 = icmp eq i32 %123, 1, !dbg !7683
  br i1 %cmp142, label %cond.true, label %cond.false, !dbg !7684

cond.true:                                        ; preds = %if.end138
  %124 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7685
  %oc144 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %124, i32 0, i32 24, !dbg !7686
  %arrayidx145 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc144, i64 0, i64 1, !dbg !7685
  %m4ac146 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx145, i32 0, i32 0, !dbg !7687
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac146, i32 0, i32 7, !dbg !7688
  %125 = load i32, i32* %ext_sample_rate, align 4, !dbg !7688
  %126 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7689
  %oc147 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %126, i32 0, i32 24, !dbg !7690
  %arrayidx148 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc147, i64 0, i64 1, !dbg !7689
  %m4ac149 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx148, i32 0, i32 0, !dbg !7691
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac149, i32 0, i32 2, !dbg !7692
  %127 = load i32, i32* %sample_rate, align 8, !dbg !7692
  %cmp150 = icmp sgt i32 %125, %127, !dbg !7693
  %conv151 = zext i1 %cmp150 to i32, !dbg !7693
  br label %cond.end, !dbg !7694

cond.false:                                       ; preds = %if.end138
  br label %cond.end, !dbg !7695

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond152 = phi i32 [ %conv151, %cond.true ], [ 0, %cond.false ], !dbg !7696
  store i32 %cond152, i32* %multiplier, align 4, !dbg !7698
  %128 = load i32, i32* %multiplier, align 4, !dbg !7699
  %129 = load i32, i32* %samples, align 4, !dbg !7700
  %shl = shl i32 %129, %128, !dbg !7700
  store i32 %shl, i32* %samples, align 4, !dbg !7700
  %130 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7701
  %131 = load i32, i32* %samples, align 4, !dbg !7702
  call void @spectral_to_sample(%struct.AACContext* %130, i32 %131), !dbg !7703
  %132 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7704
  %oc153 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %132, i32 0, i32 24, !dbg !7706
  %arrayidx154 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc153, i64 0, i64 1, !dbg !7704
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx154, i32 0, i32 5, !dbg !7707
  %133 = load i32, i32* %status, align 8, !dbg !7707
  %tobool155 = icmp ne i32 %133, 0, !dbg !7704
  br i1 %tobool155, label %land.lhs.true156, label %if.end168, !dbg !7708

land.lhs.true156:                                 ; preds = %cond.end
  %134 = load i32, i32* %audio_found, align 4, !dbg !7709
  %tobool157 = icmp ne i32 %134, 0, !dbg !7709
  br i1 %tobool157, label %if.then158, label %if.end168, !dbg !7711

if.then158:                                       ; preds = %land.lhs.true156
  %135 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7712
  %oc159 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %135, i32 0, i32 24, !dbg !7714
  %arrayidx160 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc159, i64 0, i64 1, !dbg !7712
  %m4ac161 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx160, i32 0, i32 0, !dbg !7715
  %sample_rate162 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac161, i32 0, i32 2, !dbg !7716
  %136 = load i32, i32* %sample_rate162, align 8, !dbg !7716
  %137 = load i32, i32* %multiplier, align 4, !dbg !7717
  %shl163 = shl i32 %136, %137, !dbg !7718
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7719
  %sample_rate164 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %138, i32 0, i32 82, !dbg !7720
  store i32 %shl163, i32* %sample_rate164, align 8, !dbg !7721
  %139 = load i32, i32* %samples, align 4, !dbg !7722
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7723
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 85, !dbg !7724
  store i32 %139, i32* %frame_size, align 4, !dbg !7725
  %141 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7726
  %oc165 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %141, i32 0, i32 24, !dbg !7727
  %arrayidx166 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc165, i64 0, i64 1, !dbg !7726
  %status167 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx166, i32 0, i32 5, !dbg !7728
  store i32 4, i32* %status167, align 8, !dbg !7729
  br label %if.end168, !dbg !7730

if.end168:                                        ; preds = %if.then158, %land.lhs.true156, %cond.end
  %142 = load i32, i32* %multiplier, align 4, !dbg !7731
  %tobool169 = icmp ne i32 %142, 0, !dbg !7731
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !7733

if.then170:                                       ; preds = %if.end168
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7734
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 7, !dbg !7735
  %144 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !7735
  %skip_samples_multiplier = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %144, i32 0, i32 25, !dbg !7736
  store i32 2, i32* %skip_samples_multiplier, align 4, !dbg !7737
  br label %if.end171, !dbg !7734

if.end171:                                        ; preds = %if.then170, %if.end168
  %145 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7738
  %frame172 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %145, i32 0, i32 2, !dbg !7740
  %146 = load %struct.AVFrame*, %struct.AVFrame** %frame172, align 16, !dbg !7740
  %data173 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %146, i32 0, i32 0, !dbg !7741
  %arrayidx174 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data173, i64 0, i64 0, !dbg !7738
  %147 = load i8*, i8** %arrayidx174, align 8, !dbg !7738
  %tobool175 = icmp ne i8* %147, null, !dbg !7738
  br i1 %tobool175, label %if.end179, label %land.lhs.true176, !dbg !7742

land.lhs.true176:                                 ; preds = %if.end171
  %148 = load i32, i32* %samples, align 4, !dbg !7743
  %tobool177 = icmp ne i32 %148, 0, !dbg !7743
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !7745

if.then178:                                       ; preds = %land.lhs.true176
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7746
  %150 = bitcast %struct.AVCodecContext* %149 to i8*, !dbg !7746
  call void (i8*, i32, i8*, ...) @av_log(i8* %150, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i32 0, i32 0)), !dbg !7748
  store i32 -1094995529, i32* %err, align 4, !dbg !7749
  br label %fail, !dbg !7750

if.end179:                                        ; preds = %land.lhs.true176, %if.end171
  %151 = load i32, i32* %samples, align 4, !dbg !7751
  %tobool180 = icmp ne i32 %151, 0, !dbg !7751
  br i1 %tobool180, label %if.then181, label %if.else186, !dbg !7753

if.then181:                                       ; preds = %if.end179
  %152 = load i32, i32* %samples, align 4, !dbg !7754
  %153 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7756
  %frame182 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %153, i32 0, i32 2, !dbg !7757
  %154 = load %struct.AVFrame*, %struct.AVFrame** %frame182, align 16, !dbg !7757
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %154, i32 0, i32 5, !dbg !7758
  store i32 %152, i32* %nb_samples, align 8, !dbg !7759
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7760
  %sample_rate183 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 82, !dbg !7761
  %156 = load i32, i32* %sample_rate183, align 8, !dbg !7761
  %157 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7762
  %frame184 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %157, i32 0, i32 2, !dbg !7763
  %158 = load %struct.AVFrame*, %struct.AVFrame** %frame184, align 16, !dbg !7763
  %sample_rate185 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %158, i32 0, i32 23, !dbg !7764
  store i32 %156, i32* %sample_rate185, align 8, !dbg !7765
  br label %if.end188, !dbg !7766

if.else186:                                       ; preds = %if.end179
  %159 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7767
  %frame187 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %159, i32 0, i32 2, !dbg !7768
  %160 = load %struct.AVFrame*, %struct.AVFrame** %frame187, align 16, !dbg !7768
  call void @av_frame_unref(%struct.AVFrame* %160), !dbg !7769
  br label %if.end188

if.end188:                                        ; preds = %if.else186, %if.then181
  %161 = load i32, i32* %samples, align 4, !dbg !7770
  %tobool189 = icmp ne i32 %161, 0, !dbg !7771
  %lnot = xor i1 %tobool189, true, !dbg !7771
  %lnot190 = xor i1 %lnot, true, !dbg !7772
  %lnot.ext = zext i1 %lnot190 to i32, !dbg !7772
  %162 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !7773
  store i32 %lnot.ext, i32* %162, align 4, !dbg !7774
  %163 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7775
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %163, i32 0, i32 21, !dbg !7776
  %164 = load i32, i32* %dmono_mode, align 4, !dbg !7776
  %tobool191 = icmp ne i32 %164, 0, !dbg !7775
  br i1 %tobool191, label %land.lhs.true192, label %land.end, !dbg !7777

land.lhs.true192:                                 ; preds = %if.end188
  %165 = load i32, i32* %sce_count, align 4, !dbg !7778
  %cmp193 = icmp eq i32 %165, 2, !dbg !7779
  br i1 %cmp193, label %land.rhs, label %land.end, !dbg !7780

land.rhs:                                         ; preds = %land.lhs.true192
  %166 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7781
  %oc195 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %166, i32 0, i32 24, !dbg !7782
  %arrayidx196 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc195, i64 0, i64 1, !dbg !7781
  %channel_layout = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx196, i32 0, i32 4, !dbg !7783
  %167 = load i64, i64* %channel_layout, align 8, !dbg !7783
  %cmp197 = icmp eq i64 %167, 3, !dbg !7784
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true192, %if.end188
  %168 = phi i1 [ false, %land.lhs.true192 ], [ false, %if.end188 ], [ %cmp197, %land.rhs ]
  %land.ext = zext i1 %168 to i32, !dbg !7785
  store i32 %land.ext, i32* %is_dmono, align 4, !dbg !7786
  %169 = load i32, i32* %is_dmono, align 4, !dbg !7787
  %tobool199 = icmp ne i32 %169, 0, !dbg !7787
  br i1 %tobool199, label %if.then200, label %if.end220, !dbg !7789

if.then200:                                       ; preds = %land.end
  %170 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7790
  %dmono_mode201 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %170, i32 0, i32 21, !dbg !7793
  %171 = load i32, i32* %dmono_mode201, align 4, !dbg !7793
  %cmp202 = icmp eq i32 %171, 1, !dbg !7794
  br i1 %cmp202, label %if.then204, label %if.else209, !dbg !7795

if.then204:                                       ; preds = %if.then200
  %172 = load i8*, i8** %data.addr, align 8, !dbg !7796
  %173 = bitcast i8* %172 to %struct.AVFrame*, !dbg !7797
  %data205 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %173, i32 0, i32 0, !dbg !7798
  %arrayidx206 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data205, i64 0, i64 0, !dbg !7799
  %174 = load i8*, i8** %arrayidx206, align 8, !dbg !7799
  %175 = load i8*, i8** %data.addr, align 8, !dbg !7800
  %176 = bitcast i8* %175 to %struct.AVFrame*, !dbg !7801
  %data207 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %176, i32 0, i32 0, !dbg !7802
  %arrayidx208 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data207, i64 0, i64 1, !dbg !7803
  store i8* %174, i8** %arrayidx208, align 8, !dbg !7804
  br label %if.end219, !dbg !7803

if.else209:                                       ; preds = %if.then200
  %177 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7805
  %dmono_mode210 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %177, i32 0, i32 21, !dbg !7807
  %178 = load i32, i32* %dmono_mode210, align 4, !dbg !7807
  %cmp211 = icmp eq i32 %178, 2, !dbg !7808
  br i1 %cmp211, label %if.then213, label %if.end218, !dbg !7809

if.then213:                                       ; preds = %if.else209
  %179 = load i8*, i8** %data.addr, align 8, !dbg !7810
  %180 = bitcast i8* %179 to %struct.AVFrame*, !dbg !7811
  %data214 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %180, i32 0, i32 0, !dbg !7812
  %arrayidx215 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data214, i64 0, i64 1, !dbg !7813
  %181 = load i8*, i8** %arrayidx215, align 8, !dbg !7813
  %182 = load i8*, i8** %data.addr, align 8, !dbg !7814
  %183 = bitcast i8* %182 to %struct.AVFrame*, !dbg !7815
  %data216 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %183, i32 0, i32 0, !dbg !7816
  %arrayidx217 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data216, i64 0, i64 0, !dbg !7817
  store i8* %181, i8** %arrayidx217, align 8, !dbg !7818
  br label %if.end218, !dbg !7817

if.end218:                                        ; preds = %if.then213, %if.else209
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then204
  br label %if.end220, !dbg !7819

if.end220:                                        ; preds = %if.end219, %land.end
  store i32 0, i32* %retval, align 4, !dbg !7820
  br label %return, !dbg !7820

fail:                                             ; preds = %if.then178, %if.then132, %if.then127, %if.then114, %if.then83, %if.then56, %if.then47, %if.then29, %if.then15, %if.then5, %if.then3
  %184 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !7821
  call void @pop_output_configuration(%struct.AACContext* %184), !dbg !7822
  %185 = load i32, i32* %err, align 4, !dbg !7823
  store i32 %185, i32* %retval, align 4, !dbg !7824
  br label %return, !dbg !7824

return:                                           ; preds = %fail, %if.end220, %if.then137
  %186 = load i32, i32* %retval, align 4, !dbg !7825
  ret i32 %186, !dbg !7825
}

; Function Attrs: nounwind uwtable
define internal %struct.ChannelElement* @get_che(%struct.AACContext* %ac, i32 %type, i32 %elem_id) #1 !dbg !7826 {
entry:
  %retval = alloca %struct.ChannelElement*, align 8
  %ac.addr = alloca %struct.AACContext*, align 8
  %type.addr = alloca i32, align 4
  %elem_id.addr = alloca i32, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %layout_map41 = alloca [64 x [3 x i8]], align 16
  %layout_map_tags42 = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !7829, metadata !2062), !dbg !7830
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7831, metadata !2062), !dbg !7832
  store i32 %elem_id, i32* %elem_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_id.addr, metadata !7833, metadata !2062), !dbg !7834
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7835
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !7837
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !7835
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !7838
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !7839
  %1 = load i32, i32* %chan_config, align 4, !dbg !7839
  %tobool = icmp ne i32 %1, 0, !dbg !7835
  br i1 %tobool, label %if.end, label %if.then, !dbg !7840

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %elem_id.addr, align 4, !dbg !7841
  %idxprom = sext i32 %2 to i64, !dbg !7843
  %3 = load i32, i32* %type.addr, align 4, !dbg !7844
  %idxprom1 = sext i32 %3 to i64, !dbg !7843
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7843
  %tag_che_map = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 6, !dbg !7845
  %arrayidx2 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map, i64 0, i64 %idxprom1, !dbg !7843
  %arrayidx3 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx2, i64 0, i64 %idxprom, !dbg !7843
  %5 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx3, align 8, !dbg !7843
  store %struct.ChannelElement* %5, %struct.ChannelElement** %retval, align 8, !dbg !7846
  br label %return, !dbg !7846

if.end:                                           ; preds = %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7847
  %tags_mapped = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 7, !dbg !7849
  %7 = load i32, i32* %tags_mapped, align 8, !dbg !7849
  %tobool4 = icmp ne i32 %7, 0, !dbg !7847
  br i1 %tobool4, label %if.end29, label %land.lhs.true, !dbg !7850

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %type.addr, align 4, !dbg !7851
  %cmp = icmp eq i32 %8, 1, !dbg !7853
  br i1 %cmp, label %land.lhs.true5, label %if.end29, !dbg !7854

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7855
  %oc6 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 24, !dbg !7856
  %arrayidx7 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc6, i64 0, i64 1, !dbg !7855
  %m4ac8 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx7, i32 0, i32 0, !dbg !7857
  %chan_config9 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac8, i32 0, i32 3, !dbg !7858
  %10 = load i32, i32* %chan_config9, align 4, !dbg !7858
  %cmp10 = icmp eq i32 %10, 1, !dbg !7859
  br i1 %cmp10, label %if.then11, label %if.end29, !dbg !7860

if.then11:                                        ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !7862, metadata !2062), !dbg !7864
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !7865, metadata !2062), !dbg !7866
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7867
  %call = call i32 @push_output_configuration(%struct.AACContext* %11), !dbg !7868
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7869
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 1, !dbg !7870
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7870
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !7869
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0)), !dbg !7871
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7872
  %avctx12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 1, !dbg !7874
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !7874
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7875
  %call13 = call i32 @set_default_channel_config(%struct.AVCodecContext* %16, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 2), !dbg !7876
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7877
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7878

if.then15:                                        ; preds = %if.then11
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7879
  br label %return, !dbg !7879

if.end16:                                         ; preds = %if.then11
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7880
  %arraydecay17 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !7882
  %18 = load i32, i32* %layout_map_tags, align 4, !dbg !7883
  %call18 = call i32 @output_configure(%struct.AACContext* %17, [3 x i8]* %arraydecay17, i32 %18, i32 2, i32 1), !dbg !7884
  %cmp19 = icmp slt i32 %call18, 0, !dbg !7885
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7886

if.then20:                                        ; preds = %if.end16
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7887
  br label %return, !dbg !7887

if.end21:                                         ; preds = %if.end16
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7888
  %oc22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 24, !dbg !7889
  %arrayidx23 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc22, i64 0, i64 1, !dbg !7888
  %m4ac24 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx23, i32 0, i32 0, !dbg !7890
  %chan_config25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac24, i32 0, i32 3, !dbg !7891
  store i32 2, i32* %chan_config25, align 4, !dbg !7892
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7893
  %oc26 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 24, !dbg !7894
  %arrayidx27 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc26, i64 0, i64 1, !dbg !7893
  %m4ac28 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx27, i32 0, i32 0, !dbg !7895
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac28, i32 0, i32 10, !dbg !7896
  store i32 0, i32* %ps, align 8, !dbg !7897
  br label %if.end29, !dbg !7898

if.end29:                                         ; preds = %if.end21, %land.lhs.true5, %land.lhs.true, %if.end
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7899
  %tags_mapped30 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 7, !dbg !7901
  %22 = load i32, i32* %tags_mapped30, align 8, !dbg !7901
  %tobool31 = icmp ne i32 %22, 0, !dbg !7899
  br i1 %tobool31, label %if.end70, label %land.lhs.true32, !dbg !7902

land.lhs.true32:                                  ; preds = %if.end29
  %23 = load i32, i32* %type.addr, align 4, !dbg !7903
  %cmp33 = icmp eq i32 %23, 0, !dbg !7905
  br i1 %cmp33, label %land.lhs.true34, label %if.end70, !dbg !7906

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7907
  %oc35 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 24, !dbg !7908
  %arrayidx36 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc35, i64 0, i64 1, !dbg !7907
  %m4ac37 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx36, i32 0, i32 0, !dbg !7909
  %chan_config38 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac37, i32 0, i32 3, !dbg !7910
  %25 = load i32, i32* %chan_config38, align 4, !dbg !7910
  %cmp39 = icmp eq i32 %25, 2, !dbg !7911
  br i1 %cmp39, label %if.then40, label %if.end70, !dbg !7912

if.then40:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map41, metadata !7913, metadata !2062), !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags42, metadata !7916, metadata !2062), !dbg !7917
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7918
  %call43 = call i32 @push_output_configuration(%struct.AACContext* %26), !dbg !7919
  %27 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7920
  %avctx44 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 1, !dbg !7921
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx44, align 8, !dbg !7921
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !7920
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i32 0, i32 0)), !dbg !7922
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7923
  %avctx45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !7925
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx45, align 8, !dbg !7925
  %arraydecay46 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map41, i32 0, i32 0, !dbg !7926
  %call47 = call i32 @set_default_channel_config(%struct.AVCodecContext* %31, [3 x i8]* %arraydecay46, i32* %layout_map_tags42, i32 1), !dbg !7927
  %cmp48 = icmp slt i32 %call47, 0, !dbg !7928
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !7929

if.then49:                                        ; preds = %if.then40
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7930
  br label %return, !dbg !7930

if.end50:                                         ; preds = %if.then40
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7931
  %arraydecay51 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map41, i32 0, i32 0, !dbg !7933
  %33 = load i32, i32* %layout_map_tags42, align 4, !dbg !7934
  %call52 = call i32 @output_configure(%struct.AACContext* %32, [3 x i8]* %arraydecay51, i32 %33, i32 2, i32 1), !dbg !7935
  %cmp53 = icmp slt i32 %call52, 0, !dbg !7936
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !7937

if.then54:                                        ; preds = %if.end50
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !7938
  br label %return, !dbg !7938

if.end55:                                         ; preds = %if.end50
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7939
  %oc56 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 24, !dbg !7940
  %arrayidx57 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc56, i64 0, i64 1, !dbg !7939
  %m4ac58 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx57, i32 0, i32 0, !dbg !7941
  %chan_config59 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac58, i32 0, i32 3, !dbg !7942
  store i32 1, i32* %chan_config59, align 4, !dbg !7943
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7944
  %oc60 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %35, i32 0, i32 24, !dbg !7946
  %arrayidx61 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc60, i64 0, i64 1, !dbg !7944
  %m4ac62 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx61, i32 0, i32 0, !dbg !7947
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac62, i32 0, i32 4, !dbg !7948
  %36 = load i32, i32* %sbr, align 8, !dbg !7948
  %tobool63 = icmp ne i32 %36, 0, !dbg !7944
  br i1 %tobool63, label %if.then64, label %if.end69, !dbg !7949

if.then64:                                        ; preds = %if.end55
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7950
  %oc65 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %37, i32 0, i32 24, !dbg !7951
  %arrayidx66 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc65, i64 0, i64 1, !dbg !7950
  %m4ac67 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx66, i32 0, i32 0, !dbg !7952
  %ps68 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac67, i32 0, i32 10, !dbg !7953
  store i32 -1, i32* %ps68, align 8, !dbg !7954
  br label %if.end69, !dbg !7950

if.end69:                                         ; preds = %if.then64, %if.end55
  br label %if.end70, !dbg !7955

if.end70:                                         ; preds = %if.end69, %land.lhs.true34, %land.lhs.true32, %if.end29
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7956
  %oc71 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 24, !dbg !7957
  %arrayidx72 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc71, i64 0, i64 1, !dbg !7956
  %m4ac73 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx72, i32 0, i32 0, !dbg !7958
  %chan_config74 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac73, i32 0, i32 3, !dbg !7959
  %39 = load i32, i32* %chan_config74, align 4, !dbg !7959
  switch i32 %39, label %sw.default [
    i32 12, label %sw.bb
    i32 7, label %sw.bb
    i32 11, label %sw.bb88
    i32 6, label %sw.bb110
    i32 5, label %sw.bb151
    i32 4, label %sw.bb169
    i32 3, label %sw.bb239
    i32 2, label %sw.bb239
    i32 1, label %sw.bb271
  ], !dbg !7960

sw.bb:                                            ; preds = %if.end70, %if.end70
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7961
  %tags_mapped75 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 7, !dbg !7964
  %41 = load i32, i32* %tags_mapped75, align 8, !dbg !7964
  %cmp76 = icmp eq i32 %41, 3, !dbg !7965
  br i1 %cmp76, label %land.lhs.true77, label %if.end87, !dbg !7966

land.lhs.true77:                                  ; preds = %sw.bb
  %42 = load i32, i32* %type.addr, align 4, !dbg !7967
  %cmp78 = icmp eq i32 %42, 1, !dbg !7969
  br i1 %cmp78, label %if.then79, label %if.end87, !dbg !7970

if.then79:                                        ; preds = %land.lhs.true77
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7971
  %tags_mapped80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 7, !dbg !7973
  %44 = load i32, i32* %tags_mapped80, align 8, !dbg !7974
  %inc = add nsw i32 %44, 1, !dbg !7974
  store i32 %inc, i32* %tags_mapped80, align 8, !dbg !7974
  %45 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7975
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %45, i32 0, i32 5, !dbg !7976
  %arrayidx81 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 1, !dbg !7975
  %arrayidx82 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx81, i64 0, i64 2, !dbg !7975
  %46 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx82, align 8, !dbg !7975
  %47 = load i32, i32* %elem_id.addr, align 4, !dbg !7977
  %idxprom83 = sext i32 %47 to i64, !dbg !7978
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7978
  %tag_che_map84 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 6, !dbg !7979
  %arrayidx85 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map84, i64 0, i64 1, !dbg !7978
  %arrayidx86 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx85, i64 0, i64 %idxprom83, !dbg !7978
  store %struct.ChannelElement* %46, %struct.ChannelElement** %arrayidx86, align 8, !dbg !7980
  store %struct.ChannelElement* %46, %struct.ChannelElement** %retval, align 8, !dbg !7981
  br label %return, !dbg !7981

if.end87:                                         ; preds = %land.lhs.true77, %sw.bb
  br label %sw.bb88, !dbg !7982

sw.bb88:                                          ; preds = %if.end70, %if.end87
  %49 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7984
  %tags_mapped89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %49, i32 0, i32 7, !dbg !7986
  %50 = load i32, i32* %tags_mapped89, align 8, !dbg !7986
  %cmp90 = icmp eq i32 %50, 2, !dbg !7987
  br i1 %cmp90, label %land.lhs.true91, label %if.end109, !dbg !7988

land.lhs.true91:                                  ; preds = %sw.bb88
  %51 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7989
  %oc92 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %51, i32 0, i32 24, !dbg !7990
  %arrayidx93 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc92, i64 0, i64 1, !dbg !7989
  %m4ac94 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx93, i32 0, i32 0, !dbg !7991
  %chan_config95 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac94, i32 0, i32 3, !dbg !7992
  %52 = load i32, i32* %chan_config95, align 4, !dbg !7992
  %cmp96 = icmp eq i32 %52, 11, !dbg !7993
  br i1 %cmp96, label %land.lhs.true97, label %if.end109, !dbg !7994

land.lhs.true97:                                  ; preds = %land.lhs.true91
  %53 = load i32, i32* %type.addr, align 4, !dbg !7995
  %cmp98 = icmp eq i32 %53, 0, !dbg !7996
  br i1 %cmp98, label %if.then99, label %if.end109, !dbg !7997

if.then99:                                        ; preds = %land.lhs.true97
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7999
  %tags_mapped100 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %54, i32 0, i32 7, !dbg !8001
  %55 = load i32, i32* %tags_mapped100, align 8, !dbg !8002
  %inc101 = add nsw i32 %55, 1, !dbg !8002
  store i32 %inc101, i32* %tags_mapped100, align 8, !dbg !8002
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8003
  %che102 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 5, !dbg !8004
  %arrayidx103 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che102, i64 0, i64 0, !dbg !8003
  %arrayidx104 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx103, i64 0, i64 1, !dbg !8003
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx104, align 8, !dbg !8003
  %58 = load i32, i32* %elem_id.addr, align 4, !dbg !8005
  %idxprom105 = sext i32 %58 to i64, !dbg !8006
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8006
  %tag_che_map106 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 6, !dbg !8007
  %arrayidx107 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map106, i64 0, i64 0, !dbg !8006
  %arrayidx108 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx107, i64 0, i64 %idxprom105, !dbg !8006
  store %struct.ChannelElement* %57, %struct.ChannelElement** %arrayidx108, align 8, !dbg !8008
  store %struct.ChannelElement* %57, %struct.ChannelElement** %retval, align 8, !dbg !8009
  br label %return, !dbg !8009

if.end109:                                        ; preds = %land.lhs.true97, %land.lhs.true91, %sw.bb88
  br label %sw.bb110, !dbg !8010

sw.bb110:                                         ; preds = %if.end70, %if.end109
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8012
  %tags_mapped111 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 7, !dbg !8014
  %61 = load i32, i32* %tags_mapped111, align 8, !dbg !8014
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8015
  %oc112 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 24, !dbg !8016
  %arrayidx113 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc112, i64 0, i64 1, !dbg !8015
  %m4ac114 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx113, i32 0, i32 0, !dbg !8017
  %chan_config115 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac114, i32 0, i32 3, !dbg !8018
  %63 = load i32, i32* %chan_config115, align 4, !dbg !8018
  %idxprom116 = sext i32 %63 to i64, !dbg !8019
  %arrayidx117 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom116, !dbg !8019
  %64 = load i8, i8* %arrayidx117, align 1, !dbg !8019
  %conv = sext i8 %64 to i32, !dbg !8019
  %sub = sub nsw i32 %conv, 1, !dbg !8020
  %cmp118 = icmp eq i32 %61, %sub, !dbg !8021
  br i1 %cmp118, label %land.lhs.true120, label %if.end150, !dbg !8022

land.lhs.true120:                                 ; preds = %sw.bb110
  %65 = load i32, i32* %type.addr, align 4, !dbg !8023
  %cmp121 = icmp eq i32 %65, 3, !dbg !8025
  br i1 %cmp121, label %if.then125, label %lor.lhs.false, !dbg !8026

lor.lhs.false:                                    ; preds = %land.lhs.true120
  %66 = load i32, i32* %type.addr, align 4, !dbg !8027
  %cmp123 = icmp eq i32 %66, 0, !dbg !8029
  br i1 %cmp123, label %if.then125, label %if.end150, !dbg !8030

if.then125:                                       ; preds = %lor.lhs.false, %land.lhs.true120
  %67 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8031
  %warned_remapping_once = getelementptr inbounds %struct.AACContext, %struct.AACContext* %67, i32 0, i32 8, !dbg !8034
  %68 = load i32, i32* %warned_remapping_once, align 4, !dbg !8034
  %tobool126 = icmp ne i32 %68, 0, !dbg !8031
  br i1 %tobool126, label %if.end139, label %land.lhs.true127, !dbg !8035

land.lhs.true127:                                 ; preds = %if.then125
  %69 = load i32, i32* %type.addr, align 4, !dbg !8036
  %cmp128 = icmp ne i32 %69, 3, !dbg !8038
  br i1 %cmp128, label %if.then133, label %lor.lhs.false130, !dbg !8039

lor.lhs.false130:                                 ; preds = %land.lhs.true127
  %70 = load i32, i32* %elem_id.addr, align 4, !dbg !8040
  %cmp131 = icmp ne i32 %70, 0, !dbg !8042
  br i1 %cmp131, label %if.then133, label %if.end139, !dbg !8043

if.then133:                                       ; preds = %lor.lhs.false130, %land.lhs.true127
  %71 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8044
  %avctx134 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %71, i32 0, i32 1, !dbg !8046
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx134, align 8, !dbg !8046
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !8044
  %74 = load i32, i32* %type.addr, align 4, !dbg !8047
  %cmp135 = icmp eq i32 %74, 0, !dbg !8048
  %cond = select i1 %cmp135, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), !dbg !8047
  %75 = load i32, i32* %elem_id.addr, align 4, !dbg !8049
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 24, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.52, i32 0, i32 0), i8* %cond, i32 %75), !dbg !8050
  %76 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8051
  %warned_remapping_once137 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %76, i32 0, i32 8, !dbg !8052
  %77 = load i32, i32* %warned_remapping_once137, align 4, !dbg !8053
  %inc138 = add nsw i32 %77, 1, !dbg !8053
  store i32 %inc138, i32* %warned_remapping_once137, align 4, !dbg !8053
  br label %if.end139, !dbg !8054

if.end139:                                        ; preds = %if.then133, %lor.lhs.false130, %if.then125
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8055
  %tags_mapped140 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 7, !dbg !8056
  %79 = load i32, i32* %tags_mapped140, align 8, !dbg !8057
  %inc141 = add nsw i32 %79, 1, !dbg !8057
  store i32 %inc141, i32* %tags_mapped140, align 8, !dbg !8057
  %80 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8058
  %che142 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %80, i32 0, i32 5, !dbg !8059
  %arrayidx143 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che142, i64 0, i64 3, !dbg !8058
  %arrayidx144 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx143, i64 0, i64 0, !dbg !8058
  %81 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx144, align 8, !dbg !8058
  %82 = load i32, i32* %elem_id.addr, align 4, !dbg !8060
  %idxprom145 = sext i32 %82 to i64, !dbg !8061
  %83 = load i32, i32* %type.addr, align 4, !dbg !8062
  %idxprom146 = sext i32 %83 to i64, !dbg !8061
  %84 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8061
  %tag_che_map147 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %84, i32 0, i32 6, !dbg !8063
  %arrayidx148 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map147, i64 0, i64 %idxprom146, !dbg !8061
  %arrayidx149 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !8061
  store %struct.ChannelElement* %81, %struct.ChannelElement** %arrayidx149, align 8, !dbg !8064
  store %struct.ChannelElement* %81, %struct.ChannelElement** %retval, align 8, !dbg !8065
  br label %return, !dbg !8065

if.end150:                                        ; preds = %lor.lhs.false, %sw.bb110
  br label %sw.bb151, !dbg !8066

sw.bb151:                                         ; preds = %if.end70, %if.end150
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8068
  %tags_mapped152 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 7, !dbg !8070
  %86 = load i32, i32* %tags_mapped152, align 8, !dbg !8070
  %cmp153 = icmp eq i32 %86, 2, !dbg !8071
  br i1 %cmp153, label %land.lhs.true155, label %if.end168, !dbg !8072

land.lhs.true155:                                 ; preds = %sw.bb151
  %87 = load i32, i32* %type.addr, align 4, !dbg !8073
  %cmp156 = icmp eq i32 %87, 1, !dbg !8075
  br i1 %cmp156, label %if.then158, label %if.end168, !dbg !8076

if.then158:                                       ; preds = %land.lhs.true155
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8077
  %tags_mapped159 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %88, i32 0, i32 7, !dbg !8079
  %89 = load i32, i32* %tags_mapped159, align 8, !dbg !8080
  %inc160 = add nsw i32 %89, 1, !dbg !8080
  store i32 %inc160, i32* %tags_mapped159, align 8, !dbg !8080
  %90 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8081
  %che161 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %90, i32 0, i32 5, !dbg !8082
  %arrayidx162 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che161, i64 0, i64 1, !dbg !8081
  %arrayidx163 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx162, i64 0, i64 1, !dbg !8081
  %91 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx163, align 8, !dbg !8081
  %92 = load i32, i32* %elem_id.addr, align 4, !dbg !8083
  %idxprom164 = sext i32 %92 to i64, !dbg !8084
  %93 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8084
  %tag_che_map165 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %93, i32 0, i32 6, !dbg !8085
  %arrayidx166 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map165, i64 0, i64 1, !dbg !8084
  %arrayidx167 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx166, i64 0, i64 %idxprom164, !dbg !8084
  store %struct.ChannelElement* %91, %struct.ChannelElement** %arrayidx167, align 8, !dbg !8086
  store %struct.ChannelElement* %91, %struct.ChannelElement** %retval, align 8, !dbg !8087
  br label %return, !dbg !8087

if.end168:                                        ; preds = %land.lhs.true155, %sw.bb151
  br label %sw.bb169, !dbg !8088

sw.bb169:                                         ; preds = %if.end70, %if.end168
  %94 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8090
  %tags_mapped170 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %94, i32 0, i32 7, !dbg !8092
  %95 = load i32, i32* %tags_mapped170, align 8, !dbg !8092
  %96 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8093
  %oc171 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %96, i32 0, i32 24, !dbg !8094
  %arrayidx172 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc171, i64 0, i64 1, !dbg !8093
  %m4ac173 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx172, i32 0, i32 0, !dbg !8095
  %chan_config174 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac173, i32 0, i32 3, !dbg !8096
  %97 = load i32, i32* %chan_config174, align 4, !dbg !8096
  %idxprom175 = sext i32 %97 to i64, !dbg !8097
  %arrayidx176 = getelementptr inbounds [16 x i8], [16 x i8]* @tags_per_config, i64 0, i64 %idxprom175, !dbg !8097
  %98 = load i8, i8* %arrayidx176, align 1, !dbg !8097
  %conv177 = sext i8 %98 to i32, !dbg !8097
  %sub178 = sub nsw i32 %conv177, 1, !dbg !8098
  %cmp179 = icmp eq i32 %95, %sub178, !dbg !8099
  br i1 %cmp179, label %land.lhs.true181, label %if.end214, !dbg !8100

land.lhs.true181:                                 ; preds = %sw.bb169
  %99 = load i32, i32* %type.addr, align 4, !dbg !8101
  %cmp182 = icmp eq i32 %99, 3, !dbg !8103
  br i1 %cmp182, label %if.then187, label %lor.lhs.false184, !dbg !8104

lor.lhs.false184:                                 ; preds = %land.lhs.true181
  %100 = load i32, i32* %type.addr, align 4, !dbg !8105
  %cmp185 = icmp eq i32 %100, 0, !dbg !8107
  br i1 %cmp185, label %if.then187, label %if.end214, !dbg !8108

if.then187:                                       ; preds = %lor.lhs.false184, %land.lhs.true181
  %101 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8109
  %warned_remapping_once188 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %101, i32 0, i32 8, !dbg !8112
  %102 = load i32, i32* %warned_remapping_once188, align 4, !dbg !8112
  %tobool189 = icmp ne i32 %102, 0, !dbg !8109
  br i1 %tobool189, label %if.end203, label %land.lhs.true190, !dbg !8113

land.lhs.true190:                                 ; preds = %if.then187
  %103 = load i32, i32* %type.addr, align 4, !dbg !8114
  %cmp191 = icmp ne i32 %103, 0, !dbg !8116
  br i1 %cmp191, label %if.then196, label %lor.lhs.false193, !dbg !8117

lor.lhs.false193:                                 ; preds = %land.lhs.true190
  %104 = load i32, i32* %elem_id.addr, align 4, !dbg !8118
  %cmp194 = icmp ne i32 %104, 1, !dbg !8120
  br i1 %cmp194, label %if.then196, label %if.end203, !dbg !8121

if.then196:                                       ; preds = %lor.lhs.false193, %land.lhs.true190
  %105 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8122
  %avctx197 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %105, i32 0, i32 1, !dbg !8124
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx197, align 8, !dbg !8124
  %107 = bitcast %struct.AVCodecContext* %106 to i8*, !dbg !8122
  %108 = load i32, i32* %type.addr, align 4, !dbg !8125
  %cmp198 = icmp eq i32 %108, 0, !dbg !8126
  %cond200 = select i1 %cmp198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), !dbg !8125
  %109 = load i32, i32* %elem_id.addr, align 4, !dbg !8127
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 24, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.55, i32 0, i32 0), i8* %cond200, i32 %109), !dbg !8128
  %110 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8129
  %warned_remapping_once201 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %110, i32 0, i32 8, !dbg !8130
  %111 = load i32, i32* %warned_remapping_once201, align 4, !dbg !8131
  %inc202 = add nsw i32 %111, 1, !dbg !8131
  store i32 %inc202, i32* %warned_remapping_once201, align 4, !dbg !8131
  br label %if.end203, !dbg !8132

if.end203:                                        ; preds = %if.then196, %lor.lhs.false193, %if.then187
  %112 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8133
  %tags_mapped204 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %112, i32 0, i32 7, !dbg !8134
  %113 = load i32, i32* %tags_mapped204, align 8, !dbg !8135
  %inc205 = add nsw i32 %113, 1, !dbg !8135
  store i32 %inc205, i32* %tags_mapped204, align 8, !dbg !8135
  %114 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8136
  %che206 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %114, i32 0, i32 5, !dbg !8137
  %arrayidx207 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che206, i64 0, i64 0, !dbg !8136
  %arrayidx208 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx207, i64 0, i64 1, !dbg !8136
  %115 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx208, align 8, !dbg !8136
  %116 = load i32, i32* %elem_id.addr, align 4, !dbg !8138
  %idxprom209 = sext i32 %116 to i64, !dbg !8139
  %117 = load i32, i32* %type.addr, align 4, !dbg !8140
  %idxprom210 = sext i32 %117 to i64, !dbg !8139
  %118 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8139
  %tag_che_map211 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %118, i32 0, i32 6, !dbg !8141
  %arrayidx212 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map211, i64 0, i64 %idxprom210, !dbg !8139
  %arrayidx213 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx212, i64 0, i64 %idxprom209, !dbg !8139
  store %struct.ChannelElement* %115, %struct.ChannelElement** %arrayidx213, align 8, !dbg !8142
  store %struct.ChannelElement* %115, %struct.ChannelElement** %retval, align 8, !dbg !8143
  br label %return, !dbg !8143

if.end214:                                        ; preds = %lor.lhs.false184, %sw.bb169
  %119 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8144
  %tags_mapped215 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %119, i32 0, i32 7, !dbg !8146
  %120 = load i32, i32* %tags_mapped215, align 8, !dbg !8146
  %cmp216 = icmp eq i32 %120, 2, !dbg !8147
  br i1 %cmp216, label %land.lhs.true218, label %if.end238, !dbg !8148

land.lhs.true218:                                 ; preds = %if.end214
  %121 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8149
  %oc219 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %121, i32 0, i32 24, !dbg !8150
  %arrayidx220 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc219, i64 0, i64 1, !dbg !8149
  %m4ac221 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx220, i32 0, i32 0, !dbg !8151
  %chan_config222 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac221, i32 0, i32 3, !dbg !8152
  %122 = load i32, i32* %chan_config222, align 4, !dbg !8152
  %cmp223 = icmp eq i32 %122, 4, !dbg !8153
  br i1 %cmp223, label %land.lhs.true225, label %if.end238, !dbg !8154

land.lhs.true225:                                 ; preds = %land.lhs.true218
  %123 = load i32, i32* %type.addr, align 4, !dbg !8155
  %cmp226 = icmp eq i32 %123, 0, !dbg !8156
  br i1 %cmp226, label %if.then228, label %if.end238, !dbg !8157

if.then228:                                       ; preds = %land.lhs.true225
  %124 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8158
  %tags_mapped229 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %124, i32 0, i32 7, !dbg !8160
  %125 = load i32, i32* %tags_mapped229, align 8, !dbg !8161
  %inc230 = add nsw i32 %125, 1, !dbg !8161
  store i32 %inc230, i32* %tags_mapped229, align 8, !dbg !8161
  %126 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8162
  %che231 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %126, i32 0, i32 5, !dbg !8163
  %arrayidx232 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che231, i64 0, i64 0, !dbg !8162
  %arrayidx233 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx232, i64 0, i64 1, !dbg !8162
  %127 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx233, align 8, !dbg !8162
  %128 = load i32, i32* %elem_id.addr, align 4, !dbg !8164
  %idxprom234 = sext i32 %128 to i64, !dbg !8165
  %129 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8165
  %tag_che_map235 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %129, i32 0, i32 6, !dbg !8166
  %arrayidx236 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map235, i64 0, i64 0, !dbg !8165
  %arrayidx237 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx236, i64 0, i64 %idxprom234, !dbg !8165
  store %struct.ChannelElement* %127, %struct.ChannelElement** %arrayidx237, align 8, !dbg !8167
  store %struct.ChannelElement* %127, %struct.ChannelElement** %retval, align 8, !dbg !8168
  br label %return, !dbg !8168

if.end238:                                        ; preds = %land.lhs.true225, %land.lhs.true218, %if.end214
  br label %sw.bb239, !dbg !8169

sw.bb239:                                         ; preds = %if.end70, %if.end70, %if.end238
  %130 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8171
  %tags_mapped240 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %130, i32 0, i32 7, !dbg !8173
  %131 = load i32, i32* %tags_mapped240, align 8, !dbg !8173
  %132 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8174
  %oc241 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %132, i32 0, i32 24, !dbg !8175
  %arrayidx242 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc241, i64 0, i64 1, !dbg !8174
  %m4ac243 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx242, i32 0, i32 0, !dbg !8176
  %chan_config244 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac243, i32 0, i32 3, !dbg !8177
  %133 = load i32, i32* %chan_config244, align 4, !dbg !8177
  %cmp245 = icmp ne i32 %133, 2, !dbg !8178
  %conv246 = zext i1 %cmp245 to i32, !dbg !8178
  %cmp247 = icmp eq i32 %131, %conv246, !dbg !8179
  br i1 %cmp247, label %land.lhs.true249, label %if.else, !dbg !8180

land.lhs.true249:                                 ; preds = %sw.bb239
  %134 = load i32, i32* %type.addr, align 4, !dbg !8181
  %cmp250 = icmp eq i32 %134, 1, !dbg !8182
  br i1 %cmp250, label %if.then252, label %if.else, !dbg !8183

if.then252:                                       ; preds = %land.lhs.true249
  %135 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8184
  %tags_mapped253 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %135, i32 0, i32 7, !dbg !8186
  %136 = load i32, i32* %tags_mapped253, align 8, !dbg !8187
  %inc254 = add nsw i32 %136, 1, !dbg !8187
  store i32 %inc254, i32* %tags_mapped253, align 8, !dbg !8187
  %137 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8188
  %che255 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %137, i32 0, i32 5, !dbg !8189
  %arrayidx256 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che255, i64 0, i64 1, !dbg !8188
  %arrayidx257 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx256, i64 0, i64 0, !dbg !8188
  %138 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx257, align 8, !dbg !8188
  %139 = load i32, i32* %elem_id.addr, align 4, !dbg !8190
  %idxprom258 = sext i32 %139 to i64, !dbg !8191
  %140 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8191
  %tag_che_map259 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %140, i32 0, i32 6, !dbg !8192
  %arrayidx260 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map259, i64 0, i64 1, !dbg !8191
  %arrayidx261 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx260, i64 0, i64 %idxprom258, !dbg !8191
  store %struct.ChannelElement* %138, %struct.ChannelElement** %arrayidx261, align 8, !dbg !8193
  store %struct.ChannelElement* %138, %struct.ChannelElement** %retval, align 8, !dbg !8194
  br label %return, !dbg !8194

if.else:                                          ; preds = %land.lhs.true249, %sw.bb239
  %141 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8195
  %oc262 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %141, i32 0, i32 24, !dbg !8197
  %arrayidx263 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc262, i64 0, i64 1, !dbg !8195
  %m4ac264 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx263, i32 0, i32 0, !dbg !8198
  %chan_config265 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac264, i32 0, i32 3, !dbg !8199
  %142 = load i32, i32* %chan_config265, align 4, !dbg !8199
  %cmp266 = icmp eq i32 %142, 2, !dbg !8200
  br i1 %cmp266, label %if.then268, label %if.end269, !dbg !8201

if.then268:                                       ; preds = %if.else
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !8202
  br label %return, !dbg !8202

if.end269:                                        ; preds = %if.else
  br label %if.end270

if.end270:                                        ; preds = %if.end269
  br label %sw.bb271, !dbg !8204

sw.bb271:                                         ; preds = %if.end70, %if.end270
  %143 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8206
  %tags_mapped272 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %143, i32 0, i32 7, !dbg !8208
  %144 = load i32, i32* %tags_mapped272, align 8, !dbg !8208
  %tobool273 = icmp ne i32 %144, 0, !dbg !8206
  br i1 %tobool273, label %if.end287, label %land.lhs.true274, !dbg !8209

land.lhs.true274:                                 ; preds = %sw.bb271
  %145 = load i32, i32* %type.addr, align 4, !dbg !8210
  %cmp275 = icmp eq i32 %145, 0, !dbg !8212
  br i1 %cmp275, label %if.then277, label %if.end287, !dbg !8213

if.then277:                                       ; preds = %land.lhs.true274
  %146 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8214
  %tags_mapped278 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %146, i32 0, i32 7, !dbg !8216
  %147 = load i32, i32* %tags_mapped278, align 8, !dbg !8217
  %inc279 = add nsw i32 %147, 1, !dbg !8217
  store i32 %inc279, i32* %tags_mapped278, align 8, !dbg !8217
  %148 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8218
  %che280 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %148, i32 0, i32 5, !dbg !8219
  %arrayidx281 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che280, i64 0, i64 0, !dbg !8218
  %arrayidx282 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx281, i64 0, i64 0, !dbg !8218
  %149 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx282, align 8, !dbg !8218
  %150 = load i32, i32* %elem_id.addr, align 4, !dbg !8220
  %idxprom283 = sext i32 %150 to i64, !dbg !8221
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8221
  %tag_che_map284 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 6, !dbg !8222
  %arrayidx285 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %tag_che_map284, i64 0, i64 0, !dbg !8221
  %arrayidx286 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx285, i64 0, i64 %idxprom283, !dbg !8221
  store %struct.ChannelElement* %149, %struct.ChannelElement** %arrayidx286, align 8, !dbg !8223
  store %struct.ChannelElement* %149, %struct.ChannelElement** %retval, align 8, !dbg !8224
  br label %return, !dbg !8224

if.end287:                                        ; preds = %land.lhs.true274, %sw.bb271
  br label %sw.default, !dbg !8225

sw.default:                                       ; preds = %if.end70, %if.end287
  store %struct.ChannelElement* null, %struct.ChannelElement** %retval, align 8, !dbg !8227
  br label %return, !dbg !8227

return:                                           ; preds = %sw.default, %if.then277, %if.then268, %if.then252, %if.then228, %if.end203, %if.then158, %if.end139, %if.then99, %if.then79, %if.then54, %if.then49, %if.then20, %if.then15, %if.then
  %152 = load %struct.ChannelElement*, %struct.ChannelElement** %retval, align 8, !dbg !8228
  ret %struct.ChannelElement* %152, !dbg !8228
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ics(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce, %struct.GetBitContext* %gb, i32 %common_window, i32 %scale_flag) #1 !dbg !8229 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %common_window.addr = alloca i32, align 4
  %scale_flag.addr = alloca i32, align 4
  %pulse = alloca %struct.Pulse, align 4
  %tns = alloca %struct.TemporalNoiseShaping*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %out = alloca float*, align 8
  %global_gain = alloca i32, align 4
  %eld_syntax = alloca i32, align 4
  %er_syntax = alloca i32, align 4
  %pulse_present = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8232, metadata !2062), !dbg !8233
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !8234, metadata !2062), !dbg !8235
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8236, metadata !2062), !dbg !8237
  store i32 %common_window, i32* %common_window.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %common_window.addr, metadata !8238, metadata !2062), !dbg !8239
  store i32 %scale_flag, i32* %scale_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_flag.addr, metadata !8240, metadata !2062), !dbg !8241
  call void @llvm.dbg.declare(metadata %struct.Pulse* %pulse, metadata !8242, metadata !2062), !dbg !8243
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns, metadata !8244, metadata !2062), !dbg !8245
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8246
  %tns1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 1, !dbg !8247
  store %struct.TemporalNoiseShaping* %tns1, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8245
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !8248, metadata !2062), !dbg !8249
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8250
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !8251
  store %struct.IndividualChannelStream* %ics2, %struct.IndividualChannelStream** %ics, align 8, !dbg !8249
  call void @llvm.dbg.declare(metadata float** %out, metadata !8252, metadata !2062), !dbg !8253
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8254
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 14, !dbg !8255
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !8254
  store float* %arraydecay, float** %out, align 8, !dbg !8253
  call void @llvm.dbg.declare(metadata i32* %global_gain, metadata !8256, metadata !2062), !dbg !8257
  call void @llvm.dbg.declare(metadata i32* %eld_syntax, metadata !8258, metadata !2062), !dbg !8259
  call void @llvm.dbg.declare(metadata i32* %er_syntax, metadata !8260, metadata !2062), !dbg !8261
  call void @llvm.dbg.declare(metadata i32* %pulse_present, metadata !8262, metadata !2062), !dbg !8263
  store i32 0, i32* %pulse_present, align 4, !dbg !8263
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8264, metadata !2062), !dbg !8265
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8266
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 24, !dbg !8267
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8266
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8268
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8269
  %4 = load i32, i32* %object_type, align 8, !dbg !8269
  %cmp = icmp eq i32 %4, 39, !dbg !8270
  %conv = zext i1 %cmp to i32, !dbg !8270
  store i32 %conv, i32* %eld_syntax, align 4, !dbg !8271
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8272
  %oc3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 24, !dbg !8273
  %arrayidx4 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc3, i64 0, i64 1, !dbg !8272
  %m4ac5 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx4, i32 0, i32 0, !dbg !8274
  %object_type6 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac5, i32 0, i32 0, !dbg !8275
  %6 = load i32, i32* %object_type6, align 8, !dbg !8275
  %cmp7 = icmp eq i32 %6, 17, !dbg !8276
  br i1 %cmp7, label %lor.end, label %lor.lhs.false, !dbg !8277

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8278
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 24, !dbg !8279
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !8278
  %m4ac11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 0, !dbg !8280
  %object_type12 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac11, i32 0, i32 0, !dbg !8281
  %8 = load i32, i32* %object_type12, align 8, !dbg !8281
  %cmp13 = icmp eq i32 %8, 19, !dbg !8282
  br i1 %cmp13, label %lor.end, label %lor.lhs.false15, !dbg !8283

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8284
  %oc16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 24, !dbg !8285
  %arrayidx17 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc16, i64 0, i64 1, !dbg !8284
  %m4ac18 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx17, i32 0, i32 0, !dbg !8286
  %object_type19 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac18, i32 0, i32 0, !dbg !8287
  %10 = load i32, i32* %object_type19, align 8, !dbg !8287
  %cmp20 = icmp eq i32 %10, 23, !dbg !8288
  br i1 %cmp20, label %lor.end, label %lor.rhs, !dbg !8289

lor.rhs:                                          ; preds = %lor.lhs.false15
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8290
  %oc22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 24, !dbg !8291
  %arrayidx23 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc22, i64 0, i64 1, !dbg !8290
  %m4ac24 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx23, i32 0, i32 0, !dbg !8292
  %object_type25 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac24, i32 0, i32 0, !dbg !8293
  %12 = load i32, i32* %object_type25, align 8, !dbg !8293
  %cmp26 = icmp eq i32 %12, 39, !dbg !8294
  br label %lor.end, !dbg !8295

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false15, %lor.lhs.false, %entry
  %13 = phi i1 [ true, %lor.lhs.false15 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp26, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32, !dbg !8297
  store i32 %lor.ext, i32* %er_syntax, align 4, !dbg !8299
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %pulse, i32 0, i32 0, !dbg !8300
  store i32 0, i32* %num_pulse, align 4, !dbg !8301
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8302
  %call = call i32 @get_bits(%struct.GetBitContext* %14, i32 8), !dbg !8303
  store i32 %call, i32* %global_gain, align 4, !dbg !8304
  %15 = load i32, i32* %common_window.addr, align 4, !dbg !8305
  %tobool = icmp ne i32 %15, 0, !dbg !8305
  br i1 %tobool, label %if.end33, label %land.lhs.true, !dbg !8307

land.lhs.true:                                    ; preds = %lor.end
  %16 = load i32, i32* %scale_flag.addr, align 4, !dbg !8308
  %tobool28 = icmp ne i32 %16, 0, !dbg !8308
  br i1 %tobool28, label %if.end33, label %if.then, !dbg !8310

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8311
  %18 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8313
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8314
  %call29 = call i32 @decode_ics_info(%struct.AACContext* %17, %struct.IndividualChannelStream* %18, %struct.GetBitContext* %19), !dbg !8315
  store i32 %call29, i32* %ret, align 4, !dbg !8316
  %20 = load i32, i32* %ret, align 4, !dbg !8317
  %cmp30 = icmp slt i32 %20, 0, !dbg !8319
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !8320

if.then32:                                        ; preds = %if.then
  br label %fail, !dbg !8321

if.end:                                           ; preds = %if.then
  br label %if.end33, !dbg !8322

if.end33:                                         ; preds = %if.end, %land.lhs.true, %lor.end
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8323
  %22 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8325
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %22, i32 0, i32 3, !dbg !8326
  %arraydecay34 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i32 0, i32 0, !dbg !8325
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8327
  %band_type_run_end = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 5, !dbg !8328
  %arraydecay35 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end, i32 0, i32 0, !dbg !8327
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8329
  %25 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8330
  %call36 = call i32 @decode_band_types(%struct.AACContext* %21, i32* %arraydecay34, i32* %arraydecay35, %struct.GetBitContext* %24, %struct.IndividualChannelStream* %25), !dbg !8331
  store i32 %call36, i32* %ret, align 4, !dbg !8332
  %cmp37 = icmp slt i32 %call36, 0, !dbg !8333
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8334

if.then39:                                        ; preds = %if.end33
  br label %fail, !dbg !8335

if.end40:                                         ; preds = %if.end33
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8336
  %27 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8338
  %sf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %27, i32 0, i32 6, !dbg !8339
  %arraydecay41 = getelementptr inbounds [120 x float], [120 x float]* %sf, i32 0, i32 0, !dbg !8338
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8340
  %29 = load i32, i32* %global_gain, align 4, !dbg !8341
  %30 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8342
  %31 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8343
  %band_type42 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %31, i32 0, i32 3, !dbg !8344
  %arraydecay43 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type42, i32 0, i32 0, !dbg !8343
  %32 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8345
  %band_type_run_end44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %32, i32 0, i32 5, !dbg !8346
  %arraydecay45 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end44, i32 0, i32 0, !dbg !8345
  %call46 = call i32 @decode_scalefactors(%struct.AACContext* %26, float* %arraydecay41, %struct.GetBitContext* %28, i32 %29, %struct.IndividualChannelStream* %30, i32* %arraydecay43, i32* %arraydecay45), !dbg !8347
  store i32 %call46, i32* %ret, align 4, !dbg !8348
  %cmp47 = icmp slt i32 %call46, 0, !dbg !8349
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !8350

if.then49:                                        ; preds = %if.end40
  br label %fail, !dbg !8351

if.end50:                                         ; preds = %if.end40
  store i32 0, i32* %pulse_present, align 4, !dbg !8352
  %33 = load i32, i32* %scale_flag.addr, align 4, !dbg !8353
  %tobool51 = icmp ne i32 %33, 0, !dbg !8353
  br i1 %tobool51, label %if.end103, label %if.then52, !dbg !8355

if.then52:                                        ; preds = %if.end50
  %34 = load i32, i32* %eld_syntax, align 4, !dbg !8356
  %tobool53 = icmp ne i32 %34, 0, !dbg !8356
  br i1 %tobool53, label %if.end68, label %land.lhs.true54, !dbg !8359

land.lhs.true54:                                  ; preds = %if.then52
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8360
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %35), !dbg !8362
  store i32 %call55, i32* %pulse_present, align 4, !dbg !8363
  %tobool56 = icmp ne i32 %call55, 0, !dbg !8363
  br i1 %tobool56, label %if.then57, label %if.end68, !dbg !8364

if.then57:                                        ; preds = %land.lhs.true54
  %36 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8365
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %36, i32 0, i32 1, !dbg !8368
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !8365
  %37 = load i32, i32* %arrayidx58, align 4, !dbg !8365
  %cmp59 = icmp eq i32 %37, 2, !dbg !8369
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !8370

if.then61:                                        ; preds = %if.then57
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8371
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 1, !dbg !8373
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8373
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !8371
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.56, i32 0, i32 0)), !dbg !8374
  store i32 -1094995529, i32* %ret, align 4, !dbg !8375
  br label %fail, !dbg !8376

if.end62:                                         ; preds = %if.then57
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8377
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8379
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 6, !dbg !8380
  %43 = load i16*, i16** %swb_offset, align 8, !dbg !8380
  %44 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8381
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %44, i32 0, i32 8, !dbg !8382
  %45 = load i32, i32* %num_swb, align 8, !dbg !8382
  %call63 = call i32 @decode_pulses(%struct.Pulse* %pulse, %struct.GetBitContext* %41, i16* %43, i32 %45), !dbg !8383
  %tobool64 = icmp ne i32 %call63, 0, !dbg !8383
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !8384

if.then65:                                        ; preds = %if.end62
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8385
  %avctx66 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 1, !dbg !8387
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 8, !dbg !8387
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !8385
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57, i32 0, i32 0)), !dbg !8388
  store i32 -1094995529, i32* %ret, align 4, !dbg !8389
  br label %fail, !dbg !8390

if.end67:                                         ; preds = %if.end62
  br label %if.end68, !dbg !8391

if.end68:                                         ; preds = %if.end67, %land.lhs.true54, %if.then52
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8392
  %call69 = call i32 @get_bits1(%struct.GetBitContext* %49), !dbg !8393
  %50 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8394
  %present = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %50, i32 0, i32 0, !dbg !8395
  store i32 %call69, i32* %present, align 4, !dbg !8396
  %51 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8397
  %present70 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %51, i32 0, i32 0, !dbg !8399
  %52 = load i32, i32* %present70, align 4, !dbg !8399
  %tobool71 = icmp ne i32 %52, 0, !dbg !8397
  br i1 %tobool71, label %land.lhs.true72, label %if.end80, !dbg !8400

land.lhs.true72:                                  ; preds = %if.end68
  %53 = load i32, i32* %er_syntax, align 4, !dbg !8401
  %tobool73 = icmp ne i32 %53, 0, !dbg !8401
  br i1 %tobool73, label %if.end80, label %if.then74, !dbg !8403

if.then74:                                        ; preds = %land.lhs.true72
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8404
  %55 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8406
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8407
  %57 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8408
  %call75 = call i32 @decode_tns(%struct.AACContext* %54, %struct.TemporalNoiseShaping* %55, %struct.GetBitContext* %56, %struct.IndividualChannelStream* %57), !dbg !8409
  store i32 %call75, i32* %ret, align 4, !dbg !8410
  %58 = load i32, i32* %ret, align 4, !dbg !8411
  %cmp76 = icmp slt i32 %58, 0, !dbg !8413
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !8414

if.then78:                                        ; preds = %if.then74
  br label %fail, !dbg !8415

if.end79:                                         ; preds = %if.then74
  br label %if.end80, !dbg !8416

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %if.end68
  %59 = load i32, i32* %eld_syntax, align 4, !dbg !8417
  %tobool81 = icmp ne i32 %59, 0, !dbg !8417
  br i1 %tobool81, label %if.end91, label %land.lhs.true82, !dbg !8419

land.lhs.true82:                                  ; preds = %if.end80
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8420
  %call83 = call i32 @get_bits1(%struct.GetBitContext* %60), !dbg !8422
  %tobool84 = icmp ne i32 %call83, 0, !dbg !8422
  br i1 %tobool84, label %if.then85, label %if.end91, !dbg !8423

if.then85:                                        ; preds = %land.lhs.true82
  %61 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8424
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8426
  call void @decode_gain_control(%struct.SingleChannelElement* %61, %struct.GetBitContext* %62), !dbg !8427
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8428
  %warned_gain_control = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 27, !dbg !8430
  %64 = load i32, i32* %warned_gain_control, align 8, !dbg !8430
  %tobool86 = icmp ne i32 %64, 0, !dbg !8428
  br i1 %tobool86, label %if.end90, label %if.then87, !dbg !8431

if.then87:                                        ; preds = %if.then85
  %65 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8432
  %avctx88 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %65, i32 0, i32 1, !dbg !8434
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 8, !dbg !8434
  %67 = bitcast %struct.AVCodecContext* %66 to i8*, !dbg !8432
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %67, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i32 0, i32 0)), !dbg !8435
  %68 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8436
  %warned_gain_control89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %68, i32 0, i32 27, !dbg !8437
  store i32 1, i32* %warned_gain_control89, align 8, !dbg !8438
  br label %if.end90, !dbg !8439

if.end90:                                         ; preds = %if.then87, %if.then85
  br label %if.end91, !dbg !8440

if.end91:                                         ; preds = %if.end90, %land.lhs.true82, %if.end80
  %69 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8441
  %present92 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %69, i32 0, i32 0, !dbg !8443
  %70 = load i32, i32* %present92, align 4, !dbg !8443
  %tobool93 = icmp ne i32 %70, 0, !dbg !8441
  br i1 %tobool93, label %land.lhs.true94, label %if.end102, !dbg !8444

land.lhs.true94:                                  ; preds = %if.end91
  %71 = load i32, i32* %er_syntax, align 4, !dbg !8445
  %tobool95 = icmp ne i32 %71, 0, !dbg !8445
  br i1 %tobool95, label %if.then96, label %if.end102, !dbg !8447

if.then96:                                        ; preds = %land.lhs.true94
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8448
  %73 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8450
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8451
  %75 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8452
  %call97 = call i32 @decode_tns(%struct.AACContext* %72, %struct.TemporalNoiseShaping* %73, %struct.GetBitContext* %74, %struct.IndividualChannelStream* %75), !dbg !8453
  store i32 %call97, i32* %ret, align 4, !dbg !8454
  %76 = load i32, i32* %ret, align 4, !dbg !8455
  %cmp98 = icmp slt i32 %76, 0, !dbg !8457
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !8458

if.then100:                                       ; preds = %if.then96
  br label %fail, !dbg !8459

if.end101:                                        ; preds = %if.then96
  br label %if.end102, !dbg !8460

if.end102:                                        ; preds = %if.end101, %land.lhs.true94, %if.end91
  br label %if.end103, !dbg !8461

if.end103:                                        ; preds = %if.end102, %if.end50
  %77 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8462
  %78 = load float*, float** %out, align 8, !dbg !8463
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8464
  %80 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8465
  %sf104 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %80, i32 0, i32 6, !dbg !8466
  %arraydecay105 = getelementptr inbounds [120 x float], [120 x float]* %sf104, i32 0, i32 0, !dbg !8465
  %81 = load i32, i32* %pulse_present, align 4, !dbg !8467
  %82 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !8468
  %83 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8469
  %band_type106 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %83, i32 0, i32 3, !dbg !8470
  %arraydecay107 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type106, i32 0, i32 0, !dbg !8469
  %call108 = call i32 @decode_spectrum_and_dequant(%struct.AACContext* %77, float* %78, %struct.GetBitContext* %79, float* %arraydecay105, i32 %81, %struct.Pulse* %pulse, %struct.IndividualChannelStream* %82, i32* %arraydecay107), !dbg !8471
  store i32 %call108, i32* %ret, align 4, !dbg !8472
  %84 = load i32, i32* %ret, align 4, !dbg !8473
  %cmp109 = icmp slt i32 %84, 0, !dbg !8475
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !8476

if.then111:                                       ; preds = %if.end103
  br label %fail, !dbg !8477

if.end112:                                        ; preds = %if.end103
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8478
  %oc113 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %85, i32 0, i32 24, !dbg !8480
  %arrayidx114 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc113, i64 0, i64 1, !dbg !8478
  %m4ac115 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx114, i32 0, i32 0, !dbg !8481
  %object_type116 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac115, i32 0, i32 0, !dbg !8482
  %86 = load i32, i32* %object_type116, align 8, !dbg !8482
  %cmp117 = icmp eq i32 %86, 1, !dbg !8483
  br i1 %cmp117, label %land.lhs.true119, label %if.end122, !dbg !8484

land.lhs.true119:                                 ; preds = %if.end112
  %87 = load i32, i32* %common_window.addr, align 4, !dbg !8485
  %tobool120 = icmp ne i32 %87, 0, !dbg !8485
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !8487

if.then121:                                       ; preds = %land.lhs.true119
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8488
  %89 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8489
  call void @apply_prediction(%struct.AACContext* %88, %struct.SingleChannelElement* %89), !dbg !8490
  br label %if.end122, !dbg !8490

if.end122:                                        ; preds = %if.then121, %land.lhs.true119, %if.end112
  store i32 0, i32* %retval, align 4, !dbg !8491
  br label %return, !dbg !8491

fail:                                             ; preds = %if.then111, %if.then100, %if.then78, %if.then65, %if.then61, %if.then49, %if.then39, %if.then32
  %90 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns, align 8, !dbg !8492
  %present123 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %90, i32 0, i32 0, !dbg !8493
  store i32 0, i32* %present123, align 4, !dbg !8494
  %91 = load i32, i32* %ret, align 4, !dbg !8495
  store i32 %91, i32* %retval, align 4, !dbg !8496
  br label %return, !dbg !8496

return:                                           ; preds = %fail, %if.end122
  %92 = load i32, i32* %retval, align 4, !dbg !8497
  ret i32 %92, !dbg !8497
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_cpe(%struct.AACContext* %ac, %struct.GetBitContext* %gb, %struct.ChannelElement* %cpe) #1 !dbg !8498 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %common_window = alloca i32, align 4
  %ms_present = alloca i32, align 4
  %eld_syntax = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8501, metadata !2062), !dbg !8502
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8503, metadata !2062), !dbg !8504
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !8505, metadata !2062), !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8507, metadata !2062), !dbg !8508
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8509, metadata !2062), !dbg !8510
  call void @llvm.dbg.declare(metadata i32* %common_window, metadata !8511, metadata !2062), !dbg !8512
  call void @llvm.dbg.declare(metadata i32* %ms_present, metadata !8513, metadata !2062), !dbg !8514
  store i32 0, i32* %ms_present, align 4, !dbg !8514
  call void @llvm.dbg.declare(metadata i32* %eld_syntax, metadata !8515, metadata !2062), !dbg !8516
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8517
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !8518
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8517
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8519
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8520
  %1 = load i32, i32* %object_type, align 8, !dbg !8520
  %cmp = icmp eq i32 %1, 39, !dbg !8521
  %conv = zext i1 %cmp to i32, !dbg !8521
  store i32 %conv, i32* %eld_syntax, align 4, !dbg !8516
  %2 = load i32, i32* %eld_syntax, align 4, !dbg !8522
  %tobool = icmp ne i32 %2, 0, !dbg !8522
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8523

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8524
  %call = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !8526
  %tobool1 = icmp ne i32 %call, 0, !dbg !8527
  br label %lor.end, !dbg !8527

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !8528
  store i32 %lor.ext, i32* %common_window, align 4, !dbg !8530
  %5 = load i32, i32* %common_window, align 4, !dbg !8531
  %tobool2 = icmp ne i32 %5, 0, !dbg !8531
  br i1 %tobool2, label %if.then, label %if.end59, !dbg !8533

if.then:                                          ; preds = %lor.end
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8534
  %7 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8537
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %7, i32 0, i32 7, !dbg !8538
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !8537
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 0, !dbg !8539
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8540
  %call4 = call i32 @decode_ics_info(%struct.AACContext* %6, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %8), !dbg !8541
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8541
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8542

if.then6:                                         ; preds = %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

if.end:                                           ; preds = %if.then
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8544
  %ch7 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %9, i32 0, i32 7, !dbg !8545
  %arrayidx8 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch7, i64 0, i64 1, !dbg !8544
  %ics9 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx8, i32 0, i32 0, !dbg !8546
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics9, i32 0, i32 2, !dbg !8547
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !8544
  %10 = load i8, i8* %arrayidx10, align 4, !dbg !8544
  %conv11 = zext i8 %10 to i32, !dbg !8544
  store i32 %conv11, i32* %i, align 4, !dbg !8548
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8549
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %11, i32 0, i32 7, !dbg !8550
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 1, !dbg !8549
  %ics14 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 0, !dbg !8551
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8552
  %ch15 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 7, !dbg !8553
  %arrayidx16 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch15, i64 0, i64 0, !dbg !8552
  %ics17 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx16, i32 0, i32 0, !dbg !8554
  %13 = bitcast %struct.IndividualChannelStream* %ics14 to i8*, !dbg !8554
  %14 = bitcast %struct.IndividualChannelStream* %ics17 to i8*, !dbg !8554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 304, i32 32, i1 false), !dbg !8554
  %15 = load i32, i32* %i, align 4, !dbg !8555
  %conv18 = trunc i32 %15 to i8, !dbg !8555
  %16 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8556
  %ch19 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %16, i32 0, i32 7, !dbg !8557
  %arrayidx20 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch19, i64 0, i64 1, !dbg !8556
  %ics21 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx20, i32 0, i32 0, !dbg !8558
  %use_kb_window22 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics21, i32 0, i32 2, !dbg !8559
  %arrayidx23 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window22, i64 0, i64 1, !dbg !8556
  store i8 %conv18, i8* %arrayidx23, align 1, !dbg !8560
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8561
  %ch24 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 7, !dbg !8563
  %arrayidx25 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch24, i64 0, i64 1, !dbg !8561
  %ics26 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx25, i32 0, i32 0, !dbg !8564
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics26, i32 0, i32 11, !dbg !8565
  %18 = load i32, i32* %predictor_present, align 4, !dbg !8565
  %tobool27 = icmp ne i32 %18, 0, !dbg !8561
  br i1 %tobool27, label %land.lhs.true, label %if.end50, !dbg !8566

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8567
  %oc28 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 24, !dbg !8568
  %arrayidx29 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc28, i64 0, i64 1, !dbg !8567
  %m4ac30 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx29, i32 0, i32 0, !dbg !8569
  %object_type31 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac30, i32 0, i32 0, !dbg !8570
  %20 = load i32, i32* %object_type31, align 8, !dbg !8570
  %cmp32 = icmp ne i32 %20, 1, !dbg !8571
  br i1 %cmp32, label %if.then34, label %if.end50, !dbg !8572

if.then34:                                        ; preds = %land.lhs.true
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8574
  %call35 = call i32 @get_bits(%struct.GetBitContext* %21, i32 1), !dbg !8576
  %conv36 = trunc i32 %call35 to i8, !dbg !8576
  %22 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8577
  %ch37 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %22, i32 0, i32 7, !dbg !8578
  %arrayidx38 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch37, i64 0, i64 1, !dbg !8577
  %ics39 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx38, i32 0, i32 0, !dbg !8579
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics39, i32 0, i32 5, !dbg !8580
  %present = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !8581
  store i8 %conv36, i8* %present, align 4, !dbg !8582
  %tobool40 = icmp ne i8 %conv36, 0, !dbg !8582
  br i1 %tobool40, label %if.then41, label %if.end49, !dbg !8583

if.then41:                                        ; preds = %if.then34
  %23 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8584
  %ch42 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %23, i32 0, i32 7, !dbg !8585
  %arrayidx43 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch42, i64 0, i64 1, !dbg !8584
  %ics44 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx43, i32 0, i32 0, !dbg !8586
  %ltp45 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics44, i32 0, i32 5, !dbg !8587
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8588
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8589
  %ch46 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !8590
  %arrayidx47 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch46, i64 0, i64 1, !dbg !8589
  %ics48 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx47, i32 0, i32 0, !dbg !8591
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics48, i32 0, i32 0, !dbg !8592
  %26 = load i8, i8* %max_sfb, align 32, !dbg !8592
  call void @decode_ltp(%struct.LongTermPrediction* %ltp45, %struct.GetBitContext* %24, i8 zeroext %26), !dbg !8593
  br label %if.end49, !dbg !8593

if.end49:                                         ; preds = %if.then41, %if.then34
  br label %if.end50, !dbg !8594

if.end50:                                         ; preds = %if.end49, %land.lhs.true, %if.end
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8596
  %call51 = call i32 @get_bits(%struct.GetBitContext* %27, i32 2), !dbg !8597
  store i32 %call51, i32* %ms_present, align 4, !dbg !8598
  %28 = load i32, i32* %ms_present, align 4, !dbg !8599
  %cmp52 = icmp eq i32 %28, 3, !dbg !8601
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !8602

if.then54:                                        ; preds = %if.end50
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8603
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 1, !dbg !8605
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8605
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !8603
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73, i32 0, i32 0)), !dbg !8606
  store i32 -1094995529, i32* %retval, align 4, !dbg !8607
  br label %return, !dbg !8607

if.else:                                          ; preds = %if.end50
  %32 = load i32, i32* %ms_present, align 4, !dbg !8608
  %tobool55 = icmp ne i32 %32, 0, !dbg !8608
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8610

if.then56:                                        ; preds = %if.else
  %33 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8611
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8612
  %35 = load i32, i32* %ms_present, align 4, !dbg !8613
  call void @decode_mid_side_stereo(%struct.ChannelElement* %33, %struct.GetBitContext* %34, i32 %35), !dbg !8614
  br label %if.end57, !dbg !8614

if.end57:                                         ; preds = %if.then56, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  br label %if.end59, !dbg !8615

if.end59:                                         ; preds = %if.end58, %lor.end
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8616
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8618
  %ch60 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !8619
  %arrayidx61 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch60, i64 0, i64 0, !dbg !8618
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8620
  %39 = load i32, i32* %common_window, align 4, !dbg !8621
  %call62 = call i32 @decode_ics(%struct.AACContext* %36, %struct.SingleChannelElement* %arrayidx61, %struct.GetBitContext* %38, i32 %39, i32 0), !dbg !8622
  store i32 %call62, i32* %ret, align 4, !dbg !8623
  %tobool63 = icmp ne i32 %call62, 0, !dbg !8623
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !8624

if.then64:                                        ; preds = %if.end59
  %40 = load i32, i32* %ret, align 4, !dbg !8625
  store i32 %40, i32* %retval, align 4, !dbg !8626
  br label %return, !dbg !8626

if.end65:                                         ; preds = %if.end59
  %41 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8627
  %42 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8629
  %ch66 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %42, i32 0, i32 7, !dbg !8630
  %arrayidx67 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch66, i64 0, i64 1, !dbg !8629
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8631
  %44 = load i32, i32* %common_window, align 4, !dbg !8632
  %call68 = call i32 @decode_ics(%struct.AACContext* %41, %struct.SingleChannelElement* %arrayidx67, %struct.GetBitContext* %43, i32 %44, i32 0), !dbg !8633
  store i32 %call68, i32* %ret, align 4, !dbg !8634
  %tobool69 = icmp ne i32 %call68, 0, !dbg !8634
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !8635

if.then70:                                        ; preds = %if.end65
  %45 = load i32, i32* %ret, align 4, !dbg !8636
  store i32 %45, i32* %retval, align 4, !dbg !8637
  br label %return, !dbg !8637

if.end71:                                         ; preds = %if.end65
  %46 = load i32, i32* %common_window, align 4, !dbg !8638
  %tobool72 = icmp ne i32 %46, 0, !dbg !8638
  br i1 %tobool72, label %if.then73, label %if.end89, !dbg !8640

if.then73:                                        ; preds = %if.end71
  %47 = load i32, i32* %ms_present, align 4, !dbg !8641
  %tobool74 = icmp ne i32 %47, 0, !dbg !8641
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8644

if.then75:                                        ; preds = %if.then73
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8645
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8646
  call void @apply_mid_side_stereo(%struct.AACContext* %48, %struct.ChannelElement* %49), !dbg !8647
  br label %if.end76, !dbg !8647

if.end76:                                         ; preds = %if.then75, %if.then73
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8648
  %oc77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %50, i32 0, i32 24, !dbg !8650
  %arrayidx78 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc77, i64 0, i64 1, !dbg !8648
  %m4ac79 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx78, i32 0, i32 0, !dbg !8651
  %object_type80 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac79, i32 0, i32 0, !dbg !8652
  %51 = load i32, i32* %object_type80, align 8, !dbg !8652
  %cmp81 = icmp eq i32 %51, 1, !dbg !8653
  br i1 %cmp81, label %if.then83, label %if.end88, !dbg !8654

if.then83:                                        ; preds = %if.end76
  %52 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8655
  %53 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8657
  %ch84 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %53, i32 0, i32 7, !dbg !8658
  %arrayidx85 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch84, i64 0, i64 0, !dbg !8657
  call void @apply_prediction(%struct.AACContext* %52, %struct.SingleChannelElement* %arrayidx85), !dbg !8659
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8660
  %55 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8661
  %ch86 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %55, i32 0, i32 7, !dbg !8662
  %arrayidx87 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch86, i64 0, i64 1, !dbg !8661
  call void @apply_prediction(%struct.AACContext* %54, %struct.SingleChannelElement* %arrayidx87), !dbg !8663
  br label %if.end88, !dbg !8664

if.end88:                                         ; preds = %if.then83, %if.end76
  br label %if.end89, !dbg !8665

if.end89:                                         ; preds = %if.end88, %if.end71
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8666
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8667
  %58 = load i32, i32* %ms_present, align 4, !dbg !8668
  call void @apply_intensity_stereo(%struct.AACContext* %56, %struct.ChannelElement* %57, i32 %58), !dbg !8669
  store i32 0, i32* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

return:                                           ; preds = %if.end89, %if.then70, %if.then64, %if.then54, %if.then6
  %59 = load i32, i32* %retval, align 4, !dbg !8671
  ret i32 %59, !dbg !8671
}

; Function Attrs: nounwind uwtable
define internal void @spectral_to_sample(%struct.AACContext* %ac, i32 %samples) #1 !dbg !8672 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %samples.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  %imdct_and_window = alloca void (%struct.AACContext*, %struct.SingleChannelElement*)*, align 8
  %che = alloca %struct.ChannelElement*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8675, metadata !2062), !dbg !8676
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !8677, metadata !2062), !dbg !8678
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8679, metadata !2062), !dbg !8680
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8681, metadata !2062), !dbg !8682
  call void @llvm.dbg.declare(metadata void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, metadata !8683, metadata !2062), !dbg !8684
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8685
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !8686
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8685
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8687
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !8688
  %1 = load i32, i32* %object_type, align 8, !dbg !8688
  switch i32 %1, label %sw.default [
    i32 23, label %sw.bb
    i32 39, label %sw.bb1
  ], !dbg !8689

sw.bb:                                            ; preds = %entry
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_ld, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8690
  br label %sw.epilog, !dbg !8692

sw.bb1:                                           ; preds = %entry
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_eld, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8693
  br label %sw.epilog, !dbg !8694

sw.default:                                       ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8695
  %oc2 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 24, !dbg !8697
  %arrayidx3 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc2, i64 0, i64 1, !dbg !8695
  %m4ac4 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx3, i32 0, i32 0, !dbg !8698
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac4, i32 0, i32 11, !dbg !8699
  %3 = load i32, i32* %frame_length_short, align 4, !dbg !8699
  %tobool = icmp ne i32 %3, 0, !dbg !8695
  br i1 %tobool, label %if.then, label %if.else, !dbg !8700

if.then:                                          ; preds = %sw.default
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* @imdct_and_windowing_960, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8701
  br label %if.end, !dbg !8702

if.else:                                          ; preds = %sw.default
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8703
  %imdct_and_windowing = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 28, !dbg !8704
  %5 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_windowing, align 32, !dbg !8704
  store void (%struct.AACContext*, %struct.SingleChannelElement*)* %5, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8705
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !8706

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 3, i32* %type, align 4, !dbg !8707
  br label %for.cond, !dbg !8709

for.cond:                                         ; preds = %for.inc146, %sw.epilog
  %6 = load i32, i32* %type, align 4, !dbg !8710
  %cmp = icmp sge i32 %6, 0, !dbg !8713
  br i1 %cmp, label %for.body, label %for.end147, !dbg !8714

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8715
  br label %for.cond5, !dbg !8718

for.cond5:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8719
  %cmp6 = icmp slt i32 %7, 16, !dbg !8722
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !8723

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che, metadata !8724, metadata !2062), !dbg !8726
  %8 = load i32, i32* %i, align 4, !dbg !8727
  %idxprom = sext i32 %8 to i64, !dbg !8728
  %9 = load i32, i32* %type, align 4, !dbg !8729
  %idxprom8 = sext i32 %9 to i64, !dbg !8728
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8728
  %che9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 5, !dbg !8730
  %arrayidx10 = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che9, i64 0, i64 %idxprom8, !dbg !8728
  %arrayidx11 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx10, i64 0, i64 %idxprom, !dbg !8728
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx11, align 8, !dbg !8728
  store %struct.ChannelElement* %11, %struct.ChannelElement** %che, align 8, !dbg !8726
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8731
  %tobool12 = icmp ne %struct.ChannelElement* %12, null, !dbg !8731
  br i1 %tobool12, label %land.lhs.true, label %if.else141, !dbg !8733

land.lhs.true:                                    ; preds = %for.body7
  %13 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8734
  %present = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %13, i32 0, i32 0, !dbg !8736
  %14 = load i32, i32* %present, align 32, !dbg !8736
  %tobool13 = icmp ne i32 %14, 0, !dbg !8734
  br i1 %tobool13, label %if.then14, label %if.else141, !dbg !8737

if.then14:                                        ; preds = %land.lhs.true
  %15 = load i32, i32* %type, align 4, !dbg !8738
  %cmp15 = icmp sle i32 %15, 1, !dbg !8741
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8742

if.then16:                                        ; preds = %if.then14
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8743
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8744
  %18 = load i32, i32* %type, align 4, !dbg !8745
  %19 = load i32, i32* %i, align 4, !dbg !8746
  call void @apply_channel_coupling(%struct.AACContext* %16, %struct.ChannelElement* %17, i32 %18, i32 %19, i32 0, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_dependent_coupling), !dbg !8747
  br label %if.end17, !dbg !8747

if.end17:                                         ; preds = %if.then16, %if.then14
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8748
  %oc18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 24, !dbg !8750
  %arrayidx19 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc18, i64 0, i64 1, !dbg !8748
  %m4ac20 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx19, i32 0, i32 0, !dbg !8751
  %object_type21 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac20, i32 0, i32 0, !dbg !8752
  %21 = load i32, i32* %object_type21, align 8, !dbg !8752
  %cmp22 = icmp eq i32 %21, 4, !dbg !8753
  br i1 %cmp22, label %if.then23, label %if.end51, !dbg !8754

if.then23:                                        ; preds = %if.end17
  %22 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8755
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %22, i32 0, i32 7, !dbg !8758
  %arrayidx24 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !8755
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx24, i32 0, i32 0, !dbg !8759
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 11, !dbg !8760
  %23 = load i32, i32* %predictor_present, align 4, !dbg !8760
  %tobool25 = icmp ne i32 %23, 0, !dbg !8755
  br i1 %tobool25, label %if.then26, label %if.end50, !dbg !8761

if.then26:                                        ; preds = %if.then23
  %24 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8762
  %ch27 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %24, i32 0, i32 7, !dbg !8765
  %arrayidx28 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch27, i64 0, i64 0, !dbg !8762
  %ics29 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx28, i32 0, i32 0, !dbg !8766
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics29, i32 0, i32 5, !dbg !8767
  %present30 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !8768
  %25 = load i8, i8* %present30, align 4, !dbg !8768
  %tobool31 = icmp ne i8 %25, 0, !dbg !8762
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !8769

if.then32:                                        ; preds = %if.then26
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8770
  %apply_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 29, !dbg !8771
  %27 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp, align 8, !dbg !8771
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8772
  %29 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8773
  %ch33 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %29, i32 0, i32 7, !dbg !8774
  %arrayidx34 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch33, i64 0, i64 0, !dbg !8773
  call void %27(%struct.AACContext* %28, %struct.SingleChannelElement* %arrayidx34), !dbg !8770
  br label %if.end35, !dbg !8770

if.end35:                                         ; preds = %if.then32, %if.then26
  %30 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8775
  %ch36 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %30, i32 0, i32 7, !dbg !8777
  %arrayidx37 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch36, i64 0, i64 1, !dbg !8775
  %ics38 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx37, i32 0, i32 0, !dbg !8778
  %ltp39 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics38, i32 0, i32 5, !dbg !8779
  %present40 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp39, i32 0, i32 0, !dbg !8780
  %31 = load i8, i8* %present40, align 4, !dbg !8780
  %conv = sext i8 %31 to i32, !dbg !8775
  %tobool41 = icmp ne i32 %conv, 0, !dbg !8775
  br i1 %tobool41, label %land.lhs.true42, label %if.end49, !dbg !8781

land.lhs.true42:                                  ; preds = %if.end35
  %32 = load i32, i32* %type, align 4, !dbg !8782
  %cmp43 = icmp eq i32 %32, 1, !dbg !8784
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !8785

if.then45:                                        ; preds = %land.lhs.true42
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8786
  %apply_ltp46 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %33, i32 0, i32 29, !dbg !8787
  %34 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %apply_ltp46, align 8, !dbg !8787
  %35 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8788
  %36 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8789
  %ch47 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %36, i32 0, i32 7, !dbg !8790
  %arrayidx48 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch47, i64 0, i64 1, !dbg !8789
  call void %34(%struct.AACContext* %35, %struct.SingleChannelElement* %arrayidx48), !dbg !8786
  br label %if.end49, !dbg !8786

if.end49:                                         ; preds = %if.then45, %land.lhs.true42, %if.end35
  br label %if.end50, !dbg !8791

if.end50:                                         ; preds = %if.end49, %if.then23
  br label %if.end51, !dbg !8792

if.end51:                                         ; preds = %if.end50, %if.end17
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8793
  %ch52 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !8795
  %arrayidx53 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch52, i64 0, i64 0, !dbg !8793
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx53, i32 0, i32 1, !dbg !8796
  %present54 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns, i32 0, i32 0, !dbg !8797
  %38 = load i32, i32* %present54, align 16, !dbg !8797
  %tobool55 = icmp ne i32 %38, 0, !dbg !8793
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !8798

if.then56:                                        ; preds = %if.end51
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8799
  %apply_tns = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 30, !dbg !8800
  %40 = load void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns, align 16, !dbg !8800
  %41 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8801
  %ch57 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %41, i32 0, i32 7, !dbg !8802
  %arrayidx58 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch57, i64 0, i64 0, !dbg !8801
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx58, i32 0, i32 14, !dbg !8803
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !8801
  %42 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8804
  %ch59 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %42, i32 0, i32 7, !dbg !8805
  %arrayidx60 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch59, i64 0, i64 0, !dbg !8804
  %tns61 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx60, i32 0, i32 1, !dbg !8806
  %43 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8807
  %ch62 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %43, i32 0, i32 7, !dbg !8808
  %arrayidx63 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch62, i64 0, i64 0, !dbg !8807
  %ics64 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx63, i32 0, i32 0, !dbg !8809
  call void %40(float* %arraydecay, %struct.TemporalNoiseShaping* %tns61, %struct.IndividualChannelStream* %ics64, i32 1), !dbg !8799
  br label %if.end65, !dbg !8799

if.end65:                                         ; preds = %if.then56, %if.end51
  %44 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8810
  %ch66 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %44, i32 0, i32 7, !dbg !8812
  %arrayidx67 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch66, i64 0, i64 1, !dbg !8810
  %tns68 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx67, i32 0, i32 1, !dbg !8813
  %present69 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns68, i32 0, i32 0, !dbg !8814
  %45 = load i32, i32* %present69, align 16, !dbg !8814
  %tobool70 = icmp ne i32 %45, 0, !dbg !8810
  br i1 %tobool70, label %if.then71, label %if.end83, !dbg !8815

if.then71:                                        ; preds = %if.end65
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8816
  %apply_tns72 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 30, !dbg !8817
  %47 = load void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)** %apply_tns72, align 16, !dbg !8817
  %48 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8818
  %ch73 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %48, i32 0, i32 7, !dbg !8819
  %arrayidx74 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch73, i64 0, i64 1, !dbg !8818
  %coeffs75 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx74, i32 0, i32 14, !dbg !8820
  %arraydecay76 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs75, i32 0, i32 0, !dbg !8818
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8821
  %ch77 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %49, i32 0, i32 7, !dbg !8822
  %arrayidx78 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch77, i64 0, i64 1, !dbg !8821
  %tns79 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx78, i32 0, i32 1, !dbg !8823
  %50 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8824
  %ch80 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %50, i32 0, i32 7, !dbg !8825
  %arrayidx81 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch80, i64 0, i64 1, !dbg !8824
  %ics82 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx81, i32 0, i32 0, !dbg !8826
  call void %47(float* %arraydecay76, %struct.TemporalNoiseShaping* %tns79, %struct.IndividualChannelStream* %ics82, i32 1), !dbg !8816
  br label %if.end83, !dbg !8816

if.end83:                                         ; preds = %if.then71, %if.end65
  %51 = load i32, i32* %type, align 4, !dbg !8827
  %cmp84 = icmp sle i32 %51, 1, !dbg !8829
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !8830

if.then86:                                        ; preds = %if.end83
  %52 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8831
  %53 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8832
  %54 = load i32, i32* %type, align 4, !dbg !8833
  %55 = load i32, i32* %i, align 4, !dbg !8834
  call void @apply_channel_coupling(%struct.AACContext* %52, %struct.ChannelElement* %53, i32 %54, i32 %55, i32 1, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_dependent_coupling), !dbg !8835
  br label %if.end87, !dbg !8835

if.end87:                                         ; preds = %if.then86, %if.end83
  %56 = load i32, i32* %type, align 4, !dbg !8836
  %cmp88 = icmp ne i32 %56, 2, !dbg !8838
  br i1 %cmp88, label %if.then92, label %lor.lhs.false, !dbg !8839

lor.lhs.false:                                    ; preds = %if.end87
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8840
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %57, i32 0, i32 8, !dbg !8842
  %coupling_point = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 0, !dbg !8843
  %58 = load i32, i32* %coupling_point, align 32, !dbg !8843
  %cmp90 = icmp eq i32 %58, 3, !dbg !8844
  br i1 %cmp90, label %if.then92, label %if.end135, !dbg !8845

if.then92:                                        ; preds = %lor.lhs.false, %if.end87
  %59 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8846
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8848
  %61 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8849
  %ch93 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %61, i32 0, i32 7, !dbg !8850
  %arrayidx94 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch93, i64 0, i64 0, !dbg !8849
  call void %59(%struct.AACContext* %60, %struct.SingleChannelElement* %arrayidx94), !dbg !8846
  %62 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8851
  %oc95 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %62, i32 0, i32 24, !dbg !8853
  %arrayidx96 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc95, i64 0, i64 1, !dbg !8851
  %m4ac97 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx96, i32 0, i32 0, !dbg !8854
  %object_type98 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac97, i32 0, i32 0, !dbg !8855
  %63 = load i32, i32* %object_type98, align 8, !dbg !8855
  %cmp99 = icmp eq i32 %63, 4, !dbg !8856
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !8857

if.then101:                                       ; preds = %if.then92
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8858
  %update_ltp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 32, !dbg !8859
  %65 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp, align 32, !dbg !8859
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8860
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8861
  %ch102 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 7, !dbg !8862
  %arrayidx103 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch102, i64 0, i64 0, !dbg !8861
  call void %65(%struct.AACContext* %66, %struct.SingleChannelElement* %arrayidx103), !dbg !8858
  br label %if.end104, !dbg !8858

if.end104:                                        ; preds = %if.then101, %if.then92
  %68 = load i32, i32* %type, align 4, !dbg !8863
  %cmp105 = icmp eq i32 %68, 1, !dbg !8865
  br i1 %cmp105, label %if.then107, label %if.end121, !dbg !8866

if.then107:                                       ; preds = %if.end104
  %69 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %imdct_and_window, align 8, !dbg !8867
  %70 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8869
  %71 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8870
  %ch108 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %71, i32 0, i32 7, !dbg !8871
  %arrayidx109 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch108, i64 0, i64 1, !dbg !8870
  call void %69(%struct.AACContext* %70, %struct.SingleChannelElement* %arrayidx109), !dbg !8867
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8872
  %oc110 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 24, !dbg !8874
  %arrayidx111 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc110, i64 0, i64 1, !dbg !8872
  %m4ac112 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx111, i32 0, i32 0, !dbg !8875
  %object_type113 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac112, i32 0, i32 0, !dbg !8876
  %73 = load i32, i32* %object_type113, align 8, !dbg !8876
  %cmp114 = icmp eq i32 %73, 4, !dbg !8877
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !8878

if.then116:                                       ; preds = %if.then107
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8879
  %update_ltp117 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %74, i32 0, i32 32, !dbg !8880
  %75 = load void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)** %update_ltp117, align 32, !dbg !8880
  %76 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8881
  %77 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8882
  %ch118 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %77, i32 0, i32 7, !dbg !8883
  %arrayidx119 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch118, i64 0, i64 1, !dbg !8882
  call void %75(%struct.AACContext* %76, %struct.SingleChannelElement* %arrayidx119), !dbg !8879
  br label %if.end120, !dbg !8879

if.end120:                                        ; preds = %if.then116, %if.then107
  br label %if.end121, !dbg !8884

if.end121:                                        ; preds = %if.end120, %if.end104
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8885
  %oc122 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %78, i32 0, i32 24, !dbg !8887
  %arrayidx123 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc122, i64 0, i64 1, !dbg !8885
  %m4ac124 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx123, i32 0, i32 0, !dbg !8888
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac124, i32 0, i32 4, !dbg !8889
  %79 = load i32, i32* %sbr, align 8, !dbg !8889
  %cmp125 = icmp sgt i32 %79, 0, !dbg !8890
  br i1 %cmp125, label %if.then127, label %if.end134, !dbg !8891

if.then127:                                       ; preds = %if.end121
  %80 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8892
  %81 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8894
  %sbr128 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %81, i32 0, i32 10, !dbg !8895
  %82 = load i32, i32* %type, align 4, !dbg !8896
  %83 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8897
  %ch129 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %83, i32 0, i32 7, !dbg !8898
  %arrayidx130 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch129, i64 0, i64 0, !dbg !8897
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx130, i32 0, i32 21, !dbg !8899
  %84 = load float*, float** %ret, align 32, !dbg !8899
  %85 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8900
  %ch131 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %85, i32 0, i32 7, !dbg !8901
  %arrayidx132 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch131, i64 0, i64 1, !dbg !8900
  %ret133 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx132, i32 0, i32 21, !dbg !8902
  %86 = load float*, float** %ret133, align 32, !dbg !8902
  call void @ff_sbr_apply(%struct.AACContext* %80, %struct.SpectralBandReplication* %sbr128, i32 %82, float* %84, float* %86), !dbg !8903
  br label %if.end134, !dbg !8904

if.end134:                                        ; preds = %if.then127, %if.end121
  br label %if.end135, !dbg !8905

if.end135:                                        ; preds = %if.end134, %lor.lhs.false
  %87 = load i32, i32* %type, align 4, !dbg !8906
  %cmp136 = icmp sle i32 %87, 2, !dbg !8908
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !8909

if.then138:                                       ; preds = %if.end135
  %88 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8910
  %89 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8911
  %90 = load i32, i32* %type, align 4, !dbg !8912
  %91 = load i32, i32* %i, align 4, !dbg !8913
  call void @apply_channel_coupling(%struct.AACContext* %88, %struct.ChannelElement* %89, i32 %90, i32 %91, i32 3, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* @apply_independent_coupling), !dbg !8914
  br label %if.end139, !dbg !8914

if.end139:                                        ; preds = %if.then138, %if.end135
  %92 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8915
  %present140 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %92, i32 0, i32 0, !dbg !8916
  store i32 0, i32* %present140, align 32, !dbg !8917
  br label %if.end145, !dbg !8918

if.else141:                                       ; preds = %land.lhs.true, %for.body7
  %93 = load %struct.ChannelElement*, %struct.ChannelElement** %che, align 8, !dbg !8919
  %tobool142 = icmp ne %struct.ChannelElement* %93, null, !dbg !8919
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !8919

if.then143:                                       ; preds = %if.else141
  %94 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8922
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %94, i32 0, i32 1, !dbg !8924
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8924
  %96 = bitcast %struct.AVCodecContext* %95 to i8*, !dbg !8922
  %97 = load i32, i32* %type, align 4, !dbg !8925
  %98 = load i32, i32* %i, align 4, !dbg !8926
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 40, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i32 0, i32 0), i32 %97, i32 %98), !dbg !8927
  br label %if.end144, !dbg !8928

if.end144:                                        ; preds = %if.then143, %if.else141
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end139
  br label %for.inc, !dbg !8929

for.inc:                                          ; preds = %if.end145
  %99 = load i32, i32* %i, align 4, !dbg !8930
  %inc = add nsw i32 %99, 1, !dbg !8930
  store i32 %inc, i32* %i, align 4, !dbg !8930
  br label %for.cond5, !dbg !8932, !llvm.loop !8933

for.end:                                          ; preds = %for.cond5
  br label %for.inc146, !dbg !8935

for.inc146:                                       ; preds = %for.end
  %100 = load i32, i32* %type, align 4, !dbg !8936
  %dec = add nsw i32 %100, -1, !dbg !8936
  store i32 %dec, i32* %type, align 4, !dbg !8936
  br label %for.cond, !dbg !8938, !llvm.loop !8939

for.end147:                                       ; preds = %for.cond
  ret void, !dbg !8941
}

; Function Attrs: nounwind uwtable
define internal i32 @push_output_configuration(%struct.AACContext* %ac) #1 !dbg !8942 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %pushed = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8945, metadata !2062), !dbg !8946
  call void @llvm.dbg.declare(metadata i32* %pushed, metadata !8947, metadata !2062), !dbg !8948
  store i32 0, i32* %pushed, align 4, !dbg !8948
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8949
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !8951
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8949
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !8952
  %1 = load i32, i32* %status, align 8, !dbg !8952
  %cmp = icmp eq i32 %1, 4, !dbg !8953
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8954

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8955
  %oc1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 24, !dbg !8957
  %arrayidx2 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc1, i64 0, i64 0, !dbg !8955
  %status3 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx2, i32 0, i32 5, !dbg !8958
  %3 = load i32, i32* %status3, align 32, !dbg !8958
  %cmp4 = icmp eq i32 %3, 0, !dbg !8959
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8960

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8961
  %oc5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 24, !dbg !8963
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc5, i64 0, i64 0, !dbg !8961
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8964
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 24, !dbg !8965
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 1, !dbg !8964
  %6 = bitcast %struct.OutputConfiguration* %arrayidx6 to i8*, !dbg !8964
  %7 = bitcast %struct.OutputConfiguration* %arrayidx8 to i8*, !dbg !8964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 264, i32 8, i1 false), !dbg !8964
  store i32 1, i32* %pushed, align 4, !dbg !8966
  br label %if.end, !dbg !8967

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8968
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 24, !dbg !8969
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !8968
  %status11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 5, !dbg !8970
  store i32 0, i32* %status11, align 8, !dbg !8971
  %9 = load i32, i32* %pushed, align 4, !dbg !8972
  ret i32 %9, !dbg !8973
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_ics_info(%struct.AACContext* %ac, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %gb) #1 !dbg !8974 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %m4ac = alloca %struct.MPEG4AudioConfig*, align 8
  %aot = alloca i32, align 4
  %sampling_index = alloca i32, align 4
  %ret_fail = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !8977, metadata !2062), !dbg !8978
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !8979, metadata !2062), !dbg !8980
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8981, metadata !2062), !dbg !8982
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig** %m4ac, metadata !8983, metadata !2062), !dbg !8984
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8985
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !8986
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !8985
  %m4ac1 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !8987
  store %struct.MPEG4AudioConfig* %m4ac1, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !8984
  call void @llvm.dbg.declare(metadata i32* %aot, metadata !8988, metadata !2062), !dbg !8989
  %1 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !8990
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %1, i32 0, i32 0, !dbg !8991
  %2 = load i32, i32* %object_type, align 4, !dbg !8991
  store i32 %2, i32* %aot, align 4, !dbg !8989
  call void @llvm.dbg.declare(metadata i32* %sampling_index, metadata !8992, metadata !2062), !dbg !8993
  %3 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !8994
  %sampling_index2 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %3, i32 0, i32 1, !dbg !8995
  %4 = load i32, i32* %sampling_index2, align 4, !dbg !8995
  store i32 %4, i32* %sampling_index, align 4, !dbg !8993
  call void @llvm.dbg.declare(metadata i32* %ret_fail, metadata !8996, metadata !2062), !dbg !8997
  store i32 -1094995529, i32* %ret_fail, align 4, !dbg !8997
  %5 = load i32, i32* %aot, align 4, !dbg !8998
  %cmp = icmp ne i32 %5, 39, !dbg !9000
  br i1 %cmp, label %if.then, label %if.end31, !dbg !9001

if.then:                                          ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9002
  %call = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !9005
  %tobool = icmp ne i32 %call, 0, !dbg !9005
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !9006

if.then3:                                         ; preds = %if.then
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9007
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !9009
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9009
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !9007
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0)), !dbg !9010
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9011
  %avctx4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !9013
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 8, !dbg !9013
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 135, !dbg !9014
  %12 = load i32, i32* %err_recognition, align 8, !dbg !9014
  %and = and i32 %12, 2, !dbg !9015
  %tobool5 = icmp ne i32 %and, 0, !dbg !9015
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9016

if.then6:                                         ; preds = %if.then3
  store i32 -1094995529, i32* %retval, align 4, !dbg !9017
  br label %return, !dbg !9017

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !9018

if.end7:                                          ; preds = %if.end, %if.then
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9019
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 1, !dbg !9020
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !9019
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !9019
  %15 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9021
  %window_sequence9 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %15, i32 0, i32 1, !dbg !9022
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence9, i64 0, i64 1, !dbg !9021
  store i32 %14, i32* %arrayidx10, align 4, !dbg !9023
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9024
  %call11 = call i32 @get_bits(%struct.GetBitContext* %16, i32 2), !dbg !9025
  %17 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9026
  %window_sequence12 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %17, i32 0, i32 1, !dbg !9027
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence12, i64 0, i64 0, !dbg !9026
  store i32 %call11, i32* %arrayidx13, align 4, !dbg !9028
  %18 = load i32, i32* %aot, align 4, !dbg !9029
  %cmp14 = icmp eq i32 %18, 23, !dbg !9031
  br i1 %cmp14, label %land.lhs.true, label %if.end24, !dbg !9032

land.lhs.true:                                    ; preds = %if.end7
  %19 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9033
  %window_sequence15 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %19, i32 0, i32 1, !dbg !9034
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence15, i64 0, i64 0, !dbg !9033
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !9033
  %cmp17 = icmp ne i32 %20, 0, !dbg !9035
  br i1 %cmp17, label %if.then18, label %if.end24, !dbg !9036

if.then18:                                        ; preds = %land.lhs.true
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9038
  %avctx19 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 1, !dbg !9040
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx19, align 8, !dbg !9040
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !9038
  %24 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9041
  %window_sequence20 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %24, i32 0, i32 1, !dbg !9042
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence20, i64 0, i64 0, !dbg !9041
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !9041
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.60, i32 0, i32 0), i32 %25), !dbg !9043
  %26 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9044
  %window_sequence22 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %26, i32 0, i32 1, !dbg !9045
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence22, i64 0, i64 0, !dbg !9044
  store i32 0, i32* %arrayidx23, align 4, !dbg !9046
  store i32 -1094995529, i32* %retval, align 4, !dbg !9047
  br label %return, !dbg !9047

if.end24:                                         ; preds = %land.lhs.true, %if.end7
  %27 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9048
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %27, i32 0, i32 2, !dbg !9049
  %arrayidx25 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !9048
  %28 = load i8, i8* %arrayidx25, align 4, !dbg !9048
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9050
  %use_kb_window26 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 2, !dbg !9051
  %arrayidx27 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window26, i64 0, i64 1, !dbg !9050
  store i8 %28, i8* %arrayidx27, align 1, !dbg !9052
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9053
  %call28 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !9054
  %conv = trunc i32 %call28 to i8, !dbg !9054
  %31 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9055
  %use_kb_window29 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %31, i32 0, i32 2, !dbg !9056
  %arrayidx30 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window29, i64 0, i64 0, !dbg !9055
  store i8 %conv, i8* %arrayidx30, align 4, !dbg !9057
  br label %if.end31, !dbg !9058

if.end31:                                         ; preds = %if.end24, %entry
  %32 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9059
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %32, i32 0, i32 3, !dbg !9060
  store i32 1, i32* %num_window_groups, align 8, !dbg !9061
  %33 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9062
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %33, i32 0, i32 4, !dbg !9063
  %arrayidx32 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 0, !dbg !9062
  store i8 1, i8* %arrayidx32, align 4, !dbg !9064
  %34 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9065
  %window_sequence33 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %34, i32 0, i32 1, !dbg !9067
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence33, i64 0, i64 0, !dbg !9065
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !9065
  %cmp35 = icmp eq i32 %35, 2, !dbg !9068
  br i1 %cmp35, label %if.then37, label %if.else76, !dbg !9069

if.then37:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9070, metadata !2062), !dbg !9072
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9073
  %call38 = call i32 @get_bits(%struct.GetBitContext* %36, i32 4), !dbg !9074
  %conv39 = trunc i32 %call38 to i8, !dbg !9074
  %37 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9075
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %37, i32 0, i32 0, !dbg !9076
  store i8 %conv39, i8* %max_sfb, align 8, !dbg !9077
  store i32 0, i32* %i, align 4, !dbg !9078
  br label %for.cond, !dbg !9080

for.cond:                                         ; preds = %for.inc, %if.then37
  %38 = load i32, i32* %i, align 4, !dbg !9081
  %cmp40 = icmp slt i32 %38, 7, !dbg !9084
  br i1 %cmp40, label %for.body, label %for.end, !dbg !9085

for.body:                                         ; preds = %for.cond
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9086
  %call42 = call i32 @get_bits1(%struct.GetBitContext* %39), !dbg !9089
  %tobool43 = icmp ne i32 %call42, 0, !dbg !9089
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !9090

if.then44:                                        ; preds = %for.body
  %40 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9091
  %num_window_groups45 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %40, i32 0, i32 3, !dbg !9093
  %41 = load i32, i32* %num_window_groups45, align 8, !dbg !9093
  %sub = sub nsw i32 %41, 1, !dbg !9094
  %idxprom = sext i32 %sub to i64, !dbg !9095
  %42 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9095
  %group_len46 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %42, i32 0, i32 4, !dbg !9096
  %arrayidx47 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len46, i64 0, i64 %idxprom, !dbg !9095
  %43 = load i8, i8* %arrayidx47, align 1, !dbg !9097
  %inc = add i8 %43, 1, !dbg !9097
  store i8 %inc, i8* %arrayidx47, align 1, !dbg !9097
  br label %if.end55, !dbg !9098

if.else:                                          ; preds = %for.body
  %44 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9099
  %num_window_groups48 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %44, i32 0, i32 3, !dbg !9101
  %45 = load i32, i32* %num_window_groups48, align 8, !dbg !9102
  %inc49 = add nsw i32 %45, 1, !dbg !9102
  store i32 %inc49, i32* %num_window_groups48, align 8, !dbg !9102
  %46 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9103
  %num_window_groups50 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %46, i32 0, i32 3, !dbg !9104
  %47 = load i32, i32* %num_window_groups50, align 8, !dbg !9104
  %sub51 = sub nsw i32 %47, 1, !dbg !9105
  %idxprom52 = sext i32 %sub51 to i64, !dbg !9106
  %48 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9106
  %group_len53 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %48, i32 0, i32 4, !dbg !9107
  %arrayidx54 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len53, i64 0, i64 %idxprom52, !dbg !9106
  store i8 1, i8* %arrayidx54, align 1, !dbg !9108
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then44
  br label %for.inc, !dbg !9109

for.inc:                                          ; preds = %if.end55
  %49 = load i32, i32* %i, align 4, !dbg !9110
  %inc56 = add nsw i32 %49, 1, !dbg !9110
  store i32 %inc56, i32* %i, align 4, !dbg !9110
  br label %for.cond, !dbg !9112, !llvm.loop !9113

for.end:                                          ; preds = %for.cond
  %50 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9115
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %50, i32 0, i32 9, !dbg !9116
  store i32 8, i32* %num_windows, align 4, !dbg !9117
  %51 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9118
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %51, i32 0, i32 11, !dbg !9120
  %52 = load i32, i32* %frame_length_short, align 4, !dbg !9120
  %tobool57 = icmp ne i32 %52, 0, !dbg !9118
  br i1 %tobool57, label %if.then58, label %if.else64, !dbg !9121

if.then58:                                        ; preds = %for.end
  %53 = load i32, i32* %sampling_index, align 4, !dbg !9122
  %idxprom59 = sext i32 %53 to i64, !dbg !9124
  %arrayidx60 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_120, i64 0, i64 %idxprom59, !dbg !9124
  %54 = load i16*, i16** %arrayidx60, align 8, !dbg !9124
  %55 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9125
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %55, i32 0, i32 6, !dbg !9126
  store i16* %54, i16** %swb_offset, align 8, !dbg !9127
  %56 = load i32, i32* %sampling_index, align 4, !dbg !9128
  %idxprom61 = sext i32 %56 to i64, !dbg !9129
  %arrayidx62 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_120, i64 0, i64 %idxprom61, !dbg !9129
  %57 = load i8, i8* %arrayidx62, align 1, !dbg !9129
  %conv63 = zext i8 %57 to i32, !dbg !9129
  %58 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9130
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %58, i32 0, i32 8, !dbg !9131
  store i32 %conv63, i32* %num_swb, align 8, !dbg !9132
  br label %if.end72, !dbg !9133

if.else64:                                        ; preds = %for.end
  %59 = load i32, i32* %sampling_index, align 4, !dbg !9134
  %idxprom65 = sext i32 %59 to i64, !dbg !9136
  %arrayidx66 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_128, i64 0, i64 %idxprom65, !dbg !9136
  %60 = load i16*, i16** %arrayidx66, align 8, !dbg !9136
  %61 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9137
  %swb_offset67 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %61, i32 0, i32 6, !dbg !9138
  store i16* %60, i16** %swb_offset67, align 8, !dbg !9139
  %62 = load i32, i32* %sampling_index, align 4, !dbg !9140
  %idxprom68 = sext i32 %62 to i64, !dbg !9141
  %arrayidx69 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_128, i64 0, i64 %idxprom68, !dbg !9141
  %63 = load i8, i8* %arrayidx69, align 1, !dbg !9141
  %conv70 = zext i8 %63 to i32, !dbg !9141
  %64 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9142
  %num_swb71 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %64, i32 0, i32 8, !dbg !9143
  store i32 %conv70, i32* %num_swb71, align 8, !dbg !9144
  br label %if.end72

if.end72:                                         ; preds = %if.else64, %if.then58
  %65 = load i32, i32* %sampling_index, align 4, !dbg !9145
  %idxprom73 = sext i32 %65 to i64, !dbg !9146
  %arrayidx74 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_128, i64 0, i64 %idxprom73, !dbg !9146
  %66 = load i8, i8* %arrayidx74, align 1, !dbg !9146
  %conv75 = zext i8 %66 to i32, !dbg !9146
  %67 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9147
  %tns_max_bands = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %67, i32 0, i32 10, !dbg !9148
  store i32 %conv75, i32* %tns_max_bands, align 8, !dbg !9149
  %68 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9150
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %68, i32 0, i32 11, !dbg !9151
  store i32 0, i32* %predictor_present, align 4, !dbg !9152
  br label %if.end185, !dbg !9153

if.else76:                                        ; preds = %if.end31
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9154
  %call77 = call i32 @get_bits(%struct.GetBitContext* %69, i32 6), !dbg !9156
  %conv78 = trunc i32 %call77 to i8, !dbg !9156
  %70 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9157
  %max_sfb79 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %70, i32 0, i32 0, !dbg !9158
  store i8 %conv78, i8* %max_sfb79, align 8, !dbg !9159
  %71 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9160
  %num_windows80 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %71, i32 0, i32 9, !dbg !9161
  store i32 1, i32* %num_windows80, align 4, !dbg !9162
  %72 = load i32, i32* %aot, align 4, !dbg !9163
  %cmp81 = icmp eq i32 %72, 23, !dbg !9165
  br i1 %cmp81, label %if.then85, label %lor.lhs.false, !dbg !9166

lor.lhs.false:                                    ; preds = %if.else76
  %73 = load i32, i32* %aot, align 4, !dbg !9167
  %cmp83 = icmp eq i32 %73, 39, !dbg !9169
  br i1 %cmp83, label %if.then85, label %if.else120, !dbg !9170

if.then85:                                        ; preds = %lor.lhs.false, %if.else76
  %74 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9171
  %frame_length_short86 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %74, i32 0, i32 11, !dbg !9174
  %75 = load i32, i32* %frame_length_short86, align 4, !dbg !9174
  %tobool87 = icmp ne i32 %75, 0, !dbg !9171
  br i1 %tobool87, label %if.then88, label %if.else100, !dbg !9175

if.then88:                                        ; preds = %if.then85
  %76 = load i32, i32* %sampling_index, align 4, !dbg !9176
  %idxprom89 = sext i32 %76 to i64, !dbg !9178
  %arrayidx90 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_480, i64 0, i64 %idxprom89, !dbg !9178
  %77 = load i16*, i16** %arrayidx90, align 8, !dbg !9178
  %78 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9179
  %swb_offset91 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %78, i32 0, i32 6, !dbg !9180
  store i16* %77, i16** %swb_offset91, align 8, !dbg !9181
  %79 = load i32, i32* %sampling_index, align 4, !dbg !9182
  %idxprom92 = sext i32 %79 to i64, !dbg !9183
  %arrayidx93 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_480, i64 0, i64 %idxprom92, !dbg !9183
  %80 = load i8, i8* %arrayidx93, align 1, !dbg !9183
  %conv94 = zext i8 %80 to i32, !dbg !9183
  %81 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9184
  %num_swb95 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %81, i32 0, i32 8, !dbg !9185
  store i32 %conv94, i32* %num_swb95, align 8, !dbg !9186
  %82 = load i32, i32* %sampling_index, align 4, !dbg !9187
  %idxprom96 = sext i32 %82 to i64, !dbg !9188
  %arrayidx97 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_480, i64 0, i64 %idxprom96, !dbg !9188
  %83 = load i8, i8* %arrayidx97, align 1, !dbg !9188
  %conv98 = zext i8 %83 to i32, !dbg !9188
  %84 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9189
  %tns_max_bands99 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %84, i32 0, i32 10, !dbg !9190
  store i32 %conv98, i32* %tns_max_bands99, align 8, !dbg !9191
  br label %if.end112, !dbg !9192

if.else100:                                       ; preds = %if.then85
  %85 = load i32, i32* %sampling_index, align 4, !dbg !9193
  %idxprom101 = sext i32 %85 to i64, !dbg !9195
  %arrayidx102 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_512, i64 0, i64 %idxprom101, !dbg !9195
  %86 = load i16*, i16** %arrayidx102, align 8, !dbg !9195
  %87 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9196
  %swb_offset103 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %87, i32 0, i32 6, !dbg !9197
  store i16* %86, i16** %swb_offset103, align 8, !dbg !9198
  %88 = load i32, i32* %sampling_index, align 4, !dbg !9199
  %idxprom104 = sext i32 %88 to i64, !dbg !9200
  %arrayidx105 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_512, i64 0, i64 %idxprom104, !dbg !9200
  %89 = load i8, i8* %arrayidx105, align 1, !dbg !9200
  %conv106 = zext i8 %89 to i32, !dbg !9200
  %90 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9201
  %num_swb107 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %90, i32 0, i32 8, !dbg !9202
  store i32 %conv106, i32* %num_swb107, align 8, !dbg !9203
  %91 = load i32, i32* %sampling_index, align 4, !dbg !9204
  %idxprom108 = sext i32 %91 to i64, !dbg !9205
  %arrayidx109 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_512, i64 0, i64 %idxprom108, !dbg !9205
  %92 = load i8, i8* %arrayidx109, align 1, !dbg !9205
  %conv110 = zext i8 %92 to i32, !dbg !9205
  %93 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9206
  %tns_max_bands111 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %93, i32 0, i32 10, !dbg !9207
  store i32 %conv110, i32* %tns_max_bands111, align 8, !dbg !9208
  br label %if.end112

if.end112:                                        ; preds = %if.else100, %if.then88
  %94 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9209
  %num_swb113 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %94, i32 0, i32 8, !dbg !9211
  %95 = load i32, i32* %num_swb113, align 8, !dbg !9211
  %tobool114 = icmp ne i32 %95, 0, !dbg !9209
  br i1 %tobool114, label %lor.lhs.false115, label %if.then118, !dbg !9212

lor.lhs.false115:                                 ; preds = %if.end112
  %96 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9213
  %swb_offset116 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %96, i32 0, i32 6, !dbg !9215
  %97 = load i16*, i16** %swb_offset116, align 8, !dbg !9215
  %tobool117 = icmp ne i16* %97, null, !dbg !9213
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !9216

if.then118:                                       ; preds = %lor.lhs.false115, %if.end112
  store i32 -558323010, i32* %ret_fail, align 4, !dbg !9217
  br label %fail, !dbg !9219

if.end119:                                        ; preds = %lor.lhs.false115
  br label %if.end144, !dbg !9220

if.else120:                                       ; preds = %lor.lhs.false
  %98 = load %struct.MPEG4AudioConfig*, %struct.MPEG4AudioConfig** %m4ac, align 8, !dbg !9221
  %frame_length_short121 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %98, i32 0, i32 11, !dbg !9224
  %99 = load i32, i32* %frame_length_short121, align 4, !dbg !9224
  %tobool122 = icmp ne i32 %99, 0, !dbg !9221
  br i1 %tobool122, label %if.then123, label %if.else131, !dbg !9225

if.then123:                                       ; preds = %if.else120
  %100 = load i32, i32* %sampling_index, align 4, !dbg !9226
  %idxprom124 = sext i32 %100 to i64, !dbg !9228
  %arrayidx125 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_960, i64 0, i64 %idxprom124, !dbg !9228
  %101 = load i8, i8* %arrayidx125, align 1, !dbg !9228
  %conv126 = zext i8 %101 to i32, !dbg !9228
  %102 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9229
  %num_swb127 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %102, i32 0, i32 8, !dbg !9230
  store i32 %conv126, i32* %num_swb127, align 8, !dbg !9231
  %103 = load i32, i32* %sampling_index, align 4, !dbg !9232
  %idxprom128 = sext i32 %103 to i64, !dbg !9233
  %arrayidx129 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_960, i64 0, i64 %idxprom128, !dbg !9233
  %104 = load i16*, i16** %arrayidx129, align 8, !dbg !9233
  %105 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9234
  %swb_offset130 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %105, i32 0, i32 6, !dbg !9235
  store i16* %104, i16** %swb_offset130, align 8, !dbg !9236
  br label %if.end139, !dbg !9237

if.else131:                                       ; preds = %if.else120
  %106 = load i32, i32* %sampling_index, align 4, !dbg !9238
  %idxprom132 = sext i32 %106 to i64, !dbg !9240
  %arrayidx133 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_1024, i64 0, i64 %idxprom132, !dbg !9240
  %107 = load i8, i8* %arrayidx133, align 1, !dbg !9240
  %conv134 = zext i8 %107 to i32, !dbg !9240
  %108 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9241
  %num_swb135 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %108, i32 0, i32 8, !dbg !9242
  store i32 %conv134, i32* %num_swb135, align 8, !dbg !9243
  %109 = load i32, i32* %sampling_index, align 4, !dbg !9244
  %idxprom136 = sext i32 %109 to i64, !dbg !9245
  %arrayidx137 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_1024, i64 0, i64 %idxprom136, !dbg !9245
  %110 = load i16*, i16** %arrayidx137, align 8, !dbg !9245
  %111 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9246
  %swb_offset138 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %111, i32 0, i32 6, !dbg !9247
  store i16* %110, i16** %swb_offset138, align 8, !dbg !9248
  br label %if.end139

if.end139:                                        ; preds = %if.else131, %if.then123
  %112 = load i32, i32* %sampling_index, align 4, !dbg !9249
  %idxprom140 = sext i32 %112 to i64, !dbg !9250
  %arrayidx141 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_1024, i64 0, i64 %idxprom140, !dbg !9250
  %113 = load i8, i8* %arrayidx141, align 1, !dbg !9250
  %conv142 = zext i8 %113 to i32, !dbg !9250
  %114 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9251
  %tns_max_bands143 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %114, i32 0, i32 10, !dbg !9252
  store i32 %conv142, i32* %tns_max_bands143, align 8, !dbg !9253
  br label %if.end144

if.end144:                                        ; preds = %if.end139, %if.end119
  %115 = load i32, i32* %aot, align 4, !dbg !9254
  %cmp145 = icmp ne i32 %115, 39, !dbg !9256
  br i1 %cmp145, label %if.then147, label %if.end150, !dbg !9257

if.then147:                                       ; preds = %if.end144
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9258
  %call148 = call i32 @get_bits1(%struct.GetBitContext* %116), !dbg !9260
  %117 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9261
  %predictor_present149 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %117, i32 0, i32 11, !dbg !9262
  store i32 %call148, i32* %predictor_present149, align 4, !dbg !9263
  %118 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9264
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %118, i32 0, i32 13, !dbg !9265
  store i32 0, i32* %predictor_reset_group, align 4, !dbg !9266
  br label %if.end150, !dbg !9267

if.end150:                                        ; preds = %if.then147, %if.end144
  %119 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9268
  %predictor_present151 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %119, i32 0, i32 11, !dbg !9270
  %120 = load i32, i32* %predictor_present151, align 4, !dbg !9270
  %tobool152 = icmp ne i32 %120, 0, !dbg !9268
  br i1 %tobool152, label %if.then153, label %if.end184, !dbg !9271

if.then153:                                       ; preds = %if.end150
  %121 = load i32, i32* %aot, align 4, !dbg !9272
  %cmp154 = icmp eq i32 %121, 1, !dbg !9275
  br i1 %cmp154, label %if.then156, label %if.else161, !dbg !9276

if.then156:                                       ; preds = %if.then153
  %122 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9277
  %123 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9280
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9281
  %call157 = call i32 @decode_prediction(%struct.AACContext* %122, %struct.IndividualChannelStream* %123, %struct.GetBitContext* %124), !dbg !9282
  %tobool158 = icmp ne i32 %call157, 0, !dbg !9282
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !9283

if.then159:                                       ; preds = %if.then156
  br label %fail, !dbg !9284

if.end160:                                        ; preds = %if.then156
  br label %if.end183, !dbg !9286

if.else161:                                       ; preds = %if.then153
  %125 = load i32, i32* %aot, align 4, !dbg !9287
  %cmp162 = icmp eq i32 %125, 2, !dbg !9290
  br i1 %cmp162, label %if.then167, label %lor.lhs.false164, !dbg !9291

lor.lhs.false164:                                 ; preds = %if.else161
  %126 = load i32, i32* %aot, align 4, !dbg !9292
  %cmp165 = icmp eq i32 %126, 17, !dbg !9293
  br i1 %cmp165, label %if.then167, label %if.else169, !dbg !9294

if.then167:                                       ; preds = %lor.lhs.false164, %if.else161
  %127 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9296
  %avctx168 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %127, i32 0, i32 1, !dbg !9298
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx168, align 8, !dbg !9298
  %129 = bitcast %struct.AVCodecContext* %128 to i8*, !dbg !9296
  call void (i8*, i32, i8*, ...) @av_log(i8* %129, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.61, i32 0, i32 0)), !dbg !9299
  br label %fail, !dbg !9300

if.else169:                                       ; preds = %lor.lhs.false164
  %130 = load i32, i32* %aot, align 4, !dbg !9301
  %cmp170 = icmp eq i32 %130, 23, !dbg !9304
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !9305

if.then172:                                       ; preds = %if.else169
  %131 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9306
  %avctx173 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %131, i32 0, i32 1, !dbg !9308
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx173, align 8, !dbg !9308
  %133 = bitcast %struct.AVCodecContext* %132 to i8*, !dbg !9306
  call void (i8*, i32, i8*, ...) @av_log(i8* %133, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.62, i32 0, i32 0)), !dbg !9309
  store i32 -1163346256, i32* %ret_fail, align 4, !dbg !9310
  br label %fail, !dbg !9311

if.end174:                                        ; preds = %if.else169
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9312
  %call175 = call i32 @get_bits(%struct.GetBitContext* %134, i32 1), !dbg !9314
  %conv176 = trunc i32 %call175 to i8, !dbg !9314
  %135 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9315
  %ltp = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %135, i32 0, i32 5, !dbg !9316
  %present = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp, i32 0, i32 0, !dbg !9317
  store i8 %conv176, i8* %present, align 4, !dbg !9318
  %tobool177 = icmp ne i8 %conv176, 0, !dbg !9318
  br i1 %tobool177, label %if.then178, label %if.end181, !dbg !9319

if.then178:                                       ; preds = %if.end174
  %136 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9320
  %ltp179 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %136, i32 0, i32 5, !dbg !9321
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9322
  %138 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9323
  %max_sfb180 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %138, i32 0, i32 0, !dbg !9324
  %139 = load i8, i8* %max_sfb180, align 8, !dbg !9324
  call void @decode_ltp(%struct.LongTermPrediction* %ltp179, %struct.GetBitContext* %137, i8 zeroext %139), !dbg !9325
  br label %if.end181, !dbg !9325

if.end181:                                        ; preds = %if.then178, %if.end174
  br label %if.end182

if.end182:                                        ; preds = %if.end181
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.end160
  br label %if.end184, !dbg !9326

if.end184:                                        ; preds = %if.end183, %if.end150
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end72
  %140 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9327
  %max_sfb186 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %140, i32 0, i32 0, !dbg !9329
  %141 = load i8, i8* %max_sfb186, align 8, !dbg !9329
  %conv187 = zext i8 %141 to i32, !dbg !9327
  %142 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9330
  %num_swb188 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %142, i32 0, i32 8, !dbg !9331
  %143 = load i32, i32* %num_swb188, align 8, !dbg !9331
  %cmp189 = icmp sgt i32 %conv187, %143, !dbg !9332
  br i1 %cmp189, label %if.then191, label %if.end196, !dbg !9333

if.then191:                                       ; preds = %if.end185
  %144 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9334
  %avctx192 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %144, i32 0, i32 1, !dbg !9336
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx192, align 8, !dbg !9336
  %146 = bitcast %struct.AVCodecContext* %145 to i8*, !dbg !9334
  %147 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9337
  %max_sfb193 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %147, i32 0, i32 0, !dbg !9338
  %148 = load i8, i8* %max_sfb193, align 8, !dbg !9338
  %conv194 = zext i8 %148 to i32, !dbg !9337
  %149 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9339
  %num_swb195 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %149, i32 0, i32 8, !dbg !9340
  %150 = load i32, i32* %num_swb195, align 8, !dbg !9340
  call void (i8*, i32, i8*, ...) @av_log(i8* %146, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.63, i32 0, i32 0), i32 %conv194, i32 %150), !dbg !9341
  br label %fail, !dbg !9342

if.end196:                                        ; preds = %if.end185
  store i32 0, i32* %retval, align 4, !dbg !9343
  br label %return, !dbg !9343

fail:                                             ; preds = %if.then191, %if.then172, %if.then167, %if.then159, %if.then118
  %151 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9344
  %max_sfb197 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %151, i32 0, i32 0, !dbg !9345
  store i8 0, i8* %max_sfb197, align 8, !dbg !9346
  %152 = load i32, i32* %ret_fail, align 4, !dbg !9347
  store i32 %152, i32* %retval, align 4, !dbg !9348
  br label %return, !dbg !9348

return:                                           ; preds = %fail, %if.end196, %if.then18, %if.then6
  %153 = load i32, i32* %retval, align 4, !dbg !9349
  ret i32 %153, !dbg !9349
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_band_types(%struct.AACContext* %ac, i32* %band_type, i32* %band_type_run_end, %struct.GetBitContext* %gb, %struct.IndividualChannelStream* %ics) #1 !dbg !9350 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %band_type.addr = alloca i32*, align 8
  %band_type_run_end.addr = alloca i32*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %g = alloca i32, align 4
  %idx = alloca i32, align 4
  %bits = alloca i32, align 4
  %k = alloca i32, align 4
  %sect_end = alloca i8, align 1
  %sect_len_incr = alloca i32, align 4
  %sect_band_type = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9354, metadata !2062), !dbg !9355
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !9356, metadata !2062), !dbg !9357
  store i32* %band_type_run_end, i32** %band_type_run_end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type_run_end.addr, metadata !9358, metadata !2062), !dbg !9359
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9360, metadata !2062), !dbg !9361
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !9362, metadata !2062), !dbg !9363
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9364, metadata !2062), !dbg !9365
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9366, metadata !2062), !dbg !9367
  store i32 0, i32* %idx, align 4, !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !9368, metadata !2062), !dbg !9369
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9370
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 1, !dbg !9371
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !9370
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9370
  %cmp = icmp eq i32 %1, 2, !dbg !9372
  %cond = select i1 %cmp, i32 3, i32 5, !dbg !9373
  store i32 %cond, i32* %bits, align 4, !dbg !9369
  store i32 0, i32* %g, align 4, !dbg !9374
  br label %for.cond, !dbg !9376

for.cond:                                         ; preds = %for.inc39, %entry
  %2 = load i32, i32* %g, align 4, !dbg !9377
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9380
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 3, !dbg !9381
  %4 = load i32, i32* %num_window_groups, align 8, !dbg !9381
  %cmp1 = icmp slt i32 %2, %4, !dbg !9382
  br i1 %cmp1, label %for.body, label %for.end41, !dbg !9383

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9384, metadata !2062), !dbg !9386
  store i32 0, i32* %k, align 4, !dbg !9386
  br label %while.cond, !dbg !9387

while.cond:                                       ; preds = %for.end, %for.body
  %5 = load i32, i32* %k, align 4, !dbg !9388
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9390
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 0, !dbg !9391
  %7 = load i8, i8* %max_sfb, align 8, !dbg !9391
  %conv = zext i8 %7 to i32, !dbg !9390
  %cmp2 = icmp slt i32 %5, %conv, !dbg !9392
  br i1 %cmp2, label %while.body, label %while.end, !dbg !9393

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %sect_end, metadata !9394, metadata !2062), !dbg !9396
  %8 = load i32, i32* %k, align 4, !dbg !9397
  %conv4 = trunc i32 %8 to i8, !dbg !9397
  store i8 %conv4, i8* %sect_end, align 1, !dbg !9396
  call void @llvm.dbg.declare(metadata i32* %sect_len_incr, metadata !9398, metadata !2062), !dbg !9399
  call void @llvm.dbg.declare(metadata i32* %sect_band_type, metadata !9400, metadata !2062), !dbg !9401
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9402
  %call = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !9403
  store i32 %call, i32* %sect_band_type, align 4, !dbg !9401
  %10 = load i32, i32* %sect_band_type, align 4, !dbg !9404
  %cmp5 = icmp eq i32 %10, 12, !dbg !9406
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9407

if.then:                                          ; preds = %while.body
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9408
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 1, !dbg !9410
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9410
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !9408
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0)), !dbg !9411
  store i32 -1094995529, i32* %retval, align 4, !dbg !9412
  br label %return, !dbg !9412

if.end:                                           ; preds = %while.body
  br label %do.body, !dbg !9413, !llvm.loop !9414

do.body:                                          ; preds = %do.cond, %if.end
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9415
  %15 = load i32, i32* %bits, align 4, !dbg !9417
  %call7 = call i32 @get_bits(%struct.GetBitContext* %14, i32 %15), !dbg !9418
  store i32 %call7, i32* %sect_len_incr, align 4, !dbg !9419
  %16 = load i32, i32* %sect_len_incr, align 4, !dbg !9420
  %17 = load i8, i8* %sect_end, align 1, !dbg !9421
  %conv8 = zext i8 %17 to i32, !dbg !9421
  %add = add nsw i32 %conv8, %16, !dbg !9421
  %conv9 = trunc i32 %add to i8, !dbg !9421
  store i8 %conv9, i8* %sect_end, align 1, !dbg !9421
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9422
  %call10 = call i32 @get_bits_left(%struct.GetBitContext* %18), !dbg !9424
  %cmp11 = icmp slt i32 %call10, 0, !dbg !9425
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !9426

if.then13:                                        ; preds = %do.body
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9427
  %avctx14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !9429
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !9429
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !9427
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.66, i32 0, i32 0)), !dbg !9430
  store i32 -1094995529, i32* %retval, align 4, !dbg !9431
  br label %return, !dbg !9431

if.end15:                                         ; preds = %do.body
  %22 = load i8, i8* %sect_end, align 1, !dbg !9432
  %conv16 = zext i8 %22 to i32, !dbg !9432
  %23 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9434
  %max_sfb17 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %23, i32 0, i32 0, !dbg !9435
  %24 = load i8, i8* %max_sfb17, align 8, !dbg !9435
  %conv18 = zext i8 %24 to i32, !dbg !9434
  %cmp19 = icmp sgt i32 %conv16, %conv18, !dbg !9436
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !9437

if.then21:                                        ; preds = %if.end15
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9438
  %avctx22 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 1, !dbg !9440
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx22, align 8, !dbg !9440
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !9438
  %28 = load i8, i8* %sect_end, align 1, !dbg !9441
  %conv23 = zext i8 %28 to i32, !dbg !9441
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9442
  %max_sfb24 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 0, !dbg !9443
  %30 = load i8, i8* %max_sfb24, align 8, !dbg !9443
  %conv25 = zext i8 %30 to i32, !dbg !9442
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i32 0, i32 0), i32 %conv23, i32 %conv25), !dbg !9444
  store i32 -1094995529, i32* %retval, align 4, !dbg !9445
  br label %return, !dbg !9445

if.end26:                                         ; preds = %if.end15
  br label %do.cond, !dbg !9446

do.cond:                                          ; preds = %if.end26
  %31 = load i32, i32* %sect_len_incr, align 4, !dbg !9447
  %32 = load i32, i32* %bits, align 4, !dbg !9449
  %shl = shl i32 1, %32, !dbg !9450
  %sub = sub nsw i32 %shl, 1, !dbg !9451
  %cmp27 = icmp eq i32 %31, %sub, !dbg !9452
  br i1 %cmp27, label %do.body, label %do.end, !dbg !9453, !llvm.loop !9414

do.end:                                           ; preds = %do.cond
  br label %for.cond29, !dbg !9454

for.cond29:                                       ; preds = %for.inc, %do.end
  %33 = load i32, i32* %k, align 4, !dbg !9455
  %34 = load i8, i8* %sect_end, align 1, !dbg !9459
  %conv30 = zext i8 %34 to i32, !dbg !9459
  %cmp31 = icmp slt i32 %33, %conv30, !dbg !9460
  br i1 %cmp31, label %for.body33, label %for.end, !dbg !9461

for.body33:                                       ; preds = %for.cond29
  %35 = load i32, i32* %sect_band_type, align 4, !dbg !9462
  %36 = load i32, i32* %idx, align 4, !dbg !9464
  %idxprom = sext i32 %36 to i64, !dbg !9465
  %37 = load i32*, i32** %band_type.addr, align 8, !dbg !9465
  %arrayidx34 = getelementptr inbounds i32, i32* %37, i64 %idxprom, !dbg !9465
  store i32 %35, i32* %arrayidx34, align 4, !dbg !9466
  %38 = load i8, i8* %sect_end, align 1, !dbg !9467
  %conv35 = zext i8 %38 to i32, !dbg !9467
  %39 = load i32, i32* %idx, align 4, !dbg !9468
  %inc = add nsw i32 %39, 1, !dbg !9468
  store i32 %inc, i32* %idx, align 4, !dbg !9468
  %idxprom36 = sext i32 %39 to i64, !dbg !9469
  %40 = load i32*, i32** %band_type_run_end.addr, align 8, !dbg !9469
  %arrayidx37 = getelementptr inbounds i32, i32* %40, i64 %idxprom36, !dbg !9469
  store i32 %conv35, i32* %arrayidx37, align 4, !dbg !9470
  br label %for.inc, !dbg !9471

for.inc:                                          ; preds = %for.body33
  %41 = load i32, i32* %k, align 4, !dbg !9472
  %inc38 = add nsw i32 %41, 1, !dbg !9472
  store i32 %inc38, i32* %k, align 4, !dbg !9472
  br label %for.cond29, !dbg !9474, !llvm.loop !9475

for.end:                                          ; preds = %for.cond29
  br label %while.cond, !dbg !9476, !llvm.loop !9478

while.end:                                        ; preds = %while.cond
  br label %for.inc39, !dbg !9479

for.inc39:                                        ; preds = %while.end
  %42 = load i32, i32* %g, align 4, !dbg !9480
  %inc40 = add nsw i32 %42, 1, !dbg !9480
  store i32 %inc40, i32* %g, align 4, !dbg !9480
  br label %for.cond, !dbg !9482, !llvm.loop !9483

for.end41:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9485
  br label %return, !dbg !9485

return:                                           ; preds = %for.end41, %if.then21, %if.then13, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !9486
  ret i32 %43, !dbg !9486
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_scalefactors(%struct.AACContext* %ac, float* %sf, %struct.GetBitContext* %gb, i32 %global_gain, %struct.IndividualChannelStream* %ics, i32* %band_type, i32* %band_type_run_end) #1 !dbg !9487 {
entry:
  %x.addr.i96.i285 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i285, metadata !6126, metadata !2062), !dbg !9490
  %x.addr.i81.i286 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i286, metadata !6126, metadata !2062), !dbg !9515
  %x.addr.i.i287 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i287, metadata !6126, metadata !2062), !dbg !9518
  %s.addr.i288 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i288, metadata !9520, metadata !2062), !dbg !9521
  %table.addr.i289 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i289, metadata !9522, metadata !2062), !dbg !9523
  %bits.addr.i290 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i290, metadata !9524, metadata !2062), !dbg !9525
  %max_depth.addr.i291 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i291, metadata !9526, metadata !2062), !dbg !9527
  %code.i292 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i292, metadata !9528, metadata !2062), !dbg !9529
  %re_index.i293 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i293, metadata !9530, metadata !2062), !dbg !9531
  %re_cache.i294 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i294, metadata !9532, metadata !2062), !dbg !9533
  %re_size_plus8.i295 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i295, metadata !9534, metadata !2062), !dbg !9535
  %n.i296 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i296, metadata !9536, metadata !2062), !dbg !9537
  %nb_bits.i297 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i297, metadata !9538, metadata !2062), !dbg !9539
  %index1.i298 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i298, metadata !9540, metadata !2062), !dbg !9541
  %retval.i274 = alloca i32, align 4
  %a.addr.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i275, metadata !5447, metadata !2062), !dbg !9542
  %amin.addr.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i276, metadata !5454, metadata !2062), !dbg !9548
  %amax.addr.i277 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i277, metadata !5456, metadata !2062), !dbg !9549
  %x.addr.i96.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i128, metadata !6126, metadata !2062), !dbg !9550
  %x.addr.i81.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i129, metadata !6126, metadata !2062), !dbg !9554
  %x.addr.i.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i130, metadata !6126, metadata !2062), !dbg !9556
  %s.addr.i131 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i131, metadata !9520, metadata !2062), !dbg !9558
  %table.addr.i132 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i132, metadata !9522, metadata !2062), !dbg !9559
  %bits.addr.i133 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i133, metadata !9524, metadata !2062), !dbg !9560
  %max_depth.addr.i134 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i134, metadata !9526, metadata !2062), !dbg !9561
  %code.i135 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i135, metadata !9528, metadata !2062), !dbg !9562
  %re_index.i136 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i136, metadata !9530, metadata !2062), !dbg !9563
  %re_cache.i137 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i137, metadata !9532, metadata !2062), !dbg !9564
  %re_size_plus8.i138 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i138, metadata !9534, metadata !2062), !dbg !9565
  %n.i139 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i139, metadata !9536, metadata !2062), !dbg !9566
  %nb_bits.i140 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i140, metadata !9538, metadata !2062), !dbg !9567
  %index1.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i141, metadata !9540, metadata !2062), !dbg !9568
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5447, metadata !2062), !dbg !9569
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5454, metadata !2062), !dbg !9575
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5456, metadata !2062), !dbg !9576
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6126, metadata !2062), !dbg !9577
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6126, metadata !2062), !dbg !9580
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6126, metadata !2062), !dbg !9582
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !9520, metadata !2062), !dbg !9584
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !9522, metadata !2062), !dbg !9585
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !9524, metadata !2062), !dbg !9586
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !9526, metadata !2062), !dbg !9587
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !9528, metadata !2062), !dbg !9588
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !9530, metadata !2062), !dbg !9589
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !9532, metadata !2062), !dbg !9590
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !9534, metadata !2062), !dbg !9591
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !9536, metadata !2062), !dbg !9592
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !9538, metadata !2062), !dbg !9593
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !9540, metadata !2062), !dbg !9594
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sf.addr = alloca float*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %global_gain.addr = alloca i32, align 4
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %band_type.addr = alloca i32*, align 8
  %band_type_run_end.addr = alloca i32*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %offset = alloca [3 x i32], align 4
  %clipped_offset = alloca i32, align 4
  %noise_flag = alloca i32, align 4
  %run_end = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9595, metadata !2062), !dbg !9596
  store float* %sf, float** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sf.addr, metadata !9597, metadata !2062), !dbg !9598
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9599, metadata !2062), !dbg !9600
  store i32 %global_gain, i32* %global_gain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global_gain.addr, metadata !9601, metadata !2062), !dbg !9602
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !9603, metadata !2062), !dbg !9604
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !9605, metadata !2062), !dbg !9606
  store i32* %band_type_run_end, i32** %band_type_run_end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type_run_end.addr, metadata !9607, metadata !2062), !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9609, metadata !2062), !dbg !9610
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9611, metadata !2062), !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9613, metadata !2062), !dbg !9614
  store i32 0, i32* %idx, align 4, !dbg !9614
  call void @llvm.dbg.declare(metadata [3 x i32]* %offset, metadata !9615, metadata !2062), !dbg !9617
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !9618
  %0 = load i32, i32* %global_gain.addr, align 4, !dbg !9619
  store i32 %0, i32* %arrayinit.begin, align 4, !dbg !9618
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !9618
  %1 = load i32, i32* %global_gain.addr, align 4, !dbg !9620
  %sub = sub i32 %1, 90, !dbg !9621
  store i32 %sub, i32* %arrayinit.element, align 4, !dbg !9618
  %arrayinit.element1 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !9618
  store i32 0, i32* %arrayinit.element1, align 4, !dbg !9618
  call void @llvm.dbg.declare(metadata i32* %clipped_offset, metadata !9622, metadata !2062), !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %noise_flag, metadata !9624, metadata !2062), !dbg !9625
  store i32 1, i32* %noise_flag, align 4, !dbg !9625
  store i32 0, i32* %g, align 4, !dbg !9626
  br label %for.cond, !dbg !9627

for.cond:                                         ; preds = %for.inc123, %entry
  %2 = load i32, i32* %g, align 4, !dbg !9628
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9630
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 3, !dbg !9631
  %4 = load i32, i32* %num_window_groups, align 8, !dbg !9631
  %cmp = icmp slt i32 %2, %4, !dbg !9632
  br i1 %cmp, label %for.body, label %for.end125, !dbg !9633

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9634
  br label %for.cond2, !dbg !9635

for.cond2:                                        ; preds = %if.end121, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !9636
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !9638
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 0, !dbg !9639
  %7 = load i8, i8* %max_sfb, align 8, !dbg !9639
  %conv = zext i8 %7 to i32, !dbg !9638
  %cmp3 = icmp slt i32 %5, %conv, !dbg !9640
  br i1 %cmp3, label %for.body5, label %for.end122, !dbg !9641

for.body5:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %run_end, metadata !9642, metadata !2062), !dbg !9643
  %8 = load i32, i32* %idx, align 4, !dbg !9644
  %idxprom = sext i32 %8 to i64, !dbg !9645
  %9 = load i32*, i32** %band_type_run_end.addr, align 8, !dbg !9645
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !9645
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9645
  store i32 %10, i32* %run_end, align 4, !dbg !9643
  %11 = load i32, i32* %idx, align 4, !dbg !9646
  %idxprom6 = sext i32 %11 to i64, !dbg !9647
  %12 = load i32*, i32** %band_type.addr, align 8, !dbg !9647
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6, !dbg !9647
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !9647
  %cmp8 = icmp eq i32 %13, 0, !dbg !9648
  br i1 %cmp8, label %if.then, label %if.else, !dbg !9649

if.then:                                          ; preds = %for.body5
  br label %for.cond10, !dbg !9650

for.cond10:                                       ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !9652
  %15 = load i32, i32* %run_end, align 4, !dbg !9656
  %cmp11 = icmp slt i32 %14, %15, !dbg !9657
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !9658

for.body13:                                       ; preds = %for.cond10
  %16 = load i32, i32* %idx, align 4, !dbg !9659
  %idxprom14 = sext i32 %16 to i64, !dbg !9660
  %17 = load float*, float** %sf.addr, align 8, !dbg !9660
  %arrayidx15 = getelementptr inbounds float, float* %17, i64 %idxprom14, !dbg !9660
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !9661
  br label %for.inc, !dbg !9660

for.inc:                                          ; preds = %for.body13
  %18 = load i32, i32* %i, align 4, !dbg !9662
  %inc = add nsw i32 %18, 1, !dbg !9662
  store i32 %inc, i32* %i, align 4, !dbg !9662
  %19 = load i32, i32* %idx, align 4, !dbg !9664
  %inc16 = add nsw i32 %19, 1, !dbg !9664
  store i32 %inc16, i32* %idx, align 4, !dbg !9664
  br label %for.cond10, !dbg !9665, !llvm.loop !9666

for.end:                                          ; preds = %for.cond10
  br label %if.end121, !dbg !9667

if.else:                                          ; preds = %for.body5
  %20 = load i32, i32* %idx, align 4, !dbg !9668
  %idxprom17 = sext i32 %20 to i64, !dbg !9670
  %21 = load i32*, i32** %band_type.addr, align 8, !dbg !9670
  %arrayidx18 = getelementptr inbounds i32, i32* %21, i64 %idxprom17, !dbg !9670
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !9670
  %cmp19 = icmp eq i32 %22, 15, !dbg !9671
  br i1 %cmp19, label %if.then25, label %lor.lhs.false, !dbg !9672

lor.lhs.false:                                    ; preds = %if.else
  %23 = load i32, i32* %idx, align 4, !dbg !9673
  %idxprom21 = sext i32 %23 to i64, !dbg !9674
  %24 = load i32*, i32** %band_type.addr, align 8, !dbg !9674
  %arrayidx22 = getelementptr inbounds i32, i32* %24, i64 %idxprom21, !dbg !9674
  %25 = load i32, i32* %arrayidx22, align 4, !dbg !9674
  %cmp23 = icmp eq i32 %25, 14, !dbg !9675
  br i1 %cmp23, label %if.then25, label %if.else49, !dbg !9676

if.then25:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.cond26, !dbg !9678

for.cond26:                                       ; preds = %for.inc45, %if.then25
  %26 = load i32, i32* %i, align 4, !dbg !9679
  %27 = load i32, i32* %run_end, align 4, !dbg !9681
  %cmp27 = icmp slt i32 %26, %27, !dbg !9682
  br i1 %cmp27, label %for.body29, label %for.end48, !dbg !9683

for.body29:                                       ; preds = %for.cond26
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9684
  %29 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !9685
  store %struct.GetBitContext* %28, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9686
  store [2 x i16]* %29, [2 x i16]** %table.addr.i, align 8, !dbg !9686
  store i32 7, i32* %bits.addr.i, align 4, !dbg !9686
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !9686
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9687
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %30, i32 0, i32 2, !dbg !9688
  %31 = load i32, i32* %index.i, align 8, !dbg !9688
  store i32 %31, i32* %re_index.i, align 4, !dbg !9589
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9689
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 4, !dbg !9690
  %33 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9690
  store i32 %33, i32* %re_size_plus8.i, align 4, !dbg !9591
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9691
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 0, !dbg !9692
  %35 = load i8*, i8** %buffer.i, align 8, !dbg !9692
  %36 = load i32, i32* %re_index.i, align 4, !dbg !9693
  %shr.i = lshr i32 %36, 3, !dbg !9694
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9695
  %add.ptr.i = getelementptr inbounds i8, i8* %35, i64 %idx.ext.i, !dbg !9695
  %37 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9696
  %l.i = bitcast %union.unaligned_32* %37 to i32*, !dbg !9696
  %38 = load i32, i32* %l.i, align 1, !dbg !9696
  store i32 %38, i32* %x.addr.i.i, align 4, !dbg !9697
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !9698
  %shl.i.i = shl i32 %39, 8, !dbg !9699
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9700
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !9701
  %shr.i.i = lshr i32 %40, 8, !dbg !9702
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9703
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9704
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9705
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !9706
  %shr3.i.i = lshr i32 %41, 16, !dbg !9707
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9708
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9709
  %42 = load i32, i32* %x.addr.i.i, align 4, !dbg !9710
  %shr6.i.i = lshr i32 %42, 16, !dbg !9711
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9712
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9713
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9714
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9715
  %43 = load i32, i32* %re_index.i, align 4, !dbg !9716
  %and.i = and i32 %43, 7, !dbg !9717
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9718
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9719
  %44 = load i32, i32* %re_cache.i, align 4, !dbg !9720
  %45 = load i32, i32* %bits.addr.i, align 4, !dbg !9722
  %conv.i = trunc i32 %45 to i8, !dbg !9722
  %call2.i = call i32 @NEG_USR32(i32 %44, i8 signext %conv.i) #10, !dbg !9723
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9724
  %46 = load i32, i32* %index1.i, align 4, !dbg !9725
  %idxprom.i = zext i32 %46 to i64, !dbg !9726
  %47 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9726
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %47, i64 %idxprom.i, !dbg !9726
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9726
  %48 = load i16, i16* %arrayidx3.i, align 2, !dbg !9726
  %conv4.i = sext i16 %48 to i32, !dbg !9726
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9727
  %49 = load i32, i32* %index1.i, align 4, !dbg !9728
  %idxprom5.i = zext i32 %49 to i64, !dbg !9729
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9729
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom5.i, !dbg !9729
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9729
  %51 = load i16, i16* %arrayidx7.i, align 2, !dbg !9729
  %conv8.i = sext i16 %51 to i32, !dbg !9729
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9730
  %52 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9731
  %cmp.i = icmp sgt i32 %52, 1, !dbg !9732
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9733

land.lhs.true.i:                                  ; preds = %for.body29
  %53 = load i32, i32* %n.i, align 4, !dbg !9734
  %cmp10.i = icmp slt i32 %53, 0, !dbg !9736
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9737

if.then.i:                                        ; preds = %land.lhs.true.i
  %54 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9738
  %55 = load i32, i32* %re_index.i, align 4, !dbg !9740
  %56 = load i32, i32* %bits.addr.i, align 4, !dbg !9741
  %add.i = add i32 %55, %56, !dbg !9742
  %cmp12.i = icmp ugt i32 %54, %add.i, !dbg !9743
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9744

cond.true.i:                                      ; preds = %if.then.i
  %57 = load i32, i32* %re_index.i, align 4, !dbg !9745
  %58 = load i32, i32* %bits.addr.i, align 4, !dbg !9747
  %add14.i = add i32 %57, %58, !dbg !9748
  br label %cond.end.i, !dbg !9749

cond.false.i:                                     ; preds = %if.then.i
  %59 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9750
  br label %cond.end.i, !dbg !9752

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %59, %cond.false.i ], !dbg !9753
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9754
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9755
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %60, i32 0, i32 0, !dbg !9756
  %61 = load i8*, i8** %buffer15.i, align 8, !dbg !9756
  %62 = load i32, i32* %re_index.i, align 4, !dbg !9757
  %shr16.i = lshr i32 %62, 3, !dbg !9758
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9759
  %add.ptr18.i = getelementptr inbounds i8, i8* %61, i64 %idx.ext17.i, !dbg !9759
  %63 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9760
  %l19.i = bitcast %union.unaligned_32* %63 to i32*, !dbg !9760
  %64 = load i32, i32* %l19.i, align 1, !dbg !9760
  store i32 %64, i32* %x.addr.i81.i, align 4, !dbg !9761
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9762
  %shl.i82.i = shl i32 %65, 8, !dbg !9763
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9764
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9765
  %shr.i84.i = lshr i32 %66, 8, !dbg !9766
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9767
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9768
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9769
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9770
  %shr3.i88.i = lshr i32 %67, 16, !dbg !9771
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9772
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9773
  %68 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9774
  %shr6.i91.i = lshr i32 %68, 16, !dbg !9775
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9776
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9777
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9778
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9779
  %69 = load i32, i32* %re_index.i, align 4, !dbg !9780
  %and21.i = and i32 %69, 7, !dbg !9781
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9782
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9783
  %70 = load i32, i32* %n.i, align 4, !dbg !9784
  %sub.i = sub nsw i32 0, %70, !dbg !9785
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9786
  %71 = load i32, i32* %re_cache.i, align 4, !dbg !9787
  %72 = load i32, i32* %nb_bits.i, align 4, !dbg !9788
  %conv23.i = trunc i32 %72 to i8, !dbg !9788
  %call24.i = call i32 @NEG_USR32(i32 %71, i8 signext %conv23.i) #10, !dbg !9789
  %73 = load i32, i32* %code.i, align 4, !dbg !9791
  %add25.i = add i32 %call24.i, %73, !dbg !9792
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9793
  %74 = load i32, i32* %index1.i, align 4, !dbg !9794
  %idxprom26.i = zext i32 %74 to i64, !dbg !9795
  %75 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9795
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %75, i64 %idxprom26.i, !dbg !9795
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9795
  %76 = load i16, i16* %arrayidx28.i, align 2, !dbg !9795
  %conv29.i = sext i16 %76 to i32, !dbg !9795
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9796
  %77 = load i32, i32* %index1.i, align 4, !dbg !9797
  %idxprom30.i = zext i32 %77 to i64, !dbg !9798
  %78 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9798
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom30.i, !dbg !9798
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9798
  %79 = load i16, i16* %arrayidx32.i, align 2, !dbg !9798
  %conv33.i = sext i16 %79 to i32, !dbg !9798
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9799
  %80 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9800
  %cmp34.i = icmp sgt i32 %80, 2, !dbg !9801
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9802

land.lhs.true36.i:                                ; preds = %cond.end.i
  %81 = load i32, i32* %n.i, align 4, !dbg !9803
  %cmp37.i = icmp slt i32 %81, 0, !dbg !9805
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9806

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %82 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9807
  %83 = load i32, i32* %re_index.i, align 4, !dbg !9809
  %84 = load i32, i32* %nb_bits.i, align 4, !dbg !9810
  %add40.i = add i32 %83, %84, !dbg !9811
  %cmp41.i = icmp ugt i32 %82, %add40.i, !dbg !9812
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9813

cond.true43.i:                                    ; preds = %if.then39.i
  %85 = load i32, i32* %re_index.i, align 4, !dbg !9814
  %86 = load i32, i32* %nb_bits.i, align 4, !dbg !9816
  %add44.i = add i32 %85, %86, !dbg !9817
  br label %cond.end46.i, !dbg !9818

cond.false45.i:                                   ; preds = %if.then39.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9819
  br label %cond.end46.i, !dbg !9821

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %87, %cond.false45.i ], !dbg !9822
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9823
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9824
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %88, i32 0, i32 0, !dbg !9825
  %89 = load i8*, i8** %buffer48.i, align 8, !dbg !9825
  %90 = load i32, i32* %re_index.i, align 4, !dbg !9826
  %shr49.i = lshr i32 %90, 3, !dbg !9827
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9828
  %add.ptr51.i = getelementptr inbounds i8, i8* %89, i64 %idx.ext50.i, !dbg !9828
  %91 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9829
  %l52.i = bitcast %union.unaligned_32* %91 to i32*, !dbg !9829
  %92 = load i32, i32* %l52.i, align 1, !dbg !9829
  store i32 %92, i32* %x.addr.i96.i, align 4, !dbg !9830
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9831
  %shl.i97.i = shl i32 %93, 8, !dbg !9832
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9833
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9834
  %shr.i99.i = lshr i32 %94, 8, !dbg !9835
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9836
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9837
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9838
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9839
  %shr3.i103.i = lshr i32 %95, 16, !dbg !9840
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9841
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9842
  %96 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9843
  %shr6.i106.i = lshr i32 %96, 16, !dbg !9844
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9845
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9846
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9847
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9848
  %97 = load i32, i32* %re_index.i, align 4, !dbg !9849
  %and54.i = and i32 %97, 7, !dbg !9850
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9851
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9852
  %98 = load i32, i32* %n.i, align 4, !dbg !9853
  %sub56.i = sub nsw i32 0, %98, !dbg !9854
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9855
  %99 = load i32, i32* %re_cache.i, align 4, !dbg !9856
  %100 = load i32, i32* %nb_bits.i, align 4, !dbg !9857
  %conv57.i = trunc i32 %100 to i8, !dbg !9857
  %call58.i = call i32 @NEG_USR32(i32 %99, i8 signext %conv57.i) #10, !dbg !9858
  %101 = load i32, i32* %code.i, align 4, !dbg !9860
  %add59.i = add i32 %call58.i, %101, !dbg !9861
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9862
  %102 = load i32, i32* %index1.i, align 4, !dbg !9863
  %idxprom60.i = zext i32 %102 to i64, !dbg !9864
  %103 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9864
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %103, i64 %idxprom60.i, !dbg !9864
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9864
  %104 = load i16, i16* %arrayidx62.i, align 2, !dbg !9864
  %conv63.i = sext i16 %104 to i32, !dbg !9864
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9865
  %105 = load i32, i32* %index1.i, align 4, !dbg !9866
  %idxprom64.i = zext i32 %105 to i64, !dbg !9867
  %106 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9867
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %106, i64 %idxprom64.i, !dbg !9867
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9867
  %107 = load i16, i16* %arrayidx66.i, align 2, !dbg !9867
  %conv67.i = sext i16 %107 to i32, !dbg !9867
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9868
  br label %if.end.i, !dbg !9869

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9870

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body29
  %108 = load i32, i32* %n.i, align 4, !dbg !9872
  %109 = load i32, i32* %re_cache.i, align 4, !dbg !9875
  %shl70.i = shl i32 %109, %108, !dbg !9875
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9875
  %110 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9876
  %111 = load i32, i32* %re_index.i, align 4, !dbg !9877
  %112 = load i32, i32* %n.i, align 4, !dbg !9878
  %add71.i = add i32 %111, %112, !dbg !9879
  %cmp72.i = icmp ugt i32 %110, %add71.i, !dbg !9880
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9881

cond.true74.i:                                    ; preds = %if.end68.i
  %113 = load i32, i32* %re_index.i, align 4, !dbg !9882
  %114 = load i32, i32* %n.i, align 4, !dbg !9884
  %add75.i = add i32 %113, %114, !dbg !9885
  br label %get_vlc2.exit, !dbg !9886

cond.false76.i:                                   ; preds = %if.end68.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9887
  br label %get_vlc2.exit, !dbg !9889

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %115, %cond.false76.i ], !dbg !9890
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !9892
  %116 = load i32, i32* %re_index.i, align 4, !dbg !9893
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9894
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 2, !dbg !9895
  store i32 %116, i32* %index80.i, align 8, !dbg !9896
  %118 = load i32, i32* %code.i, align 4, !dbg !9897
  %sub30 = sub nsw i32 %118, 60, !dbg !9898
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !9899
  %119 = load i32, i32* %arrayidx31, align 4, !dbg !9900
  %add = add nsw i32 %119, %sub30, !dbg !9900
  store i32 %add, i32* %arrayidx31, align 4, !dbg !9900
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !9901
  %120 = load i32, i32* %arrayidx32, align 4, !dbg !9901
  store i32 %120, i32* %a.addr.i, align 4, !dbg !9902
  store i32 -155, i32* %amin.addr.i, align 4, !dbg !9902
  store i32 100, i32* %amax.addr.i, align 4, !dbg !9902
  %121 = load i32, i32* %a.addr.i, align 4, !dbg !9903
  %122 = load i32, i32* %amin.addr.i, align 4, !dbg !9904
  %cmp.i126 = icmp slt i32 %121, %122, !dbg !9905
  br i1 %cmp.i126, label %if.then.i127, label %if.else.i, !dbg !9906

if.then.i127:                                     ; preds = %get_vlc2.exit
  %123 = load i32, i32* %amin.addr.i, align 4, !dbg !9907
  store i32 %123, i32* %retval.i, align 4, !dbg !9908
  br label %av_clip_c.exit, !dbg !9908

if.else.i:                                        ; preds = %get_vlc2.exit
  %124 = load i32, i32* %a.addr.i, align 4, !dbg !9909
  %125 = load i32, i32* %amax.addr.i, align 4, !dbg !9910
  %cmp1.i = icmp sgt i32 %124, %125, !dbg !9911
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !9912

if.then2.i:                                       ; preds = %if.else.i
  %126 = load i32, i32* %amax.addr.i, align 4, !dbg !9913
  store i32 %126, i32* %retval.i, align 4, !dbg !9914
  br label %av_clip_c.exit, !dbg !9914

if.else3.i:                                       ; preds = %if.else.i
  %127 = load i32, i32* %a.addr.i, align 4, !dbg !9915
  store i32 %127, i32* %retval.i, align 4, !dbg !9916
  br label %av_clip_c.exit, !dbg !9916

av_clip_c.exit:                                   ; preds = %if.then.i127, %if.then2.i, %if.else3.i
  %128 = load i32, i32* %retval.i, align 4, !dbg !9917
  store i32 %128, i32* %clipped_offset, align 4, !dbg !9918
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !9919
  %129 = load i32, i32* %arrayidx34, align 4, !dbg !9919
  %130 = load i32, i32* %clipped_offset, align 4, !dbg !9921
  %cmp35 = icmp ne i32 %129, %130, !dbg !9922
  br i1 %cmp35, label %if.then37, label %if.end, !dbg !9923

if.then37:                                        ; preds = %av_clip_c.exit
  %131 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9924
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %131, i32 0, i32 1, !dbg !9926
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9926
  %133 = bitcast %struct.AVCodecContext* %132 to i8*, !dbg !9924
  %arrayidx38 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 2, !dbg !9927
  %134 = load i32, i32* %arrayidx38, align 4, !dbg !9927
  %135 = load i32, i32* %clipped_offset, align 4, !dbg !9928
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %133, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.68, i32 0, i32 0), i32 %134, i32 %135), !dbg !9929
  br label %if.end, !dbg !9930

if.end:                                           ; preds = %if.then37, %av_clip_c.exit
  %136 = load i32, i32* %clipped_offset, align 4, !dbg !9931
  %sub39 = sub nsw i32 0, %136, !dbg !9932
  %add40 = add nsw i32 %sub39, 200, !dbg !9933
  %idxprom41 = sext i32 %add40 to i64, !dbg !9934
  %arrayidx42 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom41, !dbg !9934
  %137 = load float, float* %arrayidx42, align 4, !dbg !9934
  %138 = load i32, i32* %idx, align 4, !dbg !9935
  %idxprom43 = sext i32 %138 to i64, !dbg !9936
  %139 = load float*, float** %sf.addr, align 8, !dbg !9936
  %arrayidx44 = getelementptr inbounds float, float* %139, i64 %idxprom43, !dbg !9936
  store float %137, float* %arrayidx44, align 4, !dbg !9937
  br label %for.inc45, !dbg !9938

for.inc45:                                        ; preds = %if.end
  %140 = load i32, i32* %i, align 4, !dbg !9939
  %inc46 = add nsw i32 %140, 1, !dbg !9939
  store i32 %inc46, i32* %i, align 4, !dbg !9939
  %141 = load i32, i32* %idx, align 4, !dbg !9941
  %inc47 = add nsw i32 %141, 1, !dbg !9941
  store i32 %inc47, i32* %idx, align 4, !dbg !9941
  br label %for.cond26, !dbg !9942, !llvm.loop !9943

for.end48:                                        ; preds = %for.cond26
  br label %if.end120, !dbg !9944

if.else49:                                        ; preds = %lor.lhs.false
  %142 = load i32, i32* %idx, align 4, !dbg !9945
  %idxprom50 = sext i32 %142 to i64, !dbg !9947
  %143 = load i32*, i32** %band_type.addr, align 8, !dbg !9947
  %arrayidx51 = getelementptr inbounds i32, i32* %143, i64 %idxprom50, !dbg !9947
  %144 = load i32, i32* %arrayidx51, align 4, !dbg !9947
  %cmp52 = icmp eq i32 %144, 13, !dbg !9948
  br i1 %cmp52, label %if.then54, label %if.else91, !dbg !9947

if.then54:                                        ; preds = %if.else49
  br label %for.cond55, !dbg !9949

for.cond55:                                       ; preds = %for.inc87, %if.then54
  %145 = load i32, i32* %i, align 4, !dbg !9950
  %146 = load i32, i32* %run_end, align 4, !dbg !9952
  %cmp56 = icmp slt i32 %145, %146, !dbg !9953
  br i1 %cmp56, label %for.body58, label %for.end90, !dbg !9954

for.body58:                                       ; preds = %for.cond55
  %147 = load i32, i32* %noise_flag, align 4, !dbg !9955
  %dec = add nsw i32 %147, -1, !dbg !9955
  store i32 %dec, i32* %noise_flag, align 4, !dbg !9955
  %cmp59 = icmp sgt i32 %147, 0, !dbg !9956
  br i1 %cmp59, label %if.then61, label %if.else66, !dbg !9957

if.then61:                                        ; preds = %for.body58
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9958
  %call62 = call i32 @get_bits(%struct.GetBitContext* %148, i32 9), !dbg !9959
  %sub63 = sub i32 %call62, 256, !dbg !9960
  %arrayidx64 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !9961
  %149 = load i32, i32* %arrayidx64, align 4, !dbg !9962
  %add65 = add i32 %149, %sub63, !dbg !9962
  store i32 %add65, i32* %arrayidx64, align 4, !dbg !9962
  br label %if.end71, !dbg !9961

if.else66:                                        ; preds = %for.body58
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9963
  %151 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !9964
  store %struct.GetBitContext* %150, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !9965
  store [2 x i16]* %151, [2 x i16]** %table.addr.i132, align 8, !dbg !9965
  store i32 7, i32* %bits.addr.i133, align 4, !dbg !9965
  store i32 3, i32* %max_depth.addr.i134, align 4, !dbg !9965
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !9966
  %index.i142 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %152, i32 0, i32 2, !dbg !9967
  %153 = load i32, i32* %index.i142, align 8, !dbg !9967
  store i32 %153, i32* %re_index.i136, align 4, !dbg !9563
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !9968
  %size_in_bits_plus8.i143 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %154, i32 0, i32 4, !dbg !9969
  %155 = load i32, i32* %size_in_bits_plus8.i143, align 8, !dbg !9969
  store i32 %155, i32* %re_size_plus8.i138, align 4, !dbg !9565
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !9970
  %buffer.i144 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %156, i32 0, i32 0, !dbg !9971
  %157 = load i8*, i8** %buffer.i144, align 8, !dbg !9971
  %158 = load i32, i32* %re_index.i136, align 4, !dbg !9972
  %shr.i145 = lshr i32 %158, 3, !dbg !9973
  %idx.ext.i146 = zext i32 %shr.i145 to i64, !dbg !9974
  %add.ptr.i147 = getelementptr inbounds i8, i8* %157, i64 %idx.ext.i146, !dbg !9974
  %159 = bitcast i8* %add.ptr.i147 to %union.unaligned_32*, !dbg !9975
  %l.i148 = bitcast %union.unaligned_32* %159 to i32*, !dbg !9975
  %160 = load i32, i32* %l.i148, align 1, !dbg !9975
  store i32 %160, i32* %x.addr.i.i130, align 4, !dbg !9976
  %161 = load i32, i32* %x.addr.i.i130, align 4, !dbg !9977
  %shl.i.i149 = shl i32 %161, 8, !dbg !9978
  %and.i.i150 = and i32 %shl.i.i149, 65280, !dbg !9979
  %162 = load i32, i32* %x.addr.i.i130, align 4, !dbg !9980
  %shr.i.i151 = lshr i32 %162, 8, !dbg !9981
  %and1.i.i152 = and i32 %shr.i.i151, 255, !dbg !9982
  %or.i.i153 = or i32 %and.i.i150, %and1.i.i152, !dbg !9983
  %shl2.i.i154 = shl i32 %or.i.i153, 16, !dbg !9984
  %163 = load i32, i32* %x.addr.i.i130, align 4, !dbg !9985
  %shr3.i.i155 = lshr i32 %163, 16, !dbg !9986
  %shl4.i.i156 = shl i32 %shr3.i.i155, 8, !dbg !9987
  %and5.i.i157 = and i32 %shl4.i.i156, 65280, !dbg !9988
  %164 = load i32, i32* %x.addr.i.i130, align 4, !dbg !9989
  %shr6.i.i158 = lshr i32 %164, 16, !dbg !9990
  %shr7.i.i159 = lshr i32 %shr6.i.i158, 8, !dbg !9991
  %and8.i.i160 = and i32 %shr7.i.i159, 255, !dbg !9992
  %or9.i.i161 = or i32 %and5.i.i157, %and8.i.i160, !dbg !9993
  %or10.i.i162 = or i32 %shl2.i.i154, %or9.i.i161, !dbg !9994
  %165 = load i32, i32* %re_index.i136, align 4, !dbg !9995
  %and.i163 = and i32 %165, 7, !dbg !9996
  %shl.i164 = shl i32 %or10.i.i162, %and.i163, !dbg !9997
  store i32 %shl.i164, i32* %re_cache.i137, align 4, !dbg !9998
  %166 = load i32, i32* %re_cache.i137, align 4, !dbg !9999
  %167 = load i32, i32* %bits.addr.i133, align 4, !dbg !10000
  %conv.i165 = trunc i32 %167 to i8, !dbg !10000
  %call2.i166 = call i32 @NEG_USR32(i32 %166, i8 signext %conv.i165) #10, !dbg !10001
  store i32 %call2.i166, i32* %index1.i141, align 4, !dbg !10002
  %168 = load i32, i32* %index1.i141, align 4, !dbg !10003
  %idxprom.i167 = zext i32 %168 to i64, !dbg !10004
  %169 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10004
  %arrayidx.i168 = getelementptr inbounds [2 x i16], [2 x i16]* %169, i64 %idxprom.i167, !dbg !10004
  %arrayidx3.i169 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i168, i64 0, i64 0, !dbg !10004
  %170 = load i16, i16* %arrayidx3.i169, align 2, !dbg !10004
  %conv4.i170 = sext i16 %170 to i32, !dbg !10004
  store i32 %conv4.i170, i32* %code.i135, align 4, !dbg !10005
  %171 = load i32, i32* %index1.i141, align 4, !dbg !10006
  %idxprom5.i171 = zext i32 %171 to i64, !dbg !10007
  %172 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10007
  %arrayidx6.i172 = getelementptr inbounds [2 x i16], [2 x i16]* %172, i64 %idxprom5.i171, !dbg !10007
  %arrayidx7.i173 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i172, i64 0, i64 1, !dbg !10007
  %173 = load i16, i16* %arrayidx7.i173, align 2, !dbg !10007
  %conv8.i174 = sext i16 %173 to i32, !dbg !10007
  store i32 %conv8.i174, i32* %n.i139, align 4, !dbg !10008
  %174 = load i32, i32* %max_depth.addr.i134, align 4, !dbg !10009
  %cmp.i175 = icmp sgt i32 %174, 1, !dbg !10010
  br i1 %cmp.i175, label %land.lhs.true.i177, label %if.end68.i264, !dbg !10011

land.lhs.true.i177:                               ; preds = %if.else66
  %175 = load i32, i32* %n.i139, align 4, !dbg !10012
  %cmp10.i176 = icmp slt i32 %175, 0, !dbg !10013
  br i1 %cmp10.i176, label %if.then.i180, label %if.end68.i264, !dbg !10014

if.then.i180:                                     ; preds = %land.lhs.true.i177
  %176 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10015
  %177 = load i32, i32* %re_index.i136, align 4, !dbg !10016
  %178 = load i32, i32* %bits.addr.i133, align 4, !dbg !10017
  %add.i178 = add i32 %177, %178, !dbg !10018
  %cmp12.i179 = icmp ugt i32 %176, %add.i178, !dbg !10019
  br i1 %cmp12.i179, label %cond.true.i182, label %cond.false.i183, !dbg !10020

cond.true.i182:                                   ; preds = %if.then.i180
  %179 = load i32, i32* %re_index.i136, align 4, !dbg !10021
  %180 = load i32, i32* %bits.addr.i133, align 4, !dbg !10022
  %add14.i181 = add i32 %179, %180, !dbg !10023
  br label %cond.end.i219, !dbg !10024

cond.false.i183:                                  ; preds = %if.then.i180
  %181 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10025
  br label %cond.end.i219, !dbg !10026

cond.end.i219:                                    ; preds = %cond.false.i183, %cond.true.i182
  %cond.i184 = phi i32 [ %add14.i181, %cond.true.i182 ], [ %181, %cond.false.i183 ], !dbg !10027
  store i32 %cond.i184, i32* %re_index.i136, align 4, !dbg !10028
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !10029
  %buffer15.i185 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %182, i32 0, i32 0, !dbg !10030
  %183 = load i8*, i8** %buffer15.i185, align 8, !dbg !10030
  %184 = load i32, i32* %re_index.i136, align 4, !dbg !10031
  %shr16.i186 = lshr i32 %184, 3, !dbg !10032
  %idx.ext17.i187 = zext i32 %shr16.i186 to i64, !dbg !10033
  %add.ptr18.i188 = getelementptr inbounds i8, i8* %183, i64 %idx.ext17.i187, !dbg !10033
  %185 = bitcast i8* %add.ptr18.i188 to %union.unaligned_32*, !dbg !10034
  %l19.i189 = bitcast %union.unaligned_32* %185 to i32*, !dbg !10034
  %186 = load i32, i32* %l19.i189, align 1, !dbg !10034
  store i32 %186, i32* %x.addr.i81.i129, align 4, !dbg !10035
  %187 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !10036
  %shl.i82.i190 = shl i32 %187, 8, !dbg !10037
  %and.i83.i191 = and i32 %shl.i82.i190, 65280, !dbg !10038
  %188 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !10039
  %shr.i84.i192 = lshr i32 %188, 8, !dbg !10040
  %and1.i85.i193 = and i32 %shr.i84.i192, 255, !dbg !10041
  %or.i86.i194 = or i32 %and.i83.i191, %and1.i85.i193, !dbg !10042
  %shl2.i87.i195 = shl i32 %or.i86.i194, 16, !dbg !10043
  %189 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !10044
  %shr3.i88.i196 = lshr i32 %189, 16, !dbg !10045
  %shl4.i89.i197 = shl i32 %shr3.i88.i196, 8, !dbg !10046
  %and5.i90.i198 = and i32 %shl4.i89.i197, 65280, !dbg !10047
  %190 = load i32, i32* %x.addr.i81.i129, align 4, !dbg !10048
  %shr6.i91.i199 = lshr i32 %190, 16, !dbg !10049
  %shr7.i92.i200 = lshr i32 %shr6.i91.i199, 8, !dbg !10050
  %and8.i93.i201 = and i32 %shr7.i92.i200, 255, !dbg !10051
  %or9.i94.i202 = or i32 %and5.i90.i198, %and8.i93.i201, !dbg !10052
  %or10.i95.i203 = or i32 %shl2.i87.i195, %or9.i94.i202, !dbg !10053
  %191 = load i32, i32* %re_index.i136, align 4, !dbg !10054
  %and21.i204 = and i32 %191, 7, !dbg !10055
  %shl22.i205 = shl i32 %or10.i95.i203, %and21.i204, !dbg !10056
  store i32 %shl22.i205, i32* %re_cache.i137, align 4, !dbg !10057
  %192 = load i32, i32* %n.i139, align 4, !dbg !10058
  %sub.i206 = sub nsw i32 0, %192, !dbg !10059
  store i32 %sub.i206, i32* %nb_bits.i140, align 4, !dbg !10060
  %193 = load i32, i32* %re_cache.i137, align 4, !dbg !10061
  %194 = load i32, i32* %nb_bits.i140, align 4, !dbg !10062
  %conv23.i207 = trunc i32 %194 to i8, !dbg !10062
  %call24.i208 = call i32 @NEG_USR32(i32 %193, i8 signext %conv23.i207) #10, !dbg !10063
  %195 = load i32, i32* %code.i135, align 4, !dbg !10064
  %add25.i209 = add i32 %call24.i208, %195, !dbg !10065
  store i32 %add25.i209, i32* %index1.i141, align 4, !dbg !10066
  %196 = load i32, i32* %index1.i141, align 4, !dbg !10067
  %idxprom26.i210 = zext i32 %196 to i64, !dbg !10068
  %197 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10068
  %arrayidx27.i211 = getelementptr inbounds [2 x i16], [2 x i16]* %197, i64 %idxprom26.i210, !dbg !10068
  %arrayidx28.i212 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i211, i64 0, i64 0, !dbg !10068
  %198 = load i16, i16* %arrayidx28.i212, align 2, !dbg !10068
  %conv29.i213 = sext i16 %198 to i32, !dbg !10068
  store i32 %conv29.i213, i32* %code.i135, align 4, !dbg !10069
  %199 = load i32, i32* %index1.i141, align 4, !dbg !10070
  %idxprom30.i214 = zext i32 %199 to i64, !dbg !10071
  %200 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10071
  %arrayidx31.i215 = getelementptr inbounds [2 x i16], [2 x i16]* %200, i64 %idxprom30.i214, !dbg !10071
  %arrayidx32.i216 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i215, i64 0, i64 1, !dbg !10071
  %201 = load i16, i16* %arrayidx32.i216, align 2, !dbg !10071
  %conv33.i217 = sext i16 %201 to i32, !dbg !10071
  store i32 %conv33.i217, i32* %n.i139, align 4, !dbg !10072
  %202 = load i32, i32* %max_depth.addr.i134, align 4, !dbg !10073
  %cmp34.i218 = icmp sgt i32 %202, 2, !dbg !10074
  br i1 %cmp34.i218, label %land.lhs.true36.i221, label %if.end.i263, !dbg !10075

land.lhs.true36.i221:                             ; preds = %cond.end.i219
  %203 = load i32, i32* %n.i139, align 4, !dbg !10076
  %cmp37.i220 = icmp slt i32 %203, 0, !dbg !10077
  br i1 %cmp37.i220, label %if.then39.i224, label %if.end.i263, !dbg !10078

if.then39.i224:                                   ; preds = %land.lhs.true36.i221
  %204 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10079
  %205 = load i32, i32* %re_index.i136, align 4, !dbg !10080
  %206 = load i32, i32* %nb_bits.i140, align 4, !dbg !10081
  %add40.i222 = add i32 %205, %206, !dbg !10082
  %cmp41.i223 = icmp ugt i32 %204, %add40.i222, !dbg !10083
  br i1 %cmp41.i223, label %cond.true43.i226, label %cond.false45.i227, !dbg !10084

cond.true43.i226:                                 ; preds = %if.then39.i224
  %207 = load i32, i32* %re_index.i136, align 4, !dbg !10085
  %208 = load i32, i32* %nb_bits.i140, align 4, !dbg !10086
  %add44.i225 = add i32 %207, %208, !dbg !10087
  br label %cond.end46.i262, !dbg !10088

cond.false45.i227:                                ; preds = %if.then39.i224
  %209 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10089
  br label %cond.end46.i262, !dbg !10090

cond.end46.i262:                                  ; preds = %cond.false45.i227, %cond.true43.i226
  %cond47.i228 = phi i32 [ %add44.i225, %cond.true43.i226 ], [ %209, %cond.false45.i227 ], !dbg !10091
  store i32 %cond47.i228, i32* %re_index.i136, align 4, !dbg !10092
  %210 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !10093
  %buffer48.i229 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %210, i32 0, i32 0, !dbg !10094
  %211 = load i8*, i8** %buffer48.i229, align 8, !dbg !10094
  %212 = load i32, i32* %re_index.i136, align 4, !dbg !10095
  %shr49.i230 = lshr i32 %212, 3, !dbg !10096
  %idx.ext50.i231 = zext i32 %shr49.i230 to i64, !dbg !10097
  %add.ptr51.i232 = getelementptr inbounds i8, i8* %211, i64 %idx.ext50.i231, !dbg !10097
  %213 = bitcast i8* %add.ptr51.i232 to %union.unaligned_32*, !dbg !10098
  %l52.i233 = bitcast %union.unaligned_32* %213 to i32*, !dbg !10098
  %214 = load i32, i32* %l52.i233, align 1, !dbg !10098
  store i32 %214, i32* %x.addr.i96.i128, align 4, !dbg !10099
  %215 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !10100
  %shl.i97.i234 = shl i32 %215, 8, !dbg !10101
  %and.i98.i235 = and i32 %shl.i97.i234, 65280, !dbg !10102
  %216 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !10103
  %shr.i99.i236 = lshr i32 %216, 8, !dbg !10104
  %and1.i100.i237 = and i32 %shr.i99.i236, 255, !dbg !10105
  %or.i101.i238 = or i32 %and.i98.i235, %and1.i100.i237, !dbg !10106
  %shl2.i102.i239 = shl i32 %or.i101.i238, 16, !dbg !10107
  %217 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !10108
  %shr3.i103.i240 = lshr i32 %217, 16, !dbg !10109
  %shl4.i104.i241 = shl i32 %shr3.i103.i240, 8, !dbg !10110
  %and5.i105.i242 = and i32 %shl4.i104.i241, 65280, !dbg !10111
  %218 = load i32, i32* %x.addr.i96.i128, align 4, !dbg !10112
  %shr6.i106.i243 = lshr i32 %218, 16, !dbg !10113
  %shr7.i107.i244 = lshr i32 %shr6.i106.i243, 8, !dbg !10114
  %and8.i108.i245 = and i32 %shr7.i107.i244, 255, !dbg !10115
  %or9.i109.i246 = or i32 %and5.i105.i242, %and8.i108.i245, !dbg !10116
  %or10.i110.i247 = or i32 %shl2.i102.i239, %or9.i109.i246, !dbg !10117
  %219 = load i32, i32* %re_index.i136, align 4, !dbg !10118
  %and54.i248 = and i32 %219, 7, !dbg !10119
  %shl55.i249 = shl i32 %or10.i110.i247, %and54.i248, !dbg !10120
  store i32 %shl55.i249, i32* %re_cache.i137, align 4, !dbg !10121
  %220 = load i32, i32* %n.i139, align 4, !dbg !10122
  %sub56.i250 = sub nsw i32 0, %220, !dbg !10123
  store i32 %sub56.i250, i32* %nb_bits.i140, align 4, !dbg !10124
  %221 = load i32, i32* %re_cache.i137, align 4, !dbg !10125
  %222 = load i32, i32* %nb_bits.i140, align 4, !dbg !10126
  %conv57.i251 = trunc i32 %222 to i8, !dbg !10126
  %call58.i252 = call i32 @NEG_USR32(i32 %221, i8 signext %conv57.i251) #10, !dbg !10127
  %223 = load i32, i32* %code.i135, align 4, !dbg !10128
  %add59.i253 = add i32 %call58.i252, %223, !dbg !10129
  store i32 %add59.i253, i32* %index1.i141, align 4, !dbg !10130
  %224 = load i32, i32* %index1.i141, align 4, !dbg !10131
  %idxprom60.i254 = zext i32 %224 to i64, !dbg !10132
  %225 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10132
  %arrayidx61.i255 = getelementptr inbounds [2 x i16], [2 x i16]* %225, i64 %idxprom60.i254, !dbg !10132
  %arrayidx62.i256 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i255, i64 0, i64 0, !dbg !10132
  %226 = load i16, i16* %arrayidx62.i256, align 2, !dbg !10132
  %conv63.i257 = sext i16 %226 to i32, !dbg !10132
  store i32 %conv63.i257, i32* %code.i135, align 4, !dbg !10133
  %227 = load i32, i32* %index1.i141, align 4, !dbg !10134
  %idxprom64.i258 = zext i32 %227 to i64, !dbg !10135
  %228 = load [2 x i16]*, [2 x i16]** %table.addr.i132, align 8, !dbg !10135
  %arrayidx65.i259 = getelementptr inbounds [2 x i16], [2 x i16]* %228, i64 %idxprom64.i258, !dbg !10135
  %arrayidx66.i260 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i259, i64 0, i64 1, !dbg !10135
  %229 = load i16, i16* %arrayidx66.i260, align 2, !dbg !10135
  %conv67.i261 = sext i16 %229 to i32, !dbg !10135
  store i32 %conv67.i261, i32* %n.i139, align 4, !dbg !10136
  br label %if.end.i263, !dbg !10137

if.end.i263:                                      ; preds = %cond.end46.i262, %land.lhs.true36.i221, %cond.end.i219
  br label %if.end68.i264, !dbg !10138

if.end68.i264:                                    ; preds = %if.end.i263, %land.lhs.true.i177, %if.else66
  %230 = load i32, i32* %n.i139, align 4, !dbg !10139
  %231 = load i32, i32* %re_cache.i137, align 4, !dbg !10140
  %shl70.i265 = shl i32 %231, %230, !dbg !10140
  store i32 %shl70.i265, i32* %re_cache.i137, align 4, !dbg !10140
  %232 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10141
  %233 = load i32, i32* %re_index.i136, align 4, !dbg !10142
  %234 = load i32, i32* %n.i139, align 4, !dbg !10143
  %add71.i266 = add i32 %233, %234, !dbg !10144
  %cmp72.i267 = icmp ugt i32 %232, %add71.i266, !dbg !10145
  br i1 %cmp72.i267, label %cond.true74.i269, label %cond.false76.i270, !dbg !10146

cond.true74.i269:                                 ; preds = %if.end68.i264
  %235 = load i32, i32* %re_index.i136, align 4, !dbg !10147
  %236 = load i32, i32* %n.i139, align 4, !dbg !10148
  %add75.i268 = add i32 %235, %236, !dbg !10149
  br label %get_vlc2.exit273, !dbg !10150

cond.false76.i270:                                ; preds = %if.end68.i264
  %237 = load i32, i32* %re_size_plus8.i138, align 4, !dbg !10151
  br label %get_vlc2.exit273, !dbg !10152

get_vlc2.exit273:                                 ; preds = %cond.true74.i269, %cond.false76.i270
  %cond78.i271 = phi i32 [ %add75.i268, %cond.true74.i269 ], [ %237, %cond.false76.i270 ], !dbg !10153
  store i32 %cond78.i271, i32* %re_index.i136, align 4, !dbg !10154
  %238 = load i32, i32* %re_index.i136, align 4, !dbg !10155
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i131, align 8, !dbg !10156
  %index80.i272 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %239, i32 0, i32 2, !dbg !10157
  store i32 %238, i32* %index80.i272, align 8, !dbg !10158
  %240 = load i32, i32* %code.i135, align 4, !dbg !10159
  %sub68 = sub nsw i32 %240, 60, !dbg !10160
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10161
  %241 = load i32, i32* %arrayidx69, align 4, !dbg !10162
  %add70 = add nsw i32 %241, %sub68, !dbg !10162
  store i32 %add70, i32* %arrayidx69, align 4, !dbg !10162
  br label %if.end71

if.end71:                                         ; preds = %get_vlc2.exit273, %if.then61
  %arrayidx72 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10163
  %242 = load i32, i32* %arrayidx72, align 4, !dbg !10163
  store i32 %242, i32* %a.addr.i275, align 4, !dbg !10164
  store i32 -100, i32* %amin.addr.i276, align 4, !dbg !10164
  store i32 155, i32* %amax.addr.i277, align 4, !dbg !10164
  %243 = load i32, i32* %a.addr.i275, align 4, !dbg !10165
  %244 = load i32, i32* %amin.addr.i276, align 4, !dbg !10166
  %cmp.i278 = icmp slt i32 %243, %244, !dbg !10167
  br i1 %cmp.i278, label %if.then.i279, label %if.else.i281, !dbg !10168

if.then.i279:                                     ; preds = %if.end71
  %245 = load i32, i32* %amin.addr.i276, align 4, !dbg !10169
  store i32 %245, i32* %retval.i274, align 4, !dbg !10170
  br label %av_clip_c.exit284, !dbg !10170

if.else.i281:                                     ; preds = %if.end71
  %246 = load i32, i32* %a.addr.i275, align 4, !dbg !10171
  %247 = load i32, i32* %amax.addr.i277, align 4, !dbg !10172
  %cmp1.i280 = icmp sgt i32 %246, %247, !dbg !10173
  br i1 %cmp1.i280, label %if.then2.i282, label %if.else3.i283, !dbg !10174

if.then2.i282:                                    ; preds = %if.else.i281
  %248 = load i32, i32* %amax.addr.i277, align 4, !dbg !10175
  store i32 %248, i32* %retval.i274, align 4, !dbg !10176
  br label %av_clip_c.exit284, !dbg !10176

if.else3.i283:                                    ; preds = %if.else.i281
  %249 = load i32, i32* %a.addr.i275, align 4, !dbg !10177
  store i32 %249, i32* %retval.i274, align 4, !dbg !10178
  br label %av_clip_c.exit284, !dbg !10178

av_clip_c.exit284:                                ; preds = %if.then.i279, %if.then2.i282, %if.else3.i283
  %250 = load i32, i32* %retval.i274, align 4, !dbg !10179
  store i32 %250, i32* %clipped_offset, align 4, !dbg !10180
  %arrayidx74 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10181
  %251 = load i32, i32* %arrayidx74, align 4, !dbg !10181
  %252 = load i32, i32* %clipped_offset, align 4, !dbg !10183
  %cmp75 = icmp ne i32 %251, %252, !dbg !10184
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !10185

if.then77:                                        ; preds = %av_clip_c.exit284
  %253 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10186
  %avctx78 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %253, i32 0, i32 1, !dbg !10188
  %254 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx78, align 8, !dbg !10188
  %255 = bitcast %struct.AVCodecContext* %254 to i8*, !dbg !10186
  %arrayidx79 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 1, !dbg !10189
  %256 = load i32, i32* %arrayidx79, align 4, !dbg !10189
  %257 = load i32, i32* %clipped_offset, align 4, !dbg !10190
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %255, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.69, i32 0, i32 0), i32 %256, i32 %257), !dbg !10191
  br label %if.end80, !dbg !10192

if.end80:                                         ; preds = %if.then77, %av_clip_c.exit284
  %258 = load i32, i32* %clipped_offset, align 4, !dbg !10193
  %add81 = add nsw i32 %258, 200, !dbg !10194
  %idxprom82 = sext i32 %add81 to i64, !dbg !10195
  %arrayidx83 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom82, !dbg !10195
  %259 = load float, float* %arrayidx83, align 4, !dbg !10195
  %sub84 = fsub float -0.000000e+00, %259, !dbg !10196
  %260 = load i32, i32* %idx, align 4, !dbg !10197
  %idxprom85 = sext i32 %260 to i64, !dbg !10198
  %261 = load float*, float** %sf.addr, align 8, !dbg !10198
  %arrayidx86 = getelementptr inbounds float, float* %261, i64 %idxprom85, !dbg !10198
  store float %sub84, float* %arrayidx86, align 4, !dbg !10199
  br label %for.inc87, !dbg !10200

for.inc87:                                        ; preds = %if.end80
  %262 = load i32, i32* %i, align 4, !dbg !10201
  %inc88 = add nsw i32 %262, 1, !dbg !10201
  store i32 %inc88, i32* %i, align 4, !dbg !10201
  %263 = load i32, i32* %idx, align 4, !dbg !10203
  %inc89 = add nsw i32 %263, 1, !dbg !10203
  store i32 %inc89, i32* %idx, align 4, !dbg !10203
  br label %for.cond55, !dbg !10204, !llvm.loop !10205

for.end90:                                        ; preds = %for.cond55
  br label %if.end119, !dbg !10206

if.else91:                                        ; preds = %if.else49
  br label %for.cond92, !dbg !10207

for.cond92:                                       ; preds = %for.inc115, %if.else91
  %264 = load i32, i32* %i, align 4, !dbg !10208
  %265 = load i32, i32* %run_end, align 4, !dbg !10210
  %cmp93 = icmp slt i32 %264, %265, !dbg !10211
  br i1 %cmp93, label %for.body95, label %for.end118, !dbg !10212

for.body95:                                       ; preds = %for.cond92
  %266 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10213
  %267 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !10214
  store %struct.GetBitContext* %266, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10215
  store [2 x i16]* %267, [2 x i16]** %table.addr.i289, align 8, !dbg !10215
  store i32 7, i32* %bits.addr.i290, align 4, !dbg !10215
  store i32 3, i32* %max_depth.addr.i291, align 4, !dbg !10215
  %268 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10216
  %index.i299 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %268, i32 0, i32 2, !dbg !10217
  %269 = load i32, i32* %index.i299, align 8, !dbg !10217
  store i32 %269, i32* %re_index.i293, align 4, !dbg !9531
  %270 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10218
  %size_in_bits_plus8.i300 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %270, i32 0, i32 4, !dbg !10219
  %271 = load i32, i32* %size_in_bits_plus8.i300, align 8, !dbg !10219
  store i32 %271, i32* %re_size_plus8.i295, align 4, !dbg !9535
  %272 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10220
  %buffer.i301 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %272, i32 0, i32 0, !dbg !10221
  %273 = load i8*, i8** %buffer.i301, align 8, !dbg !10221
  %274 = load i32, i32* %re_index.i293, align 4, !dbg !10222
  %shr.i302 = lshr i32 %274, 3, !dbg !10223
  %idx.ext.i303 = zext i32 %shr.i302 to i64, !dbg !10224
  %add.ptr.i304 = getelementptr inbounds i8, i8* %273, i64 %idx.ext.i303, !dbg !10224
  %275 = bitcast i8* %add.ptr.i304 to %union.unaligned_32*, !dbg !10225
  %l.i305 = bitcast %union.unaligned_32* %275 to i32*, !dbg !10225
  %276 = load i32, i32* %l.i305, align 1, !dbg !10225
  store i32 %276, i32* %x.addr.i.i287, align 4, !dbg !10226
  %277 = load i32, i32* %x.addr.i.i287, align 4, !dbg !10227
  %shl.i.i306 = shl i32 %277, 8, !dbg !10228
  %and.i.i307 = and i32 %shl.i.i306, 65280, !dbg !10229
  %278 = load i32, i32* %x.addr.i.i287, align 4, !dbg !10230
  %shr.i.i308 = lshr i32 %278, 8, !dbg !10231
  %and1.i.i309 = and i32 %shr.i.i308, 255, !dbg !10232
  %or.i.i310 = or i32 %and.i.i307, %and1.i.i309, !dbg !10233
  %shl2.i.i311 = shl i32 %or.i.i310, 16, !dbg !10234
  %279 = load i32, i32* %x.addr.i.i287, align 4, !dbg !10235
  %shr3.i.i312 = lshr i32 %279, 16, !dbg !10236
  %shl4.i.i313 = shl i32 %shr3.i.i312, 8, !dbg !10237
  %and5.i.i314 = and i32 %shl4.i.i313, 65280, !dbg !10238
  %280 = load i32, i32* %x.addr.i.i287, align 4, !dbg !10239
  %shr6.i.i315 = lshr i32 %280, 16, !dbg !10240
  %shr7.i.i316 = lshr i32 %shr6.i.i315, 8, !dbg !10241
  %and8.i.i317 = and i32 %shr7.i.i316, 255, !dbg !10242
  %or9.i.i318 = or i32 %and5.i.i314, %and8.i.i317, !dbg !10243
  %or10.i.i319 = or i32 %shl2.i.i311, %or9.i.i318, !dbg !10244
  %281 = load i32, i32* %re_index.i293, align 4, !dbg !10245
  %and.i320 = and i32 %281, 7, !dbg !10246
  %shl.i321 = shl i32 %or10.i.i319, %and.i320, !dbg !10247
  store i32 %shl.i321, i32* %re_cache.i294, align 4, !dbg !10248
  %282 = load i32, i32* %re_cache.i294, align 4, !dbg !10249
  %283 = load i32, i32* %bits.addr.i290, align 4, !dbg !10250
  %conv.i322 = trunc i32 %283 to i8, !dbg !10250
  %call2.i323 = call i32 @NEG_USR32(i32 %282, i8 signext %conv.i322) #10, !dbg !10251
  store i32 %call2.i323, i32* %index1.i298, align 4, !dbg !10252
  %284 = load i32, i32* %index1.i298, align 4, !dbg !10253
  %idxprom.i324 = zext i32 %284 to i64, !dbg !10254
  %285 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10254
  %arrayidx.i325 = getelementptr inbounds [2 x i16], [2 x i16]* %285, i64 %idxprom.i324, !dbg !10254
  %arrayidx3.i326 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i325, i64 0, i64 0, !dbg !10254
  %286 = load i16, i16* %arrayidx3.i326, align 2, !dbg !10254
  %conv4.i327 = sext i16 %286 to i32, !dbg !10254
  store i32 %conv4.i327, i32* %code.i292, align 4, !dbg !10255
  %287 = load i32, i32* %index1.i298, align 4, !dbg !10256
  %idxprom5.i328 = zext i32 %287 to i64, !dbg !10257
  %288 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10257
  %arrayidx6.i329 = getelementptr inbounds [2 x i16], [2 x i16]* %288, i64 %idxprom5.i328, !dbg !10257
  %arrayidx7.i330 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i329, i64 0, i64 1, !dbg !10257
  %289 = load i16, i16* %arrayidx7.i330, align 2, !dbg !10257
  %conv8.i331 = sext i16 %289 to i32, !dbg !10257
  store i32 %conv8.i331, i32* %n.i296, align 4, !dbg !10258
  %290 = load i32, i32* %max_depth.addr.i291, align 4, !dbg !10259
  %cmp.i332 = icmp sgt i32 %290, 1, !dbg !10260
  br i1 %cmp.i332, label %land.lhs.true.i334, label %if.end68.i421, !dbg !10261

land.lhs.true.i334:                               ; preds = %for.body95
  %291 = load i32, i32* %n.i296, align 4, !dbg !10262
  %cmp10.i333 = icmp slt i32 %291, 0, !dbg !10263
  br i1 %cmp10.i333, label %if.then.i337, label %if.end68.i421, !dbg !10264

if.then.i337:                                     ; preds = %land.lhs.true.i334
  %292 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10265
  %293 = load i32, i32* %re_index.i293, align 4, !dbg !10266
  %294 = load i32, i32* %bits.addr.i290, align 4, !dbg !10267
  %add.i335 = add i32 %293, %294, !dbg !10268
  %cmp12.i336 = icmp ugt i32 %292, %add.i335, !dbg !10269
  br i1 %cmp12.i336, label %cond.true.i339, label %cond.false.i340, !dbg !10270

cond.true.i339:                                   ; preds = %if.then.i337
  %295 = load i32, i32* %re_index.i293, align 4, !dbg !10271
  %296 = load i32, i32* %bits.addr.i290, align 4, !dbg !10272
  %add14.i338 = add i32 %295, %296, !dbg !10273
  br label %cond.end.i376, !dbg !10274

cond.false.i340:                                  ; preds = %if.then.i337
  %297 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10275
  br label %cond.end.i376, !dbg !10276

cond.end.i376:                                    ; preds = %cond.false.i340, %cond.true.i339
  %cond.i341 = phi i32 [ %add14.i338, %cond.true.i339 ], [ %297, %cond.false.i340 ], !dbg !10277
  store i32 %cond.i341, i32* %re_index.i293, align 4, !dbg !10278
  %298 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10279
  %buffer15.i342 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %298, i32 0, i32 0, !dbg !10280
  %299 = load i8*, i8** %buffer15.i342, align 8, !dbg !10280
  %300 = load i32, i32* %re_index.i293, align 4, !dbg !10281
  %shr16.i343 = lshr i32 %300, 3, !dbg !10282
  %idx.ext17.i344 = zext i32 %shr16.i343 to i64, !dbg !10283
  %add.ptr18.i345 = getelementptr inbounds i8, i8* %299, i64 %idx.ext17.i344, !dbg !10283
  %301 = bitcast i8* %add.ptr18.i345 to %union.unaligned_32*, !dbg !10284
  %l19.i346 = bitcast %union.unaligned_32* %301 to i32*, !dbg !10284
  %302 = load i32, i32* %l19.i346, align 1, !dbg !10284
  store i32 %302, i32* %x.addr.i81.i286, align 4, !dbg !10285
  %303 = load i32, i32* %x.addr.i81.i286, align 4, !dbg !10286
  %shl.i82.i347 = shl i32 %303, 8, !dbg !10287
  %and.i83.i348 = and i32 %shl.i82.i347, 65280, !dbg !10288
  %304 = load i32, i32* %x.addr.i81.i286, align 4, !dbg !10289
  %shr.i84.i349 = lshr i32 %304, 8, !dbg !10290
  %and1.i85.i350 = and i32 %shr.i84.i349, 255, !dbg !10291
  %or.i86.i351 = or i32 %and.i83.i348, %and1.i85.i350, !dbg !10292
  %shl2.i87.i352 = shl i32 %or.i86.i351, 16, !dbg !10293
  %305 = load i32, i32* %x.addr.i81.i286, align 4, !dbg !10294
  %shr3.i88.i353 = lshr i32 %305, 16, !dbg !10295
  %shl4.i89.i354 = shl i32 %shr3.i88.i353, 8, !dbg !10296
  %and5.i90.i355 = and i32 %shl4.i89.i354, 65280, !dbg !10297
  %306 = load i32, i32* %x.addr.i81.i286, align 4, !dbg !10298
  %shr6.i91.i356 = lshr i32 %306, 16, !dbg !10299
  %shr7.i92.i357 = lshr i32 %shr6.i91.i356, 8, !dbg !10300
  %and8.i93.i358 = and i32 %shr7.i92.i357, 255, !dbg !10301
  %or9.i94.i359 = or i32 %and5.i90.i355, %and8.i93.i358, !dbg !10302
  %or10.i95.i360 = or i32 %shl2.i87.i352, %or9.i94.i359, !dbg !10303
  %307 = load i32, i32* %re_index.i293, align 4, !dbg !10304
  %and21.i361 = and i32 %307, 7, !dbg !10305
  %shl22.i362 = shl i32 %or10.i95.i360, %and21.i361, !dbg !10306
  store i32 %shl22.i362, i32* %re_cache.i294, align 4, !dbg !10307
  %308 = load i32, i32* %n.i296, align 4, !dbg !10308
  %sub.i363 = sub nsw i32 0, %308, !dbg !10309
  store i32 %sub.i363, i32* %nb_bits.i297, align 4, !dbg !10310
  %309 = load i32, i32* %re_cache.i294, align 4, !dbg !10311
  %310 = load i32, i32* %nb_bits.i297, align 4, !dbg !10312
  %conv23.i364 = trunc i32 %310 to i8, !dbg !10312
  %call24.i365 = call i32 @NEG_USR32(i32 %309, i8 signext %conv23.i364) #10, !dbg !10313
  %311 = load i32, i32* %code.i292, align 4, !dbg !10314
  %add25.i366 = add i32 %call24.i365, %311, !dbg !10315
  store i32 %add25.i366, i32* %index1.i298, align 4, !dbg !10316
  %312 = load i32, i32* %index1.i298, align 4, !dbg !10317
  %idxprom26.i367 = zext i32 %312 to i64, !dbg !10318
  %313 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10318
  %arrayidx27.i368 = getelementptr inbounds [2 x i16], [2 x i16]* %313, i64 %idxprom26.i367, !dbg !10318
  %arrayidx28.i369 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i368, i64 0, i64 0, !dbg !10318
  %314 = load i16, i16* %arrayidx28.i369, align 2, !dbg !10318
  %conv29.i370 = sext i16 %314 to i32, !dbg !10318
  store i32 %conv29.i370, i32* %code.i292, align 4, !dbg !10319
  %315 = load i32, i32* %index1.i298, align 4, !dbg !10320
  %idxprom30.i371 = zext i32 %315 to i64, !dbg !10321
  %316 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10321
  %arrayidx31.i372 = getelementptr inbounds [2 x i16], [2 x i16]* %316, i64 %idxprom30.i371, !dbg !10321
  %arrayidx32.i373 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i372, i64 0, i64 1, !dbg !10321
  %317 = load i16, i16* %arrayidx32.i373, align 2, !dbg !10321
  %conv33.i374 = sext i16 %317 to i32, !dbg !10321
  store i32 %conv33.i374, i32* %n.i296, align 4, !dbg !10322
  %318 = load i32, i32* %max_depth.addr.i291, align 4, !dbg !10323
  %cmp34.i375 = icmp sgt i32 %318, 2, !dbg !10324
  br i1 %cmp34.i375, label %land.lhs.true36.i378, label %if.end.i420, !dbg !10325

land.lhs.true36.i378:                             ; preds = %cond.end.i376
  %319 = load i32, i32* %n.i296, align 4, !dbg !10326
  %cmp37.i377 = icmp slt i32 %319, 0, !dbg !10327
  br i1 %cmp37.i377, label %if.then39.i381, label %if.end.i420, !dbg !10328

if.then39.i381:                                   ; preds = %land.lhs.true36.i378
  %320 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10329
  %321 = load i32, i32* %re_index.i293, align 4, !dbg !10330
  %322 = load i32, i32* %nb_bits.i297, align 4, !dbg !10331
  %add40.i379 = add i32 %321, %322, !dbg !10332
  %cmp41.i380 = icmp ugt i32 %320, %add40.i379, !dbg !10333
  br i1 %cmp41.i380, label %cond.true43.i383, label %cond.false45.i384, !dbg !10334

cond.true43.i383:                                 ; preds = %if.then39.i381
  %323 = load i32, i32* %re_index.i293, align 4, !dbg !10335
  %324 = load i32, i32* %nb_bits.i297, align 4, !dbg !10336
  %add44.i382 = add i32 %323, %324, !dbg !10337
  br label %cond.end46.i419, !dbg !10338

cond.false45.i384:                                ; preds = %if.then39.i381
  %325 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10339
  br label %cond.end46.i419, !dbg !10340

cond.end46.i419:                                  ; preds = %cond.false45.i384, %cond.true43.i383
  %cond47.i385 = phi i32 [ %add44.i382, %cond.true43.i383 ], [ %325, %cond.false45.i384 ], !dbg !10341
  store i32 %cond47.i385, i32* %re_index.i293, align 4, !dbg !10342
  %326 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10343
  %buffer48.i386 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %326, i32 0, i32 0, !dbg !10344
  %327 = load i8*, i8** %buffer48.i386, align 8, !dbg !10344
  %328 = load i32, i32* %re_index.i293, align 4, !dbg !10345
  %shr49.i387 = lshr i32 %328, 3, !dbg !10346
  %idx.ext50.i388 = zext i32 %shr49.i387 to i64, !dbg !10347
  %add.ptr51.i389 = getelementptr inbounds i8, i8* %327, i64 %idx.ext50.i388, !dbg !10347
  %329 = bitcast i8* %add.ptr51.i389 to %union.unaligned_32*, !dbg !10348
  %l52.i390 = bitcast %union.unaligned_32* %329 to i32*, !dbg !10348
  %330 = load i32, i32* %l52.i390, align 1, !dbg !10348
  store i32 %330, i32* %x.addr.i96.i285, align 4, !dbg !10349
  %331 = load i32, i32* %x.addr.i96.i285, align 4, !dbg !10350
  %shl.i97.i391 = shl i32 %331, 8, !dbg !10351
  %and.i98.i392 = and i32 %shl.i97.i391, 65280, !dbg !10352
  %332 = load i32, i32* %x.addr.i96.i285, align 4, !dbg !10353
  %shr.i99.i393 = lshr i32 %332, 8, !dbg !10354
  %and1.i100.i394 = and i32 %shr.i99.i393, 255, !dbg !10355
  %or.i101.i395 = or i32 %and.i98.i392, %and1.i100.i394, !dbg !10356
  %shl2.i102.i396 = shl i32 %or.i101.i395, 16, !dbg !10357
  %333 = load i32, i32* %x.addr.i96.i285, align 4, !dbg !10358
  %shr3.i103.i397 = lshr i32 %333, 16, !dbg !10359
  %shl4.i104.i398 = shl i32 %shr3.i103.i397, 8, !dbg !10360
  %and5.i105.i399 = and i32 %shl4.i104.i398, 65280, !dbg !10361
  %334 = load i32, i32* %x.addr.i96.i285, align 4, !dbg !10362
  %shr6.i106.i400 = lshr i32 %334, 16, !dbg !10363
  %shr7.i107.i401 = lshr i32 %shr6.i106.i400, 8, !dbg !10364
  %and8.i108.i402 = and i32 %shr7.i107.i401, 255, !dbg !10365
  %or9.i109.i403 = or i32 %and5.i105.i399, %and8.i108.i402, !dbg !10366
  %or10.i110.i404 = or i32 %shl2.i102.i396, %or9.i109.i403, !dbg !10367
  %335 = load i32, i32* %re_index.i293, align 4, !dbg !10368
  %and54.i405 = and i32 %335, 7, !dbg !10369
  %shl55.i406 = shl i32 %or10.i110.i404, %and54.i405, !dbg !10370
  store i32 %shl55.i406, i32* %re_cache.i294, align 4, !dbg !10371
  %336 = load i32, i32* %n.i296, align 4, !dbg !10372
  %sub56.i407 = sub nsw i32 0, %336, !dbg !10373
  store i32 %sub56.i407, i32* %nb_bits.i297, align 4, !dbg !10374
  %337 = load i32, i32* %re_cache.i294, align 4, !dbg !10375
  %338 = load i32, i32* %nb_bits.i297, align 4, !dbg !10376
  %conv57.i408 = trunc i32 %338 to i8, !dbg !10376
  %call58.i409 = call i32 @NEG_USR32(i32 %337, i8 signext %conv57.i408) #10, !dbg !10377
  %339 = load i32, i32* %code.i292, align 4, !dbg !10378
  %add59.i410 = add i32 %call58.i409, %339, !dbg !10379
  store i32 %add59.i410, i32* %index1.i298, align 4, !dbg !10380
  %340 = load i32, i32* %index1.i298, align 4, !dbg !10381
  %idxprom60.i411 = zext i32 %340 to i64, !dbg !10382
  %341 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10382
  %arrayidx61.i412 = getelementptr inbounds [2 x i16], [2 x i16]* %341, i64 %idxprom60.i411, !dbg !10382
  %arrayidx62.i413 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i412, i64 0, i64 0, !dbg !10382
  %342 = load i16, i16* %arrayidx62.i413, align 2, !dbg !10382
  %conv63.i414 = sext i16 %342 to i32, !dbg !10382
  store i32 %conv63.i414, i32* %code.i292, align 4, !dbg !10383
  %343 = load i32, i32* %index1.i298, align 4, !dbg !10384
  %idxprom64.i415 = zext i32 %343 to i64, !dbg !10385
  %344 = load [2 x i16]*, [2 x i16]** %table.addr.i289, align 8, !dbg !10385
  %arrayidx65.i416 = getelementptr inbounds [2 x i16], [2 x i16]* %344, i64 %idxprom64.i415, !dbg !10385
  %arrayidx66.i417 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i416, i64 0, i64 1, !dbg !10385
  %345 = load i16, i16* %arrayidx66.i417, align 2, !dbg !10385
  %conv67.i418 = sext i16 %345 to i32, !dbg !10385
  store i32 %conv67.i418, i32* %n.i296, align 4, !dbg !10386
  br label %if.end.i420, !dbg !10387

if.end.i420:                                      ; preds = %cond.end46.i419, %land.lhs.true36.i378, %cond.end.i376
  br label %if.end68.i421, !dbg !10388

if.end68.i421:                                    ; preds = %if.end.i420, %land.lhs.true.i334, %for.body95
  %346 = load i32, i32* %n.i296, align 4, !dbg !10389
  %347 = load i32, i32* %re_cache.i294, align 4, !dbg !10390
  %shl70.i422 = shl i32 %347, %346, !dbg !10390
  store i32 %shl70.i422, i32* %re_cache.i294, align 4, !dbg !10390
  %348 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10391
  %349 = load i32, i32* %re_index.i293, align 4, !dbg !10392
  %350 = load i32, i32* %n.i296, align 4, !dbg !10393
  %add71.i423 = add i32 %349, %350, !dbg !10394
  %cmp72.i424 = icmp ugt i32 %348, %add71.i423, !dbg !10395
  br i1 %cmp72.i424, label %cond.true74.i426, label %cond.false76.i427, !dbg !10396

cond.true74.i426:                                 ; preds = %if.end68.i421
  %351 = load i32, i32* %re_index.i293, align 4, !dbg !10397
  %352 = load i32, i32* %n.i296, align 4, !dbg !10398
  %add75.i425 = add i32 %351, %352, !dbg !10399
  br label %get_vlc2.exit430, !dbg !10400

cond.false76.i427:                                ; preds = %if.end68.i421
  %353 = load i32, i32* %re_size_plus8.i295, align 4, !dbg !10401
  br label %get_vlc2.exit430, !dbg !10402

get_vlc2.exit430:                                 ; preds = %cond.true74.i426, %cond.false76.i427
  %cond78.i428 = phi i32 [ %add75.i425, %cond.true74.i426 ], [ %353, %cond.false76.i427 ], !dbg !10403
  store i32 %cond78.i428, i32* %re_index.i293, align 4, !dbg !10404
  %354 = load i32, i32* %re_index.i293, align 4, !dbg !10405
  %355 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i288, align 8, !dbg !10406
  %index80.i429 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %355, i32 0, i32 2, !dbg !10407
  store i32 %354, i32* %index80.i429, align 8, !dbg !10408
  %356 = load i32, i32* %code.i292, align 4, !dbg !10409
  %sub97 = sub nsw i32 %356, 60, !dbg !10410
  %arrayidx98 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10411
  %357 = load i32, i32* %arrayidx98, align 4, !dbg !10412
  %add99 = add nsw i32 %357, %sub97, !dbg !10412
  store i32 %add99, i32* %arrayidx98, align 4, !dbg !10412
  %arrayidx100 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10413
  %358 = load i32, i32* %arrayidx100, align 4, !dbg !10413
  %cmp101 = icmp ugt i32 %358, 255, !dbg !10415
  br i1 %cmp101, label %if.then103, label %if.end106, !dbg !10416

if.then103:                                       ; preds = %get_vlc2.exit430
  %359 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10417
  %avctx104 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %359, i32 0, i32 1, !dbg !10419
  %360 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx104, align 8, !dbg !10419
  %361 = bitcast %struct.AVCodecContext* %360 to i8*, !dbg !10417
  %arrayidx105 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10420
  %362 = load i32, i32* %arrayidx105, align 4, !dbg !10420
  call void (i8*, i32, i8*, ...) @av_log(i8* %361, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i32 0, i32 0), i32 %362), !dbg !10421
  store i32 -1094995529, i32* %retval, align 4, !dbg !10422
  br label %return, !dbg !10422

if.end106:                                        ; preds = %get_vlc2.exit430
  %arrayidx107 = getelementptr inbounds [3 x i32], [3 x i32]* %offset, i64 0, i64 0, !dbg !10423
  %363 = load i32, i32* %arrayidx107, align 4, !dbg !10423
  %sub108 = sub nsw i32 %363, 100, !dbg !10424
  %add109 = add nsw i32 %sub108, 200, !dbg !10425
  %idxprom110 = sext i32 %add109 to i64, !dbg !10426
  %arrayidx111 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom110, !dbg !10426
  %364 = load float, float* %arrayidx111, align 4, !dbg !10426
  %sub112 = fsub float -0.000000e+00, %364, !dbg !10427
  %365 = load i32, i32* %idx, align 4, !dbg !10428
  %idxprom113 = sext i32 %365 to i64, !dbg !10429
  %366 = load float*, float** %sf.addr, align 8, !dbg !10429
  %arrayidx114 = getelementptr inbounds float, float* %366, i64 %idxprom113, !dbg !10429
  store float %sub112, float* %arrayidx114, align 4, !dbg !10430
  br label %for.inc115, !dbg !10431

for.inc115:                                       ; preds = %if.end106
  %367 = load i32, i32* %i, align 4, !dbg !10432
  %inc116 = add nsw i32 %367, 1, !dbg !10432
  store i32 %inc116, i32* %i, align 4, !dbg !10432
  %368 = load i32, i32* %idx, align 4, !dbg !10434
  %inc117 = add nsw i32 %368, 1, !dbg !10434
  store i32 %inc117, i32* %idx, align 4, !dbg !10434
  br label %for.cond92, !dbg !10435, !llvm.loop !10436

for.end118:                                       ; preds = %for.cond92
  br label %if.end119

if.end119:                                        ; preds = %for.end118, %for.end90
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %for.end48
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %for.end
  br label %for.cond2, !dbg !10437, !llvm.loop !10439

for.end122:                                       ; preds = %for.cond2
  br label %for.inc123, !dbg !10441

for.inc123:                                       ; preds = %for.end122
  %369 = load i32, i32* %g, align 4, !dbg !10442
  %inc124 = add nsw i32 %369, 1, !dbg !10442
  store i32 %inc124, i32* %g, align 4, !dbg !10442
  br label %for.cond, !dbg !10444, !llvm.loop !10445

for.end125:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10447
  br label %return, !dbg !10447

return:                                           ; preds = %for.end125, %if.then103
  %370 = load i32, i32* %retval, align 4, !dbg !10448
  ret i32 %370, !dbg !10448
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_pulses(%struct.Pulse* %pulse, %struct.GetBitContext* %gb, i16* %swb_offset, i32 %num_swb) #1 !dbg !10449 {
entry:
  %retval = alloca i32, align 4
  %pulse.addr = alloca %struct.Pulse*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %swb_offset.addr = alloca i16*, align 8
  %num_swb.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pulse_swb = alloca i32, align 4
  store %struct.Pulse* %pulse, %struct.Pulse** %pulse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Pulse** %pulse.addr, metadata !10453, metadata !2062), !dbg !10454
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10455, metadata !2062), !dbg !10456
  store i16* %swb_offset, i16** %swb_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %swb_offset.addr, metadata !10457, metadata !2062), !dbg !10458
  store i32 %num_swb, i32* %num_swb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_swb.addr, metadata !10459, metadata !2062), !dbg !10460
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10461, metadata !2062), !dbg !10462
  call void @llvm.dbg.declare(metadata i32* %pulse_swb, metadata !10463, metadata !2062), !dbg !10464
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10465
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !10466
  %add = add i32 %call, 1, !dbg !10467
  %1 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10468
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %1, i32 0, i32 0, !dbg !10469
  store i32 %add, i32* %num_pulse, align 4, !dbg !10470
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10471
  %call1 = call i32 @get_bits(%struct.GetBitContext* %2, i32 6), !dbg !10472
  store i32 %call1, i32* %pulse_swb, align 4, !dbg !10473
  %3 = load i32, i32* %pulse_swb, align 4, !dbg !10474
  %4 = load i32, i32* %num_swb.addr, align 4, !dbg !10476
  %cmp = icmp sge i32 %3, %4, !dbg !10477
  br i1 %cmp, label %if.then, label %if.end, !dbg !10478

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10479
  br label %return, !dbg !10479

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %pulse_swb, align 4, !dbg !10480
  %idxprom = sext i32 %5 to i64, !dbg !10481
  %6 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10481
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !10481
  %7 = load i16, i16* %arrayidx, align 2, !dbg !10481
  %conv = zext i16 %7 to i32, !dbg !10481
  %8 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10482
  %pos = getelementptr inbounds %struct.Pulse, %struct.Pulse* %8, i32 0, i32 2, !dbg !10483
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %pos, i64 0, i64 0, !dbg !10482
  store i32 %conv, i32* %arrayidx2, align 4, !dbg !10484
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10485
  %call3 = call i32 @get_bits(%struct.GetBitContext* %9, i32 5), !dbg !10486
  %10 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10487
  %pos4 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %10, i32 0, i32 2, !dbg !10488
  %arrayidx5 = getelementptr inbounds [4 x i32], [4 x i32]* %pos4, i64 0, i64 0, !dbg !10487
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !10489
  %add6 = add i32 %11, %call3, !dbg !10489
  store i32 %add6, i32* %arrayidx5, align 4, !dbg !10489
  %12 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10490
  %pos7 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %12, i32 0, i32 2, !dbg !10492
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %pos7, i64 0, i64 0, !dbg !10490
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !10490
  %14 = load i32, i32* %num_swb.addr, align 4, !dbg !10493
  %idxprom9 = sext i32 %14 to i64, !dbg !10494
  %15 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10494
  %arrayidx10 = getelementptr inbounds i16, i16* %15, i64 %idxprom9, !dbg !10494
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !10494
  %conv11 = zext i16 %16 to i32, !dbg !10494
  %cmp12 = icmp sge i32 %13, %conv11, !dbg !10495
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !10496

if.then14:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10497
  br label %return, !dbg !10497

if.end15:                                         ; preds = %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10498
  %call16 = call i32 @get_bits(%struct.GetBitContext* %17, i32 4), !dbg !10499
  %18 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10500
  %amp = getelementptr inbounds %struct.Pulse, %struct.Pulse* %18, i32 0, i32 3, !dbg !10501
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %amp, i64 0, i64 0, !dbg !10500
  store i32 %call16, i32* %arrayidx17, align 4, !dbg !10502
  store i32 1, i32* %i, align 4, !dbg !10503
  br label %for.cond, !dbg !10505

for.cond:                                         ; preds = %for.inc, %if.end15
  %19 = load i32, i32* %i, align 4, !dbg !10506
  %20 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10509
  %num_pulse18 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %20, i32 0, i32 0, !dbg !10510
  %21 = load i32, i32* %num_pulse18, align 4, !dbg !10510
  %cmp19 = icmp slt i32 %19, %21, !dbg !10511
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10512

for.body:                                         ; preds = %for.cond
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10513
  %call21 = call i32 @get_bits(%struct.GetBitContext* %22, i32 5), !dbg !10515
  %23 = load i32, i32* %i, align 4, !dbg !10516
  %sub = sub nsw i32 %23, 1, !dbg !10517
  %idxprom22 = sext i32 %sub to i64, !dbg !10518
  %24 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10518
  %pos23 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %24, i32 0, i32 2, !dbg !10519
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %pos23, i64 0, i64 %idxprom22, !dbg !10518
  %25 = load i32, i32* %arrayidx24, align 4, !dbg !10518
  %add25 = add i32 %call21, %25, !dbg !10520
  %26 = load i32, i32* %i, align 4, !dbg !10521
  %idxprom26 = sext i32 %26 to i64, !dbg !10522
  %27 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10522
  %pos27 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %27, i32 0, i32 2, !dbg !10523
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %pos27, i64 0, i64 %idxprom26, !dbg !10522
  store i32 %add25, i32* %arrayidx28, align 4, !dbg !10524
  %28 = load i32, i32* %i, align 4, !dbg !10525
  %idxprom29 = sext i32 %28 to i64, !dbg !10527
  %29 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10527
  %pos30 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %29, i32 0, i32 2, !dbg !10528
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %pos30, i64 0, i64 %idxprom29, !dbg !10527
  %30 = load i32, i32* %arrayidx31, align 4, !dbg !10527
  %31 = load i32, i32* %num_swb.addr, align 4, !dbg !10529
  %idxprom32 = sext i32 %31 to i64, !dbg !10530
  %32 = load i16*, i16** %swb_offset.addr, align 8, !dbg !10530
  %arrayidx33 = getelementptr inbounds i16, i16* %32, i64 %idxprom32, !dbg !10530
  %33 = load i16, i16* %arrayidx33, align 2, !dbg !10530
  %conv34 = zext i16 %33 to i32, !dbg !10530
  %cmp35 = icmp sge i32 %30, %conv34, !dbg !10531
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !10532

if.then37:                                        ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !10533
  br label %return, !dbg !10533

if.end38:                                         ; preds = %for.body
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10534
  %call39 = call i32 @get_bits(%struct.GetBitContext* %34, i32 4), !dbg !10535
  %35 = load i32, i32* %i, align 4, !dbg !10536
  %idxprom40 = sext i32 %35 to i64, !dbg !10537
  %36 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !10537
  %amp41 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %36, i32 0, i32 3, !dbg !10538
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %amp41, i64 0, i64 %idxprom40, !dbg !10537
  store i32 %call39, i32* %arrayidx42, align 4, !dbg !10539
  br label %for.inc, !dbg !10540

for.inc:                                          ; preds = %if.end38
  %37 = load i32, i32* %i, align 4, !dbg !10541
  %inc = add nsw i32 %37, 1, !dbg !10541
  store i32 %inc, i32* %i, align 4, !dbg !10541
  br label %for.cond, !dbg !10543, !llvm.loop !10544

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10546
  br label %return, !dbg !10546

return:                                           ; preds = %for.end, %if.then37, %if.then14, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !10547
  ret i32 %38, !dbg !10547
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_tns(%struct.AACContext* %ac, %struct.TemporalNoiseShaping* %tns, %struct.GetBitContext* %gb, %struct.IndividualChannelStream* %ics) #1 !dbg !10548 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %tns.addr = alloca %struct.TemporalNoiseShaping*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %w = alloca i32, align 4
  %filt = alloca i32, align 4
  %i = alloca i32, align 4
  %coef_len = alloca i32, align 4
  %coef_res = alloca i32, align 4
  %coef_compress = alloca i32, align 4
  %is8 = alloca i32, align 4
  %tns_max_order = alloca i32, align 4
  %tmp2_idx = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10553, metadata !2062), !dbg !10554
  store %struct.TemporalNoiseShaping* %tns, %struct.TemporalNoiseShaping** %tns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TemporalNoiseShaping** %tns.addr, metadata !10555, metadata !2062), !dbg !10556
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10557, metadata !2062), !dbg !10558
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !10559, metadata !2062), !dbg !10560
  call void @llvm.dbg.declare(metadata i32* %w, metadata !10561, metadata !2062), !dbg !10562
  call void @llvm.dbg.declare(metadata i32* %filt, metadata !10563, metadata !2062), !dbg !10564
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10565, metadata !2062), !dbg !10566
  call void @llvm.dbg.declare(metadata i32* %coef_len, metadata !10567, metadata !2062), !dbg !10568
  call void @llvm.dbg.declare(metadata i32* %coef_res, metadata !10569, metadata !2062), !dbg !10570
  call void @llvm.dbg.declare(metadata i32* %coef_compress, metadata !10571, metadata !2062), !dbg !10572
  call void @llvm.dbg.declare(metadata i32* %is8, metadata !10573, metadata !2062), !dbg !10574
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10575
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 1, !dbg !10576
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !10575
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10575
  %cmp = icmp eq i32 %1, 2, !dbg !10577
  %conv = zext i1 %cmp to i32, !dbg !10577
  store i32 %conv, i32* %is8, align 4, !dbg !10574
  call void @llvm.dbg.declare(metadata i32* %tns_max_order, metadata !10578, metadata !2062), !dbg !10579
  %2 = load i32, i32* %is8, align 4, !dbg !10580
  %tobool = icmp ne i32 %2, 0, !dbg !10580
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10580

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10581

cond.false:                                       ; preds = %entry
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10583
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 24, !dbg !10585
  %arrayidx1 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !10583
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx1, i32 0, i32 0, !dbg !10586
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !10587
  %4 = load i32, i32* %object_type, align 8, !dbg !10587
  %cmp2 = icmp eq i32 %4, 1, !dbg !10588
  %cond = select i1 %cmp2, i32 20, i32 12, !dbg !10583
  br label %cond.end, !dbg !10589

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ 7, %cond.true ], [ %cond, %cond.false ], !dbg !10590
  store i32 %cond4, i32* %tns_max_order, align 4, !dbg !10592
  store i32 0, i32* %w, align 4, !dbg !10593
  br label %for.cond, !dbg !10595

for.cond:                                         ; preds = %for.inc84, %cond.end
  %5 = load i32, i32* %w, align 4, !dbg !10596
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10599
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 9, !dbg !10600
  %7 = load i32, i32* %num_windows, align 4, !dbg !10600
  %cmp5 = icmp slt i32 %5, %7, !dbg !10601
  br i1 %cmp5, label %for.body, label %for.end86, !dbg !10602

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10603
  %9 = load i32, i32* %is8, align 4, !dbg !10606
  %sub = sub nsw i32 2, %9, !dbg !10607
  %call = call i32 @get_bits(%struct.GetBitContext* %8, i32 %sub), !dbg !10608
  %10 = load i32, i32* %w, align 4, !dbg !10609
  %idxprom = sext i32 %10 to i64, !dbg !10610
  %11 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10610
  %n_filt = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %11, i32 0, i32 1, !dbg !10611
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt, i64 0, i64 %idxprom, !dbg !10610
  store i32 %call, i32* %arrayidx7, align 4, !dbg !10612
  %tobool8 = icmp ne i32 %call, 0, !dbg !10612
  br i1 %tobool8, label %if.then, label %if.end83, !dbg !10613

if.then:                                          ; preds = %for.body
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10614
  %call9 = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !10616
  store i32 %call9, i32* %coef_res, align 4, !dbg !10617
  store i32 0, i32* %filt, align 4, !dbg !10618
  br label %for.cond10, !dbg !10620

for.cond10:                                       ; preds = %for.inc80, %if.then
  %13 = load i32, i32* %filt, align 4, !dbg !10621
  %14 = load i32, i32* %w, align 4, !dbg !10624
  %idxprom11 = sext i32 %14 to i64, !dbg !10625
  %15 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10625
  %n_filt12 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %15, i32 0, i32 1, !dbg !10626
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %n_filt12, i64 0, i64 %idxprom11, !dbg !10625
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !10625
  %cmp14 = icmp slt i32 %13, %16, !dbg !10627
  br i1 %cmp14, label %for.body16, label %for.end82, !dbg !10628

for.body16:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %tmp2_idx, metadata !10629, metadata !2062), !dbg !10631
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10632
  %18 = load i32, i32* %is8, align 4, !dbg !10633
  %mul = mul nsw i32 2, %18, !dbg !10634
  %sub17 = sub nsw i32 6, %mul, !dbg !10635
  %call18 = call i32 @get_bits(%struct.GetBitContext* %17, i32 %sub17), !dbg !10636
  %19 = load i32, i32* %filt, align 4, !dbg !10637
  %idxprom19 = sext i32 %19 to i64, !dbg !10638
  %20 = load i32, i32* %w, align 4, !dbg !10639
  %idxprom20 = sext i32 %20 to i64, !dbg !10638
  %21 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10638
  %length = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %21, i32 0, i32 2, !dbg !10640
  %arrayidx21 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %length, i64 0, i64 %idxprom20, !dbg !10638
  %arrayidx22 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !10638
  store i32 %call18, i32* %arrayidx22, align 4, !dbg !10641
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10642
  %23 = load i32, i32* %is8, align 4, !dbg !10644
  %mul23 = mul nsw i32 2, %23, !dbg !10645
  %sub24 = sub nsw i32 5, %mul23, !dbg !10646
  %call25 = call i32 @get_bits(%struct.GetBitContext* %22, i32 %sub24), !dbg !10647
  %24 = load i32, i32* %filt, align 4, !dbg !10648
  %idxprom26 = sext i32 %24 to i64, !dbg !10649
  %25 = load i32, i32* %w, align 4, !dbg !10650
  %idxprom27 = sext i32 %25 to i64, !dbg !10649
  %26 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10649
  %order = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %26, i32 0, i32 4, !dbg !10651
  %arrayidx28 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order, i64 0, i64 %idxprom27, !dbg !10649
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !10649
  store i32 %call25, i32* %arrayidx29, align 4, !dbg !10652
  %27 = load i32, i32* %tns_max_order, align 4, !dbg !10653
  %cmp30 = icmp sgt i32 %call25, %27, !dbg !10654
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !10655

if.then32:                                        ; preds = %for.body16
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10656
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 1, !dbg !10658
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10658
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !10656
  %31 = load i32, i32* %filt, align 4, !dbg !10659
  %idxprom33 = sext i32 %31 to i64, !dbg !10660
  %32 = load i32, i32* %w, align 4, !dbg !10661
  %idxprom34 = sext i32 %32 to i64, !dbg !10660
  %33 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10660
  %order35 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %33, i32 0, i32 4, !dbg !10662
  %arrayidx36 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order35, i64 0, i64 %idxprom34, !dbg !10660
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx36, i64 0, i64 %idxprom33, !dbg !10660
  %34 = load i32, i32* %arrayidx37, align 4, !dbg !10660
  %35 = load i32, i32* %tns_max_order, align 4, !dbg !10663
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.71, i32 0, i32 0), i32 %34, i32 %35), !dbg !10664
  %36 = load i32, i32* %filt, align 4, !dbg !10665
  %idxprom38 = sext i32 %36 to i64, !dbg !10666
  %37 = load i32, i32* %w, align 4, !dbg !10667
  %idxprom39 = sext i32 %37 to i64, !dbg !10666
  %38 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10666
  %order40 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %38, i32 0, i32 4, !dbg !10668
  %arrayidx41 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order40, i64 0, i64 %idxprom39, !dbg !10666
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41, i64 0, i64 %idxprom38, !dbg !10666
  store i32 0, i32* %arrayidx42, align 4, !dbg !10669
  store i32 -1094995529, i32* %retval, align 4, !dbg !10670
  br label %return, !dbg !10670

if.end:                                           ; preds = %for.body16
  %39 = load i32, i32* %filt, align 4, !dbg !10671
  %idxprom43 = sext i32 %39 to i64, !dbg !10673
  %40 = load i32, i32* %w, align 4, !dbg !10674
  %idxprom44 = sext i32 %40 to i64, !dbg !10673
  %41 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10673
  %order45 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %41, i32 0, i32 4, !dbg !10675
  %arrayidx46 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order45, i64 0, i64 %idxprom44, !dbg !10673
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom43, !dbg !10673
  %42 = load i32, i32* %arrayidx47, align 4, !dbg !10673
  %tobool48 = icmp ne i32 %42, 0, !dbg !10673
  br i1 %tobool48, label %if.then49, label %if.end79, !dbg !10676

if.then49:                                        ; preds = %if.end
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10677
  %call50 = call i32 @get_bits1(%struct.GetBitContext* %43), !dbg !10679
  %44 = load i32, i32* %filt, align 4, !dbg !10680
  %idxprom51 = sext i32 %44 to i64, !dbg !10681
  %45 = load i32, i32* %w, align 4, !dbg !10682
  %idxprom52 = sext i32 %45 to i64, !dbg !10681
  %46 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10681
  %direction = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %46, i32 0, i32 3, !dbg !10683
  %arrayidx53 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %direction, i64 0, i64 %idxprom52, !dbg !10681
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !10681
  store i32 %call50, i32* %arrayidx54, align 4, !dbg !10684
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10685
  %call55 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !10686
  store i32 %call55, i32* %coef_compress, align 4, !dbg !10687
  %48 = load i32, i32* %coef_res, align 4, !dbg !10688
  %add = add nsw i32 %48, 3, !dbg !10689
  %49 = load i32, i32* %coef_compress, align 4, !dbg !10690
  %sub56 = sub nsw i32 %add, %49, !dbg !10691
  store i32 %sub56, i32* %coef_len, align 4, !dbg !10692
  %50 = load i32, i32* %coef_compress, align 4, !dbg !10693
  %mul57 = mul nsw i32 2, %50, !dbg !10694
  %51 = load i32, i32* %coef_res, align 4, !dbg !10695
  %add58 = add nsw i32 %mul57, %51, !dbg !10696
  store i32 %add58, i32* %tmp2_idx, align 4, !dbg !10697
  store i32 0, i32* %i, align 4, !dbg !10698
  br label %for.cond59, !dbg !10700

for.cond59:                                       ; preds = %for.inc, %if.then49
  %52 = load i32, i32* %i, align 4, !dbg !10701
  %53 = load i32, i32* %filt, align 4, !dbg !10704
  %idxprom60 = sext i32 %53 to i64, !dbg !10705
  %54 = load i32, i32* %w, align 4, !dbg !10706
  %idxprom61 = sext i32 %54 to i64, !dbg !10705
  %55 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10705
  %order62 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %55, i32 0, i32 4, !dbg !10707
  %arrayidx63 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %order62, i64 0, i64 %idxprom61, !dbg !10705
  %arrayidx64 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx63, i64 0, i64 %idxprom60, !dbg !10705
  %56 = load i32, i32* %arrayidx64, align 4, !dbg !10705
  %cmp65 = icmp slt i32 %52, %56, !dbg !10708
  br i1 %cmp65, label %for.body67, label %for.end, !dbg !10709

for.body67:                                       ; preds = %for.cond59
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10710
  %58 = load i32, i32* %coef_len, align 4, !dbg !10711
  %call68 = call i32 @get_bits(%struct.GetBitContext* %57, i32 %58), !dbg !10712
  %idxprom69 = zext i32 %call68 to i64, !dbg !10713
  %59 = load i32, i32* %tmp2_idx, align 4, !dbg !10714
  %idxprom70 = sext i32 %59 to i64, !dbg !10713
  %arrayidx71 = getelementptr inbounds [4 x float*], [4 x float*]* @tns_tmp2_map, i64 0, i64 %idxprom70, !dbg !10713
  %60 = load float*, float** %arrayidx71, align 8, !dbg !10713
  %arrayidx72 = getelementptr inbounds float, float* %60, i64 %idxprom69, !dbg !10713
  %61 = load float, float* %arrayidx72, align 4, !dbg !10713
  %62 = load i32, i32* %i, align 4, !dbg !10715
  %idxprom73 = sext i32 %62 to i64, !dbg !10716
  %63 = load i32, i32* %filt, align 4, !dbg !10717
  %idxprom74 = sext i32 %63 to i64, !dbg !10716
  %64 = load i32, i32* %w, align 4, !dbg !10718
  %idxprom75 = sext i32 %64 to i64, !dbg !10716
  %65 = load %struct.TemporalNoiseShaping*, %struct.TemporalNoiseShaping** %tns.addr, align 8, !dbg !10716
  %coef = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %65, i32 0, i32 6, !dbg !10719
  %arrayidx76 = getelementptr inbounds [8 x [4 x [20 x float]]], [8 x [4 x [20 x float]]]* %coef, i64 0, i64 %idxprom75, !dbg !10716
  %arrayidx77 = getelementptr inbounds [4 x [20 x float]], [4 x [20 x float]]* %arrayidx76, i64 0, i64 %idxprom74, !dbg !10716
  %arrayidx78 = getelementptr inbounds [20 x float], [20 x float]* %arrayidx77, i64 0, i64 %idxprom73, !dbg !10716
  store float %61, float* %arrayidx78, align 4, !dbg !10720
  br label %for.inc, !dbg !10716

for.inc:                                          ; preds = %for.body67
  %66 = load i32, i32* %i, align 4, !dbg !10721
  %inc = add nsw i32 %66, 1, !dbg !10721
  store i32 %inc, i32* %i, align 4, !dbg !10721
  br label %for.cond59, !dbg !10723, !llvm.loop !10724

for.end:                                          ; preds = %for.cond59
  br label %if.end79, !dbg !10726

if.end79:                                         ; preds = %for.end, %if.end
  br label %for.inc80, !dbg !10727

for.inc80:                                        ; preds = %if.end79
  %67 = load i32, i32* %filt, align 4, !dbg !10728
  %inc81 = add nsw i32 %67, 1, !dbg !10728
  store i32 %inc81, i32* %filt, align 4, !dbg !10728
  br label %for.cond10, !dbg !10730, !llvm.loop !10731

for.end82:                                        ; preds = %for.cond10
  br label %if.end83, !dbg !10733

if.end83:                                         ; preds = %for.end82, %for.body
  br label %for.inc84, !dbg !10734

for.inc84:                                        ; preds = %if.end83
  %68 = load i32, i32* %w, align 4, !dbg !10735
  %inc85 = add nsw i32 %68, 1, !dbg !10735
  store i32 %inc85, i32* %w, align 4, !dbg !10735
  br label %for.cond, !dbg !10737, !llvm.loop !10738

for.end86:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10740
  br label %return, !dbg !10740

return:                                           ; preds = %for.end86, %if.then32
  %69 = load i32, i32* %retval, align 4, !dbg !10741
  ret i32 %69, !dbg !10741
}

; Function Attrs: nounwind uwtable
define internal void @decode_gain_control(%struct.SingleChannelElement* %sce, %struct.GetBitContext* %gb) #1 !dbg !1911 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %mode = alloca i32, align 4
  %bd = alloca i8, align 1
  %wd = alloca i8, align 1
  %ad = alloca i8, align 1
  %max_band = alloca i8, align 1
  %adjust_num = alloca i8, align 1
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !10742, metadata !2062), !dbg !10743
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10744, metadata !2062), !dbg !10745
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10746, metadata !2062), !dbg !10747
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !10748
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !10749
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 1, !dbg !10750
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !10748
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10748
  store i32 %1, i32* %mode, align 4, !dbg !10747
  call void @llvm.dbg.declare(metadata i8* %bd, metadata !10751, metadata !2062), !dbg !10752
  call void @llvm.dbg.declare(metadata i8* %wd, metadata !10753, metadata !2062), !dbg !10754
  call void @llvm.dbg.declare(metadata i8* %ad, metadata !10755, metadata !2062), !dbg !10756
  call void @llvm.dbg.declare(metadata i8* %max_band, metadata !10757, metadata !2062), !dbg !10758
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10759
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 2), !dbg !10760
  %conv = trunc i32 %call to i8, !dbg !10760
  store i8 %conv, i8* %max_band, align 1, !dbg !10758
  store i8 0, i8* %bd, align 1, !dbg !10761
  br label %for.cond, !dbg !10763

for.cond:                                         ; preds = %for.inc34, %entry
  %3 = load i8, i8* %bd, align 1, !dbg !10764
  %conv1 = zext i8 %3 to i32, !dbg !10764
  %4 = load i8, i8* %max_band, align 1, !dbg !10767
  %conv2 = zext i8 %4 to i32, !dbg !10767
  %cmp = icmp slt i32 %conv1, %conv2, !dbg !10768
  br i1 %cmp, label %for.body, label %for.end36, !dbg !10769

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %wd, align 1, !dbg !10770
  br label %for.cond4, !dbg !10773

for.cond4:                                        ; preds = %for.inc31, %for.body
  %5 = load i8, i8* %wd, align 1, !dbg !10774
  %conv5 = zext i8 %5 to i32, !dbg !10774
  %6 = load i32, i32* %mode, align 4, !dbg !10777
  %idxprom = sext i32 %6 to i64, !dbg !10778
  %arrayidx6 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom, !dbg !10778
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx6, i64 0, i64 0, !dbg !10778
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !10778
  %conv8 = zext i8 %7 to i32, !dbg !10778
  %cmp9 = icmp slt i32 %conv5, %conv8, !dbg !10779
  br i1 %cmp9, label %for.body11, label %for.end33, !dbg !10780

for.body11:                                       ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata i8* %adjust_num, metadata !10781, metadata !2062), !dbg !10783
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10784
  %call12 = call i32 @get_bits(%struct.GetBitContext* %8, i32 3), !dbg !10785
  %conv13 = trunc i32 %call12 to i8, !dbg !10785
  store i8 %conv13, i8* %adjust_num, align 1, !dbg !10783
  store i8 0, i8* %ad, align 1, !dbg !10786
  br label %for.cond14, !dbg !10788

for.cond14:                                       ; preds = %for.inc, %for.body11
  %9 = load i8, i8* %ad, align 1, !dbg !10789
  %conv15 = zext i8 %9 to i32, !dbg !10789
  %10 = load i8, i8* %adjust_num, align 1, !dbg !10792
  %conv16 = zext i8 %10 to i32, !dbg !10792
  %cmp17 = icmp slt i32 %conv15, %conv16, !dbg !10793
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !10794

for.body19:                                       ; preds = %for.cond14
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10795
  %12 = load i8, i8* %wd, align 1, !dbg !10797
  %conv20 = zext i8 %12 to i32, !dbg !10797
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !10798
  br i1 %cmp21, label %land.lhs.true, label %cond.false, !dbg !10799

land.lhs.true:                                    ; preds = %for.body19
  %13 = load i32, i32* %mode, align 4, !dbg !10800
  %idxprom23 = sext i32 %13 to i64, !dbg !10802
  %arrayidx24 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom23, !dbg !10802
  %arrayidx25 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx24, i64 0, i64 1, !dbg !10802
  %14 = load i8, i8* %arrayidx25, align 1, !dbg !10802
  %conv26 = zext i8 %14 to i32, !dbg !10802
  %tobool = icmp ne i32 %conv26, 0, !dbg !10802
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10803

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !10804

cond.false:                                       ; preds = %land.lhs.true, %for.body19
  %15 = load i32, i32* %mode, align 4, !dbg !10806
  %idxprom27 = sext i32 %15 to i64, !dbg !10807
  %arrayidx28 = getelementptr inbounds [4 x [3 x i8]], [4 x [3 x i8]]* @decode_gain_control.gain_mode, i64 0, i64 %idxprom27, !dbg !10807
  %arrayidx29 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx28, i64 0, i64 2, !dbg !10807
  %16 = load i8, i8* %arrayidx29, align 1, !dbg !10807
  %conv30 = zext i8 %16 to i32, !dbg !10807
  br label %cond.end, !dbg !10808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4, %cond.true ], [ %conv30, %cond.false ], !dbg !10810
  %add = add nsw i32 4, %cond, !dbg !10812
  call void @skip_bits(%struct.GetBitContext* %11, i32 %add), !dbg !10813
  br label %for.inc, !dbg !10814

for.inc:                                          ; preds = %cond.end
  %17 = load i8, i8* %ad, align 1, !dbg !10815
  %inc = add i8 %17, 1, !dbg !10815
  store i8 %inc, i8* %ad, align 1, !dbg !10815
  br label %for.cond14, !dbg !10817, !llvm.loop !10818

for.end:                                          ; preds = %for.cond14
  br label %for.inc31, !dbg !10820

for.inc31:                                        ; preds = %for.end
  %18 = load i8, i8* %wd, align 1, !dbg !10821
  %inc32 = add i8 %18, 1, !dbg !10821
  store i8 %inc32, i8* %wd, align 1, !dbg !10821
  br label %for.cond4, !dbg !10823, !llvm.loop !10824

for.end33:                                        ; preds = %for.cond4
  br label %for.inc34, !dbg !10826

for.inc34:                                        ; preds = %for.end33
  %19 = load i8, i8* %bd, align 1, !dbg !10827
  %inc35 = add i8 %19, 1, !dbg !10827
  store i8 %inc35, i8* %bd, align 1, !dbg !10827
  br label %for.cond, !dbg !10829, !llvm.loop !10830

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !10832
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_spectrum_and_dequant(%struct.AACContext* %ac, float* %coef, %struct.GetBitContext* %gb, float* %sf, i32 %pulse_present, %struct.Pulse* %pulse, %struct.IndividualChannelStream* %ics, i32* %band_type) #1 !dbg !10833 {
entry:
  %x.addr.i860 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i860, metadata !6126, metadata !2062), !dbg !10838
  %x.addr.i845 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i845, metadata !6126, metadata !2062), !dbg !10858
  %x.addr.i830 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i830, metadata !6126, metadata !2062), !dbg !10860
  %x.addr.i815 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i815, metadata !6126, metadata !2062), !dbg !10870
  %x.addr.i800 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i800, metadata !6126, metadata !2062), !dbg !10876
  %x.addr.i785 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i785, metadata !6126, metadata !2062), !dbg !10878
  %x.addr.i770 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i770, metadata !6126, metadata !2062), !dbg !10884
  %x.addr.i755 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i755, metadata !6126, metadata !2062), !dbg !10894
  %x.addr.i740 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i740, metadata !6126, metadata !2062), !dbg !10896
  %x.addr.i725 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i725, metadata !6126, metadata !2062), !dbg !10903
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6126, metadata !2062), !dbg !10913
  %previous_val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %previous_val.addr.i, metadata !10915, metadata !2062), !dbg !10919
  %v.i = alloca %union.anon.0, align 4
  call void @llvm.dbg.declare(metadata %union.anon.0* %v.i, metadata !10928, metadata !2062), !dbg !10933
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %coef.addr = alloca float*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sf.addr = alloca float*, align 8
  %pulse_present.addr = alloca i32, align 4
  %pulse.addr = alloca %struct.Pulse*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %band_type.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %g = alloca i32, align 4
  %idx = alloca i32, align 4
  %c = alloca i32, align 4
  %offsets = alloca i16*, align 8
  %coef_base = alloca float*, align 8
  %g_len = alloca i32, align 4
  %cbt_m1 = alloca i32, align 4
  %cfo = alloca float*, align 8
  %off_len = alloca i32, align 4
  %group = alloca i32, align 4
  %scale = alloca float, align 4
  %band_energy = alloca float, align 4
  %vq = alloca float*, align 8
  %cb_vector_idx = alloca i16*, align 8
  %vlc_tab = alloca [2 x i16]*, align 8
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %cf = alloca float*, align 8
  %len = alloca i32, align 4
  %code = alloca i32, align 4
  %cb_idx = alloca i32, align 4
  %n = alloca i32, align 4
  %nb_bits = alloca i32, align 4
  %index95 = alloca i32, align 4
  %cf160 = alloca float*, align 8
  %len161 = alloca i32, align 4
  %code163 = alloca i32, align 4
  %nnz = alloca i32, align 4
  %cb_idx164 = alloca i32, align 4
  %bits = alloca i32, align 4
  %n174 = alloca i32, align 4
  %nb_bits175 = alloca i32, align 4
  %index176 = alloca i32, align 4
  %cf266 = alloca float*, align 8
  %len267 = alloca i32, align 4
  %code269 = alloca i32, align 4
  %cb_idx270 = alloca i32, align 4
  %n280 = alloca i32, align 4
  %nb_bits281 = alloca i32, align 4
  %index282 = alloca i32, align 4
  %cf357 = alloca float*, align 8
  %len358 = alloca i32, align 4
  %code360 = alloca i32, align 4
  %nnz361 = alloca i32, align 4
  %cb_idx362 = alloca i32, align 4
  %sign = alloca i32, align 4
  %n372 = alloca i32, align 4
  %nb_bits373 = alloca i32, align 4
  %index374 = alloca i32, align 4
  %cf467 = alloca float*, align 8
  %icf = alloca i32*, align 8
  %len468 = alloca i32, align 4
  %code470 = alloca i32, align 4
  %nzt = alloca i32, align 4
  %nnz471 = alloca i32, align 4
  %cb_idx472 = alloca i32, align 4
  %bits473 = alloca i32, align 4
  %j = alloca i32, align 4
  %n483 = alloca i32, align 4
  %nb_bits484 = alloca i32, align 4
  %index485 = alloca i32, align 4
  %b = alloca i32, align 4
  %n570 = alloca i32, align 4
  %v = alloca i32, align 4
  %co = alloca float, align 4
  %ico = alloca float, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10934, metadata !2062), !dbg !10935
  store float* %coef, float** %coef.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coef.addr, metadata !10936, metadata !2062), !dbg !10937
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10938, metadata !2062), !dbg !10939
  store float* %sf, float** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sf.addr, metadata !10940, metadata !2062), !dbg !10941
  store i32 %pulse_present, i32* %pulse_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_present.addr, metadata !10942, metadata !2062), !dbg !10943
  store %struct.Pulse* %pulse, %struct.Pulse** %pulse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Pulse** %pulse.addr, metadata !10944, metadata !2062), !dbg !10945
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !10946, metadata !2062), !dbg !10947
  store i32* %band_type, i32** %band_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_type.addr, metadata !10948, metadata !2062), !dbg !10949
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10950, metadata !2062), !dbg !10951
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10952, metadata !2062), !dbg !10953
  call void @llvm.dbg.declare(metadata i32* %g, metadata !10954, metadata !2062), !dbg !10955
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10956, metadata !2062), !dbg !10957
  store i32 0, i32* %idx, align 4, !dbg !10957
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10958, metadata !2062), !dbg !10959
  %0 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10960
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %0, i32 0, i32 9, !dbg !10961
  %1 = load i32, i32* %num_windows, align 4, !dbg !10961
  %div = sdiv i32 1024, %1, !dbg !10962
  store i32 %div, i32* %c, align 4, !dbg !10959
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !10963, metadata !2062), !dbg !10964
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10965
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 6, !dbg !10966
  %3 = load i16*, i16** %swb_offset, align 8, !dbg !10966
  store i16* %3, i16** %offsets, align 8, !dbg !10964
  call void @llvm.dbg.declare(metadata float** %coef_base, metadata !10967, metadata !2062), !dbg !10968
  %4 = load float*, float** %coef.addr, align 8, !dbg !10969
  store float* %4, float** %coef_base, align 8, !dbg !10968
  store i32 0, i32* %g, align 4, !dbg !10970
  br label %for.cond, !dbg !10972

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %g, align 4, !dbg !10973
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10976
  %num_windows1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 9, !dbg !10977
  %7 = load i32, i32* %num_windows1, align 4, !dbg !10977
  %cmp = icmp slt i32 %5, %7, !dbg !10978
  br i1 %cmp, label %for.body, label %for.end, !dbg !10979

for.body:                                         ; preds = %for.cond
  %8 = load float*, float** %coef.addr, align 8, !dbg !10980
  %9 = load i32, i32* %g, align 4, !dbg !10981
  %mul = mul nsw i32 %9, 128, !dbg !10982
  %idx.ext = sext i32 %mul to i64, !dbg !10983
  %add.ptr = getelementptr inbounds float, float* %8, i64 %idx.ext, !dbg !10983
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10984
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 0, !dbg !10985
  %11 = load i8, i8* %max_sfb, align 8, !dbg !10985
  %idxprom = zext i8 %11 to i64, !dbg !10986
  %12 = load i16*, i16** %offsets, align 8, !dbg !10986
  %arrayidx = getelementptr inbounds i16, i16* %12, i64 %idxprom, !dbg !10986
  %13 = load i16, i16* %arrayidx, align 2, !dbg !10986
  %conv = zext i16 %13 to i32, !dbg !10986
  %idx.ext2 = sext i32 %conv to i64, !dbg !10987
  %add.ptr3 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext2, !dbg !10987
  %14 = bitcast float* %add.ptr3 to i8*, !dbg !10988
  %15 = load i32, i32* %c, align 4, !dbg !10989
  %16 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !10990
  %max_sfb4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %16, i32 0, i32 0, !dbg !10991
  %17 = load i8, i8* %max_sfb4, align 8, !dbg !10991
  %idxprom5 = zext i8 %17 to i64, !dbg !10992
  %18 = load i16*, i16** %offsets, align 8, !dbg !10992
  %arrayidx6 = getelementptr inbounds i16, i16* %18, i64 %idxprom5, !dbg !10992
  %19 = load i16, i16* %arrayidx6, align 2, !dbg !10992
  %conv7 = zext i16 %19 to i32, !dbg !10992
  %sub = sub nsw i32 %15, %conv7, !dbg !10993
  %conv8 = sext i32 %sub to i64, !dbg !10994
  %mul9 = mul i64 4, %conv8, !dbg !10995
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %mul9, i32 4, i1 false), !dbg !10988
  br label %for.inc, !dbg !10988

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %g, align 4, !dbg !10996
  %inc = add nsw i32 %20, 1, !dbg !10996
  store i32 %inc, i32* %g, align 4, !dbg !10996
  br label %for.cond, !dbg !10998, !llvm.loop !10999

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %g, align 4, !dbg !11001
  br label %for.cond10, !dbg !11002

for.cond10:                                       ; preds = %for.inc656, %for.end
  %21 = load i32, i32* %g, align 4, !dbg !11003
  %22 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11005
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %22, i32 0, i32 3, !dbg !11006
  %23 = load i32, i32* %num_window_groups, align 8, !dbg !11006
  %cmp11 = icmp slt i32 %21, %23, !dbg !11007
  br i1 %cmp11, label %for.body13, label %for.end658, !dbg !11008

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %g_len, metadata !11009, metadata !2062), !dbg !11010
  %24 = load i32, i32* %g, align 4, !dbg !11011
  %idxprom14 = sext i32 %24 to i64, !dbg !11012
  %25 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11012
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %25, i32 0, i32 4, !dbg !11013
  %arrayidx15 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom14, !dbg !11012
  %26 = load i8, i8* %arrayidx15, align 1, !dbg !11012
  %conv16 = zext i8 %26 to i32, !dbg !11012
  store i32 %conv16, i32* %g_len, align 4, !dbg !11010
  store i32 0, i32* %i, align 4, !dbg !11014
  br label %for.cond17, !dbg !11015

for.cond17:                                       ; preds = %for.inc649, %for.body13
  %27 = load i32, i32* %i, align 4, !dbg !11016
  %28 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !11018
  %max_sfb18 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %28, i32 0, i32 0, !dbg !11019
  %29 = load i8, i8* %max_sfb18, align 8, !dbg !11019
  %conv19 = zext i8 %29 to i32, !dbg !11018
  %cmp20 = icmp slt i32 %27, %conv19, !dbg !11020
  br i1 %cmp20, label %for.body22, label %for.end652, !dbg !11021

for.body22:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %cbt_m1, metadata !11022, metadata !2062), !dbg !11024
  %30 = load i32, i32* %idx, align 4, !dbg !11025
  %idxprom23 = sext i32 %30 to i64, !dbg !11026
  %31 = load i32*, i32** %band_type.addr, align 8, !dbg !11026
  %arrayidx24 = getelementptr inbounds i32, i32* %31, i64 %idxprom23, !dbg !11026
  %32 = load i32, i32* %arrayidx24, align 4, !dbg !11026
  %sub25 = sub i32 %32, 1, !dbg !11027
  store i32 %sub25, i32* %cbt_m1, align 4, !dbg !11024
  call void @llvm.dbg.declare(metadata float** %cfo, metadata !11028, metadata !2062), !dbg !11029
  %33 = load float*, float** %coef.addr, align 8, !dbg !11030
  %34 = load i32, i32* %i, align 4, !dbg !11031
  %idxprom26 = sext i32 %34 to i64, !dbg !11032
  %35 = load i16*, i16** %offsets, align 8, !dbg !11032
  %arrayidx27 = getelementptr inbounds i16, i16* %35, i64 %idxprom26, !dbg !11032
  %36 = load i16, i16* %arrayidx27, align 2, !dbg !11032
  %conv28 = zext i16 %36 to i32, !dbg !11032
  %idx.ext29 = sext i32 %conv28 to i64, !dbg !11033
  %add.ptr30 = getelementptr inbounds float, float* %33, i64 %idx.ext29, !dbg !11033
  store float* %add.ptr30, float** %cfo, align 8, !dbg !11029
  call void @llvm.dbg.declare(metadata i32* %off_len, metadata !11034, metadata !2062), !dbg !11035
  %37 = load i32, i32* %i, align 4, !dbg !11036
  %add = add nsw i32 %37, 1, !dbg !11037
  %idxprom31 = sext i32 %add to i64, !dbg !11038
  %38 = load i16*, i16** %offsets, align 8, !dbg !11038
  %arrayidx32 = getelementptr inbounds i16, i16* %38, i64 %idxprom31, !dbg !11038
  %39 = load i16, i16* %arrayidx32, align 2, !dbg !11038
  %conv33 = zext i16 %39 to i32, !dbg !11038
  %40 = load i32, i32* %i, align 4, !dbg !11039
  %idxprom34 = sext i32 %40 to i64, !dbg !11040
  %41 = load i16*, i16** %offsets, align 8, !dbg !11040
  %arrayidx35 = getelementptr inbounds i16, i16* %41, i64 %idxprom34, !dbg !11040
  %42 = load i16, i16* %arrayidx35, align 2, !dbg !11040
  %conv36 = zext i16 %42 to i32, !dbg !11040
  %sub37 = sub nsw i32 %conv33, %conv36, !dbg !11041
  store i32 %sub37, i32* %off_len, align 4, !dbg !11035
  call void @llvm.dbg.declare(metadata i32* %group, metadata !11042, metadata !2062), !dbg !11043
  %43 = load i32, i32* %cbt_m1, align 4, !dbg !11044
  %cmp38 = icmp uge i32 %43, 13, !dbg !11045
  br i1 %cmp38, label %if.then, label %if.else, !dbg !11046

if.then:                                          ; preds = %for.body22
  store i32 0, i32* %group, align 4, !dbg !11047
  br label %for.cond40, !dbg !11050

for.cond40:                                       ; preds = %for.inc46, %if.then
  %44 = load i32, i32* %group, align 4, !dbg !11051
  %45 = load i32, i32* %g_len, align 4, !dbg !11054
  %cmp41 = icmp ult i32 %44, %45, !dbg !11055
  br i1 %cmp41, label %for.body43, label %for.end49, !dbg !11056

for.body43:                                       ; preds = %for.cond40
  %46 = load float*, float** %cfo, align 8, !dbg !11057
  %47 = bitcast float* %46 to i8*, !dbg !11059
  %48 = load i32, i32* %off_len, align 4, !dbg !11060
  %conv44 = sext i32 %48 to i64, !dbg !11060
  %mul45 = mul i64 %conv44, 4, !dbg !11061
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 %mul45, i32 4, i1 false), !dbg !11059
  br label %for.inc46, !dbg !11062

for.inc46:                                        ; preds = %for.body43
  %49 = load i32, i32* %group, align 4, !dbg !11063
  %inc47 = add nsw i32 %49, 1, !dbg !11063
  store i32 %inc47, i32* %group, align 4, !dbg !11063
  %50 = load float*, float** %cfo, align 8, !dbg !11065
  %add.ptr48 = getelementptr inbounds float, float* %50, i64 128, !dbg !11065
  store float* %add.ptr48, float** %cfo, align 8, !dbg !11065
  br label %for.cond40, !dbg !11066, !llvm.loop !11067

for.end49:                                        ; preds = %for.cond40
  br label %if.end648, !dbg !11069

if.else:                                          ; preds = %for.body22
  %51 = load i32, i32* %cbt_m1, align 4, !dbg !11070
  %cmp50 = icmp eq i32 %51, 12, !dbg !11072
  br i1 %cmp50, label %if.then52, label %if.else79, !dbg !11070

if.then52:                                        ; preds = %if.else
  store i32 0, i32* %group, align 4, !dbg !11073
  br label %for.cond53, !dbg !11074

for.cond53:                                       ; preds = %for.inc75, %if.then52
  %52 = load i32, i32* %group, align 4, !dbg !11075
  %53 = load i32, i32* %g_len, align 4, !dbg !11077
  %cmp54 = icmp ult i32 %52, %53, !dbg !11078
  br i1 %cmp54, label %for.body56, label %for.end78, !dbg !11079

for.body56:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata float* %scale, metadata !11080, metadata !2062), !dbg !11081
  call void @llvm.dbg.declare(metadata float* %band_energy, metadata !11082, metadata !2062), !dbg !11083
  store i32 0, i32* %k, align 4, !dbg !11084
  br label %for.cond57, !dbg !11085

for.cond57:                                       ; preds = %for.inc66, %for.body56
  %54 = load i32, i32* %k, align 4, !dbg !11086
  %55 = load i32, i32* %off_len, align 4, !dbg !11088
  %cmp58 = icmp slt i32 %54, %55, !dbg !11089
  br i1 %cmp58, label %for.body60, label %for.end68, !dbg !11090

for.body60:                                       ; preds = %for.cond57
  %56 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11091
  %random_state = getelementptr inbounds %struct.AACContext, %struct.AACContext* %56, i32 0, i32 18, !dbg !11092
  %57 = load i32, i32* %random_state, align 32, !dbg !11092
  store i32 %57, i32* %previous_val.addr.i, align 4, !dbg !11093
  %u.i = bitcast %union.anon.0* %v.i to i32*, !dbg !11094
  %58 = load i32, i32* %previous_val.addr.i, align 4, !dbg !11095
  %mul.i = mul i32 %58, 1664525, !dbg !11096
  %add.i = add i32 %mul.i, 1013904223, !dbg !11097
  store i32 %add.i, i32* %u.i, align 4, !dbg !11094
  %s.i = bitcast %union.anon.0* %v.i to i32*, !dbg !11098
  %59 = load i32, i32* %s.i, align 4, !dbg !11098
  %60 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11099
  %random_state61 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %60, i32 0, i32 18, !dbg !11100
  store i32 %59, i32* %random_state61, align 32, !dbg !11101
  %61 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11102
  %random_state62 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 18, !dbg !11103
  %62 = load i32, i32* %random_state62, align 32, !dbg !11103
  %conv63 = sitofp i32 %62 to float, !dbg !11102
  %63 = load i32, i32* %k, align 4, !dbg !11104
  %idxprom64 = sext i32 %63 to i64, !dbg !11105
  %64 = load float*, float** %cfo, align 8, !dbg !11105
  %arrayidx65 = getelementptr inbounds float, float* %64, i64 %idxprom64, !dbg !11105
  store float %conv63, float* %arrayidx65, align 4, !dbg !11106
  br label %for.inc66, !dbg !11107

for.inc66:                                        ; preds = %for.body60
  %65 = load i32, i32* %k, align 4, !dbg !11108
  %inc67 = add nsw i32 %65, 1, !dbg !11108
  store i32 %inc67, i32* %k, align 4, !dbg !11108
  br label %for.cond57, !dbg !11110, !llvm.loop !11111

for.end68:                                        ; preds = %for.cond57
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11113
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %66, i32 0, i32 17, !dbg !11114
  %67 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !11114
  %scalarproduct_float = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %67, i32 0, i32 9, !dbg !11115
  %68 = load float (float*, float*, i32)*, float (float*, float*, i32)** %scalarproduct_float, align 8, !dbg !11115
  %69 = load float*, float** %cfo, align 8, !dbg !11116
  %70 = load float*, float** %cfo, align 8, !dbg !11117
  %71 = load i32, i32* %off_len, align 4, !dbg !11118
  %call69 = call float %68(float* %69, float* %70, i32 %71), !dbg !11113
  store float %call69, float* %band_energy, align 4, !dbg !11119
  %72 = load i32, i32* %idx, align 4, !dbg !11120
  %idxprom70 = sext i32 %72 to i64, !dbg !11121
  %73 = load float*, float** %sf.addr, align 8, !dbg !11121
  %arrayidx71 = getelementptr inbounds float, float* %73, i64 %idxprom70, !dbg !11121
  %74 = load float, float* %arrayidx71, align 4, !dbg !11121
  %75 = load float, float* %band_energy, align 4, !dbg !11122
  %call72 = call float @sqrtf(float %75) #10, !dbg !11123
  %div73 = fdiv float %74, %call72, !dbg !11124
  store float %div73, float* %scale, align 4, !dbg !11125
  %76 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11126
  %fdsp74 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %76, i32 0, i32 17, !dbg !11127
  %77 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp74, align 8, !dbg !11127
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %77, i32 0, i32 3, !dbg !11128
  %78 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !11128
  %79 = load float*, float** %cfo, align 8, !dbg !11129
  %80 = load float*, float** %cfo, align 8, !dbg !11130
  %81 = load float, float* %scale, align 4, !dbg !11131
  %82 = load i32, i32* %off_len, align 4, !dbg !11132
  call void %78(float* %79, float* %80, float %81, i32 %82), !dbg !11126
  br label %for.inc75, !dbg !11133

for.inc75:                                        ; preds = %for.end68
  %83 = load i32, i32* %group, align 4, !dbg !11134
  %inc76 = add nsw i32 %83, 1, !dbg !11134
  store i32 %inc76, i32* %group, align 4, !dbg !11134
  %84 = load float*, float** %cfo, align 8, !dbg !11136
  %add.ptr77 = getelementptr inbounds float, float* %84, i64 128, !dbg !11136
  store float* %add.ptr77, float** %cfo, align 8, !dbg !11136
  br label %for.cond53, !dbg !11137, !llvm.loop !11138

for.end78:                                        ; preds = %for.cond53
  br label %if.end647, !dbg !11140

if.else79:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %vq, metadata !11141, metadata !2062), !dbg !11142
  %85 = load i32, i32* %cbt_m1, align 4, !dbg !11143
  %idxprom80 = zext i32 %85 to i64, !dbg !11144
  %arrayidx81 = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vector_vals, i64 0, i64 %idxprom80, !dbg !11144
  %86 = load float*, float** %arrayidx81, align 8, !dbg !11144
  store float* %86, float** %vq, align 8, !dbg !11142
  call void @llvm.dbg.declare(metadata i16** %cb_vector_idx, metadata !11145, metadata !2062), !dbg !11146
  %87 = load i32, i32* %cbt_m1, align 4, !dbg !11147
  %idxprom82 = zext i32 %87 to i64, !dbg !11148
  %arrayidx83 = getelementptr inbounds [0 x i16*], [0 x i16*]* @ff_aac_codebook_vector_idx, i64 0, i64 %idxprom82, !dbg !11148
  %88 = load i16*, i16** %arrayidx83, align 8, !dbg !11148
  store i16* %88, i16** %cb_vector_idx, align 8, !dbg !11146
  call void @llvm.dbg.declare(metadata [2 x i16]** %vlc_tab, metadata !11149, metadata !2062), !dbg !11150
  %89 = load i32, i32* %cbt_m1, align 4, !dbg !11151
  %idxprom84 = zext i32 %89 to i64, !dbg !11152
  %arrayidx85 = getelementptr inbounds [11 x %struct.VLC], [11 x %struct.VLC]* @vlc_spectral, i64 0, i64 %idxprom84, !dbg !11152
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx85, i32 0, i32 1, !dbg !11153
  %90 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !11153
  store [2 x i16]* %90, [2 x i16]** %vlc_tab, align 8, !dbg !11150
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !11154, metadata !2062), !dbg !11155
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11156
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %91, i32 0, i32 2, !dbg !11157
  %92 = load i32, i32* %index, align 8, !dbg !11157
  store i32 %92, i32* %re_index, align 4, !dbg !11155
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !11158, metadata !2062), !dbg !11159
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !11160, metadata !2062), !dbg !11161
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11162
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 4, !dbg !11163
  %94 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !11163
  store i32 %94, i32* %re_size_plus8, align 4, !dbg !11161
  %95 = load i32, i32* %cbt_m1, align 4, !dbg !11164
  %shr = lshr i32 %95, 1, !dbg !11165
  switch i32 %shr, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb155
    i32 2, label %sw.bb261
    i32 3, label %sw.bb352
    i32 4, label %sw.bb352
  ], !dbg !11166

sw.bb:                                            ; preds = %if.else79
  store i32 0, i32* %group, align 4, !dbg !11167
  br label %for.cond86, !dbg !11168

for.cond86:                                       ; preds = %for.inc151, %sw.bb
  %96 = load i32, i32* %group, align 4, !dbg !11169
  %97 = load i32, i32* %g_len, align 4, !dbg !11171
  %cmp87 = icmp ult i32 %96, %97, !dbg !11172
  br i1 %cmp87, label %for.body89, label %for.end154, !dbg !11173

for.body89:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata float** %cf, metadata !11174, metadata !2062), !dbg !11175
  %98 = load float*, float** %cfo, align 8, !dbg !11176
  store float* %98, float** %cf, align 8, !dbg !11175
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11177, metadata !2062), !dbg !11178
  %99 = load i32, i32* %off_len, align 4, !dbg !11179
  store i32 %99, i32* %len, align 4, !dbg !11178
  br label %do.body, !dbg !11180, !llvm.loop !11181

do.body:                                          ; preds = %do.cond, %for.body89
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11182, metadata !2062), !dbg !11183
  call void @llvm.dbg.declare(metadata i32* %cb_idx, metadata !11184, metadata !2062), !dbg !11185
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11186
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %100, i32 0, i32 0, !dbg !11187
  %101 = load i8*, i8** %buffer, align 8, !dbg !11187
  %102 = load i32, i32* %re_index, align 4, !dbg !11188
  %shr90 = lshr i32 %102, 3, !dbg !11189
  %idx.ext91 = zext i32 %shr90 to i64, !dbg !11190
  %add.ptr92 = getelementptr inbounds i8, i8* %101, i64 %idx.ext91, !dbg !11190
  %103 = bitcast i8* %add.ptr92 to %union.unaligned_32*, !dbg !11191
  %l = bitcast %union.unaligned_32* %103 to i32*, !dbg !11191
  %104 = load i32, i32* %l, align 1, !dbg !11191
  store i32 %104, i32* %x.addr.i, align 4, !dbg !11192
  %105 = load i32, i32* %x.addr.i, align 4, !dbg !11193
  %shl.i = shl i32 %105, 8, !dbg !11194
  %and.i = and i32 %shl.i, 65280, !dbg !11195
  %106 = load i32, i32* %x.addr.i, align 4, !dbg !11196
  %shr.i = lshr i32 %106, 8, !dbg !11197
  %and1.i = and i32 %shr.i, 255, !dbg !11198
  %or.i = or i32 %and.i, %and1.i, !dbg !11199
  %shl2.i = shl i32 %or.i, 16, !dbg !11200
  %107 = load i32, i32* %x.addr.i, align 4, !dbg !11201
  %shr3.i = lshr i32 %107, 16, !dbg !11202
  %shl4.i = shl i32 %shr3.i, 8, !dbg !11203
  %and5.i = and i32 %shl4.i, 65280, !dbg !11204
  %108 = load i32, i32* %x.addr.i, align 4, !dbg !11205
  %shr6.i = lshr i32 %108, 16, !dbg !11206
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !11207
  %and8.i = and i32 %shr7.i, 255, !dbg !11208
  %or9.i = or i32 %and5.i, %and8.i, !dbg !11209
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !11210
  %109 = load i32, i32* %re_index, align 4, !dbg !11211
  %and = and i32 %109, 7, !dbg !11212
  %shl = shl i32 %or10.i, %and, !dbg !11213
  store i32 %shl, i32* %re_cache, align 4, !dbg !11214
  br label %do.body94, !dbg !11215, !llvm.loop !11216

do.body94:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11217, metadata !2062), !dbg !11218
  call void @llvm.dbg.declare(metadata i32* %nb_bits, metadata !11219, metadata !2062), !dbg !11220
  call void @llvm.dbg.declare(metadata i32* %index95, metadata !11221, metadata !2062), !dbg !11222
  %110 = load i32, i32* %re_cache, align 4, !dbg !11223
  %call96 = call i32 @NEG_USR32(i32 %110, i8 signext 8), !dbg !11225
  store i32 %call96, i32* %index95, align 4, !dbg !11226
  %111 = load i32, i32* %index95, align 4, !dbg !11227
  %idxprom97 = zext i32 %111 to i64, !dbg !11228
  %112 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11228
  %arrayidx98 = getelementptr inbounds [2 x i16], [2 x i16]* %112, i64 %idxprom97, !dbg !11228
  %arrayidx99 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx98, i64 0, i64 0, !dbg !11228
  %113 = load i16, i16* %arrayidx99, align 2, !dbg !11228
  %conv100 = sext i16 %113 to i32, !dbg !11228
  store i32 %conv100, i32* %code, align 4, !dbg !11229
  %114 = load i32, i32* %index95, align 4, !dbg !11230
  %idxprom101 = zext i32 %114 to i64, !dbg !11231
  %115 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11231
  %arrayidx102 = getelementptr inbounds [2 x i16], [2 x i16]* %115, i64 %idxprom101, !dbg !11231
  %arrayidx103 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx102, i64 0, i64 1, !dbg !11231
  %116 = load i16, i16* %arrayidx103, align 2, !dbg !11231
  %conv104 = sext i16 %116 to i32, !dbg !11231
  store i32 %conv104, i32* %n, align 4, !dbg !11232
  %117 = load i32, i32* %n, align 4, !dbg !11233
  %cmp105 = icmp slt i32 %117, 0, !dbg !11234
  br i1 %cmp105, label %if.then107, label %if.end, !dbg !11235

if.then107:                                       ; preds = %do.body94
  %118 = load i32, i32* %re_size_plus8, align 4, !dbg !11236
  %119 = load i32, i32* %re_index, align 4, !dbg !11238
  %add108 = add i32 %119, 8, !dbg !11239
  %cmp109 = icmp ugt i32 %118, %add108, !dbg !11240
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !11241

cond.true:                                        ; preds = %if.then107
  %120 = load i32, i32* %re_index, align 4, !dbg !11242
  %add111 = add i32 %120, 8, !dbg !11244
  br label %cond.end, !dbg !11245

cond.false:                                       ; preds = %if.then107
  %121 = load i32, i32* %re_size_plus8, align 4, !dbg !11246
  br label %cond.end, !dbg !11248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add111, %cond.true ], [ %121, %cond.false ], !dbg !11249
  store i32 %cond, i32* %re_index, align 4, !dbg !11250
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11251
  %buffer112 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %122, i32 0, i32 0, !dbg !11252
  %123 = load i8*, i8** %buffer112, align 8, !dbg !11252
  %124 = load i32, i32* %re_index, align 4, !dbg !11253
  %shr113 = lshr i32 %124, 3, !dbg !11254
  %idx.ext114 = zext i32 %shr113 to i64, !dbg !11255
  %add.ptr115 = getelementptr inbounds i8, i8* %123, i64 %idx.ext114, !dbg !11255
  %125 = bitcast i8* %add.ptr115 to %union.unaligned_32*, !dbg !11256
  %l116 = bitcast %union.unaligned_32* %125 to i32*, !dbg !11256
  %126 = load i32, i32* %l116, align 1, !dbg !11256
  store i32 %126, i32* %x.addr.i725, align 4, !dbg !11257
  %127 = load i32, i32* %x.addr.i725, align 4, !dbg !11258
  %shl.i726 = shl i32 %127, 8, !dbg !11259
  %and.i727 = and i32 %shl.i726, 65280, !dbg !11260
  %128 = load i32, i32* %x.addr.i725, align 4, !dbg !11261
  %shr.i728 = lshr i32 %128, 8, !dbg !11262
  %and1.i729 = and i32 %shr.i728, 255, !dbg !11263
  %or.i730 = or i32 %and.i727, %and1.i729, !dbg !11264
  %shl2.i731 = shl i32 %or.i730, 16, !dbg !11265
  %129 = load i32, i32* %x.addr.i725, align 4, !dbg !11266
  %shr3.i732 = lshr i32 %129, 16, !dbg !11267
  %shl4.i733 = shl i32 %shr3.i732, 8, !dbg !11268
  %and5.i734 = and i32 %shl4.i733, 65280, !dbg !11269
  %130 = load i32, i32* %x.addr.i725, align 4, !dbg !11270
  %shr6.i735 = lshr i32 %130, 16, !dbg !11271
  %shr7.i736 = lshr i32 %shr6.i735, 8, !dbg !11272
  %and8.i737 = and i32 %shr7.i736, 255, !dbg !11273
  %or9.i738 = or i32 %and5.i734, %and8.i737, !dbg !11274
  %or10.i739 = or i32 %shl2.i731, %or9.i738, !dbg !11275
  %131 = load i32, i32* %re_index, align 4, !dbg !11276
  %and118 = and i32 %131, 7, !dbg !11277
  %shl119 = shl i32 %or10.i739, %and118, !dbg !11278
  store i32 %shl119, i32* %re_cache, align 4, !dbg !11279
  %132 = load i32, i32* %n, align 4, !dbg !11280
  %sub120 = sub nsw i32 0, %132, !dbg !11281
  store i32 %sub120, i32* %nb_bits, align 4, !dbg !11282
  %133 = load i32, i32* %re_cache, align 4, !dbg !11283
  %134 = load i32, i32* %nb_bits, align 4, !dbg !11284
  %conv121 = trunc i32 %134 to i8, !dbg !11284
  %call122 = call i32 @NEG_USR32(i32 %133, i8 signext %conv121), !dbg !11285
  %135 = load i32, i32* %code, align 4, !dbg !11287
  %add123 = add i32 %call122, %135, !dbg !11288
  store i32 %add123, i32* %index95, align 4, !dbg !11289
  %136 = load i32, i32* %index95, align 4, !dbg !11290
  %idxprom124 = zext i32 %136 to i64, !dbg !11291
  %137 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11291
  %arrayidx125 = getelementptr inbounds [2 x i16], [2 x i16]* %137, i64 %idxprom124, !dbg !11291
  %arrayidx126 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx125, i64 0, i64 0, !dbg !11291
  %138 = load i16, i16* %arrayidx126, align 2, !dbg !11291
  %conv127 = sext i16 %138 to i32, !dbg !11291
  store i32 %conv127, i32* %code, align 4, !dbg !11292
  %139 = load i32, i32* %index95, align 4, !dbg !11293
  %idxprom128 = zext i32 %139 to i64, !dbg !11294
  %140 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11294
  %arrayidx129 = getelementptr inbounds [2 x i16], [2 x i16]* %140, i64 %idxprom128, !dbg !11294
  %arrayidx130 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx129, i64 0, i64 1, !dbg !11294
  %141 = load i16, i16* %arrayidx130, align 2, !dbg !11294
  %conv131 = sext i16 %141 to i32, !dbg !11294
  store i32 %conv131, i32* %n, align 4, !dbg !11295
  br label %if.end, !dbg !11296

if.end:                                           ; preds = %cond.end, %do.body94
  br label %do.body132, !dbg !11297, !llvm.loop !11299

do.body132:                                       ; preds = %if.end
  %142 = load i32, i32* %n, align 4, !dbg !11301
  %143 = load i32, i32* %re_cache, align 4, !dbg !11304
  %shl133 = shl i32 %143, %142, !dbg !11304
  store i32 %shl133, i32* %re_cache, align 4, !dbg !11304
  %144 = load i32, i32* %re_size_plus8, align 4, !dbg !11305
  %145 = load i32, i32* %re_index, align 4, !dbg !11306
  %146 = load i32, i32* %n, align 4, !dbg !11307
  %add134 = add i32 %145, %146, !dbg !11308
  %cmp135 = icmp ugt i32 %144, %add134, !dbg !11309
  br i1 %cmp135, label %cond.true137, label %cond.false139, !dbg !11310

cond.true137:                                     ; preds = %do.body132
  %147 = load i32, i32* %re_index, align 4, !dbg !11311
  %148 = load i32, i32* %n, align 4, !dbg !11313
  %add138 = add i32 %147, %148, !dbg !11314
  br label %cond.end140, !dbg !11315

cond.false139:                                    ; preds = %do.body132
  %149 = load i32, i32* %re_size_plus8, align 4, !dbg !11316
  br label %cond.end140, !dbg !11318

cond.end140:                                      ; preds = %cond.false139, %cond.true137
  %cond141 = phi i32 [ %add138, %cond.true137 ], [ %149, %cond.false139 ], !dbg !11319
  store i32 %cond141, i32* %re_index, align 4, !dbg !11321
  br label %do.end, !dbg !11322

do.end:                                           ; preds = %cond.end140
  br label %do.end142, !dbg !11323

do.end142:                                        ; preds = %do.end
  %150 = load i32, i32* %code, align 4, !dbg !11325
  %idxprom143 = sext i32 %150 to i64, !dbg !11326
  %151 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11326
  %arrayidx144 = getelementptr inbounds i16, i16* %151, i64 %idxprom143, !dbg !11326
  %152 = load i16, i16* %arrayidx144, align 2, !dbg !11326
  %conv145 = zext i16 %152 to i32, !dbg !11326
  store i32 %conv145, i32* %cb_idx, align 4, !dbg !11327
  %153 = load float*, float** %cf, align 8, !dbg !11328
  %154 = load float*, float** %vq, align 8, !dbg !11329
  %155 = load i32, i32* %cb_idx, align 4, !dbg !11330
  %156 = load float*, float** %sf.addr, align 8, !dbg !11331
  %157 = load i32, i32* %idx, align 4, !dbg !11332
  %idx.ext146 = sext i32 %157 to i64, !dbg !11333
  %add.ptr147 = getelementptr inbounds float, float* %156, i64 %idx.ext146, !dbg !11333
  %call148 = call float* @VMUL4(float* %153, float* %154, i32 %155, float* %add.ptr147), !dbg !11334
  store float* %call148, float** %cf, align 8, !dbg !11335
  br label %do.cond, !dbg !11336

do.cond:                                          ; preds = %do.end142
  %158 = load i32, i32* %len, align 4, !dbg !11337
  %sub149 = sub nsw i32 %158, 4, !dbg !11337
  store i32 %sub149, i32* %len, align 4, !dbg !11337
  %tobool = icmp ne i32 %sub149, 0, !dbg !11339
  br i1 %tobool, label %do.body, label %do.end150, !dbg !11339, !llvm.loop !11181

do.end150:                                        ; preds = %do.cond
  br label %for.inc151, !dbg !11340

for.inc151:                                       ; preds = %do.end150
  %159 = load i32, i32* %group, align 4, !dbg !11341
  %inc152 = add nsw i32 %159, 1, !dbg !11341
  store i32 %inc152, i32* %group, align 4, !dbg !11341
  %160 = load float*, float** %cfo, align 8, !dbg !11343
  %add.ptr153 = getelementptr inbounds float, float* %160, i64 128, !dbg !11343
  store float* %add.ptr153, float** %cfo, align 8, !dbg !11343
  br label %for.cond86, !dbg !11344, !llvm.loop !11345

for.end154:                                       ; preds = %for.cond86
  br label %sw.epilog, !dbg !11347

sw.bb155:                                         ; preds = %if.else79
  store i32 0, i32* %group, align 4, !dbg !11348
  br label %for.cond156, !dbg !11349

for.cond156:                                      ; preds = %for.inc257, %sw.bb155
  %161 = load i32, i32* %group, align 4, !dbg !11350
  %162 = load i32, i32* %g_len, align 4, !dbg !11352
  %cmp157 = icmp ult i32 %161, %162, !dbg !11353
  br i1 %cmp157, label %for.body159, label %for.end260, !dbg !11354

for.body159:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata float** %cf160, metadata !11355, metadata !2062), !dbg !11356
  %163 = load float*, float** %cfo, align 8, !dbg !11357
  store float* %163, float** %cf160, align 8, !dbg !11356
  call void @llvm.dbg.declare(metadata i32* %len161, metadata !11358, metadata !2062), !dbg !11359
  %164 = load i32, i32* %off_len, align 4, !dbg !11360
  store i32 %164, i32* %len161, align 4, !dbg !11359
  br label %do.body162, !dbg !11361, !llvm.loop !11362

do.body162:                                       ; preds = %do.cond253, %for.body159
  call void @llvm.dbg.declare(metadata i32* %code163, metadata !11363, metadata !2062), !dbg !11364
  call void @llvm.dbg.declare(metadata i32* %nnz, metadata !11365, metadata !2062), !dbg !11366
  call void @llvm.dbg.declare(metadata i32* %cb_idx164, metadata !11367, metadata !2062), !dbg !11368
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11369, metadata !2062), !dbg !11370
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11371
  %buffer165 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %165, i32 0, i32 0, !dbg !11372
  %166 = load i8*, i8** %buffer165, align 8, !dbg !11372
  %167 = load i32, i32* %re_index, align 4, !dbg !11373
  %shr166 = lshr i32 %167, 3, !dbg !11374
  %idx.ext167 = zext i32 %shr166 to i64, !dbg !11375
  %add.ptr168 = getelementptr inbounds i8, i8* %166, i64 %idx.ext167, !dbg !11375
  %168 = bitcast i8* %add.ptr168 to %union.unaligned_32*, !dbg !11376
  %l169 = bitcast %union.unaligned_32* %168 to i32*, !dbg !11376
  %169 = load i32, i32* %l169, align 1, !dbg !11376
  store i32 %169, i32* %x.addr.i755, align 4, !dbg !11377
  %170 = load i32, i32* %x.addr.i755, align 4, !dbg !11378
  %shl.i756 = shl i32 %170, 8, !dbg !11379
  %and.i757 = and i32 %shl.i756, 65280, !dbg !11380
  %171 = load i32, i32* %x.addr.i755, align 4, !dbg !11381
  %shr.i758 = lshr i32 %171, 8, !dbg !11382
  %and1.i759 = and i32 %shr.i758, 255, !dbg !11383
  %or.i760 = or i32 %and.i757, %and1.i759, !dbg !11384
  %shl2.i761 = shl i32 %or.i760, 16, !dbg !11385
  %172 = load i32, i32* %x.addr.i755, align 4, !dbg !11386
  %shr3.i762 = lshr i32 %172, 16, !dbg !11387
  %shl4.i763 = shl i32 %shr3.i762, 8, !dbg !11388
  %and5.i764 = and i32 %shl4.i763, 65280, !dbg !11389
  %173 = load i32, i32* %x.addr.i755, align 4, !dbg !11390
  %shr6.i765 = lshr i32 %173, 16, !dbg !11391
  %shr7.i766 = lshr i32 %shr6.i765, 8, !dbg !11392
  %and8.i767 = and i32 %shr7.i766, 255, !dbg !11393
  %or9.i768 = or i32 %and5.i764, %and8.i767, !dbg !11394
  %or10.i769 = or i32 %shl2.i761, %or9.i768, !dbg !11395
  %174 = load i32, i32* %re_index, align 4, !dbg !11396
  %and171 = and i32 %174, 7, !dbg !11397
  %shl172 = shl i32 %or10.i769, %and171, !dbg !11398
  store i32 %shl172, i32* %re_cache, align 4, !dbg !11399
  br label %do.body173, !dbg !11400, !llvm.loop !11401

do.body173:                                       ; preds = %do.body162
  call void @llvm.dbg.declare(metadata i32* %n174, metadata !11402, metadata !2062), !dbg !11403
  call void @llvm.dbg.declare(metadata i32* %nb_bits175, metadata !11404, metadata !2062), !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %index176, metadata !11406, metadata !2062), !dbg !11407
  %175 = load i32, i32* %re_cache, align 4, !dbg !11408
  %call177 = call i32 @NEG_USR32(i32 %175, i8 signext 8), !dbg !11410
  store i32 %call177, i32* %index176, align 4, !dbg !11411
  %176 = load i32, i32* %index176, align 4, !dbg !11412
  %idxprom178 = zext i32 %176 to i64, !dbg !11413
  %177 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11413
  %arrayidx179 = getelementptr inbounds [2 x i16], [2 x i16]* %177, i64 %idxprom178, !dbg !11413
  %arrayidx180 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx179, i64 0, i64 0, !dbg !11413
  %178 = load i16, i16* %arrayidx180, align 2, !dbg !11413
  %conv181 = sext i16 %178 to i32, !dbg !11413
  store i32 %conv181, i32* %code163, align 4, !dbg !11414
  %179 = load i32, i32* %index176, align 4, !dbg !11415
  %idxprom182 = zext i32 %179 to i64, !dbg !11416
  %180 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11416
  %arrayidx183 = getelementptr inbounds [2 x i16], [2 x i16]* %180, i64 %idxprom182, !dbg !11416
  %arrayidx184 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx183, i64 0, i64 1, !dbg !11416
  %181 = load i16, i16* %arrayidx184, align 2, !dbg !11416
  %conv185 = sext i16 %181 to i32, !dbg !11416
  store i32 %conv185, i32* %n174, align 4, !dbg !11417
  %182 = load i32, i32* %n174, align 4, !dbg !11418
  %cmp186 = icmp slt i32 %182, 0, !dbg !11419
  br i1 %cmp186, label %if.then188, label %if.end217, !dbg !11420

if.then188:                                       ; preds = %do.body173
  %183 = load i32, i32* %re_size_plus8, align 4, !dbg !11421
  %184 = load i32, i32* %re_index, align 4, !dbg !11423
  %add189 = add i32 %184, 8, !dbg !11424
  %cmp190 = icmp ugt i32 %183, %add189, !dbg !11425
  br i1 %cmp190, label %cond.true192, label %cond.false194, !dbg !11426

cond.true192:                                     ; preds = %if.then188
  %185 = load i32, i32* %re_index, align 4, !dbg !11427
  %add193 = add i32 %185, 8, !dbg !11429
  br label %cond.end195, !dbg !11430

cond.false194:                                    ; preds = %if.then188
  %186 = load i32, i32* %re_size_plus8, align 4, !dbg !11431
  br label %cond.end195, !dbg !11433

cond.end195:                                      ; preds = %cond.false194, %cond.true192
  %cond196 = phi i32 [ %add193, %cond.true192 ], [ %186, %cond.false194 ], !dbg !11434
  store i32 %cond196, i32* %re_index, align 4, !dbg !11435
  %187 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11436
  %buffer197 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %187, i32 0, i32 0, !dbg !11437
  %188 = load i8*, i8** %buffer197, align 8, !dbg !11437
  %189 = load i32, i32* %re_index, align 4, !dbg !11438
  %shr198 = lshr i32 %189, 3, !dbg !11439
  %idx.ext199 = zext i32 %shr198 to i64, !dbg !11440
  %add.ptr200 = getelementptr inbounds i8, i8* %188, i64 %idx.ext199, !dbg !11440
  %190 = bitcast i8* %add.ptr200 to %union.unaligned_32*, !dbg !11441
  %l201 = bitcast %union.unaligned_32* %190 to i32*, !dbg !11441
  %191 = load i32, i32* %l201, align 1, !dbg !11441
  store i32 %191, i32* %x.addr.i770, align 4, !dbg !11442
  %192 = load i32, i32* %x.addr.i770, align 4, !dbg !11443
  %shl.i771 = shl i32 %192, 8, !dbg !11444
  %and.i772 = and i32 %shl.i771, 65280, !dbg !11445
  %193 = load i32, i32* %x.addr.i770, align 4, !dbg !11446
  %shr.i773 = lshr i32 %193, 8, !dbg !11447
  %and1.i774 = and i32 %shr.i773, 255, !dbg !11448
  %or.i775 = or i32 %and.i772, %and1.i774, !dbg !11449
  %shl2.i776 = shl i32 %or.i775, 16, !dbg !11450
  %194 = load i32, i32* %x.addr.i770, align 4, !dbg !11451
  %shr3.i777 = lshr i32 %194, 16, !dbg !11452
  %shl4.i778 = shl i32 %shr3.i777, 8, !dbg !11453
  %and5.i779 = and i32 %shl4.i778, 65280, !dbg !11454
  %195 = load i32, i32* %x.addr.i770, align 4, !dbg !11455
  %shr6.i780 = lshr i32 %195, 16, !dbg !11456
  %shr7.i781 = lshr i32 %shr6.i780, 8, !dbg !11457
  %and8.i782 = and i32 %shr7.i781, 255, !dbg !11458
  %or9.i783 = or i32 %and5.i779, %and8.i782, !dbg !11459
  %or10.i784 = or i32 %shl2.i776, %or9.i783, !dbg !11460
  %196 = load i32, i32* %re_index, align 4, !dbg !11461
  %and203 = and i32 %196, 7, !dbg !11462
  %shl204 = shl i32 %or10.i784, %and203, !dbg !11463
  store i32 %shl204, i32* %re_cache, align 4, !dbg !11464
  %197 = load i32, i32* %n174, align 4, !dbg !11465
  %sub205 = sub nsw i32 0, %197, !dbg !11466
  store i32 %sub205, i32* %nb_bits175, align 4, !dbg !11467
  %198 = load i32, i32* %re_cache, align 4, !dbg !11468
  %199 = load i32, i32* %nb_bits175, align 4, !dbg !11469
  %conv206 = trunc i32 %199 to i8, !dbg !11469
  %call207 = call i32 @NEG_USR32(i32 %198, i8 signext %conv206), !dbg !11470
  %200 = load i32, i32* %code163, align 4, !dbg !11472
  %add208 = add i32 %call207, %200, !dbg !11473
  store i32 %add208, i32* %index176, align 4, !dbg !11474
  %201 = load i32, i32* %index176, align 4, !dbg !11475
  %idxprom209 = zext i32 %201 to i64, !dbg !11476
  %202 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11476
  %arrayidx210 = getelementptr inbounds [2 x i16], [2 x i16]* %202, i64 %idxprom209, !dbg !11476
  %arrayidx211 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx210, i64 0, i64 0, !dbg !11476
  %203 = load i16, i16* %arrayidx211, align 2, !dbg !11476
  %conv212 = sext i16 %203 to i32, !dbg !11476
  store i32 %conv212, i32* %code163, align 4, !dbg !11477
  %204 = load i32, i32* %index176, align 4, !dbg !11478
  %idxprom213 = zext i32 %204 to i64, !dbg !11479
  %205 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11479
  %arrayidx214 = getelementptr inbounds [2 x i16], [2 x i16]* %205, i64 %idxprom213, !dbg !11479
  %arrayidx215 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx214, i64 0, i64 1, !dbg !11479
  %206 = load i16, i16* %arrayidx215, align 2, !dbg !11479
  %conv216 = sext i16 %206 to i32, !dbg !11479
  store i32 %conv216, i32* %n174, align 4, !dbg !11480
  br label %if.end217, !dbg !11481

if.end217:                                        ; preds = %cond.end195, %do.body173
  br label %do.body218, !dbg !11482, !llvm.loop !11484

do.body218:                                       ; preds = %if.end217
  %207 = load i32, i32* %n174, align 4, !dbg !11486
  %208 = load i32, i32* %re_cache, align 4, !dbg !11489
  %shl219 = shl i32 %208, %207, !dbg !11489
  store i32 %shl219, i32* %re_cache, align 4, !dbg !11489
  %209 = load i32, i32* %re_size_plus8, align 4, !dbg !11490
  %210 = load i32, i32* %re_index, align 4, !dbg !11491
  %211 = load i32, i32* %n174, align 4, !dbg !11492
  %add220 = add i32 %210, %211, !dbg !11493
  %cmp221 = icmp ugt i32 %209, %add220, !dbg !11494
  br i1 %cmp221, label %cond.true223, label %cond.false225, !dbg !11495

cond.true223:                                     ; preds = %do.body218
  %212 = load i32, i32* %re_index, align 4, !dbg !11496
  %213 = load i32, i32* %n174, align 4, !dbg !11498
  %add224 = add i32 %212, %213, !dbg !11499
  br label %cond.end226, !dbg !11500

cond.false225:                                    ; preds = %do.body218
  %214 = load i32, i32* %re_size_plus8, align 4, !dbg !11501
  br label %cond.end226, !dbg !11503

cond.end226:                                      ; preds = %cond.false225, %cond.true223
  %cond227 = phi i32 [ %add224, %cond.true223 ], [ %214, %cond.false225 ], !dbg !11504
  store i32 %cond227, i32* %re_index, align 4, !dbg !11506
  br label %do.end229, !dbg !11507

do.end229:                                        ; preds = %cond.end226
  br label %do.end231, !dbg !11508

do.end231:                                        ; preds = %do.end229
  %215 = load i32, i32* %code163, align 4, !dbg !11510
  %idxprom232 = sext i32 %215 to i64, !dbg !11511
  %216 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11511
  %arrayidx233 = getelementptr inbounds i16, i16* %216, i64 %idxprom232, !dbg !11511
  %217 = load i16, i16* %arrayidx233, align 2, !dbg !11511
  %conv234 = zext i16 %217 to i32, !dbg !11511
  store i32 %conv234, i32* %cb_idx164, align 4, !dbg !11512
  %218 = load i32, i32* %cb_idx164, align 4, !dbg !11513
  %shr235 = lshr i32 %218, 8, !dbg !11514
  %and236 = and i32 %shr235, 15, !dbg !11515
  store i32 %and236, i32* %nnz, align 4, !dbg !11516
  %219 = load i32, i32* %nnz, align 4, !dbg !11517
  %tobool237 = icmp ne i32 %219, 0, !dbg !11517
  br i1 %tobool237, label %cond.true238, label %cond.false239, !dbg !11517

cond.true238:                                     ; preds = %do.end231
  %220 = load i32, i32* %re_cache, align 4, !dbg !11518
  br label %cond.end240, !dbg !11520

cond.false239:                                    ; preds = %do.end231
  br label %cond.end240, !dbg !11521

cond.end240:                                      ; preds = %cond.false239, %cond.true238
  %cond241 = phi i32 [ %220, %cond.true238 ], [ 0, %cond.false239 ], !dbg !11523
  store i32 %cond241, i32* %bits, align 4, !dbg !11525
  %221 = load i32, i32* %re_size_plus8, align 4, !dbg !11526
  %222 = load i32, i32* %re_index, align 4, !dbg !11527
  %223 = load i32, i32* %nnz, align 4, !dbg !11528
  %add242 = add i32 %222, %223, !dbg !11529
  %cmp243 = icmp ugt i32 %221, %add242, !dbg !11530
  br i1 %cmp243, label %cond.true245, label %cond.false247, !dbg !11531

cond.true245:                                     ; preds = %cond.end240
  %224 = load i32, i32* %re_index, align 4, !dbg !11532
  %225 = load i32, i32* %nnz, align 4, !dbg !11533
  %add246 = add i32 %224, %225, !dbg !11534
  br label %cond.end248, !dbg !11535

cond.false247:                                    ; preds = %cond.end240
  %226 = load i32, i32* %re_size_plus8, align 4, !dbg !11536
  br label %cond.end248, !dbg !11537

cond.end248:                                      ; preds = %cond.false247, %cond.true245
  %cond249 = phi i32 [ %add246, %cond.true245 ], [ %226, %cond.false247 ], !dbg !11538
  store i32 %cond249, i32* %re_index, align 4, !dbg !11539
  %227 = load float*, float** %cf160, align 8, !dbg !11540
  %228 = load float*, float** %vq, align 8, !dbg !11541
  %229 = load i32, i32* %cb_idx164, align 4, !dbg !11542
  %230 = load i32, i32* %bits, align 4, !dbg !11543
  %231 = load float*, float** %sf.addr, align 8, !dbg !11544
  %232 = load i32, i32* %idx, align 4, !dbg !11545
  %idx.ext250 = sext i32 %232 to i64, !dbg !11546
  %add.ptr251 = getelementptr inbounds float, float* %231, i64 %idx.ext250, !dbg !11546
  %call252 = call float* @VMUL4S(float* %227, float* %228, i32 %229, i32 %230, float* %add.ptr251), !dbg !11547
  store float* %call252, float** %cf160, align 8, !dbg !11548
  br label %do.cond253, !dbg !11549

do.cond253:                                       ; preds = %cond.end248
  %233 = load i32, i32* %len161, align 4, !dbg !11550
  %sub254 = sub nsw i32 %233, 4, !dbg !11550
  store i32 %sub254, i32* %len161, align 4, !dbg !11550
  %tobool255 = icmp ne i32 %sub254, 0, !dbg !11552
  br i1 %tobool255, label %do.body162, label %do.end256, !dbg !11552, !llvm.loop !11362

do.end256:                                        ; preds = %do.cond253
  br label %for.inc257, !dbg !11553

for.inc257:                                       ; preds = %do.end256
  %234 = load i32, i32* %group, align 4, !dbg !11554
  %inc258 = add nsw i32 %234, 1, !dbg !11554
  store i32 %inc258, i32* %group, align 4, !dbg !11554
  %235 = load float*, float** %cfo, align 8, !dbg !11556
  %add.ptr259 = getelementptr inbounds float, float* %235, i64 128, !dbg !11556
  store float* %add.ptr259, float** %cfo, align 8, !dbg !11556
  br label %for.cond156, !dbg !11557, !llvm.loop !11558

for.end260:                                       ; preds = %for.cond156
  br label %sw.epilog, !dbg !11560

sw.bb261:                                         ; preds = %if.else79
  store i32 0, i32* %group, align 4, !dbg !11561
  br label %for.cond262, !dbg !11562

for.cond262:                                      ; preds = %for.inc348, %sw.bb261
  %236 = load i32, i32* %group, align 4, !dbg !11563
  %237 = load i32, i32* %g_len, align 4, !dbg !11565
  %cmp263 = icmp ult i32 %236, %237, !dbg !11566
  br i1 %cmp263, label %for.body265, label %for.end351, !dbg !11567

for.body265:                                      ; preds = %for.cond262
  call void @llvm.dbg.declare(metadata float** %cf266, metadata !11568, metadata !2062), !dbg !11569
  %238 = load float*, float** %cfo, align 8, !dbg !11570
  store float* %238, float** %cf266, align 8, !dbg !11569
  call void @llvm.dbg.declare(metadata i32* %len267, metadata !11571, metadata !2062), !dbg !11572
  %239 = load i32, i32* %off_len, align 4, !dbg !11573
  store i32 %239, i32* %len267, align 4, !dbg !11572
  br label %do.body268, !dbg !11574, !llvm.loop !11575

do.body268:                                       ; preds = %do.cond344, %for.body265
  call void @llvm.dbg.declare(metadata i32* %code269, metadata !11576, metadata !2062), !dbg !11577
  call void @llvm.dbg.declare(metadata i32* %cb_idx270, metadata !11578, metadata !2062), !dbg !11579
  %240 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11580
  %buffer271 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %240, i32 0, i32 0, !dbg !11581
  %241 = load i8*, i8** %buffer271, align 8, !dbg !11581
  %242 = load i32, i32* %re_index, align 4, !dbg !11582
  %shr272 = lshr i32 %242, 3, !dbg !11583
  %idx.ext273 = zext i32 %shr272 to i64, !dbg !11584
  %add.ptr274 = getelementptr inbounds i8, i8* %241, i64 %idx.ext273, !dbg !11584
  %243 = bitcast i8* %add.ptr274 to %union.unaligned_32*, !dbg !11585
  %l275 = bitcast %union.unaligned_32* %243 to i32*, !dbg !11585
  %244 = load i32, i32* %l275, align 1, !dbg !11585
  store i32 %244, i32* %x.addr.i800, align 4, !dbg !11586
  %245 = load i32, i32* %x.addr.i800, align 4, !dbg !11587
  %shl.i801 = shl i32 %245, 8, !dbg !11588
  %and.i802 = and i32 %shl.i801, 65280, !dbg !11589
  %246 = load i32, i32* %x.addr.i800, align 4, !dbg !11590
  %shr.i803 = lshr i32 %246, 8, !dbg !11591
  %and1.i804 = and i32 %shr.i803, 255, !dbg !11592
  %or.i805 = or i32 %and.i802, %and1.i804, !dbg !11593
  %shl2.i806 = shl i32 %or.i805, 16, !dbg !11594
  %247 = load i32, i32* %x.addr.i800, align 4, !dbg !11595
  %shr3.i807 = lshr i32 %247, 16, !dbg !11596
  %shl4.i808 = shl i32 %shr3.i807, 8, !dbg !11597
  %and5.i809 = and i32 %shl4.i808, 65280, !dbg !11598
  %248 = load i32, i32* %x.addr.i800, align 4, !dbg !11599
  %shr6.i810 = lshr i32 %248, 16, !dbg !11600
  %shr7.i811 = lshr i32 %shr6.i810, 8, !dbg !11601
  %and8.i812 = and i32 %shr7.i811, 255, !dbg !11602
  %or9.i813 = or i32 %and5.i809, %and8.i812, !dbg !11603
  %or10.i814 = or i32 %shl2.i806, %or9.i813, !dbg !11604
  %249 = load i32, i32* %re_index, align 4, !dbg !11605
  %and277 = and i32 %249, 7, !dbg !11606
  %shl278 = shl i32 %or10.i814, %and277, !dbg !11607
  store i32 %shl278, i32* %re_cache, align 4, !dbg !11608
  br label %do.body279, !dbg !11609, !llvm.loop !11610

do.body279:                                       ; preds = %do.body268
  call void @llvm.dbg.declare(metadata i32* %n280, metadata !11611, metadata !2062), !dbg !11612
  call void @llvm.dbg.declare(metadata i32* %nb_bits281, metadata !11613, metadata !2062), !dbg !11614
  call void @llvm.dbg.declare(metadata i32* %index282, metadata !11615, metadata !2062), !dbg !11616
  %250 = load i32, i32* %re_cache, align 4, !dbg !11617
  %call283 = call i32 @NEG_USR32(i32 %250, i8 signext 8), !dbg !11619
  store i32 %call283, i32* %index282, align 4, !dbg !11620
  %251 = load i32, i32* %index282, align 4, !dbg !11621
  %idxprom284 = zext i32 %251 to i64, !dbg !11622
  %252 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11622
  %arrayidx285 = getelementptr inbounds [2 x i16], [2 x i16]* %252, i64 %idxprom284, !dbg !11622
  %arrayidx286 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx285, i64 0, i64 0, !dbg !11622
  %253 = load i16, i16* %arrayidx286, align 2, !dbg !11622
  %conv287 = sext i16 %253 to i32, !dbg !11622
  store i32 %conv287, i32* %code269, align 4, !dbg !11623
  %254 = load i32, i32* %index282, align 4, !dbg !11624
  %idxprom288 = zext i32 %254 to i64, !dbg !11625
  %255 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11625
  %arrayidx289 = getelementptr inbounds [2 x i16], [2 x i16]* %255, i64 %idxprom288, !dbg !11625
  %arrayidx290 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx289, i64 0, i64 1, !dbg !11625
  %256 = load i16, i16* %arrayidx290, align 2, !dbg !11625
  %conv291 = sext i16 %256 to i32, !dbg !11625
  store i32 %conv291, i32* %n280, align 4, !dbg !11626
  %257 = load i32, i32* %n280, align 4, !dbg !11627
  %cmp292 = icmp slt i32 %257, 0, !dbg !11628
  br i1 %cmp292, label %if.then294, label %if.end323, !dbg !11629

if.then294:                                       ; preds = %do.body279
  %258 = load i32, i32* %re_size_plus8, align 4, !dbg !11630
  %259 = load i32, i32* %re_index, align 4, !dbg !11632
  %add295 = add i32 %259, 8, !dbg !11633
  %cmp296 = icmp ugt i32 %258, %add295, !dbg !11634
  br i1 %cmp296, label %cond.true298, label %cond.false300, !dbg !11635

cond.true298:                                     ; preds = %if.then294
  %260 = load i32, i32* %re_index, align 4, !dbg !11636
  %add299 = add i32 %260, 8, !dbg !11638
  br label %cond.end301, !dbg !11639

cond.false300:                                    ; preds = %if.then294
  %261 = load i32, i32* %re_size_plus8, align 4, !dbg !11640
  br label %cond.end301, !dbg !11642

cond.end301:                                      ; preds = %cond.false300, %cond.true298
  %cond302 = phi i32 [ %add299, %cond.true298 ], [ %261, %cond.false300 ], !dbg !11643
  store i32 %cond302, i32* %re_index, align 4, !dbg !11644
  %262 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11645
  %buffer303 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %262, i32 0, i32 0, !dbg !11646
  %263 = load i8*, i8** %buffer303, align 8, !dbg !11646
  %264 = load i32, i32* %re_index, align 4, !dbg !11647
  %shr304 = lshr i32 %264, 3, !dbg !11648
  %idx.ext305 = zext i32 %shr304 to i64, !dbg !11649
  %add.ptr306 = getelementptr inbounds i8, i8* %263, i64 %idx.ext305, !dbg !11649
  %265 = bitcast i8* %add.ptr306 to %union.unaligned_32*, !dbg !11650
  %l307 = bitcast %union.unaligned_32* %265 to i32*, !dbg !11650
  %266 = load i32, i32* %l307, align 1, !dbg !11650
  store i32 %266, i32* %x.addr.i830, align 4, !dbg !11651
  %267 = load i32, i32* %x.addr.i830, align 4, !dbg !11652
  %shl.i831 = shl i32 %267, 8, !dbg !11653
  %and.i832 = and i32 %shl.i831, 65280, !dbg !11654
  %268 = load i32, i32* %x.addr.i830, align 4, !dbg !11655
  %shr.i833 = lshr i32 %268, 8, !dbg !11656
  %and1.i834 = and i32 %shr.i833, 255, !dbg !11657
  %or.i835 = or i32 %and.i832, %and1.i834, !dbg !11658
  %shl2.i836 = shl i32 %or.i835, 16, !dbg !11659
  %269 = load i32, i32* %x.addr.i830, align 4, !dbg !11660
  %shr3.i837 = lshr i32 %269, 16, !dbg !11661
  %shl4.i838 = shl i32 %shr3.i837, 8, !dbg !11662
  %and5.i839 = and i32 %shl4.i838, 65280, !dbg !11663
  %270 = load i32, i32* %x.addr.i830, align 4, !dbg !11664
  %shr6.i840 = lshr i32 %270, 16, !dbg !11665
  %shr7.i841 = lshr i32 %shr6.i840, 8, !dbg !11666
  %and8.i842 = and i32 %shr7.i841, 255, !dbg !11667
  %or9.i843 = or i32 %and5.i839, %and8.i842, !dbg !11668
  %or10.i844 = or i32 %shl2.i836, %or9.i843, !dbg !11669
  %271 = load i32, i32* %re_index, align 4, !dbg !11670
  %and309 = and i32 %271, 7, !dbg !11671
  %shl310 = shl i32 %or10.i844, %and309, !dbg !11672
  store i32 %shl310, i32* %re_cache, align 4, !dbg !11673
  %272 = load i32, i32* %n280, align 4, !dbg !11674
  %sub311 = sub nsw i32 0, %272, !dbg !11675
  store i32 %sub311, i32* %nb_bits281, align 4, !dbg !11676
  %273 = load i32, i32* %re_cache, align 4, !dbg !11677
  %274 = load i32, i32* %nb_bits281, align 4, !dbg !11678
  %conv312 = trunc i32 %274 to i8, !dbg !11678
  %call313 = call i32 @NEG_USR32(i32 %273, i8 signext %conv312), !dbg !11679
  %275 = load i32, i32* %code269, align 4, !dbg !11681
  %add314 = add i32 %call313, %275, !dbg !11682
  store i32 %add314, i32* %index282, align 4, !dbg !11683
  %276 = load i32, i32* %index282, align 4, !dbg !11684
  %idxprom315 = zext i32 %276 to i64, !dbg !11685
  %277 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11685
  %arrayidx316 = getelementptr inbounds [2 x i16], [2 x i16]* %277, i64 %idxprom315, !dbg !11685
  %arrayidx317 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx316, i64 0, i64 0, !dbg !11685
  %278 = load i16, i16* %arrayidx317, align 2, !dbg !11685
  %conv318 = sext i16 %278 to i32, !dbg !11685
  store i32 %conv318, i32* %code269, align 4, !dbg !11686
  %279 = load i32, i32* %index282, align 4, !dbg !11687
  %idxprom319 = zext i32 %279 to i64, !dbg !11688
  %280 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11688
  %arrayidx320 = getelementptr inbounds [2 x i16], [2 x i16]* %280, i64 %idxprom319, !dbg !11688
  %arrayidx321 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx320, i64 0, i64 1, !dbg !11688
  %281 = load i16, i16* %arrayidx321, align 2, !dbg !11688
  %conv322 = sext i16 %281 to i32, !dbg !11688
  store i32 %conv322, i32* %n280, align 4, !dbg !11689
  br label %if.end323, !dbg !11690

if.end323:                                        ; preds = %cond.end301, %do.body279
  br label %do.body324, !dbg !11691, !llvm.loop !11693

do.body324:                                       ; preds = %if.end323
  %282 = load i32, i32* %n280, align 4, !dbg !11695
  %283 = load i32, i32* %re_cache, align 4, !dbg !11698
  %shl325 = shl i32 %283, %282, !dbg !11698
  store i32 %shl325, i32* %re_cache, align 4, !dbg !11698
  %284 = load i32, i32* %re_size_plus8, align 4, !dbg !11699
  %285 = load i32, i32* %re_index, align 4, !dbg !11700
  %286 = load i32, i32* %n280, align 4, !dbg !11701
  %add326 = add i32 %285, %286, !dbg !11702
  %cmp327 = icmp ugt i32 %284, %add326, !dbg !11703
  br i1 %cmp327, label %cond.true329, label %cond.false331, !dbg !11704

cond.true329:                                     ; preds = %do.body324
  %287 = load i32, i32* %re_index, align 4, !dbg !11705
  %288 = load i32, i32* %n280, align 4, !dbg !11707
  %add330 = add i32 %287, %288, !dbg !11708
  br label %cond.end332, !dbg !11709

cond.false331:                                    ; preds = %do.body324
  %289 = load i32, i32* %re_size_plus8, align 4, !dbg !11710
  br label %cond.end332, !dbg !11712

cond.end332:                                      ; preds = %cond.false331, %cond.true329
  %cond333 = phi i32 [ %add330, %cond.true329 ], [ %289, %cond.false331 ], !dbg !11713
  store i32 %cond333, i32* %re_index, align 4, !dbg !11715
  br label %do.end335, !dbg !11716

do.end335:                                        ; preds = %cond.end332
  br label %do.end337, !dbg !11717

do.end337:                                        ; preds = %do.end335
  %290 = load i32, i32* %code269, align 4, !dbg !11719
  %idxprom338 = sext i32 %290 to i64, !dbg !11720
  %291 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11720
  %arrayidx339 = getelementptr inbounds i16, i16* %291, i64 %idxprom338, !dbg !11720
  %292 = load i16, i16* %arrayidx339, align 2, !dbg !11720
  %conv340 = zext i16 %292 to i32, !dbg !11720
  store i32 %conv340, i32* %cb_idx270, align 4, !dbg !11721
  %293 = load float*, float** %cf266, align 8, !dbg !11722
  %294 = load float*, float** %vq, align 8, !dbg !11723
  %295 = load i32, i32* %cb_idx270, align 4, !dbg !11724
  %296 = load float*, float** %sf.addr, align 8, !dbg !11725
  %297 = load i32, i32* %idx, align 4, !dbg !11726
  %idx.ext341 = sext i32 %297 to i64, !dbg !11727
  %add.ptr342 = getelementptr inbounds float, float* %296, i64 %idx.ext341, !dbg !11727
  %call343 = call float* @VMUL2(float* %293, float* %294, i32 %295, float* %add.ptr342), !dbg !11728
  store float* %call343, float** %cf266, align 8, !dbg !11729
  br label %do.cond344, !dbg !11730

do.cond344:                                       ; preds = %do.end337
  %298 = load i32, i32* %len267, align 4, !dbg !11731
  %sub345 = sub nsw i32 %298, 2, !dbg !11731
  store i32 %sub345, i32* %len267, align 4, !dbg !11731
  %tobool346 = icmp ne i32 %sub345, 0, !dbg !11733
  br i1 %tobool346, label %do.body268, label %do.end347, !dbg !11733, !llvm.loop !11575

do.end347:                                        ; preds = %do.cond344
  br label %for.inc348, !dbg !11734

for.inc348:                                       ; preds = %do.end347
  %299 = load i32, i32* %group, align 4, !dbg !11735
  %inc349 = add nsw i32 %299, 1, !dbg !11735
  store i32 %inc349, i32* %group, align 4, !dbg !11735
  %300 = load float*, float** %cfo, align 8, !dbg !11737
  %add.ptr350 = getelementptr inbounds float, float* %300, i64 128, !dbg !11737
  store float* %add.ptr350, float** %cfo, align 8, !dbg !11737
  br label %for.cond262, !dbg !11738, !llvm.loop !11739

for.end351:                                       ; preds = %for.cond262
  br label %sw.epilog, !dbg !11741

sw.bb352:                                         ; preds = %if.else79, %if.else79
  store i32 0, i32* %group, align 4, !dbg !11742
  br label %for.cond353, !dbg !11743

for.cond353:                                      ; preds = %for.inc459, %sw.bb352
  %301 = load i32, i32* %group, align 4, !dbg !11744
  %302 = load i32, i32* %g_len, align 4, !dbg !11746
  %cmp354 = icmp ult i32 %301, %302, !dbg !11747
  br i1 %cmp354, label %for.body356, label %for.end462, !dbg !11748

for.body356:                                      ; preds = %for.cond353
  call void @llvm.dbg.declare(metadata float** %cf357, metadata !11749, metadata !2062), !dbg !11750
  %303 = load float*, float** %cfo, align 8, !dbg !11751
  store float* %303, float** %cf357, align 8, !dbg !11750
  call void @llvm.dbg.declare(metadata i32* %len358, metadata !11752, metadata !2062), !dbg !11753
  %304 = load i32, i32* %off_len, align 4, !dbg !11754
  store i32 %304, i32* %len358, align 4, !dbg !11753
  br label %do.body359, !dbg !11755, !llvm.loop !11756

do.body359:                                       ; preds = %do.cond455, %for.body356
  call void @llvm.dbg.declare(metadata i32* %code360, metadata !11757, metadata !2062), !dbg !11758
  call void @llvm.dbg.declare(metadata i32* %nnz361, metadata !11759, metadata !2062), !dbg !11760
  call void @llvm.dbg.declare(metadata i32* %cb_idx362, metadata !11761, metadata !2062), !dbg !11762
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !11763, metadata !2062), !dbg !11764
  %305 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11765
  %buffer363 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %305, i32 0, i32 0, !dbg !11766
  %306 = load i8*, i8** %buffer363, align 8, !dbg !11766
  %307 = load i32, i32* %re_index, align 4, !dbg !11767
  %shr364 = lshr i32 %307, 3, !dbg !11768
  %idx.ext365 = zext i32 %shr364 to i64, !dbg !11769
  %add.ptr366 = getelementptr inbounds i8, i8* %306, i64 %idx.ext365, !dbg !11769
  %308 = bitcast i8* %add.ptr366 to %union.unaligned_32*, !dbg !11770
  %l367 = bitcast %union.unaligned_32* %308 to i32*, !dbg !11770
  %309 = load i32, i32* %l367, align 1, !dbg !11770
  store i32 %309, i32* %x.addr.i845, align 4, !dbg !11771
  %310 = load i32, i32* %x.addr.i845, align 4, !dbg !11772
  %shl.i846 = shl i32 %310, 8, !dbg !11773
  %and.i847 = and i32 %shl.i846, 65280, !dbg !11774
  %311 = load i32, i32* %x.addr.i845, align 4, !dbg !11775
  %shr.i848 = lshr i32 %311, 8, !dbg !11776
  %and1.i849 = and i32 %shr.i848, 255, !dbg !11777
  %or.i850 = or i32 %and.i847, %and1.i849, !dbg !11778
  %shl2.i851 = shl i32 %or.i850, 16, !dbg !11779
  %312 = load i32, i32* %x.addr.i845, align 4, !dbg !11780
  %shr3.i852 = lshr i32 %312, 16, !dbg !11781
  %shl4.i853 = shl i32 %shr3.i852, 8, !dbg !11782
  %and5.i854 = and i32 %shl4.i853, 65280, !dbg !11783
  %313 = load i32, i32* %x.addr.i845, align 4, !dbg !11784
  %shr6.i855 = lshr i32 %313, 16, !dbg !11785
  %shr7.i856 = lshr i32 %shr6.i855, 8, !dbg !11786
  %and8.i857 = and i32 %shr7.i856, 255, !dbg !11787
  %or9.i858 = or i32 %and5.i854, %and8.i857, !dbg !11788
  %or10.i859 = or i32 %shl2.i851, %or9.i858, !dbg !11789
  %314 = load i32, i32* %re_index, align 4, !dbg !11790
  %and369 = and i32 %314, 7, !dbg !11791
  %shl370 = shl i32 %or10.i859, %and369, !dbg !11792
  store i32 %shl370, i32* %re_cache, align 4, !dbg !11793
  br label %do.body371, !dbg !11794, !llvm.loop !11795

do.body371:                                       ; preds = %do.body359
  call void @llvm.dbg.declare(metadata i32* %n372, metadata !11796, metadata !2062), !dbg !11797
  call void @llvm.dbg.declare(metadata i32* %nb_bits373, metadata !11798, metadata !2062), !dbg !11799
  call void @llvm.dbg.declare(metadata i32* %index374, metadata !11800, metadata !2062), !dbg !11801
  %315 = load i32, i32* %re_cache, align 4, !dbg !11802
  %call375 = call i32 @NEG_USR32(i32 %315, i8 signext 8), !dbg !11804
  store i32 %call375, i32* %index374, align 4, !dbg !11805
  %316 = load i32, i32* %index374, align 4, !dbg !11806
  %idxprom376 = zext i32 %316 to i64, !dbg !11807
  %317 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11807
  %arrayidx377 = getelementptr inbounds [2 x i16], [2 x i16]* %317, i64 %idxprom376, !dbg !11807
  %arrayidx378 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx377, i64 0, i64 0, !dbg !11807
  %318 = load i16, i16* %arrayidx378, align 2, !dbg !11807
  %conv379 = sext i16 %318 to i32, !dbg !11807
  store i32 %conv379, i32* %code360, align 4, !dbg !11808
  %319 = load i32, i32* %index374, align 4, !dbg !11809
  %idxprom380 = zext i32 %319 to i64, !dbg !11810
  %320 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11810
  %arrayidx381 = getelementptr inbounds [2 x i16], [2 x i16]* %320, i64 %idxprom380, !dbg !11810
  %arrayidx382 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx381, i64 0, i64 1, !dbg !11810
  %321 = load i16, i16* %arrayidx382, align 2, !dbg !11810
  %conv383 = sext i16 %321 to i32, !dbg !11810
  store i32 %conv383, i32* %n372, align 4, !dbg !11811
  %322 = load i32, i32* %n372, align 4, !dbg !11812
  %cmp384 = icmp slt i32 %322, 0, !dbg !11813
  br i1 %cmp384, label %if.then386, label %if.end415, !dbg !11814

if.then386:                                       ; preds = %do.body371
  %323 = load i32, i32* %re_size_plus8, align 4, !dbg !11815
  %324 = load i32, i32* %re_index, align 4, !dbg !11817
  %add387 = add i32 %324, 8, !dbg !11818
  %cmp388 = icmp ugt i32 %323, %add387, !dbg !11819
  br i1 %cmp388, label %cond.true390, label %cond.false392, !dbg !11820

cond.true390:                                     ; preds = %if.then386
  %325 = load i32, i32* %re_index, align 4, !dbg !11821
  %add391 = add i32 %325, 8, !dbg !11823
  br label %cond.end393, !dbg !11824

cond.false392:                                    ; preds = %if.then386
  %326 = load i32, i32* %re_size_plus8, align 4, !dbg !11825
  br label %cond.end393, !dbg !11827

cond.end393:                                      ; preds = %cond.false392, %cond.true390
  %cond394 = phi i32 [ %add391, %cond.true390 ], [ %326, %cond.false392 ], !dbg !11828
  store i32 %cond394, i32* %re_index, align 4, !dbg !11829
  %327 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11830
  %buffer395 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %327, i32 0, i32 0, !dbg !11831
  %328 = load i8*, i8** %buffer395, align 8, !dbg !11831
  %329 = load i32, i32* %re_index, align 4, !dbg !11832
  %shr396 = lshr i32 %329, 3, !dbg !11833
  %idx.ext397 = zext i32 %shr396 to i64, !dbg !11834
  %add.ptr398 = getelementptr inbounds i8, i8* %328, i64 %idx.ext397, !dbg !11834
  %330 = bitcast i8* %add.ptr398 to %union.unaligned_32*, !dbg !11835
  %l399 = bitcast %union.unaligned_32* %330 to i32*, !dbg !11835
  %331 = load i32, i32* %l399, align 1, !dbg !11835
  store i32 %331, i32* %x.addr.i860, align 4, !dbg !11836
  %332 = load i32, i32* %x.addr.i860, align 4, !dbg !11837
  %shl.i861 = shl i32 %332, 8, !dbg !11838
  %and.i862 = and i32 %shl.i861, 65280, !dbg !11839
  %333 = load i32, i32* %x.addr.i860, align 4, !dbg !11840
  %shr.i863 = lshr i32 %333, 8, !dbg !11841
  %and1.i864 = and i32 %shr.i863, 255, !dbg !11842
  %or.i865 = or i32 %and.i862, %and1.i864, !dbg !11843
  %shl2.i866 = shl i32 %or.i865, 16, !dbg !11844
  %334 = load i32, i32* %x.addr.i860, align 4, !dbg !11845
  %shr3.i867 = lshr i32 %334, 16, !dbg !11846
  %shl4.i868 = shl i32 %shr3.i867, 8, !dbg !11847
  %and5.i869 = and i32 %shl4.i868, 65280, !dbg !11848
  %335 = load i32, i32* %x.addr.i860, align 4, !dbg !11849
  %shr6.i870 = lshr i32 %335, 16, !dbg !11850
  %shr7.i871 = lshr i32 %shr6.i870, 8, !dbg !11851
  %and8.i872 = and i32 %shr7.i871, 255, !dbg !11852
  %or9.i873 = or i32 %and5.i869, %and8.i872, !dbg !11853
  %or10.i874 = or i32 %shl2.i866, %or9.i873, !dbg !11854
  %336 = load i32, i32* %re_index, align 4, !dbg !11855
  %and401 = and i32 %336, 7, !dbg !11856
  %shl402 = shl i32 %or10.i874, %and401, !dbg !11857
  store i32 %shl402, i32* %re_cache, align 4, !dbg !11858
  %337 = load i32, i32* %n372, align 4, !dbg !11859
  %sub403 = sub nsw i32 0, %337, !dbg !11860
  store i32 %sub403, i32* %nb_bits373, align 4, !dbg !11861
  %338 = load i32, i32* %re_cache, align 4, !dbg !11862
  %339 = load i32, i32* %nb_bits373, align 4, !dbg !11863
  %conv404 = trunc i32 %339 to i8, !dbg !11863
  %call405 = call i32 @NEG_USR32(i32 %338, i8 signext %conv404), !dbg !11864
  %340 = load i32, i32* %code360, align 4, !dbg !11866
  %add406 = add i32 %call405, %340, !dbg !11867
  store i32 %add406, i32* %index374, align 4, !dbg !11868
  %341 = load i32, i32* %index374, align 4, !dbg !11869
  %idxprom407 = zext i32 %341 to i64, !dbg !11870
  %342 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11870
  %arrayidx408 = getelementptr inbounds [2 x i16], [2 x i16]* %342, i64 %idxprom407, !dbg !11870
  %arrayidx409 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx408, i64 0, i64 0, !dbg !11870
  %343 = load i16, i16* %arrayidx409, align 2, !dbg !11870
  %conv410 = sext i16 %343 to i32, !dbg !11870
  store i32 %conv410, i32* %code360, align 4, !dbg !11871
  %344 = load i32, i32* %index374, align 4, !dbg !11872
  %idxprom411 = zext i32 %344 to i64, !dbg !11873
  %345 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !11873
  %arrayidx412 = getelementptr inbounds [2 x i16], [2 x i16]* %345, i64 %idxprom411, !dbg !11873
  %arrayidx413 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx412, i64 0, i64 1, !dbg !11873
  %346 = load i16, i16* %arrayidx413, align 2, !dbg !11873
  %conv414 = sext i16 %346 to i32, !dbg !11873
  store i32 %conv414, i32* %n372, align 4, !dbg !11874
  br label %if.end415, !dbg !11875

if.end415:                                        ; preds = %cond.end393, %do.body371
  br label %do.body416, !dbg !11876, !llvm.loop !11878

do.body416:                                       ; preds = %if.end415
  %347 = load i32, i32* %n372, align 4, !dbg !11880
  %348 = load i32, i32* %re_cache, align 4, !dbg !11883
  %shl417 = shl i32 %348, %347, !dbg !11883
  store i32 %shl417, i32* %re_cache, align 4, !dbg !11883
  %349 = load i32, i32* %re_size_plus8, align 4, !dbg !11884
  %350 = load i32, i32* %re_index, align 4, !dbg !11885
  %351 = load i32, i32* %n372, align 4, !dbg !11886
  %add418 = add i32 %350, %351, !dbg !11887
  %cmp419 = icmp ugt i32 %349, %add418, !dbg !11888
  br i1 %cmp419, label %cond.true421, label %cond.false423, !dbg !11889

cond.true421:                                     ; preds = %do.body416
  %352 = load i32, i32* %re_index, align 4, !dbg !11890
  %353 = load i32, i32* %n372, align 4, !dbg !11892
  %add422 = add i32 %352, %353, !dbg !11893
  br label %cond.end424, !dbg !11894

cond.false423:                                    ; preds = %do.body416
  %354 = load i32, i32* %re_size_plus8, align 4, !dbg !11895
  br label %cond.end424, !dbg !11897

cond.end424:                                      ; preds = %cond.false423, %cond.true421
  %cond425 = phi i32 [ %add422, %cond.true421 ], [ %354, %cond.false423 ], !dbg !11898
  store i32 %cond425, i32* %re_index, align 4, !dbg !11900
  br label %do.end427, !dbg !11901

do.end427:                                        ; preds = %cond.end424
  br label %do.end429, !dbg !11902

do.end429:                                        ; preds = %do.end427
  %355 = load i32, i32* %code360, align 4, !dbg !11904
  %idxprom430 = sext i32 %355 to i64, !dbg !11905
  %356 = load i16*, i16** %cb_vector_idx, align 8, !dbg !11905
  %arrayidx431 = getelementptr inbounds i16, i16* %356, i64 %idxprom430, !dbg !11905
  %357 = load i16, i16* %arrayidx431, align 2, !dbg !11905
  %conv432 = zext i16 %357 to i32, !dbg !11905
  store i32 %conv432, i32* %cb_idx362, align 4, !dbg !11906
  %358 = load i32, i32* %cb_idx362, align 4, !dbg !11907
  %shr433 = lshr i32 %358, 8, !dbg !11908
  %and434 = and i32 %shr433, 15, !dbg !11909
  store i32 %and434, i32* %nnz361, align 4, !dbg !11910
  %359 = load i32, i32* %nnz361, align 4, !dbg !11911
  %tobool435 = icmp ne i32 %359, 0, !dbg !11911
  br i1 %tobool435, label %cond.true436, label %cond.false441, !dbg !11911

cond.true436:                                     ; preds = %do.end429
  %360 = load i32, i32* %re_cache, align 4, !dbg !11912
  %361 = load i32, i32* %nnz361, align 4, !dbg !11914
  %conv437 = trunc i32 %361 to i8, !dbg !11914
  %call438 = call i32 @NEG_USR32(i32 %360, i8 signext %conv437), !dbg !11915
  %362 = load i32, i32* %cb_idx362, align 4, !dbg !11916
  %shr439 = lshr i32 %362, 12, !dbg !11917
  %shl440 = shl i32 %call438, %shr439, !dbg !11918
  br label %cond.end442, !dbg !11919

cond.false441:                                    ; preds = %do.end429
  br label %cond.end442, !dbg !11920

cond.end442:                                      ; preds = %cond.false441, %cond.true436
  %cond443 = phi i32 [ %shl440, %cond.true436 ], [ 0, %cond.false441 ], !dbg !11922
  store i32 %cond443, i32* %sign, align 4, !dbg !11924
  %363 = load i32, i32* %re_size_plus8, align 4, !dbg !11925
  %364 = load i32, i32* %re_index, align 4, !dbg !11926
  %365 = load i32, i32* %nnz361, align 4, !dbg !11927
  %add444 = add i32 %364, %365, !dbg !11928
  %cmp445 = icmp ugt i32 %363, %add444, !dbg !11929
  br i1 %cmp445, label %cond.true447, label %cond.false449, !dbg !11930

cond.true447:                                     ; preds = %cond.end442
  %366 = load i32, i32* %re_index, align 4, !dbg !11931
  %367 = load i32, i32* %nnz361, align 4, !dbg !11932
  %add448 = add i32 %366, %367, !dbg !11933
  br label %cond.end450, !dbg !11934

cond.false449:                                    ; preds = %cond.end442
  %368 = load i32, i32* %re_size_plus8, align 4, !dbg !11935
  br label %cond.end450, !dbg !11936

cond.end450:                                      ; preds = %cond.false449, %cond.true447
  %cond451 = phi i32 [ %add448, %cond.true447 ], [ %368, %cond.false449 ], !dbg !11937
  store i32 %cond451, i32* %re_index, align 4, !dbg !11938
  %369 = load float*, float** %cf357, align 8, !dbg !11939
  %370 = load float*, float** %vq, align 8, !dbg !11940
  %371 = load i32, i32* %cb_idx362, align 4, !dbg !11941
  %372 = load i32, i32* %sign, align 4, !dbg !11942
  %373 = load float*, float** %sf.addr, align 8, !dbg !11943
  %374 = load i32, i32* %idx, align 4, !dbg !11944
  %idx.ext452 = sext i32 %374 to i64, !dbg !11945
  %add.ptr453 = getelementptr inbounds float, float* %373, i64 %idx.ext452, !dbg !11945
  %call454 = call float* @VMUL2S(float* %369, float* %370, i32 %371, i32 %372, float* %add.ptr453), !dbg !11946
  store float* %call454, float** %cf357, align 8, !dbg !11947
  br label %do.cond455, !dbg !11948

do.cond455:                                       ; preds = %cond.end450
  %375 = load i32, i32* %len358, align 4, !dbg !11949
  %sub456 = sub nsw i32 %375, 2, !dbg !11949
  store i32 %sub456, i32* %len358, align 4, !dbg !11949
  %tobool457 = icmp ne i32 %sub456, 0, !dbg !11951
  br i1 %tobool457, label %do.body359, label %do.end458, !dbg !11951, !llvm.loop !11756

do.end458:                                        ; preds = %do.cond455
  br label %for.inc459, !dbg !11952

for.inc459:                                       ; preds = %do.end458
  %376 = load i32, i32* %group, align 4, !dbg !11953
  %inc460 = add nsw i32 %376, 1, !dbg !11953
  store i32 %inc460, i32* %group, align 4, !dbg !11953
  %377 = load float*, float** %cfo, align 8, !dbg !11955
  %add.ptr461 = getelementptr inbounds float, float* %377, i64 128, !dbg !11955
  store float* %add.ptr461, float** %cfo, align 8, !dbg !11955
  br label %for.cond353, !dbg !11956, !llvm.loop !11957

for.end462:                                       ; preds = %for.cond353
  br label %sw.epilog, !dbg !11959

sw.default:                                       ; preds = %if.else79
  store i32 0, i32* %group, align 4, !dbg !11960
  br label %for.cond463, !dbg !11961

for.cond463:                                      ; preds = %for.inc642, %sw.default
  %378 = load i32, i32* %group, align 4, !dbg !11962
  %379 = load i32, i32* %g_len, align 4, !dbg !11964
  %cmp464 = icmp ult i32 %378, %379, !dbg !11965
  br i1 %cmp464, label %for.body466, label %for.end645, !dbg !11966

for.body466:                                      ; preds = %for.cond463
  call void @llvm.dbg.declare(metadata float** %cf467, metadata !11967, metadata !2062), !dbg !11968
  %380 = load float*, float** %cfo, align 8, !dbg !11969
  store float* %380, float** %cf467, align 8, !dbg !11968
  call void @llvm.dbg.declare(metadata i32** %icf, metadata !11970, metadata !2062), !dbg !11971
  %381 = load float*, float** %cf467, align 8, !dbg !11972
  %382 = bitcast float* %381 to i32*, !dbg !11973
  store i32* %382, i32** %icf, align 8, !dbg !11971
  call void @llvm.dbg.declare(metadata i32* %len468, metadata !11974, metadata !2062), !dbg !11975
  %383 = load i32, i32* %off_len, align 4, !dbg !11976
  store i32 %383, i32* %len468, align 4, !dbg !11975
  br label %do.body469, !dbg !11977, !llvm.loop !11978

do.body469:                                       ; preds = %do.cond634, %for.body466
  call void @llvm.dbg.declare(metadata i32* %code470, metadata !11979, metadata !2062), !dbg !11980
  call void @llvm.dbg.declare(metadata i32* %nzt, metadata !11981, metadata !2062), !dbg !11982
  call void @llvm.dbg.declare(metadata i32* %nnz471, metadata !11983, metadata !2062), !dbg !11984
  call void @llvm.dbg.declare(metadata i32* %cb_idx472, metadata !11985, metadata !2062), !dbg !11986
  call void @llvm.dbg.declare(metadata i32* %bits473, metadata !11987, metadata !2062), !dbg !11988
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11989, metadata !2062), !dbg !11990
  %384 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11991
  %buffer474 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %384, i32 0, i32 0, !dbg !11992
  %385 = load i8*, i8** %buffer474, align 8, !dbg !11992
  %386 = load i32, i32* %re_index, align 4, !dbg !11993
  %shr475 = lshr i32 %386, 3, !dbg !11994
  %idx.ext476 = zext i32 %shr475 to i64, !dbg !11995
  %add.ptr477 = getelementptr inbounds i8, i8* %385, i64 %idx.ext476, !dbg !11995
  %387 = bitcast i8* %add.ptr477 to %union.unaligned_32*, !dbg !11996
  %l478 = bitcast %union.unaligned_32* %387 to i32*, !dbg !11996
  %388 = load i32, i32* %l478, align 1, !dbg !11996
  store i32 %388, i32* %x.addr.i815, align 4, !dbg !11997
  %389 = load i32, i32* %x.addr.i815, align 4, !dbg !11998
  %shl.i816 = shl i32 %389, 8, !dbg !11999
  %and.i817 = and i32 %shl.i816, 65280, !dbg !12000
  %390 = load i32, i32* %x.addr.i815, align 4, !dbg !12001
  %shr.i818 = lshr i32 %390, 8, !dbg !12002
  %and1.i819 = and i32 %shr.i818, 255, !dbg !12003
  %or.i820 = or i32 %and.i817, %and1.i819, !dbg !12004
  %shl2.i821 = shl i32 %or.i820, 16, !dbg !12005
  %391 = load i32, i32* %x.addr.i815, align 4, !dbg !12006
  %shr3.i822 = lshr i32 %391, 16, !dbg !12007
  %shl4.i823 = shl i32 %shr3.i822, 8, !dbg !12008
  %and5.i824 = and i32 %shl4.i823, 65280, !dbg !12009
  %392 = load i32, i32* %x.addr.i815, align 4, !dbg !12010
  %shr6.i825 = lshr i32 %392, 16, !dbg !12011
  %shr7.i826 = lshr i32 %shr6.i825, 8, !dbg !12012
  %and8.i827 = and i32 %shr7.i826, 255, !dbg !12013
  %or9.i828 = or i32 %and5.i824, %and8.i827, !dbg !12014
  %or10.i829 = or i32 %shl2.i821, %or9.i828, !dbg !12015
  %393 = load i32, i32* %re_index, align 4, !dbg !12016
  %and480 = and i32 %393, 7, !dbg !12017
  %shl481 = shl i32 %or10.i829, %and480, !dbg !12018
  store i32 %shl481, i32* %re_cache, align 4, !dbg !12019
  br label %do.body482, !dbg !12020, !llvm.loop !12021

do.body482:                                       ; preds = %do.body469
  call void @llvm.dbg.declare(metadata i32* %n483, metadata !12022, metadata !2062), !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %nb_bits484, metadata !12024, metadata !2062), !dbg !12025
  call void @llvm.dbg.declare(metadata i32* %index485, metadata !12026, metadata !2062), !dbg !12027
  %394 = load i32, i32* %re_cache, align 4, !dbg !12028
  %call486 = call i32 @NEG_USR32(i32 %394, i8 signext 8), !dbg !12030
  store i32 %call486, i32* %index485, align 4, !dbg !12031
  %395 = load i32, i32* %index485, align 4, !dbg !12032
  %idxprom487 = zext i32 %395 to i64, !dbg !12033
  %396 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12033
  %arrayidx488 = getelementptr inbounds [2 x i16], [2 x i16]* %396, i64 %idxprom487, !dbg !12033
  %arrayidx489 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx488, i64 0, i64 0, !dbg !12033
  %397 = load i16, i16* %arrayidx489, align 2, !dbg !12033
  %conv490 = sext i16 %397 to i32, !dbg !12033
  store i32 %conv490, i32* %code470, align 4, !dbg !12034
  %398 = load i32, i32* %index485, align 4, !dbg !12035
  %idxprom491 = zext i32 %398 to i64, !dbg !12036
  %399 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12036
  %arrayidx492 = getelementptr inbounds [2 x i16], [2 x i16]* %399, i64 %idxprom491, !dbg !12036
  %arrayidx493 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx492, i64 0, i64 1, !dbg !12036
  %400 = load i16, i16* %arrayidx493, align 2, !dbg !12036
  %conv494 = sext i16 %400 to i32, !dbg !12036
  store i32 %conv494, i32* %n483, align 4, !dbg !12037
  %401 = load i32, i32* %n483, align 4, !dbg !12038
  %cmp495 = icmp slt i32 %401, 0, !dbg !12039
  br i1 %cmp495, label %if.then497, label %if.end526, !dbg !12040

if.then497:                                       ; preds = %do.body482
  %402 = load i32, i32* %re_size_plus8, align 4, !dbg !12041
  %403 = load i32, i32* %re_index, align 4, !dbg !12043
  %add498 = add i32 %403, 8, !dbg !12044
  %cmp499 = icmp ugt i32 %402, %add498, !dbg !12045
  br i1 %cmp499, label %cond.true501, label %cond.false503, !dbg !12046

cond.true501:                                     ; preds = %if.then497
  %404 = load i32, i32* %re_index, align 4, !dbg !12047
  %add502 = add i32 %404, 8, !dbg !12049
  br label %cond.end504, !dbg !12050

cond.false503:                                    ; preds = %if.then497
  %405 = load i32, i32* %re_size_plus8, align 4, !dbg !12051
  br label %cond.end504, !dbg !12053

cond.end504:                                      ; preds = %cond.false503, %cond.true501
  %cond505 = phi i32 [ %add502, %cond.true501 ], [ %405, %cond.false503 ], !dbg !12054
  store i32 %cond505, i32* %re_index, align 4, !dbg !12055
  %406 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12056
  %buffer506 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %406, i32 0, i32 0, !dbg !12057
  %407 = load i8*, i8** %buffer506, align 8, !dbg !12057
  %408 = load i32, i32* %re_index, align 4, !dbg !12058
  %shr507 = lshr i32 %408, 3, !dbg !12059
  %idx.ext508 = zext i32 %shr507 to i64, !dbg !12060
  %add.ptr509 = getelementptr inbounds i8, i8* %407, i64 %idx.ext508, !dbg !12060
  %409 = bitcast i8* %add.ptr509 to %union.unaligned_32*, !dbg !12061
  %l510 = bitcast %union.unaligned_32* %409 to i32*, !dbg !12061
  %410 = load i32, i32* %l510, align 1, !dbg !12061
  store i32 %410, i32* %x.addr.i785, align 4, !dbg !12062
  %411 = load i32, i32* %x.addr.i785, align 4, !dbg !12063
  %shl.i786 = shl i32 %411, 8, !dbg !12064
  %and.i787 = and i32 %shl.i786, 65280, !dbg !12065
  %412 = load i32, i32* %x.addr.i785, align 4, !dbg !12066
  %shr.i788 = lshr i32 %412, 8, !dbg !12067
  %and1.i789 = and i32 %shr.i788, 255, !dbg !12068
  %or.i790 = or i32 %and.i787, %and1.i789, !dbg !12069
  %shl2.i791 = shl i32 %or.i790, 16, !dbg !12070
  %413 = load i32, i32* %x.addr.i785, align 4, !dbg !12071
  %shr3.i792 = lshr i32 %413, 16, !dbg !12072
  %shl4.i793 = shl i32 %shr3.i792, 8, !dbg !12073
  %and5.i794 = and i32 %shl4.i793, 65280, !dbg !12074
  %414 = load i32, i32* %x.addr.i785, align 4, !dbg !12075
  %shr6.i795 = lshr i32 %414, 16, !dbg !12076
  %shr7.i796 = lshr i32 %shr6.i795, 8, !dbg !12077
  %and8.i797 = and i32 %shr7.i796, 255, !dbg !12078
  %or9.i798 = or i32 %and5.i794, %and8.i797, !dbg !12079
  %or10.i799 = or i32 %shl2.i791, %or9.i798, !dbg !12080
  %415 = load i32, i32* %re_index, align 4, !dbg !12081
  %and512 = and i32 %415, 7, !dbg !12082
  %shl513 = shl i32 %or10.i799, %and512, !dbg !12083
  store i32 %shl513, i32* %re_cache, align 4, !dbg !12084
  %416 = load i32, i32* %n483, align 4, !dbg !12085
  %sub514 = sub nsw i32 0, %416, !dbg !12086
  store i32 %sub514, i32* %nb_bits484, align 4, !dbg !12087
  %417 = load i32, i32* %re_cache, align 4, !dbg !12088
  %418 = load i32, i32* %nb_bits484, align 4, !dbg !12089
  %conv515 = trunc i32 %418 to i8, !dbg !12089
  %call516 = call i32 @NEG_USR32(i32 %417, i8 signext %conv515), !dbg !12090
  %419 = load i32, i32* %code470, align 4, !dbg !12092
  %add517 = add i32 %call516, %419, !dbg !12093
  store i32 %add517, i32* %index485, align 4, !dbg !12094
  %420 = load i32, i32* %index485, align 4, !dbg !12095
  %idxprom518 = zext i32 %420 to i64, !dbg !12096
  %421 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12096
  %arrayidx519 = getelementptr inbounds [2 x i16], [2 x i16]* %421, i64 %idxprom518, !dbg !12096
  %arrayidx520 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx519, i64 0, i64 0, !dbg !12096
  %422 = load i16, i16* %arrayidx520, align 2, !dbg !12096
  %conv521 = sext i16 %422 to i32, !dbg !12096
  store i32 %conv521, i32* %code470, align 4, !dbg !12097
  %423 = load i32, i32* %index485, align 4, !dbg !12098
  %idxprom522 = zext i32 %423 to i64, !dbg !12099
  %424 = load [2 x i16]*, [2 x i16]** %vlc_tab, align 8, !dbg !12099
  %arrayidx523 = getelementptr inbounds [2 x i16], [2 x i16]* %424, i64 %idxprom522, !dbg !12099
  %arrayidx524 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx523, i64 0, i64 1, !dbg !12099
  %425 = load i16, i16* %arrayidx524, align 2, !dbg !12099
  %conv525 = sext i16 %425 to i32, !dbg !12099
  store i32 %conv525, i32* %n483, align 4, !dbg !12100
  br label %if.end526, !dbg !12101

if.end526:                                        ; preds = %cond.end504, %do.body482
  br label %do.body527, !dbg !12102, !llvm.loop !12104

do.body527:                                       ; preds = %if.end526
  %426 = load i32, i32* %n483, align 4, !dbg !12106
  %427 = load i32, i32* %re_cache, align 4, !dbg !12109
  %shl528 = shl i32 %427, %426, !dbg !12109
  store i32 %shl528, i32* %re_cache, align 4, !dbg !12109
  %428 = load i32, i32* %re_size_plus8, align 4, !dbg !12110
  %429 = load i32, i32* %re_index, align 4, !dbg !12111
  %430 = load i32, i32* %n483, align 4, !dbg !12112
  %add529 = add i32 %429, %430, !dbg !12113
  %cmp530 = icmp ugt i32 %428, %add529, !dbg !12114
  br i1 %cmp530, label %cond.true532, label %cond.false534, !dbg !12115

cond.true532:                                     ; preds = %do.body527
  %431 = load i32, i32* %re_index, align 4, !dbg !12116
  %432 = load i32, i32* %n483, align 4, !dbg !12118
  %add533 = add i32 %431, %432, !dbg !12119
  br label %cond.end535, !dbg !12120

cond.false534:                                    ; preds = %do.body527
  %433 = load i32, i32* %re_size_plus8, align 4, !dbg !12121
  br label %cond.end535, !dbg !12123

cond.end535:                                      ; preds = %cond.false534, %cond.true532
  %cond536 = phi i32 [ %add533, %cond.true532 ], [ %433, %cond.false534 ], !dbg !12124
  store i32 %cond536, i32* %re_index, align 4, !dbg !12126
  br label %do.end538, !dbg !12127

do.end538:                                        ; preds = %cond.end535
  br label %do.end540, !dbg !12128

do.end540:                                        ; preds = %do.end538
  %434 = load i32, i32* %code470, align 4, !dbg !12130
  %tobool541 = icmp ne i32 %434, 0, !dbg !12130
  br i1 %tobool541, label %if.end544, label %if.then542, !dbg !12132

if.then542:                                       ; preds = %do.end540
  %435 = load i32*, i32** %icf, align 8, !dbg !12133
  %incdec.ptr = getelementptr inbounds i32, i32* %435, i32 1, !dbg !12133
  store i32* %incdec.ptr, i32** %icf, align 8, !dbg !12133
  store i32 0, i32* %435, align 4, !dbg !12135
  %436 = load i32*, i32** %icf, align 8, !dbg !12136
  %incdec.ptr543 = getelementptr inbounds i32, i32* %436, i32 1, !dbg !12136
  store i32* %incdec.ptr543, i32** %icf, align 8, !dbg !12136
  store i32 0, i32* %436, align 4, !dbg !12137
  br label %do.cond634, !dbg !12138

if.end544:                                        ; preds = %do.end540
  %437 = load i32, i32* %code470, align 4, !dbg !12139
  %idxprom545 = sext i32 %437 to i64, !dbg !12140
  %438 = load i16*, i16** %cb_vector_idx, align 8, !dbg !12140
  %arrayidx546 = getelementptr inbounds i16, i16* %438, i64 %idxprom545, !dbg !12140
  %439 = load i16, i16* %arrayidx546, align 2, !dbg !12140
  %conv547 = zext i16 %439 to i32, !dbg !12140
  store i32 %conv547, i32* %cb_idx472, align 4, !dbg !12141
  %440 = load i32, i32* %cb_idx472, align 4, !dbg !12142
  %shr548 = lshr i32 %440, 12, !dbg !12143
  store i32 %shr548, i32* %nnz471, align 4, !dbg !12144
  %441 = load i32, i32* %cb_idx472, align 4, !dbg !12145
  %shr549 = lshr i32 %441, 8, !dbg !12146
  store i32 %shr549, i32* %nzt, align 4, !dbg !12147
  %442 = load i32, i32* %re_cache, align 4, !dbg !12148
  %443 = load i32, i32* %nnz471, align 4, !dbg !12149
  %conv550 = trunc i32 %443 to i8, !dbg !12149
  %call551 = call i32 @NEG_USR32(i32 %442, i8 signext %conv550), !dbg !12150
  %444 = load i32, i32* %nnz471, align 4, !dbg !12151
  %sub552 = sub i32 32, %444, !dbg !12152
  %shl553 = shl i32 %call551, %sub552, !dbg !12153
  store i32 %shl553, i32* %bits473, align 4, !dbg !12154
  %445 = load i32, i32* %re_size_plus8, align 4, !dbg !12155
  %446 = load i32, i32* %re_index, align 4, !dbg !12156
  %447 = load i32, i32* %nnz471, align 4, !dbg !12157
  %add554 = add i32 %446, %447, !dbg !12158
  %cmp555 = icmp ugt i32 %445, %add554, !dbg !12159
  br i1 %cmp555, label %cond.true557, label %cond.false559, !dbg !12160

cond.true557:                                     ; preds = %if.end544
  %448 = load i32, i32* %re_index, align 4, !dbg !12161
  %449 = load i32, i32* %nnz471, align 4, !dbg !12163
  %add558 = add i32 %448, %449, !dbg !12164
  br label %cond.end560, !dbg !12165

cond.false559:                                    ; preds = %if.end544
  %450 = load i32, i32* %re_size_plus8, align 4, !dbg !12166
  br label %cond.end560, !dbg !12168

cond.end560:                                      ; preds = %cond.false559, %cond.true557
  %cond561 = phi i32 [ %add558, %cond.true557 ], [ %450, %cond.false559 ], !dbg !12169
  store i32 %cond561, i32* %re_index, align 4, !dbg !12171
  store i32 0, i32* %j, align 4, !dbg !12172
  br label %for.cond562, !dbg !12173

for.cond562:                                      ; preds = %for.inc631, %cond.end560
  %451 = load i32, i32* %j, align 4, !dbg !12174
  %cmp563 = icmp slt i32 %451, 2, !dbg !12176
  br i1 %cmp563, label %for.body565, label %for.end633, !dbg !12177

for.body565:                                      ; preds = %for.cond562
  %452 = load i32, i32* %nzt, align 4, !dbg !12178
  %453 = load i32, i32* %j, align 4, !dbg !12179
  %shl566 = shl i32 1, %453, !dbg !12180
  %and567 = and i32 %452, %shl566, !dbg !12181
  %tobool568 = icmp ne i32 %and567, 0, !dbg !12181
  br i1 %tobool568, label %if.then569, label %if.else619, !dbg !12182

if.then569:                                       ; preds = %for.body565
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12183, metadata !2062), !dbg !12184
  call void @llvm.dbg.declare(metadata i32* %n570, metadata !12185, metadata !2062), !dbg !12186
  %454 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12187
  %buffer571 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %454, i32 0, i32 0, !dbg !12188
  %455 = load i8*, i8** %buffer571, align 8, !dbg !12188
  %456 = load i32, i32* %re_index, align 4, !dbg !12189
  %shr572 = lshr i32 %456, 3, !dbg !12190
  %idx.ext573 = zext i32 %shr572 to i64, !dbg !12191
  %add.ptr574 = getelementptr inbounds i8, i8* %455, i64 %idx.ext573, !dbg !12191
  %457 = bitcast i8* %add.ptr574 to %union.unaligned_32*, !dbg !12192
  %l575 = bitcast %union.unaligned_32* %457 to i32*, !dbg !12192
  %458 = load i32, i32* %l575, align 1, !dbg !12192
  store i32 %458, i32* %x.addr.i740, align 4, !dbg !12193
  %459 = load i32, i32* %x.addr.i740, align 4, !dbg !12194
  %shl.i741 = shl i32 %459, 8, !dbg !12195
  %and.i742 = and i32 %shl.i741, 65280, !dbg !12196
  %460 = load i32, i32* %x.addr.i740, align 4, !dbg !12197
  %shr.i743 = lshr i32 %460, 8, !dbg !12198
  %and1.i744 = and i32 %shr.i743, 255, !dbg !12199
  %or.i745 = or i32 %and.i742, %and1.i744, !dbg !12200
  %shl2.i746 = shl i32 %or.i745, 16, !dbg !12201
  %461 = load i32, i32* %x.addr.i740, align 4, !dbg !12202
  %shr3.i747 = lshr i32 %461, 16, !dbg !12203
  %shl4.i748 = shl i32 %shr3.i747, 8, !dbg !12204
  %and5.i749 = and i32 %shl4.i748, 65280, !dbg !12205
  %462 = load i32, i32* %x.addr.i740, align 4, !dbg !12206
  %shr6.i750 = lshr i32 %462, 16, !dbg !12207
  %shr7.i751 = lshr i32 %shr6.i750, 8, !dbg !12208
  %and8.i752 = and i32 %shr7.i751, 255, !dbg !12209
  %or9.i753 = or i32 %and5.i749, %and8.i752, !dbg !12210
  %or10.i754 = or i32 %shl2.i746, %or9.i753, !dbg !12211
  %463 = load i32, i32* %re_index, align 4, !dbg !12212
  %and577 = and i32 %463, 7, !dbg !12213
  %shl578 = shl i32 %or10.i754, %and577, !dbg !12214
  store i32 %shl578, i32* %re_cache, align 4, !dbg !12215
  %464 = load i32, i32* %re_cache, align 4, !dbg !12216
  store i32 %464, i32* %b, align 4, !dbg !12217
  %465 = load i32, i32* %b, align 4, !dbg !12218
  %neg = xor i32 %465, -1, !dbg !12219
  %or = or i32 %neg, 1, !dbg !12220
  %466 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !12221
  %sub579 = sub nsw i32 31, %466, !dbg !12222
  %sub580 = sub nsw i32 31, %sub579, !dbg !12223
  store i32 %sub580, i32* %b, align 4, !dbg !12224
  %467 = load i32, i32* %b, align 4, !dbg !12225
  %cmp581 = icmp ugt i32 %467, 8, !dbg !12227
  br i1 %cmp581, label %if.then583, label %if.end584, !dbg !12228

if.then583:                                       ; preds = %if.then569
  %468 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12229
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %468, i32 0, i32 1, !dbg !12231
  %469 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12231
  %470 = bitcast %struct.AVCodecContext* %469 to i8*, !dbg !12229
  call void (i8*, i32, i8*, ...) @av_log(i8* %470, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72, i32 0, i32 0)), !dbg !12232
  store i32 -1094995529, i32* %retval, align 4, !dbg !12233
  br label %return, !dbg !12233

if.end584:                                        ; preds = %if.then569
  br label %do.body585, !dbg !12234, !llvm.loop !12235

do.body585:                                       ; preds = %if.end584
  %471 = load i32, i32* %b, align 4, !dbg !12236
  %add586 = add i32 %471, 1, !dbg !12239
  %472 = load i32, i32* %re_cache, align 4, !dbg !12240
  %shl587 = shl i32 %472, %add586, !dbg !12240
  store i32 %shl587, i32* %re_cache, align 4, !dbg !12240
  %473 = load i32, i32* %re_size_plus8, align 4, !dbg !12241
  %474 = load i32, i32* %re_index, align 4, !dbg !12242
  %475 = load i32, i32* %b, align 4, !dbg !12243
  %add588 = add i32 %475, 1, !dbg !12244
  %add589 = add i32 %474, %add588, !dbg !12245
  %cmp590 = icmp ugt i32 %473, %add589, !dbg !12246
  br i1 %cmp590, label %cond.true592, label %cond.false595, !dbg !12247

cond.true592:                                     ; preds = %do.body585
  %476 = load i32, i32* %re_index, align 4, !dbg !12248
  %477 = load i32, i32* %b, align 4, !dbg !12250
  %add593 = add i32 %477, 1, !dbg !12251
  %add594 = add i32 %476, %add593, !dbg !12252
  br label %cond.end596, !dbg !12253

cond.false595:                                    ; preds = %do.body585
  %478 = load i32, i32* %re_size_plus8, align 4, !dbg !12254
  br label %cond.end596, !dbg !12256

cond.end596:                                      ; preds = %cond.false595, %cond.true592
  %cond597 = phi i32 [ %add594, %cond.true592 ], [ %478, %cond.false595 ], !dbg !12257
  store i32 %cond597, i32* %re_index, align 4, !dbg !12259
  br label %do.end599, !dbg !12260

do.end599:                                        ; preds = %cond.end596
  %479 = load i32, i32* %b, align 4, !dbg !12261
  %add600 = add i32 %479, 4, !dbg !12261
  store i32 %add600, i32* %b, align 4, !dbg !12261
  %480 = load i32, i32* %b, align 4, !dbg !12262
  %shl601 = shl i32 1, %480, !dbg !12263
  %481 = load i32, i32* %re_cache, align 4, !dbg !12264
  %482 = load i32, i32* %b, align 4, !dbg !12265
  %conv602 = trunc i32 %482 to i8, !dbg !12265
  %call603 = call i32 @NEG_USR32(i32 %481, i8 signext %conv602), !dbg !12266
  %add604 = add i32 %shl601, %call603, !dbg !12267
  store i32 %add604, i32* %n570, align 4, !dbg !12268
  %483 = load i32, i32* %re_size_plus8, align 4, !dbg !12269
  %484 = load i32, i32* %re_index, align 4, !dbg !12270
  %485 = load i32, i32* %b, align 4, !dbg !12271
  %add605 = add i32 %484, %485, !dbg !12272
  %cmp606 = icmp ugt i32 %483, %add605, !dbg !12273
  br i1 %cmp606, label %cond.true608, label %cond.false610, !dbg !12274

cond.true608:                                     ; preds = %do.end599
  %486 = load i32, i32* %re_index, align 4, !dbg !12275
  %487 = load i32, i32* %b, align 4, !dbg !12277
  %add609 = add i32 %486, %487, !dbg !12278
  br label %cond.end611, !dbg !12279

cond.false610:                                    ; preds = %do.end599
  %488 = load i32, i32* %re_size_plus8, align 4, !dbg !12280
  br label %cond.end611, !dbg !12282

cond.end611:                                      ; preds = %cond.false610, %cond.true608
  %cond612 = phi i32 [ %add609, %cond.true608 ], [ %488, %cond.false610 ], !dbg !12283
  store i32 %cond612, i32* %re_index, align 4, !dbg !12285
  %489 = load i32, i32* %n570, align 4, !dbg !12286
  %idxprom613 = sext i32 %489 to i64, !dbg !12287
  %arrayidx614 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cbrt_tab, i64 0, i64 %idxprom613, !dbg !12287
  %490 = load i32, i32* %arrayidx614, align 4, !dbg !12287
  %491 = load i32, i32* %bits473, align 4, !dbg !12288
  %and615 = and i32 %491, -2147483648, !dbg !12289
  %or616 = or i32 %490, %and615, !dbg !12290
  %492 = load i32*, i32** %icf, align 8, !dbg !12291
  %incdec.ptr617 = getelementptr inbounds i32, i32* %492, i32 1, !dbg !12291
  store i32* %incdec.ptr617, i32** %icf, align 8, !dbg !12291
  store i32 %or616, i32* %492, align 4, !dbg !12292
  %493 = load i32, i32* %bits473, align 4, !dbg !12293
  %shl618 = shl i32 %493, 1, !dbg !12293
  store i32 %shl618, i32* %bits473, align 4, !dbg !12293
  br label %if.end629, !dbg !12294

if.else619:                                       ; preds = %for.body565
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12295, metadata !2062), !dbg !12297
  %494 = load i32, i32* %cb_idx472, align 4, !dbg !12298
  %and620 = and i32 %494, 15, !dbg !12299
  %idxprom621 = zext i32 %and620 to i64, !dbg !12300
  %495 = load float*, float** %vq, align 8, !dbg !12301
  %496 = bitcast float* %495 to i32*, !dbg !12300
  %arrayidx622 = getelementptr inbounds i32, i32* %496, i64 %idxprom621, !dbg !12300
  %497 = load i32, i32* %arrayidx622, align 4, !dbg !12300
  store i32 %497, i32* %v, align 4, !dbg !12297
  %498 = load i32, i32* %bits473, align 4, !dbg !12302
  %and623 = and i32 %498, -2147483648, !dbg !12303
  %499 = load i32, i32* %v, align 4, !dbg !12304
  %or624 = or i32 %and623, %499, !dbg !12305
  %500 = load i32*, i32** %icf, align 8, !dbg !12306
  %incdec.ptr625 = getelementptr inbounds i32, i32* %500, i32 1, !dbg !12306
  store i32* %incdec.ptr625, i32** %icf, align 8, !dbg !12306
  store i32 %or624, i32* %500, align 4, !dbg !12307
  %501 = load i32, i32* %v, align 4, !dbg !12308
  %tobool626 = icmp ne i32 %501, 0, !dbg !12309
  %lnot = xor i1 %tobool626, true, !dbg !12309
  %lnot627 = xor i1 %lnot, true, !dbg !12310
  %lnot.ext = zext i1 %lnot627 to i32, !dbg !12310
  %502 = load i32, i32* %bits473, align 4, !dbg !12311
  %shl628 = shl i32 %502, %lnot.ext, !dbg !12311
  store i32 %shl628, i32* %bits473, align 4, !dbg !12311
  br label %if.end629

if.end629:                                        ; preds = %if.else619, %cond.end611
  %503 = load i32, i32* %cb_idx472, align 4, !dbg !12312
  %shr630 = lshr i32 %503, 4, !dbg !12312
  store i32 %shr630, i32* %cb_idx472, align 4, !dbg !12312
  br label %for.inc631, !dbg !12313

for.inc631:                                       ; preds = %if.end629
  %504 = load i32, i32* %j, align 4, !dbg !12314
  %inc632 = add nsw i32 %504, 1, !dbg !12314
  store i32 %inc632, i32* %j, align 4, !dbg !12314
  br label %for.cond562, !dbg !12316, !llvm.loop !12317

for.end633:                                       ; preds = %for.cond562
  br label %do.cond634, !dbg !12319

do.cond634:                                       ; preds = %for.end633, %if.then542
  %505 = load i32, i32* %len468, align 4, !dbg !12320
  %sub635 = sub nsw i32 %505, 2, !dbg !12320
  store i32 %sub635, i32* %len468, align 4, !dbg !12320
  %tobool636 = icmp ne i32 %sub635, 0, !dbg !12322
  br i1 %tobool636, label %do.body469, label %do.end637, !dbg !12322, !llvm.loop !11978

do.end637:                                        ; preds = %do.cond634
  %506 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12323
  %fdsp638 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %506, i32 0, i32 17, !dbg !12324
  %507 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp638, align 8, !dbg !12324
  %vector_fmul_scalar639 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %507, i32 0, i32 3, !dbg !12325
  %508 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar639, align 8, !dbg !12325
  %509 = load float*, float** %cfo, align 8, !dbg !12326
  %510 = load float*, float** %cfo, align 8, !dbg !12327
  %511 = load i32, i32* %idx, align 4, !dbg !12328
  %idxprom640 = sext i32 %511 to i64, !dbg !12329
  %512 = load float*, float** %sf.addr, align 8, !dbg !12329
  %arrayidx641 = getelementptr inbounds float, float* %512, i64 %idxprom640, !dbg !12329
  %513 = load float, float* %arrayidx641, align 4, !dbg !12329
  %514 = load i32, i32* %off_len, align 4, !dbg !12330
  call void %508(float* %509, float* %510, float %513, i32 %514), !dbg !12323
  br label %for.inc642, !dbg !12331

for.inc642:                                       ; preds = %do.end637
  %515 = load i32, i32* %group, align 4, !dbg !12332
  %inc643 = add nsw i32 %515, 1, !dbg !12332
  store i32 %inc643, i32* %group, align 4, !dbg !12332
  %516 = load float*, float** %cfo, align 8, !dbg !12334
  %add.ptr644 = getelementptr inbounds float, float* %516, i64 128, !dbg !12334
  store float* %add.ptr644, float** %cfo, align 8, !dbg !12334
  br label %for.cond463, !dbg !12335, !llvm.loop !12336

for.end645:                                       ; preds = %for.cond463
  br label %sw.epilog, !dbg !12338

sw.epilog:                                        ; preds = %for.end645, %for.end462, %for.end351, %for.end260, %for.end154
  %517 = load i32, i32* %re_index, align 4, !dbg !12339
  %518 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12340
  %index646 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %518, i32 0, i32 2, !dbg !12341
  store i32 %517, i32* %index646, align 8, !dbg !12342
  br label %if.end647

if.end647:                                        ; preds = %sw.epilog, %for.end78
  br label %if.end648

if.end648:                                        ; preds = %if.end647, %for.end49
  br label %for.inc649, !dbg !12343

for.inc649:                                       ; preds = %if.end648
  %519 = load i32, i32* %i, align 4, !dbg !12344
  %inc650 = add nsw i32 %519, 1, !dbg !12344
  store i32 %inc650, i32* %i, align 4, !dbg !12344
  %520 = load i32, i32* %idx, align 4, !dbg !12346
  %inc651 = add nsw i32 %520, 1, !dbg !12346
  store i32 %inc651, i32* %idx, align 4, !dbg !12346
  br label %for.cond17, !dbg !12347, !llvm.loop !12348

for.end652:                                       ; preds = %for.cond17
  %521 = load i32, i32* %g_len, align 4, !dbg !12350
  %shl653 = shl i32 %521, 7, !dbg !12351
  %522 = load float*, float** %coef.addr, align 8, !dbg !12352
  %idx.ext654 = zext i32 %shl653 to i64, !dbg !12352
  %add.ptr655 = getelementptr inbounds float, float* %522, i64 %idx.ext654, !dbg !12352
  store float* %add.ptr655, float** %coef.addr, align 8, !dbg !12352
  br label %for.inc656, !dbg !12353

for.inc656:                                       ; preds = %for.end652
  %523 = load i32, i32* %g, align 4, !dbg !12354
  %inc657 = add nsw i32 %523, 1, !dbg !12354
  store i32 %inc657, i32* %g, align 4, !dbg !12354
  br label %for.cond10, !dbg !12356, !llvm.loop !12357

for.end658:                                       ; preds = %for.cond10
  %524 = load i32, i32* %pulse_present.addr, align 4, !dbg !12359
  %tobool659 = icmp ne i32 %524, 0, !dbg !12359
  br i1 %tobool659, label %if.then660, label %if.end724, !dbg !12361

if.then660:                                       ; preds = %for.end658
  store i32 0, i32* %idx, align 4, !dbg !12362
  store i32 0, i32* %i, align 4, !dbg !12364
  br label %for.cond661, !dbg !12366

for.cond661:                                      ; preds = %for.inc721, %if.then660
  %525 = load i32, i32* %i, align 4, !dbg !12367
  %526 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12370
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %526, i32 0, i32 0, !dbg !12371
  %527 = load i32, i32* %num_pulse, align 4, !dbg !12371
  %cmp662 = icmp slt i32 %525, %527, !dbg !12372
  br i1 %cmp662, label %for.body664, label %for.end723, !dbg !12373

for.body664:                                      ; preds = %for.cond661
  call void @llvm.dbg.declare(metadata float* %co, metadata !12374, metadata !2062), !dbg !12376
  %528 = load i32, i32* %i, align 4, !dbg !12377
  %idxprom665 = sext i32 %528 to i64, !dbg !12378
  %529 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12378
  %pos = getelementptr inbounds %struct.Pulse, %struct.Pulse* %529, i32 0, i32 2, !dbg !12379
  %arrayidx666 = getelementptr inbounds [4 x i32], [4 x i32]* %pos, i64 0, i64 %idxprom665, !dbg !12378
  %530 = load i32, i32* %arrayidx666, align 4, !dbg !12378
  %idxprom667 = sext i32 %530 to i64, !dbg !12380
  %531 = load float*, float** %coef_base, align 8, !dbg !12380
  %arrayidx668 = getelementptr inbounds float, float* %531, i64 %idxprom667, !dbg !12380
  %532 = load float, float* %arrayidx668, align 4, !dbg !12380
  store float %532, float* %co, align 4, !dbg !12376
  br label %while.cond, !dbg !12381

while.cond:                                       ; preds = %while.body, %for.body664
  %533 = load i32, i32* %idx, align 4, !dbg !12382
  %add669 = add nsw i32 %533, 1, !dbg !12384
  %idxprom670 = sext i32 %add669 to i64, !dbg !12385
  %534 = load i16*, i16** %offsets, align 8, !dbg !12385
  %arrayidx671 = getelementptr inbounds i16, i16* %534, i64 %idxprom670, !dbg !12385
  %535 = load i16, i16* %arrayidx671, align 2, !dbg !12385
  %conv672 = zext i16 %535 to i32, !dbg !12385
  %536 = load i32, i32* %i, align 4, !dbg !12386
  %idxprom673 = sext i32 %536 to i64, !dbg !12387
  %537 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12387
  %pos674 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %537, i32 0, i32 2, !dbg !12388
  %arrayidx675 = getelementptr inbounds [4 x i32], [4 x i32]* %pos674, i64 0, i64 %idxprom673, !dbg !12387
  %538 = load i32, i32* %arrayidx675, align 4, !dbg !12387
  %cmp676 = icmp sle i32 %conv672, %538, !dbg !12389
  br i1 %cmp676, label %while.body, label %while.end, !dbg !12390

while.body:                                       ; preds = %while.cond
  %539 = load i32, i32* %idx, align 4, !dbg !12391
  %inc678 = add nsw i32 %539, 1, !dbg !12391
  store i32 %inc678, i32* %idx, align 4, !dbg !12391
  br label %while.cond, !dbg !12392, !llvm.loop !12394

while.end:                                        ; preds = %while.cond
  %540 = load i32, i32* %idx, align 4, !dbg !12395
  %idxprom679 = sext i32 %540 to i64, !dbg !12397
  %541 = load i32*, i32** %band_type.addr, align 8, !dbg !12397
  %arrayidx680 = getelementptr inbounds i32, i32* %541, i64 %idxprom679, !dbg !12397
  %542 = load i32, i32* %arrayidx680, align 4, !dbg !12397
  %cmp681 = icmp ne i32 %542, 13, !dbg !12398
  br i1 %cmp681, label %land.lhs.true, label %if.end720, !dbg !12399

land.lhs.true:                                    ; preds = %while.end
  %543 = load i32, i32* %idx, align 4, !dbg !12400
  %idxprom683 = sext i32 %543 to i64, !dbg !12402
  %544 = load float*, float** %sf.addr, align 8, !dbg !12402
  %arrayidx684 = getelementptr inbounds float, float* %544, i64 %idxprom683, !dbg !12402
  %545 = load float, float* %arrayidx684, align 4, !dbg !12402
  %tobool685 = fcmp une float %545, 0.000000e+00, !dbg !12402
  br i1 %tobool685, label %if.then686, label %if.end720, !dbg !12403

if.then686:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %ico, metadata !12404, metadata !2062), !dbg !12406
  %546 = load i32, i32* %i, align 4, !dbg !12407
  %idxprom687 = sext i32 %546 to i64, !dbg !12408
  %547 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12408
  %amp = getelementptr inbounds %struct.Pulse, %struct.Pulse* %547, i32 0, i32 3, !dbg !12409
  %arrayidx688 = getelementptr inbounds [4 x i32], [4 x i32]* %amp, i64 0, i64 %idxprom687, !dbg !12408
  %548 = load i32, i32* %arrayidx688, align 4, !dbg !12408
  %sub689 = sub nsw i32 0, %548, !dbg !12410
  %conv690 = sitofp i32 %sub689 to float, !dbg !12410
  store float %conv690, float* %ico, align 4, !dbg !12406
  %549 = load float, float* %co, align 4, !dbg !12411
  %tobool691 = fcmp une float %549, 0.000000e+00, !dbg !12411
  br i1 %tobool691, label %if.then692, label %if.end708, !dbg !12413

if.then692:                                       ; preds = %if.then686
  %550 = load i32, i32* %idx, align 4, !dbg !12414
  %idxprom693 = sext i32 %550 to i64, !dbg !12416
  %551 = load float*, float** %sf.addr, align 8, !dbg !12416
  %arrayidx694 = getelementptr inbounds float, float* %551, i64 %idxprom693, !dbg !12416
  %552 = load float, float* %arrayidx694, align 4, !dbg !12416
  %553 = load float, float* %co, align 4, !dbg !12417
  %div695 = fdiv float %553, %552, !dbg !12417
  store float %div695, float* %co, align 4, !dbg !12417
  %554 = load float, float* %co, align 4, !dbg !12418
  %555 = load float, float* %co, align 4, !dbg !12419
  %call696 = call float @fabsf(float %555) #3, !dbg !12420
  %call697 = call float @sqrtf(float %call696) #10, !dbg !12421
  %call698 = call float @sqrtf(float %call697) #10, !dbg !12423
  %div699 = fdiv float %554, %call698, !dbg !12425
  %556 = load float, float* %co, align 4, !dbg !12426
  %cmp700 = fcmp ogt float %556, 0.000000e+00, !dbg !12427
  br i1 %cmp700, label %cond.true702, label %cond.false704, !dbg !12426

cond.true702:                                     ; preds = %if.then692
  %557 = load float, float* %ico, align 4, !dbg !12428
  %sub703 = fsub float -0.000000e+00, %557, !dbg !12430
  br label %cond.end705, !dbg !12431

cond.false704:                                    ; preds = %if.then692
  %558 = load float, float* %ico, align 4, !dbg !12432
  br label %cond.end705, !dbg !12434

cond.end705:                                      ; preds = %cond.false704, %cond.true702
  %cond706 = phi float [ %sub703, %cond.true702 ], [ %558, %cond.false704 ], !dbg !12435
  %add707 = fadd float %div699, %cond706, !dbg !12437
  store float %add707, float* %ico, align 4, !dbg !12438
  br label %if.end708, !dbg !12439

if.end708:                                        ; preds = %cond.end705, %if.then686
  %559 = load float, float* %ico, align 4, !dbg !12440
  %call709 = call float @fabsf(float %559) #3, !dbg !12441
  %call710 = call float @cbrtf(float %call709) #10, !dbg !12442
  %560 = load float, float* %ico, align 4, !dbg !12444
  %mul711 = fmul float %call710, %560, !dbg !12445
  %561 = load i32, i32* %idx, align 4, !dbg !12446
  %idxprom712 = sext i32 %561 to i64, !dbg !12447
  %562 = load float*, float** %sf.addr, align 8, !dbg !12447
  %arrayidx713 = getelementptr inbounds float, float* %562, i64 %idxprom712, !dbg !12447
  %563 = load float, float* %arrayidx713, align 4, !dbg !12447
  %mul714 = fmul float %mul711, %563, !dbg !12448
  %564 = load i32, i32* %i, align 4, !dbg !12449
  %idxprom715 = sext i32 %564 to i64, !dbg !12450
  %565 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !12450
  %pos716 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %565, i32 0, i32 2, !dbg !12451
  %arrayidx717 = getelementptr inbounds [4 x i32], [4 x i32]* %pos716, i64 0, i64 %idxprom715, !dbg !12450
  %566 = load i32, i32* %arrayidx717, align 4, !dbg !12450
  %idxprom718 = sext i32 %566 to i64, !dbg !12452
  %567 = load float*, float** %coef_base, align 8, !dbg !12452
  %arrayidx719 = getelementptr inbounds float, float* %567, i64 %idxprom718, !dbg !12452
  store float %mul714, float* %arrayidx719, align 4, !dbg !12453
  br label %if.end720, !dbg !12454

if.end720:                                        ; preds = %if.end708, %land.lhs.true, %while.end
  br label %for.inc721, !dbg !12455

for.inc721:                                       ; preds = %if.end720
  %568 = load i32, i32* %i, align 4, !dbg !12456
  %inc722 = add nsw i32 %568, 1, !dbg !12456
  store i32 %inc722, i32* %i, align 4, !dbg !12456
  br label %for.cond661, !dbg !12458, !llvm.loop !12459

for.end723:                                       ; preds = %for.cond661
  br label %if.end724, !dbg !12461

if.end724:                                        ; preds = %for.end723, %for.end658
  store i32 0, i32* %retval, align 4, !dbg !12462
  br label %return, !dbg !12462

return:                                           ; preds = %if.end724, %if.then583
  %569 = load i32, i32* %retval, align 4, !dbg !12463
  ret i32 %569, !dbg !12463
}

; Function Attrs: nounwind uwtable
define internal void @apply_prediction(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !12464 {
entry:
  %pf.addr.i95.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i95.i, metadata !12465, metadata !2062), !dbg !12469
  %tmp.i96.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %tmp.i96.i, metadata !12486, metadata !2062), !dbg !12492
  %pf.addr.i88.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i88.i, metadata !12493, metadata !2062), !dbg !12495
  %tmp.i89.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %tmp.i89.i, metadata !12497, metadata !2062), !dbg !12498
  %pf.addr.i82.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i82.i, metadata !12499, metadata !2062), !dbg !12501
  %pun.i83.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i83.i, metadata !12503, metadata !2062), !dbg !12504
  %pf.addr.i76.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i76.i, metadata !12499, metadata !2062), !dbg !12505
  %pun.i77.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i77.i, metadata !12503, metadata !2062), !dbg !12507
  %pf.addr.i70.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i70.i, metadata !12499, metadata !2062), !dbg !12508
  %pun.i71.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i71.i, metadata !12503, metadata !2062), !dbg !12510
  %pf.addr.i64.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i64.i, metadata !12499, metadata !2062), !dbg !12511
  %pun.i65.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i65.i, metadata !12503, metadata !2062), !dbg !12513
  %pf.addr.i58.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i58.i, metadata !12499, metadata !2062), !dbg !12514
  %pun.i59.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i59.i, metadata !12503, metadata !2062), !dbg !12516
  %pf.addr.i54.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i54.i, metadata !12499, metadata !2062), !dbg !12517
  %pun.i.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %pun.i.i, metadata !12503, metadata !2062), !dbg !12519
  %pf.addr.i.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pf.addr.i.i, metadata !12465, metadata !2062), !dbg !12520
  %tmp.i.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %tmp.i.i, metadata !12486, metadata !2062), !dbg !12522
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !12523, metadata !2062), !dbg !12524
  %coef.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %coef.addr.i, metadata !12525, metadata !2062), !dbg !12526
  %output_enable.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %output_enable.addr.i, metadata !12527, metadata !2062), !dbg !12528
  %a.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.i, metadata !12529, metadata !2062), !dbg !12530
  %alpha.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.i, metadata !12531, metadata !2062), !dbg !12532
  %e0.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %e0.i, metadata !12533, metadata !2062), !dbg !12534
  %e1.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %e1.i, metadata !12535, metadata !2062), !dbg !12536
  %pv.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %pv.i, metadata !12537, metadata !2062), !dbg !12538
  %k1.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %k1.i, metadata !12539, metadata !2062), !dbg !12540
  %k2.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %k2.i, metadata !12541, metadata !2062), !dbg !12542
  %r0.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %r0.i, metadata !12543, metadata !2062), !dbg !12544
  %r1.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %r1.i, metadata !12545, metadata !2062), !dbg !12546
  %cor0.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cor0.i, metadata !12547, metadata !2062), !dbg !12548
  %cor1.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cor1.i, metadata !12549, metadata !2062), !dbg !12550
  %var0.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %var0.i, metadata !12551, metadata !2062), !dbg !12552
  %var1.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %var1.i, metadata !12553, metadata !2062), !dbg !12554
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %sfb = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !12555, metadata !2062), !dbg !12556
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !12557, metadata !2062), !dbg !12558
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !12559, metadata !2062), !dbg !12560
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12561, metadata !2062), !dbg !12562
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12563
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !12565
  %predictor_initialized = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 12, !dbg !12566
  %1 = load i32, i32* %predictor_initialized, align 16, !dbg !12566
  %tobool = icmp ne i32 %1, 0, !dbg !12563
  br i1 %tobool, label %if.end, label %if.then, !dbg !12567

if.then:                                          ; preds = %entry
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12568
  %predictor_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 20, !dbg !12570
  %arraydecay = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state, i32 0, i32 0, !dbg !12568
  call void @reset_all_predictors(%struct.PredictorState* %arraydecay), !dbg !12571
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12572
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 0, !dbg !12573
  %predictor_initialized2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 12, !dbg !12574
  store i32 1, i32* %predictor_initialized2, align 16, !dbg !12575
  br label %if.end, !dbg !12576

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12577
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 0, !dbg !12578
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 1, !dbg !12579
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !12577
  %5 = load i32, i32* %arrayidx, align 4, !dbg !12577
  %cmp = icmp ne i32 %5, 2, !dbg !12580
  br i1 %cmp, label %if.then4, label %if.else, !dbg !12581

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %sfb, align 4, !dbg !12582
  br label %for.cond, !dbg !12583

for.cond:                                         ; preds = %for.inc34, %if.then4
  %6 = load i32, i32* %sfb, align 4, !dbg !12584
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12585
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 24, !dbg !12586
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !12585
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !12587
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !12588
  %8 = load i32, i32* %sampling_index, align 4, !dbg !12588
  %idxprom = sext i32 %8 to i64, !dbg !12589
  %arrayidx6 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom, !dbg !12589
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !12589
  %conv = zext i8 %9 to i32, !dbg !12589
  %cmp7 = icmp slt i32 %6, %conv, !dbg !12590
  br i1 %cmp7, label %for.body, label %for.end36, !dbg !12591

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %sfb, align 4, !dbg !12593
  %idxprom9 = sext i32 %10 to i64, !dbg !12594
  %11 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12594
  %ics10 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %11, i32 0, i32 0, !dbg !12595
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics10, i32 0, i32 6, !dbg !12596
  %12 = load i16*, i16** %swb_offset, align 16, !dbg !12596
  %arrayidx11 = getelementptr inbounds i16, i16* %12, i64 %idxprom9, !dbg !12594
  %13 = load i16, i16* %arrayidx11, align 2, !dbg !12594
  %conv12 = zext i16 %13 to i32, !dbg !12594
  store i32 %conv12, i32* %k, align 4, !dbg !12597
  br label %for.cond13, !dbg !12598

for.cond13:                                       ; preds = %for.inc, %for.body
  %14 = load i32, i32* %k, align 4, !dbg !12599
  %15 = load i32, i32* %sfb, align 4, !dbg !12600
  %add = add nsw i32 %15, 1, !dbg !12601
  %idxprom14 = sext i32 %add to i64, !dbg !12602
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12602
  %ics15 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 0, !dbg !12603
  %swb_offset16 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics15, i32 0, i32 6, !dbg !12604
  %17 = load i16*, i16** %swb_offset16, align 16, !dbg !12604
  %arrayidx17 = getelementptr inbounds i16, i16* %17, i64 %idxprom14, !dbg !12602
  %18 = load i16, i16* %arrayidx17, align 2, !dbg !12602
  %conv18 = zext i16 %18 to i32, !dbg !12602
  %cmp19 = icmp slt i32 %14, %conv18, !dbg !12605
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !12606

for.body21:                                       ; preds = %for.cond13
  %19 = load i32, i32* %k, align 4, !dbg !12608
  %idxprom22 = sext i32 %19 to i64, !dbg !12609
  %20 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12609
  %predictor_state23 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %20, i32 0, i32 20, !dbg !12610
  %arrayidx24 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state23, i64 0, i64 %idxprom22, !dbg !12609
  %21 = load i32, i32* %k, align 4, !dbg !12611
  %idxprom25 = sext i32 %21 to i64, !dbg !12612
  %22 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12612
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %22, i32 0, i32 14, !dbg !12613
  %arrayidx26 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom25, !dbg !12612
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12614
  %ics27 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 0, !dbg !12615
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics27, i32 0, i32 11, !dbg !12616
  %24 = load i32, i32* %predictor_present, align 4, !dbg !12616
  %tobool28 = icmp ne i32 %24, 0, !dbg !12614
  br i1 %tobool28, label %land.rhs, label %land.end, !dbg !12617

land.rhs:                                         ; preds = %for.body21
  %25 = load i32, i32* %sfb, align 4, !dbg !12618
  %idxprom29 = sext i32 %25 to i64, !dbg !12619
  %26 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12619
  %ics30 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %26, i32 0, i32 0, !dbg !12620
  %prediction_used = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics30, i32 0, i32 15, !dbg !12621
  %arrayidx31 = getelementptr inbounds [41 x i8], [41 x i8]* %prediction_used, i64 0, i64 %idxprom29, !dbg !12619
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !12619
  %conv32 = zext i8 %27 to i32, !dbg !12619
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !12622
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body21
  %28 = phi i1 [ false, %for.body21 ], [ %tobool33, %land.rhs ]
  %land.ext = zext i1 %28 to i32, !dbg !12623
  store %struct.PredictorState* %arrayidx24, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12625
  store float* %arrayidx26, float** %coef.addr.i, align 8, !dbg !12625
  store i32 %land.ext, i32* %output_enable.addr.i, align 4, !dbg !12625
  store float 9.531250e-01, float* %a.i, align 4, !dbg !12530
  store float 9.062500e-01, float* %alpha.i, align 4, !dbg !12532
  %29 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12626
  %r01.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %29, i32 0, i32 4, !dbg !12627
  %30 = load float, float* %r01.i, align 4, !dbg !12627
  store float %30, float* %r0.i, align 4, !dbg !12544
  %31 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12628
  %r12.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %31, i32 0, i32 5, !dbg !12629
  %32 = load float, float* %r12.i, align 4, !dbg !12629
  store float %32, float* %r1.i, align 4, !dbg !12546
  %33 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12630
  %cor03.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %33, i32 0, i32 0, !dbg !12631
  %34 = load float, float* %cor03.i, align 4, !dbg !12631
  store float %34, float* %cor0.i, align 4, !dbg !12548
  %35 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12632
  %cor14.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %35, i32 0, i32 1, !dbg !12633
  %36 = load float, float* %cor14.i, align 4, !dbg !12633
  store float %36, float* %cor1.i, align 4, !dbg !12550
  %37 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12634
  %var05.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %37, i32 0, i32 2, !dbg !12635
  %38 = load float, float* %var05.i, align 4, !dbg !12635
  store float %38, float* %var0.i, align 4, !dbg !12552
  %39 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12636
  %var16.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %39, i32 0, i32 3, !dbg !12637
  %40 = load float, float* %var16.i, align 4, !dbg !12637
  store float %40, float* %var1.i, align 4, !dbg !12554
  %41 = load float, float* %var0.i, align 4, !dbg !12638
  %cmp.i = fcmp ogt float %41, 1.000000e+00, !dbg !12639
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i, !dbg !12638

cond.true.i:                                      ; preds = %land.end
  %42 = load float, float* %cor0.i, align 4, !dbg !12640
  %43 = load float, float* %var0.i, align 4, !dbg !12641
  %div.i = fdiv float 9.531250e-01, %43, !dbg !12642
  store float %div.i, float* %pf.addr.i.i, align 4, !dbg !12643
  %44 = load float, float* %pf.addr.i.i, align 4, !dbg !12644
  %f.i.i = bitcast %union.av_intfloat32* %tmp.i.i to float*, !dbg !12645
  store float %44, float* %f.i.i, align 4, !dbg !12646
  %i.i.i = bitcast %union.av_intfloat32* %tmp.i.i to i32*, !dbg !12647
  %45 = load i32, i32* %i.i.i, align 4, !dbg !12647
  %add.i.i = add i32 %45, 32767, !dbg !12648
  %i1.i.i = bitcast %union.av_intfloat32* %tmp.i.i to i32*, !dbg !12649
  %46 = load i32, i32* %i1.i.i, align 4, !dbg !12649
  %and.i.i = and i32 %46, 1, !dbg !12650
  %add2.i.i = add i32 %add.i.i, %and.i.i, !dbg !12651
  %and3.i.i = and i32 %add2.i.i, -65536, !dbg !12652
  %i4.i.i = bitcast %union.av_intfloat32* %tmp.i.i to i32*, !dbg !12653
  store i32 %and3.i.i, i32* %i4.i.i, align 4, !dbg !12654
  %f5.i.i = bitcast %union.av_intfloat32* %tmp.i.i to float*, !dbg !12655
  %47 = load float, float* %f5.i.i, align 4, !dbg !12655
  %mul.i = fmul float %42, %47, !dbg !12656
  br label %cond.end.i, !dbg !12657

cond.false.i:                                     ; preds = %land.end
  br label %cond.end.i, !dbg !12658

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi float [ %mul.i, %cond.true.i ], [ 0.000000e+00, %cond.false.i ], !dbg !12660
  store float %cond.i, float* %k1.i, align 4, !dbg !12662
  %48 = load float, float* %var1.i, align 4, !dbg !12663
  %cmp7.i = fcmp ogt float %48, 1.000000e+00, !dbg !12664
  br i1 %cmp7.i, label %cond.true8.i, label %cond.false12.i, !dbg !12663

cond.true8.i:                                     ; preds = %cond.end.i
  %49 = load float, float* %cor1.i, align 4, !dbg !12665
  %50 = load float, float* %var1.i, align 4, !dbg !12666
  %div9.i = fdiv float 9.531250e-01, %50, !dbg !12667
  store float %div9.i, float* %pf.addr.i95.i, align 4, !dbg !12668
  %51 = load float, float* %pf.addr.i95.i, align 4, !dbg !12669
  %f.i97.i = bitcast %union.av_intfloat32* %tmp.i96.i to float*, !dbg !12670
  store float %51, float* %f.i97.i, align 4, !dbg !12671
  %i.i98.i = bitcast %union.av_intfloat32* %tmp.i96.i to i32*, !dbg !12672
  %52 = load i32, i32* %i.i98.i, align 4, !dbg !12672
  %add.i99.i = add i32 %52, 32767, !dbg !12673
  %i1.i100.i = bitcast %union.av_intfloat32* %tmp.i96.i to i32*, !dbg !12674
  %53 = load i32, i32* %i1.i100.i, align 4, !dbg !12674
  %and.i101.i = and i32 %53, 1, !dbg !12675
  %add2.i102.i = add i32 %add.i99.i, %and.i101.i, !dbg !12676
  %and3.i103.i = and i32 %add2.i102.i, -65536, !dbg !12677
  %i4.i104.i = bitcast %union.av_intfloat32* %tmp.i96.i to i32*, !dbg !12678
  store i32 %and3.i103.i, i32* %i4.i104.i, align 4, !dbg !12679
  %f5.i105.i = bitcast %union.av_intfloat32* %tmp.i96.i to float*, !dbg !12680
  %54 = load float, float* %f5.i105.i, align 4, !dbg !12680
  %mul11.i = fmul float %49, %54, !dbg !12681
  br label %cond.end13.i, !dbg !12682

cond.false12.i:                                   ; preds = %cond.end.i
  br label %cond.end13.i, !dbg !12683

cond.end13.i:                                     ; preds = %cond.false12.i, %cond.true8.i
  %cond14.i = phi float [ %mul11.i, %cond.true8.i ], [ 0.000000e+00, %cond.false12.i ], !dbg !12684
  store float %cond14.i, float* %k2.i, align 4, !dbg !12685
  %55 = load float, float* %k1.i, align 4, !dbg !12686
  %56 = load float, float* %r0.i, align 4, !dbg !12687
  %mul15.i = fmul float %55, %56, !dbg !12688
  %57 = load float, float* %k2.i, align 4, !dbg !12689
  %58 = load float, float* %r1.i, align 4, !dbg !12690
  %mul16.i = fmul float %57, %58, !dbg !12691
  %add.i = fadd float %mul15.i, %mul16.i, !dbg !12692
  store float %add.i, float* %pf.addr.i88.i, align 4, !dbg !12693
  %59 = load float, float* %pf.addr.i88.i, align 4, !dbg !12694
  %f.i90.i = bitcast %union.av_intfloat32* %tmp.i89.i to float*, !dbg !12695
  store float %59, float* %f.i90.i, align 4, !dbg !12696
  %i.i91.i = bitcast %union.av_intfloat32* %tmp.i89.i to i32*, !dbg !12697
  %60 = load i32, i32* %i.i91.i, align 4, !dbg !12697
  %add.i92.i = add i32 %60, 32768, !dbg !12698
  %and.i93.i = and i32 %add.i92.i, -65536, !dbg !12699
  %i1.i94.i = bitcast %union.av_intfloat32* %tmp.i89.i to i32*, !dbg !12700
  store i32 %and.i93.i, i32* %i1.i94.i, align 4, !dbg !12701
  %f2.i.i = bitcast %union.av_intfloat32* %tmp.i89.i to float*, !dbg !12702
  %61 = load float, float* %f2.i.i, align 4, !dbg !12702
  store float %61, float* %pv.i, align 4, !dbg !12703
  %62 = load i32, i32* %output_enable.addr.i, align 4, !dbg !12704
  %tobool.i = icmp ne i32 %62, 0, !dbg !12704
  br i1 %tobool.i, label %if.then.i, label %predict.exit, !dbg !12706

if.then.i:                                        ; preds = %cond.end13.i
  %63 = load float, float* %pv.i, align 4, !dbg !12707
  %64 = load float*, float** %coef.addr.i, align 8, !dbg !12708
  %65 = load float, float* %64, align 4, !dbg !12709
  %add18.i = fadd float %65, %63, !dbg !12709
  store float %add18.i, float* %64, align 4, !dbg !12709
  br label %predict.exit, !dbg !12710

predict.exit:                                     ; preds = %cond.end13.i, %if.then.i
  %66 = load float*, float** %coef.addr.i, align 8, !dbg !12711
  %67 = load float, float* %66, align 4, !dbg !12712
  store float %67, float* %e0.i, align 4, !dbg !12713
  %68 = load float, float* %e0.i, align 4, !dbg !12714
  %69 = load float, float* %k1.i, align 4, !dbg !12715
  %70 = load float, float* %r0.i, align 4, !dbg !12716
  %mul19.i = fmul float %69, %70, !dbg !12717
  %sub.i = fsub float %68, %mul19.i, !dbg !12718
  store float %sub.i, float* %e1.i, align 4, !dbg !12719
  %71 = load float, float* %cor1.i, align 4, !dbg !12720
  %mul20.i = fmul float 9.062500e-01, %71, !dbg !12721
  %72 = load float, float* %r1.i, align 4, !dbg !12722
  %73 = load float, float* %e1.i, align 4, !dbg !12723
  %mul21.i = fmul float %72, %73, !dbg !12724
  %add22.i = fadd float %mul20.i, %mul21.i, !dbg !12725
  store float %add22.i, float* %pf.addr.i82.i, align 4, !dbg !12726
  %74 = load float, float* %pf.addr.i82.i, align 4, !dbg !12727
  %f.i84.i = bitcast %union.av_intfloat32* %pun.i83.i to float*, !dbg !12728
  store float %74, float* %f.i84.i, align 4, !dbg !12729
  %i.i85.i = bitcast %union.av_intfloat32* %pun.i83.i to i32*, !dbg !12730
  %75 = load i32, i32* %i.i85.i, align 4, !dbg !12731
  %and.i86.i = and i32 %75, -65536, !dbg !12731
  store i32 %and.i86.i, i32* %i.i85.i, align 4, !dbg !12731
  %f1.i87.i = bitcast %union.av_intfloat32* %pun.i83.i to float*, !dbg !12732
  %76 = load float, float* %f1.i87.i, align 4, !dbg !12732
  %77 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12733
  %cor124.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %77, i32 0, i32 1, !dbg !12734
  store float %76, float* %cor124.i, align 4, !dbg !12735
  %78 = load float, float* %var1.i, align 4, !dbg !12736
  %mul25.i = fmul float 9.062500e-01, %78, !dbg !12737
  %79 = load float, float* %r1.i, align 4, !dbg !12738
  %80 = load float, float* %r1.i, align 4, !dbg !12739
  %mul26.i = fmul float %79, %80, !dbg !12740
  %81 = load float, float* %e1.i, align 4, !dbg !12741
  %82 = load float, float* %e1.i, align 4, !dbg !12742
  %mul27.i = fmul float %81, %82, !dbg !12743
  %add28.i = fadd float %mul26.i, %mul27.i, !dbg !12744
  %mul29.i = fmul float 5.000000e-01, %add28.i, !dbg !12745
  %add30.i = fadd float %mul25.i, %mul29.i, !dbg !12746
  store float %add30.i, float* %pf.addr.i76.i, align 4, !dbg !12747
  %83 = load float, float* %pf.addr.i76.i, align 4, !dbg !12748
  %f.i78.i = bitcast %union.av_intfloat32* %pun.i77.i to float*, !dbg !12749
  store float %83, float* %f.i78.i, align 4, !dbg !12750
  %i.i79.i = bitcast %union.av_intfloat32* %pun.i77.i to i32*, !dbg !12751
  %84 = load i32, i32* %i.i79.i, align 4, !dbg !12752
  %and.i80.i = and i32 %84, -65536, !dbg !12752
  store i32 %and.i80.i, i32* %i.i79.i, align 4, !dbg !12752
  %f1.i81.i = bitcast %union.av_intfloat32* %pun.i77.i to float*, !dbg !12753
  %85 = load float, float* %f1.i81.i, align 4, !dbg !12753
  %86 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12754
  %var132.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %86, i32 0, i32 3, !dbg !12755
  store float %85, float* %var132.i, align 4, !dbg !12756
  %87 = load float, float* %cor0.i, align 4, !dbg !12757
  %mul33.i = fmul float 9.062500e-01, %87, !dbg !12758
  %88 = load float, float* %r0.i, align 4, !dbg !12759
  %89 = load float, float* %e0.i, align 4, !dbg !12760
  %mul34.i = fmul float %88, %89, !dbg !12761
  %add35.i = fadd float %mul33.i, %mul34.i, !dbg !12762
  store float %add35.i, float* %pf.addr.i70.i, align 4, !dbg !12763
  %90 = load float, float* %pf.addr.i70.i, align 4, !dbg !12764
  %f.i72.i = bitcast %union.av_intfloat32* %pun.i71.i to float*, !dbg !12765
  store float %90, float* %f.i72.i, align 4, !dbg !12766
  %i.i73.i = bitcast %union.av_intfloat32* %pun.i71.i to i32*, !dbg !12767
  %91 = load i32, i32* %i.i73.i, align 4, !dbg !12768
  %and.i74.i = and i32 %91, -65536, !dbg !12768
  store i32 %and.i74.i, i32* %i.i73.i, align 4, !dbg !12768
  %f1.i75.i = bitcast %union.av_intfloat32* %pun.i71.i to float*, !dbg !12769
  %92 = load float, float* %f1.i75.i, align 4, !dbg !12769
  %93 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12770
  %cor037.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %93, i32 0, i32 0, !dbg !12771
  store float %92, float* %cor037.i, align 4, !dbg !12772
  %94 = load float, float* %var0.i, align 4, !dbg !12773
  %mul38.i = fmul float 9.062500e-01, %94, !dbg !12774
  %95 = load float, float* %r0.i, align 4, !dbg !12775
  %96 = load float, float* %r0.i, align 4, !dbg !12776
  %mul39.i = fmul float %95, %96, !dbg !12777
  %97 = load float, float* %e0.i, align 4, !dbg !12778
  %98 = load float, float* %e0.i, align 4, !dbg !12779
  %mul40.i = fmul float %97, %98, !dbg !12780
  %add41.i = fadd float %mul39.i, %mul40.i, !dbg !12781
  %mul42.i = fmul float 5.000000e-01, %add41.i, !dbg !12782
  %add43.i = fadd float %mul38.i, %mul42.i, !dbg !12783
  store float %add43.i, float* %pf.addr.i64.i, align 4, !dbg !12784
  %99 = load float, float* %pf.addr.i64.i, align 4, !dbg !12785
  %f.i66.i = bitcast %union.av_intfloat32* %pun.i65.i to float*, !dbg !12786
  store float %99, float* %f.i66.i, align 4, !dbg !12787
  %i.i67.i = bitcast %union.av_intfloat32* %pun.i65.i to i32*, !dbg !12788
  %100 = load i32, i32* %i.i67.i, align 4, !dbg !12789
  %and.i68.i = and i32 %100, -65536, !dbg !12789
  store i32 %and.i68.i, i32* %i.i67.i, align 4, !dbg !12789
  %f1.i69.i = bitcast %union.av_intfloat32* %pun.i65.i to float*, !dbg !12790
  %101 = load float, float* %f1.i69.i, align 4, !dbg !12790
  %102 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12791
  %var045.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %102, i32 0, i32 2, !dbg !12792
  store float %101, float* %var045.i, align 4, !dbg !12793
  %103 = load float, float* %r0.i, align 4, !dbg !12794
  %104 = load float, float* %k1.i, align 4, !dbg !12795
  %105 = load float, float* %e0.i, align 4, !dbg !12796
  %mul46.i = fmul float %104, %105, !dbg !12797
  %sub47.i = fsub float %103, %mul46.i, !dbg !12798
  %mul48.i = fmul float 9.531250e-01, %sub47.i, !dbg !12799
  store float %mul48.i, float* %pf.addr.i58.i, align 4, !dbg !12800
  %106 = load float, float* %pf.addr.i58.i, align 4, !dbg !12801
  %f.i60.i = bitcast %union.av_intfloat32* %pun.i59.i to float*, !dbg !12802
  store float %106, float* %f.i60.i, align 4, !dbg !12803
  %i.i61.i = bitcast %union.av_intfloat32* %pun.i59.i to i32*, !dbg !12804
  %107 = load i32, i32* %i.i61.i, align 4, !dbg !12805
  %and.i62.i = and i32 %107, -65536, !dbg !12805
  store i32 %and.i62.i, i32* %i.i61.i, align 4, !dbg !12805
  %f1.i63.i = bitcast %union.av_intfloat32* %pun.i59.i to float*, !dbg !12806
  %108 = load float, float* %f1.i63.i, align 4, !dbg !12806
  %109 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12807
  %r150.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %109, i32 0, i32 5, !dbg !12808
  store float %108, float* %r150.i, align 4, !dbg !12809
  %110 = load float, float* %e0.i, align 4, !dbg !12810
  %mul51.i = fmul float 9.531250e-01, %110, !dbg !12811
  store float %mul51.i, float* %pf.addr.i54.i, align 4, !dbg !12812
  %111 = load float, float* %pf.addr.i54.i, align 4, !dbg !12813
  %f.i55.i = bitcast %union.av_intfloat32* %pun.i.i to float*, !dbg !12814
  store float %111, float* %f.i55.i, align 4, !dbg !12815
  %i.i56.i = bitcast %union.av_intfloat32* %pun.i.i to i32*, !dbg !12816
  %112 = load i32, i32* %i.i56.i, align 4, !dbg !12817
  %and.i57.i = and i32 %112, -65536, !dbg !12817
  store i32 %and.i57.i, i32* %i.i56.i, align 4, !dbg !12817
  %f1.i.i = bitcast %union.av_intfloat32* %pun.i.i to float*, !dbg !12818
  %113 = load float, float* %f1.i.i, align 4, !dbg !12818
  %114 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !12819
  %r053.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %114, i32 0, i32 4, !dbg !12820
  store float %113, float* %r053.i, align 4, !dbg !12821
  br label %for.inc, !dbg !12822

for.inc:                                          ; preds = %predict.exit
  %115 = load i32, i32* %k, align 4, !dbg !12823
  %inc = add nsw i32 %115, 1, !dbg !12823
  store i32 %inc, i32* %k, align 4, !dbg !12823
  br label %for.cond13, !dbg !12824, !llvm.loop !12826

for.end:                                          ; preds = %for.cond13
  br label %for.inc34, !dbg !12828

for.inc34:                                        ; preds = %for.end
  %116 = load i32, i32* %sfb, align 4, !dbg !12829
  %inc35 = add nsw i32 %116, 1, !dbg !12829
  store i32 %inc35, i32* %sfb, align 4, !dbg !12829
  br label %for.cond, !dbg !12830, !llvm.loop !12832

for.end36:                                        ; preds = %for.cond
  %117 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12834
  %ics37 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %117, i32 0, i32 0, !dbg !12836
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics37, i32 0, i32 13, !dbg !12837
  %118 = load i32, i32* %predictor_reset_group, align 4, !dbg !12837
  %tobool38 = icmp ne i32 %118, 0, !dbg !12834
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !12838

if.then39:                                        ; preds = %for.end36
  %119 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12839
  %predictor_state40 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %119, i32 0, i32 20, !dbg !12840
  %arraydecay41 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state40, i32 0, i32 0, !dbg !12839
  %120 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12841
  %ics42 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %120, i32 0, i32 0, !dbg !12842
  %predictor_reset_group43 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics42, i32 0, i32 13, !dbg !12843
  %121 = load i32, i32* %predictor_reset_group43, align 4, !dbg !12843
  call void @reset_predictor_group(%struct.PredictorState* %arraydecay41, i32 %121), !dbg !12844
  br label %if.end44, !dbg !12844

if.end44:                                         ; preds = %if.then39, %for.end36
  br label %if.end47, !dbg !12845

if.else:                                          ; preds = %if.end
  %122 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12846
  %predictor_state45 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %122, i32 0, i32 20, !dbg !12847
  %arraydecay46 = getelementptr inbounds [672 x %struct.PredictorState], [672 x %struct.PredictorState]* %predictor_state45, i32 0, i32 0, !dbg !12846
  call void @reset_all_predictors(%struct.PredictorState* %arraydecay46), !dbg !12848
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end44
  ret void, !dbg !12849
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_prediction(%struct.AACContext* %ac, %struct.IndividualChannelStream* %ics, %struct.GetBitContext* %gb) #1 !dbg !12850 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %ics.addr = alloca %struct.IndividualChannelStream*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sfb = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !12851, metadata !2062), !dbg !12852
  store %struct.IndividualChannelStream* %ics, %struct.IndividualChannelStream** %ics.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics.addr, metadata !12853, metadata !2062), !dbg !12854
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !12855, metadata !2062), !dbg !12856
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !12857, metadata !2062), !dbg !12858
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12859
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !12861
  %tobool = icmp ne i32 %call, 0, !dbg !12861
  br i1 %tobool, label %if.then, label %if.end6, !dbg !12862

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12863
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 5), !dbg !12865
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12866
  %predictor_reset_group = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 13, !dbg !12867
  store i32 %call1, i32* %predictor_reset_group, align 4, !dbg !12868
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12869
  %predictor_reset_group2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 13, !dbg !12871
  %4 = load i32, i32* %predictor_reset_group2, align 4, !dbg !12871
  %cmp = icmp eq i32 %4, 0, !dbg !12872
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !12873

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12874
  %predictor_reset_group3 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 13, !dbg !12875
  %6 = load i32, i32* %predictor_reset_group3, align 4, !dbg !12875
  %cmp4 = icmp sgt i32 %6, 30, !dbg !12876
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !12877

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12879
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !12881
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !12881
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !12879
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i32 0, i32 0)), !dbg !12882
  store i32 -1094995529, i32* %retval, align 4, !dbg !12883
  br label %return, !dbg !12883

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end6, !dbg !12884

if.end6:                                          ; preds = %if.end, %entry
  store i32 0, i32* %sfb, align 4, !dbg !12885
  br label %for.cond, !dbg !12887

for.cond:                                         ; preds = %for.inc, %if.end6
  %10 = load i32, i32* %sfb, align 4, !dbg !12888
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12891
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 0, !dbg !12892
  %12 = load i8, i8* %max_sfb, align 8, !dbg !12892
  %conv = zext i8 %12 to i32, !dbg !12893
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12894
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 24, !dbg !12895
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !12894
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !12896
  %sampling_index = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 1, !dbg !12897
  %14 = load i32, i32* %sampling_index, align 4, !dbg !12897
  %idxprom = sext i32 %14 to i64, !dbg !12898
  %arrayidx7 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom, !dbg !12898
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !12898
  %conv8 = zext i8 %15 to i32, !dbg !12899
  %cmp9 = icmp sgt i32 %conv, %conv8, !dbg !12900
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !12893

cond.true:                                        ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12901
  %oc11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 24, !dbg !12903
  %arrayidx12 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc11, i64 0, i64 1, !dbg !12901
  %m4ac13 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx12, i32 0, i32 0, !dbg !12904
  %sampling_index14 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac13, i32 0, i32 1, !dbg !12905
  %17 = load i32, i32* %sampling_index14, align 4, !dbg !12905
  %idxprom15 = sext i32 %17 to i64, !dbg !12906
  %arrayidx16 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_pred_sfb_max, i64 0, i64 %idxprom15, !dbg !12906
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !12906
  %conv17 = zext i8 %18 to i32, !dbg !12907
  br label %cond.end, !dbg !12908

cond.false:                                       ; preds = %for.cond
  %19 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12909
  %max_sfb18 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %19, i32 0, i32 0, !dbg !12911
  %20 = load i8, i8* %max_sfb18, align 8, !dbg !12911
  %conv19 = zext i8 %20 to i32, !dbg !12912
  br label %cond.end, !dbg !12913

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv17, %cond.true ], [ %conv19, %cond.false ], !dbg !12914
  %cmp20 = icmp slt i32 %10, %cond, !dbg !12916
  br i1 %cmp20, label %for.body, label %for.end, !dbg !12917

for.body:                                         ; preds = %cond.end
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12918
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %21), !dbg !12920
  %conv23 = trunc i32 %call22 to i8, !dbg !12920
  %22 = load i32, i32* %sfb, align 4, !dbg !12921
  %idxprom24 = sext i32 %22 to i64, !dbg !12922
  %23 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics.addr, align 8, !dbg !12922
  %prediction_used = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %23, i32 0, i32 15, !dbg !12923
  %arrayidx25 = getelementptr inbounds [41 x i8], [41 x i8]* %prediction_used, i64 0, i64 %idxprom24, !dbg !12922
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !12924
  br label %for.inc, !dbg !12925

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %sfb, align 4, !dbg !12926
  %inc = add nsw i32 %24, 1, !dbg !12926
  store i32 %inc, i32* %sfb, align 4, !dbg !12926
  br label %for.cond, !dbg !12928, !llvm.loop !12929

for.end:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !12931
  br label %return, !dbg !12931

return:                                           ; preds = %for.end, %if.then5
  %25 = load i32, i32* %retval, align 4, !dbg !12932
  ret i32 %25, !dbg !12932
}

; Function Attrs: nounwind uwtable
define internal void @decode_ltp(%struct.LongTermPrediction* %ltp, %struct.GetBitContext* %gb, i8 zeroext %max_sfb) #1 !dbg !12933 {
entry:
  %ltp.addr = alloca %struct.LongTermPrediction*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %max_sfb.addr = alloca i8, align 1
  %sfb = alloca i32, align 4
  store %struct.LongTermPrediction* %ltp, %struct.LongTermPrediction** %ltp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LongTermPrediction** %ltp.addr, metadata !12937, metadata !2062), !dbg !12938
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !12939, metadata !2062), !dbg !12940
  store i8 %max_sfb, i8* %max_sfb.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %max_sfb.addr, metadata !12941, metadata !2062), !dbg !12942
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !12943, metadata !2062), !dbg !12944
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12945
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 11), !dbg !12946
  %conv = trunc i32 %call to i16, !dbg !12946
  %1 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !12947
  %lag = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %1, i32 0, i32 1, !dbg !12948
  store i16 %conv, i16* %lag, align 2, !dbg !12949
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12950
  %call1 = call i32 @get_bits(%struct.GetBitContext* %2, i32 3), !dbg !12951
  %idxprom = zext i32 %call1 to i64, !dbg !12952
  %arrayidx = getelementptr inbounds [8 x float], [8 x float]* @ltp_coef, i64 0, i64 %idxprom, !dbg !12952
  %3 = load float, float* %arrayidx, align 4, !dbg !12952
  %4 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !12953
  %coef = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %4, i32 0, i32 3, !dbg !12954
  store float %3, float* %coef, align 4, !dbg !12955
  store i32 0, i32* %sfb, align 4, !dbg !12956
  br label %for.cond, !dbg !12958

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %sfb, align 4, !dbg !12959
  %6 = load i8, i8* %max_sfb.addr, align 1, !dbg !12962
  %conv2 = zext i8 %6 to i32, !dbg !12963
  %cmp = icmp sgt i32 %conv2, 40, !dbg !12964
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12963

cond.true:                                        ; preds = %for.cond
  br label %cond.end, !dbg !12965

cond.false:                                       ; preds = %for.cond
  %7 = load i8, i8* %max_sfb.addr, align 1, !dbg !12967
  %conv4 = zext i8 %7 to i32, !dbg !12969
  br label %cond.end, !dbg !12970

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 40, %cond.true ], [ %conv4, %cond.false ], !dbg !12971
  %cmp5 = icmp slt i32 %5, %cond, !dbg !12973
  br i1 %cmp5, label %for.body, label %for.end, !dbg !12974

for.body:                                         ; preds = %cond.end
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12975
  %call7 = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !12976
  %conv8 = trunc i32 %call7 to i8, !dbg !12976
  %9 = load i32, i32* %sfb, align 4, !dbg !12977
  %idxprom9 = sext i32 %9 to i64, !dbg !12978
  %10 = load %struct.LongTermPrediction*, %struct.LongTermPrediction** %ltp.addr, align 8, !dbg !12978
  %used = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %10, i32 0, i32 4, !dbg !12979
  %arrayidx10 = getelementptr inbounds [40 x i8], [40 x i8]* %used, i64 0, i64 %idxprom9, !dbg !12978
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !12980
  br label %for.inc, !dbg !12978

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %sfb, align 4, !dbg !12981
  %inc = add nsw i32 %11, 1, !dbg !12981
  store i32 %inc, i32* %sfb, align 4, !dbg !12981
  br label %for.cond, !dbg !12983, !llvm.loop !12984

for.end:                                          ; preds = %cond.end
  ret void, !dbg !12986
}

; Function Attrs: nounwind
declare float @sqrtf(float) #7

; Function Attrs: inlinehint nounwind uwtable
define internal float* @VMUL4(float* %dst, float* %v, i32 %idx, float* %scale) #4 !dbg !12987 {
entry:
  %dst.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %idx.addr = alloca i32, align 4
  %scale.addr = alloca float*, align 8
  %s = alloca float, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !12990, metadata !2062), !dbg !12991
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !12992, metadata !2062), !dbg !12993
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12994, metadata !2062), !dbg !12995
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !12996, metadata !2062), !dbg !12997
  call void @llvm.dbg.declare(metadata float* %s, metadata !12998, metadata !2062), !dbg !12999
  %0 = load float*, float** %scale.addr, align 8, !dbg !13000
  %1 = load float, float* %0, align 4, !dbg !13001
  store float %1, float* %s, align 4, !dbg !12999
  %2 = load i32, i32* %idx.addr, align 4, !dbg !13002
  %and = and i32 %2, 3, !dbg !13003
  %idxprom = zext i32 %and to i64, !dbg !13004
  %3 = load float*, float** %v.addr, align 8, !dbg !13004
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !13004
  %4 = load float, float* %arrayidx, align 4, !dbg !13004
  %5 = load float, float* %s, align 4, !dbg !13005
  %mul = fmul float %4, %5, !dbg !13006
  %6 = load float*, float** %dst.addr, align 8, !dbg !13007
  %incdec.ptr = getelementptr inbounds float, float* %6, i32 1, !dbg !13007
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !13007
  store float %mul, float* %6, align 4, !dbg !13008
  %7 = load i32, i32* %idx.addr, align 4, !dbg !13009
  %shr = lshr i32 %7, 2, !dbg !13010
  %and1 = and i32 %shr, 3, !dbg !13011
  %idxprom2 = zext i32 %and1 to i64, !dbg !13012
  %8 = load float*, float** %v.addr, align 8, !dbg !13012
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 %idxprom2, !dbg !13012
  %9 = load float, float* %arrayidx3, align 4, !dbg !13012
  %10 = load float, float* %s, align 4, !dbg !13013
  %mul4 = fmul float %9, %10, !dbg !13014
  %11 = load float*, float** %dst.addr, align 8, !dbg !13015
  %incdec.ptr5 = getelementptr inbounds float, float* %11, i32 1, !dbg !13015
  store float* %incdec.ptr5, float** %dst.addr, align 8, !dbg !13015
  store float %mul4, float* %11, align 4, !dbg !13016
  %12 = load i32, i32* %idx.addr, align 4, !dbg !13017
  %shr6 = lshr i32 %12, 4, !dbg !13018
  %and7 = and i32 %shr6, 3, !dbg !13019
  %idxprom8 = zext i32 %and7 to i64, !dbg !13020
  %13 = load float*, float** %v.addr, align 8, !dbg !13020
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 %idxprom8, !dbg !13020
  %14 = load float, float* %arrayidx9, align 4, !dbg !13020
  %15 = load float, float* %s, align 4, !dbg !13021
  %mul10 = fmul float %14, %15, !dbg !13022
  %16 = load float*, float** %dst.addr, align 8, !dbg !13023
  %incdec.ptr11 = getelementptr inbounds float, float* %16, i32 1, !dbg !13023
  store float* %incdec.ptr11, float** %dst.addr, align 8, !dbg !13023
  store float %mul10, float* %16, align 4, !dbg !13024
  %17 = load i32, i32* %idx.addr, align 4, !dbg !13025
  %shr12 = lshr i32 %17, 6, !dbg !13026
  %and13 = and i32 %shr12, 3, !dbg !13027
  %idxprom14 = zext i32 %and13 to i64, !dbg !13028
  %18 = load float*, float** %v.addr, align 8, !dbg !13028
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 %idxprom14, !dbg !13028
  %19 = load float, float* %arrayidx15, align 4, !dbg !13028
  %20 = load float, float* %s, align 4, !dbg !13029
  %mul16 = fmul float %19, %20, !dbg !13030
  %21 = load float*, float** %dst.addr, align 8, !dbg !13031
  %incdec.ptr17 = getelementptr inbounds float, float* %21, i32 1, !dbg !13031
  store float* %incdec.ptr17, float** %dst.addr, align 8, !dbg !13031
  store float %mul16, float* %21, align 4, !dbg !13032
  %22 = load float*, float** %dst.addr, align 8, !dbg !13033
  ret float* %22, !dbg !13034
}

; Function Attrs: inlinehint nounwind uwtable
define internal float* @VMUL4S(float* %dst, float* %v, i32 %idx, i32 %sign, float* %scale) #4 !dbg !13035 {
entry:
  %dst.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %idx.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %scale.addr = alloca float*, align 8
  %nz = alloca i32, align 4
  %s = alloca %union.av_intfloat32, align 4
  %t = alloca %union.av_intfloat32, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !13038, metadata !2062), !dbg !13039
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !13040, metadata !2062), !dbg !13041
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13042, metadata !2062), !dbg !13043
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !13044, metadata !2062), !dbg !13045
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !13046, metadata !2062), !dbg !13047
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !13048, metadata !2062), !dbg !13049
  %0 = load i32, i32* %idx.addr, align 4, !dbg !13050
  %shr = lshr i32 %0, 12, !dbg !13051
  store i32 %shr, i32* %nz, align 4, !dbg !13049
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %s, metadata !13052, metadata !2062), !dbg !13053
  %f = bitcast %union.av_intfloat32* %s to float*, !dbg !13054
  %1 = load float*, float** %scale.addr, align 8, !dbg !13055
  %2 = load float, float* %1, align 4, !dbg !13056
  store float %2, float* %f, align 4, !dbg !13054
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %t, metadata !13057, metadata !2062), !dbg !13058
  %i = bitcast %union.av_intfloat32* %s to i32*, !dbg !13059
  %3 = load i32, i32* %i, align 4, !dbg !13059
  %4 = load i32, i32* %sign.addr, align 4, !dbg !13060
  %and = and i32 %4, -2147483648, !dbg !13061
  %xor = xor i32 %3, %and, !dbg !13062
  %i1 = bitcast %union.av_intfloat32* %t to i32*, !dbg !13063
  store i32 %xor, i32* %i1, align 4, !dbg !13064
  %5 = load i32, i32* %idx.addr, align 4, !dbg !13065
  %and2 = and i32 %5, 3, !dbg !13066
  %idxprom = zext i32 %and2 to i64, !dbg !13067
  %6 = load float*, float** %v.addr, align 8, !dbg !13067
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !13067
  %7 = load float, float* %arrayidx, align 4, !dbg !13067
  %f3 = bitcast %union.av_intfloat32* %t to float*, !dbg !13068
  %8 = load float, float* %f3, align 4, !dbg !13068
  %mul = fmul float %7, %8, !dbg !13069
  %9 = load float*, float** %dst.addr, align 8, !dbg !13070
  %incdec.ptr = getelementptr inbounds float, float* %9, i32 1, !dbg !13070
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !13070
  store float %mul, float* %9, align 4, !dbg !13071
  %10 = load i32, i32* %nz, align 4, !dbg !13072
  %and4 = and i32 %10, 1, !dbg !13073
  %11 = load i32, i32* %sign.addr, align 4, !dbg !13074
  %shl = shl i32 %11, %and4, !dbg !13074
  store i32 %shl, i32* %sign.addr, align 4, !dbg !13074
  %12 = load i32, i32* %nz, align 4, !dbg !13075
  %shr5 = lshr i32 %12, 1, !dbg !13075
  store i32 %shr5, i32* %nz, align 4, !dbg !13075
  %i6 = bitcast %union.av_intfloat32* %s to i32*, !dbg !13076
  %13 = load i32, i32* %i6, align 4, !dbg !13076
  %14 = load i32, i32* %sign.addr, align 4, !dbg !13077
  %and7 = and i32 %14, -2147483648, !dbg !13078
  %xor8 = xor i32 %13, %and7, !dbg !13079
  %i9 = bitcast %union.av_intfloat32* %t to i32*, !dbg !13080
  store i32 %xor8, i32* %i9, align 4, !dbg !13081
  %15 = load i32, i32* %idx.addr, align 4, !dbg !13082
  %shr10 = lshr i32 %15, 2, !dbg !13083
  %and11 = and i32 %shr10, 3, !dbg !13084
  %idxprom12 = zext i32 %and11 to i64, !dbg !13085
  %16 = load float*, float** %v.addr, align 8, !dbg !13085
  %arrayidx13 = getelementptr inbounds float, float* %16, i64 %idxprom12, !dbg !13085
  %17 = load float, float* %arrayidx13, align 4, !dbg !13085
  %f14 = bitcast %union.av_intfloat32* %t to float*, !dbg !13086
  %18 = load float, float* %f14, align 4, !dbg !13086
  %mul15 = fmul float %17, %18, !dbg !13087
  %19 = load float*, float** %dst.addr, align 8, !dbg !13088
  %incdec.ptr16 = getelementptr inbounds float, float* %19, i32 1, !dbg !13088
  store float* %incdec.ptr16, float** %dst.addr, align 8, !dbg !13088
  store float %mul15, float* %19, align 4, !dbg !13089
  %20 = load i32, i32* %nz, align 4, !dbg !13090
  %and17 = and i32 %20, 1, !dbg !13091
  %21 = load i32, i32* %sign.addr, align 4, !dbg !13092
  %shl18 = shl i32 %21, %and17, !dbg !13092
  store i32 %shl18, i32* %sign.addr, align 4, !dbg !13092
  %22 = load i32, i32* %nz, align 4, !dbg !13093
  %shr19 = lshr i32 %22, 1, !dbg !13093
  store i32 %shr19, i32* %nz, align 4, !dbg !13093
  %i20 = bitcast %union.av_intfloat32* %s to i32*, !dbg !13094
  %23 = load i32, i32* %i20, align 4, !dbg !13094
  %24 = load i32, i32* %sign.addr, align 4, !dbg !13095
  %and21 = and i32 %24, -2147483648, !dbg !13096
  %xor22 = xor i32 %23, %and21, !dbg !13097
  %i23 = bitcast %union.av_intfloat32* %t to i32*, !dbg !13098
  store i32 %xor22, i32* %i23, align 4, !dbg !13099
  %25 = load i32, i32* %idx.addr, align 4, !dbg !13100
  %shr24 = lshr i32 %25, 4, !dbg !13101
  %and25 = and i32 %shr24, 3, !dbg !13102
  %idxprom26 = zext i32 %and25 to i64, !dbg !13103
  %26 = load float*, float** %v.addr, align 8, !dbg !13103
  %arrayidx27 = getelementptr inbounds float, float* %26, i64 %idxprom26, !dbg !13103
  %27 = load float, float* %arrayidx27, align 4, !dbg !13103
  %f28 = bitcast %union.av_intfloat32* %t to float*, !dbg !13104
  %28 = load float, float* %f28, align 4, !dbg !13104
  %mul29 = fmul float %27, %28, !dbg !13105
  %29 = load float*, float** %dst.addr, align 8, !dbg !13106
  %incdec.ptr30 = getelementptr inbounds float, float* %29, i32 1, !dbg !13106
  store float* %incdec.ptr30, float** %dst.addr, align 8, !dbg !13106
  store float %mul29, float* %29, align 4, !dbg !13107
  %30 = load i32, i32* %nz, align 4, !dbg !13108
  %and31 = and i32 %30, 1, !dbg !13109
  %31 = load i32, i32* %sign.addr, align 4, !dbg !13110
  %shl32 = shl i32 %31, %and31, !dbg !13110
  store i32 %shl32, i32* %sign.addr, align 4, !dbg !13110
  %i33 = bitcast %union.av_intfloat32* %s to i32*, !dbg !13111
  %32 = load i32, i32* %i33, align 4, !dbg !13111
  %33 = load i32, i32* %sign.addr, align 4, !dbg !13112
  %and34 = and i32 %33, -2147483648, !dbg !13113
  %xor35 = xor i32 %32, %and34, !dbg !13114
  %i36 = bitcast %union.av_intfloat32* %t to i32*, !dbg !13115
  store i32 %xor35, i32* %i36, align 4, !dbg !13116
  %34 = load i32, i32* %idx.addr, align 4, !dbg !13117
  %shr37 = lshr i32 %34, 6, !dbg !13118
  %and38 = and i32 %shr37, 3, !dbg !13119
  %idxprom39 = zext i32 %and38 to i64, !dbg !13120
  %35 = load float*, float** %v.addr, align 8, !dbg !13120
  %arrayidx40 = getelementptr inbounds float, float* %35, i64 %idxprom39, !dbg !13120
  %36 = load float, float* %arrayidx40, align 4, !dbg !13120
  %f41 = bitcast %union.av_intfloat32* %t to float*, !dbg !13121
  %37 = load float, float* %f41, align 4, !dbg !13121
  %mul42 = fmul float %36, %37, !dbg !13122
  %38 = load float*, float** %dst.addr, align 8, !dbg !13123
  %incdec.ptr43 = getelementptr inbounds float, float* %38, i32 1, !dbg !13123
  store float* %incdec.ptr43, float** %dst.addr, align 8, !dbg !13123
  store float %mul42, float* %38, align 4, !dbg !13124
  %39 = load float*, float** %dst.addr, align 8, !dbg !13125
  ret float* %39, !dbg !13126
}

; Function Attrs: inlinehint nounwind uwtable
define internal float* @VMUL2(float* %dst, float* %v, i32 %idx, float* %scale) #4 !dbg !13127 {
entry:
  %dst.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %idx.addr = alloca i32, align 4
  %scale.addr = alloca float*, align 8
  %s = alloca float, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !13128, metadata !2062), !dbg !13129
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !13130, metadata !2062), !dbg !13131
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13132, metadata !2062), !dbg !13133
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !13134, metadata !2062), !dbg !13135
  call void @llvm.dbg.declare(metadata float* %s, metadata !13136, metadata !2062), !dbg !13137
  %0 = load float*, float** %scale.addr, align 8, !dbg !13138
  %1 = load float, float* %0, align 4, !dbg !13139
  store float %1, float* %s, align 4, !dbg !13137
  %2 = load i32, i32* %idx.addr, align 4, !dbg !13140
  %and = and i32 %2, 15, !dbg !13141
  %idxprom = zext i32 %and to i64, !dbg !13142
  %3 = load float*, float** %v.addr, align 8, !dbg !13142
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !13142
  %4 = load float, float* %arrayidx, align 4, !dbg !13142
  %5 = load float, float* %s, align 4, !dbg !13143
  %mul = fmul float %4, %5, !dbg !13144
  %6 = load float*, float** %dst.addr, align 8, !dbg !13145
  %incdec.ptr = getelementptr inbounds float, float* %6, i32 1, !dbg !13145
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !13145
  store float %mul, float* %6, align 4, !dbg !13146
  %7 = load i32, i32* %idx.addr, align 4, !dbg !13147
  %shr = lshr i32 %7, 4, !dbg !13148
  %and1 = and i32 %shr, 15, !dbg !13149
  %idxprom2 = zext i32 %and1 to i64, !dbg !13150
  %8 = load float*, float** %v.addr, align 8, !dbg !13150
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 %idxprom2, !dbg !13150
  %9 = load float, float* %arrayidx3, align 4, !dbg !13150
  %10 = load float, float* %s, align 4, !dbg !13151
  %mul4 = fmul float %9, %10, !dbg !13152
  %11 = load float*, float** %dst.addr, align 8, !dbg !13153
  %incdec.ptr5 = getelementptr inbounds float, float* %11, i32 1, !dbg !13153
  store float* %incdec.ptr5, float** %dst.addr, align 8, !dbg !13153
  store float %mul4, float* %11, align 4, !dbg !13154
  %12 = load float*, float** %dst.addr, align 8, !dbg !13155
  ret float* %12, !dbg !13156
}

; Function Attrs: inlinehint nounwind uwtable
define internal float* @VMUL2S(float* %dst, float* %v, i32 %idx, i32 %sign, float* %scale) #4 !dbg !13157 {
entry:
  %dst.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %idx.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %scale.addr = alloca float*, align 8
  %s0 = alloca %union.av_intfloat32, align 4
  %s1 = alloca %union.av_intfloat32, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !13158, metadata !2062), !dbg !13159
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !13160, metadata !2062), !dbg !13161
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13162, metadata !2062), !dbg !13163
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !13164, metadata !2062), !dbg !13165
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !13166, metadata !2062), !dbg !13167
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %s0, metadata !13168, metadata !2062), !dbg !13169
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %s1, metadata !13170, metadata !2062), !dbg !13171
  %0 = load float*, float** %scale.addr, align 8, !dbg !13172
  %1 = load float, float* %0, align 4, !dbg !13173
  %f = bitcast %union.av_intfloat32* %s1 to float*, !dbg !13174
  store float %1, float* %f, align 4, !dbg !13175
  %f1 = bitcast %union.av_intfloat32* %s0 to float*, !dbg !13176
  store float %1, float* %f1, align 4, !dbg !13177
  %2 = load i32, i32* %sign.addr, align 4, !dbg !13178
  %shr = lshr i32 %2, 1, !dbg !13179
  %shl = shl i32 %shr, 31, !dbg !13180
  %i = bitcast %union.av_intfloat32* %s0 to i32*, !dbg !13181
  %3 = load i32, i32* %i, align 4, !dbg !13182
  %xor = xor i32 %3, %shl, !dbg !13182
  store i32 %xor, i32* %i, align 4, !dbg !13182
  %4 = load i32, i32* %sign.addr, align 4, !dbg !13183
  %shl2 = shl i32 %4, 31, !dbg !13184
  %i3 = bitcast %union.av_intfloat32* %s1 to i32*, !dbg !13185
  %5 = load i32, i32* %i3, align 4, !dbg !13186
  %xor4 = xor i32 %5, %shl2, !dbg !13186
  store i32 %xor4, i32* %i3, align 4, !dbg !13186
  %6 = load i32, i32* %idx.addr, align 4, !dbg !13187
  %and = and i32 %6, 15, !dbg !13188
  %idxprom = zext i32 %and to i64, !dbg !13189
  %7 = load float*, float** %v.addr, align 8, !dbg !13189
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !13189
  %8 = load float, float* %arrayidx, align 4, !dbg !13189
  %f5 = bitcast %union.av_intfloat32* %s0 to float*, !dbg !13190
  %9 = load float, float* %f5, align 4, !dbg !13190
  %mul = fmul float %8, %9, !dbg !13191
  %10 = load float*, float** %dst.addr, align 8, !dbg !13192
  %incdec.ptr = getelementptr inbounds float, float* %10, i32 1, !dbg !13192
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !13192
  store float %mul, float* %10, align 4, !dbg !13193
  %11 = load i32, i32* %idx.addr, align 4, !dbg !13194
  %shr6 = lshr i32 %11, 4, !dbg !13195
  %and7 = and i32 %shr6, 15, !dbg !13196
  %idxprom8 = zext i32 %and7 to i64, !dbg !13197
  %12 = load float*, float** %v.addr, align 8, !dbg !13197
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 %idxprom8, !dbg !13197
  %13 = load float, float* %arrayidx9, align 4, !dbg !13197
  %f10 = bitcast %union.av_intfloat32* %s1 to float*, !dbg !13198
  %14 = load float, float* %f10, align 4, !dbg !13198
  %mul11 = fmul float %13, %14, !dbg !13199
  %15 = load float*, float** %dst.addr, align 8, !dbg !13200
  %incdec.ptr12 = getelementptr inbounds float, float* %15, i32 1, !dbg !13200
  store float* %incdec.ptr12, float** %dst.addr, align 8, !dbg !13200
  store float %mul11, float* %15, align 4, !dbg !13201
  %16 = load float*, float** %dst.addr, align 8, !dbg !13202
  ret float* %16, !dbg !13203
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare float @fabsf(float) #8

; Function Attrs: nounwind
declare float @cbrtf(float) #7

; Function Attrs: nounwind uwtable
define internal void @reset_all_predictors(%struct.PredictorState* %ps) #1 !dbg !13204 {
entry:
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !13207, metadata !2062), !dbg !13209
  %ps.addr = alloca %struct.PredictorState*, align 8
  %i = alloca i32, align 4
  store %struct.PredictorState* %ps, %struct.PredictorState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr, metadata !13213, metadata !2062), !dbg !13214
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13215, metadata !2062), !dbg !13216
  store i32 0, i32* %i, align 4, !dbg !13217
  br label %for.cond, !dbg !13218

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13219
  %cmp = icmp slt i32 %0, 672, !dbg !13221
  br i1 %cmp, label %for.body, label %for.end, !dbg !13222

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !13223
  %idxprom = sext i32 %1 to i64, !dbg !13224
  %2 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr, align 8, !dbg !13224
  %arrayidx = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %2, i64 %idxprom, !dbg !13224
  store %struct.PredictorState* %arrayidx, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13225
  %3 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13226
  %r0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %3, i32 0, i32 4, !dbg !13227
  store float 0.000000e+00, float* %r0.i, align 4, !dbg !13228
  %4 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13229
  %r1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %4, i32 0, i32 5, !dbg !13230
  store float 0.000000e+00, float* %r1.i, align 4, !dbg !13231
  %5 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13232
  %cor0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %5, i32 0, i32 0, !dbg !13233
  store float 0.000000e+00, float* %cor0.i, align 4, !dbg !13234
  %6 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13235
  %cor1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %6, i32 0, i32 1, !dbg !13236
  store float 0.000000e+00, float* %cor1.i, align 4, !dbg !13237
  %7 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13238
  %var0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %7, i32 0, i32 2, !dbg !13239
  store float 1.000000e+00, float* %var0.i, align 4, !dbg !13240
  %8 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13241
  %var1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %8, i32 0, i32 3, !dbg !13242
  store float 1.000000e+00, float* %var1.i, align 4, !dbg !13243
  br label %for.inc, !dbg !13225

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13244
  %inc = add nsw i32 %9, 1, !dbg !13244
  store i32 %inc, i32* %i, align 4, !dbg !13244
  br label %for.cond, !dbg !13246, !llvm.loop !13247

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13249
}

; Function Attrs: nounwind uwtable
define internal void @reset_predictor_group(%struct.PredictorState* %ps, i32 %group_num) #1 !dbg !13250 {
entry:
  %ps.addr.i = alloca %struct.PredictorState*, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr.i, metadata !13207, metadata !2062), !dbg !13253
  %ps.addr = alloca %struct.PredictorState*, align 8
  %group_num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.PredictorState* %ps, %struct.PredictorState** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PredictorState** %ps.addr, metadata !13257, metadata !2062), !dbg !13258
  store i32 %group_num, i32* %group_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_num.addr, metadata !13259, metadata !2062), !dbg !13260
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13261, metadata !2062), !dbg !13262
  %0 = load i32, i32* %group_num.addr, align 4, !dbg !13263
  %sub = sub nsw i32 %0, 1, !dbg !13264
  store i32 %sub, i32* %i, align 4, !dbg !13265
  br label %for.cond, !dbg !13266

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13267
  %cmp = icmp slt i32 %1, 672, !dbg !13269
  br i1 %cmp, label %for.body, label %for.end, !dbg !13270

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !13271
  %idxprom = sext i32 %2 to i64, !dbg !13272
  %3 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr, align 8, !dbg !13272
  %arrayidx = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %3, i64 %idxprom, !dbg !13272
  store %struct.PredictorState* %arrayidx, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13273
  %4 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13274
  %r0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %4, i32 0, i32 4, !dbg !13275
  store float 0.000000e+00, float* %r0.i, align 4, !dbg !13276
  %5 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13277
  %r1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %5, i32 0, i32 5, !dbg !13278
  store float 0.000000e+00, float* %r1.i, align 4, !dbg !13279
  %6 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13280
  %cor0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %6, i32 0, i32 0, !dbg !13281
  store float 0.000000e+00, float* %cor0.i, align 4, !dbg !13282
  %7 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13283
  %cor1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %7, i32 0, i32 1, !dbg !13284
  store float 0.000000e+00, float* %cor1.i, align 4, !dbg !13285
  %8 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13286
  %var0.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %8, i32 0, i32 2, !dbg !13287
  store float 1.000000e+00, float* %var0.i, align 4, !dbg !13288
  %9 = load %struct.PredictorState*, %struct.PredictorState** %ps.addr.i, align 8, !dbg !13289
  %var1.i = getelementptr inbounds %struct.PredictorState, %struct.PredictorState* %9, i32 0, i32 3, !dbg !13290
  store float 1.000000e+00, float* %var1.i, align 4, !dbg !13291
  br label %for.inc, !dbg !13273

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !13292
  %add = add nsw i32 %10, 30, !dbg !13292
  store i32 %add, i32* %i, align 4, !dbg !13292
  br label %for.cond, !dbg !13294, !llvm.loop !13295

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13297
}

; Function Attrs: nounwind uwtable
define internal void @decode_mid_side_stereo(%struct.ChannelElement* %cpe, %struct.GetBitContext* %gb, i32 %ms_present) #1 !dbg !13298 {
entry:
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ms_present.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %max_idx = alloca i32, align 4
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !13301, metadata !2062), !dbg !13302
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !13303, metadata !2062), !dbg !13304
  store i32 %ms_present, i32* %ms_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms_present.addr, metadata !13305, metadata !2062), !dbg !13306
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13307, metadata !2062), !dbg !13308
  call void @llvm.dbg.declare(metadata i32* %max_idx, metadata !13309, metadata !2062), !dbg !13310
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13311
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !13312
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !13311
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !13313
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 3, !dbg !13314
  %1 = load i32, i32* %num_window_groups, align 16, !dbg !13314
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13315
  %ch1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !13316
  %arrayidx2 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch1, i64 0, i64 0, !dbg !13315
  %ics3 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx2, i32 0, i32 0, !dbg !13317
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3, i32 0, i32 0, !dbg !13318
  %3 = load i8, i8* %max_sfb, align 32, !dbg !13318
  %conv = zext i8 %3 to i32, !dbg !13315
  %mul = mul nsw i32 %1, %conv, !dbg !13319
  store i32 %mul, i32* %max_idx, align 4, !dbg !13310
  %4 = load i32, i32* %ms_present.addr, align 4, !dbg !13320
  %cmp = icmp eq i32 %4, 1, !dbg !13322
  br i1 %cmp, label %if.then, label %if.else, !dbg !13323

if.then:                                          ; preds = %entry
  store i32 0, i32* %idx, align 4, !dbg !13324
  br label %for.cond, !dbg !13327

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %idx, align 4, !dbg !13328
  %6 = load i32, i32* %max_idx, align 4, !dbg !13331
  %cmp5 = icmp slt i32 %5, %6, !dbg !13332
  br i1 %cmp5, label %for.body, label %for.end, !dbg !13333

for.body:                                         ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13334
  %call = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !13335
  %conv7 = trunc i32 %call to i8, !dbg !13335
  %8 = load i32, i32* %idx, align 4, !dbg !13336
  %idxprom = sext i32 %8 to i64, !dbg !13337
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13337
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %9, i32 0, i32 4, !dbg !13338
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom, !dbg !13337
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !13339
  br label %for.inc, !dbg !13337

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %idx, align 4, !dbg !13340
  %inc = add nsw i32 %10, 1, !dbg !13340
  store i32 %inc, i32* %idx, align 4, !dbg !13340
  br label %for.cond, !dbg !13342, !llvm.loop !13343

for.end:                                          ; preds = %for.cond
  br label %if.end15, !dbg !13345

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %ms_present.addr, align 4, !dbg !13346
  %cmp9 = icmp eq i32 %11, 2, !dbg !13349
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !13346

if.then11:                                        ; preds = %if.else
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13350
  %ms_mask12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 4, !dbg !13352
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask12, i32 0, i32 0, !dbg !13353
  %13 = load i32, i32* %max_idx, align 4, !dbg !13354
  %conv13 = sext i32 %13 to i64, !dbg !13354
  %mul14 = mul i64 %conv13, 1, !dbg !13355
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 1, i64 %mul14, i32 1, i1 false), !dbg !13353
  br label %if.end, !dbg !13356

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %for.end
  ret void, !dbg !13357
}

; Function Attrs: nounwind uwtable
define internal void @apply_mid_side_stereo(%struct.AACContext* %ac, %struct.ChannelElement* %cpe) #1 !dbg !13358 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %ch0 = alloca float*, align 8
  %ch1 = alloca float*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %group = alloca i32, align 4
  %idx = alloca i32, align 4
  %offsets = alloca i16*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13361, metadata !2062), !dbg !13362
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !13363, metadata !2062), !dbg !13364
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !13365, metadata !2062), !dbg !13366
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13367
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !13368
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !13367
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !13369
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !13366
  call void @llvm.dbg.declare(metadata float** %ch0, metadata !13370, metadata !2062), !dbg !13371
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13372
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !13373
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 0, !dbg !13372
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 14, !dbg !13374
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !13372
  store float* %arraydecay, float** %ch0, align 8, !dbg !13371
  call void @llvm.dbg.declare(metadata float** %ch1, metadata !13375, metadata !2062), !dbg !13376
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13377
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !13378
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 1, !dbg !13377
  %coeffs6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 14, !dbg !13379
  %arraydecay7 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs6, i32 0, i32 0, !dbg !13377
  store float* %arraydecay7, float** %ch1, align 8, !dbg !13376
  call void @llvm.dbg.declare(metadata i32* %g, metadata !13380, metadata !2062), !dbg !13381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13382, metadata !2062), !dbg !13383
  call void @llvm.dbg.declare(metadata i32* %group, metadata !13384, metadata !2062), !dbg !13385
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13386, metadata !2062), !dbg !13387
  store i32 0, i32* %idx, align 4, !dbg !13387
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !13388, metadata !2062), !dbg !13389
  %3 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13390
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %3, i32 0, i32 6, !dbg !13391
  %4 = load i16*, i16** %swb_offset, align 8, !dbg !13391
  store i16* %4, i16** %offsets, align 8, !dbg !13389
  store i32 0, i32* %g, align 4, !dbg !13392
  br label %for.cond, !dbg !13394

for.cond:                                         ; preds = %for.inc72, %entry
  %5 = load i32, i32* %g, align 4, !dbg !13395
  %6 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13398
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %6, i32 0, i32 3, !dbg !13399
  %7 = load i32, i32* %num_window_groups, align 8, !dbg !13399
  %cmp = icmp slt i32 %5, %7, !dbg !13400
  br i1 %cmp, label %for.body, label %for.end74, !dbg !13401

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13402
  br label %for.cond8, !dbg !13405

for.cond8:                                        ; preds = %for.inc54, %for.body
  %8 = load i32, i32* %i, align 4, !dbg !13406
  %9 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13409
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %9, i32 0, i32 0, !dbg !13410
  %10 = load i8, i8* %max_sfb, align 8, !dbg !13410
  %conv = zext i8 %10 to i32, !dbg !13409
  %cmp9 = icmp slt i32 %8, %conv, !dbg !13411
  br i1 %cmp9, label %for.body11, label %for.end57, !dbg !13412

for.body11:                                       ; preds = %for.cond8
  %11 = load i32, i32* %idx, align 4, !dbg !13413
  %idxprom = sext i32 %11 to i64, !dbg !13416
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13416
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 4, !dbg !13417
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom, !dbg !13416
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !13416
  %conv13 = zext i8 %13 to i32, !dbg !13416
  %tobool = icmp ne i32 %conv13, 0, !dbg !13416
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13418

land.lhs.true:                                    ; preds = %for.body11
  %14 = load i32, i32* %idx, align 4, !dbg !13419
  %idxprom14 = sext i32 %14 to i64, !dbg !13420
  %15 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13420
  %ch15 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %15, i32 0, i32 7, !dbg !13421
  %arrayidx16 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch15, i64 0, i64 0, !dbg !13420
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx16, i32 0, i32 3, !dbg !13422
  %arrayidx17 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom14, !dbg !13420
  %16 = load i32, i32* %arrayidx17, align 4, !dbg !13420
  %cmp18 = icmp ult i32 %16, 13, !dbg !13423
  br i1 %cmp18, label %land.lhs.true20, label %if.end, !dbg !13424

land.lhs.true20:                                  ; preds = %land.lhs.true
  %17 = load i32, i32* %idx, align 4, !dbg !13425
  %idxprom21 = sext i32 %17 to i64, !dbg !13426
  %18 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13426
  %ch22 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %18, i32 0, i32 7, !dbg !13427
  %arrayidx23 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch22, i64 0, i64 1, !dbg !13426
  %band_type24 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx23, i32 0, i32 3, !dbg !13428
  %arrayidx25 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type24, i64 0, i64 %idxprom21, !dbg !13426
  %19 = load i32, i32* %arrayidx25, align 4, !dbg !13426
  %cmp26 = icmp ult i32 %19, 13, !dbg !13429
  br i1 %cmp26, label %if.then, label %if.end, !dbg !13430

if.then:                                          ; preds = %land.lhs.true20
  store i32 0, i32* %group, align 4, !dbg !13432
  br label %for.cond28, !dbg !13435

for.cond28:                                       ; preds = %for.inc, %if.then
  %20 = load i32, i32* %group, align 4, !dbg !13436
  %21 = load i32, i32* %g, align 4, !dbg !13439
  %idxprom29 = sext i32 %21 to i64, !dbg !13440
  %22 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13440
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %22, i32 0, i32 4, !dbg !13441
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom29, !dbg !13440
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !13440
  %conv31 = zext i8 %23 to i32, !dbg !13440
  %cmp32 = icmp slt i32 %20, %conv31, !dbg !13442
  br i1 %cmp32, label %for.body34, label %for.end, !dbg !13443

for.body34:                                       ; preds = %for.cond28
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13444
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 17, !dbg !13446
  %25 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !13446
  %butterflies_float = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %25, i32 0, i32 8, !dbg !13447
  %26 = load void (float*, float*, i32)*, void (float*, float*, i32)** %butterflies_float, align 8, !dbg !13447
  %27 = load float*, float** %ch0, align 8, !dbg !13448
  %28 = load i32, i32* %group, align 4, !dbg !13449
  %mul = mul nsw i32 %28, 128, !dbg !13450
  %idx.ext = sext i32 %mul to i64, !dbg !13451
  %add.ptr = getelementptr inbounds float, float* %27, i64 %idx.ext, !dbg !13451
  %29 = load i32, i32* %i, align 4, !dbg !13452
  %idxprom35 = sext i32 %29 to i64, !dbg !13453
  %30 = load i16*, i16** %offsets, align 8, !dbg !13453
  %arrayidx36 = getelementptr inbounds i16, i16* %30, i64 %idxprom35, !dbg !13453
  %31 = load i16, i16* %arrayidx36, align 2, !dbg !13453
  %conv37 = zext i16 %31 to i32, !dbg !13453
  %idx.ext38 = sext i32 %conv37 to i64, !dbg !13454
  %add.ptr39 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext38, !dbg !13454
  %32 = load float*, float** %ch1, align 8, !dbg !13455
  %33 = load i32, i32* %group, align 4, !dbg !13456
  %mul40 = mul nsw i32 %33, 128, !dbg !13457
  %idx.ext41 = sext i32 %mul40 to i64, !dbg !13458
  %add.ptr42 = getelementptr inbounds float, float* %32, i64 %idx.ext41, !dbg !13458
  %34 = load i32, i32* %i, align 4, !dbg !13459
  %idxprom43 = sext i32 %34 to i64, !dbg !13460
  %35 = load i16*, i16** %offsets, align 8, !dbg !13460
  %arrayidx44 = getelementptr inbounds i16, i16* %35, i64 %idxprom43, !dbg !13460
  %36 = load i16, i16* %arrayidx44, align 2, !dbg !13460
  %conv45 = zext i16 %36 to i32, !dbg !13460
  %idx.ext46 = sext i32 %conv45 to i64, !dbg !13461
  %add.ptr47 = getelementptr inbounds float, float* %add.ptr42, i64 %idx.ext46, !dbg !13461
  %37 = load i32, i32* %i, align 4, !dbg !13462
  %add = add nsw i32 %37, 1, !dbg !13463
  %idxprom48 = sext i32 %add to i64, !dbg !13464
  %38 = load i16*, i16** %offsets, align 8, !dbg !13464
  %arrayidx49 = getelementptr inbounds i16, i16* %38, i64 %idxprom48, !dbg !13464
  %39 = load i16, i16* %arrayidx49, align 2, !dbg !13464
  %conv50 = zext i16 %39 to i32, !dbg !13464
  %40 = load i32, i32* %i, align 4, !dbg !13465
  %idxprom51 = sext i32 %40 to i64, !dbg !13466
  %41 = load i16*, i16** %offsets, align 8, !dbg !13466
  %arrayidx52 = getelementptr inbounds i16, i16* %41, i64 %idxprom51, !dbg !13466
  %42 = load i16, i16* %arrayidx52, align 2, !dbg !13466
  %conv53 = zext i16 %42 to i32, !dbg !13466
  %sub = sub nsw i32 %conv50, %conv53, !dbg !13467
  call void %26(float* %add.ptr39, float* %add.ptr47, i32 %sub), !dbg !13444
  br label %for.inc, !dbg !13468

for.inc:                                          ; preds = %for.body34
  %43 = load i32, i32* %group, align 4, !dbg !13469
  %inc = add nsw i32 %43, 1, !dbg !13469
  store i32 %inc, i32* %group, align 4, !dbg !13469
  br label %for.cond28, !dbg !13471, !llvm.loop !13472

for.end:                                          ; preds = %for.cond28
  br label %if.end, !dbg !13474

if.end:                                           ; preds = %for.end, %land.lhs.true20, %land.lhs.true, %for.body11
  br label %for.inc54, !dbg !13475

for.inc54:                                        ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !13476
  %inc55 = add nsw i32 %44, 1, !dbg !13476
  store i32 %inc55, i32* %i, align 4, !dbg !13476
  %45 = load i32, i32* %idx, align 4, !dbg !13478
  %inc56 = add nsw i32 %45, 1, !dbg !13478
  store i32 %inc56, i32* %idx, align 4, !dbg !13478
  br label %for.cond8, !dbg !13479, !llvm.loop !13480

for.end57:                                        ; preds = %for.cond8
  %46 = load i32, i32* %g, align 4, !dbg !13482
  %idxprom58 = sext i32 %46 to i64, !dbg !13483
  %47 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13483
  %group_len59 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %47, i32 0, i32 4, !dbg !13484
  %arrayidx60 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len59, i64 0, i64 %idxprom58, !dbg !13483
  %48 = load i8, i8* %arrayidx60, align 1, !dbg !13483
  %conv61 = zext i8 %48 to i32, !dbg !13483
  %mul62 = mul nsw i32 %conv61, 128, !dbg !13485
  %49 = load float*, float** %ch0, align 8, !dbg !13486
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !13486
  %add.ptr64 = getelementptr inbounds float, float* %49, i64 %idx.ext63, !dbg !13486
  store float* %add.ptr64, float** %ch0, align 8, !dbg !13486
  %50 = load i32, i32* %g, align 4, !dbg !13487
  %idxprom65 = sext i32 %50 to i64, !dbg !13488
  %51 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13488
  %group_len66 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %51, i32 0, i32 4, !dbg !13489
  %arrayidx67 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len66, i64 0, i64 %idxprom65, !dbg !13488
  %52 = load i8, i8* %arrayidx67, align 1, !dbg !13488
  %conv68 = zext i8 %52 to i32, !dbg !13488
  %mul69 = mul nsw i32 %conv68, 128, !dbg !13490
  %53 = load float*, float** %ch1, align 8, !dbg !13491
  %idx.ext70 = sext i32 %mul69 to i64, !dbg !13491
  %add.ptr71 = getelementptr inbounds float, float* %53, i64 %idx.ext70, !dbg !13491
  store float* %add.ptr71, float** %ch1, align 8, !dbg !13491
  br label %for.inc72, !dbg !13492

for.inc72:                                        ; preds = %for.end57
  %54 = load i32, i32* %g, align 4, !dbg !13493
  %inc73 = add nsw i32 %54, 1, !dbg !13493
  store i32 %inc73, i32* %g, align 4, !dbg !13493
  br label %for.cond, !dbg !13495, !llvm.loop !13496

for.end74:                                        ; preds = %for.cond
  ret void, !dbg !13498
}

; Function Attrs: nounwind uwtable
define internal void @apply_intensity_stereo(%struct.AACContext* %ac, %struct.ChannelElement* %cpe, i32 %ms_present) #1 !dbg !13499 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %ms_present.addr = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %sce1 = alloca %struct.SingleChannelElement*, align 8
  %coef0 = alloca float*, align 8
  %coef1 = alloca float*, align 8
  %offsets = alloca i16*, align 8
  %g = alloca i32, align 4
  %group = alloca i32, align 4
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %c = alloca i32, align 4
  %scale = alloca float, align 4
  %bt_run_end = alloca i32, align 4
  %bt_run_end75 = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13502, metadata !2062), !dbg !13503
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !13504, metadata !2062), !dbg !13505
  store i32 %ms_present, i32* %ms_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms_present.addr, metadata !13506, metadata !2062), !dbg !13507
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !13508, metadata !2062), !dbg !13509
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13510
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !13511
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 1, !dbg !13510
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !13512
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !13509
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce1, metadata !13513, metadata !2062), !dbg !13514
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13515
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !13516
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 1, !dbg !13515
  store %struct.SingleChannelElement* %arrayidx3, %struct.SingleChannelElement** %sce1, align 8, !dbg !13514
  call void @llvm.dbg.declare(metadata float** %coef0, metadata !13517, metadata !2062), !dbg !13518
  %2 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13519
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %2, i32 0, i32 7, !dbg !13520
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 0, !dbg !13519
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 14, !dbg !13521
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !13519
  store float* %arraydecay, float** %coef0, align 8, !dbg !13518
  call void @llvm.dbg.declare(metadata float** %coef1, metadata !13522, metadata !2062), !dbg !13523
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13524
  %ch6 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 7, !dbg !13525
  %arrayidx7 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch6, i64 0, i64 1, !dbg !13524
  %coeffs8 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx7, i32 0, i32 14, !dbg !13526
  %arraydecay9 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs8, i32 0, i32 0, !dbg !13524
  store float* %arraydecay9, float** %coef1, align 8, !dbg !13523
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !13527, metadata !2062), !dbg !13528
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13529
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 6, !dbg !13530
  %5 = load i16*, i16** %swb_offset, align 8, !dbg !13530
  store i16* %5, i16** %offsets, align 8, !dbg !13528
  call void @llvm.dbg.declare(metadata i32* %g, metadata !13531, metadata !2062), !dbg !13532
  call void @llvm.dbg.declare(metadata i32* %group, metadata !13533, metadata !2062), !dbg !13534
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13535, metadata !2062), !dbg !13536
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13537, metadata !2062), !dbg !13538
  store i32 0, i32* %idx, align 4, !dbg !13538
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13539, metadata !2062), !dbg !13540
  call void @llvm.dbg.declare(metadata float* %scale, metadata !13541, metadata !2062), !dbg !13542
  store i32 0, i32* %g, align 4, !dbg !13543
  br label %for.cond, !dbg !13545

for.cond:                                         ; preds = %for.inc97, %entry
  %6 = load i32, i32* %g, align 4, !dbg !13546
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13549
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 3, !dbg !13550
  %8 = load i32, i32* %num_window_groups, align 8, !dbg !13550
  %cmp = icmp slt i32 %6, %8, !dbg !13551
  br i1 %cmp, label %for.body, label %for.end99, !dbg !13552

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13553
  br label %for.cond10, !dbg !13556

for.cond10:                                       ; preds = %if.end81, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13557
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13560
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 0, !dbg !13561
  %11 = load i8, i8* %max_sfb, align 8, !dbg !13561
  %conv = zext i8 %11 to i32, !dbg !13560
  %cmp11 = icmp slt i32 %9, %conv, !dbg !13562
  br i1 %cmp11, label %for.body13, label %for.end82, !dbg !13563

for.body13:                                       ; preds = %for.cond10
  %12 = load i32, i32* %idx, align 4, !dbg !13564
  %idxprom = sext i32 %12 to i64, !dbg !13567
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13567
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 3, !dbg !13568
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom, !dbg !13567
  %14 = load i32, i32* %arrayidx14, align 4, !dbg !13567
  %cmp15 = icmp eq i32 %14, 15, !dbg !13569
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !13570

lor.lhs.false:                                    ; preds = %for.body13
  %15 = load i32, i32* %idx, align 4, !dbg !13571
  %idxprom17 = sext i32 %15 to i64, !dbg !13572
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13572
  %band_type18 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 3, !dbg !13573
  %arrayidx19 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type18, i64 0, i64 %idxprom17, !dbg !13572
  %17 = load i32, i32* %arrayidx19, align 4, !dbg !13572
  %cmp20 = icmp eq i32 %17, 14, !dbg !13574
  br i1 %cmp20, label %if.then, label %if.else, !dbg !13575

if.then:                                          ; preds = %lor.lhs.false, %for.body13
  call void @llvm.dbg.declare(metadata i32* %bt_run_end, metadata !13577, metadata !2062), !dbg !13579
  %18 = load i32, i32* %idx, align 4, !dbg !13580
  %idxprom22 = sext i32 %18 to i64, !dbg !13581
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13581
  %band_type_run_end = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 5, !dbg !13582
  %arrayidx23 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end, i64 0, i64 %idxprom22, !dbg !13581
  %20 = load i32, i32* %arrayidx23, align 4, !dbg !13581
  store i32 %20, i32* %bt_run_end, align 4, !dbg !13579
  br label %for.cond24, !dbg !13583

for.cond24:                                       ; preds = %for.inc71, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !13584
  %22 = load i32, i32* %bt_run_end, align 4, !dbg !13588
  %cmp25 = icmp slt i32 %21, %22, !dbg !13589
  br i1 %cmp25, label %for.body27, label %for.end74, !dbg !13590

for.body27:                                       ; preds = %for.cond24
  %23 = load i32, i32* %idx, align 4, !dbg !13591
  %idxprom28 = sext i32 %23 to i64, !dbg !13593
  %24 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13593
  %band_type29 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %24, i32 0, i32 3, !dbg !13594
  %arrayidx30 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type29, i64 0, i64 %idxprom28, !dbg !13593
  %25 = load i32, i32* %arrayidx30, align 4, !dbg !13593
  %sub = sub i32 %25, 14, !dbg !13595
  %mul = mul i32 2, %sub, !dbg !13596
  %add = add i32 -1, %mul, !dbg !13597
  store i32 %add, i32* %c, align 4, !dbg !13598
  %26 = load i32, i32* %ms_present.addr, align 4, !dbg !13599
  %tobool = icmp ne i32 %26, 0, !dbg !13599
  br i1 %tobool, label %if.then31, label %if.end, !dbg !13601

if.then31:                                        ; preds = %for.body27
  %27 = load i32, i32* %idx, align 4, !dbg !13602
  %idxprom32 = sext i32 %27 to i64, !dbg !13603
  %28 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !13603
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %28, i32 0, i32 4, !dbg !13604
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom32, !dbg !13603
  %29 = load i8, i8* %arrayidx33, align 1, !dbg !13603
  %conv34 = zext i8 %29 to i32, !dbg !13603
  %mul35 = mul nsw i32 2, %conv34, !dbg !13605
  %sub36 = sub nsw i32 1, %mul35, !dbg !13606
  %30 = load i32, i32* %c, align 4, !dbg !13607
  %mul37 = mul nsw i32 %30, %sub36, !dbg !13607
  store i32 %mul37, i32* %c, align 4, !dbg !13607
  br label %if.end, !dbg !13608

if.end:                                           ; preds = %if.then31, %for.body27
  %31 = load i32, i32* %c, align 4, !dbg !13609
  %conv38 = sitofp i32 %31 to float, !dbg !13609
  %32 = load i32, i32* %idx, align 4, !dbg !13610
  %idxprom39 = sext i32 %32 to i64, !dbg !13611
  %33 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13611
  %sf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %33, i32 0, i32 6, !dbg !13612
  %arrayidx40 = getelementptr inbounds [120 x float], [120 x float]* %sf, i64 0, i64 %idxprom39, !dbg !13611
  %34 = load float, float* %arrayidx40, align 4, !dbg !13611
  %mul41 = fmul float %conv38, %34, !dbg !13613
  store float %mul41, float* %scale, align 4, !dbg !13614
  store i32 0, i32* %group, align 4, !dbg !13615
  br label %for.cond42, !dbg !13617

for.cond42:                                       ; preds = %for.inc, %if.end
  %35 = load i32, i32* %group, align 4, !dbg !13618
  %36 = load i32, i32* %g, align 4, !dbg !13621
  %idxprom43 = sext i32 %36 to i64, !dbg !13622
  %37 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13622
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %37, i32 0, i32 4, !dbg !13623
  %arrayidx44 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom43, !dbg !13622
  %38 = load i8, i8* %arrayidx44, align 1, !dbg !13622
  %conv45 = zext i8 %38 to i32, !dbg !13622
  %cmp46 = icmp slt i32 %35, %conv45, !dbg !13624
  br i1 %cmp46, label %for.body48, label %for.end, !dbg !13625

for.body48:                                       ; preds = %for.cond42
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13626
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 17, !dbg !13627
  %40 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !13627
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %40, i32 0, i32 3, !dbg !13628
  %41 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !13628
  %42 = load float*, float** %coef1, align 8, !dbg !13629
  %43 = load i32, i32* %group, align 4, !dbg !13630
  %mul49 = mul nsw i32 %43, 128, !dbg !13631
  %idx.ext = sext i32 %mul49 to i64, !dbg !13632
  %add.ptr = getelementptr inbounds float, float* %42, i64 %idx.ext, !dbg !13632
  %44 = load i32, i32* %i, align 4, !dbg !13633
  %idxprom50 = sext i32 %44 to i64, !dbg !13634
  %45 = load i16*, i16** %offsets, align 8, !dbg !13634
  %arrayidx51 = getelementptr inbounds i16, i16* %45, i64 %idxprom50, !dbg !13634
  %46 = load i16, i16* %arrayidx51, align 2, !dbg !13634
  %conv52 = zext i16 %46 to i32, !dbg !13634
  %idx.ext53 = sext i32 %conv52 to i64, !dbg !13635
  %add.ptr54 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext53, !dbg !13635
  %47 = load float*, float** %coef0, align 8, !dbg !13636
  %48 = load i32, i32* %group, align 4, !dbg !13637
  %mul55 = mul nsw i32 %48, 128, !dbg !13638
  %idx.ext56 = sext i32 %mul55 to i64, !dbg !13639
  %add.ptr57 = getelementptr inbounds float, float* %47, i64 %idx.ext56, !dbg !13639
  %49 = load i32, i32* %i, align 4, !dbg !13640
  %idxprom58 = sext i32 %49 to i64, !dbg !13641
  %50 = load i16*, i16** %offsets, align 8, !dbg !13641
  %arrayidx59 = getelementptr inbounds i16, i16* %50, i64 %idxprom58, !dbg !13641
  %51 = load i16, i16* %arrayidx59, align 2, !dbg !13641
  %conv60 = zext i16 %51 to i32, !dbg !13641
  %idx.ext61 = sext i32 %conv60 to i64, !dbg !13642
  %add.ptr62 = getelementptr inbounds float, float* %add.ptr57, i64 %idx.ext61, !dbg !13642
  %52 = load float, float* %scale, align 4, !dbg !13643
  %53 = load i32, i32* %i, align 4, !dbg !13644
  %add63 = add nsw i32 %53, 1, !dbg !13645
  %idxprom64 = sext i32 %add63 to i64, !dbg !13646
  %54 = load i16*, i16** %offsets, align 8, !dbg !13646
  %arrayidx65 = getelementptr inbounds i16, i16* %54, i64 %idxprom64, !dbg !13646
  %55 = load i16, i16* %arrayidx65, align 2, !dbg !13646
  %conv66 = zext i16 %55 to i32, !dbg !13646
  %56 = load i32, i32* %i, align 4, !dbg !13647
  %idxprom67 = sext i32 %56 to i64, !dbg !13648
  %57 = load i16*, i16** %offsets, align 8, !dbg !13648
  %arrayidx68 = getelementptr inbounds i16, i16* %57, i64 %idxprom67, !dbg !13648
  %58 = load i16, i16* %arrayidx68, align 2, !dbg !13648
  %conv69 = zext i16 %58 to i32, !dbg !13648
  %sub70 = sub nsw i32 %conv66, %conv69, !dbg !13649
  call void %41(float* %add.ptr54, float* %add.ptr62, float %52, i32 %sub70), !dbg !13626
  br label %for.inc, !dbg !13626

for.inc:                                          ; preds = %for.body48
  %59 = load i32, i32* %group, align 4, !dbg !13650
  %inc = add nsw i32 %59, 1, !dbg !13650
  store i32 %inc, i32* %group, align 4, !dbg !13650
  br label %for.cond42, !dbg !13652, !llvm.loop !13653

for.end:                                          ; preds = %for.cond42
  br label %for.inc71, !dbg !13655

for.inc71:                                        ; preds = %for.end
  %60 = load i32, i32* %i, align 4, !dbg !13656
  %inc72 = add nsw i32 %60, 1, !dbg !13656
  store i32 %inc72, i32* %i, align 4, !dbg !13656
  %61 = load i32, i32* %idx, align 4, !dbg !13658
  %inc73 = add nsw i32 %61, 1, !dbg !13658
  store i32 %inc73, i32* %idx, align 4, !dbg !13658
  br label %for.cond24, !dbg !13659, !llvm.loop !13660

for.end74:                                        ; preds = %for.cond24
  br label %if.end81, !dbg !13661

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %bt_run_end75, metadata !13662, metadata !2062), !dbg !13664
  %62 = load i32, i32* %idx, align 4, !dbg !13665
  %idxprom76 = sext i32 %62 to i64, !dbg !13666
  %63 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !13666
  %band_type_run_end77 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %63, i32 0, i32 5, !dbg !13667
  %arrayidx78 = getelementptr inbounds [120 x i32], [120 x i32]* %band_type_run_end77, i64 0, i64 %idxprom76, !dbg !13666
  %64 = load i32, i32* %arrayidx78, align 4, !dbg !13666
  store i32 %64, i32* %bt_run_end75, align 4, !dbg !13664
  %65 = load i32, i32* %bt_run_end75, align 4, !dbg !13668
  %66 = load i32, i32* %i, align 4, !dbg !13669
  %sub79 = sub nsw i32 %65, %66, !dbg !13670
  %67 = load i32, i32* %idx, align 4, !dbg !13671
  %add80 = add nsw i32 %67, %sub79, !dbg !13671
  store i32 %add80, i32* %idx, align 4, !dbg !13671
  %68 = load i32, i32* %bt_run_end75, align 4, !dbg !13672
  store i32 %68, i32* %i, align 4, !dbg !13673
  br label %if.end81

if.end81:                                         ; preds = %if.else, %for.end74
  br label %for.cond10, !dbg !13674, !llvm.loop !13676

for.end82:                                        ; preds = %for.cond10
  %69 = load i32, i32* %g, align 4, !dbg !13678
  %idxprom83 = sext i32 %69 to i64, !dbg !13679
  %70 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13679
  %group_len84 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %70, i32 0, i32 4, !dbg !13680
  %arrayidx85 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len84, i64 0, i64 %idxprom83, !dbg !13679
  %71 = load i8, i8* %arrayidx85, align 1, !dbg !13679
  %conv86 = zext i8 %71 to i32, !dbg !13679
  %mul87 = mul nsw i32 %conv86, 128, !dbg !13681
  %72 = load float*, float** %coef0, align 8, !dbg !13682
  %idx.ext88 = sext i32 %mul87 to i64, !dbg !13682
  %add.ptr89 = getelementptr inbounds float, float* %72, i64 %idx.ext88, !dbg !13682
  store float* %add.ptr89, float** %coef0, align 8, !dbg !13682
  %73 = load i32, i32* %g, align 4, !dbg !13683
  %idxprom90 = sext i32 %73 to i64, !dbg !13684
  %74 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13684
  %group_len91 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %74, i32 0, i32 4, !dbg !13685
  %arrayidx92 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len91, i64 0, i64 %idxprom90, !dbg !13684
  %75 = load i8, i8* %arrayidx92, align 1, !dbg !13684
  %conv93 = zext i8 %75 to i32, !dbg !13684
  %mul94 = mul nsw i32 %conv93, 128, !dbg !13686
  %76 = load float*, float** %coef1, align 8, !dbg !13687
  %idx.ext95 = sext i32 %mul94 to i64, !dbg !13687
  %add.ptr96 = getelementptr inbounds float, float* %76, i64 %idx.ext95, !dbg !13687
  store float* %add.ptr96, float** %coef1, align 8, !dbg !13687
  br label %for.inc97, !dbg !13688

for.inc97:                                        ; preds = %for.end82
  %77 = load i32, i32* %g, align 4, !dbg !13689
  %inc98 = add nsw i32 %77, 1, !dbg !13689
  store i32 %inc98, i32* %g, align 4, !dbg !13689
  br label %for.cond, !dbg !13691, !llvm.loop !13692

for.end99:                                        ; preds = %for.cond
  ret void, !dbg !13694
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_ld(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !13695 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %saved = alloca float*, align 8
  %buf = alloca float*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13696, metadata !2062), !dbg !13697
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !13698, metadata !2062), !dbg !13699
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !13700, metadata !2062), !dbg !13701
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13702
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !13703
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !13701
  call void @llvm.dbg.declare(metadata float** %in, metadata !13704, metadata !2062), !dbg !13705
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13706
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 14, !dbg !13707
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !13706
  store float* %arraydecay, float** %in, align 8, !dbg !13705
  call void @llvm.dbg.declare(metadata float** %out, metadata !13708, metadata !2062), !dbg !13709
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13710
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 21, !dbg !13711
  %3 = load float*, float** %ret, align 32, !dbg !13711
  store float* %3, float** %out, align 8, !dbg !13709
  call void @llvm.dbg.declare(metadata float** %saved, metadata !13712, metadata !2062), !dbg !13713
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13714
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 15, !dbg !13715
  %arraydecay3 = getelementptr inbounds [1536 x float], [1536 x float]* %saved2, i32 0, i32 0, !dbg !13714
  store float* %arraydecay3, float** %saved, align 8, !dbg !13713
  call void @llvm.dbg.declare(metadata float** %buf, metadata !13716, metadata !2062), !dbg !13717
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13718
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 9, !dbg !13719
  %arraydecay4 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !13718
  store float* %arraydecay4, float** %buf, align 8, !dbg !13717
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13720
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %6, i32 0, i32 10, !dbg !13721
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !13722
  %7 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !13722
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13723
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 12, !dbg !13724
  %9 = load float*, float** %buf, align 8, !dbg !13725
  %10 = load float*, float** %in, align 8, !dbg !13726
  call void %7(%struct.FFTContext* %mdct_ld, float* %9, float* %10), !dbg !13720
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !13727
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 2, !dbg !13729
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 1, !dbg !13727
  %12 = load i8, i8* %arrayidx, align 1, !dbg !13727
  %tobool = icmp ne i8 %12, 0, !dbg !13727
  br i1 %tobool, label %if.then, label %if.else, !dbg !13730

if.then:                                          ; preds = %entry
  %13 = load float*, float** %out, align 8, !dbg !13731
  %14 = bitcast float* %13 to i8*, !dbg !13733
  %15 = load float*, float** %saved, align 8, !dbg !13734
  %16 = bitcast float* %15 to i8*, !dbg !13733
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %16, i64 768, i32 4, i1 false), !dbg !13733
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13735
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 17, !dbg !13736
  %18 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !13736
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %18, i32 0, i32 5, !dbg !13737
  %19 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !13737
  %20 = load float*, float** %out, align 8, !dbg !13738
  %add.ptr = getelementptr inbounds float, float* %20, i64 192, !dbg !13739
  %21 = load float*, float** %saved, align 8, !dbg !13740
  %add.ptr5 = getelementptr inbounds float, float* %21, i64 192, !dbg !13741
  %22 = load float*, float** %buf, align 8, !dbg !13742
  call void %19(float* %add.ptr, float* %add.ptr5, float* %22, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), i32 64), !dbg !13735
  %23 = load float*, float** %out, align 8, !dbg !13743
  %add.ptr6 = getelementptr inbounds float, float* %23, i64 320, !dbg !13744
  %24 = bitcast float* %add.ptr6 to i8*, !dbg !13745
  %25 = load float*, float** %buf, align 8, !dbg !13746
  %add.ptr7 = getelementptr inbounds float, float* %25, i64 64, !dbg !13747
  %26 = bitcast float* %add.ptr7 to i8*, !dbg !13745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %26, i64 768, i32 4, i1 false), !dbg !13745
  br label %if.end, !dbg !13748

if.else:                                          ; preds = %entry
  %27 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13749
  %fdsp8 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 17, !dbg !13751
  %28 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp8, align 8, !dbg !13751
  %vector_fmul_window9 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %28, i32 0, i32 5, !dbg !13752
  %29 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window9, align 8, !dbg !13752
  %30 = load float*, float** %out, align 8, !dbg !13753
  %31 = load float*, float** %saved, align 8, !dbg !13754
  %32 = load float*, float** %buf, align 8, !dbg !13755
  call void %29(float* %30, float* %31, float* %32, float* getelementptr inbounds ([512 x float], [512 x float]* @ff_sine_512, i32 0, i32 0), i32 256), !dbg !13749
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load float*, float** %saved, align 8, !dbg !13756
  %34 = bitcast float* %33 to i8*, !dbg !13757
  %35 = load float*, float** %buf, align 8, !dbg !13758
  %add.ptr10 = getelementptr inbounds float, float* %35, i64 256, !dbg !13759
  %36 = bitcast float* %add.ptr10 to i8*, !dbg !13757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %36, i64 1024, i32 4, i1 false), !dbg !13757
  ret void, !dbg !13760
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_eld(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !13761 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %saved = alloca float*, align 8
  %buf = alloca float*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n4 = alloca i32, align 4
  %window = alloca float*, align 8
  %temp = alloca float, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13762, metadata !2062), !dbg !13763
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !13764, metadata !2062), !dbg !13765
  call void @llvm.dbg.declare(metadata float** %in, metadata !13766, metadata !2062), !dbg !13767
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13768
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 14, !dbg !13769
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !13768
  store float* %arraydecay, float** %in, align 8, !dbg !13767
  call void @llvm.dbg.declare(metadata float** %out, metadata !13770, metadata !2062), !dbg !13771
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13772
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 21, !dbg !13773
  %2 = load float*, float** %ret, align 32, !dbg !13773
  store float* %2, float** %out, align 8, !dbg !13771
  call void @llvm.dbg.declare(metadata float** %saved, metadata !13774, metadata !2062), !dbg !13775
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13776
  %saved1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 15, !dbg !13777
  %arraydecay2 = getelementptr inbounds [1536 x float], [1536 x float]* %saved1, i32 0, i32 0, !dbg !13776
  store float* %arraydecay2, float** %saved, align 8, !dbg !13775
  call void @llvm.dbg.declare(metadata float** %buf, metadata !13778, metadata !2062), !dbg !13779
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13780
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 9, !dbg !13781
  %arraydecay3 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !13780
  store float* %arraydecay3, float** %buf, align 8, !dbg !13779
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13782, metadata !2062), !dbg !13783
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13784, metadata !2062), !dbg !13785
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13786
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 24, !dbg !13787
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !13786
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !13788
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 11, !dbg !13789
  %6 = load i32, i32* %frame_length_short, align 4, !dbg !13789
  %tobool = icmp ne i32 %6, 0, !dbg !13786
  %cond = select i1 %tobool, i32 480, i32 512, !dbg !13786
  store i32 %cond, i32* %n, align 4, !dbg !13785
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !13790, metadata !2062), !dbg !13791
  %7 = load i32, i32* %n, align 4, !dbg !13792
  %shr = ashr i32 %7, 1, !dbg !13793
  store i32 %shr, i32* %n2, align 4, !dbg !13791
  call void @llvm.dbg.declare(metadata i32* %n4, metadata !13794, metadata !2062), !dbg !13795
  %8 = load i32, i32* %n, align 4, !dbg !13796
  %shr4 = ashr i32 %8, 2, !dbg !13797
  store i32 %shr4, i32* %n4, align 4, !dbg !13795
  call void @llvm.dbg.declare(metadata float** %window, metadata !13798, metadata !2062), !dbg !13799
  %9 = load i32, i32* %n, align 4, !dbg !13800
  %cmp = icmp eq i32 %9, 480, !dbg !13801
  %cond5 = select i1 %cmp, float* getelementptr inbounds ([1800 x float], [1800 x float]* @ff_aac_eld_window_480, i32 0, i32 0), float* getelementptr inbounds ([1920 x float], [1920 x float]* @ff_aac_eld_window_512, i32 0, i32 0), !dbg !13800
  store float* %cond5, float** %window, align 8, !dbg !13799
  store i32 0, i32* %i, align 4, !dbg !13802
  br label %for.cond, !dbg !13804

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !13805
  %11 = load i32, i32* %n2, align 4, !dbg !13808
  %cmp6 = icmp slt i32 %10, %11, !dbg !13809
  br i1 %cmp6, label %for.body, label %for.end, !dbg !13810

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %temp, metadata !13811, metadata !2062), !dbg !13813
  %12 = load i32, i32* %i, align 4, !dbg !13814
  %idxprom = sext i32 %12 to i64, !dbg !13815
  %13 = load float*, float** %in, align 8, !dbg !13815
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 %idxprom, !dbg !13815
  %14 = load float, float* %arrayidx7, align 4, !dbg !13815
  store float %14, float* %temp, align 4, !dbg !13816
  %15 = load i32, i32* %n, align 4, !dbg !13817
  %sub = sub nsw i32 %15, 1, !dbg !13818
  %16 = load i32, i32* %i, align 4, !dbg !13819
  %sub8 = sub nsw i32 %sub, %16, !dbg !13820
  %idxprom9 = sext i32 %sub8 to i64, !dbg !13821
  %17 = load float*, float** %in, align 8, !dbg !13821
  %arrayidx10 = getelementptr inbounds float, float* %17, i64 %idxprom9, !dbg !13821
  %18 = load float, float* %arrayidx10, align 4, !dbg !13821
  %sub11 = fsub float -0.000000e+00, %18, !dbg !13822
  %19 = load i32, i32* %i, align 4, !dbg !13823
  %idxprom12 = sext i32 %19 to i64, !dbg !13824
  %20 = load float*, float** %in, align 8, !dbg !13824
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 %idxprom12, !dbg !13824
  store float %sub11, float* %arrayidx13, align 4, !dbg !13825
  %21 = load float, float* %temp, align 4, !dbg !13826
  %22 = load i32, i32* %n, align 4, !dbg !13827
  %sub14 = sub nsw i32 %22, 1, !dbg !13828
  %23 = load i32, i32* %i, align 4, !dbg !13829
  %sub15 = sub nsw i32 %sub14, %23, !dbg !13830
  %idxprom16 = sext i32 %sub15 to i64, !dbg !13831
  %24 = load float*, float** %in, align 8, !dbg !13831
  %arrayidx17 = getelementptr inbounds float, float* %24, i64 %idxprom16, !dbg !13831
  store float %21, float* %arrayidx17, align 4, !dbg !13832
  %25 = load i32, i32* %i, align 4, !dbg !13833
  %add = add nsw i32 %25, 1, !dbg !13834
  %idxprom18 = sext i32 %add to i64, !dbg !13835
  %26 = load float*, float** %in, align 8, !dbg !13835
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 %idxprom18, !dbg !13835
  %27 = load float, float* %arrayidx19, align 4, !dbg !13835
  %sub20 = fsub float -0.000000e+00, %27, !dbg !13836
  store float %sub20, float* %temp, align 4, !dbg !13837
  %28 = load i32, i32* %n, align 4, !dbg !13838
  %sub21 = sub nsw i32 %28, 2, !dbg !13839
  %29 = load i32, i32* %i, align 4, !dbg !13840
  %sub22 = sub nsw i32 %sub21, %29, !dbg !13841
  %idxprom23 = sext i32 %sub22 to i64, !dbg !13842
  %30 = load float*, float** %in, align 8, !dbg !13842
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 %idxprom23, !dbg !13842
  %31 = load float, float* %arrayidx24, align 4, !dbg !13842
  %32 = load i32, i32* %i, align 4, !dbg !13843
  %add25 = add nsw i32 %32, 1, !dbg !13844
  %idxprom26 = sext i32 %add25 to i64, !dbg !13845
  %33 = load float*, float** %in, align 8, !dbg !13845
  %arrayidx27 = getelementptr inbounds float, float* %33, i64 %idxprom26, !dbg !13845
  store float %31, float* %arrayidx27, align 4, !dbg !13846
  %34 = load float, float* %temp, align 4, !dbg !13847
  %35 = load i32, i32* %n, align 4, !dbg !13848
  %sub28 = sub nsw i32 %35, 2, !dbg !13849
  %36 = load i32, i32* %i, align 4, !dbg !13850
  %sub29 = sub nsw i32 %sub28, %36, !dbg !13851
  %idxprom30 = sext i32 %sub29 to i64, !dbg !13852
  %37 = load float*, float** %in, align 8, !dbg !13852
  %arrayidx31 = getelementptr inbounds float, float* %37, i64 %idxprom30, !dbg !13852
  store float %34, float* %arrayidx31, align 4, !dbg !13853
  br label %for.inc, !dbg !13854

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !13855
  %add32 = add nsw i32 %38, 2, !dbg !13855
  store i32 %add32, i32* %i, align 4, !dbg !13855
  br label %for.cond, !dbg !13857, !llvm.loop !13858

for.end:                                          ; preds = %for.cond
  %39 = load i32, i32* %n, align 4, !dbg !13860
  %cmp33 = icmp eq i32 %39, 480, !dbg !13862
  br i1 %cmp33, label %if.then, label %if.else, !dbg !13863

if.then:                                          ; preds = %for.end
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13864
  %mdct480 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 15, !dbg !13865
  %41 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct480, align 8, !dbg !13865
  %imdct_half = getelementptr inbounds %struct.MDCT15Context, %struct.MDCT15Context* %41, i32 0, i32 13, !dbg !13866
  %42 = load void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)** %imdct_half, align 8, !dbg !13866
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13867
  %mdct48034 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 15, !dbg !13868
  %44 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct48034, align 8, !dbg !13868
  %45 = load float*, float** %buf, align 8, !dbg !13869
  %46 = load float*, float** %in, align 8, !dbg !13870
  call void %42(%struct.MDCT15Context* %44, float* %45, float* %46, i64 1), !dbg !13864
  br label %if.end, !dbg !13864

if.else:                                          ; preds = %for.end
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13871
  %mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %47, i32 0, i32 10, !dbg !13872
  %imdct_half35 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !13873
  %48 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half35, align 8, !dbg !13873
  %49 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13874
  %mdct_ld = getelementptr inbounds %struct.AACContext, %struct.AACContext* %49, i32 0, i32 12, !dbg !13875
  %50 = load float*, float** %buf, align 8, !dbg !13876
  %51 = load float*, float** %in, align 8, !dbg !13877
  call void %48(%struct.FFTContext* %mdct_ld, float* %50, float* %51), !dbg !13871
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !13878
  br label %for.cond36, !dbg !13880

for.cond36:                                       ; preds = %for.inc44, %if.end
  %52 = load i32, i32* %i, align 4, !dbg !13881
  %53 = load i32, i32* %n, align 4, !dbg !13884
  %cmp37 = icmp slt i32 %52, %53, !dbg !13885
  br i1 %cmp37, label %for.body38, label %for.end46, !dbg !13886

for.body38:                                       ; preds = %for.cond36
  %54 = load i32, i32* %i, align 4, !dbg !13887
  %idxprom39 = sext i32 %54 to i64, !dbg !13889
  %55 = load float*, float** %buf, align 8, !dbg !13889
  %arrayidx40 = getelementptr inbounds float, float* %55, i64 %idxprom39, !dbg !13889
  %56 = load float, float* %arrayidx40, align 4, !dbg !13889
  %sub41 = fsub float -0.000000e+00, %56, !dbg !13890
  %57 = load i32, i32* %i, align 4, !dbg !13891
  %idxprom42 = sext i32 %57 to i64, !dbg !13892
  %58 = load float*, float** %buf, align 8, !dbg !13892
  %arrayidx43 = getelementptr inbounds float, float* %58, i64 %idxprom42, !dbg !13892
  store float %sub41, float* %arrayidx43, align 4, !dbg !13893
  br label %for.inc44, !dbg !13894

for.inc44:                                        ; preds = %for.body38
  %59 = load i32, i32* %i, align 4, !dbg !13895
  %add45 = add nsw i32 %59, 2, !dbg !13895
  store i32 %add45, i32* %i, align 4, !dbg !13895
  br label %for.cond36, !dbg !13897, !llvm.loop !13898

for.end46:                                        ; preds = %for.cond36
  %60 = load i32, i32* %n4, align 4, !dbg !13900
  store i32 %60, i32* %i, align 4, !dbg !13902
  br label %for.cond47, !dbg !13903

for.cond47:                                       ; preds = %for.inc95, %for.end46
  %61 = load i32, i32* %i, align 4, !dbg !13904
  %62 = load i32, i32* %n2, align 4, !dbg !13907
  %cmp48 = icmp slt i32 %61, %62, !dbg !13908
  br i1 %cmp48, label %for.body49, label %for.end96, !dbg !13909

for.body49:                                       ; preds = %for.cond47
  %63 = load i32, i32* %n2, align 4, !dbg !13910
  %sub50 = sub nsw i32 %63, 1, !dbg !13912
  %64 = load i32, i32* %i, align 4, !dbg !13913
  %sub51 = sub nsw i32 %sub50, %64, !dbg !13914
  %idxprom52 = sext i32 %sub51 to i64, !dbg !13915
  %65 = load float*, float** %buf, align 8, !dbg !13915
  %arrayidx53 = getelementptr inbounds float, float* %65, i64 %idxprom52, !dbg !13915
  %66 = load float, float* %arrayidx53, align 4, !dbg !13915
  %67 = load i32, i32* %i, align 4, !dbg !13916
  %68 = load i32, i32* %n4, align 4, !dbg !13917
  %sub54 = sub nsw i32 %67, %68, !dbg !13918
  %idxprom55 = sext i32 %sub54 to i64, !dbg !13919
  %69 = load float*, float** %window, align 8, !dbg !13919
  %arrayidx56 = getelementptr inbounds float, float* %69, i64 %idxprom55, !dbg !13919
  %70 = load float, float* %arrayidx56, align 4, !dbg !13919
  %mul = fmul float %66, %70, !dbg !13920
  %71 = load i32, i32* %i, align 4, !dbg !13921
  %72 = load i32, i32* %n2, align 4, !dbg !13922
  %add57 = add nsw i32 %71, %72, !dbg !13923
  %idxprom58 = sext i32 %add57 to i64, !dbg !13924
  %73 = load float*, float** %saved, align 8, !dbg !13924
  %arrayidx59 = getelementptr inbounds float, float* %73, i64 %idxprom58, !dbg !13924
  %74 = load float, float* %arrayidx59, align 4, !dbg !13924
  %75 = load i32, i32* %i, align 4, !dbg !13925
  %76 = load i32, i32* %n, align 4, !dbg !13926
  %add60 = add nsw i32 %75, %76, !dbg !13927
  %77 = load i32, i32* %n4, align 4, !dbg !13928
  %sub61 = sub nsw i32 %add60, %77, !dbg !13929
  %idxprom62 = sext i32 %sub61 to i64, !dbg !13930
  %78 = load float*, float** %window, align 8, !dbg !13930
  %arrayidx63 = getelementptr inbounds float, float* %78, i64 %idxprom62, !dbg !13930
  %79 = load float, float* %arrayidx63, align 4, !dbg !13930
  %mul64 = fmul float %74, %79, !dbg !13931
  %add65 = fadd float %mul, %mul64, !dbg !13932
  %80 = load i32, i32* %n, align 4, !dbg !13933
  %81 = load i32, i32* %n2, align 4, !dbg !13934
  %add66 = add nsw i32 %80, %81, !dbg !13935
  %sub67 = sub nsw i32 %add66, 1, !dbg !13936
  %82 = load i32, i32* %i, align 4, !dbg !13937
  %sub68 = sub nsw i32 %sub67, %82, !dbg !13938
  %idxprom69 = sext i32 %sub68 to i64, !dbg !13939
  %83 = load float*, float** %saved, align 8, !dbg !13939
  %arrayidx70 = getelementptr inbounds float, float* %83, i64 %idxprom69, !dbg !13939
  %84 = load float, float* %arrayidx70, align 4, !dbg !13939
  %sub71 = fsub float -0.000000e+00, %84, !dbg !13940
  %85 = load i32, i32* %i, align 4, !dbg !13941
  %86 = load i32, i32* %n, align 4, !dbg !13942
  %mul72 = mul nsw i32 2, %86, !dbg !13943
  %add73 = add nsw i32 %85, %mul72, !dbg !13944
  %87 = load i32, i32* %n4, align 4, !dbg !13945
  %sub74 = sub nsw i32 %add73, %87, !dbg !13946
  %idxprom75 = sext i32 %sub74 to i64, !dbg !13947
  %88 = load float*, float** %window, align 8, !dbg !13947
  %arrayidx76 = getelementptr inbounds float, float* %88, i64 %idxprom75, !dbg !13947
  %89 = load float, float* %arrayidx76, align 4, !dbg !13947
  %mul77 = fmul float %sub71, %89, !dbg !13948
  %add78 = fadd float %add65, %mul77, !dbg !13949
  %90 = load i32, i32* %n, align 4, !dbg !13950
  %mul79 = mul nsw i32 2, %90, !dbg !13951
  %91 = load i32, i32* %n2, align 4, !dbg !13952
  %add80 = add nsw i32 %mul79, %91, !dbg !13953
  %92 = load i32, i32* %i, align 4, !dbg !13954
  %add81 = add nsw i32 %add80, %92, !dbg !13955
  %idxprom82 = sext i32 %add81 to i64, !dbg !13956
  %93 = load float*, float** %saved, align 8, !dbg !13956
  %arrayidx83 = getelementptr inbounds float, float* %93, i64 %idxprom82, !dbg !13956
  %94 = load float, float* %arrayidx83, align 4, !dbg !13956
  %sub84 = fsub float -0.000000e+00, %94, !dbg !13957
  %95 = load i32, i32* %i, align 4, !dbg !13958
  %96 = load i32, i32* %n, align 4, !dbg !13959
  %mul85 = mul nsw i32 3, %96, !dbg !13960
  %add86 = add nsw i32 %95, %mul85, !dbg !13961
  %97 = load i32, i32* %n4, align 4, !dbg !13962
  %sub87 = sub nsw i32 %add86, %97, !dbg !13963
  %idxprom88 = sext i32 %sub87 to i64, !dbg !13964
  %98 = load float*, float** %window, align 8, !dbg !13964
  %arrayidx89 = getelementptr inbounds float, float* %98, i64 %idxprom88, !dbg !13964
  %99 = load float, float* %arrayidx89, align 4, !dbg !13964
  %mul90 = fmul float %sub84, %99, !dbg !13965
  %add91 = fadd float %add78, %mul90, !dbg !13966
  %100 = load i32, i32* %i, align 4, !dbg !13967
  %101 = load i32, i32* %n4, align 4, !dbg !13968
  %sub92 = sub nsw i32 %100, %101, !dbg !13969
  %idxprom93 = sext i32 %sub92 to i64, !dbg !13970
  %102 = load float*, float** %out, align 8, !dbg !13970
  %arrayidx94 = getelementptr inbounds float, float* %102, i64 %idxprom93, !dbg !13970
  store float %add91, float* %arrayidx94, align 4, !dbg !13971
  br label %for.inc95, !dbg !13972

for.inc95:                                        ; preds = %for.body49
  %103 = load i32, i32* %i, align 4, !dbg !13973
  %inc = add nsw i32 %103, 1, !dbg !13973
  store i32 %inc, i32* %i, align 4, !dbg !13973
  br label %for.cond47, !dbg !13975, !llvm.loop !13976

for.end96:                                        ; preds = %for.cond47
  store i32 0, i32* %i, align 4, !dbg !13978
  br label %for.cond97, !dbg !13980

for.cond97:                                       ; preds = %for.inc148, %for.end96
  %104 = load i32, i32* %i, align 4, !dbg !13981
  %105 = load i32, i32* %n2, align 4, !dbg !13984
  %cmp98 = icmp slt i32 %104, %105, !dbg !13985
  br i1 %cmp98, label %for.body99, label %for.end150, !dbg !13986

for.body99:                                       ; preds = %for.cond97
  %106 = load i32, i32* %i, align 4, !dbg !13987
  %idxprom100 = sext i32 %106 to i64, !dbg !13989
  %107 = load float*, float** %buf, align 8, !dbg !13989
  %arrayidx101 = getelementptr inbounds float, float* %107, i64 %idxprom100, !dbg !13989
  %108 = load float, float* %arrayidx101, align 4, !dbg !13989
  %109 = load i32, i32* %i, align 4, !dbg !13990
  %110 = load i32, i32* %n2, align 4, !dbg !13991
  %add102 = add nsw i32 %109, %110, !dbg !13992
  %111 = load i32, i32* %n4, align 4, !dbg !13993
  %sub103 = sub nsw i32 %add102, %111, !dbg !13994
  %idxprom104 = sext i32 %sub103 to i64, !dbg !13995
  %112 = load float*, float** %window, align 8, !dbg !13995
  %arrayidx105 = getelementptr inbounds float, float* %112, i64 %idxprom104, !dbg !13995
  %113 = load float, float* %arrayidx105, align 4, !dbg !13995
  %mul106 = fmul float %108, %113, !dbg !13996
  %114 = load i32, i32* %n, align 4, !dbg !13997
  %sub107 = sub nsw i32 %114, 1, !dbg !13998
  %115 = load i32, i32* %i, align 4, !dbg !13999
  %sub108 = sub nsw i32 %sub107, %115, !dbg !14000
  %idxprom109 = sext i32 %sub108 to i64, !dbg !14001
  %116 = load float*, float** %saved, align 8, !dbg !14001
  %arrayidx110 = getelementptr inbounds float, float* %116, i64 %idxprom109, !dbg !14001
  %117 = load float, float* %arrayidx110, align 4, !dbg !14001
  %sub111 = fsub float -0.000000e+00, %117, !dbg !14002
  %118 = load i32, i32* %i, align 4, !dbg !14003
  %119 = load i32, i32* %n2, align 4, !dbg !14004
  %add112 = add nsw i32 %118, %119, !dbg !14005
  %120 = load i32, i32* %n, align 4, !dbg !14006
  %add113 = add nsw i32 %add112, %120, !dbg !14007
  %121 = load i32, i32* %n4, align 4, !dbg !14008
  %sub114 = sub nsw i32 %add113, %121, !dbg !14009
  %idxprom115 = sext i32 %sub114 to i64, !dbg !14010
  %122 = load float*, float** %window, align 8, !dbg !14010
  %arrayidx116 = getelementptr inbounds float, float* %122, i64 %idxprom115, !dbg !14010
  %123 = load float, float* %arrayidx116, align 4, !dbg !14010
  %mul117 = fmul float %sub111, %123, !dbg !14011
  %add118 = fadd float %mul106, %mul117, !dbg !14012
  %124 = load i32, i32* %n, align 4, !dbg !14013
  %125 = load i32, i32* %i, align 4, !dbg !14014
  %add119 = add nsw i32 %124, %125, !dbg !14015
  %idxprom120 = sext i32 %add119 to i64, !dbg !14016
  %126 = load float*, float** %saved, align 8, !dbg !14016
  %arrayidx121 = getelementptr inbounds float, float* %126, i64 %idxprom120, !dbg !14016
  %127 = load float, float* %arrayidx121, align 4, !dbg !14016
  %sub122 = fsub float -0.000000e+00, %127, !dbg !14017
  %128 = load i32, i32* %i, align 4, !dbg !14018
  %129 = load i32, i32* %n2, align 4, !dbg !14019
  %add123 = add nsw i32 %128, %129, !dbg !14020
  %130 = load i32, i32* %n, align 4, !dbg !14021
  %mul124 = mul nsw i32 2, %130, !dbg !14022
  %add125 = add nsw i32 %add123, %mul124, !dbg !14023
  %131 = load i32, i32* %n4, align 4, !dbg !14024
  %sub126 = sub nsw i32 %add125, %131, !dbg !14025
  %idxprom127 = sext i32 %sub126 to i64, !dbg !14026
  %132 = load float*, float** %window, align 8, !dbg !14026
  %arrayidx128 = getelementptr inbounds float, float* %132, i64 %idxprom127, !dbg !14026
  %133 = load float, float* %arrayidx128, align 4, !dbg !14026
  %mul129 = fmul float %sub122, %133, !dbg !14027
  %add130 = fadd float %add118, %mul129, !dbg !14028
  %134 = load i32, i32* %n, align 4, !dbg !14029
  %mul131 = mul nsw i32 2, %134, !dbg !14030
  %135 = load i32, i32* %n, align 4, !dbg !14031
  %add132 = add nsw i32 %mul131, %135, !dbg !14032
  %sub133 = sub nsw i32 %add132, 1, !dbg !14033
  %136 = load i32, i32* %i, align 4, !dbg !14034
  %sub134 = sub nsw i32 %sub133, %136, !dbg !14035
  %idxprom135 = sext i32 %sub134 to i64, !dbg !14036
  %137 = load float*, float** %saved, align 8, !dbg !14036
  %arrayidx136 = getelementptr inbounds float, float* %137, i64 %idxprom135, !dbg !14036
  %138 = load float, float* %arrayidx136, align 4, !dbg !14036
  %139 = load i32, i32* %i, align 4, !dbg !14037
  %140 = load i32, i32* %n2, align 4, !dbg !14038
  %add137 = add nsw i32 %139, %140, !dbg !14039
  %141 = load i32, i32* %n, align 4, !dbg !14040
  %mul138 = mul nsw i32 3, %141, !dbg !14041
  %add139 = add nsw i32 %add137, %mul138, !dbg !14042
  %142 = load i32, i32* %n4, align 4, !dbg !14043
  %sub140 = sub nsw i32 %add139, %142, !dbg !14044
  %idxprom141 = sext i32 %sub140 to i64, !dbg !14045
  %143 = load float*, float** %window, align 8, !dbg !14045
  %arrayidx142 = getelementptr inbounds float, float* %143, i64 %idxprom141, !dbg !14045
  %144 = load float, float* %arrayidx142, align 4, !dbg !14045
  %mul143 = fmul float %138, %144, !dbg !14046
  %add144 = fadd float %add130, %mul143, !dbg !14047
  %145 = load i32, i32* %n4, align 4, !dbg !14048
  %146 = load i32, i32* %i, align 4, !dbg !14049
  %add145 = add nsw i32 %145, %146, !dbg !14050
  %idxprom146 = sext i32 %add145 to i64, !dbg !14051
  %147 = load float*, float** %out, align 8, !dbg !14051
  %arrayidx147 = getelementptr inbounds float, float* %147, i64 %idxprom146, !dbg !14051
  store float %add144, float* %arrayidx147, align 4, !dbg !14052
  br label %for.inc148, !dbg !14053

for.inc148:                                       ; preds = %for.body99
  %148 = load i32, i32* %i, align 4, !dbg !14054
  %inc149 = add nsw i32 %148, 1, !dbg !14054
  store i32 %inc149, i32* %i, align 4, !dbg !14054
  br label %for.cond97, !dbg !14056, !llvm.loop !14057

for.end150:                                       ; preds = %for.cond97
  store i32 0, i32* %i, align 4, !dbg !14059
  br label %for.cond151, !dbg !14061

for.cond151:                                      ; preds = %for.inc190, %for.end150
  %149 = load i32, i32* %i, align 4, !dbg !14062
  %150 = load i32, i32* %n4, align 4, !dbg !14065
  %cmp152 = icmp slt i32 %149, %150, !dbg !14066
  br i1 %cmp152, label %for.body153, label %for.end192, !dbg !14067

for.body153:                                      ; preds = %for.cond151
  %151 = load i32, i32* %i, align 4, !dbg !14068
  %152 = load i32, i32* %n2, align 4, !dbg !14070
  %add154 = add nsw i32 %151, %152, !dbg !14071
  %idxprom155 = sext i32 %add154 to i64, !dbg !14072
  %153 = load float*, float** %buf, align 8, !dbg !14072
  %arrayidx156 = getelementptr inbounds float, float* %153, i64 %idxprom155, !dbg !14072
  %154 = load float, float* %arrayidx156, align 4, !dbg !14072
  %155 = load i32, i32* %i, align 4, !dbg !14073
  %156 = load i32, i32* %n, align 4, !dbg !14074
  %add157 = add nsw i32 %155, %156, !dbg !14075
  %157 = load i32, i32* %n4, align 4, !dbg !14076
  %sub158 = sub nsw i32 %add157, %157, !dbg !14077
  %idxprom159 = sext i32 %sub158 to i64, !dbg !14078
  %158 = load float*, float** %window, align 8, !dbg !14078
  %arrayidx160 = getelementptr inbounds float, float* %158, i64 %idxprom159, !dbg !14078
  %159 = load float, float* %arrayidx160, align 4, !dbg !14078
  %mul161 = fmul float %154, %159, !dbg !14079
  %160 = load i32, i32* %n2, align 4, !dbg !14080
  %sub162 = sub nsw i32 %160, 1, !dbg !14081
  %161 = load i32, i32* %i, align 4, !dbg !14082
  %sub163 = sub nsw i32 %sub162, %161, !dbg !14083
  %idxprom164 = sext i32 %sub163 to i64, !dbg !14084
  %162 = load float*, float** %saved, align 8, !dbg !14084
  %arrayidx165 = getelementptr inbounds float, float* %162, i64 %idxprom164, !dbg !14084
  %163 = load float, float* %arrayidx165, align 4, !dbg !14084
  %sub166 = fsub float -0.000000e+00, %163, !dbg !14085
  %164 = load i32, i32* %i, align 4, !dbg !14086
  %165 = load i32, i32* %n, align 4, !dbg !14087
  %mul167 = mul nsw i32 2, %165, !dbg !14088
  %add168 = add nsw i32 %164, %mul167, !dbg !14089
  %166 = load i32, i32* %n4, align 4, !dbg !14090
  %sub169 = sub nsw i32 %add168, %166, !dbg !14091
  %idxprom170 = sext i32 %sub169 to i64, !dbg !14092
  %167 = load float*, float** %window, align 8, !dbg !14092
  %arrayidx171 = getelementptr inbounds float, float* %167, i64 %idxprom170, !dbg !14092
  %168 = load float, float* %arrayidx171, align 4, !dbg !14092
  %mul172 = fmul float %sub166, %168, !dbg !14093
  %add173 = fadd float %mul161, %mul172, !dbg !14094
  %169 = load i32, i32* %n, align 4, !dbg !14095
  %170 = load i32, i32* %n2, align 4, !dbg !14096
  %add174 = add nsw i32 %169, %170, !dbg !14097
  %171 = load i32, i32* %i, align 4, !dbg !14098
  %add175 = add nsw i32 %add174, %171, !dbg !14099
  %idxprom176 = sext i32 %add175 to i64, !dbg !14100
  %172 = load float*, float** %saved, align 8, !dbg !14100
  %arrayidx177 = getelementptr inbounds float, float* %172, i64 %idxprom176, !dbg !14100
  %173 = load float, float* %arrayidx177, align 4, !dbg !14100
  %sub178 = fsub float -0.000000e+00, %173, !dbg !14101
  %174 = load i32, i32* %i, align 4, !dbg !14102
  %175 = load i32, i32* %n, align 4, !dbg !14103
  %mul179 = mul nsw i32 3, %175, !dbg !14104
  %add180 = add nsw i32 %174, %mul179, !dbg !14105
  %176 = load i32, i32* %n4, align 4, !dbg !14106
  %sub181 = sub nsw i32 %add180, %176, !dbg !14107
  %idxprom182 = sext i32 %sub181 to i64, !dbg !14108
  %177 = load float*, float** %window, align 8, !dbg !14108
  %arrayidx183 = getelementptr inbounds float, float* %177, i64 %idxprom182, !dbg !14108
  %178 = load float, float* %arrayidx183, align 4, !dbg !14108
  %mul184 = fmul float %sub178, %178, !dbg !14109
  %add185 = fadd float %add173, %mul184, !dbg !14110
  %179 = load i32, i32* %n2, align 4, !dbg !14111
  %180 = load i32, i32* %n4, align 4, !dbg !14112
  %add186 = add nsw i32 %179, %180, !dbg !14113
  %181 = load i32, i32* %i, align 4, !dbg !14114
  %add187 = add nsw i32 %add186, %181, !dbg !14115
  %idxprom188 = sext i32 %add187 to i64, !dbg !14116
  %182 = load float*, float** %out, align 8, !dbg !14116
  %arrayidx189 = getelementptr inbounds float, float* %182, i64 %idxprom188, !dbg !14116
  store float %add185, float* %arrayidx189, align 4, !dbg !14117
  br label %for.inc190, !dbg !14118

for.inc190:                                       ; preds = %for.body153
  %183 = load i32, i32* %i, align 4, !dbg !14119
  %inc191 = add nsw i32 %183, 1, !dbg !14119
  store i32 %inc191, i32* %i, align 4, !dbg !14119
  br label %for.cond151, !dbg !14121, !llvm.loop !14122

for.end192:                                       ; preds = %for.cond151
  %184 = load float*, float** %saved, align 8, !dbg !14124
  %185 = load i32, i32* %n, align 4, !dbg !14125
  %idx.ext = sext i32 %185 to i64, !dbg !14126
  %add.ptr = getelementptr inbounds float, float* %184, i64 %idx.ext, !dbg !14126
  %186 = bitcast float* %add.ptr to i8*, !dbg !14127
  %187 = load float*, float** %saved, align 8, !dbg !14128
  %188 = bitcast float* %187 to i8*, !dbg !14127
  %189 = load i32, i32* %n, align 4, !dbg !14129
  %mul193 = mul nsw i32 2, %189, !dbg !14130
  %conv = sext i32 %mul193 to i64, !dbg !14131
  %mul194 = mul i64 %conv, 4, !dbg !14132
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %186, i8* %188, i64 %mul194, i32 4, i1 false), !dbg !14127
  %190 = load float*, float** %saved, align 8, !dbg !14133
  %191 = bitcast float* %190 to i8*, !dbg !14134
  %192 = load float*, float** %buf, align 8, !dbg !14135
  %193 = bitcast float* %192 to i8*, !dbg !14134
  %194 = load i32, i32* %n, align 4, !dbg !14136
  %conv195 = sext i32 %194 to i64, !dbg !14136
  %mul196 = mul i64 %conv195, 4, !dbg !14137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %193, i64 %mul196, i32 4, i1 false), !dbg !14134
  ret void, !dbg !14138
}

; Function Attrs: nounwind uwtable
define internal void @imdct_and_windowing_960(%struct.AACContext* %ac, %struct.SingleChannelElement* %sce) #1 !dbg !14139 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %saved = alloca float*, align 8
  %swindow = alloca float*, align 8
  %lwindow_prev = alloca float*, align 8
  %swindow_prev = alloca float*, align 8
  %buf = alloca float*, align 8
  %temp = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14140, metadata !2062), !dbg !14141
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !14142, metadata !2062), !dbg !14143
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !14144, metadata !2062), !dbg !14145
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14146
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !14147
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !14145
  call void @llvm.dbg.declare(metadata float** %in, metadata !14148, metadata !2062), !dbg !14149
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14150
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 14, !dbg !14151
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !14150
  store float* %arraydecay, float** %in, align 8, !dbg !14149
  call void @llvm.dbg.declare(metadata float** %out, metadata !14152, metadata !2062), !dbg !14153
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14154
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 21, !dbg !14155
  %3 = load float*, float** %ret, align 32, !dbg !14155
  store float* %3, float** %out, align 8, !dbg !14153
  call void @llvm.dbg.declare(metadata float** %saved, metadata !14156, metadata !2062), !dbg !14157
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14158
  %saved2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 15, !dbg !14159
  %arraydecay3 = getelementptr inbounds [1536 x float], [1536 x float]* %saved2, i32 0, i32 0, !dbg !14158
  store float* %arraydecay3, float** %saved, align 8, !dbg !14157
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !14160, metadata !2062), !dbg !14161
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14162
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !14163
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !14162
  %6 = load i8, i8* %arrayidx, align 4, !dbg !14162
  %conv = zext i8 %6 to i32, !dbg !14162
  %tobool = icmp ne i32 %conv, 0, !dbg !14162
  %cond = select i1 %tobool, float* getelementptr inbounds ([120 x float], [120 x float]* @ff_aac_kbd_short_120, i32 0, i32 0), float* getelementptr inbounds ([120 x float], [120 x float]* @ff_sine_120, i32 0, i32 0), !dbg !14162
  store float* %cond, float** %swindow, align 8, !dbg !14161
  call void @llvm.dbg.declare(metadata float** %lwindow_prev, metadata !14164, metadata !2062), !dbg !14165
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14166
  %use_kb_window4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 2, !dbg !14167
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window4, i64 0, i64 1, !dbg !14166
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !14166
  %conv6 = zext i8 %8 to i32, !dbg !14166
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !14166
  %cond8 = select i1 %tobool7, float* getelementptr inbounds ([960 x float], [960 x float]* @ff_aac_kbd_long_960, i32 0, i32 0), float* getelementptr inbounds ([960 x float], [960 x float]* @ff_sine_960, i32 0, i32 0), !dbg !14166
  store float* %cond8, float** %lwindow_prev, align 8, !dbg !14165
  call void @llvm.dbg.declare(metadata float** %swindow_prev, metadata !14168, metadata !2062), !dbg !14169
  %9 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14170
  %use_kb_window9 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %9, i32 0, i32 2, !dbg !14171
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window9, i64 0, i64 1, !dbg !14170
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !14170
  %conv11 = zext i8 %10 to i32, !dbg !14170
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !14170
  %cond13 = select i1 %tobool12, float* getelementptr inbounds ([120 x float], [120 x float]* @ff_aac_kbd_short_120, i32 0, i32 0), float* getelementptr inbounds ([120 x float], [120 x float]* @ff_sine_120, i32 0, i32 0), !dbg !14170
  store float* %cond13, float** %swindow_prev, align 8, !dbg !14169
  call void @llvm.dbg.declare(metadata float** %buf, metadata !14172, metadata !2062), !dbg !14173
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14174
  %buf_mdct = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 9, !dbg !14175
  %arraydecay14 = getelementptr inbounds [1024 x float], [1024 x float]* %buf_mdct, i32 0, i32 0, !dbg !14174
  store float* %arraydecay14, float** %buf, align 8, !dbg !14173
  call void @llvm.dbg.declare(metadata float** %temp, metadata !14176, metadata !2062), !dbg !14177
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14178
  %temp15 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 23, !dbg !14179
  %arraydecay16 = getelementptr inbounds [128 x float], [128 x float]* %temp15, i32 0, i32 0, !dbg !14178
  store float* %arraydecay16, float** %temp, align 8, !dbg !14177
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14180, metadata !2062), !dbg !14181
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14182
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 1, !dbg !14184
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !14182
  %14 = load i32, i32* %arrayidx17, align 4, !dbg !14182
  %cmp = icmp eq i32 %14, 2, !dbg !14185
  br i1 %cmp, label %if.then, label %if.else, !dbg !14186

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14187
  br label %for.cond, !dbg !14190

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !14191
  %cmp19 = icmp slt i32 %15, 8, !dbg !14194
  br i1 %cmp19, label %for.body, label %for.end, !dbg !14195

for.body:                                         ; preds = %for.cond
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14196
  %mdct120 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %16, i32 0, i32 14, !dbg !14197
  %17 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct120, align 32, !dbg !14197
  %imdct_half = getelementptr inbounds %struct.MDCT15Context, %struct.MDCT15Context* %17, i32 0, i32 13, !dbg !14198
  %18 = load void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)** %imdct_half, align 8, !dbg !14198
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14199
  %mdct12021 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 14, !dbg !14200
  %20 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct12021, align 32, !dbg !14200
  %21 = load float*, float** %buf, align 8, !dbg !14201
  %22 = load i32, i32* %i, align 4, !dbg !14202
  %mul = mul nsw i32 %22, 120, !dbg !14203
  %idx.ext = sext i32 %mul to i64, !dbg !14204
  %add.ptr = getelementptr inbounds float, float* %21, i64 %idx.ext, !dbg !14204
  %23 = load float*, float** %in, align 8, !dbg !14205
  %24 = load i32, i32* %i, align 4, !dbg !14206
  %mul22 = mul nsw i32 %24, 128, !dbg !14207
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !14208
  %add.ptr24 = getelementptr inbounds float, float* %23, i64 %idx.ext23, !dbg !14208
  call void %18(%struct.MDCT15Context* %20, float* %add.ptr, float* %add.ptr24, i64 1), !dbg !14196
  br label %for.inc, !dbg !14196

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !14209
  %inc = add nsw i32 %25, 1, !dbg !14209
  store i32 %inc, i32* %i, align 4, !dbg !14209
  br label %for.cond, !dbg !14211, !llvm.loop !14212

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !14214

if.else:                                          ; preds = %entry
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14215
  %mdct960 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 16, !dbg !14217
  %27 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct960, align 16, !dbg !14217
  %imdct_half25 = getelementptr inbounds %struct.MDCT15Context, %struct.MDCT15Context* %27, i32 0, i32 13, !dbg !14218
  %28 = load void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)** %imdct_half25, align 8, !dbg !14218
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14219
  %mdct96026 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %29, i32 0, i32 16, !dbg !14220
  %30 = load %struct.MDCT15Context*, %struct.MDCT15Context** %mdct96026, align 16, !dbg !14220
  %31 = load float*, float** %buf, align 8, !dbg !14221
  %32 = load float*, float** %in, align 8, !dbg !14222
  call void %28(%struct.MDCT15Context* %30, float* %31, float* %32, i64 1), !dbg !14215
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %33 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14223
  %window_sequence27 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %33, i32 0, i32 1, !dbg !14225
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence27, i64 0, i64 1, !dbg !14223
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !14223
  %cmp29 = icmp eq i32 %34, 0, !dbg !14226
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false, !dbg !14227

lor.lhs.false:                                    ; preds = %if.end
  %35 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14228
  %window_sequence31 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %35, i32 0, i32 1, !dbg !14230
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence31, i64 0, i64 1, !dbg !14228
  %36 = load i32, i32* %arrayidx32, align 4, !dbg !14228
  %cmp33 = icmp eq i32 %36, 3, !dbg !14231
  br i1 %cmp33, label %land.lhs.true, label %if.else45, !dbg !14232

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %37 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14233
  %window_sequence35 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %37, i32 0, i32 1, !dbg !14234
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence35, i64 0, i64 0, !dbg !14233
  %38 = load i32, i32* %arrayidx36, align 4, !dbg !14233
  %cmp37 = icmp eq i32 %38, 0, !dbg !14235
  br i1 %cmp37, label %if.then44, label %lor.lhs.false39, !dbg !14236

lor.lhs.false39:                                  ; preds = %land.lhs.true
  %39 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14237
  %window_sequence40 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %39, i32 0, i32 1, !dbg !14238
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence40, i64 0, i64 0, !dbg !14237
  %40 = load i32, i32* %arrayidx41, align 4, !dbg !14237
  %cmp42 = icmp eq i32 %40, 1, !dbg !14239
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !14240

if.then44:                                        ; preds = %lor.lhs.false39, %land.lhs.true
  %41 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14242
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %41, i32 0, i32 17, !dbg !14244
  %42 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !14244
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %42, i32 0, i32 5, !dbg !14245
  %43 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !14245
  %44 = load float*, float** %out, align 8, !dbg !14246
  %45 = load float*, float** %saved, align 8, !dbg !14247
  %46 = load float*, float** %buf, align 8, !dbg !14248
  %47 = load float*, float** %lwindow_prev, align 8, !dbg !14249
  call void %43(float* %44, float* %45, float* %46, float* %47, i32 480), !dbg !14242
  br label %if.end93, !dbg !14250

if.else45:                                        ; preds = %lor.lhs.false39, %lor.lhs.false
  %48 = load float*, float** %out, align 8, !dbg !14251
  %49 = bitcast float* %48 to i8*, !dbg !14253
  %50 = load float*, float** %saved, align 8, !dbg !14254
  %51 = bitcast float* %50 to i8*, !dbg !14253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %51, i64 1680, i32 4, i1 false), !dbg !14253
  %52 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14255
  %window_sequence46 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %52, i32 0, i32 1, !dbg !14257
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence46, i64 0, i64 0, !dbg !14255
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !14255
  %cmp48 = icmp eq i32 %53, 2, !dbg !14258
  br i1 %cmp48, label %if.then50, label %if.else85, !dbg !14259

if.then50:                                        ; preds = %if.else45
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14260
  %fdsp51 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %54, i32 0, i32 17, !dbg !14262
  %55 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp51, align 8, !dbg !14262
  %vector_fmul_window52 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %55, i32 0, i32 5, !dbg !14263
  %56 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window52, align 8, !dbg !14263
  %57 = load float*, float** %out, align 8, !dbg !14264
  %add.ptr53 = getelementptr inbounds float, float* %57, i64 420, !dbg !14265
  %add.ptr54 = getelementptr inbounds float, float* %add.ptr53, i64 0, !dbg !14266
  %58 = load float*, float** %saved, align 8, !dbg !14267
  %add.ptr55 = getelementptr inbounds float, float* %58, i64 420, !dbg !14268
  %59 = load float*, float** %buf, align 8, !dbg !14269
  %add.ptr56 = getelementptr inbounds float, float* %59, i64 0, !dbg !14270
  %60 = load float*, float** %swindow_prev, align 8, !dbg !14271
  call void %56(float* %add.ptr54, float* %add.ptr55, float* %add.ptr56, float* %60, i32 60), !dbg !14260
  %61 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14272
  %fdsp57 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 17, !dbg !14273
  %62 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp57, align 8, !dbg !14273
  %vector_fmul_window58 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %62, i32 0, i32 5, !dbg !14274
  %63 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window58, align 8, !dbg !14274
  %64 = load float*, float** %out, align 8, !dbg !14275
  %add.ptr59 = getelementptr inbounds float, float* %64, i64 420, !dbg !14276
  %add.ptr60 = getelementptr inbounds float, float* %add.ptr59, i64 120, !dbg !14277
  %65 = load float*, float** %buf, align 8, !dbg !14278
  %add.ptr61 = getelementptr inbounds float, float* %65, i64 0, !dbg !14279
  %add.ptr62 = getelementptr inbounds float, float* %add.ptr61, i64 60, !dbg !14280
  %66 = load float*, float** %buf, align 8, !dbg !14281
  %add.ptr63 = getelementptr inbounds float, float* %66, i64 120, !dbg !14282
  %67 = load float*, float** %swindow, align 8, !dbg !14283
  call void %63(float* %add.ptr60, float* %add.ptr62, float* %add.ptr63, float* %67, i32 60), !dbg !14272
  %68 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14284
  %fdsp64 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %68, i32 0, i32 17, !dbg !14285
  %69 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp64, align 8, !dbg !14285
  %vector_fmul_window65 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %69, i32 0, i32 5, !dbg !14286
  %70 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window65, align 8, !dbg !14286
  %71 = load float*, float** %out, align 8, !dbg !14287
  %add.ptr66 = getelementptr inbounds float, float* %71, i64 420, !dbg !14288
  %add.ptr67 = getelementptr inbounds float, float* %add.ptr66, i64 240, !dbg !14289
  %72 = load float*, float** %buf, align 8, !dbg !14290
  %add.ptr68 = getelementptr inbounds float, float* %72, i64 120, !dbg !14291
  %add.ptr69 = getelementptr inbounds float, float* %add.ptr68, i64 60, !dbg !14292
  %73 = load float*, float** %buf, align 8, !dbg !14293
  %add.ptr70 = getelementptr inbounds float, float* %73, i64 240, !dbg !14294
  %74 = load float*, float** %swindow, align 8, !dbg !14295
  call void %70(float* %add.ptr67, float* %add.ptr69, float* %add.ptr70, float* %74, i32 60), !dbg !14284
  %75 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14296
  %fdsp71 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %75, i32 0, i32 17, !dbg !14297
  %76 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp71, align 8, !dbg !14297
  %vector_fmul_window72 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %76, i32 0, i32 5, !dbg !14298
  %77 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window72, align 8, !dbg !14298
  %78 = load float*, float** %out, align 8, !dbg !14299
  %add.ptr73 = getelementptr inbounds float, float* %78, i64 420, !dbg !14300
  %add.ptr74 = getelementptr inbounds float, float* %add.ptr73, i64 360, !dbg !14301
  %79 = load float*, float** %buf, align 8, !dbg !14302
  %add.ptr75 = getelementptr inbounds float, float* %79, i64 240, !dbg !14303
  %add.ptr76 = getelementptr inbounds float, float* %add.ptr75, i64 60, !dbg !14304
  %80 = load float*, float** %buf, align 8, !dbg !14305
  %add.ptr77 = getelementptr inbounds float, float* %80, i64 360, !dbg !14306
  %81 = load float*, float** %swindow, align 8, !dbg !14307
  call void %77(float* %add.ptr74, float* %add.ptr76, float* %add.ptr77, float* %81, i32 60), !dbg !14296
  %82 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14308
  %fdsp78 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %82, i32 0, i32 17, !dbg !14309
  %83 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp78, align 8, !dbg !14309
  %vector_fmul_window79 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %83, i32 0, i32 5, !dbg !14310
  %84 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window79, align 8, !dbg !14310
  %85 = load float*, float** %temp, align 8, !dbg !14311
  %86 = load float*, float** %buf, align 8, !dbg !14312
  %add.ptr80 = getelementptr inbounds float, float* %86, i64 360, !dbg !14313
  %add.ptr81 = getelementptr inbounds float, float* %add.ptr80, i64 60, !dbg !14314
  %87 = load float*, float** %buf, align 8, !dbg !14315
  %add.ptr82 = getelementptr inbounds float, float* %87, i64 480, !dbg !14316
  %88 = load float*, float** %swindow, align 8, !dbg !14317
  call void %84(float* %85, float* %add.ptr81, float* %add.ptr82, float* %88, i32 60), !dbg !14308
  %89 = load float*, float** %out, align 8, !dbg !14318
  %add.ptr83 = getelementptr inbounds float, float* %89, i64 420, !dbg !14319
  %add.ptr84 = getelementptr inbounds float, float* %add.ptr83, i64 480, !dbg !14320
  %90 = bitcast float* %add.ptr84 to i8*, !dbg !14321
  %91 = load float*, float** %temp, align 8, !dbg !14322
  %92 = bitcast float* %91 to i8*, !dbg !14321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %92, i64 240, i32 4, i1 false), !dbg !14321
  br label %if.end92, !dbg !14323

if.else85:                                        ; preds = %if.else45
  %93 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14324
  %fdsp86 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %93, i32 0, i32 17, !dbg !14326
  %94 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp86, align 8, !dbg !14326
  %vector_fmul_window87 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %94, i32 0, i32 5, !dbg !14327
  %95 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window87, align 8, !dbg !14327
  %96 = load float*, float** %out, align 8, !dbg !14328
  %add.ptr88 = getelementptr inbounds float, float* %96, i64 420, !dbg !14329
  %97 = load float*, float** %saved, align 8, !dbg !14330
  %add.ptr89 = getelementptr inbounds float, float* %97, i64 420, !dbg !14331
  %98 = load float*, float** %buf, align 8, !dbg !14332
  %99 = load float*, float** %swindow_prev, align 8, !dbg !14333
  call void %95(float* %add.ptr88, float* %add.ptr89, float* %98, float* %99, i32 60), !dbg !14324
  %100 = load float*, float** %out, align 8, !dbg !14334
  %add.ptr90 = getelementptr inbounds float, float* %100, i64 540, !dbg !14335
  %101 = bitcast float* %add.ptr90 to i8*, !dbg !14336
  %102 = load float*, float** %buf, align 8, !dbg !14337
  %add.ptr91 = getelementptr inbounds float, float* %102, i64 60, !dbg !14338
  %103 = bitcast float* %add.ptr91 to i8*, !dbg !14336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %103, i64 1680, i32 4, i1 false), !dbg !14336
  br label %if.end92

if.end92:                                         ; preds = %if.else85, %if.then50
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then44
  %104 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14339
  %window_sequence94 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %104, i32 0, i32 1, !dbg !14341
  %arrayidx95 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence94, i64 0, i64 0, !dbg !14339
  %105 = load i32, i32* %arrayidx95, align 4, !dbg !14339
  %cmp96 = icmp eq i32 %105, 2, !dbg !14342
  br i1 %cmp96, label %if.then98, label %if.else121, !dbg !14343

if.then98:                                        ; preds = %if.end93
  %106 = load float*, float** %saved, align 8, !dbg !14344
  %107 = bitcast float* %106 to i8*, !dbg !14346
  %108 = load float*, float** %temp, align 8, !dbg !14347
  %add.ptr99 = getelementptr inbounds float, float* %108, i64 60, !dbg !14348
  %109 = bitcast float* %add.ptr99 to i8*, !dbg !14346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %109, i64 240, i32 4, i1 false), !dbg !14346
  %110 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14349
  %fdsp100 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %110, i32 0, i32 17, !dbg !14350
  %111 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp100, align 8, !dbg !14350
  %vector_fmul_window101 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %111, i32 0, i32 5, !dbg !14351
  %112 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window101, align 8, !dbg !14351
  %113 = load float*, float** %saved, align 8, !dbg !14352
  %add.ptr102 = getelementptr inbounds float, float* %113, i64 60, !dbg !14353
  %114 = load float*, float** %buf, align 8, !dbg !14354
  %add.ptr103 = getelementptr inbounds float, float* %114, i64 480, !dbg !14355
  %add.ptr104 = getelementptr inbounds float, float* %add.ptr103, i64 60, !dbg !14356
  %115 = load float*, float** %buf, align 8, !dbg !14357
  %add.ptr105 = getelementptr inbounds float, float* %115, i64 600, !dbg !14358
  %116 = load float*, float** %swindow, align 8, !dbg !14359
  call void %112(float* %add.ptr102, float* %add.ptr104, float* %add.ptr105, float* %116, i32 60), !dbg !14349
  %117 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14360
  %fdsp106 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %117, i32 0, i32 17, !dbg !14361
  %118 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp106, align 8, !dbg !14361
  %vector_fmul_window107 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %118, i32 0, i32 5, !dbg !14362
  %119 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window107, align 8, !dbg !14362
  %120 = load float*, float** %saved, align 8, !dbg !14363
  %add.ptr108 = getelementptr inbounds float, float* %120, i64 180, !dbg !14364
  %121 = load float*, float** %buf, align 8, !dbg !14365
  %add.ptr109 = getelementptr inbounds float, float* %121, i64 600, !dbg !14366
  %add.ptr110 = getelementptr inbounds float, float* %add.ptr109, i64 60, !dbg !14367
  %122 = load float*, float** %buf, align 8, !dbg !14368
  %add.ptr111 = getelementptr inbounds float, float* %122, i64 720, !dbg !14369
  %123 = load float*, float** %swindow, align 8, !dbg !14370
  call void %119(float* %add.ptr108, float* %add.ptr110, float* %add.ptr111, float* %123, i32 60), !dbg !14360
  %124 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14371
  %fdsp112 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %124, i32 0, i32 17, !dbg !14372
  %125 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp112, align 8, !dbg !14372
  %vector_fmul_window113 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %125, i32 0, i32 5, !dbg !14373
  %126 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window113, align 8, !dbg !14373
  %127 = load float*, float** %saved, align 8, !dbg !14374
  %add.ptr114 = getelementptr inbounds float, float* %127, i64 300, !dbg !14375
  %128 = load float*, float** %buf, align 8, !dbg !14376
  %add.ptr115 = getelementptr inbounds float, float* %128, i64 720, !dbg !14377
  %add.ptr116 = getelementptr inbounds float, float* %add.ptr115, i64 60, !dbg !14378
  %129 = load float*, float** %buf, align 8, !dbg !14379
  %add.ptr117 = getelementptr inbounds float, float* %129, i64 840, !dbg !14380
  %130 = load float*, float** %swindow, align 8, !dbg !14381
  call void %126(float* %add.ptr114, float* %add.ptr116, float* %add.ptr117, float* %130, i32 60), !dbg !14371
  %131 = load float*, float** %saved, align 8, !dbg !14382
  %add.ptr118 = getelementptr inbounds float, float* %131, i64 420, !dbg !14383
  %132 = bitcast float* %add.ptr118 to i8*, !dbg !14384
  %133 = load float*, float** %buf, align 8, !dbg !14385
  %add.ptr119 = getelementptr inbounds float, float* %133, i64 840, !dbg !14386
  %add.ptr120 = getelementptr inbounds float, float* %add.ptr119, i64 60, !dbg !14387
  %134 = bitcast float* %add.ptr120 to i8*, !dbg !14384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %134, i64 240, i32 4, i1 false), !dbg !14384
  br label %if.end134, !dbg !14388

if.else121:                                       ; preds = %if.end93
  %135 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14389
  %window_sequence122 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %135, i32 0, i32 1, !dbg !14392
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence122, i64 0, i64 0, !dbg !14389
  %136 = load i32, i32* %arrayidx123, align 4, !dbg !14389
  %cmp124 = icmp eq i32 %136, 1, !dbg !14393
  br i1 %cmp124, label %if.then126, label %if.else131, !dbg !14389

if.then126:                                       ; preds = %if.else121
  %137 = load float*, float** %saved, align 8, !dbg !14394
  %138 = bitcast float* %137 to i8*, !dbg !14396
  %139 = load float*, float** %buf, align 8, !dbg !14397
  %add.ptr127 = getelementptr inbounds float, float* %139, i64 480, !dbg !14398
  %140 = bitcast float* %add.ptr127 to i8*, !dbg !14396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %140, i64 1680, i32 4, i1 false), !dbg !14396
  %141 = load float*, float** %saved, align 8, !dbg !14399
  %add.ptr128 = getelementptr inbounds float, float* %141, i64 420, !dbg !14400
  %142 = bitcast float* %add.ptr128 to i8*, !dbg !14401
  %143 = load float*, float** %buf, align 8, !dbg !14402
  %add.ptr129 = getelementptr inbounds float, float* %143, i64 840, !dbg !14403
  %add.ptr130 = getelementptr inbounds float, float* %add.ptr129, i64 60, !dbg !14404
  %144 = bitcast float* %add.ptr130 to i8*, !dbg !14401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %144, i64 240, i32 4, i1 false), !dbg !14401
  br label %if.end133, !dbg !14405

if.else131:                                       ; preds = %if.else121
  %145 = load float*, float** %saved, align 8, !dbg !14406
  %146 = bitcast float* %145 to i8*, !dbg !14408
  %147 = load float*, float** %buf, align 8, !dbg !14409
  %add.ptr132 = getelementptr inbounds float, float* %147, i64 480, !dbg !14410
  %148 = bitcast float* %add.ptr132 to i8*, !dbg !14408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %148, i64 1920, i32 4, i1 false), !dbg !14408
  br label %if.end133

if.end133:                                        ; preds = %if.else131, %if.then126
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then98
  ret void, !dbg !14411
}

; Function Attrs: nounwind uwtable
define internal void @apply_channel_coupling(%struct.AACContext* %ac, %struct.ChannelElement* %cc, i32 %type, i32 %elem_id, i32 %coupling_point, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* %apply_coupling_method) #1 !dbg !14412 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %cc.addr = alloca %struct.ChannelElement*, align 8
  %type.addr = alloca i32, align 4
  %elem_id.addr = alloca i32, align 4
  %coupling_point.addr = alloca i32, align 4
  %apply_coupling_method.addr = alloca void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, align 8
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %cce = alloca %struct.ChannelElement*, align 8
  %index = alloca i32, align 4
  %coup4 = alloca %struct.ChannelCoupling*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14418, metadata !2062), !dbg !14419
  store %struct.ChannelElement* %cc, %struct.ChannelElement** %cc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cc.addr, metadata !14420, metadata !2062), !dbg !14421
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14422, metadata !2062), !dbg !14423
  store i32 %elem_id, i32* %elem_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_id.addr, metadata !14424, metadata !2062), !dbg !14425
  store i32 %coupling_point, i32* %coupling_point.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coupling_point.addr, metadata !14426, metadata !2062), !dbg !14427
  store void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)* %apply_coupling_method, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, metadata !14428, metadata !2062), !dbg !14429
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14430, metadata !2062), !dbg !14431
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14432, metadata !2062), !dbg !14433
  store i32 0, i32* %i, align 4, !dbg !14434
  br label %for.cond, !dbg !14436

for.cond:                                         ; preds = %for.inc46, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14437
  %cmp = icmp slt i32 %0, 16, !dbg !14440
  br i1 %cmp, label %for.body, label %for.end48, !dbg !14441

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce, metadata !14442, metadata !2062), !dbg !14444
  %1 = load i32, i32* %i, align 4, !dbg !14445
  %idxprom = sext i32 %1 to i64, !dbg !14446
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14446
  %che = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 5, !dbg !14447
  %arrayidx = getelementptr inbounds [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]]* %che, i64 0, i64 2, !dbg !14446
  %arrayidx1 = getelementptr inbounds [16 x %struct.ChannelElement*], [16 x %struct.ChannelElement*]* %arrayidx, i64 0, i64 %idxprom, !dbg !14446
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %arrayidx1, align 8, !dbg !14446
  store %struct.ChannelElement* %3, %struct.ChannelElement** %cce, align 8, !dbg !14444
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14448, metadata !2062), !dbg !14449
  store i32 0, i32* %index, align 4, !dbg !14449
  %4 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !14450
  %tobool = icmp ne %struct.ChannelElement* %4, null, !dbg !14450
  br i1 %tobool, label %land.lhs.true, label %if.end45, !dbg !14452

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !14453
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %5, i32 0, i32 8, !dbg !14455
  %coupling_point2 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 0, !dbg !14456
  %6 = load i32, i32* %coupling_point2, align 32, !dbg !14456
  %7 = load i32, i32* %coupling_point.addr, align 4, !dbg !14457
  %cmp3 = icmp eq i32 %6, %7, !dbg !14458
  br i1 %cmp3, label %if.then, label %if.end45, !dbg !14459

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ChannelCoupling** %coup4, metadata !14460, metadata !2062), !dbg !14463
  %8 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !14464
  %coup5 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %8, i32 0, i32 8, !dbg !14465
  store %struct.ChannelCoupling* %coup5, %struct.ChannelCoupling** %coup4, align 8, !dbg !14463
  store i32 0, i32* %c, align 4, !dbg !14466
  br label %for.cond6, !dbg !14468

for.cond6:                                        ; preds = %for.inc, %if.then
  %9 = load i32, i32* %c, align 4, !dbg !14469
  %10 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14472
  %num_coupled = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %10, i32 0, i32 1, !dbg !14473
  %11 = load i32, i32* %num_coupled, align 4, !dbg !14473
  %cmp7 = icmp sle i32 %9, %11, !dbg !14474
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !14475

for.body8:                                        ; preds = %for.cond6
  %12 = load i32, i32* %c, align 4, !dbg !14476
  %idxprom9 = sext i32 %12 to i64, !dbg !14479
  %13 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14479
  %type10 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %13, i32 0, i32 2, !dbg !14480
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %type10, i64 0, i64 %idxprom9, !dbg !14479
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !14479
  %15 = load i32, i32* %type.addr, align 4, !dbg !14481
  %cmp12 = icmp eq i32 %14, %15, !dbg !14482
  br i1 %cmp12, label %land.lhs.true13, label %if.else, !dbg !14483

land.lhs.true13:                                  ; preds = %for.body8
  %16 = load i32, i32* %c, align 4, !dbg !14484
  %idxprom14 = sext i32 %16 to i64, !dbg !14486
  %17 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14486
  %id_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %17, i32 0, i32 3, !dbg !14487
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %id_select, i64 0, i64 %idxprom14, !dbg !14486
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !14486
  %19 = load i32, i32* %elem_id.addr, align 4, !dbg !14488
  %cmp16 = icmp eq i32 %18, %19, !dbg !14489
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !14490

if.then17:                                        ; preds = %land.lhs.true13
  %20 = load i32, i32* %c, align 4, !dbg !14491
  %idxprom18 = sext i32 %20 to i64, !dbg !14494
  %21 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14494
  %ch_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %21, i32 0, i32 4, !dbg !14495
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select, i64 0, i64 %idxprom18, !dbg !14494
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !14494
  %cmp20 = icmp ne i32 %22, 1, !dbg !14496
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !14497

if.then21:                                        ; preds = %if.then17
  %23 = load void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8, !dbg !14498
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14500
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cc.addr, align 8, !dbg !14501
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !14502
  %arrayidx22 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !14501
  %26 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !14503
  %27 = load i32, i32* %index, align 4, !dbg !14504
  call void %23(%struct.AACContext* %24, %struct.SingleChannelElement* %arrayidx22, %struct.ChannelElement* %26, i32 %27), !dbg !14498
  %28 = load i32, i32* %c, align 4, !dbg !14505
  %idxprom23 = sext i32 %28 to i64, !dbg !14507
  %29 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14507
  %ch_select24 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %29, i32 0, i32 4, !dbg !14508
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select24, i64 0, i64 %idxprom23, !dbg !14507
  %30 = load i32, i32* %arrayidx25, align 4, !dbg !14507
  %cmp26 = icmp ne i32 %30, 0, !dbg !14509
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !14510

if.then27:                                        ; preds = %if.then21
  %31 = load i32, i32* %index, align 4, !dbg !14511
  %inc = add nsw i32 %31, 1, !dbg !14511
  store i32 %inc, i32* %index, align 4, !dbg !14511
  br label %if.end, !dbg !14512

if.end:                                           ; preds = %if.then27, %if.then21
  br label %if.end28, !dbg !14513

if.end28:                                         ; preds = %if.end, %if.then17
  %32 = load i32, i32* %c, align 4, !dbg !14514
  %idxprom29 = sext i32 %32 to i64, !dbg !14516
  %33 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14516
  %ch_select30 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %33, i32 0, i32 4, !dbg !14517
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select30, i64 0, i64 %idxprom29, !dbg !14516
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !14516
  %cmp32 = icmp ne i32 %34, 2, !dbg !14518
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !14519

if.then33:                                        ; preds = %if.end28
  %35 = load void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)*, void (%struct.AACContext*, %struct.SingleChannelElement*, %struct.ChannelElement*, i32)** %apply_coupling_method.addr, align 8, !dbg !14520
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14521
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %cc.addr, align 8, !dbg !14522
  %ch34 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i32 0, i32 7, !dbg !14523
  %arrayidx35 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch34, i64 0, i64 1, !dbg !14522
  %38 = load %struct.ChannelElement*, %struct.ChannelElement** %cce, align 8, !dbg !14524
  %39 = load i32, i32* %index, align 4, !dbg !14525
  %inc36 = add nsw i32 %39, 1, !dbg !14525
  store i32 %inc36, i32* %index, align 4, !dbg !14525
  call void %35(%struct.AACContext* %36, %struct.SingleChannelElement* %arrayidx35, %struct.ChannelElement* %38, i32 %39), !dbg !14520
  br label %if.end37, !dbg !14520

if.end37:                                         ; preds = %if.then33, %if.end28
  br label %if.end43, !dbg !14526

if.else:                                          ; preds = %land.lhs.true13, %for.body8
  %40 = load i32, i32* %c, align 4, !dbg !14527
  %idxprom38 = sext i32 %40 to i64, !dbg !14528
  %41 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup4, align 8, !dbg !14528
  %ch_select39 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %41, i32 0, i32 4, !dbg !14529
  %arrayidx40 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select39, i64 0, i64 %idxprom38, !dbg !14528
  %42 = load i32, i32* %arrayidx40, align 4, !dbg !14528
  %cmp41 = icmp eq i32 %42, 3, !dbg !14530
  %conv = zext i1 %cmp41 to i32, !dbg !14530
  %add = add nsw i32 1, %conv, !dbg !14531
  %43 = load i32, i32* %index, align 4, !dbg !14532
  %add42 = add nsw i32 %43, %add, !dbg !14532
  store i32 %add42, i32* %index, align 4, !dbg !14532
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end37
  br label %for.inc, !dbg !14533

for.inc:                                          ; preds = %if.end43
  %44 = load i32, i32* %c, align 4, !dbg !14534
  %inc44 = add nsw i32 %44, 1, !dbg !14534
  store i32 %inc44, i32* %c, align 4, !dbg !14534
  br label %for.cond6, !dbg !14536, !llvm.loop !14537

for.end:                                          ; preds = %for.cond6
  br label %if.end45, !dbg !14539

if.end45:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc46, !dbg !14540

for.inc46:                                        ; preds = %if.end45
  %45 = load i32, i32* %i, align 4, !dbg !14541
  %inc47 = add nsw i32 %45, 1, !dbg !14541
  store i32 %inc47, i32* %i, align 4, !dbg !14541
  br label %for.cond, !dbg !14543, !llvm.loop !14544

for.end48:                                        ; preds = %for.cond
  ret void, !dbg !14546
}

; Function Attrs: nounwind uwtable
define internal void @apply_dependent_coupling(%struct.AACContext* %ac, %struct.SingleChannelElement* %target, %struct.ChannelElement* %cce, i32 %index) #1 !dbg !14547 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %target.addr = alloca %struct.SingleChannelElement*, align 8
  %cce.addr = alloca %struct.ChannelElement*, align 8
  %index.addr = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %offsets = alloca i16*, align 8
  %dest = alloca float*, align 8
  %src = alloca float*, align 8
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %group = alloca i32, align 4
  %k = alloca i32, align 4
  %idx = alloca i32, align 4
  %gain = alloca float, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14548, metadata !2062), !dbg !14549
  store %struct.SingleChannelElement* %target, %struct.SingleChannelElement** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %target.addr, metadata !14550, metadata !2062), !dbg !14551
  store %struct.ChannelElement* %cce, %struct.ChannelElement** %cce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce.addr, metadata !14552, metadata !2062), !dbg !14553
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14554, metadata !2062), !dbg !14555
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !14556, metadata !2062), !dbg !14557
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14558
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !14559
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !14558
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !14560
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !14557
  call void @llvm.dbg.declare(metadata i16** %offsets, metadata !14561, metadata !2062), !dbg !14562
  %1 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14563
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %1, i32 0, i32 6, !dbg !14564
  %2 = load i16*, i16** %swb_offset, align 8, !dbg !14564
  store i16* %2, i16** %offsets, align 8, !dbg !14562
  call void @llvm.dbg.declare(metadata float** %dest, metadata !14565, metadata !2062), !dbg !14566
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %target.addr, align 8, !dbg !14567
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 14, !dbg !14568
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !14567
  store float* %arraydecay, float** %dest, align 8, !dbg !14566
  call void @llvm.dbg.declare(metadata float** %src, metadata !14569, metadata !2062), !dbg !14570
  %4 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14571
  %ch2 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %4, i32 0, i32 7, !dbg !14572
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch2, i64 0, i64 0, !dbg !14571
  %coeffs4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 14, !dbg !14573
  %arraydecay5 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs4, i32 0, i32 0, !dbg !14571
  store float* %arraydecay5, float** %src, align 8, !dbg !14570
  call void @llvm.dbg.declare(metadata i32* %g, metadata !14574, metadata !2062), !dbg !14575
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14576, metadata !2062), !dbg !14577
  call void @llvm.dbg.declare(metadata i32* %group, metadata !14578, metadata !2062), !dbg !14579
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14580, metadata !2062), !dbg !14581
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14582, metadata !2062), !dbg !14583
  store i32 0, i32* %idx, align 4, !dbg !14583
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14584
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 24, !dbg !14586
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !14584
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx6, i32 0, i32 0, !dbg !14587
  %object_type = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 0, !dbg !14588
  %6 = load i32, i32* %object_type, align 8, !dbg !14588
  %cmp = icmp eq i32 %6, 4, !dbg !14589
  br i1 %cmp, label %if.then, label %if.end, !dbg !14590

if.then:                                          ; preds = %entry
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14591
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !14593
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14593
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !14591
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.75, i32 0, i32 0)), !dbg !14594
  br label %for.end71, !dbg !14595

if.end:                                           ; preds = %entry
  store i32 0, i32* %g, align 4, !dbg !14596
  br label %for.cond, !dbg !14598

for.cond:                                         ; preds = %for.inc69, %if.end
  %10 = load i32, i32* %g, align 4, !dbg !14599
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14602
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 3, !dbg !14603
  %12 = load i32, i32* %num_window_groups, align 8, !dbg !14603
  %cmp7 = icmp slt i32 %10, %12, !dbg !14604
  br i1 %cmp7, label %for.body, label %for.end71, !dbg !14605

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14606
  br label %for.cond8, !dbg !14609

for.cond8:                                        ; preds = %for.inc53, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !14610
  %14 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14613
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %14, i32 0, i32 0, !dbg !14614
  %15 = load i8, i8* %max_sfb, align 8, !dbg !14614
  %conv = zext i8 %15 to i32, !dbg !14613
  %cmp9 = icmp slt i32 %13, %conv, !dbg !14615
  br i1 %cmp9, label %for.body11, label %for.end56, !dbg !14616

for.body11:                                       ; preds = %for.cond8
  %16 = load i32, i32* %idx, align 4, !dbg !14617
  %idxprom = sext i32 %16 to i64, !dbg !14620
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14620
  %ch12 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 7, !dbg !14621
  %arrayidx13 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch12, i64 0, i64 0, !dbg !14620
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx13, i32 0, i32 3, !dbg !14622
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom, !dbg !14620
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !14620
  %cmp15 = icmp ne i32 %18, 0, !dbg !14623
  br i1 %cmp15, label %if.then17, label %if.end52, !dbg !14624

if.then17:                                        ; preds = %for.body11
  call void @llvm.dbg.declare(metadata float* %gain, metadata !14625, metadata !2062), !dbg !14627
  %19 = load i32, i32* %idx, align 4, !dbg !14628
  %idxprom18 = sext i32 %19 to i64, !dbg !14629
  %20 = load i32, i32* %index.addr, align 4, !dbg !14630
  %idxprom19 = sext i32 %20 to i64, !dbg !14629
  %21 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14629
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %21, i32 0, i32 8, !dbg !14631
  %gain20 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 5, !dbg !14632
  %arrayidx21 = getelementptr inbounds [16 x [120 x float]], [16 x [120 x float]]* %gain20, i64 0, i64 %idxprom19, !dbg !14629
  %arrayidx22 = getelementptr inbounds [120 x float], [120 x float]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !14629
  %22 = load float, float* %arrayidx22, align 4, !dbg !14629
  store float %22, float* %gain, align 4, !dbg !14627
  store i32 0, i32* %group, align 4, !dbg !14633
  br label %for.cond23, !dbg !14635

for.cond23:                                       ; preds = %for.inc49, %if.then17
  %23 = load i32, i32* %group, align 4, !dbg !14636
  %24 = load i32, i32* %g, align 4, !dbg !14639
  %idxprom24 = sext i32 %24 to i64, !dbg !14640
  %25 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14640
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %25, i32 0, i32 4, !dbg !14641
  %arrayidx25 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom24, !dbg !14640
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !14640
  %conv26 = zext i8 %26 to i32, !dbg !14640
  %cmp27 = icmp slt i32 %23, %conv26, !dbg !14642
  br i1 %cmp27, label %for.body29, label %for.end51, !dbg !14643

for.body29:                                       ; preds = %for.cond23
  %27 = load i32, i32* %i, align 4, !dbg !14644
  %idxprom30 = sext i32 %27 to i64, !dbg !14647
  %28 = load i16*, i16** %offsets, align 8, !dbg !14647
  %arrayidx31 = getelementptr inbounds i16, i16* %28, i64 %idxprom30, !dbg !14647
  %29 = load i16, i16* %arrayidx31, align 2, !dbg !14647
  %conv32 = zext i16 %29 to i32, !dbg !14647
  store i32 %conv32, i32* %k, align 4, !dbg !14648
  br label %for.cond33, !dbg !14649

for.cond33:                                       ; preds = %for.inc, %for.body29
  %30 = load i32, i32* %k, align 4, !dbg !14650
  %31 = load i32, i32* %i, align 4, !dbg !14653
  %add = add nsw i32 %31, 1, !dbg !14654
  %idxprom34 = sext i32 %add to i64, !dbg !14655
  %32 = load i16*, i16** %offsets, align 8, !dbg !14655
  %arrayidx35 = getelementptr inbounds i16, i16* %32, i64 %idxprom34, !dbg !14655
  %33 = load i16, i16* %arrayidx35, align 2, !dbg !14655
  %conv36 = zext i16 %33 to i32, !dbg !14655
  %cmp37 = icmp slt i32 %30, %conv36, !dbg !14656
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !14657

for.body39:                                       ; preds = %for.cond33
  %34 = load float, float* %gain, align 4, !dbg !14658
  %35 = load i32, i32* %group, align 4, !dbg !14660
  %mul = mul nsw i32 %35, 128, !dbg !14661
  %36 = load i32, i32* %k, align 4, !dbg !14662
  %add40 = add nsw i32 %mul, %36, !dbg !14663
  %idxprom41 = sext i32 %add40 to i64, !dbg !14664
  %37 = load float*, float** %src, align 8, !dbg !14664
  %arrayidx42 = getelementptr inbounds float, float* %37, i64 %idxprom41, !dbg !14664
  %38 = load float, float* %arrayidx42, align 4, !dbg !14664
  %mul43 = fmul float %34, %38, !dbg !14665
  %39 = load i32, i32* %group, align 4, !dbg !14666
  %mul44 = mul nsw i32 %39, 128, !dbg !14667
  %40 = load i32, i32* %k, align 4, !dbg !14668
  %add45 = add nsw i32 %mul44, %40, !dbg !14669
  %idxprom46 = sext i32 %add45 to i64, !dbg !14670
  %41 = load float*, float** %dest, align 8, !dbg !14670
  %arrayidx47 = getelementptr inbounds float, float* %41, i64 %idxprom46, !dbg !14670
  %42 = load float, float* %arrayidx47, align 4, !dbg !14671
  %add48 = fadd float %42, %mul43, !dbg !14671
  store float %add48, float* %arrayidx47, align 4, !dbg !14671
  br label %for.inc, !dbg !14672

for.inc:                                          ; preds = %for.body39
  %43 = load i32, i32* %k, align 4, !dbg !14673
  %inc = add nsw i32 %43, 1, !dbg !14673
  store i32 %inc, i32* %k, align 4, !dbg !14673
  br label %for.cond33, !dbg !14675, !llvm.loop !14676

for.end:                                          ; preds = %for.cond33
  br label %for.inc49, !dbg !14678

for.inc49:                                        ; preds = %for.end
  %44 = load i32, i32* %group, align 4, !dbg !14679
  %inc50 = add nsw i32 %44, 1, !dbg !14679
  store i32 %inc50, i32* %group, align 4, !dbg !14679
  br label %for.cond23, !dbg !14681, !llvm.loop !14682

for.end51:                                        ; preds = %for.cond23
  br label %if.end52, !dbg !14684

if.end52:                                         ; preds = %for.end51, %for.body11
  br label %for.inc53, !dbg !14685

for.inc53:                                        ; preds = %if.end52
  %45 = load i32, i32* %i, align 4, !dbg !14686
  %inc54 = add nsw i32 %45, 1, !dbg !14686
  store i32 %inc54, i32* %i, align 4, !dbg !14686
  %46 = load i32, i32* %idx, align 4, !dbg !14688
  %inc55 = add nsw i32 %46, 1, !dbg !14688
  store i32 %inc55, i32* %idx, align 4, !dbg !14688
  br label %for.cond8, !dbg !14689, !llvm.loop !14690

for.end56:                                        ; preds = %for.cond8
  %47 = load i32, i32* %g, align 4, !dbg !14692
  %idxprom57 = sext i32 %47 to i64, !dbg !14693
  %48 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14693
  %group_len58 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %48, i32 0, i32 4, !dbg !14694
  %arrayidx59 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len58, i64 0, i64 %idxprom57, !dbg !14693
  %49 = load i8, i8* %arrayidx59, align 1, !dbg !14693
  %conv60 = zext i8 %49 to i32, !dbg !14693
  %mul61 = mul nsw i32 %conv60, 128, !dbg !14695
  %50 = load float*, float** %dest, align 8, !dbg !14696
  %idx.ext = sext i32 %mul61 to i64, !dbg !14696
  %add.ptr = getelementptr inbounds float, float* %50, i64 %idx.ext, !dbg !14696
  store float* %add.ptr, float** %dest, align 8, !dbg !14696
  %51 = load i32, i32* %g, align 4, !dbg !14697
  %idxprom62 = sext i32 %51 to i64, !dbg !14698
  %52 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !14698
  %group_len63 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %52, i32 0, i32 4, !dbg !14699
  %arrayidx64 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len63, i64 0, i64 %idxprom62, !dbg !14698
  %53 = load i8, i8* %arrayidx64, align 1, !dbg !14698
  %conv65 = zext i8 %53 to i32, !dbg !14698
  %mul66 = mul nsw i32 %conv65, 128, !dbg !14700
  %54 = load float*, float** %src, align 8, !dbg !14701
  %idx.ext67 = sext i32 %mul66 to i64, !dbg !14701
  %add.ptr68 = getelementptr inbounds float, float* %54, i64 %idx.ext67, !dbg !14701
  store float* %add.ptr68, float** %src, align 8, !dbg !14701
  br label %for.inc69, !dbg !14702

for.inc69:                                        ; preds = %for.end56
  %55 = load i32, i32* %g, align 4, !dbg !14703
  %inc70 = add nsw i32 %55, 1, !dbg !14703
  store i32 %inc70, i32* %g, align 4, !dbg !14703
  br label %for.cond, !dbg !14705, !llvm.loop !14706

for.end71:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !14708
}

declare void @ff_sbr_apply(%struct.AACContext*, %struct.SpectralBandReplication*, i32, float*, float*) #2

; Function Attrs: nounwind uwtable
define internal void @apply_independent_coupling(%struct.AACContext* %ac, %struct.SingleChannelElement* %target, %struct.ChannelElement* %cce, i32 %index) #1 !dbg !14709 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %target.addr = alloca %struct.SingleChannelElement*, align 8
  %cce.addr = alloca %struct.ChannelElement*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %gain = alloca float, align 4
  %src = alloca float*, align 8
  %dest = alloca float*, align 8
  %len = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14710, metadata !2062), !dbg !14711
  store %struct.SingleChannelElement* %target, %struct.SingleChannelElement** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %target.addr, metadata !14712, metadata !2062), !dbg !14713
  store %struct.ChannelElement* %cce, %struct.ChannelElement** %cce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cce.addr, metadata !14714, metadata !2062), !dbg !14715
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14716, metadata !2062), !dbg !14717
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14718, metadata !2062), !dbg !14719
  call void @llvm.dbg.declare(metadata float* %gain, metadata !14720, metadata !2062), !dbg !14721
  %0 = load i32, i32* %index.addr, align 4, !dbg !14722
  %idxprom = sext i32 %0 to i64, !dbg !14723
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14723
  %coup = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 8, !dbg !14724
  %gain1 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %coup, i32 0, i32 5, !dbg !14725
  %arrayidx = getelementptr inbounds [16 x [120 x float]], [16 x [120 x float]]* %gain1, i64 0, i64 %idxprom, !dbg !14723
  %arrayidx2 = getelementptr inbounds [120 x float], [120 x float]* %arrayidx, i64 0, i64 0, !dbg !14723
  %2 = load float, float* %arrayidx2, align 8, !dbg !14723
  store float %2, float* %gain, align 4, !dbg !14721
  call void @llvm.dbg.declare(metadata float** %src, metadata !14726, metadata !2062), !dbg !14727
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cce.addr, align 8, !dbg !14728
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 7, !dbg !14729
  %arrayidx3 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !14728
  %ret = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx3, i32 0, i32 21, !dbg !14730
  %4 = load float*, float** %ret, align 32, !dbg !14730
  store float* %4, float** %src, align 8, !dbg !14727
  call void @llvm.dbg.declare(metadata float** %dest, metadata !14731, metadata !2062), !dbg !14732
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %target.addr, align 8, !dbg !14733
  %ret4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 21, !dbg !14734
  %6 = load float*, float** %ret4, align 32, !dbg !14734
  store float* %6, float** %dest, align 8, !dbg !14732
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14735, metadata !2062), !dbg !14736
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14737
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 24, !dbg !14738
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !14737
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !14739
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 4, !dbg !14740
  %8 = load i32, i32* %sbr, align 8, !dbg !14740
  %cmp = icmp eq i32 %8, 1, !dbg !14741
  %conv = zext i1 %cmp to i32, !dbg !14741
  %shl = shl i32 1024, %conv, !dbg !14742
  store i32 %shl, i32* %len, align 4, !dbg !14736
  store i32 0, i32* %i, align 4, !dbg !14743
  br label %for.cond, !dbg !14745

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !14746
  %10 = load i32, i32* %len, align 4, !dbg !14749
  %cmp6 = icmp slt i32 %9, %10, !dbg !14750
  br i1 %cmp6, label %for.body, label %for.end, !dbg !14751

for.body:                                         ; preds = %for.cond
  %11 = load float, float* %gain, align 4, !dbg !14752
  %12 = load i32, i32* %i, align 4, !dbg !14753
  %idxprom8 = sext i32 %12 to i64, !dbg !14754
  %13 = load float*, float** %src, align 8, !dbg !14754
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 %idxprom8, !dbg !14754
  %14 = load float, float* %arrayidx9, align 4, !dbg !14754
  %mul = fmul float %11, %14, !dbg !14755
  %15 = load i32, i32* %i, align 4, !dbg !14756
  %idxprom10 = sext i32 %15 to i64, !dbg !14757
  %16 = load float*, float** %dest, align 8, !dbg !14757
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 %idxprom10, !dbg !14757
  %17 = load float, float* %arrayidx11, align 4, !dbg !14758
  %add = fadd float %17, %mul, !dbg !14758
  store float %add, float* %arrayidx11, align 4, !dbg !14758
  br label %for.inc, !dbg !14757

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !14759
  %inc = add nsw i32 %18, 1, !dbg !14759
  store i32 %inc, i32* %i, align 4, !dbg !14759
  br label %for.cond, !dbg !14761, !llvm.loop !14762

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14764
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !14765 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6126, metadata !2062), !dbg !14766
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !14768, metadata !2062), !dbg !14769
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14770, metadata !2062), !dbg !14771
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14772, metadata !2062), !dbg !14773
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !14774, metadata !2062), !dbg !14775
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14776
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !14777
  %1 = load i32, i32* %index, align 8, !dbg !14777
  store i32 %1, i32* %re_index, align 4, !dbg !14775
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !14778, metadata !2062), !dbg !14779
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !14780
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !14781
  %3 = load i8*, i8** %buffer, align 8, !dbg !14781
  %4 = load i32, i32* %re_index, align 4, !dbg !14782
  %shr = lshr i32 %4, 3, !dbg !14783
  %idx.ext = zext i32 %shr to i64, !dbg !14784
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !14784
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !14785
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !14785
  %6 = load i32, i32* %l, align 1, !dbg !14785
  store i32 %6, i32* %x.addr.i, align 4, !dbg !14786
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !14787
  %shl.i = shl i32 %7, 8, !dbg !14788
  %and.i = and i32 %shl.i, 65280, !dbg !14789
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !14790
  %shr.i = lshr i32 %8, 8, !dbg !14791
  %and1.i = and i32 %shr.i, 255, !dbg !14792
  %or.i = or i32 %and.i, %and1.i, !dbg !14793
  %shl2.i = shl i32 %or.i, 16, !dbg !14794
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !14795
  %shr3.i = lshr i32 %9, 16, !dbg !14796
  %shl4.i = shl i32 %shr3.i, 8, !dbg !14797
  %and5.i = and i32 %shl4.i, 65280, !dbg !14798
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !14799
  %shr6.i = lshr i32 %10, 16, !dbg !14800
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !14801
  %and8.i = and i32 %shr7.i, 255, !dbg !14802
  %or9.i = or i32 %and5.i, %and8.i, !dbg !14803
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !14804
  %11 = load i32, i32* %re_index, align 4, !dbg !14805
  %and = and i32 %11, 7, !dbg !14806
  %shl = shl i32 %or10.i, %and, !dbg !14807
  store i32 %shl, i32* %re_cache, align 4, !dbg !14808
  %12 = load i32, i32* %re_cache, align 4, !dbg !14809
  %13 = load i32, i32* %n.addr, align 4, !dbg !14810
  %conv = trunc i32 %13 to i8, !dbg !14810
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !14811
  store i32 %call3, i32* %tmp, align 4, !dbg !14812
  %14 = load i32, i32* %tmp, align 4, !dbg !14813
  ret i32 %14, !dbg !14814
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_adts_frame_header(%struct.AACContext* %ac, %struct.GetBitContext* %gb) #1 !dbg !14815 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %size = alloca i32, align 4
  %hdr_info = alloca %struct.AACADTSHeaderInfo, align 4
  %layout_map = alloca [64 x [3 x i8]], align 16
  %layout_map_tags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !14818, metadata !2062), !dbg !14819
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14820, metadata !2062), !dbg !14821
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14822, metadata !2062), !dbg !14823
  call void @llvm.dbg.declare(metadata %struct.AACADTSHeaderInfo* %hdr_info, metadata !14824, metadata !2062), !dbg !14837
  call void @llvm.dbg.declare(metadata [64 x [3 x i8]]* %layout_map, metadata !14838, metadata !2062), !dbg !14839
  call void @llvm.dbg.declare(metadata i32* %layout_map_tags, metadata !14840, metadata !2062), !dbg !14841
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14842, metadata !2062), !dbg !14843
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14844
  %call = call i32 @ff_adts_header_parse(%struct.GetBitContext* %0, %struct.AACADTSHeaderInfo* %hdr_info), !dbg !14845
  store i32 %call, i32* %size, align 4, !dbg !14846
  %1 = load i32, i32* %size, align 4, !dbg !14847
  %cmp = icmp sgt i32 %1, 0, !dbg !14849
  br i1 %cmp, label %if.then, label %if.end112, !dbg !14850

if.then:                                          ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14851
  %warned_num_aac_frames = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 25, !dbg !14854
  %3 = load i32, i32* %warned_num_aac_frames, align 16, !dbg !14854
  %tobool = icmp ne i32 %3, 0, !dbg !14851
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14855

land.lhs.true:                                    ; preds = %if.then
  %num_aac_frames = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 7, !dbg !14856
  %4 = load i8, i8* %num_aac_frames, align 4, !dbg !14856
  %conv = zext i8 %4 to i32, !dbg !14858
  %cmp1 = icmp ne i32 %conv, 1, !dbg !14859
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !14860

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14861
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !14863
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !14863
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !14861
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.81, i32 0, i32 0)), !dbg !14864
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14865
  %warned_num_aac_frames4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 25, !dbg !14866
  store i32 1, i32* %warned_num_aac_frames4, align 16, !dbg !14867
  br label %if.end, !dbg !14868

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14869
  %call5 = call i32 @push_output_configuration(%struct.AACContext* %9), !dbg !14870
  %chan_config = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !14871
  %10 = load i8, i8* %chan_config, align 1, !dbg !14871
  %tobool6 = icmp ne i8 %10, 0, !dbg !14873
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !14874

if.then7:                                         ; preds = %if.end
  %chan_config8 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !14875
  %11 = load i8, i8* %chan_config8, align 1, !dbg !14875
  %conv9 = zext i8 %11 to i32, !dbg !14877
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14878
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 24, !dbg !14879
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !14878
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !14880
  %chan_config10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !14881
  store i32 %conv9, i32* %chan_config10, align 4, !dbg !14882
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14883
  %avctx11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 1, !dbg !14885
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !14885
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !14886
  %chan_config12 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !14887
  %15 = load i8, i8* %chan_config12, align 1, !dbg !14887
  %conv13 = zext i8 %15 to i32, !dbg !14888
  %call14 = call i32 @set_default_channel_config(%struct.AVCodecContext* %14, [3 x i8]* %arraydecay, i32* %layout_map_tags, i32 %conv13), !dbg !14889
  store i32 %call14, i32* %ret, align 4, !dbg !14890
  %cmp15 = icmp slt i32 %call14, 0, !dbg !14891
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !14892

if.then17:                                        ; preds = %if.then7
  %16 = load i32, i32* %ret, align 4, !dbg !14893
  store i32 %16, i32* %retval, align 4, !dbg !14894
  br label %return, !dbg !14894

if.end18:                                         ; preds = %if.then7
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14895
  %arraydecay19 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !14897
  %18 = load i32, i32* %layout_map_tags, align 4, !dbg !14898
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14899
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 24, !dbg !14900
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !14899
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 5, !dbg !14901
  %20 = load i32, i32* %status, align 8, !dbg !14901
  %cmp22 = icmp ugt i32 %20, 2, !dbg !14902
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !14903

cond.true:                                        ; preds = %if.end18
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14904
  %oc24 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 24, !dbg !14906
  %arrayidx25 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc24, i64 0, i64 1, !dbg !14904
  %status26 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx25, i32 0, i32 5, !dbg !14907
  %22 = load i32, i32* %status26, align 8, !dbg !14907
  br label %cond.end, !dbg !14908

cond.false:                                       ; preds = %if.end18
  br label %cond.end, !dbg !14909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ 2, %cond.false ], !dbg !14911
  %call27 = call i32 @output_configure(%struct.AACContext* %17, [3 x i8]* %arraydecay19, i32 %18, i32 %cond, i32 0), !dbg !14913
  store i32 %call27, i32* %ret, align 4, !dbg !14914
  %cmp28 = icmp slt i32 %call27, 0, !dbg !14915
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !14916

if.then30:                                        ; preds = %cond.end
  %23 = load i32, i32* %ret, align 4, !dbg !14917
  store i32 %23, i32* %retval, align 4, !dbg !14918
  br label %return, !dbg !14918

if.end31:                                         ; preds = %cond.end
  br label %if.end62, !dbg !14919

if.else:                                          ; preds = %if.end
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14920
  %oc32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 24, !dbg !14922
  %arrayidx33 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc32, i64 0, i64 1, !dbg !14920
  %m4ac34 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx33, i32 0, i32 0, !dbg !14923
  %chan_config35 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac34, i32 0, i32 3, !dbg !14924
  store i32 0, i32* %chan_config35, align 4, !dbg !14925
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14926
  %dmono_mode = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 21, !dbg !14928
  %26 = load i32, i32* %dmono_mode, align 4, !dbg !14928
  %tobool36 = icmp ne i32 %26, 0, !dbg !14926
  br i1 %tobool36, label %land.lhs.true37, label %if.end61, !dbg !14929

land.lhs.true37:                                  ; preds = %if.else
  %27 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14930
  %oc38 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %27, i32 0, i32 24, !dbg !14932
  %arrayidx39 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc38, i64 0, i64 0, !dbg !14930
  %status40 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx39, i32 0, i32 5, !dbg !14933
  %28 = load i32, i32* %status40, align 32, !dbg !14933
  %cmp41 = icmp eq i32 %28, 0, !dbg !14934
  br i1 %cmp41, label %if.then43, label %if.end61, !dbg !14935

if.then43:                                        ; preds = %land.lhs.true37
  store i32 2, i32* %layout_map_tags, align 4, !dbg !14936
  %arrayidx44 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !14938
  %arrayidx45 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx44, i64 0, i64 0, !dbg !14938
  store i8 0, i8* %arrayidx45, align 1, !dbg !14939
  %arrayidx46 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !14940
  %arrayidx47 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx46, i64 0, i64 0, !dbg !14940
  store i8 0, i8* %arrayidx47, align 16, !dbg !14941
  %arrayidx48 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !14942
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx48, i64 0, i64 2, !dbg !14942
  store i8 1, i8* %arrayidx49, align 1, !dbg !14943
  %arrayidx50 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !14944
  %arrayidx51 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx50, i64 0, i64 2, !dbg !14944
  store i8 1, i8* %arrayidx51, align 2, !dbg !14945
  %arrayidx52 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 0, !dbg !14946
  %arrayidx53 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx52, i64 0, i64 1, !dbg !14946
  store i8 0, i8* %arrayidx53, align 1, !dbg !14947
  %arrayidx54 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i64 0, i64 1, !dbg !14948
  %arrayidx55 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx54, i64 0, i64 1, !dbg !14948
  store i8 1, i8* %arrayidx55, align 1, !dbg !14949
  %29 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14950
  %arraydecay56 = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !14952
  %30 = load i32, i32* %layout_map_tags, align 4, !dbg !14953
  %call57 = call i32 @output_configure(%struct.AACContext* %29, [3 x i8]* %arraydecay56, i32 %30, i32 2, i32 0), !dbg !14954
  %tobool58 = icmp ne i32 %call57, 0, !dbg !14954
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !14955

if.then59:                                        ; preds = %if.then43
  store i32 -7, i32* %retval, align 4, !dbg !14956
  br label %return, !dbg !14956

if.end60:                                         ; preds = %if.then43
  br label %if.end61, !dbg !14957

if.end61:                                         ; preds = %if.end60, %land.lhs.true37, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end31
  %sample_rate = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 0, !dbg !14958
  %31 = load i32, i32* %sample_rate, align 4, !dbg !14958
  %32 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14959
  %oc63 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %32, i32 0, i32 24, !dbg !14960
  %arrayidx64 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc63, i64 0, i64 1, !dbg !14959
  %m4ac65 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx64, i32 0, i32 0, !dbg !14961
  %sample_rate66 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac65, i32 0, i32 2, !dbg !14962
  store i32 %31, i32* %sample_rate66, align 8, !dbg !14963
  %sampling_index = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 5, !dbg !14964
  %33 = load i8, i8* %sampling_index, align 2, !dbg !14964
  %conv67 = zext i8 %33 to i32, !dbg !14965
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14966
  %oc68 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 24, !dbg !14967
  %arrayidx69 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc68, i64 0, i64 1, !dbg !14966
  %m4ac70 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx69, i32 0, i32 0, !dbg !14968
  %sampling_index71 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac70, i32 0, i32 1, !dbg !14969
  store i32 %conv67, i32* %sampling_index71, align 4, !dbg !14970
  %object_type = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 4, !dbg !14971
  %35 = load i8, i8* %object_type, align 1, !dbg !14971
  %conv72 = zext i8 %35 to i32, !dbg !14972
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14973
  %oc73 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 24, !dbg !14974
  %arrayidx74 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc73, i64 0, i64 1, !dbg !14973
  %m4ac75 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx74, i32 0, i32 0, !dbg !14975
  %object_type76 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac75, i32 0, i32 0, !dbg !14976
  store i32 %conv72, i32* %object_type76, align 8, !dbg !14977
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14978
  %oc77 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %37, i32 0, i32 24, !dbg !14979
  %arrayidx78 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc77, i64 0, i64 1, !dbg !14978
  %m4ac79 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx78, i32 0, i32 0, !dbg !14980
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac79, i32 0, i32 11, !dbg !14981
  store i32 0, i32* %frame_length_short, align 4, !dbg !14982
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14983
  %oc80 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 24, !dbg !14985
  %arrayidx81 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc80, i64 0, i64 0, !dbg !14983
  %status82 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx81, i32 0, i32 5, !dbg !14986
  %39 = load i32, i32* %status82, align 32, !dbg !14986
  %cmp83 = icmp ne i32 %39, 4, !dbg !14987
  br i1 %cmp83, label %if.then101, label %lor.lhs.false, !dbg !14988

lor.lhs.false:                                    ; preds = %if.end62
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14989
  %oc85 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 24, !dbg !14990
  %arrayidx86 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc85, i64 0, i64 0, !dbg !14989
  %m4ac87 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx86, i32 0, i32 0, !dbg !14991
  %chan_config88 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac87, i32 0, i32 3, !dbg !14992
  %41 = load i32, i32* %chan_config88, align 4, !dbg !14992
  %chan_config89 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 6, !dbg !14993
  %42 = load i8, i8* %chan_config89, align 1, !dbg !14993
  %conv90 = zext i8 %42 to i32, !dbg !14994
  %cmp91 = icmp ne i32 %41, %conv90, !dbg !14995
  br i1 %cmp91, label %if.then101, label %lor.lhs.false93, !dbg !14996

lor.lhs.false93:                                  ; preds = %lor.lhs.false
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !14997
  %oc94 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %43, i32 0, i32 24, !dbg !14998
  %arrayidx95 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc94, i64 0, i64 0, !dbg !14997
  %m4ac96 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx95, i32 0, i32 0, !dbg !14999
  %sample_rate97 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac96, i32 0, i32 2, !dbg !15000
  %44 = load i32, i32* %sample_rate97, align 8, !dbg !15000
  %sample_rate98 = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 0, !dbg !15001
  %45 = load i32, i32* %sample_rate98, align 4, !dbg !15001
  %cmp99 = icmp ne i32 %44, %45, !dbg !15002
  br i1 %cmp99, label %if.then101, label %if.end108, !dbg !15003

if.then101:                                       ; preds = %lor.lhs.false93, %lor.lhs.false, %if.end62
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15005
  %oc102 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 24, !dbg !15007
  %arrayidx103 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc102, i64 0, i64 1, !dbg !15005
  %m4ac104 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx103, i32 0, i32 0, !dbg !15008
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac104, i32 0, i32 4, !dbg !15009
  store i32 -1, i32* %sbr, align 8, !dbg !15010
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15011
  %oc105 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %47, i32 0, i32 24, !dbg !15012
  %arrayidx106 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc105, i64 0, i64 1, !dbg !15011
  %m4ac107 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx106, i32 0, i32 0, !dbg !15013
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac107, i32 0, i32 10, !dbg !15014
  store i32 -1, i32* %ps, align 8, !dbg !15015
  br label %if.end108, !dbg !15016

if.end108:                                        ; preds = %if.then101, %lor.lhs.false93
  %crc_absent = getelementptr inbounds %struct.AACADTSHeaderInfo, %struct.AACADTSHeaderInfo* %hdr_info, i32 0, i32 3, !dbg !15017
  %48 = load i8, i8* %crc_absent, align 4, !dbg !15017
  %tobool109 = icmp ne i8 %48, 0, !dbg !15019
  br i1 %tobool109, label %if.end111, label %if.then110, !dbg !15020

if.then110:                                       ; preds = %if.end108
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15021
  call void @skip_bits(%struct.GetBitContext* %49, i32 16), !dbg !15022
  br label %if.end111, !dbg !15022

if.end111:                                        ; preds = %if.then110, %if.end108
  br label %if.end112, !dbg !15023

if.end112:                                        ; preds = %if.end111, %entry
  %50 = load i32, i32* %size, align 4, !dbg !15024
  store i32 %50, i32* %retval, align 4, !dbg !15025
  br label %return, !dbg !15025

return:                                           ; preds = %if.end112, %if.then59, %if.then30, %if.then17
  %51 = load i32, i32* %retval, align 4, !dbg !15026
  ret i32 %51, !dbg !15026
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_cce(%struct.AACContext* %ac, %struct.GetBitContext* %gb, %struct.ChannelElement* %che) #1 !dbg !15027 {
entry:
  %x.addr.i96.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i119, metadata !6126, metadata !2062), !dbg !15028
  %x.addr.i81.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i120, metadata !6126, metadata !2062), !dbg !15046
  %x.addr.i.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i121, metadata !6126, metadata !2062), !dbg !15048
  %s.addr.i122 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i122, metadata !9520, metadata !2062), !dbg !15050
  %table.addr.i123 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i123, metadata !9522, metadata !2062), !dbg !15051
  %bits.addr.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i124, metadata !9524, metadata !2062), !dbg !15052
  %max_depth.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i125, metadata !9526, metadata !2062), !dbg !15053
  %code.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i126, metadata !9528, metadata !2062), !dbg !15054
  %re_index.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i127, metadata !9530, metadata !2062), !dbg !15055
  %re_cache.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i128, metadata !9532, metadata !2062), !dbg !15056
  %re_size_plus8.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i129, metadata !9534, metadata !2062), !dbg !15057
  %n.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i130, metadata !9536, metadata !2062), !dbg !15058
  %nb_bits.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i131, metadata !9538, metadata !2062), !dbg !15059
  %index1.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i132, metadata !9540, metadata !2062), !dbg !15060
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6126, metadata !2062), !dbg !15061
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6126, metadata !2062), !dbg !15067
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6126, metadata !2062), !dbg !15069
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !9520, metadata !2062), !dbg !15071
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !9522, metadata !2062), !dbg !15072
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !9524, metadata !2062), !dbg !15073
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !9526, metadata !2062), !dbg !15074
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !9528, metadata !2062), !dbg !15075
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !9530, metadata !2062), !dbg !15076
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !9532, metadata !2062), !dbg !15077
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !9534, metadata !2062), !dbg !15078
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !9536, metadata !2062), !dbg !15079
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !9538, metadata !2062), !dbg !15080
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !9540, metadata !2062), !dbg !15081
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %che.addr = alloca %struct.ChannelElement*, align 8
  %num_gain = alloca i32, align 4
  %c = alloca i32, align 4
  %g = alloca i32, align 4
  %sfb = alloca i32, align 4
  %ret = alloca i32, align 4
  %sign = alloca i32, align 4
  %scale = alloca float, align 4
  %sce = alloca %struct.SingleChannelElement*, align 8
  %coup = alloca %struct.ChannelCoupling*, align 8
  %idx = alloca i32, align 4
  %cge = alloca i32, align 4
  %gain = alloca i32, align 4
  %gain_cache = alloca float, align 4
  %t = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15082, metadata !2062), !dbg !15083
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15084, metadata !2062), !dbg !15085
  store %struct.ChannelElement* %che, %struct.ChannelElement** %che.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che.addr, metadata !15086, metadata !2062), !dbg !15087
  call void @llvm.dbg.declare(metadata i32* %num_gain, metadata !15088, metadata !2062), !dbg !15089
  store i32 0, i32* %num_gain, align 4, !dbg !15089
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15090, metadata !2062), !dbg !15091
  call void @llvm.dbg.declare(metadata i32* %g, metadata !15092, metadata !2062), !dbg !15093
  call void @llvm.dbg.declare(metadata i32* %sfb, metadata !15094, metadata !2062), !dbg !15095
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15096, metadata !2062), !dbg !15097
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !15098, metadata !2062), !dbg !15099
  call void @llvm.dbg.declare(metadata float* %scale, metadata !15100, metadata !2062), !dbg !15101
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce, metadata !15102, metadata !2062), !dbg !15103
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !15104
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !15105
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !15104
  store %struct.SingleChannelElement* %arrayidx, %struct.SingleChannelElement** %sce, align 8, !dbg !15103
  call void @llvm.dbg.declare(metadata %struct.ChannelCoupling** %coup, metadata !15106, metadata !2062), !dbg !15107
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !15108
  %coup1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 8, !dbg !15109
  store %struct.ChannelCoupling* %coup1, %struct.ChannelCoupling** %coup, align 8, !dbg !15107
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15110
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !15111
  %mul = mul i32 2, %call, !dbg !15112
  %3 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15113
  %coupling_point = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %3, i32 0, i32 0, !dbg !15114
  store i32 %mul, i32* %coupling_point, align 4, !dbg !15115
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15116
  %call2 = call i32 @get_bits(%struct.GetBitContext* %4, i32 3), !dbg !15117
  %5 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15118
  %num_coupled = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %5, i32 0, i32 1, !dbg !15119
  store i32 %call2, i32* %num_coupled, align 4, !dbg !15120
  store i32 0, i32* %c, align 4, !dbg !15121
  br label %for.cond, !dbg !15123

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %c, align 4, !dbg !15124
  %7 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15127
  %num_coupled3 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %7, i32 0, i32 1, !dbg !15128
  %8 = load i32, i32* %num_coupled3, align 4, !dbg !15128
  %cmp = icmp sle i32 %6, %8, !dbg !15129
  br i1 %cmp, label %for.body, label %for.end, !dbg !15130

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %num_gain, align 4, !dbg !15131
  %inc = add nsw i32 %9, 1, !dbg !15131
  store i32 %inc, i32* %num_gain, align 4, !dbg !15131
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15133
  %call4 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !15134
  %tobool = icmp ne i32 %call4, 0, !dbg !15134
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !15134
  %11 = load i32, i32* %c, align 4, !dbg !15135
  %idxprom = sext i32 %11 to i64, !dbg !15136
  %12 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15136
  %type = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %12, i32 0, i32 2, !dbg !15137
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %type, i64 0, i64 %idxprom, !dbg !15136
  store i32 %cond, i32* %arrayidx5, align 4, !dbg !15138
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15139
  %call6 = call i32 @get_bits(%struct.GetBitContext* %13, i32 4), !dbg !15140
  %14 = load i32, i32* %c, align 4, !dbg !15141
  %idxprom7 = sext i32 %14 to i64, !dbg !15142
  %15 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15142
  %id_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %15, i32 0, i32 3, !dbg !15143
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %id_select, i64 0, i64 %idxprom7, !dbg !15142
  store i32 %call6, i32* %arrayidx8, align 4, !dbg !15144
  %16 = load i32, i32* %c, align 4, !dbg !15145
  %idxprom9 = sext i32 %16 to i64, !dbg !15147
  %17 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15147
  %type10 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %17, i32 0, i32 2, !dbg !15148
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %type10, i64 0, i64 %idxprom9, !dbg !15147
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !15147
  %cmp12 = icmp eq i32 %18, 1, !dbg !15149
  br i1 %cmp12, label %if.then, label %if.else, !dbg !15150

if.then:                                          ; preds = %for.body
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15151
  %call13 = call i32 @get_bits(%struct.GetBitContext* %19, i32 2), !dbg !15153
  %20 = load i32, i32* %c, align 4, !dbg !15154
  %idxprom14 = sext i32 %20 to i64, !dbg !15155
  %21 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15155
  %ch_select = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %21, i32 0, i32 4, !dbg !15156
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select, i64 0, i64 %idxprom14, !dbg !15155
  store i32 %call13, i32* %arrayidx15, align 4, !dbg !15157
  %22 = load i32, i32* %c, align 4, !dbg !15158
  %idxprom16 = sext i32 %22 to i64, !dbg !15160
  %23 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15160
  %ch_select17 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %23, i32 0, i32 4, !dbg !15161
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select17, i64 0, i64 %idxprom16, !dbg !15160
  %24 = load i32, i32* %arrayidx18, align 4, !dbg !15160
  %cmp19 = icmp eq i32 %24, 3, !dbg !15162
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !15163

if.then20:                                        ; preds = %if.then
  %25 = load i32, i32* %num_gain, align 4, !dbg !15164
  %inc21 = add nsw i32 %25, 1, !dbg !15164
  store i32 %inc21, i32* %num_gain, align 4, !dbg !15164
  br label %if.end, !dbg !15165

if.end:                                           ; preds = %if.then20, %if.then
  br label %if.end25, !dbg !15166

if.else:                                          ; preds = %for.body
  %26 = load i32, i32* %c, align 4, !dbg !15167
  %idxprom22 = sext i32 %26 to i64, !dbg !15168
  %27 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15168
  %ch_select23 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %27, i32 0, i32 4, !dbg !15169
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %ch_select23, i64 0, i64 %idxprom22, !dbg !15168
  store i32 2, i32* %arrayidx24, align 4, !dbg !15170
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.end
  br label %for.inc, !dbg !15171

for.inc:                                          ; preds = %if.end25
  %28 = load i32, i32* %c, align 4, !dbg !15172
  %inc26 = add nsw i32 %28, 1, !dbg !15172
  store i32 %inc26, i32* %c, align 4, !dbg !15172
  br label %for.cond, !dbg !15174, !llvm.loop !15175

for.end:                                          ; preds = %for.cond
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15177
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %29), !dbg !15178
  %tobool28 = icmp ne i32 %call27, 0, !dbg !15178
  br i1 %tobool28, label %lor.end, label %lor.rhs, !dbg !15179

lor.rhs:                                          ; preds = %for.end
  %30 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15180
  %coupling_point29 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %30, i32 0, i32 0, !dbg !15182
  %31 = load i32, i32* %coupling_point29, align 4, !dbg !15182
  %shr = lshr i32 %31, 1, !dbg !15183
  %tobool30 = icmp ne i32 %shr, 0, !dbg !15184
  br label %lor.end, !dbg !15184

lor.end:                                          ; preds = %lor.rhs, %for.end
  %32 = phi i1 [ true, %for.end ], [ %tobool30, %lor.rhs ]
  %lor.ext = zext i1 %32 to i32, !dbg !15185
  %33 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15187
  %coupling_point31 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %33, i32 0, i32 0, !dbg !15188
  %34 = load i32, i32* %coupling_point31, align 4, !dbg !15189
  %add = add i32 %34, %lor.ext, !dbg !15189
  store i32 %add, i32* %coupling_point31, align 4, !dbg !15189
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15190
  %call32 = call i32 @get_bits(%struct.GetBitContext* %35, i32 1), !dbg !15191
  store i32 %call32, i32* %sign, align 4, !dbg !15192
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15193
  %call33 = call i32 @get_bits(%struct.GetBitContext* %36, i32 2), !dbg !15194
  %idxprom34 = zext i32 %call33 to i64, !dbg !15195
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* @cce_scale, i64 0, i64 %idxprom34, !dbg !15195
  %37 = load float, float* %arrayidx35, align 4, !dbg !15195
  store float %37, float* %scale, align 4, !dbg !15196
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15197
  %39 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !15199
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15200
  %call36 = call i32 @decode_ics(%struct.AACContext* %38, %struct.SingleChannelElement* %39, %struct.GetBitContext* %40, i32 0, i32 0), !dbg !15201
  store i32 %call36, i32* %ret, align 4, !dbg !15202
  %tobool37 = icmp ne i32 %call36, 0, !dbg !15202
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !15203

if.then38:                                        ; preds = %lor.end
  %41 = load i32, i32* %ret, align 4, !dbg !15204
  store i32 %41, i32* %retval, align 4, !dbg !15205
  br label %return, !dbg !15205

if.end39:                                         ; preds = %lor.end
  store i32 0, i32* %c, align 4, !dbg !15206
  br label %for.cond40, !dbg !15207

for.cond40:                                       ; preds = %for.inc116, %if.end39
  %42 = load i32, i32* %c, align 4, !dbg !15208
  %43 = load i32, i32* %num_gain, align 4, !dbg !15210
  %cmp41 = icmp slt i32 %42, %43, !dbg !15211
  br i1 %cmp41, label %for.body42, label %for.end118, !dbg !15212

for.body42:                                       ; preds = %for.cond40
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15213, metadata !2062), !dbg !15214
  store i32 0, i32* %idx, align 4, !dbg !15214
  call void @llvm.dbg.declare(metadata i32* %cge, metadata !15215, metadata !2062), !dbg !15216
  store i32 1, i32* %cge, align 4, !dbg !15216
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !15217, metadata !2062), !dbg !15218
  store i32 0, i32* %gain, align 4, !dbg !15218
  call void @llvm.dbg.declare(metadata float* %gain_cache, metadata !15219, metadata !2062), !dbg !15220
  store float 1.000000e+00, float* %gain_cache, align 4, !dbg !15220
  %44 = load i32, i32* %c, align 4, !dbg !15221
  %tobool43 = icmp ne i32 %44, 0, !dbg !15221
  br i1 %tobool43, label %if.then44, label %if.end57, !dbg !15222

if.then44:                                        ; preds = %for.body42
  %45 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15223
  %coupling_point45 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %45, i32 0, i32 0, !dbg !15224
  %46 = load i32, i32* %coupling_point45, align 4, !dbg !15224
  %cmp46 = icmp eq i32 %46, 3, !dbg !15225
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !15223

cond.true:                                        ; preds = %if.then44
  br label %cond.end, !dbg !15226

cond.false:                                       ; preds = %if.then44
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15227
  %call47 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !15229
  br label %cond.end, !dbg !15230

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond48 = phi i32 [ 1, %cond.true ], [ %call47, %cond.false ], !dbg !15231
  store i32 %cond48, i32* %cge, align 4, !dbg !15233
  %48 = load i32, i32* %cge, align 4, !dbg !15234
  %tobool49 = icmp ne i32 %48, 0, !dbg !15234
  br i1 %tobool49, label %cond.true50, label %cond.false52, !dbg !15234

cond.true50:                                      ; preds = %cond.end
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15235
  %50 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !15236
  store %struct.GetBitContext* %49, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15237
  store [2 x i16]* %50, [2 x i16]** %table.addr.i, align 8, !dbg !15237
  store i32 7, i32* %bits.addr.i, align 4, !dbg !15237
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !15237
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15238
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 2, !dbg !15239
  %52 = load i32, i32* %index.i, align 8, !dbg !15239
  store i32 %52, i32* %re_index.i, align 4, !dbg !15076
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15240
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %53, i32 0, i32 4, !dbg !15241
  %54 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !15241
  store i32 %54, i32* %re_size_plus8.i, align 4, !dbg !15078
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15242
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %55, i32 0, i32 0, !dbg !15243
  %56 = load i8*, i8** %buffer.i, align 8, !dbg !15243
  %57 = load i32, i32* %re_index.i, align 4, !dbg !15244
  %shr.i = lshr i32 %57, 3, !dbg !15245
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !15246
  %add.ptr.i = getelementptr inbounds i8, i8* %56, i64 %idx.ext.i, !dbg !15246
  %58 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !15247
  %l.i = bitcast %union.unaligned_32* %58 to i32*, !dbg !15247
  %59 = load i32, i32* %l.i, align 1, !dbg !15247
  store i32 %59, i32* %x.addr.i.i, align 4, !dbg !15248
  %60 = load i32, i32* %x.addr.i.i, align 4, !dbg !15249
  %shl.i.i = shl i32 %60, 8, !dbg !15250
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !15251
  %61 = load i32, i32* %x.addr.i.i, align 4, !dbg !15252
  %shr.i.i = lshr i32 %61, 8, !dbg !15253
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !15254
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !15255
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !15256
  %62 = load i32, i32* %x.addr.i.i, align 4, !dbg !15257
  %shr3.i.i = lshr i32 %62, 16, !dbg !15258
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !15259
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !15260
  %63 = load i32, i32* %x.addr.i.i, align 4, !dbg !15261
  %shr6.i.i = lshr i32 %63, 16, !dbg !15262
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !15263
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !15264
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !15265
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !15266
  %64 = load i32, i32* %re_index.i, align 4, !dbg !15267
  %and.i = and i32 %64, 7, !dbg !15268
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !15269
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !15270
  %65 = load i32, i32* %re_cache.i, align 4, !dbg !15271
  %66 = load i32, i32* %bits.addr.i, align 4, !dbg !15272
  %conv.i = trunc i32 %66 to i8, !dbg !15272
  %call2.i = call i32 @NEG_USR32(i32 %65, i8 signext %conv.i) #10, !dbg !15273
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !15274
  %67 = load i32, i32* %index1.i, align 4, !dbg !15275
  %idxprom.i = zext i32 %67 to i64, !dbg !15276
  %68 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15276
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %68, i64 %idxprom.i, !dbg !15276
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !15276
  %69 = load i16, i16* %arrayidx3.i, align 2, !dbg !15276
  %conv4.i = sext i16 %69 to i32, !dbg !15276
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !15277
  %70 = load i32, i32* %index1.i, align 4, !dbg !15278
  %idxprom5.i = zext i32 %70 to i64, !dbg !15279
  %71 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15279
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %71, i64 %idxprom5.i, !dbg !15279
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !15279
  %72 = load i16, i16* %arrayidx7.i, align 2, !dbg !15279
  %conv8.i = sext i16 %72 to i32, !dbg !15279
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !15280
  %73 = load i32, i32* %max_depth.addr.i, align 4, !dbg !15281
  %cmp.i = icmp sgt i32 %73, 1, !dbg !15282
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !15283

land.lhs.true.i:                                  ; preds = %cond.true50
  %74 = load i32, i32* %n.i, align 4, !dbg !15284
  %cmp10.i = icmp slt i32 %74, 0, !dbg !15285
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !15286

if.then.i:                                        ; preds = %land.lhs.true.i
  %75 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15287
  %76 = load i32, i32* %re_index.i, align 4, !dbg !15288
  %77 = load i32, i32* %bits.addr.i, align 4, !dbg !15289
  %add.i = add i32 %76, %77, !dbg !15290
  %cmp12.i = icmp ugt i32 %75, %add.i, !dbg !15291
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !15292

cond.true.i:                                      ; preds = %if.then.i
  %78 = load i32, i32* %re_index.i, align 4, !dbg !15293
  %79 = load i32, i32* %bits.addr.i, align 4, !dbg !15294
  %add14.i = add i32 %78, %79, !dbg !15295
  br label %cond.end.i, !dbg !15296

cond.false.i:                                     ; preds = %if.then.i
  %80 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15297
  br label %cond.end.i, !dbg !15298

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %80, %cond.false.i ], !dbg !15299
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !15300
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15301
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %81, i32 0, i32 0, !dbg !15302
  %82 = load i8*, i8** %buffer15.i, align 8, !dbg !15302
  %83 = load i32, i32* %re_index.i, align 4, !dbg !15303
  %shr16.i = lshr i32 %83, 3, !dbg !15304
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !15305
  %add.ptr18.i = getelementptr inbounds i8, i8* %82, i64 %idx.ext17.i, !dbg !15305
  %84 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !15306
  %l19.i = bitcast %union.unaligned_32* %84 to i32*, !dbg !15306
  %85 = load i32, i32* %l19.i, align 1, !dbg !15306
  store i32 %85, i32* %x.addr.i81.i, align 4, !dbg !15307
  %86 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15308
  %shl.i82.i = shl i32 %86, 8, !dbg !15309
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !15310
  %87 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15311
  %shr.i84.i = lshr i32 %87, 8, !dbg !15312
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !15313
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !15314
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !15315
  %88 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15316
  %shr3.i88.i = lshr i32 %88, 16, !dbg !15317
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !15318
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !15319
  %89 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15320
  %shr6.i91.i = lshr i32 %89, 16, !dbg !15321
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !15322
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !15323
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !15324
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !15325
  %90 = load i32, i32* %re_index.i, align 4, !dbg !15326
  %and21.i = and i32 %90, 7, !dbg !15327
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !15328
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !15329
  %91 = load i32, i32* %n.i, align 4, !dbg !15330
  %sub.i = sub nsw i32 0, %91, !dbg !15331
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !15332
  %92 = load i32, i32* %re_cache.i, align 4, !dbg !15333
  %93 = load i32, i32* %nb_bits.i, align 4, !dbg !15334
  %conv23.i = trunc i32 %93 to i8, !dbg !15334
  %call24.i = call i32 @NEG_USR32(i32 %92, i8 signext %conv23.i) #10, !dbg !15335
  %94 = load i32, i32* %code.i, align 4, !dbg !15336
  %add25.i = add i32 %call24.i, %94, !dbg !15337
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !15338
  %95 = load i32, i32* %index1.i, align 4, !dbg !15339
  %idxprom26.i = zext i32 %95 to i64, !dbg !15340
  %96 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15340
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %96, i64 %idxprom26.i, !dbg !15340
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !15340
  %97 = load i16, i16* %arrayidx28.i, align 2, !dbg !15340
  %conv29.i = sext i16 %97 to i32, !dbg !15340
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !15341
  %98 = load i32, i32* %index1.i, align 4, !dbg !15342
  %idxprom30.i = zext i32 %98 to i64, !dbg !15343
  %99 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15343
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %99, i64 %idxprom30.i, !dbg !15343
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !15343
  %100 = load i16, i16* %arrayidx32.i, align 2, !dbg !15343
  %conv33.i = sext i16 %100 to i32, !dbg !15343
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !15344
  %101 = load i32, i32* %max_depth.addr.i, align 4, !dbg !15345
  %cmp34.i = icmp sgt i32 %101, 2, !dbg !15346
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !15347

land.lhs.true36.i:                                ; preds = %cond.end.i
  %102 = load i32, i32* %n.i, align 4, !dbg !15348
  %cmp37.i = icmp slt i32 %102, 0, !dbg !15349
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !15350

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %103 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15351
  %104 = load i32, i32* %re_index.i, align 4, !dbg !15352
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !15353
  %add40.i = add i32 %104, %105, !dbg !15354
  %cmp41.i = icmp ugt i32 %103, %add40.i, !dbg !15355
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !15356

cond.true43.i:                                    ; preds = %if.then39.i
  %106 = load i32, i32* %re_index.i, align 4, !dbg !15357
  %107 = load i32, i32* %nb_bits.i, align 4, !dbg !15358
  %add44.i = add i32 %106, %107, !dbg !15359
  br label %cond.end46.i, !dbg !15360

cond.false45.i:                                   ; preds = %if.then39.i
  %108 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15361
  br label %cond.end46.i, !dbg !15362

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %108, %cond.false45.i ], !dbg !15363
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !15364
  %109 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15365
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %109, i32 0, i32 0, !dbg !15366
  %110 = load i8*, i8** %buffer48.i, align 8, !dbg !15366
  %111 = load i32, i32* %re_index.i, align 4, !dbg !15367
  %shr49.i = lshr i32 %111, 3, !dbg !15368
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !15369
  %add.ptr51.i = getelementptr inbounds i8, i8* %110, i64 %idx.ext50.i, !dbg !15369
  %112 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !15370
  %l52.i = bitcast %union.unaligned_32* %112 to i32*, !dbg !15370
  %113 = load i32, i32* %l52.i, align 1, !dbg !15370
  store i32 %113, i32* %x.addr.i96.i, align 4, !dbg !15371
  %114 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15372
  %shl.i97.i = shl i32 %114, 8, !dbg !15373
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !15374
  %115 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15375
  %shr.i99.i = lshr i32 %115, 8, !dbg !15376
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !15377
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !15378
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !15379
  %116 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15380
  %shr3.i103.i = lshr i32 %116, 16, !dbg !15381
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !15382
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !15383
  %117 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15384
  %shr6.i106.i = lshr i32 %117, 16, !dbg !15385
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !15386
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !15387
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !15388
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !15389
  %118 = load i32, i32* %re_index.i, align 4, !dbg !15390
  %and54.i = and i32 %118, 7, !dbg !15391
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !15392
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !15393
  %119 = load i32, i32* %n.i, align 4, !dbg !15394
  %sub56.i = sub nsw i32 0, %119, !dbg !15395
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !15396
  %120 = load i32, i32* %re_cache.i, align 4, !dbg !15397
  %121 = load i32, i32* %nb_bits.i, align 4, !dbg !15398
  %conv57.i = trunc i32 %121 to i8, !dbg !15398
  %call58.i = call i32 @NEG_USR32(i32 %120, i8 signext %conv57.i) #10, !dbg !15399
  %122 = load i32, i32* %code.i, align 4, !dbg !15400
  %add59.i = add i32 %call58.i, %122, !dbg !15401
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !15402
  %123 = load i32, i32* %index1.i, align 4, !dbg !15403
  %idxprom60.i = zext i32 %123 to i64, !dbg !15404
  %124 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15404
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %124, i64 %idxprom60.i, !dbg !15404
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !15404
  %125 = load i16, i16* %arrayidx62.i, align 2, !dbg !15404
  %conv63.i = sext i16 %125 to i32, !dbg !15404
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !15405
  %126 = load i32, i32* %index1.i, align 4, !dbg !15406
  %idxprom64.i = zext i32 %126 to i64, !dbg !15407
  %127 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15407
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %127, i64 %idxprom64.i, !dbg !15407
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !15407
  %128 = load i16, i16* %arrayidx66.i, align 2, !dbg !15407
  %conv67.i = sext i16 %128 to i32, !dbg !15407
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !15408
  br label %if.end.i, !dbg !15409

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !15410

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %cond.true50
  %129 = load i32, i32* %n.i, align 4, !dbg !15411
  %130 = load i32, i32* %re_cache.i, align 4, !dbg !15412
  %shl70.i = shl i32 %130, %129, !dbg !15412
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !15412
  %131 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15413
  %132 = load i32, i32* %re_index.i, align 4, !dbg !15414
  %133 = load i32, i32* %n.i, align 4, !dbg !15415
  %add71.i = add i32 %132, %133, !dbg !15416
  %cmp72.i = icmp ugt i32 %131, %add71.i, !dbg !15417
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !15418

cond.true74.i:                                    ; preds = %if.end68.i
  %134 = load i32, i32* %re_index.i, align 4, !dbg !15419
  %135 = load i32, i32* %n.i, align 4, !dbg !15420
  %add75.i = add i32 %134, %135, !dbg !15421
  br label %get_vlc2.exit, !dbg !15422

cond.false76.i:                                   ; preds = %if.end68.i
  %136 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15423
  br label %get_vlc2.exit, !dbg !15424

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %136, %cond.false76.i ], !dbg !15425
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !15426
  %137 = load i32, i32* %re_index.i, align 4, !dbg !15427
  %138 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15428
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %138, i32 0, i32 2, !dbg !15429
  store i32 %137, i32* %index80.i, align 8, !dbg !15430
  %139 = load i32, i32* %code.i, align 4, !dbg !15431
  %sub = sub nsw i32 %139, 60, !dbg !15432
  br label %cond.end53, !dbg !15433

cond.false52:                                     ; preds = %cond.end
  br label %cond.end53, !dbg !15434

cond.end53:                                       ; preds = %cond.false52, %get_vlc2.exit
  %cond54 = phi i32 [ %sub, %get_vlc2.exit ], [ 0, %cond.false52 ], !dbg !15435
  store i32 %cond54, i32* %gain, align 4, !dbg !15436
  %140 = load float, float* %scale, align 4, !dbg !15437
  %141 = load i32, i32* %gain, align 4, !dbg !15438
  %sub55 = sub nsw i32 0, %141, !dbg !15439
  %conv = sitofp i32 %sub55 to float, !dbg !15439
  %call56 = call float @powf(float %140, float %conv) #10, !dbg !15440
  store float %call56, float* %gain_cache, align 4, !dbg !15441
  br label %if.end57, !dbg !15442

if.end57:                                         ; preds = %cond.end53, %for.body42
  %142 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15443
  %coupling_point58 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %142, i32 0, i32 0, !dbg !15444
  %143 = load i32, i32* %coupling_point58, align 4, !dbg !15444
  %cmp59 = icmp eq i32 %143, 3, !dbg !15445
  br i1 %cmp59, label %if.then61, label %if.else66, !dbg !15446

if.then61:                                        ; preds = %if.end57
  %144 = load float, float* %gain_cache, align 4, !dbg !15447
  %145 = load i32, i32* %c, align 4, !dbg !15449
  %idxprom62 = sext i32 %145 to i64, !dbg !15450
  %146 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15450
  %gain63 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %146, i32 0, i32 5, !dbg !15451
  %arrayidx64 = getelementptr inbounds [16 x [120 x float]], [16 x [120 x float]]* %gain63, i64 0, i64 %idxprom62, !dbg !15450
  %arrayidx65 = getelementptr inbounds [120 x float], [120 x float]* %arrayidx64, i64 0, i64 0, !dbg !15450
  store float %144, float* %arrayidx65, align 4, !dbg !15452
  br label %if.end115, !dbg !15453

if.else66:                                        ; preds = %if.end57
  store i32 0, i32* %g, align 4, !dbg !15454
  br label %for.cond67, !dbg !15455

for.cond67:                                       ; preds = %for.inc112, %if.else66
  %147 = load i32, i32* %g, align 4, !dbg !15456
  %148 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !15458
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %148, i32 0, i32 0, !dbg !15459
  %num_window_groups = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 3, !dbg !15460
  %149 = load i32, i32* %num_window_groups, align 16, !dbg !15460
  %cmp68 = icmp slt i32 %147, %149, !dbg !15461
  br i1 %cmp68, label %for.body70, label %for.end114, !dbg !15462

for.body70:                                       ; preds = %for.cond67
  store i32 0, i32* %sfb, align 4, !dbg !15463
  br label %for.cond71, !dbg !15464

for.cond71:                                       ; preds = %for.inc108, %for.body70
  %150 = load i32, i32* %sfb, align 4, !dbg !15465
  %151 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !15467
  %ics72 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %151, i32 0, i32 0, !dbg !15468
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics72, i32 0, i32 0, !dbg !15469
  %152 = load i8, i8* %max_sfb, align 32, !dbg !15469
  %conv73 = zext i8 %152 to i32, !dbg !15467
  %cmp74 = icmp slt i32 %150, %conv73, !dbg !15470
  br i1 %cmp74, label %for.body76, label %for.end111, !dbg !15471

for.body76:                                       ; preds = %for.cond71
  %153 = load i32, i32* %idx, align 4, !dbg !15472
  %idxprom77 = sext i32 %153 to i64, !dbg !15473
  %154 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !15473
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %154, i32 0, i32 3, !dbg !15474
  %arrayidx78 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom77, !dbg !15473
  %155 = load i32, i32* %arrayidx78, align 4, !dbg !15473
  %cmp79 = icmp ne i32 %155, 0, !dbg !15475
  br i1 %cmp79, label %if.then81, label %if.end107, !dbg !15476

if.then81:                                        ; preds = %for.body76
  %156 = load i32, i32* %cge, align 4, !dbg !15477
  %tobool82 = icmp ne i32 %156, 0, !dbg !15477
  br i1 %tobool82, label %if.end101, label %if.then83, !dbg !15478

if.then83:                                        ; preds = %if.then81
  call void @llvm.dbg.declare(metadata i32* %t, metadata !15479, metadata !2062), !dbg !15480
  %157 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15481
  %158 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_scalefactors, i32 0, i32 1), align 8, !dbg !15482
  store %struct.GetBitContext* %157, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15483
  store [2 x i16]* %158, [2 x i16]** %table.addr.i123, align 8, !dbg !15483
  store i32 7, i32* %bits.addr.i124, align 4, !dbg !15483
  store i32 3, i32* %max_depth.addr.i125, align 4, !dbg !15483
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15484
  %index.i133 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %159, i32 0, i32 2, !dbg !15485
  %160 = load i32, i32* %index.i133, align 8, !dbg !15485
  store i32 %160, i32* %re_index.i127, align 4, !dbg !15055
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15486
  %size_in_bits_plus8.i134 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %161, i32 0, i32 4, !dbg !15487
  %162 = load i32, i32* %size_in_bits_plus8.i134, align 8, !dbg !15487
  store i32 %162, i32* %re_size_plus8.i129, align 4, !dbg !15057
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15488
  %buffer.i135 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %163, i32 0, i32 0, !dbg !15489
  %164 = load i8*, i8** %buffer.i135, align 8, !dbg !15489
  %165 = load i32, i32* %re_index.i127, align 4, !dbg !15490
  %shr.i136 = lshr i32 %165, 3, !dbg !15491
  %idx.ext.i137 = zext i32 %shr.i136 to i64, !dbg !15492
  %add.ptr.i138 = getelementptr inbounds i8, i8* %164, i64 %idx.ext.i137, !dbg !15492
  %166 = bitcast i8* %add.ptr.i138 to %union.unaligned_32*, !dbg !15493
  %l.i139 = bitcast %union.unaligned_32* %166 to i32*, !dbg !15493
  %167 = load i32, i32* %l.i139, align 1, !dbg !15493
  store i32 %167, i32* %x.addr.i.i121, align 4, !dbg !15494
  %168 = load i32, i32* %x.addr.i.i121, align 4, !dbg !15495
  %shl.i.i140 = shl i32 %168, 8, !dbg !15496
  %and.i.i141 = and i32 %shl.i.i140, 65280, !dbg !15497
  %169 = load i32, i32* %x.addr.i.i121, align 4, !dbg !15498
  %shr.i.i142 = lshr i32 %169, 8, !dbg !15499
  %and1.i.i143 = and i32 %shr.i.i142, 255, !dbg !15500
  %or.i.i144 = or i32 %and.i.i141, %and1.i.i143, !dbg !15501
  %shl2.i.i145 = shl i32 %or.i.i144, 16, !dbg !15502
  %170 = load i32, i32* %x.addr.i.i121, align 4, !dbg !15503
  %shr3.i.i146 = lshr i32 %170, 16, !dbg !15504
  %shl4.i.i147 = shl i32 %shr3.i.i146, 8, !dbg !15505
  %and5.i.i148 = and i32 %shl4.i.i147, 65280, !dbg !15506
  %171 = load i32, i32* %x.addr.i.i121, align 4, !dbg !15507
  %shr6.i.i149 = lshr i32 %171, 16, !dbg !15508
  %shr7.i.i150 = lshr i32 %shr6.i.i149, 8, !dbg !15509
  %and8.i.i151 = and i32 %shr7.i.i150, 255, !dbg !15510
  %or9.i.i152 = or i32 %and5.i.i148, %and8.i.i151, !dbg !15511
  %or10.i.i153 = or i32 %shl2.i.i145, %or9.i.i152, !dbg !15512
  %172 = load i32, i32* %re_index.i127, align 4, !dbg !15513
  %and.i154 = and i32 %172, 7, !dbg !15514
  %shl.i155 = shl i32 %or10.i.i153, %and.i154, !dbg !15515
  store i32 %shl.i155, i32* %re_cache.i128, align 4, !dbg !15516
  %173 = load i32, i32* %re_cache.i128, align 4, !dbg !15517
  %174 = load i32, i32* %bits.addr.i124, align 4, !dbg !15518
  %conv.i156 = trunc i32 %174 to i8, !dbg !15518
  %call2.i157 = call i32 @NEG_USR32(i32 %173, i8 signext %conv.i156) #10, !dbg !15519
  store i32 %call2.i157, i32* %index1.i132, align 4, !dbg !15520
  %175 = load i32, i32* %index1.i132, align 4, !dbg !15521
  %idxprom.i158 = zext i32 %175 to i64, !dbg !15522
  %176 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15522
  %arrayidx.i159 = getelementptr inbounds [2 x i16], [2 x i16]* %176, i64 %idxprom.i158, !dbg !15522
  %arrayidx3.i160 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i159, i64 0, i64 0, !dbg !15522
  %177 = load i16, i16* %arrayidx3.i160, align 2, !dbg !15522
  %conv4.i161 = sext i16 %177 to i32, !dbg !15522
  store i32 %conv4.i161, i32* %code.i126, align 4, !dbg !15523
  %178 = load i32, i32* %index1.i132, align 4, !dbg !15524
  %idxprom5.i162 = zext i32 %178 to i64, !dbg !15525
  %179 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15525
  %arrayidx6.i163 = getelementptr inbounds [2 x i16], [2 x i16]* %179, i64 %idxprom5.i162, !dbg !15525
  %arrayidx7.i164 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i163, i64 0, i64 1, !dbg !15525
  %180 = load i16, i16* %arrayidx7.i164, align 2, !dbg !15525
  %conv8.i165 = sext i16 %180 to i32, !dbg !15525
  store i32 %conv8.i165, i32* %n.i130, align 4, !dbg !15526
  %181 = load i32, i32* %max_depth.addr.i125, align 4, !dbg !15527
  %cmp.i166 = icmp sgt i32 %181, 1, !dbg !15528
  br i1 %cmp.i166, label %land.lhs.true.i168, label %if.end68.i255, !dbg !15529

land.lhs.true.i168:                               ; preds = %if.then83
  %182 = load i32, i32* %n.i130, align 4, !dbg !15530
  %cmp10.i167 = icmp slt i32 %182, 0, !dbg !15531
  br i1 %cmp10.i167, label %if.then.i171, label %if.end68.i255, !dbg !15532

if.then.i171:                                     ; preds = %land.lhs.true.i168
  %183 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15533
  %184 = load i32, i32* %re_index.i127, align 4, !dbg !15534
  %185 = load i32, i32* %bits.addr.i124, align 4, !dbg !15535
  %add.i169 = add i32 %184, %185, !dbg !15536
  %cmp12.i170 = icmp ugt i32 %183, %add.i169, !dbg !15537
  br i1 %cmp12.i170, label %cond.true.i173, label %cond.false.i174, !dbg !15538

cond.true.i173:                                   ; preds = %if.then.i171
  %186 = load i32, i32* %re_index.i127, align 4, !dbg !15539
  %187 = load i32, i32* %bits.addr.i124, align 4, !dbg !15540
  %add14.i172 = add i32 %186, %187, !dbg !15541
  br label %cond.end.i210, !dbg !15542

cond.false.i174:                                  ; preds = %if.then.i171
  %188 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15543
  br label %cond.end.i210, !dbg !15544

cond.end.i210:                                    ; preds = %cond.false.i174, %cond.true.i173
  %cond.i175 = phi i32 [ %add14.i172, %cond.true.i173 ], [ %188, %cond.false.i174 ], !dbg !15545
  store i32 %cond.i175, i32* %re_index.i127, align 4, !dbg !15546
  %189 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15547
  %buffer15.i176 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %189, i32 0, i32 0, !dbg !15548
  %190 = load i8*, i8** %buffer15.i176, align 8, !dbg !15548
  %191 = load i32, i32* %re_index.i127, align 4, !dbg !15549
  %shr16.i177 = lshr i32 %191, 3, !dbg !15550
  %idx.ext17.i178 = zext i32 %shr16.i177 to i64, !dbg !15551
  %add.ptr18.i179 = getelementptr inbounds i8, i8* %190, i64 %idx.ext17.i178, !dbg !15551
  %192 = bitcast i8* %add.ptr18.i179 to %union.unaligned_32*, !dbg !15552
  %l19.i180 = bitcast %union.unaligned_32* %192 to i32*, !dbg !15552
  %193 = load i32, i32* %l19.i180, align 1, !dbg !15552
  store i32 %193, i32* %x.addr.i81.i120, align 4, !dbg !15553
  %194 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !15554
  %shl.i82.i181 = shl i32 %194, 8, !dbg !15555
  %and.i83.i182 = and i32 %shl.i82.i181, 65280, !dbg !15556
  %195 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !15557
  %shr.i84.i183 = lshr i32 %195, 8, !dbg !15558
  %and1.i85.i184 = and i32 %shr.i84.i183, 255, !dbg !15559
  %or.i86.i185 = or i32 %and.i83.i182, %and1.i85.i184, !dbg !15560
  %shl2.i87.i186 = shl i32 %or.i86.i185, 16, !dbg !15561
  %196 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !15562
  %shr3.i88.i187 = lshr i32 %196, 16, !dbg !15563
  %shl4.i89.i188 = shl i32 %shr3.i88.i187, 8, !dbg !15564
  %and5.i90.i189 = and i32 %shl4.i89.i188, 65280, !dbg !15565
  %197 = load i32, i32* %x.addr.i81.i120, align 4, !dbg !15566
  %shr6.i91.i190 = lshr i32 %197, 16, !dbg !15567
  %shr7.i92.i191 = lshr i32 %shr6.i91.i190, 8, !dbg !15568
  %and8.i93.i192 = and i32 %shr7.i92.i191, 255, !dbg !15569
  %or9.i94.i193 = or i32 %and5.i90.i189, %and8.i93.i192, !dbg !15570
  %or10.i95.i194 = or i32 %shl2.i87.i186, %or9.i94.i193, !dbg !15571
  %198 = load i32, i32* %re_index.i127, align 4, !dbg !15572
  %and21.i195 = and i32 %198, 7, !dbg !15573
  %shl22.i196 = shl i32 %or10.i95.i194, %and21.i195, !dbg !15574
  store i32 %shl22.i196, i32* %re_cache.i128, align 4, !dbg !15575
  %199 = load i32, i32* %n.i130, align 4, !dbg !15576
  %sub.i197 = sub nsw i32 0, %199, !dbg !15577
  store i32 %sub.i197, i32* %nb_bits.i131, align 4, !dbg !15578
  %200 = load i32, i32* %re_cache.i128, align 4, !dbg !15579
  %201 = load i32, i32* %nb_bits.i131, align 4, !dbg !15580
  %conv23.i198 = trunc i32 %201 to i8, !dbg !15580
  %call24.i199 = call i32 @NEG_USR32(i32 %200, i8 signext %conv23.i198) #10, !dbg !15581
  %202 = load i32, i32* %code.i126, align 4, !dbg !15582
  %add25.i200 = add i32 %call24.i199, %202, !dbg !15583
  store i32 %add25.i200, i32* %index1.i132, align 4, !dbg !15584
  %203 = load i32, i32* %index1.i132, align 4, !dbg !15585
  %idxprom26.i201 = zext i32 %203 to i64, !dbg !15586
  %204 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15586
  %arrayidx27.i202 = getelementptr inbounds [2 x i16], [2 x i16]* %204, i64 %idxprom26.i201, !dbg !15586
  %arrayidx28.i203 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i202, i64 0, i64 0, !dbg !15586
  %205 = load i16, i16* %arrayidx28.i203, align 2, !dbg !15586
  %conv29.i204 = sext i16 %205 to i32, !dbg !15586
  store i32 %conv29.i204, i32* %code.i126, align 4, !dbg !15587
  %206 = load i32, i32* %index1.i132, align 4, !dbg !15588
  %idxprom30.i205 = zext i32 %206 to i64, !dbg !15589
  %207 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15589
  %arrayidx31.i206 = getelementptr inbounds [2 x i16], [2 x i16]* %207, i64 %idxprom30.i205, !dbg !15589
  %arrayidx32.i207 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i206, i64 0, i64 1, !dbg !15589
  %208 = load i16, i16* %arrayidx32.i207, align 2, !dbg !15589
  %conv33.i208 = sext i16 %208 to i32, !dbg !15589
  store i32 %conv33.i208, i32* %n.i130, align 4, !dbg !15590
  %209 = load i32, i32* %max_depth.addr.i125, align 4, !dbg !15591
  %cmp34.i209 = icmp sgt i32 %209, 2, !dbg !15592
  br i1 %cmp34.i209, label %land.lhs.true36.i212, label %if.end.i254, !dbg !15593

land.lhs.true36.i212:                             ; preds = %cond.end.i210
  %210 = load i32, i32* %n.i130, align 4, !dbg !15594
  %cmp37.i211 = icmp slt i32 %210, 0, !dbg !15595
  br i1 %cmp37.i211, label %if.then39.i215, label %if.end.i254, !dbg !15596

if.then39.i215:                                   ; preds = %land.lhs.true36.i212
  %211 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15597
  %212 = load i32, i32* %re_index.i127, align 4, !dbg !15598
  %213 = load i32, i32* %nb_bits.i131, align 4, !dbg !15599
  %add40.i213 = add i32 %212, %213, !dbg !15600
  %cmp41.i214 = icmp ugt i32 %211, %add40.i213, !dbg !15601
  br i1 %cmp41.i214, label %cond.true43.i217, label %cond.false45.i218, !dbg !15602

cond.true43.i217:                                 ; preds = %if.then39.i215
  %214 = load i32, i32* %re_index.i127, align 4, !dbg !15603
  %215 = load i32, i32* %nb_bits.i131, align 4, !dbg !15604
  %add44.i216 = add i32 %214, %215, !dbg !15605
  br label %cond.end46.i253, !dbg !15606

cond.false45.i218:                                ; preds = %if.then39.i215
  %216 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15607
  br label %cond.end46.i253, !dbg !15608

cond.end46.i253:                                  ; preds = %cond.false45.i218, %cond.true43.i217
  %cond47.i219 = phi i32 [ %add44.i216, %cond.true43.i217 ], [ %216, %cond.false45.i218 ], !dbg !15609
  store i32 %cond47.i219, i32* %re_index.i127, align 4, !dbg !15610
  %217 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15611
  %buffer48.i220 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %217, i32 0, i32 0, !dbg !15612
  %218 = load i8*, i8** %buffer48.i220, align 8, !dbg !15612
  %219 = load i32, i32* %re_index.i127, align 4, !dbg !15613
  %shr49.i221 = lshr i32 %219, 3, !dbg !15614
  %idx.ext50.i222 = zext i32 %shr49.i221 to i64, !dbg !15615
  %add.ptr51.i223 = getelementptr inbounds i8, i8* %218, i64 %idx.ext50.i222, !dbg !15615
  %220 = bitcast i8* %add.ptr51.i223 to %union.unaligned_32*, !dbg !15616
  %l52.i224 = bitcast %union.unaligned_32* %220 to i32*, !dbg !15616
  %221 = load i32, i32* %l52.i224, align 1, !dbg !15616
  store i32 %221, i32* %x.addr.i96.i119, align 4, !dbg !15617
  %222 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !15618
  %shl.i97.i225 = shl i32 %222, 8, !dbg !15619
  %and.i98.i226 = and i32 %shl.i97.i225, 65280, !dbg !15620
  %223 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !15621
  %shr.i99.i227 = lshr i32 %223, 8, !dbg !15622
  %and1.i100.i228 = and i32 %shr.i99.i227, 255, !dbg !15623
  %or.i101.i229 = or i32 %and.i98.i226, %and1.i100.i228, !dbg !15624
  %shl2.i102.i230 = shl i32 %or.i101.i229, 16, !dbg !15625
  %224 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !15626
  %shr3.i103.i231 = lshr i32 %224, 16, !dbg !15627
  %shl4.i104.i232 = shl i32 %shr3.i103.i231, 8, !dbg !15628
  %and5.i105.i233 = and i32 %shl4.i104.i232, 65280, !dbg !15629
  %225 = load i32, i32* %x.addr.i96.i119, align 4, !dbg !15630
  %shr6.i106.i234 = lshr i32 %225, 16, !dbg !15631
  %shr7.i107.i235 = lshr i32 %shr6.i106.i234, 8, !dbg !15632
  %and8.i108.i236 = and i32 %shr7.i107.i235, 255, !dbg !15633
  %or9.i109.i237 = or i32 %and5.i105.i233, %and8.i108.i236, !dbg !15634
  %or10.i110.i238 = or i32 %shl2.i102.i230, %or9.i109.i237, !dbg !15635
  %226 = load i32, i32* %re_index.i127, align 4, !dbg !15636
  %and54.i239 = and i32 %226, 7, !dbg !15637
  %shl55.i240 = shl i32 %or10.i110.i238, %and54.i239, !dbg !15638
  store i32 %shl55.i240, i32* %re_cache.i128, align 4, !dbg !15639
  %227 = load i32, i32* %n.i130, align 4, !dbg !15640
  %sub56.i241 = sub nsw i32 0, %227, !dbg !15641
  store i32 %sub56.i241, i32* %nb_bits.i131, align 4, !dbg !15642
  %228 = load i32, i32* %re_cache.i128, align 4, !dbg !15643
  %229 = load i32, i32* %nb_bits.i131, align 4, !dbg !15644
  %conv57.i242 = trunc i32 %229 to i8, !dbg !15644
  %call58.i243 = call i32 @NEG_USR32(i32 %228, i8 signext %conv57.i242) #10, !dbg !15645
  %230 = load i32, i32* %code.i126, align 4, !dbg !15646
  %add59.i244 = add i32 %call58.i243, %230, !dbg !15647
  store i32 %add59.i244, i32* %index1.i132, align 4, !dbg !15648
  %231 = load i32, i32* %index1.i132, align 4, !dbg !15649
  %idxprom60.i245 = zext i32 %231 to i64, !dbg !15650
  %232 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15650
  %arrayidx61.i246 = getelementptr inbounds [2 x i16], [2 x i16]* %232, i64 %idxprom60.i245, !dbg !15650
  %arrayidx62.i247 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i246, i64 0, i64 0, !dbg !15650
  %233 = load i16, i16* %arrayidx62.i247, align 2, !dbg !15650
  %conv63.i248 = sext i16 %233 to i32, !dbg !15650
  store i32 %conv63.i248, i32* %code.i126, align 4, !dbg !15651
  %234 = load i32, i32* %index1.i132, align 4, !dbg !15652
  %idxprom64.i249 = zext i32 %234 to i64, !dbg !15653
  %235 = load [2 x i16]*, [2 x i16]** %table.addr.i123, align 8, !dbg !15653
  %arrayidx65.i250 = getelementptr inbounds [2 x i16], [2 x i16]* %235, i64 %idxprom64.i249, !dbg !15653
  %arrayidx66.i251 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i250, i64 0, i64 1, !dbg !15653
  %236 = load i16, i16* %arrayidx66.i251, align 2, !dbg !15653
  %conv67.i252 = sext i16 %236 to i32, !dbg !15653
  store i32 %conv67.i252, i32* %n.i130, align 4, !dbg !15654
  br label %if.end.i254, !dbg !15655

if.end.i254:                                      ; preds = %cond.end46.i253, %land.lhs.true36.i212, %cond.end.i210
  br label %if.end68.i255, !dbg !15656

if.end68.i255:                                    ; preds = %if.end.i254, %land.lhs.true.i168, %if.then83
  %237 = load i32, i32* %n.i130, align 4, !dbg !15657
  %238 = load i32, i32* %re_cache.i128, align 4, !dbg !15658
  %shl70.i256 = shl i32 %238, %237, !dbg !15658
  store i32 %shl70.i256, i32* %re_cache.i128, align 4, !dbg !15658
  %239 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15659
  %240 = load i32, i32* %re_index.i127, align 4, !dbg !15660
  %241 = load i32, i32* %n.i130, align 4, !dbg !15661
  %add71.i257 = add i32 %240, %241, !dbg !15662
  %cmp72.i258 = icmp ugt i32 %239, %add71.i257, !dbg !15663
  br i1 %cmp72.i258, label %cond.true74.i260, label %cond.false76.i261, !dbg !15664

cond.true74.i260:                                 ; preds = %if.end68.i255
  %242 = load i32, i32* %re_index.i127, align 4, !dbg !15665
  %243 = load i32, i32* %n.i130, align 4, !dbg !15666
  %add75.i259 = add i32 %242, %243, !dbg !15667
  br label %get_vlc2.exit264, !dbg !15668

cond.false76.i261:                                ; preds = %if.end68.i255
  %244 = load i32, i32* %re_size_plus8.i129, align 4, !dbg !15669
  br label %get_vlc2.exit264, !dbg !15670

get_vlc2.exit264:                                 ; preds = %cond.true74.i260, %cond.false76.i261
  %cond78.i262 = phi i32 [ %add75.i259, %cond.true74.i260 ], [ %244, %cond.false76.i261 ], !dbg !15671
  store i32 %cond78.i262, i32* %re_index.i127, align 4, !dbg !15672
  %245 = load i32, i32* %re_index.i127, align 4, !dbg !15673
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i122, align 8, !dbg !15674
  %index80.i263 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %246, i32 0, i32 2, !dbg !15675
  store i32 %245, i32* %index80.i263, align 8, !dbg !15676
  %247 = load i32, i32* %code.i126, align 4, !dbg !15677
  %sub85 = sub nsw i32 %247, 60, !dbg !15678
  store i32 %sub85, i32* %t, align 4, !dbg !15480
  %248 = load i32, i32* %t, align 4, !dbg !15679
  %tobool86 = icmp ne i32 %248, 0, !dbg !15679
  br i1 %tobool86, label %if.then87, label %if.end100, !dbg !15681

if.then87:                                        ; preds = %get_vlc2.exit264
  call void @llvm.dbg.declare(metadata i32* %s, metadata !15682, metadata !2062), !dbg !15684
  store i32 1, i32* %s, align 4, !dbg !15684
  %249 = load i32, i32* %t, align 4, !dbg !15685
  %250 = load i32, i32* %gain, align 4, !dbg !15686
  %add88 = add nsw i32 %250, %249, !dbg !15686
  store i32 %add88, i32* %gain, align 4, !dbg !15686
  store i32 %add88, i32* %t, align 4, !dbg !15687
  %251 = load i32, i32* %sign, align 4, !dbg !15688
  %tobool89 = icmp ne i32 %251, 0, !dbg !15688
  br i1 %tobool89, label %if.then90, label %if.end94, !dbg !15690

if.then90:                                        ; preds = %if.then87
  %252 = load i32, i32* %t, align 4, !dbg !15691
  %and = and i32 %252, 1, !dbg !15693
  %mul91 = mul nsw i32 2, %and, !dbg !15694
  %253 = load i32, i32* %s, align 4, !dbg !15695
  %sub92 = sub nsw i32 %253, %mul91, !dbg !15695
  store i32 %sub92, i32* %s, align 4, !dbg !15695
  %254 = load i32, i32* %t, align 4, !dbg !15696
  %shr93 = ashr i32 %254, 1, !dbg !15696
  store i32 %shr93, i32* %t, align 4, !dbg !15696
  br label %if.end94, !dbg !15697

if.end94:                                         ; preds = %if.then90, %if.then87
  %255 = load float, float* %scale, align 4, !dbg !15698
  %256 = load i32, i32* %t, align 4, !dbg !15699
  %sub95 = sub nsw i32 0, %256, !dbg !15700
  %conv96 = sitofp i32 %sub95 to float, !dbg !15700
  %call97 = call float @powf(float %255, float %conv96) #10, !dbg !15701
  %257 = load i32, i32* %s, align 4, !dbg !15702
  %conv98 = sitofp i32 %257 to float, !dbg !15702
  %mul99 = fmul float %call97, %conv98, !dbg !15703
  store float %mul99, float* %gain_cache, align 4, !dbg !15704
  br label %if.end100, !dbg !15705

if.end100:                                        ; preds = %if.end94, %get_vlc2.exit264
  br label %if.end101, !dbg !15706

if.end101:                                        ; preds = %if.end100, %if.then81
  %258 = load float, float* %gain_cache, align 4, !dbg !15707
  %259 = load i32, i32* %idx, align 4, !dbg !15708
  %idxprom102 = sext i32 %259 to i64, !dbg !15709
  %260 = load i32, i32* %c, align 4, !dbg !15710
  %idxprom103 = sext i32 %260 to i64, !dbg !15709
  %261 = load %struct.ChannelCoupling*, %struct.ChannelCoupling** %coup, align 8, !dbg !15709
  %gain104 = getelementptr inbounds %struct.ChannelCoupling, %struct.ChannelCoupling* %261, i32 0, i32 5, !dbg !15711
  %arrayidx105 = getelementptr inbounds [16 x [120 x float]], [16 x [120 x float]]* %gain104, i64 0, i64 %idxprom103, !dbg !15709
  %arrayidx106 = getelementptr inbounds [120 x float], [120 x float]* %arrayidx105, i64 0, i64 %idxprom102, !dbg !15709
  store float %258, float* %arrayidx106, align 4, !dbg !15712
  br label %if.end107, !dbg !15713

if.end107:                                        ; preds = %if.end101, %for.body76
  br label %for.inc108, !dbg !15714

for.inc108:                                       ; preds = %if.end107
  %262 = load i32, i32* %sfb, align 4, !dbg !15715
  %inc109 = add nsw i32 %262, 1, !dbg !15715
  store i32 %inc109, i32* %sfb, align 4, !dbg !15715
  %263 = load i32, i32* %idx, align 4, !dbg !15717
  %inc110 = add nsw i32 %263, 1, !dbg !15717
  store i32 %inc110, i32* %idx, align 4, !dbg !15717
  br label %for.cond71, !dbg !15718, !llvm.loop !15719

for.end111:                                       ; preds = %for.cond71
  br label %for.inc112, !dbg !15721

for.inc112:                                       ; preds = %for.end111
  %264 = load i32, i32* %g, align 4, !dbg !15722
  %inc113 = add nsw i32 %264, 1, !dbg !15722
  store i32 %inc113, i32* %g, align 4, !dbg !15722
  br label %for.cond67, !dbg !15724, !llvm.loop !15725

for.end114:                                       ; preds = %for.cond67
  br label %if.end115

if.end115:                                        ; preds = %for.end114, %if.then61
  br label %for.inc116, !dbg !15727

for.inc116:                                       ; preds = %if.end115
  %265 = load i32, i32* %c, align 4, !dbg !15728
  %inc117 = add nsw i32 %265, 1, !dbg !15728
  store i32 %inc117, i32* %c, align 4, !dbg !15728
  br label %for.cond40, !dbg !15730, !llvm.loop !15731

for.end118:                                       ; preds = %for.cond40
  store i32 0, i32* %retval, align 4, !dbg !15733
  br label %return, !dbg !15733

return:                                           ; preds = %for.end118, %if.then38
  %266 = load i32, i32* %retval, align 4, !dbg !15734
  ret i32 %266, !dbg !15734
}

; Function Attrs: nounwind uwtable
define internal i32 @skip_data_stream_element(%struct.AACContext* %ac, %struct.GetBitContext* %gb) #1 !dbg !15735 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %byte_align = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15736, metadata !2062), !dbg !15737
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15738, metadata !2062), !dbg !15739
  call void @llvm.dbg.declare(metadata i32* %byte_align, metadata !15740, metadata !2062), !dbg !15741
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15742
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !15743
  store i32 %call, i32* %byte_align, align 4, !dbg !15741
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15744, metadata !2062), !dbg !15745
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15746
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 8), !dbg !15747
  store i32 %call1, i32* %count, align 4, !dbg !15745
  %2 = load i32, i32* %count, align 4, !dbg !15748
  %cmp = icmp eq i32 %2, 255, !dbg !15750
  br i1 %cmp, label %if.then, label %if.end, !dbg !15751

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15752
  %call2 = call i32 @get_bits(%struct.GetBitContext* %3, i32 8), !dbg !15753
  %4 = load i32, i32* %count, align 4, !dbg !15754
  %add = add i32 %4, %call2, !dbg !15754
  store i32 %add, i32* %count, align 4, !dbg !15754
  br label %if.end, !dbg !15755

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %byte_align, align 4, !dbg !15756
  %tobool = icmp ne i32 %5, 0, !dbg !15756
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !15758

if.then3:                                         ; preds = %if.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15759
  %call4 = call i8* @align_get_bits(%struct.GetBitContext* %6), !dbg !15760
  br label %if.end5, !dbg !15760

if.end5:                                          ; preds = %if.then3, %if.end
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15761
  %call6 = call i32 @get_bits_left(%struct.GetBitContext* %7), !dbg !15763
  %8 = load i32, i32* %count, align 4, !dbg !15764
  %mul = mul nsw i32 8, %8, !dbg !15765
  %cmp7 = icmp slt i32 %call6, %mul, !dbg !15766
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15767

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15768
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %9, i32 0, i32 1, !dbg !15770
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15770
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !15768
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.82, i32 0, i32 0)), !dbg !15771
  store i32 -1094995529, i32* %retval, align 4, !dbg !15772
  br label %return, !dbg !15772

if.end9:                                          ; preds = %if.end5
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15773
  %13 = load i32, i32* %count, align 4, !dbg !15774
  %mul10 = mul nsw i32 8, %13, !dbg !15775
  call void @skip_bits_long(%struct.GetBitContext* %12, i32 %mul10), !dbg !15776
  store i32 0, i32* %retval, align 4, !dbg !15777
  br label %return, !dbg !15777

return:                                           ; preds = %if.end9, %if.then8
  %14 = load i32, i32* %retval, align 4, !dbg !15778
  ret i32 %14, !dbg !15778
}

; Function Attrs: nounwind uwtable
define internal void @pop_output_configuration(%struct.AACContext* %ac) #1 !dbg !15779 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15780, metadata !2062), !dbg !15781
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15782
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !15784
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !15782
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 5, !dbg !15785
  %1 = load i32, i32* %status, align 8, !dbg !15785
  %cmp = icmp ne i32 %1, 4, !dbg !15786
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15787

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15788
  %oc1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 24, !dbg !15790
  %arrayidx2 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc1, i64 0, i64 0, !dbg !15788
  %status3 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx2, i32 0, i32 5, !dbg !15791
  %3 = load i32, i32* %status3, align 32, !dbg !15791
  %cmp4 = icmp ne i32 %3, 0, !dbg !15792
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15793

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15794
  %oc5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %4, i32 0, i32 24, !dbg !15796
  %arrayidx6 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc5, i64 0, i64 1, !dbg !15794
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15797
  %oc7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 24, !dbg !15798
  %arrayidx8 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc7, i64 0, i64 0, !dbg !15797
  %6 = bitcast %struct.OutputConfiguration* %arrayidx6 to i8*, !dbg !15797
  %7 = bitcast %struct.OutputConfiguration* %arrayidx8 to i8*, !dbg !15797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 264, i32 8, i1 false), !dbg !15797
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15799
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 24, !dbg !15800
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !15799
  %channels = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 3, !dbg !15801
  %9 = load i32, i32* %channels, align 4, !dbg !15801
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15802
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !15803
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15803
  %channels11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 83, !dbg !15804
  store i32 %9, i32* %channels11, align 4, !dbg !15805
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15806
  %oc12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %12, i32 0, i32 24, !dbg !15807
  %arrayidx13 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc12, i64 0, i64 1, !dbg !15806
  %channel_layout = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx13, i32 0, i32 4, !dbg !15808
  %13 = load i64, i64* %channel_layout, align 8, !dbg !15808
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15809
  %avctx14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !15810
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !15810
  %channel_layout15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 89, !dbg !15811
  store i64 %13, i64* %channel_layout15, align 8, !dbg !15812
  %16 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15813
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15814
  %oc16 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 24, !dbg !15815
  %arrayidx17 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc16, i64 0, i64 1, !dbg !15814
  %layout_map = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx17, i32 0, i32 1, !dbg !15816
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !15814
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15817
  %oc18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 24, !dbg !15818
  %arrayidx19 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc18, i64 0, i64 1, !dbg !15817
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx19, i32 0, i32 2, !dbg !15819
  %19 = load i32, i32* %layout_map_tags, align 8, !dbg !15819
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15820
  %oc20 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 24, !dbg !15821
  %arrayidx21 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc20, i64 0, i64 1, !dbg !15820
  %status22 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx21, i32 0, i32 5, !dbg !15822
  %21 = load i32, i32* %status22, align 8, !dbg !15822
  %call = call i32 @output_configure(%struct.AACContext* %16, [3 x i8]* %arraydecay, i32 %19, i32 %21, i32 0), !dbg !15823
  br label %if.end, !dbg !15824

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !15825
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_extension_payload(%struct.AACContext* %ac, %struct.GetBitContext* %gb, i32 %cnt, %struct.ChannelElement* %che, i32 %elem_type) #1 !dbg !15826 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cnt.addr = alloca i32, align 4
  %che.addr = alloca %struct.ChannelElement*, align 8
  %elem_type.addr = alloca i32, align 4
  %crc_flag = alloca i32, align 4
  %res = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !15829, metadata !2062), !dbg !15830
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15831, metadata !2062), !dbg !15832
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !15833, metadata !2062), !dbg !15834
  store %struct.ChannelElement* %che, %struct.ChannelElement** %che.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %che.addr, metadata !15835, metadata !2062), !dbg !15836
  store i32 %elem_type, i32* %elem_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_type.addr, metadata !15837, metadata !2062), !dbg !15838
  call void @llvm.dbg.declare(metadata i32* %crc_flag, metadata !15839, metadata !2062), !dbg !15840
  store i32 0, i32* %crc_flag, align 4, !dbg !15840
  call void @llvm.dbg.declare(metadata i32* %res, metadata !15841, metadata !2062), !dbg !15842
  %0 = load i32, i32* %cnt.addr, align 4, !dbg !15843
  store i32 %0, i32* %res, align 4, !dbg !15842
  call void @llvm.dbg.declare(metadata i32* %type, metadata !15844, metadata !2062), !dbg !15845
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15846
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !15847
  store i32 %call, i32* %type, align 4, !dbg !15845
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15848
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 1, !dbg !15850
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !15850
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 134, !dbg !15851
  %4 = load i32, i32* %debug, align 4, !dbg !15851
  %and = and i32 %4, 256, !dbg !15852
  %tobool = icmp ne i32 %and, 0, !dbg !15852
  br i1 %tobool, label %if.then, label %if.end, !dbg !15853

if.then:                                          ; preds = %entry
  %5 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15854
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %5, i32 0, i32 1, !dbg !15855
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !15855
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !15854
  %8 = load i32, i32* %type, align 4, !dbg !15856
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !15857
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.83, i32 0, i32 0), i32 %8, i32 %9), !dbg !15858
  br label %if.end, !dbg !15858

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %type, align 4, !dbg !15859
  switch i32 %10, label %sw.default [
    i32 14, label %sw.bb
    i32 13, label %sw.bb2
    i32 11, label %sw.bb79
    i32 0, label %sw.bb81
    i32 1, label %sw.bb85
    i32 2, label %sw.bb85
  ], !dbg !15860

sw.bb:                                            ; preds = %if.end
  %11 = load i32, i32* %crc_flag, align 4, !dbg !15861
  %inc = add nsw i32 %11, 1, !dbg !15861
  store i32 %inc, i32* %crc_flag, align 4, !dbg !15861
  br label %sw.bb2, !dbg !15863

sw.bb2:                                           ; preds = %if.end, %sw.bb
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !15864
  %tobool3 = icmp ne %struct.ChannelElement* %12, null, !dbg !15864
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !15866

if.then4:                                         ; preds = %sw.bb2
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15867
  %avctx5 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 1, !dbg !15869
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !15869
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !15867
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84, i32 0, i32 0)), !dbg !15870
  %16 = load i32, i32* %res, align 4, !dbg !15871
  store i32 %16, i32* %retval, align 4, !dbg !15872
  br label %return, !dbg !15872

if.else:                                          ; preds = %sw.bb2
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15873
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 24, !dbg !15875
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !15873
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !15876
  %frame_length_short = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 11, !dbg !15877
  %18 = load i32, i32* %frame_length_short, align 4, !dbg !15877
  %tobool6 = icmp ne i32 %18, 0, !dbg !15873
  br i1 %tobool6, label %if.then7, label %if.else13, !dbg !15878

if.then7:                                         ; preds = %if.else
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15879
  %warned_960_sbr = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 26, !dbg !15882
  %20 = load i32, i32* %warned_960_sbr, align 4, !dbg !15882
  %tobool8 = icmp ne i32 %20, 0, !dbg !15879
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !15883

if.then9:                                         ; preds = %if.then7
  %21 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15884
  %avctx10 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %21, i32 0, i32 1, !dbg !15885
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx10, align 8, !dbg !15885
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !15884
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %23, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0)), !dbg !15886
  br label %if.end11, !dbg !15886

if.end11:                                         ; preds = %if.then9, %if.then7
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15887
  %warned_960_sbr12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 26, !dbg !15888
  store i32 1, i32* %warned_960_sbr12, align 4, !dbg !15889
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15890
  %26 = load i32, i32* %cnt.addr, align 4, !dbg !15891
  %mul = mul nsw i32 8, %26, !dbg !15892
  %sub = sub nsw i32 %mul, 4, !dbg !15893
  call void @skip_bits_long(%struct.GetBitContext* %25, i32 %sub), !dbg !15894
  %27 = load i32, i32* %res, align 4, !dbg !15895
  store i32 %27, i32* %retval, align 4, !dbg !15896
  br label %return, !dbg !15896

if.else13:                                        ; preds = %if.else
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15897
  %oc14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %28, i32 0, i32 24, !dbg !15899
  %arrayidx15 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc14, i64 0, i64 1, !dbg !15897
  %m4ac16 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx15, i32 0, i32 0, !dbg !15900
  %sbr = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac16, i32 0, i32 4, !dbg !15901
  %29 = load i32, i32* %sbr, align 8, !dbg !15901
  %tobool17 = icmp ne i32 %29, 0, !dbg !15897
  br i1 %tobool17, label %if.else22, label %if.then18, !dbg !15902

if.then18:                                        ; preds = %if.else13
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15903
  %avctx19 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !15905
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx19, align 8, !dbg !15905
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !15903
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.85, i32 0, i32 0)), !dbg !15906
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15907
  %34 = load i32, i32* %cnt.addr, align 4, !dbg !15908
  %mul20 = mul nsw i32 8, %34, !dbg !15909
  %sub21 = sub nsw i32 %mul20, 4, !dbg !15910
  call void @skip_bits_long(%struct.GetBitContext* %33, i32 %sub21), !dbg !15911
  %35 = load i32, i32* %res, align 4, !dbg !15912
  store i32 %35, i32* %retval, align 4, !dbg !15913
  br label %return, !dbg !15913

if.else22:                                        ; preds = %if.else13
  %36 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15914
  %oc23 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %36, i32 0, i32 24, !dbg !15916
  %arrayidx24 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc23, i64 0, i64 1, !dbg !15914
  %m4ac25 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx24, i32 0, i32 0, !dbg !15917
  %sbr26 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac25, i32 0, i32 4, !dbg !15918
  %37 = load i32, i32* %sbr26, align 8, !dbg !15918
  %cmp = icmp eq i32 %37, -1, !dbg !15919
  br i1 %cmp, label %land.lhs.true, label %if.else34, !dbg !15920

land.lhs.true:                                    ; preds = %if.else22
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15921
  %oc27 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %38, i32 0, i32 24, !dbg !15923
  %arrayidx28 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc27, i64 0, i64 1, !dbg !15921
  %status = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx28, i32 0, i32 5, !dbg !15924
  %39 = load i32, i32* %status, align 8, !dbg !15924
  %cmp29 = icmp eq i32 %39, 4, !dbg !15925
  br i1 %cmp29, label %if.then30, label %if.else34, !dbg !15926

if.then30:                                        ; preds = %land.lhs.true
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15927
  %avctx31 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 1, !dbg !15929
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 8, !dbg !15929
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !15927
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.86, i32 0, i32 0)), !dbg !15930
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15931
  %44 = load i32, i32* %cnt.addr, align 4, !dbg !15932
  %mul32 = mul nsw i32 8, %44, !dbg !15933
  %sub33 = sub nsw i32 %mul32, 4, !dbg !15934
  call void @skip_bits_long(%struct.GetBitContext* %43, i32 %sub33), !dbg !15935
  %45 = load i32, i32* %res, align 4, !dbg !15936
  store i32 %45, i32* %retval, align 4, !dbg !15937
  br label %return, !dbg !15937

if.else34:                                        ; preds = %land.lhs.true, %if.else22
  %46 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15938
  %oc35 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %46, i32 0, i32 24, !dbg !15940
  %arrayidx36 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc35, i64 0, i64 1, !dbg !15938
  %m4ac37 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx36, i32 0, i32 0, !dbg !15941
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac37, i32 0, i32 10, !dbg !15942
  %47 = load i32, i32* %ps, align 8, !dbg !15942
  %cmp38 = icmp eq i32 %47, -1, !dbg !15943
  br i1 %cmp38, label %land.lhs.true39, label %if.else65, !dbg !15944

land.lhs.true39:                                  ; preds = %if.else34
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15945
  %oc40 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 24, !dbg !15947
  %arrayidx41 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc40, i64 0, i64 1, !dbg !15945
  %status42 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx41, i32 0, i32 5, !dbg !15948
  %49 = load i32, i32* %status42, align 8, !dbg !15948
  %cmp43 = icmp ult i32 %49, 4, !dbg !15949
  br i1 %cmp43, label %land.lhs.true44, label %if.else65, !dbg !15950

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %50 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15951
  %avctx45 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %50, i32 0, i32 1, !dbg !15953
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx45, align 8, !dbg !15953
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 83, !dbg !15954
  %52 = load i32, i32* %channels, align 4, !dbg !15954
  %cmp46 = icmp eq i32 %52, 1, !dbg !15955
  br i1 %cmp46, label %if.then47, label %if.else65, !dbg !15956

if.then47:                                        ; preds = %land.lhs.true44
  %53 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15957
  %oc48 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %53, i32 0, i32 24, !dbg !15959
  %arrayidx49 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc48, i64 0, i64 1, !dbg !15957
  %m4ac50 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx49, i32 0, i32 0, !dbg !15960
  %sbr51 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac50, i32 0, i32 4, !dbg !15961
  store i32 1, i32* %sbr51, align 8, !dbg !15962
  %54 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15963
  %oc52 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %54, i32 0, i32 24, !dbg !15964
  %arrayidx53 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc52, i64 0, i64 1, !dbg !15963
  %m4ac54 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx53, i32 0, i32 0, !dbg !15965
  %ps55 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac54, i32 0, i32 10, !dbg !15966
  store i32 1, i32* %ps55, align 8, !dbg !15967
  %55 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15968
  %avctx56 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %55, i32 0, i32 1, !dbg !15969
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx56, align 8, !dbg !15969
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 153, !dbg !15970
  store i32 28, i32* %profile, align 4, !dbg !15971
  %57 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15972
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15973
  %oc57 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %58, i32 0, i32 24, !dbg !15974
  %arrayidx58 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc57, i64 0, i64 1, !dbg !15973
  %layout_map = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx58, i32 0, i32 1, !dbg !15975
  %arraydecay = getelementptr inbounds [64 x [3 x i8]], [64 x [3 x i8]]* %layout_map, i32 0, i32 0, !dbg !15973
  %59 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15976
  %oc59 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %59, i32 0, i32 24, !dbg !15977
  %arrayidx60 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc59, i64 0, i64 1, !dbg !15976
  %layout_map_tags = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx60, i32 0, i32 2, !dbg !15978
  %60 = load i32, i32* %layout_map_tags, align 8, !dbg !15978
  %61 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15979
  %oc61 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %61, i32 0, i32 24, !dbg !15980
  %arrayidx62 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc61, i64 0, i64 1, !dbg !15979
  %status63 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx62, i32 0, i32 5, !dbg !15981
  %62 = load i32, i32* %status63, align 8, !dbg !15981
  %call64 = call i32 @output_configure(%struct.AACContext* %57, [3 x i8]* %arraydecay, i32 %60, i32 %62, i32 1), !dbg !15982
  br label %if.end72, !dbg !15983

if.else65:                                        ; preds = %land.lhs.true44, %land.lhs.true39, %if.else34
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15984
  %oc66 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %63, i32 0, i32 24, !dbg !15986
  %arrayidx67 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc66, i64 0, i64 1, !dbg !15984
  %m4ac68 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx67, i32 0, i32 0, !dbg !15987
  %sbr69 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac68, i32 0, i32 4, !dbg !15988
  store i32 1, i32* %sbr69, align 8, !dbg !15989
  %64 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15990
  %avctx70 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %64, i32 0, i32 1, !dbg !15991
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx70, align 8, !dbg !15991
  %profile71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 153, !dbg !15992
  store i32 4, i32* %profile71, align 4, !dbg !15993
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then47
  br label %if.end73

if.end73:                                         ; preds = %if.end72
  br label %if.end74

if.end74:                                         ; preds = %if.end73
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  br label %if.end76

if.end76:                                         ; preds = %if.end75
  %66 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !15994
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %che.addr, align 8, !dbg !15995
  %sbr77 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 10, !dbg !15996
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15997
  %69 = load i32, i32* %crc_flag, align 4, !dbg !15998
  %70 = load i32, i32* %cnt.addr, align 4, !dbg !15999
  %71 = load i32, i32* %elem_type.addr, align 4, !dbg !16000
  %call78 = call i32 @ff_decode_sbr_extension(%struct.AACContext* %66, %struct.SpectralBandReplication* %sbr77, %struct.GetBitContext* %68, i32 %69, i32 %70, i32 %71), !dbg !16001
  store i32 %call78, i32* %res, align 4, !dbg !16002
  br label %sw.epilog, !dbg !16003

sw.bb79:                                          ; preds = %if.end
  %72 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16004
  %che_drc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %72, i32 0, i32 4, !dbg !16005
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16006
  %call80 = call i32 @decode_dynamic_range(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %73), !dbg !16007
  store i32 %call80, i32* %res, align 4, !dbg !16008
  br label %sw.epilog, !dbg !16009

sw.bb81:                                          ; preds = %if.end
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16010
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16011
  %76 = load i32, i32* %cnt.addr, align 4, !dbg !16012
  %mul82 = mul nsw i32 8, %76, !dbg !16013
  %sub83 = sub nsw i32 %mul82, 4, !dbg !16014
  %call84 = call i32 @decode_fill(%struct.AACContext* %74, %struct.GetBitContext* %75, i32 %sub83), !dbg !16015
  br label %sw.epilog, !dbg !16016

sw.bb85:                                          ; preds = %if.end, %if.end
  br label %sw.default, !dbg !16017

sw.default:                                       ; preds = %if.end, %sw.bb85
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16019
  %78 = load i32, i32* %cnt.addr, align 4, !dbg !16020
  %mul86 = mul nsw i32 8, %78, !dbg !16021
  %sub87 = sub nsw i32 %mul86, 4, !dbg !16022
  call void @skip_bits_long(%struct.GetBitContext* %77, i32 %sub87), !dbg !16023
  br label %sw.epilog, !dbg !16024

sw.epilog:                                        ; preds = %sw.default, %sw.bb81, %sw.bb79, %if.end76
  %79 = load i32, i32* %res, align 4, !dbg !16025
  store i32 %79, i32* %retval, align 4, !dbg !16026
  br label %return, !dbg !16026

return:                                           ; preds = %sw.epilog, %if.then30, %if.then18, %if.end11, %if.then4
  %80 = load i32, i32* %retval, align 4, !dbg !16027
  ret i32 %80, !dbg !16027
}

declare i32 @ff_adts_header_parse(%struct.GetBitContext*, %struct.AACADTSHeaderInfo*) #2

; Function Attrs: nounwind
declare float @powf(float, float) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #4 !dbg !16028 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !16031, metadata !2062), !dbg !16032
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16033, metadata !2062), !dbg !16034
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16035
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !16036
  %sub = sub nsw i32 0, %call, !dbg !16037
  %and = and i32 %sub, 7, !dbg !16038
  store i32 %and, i32* %n, align 4, !dbg !16034
  %1 = load i32, i32* %n, align 4, !dbg !16039
  %tobool = icmp ne i32 %1, 0, !dbg !16039
  br i1 %tobool, label %if.then, label %if.end, !dbg !16041

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16042
  %3 = load i32, i32* %n, align 4, !dbg !16043
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !16044
  br label %if.end, !dbg !16044

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16045
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !16046
  %5 = load i8*, i8** %buffer, align 8, !dbg !16046
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16047
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !16048
  %7 = load i32, i32* %index, align 8, !dbg !16048
  %shr = ashr i32 %7, 3, !dbg !16049
  %idx.ext = sext i32 %shr to i64, !dbg !16050
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !16050
  ret i8* %add.ptr, !dbg !16051
}

declare i32 @ff_decode_sbr_extension(%struct.AACContext*, %struct.SpectralBandReplication*, %struct.GetBitContext*, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @decode_dynamic_range(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %gb) #1 !dbg !16052 {
entry:
  %che_drc.addr = alloca %struct.DynamicRangeControl*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  %drc_num_bands = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DynamicRangeControl* %che_drc, %struct.DynamicRangeControl** %che_drc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicRangeControl** %che_drc.addr, metadata !16056, metadata !2062), !dbg !16057
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16058, metadata !2062), !dbg !16059
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16060, metadata !2062), !dbg !16061
  store i32 1, i32* %n, align 4, !dbg !16061
  call void @llvm.dbg.declare(metadata i32* %drc_num_bands, metadata !16062, metadata !2062), !dbg !16063
  store i32 1, i32* %drc_num_bands, align 4, !dbg !16063
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16064, metadata !2062), !dbg !16065
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16066
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !16068
  %tobool = icmp ne i32 %call, 0, !dbg !16068
  br i1 %tobool, label %if.then, label %if.end, !dbg !16069

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16070
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !16072
  %2 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16073
  %pce_instance_tag = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %2, i32 0, i32 0, !dbg !16074
  store i32 %call1, i32* %pce_instance_tag, align 4, !dbg !16075
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16076
  call void @skip_bits(%struct.GetBitContext* %3, i32 4), !dbg !16077
  %4 = load i32, i32* %n, align 4, !dbg !16078
  %inc = add nsw i32 %4, 1, !dbg !16078
  store i32 %inc, i32* %n, align 4, !dbg !16078
  br label %if.end, !dbg !16079

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16080
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %5), !dbg !16082
  %tobool3 = icmp ne i32 %call2, 0, !dbg !16082
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !16083

if.then4:                                         ; preds = %if.end
  %6 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16084
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16086
  %call5 = call i32 @decode_drc_channel_exclusions(%struct.DynamicRangeControl* %6, %struct.GetBitContext* %7), !dbg !16087
  %8 = load i32, i32* %n, align 4, !dbg !16088
  %add = add nsw i32 %8, %call5, !dbg !16088
  store i32 %add, i32* %n, align 4, !dbg !16088
  br label %if.end6, !dbg !16089

if.end6:                                          ; preds = %if.then4, %if.end
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16090
  %call7 = call i32 @get_bits1(%struct.GetBitContext* %9), !dbg !16092
  %tobool8 = icmp ne i32 %call7, 0, !dbg !16092
  br i1 %tobool8, label %if.then9, label %if.end18, !dbg !16093

if.then9:                                         ; preds = %if.end6
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16094
  %call10 = call i32 @get_bits(%struct.GetBitContext* %10, i32 4), !dbg !16096
  %11 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16097
  %band_incr = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %11, i32 0, i32 4, !dbg !16098
  store i32 %call10, i32* %band_incr, align 4, !dbg !16099
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16100
  %call11 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !16101
  %13 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16102
  %interpolation_scheme = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %13, i32 0, i32 5, !dbg !16103
  store i32 %call11, i32* %interpolation_scheme, align 4, !dbg !16104
  %14 = load i32, i32* %n, align 4, !dbg !16105
  %inc12 = add nsw i32 %14, 1, !dbg !16105
  store i32 %inc12, i32* %n, align 4, !dbg !16105
  %15 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16106
  %band_incr13 = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %15, i32 0, i32 4, !dbg !16107
  %16 = load i32, i32* %band_incr13, align 4, !dbg !16107
  %17 = load i32, i32* %drc_num_bands, align 4, !dbg !16108
  %add14 = add nsw i32 %17, %16, !dbg !16108
  store i32 %add14, i32* %drc_num_bands, align 4, !dbg !16108
  store i32 0, i32* %i, align 4, !dbg !16109
  br label %for.cond, !dbg !16111

for.cond:                                         ; preds = %for.inc, %if.then9
  %18 = load i32, i32* %i, align 4, !dbg !16112
  %19 = load i32, i32* %drc_num_bands, align 4, !dbg !16115
  %cmp = icmp slt i32 %18, %19, !dbg !16116
  br i1 %cmp, label %for.body, label %for.end, !dbg !16117

for.body:                                         ; preds = %for.cond
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16118
  %call15 = call i32 @get_bits(%struct.GetBitContext* %20, i32 8), !dbg !16120
  %21 = load i32, i32* %i, align 4, !dbg !16121
  %idxprom = sext i32 %21 to i64, !dbg !16122
  %22 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16122
  %band_top = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %22, i32 0, i32 6, !dbg !16123
  %arrayidx = getelementptr inbounds [17 x i32], [17 x i32]* %band_top, i64 0, i64 %idxprom, !dbg !16122
  store i32 %call15, i32* %arrayidx, align 4, !dbg !16124
  %23 = load i32, i32* %n, align 4, !dbg !16125
  %inc16 = add nsw i32 %23, 1, !dbg !16125
  store i32 %inc16, i32* %n, align 4, !dbg !16125
  br label %for.inc, !dbg !16126

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !16127
  %inc17 = add nsw i32 %24, 1, !dbg !16127
  store i32 %inc17, i32* %i, align 4, !dbg !16127
  br label %for.cond, !dbg !16129, !llvm.loop !16130

for.end:                                          ; preds = %for.cond
  br label %if.end18, !dbg !16132

if.end18:                                         ; preds = %for.end, %if.end6
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16133
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !16135
  %tobool20 = icmp ne i32 %call19, 0, !dbg !16135
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !16136

if.then21:                                        ; preds = %if.end18
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16137
  %call22 = call i32 @get_bits(%struct.GetBitContext* %26, i32 7), !dbg !16139
  %27 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16140
  %prog_ref_level = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %27, i32 0, i32 7, !dbg !16141
  store i32 %call22, i32* %prog_ref_level, align 4, !dbg !16142
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16143
  call void @skip_bits1(%struct.GetBitContext* %28), !dbg !16144
  %29 = load i32, i32* %n, align 4, !dbg !16145
  %inc23 = add nsw i32 %29, 1, !dbg !16145
  store i32 %inc23, i32* %n, align 4, !dbg !16145
  br label %if.end24, !dbg !16146

if.end24:                                         ; preds = %if.then21, %if.end18
  store i32 0, i32* %i, align 4, !dbg !16147
  br label %for.cond25, !dbg !16149

for.cond25:                                       ; preds = %for.inc35, %if.end24
  %30 = load i32, i32* %i, align 4, !dbg !16150
  %31 = load i32, i32* %drc_num_bands, align 4, !dbg !16153
  %cmp26 = icmp slt i32 %30, %31, !dbg !16154
  br i1 %cmp26, label %for.body27, label %for.end37, !dbg !16155

for.body27:                                       ; preds = %for.cond25
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16156
  %call28 = call i32 @get_bits1(%struct.GetBitContext* %32), !dbg !16158
  %33 = load i32, i32* %i, align 4, !dbg !16159
  %idxprom29 = sext i32 %33 to i64, !dbg !16160
  %34 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16160
  %dyn_rng_sgn = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %34, i32 0, i32 1, !dbg !16161
  %arrayidx30 = getelementptr inbounds [17 x i32], [17 x i32]* %dyn_rng_sgn, i64 0, i64 %idxprom29, !dbg !16160
  store i32 %call28, i32* %arrayidx30, align 4, !dbg !16162
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16163
  %call31 = call i32 @get_bits(%struct.GetBitContext* %35, i32 7), !dbg !16164
  %36 = load i32, i32* %i, align 4, !dbg !16165
  %idxprom32 = sext i32 %36 to i64, !dbg !16166
  %37 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16166
  %dyn_rng_ctl = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %37, i32 0, i32 2, !dbg !16167
  %arrayidx33 = getelementptr inbounds [17 x i32], [17 x i32]* %dyn_rng_ctl, i64 0, i64 %idxprom32, !dbg !16166
  store i32 %call31, i32* %arrayidx33, align 4, !dbg !16168
  %38 = load i32, i32* %n, align 4, !dbg !16169
  %inc34 = add nsw i32 %38, 1, !dbg !16169
  store i32 %inc34, i32* %n, align 4, !dbg !16169
  br label %for.inc35, !dbg !16170

for.inc35:                                        ; preds = %for.body27
  %39 = load i32, i32* %i, align 4, !dbg !16171
  %inc36 = add nsw i32 %39, 1, !dbg !16171
  store i32 %inc36, i32* %i, align 4, !dbg !16171
  br label %for.cond25, !dbg !16173, !llvm.loop !16174

for.end37:                                        ; preds = %for.cond25
  %40 = load i32, i32* %n, align 4, !dbg !16176
  ret i32 %40, !dbg !16177
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_fill(%struct.AACContext* %ac, %struct.GetBitContext* %gb, i32 %len) #1 !dbg !16178 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %len.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %major = alloca i32, align 4
  %minor = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !16181, metadata !2062), !dbg !16182
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16183, metadata !2062), !dbg !16184
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16185, metadata !2062), !dbg !16186
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !16187, metadata !2062), !dbg !16191
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16192, metadata !2062), !dbg !16193
  call void @llvm.dbg.declare(metadata i32* %major, metadata !16194, metadata !2062), !dbg !16195
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !16196, metadata !2062), !dbg !16197
  %0 = load i32, i32* %len.addr, align 4, !dbg !16198
  %cmp = icmp slt i32 %0, 69, !dbg !16200
  br i1 %cmp, label %if.then, label %if.end, !dbg !16201

if.then:                                          ; preds = %entry
  br label %unknown, !dbg !16202

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16203
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 13), !dbg !16204
  %2 = load i32, i32* %len.addr, align 4, !dbg !16205
  %sub = sub nsw i32 %2, 13, !dbg !16205
  store i32 %sub, i32* %len.addr, align 4, !dbg !16205
  store i32 0, i32* %i, align 4, !dbg !16206
  br label %for.cond, !dbg !16208

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !16209
  %add = add nsw i32 %3, 1, !dbg !16212
  %conv = sext i32 %add to i64, !dbg !16209
  %cmp1 = icmp ult i64 %conv, 256, !dbg !16213
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !16214

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %len.addr, align 4, !dbg !16215
  %cmp3 = icmp sge i32 %4, 8, !dbg !16217
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %5, label %for.body, label %for.end, !dbg !16218

for.body:                                         ; preds = %land.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16220
  %call5 = call i32 @get_bits(%struct.GetBitContext* %6, i32 8), !dbg !16221
  %conv6 = trunc i32 %call5 to i8, !dbg !16221
  %7 = load i32, i32* %i, align 4, !dbg !16222
  %idxprom = sext i32 %7 to i64, !dbg !16223
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 %idxprom, !dbg !16223
  store i8 %conv6, i8* %arrayidx, align 1, !dbg !16224
  br label %for.inc, !dbg !16223

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !16225
  %inc = add nsw i32 %8, 1, !dbg !16225
  store i32 %inc, i32* %i, align 4, !dbg !16225
  %9 = load i32, i32* %len.addr, align 4, !dbg !16227
  %sub7 = sub nsw i32 %9, 8, !dbg !16227
  store i32 %sub7, i32* %len.addr, align 4, !dbg !16227
  br label %for.cond, !dbg !16228, !llvm.loop !16229

for.end:                                          ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !16231
  %idxprom8 = sext i32 %10 to i64, !dbg !16232
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 %idxprom8, !dbg !16232
  store i8 0, i8* %arrayidx9, align 1, !dbg !16233
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16234
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 1, !dbg !16236
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16236
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 134, !dbg !16237
  %13 = load i32, i32* %debug, align 4, !dbg !16237
  %and = and i32 %13, 1, !dbg !16238
  %tobool = icmp ne i32 %and, 0, !dbg !16238
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !16239

if.then10:                                        ; preds = %for.end
  %14 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16240
  %avctx11 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %14, i32 0, i32 1, !dbg !16241
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !16241
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !16240
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i32 0, i32 0, !dbg !16242
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i8* %arraydecay), !dbg !16243
  br label %if.end12, !dbg !16243

if.end12:                                         ; preds = %if.then10, %for.end
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i32 0, i32 0, !dbg !16244
  %call14 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.88, i32 0, i32 0), i32* %major, i32* %minor) #10, !dbg !16246
  %cmp15 = icmp eq i32 %call14, 2, !dbg !16247
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !16248

if.then17:                                        ; preds = %if.end12
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !16249
  %avctx18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 1, !dbg !16251
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !16251
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 7, !dbg !16252
  %19 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !16252
  %skip_samples = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %19, i32 0, i32 12, !dbg !16253
  store i32 1024, i32* %skip_samples, align 8, !dbg !16254
  br label %if.end19, !dbg !16255

if.end19:                                         ; preds = %if.then17, %if.end12
  br label %unknown, !dbg !16256

unknown:                                          ; preds = %if.end19, %if.then
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16258
  %21 = load i32, i32* %len.addr, align 4, !dbg !16259
  call void @skip_bits_long(%struct.GetBitContext* %20, i32 %21), !dbg !16260
  ret i32 0, !dbg !16261
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_drc_channel_exclusions(%struct.DynamicRangeControl* %che_drc, %struct.GetBitContext* %gb) #1 !dbg !16262 {
entry:
  %che_drc.addr = alloca %struct.DynamicRangeControl*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %num_excl_chan = alloca i32, align 4
  store %struct.DynamicRangeControl* %che_drc, %struct.DynamicRangeControl** %che_drc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicRangeControl** %che_drc.addr, metadata !16263, metadata !2062), !dbg !16264
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16265, metadata !2062), !dbg !16266
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16267, metadata !2062), !dbg !16268
  call void @llvm.dbg.declare(metadata i32* %num_excl_chan, metadata !16269, metadata !2062), !dbg !16270
  store i32 0, i32* %num_excl_chan, align 4, !dbg !16270
  br label %do.body, !dbg !16271, !llvm.loop !16272

do.body:                                          ; preds = %land.end, %entry
  store i32 0, i32* %i, align 4, !dbg !16273
  br label %for.cond, !dbg !16276

for.cond:                                         ; preds = %for.inc, %do.body
  %0 = load i32, i32* %i, align 4, !dbg !16277
  %cmp = icmp slt i32 %0, 7, !dbg !16280
  br i1 %cmp, label %for.body, label %for.end, !dbg !16281

for.body:                                         ; preds = %for.cond
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16282
  %call = call i32 @get_bits1(%struct.GetBitContext* %1), !dbg !16283
  %2 = load i32, i32* %num_excl_chan, align 4, !dbg !16284
  %inc = add nsw i32 %2, 1, !dbg !16284
  store i32 %inc, i32* %num_excl_chan, align 4, !dbg !16284
  %idxprom = sext i32 %2 to i64, !dbg !16285
  %3 = load %struct.DynamicRangeControl*, %struct.DynamicRangeControl** %che_drc.addr, align 8, !dbg !16285
  %exclude_mask = getelementptr inbounds %struct.DynamicRangeControl, %struct.DynamicRangeControl* %3, i32 0, i32 3, !dbg !16286
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %exclude_mask, i64 0, i64 %idxprom, !dbg !16285
  store i32 %call, i32* %arrayidx, align 4, !dbg !16287
  br label %for.inc, !dbg !16285

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !16288
  %inc1 = add nsw i32 %4, 1, !dbg !16288
  store i32 %inc1, i32* %i, align 4, !dbg !16288
  br label %for.cond, !dbg !16290, !llvm.loop !16291

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !16293

do.cond:                                          ; preds = %for.end
  %5 = load i32, i32* %num_excl_chan, align 4, !dbg !16294
  %cmp2 = icmp slt i32 %5, 57, !dbg !16296
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !16297

land.rhs:                                         ; preds = %do.cond
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16298
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !16300
  %tobool = icmp ne i32 %call3, 0, !dbg !16301
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %7 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %7, label %do.body, label %do.end, !dbg !16302, !llvm.loop !16272

do.end:                                           ; preds = %land.end
  %8 = load i32, i32* %num_excl_chan, align 4, !dbg !16304
  %div = sdiv i32 %8, 7, !dbg !16305
  ret i32 %div, !dbg !16306
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #7

declare void @ff_mdct_end(%struct.FFTContext*) #2

declare void @ff_mdct15_uninit(%struct.MDCT15Context**) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_audio_mux_element(%struct.LATMContext* %latmctx, %struct.GetBitContext* %gb) #1 !dbg !16307 {
entry:
  %retval = alloca i32, align 4
  %latmctx.addr = alloca %struct.LATMContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %err = alloca i32, align 4
  %use_same_mux = alloca i8, align 1
  %mux_slot_length_bytes = alloca i32, align 4
  store %struct.LATMContext* %latmctx, %struct.LATMContext** %latmctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %latmctx.addr, metadata !16310, metadata !2062), !dbg !16311
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16312, metadata !2062), !dbg !16313
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16314, metadata !2062), !dbg !16315
  call void @llvm.dbg.declare(metadata i8* %use_same_mux, metadata !16316, metadata !2062), !dbg !16317
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16318
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 1), !dbg !16319
  %conv = trunc i32 %call to i8, !dbg !16319
  store i8 %conv, i8* %use_same_mux, align 1, !dbg !16317
  %1 = load i8, i8* %use_same_mux, align 1, !dbg !16320
  %tobool = icmp ne i8 %1, 0, !dbg !16320
  br i1 %tobool, label %if.else, label %if.then, !dbg !16322

if.then:                                          ; preds = %entry
  %2 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16323
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16326
  %call1 = call i32 @read_stream_mux_config(%struct.LATMContext* %2, %struct.GetBitContext* %3), !dbg !16327
  store i32 %call1, i32* %err, align 4, !dbg !16328
  %cmp = icmp slt i32 %call1, 0, !dbg !16329
  br i1 %cmp, label %if.then3, label %if.end, !dbg !16330

if.then3:                                         ; preds = %if.then
  %4 = load i32, i32* %err, align 4, !dbg !16331
  store i32 %4, i32* %retval, align 4, !dbg !16332
  br label %return, !dbg !16332

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !16333

if.else:                                          ; preds = %entry
  %5 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16334
  %aac_ctx = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %5, i32 0, i32 0, !dbg !16337
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx, i32 0, i32 1, !dbg !16338
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16338
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 15, !dbg !16339
  %7 = load i8*, i8** %extradata, align 8, !dbg !16339
  %tobool4 = icmp ne i8* %7, null, !dbg !16334
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !16340

if.then5:                                         ; preds = %if.else
  %8 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16341
  %aac_ctx6 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %8, i32 0, i32 0, !dbg !16343
  %avctx7 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx6, i32 0, i32 1, !dbg !16344
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 8, !dbg !16344
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !16341
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 48, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.90, i32 0, i32 0)), !dbg !16345
  store i32 1, i32* %retval, align 4, !dbg !16346
  br label %return, !dbg !16346

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %11 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16347
  %audio_mux_version_A = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %11, i32 0, i32 2, !dbg !16349
  %12 = load i32, i32* %audio_mux_version_A, align 4, !dbg !16349
  %cmp10 = icmp eq i32 %12, 0, !dbg !16350
  br i1 %cmp10, label %if.then12, label %if.end36, !dbg !16351

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %mux_slot_length_bytes, metadata !16352, metadata !2062), !dbg !16354
  %13 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16355
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16356
  %call13 = call i32 @read_payload_length_info(%struct.LATMContext* %13, %struct.GetBitContext* %14), !dbg !16357
  store i32 %call13, i32* %mux_slot_length_bytes, align 4, !dbg !16354
  %15 = load i32, i32* %mux_slot_length_bytes, align 4, !dbg !16358
  %cmp14 = icmp slt i32 %15, 0, !dbg !16360
  br i1 %cmp14, label %if.then21, label %lor.lhs.false, !dbg !16361

lor.lhs.false:                                    ; preds = %if.then12
  %16 = load i32, i32* %mux_slot_length_bytes, align 4, !dbg !16362
  %conv16 = sext i32 %16 to i64, !dbg !16362
  %mul = mul nsw i64 %conv16, 8, !dbg !16364
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16365
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %17), !dbg !16366
  %conv18 = sext i32 %call17 to i64, !dbg !16366
  %cmp19 = icmp sgt i64 %mul, %conv18, !dbg !16367
  br i1 %cmp19, label %if.then21, label %if.else24, !dbg !16368

if.then21:                                        ; preds = %lor.lhs.false, %if.then12
  %18 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16369
  %aac_ctx22 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %18, i32 0, i32 0, !dbg !16371
  %avctx23 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx22, i32 0, i32 1, !dbg !16372
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx23, align 8, !dbg !16372
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !16369
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0)), !dbg !16373
  store i32 -1094995529, i32* %retval, align 4, !dbg !16374
  br label %return, !dbg !16374

if.else24:                                        ; preds = %lor.lhs.false
  %21 = load i32, i32* %mux_slot_length_bytes, align 4, !dbg !16375
  %mul25 = mul nsw i32 %21, 8, !dbg !16377
  %add = add nsw i32 %mul25, 256, !dbg !16378
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16379
  %call26 = call i32 @get_bits_left(%struct.GetBitContext* %22), !dbg !16380
  %cmp27 = icmp slt i32 %add, %call26, !dbg !16381
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !16382

if.then29:                                        ; preds = %if.else24
  %23 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16383
  %aac_ctx30 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %23, i32 0, i32 0, !dbg !16385
  %avctx31 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx30, i32 0, i32 1, !dbg !16386
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 8, !dbg !16386
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !16383
  %26 = load i32, i32* %mux_slot_length_bytes, align 4, !dbg !16387
  %mul32 = mul nsw i32 %26, 8, !dbg !16388
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16389
  %call33 = call i32 @get_bits_left(%struct.GetBitContext* %27), !dbg !16390
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i32 0, i32 0), i32 %mul32, i32 %call33), !dbg !16391
  store i32 -1094995529, i32* %retval, align 4, !dbg !16392
  br label %return, !dbg !16392

if.end34:                                         ; preds = %if.else24
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !16393

if.end36:                                         ; preds = %if.end35, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !16394
  br label %return, !dbg !16394

return:                                           ; preds = %if.end36, %if.then29, %if.then21, %if.then5, %if.then3
  %28 = load i32, i32* %retval, align 4, !dbg !16395
  ret i32 %28, !dbg !16395
}

; Function Attrs: nounwind uwtable
define internal i32 @read_stream_mux_config(%struct.LATMContext* %latmctx, %struct.GetBitContext* %gb) #1 !dbg !16396 {
entry:
  %retval = alloca i32, align 4
  %latmctx.addr = alloca %struct.LATMContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  %audio_mux_version = alloca i32, align 4
  %ascLen = alloca i32, align 4
  %esc = alloca i32, align 4
  store %struct.LATMContext* %latmctx, %struct.LATMContext** %latmctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %latmctx.addr, metadata !16397, metadata !2062), !dbg !16398
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16399, metadata !2062), !dbg !16400
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16401, metadata !2062), !dbg !16402
  call void @llvm.dbg.declare(metadata i32* %audio_mux_version, metadata !16403, metadata !2062), !dbg !16404
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16405
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 1), !dbg !16406
  store i32 %call, i32* %audio_mux_version, align 4, !dbg !16404
  %1 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16407
  %audio_mux_version_A = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %1, i32 0, i32 2, !dbg !16408
  store i32 0, i32* %audio_mux_version_A, align 4, !dbg !16409
  %2 = load i32, i32* %audio_mux_version, align 4, !dbg !16410
  %tobool = icmp ne i32 %2, 0, !dbg !16410
  br i1 %tobool, label %if.then, label %if.end, !dbg !16412

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16413
  %call1 = call i32 @get_bits(%struct.GetBitContext* %3, i32 1), !dbg !16414
  %4 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16415
  %audio_mux_version_A2 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %4, i32 0, i32 2, !dbg !16416
  store i32 %call1, i32* %audio_mux_version_A2, align 4, !dbg !16417
  br label %if.end, !dbg !16415

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16418
  %audio_mux_version_A3 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %5, i32 0, i32 2, !dbg !16420
  %6 = load i32, i32* %audio_mux_version_A3, align 4, !dbg !16420
  %tobool4 = icmp ne i32 %6, 0, !dbg !16418
  br i1 %tobool4, label %if.end52, label %if.then5, !dbg !16421

if.then5:                                         ; preds = %if.end
  %7 = load i32, i32* %audio_mux_version, align 4, !dbg !16422
  %tobool6 = icmp ne i32 %7, 0, !dbg !16422
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !16425

if.then7:                                         ; preds = %if.then5
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16426
  %call8 = call i32 @latm_get_value(%struct.GetBitContext* %8), !dbg !16427
  br label %if.end9, !dbg !16427

if.end9:                                          ; preds = %if.then7, %if.then5
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16428
  call void @skip_bits(%struct.GetBitContext* %9, i32 1), !dbg !16429
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16430
  call void @skip_bits(%struct.GetBitContext* %10, i32 6), !dbg !16431
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16432
  %call10 = call i32 @get_bits(%struct.GetBitContext* %11, i32 4), !dbg !16434
  %tobool11 = icmp ne i32 %call10, 0, !dbg !16434
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !16435

if.then12:                                        ; preds = %if.end9
  %12 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16436
  %aac_ctx = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %12, i32 0, i32 0, !dbg !16438
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx, i32 0, i32 1, !dbg !16439
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16439
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !16436
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i32 0, i32 0)), !dbg !16440
  store i32 -1163346256, i32* %retval, align 4, !dbg !16441
  br label %return, !dbg !16441

if.end13:                                         ; preds = %if.end9
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16442
  %call14 = call i32 @get_bits(%struct.GetBitContext* %15, i32 3), !dbg !16444
  %tobool15 = icmp ne i32 %call14, 0, !dbg !16444
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !16445

if.then16:                                        ; preds = %if.end13
  %16 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16446
  %aac_ctx17 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %16, i32 0, i32 0, !dbg !16448
  %avctx18 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %aac_ctx17, i32 0, i32 1, !dbg !16449
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !16449
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !16446
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.94, i32 0, i32 0)), !dbg !16450
  store i32 -1163346256, i32* %retval, align 4, !dbg !16451
  br label %return, !dbg !16451

if.end19:                                         ; preds = %if.end13
  %19 = load i32, i32* %audio_mux_version, align 4, !dbg !16452
  %tobool20 = icmp ne i32 %19, 0, !dbg !16452
  br i1 %tobool20, label %if.else, label %if.then21, !dbg !16454

if.then21:                                        ; preds = %if.end19
  %20 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16455
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16458
  %call22 = call i32 @latm_decode_audio_specific_config(%struct.LATMContext* %20, %struct.GetBitContext* %21, i32 0), !dbg !16459
  store i32 %call22, i32* %ret, align 4, !dbg !16460
  %cmp = icmp slt i32 %call22, 0, !dbg !16461
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !16462

if.then23:                                        ; preds = %if.then21
  %22 = load i32, i32* %ret, align 4, !dbg !16463
  store i32 %22, i32* %retval, align 4, !dbg !16464
  br label %return, !dbg !16464

if.end24:                                         ; preds = %if.then21
  br label %if.end30, !dbg !16465

if.else:                                          ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %ascLen, metadata !16466, metadata !2062), !dbg !16468
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16469
  %call25 = call i32 @latm_get_value(%struct.GetBitContext* %23), !dbg !16470
  store i32 %call25, i32* %ascLen, align 4, !dbg !16468
  %24 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16471
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16473
  %26 = load i32, i32* %ascLen, align 4, !dbg !16474
  %call26 = call i32 @latm_decode_audio_specific_config(%struct.LATMContext* %24, %struct.GetBitContext* %25, i32 %26), !dbg !16475
  store i32 %call26, i32* %ret, align 4, !dbg !16476
  %cmp27 = icmp slt i32 %call26, 0, !dbg !16477
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !16478

if.then28:                                        ; preds = %if.else
  %27 = load i32, i32* %ret, align 4, !dbg !16479
  store i32 %27, i32* %retval, align 4, !dbg !16480
  br label %return, !dbg !16480

if.end29:                                         ; preds = %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end24
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16481
  %call31 = call i32 @get_bits(%struct.GetBitContext* %28, i32 3), !dbg !16482
  %29 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16483
  %frame_length_type = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %29, i32 0, i32 3, !dbg !16484
  store i32 %call31, i32* %frame_length_type, align 8, !dbg !16485
  %30 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16486
  %frame_length_type32 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %30, i32 0, i32 3, !dbg !16487
  %31 = load i32, i32* %frame_length_type32, align 8, !dbg !16487
  switch i32 %31, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb33
    i32 3, label %sw.bb35
    i32 4, label %sw.bb35
    i32 5, label %sw.bb35
    i32 6, label %sw.bb36
    i32 7, label %sw.bb36
  ], !dbg !16488

sw.bb:                                            ; preds = %if.end30
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16489
  call void @skip_bits(%struct.GetBitContext* %32, i32 8), !dbg !16491
  br label %sw.epilog, !dbg !16492

sw.bb33:                                          ; preds = %if.end30
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16493
  %call34 = call i32 @get_bits(%struct.GetBitContext* %33, i32 9), !dbg !16494
  %34 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16495
  %frame_length = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %34, i32 0, i32 4, !dbg !16496
  store i32 %call34, i32* %frame_length, align 4, !dbg !16497
  br label %sw.epilog, !dbg !16498

sw.bb35:                                          ; preds = %if.end30, %if.end30, %if.end30
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16499
  call void @skip_bits(%struct.GetBitContext* %35, i32 6), !dbg !16500
  br label %sw.epilog, !dbg !16501

sw.bb36:                                          ; preds = %if.end30, %if.end30
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16502
  call void @skip_bits(%struct.GetBitContext* %36, i32 1), !dbg !16503
  br label %sw.epilog, !dbg !16504

sw.epilog:                                        ; preds = %if.end30, %sw.bb36, %sw.bb35, %sw.bb33, %sw.bb
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16505
  %call37 = call i32 @get_bits(%struct.GetBitContext* %37, i32 1), !dbg !16507
  %tobool38 = icmp ne i32 %call37, 0, !dbg !16507
  br i1 %tobool38, label %if.then39, label %if.end47, !dbg !16508

if.then39:                                        ; preds = %sw.epilog
  %38 = load i32, i32* %audio_mux_version, align 4, !dbg !16509
  %tobool40 = icmp ne i32 %38, 0, !dbg !16509
  br i1 %tobool40, label %if.then41, label %if.else43, !dbg !16512

if.then41:                                        ; preds = %if.then39
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16513
  %call42 = call i32 @latm_get_value(%struct.GetBitContext* %39), !dbg !16515
  br label %if.end46, !dbg !16516

if.else43:                                        ; preds = %if.then39
  call void @llvm.dbg.declare(metadata i32* %esc, metadata !16517, metadata !2062), !dbg !16519
  br label %do.body, !dbg !16520, !llvm.loop !16521

do.body:                                          ; preds = %do.cond, %if.else43
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16522
  %call44 = call i32 @get_bits(%struct.GetBitContext* %40, i32 1), !dbg !16524
  store i32 %call44, i32* %esc, align 4, !dbg !16525
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16526
  call void @skip_bits(%struct.GetBitContext* %41, i32 8), !dbg !16527
  br label %do.cond, !dbg !16528

do.cond:                                          ; preds = %do.body
  %42 = load i32, i32* %esc, align 4, !dbg !16529
  %tobool45 = icmp ne i32 %42, 0, !dbg !16531
  br i1 %tobool45, label %do.body, label %do.end, !dbg !16531, !llvm.loop !16521

do.end:                                           ; preds = %do.cond
  br label %if.end46

if.end46:                                         ; preds = %do.end, %if.then41
  br label %if.end47, !dbg !16532

if.end47:                                         ; preds = %if.end46, %sw.epilog
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16533
  %call48 = call i32 @get_bits(%struct.GetBitContext* %43, i32 1), !dbg !16535
  %tobool49 = icmp ne i32 %call48, 0, !dbg !16535
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !16536

if.then50:                                        ; preds = %if.end47
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16537
  call void @skip_bits(%struct.GetBitContext* %44, i32 8), !dbg !16538
  br label %if.end51, !dbg !16538

if.end51:                                         ; preds = %if.then50, %if.end47
  br label %if.end52, !dbg !16539

if.end52:                                         ; preds = %if.end51, %if.end
  store i32 0, i32* %retval, align 4, !dbg !16540
  br label %return, !dbg !16540

return:                                           ; preds = %if.end52, %if.then28, %if.then23, %if.then16, %if.then12
  %45 = load i32, i32* %retval, align 4, !dbg !16541
  ret i32 %45, !dbg !16541
}

; Function Attrs: nounwind uwtable
define internal i32 @read_payload_length_info(%struct.LATMContext* %ctx, %struct.GetBitContext* %gb) #1 !dbg !16542 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.LATMContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %tmp = alloca i8, align 1
  %mux_slot_length = alloca i32, align 4
  store %struct.LATMContext* %ctx, %struct.LATMContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %ctx.addr, metadata !16543, metadata !2062), !dbg !16544
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16545, metadata !2062), !dbg !16546
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !16547, metadata !2062), !dbg !16548
  %0 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16549
  %frame_length_type = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %0, i32 0, i32 3, !dbg !16551
  %1 = load i32, i32* %frame_length_type, align 8, !dbg !16551
  %cmp = icmp eq i32 %1, 0, !dbg !16552
  br i1 %cmp, label %if.then, label %if.else, !dbg !16553

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mux_slot_length, metadata !16554, metadata !2062), !dbg !16556
  store i32 0, i32* %mux_slot_length, align 4, !dbg !16556
  br label %do.body, !dbg !16557, !llvm.loop !16558

do.body:                                          ; preds = %do.cond, %if.then
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16559
  %call = call i32 @get_bits_left(%struct.GetBitContext* %2), !dbg !16562
  %cmp2 = icmp slt i32 %call, 8, !dbg !16563
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !16564

if.then3:                                         ; preds = %do.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !16565
  br label %return, !dbg !16565

if.end:                                           ; preds = %do.body
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16566
  %call4 = call i32 @get_bits(%struct.GetBitContext* %3, i32 8), !dbg !16567
  %conv = trunc i32 %call4 to i8, !dbg !16567
  store i8 %conv, i8* %tmp, align 1, !dbg !16568
  %4 = load i8, i8* %tmp, align 1, !dbg !16569
  %conv5 = zext i8 %4 to i32, !dbg !16569
  %5 = load i32, i32* %mux_slot_length, align 4, !dbg !16570
  %add = add nsw i32 %5, %conv5, !dbg !16570
  store i32 %add, i32* %mux_slot_length, align 4, !dbg !16570
  br label %do.cond, !dbg !16571

do.cond:                                          ; preds = %if.end
  %6 = load i8, i8* %tmp, align 1, !dbg !16572
  %conv6 = zext i8 %6 to i32, !dbg !16572
  %cmp7 = icmp eq i32 %conv6, 255, !dbg !16574
  br i1 %cmp7, label %do.body, label %do.end, !dbg !16575, !llvm.loop !16558

do.end:                                           ; preds = %do.cond
  %7 = load i32, i32* %mux_slot_length, align 4, !dbg !16576
  store i32 %7, i32* %retval, align 4, !dbg !16577
  br label %return, !dbg !16577

if.else:                                          ; preds = %entry
  %8 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16578
  %frame_length_type9 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %8, i32 0, i32 3, !dbg !16580
  %9 = load i32, i32* %frame_length_type9, align 8, !dbg !16580
  %cmp10 = icmp eq i32 %9, 1, !dbg !16581
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !16582

if.then12:                                        ; preds = %if.else
  %10 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16583
  %frame_length = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %10, i32 0, i32 4, !dbg !16585
  %11 = load i32, i32* %frame_length, align 4, !dbg !16585
  store i32 %11, i32* %retval, align 4, !dbg !16586
  br label %return, !dbg !16586

if.else13:                                        ; preds = %if.else
  %12 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16587
  %frame_length_type14 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %12, i32 0, i32 3, !dbg !16589
  %13 = load i32, i32* %frame_length_type14, align 8, !dbg !16589
  %cmp15 = icmp eq i32 %13, 3, !dbg !16590
  br i1 %cmp15, label %if.then24, label %lor.lhs.false, !dbg !16591

lor.lhs.false:                                    ; preds = %if.else13
  %14 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16592
  %frame_length_type17 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %14, i32 0, i32 3, !dbg !16593
  %15 = load i32, i32* %frame_length_type17, align 8, !dbg !16593
  %cmp18 = icmp eq i32 %15, 5, !dbg !16594
  br i1 %cmp18, label %if.then24, label %lor.lhs.false20, !dbg !16595

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %16 = load %struct.LATMContext*, %struct.LATMContext** %ctx.addr, align 8, !dbg !16596
  %frame_length_type21 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %16, i32 0, i32 3, !dbg !16597
  %17 = load i32, i32* %frame_length_type21, align 8, !dbg !16597
  %cmp22 = icmp eq i32 %17, 7, !dbg !16598
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !16599

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %if.else13
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16601
  call void @skip_bits(%struct.GetBitContext* %18, i32 2), !dbg !16603
  br label %if.end25, !dbg !16604

if.end25:                                         ; preds = %if.then24, %lor.lhs.false20
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !16605
  br label %return, !dbg !16605

return:                                           ; preds = %if.end27, %if.then12, %do.end, %if.then3
  %19 = load i32, i32* %retval, align 4, !dbg !16606
  ret i32 %19, !dbg !16606
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @latm_get_value(%struct.GetBitContext* %b) #4 !dbg !16607 {
entry:
  %b.addr = alloca %struct.GetBitContext*, align 8
  %length = alloca i32, align 4
  store %struct.GetBitContext* %b, %struct.GetBitContext** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %b.addr, metadata !16610, metadata !2062), !dbg !16611
  call void @llvm.dbg.declare(metadata i32* %length, metadata !16612, metadata !2062), !dbg !16613
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %b.addr, align 8, !dbg !16614
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !16615
  store i32 %call, i32* %length, align 4, !dbg !16613
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %b.addr, align 8, !dbg !16616
  %2 = load i32, i32* %length, align 4, !dbg !16617
  %add = add nsw i32 %2, 1, !dbg !16618
  %mul = mul nsw i32 %add, 8, !dbg !16619
  %call1 = call i32 @get_bits_long(%struct.GetBitContext* %1, i32 %mul), !dbg !16620
  ret i32 %call1, !dbg !16621
}

; Function Attrs: nounwind uwtable
define internal i32 @latm_decode_audio_specific_config(%struct.LATMContext* %latmctx, %struct.GetBitContext* %gb, i32 %asclen) #1 !dbg !16622 {
entry:
  %retval = alloca i32, align 4
  %latmctx.addr = alloca %struct.LATMContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %asclen.addr = alloca i32, align 4
  %ac = alloca %struct.AACContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %m4ac = alloca %struct.MPEG4AudioConfig, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  %config_start_bit = alloca i32, align 4
  %sync_extension = alloca i32, align 4
  %bits_consumed = alloca i32, align 4
  %esize = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.LATMContext* %latmctx, %struct.LATMContext** %latmctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LATMContext** %latmctx.addr, metadata !16625, metadata !2062), !dbg !16626
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16627, metadata !2062), !dbg !16628
  store i32 %asclen, i32* %asclen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %asclen.addr, metadata !16629, metadata !2062), !dbg !16630
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac, metadata !16631, metadata !2062), !dbg !16632
  %0 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16633
  %aac_ctx = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %0, i32 0, i32 0, !dbg !16634
  store %struct.AACContext* %aac_ctx, %struct.AACContext** %ac, align 8, !dbg !16632
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !16635, metadata !2062), !dbg !16636
  %1 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !16637
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %1, i32 0, i32 1, !dbg !16638
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !16638
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx, align 8, !dbg !16636
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig* %m4ac, metadata !16639, metadata !2062), !dbg !16640
  %3 = bitcast %struct.MPEG4AudioConfig* %m4ac to i8*, !dbg !16640
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 48, i32 4, i1 false), !dbg !16640
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !16641, metadata !2062), !dbg !16642
  call void @llvm.dbg.declare(metadata i32* %config_start_bit, metadata !16643, metadata !2062), !dbg !16644
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16645
  %call = call i32 @get_bits_count(%struct.GetBitContext* %4), !dbg !16646
  store i32 %call, i32* %config_start_bit, align 4, !dbg !16644
  call void @llvm.dbg.declare(metadata i32* %sync_extension, metadata !16647, metadata !2062), !dbg !16648
  store i32 0, i32* %sync_extension, align 4, !dbg !16648
  call void @llvm.dbg.declare(metadata i32* %bits_consumed, metadata !16649, metadata !2062), !dbg !16650
  call void @llvm.dbg.declare(metadata i32* %esize, metadata !16651, metadata !2062), !dbg !16652
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16653, metadata !2062), !dbg !16654
  %5 = load i32, i32* %asclen.addr, align 4, !dbg !16655
  %cmp = icmp sgt i32 %5, 0, !dbg !16657
  br i1 %cmp, label %if.then, label %if.else, !dbg !16658

if.then:                                          ; preds = %entry
  store i32 1, i32* %sync_extension, align 4, !dbg !16659
  %6 = load i32, i32* %asclen.addr, align 4, !dbg !16661
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16662
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %7), !dbg !16663
  %cmp3 = icmp sgt i32 %6, %call2, !dbg !16664
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !16665

cond.true:                                        ; preds = %if.then
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16666
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %8), !dbg !16668
  br label %cond.end, !dbg !16669

cond.false:                                       ; preds = %if.then
  %9 = load i32, i32* %asclen.addr, align 4, !dbg !16670
  br label %cond.end, !dbg !16672

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call4, %cond.true ], [ %9, %cond.false ], !dbg !16673
  store i32 %cond, i32* %asclen.addr, align 4, !dbg !16675
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16676
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !16677
  %11 = load i8*, i8** %buffer, align 8, !dbg !16677
  %12 = load i32, i32* %config_start_bit, align 4, !dbg !16678
  %13 = load i32, i32* %asclen.addr, align 4, !dbg !16679
  %add = add nsw i32 %12, %13, !dbg !16680
  %call5 = call i32 @init_get_bits(%struct.GetBitContext* %gbc, i8* %11, i32 %add), !dbg !16681
  %14 = load i32, i32* %config_start_bit, align 4, !dbg !16682
  call void @skip_bits_long(%struct.GetBitContext* %gbc, i32 %14), !dbg !16683
  br label %if.end9, !dbg !16684

if.else:                                          ; preds = %entry
  %15 = load i32, i32* %asclen.addr, align 4, !dbg !16685
  %cmp6 = icmp eq i32 %15, 0, !dbg !16688
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !16685

if.then7:                                         ; preds = %if.else
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16689
  %17 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !16691
  %18 = bitcast %struct.GetBitContext* %16 to i8*, !dbg !16691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 32, i32 8, i1 false), !dbg !16691
  br label %if.end, !dbg !16692

if.else8:                                         ; preds = %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !16693
  br label %return, !dbg !16693

if.end:                                           ; preds = %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %cond.end
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16695
  %call10 = call i32 @get_bits_left(%struct.GetBitContext* %19), !dbg !16697
  %cmp11 = icmp sle i32 %call10, 0, !dbg !16698
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !16699

if.then12:                                        ; preds = %if.end9
  store i32 -1094995529, i32* %retval, align 4, !dbg !16700
  br label %return, !dbg !16700

if.end13:                                         ; preds = %if.end9
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16701
  %21 = load i32, i32* %config_start_bit, align 4, !dbg !16702
  %22 = load i32, i32* %sync_extension, align 4, !dbg !16703
  %call14 = call i32 @decode_audio_specific_config_gb(%struct.AACContext* null, %struct.AVCodecContext* %20, %struct.MPEG4AudioConfig* %m4ac, %struct.GetBitContext* %gbc, i32 %21, i32 %22), !dbg !16704
  store i32 %call14, i32* %bits_consumed, align 4, !dbg !16705
  %23 = load i32, i32* %bits_consumed, align 4, !dbg !16706
  %24 = load i32, i32* %config_start_bit, align 4, !dbg !16708
  %cmp15 = icmp slt i32 %23, %24, !dbg !16709
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !16710

if.then16:                                        ; preds = %if.end13
  store i32 -1094995529, i32* %retval, align 4, !dbg !16711
  br label %return, !dbg !16711

if.end17:                                         ; preds = %if.end13
  %25 = load i32, i32* %config_start_bit, align 4, !dbg !16712
  %26 = load i32, i32* %bits_consumed, align 4, !dbg !16713
  %sub = sub nsw i32 %26, %25, !dbg !16713
  store i32 %sub, i32* %bits_consumed, align 4, !dbg !16713
  %27 = load i32, i32* %asclen.addr, align 4, !dbg !16714
  %cmp18 = icmp eq i32 %27, 0, !dbg !16716
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !16717

if.then19:                                        ; preds = %if.end17
  %28 = load i32, i32* %bits_consumed, align 4, !dbg !16718
  store i32 %28, i32* %asclen.addr, align 4, !dbg !16719
  br label %if.end20, !dbg !16720

if.end20:                                         ; preds = %if.then19, %if.end17
  %29 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16721
  %initialized = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %29, i32 0, i32 1, !dbg !16723
  %30 = load i32, i32* %initialized, align 32, !dbg !16723
  %tobool = icmp ne i32 %30, 0, !dbg !16721
  br i1 %tobool, label %lor.lhs.false, label %if.then30, !dbg !16724

lor.lhs.false:                                    ; preds = %if.end20
  %31 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !16725
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %31, i32 0, i32 24, !dbg !16726
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !16725
  %m4ac21 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !16727
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac21, i32 0, i32 2, !dbg !16728
  %32 = load i32, i32* %sample_rate, align 8, !dbg !16728
  %sample_rate22 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !16729
  %33 = load i32, i32* %sample_rate22, align 4, !dbg !16729
  %cmp23 = icmp ne i32 %32, %33, !dbg !16730
  br i1 %cmp23, label %if.then30, label %lor.lhs.false24, !dbg !16731

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %34 = load %struct.AACContext*, %struct.AACContext** %ac, align 8, !dbg !16732
  %oc25 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %34, i32 0, i32 24, !dbg !16733
  %arrayidx26 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc25, i64 0, i64 1, !dbg !16732
  %m4ac27 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx26, i32 0, i32 0, !dbg !16734
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac27, i32 0, i32 3, !dbg !16735
  %35 = load i32, i32* %chan_config, align 4, !dbg !16735
  %chan_config28 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !16736
  %36 = load i32, i32* %chan_config28, align 4, !dbg !16736
  %cmp29 = icmp ne i32 %35, %36, !dbg !16737
  br i1 %cmp29, label %if.then30, label %if.end58, !dbg !16738

if.then30:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %if.end20
  %37 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16740
  %initialized31 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %37, i32 0, i32 1, !dbg !16743
  %38 = load i32, i32* %initialized31, align 32, !dbg !16743
  %tobool32 = icmp ne i32 %38, 0, !dbg !16740
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !16744

if.then33:                                        ; preds = %if.then30
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16745
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !16745
  %sample_rate34 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !16747
  %41 = load i32, i32* %sample_rate34, align 4, !dbg !16747
  %chan_config35 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 3, !dbg !16748
  %42 = load i32, i32* %chan_config35, align 4, !dbg !16748
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 32, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.95, i32 0, i32 0), i32 %41, i32 %42), !dbg !16749
  br label %if.end37, !dbg !16750

if.else36:                                        ; preds = %if.then30
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16751
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !16751
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 48, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.96, i32 0, i32 0)), !dbg !16753
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then33
  %45 = load %struct.LATMContext*, %struct.LATMContext** %latmctx.addr, align 8, !dbg !16754
  %initialized38 = getelementptr inbounds %struct.LATMContext, %struct.LATMContext* %45, i32 0, i32 1, !dbg !16755
  store i32 0, i32* %initialized38, align 32, !dbg !16756
  %46 = load i32, i32* %asclen.addr, align 4, !dbg !16757
  %add39 = add nsw i32 %46, 7, !dbg !16758
  %div = sdiv i32 %add39, 8, !dbg !16759
  store i32 %div, i32* %esize, align 4, !dbg !16760
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16761
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 16, !dbg !16763
  %48 = load i32, i32* %extradata_size, align 8, !dbg !16763
  %49 = load i32, i32* %esize, align 4, !dbg !16764
  %cmp40 = icmp slt i32 %48, %49, !dbg !16765
  br i1 %cmp40, label %if.then41, label %if.end49, !dbg !16766

if.then41:                                        ; preds = %if.end37
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16767
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 15, !dbg !16769
  %51 = load i8*, i8** %extradata, align 8, !dbg !16769
  call void @av_free(i8* %51), !dbg !16770
  %52 = load i32, i32* %esize, align 4, !dbg !16771
  %add42 = add nsw i32 %52, 64, !dbg !16772
  %conv = sext i32 %add42 to i64, !dbg !16771
  %call43 = call noalias i8* @av_malloc(i64 %conv), !dbg !16773
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16774
  %extradata44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 15, !dbg !16775
  store i8* %call43, i8** %extradata44, align 8, !dbg !16776
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16777
  %extradata45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 15, !dbg !16779
  %55 = load i8*, i8** %extradata45, align 8, !dbg !16779
  %tobool46 = icmp ne i8* %55, null, !dbg !16777
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !16780

if.then47:                                        ; preds = %if.then41
  store i32 -12, i32* %retval, align 4, !dbg !16781
  br label %return, !dbg !16781

if.end48:                                         ; preds = %if.then41
  br label %if.end49, !dbg !16782

if.end49:                                         ; preds = %if.end48, %if.end37
  %56 = load i32, i32* %esize, align 4, !dbg !16783
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16784
  %extradata_size50 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %57, i32 0, i32 16, !dbg !16785
  store i32 %56, i32* %extradata_size50, align 8, !dbg !16786
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16787
  %59 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !16788
  %60 = bitcast %struct.GetBitContext* %58 to i8*, !dbg !16788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 32, i32 8, i1 false), !dbg !16788
  store i32 0, i32* %i, align 4, !dbg !16789
  br label %for.cond, !dbg !16791

for.cond:                                         ; preds = %for.inc, %if.end49
  %61 = load i32, i32* %i, align 4, !dbg !16792
  %62 = load i32, i32* %esize, align 4, !dbg !16795
  %cmp51 = icmp slt i32 %61, %62, !dbg !16796
  br i1 %cmp51, label %for.body, label %for.end, !dbg !16797

for.body:                                         ; preds = %for.cond
  %call53 = call i32 @get_bits(%struct.GetBitContext* %gbc, i32 8), !dbg !16798
  %conv54 = trunc i32 %call53 to i8, !dbg !16798
  %63 = load i32, i32* %i, align 4, !dbg !16800
  %idxprom = sext i32 %63 to i64, !dbg !16801
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16801
  %extradata55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 15, !dbg !16802
  %65 = load i8*, i8** %extradata55, align 8, !dbg !16802
  %arrayidx56 = getelementptr inbounds i8, i8* %65, i64 %idxprom, !dbg !16801
  store i8 %conv54, i8* %arrayidx56, align 1, !dbg !16803
  br label %for.inc, !dbg !16804

for.inc:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !16805
  %inc = add nsw i32 %66, 1, !dbg !16805
  store i32 %inc, i32* %i, align 4, !dbg !16805
  br label %for.cond, !dbg !16807, !llvm.loop !16808

for.end:                                          ; preds = %for.cond
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !16810
  %extradata57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 15, !dbg !16811
  %68 = load i8*, i8** %extradata57, align 8, !dbg !16811
  %69 = load i32, i32* %esize, align 4, !dbg !16812
  %idx.ext = sext i32 %69 to i64, !dbg !16813
  %add.ptr = getelementptr inbounds i8, i8* %68, i64 %idx.ext, !dbg !16813
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 64, i32 1, i1 false), !dbg !16814
  br label %if.end58, !dbg !16815

if.end58:                                         ; preds = %for.end, %lor.lhs.false24
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16816
  %71 = load i32, i32* %asclen.addr, align 4, !dbg !16817
  call void @skip_bits_long(%struct.GetBitContext* %70, i32 %71), !dbg !16818
  store i32 0, i32* %retval, align 4, !dbg !16819
  br label %return, !dbg !16819

return:                                           ; preds = %if.end58, %if.then47, %if.then16, %if.then12, %if.else8
  %72 = load i32, i32* %retval, align 4, !dbg !16820
  ret i32 %72, !dbg !16820
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !16821 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !16822, metadata !2062), !dbg !16823
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16824, metadata !2062), !dbg !16825
  %0 = load i32, i32* %n.addr, align 4, !dbg !16826
  %tobool = icmp ne i32 %0, 0, !dbg !16826
  br i1 %tobool, label %if.else, label %if.then, !dbg !16828

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16829
  br label %return, !dbg !16829

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !16831
  %cmp = icmp sle i32 %1, 25, !dbg !16833
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !16834

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16835
  %3 = load i32, i32* %n.addr, align 4, !dbg !16837
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !16838
  store i32 %call, i32* %retval, align 4, !dbg !16839
  br label %return, !dbg !16839

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16840, metadata !2062), !dbg !16842
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16843
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !16844
  %5 = load i32, i32* %n.addr, align 4, !dbg !16845
  %sub = sub nsw i32 %5, 16, !dbg !16846
  %shl = shl i32 %call3, %sub, !dbg !16847
  store i32 %shl, i32* %ret, align 4, !dbg !16842
  %6 = load i32, i32* %ret, align 4, !dbg !16848
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !16849
  %8 = load i32, i32* %n.addr, align 4, !dbg !16850
  %sub4 = sub nsw i32 %8, 16, !dbg !16851
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !16852
  %or = or i32 %6, %call5, !dbg !16853
  store i32 %or, i32* %retval, align 4, !dbg !16854
  br label %return, !dbg !16854

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !16855
  ret i32 %9, !dbg !16855
}

declare void @av_free(i8*) #2

declare noalias i8* @av_malloc(i64) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2057, !2058}
!llvm.ident = !{!2059}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1011, globals: !1143)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !916, !925, !930, !940, !946, !950, !957, !1003}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !910, line: 75, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!911 = !{!912, !913, !914, !915}
!912 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!913 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!914 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!915 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !910, line: 82, size: 32, align: 32, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924}
!918 = !DIEnumerator(name: "ZERO_BT", value: 0)
!919 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!920 = !DIEnumerator(name: "ESC_BT", value: 11)
!921 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!922 = !DIEnumerator(name: "NOISE_BT", value: 13)
!923 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!924 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !910, line: 106, size: 32, align: 32, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!928 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!929 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !910, line: 55, size: 32, align: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939}
!932 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!933 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!934 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!935 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!936 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!937 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!938 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!939 = !DIEnumerator(name: "TYPE_END", value: 7)
!940 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !941, line: 77, size: 32, align: 32, elements: !942)
!941 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!942 = !{!943, !944, !945}
!943 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!944 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!945 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !941, line: 83, size: 32, align: 32, elements: !947)
!947 = !{!948, !949}
!948 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!949 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !910, line: 115, size: 32, align: 32, elements: !951)
!951 = !{!952, !953, !954, !955, !956}
!952 = !DIEnumerator(name: "OC_NONE", value: 0)
!953 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!954 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!955 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!956 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AudioObjectType", file: !958, line: 72, size: 32, align: 32, elements: !959)
!958 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!959 = !{!960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002}
!960 = !DIEnumerator(name: "AOT_NULL", value: 0)
!961 = !DIEnumerator(name: "AOT_AAC_MAIN", value: 1)
!962 = !DIEnumerator(name: "AOT_AAC_LC", value: 2)
!963 = !DIEnumerator(name: "AOT_AAC_SSR", value: 3)
!964 = !DIEnumerator(name: "AOT_AAC_LTP", value: 4)
!965 = !DIEnumerator(name: "AOT_SBR", value: 5)
!966 = !DIEnumerator(name: "AOT_AAC_SCALABLE", value: 6)
!967 = !DIEnumerator(name: "AOT_TWINVQ", value: 7)
!968 = !DIEnumerator(name: "AOT_CELP", value: 8)
!969 = !DIEnumerator(name: "AOT_HVXC", value: 9)
!970 = !DIEnumerator(name: "AOT_TTSI", value: 12)
!971 = !DIEnumerator(name: "AOT_MAINSYNTH", value: 13)
!972 = !DIEnumerator(name: "AOT_WAVESYNTH", value: 14)
!973 = !DIEnumerator(name: "AOT_MIDI", value: 15)
!974 = !DIEnumerator(name: "AOT_SAFX", value: 16)
!975 = !DIEnumerator(name: "AOT_ER_AAC_LC", value: 17)
!976 = !DIEnumerator(name: "AOT_ER_AAC_LTP", value: 19)
!977 = !DIEnumerator(name: "AOT_ER_AAC_SCALABLE", value: 20)
!978 = !DIEnumerator(name: "AOT_ER_TWINVQ", value: 21)
!979 = !DIEnumerator(name: "AOT_ER_BSAC", value: 22)
!980 = !DIEnumerator(name: "AOT_ER_AAC_LD", value: 23)
!981 = !DIEnumerator(name: "AOT_ER_CELP", value: 24)
!982 = !DIEnumerator(name: "AOT_ER_HVXC", value: 25)
!983 = !DIEnumerator(name: "AOT_ER_HILN", value: 26)
!984 = !DIEnumerator(name: "AOT_ER_PARAM", value: 27)
!985 = !DIEnumerator(name: "AOT_SSC", value: 28)
!986 = !DIEnumerator(name: "AOT_PS", value: 29)
!987 = !DIEnumerator(name: "AOT_SURROUND", value: 30)
!988 = !DIEnumerator(name: "AOT_ESCAPE", value: 31)
!989 = !DIEnumerator(name: "AOT_L1", value: 32)
!990 = !DIEnumerator(name: "AOT_L2", value: 33)
!991 = !DIEnumerator(name: "AOT_L3", value: 34)
!992 = !DIEnumerator(name: "AOT_DST", value: 35)
!993 = !DIEnumerator(name: "AOT_ALS", value: 36)
!994 = !DIEnumerator(name: "AOT_SLS", value: 37)
!995 = !DIEnumerator(name: "AOT_SLS_NON_CORE", value: 38)
!996 = !DIEnumerator(name: "AOT_ER_AAC_ELD", value: 39)
!997 = !DIEnumerator(name: "AOT_SMR_SIMPLE", value: 40)
!998 = !DIEnumerator(name: "AOT_SMR_MAIN", value: 41)
!999 = !DIEnumerator(name: "AOT_USAC_NOSBR", value: 42)
!1000 = !DIEnumerator(name: "AOT_SAOC", value: 43)
!1001 = !DIEnumerator(name: "AOT_LD_SURROUND", value: 44)
!1002 = !DIEnumerator(name: "AOT_USAC", value: 45)
!1003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ChannelPosition", file: !910, line: 94, size: 32, align: 32, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010}
!1005 = !DIEnumerator(name: "AAC_CHANNEL_OFF", value: 0)
!1006 = !DIEnumerator(name: "AAC_CHANNEL_FRONT", value: 1)
!1007 = !DIEnumerator(name: "AAC_CHANNEL_SIDE", value: 2)
!1008 = !DIEnumerator(name: "AAC_CHANNEL_BACK", value: 3)
!1009 = !DIEnumerator(name: "AAC_CHANNEL_LFE", value: 4)
!1010 = !DIEnumerator(name: "AAC_CHANNEL_CC", value: 5)
!1011 = !{!1012, !1013, !1014, !1017, !1016, !1018, !1020, !1021, !1029, !1031, !1032, !1027, !1033, !1034, !1036}
!1012 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1013 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINTFLOAT", file: !1015, line: 87, baseType: !1016)
!1015 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1016 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !1015, line: 86, baseType: !1016)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPC_TYPE_U", file: !1019, line: 127, baseType: !1016)
!1019 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1024, line: 221, size: 32, align: 8, elements: !1025)
!1024 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1025 = !{!1026}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1023, file: !1024, line: 221, baseType: !1027, size: 32, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1028, line: 51, baseType: !1013)
!1028 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1028, line: 48, baseType: !1030)
!1030 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !1015, line: 91, baseType: !1013)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1039)
!1039 = !{!1040, !1045, !1047, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1062, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1095, !1097, !1098, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1131, !1132, !1133, !1134, !1135, !1136, !1139, !1140, !1141, !1142}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !744, line: 282, baseType: !1041, size: 512, align: 64)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 512, align: 64, elements: !1043)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1043 = !{!1044}
!1044 = !DISubrange(count: 8)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1038, file: !744, line: 299, baseType: !1046, size: 256, align: 32, offset: 512)
!1046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 256, align: 32, elements: !1043)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1038, file: !744, line: 315, baseType: !1048, size: 64, align: 64, offset: 768)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1038, file: !744, line: 326, baseType: !1012, size: 32, align: 32, offset: 832)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1038, file: !744, line: 326, baseType: !1012, size: 32, align: 32, offset: 864)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1038, file: !744, line: 334, baseType: !1012, size: 32, align: 32, offset: 896)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1038, file: !744, line: 341, baseType: !1012, size: 32, align: 32, offset: 928)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1038, file: !744, line: 346, baseType: !1012, size: 32, align: 32, offset: 960)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1038, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1038, file: !744, line: 356, baseType: !1056, size: 64, align: 32, offset: 1024)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1057, line: 61, baseType: !1058)
!1057 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1057, line: 58, size: 64, align: 32, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1058, file: !1057, line: 59, baseType: !1012, size: 32, align: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1058, file: !1057, line: 60, baseType: !1012, size: 32, align: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1038, file: !744, line: 361, baseType: !1063, size: 64, align: 64, offset: 1088)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1028, line: 40, baseType: !1064)
!1064 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1038, file: !744, line: 369, baseType: !1063, size: 64, align: 64, offset: 1152)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1038, file: !744, line: 377, baseType: !1063, size: 64, align: 64, offset: 1216)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1038, file: !744, line: 382, baseType: !1012, size: 32, align: 32, offset: 1280)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1038, file: !744, line: 386, baseType: !1012, size: 32, align: 32, offset: 1312)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1038, file: !744, line: 391, baseType: !1012, size: 32, align: 32, offset: 1344)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1038, file: !744, line: 396, baseType: !1020, size: 64, align: 64, offset: 1408)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1038, file: !744, line: 403, baseType: !1072, size: 512, align: 64, offset: 1472)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 512, align: 64, elements: !1043)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1028, line: 55, baseType: !1074)
!1074 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1038, file: !744, line: 410, baseType: !1012, size: 32, align: 32, offset: 1984)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1038, file: !744, line: 415, baseType: !1012, size: 32, align: 32, offset: 2016)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1038, file: !744, line: 420, baseType: !1012, size: 32, align: 32, offset: 2048)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1038, file: !744, line: 425, baseType: !1012, size: 32, align: 32, offset: 2080)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1038, file: !744, line: 435, baseType: !1063, size: 64, align: 64, offset: 2112)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1038, file: !744, line: 440, baseType: !1012, size: 32, align: 32, offset: 2176)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1038, file: !744, line: 445, baseType: !1073, size: 64, align: 64, offset: 2240)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1038, file: !744, line: 459, baseType: !1083, size: 512, align: 64, offset: 2304)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 512, align: 64, elements: !1043)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1086, line: 94, baseType: !1087)
!1086 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1086, line: 81, size: 192, align: 64, elements: !1088)
!1088 = !{!1089, !1093, !1094}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1087, file: !1086, line: 82, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1086, line: 73, baseType: !1092)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1086, line: 73, flags: DIFlagFwdDecl)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1087, file: !1086, line: 89, baseType: !1042, size: 64, align: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1087, file: !1086, line: 93, baseType: !1012, size: 32, align: 32, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1038, file: !744, line: 473, baseType: !1096, size: 64, align: 64, offset: 2816)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1038, file: !744, line: 477, baseType: !1012, size: 32, align: 32, offset: 2880)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1038, file: !744, line: 479, baseType: !1099, size: 64, align: 64, offset: 2944)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107, !1112}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1102, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1102, file: !744, line: 203, baseType: !1042, size: 64, align: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1102, file: !744, line: 204, baseType: !1012, size: 32, align: 32, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1102, file: !744, line: 205, baseType: !1108, size: 64, align: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1110, line: 86, baseType: !1111)
!1110 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1111 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1110, line: 86, flags: DIFlagFwdDecl)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1102, file: !744, line: 206, baseType: !1084, size: 64, align: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1038, file: !744, line: 480, baseType: !1012, size: 32, align: 32, offset: 3008)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1038, file: !744, line: 505, baseType: !1012, size: 32, align: 32, offset: 3040)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1038, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1038, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1038, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1038, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1038, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1038, file: !744, line: 532, baseType: !1063, size: 64, align: 64, offset: 3264)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1038, file: !744, line: 539, baseType: !1063, size: 64, align: 64, offset: 3328)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1038, file: !744, line: 547, baseType: !1063, size: 64, align: 64, offset: 3392)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1038, file: !744, line: 554, baseType: !1108, size: 64, align: 64, offset: 3456)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1038, file: !744, line: 563, baseType: !1012, size: 32, align: 32, offset: 3520)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1038, file: !744, line: 572, baseType: !1012, size: 32, align: 32, offset: 3552)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1038, file: !744, line: 581, baseType: !1012, size: 32, align: 32, offset: 3584)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1038, file: !744, line: 588, baseType: !1128, size: 64, align: 64, offset: 3648)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1028, line: 36, baseType: !1130)
!1130 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1038, file: !744, line: 593, baseType: !1012, size: 32, align: 32, offset: 3712)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1038, file: !744, line: 596, baseType: !1012, size: 32, align: 32, offset: 3744)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1038, file: !744, line: 599, baseType: !1084, size: 64, align: 64, offset: 3776)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1038, file: !744, line: 605, baseType: !1084, size: 64, align: 64, offset: 3840)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1038, file: !744, line: 616, baseType: !1084, size: 64, align: 64, offset: 3904)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1038, file: !744, line: 626, baseType: !1137, size: 64, align: 64, offset: 3968)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1138, line: 216, baseType: !1074)
!1138 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1038, file: !744, line: 627, baseType: !1137, size: 64, align: 64, offset: 4032)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1038, file: !744, line: 628, baseType: !1137, size: 64, align: 64, offset: 4096)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1038, file: !744, line: 629, baseType: !1137, size: 64, align: 64, offset: 4160)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1038, file: !744, line: 645, baseType: !1084, size: 64, align: 64, offset: 4224)
!1143 = !{!1144, !1796, !1797, !1802, !1804, !1810, !1813, !1824, !1828, !1832, !1836, !1840, !1844, !1848, !1852, !1856, !1860, !1864, !1868, !1883, !1888, !1889, !1892, !1897, !1900, !1904, !1905, !1907, !1909, !1910, !2055}
!1144 = distinct !DIGlobalVariable(name: "ff_aac_decoder", scope: !0, file: !1145, line: 551, type: !1146, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_aac_decoder)
!1145 = !DIFile(filename: "libavcodec/aacdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1148)
!1148 = !{!1149, !1153, !1154, !1155, !1156, !1157, !1160, !1163, !1166, !1169, !1172, !1173, !1246, !1254, !1255, !1256, !1258, !1711, !1717, !1725, !1729, !1730, !1767, !1771, !1775, !1776, !1780, !1784, !1785, !1789, !1790, !1791}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1147, file: !14, line: 3475, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1147, file: !14, line: 3480, baseType: !1150, size: 64, align: 64, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1147, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1147, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1147, file: !14, line: 3487, baseType: !1012, size: 32, align: 32, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1147, file: !14, line: 3488, baseType: !1158, size: 64, align: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1147, file: !14, line: 3489, baseType: !1161, size: 64, align: 64, offset: 320)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1147, file: !14, line: 3490, baseType: !1164, size: 64, align: 64, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1147, file: !14, line: 3491, baseType: !1167, size: 64, align: 64, offset: 448)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1147, file: !14, line: 3492, baseType: !1170, size: 64, align: 64, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1147, file: !14, line: 3493, baseType: !1029, size: 8, align: 8, offset: 576)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1147, file: !14, line: 3494, baseType: !1174, size: 64, align: 64, offset: 640)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1178)
!1178 = !{!1179, !1180, !1184, !1205, !1206, !1207, !1208, !1212, !1218, !1220, !1224}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1177, file: !713, line: 72, baseType: !1150, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1177, file: !713, line: 78, baseType: !1181, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64, align: 64)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!1150, !1020}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1177, file: !713, line: 85, baseType: !1185, size: 64, align: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1201, !1202, !1203, !1204}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1187, file: !691, line: 247, baseType: !1150, size: 64, align: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1187, file: !691, line: 253, baseType: !1150, size: 64, align: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1187, file: !691, line: 259, baseType: !1012, size: 32, align: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1187, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1187, file: !691, line: 271, baseType: !1194, size: 64, align: 64, offset: 192)
!1194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1187, file: !691, line: 265, size: 64, align: 64, elements: !1195)
!1195 = !{!1196, !1197, !1199, !1200}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1194, file: !691, line: 266, baseType: !1063, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1194, file: !691, line: 267, baseType: !1198, size: 64, align: 64)
!1198 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1194, file: !691, line: 268, baseType: !1150, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1194, file: !691, line: 270, baseType: !1056, size: 64, align: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1187, file: !691, line: 272, baseType: !1198, size: 64, align: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1187, file: !691, line: 273, baseType: !1198, size: 64, align: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1187, file: !691, line: 275, baseType: !1012, size: 32, align: 32, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1187, file: !691, line: 300, baseType: !1150, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1177, file: !713, line: 93, baseType: !1012, size: 32, align: 32, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1177, file: !713, line: 99, baseType: !1012, size: 32, align: 32, offset: 224)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1177, file: !713, line: 108, baseType: !1012, size: 32, align: 32, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1177, file: !713, line: 113, baseType: !1209, size: 64, align: 64, offset: 320)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!1020, !1020, !1020}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1177, file: !713, line: 123, baseType: !1213, size: 64, align: 64, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64, align: 64)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!1216, !1216}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64, align: 64)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1177, file: !713, line: 130, baseType: !1219, size: 32, align: 32, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1177, file: !713, line: 136, baseType: !1221, size: 64, align: 64, offset: 512)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!1219, !1020}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1177, file: !713, line: 142, baseType: !1225, size: 64, align: 64, offset: 576)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64, align: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!1012, !1228, !1020, !1150, !1012}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1231)
!1231 = !{!1232, !1244, !1245}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1230, file: !691, line: 360, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1236, file: !691, line: 307, baseType: !1150, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1236, file: !691, line: 313, baseType: !1198, size: 64, align: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1236, file: !691, line: 313, baseType: !1198, size: 64, align: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1236, file: !691, line: 318, baseType: !1198, size: 64, align: 64, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1236, file: !691, line: 318, baseType: !1198, size: 64, align: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1236, file: !691, line: 323, baseType: !1012, size: 32, align: 32, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1230, file: !691, line: 364, baseType: !1012, size: 32, align: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1230, file: !691, line: 368, baseType: !1012, size: 32, align: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1147, file: !14, line: 3495, baseType: !1247, size: 64, align: 64, offset: 704)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1251)
!1251 = !{!1252, !1253}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1250, file: !14, line: 3402, baseType: !1012, size: 32, align: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1250, file: !14, line: 3403, baseType: !1150, size: 64, align: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1147, file: !14, line: 3507, baseType: !1150, size: 64, align: 64, offset: 768)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1147, file: !14, line: 3516, baseType: !1012, size: 32, align: 32, offset: 832)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1147, file: !14, line: 3517, baseType: !1257, size: 64, align: 64, offset: 896)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1147, file: !14, line: 3527, baseType: !1259, size: 64, align: 64, offset: 960)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!1012, !1262}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1272, !1273, !1274, !1275, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1458, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1649, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1264, file: !14, line: 1561, baseType: !1174, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1264, file: !14, line: 1562, baseType: !1012, size: 32, align: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1264, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1264, file: !14, line: 1565, baseType: !1270, size: 64, align: 64, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1264, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1264, file: !14, line: 1581, baseType: !1013, size: 32, align: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1264, file: !14, line: 1583, baseType: !1020, size: 64, align: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1264, file: !14, line: 1591, baseType: !1276, size: 64, align: 64, offset: 320)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64, align: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1278, line: 129, size: 1664, align: 64, elements: !1279)
!1278 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1279 = !{!1280, !1281, !1282, !1283, !1284, !1305, !1306, !1335, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1277, file: !1278, line: 136, baseType: !1012, size: 32, align: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1277, file: !1278, line: 151, baseType: !1012, size: 32, align: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1277, file: !1278, line: 157, baseType: !1012, size: 32, align: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1277, file: !1278, line: 159, baseType: !1036, size: 64, align: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1277, file: !1278, line: 161, baseType: !1285, size: 64, align: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1278, line: 117, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1278, line: 100, size: 832, align: 64, elements: !1288)
!1288 = !{!1289, !1296, !1297, !1298, !1299, !1300, !1302, !1303, !1304}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1287, file: !1278, line: 105, baseType: !1290, size: 256, align: 64)
!1290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1291, size: 256, align: 64, elements: !1294)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1086, line: 238, baseType: !1293)
!1293 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1086, line: 238, flags: DIFlagFwdDecl)
!1294 = !{!1295}
!1295 = !DISubrange(count: 4)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1287, file: !1278, line: 110, baseType: !1012, size: 32, align: 32, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1287, file: !1278, line: 111, baseType: !1012, size: 32, align: 32, offset: 288)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1287, file: !1278, line: 111, baseType: !1012, size: 32, align: 32, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1287, file: !1278, line: 112, baseType: !1046, size: 256, align: 32, offset: 352)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1287, file: !1278, line: 113, baseType: !1301, size: 128, align: 32, offset: 608)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 128, align: 32, elements: !1294)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1287, file: !1278, line: 114, baseType: !1012, size: 32, align: 32, offset: 736)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1287, file: !1278, line: 115, baseType: !1012, size: 32, align: 32, offset: 768)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1287, file: !1278, line: 116, baseType: !1012, size: 32, align: 32, offset: 800)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1277, file: !1278, line: 163, baseType: !1020, size: 64, align: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1277, file: !1278, line: 165, baseType: !1307, size: 128, align: 64, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1278, line: 122, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1278, line: 119, size: 128, align: 64, elements: !1309)
!1309 = !{!1310, !1334}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1308, file: !1278, line: 120, baseType: !1311, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1330, !1331, !1332, !1333}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1313, file: !14, line: 1451, baseType: !1084, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1313, file: !14, line: 1461, baseType: !1063, size: 64, align: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1313, file: !14, line: 1467, baseType: !1063, size: 64, align: 64, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1313, file: !14, line: 1468, baseType: !1042, size: 64, align: 64, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1313, file: !14, line: 1469, baseType: !1012, size: 32, align: 32, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1313, file: !14, line: 1470, baseType: !1012, size: 32, align: 32, offset: 288)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1313, file: !14, line: 1474, baseType: !1012, size: 32, align: 32, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1313, file: !14, line: 1479, baseType: !1323, size: 64, align: 64, offset: 384)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1326)
!1326 = !{!1327, !1328, !1329}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1325, file: !14, line: 1412, baseType: !1042, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1325, file: !14, line: 1413, baseType: !1012, size: 32, align: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1325, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1313, file: !14, line: 1480, baseType: !1012, size: 32, align: 32, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1313, file: !14, line: 1486, baseType: !1063, size: 64, align: 64, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1313, file: !14, line: 1488, baseType: !1063, size: 64, align: 64, offset: 576)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1313, file: !14, line: 1497, baseType: !1063, size: 64, align: 64, offset: 640)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1308, file: !1278, line: 121, baseType: !1036, size: 64, align: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1277, file: !1278, line: 166, baseType: !1336, size: 128, align: 64, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1278, line: 127, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1278, line: 124, size: 128, align: 64, elements: !1338)
!1338 = !{!1339, !1412}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1337, file: !1278, line: 125, baseType: !1340, size: 64, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1344)
!1344 = !{!1345, !1346, !1370, !1374, !1375, !1409, !1410, !1411}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1343, file: !14, line: 5751, baseType: !1174, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1343, file: !14, line: 5756, baseType: !1347, size: 64, align: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1350)
!1350 = !{!1351, !1352, !1355, !1356, !1357, !1361, !1365, !1369}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1349, file: !14, line: 5797, baseType: !1150, size: 64, align: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1349, file: !14, line: 5804, baseType: !1353, size: 64, align: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1349, file: !14, line: 5815, baseType: !1174, size: 64, align: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1349, file: !14, line: 5825, baseType: !1012, size: 32, align: 32, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1349, file: !14, line: 5826, baseType: !1358, size: 64, align: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1012, !1341}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1349, file: !14, line: 5827, baseType: !1362, size: 64, align: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!1012, !1341, !1311}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1349, file: !14, line: 5828, baseType: !1366, size: 64, align: 64, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{null, !1341}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1349, file: !14, line: 5829, baseType: !1366, size: 64, align: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1343, file: !14, line: 5762, baseType: !1371, size: 64, align: 64, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1373)
!1373 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1343, file: !14, line: 5768, baseType: !1020, size: 64, align: 64, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1343, file: !14, line: 5775, baseType: !1376, size: 64, align: 64, offset: 256)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1378, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1378, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1378, file: !14, line: 3948, baseType: !1027, size: 32, align: 32, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1378, file: !14, line: 3958, baseType: !1042, size: 64, align: 64, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1378, file: !14, line: 3962, baseType: !1012, size: 32, align: 32, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1378, file: !14, line: 3968, baseType: !1012, size: 32, align: 32, offset: 224)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1378, file: !14, line: 3973, baseType: !1063, size: 64, align: 64, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1378, file: !14, line: 3986, baseType: !1012, size: 32, align: 32, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1378, file: !14, line: 3999, baseType: !1012, size: 32, align: 32, offset: 352)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1378, file: !14, line: 4004, baseType: !1012, size: 32, align: 32, offset: 384)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1378, file: !14, line: 4005, baseType: !1012, size: 32, align: 32, offset: 416)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1378, file: !14, line: 4010, baseType: !1012, size: 32, align: 32, offset: 448)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1378, file: !14, line: 4011, baseType: !1012, size: 32, align: 32, offset: 480)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1378, file: !14, line: 4020, baseType: !1056, size: 64, align: 32, offset: 512)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1378, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1378, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1378, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1378, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1378, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1378, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1378, file: !14, line: 4039, baseType: !1012, size: 32, align: 32, offset: 768)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1378, file: !14, line: 4046, baseType: !1073, size: 64, align: 64, offset: 832)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1378, file: !14, line: 4050, baseType: !1012, size: 32, align: 32, offset: 896)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1378, file: !14, line: 4054, baseType: !1012, size: 32, align: 32, offset: 928)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1378, file: !14, line: 4061, baseType: !1012, size: 32, align: 32, offset: 960)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1378, file: !14, line: 4065, baseType: !1012, size: 32, align: 32, offset: 992)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1378, file: !14, line: 4073, baseType: !1012, size: 32, align: 32, offset: 1024)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1378, file: !14, line: 4080, baseType: !1012, size: 32, align: 32, offset: 1056)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1378, file: !14, line: 4084, baseType: !1012, size: 32, align: 32, offset: 1088)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1343, file: !14, line: 5781, baseType: !1376, size: 64, align: 64, offset: 320)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1343, file: !14, line: 5787, baseType: !1056, size: 64, align: 32, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1343, file: !14, line: 5793, baseType: !1056, size: 64, align: 32, offset: 448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1337, file: !1278, line: 126, baseType: !1012, size: 32, align: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1277, file: !1278, line: 172, baseType: !1311, size: 64, align: 64, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1277, file: !1278, line: 177, baseType: !1042, size: 64, align: 64, offset: 640)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1277, file: !1278, line: 178, baseType: !1013, size: 32, align: 32, offset: 704)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1277, file: !1278, line: 180, baseType: !1020, size: 64, align: 64, offset: 768)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1277, file: !1278, line: 185, baseType: !1012, size: 32, align: 32, offset: 832)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1277, file: !1278, line: 190, baseType: !1020, size: 64, align: 64, offset: 896)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1277, file: !1278, line: 195, baseType: !1012, size: 32, align: 32, offset: 960)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1277, file: !1278, line: 200, baseType: !1311, size: 64, align: 64, offset: 1024)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1277, file: !1278, line: 201, baseType: !1012, size: 32, align: 32, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1277, file: !1278, line: 202, baseType: !1036, size: 64, align: 64, offset: 1152)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1277, file: !1278, line: 203, baseType: !1012, size: 32, align: 32, offset: 1216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1277, file: !1278, line: 205, baseType: !1012, size: 32, align: 32, offset: 1248)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1277, file: !1278, line: 206, baseType: !1012, size: 32, align: 32, offset: 1280)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1277, file: !1278, line: 209, baseType: !1137, size: 64, align: 64, offset: 1344)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1277, file: !1278, line: 212, baseType: !1137, size: 64, align: 64, offset: 1408)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1277, file: !1278, line: 213, baseType: !1036, size: 64, align: 64, offset: 1472)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1277, file: !1278, line: 215, baseType: !1012, size: 32, align: 32, offset: 1536)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1277, file: !1278, line: 217, baseType: !1012, size: 32, align: 32, offset: 1568)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1277, file: !1278, line: 220, baseType: !1012, size: 32, align: 32, offset: 1600)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1264, file: !14, line: 1598, baseType: !1020, size: 64, align: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1264, file: !14, line: 1606, baseType: !1063, size: 64, align: 64, offset: 448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1264, file: !14, line: 1614, baseType: !1012, size: 32, align: 32, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1264, file: !14, line: 1622, baseType: !1012, size: 32, align: 32, offset: 544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1264, file: !14, line: 1628, baseType: !1012, size: 32, align: 32, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1264, file: !14, line: 1636, baseType: !1012, size: 32, align: 32, offset: 608)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1264, file: !14, line: 1643, baseType: !1012, size: 32, align: 32, offset: 640)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1264, file: !14, line: 1657, baseType: !1042, size: 64, align: 64, offset: 704)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1264, file: !14, line: 1658, baseType: !1012, size: 32, align: 32, offset: 768)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1264, file: !14, line: 1679, baseType: !1056, size: 64, align: 32, offset: 800)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1264, file: !14, line: 1688, baseType: !1012, size: 32, align: 32, offset: 864)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1264, file: !14, line: 1712, baseType: !1012, size: 32, align: 32, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1264, file: !14, line: 1729, baseType: !1012, size: 32, align: 32, offset: 928)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1264, file: !14, line: 1729, baseType: !1012, size: 32, align: 32, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1264, file: !14, line: 1744, baseType: !1012, size: 32, align: 32, offset: 992)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1264, file: !14, line: 1744, baseType: !1012, size: 32, align: 32, offset: 1024)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1264, file: !14, line: 1751, baseType: !1012, size: 32, align: 32, offset: 1056)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1264, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1264, file: !14, line: 1791, baseType: !1451, size: 64, align: 64, offset: 1152)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1454, !1455, !1457, !1012, !1012, !1012}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1264, file: !14, line: 1808, baseType: !1459, size: 64, align: 64, offset: 1216)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64, align: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!473, !1454, !1161}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1264, file: !14, line: 1816, baseType: !1012, size: 32, align: 32, offset: 1280)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1264, file: !14, line: 1825, baseType: !1016, size: 32, align: 32, offset: 1312)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1264, file: !14, line: 1830, baseType: !1012, size: 32, align: 32, offset: 1344)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1264, file: !14, line: 1838, baseType: !1016, size: 32, align: 32, offset: 1376)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1264, file: !14, line: 1846, baseType: !1012, size: 32, align: 32, offset: 1408)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1264, file: !14, line: 1851, baseType: !1012, size: 32, align: 32, offset: 1440)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1264, file: !14, line: 1861, baseType: !1016, size: 32, align: 32, offset: 1472)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1264, file: !14, line: 1868, baseType: !1016, size: 32, align: 32, offset: 1504)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1264, file: !14, line: 1875, baseType: !1016, size: 32, align: 32, offset: 1536)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1264, file: !14, line: 1882, baseType: !1016, size: 32, align: 32, offset: 1568)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1264, file: !14, line: 1889, baseType: !1016, size: 32, align: 32, offset: 1600)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1264, file: !14, line: 1896, baseType: !1016, size: 32, align: 32, offset: 1632)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1264, file: !14, line: 1903, baseType: !1016, size: 32, align: 32, offset: 1664)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1264, file: !14, line: 1910, baseType: !1012, size: 32, align: 32, offset: 1696)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1264, file: !14, line: 1915, baseType: !1012, size: 32, align: 32, offset: 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1264, file: !14, line: 1926, baseType: !1457, size: 64, align: 64, offset: 1792)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1264, file: !14, line: 1935, baseType: !1056, size: 64, align: 32, offset: 1856)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1264, file: !14, line: 1942, baseType: !1012, size: 32, align: 32, offset: 1920)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1264, file: !14, line: 1948, baseType: !1012, size: 32, align: 32, offset: 1952)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1264, file: !14, line: 1954, baseType: !1012, size: 32, align: 32, offset: 1984)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1264, file: !14, line: 1960, baseType: !1012, size: 32, align: 32, offset: 2016)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1264, file: !14, line: 1984, baseType: !1012, size: 32, align: 32, offset: 2048)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1264, file: !14, line: 1991, baseType: !1012, size: 32, align: 32, offset: 2080)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1264, file: !14, line: 1996, baseType: !1012, size: 32, align: 32, offset: 2112)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1264, file: !14, line: 2004, baseType: !1012, size: 32, align: 32, offset: 2144)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1264, file: !14, line: 2011, baseType: !1012, size: 32, align: 32, offset: 2176)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1264, file: !14, line: 2018, baseType: !1012, size: 32, align: 32, offset: 2208)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1264, file: !14, line: 2027, baseType: !1012, size: 32, align: 32, offset: 2240)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1264, file: !14, line: 2034, baseType: !1012, size: 32, align: 32, offset: 2272)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1264, file: !14, line: 2044, baseType: !1012, size: 32, align: 32, offset: 2304)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1264, file: !14, line: 2054, baseType: !1493, size: 64, align: 64, offset: 2368)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1028, line: 49, baseType: !1495)
!1495 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1264, file: !14, line: 2061, baseType: !1493, size: 64, align: 64, offset: 2432)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1264, file: !14, line: 2066, baseType: !1012, size: 32, align: 32, offset: 2496)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1264, file: !14, line: 2070, baseType: !1012, size: 32, align: 32, offset: 2528)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1264, file: !14, line: 2078, baseType: !1012, size: 32, align: 32, offset: 2560)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1264, file: !14, line: 2085, baseType: !1012, size: 32, align: 32, offset: 2592)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1264, file: !14, line: 2092, baseType: !1012, size: 32, align: 32, offset: 2624)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1264, file: !14, line: 2099, baseType: !1012, size: 32, align: 32, offset: 2656)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1264, file: !14, line: 2106, baseType: !1012, size: 32, align: 32, offset: 2688)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1264, file: !14, line: 2113, baseType: !1012, size: 32, align: 32, offset: 2720)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1264, file: !14, line: 2120, baseType: !1012, size: 32, align: 32, offset: 2752)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1264, file: !14, line: 2125, baseType: !1012, size: 32, align: 32, offset: 2784)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1264, file: !14, line: 2133, baseType: !1012, size: 32, align: 32, offset: 2816)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1264, file: !14, line: 2140, baseType: !1012, size: 32, align: 32, offset: 2848)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1264, file: !14, line: 2145, baseType: !1012, size: 32, align: 32, offset: 2880)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1264, file: !14, line: 2153, baseType: !1012, size: 32, align: 32, offset: 2912)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1264, file: !14, line: 2158, baseType: !1012, size: 32, align: 32, offset: 2944)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1264, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1264, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1264, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1264, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1264, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1264, file: !14, line: 2203, baseType: !1012, size: 32, align: 32, offset: 3136)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1264, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1264, file: !14, line: 2212, baseType: !1012, size: 32, align: 32, offset: 3200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1264, file: !14, line: 2213, baseType: !1012, size: 32, align: 32, offset: 3232)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1264, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1264, file: !14, line: 2232, baseType: !1012, size: 32, align: 32, offset: 3296)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1264, file: !14, line: 2243, baseType: !1012, size: 32, align: 32, offset: 3328)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1264, file: !14, line: 2249, baseType: !1012, size: 32, align: 32, offset: 3360)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1264, file: !14, line: 2256, baseType: !1012, size: 32, align: 32, offset: 3392)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1264, file: !14, line: 2263, baseType: !1073, size: 64, align: 64, offset: 3456)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1264, file: !14, line: 2270, baseType: !1073, size: 64, align: 64, offset: 3520)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1264, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1264, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1264, file: !14, line: 2367, baseType: !1531, size: 64, align: 64, offset: 3648)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!1012, !1454, !1036, !1012}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1264, file: !14, line: 2383, baseType: !1012, size: 32, align: 32, offset: 3712)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1264, file: !14, line: 2386, baseType: !1016, size: 32, align: 32, offset: 3744)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1264, file: !14, line: 2387, baseType: !1016, size: 32, align: 32, offset: 3776)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1264, file: !14, line: 2394, baseType: !1012, size: 32, align: 32, offset: 3808)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1264, file: !14, line: 2401, baseType: !1012, size: 32, align: 32, offset: 3840)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1264, file: !14, line: 2408, baseType: !1012, size: 32, align: 32, offset: 3872)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1264, file: !14, line: 2415, baseType: !1012, size: 32, align: 32, offset: 3904)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1264, file: !14, line: 2422, baseType: !1012, size: 32, align: 32, offset: 3936)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1264, file: !14, line: 2423, baseType: !1543, size: 64, align: 64, offset: 3968)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64, align: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1545, file: !14, line: 827, baseType: !1012, size: 32, align: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1545, file: !14, line: 828, baseType: !1012, size: 32, align: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1545, file: !14, line: 829, baseType: !1012, size: 32, align: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1545, file: !14, line: 830, baseType: !1016, size: 32, align: 32, offset: 96)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1264, file: !14, line: 2430, baseType: !1063, size: 64, align: 64, offset: 4032)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1264, file: !14, line: 2437, baseType: !1063, size: 64, align: 64, offset: 4096)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1264, file: !14, line: 2444, baseType: !1016, size: 32, align: 32, offset: 4160)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1264, file: !14, line: 2451, baseType: !1016, size: 32, align: 32, offset: 4192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1264, file: !14, line: 2458, baseType: !1012, size: 32, align: 32, offset: 4224)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1264, file: !14, line: 2469, baseType: !1012, size: 32, align: 32, offset: 4256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1264, file: !14, line: 2475, baseType: !1012, size: 32, align: 32, offset: 4288)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1264, file: !14, line: 2481, baseType: !1012, size: 32, align: 32, offset: 4320)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1264, file: !14, line: 2485, baseType: !1012, size: 32, align: 32, offset: 4352)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1264, file: !14, line: 2489, baseType: !1012, size: 32, align: 32, offset: 4384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1264, file: !14, line: 2493, baseType: !1012, size: 32, align: 32, offset: 4416)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1264, file: !14, line: 2501, baseType: !1012, size: 32, align: 32, offset: 4448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1264, file: !14, line: 2506, baseType: !1012, size: 32, align: 32, offset: 4480)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1264, file: !14, line: 2510, baseType: !1012, size: 32, align: 32, offset: 4512)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1264, file: !14, line: 2514, baseType: !1063, size: 64, align: 64, offset: 4544)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1264, file: !14, line: 2528, baseType: !1567, size: 64, align: 64, offset: 4608)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1454, !1020, !1012, !1012}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1264, file: !14, line: 2534, baseType: !1012, size: 32, align: 32, offset: 4672)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1264, file: !14, line: 2545, baseType: !1012, size: 32, align: 32, offset: 4704)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1264, file: !14, line: 2547, baseType: !1012, size: 32, align: 32, offset: 4736)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1264, file: !14, line: 2549, baseType: !1012, size: 32, align: 32, offset: 4768)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1264, file: !14, line: 2551, baseType: !1012, size: 32, align: 32, offset: 4800)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1264, file: !14, line: 2553, baseType: !1012, size: 32, align: 32, offset: 4832)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1264, file: !14, line: 2555, baseType: !1012, size: 32, align: 32, offset: 4864)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1264, file: !14, line: 2557, baseType: !1012, size: 32, align: 32, offset: 4896)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1264, file: !14, line: 2559, baseType: !1012, size: 32, align: 32, offset: 4928)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1264, file: !14, line: 2563, baseType: !1012, size: 32, align: 32, offset: 4960)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1264, file: !14, line: 2571, baseType: !1581, size: 64, align: 64, offset: 4992)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1264, file: !14, line: 2579, baseType: !1581, size: 64, align: 64, offset: 5056)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1264, file: !14, line: 2586, baseType: !1012, size: 32, align: 32, offset: 5120)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1264, file: !14, line: 2615, baseType: !1012, size: 32, align: 32, offset: 5152)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1264, file: !14, line: 2627, baseType: !1012, size: 32, align: 32, offset: 5184)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1264, file: !14, line: 2637, baseType: !1012, size: 32, align: 32, offset: 5216)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1264, file: !14, line: 2681, baseType: !1012, size: 32, align: 32, offset: 5248)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1264, file: !14, line: 2709, baseType: !1063, size: 64, align: 64, offset: 5312)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1264, file: !14, line: 2716, baseType: !1590, size: 64, align: 64, offset: 5376)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1603, !1609, !1613, !1614, !1615, !1616, !1622, !1623, !1624, !1625, !1626}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1592, file: !14, line: 3642, baseType: !1150, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1592, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1592, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1592, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1592, file: !14, line: 3669, baseType: !1012, size: 32, align: 32, offset: 160)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1592, file: !14, line: 3682, baseType: !1600, size: 64, align: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64, align: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!1012, !1262, !1036}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1592, file: !14, line: 3698, baseType: !1604, size: 64, align: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!1012, !1262, !1607, !1027}
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1592, file: !14, line: 3712, baseType: !1610, size: 64, align: 64, offset: 320)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!1012, !1262, !1012, !1607, !1027}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1592, file: !14, line: 3726, baseType: !1604, size: 64, align: 64, offset: 384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1592, file: !14, line: 3737, baseType: !1259, size: 64, align: 64, offset: 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1592, file: !14, line: 3746, baseType: !1012, size: 32, align: 32, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1592, file: !14, line: 3757, baseType: !1617, size: 64, align: 64, offset: 576)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{null, !1620}
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64, align: 64)
!1621 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1592, file: !14, line: 3766, baseType: !1259, size: 64, align: 64, offset: 640)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1592, file: !14, line: 3774, baseType: !1259, size: 64, align: 64, offset: 704)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1592, file: !14, line: 3780, baseType: !1012, size: 32, align: 32, offset: 768)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1592, file: !14, line: 3785, baseType: !1012, size: 32, align: 32, offset: 800)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1592, file: !14, line: 3795, baseType: !1627, size: 64, align: 64, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!1012, !1262, !1084}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1264, file: !14, line: 2728, baseType: !1020, size: 64, align: 64, offset: 5440)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1264, file: !14, line: 2735, baseType: !1072, size: 512, align: 64, offset: 5504)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1264, file: !14, line: 2742, baseType: !1012, size: 32, align: 32, offset: 6016)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1264, file: !14, line: 2755, baseType: !1012, size: 32, align: 32, offset: 6048)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1264, file: !14, line: 2776, baseType: !1012, size: 32, align: 32, offset: 6080)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1264, file: !14, line: 2783, baseType: !1012, size: 32, align: 32, offset: 6112)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1264, file: !14, line: 2791, baseType: !1012, size: 32, align: 32, offset: 6144)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1264, file: !14, line: 2802, baseType: !1036, size: 64, align: 64, offset: 6208)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1264, file: !14, line: 2811, baseType: !1012, size: 32, align: 32, offset: 6272)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1264, file: !14, line: 2821, baseType: !1012, size: 32, align: 32, offset: 6304)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1264, file: !14, line: 2830, baseType: !1012, size: 32, align: 32, offset: 6336)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1264, file: !14, line: 2840, baseType: !1012, size: 32, align: 32, offset: 6368)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1264, file: !14, line: 2851, baseType: !1643, size: 64, align: 64, offset: 6400)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!1012, !1454, !1646, !1020, !1457, !1012, !1012}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!1012, !1454, !1020}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1264, file: !14, line: 2871, baseType: !1650, size: 64, align: 64, offset: 6464)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!1012, !1454, !1653, !1020, !1457, !1012}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!1012, !1454, !1020, !1012, !1012}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1264, file: !14, line: 2878, baseType: !1012, size: 32, align: 32, offset: 6528)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1264, file: !14, line: 2885, baseType: !1012, size: 32, align: 32, offset: 6560)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1264, file: !14, line: 3005, baseType: !1012, size: 32, align: 32, offset: 6592)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1264, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1264, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1264, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1264, file: !14, line: 3037, baseType: !1042, size: 64, align: 64, offset: 6720)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1264, file: !14, line: 3038, baseType: !1012, size: 32, align: 32, offset: 6784)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1264, file: !14, line: 3050, baseType: !1073, size: 64, align: 64, offset: 6848)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1264, file: !14, line: 3065, baseType: !1012, size: 32, align: 32, offset: 6912)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1264, file: !14, line: 3083, baseType: !1012, size: 32, align: 32, offset: 6944)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1264, file: !14, line: 3092, baseType: !1056, size: 64, align: 32, offset: 6976)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1264, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1264, file: !14, line: 3106, baseType: !1056, size: 64, align: 32, offset: 7072)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1264, file: !14, line: 3113, baseType: !1671, size: 64, align: 64, offset: 7168)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64, align: 64)
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1684}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1674, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1674, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1674, file: !14, line: 720, baseType: !1150, size: 64, align: 64, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1674, file: !14, line: 724, baseType: !1150, size: 64, align: 64, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1674, file: !14, line: 728, baseType: !1012, size: 32, align: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1674, file: !14, line: 734, baseType: !1682, size: 64, align: 64, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1674, file: !14, line: 739, baseType: !1685, size: 64, align: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1264, file: !14, line: 3129, baseType: !1063, size: 64, align: 64, offset: 7232)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1264, file: !14, line: 3130, baseType: !1063, size: 64, align: 64, offset: 7296)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1264, file: !14, line: 3131, baseType: !1063, size: 64, align: 64, offset: 7360)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1264, file: !14, line: 3132, baseType: !1063, size: 64, align: 64, offset: 7424)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1264, file: !14, line: 3139, baseType: !1581, size: 64, align: 64, offset: 7488)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1264, file: !14, line: 3147, baseType: !1012, size: 32, align: 32, offset: 7552)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1264, file: !14, line: 3165, baseType: !1012, size: 32, align: 32, offset: 7584)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1264, file: !14, line: 3172, baseType: !1012, size: 32, align: 32, offset: 7616)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1264, file: !14, line: 3180, baseType: !1012, size: 32, align: 32, offset: 7648)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1264, file: !14, line: 3191, baseType: !1493, size: 64, align: 64, offset: 7680)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1264, file: !14, line: 3199, baseType: !1042, size: 64, align: 64, offset: 7744)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1264, file: !14, line: 3207, baseType: !1581, size: 64, align: 64, offset: 7808)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1264, file: !14, line: 3214, baseType: !1013, size: 32, align: 32, offset: 7872)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1264, file: !14, line: 3224, baseType: !1323, size: 64, align: 64, offset: 7936)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1264, file: !14, line: 3225, baseType: !1012, size: 32, align: 32, offset: 8000)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1264, file: !14, line: 3249, baseType: !1084, size: 64, align: 64, offset: 8064)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1264, file: !14, line: 3256, baseType: !1012, size: 32, align: 32, offset: 8128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1264, file: !14, line: 3271, baseType: !1012, size: 32, align: 32, offset: 8160)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1264, file: !14, line: 3279, baseType: !1063, size: 64, align: 64, offset: 8192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1264, file: !14, line: 3301, baseType: !1084, size: 64, align: 64, offset: 8256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1264, file: !14, line: 3310, baseType: !1012, size: 32, align: 32, offset: 8320)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1264, file: !14, line: 3337, baseType: !1012, size: 32, align: 32, offset: 8352)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1264, file: !14, line: 3351, baseType: !1012, size: 32, align: 32, offset: 8384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1264, file: !14, line: 3359, baseType: !1012, size: 32, align: 32, offset: 8416)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1147, file: !14, line: 3535, baseType: !1712, size: 64, align: 64, offset: 1024)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!1012, !1262, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1147, file: !14, line: 3541, baseType: !1718, size: 64, align: 64, offset: 1088)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1278, line: 223, size: 128, align: 64, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1721, file: !1278, line: 224, baseType: !1607, size: 64, align: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1721, file: !1278, line: 225, baseType: !1607, size: 64, align: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1147, file: !14, line: 3549, baseType: !1726, size: 64, align: 64, offset: 1152)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64, align: 64)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !1257}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1147, file: !14, line: 3551, baseType: !1259, size: 64, align: 64, offset: 1216)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1147, file: !14, line: 3552, baseType: !1731, size: 64, align: 64, offset: 1280)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!1012, !1262, !1042, !1012, !1734}
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64, align: 64)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1742, !1766}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1736, file: !14, line: 3921, baseType: !1494, size: 16, align: 16)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1736, file: !14, line: 3922, baseType: !1027, size: 32, align: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1736, file: !14, line: 3923, baseType: !1027, size: 32, align: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1736, file: !14, line: 3924, baseType: !1013, size: 32, align: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1736, file: !14, line: 3925, baseType: !1743, size: 64, align: 64, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751, !1752, !1753, !1759, !1761, !1762, !1763, !1764, !1765}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1746, file: !14, line: 3886, baseType: !1012, size: 32, align: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1746, file: !14, line: 3887, baseType: !1012, size: 32, align: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1746, file: !14, line: 3888, baseType: !1012, size: 32, align: 32, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1746, file: !14, line: 3889, baseType: !1012, size: 32, align: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1746, file: !14, line: 3890, baseType: !1012, size: 32, align: 32, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1746, file: !14, line: 3897, baseType: !1754, size: 768, align: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1755, file: !14, line: 3855, baseType: !1041, size: 512, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1755, file: !14, line: 3857, baseType: !1046, size: 256, align: 32, offset: 512)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1746, file: !14, line: 3903, baseType: !1760, size: 256, align: 64, offset: 960)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 256, align: 64, elements: !1294)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1746, file: !14, line: 3904, baseType: !1301, size: 128, align: 32, offset: 1216)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1746, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1746, file: !14, line: 3908, baseType: !1581, size: 64, align: 64, offset: 1408)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1746, file: !14, line: 3915, baseType: !1581, size: 64, align: 64, offset: 1472)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1746, file: !14, line: 3917, baseType: !1012, size: 32, align: 32, offset: 1536)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1736, file: !14, line: 3926, baseType: !1063, size: 64, align: 64, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1147, file: !14, line: 3564, baseType: !1768, size: 64, align: 64, offset: 1344)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64, align: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!1012, !1262, !1311, !1455, !1457}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1147, file: !14, line: 3566, baseType: !1772, size: 64, align: 64, offset: 1408)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!1012, !1262, !1020, !1457, !1311}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1147, file: !14, line: 3567, baseType: !1259, size: 64, align: 64, offset: 1472)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1147, file: !14, line: 3576, baseType: !1777, size: 64, align: 64, offset: 1536)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!1012, !1262, !1455}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1147, file: !14, line: 3577, baseType: !1781, size: 64, align: 64, offset: 1600)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64, align: 64)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!1012, !1262, !1311}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1147, file: !14, line: 3584, baseType: !1600, size: 64, align: 64, offset: 1664)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1147, file: !14, line: 3589, baseType: !1786, size: 64, align: 64, offset: 1728)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64, align: 64)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{null, !1262}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1147, file: !14, line: 3594, baseType: !1012, size: 32, align: 32, offset: 1792)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1147, file: !14, line: 3600, baseType: !1150, size: 64, align: 64, offset: 1856)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1147, file: !14, line: 3609, baseType: !1792, size: 64, align: 64, offset: 1920)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64, align: 64)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1795 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1796 = distinct !DIGlobalVariable(name: "ff_aac_latm_decoder", scope: !0, file: !1145, line: 576, type: !1146, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_aac_latm_decoder)
!1797 = distinct !DIGlobalVariable(name: "aac_channel_layout", scope: !0, file: !1798, line: 57, type: !1799, isLocal: true, isDefinition: true, variable: [16 x i64]* @aac_channel_layout)
!1798 = !DIFile(filename: "libavcodec/aacdectab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1171, size: 1024, align: 64, elements: !1800)
!1800 = !{!1801}
!1801 = !DISubrange(count: 16)
!1802 = distinct !DIGlobalVariable(name: "aac_decoder_class", scope: !0, file: !1803, line: 3443, type: !1175, isLocal: true, isDefinition: true, variable: %struct.AVClass* @aac_decoder_class)
!1803 = !DIFile(filename: "libavcodec/aacdec_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1804 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !1803, line: 3430, type: !1805, isLocal: true, isDefinition: true, variable: [6 x %struct.AVOption]* @options)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 3072, align: 64, elements: !1808)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1187)
!1808 = !{!1809}
!1809 = !DISubrange(count: 6)
!1810 = distinct !DIGlobalVariable(name: "aac_table_init", scope: !0, file: !1803, line: 1153, type: !1811, isLocal: true, isDefinition: true, variable: i32* @aac_table_init)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_once_t", file: !1812, line: 168, baseType: !1012)
!1812 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1813 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1111, type: !1818, isLocal: true, isDefinition: true, variable: [304 x [2 x i16]]* @aac_static_table_init.table)
!1814 = distinct !DISubprogram(name: "aac_static_table_init", scope: !1803, file: !1803, line: 1109, type: !1815, isLocal: true, isDefinition: true, scopeLine: 1110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{null}
!1817 = !{}
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 9728, align: 16, elements: !1821)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1028, line: 37, baseType: !1820)
!1820 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1821 = !{!1822, !1823}
!1822 = !DISubrange(count: 304)
!1823 = !DISubrange(count: 2)
!1824 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1112, type: !1825, isLocal: true, isDefinition: true, variable: [270 x [2 x i16]]* @aac_static_table_init.table.17)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 8640, align: 16, elements: !1826)
!1826 = !{!1827, !1823}
!1827 = !DISubrange(count: 270)
!1828 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1113, type: !1829, isLocal: true, isDefinition: true, variable: [550 x [2 x i16]]* @aac_static_table_init.table.18)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 17600, align: 16, elements: !1830)
!1830 = !{!1831, !1823}
!1831 = !DISubrange(count: 550)
!1832 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1114, type: !1833, isLocal: true, isDefinition: true, variable: [300 x [2 x i16]]* @aac_static_table_init.table.19)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 9600, align: 16, elements: !1834)
!1834 = !{!1835, !1823}
!1835 = !DISubrange(count: 300)
!1836 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1115, type: !1837, isLocal: true, isDefinition: true, variable: [328 x [2 x i16]]* @aac_static_table_init.table.20)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 10496, align: 16, elements: !1838)
!1838 = !{!1839, !1823}
!1839 = !DISubrange(count: 328)
!1840 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1116, type: !1841, isLocal: true, isDefinition: true, variable: [294 x [2 x i16]]* @aac_static_table_init.table.21)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 9408, align: 16, elements: !1842)
!1842 = !{!1843, !1823}
!1843 = !DISubrange(count: 294)
!1844 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1117, type: !1845, isLocal: true, isDefinition: true, variable: [306 x [2 x i16]]* @aac_static_table_init.table.22)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 9792, align: 16, elements: !1846)
!1846 = !{!1847, !1823}
!1847 = !DISubrange(count: 306)
!1848 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1118, type: !1849, isLocal: true, isDefinition: true, variable: [268 x [2 x i16]]* @aac_static_table_init.table.23)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 8576, align: 16, elements: !1850)
!1850 = !{!1851, !1823}
!1851 = !DISubrange(count: 268)
!1852 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1119, type: !1853, isLocal: true, isDefinition: true, variable: [510 x [2 x i16]]* @aac_static_table_init.table.24)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 16320, align: 16, elements: !1854)
!1854 = !{!1855, !1823}
!1855 = !DISubrange(count: 510)
!1856 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1120, type: !1857, isLocal: true, isDefinition: true, variable: [366 x [2 x i16]]* @aac_static_table_init.table.25)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 11712, align: 16, elements: !1858)
!1858 = !{!1859, !1823}
!1859 = !DISubrange(count: 366)
!1860 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1121, type: !1861, isLocal: true, isDefinition: true, variable: [462 x [2 x i16]]* @aac_static_table_init.table.26)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 14784, align: 16, elements: !1862)
!1862 = !{!1863, !1823}
!1863 = !DISubrange(count: 462)
!1864 = distinct !DIGlobalVariable(name: "table", scope: !1814, file: !1803, line: 1127, type: !1865, isLocal: true, isDefinition: true, variable: [352 x [2 x i16]]* @aac_static_table_init.table.27)
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 11264, align: 16, elements: !1866)
!1866 = !{!1867, !1823}
!1867 = !DISubrange(count: 352)
!1868 = distinct !DIGlobalVariable(name: "vlc_spectral", scope: !0, file: !1803, line: 95, type: !1869, isLocal: true, isDefinition: true, variable: [11 x %struct.VLC]* @vlc_spectral)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 2112, align: 64, elements: !1881)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1871, line: 30, baseType: !1872)
!1871 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1871, line: 26, size: 192, align: 64, elements: !1873)
!1873 = !{!1874, !1875, !1879, !1880}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1872, file: !1871, line: 27, baseType: !1012, size: 32, align: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1872, file: !1871, line: 28, baseType: !1876, size: 64, align: 64, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 32, align: 16, elements: !1878)
!1878 = !{!1823}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1872, file: !1871, line: 29, baseType: !1012, size: 32, align: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1872, file: !1871, line: 29, baseType: !1012, size: 32, align: 32, offset: 160)
!1881 = !{!1882}
!1882 = !DISubrange(count: 11)
!1883 = distinct !DIGlobalVariable(name: "exp2_lut", scope: !1884, file: !1885, line: 50, type: !1886, isLocal: true, isDefinition: true, variable: [16 x float]* @ff_aac_tableinit.exp2_lut)
!1884 = distinct !DISubprogram(name: "ff_aac_tableinit", scope: !1885, file: !1885, line: 45, type: !1815, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!1885 = !DIFile(filename: "libavcodec/aactab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1887, size: 512, align: 32, elements: !1800)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1888 = distinct !DIGlobalVariable(name: "vlc_scalefactors", scope: !0, file: !1803, line: 94, type: !1870, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_scalefactors)
!1889 = distinct !DIGlobalVariable(name: "tags_per_config", scope: !0, file: !1798, line: 38, type: !1890, isLocal: true, isDefinition: true, variable: [16 x i8]* @tags_per_config)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 128, align: 8, elements: !1800)
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1892 = distinct !DIGlobalVariable(name: "aac_channel_layout_map", scope: !0, file: !1798, line: 40, type: !1893, isLocal: true, isDefinition: true, variable: [16 x [5 x [3 x i8]]]* @aac_channel_layout_map)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 1920, align: 8, elements: !1894)
!1894 = !{!1801, !1895, !1896}
!1895 = !DISubrange(count: 5)
!1896 = !DISubrange(count: 3)
!1897 = distinct !DIGlobalVariable(name: "ltp_coef", scope: !0, file: !1885, line: 94, type: !1898, isLocal: true, isDefinition: true, variable: [8 x float]* @ltp_coef)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 256, align: 32, elements: !1043)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1900 = distinct !DIGlobalVariable(name: "tns_tmp2_map", scope: !0, file: !1885, line: 126, type: !1901, isLocal: true, isDefinition: true, variable: [4 x float*]* @tns_tmp2_map)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, size: 256, align: 64, elements: !1294)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64, align: 64)
!1904 = distinct !DIGlobalVariable(name: "tns_tmp2_map_0_3", scope: !0, file: !1885, line: 109, type: !1898, isLocal: true, isDefinition: true, variable: [8 x float]* @tns_tmp2_map_0_3)
!1905 = distinct !DIGlobalVariable(name: "tns_tmp2_map_0_4", scope: !0, file: !1885, line: 119, type: !1906, isLocal: true, isDefinition: true, variable: [16 x float]* @tns_tmp2_map_0_4)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 512, align: 32, elements: !1800)
!1907 = distinct !DIGlobalVariable(name: "tns_tmp2_map_1_3", scope: !0, file: !1885, line: 105, type: !1908, isLocal: true, isDefinition: true, variable: [4 x float]* @tns_tmp2_map_1_3)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 128, align: 32, elements: !1294)
!1909 = distinct !DIGlobalVariable(name: "tns_tmp2_map_1_4", scope: !0, file: !1885, line: 114, type: !1898, isLocal: true, isDefinition: true, variable: [8 x float]* @tns_tmp2_map_1_4)
!1910 = distinct !DIGlobalVariable(name: "gain_mode", scope: !1911, file: !1803, line: 1974, type: !2053, isLocal: true, isDefinition: true, variable: [4 x [3 x i8]]* @decode_gain_control.gain_mode)
!1911 = distinct !DISubprogram(name: "decode_gain_control", scope: !1803, file: !1803, line: 1971, type: !1912, isLocal: true, isDefinition: true, scopeLine: 1972, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{null, !1914, !2043}
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64, align: 64)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !910, line: 270, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !910, line: 248, size: 593664, align: 256, elements: !1917)
!1917 = !{!1918, !1962, !1979, !1987, !1991, !1992, !1996, !1998, !2000, !2002, !2003, !2005, !2006, !2010, !2011, !2015, !2019, !2023, !2026, !2027, !2042}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !1916, file: !910, line: 249, baseType: !1919, size: 2432, align: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !910, line: 193, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !910, line: 174, size: 2432, align: 64, elements: !1921)
!1921 = !{!1922, !1923, !1925, !1927, !1928, !1930, !1942, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1956, !1960, !1961}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !1920, file: !910, line: 175, baseType: !1029, size: 8, align: 8)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !1920, file: !910, line: 176, baseType: !1924, size: 64, align: 32, offset: 32)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 64, align: 32, elements: !1878)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !1920, file: !910, line: 177, baseType: !1926, size: 16, align: 8, offset: 96)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 16, align: 8, elements: !1878)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !1920, file: !910, line: 178, baseType: !1012, size: 32, align: 32, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !1920, file: !910, line: 179, baseType: !1929, size: 64, align: 8, offset: 160)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 64, align: 8, elements: !1043)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1920, file: !910, line: 180, baseType: !1931, size: 416, align: 32, offset: 224)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !910, line: 169, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !910, line: 163, size: 416, align: 32, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1937, !1938}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1932, file: !910, line: 164, baseType: !1129, size: 8, align: 8)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !1932, file: !910, line: 165, baseType: !1819, size: 16, align: 16, offset: 16)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1932, file: !910, line: 166, baseType: !1012, size: 32, align: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1932, file: !910, line: 167, baseType: !1017, size: 32, align: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1932, file: !910, line: 168, baseType: !1939, size: 320, align: 8, offset: 96)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 320, align: 8, elements: !1940)
!1940 = !{!1941}
!1941 = !DISubrange(count: 40)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !1920, file: !910, line: 181, baseType: !1943, size: 64, align: 64, offset: 640)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64, align: 64)
!1944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !1920, file: !910, line: 182, baseType: !1607, size: 64, align: 64, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !1920, file: !910, line: 183, baseType: !1012, size: 32, align: 32, offset: 768)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1920, file: !910, line: 184, baseType: !1012, size: 32, align: 32, offset: 800)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !1920, file: !910, line: 185, baseType: !1012, size: 32, align: 32, offset: 832)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !1920, file: !910, line: 186, baseType: !1012, size: 32, align: 32, offset: 864)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !1920, file: !910, line: 187, baseType: !1012, size: 32, align: 32, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !1920, file: !910, line: 188, baseType: !1012, size: 32, align: 32, offset: 928)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !1920, file: !910, line: 189, baseType: !1953, size: 992, align: 32, offset: 960)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 992, align: 32, elements: !1954)
!1954 = !{!1955}
!1955 = !DISubrange(count: 31)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !1920, file: !910, line: 190, baseType: !1957, size: 328, align: 8, offset: 1952)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 328, align: 8, elements: !1958)
!1958 = !{!1959}
!1959 = !DISubrange(count: 41)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !1920, file: !910, line: 191, baseType: !1929, size: 64, align: 8, offset: 2280)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !1920, file: !910, line: 192, baseType: !1016, size: 32, align: 32, offset: 2368)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1916, file: !910, line: 250, baseType: !1963, size: 44320, align: 32, offset: 2432)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !910, line: 206, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !910, line: 198, size: 44320, align: 32, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1971, !1972, !1973, !1977}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1964, file: !910, line: 199, baseType: !1012, size: 32, align: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !1964, file: !910, line: 200, baseType: !1046, size: 256, align: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1964, file: !910, line: 201, baseType: !1969, size: 1024, align: 32, offset: 288)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 1024, align: 32, elements: !1970)
!1970 = !{!1044, !1295}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1964, file: !910, line: 202, baseType: !1969, size: 1024, align: 32, offset: 1312)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1964, file: !910, line: 203, baseType: !1969, size: 1024, align: 32, offset: 2336)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1964, file: !910, line: 204, baseType: !1974, size: 20480, align: 32, offset: 3360)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 20480, align: 32, elements: !1975)
!1975 = !{!1044, !1295, !1976}
!1976 = !DISubrange(count: 20)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1964, file: !910, line: 205, baseType: !1978, size: 20480, align: 32, offset: 23840)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 20480, align: 32, elements: !1975)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !1916, file: !910, line: 251, baseType: !1980, size: 320, align: 32, offset: 46752)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !910, line: 229, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !910, line: 224, size: 320, align: 32, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !1981, file: !910, line: 225, baseType: !1012, size: 32, align: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1981, file: !910, line: 226, baseType: !1012, size: 32, align: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1981, file: !910, line: 227, baseType: !1301, size: 128, align: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1981, file: !910, line: 228, baseType: !1301, size: 128, align: 32, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1916, file: !910, line: 252, baseType: !1988, size: 4096, align: 32, offset: 47072)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 4096, align: 32, elements: !1989)
!1989 = !{!1990}
!1990 = !DISubrange(count: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !1916, file: !910, line: 253, baseType: !1988, size: 4096, align: 32, offset: 51168)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !1916, file: !910, line: 254, baseType: !1993, size: 3840, align: 32, offset: 55264)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 3840, align: 32, elements: !1994)
!1994 = !{!1995}
!1995 = !DISubrange(count: 120)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1916, file: !910, line: 255, baseType: !1997, size: 3840, align: 32, offset: 59104)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 3840, align: 32, elements: !1994)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !1916, file: !910, line: 256, baseType: !1999, size: 4096, align: 32, offset: 62944)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 4096, align: 32, elements: !1989)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !1916, file: !910, line: 257, baseType: !2001, size: 1024, align: 8, offset: 67040)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 1024, align: 8, elements: !1989)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !1916, file: !910, line: 258, baseType: !2001, size: 1024, align: 8, offset: 68064)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !1916, file: !910, line: 259, baseType: !2004, size: 4096, align: 32, offset: 69088)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1016, size: 4096, align: 32, elements: !1989)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !1916, file: !910, line: 260, baseType: !2004, size: 4096, align: 32, offset: 73184)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !1916, file: !910, line: 261, baseType: !2007, size: 32768, align: 32, offset: 77312)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 32768, align: 32, elements: !2008)
!2008 = !{!2009}
!2009 = !DISubrange(count: 1024)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1916, file: !910, line: 262, baseType: !2007, size: 32768, align: 32, offset: 110080)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1916, file: !910, line: 263, baseType: !2012, size: 49152, align: 32, offset: 142848)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 49152, align: 32, elements: !2013)
!2013 = !{!2014}
!2014 = !DISubrange(count: 1536)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !1916, file: !910, line: 264, baseType: !2016, size: 65536, align: 32, offset: 192000)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 65536, align: 32, elements: !2017)
!2017 = !{!2018}
!2018 = !DISubrange(count: 2048)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !1916, file: !910, line: 265, baseType: !2020, size: 98304, align: 32, offset: 257536)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 98304, align: 32, elements: !2021)
!2021 = !{!2022}
!2022 = !DISubrange(count: 3072)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !1916, file: !910, line: 266, baseType: !2024, size: 32768, align: 32, offset: 355840)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 32768, align: 32, elements: !2008)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !1015, line: 90, baseType: !1016)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !1916, file: !910, line: 267, baseType: !2024, size: 32768, align: 32, offset: 388608)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !1916, file: !910, line: 268, baseType: !2028, size: 172032, align: 32, offset: 421376)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 172032, align: 32, elements: !2040)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !910, line: 144, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !910, line: 135, size: 256, align: 32, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2030, file: !910, line: 136, baseType: !2025, size: 32, align: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2030, file: !910, line: 137, baseType: !2025, size: 32, align: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2030, file: !910, line: 138, baseType: !2025, size: 32, align: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2030, file: !910, line: 139, baseType: !2025, size: 32, align: 32, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2030, file: !910, line: 140, baseType: !2025, size: 32, align: 32, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2030, file: !910, line: 141, baseType: !2025, size: 32, align: 32, offset: 160)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2030, file: !910, line: 142, baseType: !2025, size: 32, align: 32, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2030, file: !910, line: 143, baseType: !2025, size: 32, align: 32, offset: 224)
!2040 = !{!2041}
!2041 = !DISubrange(count: 672)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !1916, file: !910, line: 269, baseType: !1031, size: 64, align: 64, offset: 593408)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64, align: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2045, line: 70, baseType: !2046)
!2045 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2045, line: 61, size: 256, align: 64, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051, !2052}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2046, file: !2045, line: 62, baseType: !1607, size: 64, align: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2046, file: !2045, line: 62, baseType: !1607, size: 64, align: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2046, file: !2045, line: 67, baseType: !1012, size: 32, align: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2046, file: !2045, line: 68, baseType: !1012, size: 32, align: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2046, file: !2045, line: 69, baseType: !1012, size: 32, align: 32, offset: 192)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 96, align: 8, elements: !2054)
!2054 = !{!1295, !1896}
!2055 = distinct !DIGlobalVariable(name: "cce_scale", scope: !0, file: !1803, line: 2226, type: !2056, isLocal: true, isDefinition: true, variable: [4 x float]* @cce_scale)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1887, size: 128, align: 32, elements: !1294)
!2057 = !{i32 2, !"Dwarf Version", i32 4}
!2058 = !{i32 2, !"Debug Info Version", i32 3}
!2059 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2060 = distinct !DISubprogram(name: "aac_decode_init", scope: !1803, file: !1803, line: 1155, type: !1260, isLocal: true, isDefinition: true, scopeLine: 1156, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!2061 = !DILocalVariable(name: "avctx", arg: 1, scope: !2060, file: !1803, line: 1155, type: !1262)
!2062 = !DIExpression()
!2063 = !DILocation(line: 1155, column: 66, scope: !2060)
!2064 = !DILocalVariable(name: "ac", scope: !2060, file: !1803, line: 1157, type: !2065)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !2067, line: 37, baseType: !2068)
!2067 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !910, line: 293, size: 62208, align: 256, elements: !2069)
!2069 = !{!2070, !2072, !2073, !2074, !2075, !2093, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2557, !2558, !2559, !2601, !2602, !2604, !2605, !2606, !2608, !2636, !2637, !2638, !2639, !2643, !2644, !2650, !2654, !2655, !2659}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2068, file: !910, line: 294, baseType: !2071, size: 64, align: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2068, file: !910, line: 295, baseType: !1262, size: 64, align: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2068, file: !910, line: 296, baseType: !1036, size: 64, align: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !2068, file: !910, line: 298, baseType: !1012, size: 32, align: 32, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !2068, file: !910, line: 299, baseType: !2076, size: 3808, align: 32, offset: 224)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !910, line: 222, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !910, line: 211, size: 3808, align: 32, elements: !2078)
!2078 = !{!2079, !2080, !2084, !2085, !2089, !2090, !2091, !2092}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2077, file: !910, line: 212, baseType: !1012, size: 32, align: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2077, file: !910, line: 213, baseType: !2081, size: 544, align: 32, offset: 32)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 544, align: 32, elements: !2082)
!2082 = !{!2083}
!2083 = !DISubrange(count: 17)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2077, file: !910, line: 214, baseType: !2081, size: 544, align: 32, offset: 576)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2077, file: !910, line: 215, baseType: !2086, size: 2048, align: 32, offset: 1120)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 2048, align: 32, elements: !2087)
!2087 = !{!2088}
!2088 = !DISubrange(count: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2077, file: !910, line: 216, baseType: !1012, size: 32, align: 32, offset: 3168)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2077, file: !910, line: 217, baseType: !1012, size: 32, align: 32, offset: 3200)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2077, file: !910, line: 218, baseType: !2081, size: 544, align: 32, offset: 3232)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2077, file: !910, line: 219, baseType: !1012, size: 32, align: 32, offset: 3776)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !2068, file: !910, line: 305, baseType: !2094, size: 4096, align: 64, offset: 4032)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 4096, align: 64, elements: !2515)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !910, line: 288, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !910, line: 275, size: 4381952, align: 256, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2102, !2103, !2104, !2105, !2107, !2120}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2097, file: !910, line: 276, baseType: !1012, size: 32, align: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !2097, file: !910, line: 278, baseType: !1012, size: 32, align: 32, offset: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !2097, file: !910, line: 279, baseType: !1012, size: 32, align: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !2097, file: !910, line: 280, baseType: !1029, size: 8, align: 8, offset: 96)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !2097, file: !910, line: 281, baseType: !2001, size: 1024, align: 8, offset: 104)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !2097, file: !910, line: 282, baseType: !2001, size: 1024, align: 8, offset: 1128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2097, file: !910, line: 284, baseType: !2106, size: 1187328, align: 256, offset: 2304)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 1187328, align: 256, elements: !1878)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !2097, file: !910, line: 286, baseType: !2108, size: 62272, align: 32, offset: 1189632)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !910, line: 243, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !910, line: 234, size: 62272, align: 32, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2115, !2116, !2117}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2109, file: !910, line: 235, baseType: !925, size: 32, align: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2109, file: !910, line: 236, baseType: !1012, size: 32, align: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2109, file: !910, line: 237, baseType: !2114, size: 256, align: 32, offset: 64)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !930, size: 256, align: 32, elements: !1043)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2109, file: !910, line: 238, baseType: !1046, size: 256, align: 32, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2109, file: !910, line: 239, baseType: !1046, size: 256, align: 32, offset: 576)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2109, file: !910, line: 242, baseType: !2118, size: 61440, align: 32, offset: 832)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 61440, align: 32, elements: !2119)
!2119 = !{!1801, !1995}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2097, file: !910, line: 287, baseType: !2121, size: 3129856, align: 256, offset: 1252096)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !2067, line: 115, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !2067, line: 139, size: 3129856, align: 256, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2127, !2128, !2129, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2148, !2150, !2151, !2152, !2153, !2224, !2338, !2339, !2340, !2341, !2345, !2349, !2350, !2352, !2356, !2357, !2359, !2360, !2363, !2366, !2369, !2372, !2373, !2376, !2377, !2379, !2380, !2381, !2382, !2383, !2386, !2430, !2431, !2484}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2122, file: !2067, line: 140, baseType: !1012, size: 32, align: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2122, file: !2067, line: 141, baseType: !1012, size: 32, align: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !2122, file: !2067, line: 142, baseType: !1012, size: 32, align: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !2122, file: !2067, line: 143, baseType: !1012, size: 32, align: 32, offset: 96)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2122, file: !2067, line: 144, baseType: !1012, size: 32, align: 32, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !2122, file: !2067, line: 145, baseType: !2130, size: 48, align: 8, offset: 160)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !2067, line: 55, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !2067, line: 42, size: 48, align: 8, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !2131, file: !2067, line: 43, baseType: !1029, size: 8, align: 8)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !2131, file: !2067, line: 44, baseType: !1029, size: 8, align: 8, offset: 8)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !2131, file: !2067, line: 45, baseType: !1029, size: 8, align: 8, offset: 16)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !2131, file: !2067, line: 51, baseType: !1029, size: 8, align: 8, offset: 24)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !2131, file: !2067, line: 52, baseType: !1029, size: 8, align: 8, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !2131, file: !2067, line: 53, baseType: !1029, size: 8, align: 8, offset: 40)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !2122, file: !2067, line: 146, baseType: !1012, size: 32, align: 32, offset: 224)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !2122, file: !2067, line: 151, baseType: !1013, size: 32, align: 32, offset: 256)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !2122, file: !2067, line: 152, baseType: !1013, size: 32, align: 32, offset: 288)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !2122, file: !2067, line: 153, baseType: !1013, size: 32, align: 32, offset: 320)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !2122, file: !2067, line: 154, baseType: !1013, size: 32, align: 32, offset: 352)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !2122, file: !2067, line: 156, baseType: !1013, size: 32, align: 32, offset: 384)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2122, file: !2067, line: 157, baseType: !2146, size: 160, align: 32, offset: 416)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 160, align: 32, elements: !2147)
!2147 = !{!1895}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !2122, file: !2067, line: 160, baseType: !2149, size: 64, align: 32, offset: 576)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 64, align: 32, elements: !1878)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2122, file: !2067, line: 162, baseType: !2149, size: 64, align: 32, offset: 640)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !2122, file: !2067, line: 163, baseType: !1013, size: 32, align: 32, offset: 704)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !2122, file: !2067, line: 165, baseType: !1032, size: 32, align: 32, offset: 736)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2122, file: !2067, line: 166, baseType: !2154, size: 1407488, align: 256, offset: 768)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 1407488, align: 256, elements: !1878)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !2067, line: 113, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !2067, line: 62, size: 703744, align: 256, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2165, !2166, !2168, !2169, !2172, !2176, !2177, !2181, !2185, !2186, !2188, !2190, !2194, !2195, !2199, !2203, !2204, !2207, !2210, !2212, !2215, !2217, !2218, !2219, !2222, !2223}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !2156, file: !2067, line: 67, baseType: !1013, size: 32, align: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !2156, file: !2067, line: 68, baseType: !1013, size: 32, align: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !2156, file: !2067, line: 69, baseType: !1032, size: 32, align: 32, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !2156, file: !2067, line: 70, baseType: !2162, size: 56, align: 8, offset: 96)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 56, align: 8, elements: !2163)
!2163 = !{!2164}
!2164 = !DISubrange(count: 7)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !2156, file: !2067, line: 71, baseType: !1032, size: 32, align: 32, offset: 160)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !2156, file: !2067, line: 72, baseType: !2167, size: 40, align: 8, offset: 192)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 40, align: 8, elements: !2147)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !2156, file: !2067, line: 73, baseType: !1926, size: 16, align: 8, offset: 232)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !2156, file: !2067, line: 74, baseType: !2170, size: 80, align: 8, offset: 248)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 80, align: 8, elements: !2171)
!2171 = !{!1823, !1895}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !2156, file: !2067, line: 75, baseType: !2173, size: 384, align: 8, offset: 328)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 384, align: 8, elements: !2174)
!2174 = !{!2175}
!2175 = !DISubrange(count: 48)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !2156, file: !2067, line: 76, baseType: !1013, size: 32, align: 32, offset: 736)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !2156, file: !2067, line: 83, baseType: !2178, size: 73728, align: 32, offset: 768)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 73728, align: 32, elements: !2179)
!2179 = !{!2180}
!2180 = !DISubrange(count: 2304)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !2156, file: !2067, line: 84, baseType: !2182, size: 41984, align: 32, offset: 74496)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 41984, align: 32, elements: !2183)
!2183 = !{!2184}
!2184 = !DISubrange(count: 1312)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !2156, file: !2067, line: 85, baseType: !1012, size: 32, align: 32, offset: 116480)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !2156, file: !2067, line: 87, baseType: !2187, size: 64, align: 32, offset: 116512)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 64, align: 32, elements: !1878)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !2156, file: !2067, line: 89, baseType: !2189, size: 160, align: 32, offset: 116576)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 160, align: 32, elements: !2147)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !2156, file: !2067, line: 91, baseType: !2191, size: 131072, align: 32, offset: 116736)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 131072, align: 32, elements: !2192)
!2192 = !{!1823, !2193, !2193, !1823}
!2193 = !DISubrange(count: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !2156, file: !2067, line: 93, baseType: !1012, size: 32, align: 32, offset: 247808)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !2156, file: !2067, line: 94, baseType: !2196, size: 311296, align: 32, offset: 247936)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 311296, align: 32, elements: !2197)
!2197 = !{!1823, !2198, !2088, !1823}
!2198 = !DISubrange(count: 38)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !2156, file: !2067, line: 95, baseType: !2200, size: 64512, align: 32, offset: 559232)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 64512, align: 32, elements: !2201)
!2201 = !{!2202, !2175}
!2202 = !DISubrange(count: 42)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !2156, file: !2067, line: 96, baseType: !2200, size: 64512, align: 32, offset: 623744)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !2156, file: !2067, line: 97, baseType: !2205, size: 3072, align: 8, offset: 688256)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 3072, align: 8, elements: !2206)
!2206 = !{!1044, !2175}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !2156, file: !2067, line: 99, baseType: !2208, size: 2304, align: 8, offset: 691328)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 2304, align: 8, elements: !2209)
!2209 = !{!1809, !2175}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !2156, file: !2067, line: 100, baseType: !2211, size: 9216, align: 32, offset: 693632)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 9216, align: 32, elements: !2209)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !2156, file: !2067, line: 102, baseType: !2213, size: 120, align: 8, offset: 702848)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 120, align: 8, elements: !2214)
!2214 = !{!1896, !1895}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !2156, file: !2067, line: 103, baseType: !2216, size: 480, align: 32, offset: 702976)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 480, align: 32, elements: !2214)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !2156, file: !2067, line: 105, baseType: !1929, size: 64, align: 8, offset: 703456)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !2156, file: !2067, line: 107, baseType: !1029, size: 8, align: 8, offset: 703520)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !2156, file: !2067, line: 109, baseType: !2220, size: 24, align: 8, offset: 703528)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 24, align: 8, elements: !2221)
!2221 = !{!1896}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !2156, file: !2067, line: 110, baseType: !1013, size: 32, align: 32, offset: 703552)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !2156, file: !2067, line: 111, baseType: !1013, size: 32, align: 32, offset: 703584)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2122, file: !2067, line: 167, baseType: !2225, size: 1072896, align: 128, offset: 1408256)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !2226, line: 79, baseType: !2227)
!2226 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !2226, line: 41, size: 1072896, align: 128, elements: !2228)
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2244, !2248, !2249, !2250, !2251, !2252, !2253, !2257, !2262, !2267, !2270, !2271, !2272, !2275, !2276, !2277, !2278, !2281, !2282, !2284, !2285}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2227, file: !2226, line: 42, baseType: !1012, size: 32, align: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !2227, file: !2226, line: 43, baseType: !1012, size: 32, align: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !2227, file: !2226, line: 44, baseType: !1012, size: 32, align: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !2227, file: !2226, line: 45, baseType: !1012, size: 32, align: 32, offset: 96)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !2227, file: !2226, line: 46, baseType: !1012, size: 32, align: 32, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !2227, file: !2226, line: 47, baseType: !1012, size: 32, align: 32, offset: 160)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !2227, file: !2226, line: 48, baseType: !1012, size: 32, align: 32, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !2227, file: !2226, line: 49, baseType: !1012, size: 32, align: 32, offset: 224)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !2227, file: !2226, line: 50, baseType: !1012, size: 32, align: 32, offset: 256)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !2227, file: !2226, line: 51, baseType: !1012, size: 32, align: 32, offset: 288)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !2227, file: !2226, line: 52, baseType: !1012, size: 32, align: 32, offset: 320)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !2227, file: !2226, line: 53, baseType: !1012, size: 32, align: 32, offset: 352)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !2227, file: !2226, line: 54, baseType: !1012, size: 32, align: 32, offset: 384)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !2227, file: !2226, line: 55, baseType: !2243, size: 192, align: 32, offset: 416)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 192, align: 32, elements: !1808)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !2227, file: !2226, line: 56, baseType: !2245, size: 1360, align: 8, offset: 608)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 1360, align: 8, elements: !2246)
!2246 = !{!1895, !2247}
!2247 = !DISubrange(count: 34)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !2227, file: !2226, line: 57, baseType: !2245, size: 1360, align: 8, offset: 1968)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !2227, file: !2226, line: 59, baseType: !2245, size: 1360, align: 8, offset: 3328)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !2227, file: !2226, line: 60, baseType: !2245, size: 1360, align: 8, offset: 4688)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !2227, file: !2226, line: 61, baseType: !1012, size: 32, align: 32, offset: 6048)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !2227, file: !2226, line: 62, baseType: !1012, size: 32, align: 32, offset: 6080)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !2227, file: !2226, line: 64, baseType: !2254, size: 14080, align: 32, offset: 6144)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 14080, align: 32, elements: !2255)
!2255 = !{!1895, !2256, !1823}
!2256 = !DISubrange(count: 44)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !2227, file: !2226, line: 65, baseType: !2258, size: 267904, align: 32, offset: 20224)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 267904, align: 32, elements: !2259)
!2259 = !{!2260, !2261, !1823}
!2260 = !DISubrange(count: 91)
!2261 = !DISubrange(count: 46)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !2227, file: !2226, line: 66, baseType: !2263, size: 355200, align: 32, offset: 288128)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 355200, align: 32, elements: !2264)
!2264 = !{!2265, !1896, !2266, !1823}
!2265 = !DISubrange(count: 50)
!2266 = !DISubrange(count: 37)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !2227, file: !2226, line: 67, baseType: !2268, size: 1088, align: 32, offset: 643328)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 1088, align: 32, elements: !2269)
!2269 = !{!2247}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !2227, file: !2226, line: 68, baseType: !2268, size: 1088, align: 32, offset: 644480)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !2227, file: !2226, line: 69, baseType: !2268, size: 1088, align: 32, offset: 645632)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !2227, file: !2226, line: 70, baseType: !2273, size: 13056, align: 32, offset: 646784)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 13056, align: 32, elements: !2274)
!2274 = !{!1823, !1809, !2247}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !2227, file: !2226, line: 71, baseType: !2273, size: 13056, align: 32, offset: 659840)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !2227, file: !2226, line: 72, baseType: !2273, size: 13056, align: 32, offset: 672896)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !2227, file: !2226, line: 73, baseType: !2273, size: 13056, align: 32, offset: 685952)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !2227, file: !2226, line: 74, baseType: !2279, size: 186368, align: 32, offset: 699008)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 186368, align: 32, elements: !2280)
!2280 = !{!2260, !2193, !1823}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !2227, file: !2226, line: 75, baseType: !2279, size: 186368, align: 32, offset: 885376)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !2227, file: !2226, line: 76, baseType: !2283, size: 272, align: 8, offset: 1071744)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 272, align: 8, elements: !2269)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !2227, file: !2226, line: 77, baseType: !2283, size: 272, align: 8, offset: 1072016)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2227, file: !2226, line: 78, baseType: !2286, size: 512, align: 64, offset: 1072320)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !2287, line: 52, baseType: !2288)
!2287 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !2287, line: 32, size: 512, align: 64, elements: !2289)
!2289 = !{!2290, !2296, !2302, !2310, !2320, !2324, !2331}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !2288, file: !2287, line: 33, baseType: !2291, size: 64, align: 64)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64, align: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !1031, !2294, !1012}
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64, align: 64)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 64, align: 32, elements: !1878)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !2288, file: !2287, line: 34, baseType: !2297, size: 64, align: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64, align: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !2300, !2300, !1031, !1012}
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64, align: 64)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 64, align: 32, elements: !1878)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !2288, file: !2287, line: 36, baseType: !2303, size: 64, align: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64, align: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !2300, !2300, !2306, !2309, !1012}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64, align: 64)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 512, align: 32, elements: !2308)
!2308 = !{!1044, !1823}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1138, line: 149, baseType: !1064)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !2288, file: !2287, line: 39, baseType: !2311, size: 64, align: 64, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64, align: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{null, !2314, !2317, !1012, !1012}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64, align: 64)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 2048, align: 32, elements: !2316)
!2316 = !{!2193, !1823}
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64, align: 64)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 77824, align: 32, elements: !2319)
!2319 = !{!2198, !2088}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !2288, file: !2287, line: 41, baseType: !2321, size: 64, align: 64, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64, align: 64)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2317, !2314, !1012, !1012}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !2288, file: !2287, line: 43, baseType: !2325, size: 64, align: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64, align: 64)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{null, !2300, !2300, !2328, !1903, !2294, !1903, !1017, !1012}
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64, align: 64)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 2368, align: 32, elements: !2330)
!2330 = !{!2266, !1823}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !2288, file: !2287, line: 49, baseType: !2332, size: 128, align: 64, offset: 384)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2333, size: 128, align: 64, elements: !1878)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64, align: 64)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{null, !2300, !2300, !2336, !2336, !1012}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64, align: 64)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 128, align: 32, elements: !1294)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2122, file: !2067, line: 169, baseType: !2149, size: 64, align: 32, offset: 2481152)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !2122, file: !2067, line: 171, baseType: !1032, size: 32, align: 32, offset: 2481216)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !2122, file: !2067, line: 173, baseType: !1032, size: 32, align: 32, offset: 2481248)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !2122, file: !2067, line: 175, baseType: !2342, size: 784, align: 16, offset: 2481280)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 784, align: 16, elements: !2343)
!2343 = !{!2344}
!2344 = !DISubrange(count: 49)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !2122, file: !2067, line: 177, baseType: !2346, size: 400, align: 16, offset: 2482064)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 400, align: 16, elements: !2347)
!2347 = !{!2348}
!2348 = !DISubrange(count: 25)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !2122, file: !2067, line: 179, baseType: !2342, size: 784, align: 16, offset: 2482464)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !2122, file: !2067, line: 181, baseType: !2351, size: 96, align: 16, offset: 2483248)
!2351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 96, align: 16, elements: !1808)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !2122, file: !2067, line: 183, baseType: !2353, size: 480, align: 16, offset: 2483344)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 480, align: 16, elements: !2354)
!2354 = !{!2355}
!2355 = !DISubrange(count: 30)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !2122, file: !2067, line: 184, baseType: !1032, size: 32, align: 32, offset: 2483840)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !2122, file: !2067, line: 185, baseType: !2358, size: 48, align: 8, offset: 2483872)
!2358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 48, align: 8, elements: !1808)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !2122, file: !2067, line: 186, baseType: !2358, size: 48, align: 8, offset: 2483920)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !2122, file: !2067, line: 188, baseType: !2361, size: 81920, align: 32, offset: 2483968)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 81920, align: 32, elements: !2362)
!2362 = !{!2193, !1941, !1823}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !2122, file: !2067, line: 190, baseType: !2364, size: 163840, align: 32, offset: 2565888)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 163840, align: 32, elements: !2365)
!2365 = !{!2088, !1941, !1823}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !2122, file: !2067, line: 192, baseType: !2367, size: 311296, align: 32, offset: 2729728)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 311296, align: 32, elements: !2368)
!2368 = !{!1823, !1823, !2198, !2088}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !2122, file: !2067, line: 194, baseType: !2370, size: 4096, align: 32, offset: 3041024)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 4096, align: 32, elements: !2371)
!2371 = !{!2088, !1823}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !2122, file: !2067, line: 196, baseType: !2370, size: 4096, align: 32, offset: 3045120)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !2122, file: !2067, line: 198, baseType: !2374, size: 10752, align: 32, offset: 3049216)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 10752, align: 32, elements: !2375)
!2375 = !{!2164, !2175}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !2122, file: !2067, line: 200, baseType: !2374, size: 10752, align: 32, offset: 3059968)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !2122, file: !2067, line: 202, baseType: !2378, size: 2688, align: 8, offset: 3070720)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 2688, align: 8, elements: !2375)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !2122, file: !2067, line: 204, baseType: !2374, size: 10752, align: 32, offset: 3073408)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !2122, file: !2067, line: 206, baseType: !2374, size: 10752, align: 32, offset: 3084160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !2122, file: !2067, line: 208, baseType: !2374, size: 10752, align: 32, offset: 3094912)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2122, file: !2067, line: 209, baseType: !2374, size: 10752, align: 32, offset: 3105664)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !2122, file: !2067, line: 210, baseType: !2384, size: 10240, align: 32, offset: 3116544)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 10240, align: 32, elements: !2385)
!2385 = !{!1895, !2088}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !2122, file: !2067, line: 211, baseType: !2387, size: 896, align: 64, offset: 3126784)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !2388, line: 41, baseType: !2389)
!2388 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !941, line: 88, size: 896, align: 64, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2402, !2403, !2404, !2406, !2407, !2412, !2413, !2419, !2420, !2421, !2427, !2428, !2429}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2389, file: !941, line: 89, baseType: !1012, size: 32, align: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2389, file: !941, line: 90, baseType: !1012, size: 32, align: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2389, file: !941, line: 91, baseType: !1493, size: 64, align: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2389, file: !941, line: 92, baseType: !2395, size: 64, align: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64, align: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !2388, line: 39, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !2388, line: 37, size: 64, align: 32, elements: !2398)
!2398 = !{!2399, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2397, file: !2388, line: 38, baseType: !2400, size: 32, align: 32)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !2388, line: 35, baseType: !1016)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2397, file: !2388, line: 38, baseType: !2400, size: 32, align: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2389, file: !941, line: 93, baseType: !1012, size: 32, align: 32, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2389, file: !941, line: 94, baseType: !1012, size: 32, align: 32, offset: 224)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2389, file: !941, line: 96, baseType: !2405, size: 64, align: 64, offset: 256)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64, align: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2389, file: !941, line: 97, baseType: !2405, size: 64, align: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2389, file: !941, line: 101, baseType: !2408, size: 64, align: 64, offset: 384)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64, align: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{null, !2411, !2395}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64, align: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2389, file: !941, line: 106, baseType: !2408, size: 64, align: 64, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2389, file: !941, line: 107, baseType: !2414, size: 64, align: 64, offset: 512)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64, align: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2411, !2405, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2400)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2389, file: !941, line: 108, baseType: !2414, size: 64, align: 64, offset: 576)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2389, file: !941, line: 109, baseType: !2414, size: 64, align: 64, offset: 640)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2389, file: !941, line: 110, baseType: !2422, size: 64, align: 64, offset: 704)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64, align: 64)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !2411, !2425, !2417}
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64, align: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !941, line: 43, baseType: !1016)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2389, file: !941, line: 111, baseType: !940, size: 32, align: 32, offset: 768)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2389, file: !941, line: 112, baseType: !946, size: 32, align: 32, offset: 800)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2389, file: !941, line: 113, baseType: !1033, size: 64, align: 64, offset: 832)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2122, file: !2067, line: 212, baseType: !2387, size: 896, align: 64, offset: 3127680)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2122, file: !2067, line: 213, baseType: !2432, size: 896, align: 64, offset: 3128576)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !2433, line: 45, baseType: !2434)
!2433 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !2433, line: 28, size: 896, align: 64, elements: !2435)
!2435 = !{!2436, !2440, !2444, !2445, !2446, !2450, !2454, !2458, !2465, !2469, !2479}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !2434, file: !2433, line: 29, baseType: !2437, size: 64, align: 64)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64, align: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{null, !1031}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !2434, file: !2433, line: 30, baseType: !2441, size: 64, align: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64, align: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!2025, !2300, !1012}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !2434, file: !2433, line: 31, baseType: !2437, size: 64, align: 64, offset: 128)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !2434, file: !2433, line: 32, baseType: !2437, size: 64, align: 64, offset: 192)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !2434, file: !2433, line: 33, baseType: !2447, size: 64, align: 64, offset: 256)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64, align: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{null, !2300, !1903}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !2434, file: !2433, line: 34, baseType: !2451, size: 64, align: 64, offset: 320)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64, align: 64)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{null, !1031, !1903}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !2434, file: !2433, line: 35, baseType: !2455, size: 64, align: 64, offset: 384)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64, align: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{null, !1031, !1903, !1903}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !2434, file: !2433, line: 36, baseType: !2459, size: 64, align: 64, offset: 448)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{null, !2294, !2462}
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64, align: 64)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 128, align: 32, elements: !2464)
!2464 = !{!1823, !1823}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !2434, file: !2433, line: 37, baseType: !2466, size: 64, align: 64, offset: 512)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64, align: 64)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{null, !2300, !2294, !1903, !1903, !1017, !1012, !1012}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !2434, file: !2433, line: 40, baseType: !2470, size: 64, align: 64, offset: 576)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64, align: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !2300, !2473, !2476, !1012, !2478}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64, align: 64)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 2560, align: 32, elements: !2475)
!2475 = !{!1941, !1823}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64, align: 64)
!2477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2025)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1028, line: 119, baseType: !1064)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !2434, file: !2433, line: 42, baseType: !2480, size: 256, align: 64, offset: 640)
!2480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2481, size: 256, align: 64, elements: !1294)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64, align: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2300, !2476, !2476, !1012, !1012, !1012}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2122, file: !2067, line: 214, baseType: !2485, size: 256, align: 64, offset: 3129472)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !2067, line: 134, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !2067, line: 120, size: 256, align: 64, elements: !2487)
!2487 = !{!2488, !2498, !2504, !2510}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !2486, file: !2067, line: 121, baseType: !2489, size: 64, align: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64, align: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!1012, !2065, !2492, !2493, !2495, !1012}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64, align: 64)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64, align: 64)
!2494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 2560, align: 32, elements: !2475)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64, align: 64)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 65536, align: 32, elements: !2497)
!2497 = !{!2193, !2193, !1823}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !2486, file: !2067, line: 124, baseType: !2499, size: 64, align: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64, align: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !2502, !2473, !2492, !2503, !1164}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64, align: 64)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64, align: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !2486, file: !2067, line: 128, baseType: !2505, size: 64, align: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64, align: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!1012, !2492, !2317, !2508, !2508, !2473, !1012}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64, align: 64)
!2509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 4096, align: 32, elements: !2371)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !2486, file: !2067, line: 131, baseType: !2511, size: 64, align: 64, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64, align: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !2514, !2300, !2300, !2473, !1012}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64, align: 64)
!2515 = !{!1295, !1801}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !2068, file: !910, line: 306, baseType: !2094, size: 4096, align: 64, offset: 8128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !2068, file: !910, line: 307, baseType: !1012, size: 32, align: 32, offset: 12224)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !2068, file: !910, line: 308, baseType: !1012, size: 32, align: 32, offset: 12256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !2068, file: !910, line: 316, baseType: !2007, size: 32768, align: 32, offset: 12288)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2068, file: !910, line: 323, baseType: !2387, size: 896, align: 64, offset: 45056)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !2068, file: !910, line: 324, baseType: !2387, size: 896, align: 64, offset: 45952)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !2068, file: !910, line: 325, baseType: !2387, size: 896, align: 64, offset: 46848)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !2068, file: !910, line: 326, baseType: !2387, size: 896, align: 64, offset: 47744)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "mdct120", scope: !2068, file: !910, line: 330, baseType: !2525, size: 64, align: 64, offset: 48640)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64, align: 64)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !2527, line: 54, baseType: !2528)
!2527 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !2527, line: 28, size: 5632, align: 256, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2541, !2545, !2549, !2556}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !2528, file: !2527, line: 29, baseType: !1012, size: 32, align: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !2528, file: !2527, line: 30, baseType: !1012, size: 32, align: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !2528, file: !2527, line: 31, baseType: !1012, size: 32, align: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2528, file: !2527, line: 32, baseType: !1012, size: 32, align: 32, offset: 96)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !2528, file: !2527, line: 33, baseType: !1457, size: 64, align: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !2528, file: !2527, line: 34, baseType: !1457, size: 64, align: 64, offset: 192)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !2528, file: !2527, line: 36, baseType: !2387, size: 896, align: 64, offset: 256)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2528, file: !2527, line: 37, baseType: !2395, size: 64, align: 64, offset: 1152)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !2528, file: !2527, line: 38, baseType: !2395, size: 64, align: 64, offset: 1216)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !2528, file: !2527, line: 40, baseType: !2540, size: 4096, align: 32, offset: 1280)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 4096, align: 32, elements: !2087)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !2528, file: !2527, line: 43, baseType: !2542, size: 64, align: 64, offset: 5376)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64, align: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{null, !2395, !2395, !2395, !2309}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !2528, file: !2527, line: 46, baseType: !2546, size: 64, align: 64, offset: 5440)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64, align: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !2395, !2395, !2395, !1457, !2309}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2528, file: !2527, line: 49, baseType: !2550, size: 64, align: 64, offset: 5504)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64, align: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{null, !2553, !2554, !2555, !2309}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64, align: 64)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64, align: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2528, file: !2527, line: 52, baseType: !2550, size: 64, align: 64, offset: 5568)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "mdct480", scope: !2068, file: !910, line: 331, baseType: !2525, size: 64, align: 64, offset: 48704)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "mdct960", scope: !2068, file: !910, line: 332, baseType: !2525, size: 64, align: 64, offset: 48768)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !2068, file: !910, line: 333, baseType: !2560, size: 64, align: 64, offset: 48832)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64, align: 64)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !2562, line: 192, baseType: !2563)
!2562 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !2562, line: 24, size: 704, align: 64, elements: !2564)
!2564 = !{!2565, !2569, !2573, !2580, !2581, !2582, !2586, !2587, !2588, !2593, !2597}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2563, file: !2562, line: 38, baseType: !2566, size: 64, align: 64)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64, align: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2554, !2555, !2555, !1012}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !2563, file: !2562, line: 54, baseType: !2570, size: 64, align: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64, align: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{null, !2554, !2555, !1016, !1012}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !2563, file: !2562, line: 70, baseType: !2574, size: 64, align: 64, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64, align: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{null, !2577, !2578, !1198, !1012}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64, align: 64)
!2579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !2563, file: !2562, line: 85, baseType: !2570, size: 64, align: 64, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !2563, file: !2562, line: 100, baseType: !2574, size: 64, align: 64, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2563, file: !2562, line: 119, baseType: !2583, size: 64, align: 64, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64, align: 64)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{null, !2554, !2555, !2555, !2555, !1012}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2563, file: !2562, line: 137, baseType: !2583, size: 64, align: 64, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2563, file: !2562, line: 154, baseType: !2566, size: 64, align: 64, offset: 448)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !2563, file: !2562, line: 164, baseType: !2589, size: 64, align: 64, offset: 512)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64, align: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{null, !2592, !2592, !1012}
!2592 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2554)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !2563, file: !2562, line: 175, baseType: !2594, size: 64, align: 64, offset: 576)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64, align: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!1016, !2555, !2555, !1012}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !2563, file: !2562, line: 190, baseType: !2598, size: 64, align: 64, offset: 640)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64, align: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{null, !2577, !2578, !2578, !1012}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !2068, file: !910, line: 335, baseType: !1012, size: 32, align: 32, offset: 48896)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !2068, file: !910, line: 342, baseType: !2603, size: 4096, align: 64, offset: 48960)
!2603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 4096, align: 64, elements: !2087)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !2068, file: !910, line: 350, baseType: !1012, size: 32, align: 32, offset: 53056)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !2068, file: !910, line: 351, baseType: !1012, size: 32, align: 32, offset: 53088)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2068, file: !910, line: 354, baseType: !2607, size: 4096, align: 32, offset: 53248)
!2607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 4096, align: 32, elements: !1989)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !2068, file: !910, line: 356, baseType: !2609, size: 4224, align: 64, offset: 57344)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2610, size: 4224, align: 64, elements: !1878)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !910, line: 130, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !910, line: 123, size: 2112, align: 64, elements: !2612)
!2612 = !{!2613, !2629, !2632, !2633, !2634, !2635}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2611, file: !910, line: 124, baseType: !2614, size: 384, align: 32)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !958, line: 46, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !958, line: 33, size: 384, align: 32, elements: !2616)
!2616 = !{!2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2615, file: !958, line: 34, baseType: !1012, size: 32, align: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2615, file: !958, line: 35, baseType: !1012, size: 32, align: 32, offset: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2615, file: !958, line: 36, baseType: !1012, size: 32, align: 32, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2615, file: !958, line: 37, baseType: !1012, size: 32, align: 32, offset: 96)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2615, file: !958, line: 38, baseType: !1012, size: 32, align: 32, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2615, file: !958, line: 39, baseType: !1012, size: 32, align: 32, offset: 160)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2615, file: !958, line: 40, baseType: !1012, size: 32, align: 32, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2615, file: !958, line: 41, baseType: !1012, size: 32, align: 32, offset: 224)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2615, file: !958, line: 42, baseType: !1012, size: 32, align: 32, offset: 256)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2615, file: !958, line: 43, baseType: !1012, size: 32, align: 32, offset: 288)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2615, file: !958, line: 44, baseType: !1012, size: 32, align: 32, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2615, file: !958, line: 45, baseType: !1012, size: 32, align: 32, offset: 352)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2611, file: !910, line: 125, baseType: !2630, size: 1536, align: 8, offset: 384)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 1536, align: 8, elements: !2631)
!2631 = !{!2088, !1896}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2611, file: !910, line: 126, baseType: !1012, size: 32, align: 32, offset: 1920)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2611, file: !910, line: 127, baseType: !1012, size: 32, align: 32, offset: 1952)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2611, file: !910, line: 128, baseType: !1073, size: 64, align: 64, offset: 1984)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2611, file: !910, line: 129, baseType: !950, size: 32, align: 32, offset: 2048)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !2068, file: !910, line: 357, baseType: !1012, size: 32, align: 32, offset: 61568)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !2068, file: !910, line: 358, baseType: !1012, size: 32, align: 32, offset: 61600)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !2068, file: !910, line: 360, baseType: !1012, size: 32, align: 32, offset: 61632)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !2068, file: !910, line: 363, baseType: !2640, size: 64, align: 64, offset: 61696)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64, align: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{null, !2065, !1914}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !2068, file: !910, line: 364, baseType: !2640, size: 64, align: 64, offset: 61760)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !2068, file: !910, line: 365, baseType: !2645, size: 64, align: 64, offset: 61824)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64, align: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{null, !1031, !2648, !2649, !1012}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64, align: 64)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64, align: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !2068, file: !910, line: 367, baseType: !2651, size: 64, align: 64, offset: 61888)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64, align: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{null, !2065, !1031, !1031, !2649}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2068, file: !910, line: 369, baseType: !2640, size: 64, align: 64, offset: 61952)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !2068, file: !910, line: 370, baseType: !2656, size: 64, align: 64, offset: 62016)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64, align: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !1457, !1012}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !2068, file: !910, line: 371, baseType: !2660, size: 64, align: 64, offset: 62080)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64, align: 64)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{null, !1457, !1457, !1012, !1012, !1012, !1020}
!2663 = !DILocation(line: 1157, column: 17, scope: !2060)
!2664 = !DILocation(line: 1157, column: 22, scope: !2060)
!2665 = !DILocation(line: 1157, column: 29, scope: !2060)
!2666 = !DILocalVariable(name: "ret", scope: !2060, file: !1803, line: 1158, type: !1012)
!2667 = !DILocation(line: 1158, column: 9, scope: !2060)
!2668 = !DILocation(line: 1160, column: 11, scope: !2060)
!2669 = !DILocation(line: 1160, column: 9, scope: !2060)
!2670 = !DILocation(line: 1161, column: 9, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1161, column: 9)
!2672 = !DILocation(line: 1161, column: 13, scope: !2671)
!2673 = !DILocation(line: 1161, column: 9, scope: !2060)
!2674 = !DILocation(line: 1162, column: 9, scope: !2671)
!2675 = !DILocation(line: 1164, column: 17, scope: !2060)
!2676 = !DILocation(line: 1164, column: 5, scope: !2060)
!2677 = !DILocation(line: 1164, column: 9, scope: !2060)
!2678 = !DILocation(line: 1164, column: 15, scope: !2060)
!2679 = !DILocation(line: 1165, column: 34, scope: !2060)
!2680 = !DILocation(line: 1165, column: 41, scope: !2060)
!2681 = !DILocation(line: 1165, column: 5, scope: !2060)
!2682 = !DILocation(line: 1165, column: 9, scope: !2060)
!2683 = !DILocation(line: 1165, column: 15, scope: !2060)
!2684 = !DILocation(line: 1165, column: 20, scope: !2060)
!2685 = !DILocation(line: 1165, column: 32, scope: !2060)
!2686 = !DILocation(line: 1167, column: 17, scope: !2060)
!2687 = !DILocation(line: 1167, column: 5, scope: !2060)
!2688 = !DILocation(line: 1171, column: 5, scope: !2060)
!2689 = !DILocation(line: 1171, column: 12, scope: !2060)
!2690 = !DILocation(line: 1171, column: 23, scope: !2060)
!2691 = !DILocation(line: 1174, column: 9, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1174, column: 9)
!2693 = !DILocation(line: 1174, column: 16, scope: !2692)
!2694 = !DILocation(line: 1174, column: 31, scope: !2692)
!2695 = !DILocation(line: 1174, column: 9, scope: !2060)
!2696 = !DILocation(line: 1175, column: 49, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !1803, line: 1175, column: 13)
!2698 = distinct !DILexicalBlock(scope: !2692, file: !1803, line: 1174, column: 36)
!2699 = !DILocation(line: 1175, column: 53, scope: !2697)
!2700 = !DILocation(line: 1175, column: 57, scope: !2697)
!2701 = !DILocation(line: 1175, column: 65, scope: !2697)
!2702 = !DILocation(line: 1175, column: 69, scope: !2697)
!2703 = !DILocation(line: 1175, column: 75, scope: !2697)
!2704 = !DILocation(line: 1176, column: 49, scope: !2697)
!2705 = !DILocation(line: 1176, column: 56, scope: !2697)
!2706 = !DILocation(line: 1177, column: 49, scope: !2697)
!2707 = !DILocation(line: 1177, column: 56, scope: !2697)
!2708 = !DILocation(line: 1177, column: 71, scope: !2697)
!2709 = !DILocation(line: 1175, column: 20, scope: !2697)
!2710 = !DILocation(line: 1175, column: 18, scope: !2697)
!2711 = !DILocation(line: 1178, column: 53, scope: !2697)
!2712 = !DILocation(line: 1175, column: 13, scope: !2698)
!2713 = !DILocation(line: 1179, column: 20, scope: !2697)
!2714 = !DILocation(line: 1179, column: 13, scope: !2697)
!2715 = !DILocation(line: 1180, column: 5, scope: !2698)
!2716 = !DILocalVariable(name: "sr", scope: !2717, file: !1803, line: 1181, type: !1012)
!2717 = distinct !DILexicalBlock(scope: !2692, file: !1803, line: 1180, column: 12)
!2718 = !DILocation(line: 1181, column: 13, scope: !2717)
!2719 = !DILocalVariable(name: "i", scope: !2717, file: !1803, line: 1181, type: !1012)
!2720 = !DILocation(line: 1181, column: 17, scope: !2717)
!2721 = !DILocalVariable(name: "layout_map", scope: !2717, file: !1803, line: 1182, type: !2630)
!2722 = !DILocation(line: 1182, column: 17, scope: !2717)
!2723 = !DILocalVariable(name: "layout_map_tags", scope: !2717, file: !1803, line: 1183, type: !1012)
!2724 = !DILocation(line: 1183, column: 13, scope: !2717)
!2725 = !DILocation(line: 1185, column: 30, scope: !2717)
!2726 = !DILocation(line: 1185, column: 37, scope: !2717)
!2727 = !DILocation(line: 1185, column: 14, scope: !2717)
!2728 = !DILocation(line: 1185, column: 12, scope: !2717)
!2729 = !DILocation(line: 1186, column: 41, scope: !2717)
!2730 = !DILocation(line: 1186, column: 9, scope: !2717)
!2731 = !DILocation(line: 1186, column: 13, scope: !2717)
!2732 = !DILocation(line: 1186, column: 19, scope: !2717)
!2733 = !DILocation(line: 1186, column: 24, scope: !2717)
!2734 = !DILocation(line: 1186, column: 39, scope: !2717)
!2735 = !DILocation(line: 1187, column: 35, scope: !2717)
!2736 = !DILocation(line: 1187, column: 42, scope: !2717)
!2737 = !DILocation(line: 1187, column: 9, scope: !2717)
!2738 = !DILocation(line: 1187, column: 13, scope: !2717)
!2739 = !DILocation(line: 1187, column: 19, scope: !2717)
!2740 = !DILocation(line: 1187, column: 24, scope: !2717)
!2741 = !DILocation(line: 1187, column: 33, scope: !2717)
!2742 = !DILocation(line: 1188, column: 9, scope: !2717)
!2743 = !DILocation(line: 1188, column: 13, scope: !2717)
!2744 = !DILocation(line: 1188, column: 19, scope: !2717)
!2745 = !DILocation(line: 1188, column: 24, scope: !2717)
!2746 = !DILocation(line: 1188, column: 28, scope: !2717)
!2747 = !DILocation(line: 1189, column: 9, scope: !2717)
!2748 = !DILocation(line: 1189, column: 13, scope: !2717)
!2749 = !DILocation(line: 1189, column: 19, scope: !2717)
!2750 = !DILocation(line: 1189, column: 24, scope: !2717)
!2751 = !DILocation(line: 1189, column: 27, scope: !2717)
!2752 = !DILocation(line: 1191, column: 16, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2717, file: !1803, line: 1191, column: 9)
!2754 = !DILocation(line: 1191, column: 14, scope: !2753)
!2755 = !DILocation(line: 1191, column: 21, scope: !2756)
!2756 = !DILexicalBlockFile(scope: !2757, file: !1803, discriminator: 1)
!2757 = distinct !DILexicalBlock(scope: !2753, file: !1803, line: 1191, column: 9)
!2758 = !DILocation(line: 1191, column: 23, scope: !2756)
!2759 = !DILocation(line: 1191, column: 9, scope: !2756)
!2760 = !DILocation(line: 1192, column: 40, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2757, file: !1803, line: 1192, column: 17)
!2762 = !DILocation(line: 1192, column: 17, scope: !2761)
!2763 = !DILocation(line: 1192, column: 46, scope: !2761)
!2764 = !DILocation(line: 1192, column: 53, scope: !2761)
!2765 = !DILocation(line: 1192, column: 43, scope: !2761)
!2766 = !DILocation(line: 1192, column: 17, scope: !2757)
!2767 = !DILocation(line: 1193, column: 17, scope: !2761)
!2768 = !DILocation(line: 1192, column: 53, scope: !2769)
!2769 = !DILexicalBlockFile(scope: !2761, file: !1803, discriminator: 1)
!2770 = !DILocation(line: 1191, column: 98, scope: !2771)
!2771 = !DILexicalBlockFile(scope: !2757, file: !1803, discriminator: 2)
!2772 = !DILocation(line: 1191, column: 9, scope: !2771)
!2773 = distinct !{!2773, !2774}
!2774 = !DILocation(line: 1191, column: 9, scope: !2717)
!2775 = !DILocation(line: 1194, column: 13, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2717, file: !1803, line: 1194, column: 13)
!2777 = !DILocation(line: 1194, column: 15, scope: !2776)
!2778 = !DILocation(line: 1194, column: 13, scope: !2717)
!2779 = !DILocation(line: 1195, column: 15, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2776, file: !1803, line: 1194, column: 90)
!2781 = !DILocation(line: 1196, column: 9, scope: !2780)
!2782 = !DILocation(line: 1197, column: 38, scope: !2717)
!2783 = !DILocation(line: 1197, column: 9, scope: !2717)
!2784 = !DILocation(line: 1197, column: 13, scope: !2717)
!2785 = !DILocation(line: 1197, column: 19, scope: !2717)
!2786 = !DILocation(line: 1197, column: 24, scope: !2717)
!2787 = !DILocation(line: 1197, column: 36, scope: !2717)
!2788 = !DILocation(line: 1199, column: 13, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2717, file: !1803, line: 1199, column: 13)
!2790 = !DILocation(line: 1199, column: 17, scope: !2789)
!2791 = !DILocation(line: 1199, column: 23, scope: !2789)
!2792 = !DILocation(line: 1199, column: 28, scope: !2789)
!2793 = !DILocation(line: 1199, column: 13, scope: !2717)
!2794 = !DILocalVariable(name: "ret", scope: !2795, file: !1803, line: 1200, type: !1012)
!2795 = distinct !DILexicalBlock(scope: !2789, file: !1803, line: 1199, column: 41)
!2796 = !DILocation(line: 1200, column: 17, scope: !2795)
!2797 = !DILocation(line: 1200, column: 50, scope: !2795)
!2798 = !DILocation(line: 1200, column: 57, scope: !2795)
!2799 = !DILocation(line: 1201, column: 35, scope: !2795)
!2800 = !DILocation(line: 1201, column: 39, scope: !2795)
!2801 = !DILocation(line: 1201, column: 45, scope: !2795)
!2802 = !DILocation(line: 1201, column: 50, scope: !2795)
!2803 = !DILocation(line: 1200, column: 23, scope: !2795)
!2804 = !DILocation(line: 1202, column: 18, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2795, file: !1803, line: 1202, column: 17)
!2806 = !DILocation(line: 1202, column: 17, scope: !2795)
!2807 = !DILocation(line: 1203, column: 34, scope: !2805)
!2808 = !DILocation(line: 1203, column: 38, scope: !2805)
!2809 = !DILocation(line: 1203, column: 50, scope: !2805)
!2810 = !DILocation(line: 1203, column: 17, scope: !2805)
!2811 = !DILocation(line: 1205, column: 22, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2805, file: !1803, line: 1205, column: 22)
!2813 = !DILocation(line: 1205, column: 29, scope: !2812)
!2814 = !DILocation(line: 1205, column: 45, scope: !2812)
!2815 = !DILocation(line: 1205, column: 22, scope: !2805)
!2816 = !DILocation(line: 1206, column: 17, scope: !2812)
!2817 = !DILocation(line: 1207, column: 9, scope: !2795)
!2818 = !DILocation(line: 1210, column: 9, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1210, column: 9)
!2820 = !DILocation(line: 1210, column: 16, scope: !2819)
!2821 = !DILocation(line: 1210, column: 25, scope: !2819)
!2822 = !DILocation(line: 1210, column: 9, scope: !2060)
!2823 = !DILocation(line: 1211, column: 16, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2819, file: !1803, line: 1210, column: 31)
!2825 = !DILocation(line: 1211, column: 9, scope: !2824)
!2826 = !DILocation(line: 1212, column: 9, scope: !2824)
!2827 = !DILocation(line: 1218, column: 39, scope: !2060)
!2828 = !DILocation(line: 1218, column: 46, scope: !2060)
!2829 = !DILocation(line: 1218, column: 52, scope: !2060)
!2830 = !DILocation(line: 1218, column: 16, scope: !2060)
!2831 = !DILocation(line: 1218, column: 5, scope: !2060)
!2832 = !DILocation(line: 1218, column: 9, scope: !2060)
!2833 = !DILocation(line: 1218, column: 14, scope: !2060)
!2834 = !DILocation(line: 1220, column: 10, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1220, column: 9)
!2836 = !DILocation(line: 1220, column: 14, scope: !2835)
!2837 = !DILocation(line: 1220, column: 9, scope: !2060)
!2838 = !DILocation(line: 1221, column: 9, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2835, file: !1803, line: 1220, column: 20)
!2840 = !DILocation(line: 1224, column: 5, scope: !2060)
!2841 = !DILocation(line: 1224, column: 9, scope: !2060)
!2842 = !DILocation(line: 1224, column: 22, scope: !2060)
!2843 = !DILocation(line: 1226, column: 19, scope: !2060)
!2844 = !DILocation(line: 1226, column: 23, scope: !2060)
!2845 = !DILocation(line: 1226, column: 5, scope: !2060)
!2846 = !DILocation(line: 1227, column: 19, scope: !2060)
!2847 = !DILocation(line: 1227, column: 23, scope: !2060)
!2848 = !DILocation(line: 1227, column: 5, scope: !2060)
!2849 = !DILocation(line: 1228, column: 19, scope: !2060)
!2850 = !DILocation(line: 1228, column: 23, scope: !2060)
!2851 = !DILocation(line: 1228, column: 5, scope: !2060)
!2852 = !DILocation(line: 1229, column: 19, scope: !2060)
!2853 = !DILocation(line: 1229, column: 23, scope: !2060)
!2854 = !DILocation(line: 1229, column: 5, scope: !2060)
!2855 = !DILocation(line: 1231, column: 27, scope: !2060)
!2856 = !DILocation(line: 1231, column: 31, scope: !2060)
!2857 = !DILocation(line: 1231, column: 11, scope: !2060)
!2858 = !DILocation(line: 1231, column: 9, scope: !2060)
!2859 = !DILocation(line: 1232, column: 9, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1232, column: 9)
!2861 = !DILocation(line: 1232, column: 13, scope: !2860)
!2862 = !DILocation(line: 1232, column: 9, scope: !2060)
!2863 = !DILocation(line: 1233, column: 16, scope: !2860)
!2864 = !DILocation(line: 1233, column: 9, scope: !2860)
!2865 = !DILocation(line: 1234, column: 27, scope: !2060)
!2866 = !DILocation(line: 1234, column: 31, scope: !2060)
!2867 = !DILocation(line: 1234, column: 11, scope: !2060)
!2868 = !DILocation(line: 1234, column: 9, scope: !2060)
!2869 = !DILocation(line: 1235, column: 9, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1235, column: 9)
!2871 = !DILocation(line: 1235, column: 13, scope: !2870)
!2872 = !DILocation(line: 1235, column: 9, scope: !2060)
!2873 = !DILocation(line: 1236, column: 16, scope: !2870)
!2874 = !DILocation(line: 1236, column: 9, scope: !2870)
!2875 = !DILocation(line: 1237, column: 27, scope: !2060)
!2876 = !DILocation(line: 1237, column: 31, scope: !2060)
!2877 = !DILocation(line: 1237, column: 11, scope: !2060)
!2878 = !DILocation(line: 1237, column: 9, scope: !2060)
!2879 = !DILocation(line: 1238, column: 9, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2060, file: !1803, line: 1238, column: 9)
!2881 = !DILocation(line: 1238, column: 13, scope: !2880)
!2882 = !DILocation(line: 1238, column: 9, scope: !2060)
!2883 = !DILocation(line: 1239, column: 16, scope: !2880)
!2884 = !DILocation(line: 1239, column: 9, scope: !2880)
!2885 = !DILocation(line: 1242, column: 5, scope: !2060)
!2886 = !DILocation(line: 1243, column: 1, scope: !2060)
!2887 = distinct !DISubprogram(name: "aac_decode_frame", scope: !1803, file: !1803, line: 3320, type: !1773, isLocal: true, isDefinition: true, scopeLine: 3322, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!2888 = !DILocalVariable(name: "avctx", arg: 1, scope: !2887, file: !1803, line: 3320, type: !1262)
!2889 = !DILocation(line: 3320, column: 45, scope: !2887)
!2890 = !DILocalVariable(name: "data", arg: 2, scope: !2887, file: !1803, line: 3320, type: !1020)
!2891 = !DILocation(line: 3320, column: 58, scope: !2887)
!2892 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2887, file: !1803, line: 3321, type: !1457)
!2893 = !DILocation(line: 3321, column: 34, scope: !2887)
!2894 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2887, file: !1803, line: 3321, type: !1311)
!2895 = !DILocation(line: 3321, column: 59, scope: !2887)
!2896 = !DILocalVariable(name: "ac", scope: !2887, file: !1803, line: 3323, type: !2065)
!2897 = !DILocation(line: 3323, column: 17, scope: !2887)
!2898 = !DILocation(line: 3323, column: 22, scope: !2887)
!2899 = !DILocation(line: 3323, column: 29, scope: !2887)
!2900 = !DILocalVariable(name: "buf", scope: !2887, file: !1803, line: 3324, type: !1607)
!2901 = !DILocation(line: 3324, column: 20, scope: !2887)
!2902 = !DILocation(line: 3324, column: 26, scope: !2887)
!2903 = !DILocation(line: 3324, column: 33, scope: !2887)
!2904 = !DILocalVariable(name: "buf_size", scope: !2887, file: !1803, line: 3325, type: !1012)
!2905 = !DILocation(line: 3325, column: 9, scope: !2887)
!2906 = !DILocation(line: 3325, column: 20, scope: !2887)
!2907 = !DILocation(line: 3325, column: 27, scope: !2887)
!2908 = !DILocalVariable(name: "gb", scope: !2887, file: !1803, line: 3326, type: !2044)
!2909 = !DILocation(line: 3326, column: 19, scope: !2887)
!2910 = !DILocalVariable(name: "buf_consumed", scope: !2887, file: !1803, line: 3327, type: !1012)
!2911 = !DILocation(line: 3327, column: 9, scope: !2887)
!2912 = !DILocalVariable(name: "buf_offset", scope: !2887, file: !1803, line: 3328, type: !1012)
!2913 = !DILocation(line: 3328, column: 9, scope: !2887)
!2914 = !DILocalVariable(name: "err", scope: !2887, file: !1803, line: 3329, type: !1012)
!2915 = !DILocation(line: 3329, column: 9, scope: !2887)
!2916 = !DILocalVariable(name: "new_extradata_size", scope: !2887, file: !1803, line: 3330, type: !1012)
!2917 = !DILocation(line: 3330, column: 9, scope: !2887)
!2918 = !DILocalVariable(name: "new_extradata", scope: !2887, file: !1803, line: 3331, type: !1607)
!2919 = !DILocation(line: 3331, column: 20, scope: !2887)
!2920 = !DILocation(line: 3331, column: 60, scope: !2887)
!2921 = !DILocation(line: 3331, column: 36, scope: !2887)
!2922 = !DILocalVariable(name: "jp_dualmono_size", scope: !2887, file: !1803, line: 3334, type: !1012)
!2923 = !DILocation(line: 3334, column: 9, scope: !2887)
!2924 = !DILocalVariable(name: "jp_dualmono", scope: !2887, file: !1803, line: 3335, type: !1607)
!2925 = !DILocation(line: 3335, column: 20, scope: !2887)
!2926 = !DILocation(line: 3335, column: 58, scope: !2887)
!2927 = !DILocation(line: 3335, column: 34, scope: !2887)
!2928 = !DILocation(line: 3339, column: 9, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3339, column: 9)
!2930 = !DILocation(line: 3339, column: 9, scope: !2887)
!2931 = !DILocation(line: 3341, column: 9, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2929, file: !1803, line: 3339, column: 24)
!2933 = !DILocation(line: 3341, column: 13, scope: !2932)
!2934 = !DILocation(line: 3341, column: 19, scope: !2932)
!2935 = !DILocation(line: 3341, column: 26, scope: !2932)
!2936 = !DILocation(line: 3342, column: 44, scope: !2932)
!2937 = !DILocation(line: 3342, column: 48, scope: !2932)
!2938 = !DILocation(line: 3342, column: 52, scope: !2932)
!2939 = !DILocation(line: 3342, column: 60, scope: !2932)
!2940 = !DILocation(line: 3342, column: 64, scope: !2932)
!2941 = !DILocation(line: 3342, column: 70, scope: !2932)
!2942 = !DILocation(line: 3343, column: 44, scope: !2932)
!2943 = !DILocation(line: 3344, column: 44, scope: !2932)
!2944 = !DILocation(line: 3344, column: 63, scope: !2932)
!2945 = !DILocation(line: 3342, column: 15, scope: !2932)
!2946 = !DILocation(line: 3342, column: 13, scope: !2932)
!2947 = !DILocation(line: 3345, column: 13, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2932, file: !1803, line: 3345, column: 13)
!2949 = !DILocation(line: 3345, column: 17, scope: !2948)
!2950 = !DILocation(line: 3345, column: 13, scope: !2932)
!2951 = !DILocation(line: 3346, column: 20, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2948, file: !1803, line: 3345, column: 22)
!2953 = !DILocation(line: 3346, column: 13, scope: !2952)
!2954 = !DILocation(line: 3348, column: 5, scope: !2932)
!2955 = !DILocation(line: 3350, column: 5, scope: !2887)
!2956 = !DILocation(line: 3350, column: 9, scope: !2887)
!2957 = !DILocation(line: 3350, column: 20, scope: !2887)
!2958 = !DILocation(line: 3351, column: 9, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3351, column: 9)
!2960 = !DILocation(line: 3351, column: 21, scope: !2959)
!2961 = !DILocation(line: 3351, column: 24, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2959, file: !1803, discriminator: 1)
!2963 = !DILocation(line: 3351, column: 41, scope: !2962)
!2964 = !DILocation(line: 3351, column: 9, scope: !2962)
!2965 = !DILocation(line: 3352, column: 31, scope: !2959)
!2966 = !DILocation(line: 3352, column: 30, scope: !2959)
!2967 = !DILocation(line: 3352, column: 28, scope: !2959)
!2968 = !DILocation(line: 3352, column: 9, scope: !2959)
!2969 = !DILocation(line: 3352, column: 13, scope: !2959)
!2970 = !DILocation(line: 3352, column: 24, scope: !2959)
!2971 = !DILocation(line: 3353, column: 9, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3353, column: 9)
!2973 = !DILocation(line: 3353, column: 13, scope: !2972)
!2974 = !DILocation(line: 3353, column: 30, scope: !2972)
!2975 = !DILocation(line: 3353, column: 9, scope: !2887)
!2976 = !DILocation(line: 3354, column: 26, scope: !2972)
!2977 = !DILocation(line: 3354, column: 30, scope: !2972)
!2978 = !DILocation(line: 3354, column: 9, scope: !2972)
!2979 = !DILocation(line: 3354, column: 13, scope: !2972)
!2980 = !DILocation(line: 3354, column: 24, scope: !2972)
!2981 = !DILocation(line: 3356, column: 27, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3356, column: 9)
!2983 = !DILocation(line: 3356, column: 24, scope: !2982)
!2984 = !DILocation(line: 3356, column: 9, scope: !2887)
!2985 = !DILocation(line: 3357, column: 9, scope: !2982)
!2986 = !DILocation(line: 3359, column: 36, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3359, column: 9)
!2988 = !DILocation(line: 3359, column: 41, scope: !2987)
!2989 = !DILocation(line: 3359, column: 16, scope: !2987)
!2990 = !DILocation(line: 3359, column: 14, scope: !2987)
!2991 = !DILocation(line: 3359, column: 52, scope: !2987)
!2992 = !DILocation(line: 3359, column: 9, scope: !2887)
!2993 = !DILocation(line: 3360, column: 16, scope: !2987)
!2994 = !DILocation(line: 3360, column: 9, scope: !2987)
!2995 = !DILocation(line: 3362, column: 13, scope: !2887)
!2996 = !DILocation(line: 3362, column: 17, scope: !2887)
!2997 = !DILocation(line: 3362, column: 23, scope: !2887)
!2998 = !DILocation(line: 3362, column: 28, scope: !2887)
!2999 = !DILocation(line: 3362, column: 5, scope: !2887)
!3000 = !DILocation(line: 3367, column: 35, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3362, column: 41)
!3002 = !DILocation(line: 3367, column: 42, scope: !3001)
!3003 = !DILocation(line: 3367, column: 48, scope: !3001)
!3004 = !DILocation(line: 3367, column: 15, scope: !3001)
!3005 = !DILocation(line: 3367, column: 13, scope: !3001)
!3006 = !DILocation(line: 3368, column: 9, scope: !3001)
!3007 = !DILocation(line: 3370, column: 36, scope: !3001)
!3008 = !DILocation(line: 3370, column: 43, scope: !3001)
!3009 = !DILocation(line: 3370, column: 49, scope: !3001)
!3010 = !DILocation(line: 3370, column: 69, scope: !3001)
!3011 = !DILocation(line: 3370, column: 15, scope: !3001)
!3012 = !DILocation(line: 3370, column: 13, scope: !3001)
!3013 = !DILocation(line: 3371, column: 5, scope: !3001)
!3014 = !DILocation(line: 3372, column: 9, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3372, column: 9)
!3016 = !DILocation(line: 3372, column: 13, scope: !3015)
!3017 = !DILocation(line: 3372, column: 9, scope: !2887)
!3018 = !DILocation(line: 3373, column: 16, scope: !3015)
!3019 = !DILocation(line: 3373, column: 9, scope: !3015)
!3020 = !DILocation(line: 3375, column: 21, scope: !2887)
!3021 = !DILocation(line: 3375, column: 41, scope: !2887)
!3022 = !DILocation(line: 3375, column: 46, scope: !2887)
!3023 = !DILocation(line: 3375, column: 18, scope: !2887)
!3024 = !DILocation(line: 3376, column: 23, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2887, file: !1803, line: 3376, column: 5)
!3026 = !DILocation(line: 3376, column: 21, scope: !3025)
!3027 = !DILocation(line: 3376, column: 10, scope: !3025)
!3028 = !DILocation(line: 3376, column: 37, scope: !3029)
!3029 = !DILexicalBlockFile(scope: !3030, file: !1803, discriminator: 1)
!3030 = distinct !DILexicalBlock(scope: !3025, file: !1803, line: 3376, column: 5)
!3031 = !DILocation(line: 3376, column: 50, scope: !3029)
!3032 = !DILocation(line: 3376, column: 48, scope: !3029)
!3033 = !DILocation(line: 3376, column: 5, scope: !3029)
!3034 = !DILocation(line: 3377, column: 17, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !1803, line: 3377, column: 13)
!3036 = !DILocation(line: 3377, column: 13, scope: !3035)
!3037 = !DILocation(line: 3377, column: 13, scope: !3030)
!3038 = !DILocation(line: 3378, column: 13, scope: !3035)
!3039 = !DILocation(line: 3377, column: 27, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3035, file: !1803, discriminator: 1)
!3041 = !DILocation(line: 3376, column: 70, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !3030, file: !1803, discriminator: 2)
!3043 = !DILocation(line: 3376, column: 5, scope: !3042)
!3044 = distinct !{!3044, !3045}
!3045 = !DILocation(line: 3376, column: 5, scope: !2887)
!3046 = !DILocation(line: 3380, column: 12, scope: !2887)
!3047 = !DILocation(line: 3380, column: 23, scope: !2887)
!3048 = !DILocation(line: 3380, column: 21, scope: !2887)
!3049 = !DILocation(line: 3380, column: 36, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !2887, file: !1803, discriminator: 1)
!3051 = !DILocation(line: 3380, column: 12, scope: !3050)
!3052 = !DILocation(line: 3380, column: 51, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !2887, file: !1803, discriminator: 2)
!3054 = !DILocation(line: 3380, column: 12, scope: !3053)
!3055 = !DILocation(line: 3380, column: 12, scope: !3056)
!3056 = !DILexicalBlockFile(scope: !2887, file: !1803, discriminator: 3)
!3057 = !DILocation(line: 3380, column: 5, scope: !3056)
!3058 = !DILocation(line: 3381, column: 1, scope: !2887)
!3059 = distinct !DISubprogram(name: "aac_decode_close", scope: !1803, file: !1803, line: 3383, type: !1260, isLocal: true, isDefinition: true, scopeLine: 3384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3060 = !DILocalVariable(name: "avctx", arg: 1, scope: !3059, file: !1803, line: 3383, type: !1262)
!3061 = !DILocation(line: 3383, column: 67, scope: !3059)
!3062 = !DILocalVariable(name: "ac", scope: !3059, file: !1803, line: 3385, type: !2065)
!3063 = !DILocation(line: 3385, column: 17, scope: !3059)
!3064 = !DILocation(line: 3385, column: 22, scope: !3059)
!3065 = !DILocation(line: 3385, column: 29, scope: !3059)
!3066 = !DILocalVariable(name: "i", scope: !3059, file: !1803, line: 3386, type: !1012)
!3067 = !DILocation(line: 3386, column: 9, scope: !3059)
!3068 = !DILocalVariable(name: "type", scope: !3059, file: !1803, line: 3386, type: !1012)
!3069 = !DILocation(line: 3386, column: 12, scope: !3059)
!3070 = !DILocation(line: 3388, column: 12, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3059, file: !1803, line: 3388, column: 5)
!3072 = !DILocation(line: 3388, column: 10, scope: !3071)
!3073 = !DILocation(line: 3388, column: 17, scope: !3074)
!3074 = !DILexicalBlockFile(scope: !3075, file: !1803, discriminator: 1)
!3075 = distinct !DILexicalBlock(scope: !3071, file: !1803, line: 3388, column: 5)
!3076 = !DILocation(line: 3388, column: 19, scope: !3074)
!3077 = !DILocation(line: 3388, column: 5, scope: !3074)
!3078 = !DILocation(line: 3389, column: 19, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !1803, line: 3389, column: 9)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !1803, line: 3388, column: 30)
!3081 = !DILocation(line: 3389, column: 14, scope: !3079)
!3082 = !DILocation(line: 3389, column: 24, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3084, file: !1803, discriminator: 1)
!3084 = distinct !DILexicalBlock(scope: !3079, file: !1803, line: 3389, column: 9)
!3085 = !DILocation(line: 3389, column: 29, scope: !3083)
!3086 = !DILocation(line: 3389, column: 9, scope: !3083)
!3087 = !DILocation(line: 3390, column: 31, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3089, file: !1803, line: 3390, column: 17)
!3089 = distinct !DILexicalBlock(scope: !3084, file: !1803, line: 3389, column: 42)
!3090 = !DILocation(line: 3390, column: 17, scope: !3088)
!3091 = !DILocation(line: 3390, column: 25, scope: !3088)
!3092 = !DILocation(line: 3390, column: 21, scope: !3088)
!3093 = !DILocation(line: 3390, column: 17, scope: !3089)
!3094 = !DILocation(line: 3391, column: 53, scope: !3088)
!3095 = !DILocation(line: 3391, column: 39, scope: !3088)
!3096 = !DILocation(line: 3391, column: 47, scope: !3088)
!3097 = !DILocation(line: 3391, column: 43, scope: !3088)
!3098 = !DILocation(line: 3391, column: 57, scope: !3088)
!3099 = !DILocation(line: 3391, column: 17, scope: !3088)
!3100 = !DILocation(line: 3392, column: 37, scope: !3089)
!3101 = !DILocation(line: 3392, column: 23, scope: !3089)
!3102 = !DILocation(line: 3392, column: 31, scope: !3089)
!3103 = !DILocation(line: 3392, column: 27, scope: !3089)
!3104 = !DILocation(line: 3392, column: 22, scope: !3089)
!3105 = !DILocation(line: 3392, column: 13, scope: !3089)
!3106 = !DILocation(line: 3393, column: 9, scope: !3089)
!3107 = !DILocation(line: 3389, column: 38, scope: !3108)
!3108 = !DILexicalBlockFile(scope: !3084, file: !1803, discriminator: 2)
!3109 = !DILocation(line: 3389, column: 9, scope: !3108)
!3110 = distinct !{!3110, !3111}
!3111 = !DILocation(line: 3389, column: 9, scope: !3080)
!3112 = !DILocation(line: 3394, column: 5, scope: !3080)
!3113 = !DILocation(line: 3388, column: 26, scope: !3114)
!3114 = !DILexicalBlockFile(scope: !3075, file: !1803, discriminator: 2)
!3115 = !DILocation(line: 3388, column: 5, scope: !3114)
!3116 = distinct !{!3116, !3117}
!3117 = !DILocation(line: 3388, column: 5, scope: !3059)
!3118 = !DILocation(line: 3396, column: 18, scope: !3059)
!3119 = !DILocation(line: 3396, column: 22, scope: !3059)
!3120 = !DILocation(line: 3396, column: 5, scope: !3059)
!3121 = !DILocation(line: 3397, column: 18, scope: !3059)
!3122 = !DILocation(line: 3397, column: 22, scope: !3059)
!3123 = !DILocation(line: 3397, column: 5, scope: !3059)
!3124 = !DILocation(line: 3398, column: 18, scope: !3059)
!3125 = !DILocation(line: 3398, column: 22, scope: !3059)
!3126 = !DILocation(line: 3398, column: 5, scope: !3059)
!3127 = !DILocation(line: 3399, column: 18, scope: !3059)
!3128 = !DILocation(line: 3399, column: 22, scope: !3059)
!3129 = !DILocation(line: 3399, column: 5, scope: !3059)
!3130 = !DILocation(line: 3401, column: 23, scope: !3059)
!3131 = !DILocation(line: 3401, column: 27, scope: !3059)
!3132 = !DILocation(line: 3401, column: 5, scope: !3059)
!3133 = !DILocation(line: 3402, column: 23, scope: !3059)
!3134 = !DILocation(line: 3402, column: 27, scope: !3059)
!3135 = !DILocation(line: 3402, column: 5, scope: !3059)
!3136 = !DILocation(line: 3403, column: 23, scope: !3059)
!3137 = !DILocation(line: 3403, column: 27, scope: !3059)
!3138 = !DILocation(line: 3403, column: 5, scope: !3059)
!3139 = !DILocation(line: 3405, column: 15, scope: !3059)
!3140 = !DILocation(line: 3405, column: 19, scope: !3059)
!3141 = !DILocation(line: 3405, column: 14, scope: !3059)
!3142 = !DILocation(line: 3405, column: 5, scope: !3059)
!3143 = !DILocation(line: 3406, column: 5, scope: !3059)
!3144 = distinct !DISubprogram(name: "flush", scope: !1803, file: !1803, line: 500, type: !1787, isLocal: true, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3145 = !DILocalVariable(name: "avctx", arg: 1, scope: !3144, file: !1803, line: 500, type: !1262)
!3146 = !DILocation(line: 500, column: 35, scope: !3144)
!3147 = !DILocalVariable(name: "ac", scope: !3144, file: !1803, line: 502, type: !2065)
!3148 = !DILocation(line: 502, column: 17, scope: !3144)
!3149 = !DILocation(line: 502, column: 21, scope: !3144)
!3150 = !DILocation(line: 502, column: 28, scope: !3144)
!3151 = !DILocalVariable(name: "type", scope: !3144, file: !1803, line: 503, type: !1012)
!3152 = !DILocation(line: 503, column: 9, scope: !3144)
!3153 = !DILocalVariable(name: "i", scope: !3144, file: !1803, line: 503, type: !1012)
!3154 = !DILocation(line: 503, column: 15, scope: !3144)
!3155 = !DILocalVariable(name: "j", scope: !3144, file: !1803, line: 503, type: !1012)
!3156 = !DILocation(line: 503, column: 18, scope: !3144)
!3157 = !DILocation(line: 505, column: 15, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3144, file: !1803, line: 505, column: 5)
!3159 = !DILocation(line: 505, column: 10, scope: !3158)
!3160 = !DILocation(line: 505, column: 20, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !3162, file: !1803, discriminator: 1)
!3162 = distinct !DILexicalBlock(scope: !3158, file: !1803, line: 505, column: 5)
!3163 = !DILocation(line: 505, column: 25, scope: !3161)
!3164 = !DILocation(line: 505, column: 5, scope: !3161)
!3165 = !DILocation(line: 506, column: 16, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !1803, line: 506, column: 9)
!3167 = distinct !DILexicalBlock(scope: !3162, file: !1803, line: 505, column: 39)
!3168 = !DILocation(line: 506, column: 14, scope: !3166)
!3169 = !DILocation(line: 506, column: 21, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3171, file: !1803, discriminator: 1)
!3171 = distinct !DILexicalBlock(scope: !3166, file: !1803, line: 506, column: 9)
!3172 = !DILocation(line: 506, column: 23, scope: !3170)
!3173 = !DILocation(line: 506, column: 9, scope: !3170)
!3174 = !DILocalVariable(name: "che", scope: !3175, file: !1803, line: 507, type: !2095)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !1803, line: 506, column: 34)
!3176 = !DILocation(line: 507, column: 29, scope: !3175)
!3177 = !DILocation(line: 507, column: 49, scope: !3175)
!3178 = !DILocation(line: 507, column: 35, scope: !3175)
!3179 = !DILocation(line: 507, column: 43, scope: !3175)
!3180 = !DILocation(line: 507, column: 39, scope: !3175)
!3181 = !DILocation(line: 508, column: 17, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3175, file: !1803, line: 508, column: 17)
!3183 = !DILocation(line: 508, column: 17, scope: !3175)
!3184 = !DILocation(line: 509, column: 24, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !1803, line: 509, column: 17)
!3186 = distinct !DILexicalBlock(scope: !3182, file: !1803, line: 508, column: 22)
!3187 = !DILocation(line: 509, column: 22, scope: !3185)
!3188 = !DILocation(line: 509, column: 29, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !3190, file: !1803, discriminator: 1)
!3190 = distinct !DILexicalBlock(scope: !3185, file: !1803, line: 509, column: 17)
!3191 = !DILocation(line: 509, column: 31, scope: !3189)
!3192 = !DILocation(line: 509, column: 17, scope: !3189)
!3193 = !DILocation(line: 510, column: 36, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3190, file: !1803, line: 509, column: 42)
!3195 = !DILocation(line: 510, column: 28, scope: !3194)
!3196 = !DILocation(line: 510, column: 33, scope: !3194)
!3197 = !DILocation(line: 510, column: 39, scope: !3194)
!3198 = !DILocation(line: 510, column: 21, scope: !3194)
!3199 = !DILocation(line: 511, column: 17, scope: !3194)
!3200 = !DILocation(line: 509, column: 38, scope: !3201)
!3201 = !DILexicalBlockFile(scope: !3190, file: !1803, discriminator: 2)
!3202 = !DILocation(line: 509, column: 17, scope: !3201)
!3203 = distinct !{!3203, !3204}
!3204 = !DILocation(line: 509, column: 17, scope: !3186)
!3205 = !DILocation(line: 512, column: 13, scope: !3186)
!3206 = !DILocation(line: 513, column: 9, scope: !3175)
!3207 = !DILocation(line: 506, column: 30, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3171, file: !1803, discriminator: 2)
!3209 = !DILocation(line: 506, column: 9, scope: !3208)
!3210 = distinct !{!3210, !3211}
!3211 = !DILocation(line: 506, column: 9, scope: !3167)
!3212 = !DILocation(line: 514, column: 5, scope: !3167)
!3213 = !DILocation(line: 505, column: 35, scope: !3214)
!3214 = !DILexicalBlockFile(scope: !3162, file: !1803, discriminator: 2)
!3215 = !DILocation(line: 505, column: 5, scope: !3214)
!3216 = distinct !{!3216, !3217}
!3217 = !DILocation(line: 505, column: 5, scope: !3144)
!3218 = !DILocation(line: 515, column: 1, scope: !3144)
!3219 = distinct !DISubprogram(name: "latm_decode_init", scope: !1145, file: !1145, line: 540, type: !1260, isLocal: true, isDefinition: true, scopeLine: 541, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3220 = !DILocalVariable(name: "avctx", arg: 1, scope: !3219, file: !1145, line: 540, type: !1262)
!3221 = !DILocation(line: 540, column: 67, scope: !3219)
!3222 = !DILocalVariable(name: "latmctx", scope: !3219, file: !1145, line: 542, type: !3223)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64, align: 64)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LATMContext", file: !1145, line: 264, size: 62464, align: 256, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "aac_ctx", scope: !3224, file: !1145, line: 265, baseType: !2066, size: 62208, align: 256)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3224, file: !1145, line: 266, baseType: !1012, size: 32, align: 32, offset: 62208)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mux_version_A", scope: !3224, file: !1145, line: 269, baseType: !1012, size: 32, align: 32, offset: 62240)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_type", scope: !3224, file: !1145, line: 270, baseType: !1012, size: 32, align: 32, offset: 62272)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length", scope: !3224, file: !1145, line: 271, baseType: !1012, size: 32, align: 32, offset: 62304)
!3231 = !DILocation(line: 542, column: 25, scope: !3219)
!3232 = !DILocation(line: 542, column: 35, scope: !3219)
!3233 = !DILocation(line: 542, column: 42, scope: !3219)
!3234 = !DILocalVariable(name: "ret", scope: !3219, file: !1145, line: 543, type: !1012)
!3235 = !DILocation(line: 543, column: 9, scope: !3219)
!3236 = !DILocation(line: 543, column: 31, scope: !3219)
!3237 = !DILocation(line: 543, column: 15, scope: !3219)
!3238 = !DILocation(line: 545, column: 9, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3219, file: !1145, line: 545, column: 9)
!3240 = !DILocation(line: 545, column: 16, scope: !3239)
!3241 = !DILocation(line: 545, column: 31, scope: !3239)
!3242 = !DILocation(line: 545, column: 9, scope: !3219)
!3243 = !DILocation(line: 546, column: 33, scope: !3239)
!3244 = !DILocation(line: 546, column: 32, scope: !3239)
!3245 = !DILocation(line: 546, column: 9, scope: !3239)
!3246 = !DILocation(line: 546, column: 18, scope: !3239)
!3247 = !DILocation(line: 546, column: 30, scope: !3239)
!3248 = !DILocation(line: 548, column: 12, scope: !3219)
!3249 = !DILocation(line: 548, column: 5, scope: !3219)
!3250 = distinct !DISubprogram(name: "latm_decode_frame", scope: !1145, file: !1145, line: 479, type: !1773, isLocal: true, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3251 = !DILocalVariable(name: "avctx", arg: 1, scope: !3250, file: !1145, line: 479, type: !1262)
!3252 = !DILocation(line: 479, column: 46, scope: !3250)
!3253 = !DILocalVariable(name: "out", arg: 2, scope: !3250, file: !1145, line: 479, type: !1020)
!3254 = !DILocation(line: 479, column: 59, scope: !3250)
!3255 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !3250, file: !1145, line: 480, type: !1457)
!3256 = !DILocation(line: 480, column: 35, scope: !3250)
!3257 = !DILocalVariable(name: "avpkt", arg: 4, scope: !3250, file: !1145, line: 480, type: !1311)
!3258 = !DILocation(line: 480, column: 60, scope: !3250)
!3259 = !DILocalVariable(name: "latmctx", scope: !3250, file: !1145, line: 482, type: !3223)
!3260 = !DILocation(line: 482, column: 25, scope: !3250)
!3261 = !DILocation(line: 482, column: 35, scope: !3250)
!3262 = !DILocation(line: 482, column: 42, scope: !3250)
!3263 = !DILocalVariable(name: "muxlength", scope: !3250, file: !1145, line: 483, type: !1012)
!3264 = !DILocation(line: 483, column: 9, scope: !3250)
!3265 = !DILocalVariable(name: "err", scope: !3250, file: !1145, line: 483, type: !1012)
!3266 = !DILocation(line: 483, column: 20, scope: !3250)
!3267 = !DILocalVariable(name: "gb", scope: !3250, file: !1145, line: 484, type: !2044)
!3268 = !DILocation(line: 484, column: 19, scope: !3250)
!3269 = !DILocation(line: 486, column: 36, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 486, column: 9)
!3271 = !DILocation(line: 486, column: 43, scope: !3270)
!3272 = !DILocation(line: 486, column: 49, scope: !3270)
!3273 = !DILocation(line: 486, column: 56, scope: !3270)
!3274 = !DILocation(line: 486, column: 16, scope: !3270)
!3275 = !DILocation(line: 486, column: 14, scope: !3270)
!3276 = !DILocation(line: 486, column: 63, scope: !3270)
!3277 = !DILocation(line: 486, column: 9, scope: !3250)
!3278 = !DILocation(line: 487, column: 16, scope: !3270)
!3279 = !DILocation(line: 487, column: 9, scope: !3270)
!3280 = !DILocation(line: 490, column: 9, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 490, column: 9)
!3282 = !DILocation(line: 490, column: 27, scope: !3281)
!3283 = !DILocation(line: 490, column: 9, scope: !3250)
!3284 = !DILocation(line: 491, column: 9, scope: !3281)
!3285 = !DILocation(line: 493, column: 17, scope: !3250)
!3286 = !DILocation(line: 493, column: 35, scope: !3250)
!3287 = !DILocation(line: 493, column: 15, scope: !3250)
!3288 = !DILocation(line: 495, column: 9, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 495, column: 9)
!3290 = !DILocation(line: 495, column: 21, scope: !3289)
!3291 = !DILocation(line: 495, column: 28, scope: !3289)
!3292 = !DILocation(line: 495, column: 19, scope: !3289)
!3293 = !DILocation(line: 495, column: 9, scope: !3250)
!3294 = !DILocation(line: 496, column: 9, scope: !3289)
!3295 = !DILocation(line: 498, column: 39, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 498, column: 9)
!3297 = !DILocation(line: 498, column: 16, scope: !3296)
!3298 = !DILocation(line: 498, column: 14, scope: !3296)
!3299 = !DILocation(line: 498, column: 9, scope: !3250)
!3300 = !DILocation(line: 499, column: 17, scope: !3296)
!3301 = !DILocation(line: 499, column: 21, scope: !3296)
!3302 = !DILocation(line: 499, column: 16, scope: !3296)
!3303 = !DILocation(line: 499, column: 28, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !3296, file: !1145, discriminator: 1)
!3305 = !DILocation(line: 499, column: 16, scope: !3304)
!3306 = !DILocation(line: 499, column: 34, scope: !3307)
!3307 = !DILexicalBlockFile(scope: !3296, file: !1145, discriminator: 2)
!3308 = !DILocation(line: 499, column: 41, scope: !3307)
!3309 = !DILocation(line: 499, column: 16, scope: !3307)
!3310 = !DILocation(line: 499, column: 16, scope: !3311)
!3311 = !DILexicalBlockFile(scope: !3296, file: !1145, discriminator: 3)
!3312 = !DILocation(line: 499, column: 9, scope: !3311)
!3313 = !DILocation(line: 501, column: 10, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 501, column: 9)
!3315 = !DILocation(line: 501, column: 19, scope: !3314)
!3316 = !DILocation(line: 501, column: 9, scope: !3250)
!3317 = !DILocation(line: 502, column: 14, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !1145, line: 502, column: 13)
!3319 = distinct !DILexicalBlock(scope: !3314, file: !1145, line: 501, column: 32)
!3320 = !DILocation(line: 502, column: 21, scope: !3318)
!3321 = !DILocation(line: 502, column: 13, scope: !3319)
!3322 = !DILocation(line: 503, column: 14, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3318, file: !1145, line: 502, column: 32)
!3324 = !DILocation(line: 503, column: 28, scope: !3323)
!3325 = !DILocation(line: 504, column: 20, scope: !3323)
!3326 = !DILocation(line: 504, column: 27, scope: !3323)
!3327 = !DILocation(line: 504, column: 13, scope: !3323)
!3328 = !DILocation(line: 506, column: 40, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3318, file: !1145, line: 505, column: 16)
!3330 = !DILocation(line: 506, column: 49, scope: !3329)
!3331 = !DILocation(line: 506, column: 13, scope: !3329)
!3332 = !DILocation(line: 508, column: 22, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3329, file: !1145, line: 507, column: 17)
!3334 = !DILocation(line: 508, column: 31, scope: !3333)
!3335 = !DILocation(line: 508, column: 40, scope: !3333)
!3336 = !DILocation(line: 508, column: 48, scope: !3333)
!3337 = !DILocation(line: 508, column: 57, scope: !3333)
!3338 = !DILocation(line: 508, column: 65, scope: !3333)
!3339 = !DILocation(line: 508, column: 71, scope: !3333)
!3340 = !DILocation(line: 509, column: 21, scope: !3333)
!3341 = !DILocation(line: 509, column: 28, scope: !3333)
!3342 = !DILocation(line: 509, column: 39, scope: !3333)
!3343 = !DILocation(line: 509, column: 46, scope: !3333)
!3344 = !DILocation(line: 509, column: 60, scope: !3333)
!3345 = !DILocation(line: 507, column: 24, scope: !3333)
!3346 = !DILocation(line: 507, column: 22, scope: !3333)
!3347 = !DILocation(line: 509, column: 70, scope: !3333)
!3348 = !DILocation(line: 507, column: 17, scope: !3329)
!3349 = !DILocation(line: 510, column: 43, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3333, file: !1145, line: 509, column: 75)
!3351 = !DILocation(line: 510, column: 52, scope: !3350)
!3352 = !DILocation(line: 510, column: 17, scope: !3350)
!3353 = !DILocation(line: 511, column: 24, scope: !3350)
!3354 = !DILocation(line: 511, column: 17, scope: !3350)
!3355 = !DILocation(line: 513, column: 13, scope: !3329)
!3356 = !DILocation(line: 513, column: 22, scope: !3329)
!3357 = !DILocation(line: 513, column: 34, scope: !3329)
!3358 = !DILocation(line: 515, column: 5, scope: !3319)
!3359 = !DILocation(line: 517, column: 9, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 517, column: 9)
!3361 = !DILocation(line: 517, column: 28, scope: !3360)
!3362 = !DILocation(line: 517, column: 9, scope: !3250)
!3363 = !DILocation(line: 518, column: 16, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3360, file: !1145, line: 517, column: 38)
!3365 = !DILocation(line: 518, column: 25, scope: !3364)
!3366 = !DILocation(line: 518, column: 33, scope: !3364)
!3367 = !DILocation(line: 518, column: 9, scope: !3364)
!3368 = !DILocation(line: 521, column: 9, scope: !3364)
!3369 = !DILocation(line: 524, column: 13, scope: !3250)
!3370 = !DILocation(line: 524, column: 22, scope: !3250)
!3371 = !DILocation(line: 524, column: 30, scope: !3250)
!3372 = !DILocation(line: 524, column: 36, scope: !3250)
!3373 = !DILocation(line: 524, column: 41, scope: !3250)
!3374 = !DILocation(line: 524, column: 5, scope: !3250)
!3375 = !DILocation(line: 529, column: 35, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 524, column: 54)
!3377 = !DILocation(line: 529, column: 42, scope: !3376)
!3378 = !DILocation(line: 529, column: 47, scope: !3376)
!3379 = !DILocation(line: 529, column: 15, scope: !3376)
!3380 = !DILocation(line: 529, column: 13, scope: !3376)
!3381 = !DILocation(line: 530, column: 9, scope: !3376)
!3382 = !DILocation(line: 532, column: 36, scope: !3376)
!3383 = !DILocation(line: 532, column: 43, scope: !3376)
!3384 = !DILocation(line: 532, column: 48, scope: !3376)
!3385 = !DILocation(line: 532, column: 68, scope: !3376)
!3386 = !DILocation(line: 532, column: 15, scope: !3376)
!3387 = !DILocation(line: 532, column: 13, scope: !3376)
!3388 = !DILocation(line: 533, column: 5, scope: !3376)
!3389 = !DILocation(line: 534, column: 9, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3250, file: !1145, line: 534, column: 9)
!3391 = !DILocation(line: 534, column: 13, scope: !3390)
!3392 = !DILocation(line: 534, column: 9, scope: !3250)
!3393 = !DILocation(line: 535, column: 16, scope: !3390)
!3394 = !DILocation(line: 535, column: 9, scope: !3390)
!3395 = !DILocation(line: 537, column: 12, scope: !3250)
!3396 = !DILocation(line: 537, column: 5, scope: !3250)
!3397 = !DILocation(line: 538, column: 1, scope: !3250)
!3398 = !DILocation(line: 1111, column: 5, scope: !1814)
!3399 = distinct !{!3399, !3398}
!3400 = !DILocation(line: 1111, column: 66, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !3402, file: !1803, discriminator: 1)
!3402 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1111, column: 8)
!3403 = !DILocation(line: 1111, column: 111, scope: !3401)
!3404 = !DILocation(line: 1111, column: 158, scope: !3401)
!3405 = !DILocation(line: 1111, column: 184, scope: !3401)
!3406 = !DILocation(line: 1111, column: 281, scope: !3401)
!3407 = !DILocation(line: 1111, column: 118, scope: !3401)
!3408 = !DILocation(line: 1111, column: 16, scope: !3401)
!3409 = !DILocation(line: 1112, column: 5, scope: !1814)
!3410 = distinct !{!3410, !3409}
!3411 = !DILocation(line: 1112, column: 66, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3413, file: !1803, discriminator: 1)
!3413 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1112, column: 8)
!3414 = !DILocation(line: 1112, column: 111, scope: !3412)
!3415 = !DILocation(line: 1112, column: 158, scope: !3412)
!3416 = !DILocation(line: 1112, column: 184, scope: !3412)
!3417 = !DILocation(line: 1112, column: 281, scope: !3412)
!3418 = !DILocation(line: 1112, column: 118, scope: !3412)
!3419 = !DILocation(line: 1112, column: 16, scope: !3412)
!3420 = !DILocation(line: 1113, column: 5, scope: !1814)
!3421 = distinct !{!3421, !3420}
!3422 = !DILocation(line: 1113, column: 66, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3424, file: !1803, discriminator: 1)
!3424 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1113, column: 8)
!3425 = !DILocation(line: 1113, column: 111, scope: !3423)
!3426 = !DILocation(line: 1113, column: 158, scope: !3423)
!3427 = !DILocation(line: 1113, column: 184, scope: !3423)
!3428 = !DILocation(line: 1113, column: 281, scope: !3423)
!3429 = !DILocation(line: 1113, column: 118, scope: !3423)
!3430 = !DILocation(line: 1113, column: 16, scope: !3423)
!3431 = !DILocation(line: 1114, column: 5, scope: !1814)
!3432 = distinct !{!3432, !3431}
!3433 = !DILocation(line: 1114, column: 66, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3435, file: !1803, discriminator: 1)
!3435 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1114, column: 8)
!3436 = !DILocation(line: 1114, column: 111, scope: !3434)
!3437 = !DILocation(line: 1114, column: 158, scope: !3434)
!3438 = !DILocation(line: 1114, column: 184, scope: !3434)
!3439 = !DILocation(line: 1114, column: 281, scope: !3434)
!3440 = !DILocation(line: 1114, column: 118, scope: !3434)
!3441 = !DILocation(line: 1114, column: 16, scope: !3434)
!3442 = !DILocation(line: 1115, column: 5, scope: !1814)
!3443 = distinct !{!3443, !3442}
!3444 = !DILocation(line: 1115, column: 66, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3446, file: !1803, discriminator: 1)
!3446 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1115, column: 8)
!3447 = !DILocation(line: 1115, column: 111, scope: !3445)
!3448 = !DILocation(line: 1115, column: 158, scope: !3445)
!3449 = !DILocation(line: 1115, column: 184, scope: !3445)
!3450 = !DILocation(line: 1115, column: 281, scope: !3445)
!3451 = !DILocation(line: 1115, column: 118, scope: !3445)
!3452 = !DILocation(line: 1115, column: 16, scope: !3445)
!3453 = !DILocation(line: 1116, column: 5, scope: !1814)
!3454 = distinct !{!3454, !3453}
!3455 = !DILocation(line: 1116, column: 66, scope: !3456)
!3456 = !DILexicalBlockFile(scope: !3457, file: !1803, discriminator: 1)
!3457 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1116, column: 8)
!3458 = !DILocation(line: 1116, column: 111, scope: !3456)
!3459 = !DILocation(line: 1116, column: 158, scope: !3456)
!3460 = !DILocation(line: 1116, column: 184, scope: !3456)
!3461 = !DILocation(line: 1116, column: 281, scope: !3456)
!3462 = !DILocation(line: 1116, column: 118, scope: !3456)
!3463 = !DILocation(line: 1116, column: 16, scope: !3456)
!3464 = !DILocation(line: 1117, column: 5, scope: !1814)
!3465 = distinct !{!3465, !3464}
!3466 = !DILocation(line: 1117, column: 66, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3468, file: !1803, discriminator: 1)
!3468 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1117, column: 8)
!3469 = !DILocation(line: 1117, column: 111, scope: !3467)
!3470 = !DILocation(line: 1117, column: 158, scope: !3467)
!3471 = !DILocation(line: 1117, column: 184, scope: !3467)
!3472 = !DILocation(line: 1117, column: 281, scope: !3467)
!3473 = !DILocation(line: 1117, column: 118, scope: !3467)
!3474 = !DILocation(line: 1117, column: 16, scope: !3467)
!3475 = !DILocation(line: 1118, column: 5, scope: !1814)
!3476 = distinct !{!3476, !3475}
!3477 = !DILocation(line: 1118, column: 66, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3479, file: !1803, discriminator: 1)
!3479 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1118, column: 8)
!3480 = !DILocation(line: 1118, column: 111, scope: !3478)
!3481 = !DILocation(line: 1118, column: 158, scope: !3478)
!3482 = !DILocation(line: 1118, column: 184, scope: !3478)
!3483 = !DILocation(line: 1118, column: 281, scope: !3478)
!3484 = !DILocation(line: 1118, column: 118, scope: !3478)
!3485 = !DILocation(line: 1118, column: 16, scope: !3478)
!3486 = !DILocation(line: 1119, column: 5, scope: !1814)
!3487 = distinct !{!3487, !3486}
!3488 = !DILocation(line: 1119, column: 66, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3490, file: !1803, discriminator: 1)
!3490 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1119, column: 8)
!3491 = !DILocation(line: 1119, column: 111, scope: !3489)
!3492 = !DILocation(line: 1119, column: 158, scope: !3489)
!3493 = !DILocation(line: 1119, column: 184, scope: !3489)
!3494 = !DILocation(line: 1119, column: 281, scope: !3489)
!3495 = !DILocation(line: 1119, column: 118, scope: !3489)
!3496 = !DILocation(line: 1119, column: 16, scope: !3489)
!3497 = !DILocation(line: 1120, column: 5, scope: !1814)
!3498 = distinct !{!3498, !3497}
!3499 = !DILocation(line: 1120, column: 66, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3501, file: !1803, discriminator: 1)
!3501 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1120, column: 8)
!3502 = !DILocation(line: 1120, column: 111, scope: !3500)
!3503 = !DILocation(line: 1120, column: 158, scope: !3500)
!3504 = !DILocation(line: 1120, column: 184, scope: !3500)
!3505 = !DILocation(line: 1120, column: 281, scope: !3500)
!3506 = !DILocation(line: 1120, column: 118, scope: !3500)
!3507 = !DILocation(line: 1120, column: 16, scope: !3500)
!3508 = !DILocation(line: 1121, column: 5, scope: !1814)
!3509 = distinct !{!3509, !3508}
!3510 = !DILocation(line: 1121, column: 67, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3512, file: !1803, discriminator: 1)
!3512 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1121, column: 8)
!3513 = !DILocation(line: 1121, column: 113, scope: !3511)
!3514 = !DILocation(line: 1121, column: 161, scope: !3511)
!3515 = !DILocation(line: 1121, column: 188, scope: !3511)
!3516 = !DILocation(line: 1121, column: 288, scope: !3511)
!3517 = !DILocation(line: 1121, column: 120, scope: !3511)
!3518 = !DILocation(line: 1121, column: 16, scope: !3511)
!3519 = !DILocation(line: 1123, column: 5, scope: !1814)
!3520 = !DILocation(line: 1125, column: 5, scope: !1814)
!3521 = !DILocation(line: 1127, column: 5, scope: !1814)
!3522 = distinct !{!3522, !3521}
!3523 = !DILocation(line: 1127, column: 67, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3525, file: !1803, discriminator: 1)
!3525 = distinct !DILexicalBlock(scope: !1814, file: !1803, line: 1127, column: 8)
!3526 = !DILocation(line: 1127, column: 113, scope: !3524)
!3527 = !DILocation(line: 1127, column: 120, scope: !3524)
!3528 = !DILocation(line: 1127, column: 16, scope: !3524)
!3529 = !DILocation(line: 1138, column: 5, scope: !1814)
!3530 = !DILocation(line: 1139, column: 5, scope: !1814)
!3531 = !DILocation(line: 1141, column: 5, scope: !1814)
!3532 = !DILocation(line: 1142, column: 5, scope: !1814)
!3533 = !DILocation(line: 1143, column: 5, scope: !1814)
!3534 = !DILocation(line: 1144, column: 5, scope: !1814)
!3535 = !DILocation(line: 1146, column: 5, scope: !1814)
!3536 = !DILocation(line: 1147, column: 5, scope: !1814)
!3537 = !DILocation(line: 1148, column: 5, scope: !1814)
!3538 = !DILocation(line: 1150, column: 5, scope: !1814)
!3539 = !DILocation(line: 1151, column: 1, scope: !1814)
!3540 = distinct !DISubprogram(name: "aacdec_init", scope: !1803, file: !1803, line: 3409, type: !3541, isLocal: true, isDefinition: true, scopeLine: 3410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{null, !2065}
!3543 = !DILocalVariable(name: "c", arg: 1, scope: !3540, file: !1803, line: 3409, type: !2065)
!3544 = !DILocation(line: 3409, column: 37, scope: !3540)
!3545 = !DILocation(line: 3411, column: 5, scope: !3540)
!3546 = !DILocation(line: 3411, column: 8, scope: !3540)
!3547 = !DILocation(line: 3411, column: 28, scope: !3540)
!3548 = !DILocation(line: 3412, column: 5, scope: !3540)
!3549 = !DILocation(line: 3412, column: 8, scope: !3540)
!3550 = !DILocation(line: 3412, column: 18, scope: !3540)
!3551 = !DILocation(line: 3413, column: 5, scope: !3540)
!3552 = !DILocation(line: 3413, column: 8, scope: !3540)
!3553 = !DILocation(line: 3413, column: 18, scope: !3540)
!3554 = !DILocation(line: 3414, column: 5, scope: !3540)
!3555 = !DILocation(line: 3414, column: 8, scope: !3540)
!3556 = !DILocation(line: 3414, column: 31, scope: !3540)
!3557 = !DILocation(line: 3415, column: 5, scope: !3540)
!3558 = !DILocation(line: 3415, column: 8, scope: !3540)
!3559 = !DILocation(line: 3415, column: 19, scope: !3540)
!3560 = !DILocation(line: 3425, column: 1, scope: !3540)
!3561 = distinct !DISubprogram(name: "decode_audio_specific_config", scope: !1803, file: !1803, line: 1030, type: !3562, isLocal: true, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!1012, !2065, !1262, !3564, !1607, !1063, !1012}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64, align: 64)
!3565 = !DILocalVariable(name: "ac", arg: 1, scope: !3561, file: !1803, line: 1030, type: !2065)
!3566 = !DILocation(line: 1030, column: 53, scope: !3561)
!3567 = !DILocalVariable(name: "avctx", arg: 2, scope: !3561, file: !1803, line: 1031, type: !1262)
!3568 = !DILocation(line: 1031, column: 57, scope: !3561)
!3569 = !DILocalVariable(name: "m4ac", arg: 3, scope: !3561, file: !1803, line: 1032, type: !3564)
!3570 = !DILocation(line: 1032, column: 59, scope: !3561)
!3571 = !DILocalVariable(name: "data", arg: 4, scope: !3561, file: !1803, line: 1033, type: !1607)
!3572 = !DILocation(line: 1033, column: 56, scope: !3561)
!3573 = !DILocalVariable(name: "bit_size", arg: 5, scope: !3561, file: !1803, line: 1033, type: !1063)
!3574 = !DILocation(line: 1033, column: 70, scope: !3561)
!3575 = !DILocalVariable(name: "sync_extension", arg: 6, scope: !3561, file: !1803, line: 1034, type: !1012)
!3576 = !DILocation(line: 1034, column: 45, scope: !3561)
!3577 = !DILocalVariable(name: "i", scope: !3561, file: !1803, line: 1036, type: !1012)
!3578 = !DILocation(line: 1036, column: 9, scope: !3561)
!3579 = !DILocalVariable(name: "ret", scope: !3561, file: !1803, line: 1036, type: !1012)
!3580 = !DILocation(line: 1036, column: 12, scope: !3561)
!3581 = !DILocalVariable(name: "gb", scope: !3561, file: !1803, line: 1037, type: !2044)
!3582 = !DILocation(line: 1037, column: 19, scope: !3561)
!3583 = !DILocation(line: 1039, column: 9, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3561, file: !1803, line: 1039, column: 9)
!3585 = !DILocation(line: 1039, column: 18, scope: !3584)
!3586 = !DILocation(line: 1039, column: 22, scope: !3584)
!3587 = !DILocation(line: 1039, column: 25, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3584, file: !1803, discriminator: 1)
!3589 = !DILocation(line: 1039, column: 34, scope: !3588)
!3590 = !DILocation(line: 1039, column: 9, scope: !3588)
!3591 = !DILocation(line: 1040, column: 16, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3584, file: !1803, line: 1039, column: 48)
!3593 = !DILocation(line: 1040, column: 9, scope: !3592)
!3594 = !DILocation(line: 1041, column: 9, scope: !3592)
!3595 = !DILocation(line: 1044, column: 5, scope: !3561)
!3596 = distinct !{!3596, !3595}
!3597 = !DILocation(line: 1044, column: 91, scope: !3598)
!3598 = !DILexicalBlockFile(scope: !3599, file: !1803, discriminator: 1)
!3599 = distinct !DILexicalBlock(scope: !3561, file: !1803, line: 1044, column: 8)
!3600 = !DILocation(line: 1045, column: 12, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3561, file: !1803, line: 1045, column: 5)
!3602 = !DILocation(line: 1045, column: 10, scope: !3601)
!3603 = !DILocation(line: 1045, column: 17, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3605, file: !1803, discriminator: 1)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !1803, line: 1045, column: 5)
!3606 = !DILocation(line: 1045, column: 21, scope: !3604)
!3607 = !DILocation(line: 1045, column: 30, scope: !3604)
!3608 = !DILocation(line: 1045, column: 19, scope: !3604)
!3609 = !DILocation(line: 1045, column: 5, scope: !3604)
!3610 = !DILocation(line: 1046, column: 9, scope: !3605)
!3611 = distinct !{!3611, !3610}
!3612 = !DILocation(line: 1046, column: 58, scope: !3613)
!3613 = !DILexicalBlockFile(scope: !3614, file: !1803, discriminator: 1)
!3614 = distinct !DILexicalBlock(scope: !3605, file: !1803, line: 1046, column: 12)
!3615 = !DILocation(line: 1046, column: 58, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3614, file: !1803, discriminator: 2)
!3617 = !DILocation(line: 1045, column: 37, scope: !3618)
!3618 = !DILexicalBlockFile(scope: !3605, file: !1803, discriminator: 2)
!3619 = !DILocation(line: 1045, column: 5, scope: !3618)
!3620 = distinct !{!3620, !3621}
!3621 = !DILocation(line: 1045, column: 5, scope: !3561)
!3622 = !DILocation(line: 1047, column: 5, scope: !3561)
!3623 = distinct !{!3623, !3622}
!3624 = !DILocation(line: 1047, column: 42, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3626, file: !1803, discriminator: 1)
!3626 = distinct !DILexicalBlock(scope: !3561, file: !1803, line: 1047, column: 8)
!3627 = !DILocation(line: 1049, column: 35, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3561, file: !1803, line: 1049, column: 9)
!3629 = !DILocation(line: 1049, column: 41, scope: !3628)
!3630 = !DILocation(line: 1049, column: 16, scope: !3628)
!3631 = !DILocation(line: 1049, column: 14, scope: !3628)
!3632 = !DILocation(line: 1049, column: 52, scope: !3628)
!3633 = !DILocation(line: 1049, column: 9, scope: !3561)
!3634 = !DILocation(line: 1050, column: 16, scope: !3628)
!3635 = !DILocation(line: 1050, column: 9, scope: !3628)
!3636 = !DILocation(line: 1052, column: 44, scope: !3561)
!3637 = !DILocation(line: 1052, column: 48, scope: !3561)
!3638 = !DILocation(line: 1052, column: 55, scope: !3561)
!3639 = !DILocation(line: 1053, column: 44, scope: !3561)
!3640 = !DILocation(line: 1052, column: 12, scope: !3561)
!3641 = !DILocation(line: 1052, column: 5, scope: !3561)
!3642 = !DILocation(line: 1054, column: 1, scope: !3561)
!3643 = distinct !DISubprogram(name: "sample_rate_idx", scope: !1803, file: !1803, line: 1076, type: !3644, isLocal: true, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!1012, !1012}
!3646 = !DILocalVariable(name: "rate", arg: 1, scope: !3643, file: !1803, line: 1076, type: !1012)
!3647 = !DILocation(line: 1076, column: 33, scope: !3643)
!3648 = !DILocation(line: 1078, column: 23, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3643, file: !1803, line: 1078, column: 14)
!3650 = !DILocation(line: 1078, column: 20, scope: !3649)
!3651 = !DILocation(line: 1078, column: 14, scope: !3643)
!3652 = !DILocation(line: 1078, column: 29, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3649, file: !1803, discriminator: 1)
!3654 = !DILocation(line: 1079, column: 23, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3649, file: !1803, line: 1079, column: 14)
!3656 = !DILocation(line: 1079, column: 20, scope: !3655)
!3657 = !DILocation(line: 1079, column: 14, scope: !3649)
!3658 = !DILocation(line: 1079, column: 29, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3655, file: !1803, discriminator: 1)
!3660 = !DILocation(line: 1080, column: 23, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3655, file: !1803, line: 1080, column: 14)
!3662 = !DILocation(line: 1080, column: 20, scope: !3661)
!3663 = !DILocation(line: 1080, column: 14, scope: !3655)
!3664 = !DILocation(line: 1080, column: 29, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3661, file: !1803, discriminator: 1)
!3666 = !DILocation(line: 1081, column: 23, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3661, file: !1803, line: 1081, column: 14)
!3668 = !DILocation(line: 1081, column: 20, scope: !3667)
!3669 = !DILocation(line: 1081, column: 14, scope: !3661)
!3670 = !DILocation(line: 1081, column: 29, scope: !3671)
!3671 = !DILexicalBlockFile(scope: !3667, file: !1803, discriminator: 1)
!3672 = !DILocation(line: 1082, column: 23, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3667, file: !1803, line: 1082, column: 14)
!3674 = !DILocation(line: 1082, column: 20, scope: !3673)
!3675 = !DILocation(line: 1082, column: 14, scope: !3667)
!3676 = !DILocation(line: 1082, column: 29, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3673, file: !1803, discriminator: 1)
!3678 = !DILocation(line: 1083, column: 23, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3673, file: !1803, line: 1083, column: 14)
!3680 = !DILocation(line: 1083, column: 20, scope: !3679)
!3681 = !DILocation(line: 1083, column: 14, scope: !3673)
!3682 = !DILocation(line: 1083, column: 29, scope: !3683)
!3683 = !DILexicalBlockFile(scope: !3679, file: !1803, discriminator: 1)
!3684 = !DILocation(line: 1084, column: 23, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3679, file: !1803, line: 1084, column: 14)
!3686 = !DILocation(line: 1084, column: 20, scope: !3685)
!3687 = !DILocation(line: 1084, column: 14, scope: !3679)
!3688 = !DILocation(line: 1084, column: 29, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3685, file: !1803, discriminator: 1)
!3690 = !DILocation(line: 1085, column: 23, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3685, file: !1803, line: 1085, column: 14)
!3692 = !DILocation(line: 1085, column: 20, scope: !3691)
!3693 = !DILocation(line: 1085, column: 14, scope: !3685)
!3694 = !DILocation(line: 1085, column: 29, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !3691, file: !1803, discriminator: 1)
!3696 = !DILocation(line: 1086, column: 23, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3691, file: !1803, line: 1086, column: 14)
!3698 = !DILocation(line: 1086, column: 20, scope: !3697)
!3699 = !DILocation(line: 1086, column: 14, scope: !3691)
!3700 = !DILocation(line: 1086, column: 29, scope: !3701)
!3701 = !DILexicalBlockFile(scope: !3697, file: !1803, discriminator: 1)
!3702 = !DILocation(line: 1087, column: 23, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3697, file: !1803, line: 1087, column: 14)
!3704 = !DILocation(line: 1087, column: 20, scope: !3703)
!3705 = !DILocation(line: 1087, column: 14, scope: !3697)
!3706 = !DILocation(line: 1087, column: 29, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3703, file: !1803, discriminator: 1)
!3708 = !DILocation(line: 1088, column: 22, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3703, file: !1803, line: 1088, column: 14)
!3710 = !DILocation(line: 1088, column: 19, scope: !3709)
!3711 = !DILocation(line: 1088, column: 14, scope: !3703)
!3712 = !DILocation(line: 1088, column: 28, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3709, file: !1803, discriminator: 1)
!3714 = !DILocation(line: 1089, column: 10, scope: !3709)
!3715 = !DILocation(line: 1090, column: 1, scope: !3643)
!3716 = distinct !DISubprogram(name: "set_default_channel_config", scope: !1803, file: !1803, line: 523, type: !3717, isLocal: true, isDefinition: true, scopeLine: 527, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!1012, !1262, !3719, !1457, !1012}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64, align: 64)
!3720 = !DILocalVariable(name: "avctx", arg: 1, scope: !3716, file: !1803, line: 523, type: !1262)
!3721 = !DILocation(line: 523, column: 55, scope: !3716)
!3722 = !DILocalVariable(name: "layout_map", arg: 2, scope: !3716, file: !1803, line: 524, type: !3719)
!3723 = !DILocation(line: 524, column: 49, scope: !3716)
!3724 = !DILocalVariable(name: "tags", arg: 3, scope: !3716, file: !1803, line: 525, type: !1457)
!3725 = !DILocation(line: 525, column: 44, scope: !3716)
!3726 = !DILocalVariable(name: "channel_config", arg: 4, scope: !3716, file: !1803, line: 526, type: !1012)
!3727 = !DILocation(line: 526, column: 43, scope: !3716)
!3728 = !DILocation(line: 528, column: 9, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3716, file: !1803, line: 528, column: 9)
!3730 = !DILocation(line: 528, column: 24, scope: !3729)
!3731 = !DILocation(line: 528, column: 28, scope: !3729)
!3732 = !DILocation(line: 528, column: 32, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3729, file: !1803, discriminator: 1)
!3734 = !DILocation(line: 528, column: 47, scope: !3733)
!3735 = !DILocation(line: 528, column: 51, scope: !3733)
!3736 = !DILocation(line: 528, column: 54, scope: !3737)
!3737 = !DILexicalBlockFile(scope: !3729, file: !1803, discriminator: 2)
!3738 = !DILocation(line: 528, column: 69, scope: !3737)
!3739 = !DILocation(line: 528, column: 75, scope: !3737)
!3740 = !DILocation(line: 529, column: 9, scope: !3729)
!3741 = !DILocation(line: 529, column: 24, scope: !3729)
!3742 = !DILocation(line: 528, column: 9, scope: !3743)
!3743 = !DILexicalBlockFile(scope: !3716, file: !1803, discriminator: 3)
!3744 = !DILocation(line: 530, column: 16, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3729, file: !1803, line: 529, column: 30)
!3746 = !DILocation(line: 532, column: 16, scope: !3745)
!3747 = !DILocation(line: 530, column: 9, scope: !3745)
!3748 = !DILocation(line: 533, column: 9, scope: !3745)
!3749 = !DILocation(line: 535, column: 29, scope: !3716)
!3750 = !DILocation(line: 535, column: 13, scope: !3716)
!3751 = !DILocation(line: 535, column: 6, scope: !3716)
!3752 = !DILocation(line: 535, column: 11, scope: !3716)
!3753 = !DILocation(line: 536, column: 12, scope: !3716)
!3754 = !DILocation(line: 536, column: 5, scope: !3716)
!3755 = !DILocation(line: 536, column: 47, scope: !3716)
!3756 = !DILocation(line: 536, column: 62, scope: !3716)
!3757 = !DILocation(line: 536, column: 24, scope: !3716)
!3758 = !DILocation(line: 537, column: 13, scope: !3716)
!3759 = !DILocation(line: 537, column: 12, scope: !3716)
!3760 = !DILocation(line: 537, column: 18, scope: !3716)
!3761 = !DILocation(line: 550, column: 9, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3716, file: !1803, line: 550, column: 9)
!3763 = !DILocation(line: 550, column: 24, scope: !3762)
!3764 = !DILocation(line: 550, column: 29, scope: !3762)
!3765 = !DILocation(line: 550, column: 32, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3762, file: !1803, discriminator: 1)
!3767 = !DILocation(line: 550, column: 39, scope: !3766)
!3768 = !DILocation(line: 550, column: 61, scope: !3766)
!3769 = !DILocation(line: 550, column: 9, scope: !3766)
!3770 = !DILocation(line: 551, column: 16, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3762, file: !1803, line: 550, column: 66)
!3772 = !DILocation(line: 551, column: 9, scope: !3771)
!3773 = !DILocation(line: 554, column: 9, scope: !3771)
!3774 = !DILocation(line: 554, column: 26, scope: !3771)
!3775 = !DILocation(line: 555, column: 5, scope: !3771)
!3776 = !DILocation(line: 557, column: 5, scope: !3716)
!3777 = !DILocation(line: 558, column: 1, scope: !3716)
!3778 = distinct !DISubprogram(name: "output_configure", scope: !1803, file: !1803, line: 440, type: !3779, isLocal: true, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!1012, !2065, !3719, !1012, !950, !1012}
!3781 = !DILocalVariable(name: "ac", arg: 1, scope: !3778, file: !1803, line: 440, type: !2065)
!3782 = !DILocation(line: 440, column: 41, scope: !3778)
!3783 = !DILocalVariable(name: "layout_map", arg: 2, scope: !3778, file: !1803, line: 441, type: !3719)
!3784 = !DILocation(line: 441, column: 37, scope: !3778)
!3785 = !DILocalVariable(name: "tags", arg: 3, scope: !3778, file: !1803, line: 441, type: !1012)
!3786 = !DILocation(line: 441, column: 64, scope: !3778)
!3787 = !DILocalVariable(name: "oc_type", arg: 4, scope: !3778, file: !1803, line: 442, type: !950)
!3788 = !DILocation(line: 442, column: 43, scope: !3778)
!3789 = !DILocalVariable(name: "get_new_frame", arg: 5, scope: !3778, file: !1803, line: 442, type: !1012)
!3790 = !DILocation(line: 442, column: 56, scope: !3778)
!3791 = !DILocalVariable(name: "avctx", scope: !3778, file: !1803, line: 444, type: !1262)
!3792 = !DILocation(line: 444, column: 21, scope: !3778)
!3793 = !DILocation(line: 444, column: 29, scope: !3778)
!3794 = !DILocation(line: 444, column: 33, scope: !3778)
!3795 = !DILocalVariable(name: "i", scope: !3778, file: !1803, line: 445, type: !1012)
!3796 = !DILocation(line: 445, column: 9, scope: !3778)
!3797 = !DILocalVariable(name: "channels", scope: !3778, file: !1803, line: 445, type: !1012)
!3798 = !DILocation(line: 445, column: 12, scope: !3778)
!3799 = !DILocalVariable(name: "ret", scope: !3778, file: !1803, line: 445, type: !1012)
!3800 = !DILocation(line: 445, column: 26, scope: !3778)
!3801 = !DILocalVariable(name: "layout", scope: !3778, file: !1803, line: 446, type: !1073)
!3802 = !DILocation(line: 446, column: 14, scope: !3778)
!3803 = !DILocalVariable(name: "id_map", scope: !3778, file: !1803, line: 447, type: !3804)
!3804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 896, align: 8, elements: !3805)
!3805 = !{!2164, !1801}
!3806 = !DILocation(line: 447, column: 13, scope: !3778)
!3807 = !DILocalVariable(name: "type_counts", scope: !3778, file: !1803, line: 448, type: !2162)
!3808 = !DILocation(line: 448, column: 13, scope: !3778)
!3809 = !DILocation(line: 450, column: 9, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 450, column: 9)
!3811 = !DILocation(line: 450, column: 13, scope: !3810)
!3812 = !DILocation(line: 450, column: 19, scope: !3810)
!3813 = !DILocation(line: 450, column: 33, scope: !3810)
!3814 = !DILocation(line: 450, column: 30, scope: !3810)
!3815 = !DILocation(line: 450, column: 9, scope: !3778)
!3816 = !DILocation(line: 451, column: 16, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !1803, line: 450, column: 45)
!3818 = !DILocation(line: 451, column: 20, scope: !3817)
!3819 = !DILocation(line: 451, column: 26, scope: !3817)
!3820 = !DILocation(line: 451, column: 9, scope: !3817)
!3821 = !DILocation(line: 451, column: 38, scope: !3817)
!3822 = !DILocation(line: 451, column: 50, scope: !3817)
!3823 = !DILocation(line: 451, column: 55, scope: !3817)
!3824 = !DILocation(line: 452, column: 37, scope: !3817)
!3825 = !DILocation(line: 452, column: 9, scope: !3817)
!3826 = !DILocation(line: 452, column: 13, scope: !3817)
!3827 = !DILocation(line: 452, column: 19, scope: !3817)
!3828 = !DILocation(line: 452, column: 35, scope: !3817)
!3829 = !DILocation(line: 453, column: 5, scope: !3817)
!3830 = !DILocation(line: 454, column: 12, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 454, column: 5)
!3832 = !DILocation(line: 454, column: 10, scope: !3831)
!3833 = !DILocation(line: 454, column: 17, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3835, file: !1803, discriminator: 1)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !1803, line: 454, column: 5)
!3836 = !DILocation(line: 454, column: 21, scope: !3834)
!3837 = !DILocation(line: 454, column: 19, scope: !3834)
!3838 = !DILocation(line: 454, column: 5, scope: !3834)
!3839 = !DILocalVariable(name: "type", scope: !3840, file: !1803, line: 455, type: !1012)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !1803, line: 454, column: 32)
!3841 = !DILocation(line: 455, column: 13, scope: !3840)
!3842 = !DILocation(line: 455, column: 31, scope: !3840)
!3843 = !DILocation(line: 455, column: 20, scope: !3840)
!3844 = !DILocalVariable(name: "id", scope: !3840, file: !1803, line: 456, type: !1012)
!3845 = !DILocation(line: 456, column: 13, scope: !3840)
!3846 = !DILocation(line: 456, column: 29, scope: !3840)
!3847 = !DILocation(line: 456, column: 18, scope: !3840)
!3848 = !DILocation(line: 457, column: 40, scope: !3840)
!3849 = !DILocation(line: 457, column: 28, scope: !3840)
!3850 = !DILocation(line: 457, column: 45, scope: !3840)
!3851 = !DILocation(line: 457, column: 22, scope: !3840)
!3852 = !DILocation(line: 457, column: 9, scope: !3840)
!3853 = !DILocation(line: 457, column: 16, scope: !3840)
!3854 = !DILocation(line: 457, column: 26, scope: !3840)
!3855 = !DILocation(line: 458, column: 26, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3840, file: !1803, line: 458, column: 13)
!3857 = !DILocation(line: 458, column: 13, scope: !3856)
!3858 = !DILocation(line: 458, column: 20, scope: !3856)
!3859 = !DILocation(line: 458, column: 30, scope: !3856)
!3860 = !DILocation(line: 458, column: 13, scope: !3840)
!3861 = !DILocation(line: 459, column: 35, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3856, file: !1803, line: 458, column: 37)
!3863 = !DILocation(line: 459, column: 39, scope: !3862)
!3864 = !DILocation(line: 459, column: 13, scope: !3862)
!3865 = !DILocation(line: 460, column: 13, scope: !3862)
!3866 = !DILocation(line: 462, column: 5, scope: !3840)
!3867 = !DILocation(line: 454, column: 28, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3835, file: !1803, discriminator: 2)
!3869 = !DILocation(line: 454, column: 5, scope: !3868)
!3870 = distinct !{!3870, !3871}
!3871 = !DILocation(line: 454, column: 5, scope: !3778)
!3872 = !DILocation(line: 465, column: 9, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 465, column: 9)
!3874 = !DILocation(line: 465, column: 16, scope: !3873)
!3875 = !DILocation(line: 465, column: 39, scope: !3873)
!3876 = !DILocation(line: 465, column: 9, scope: !3778)
!3877 = !DILocation(line: 466, column: 38, scope: !3873)
!3878 = !DILocation(line: 466, column: 50, scope: !3873)
!3879 = !DILocation(line: 466, column: 18, scope: !3873)
!3880 = !DILocation(line: 466, column: 16, scope: !3873)
!3881 = !DILocation(line: 466, column: 9, scope: !3873)
!3882 = !DILocation(line: 467, column: 12, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 467, column: 5)
!3884 = !DILocation(line: 467, column: 10, scope: !3883)
!3885 = !DILocation(line: 467, column: 17, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3887, file: !1803, discriminator: 1)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !1803, line: 467, column: 5)
!3888 = !DILocation(line: 467, column: 21, scope: !3886)
!3889 = !DILocation(line: 467, column: 19, scope: !3886)
!3890 = !DILocation(line: 467, column: 5, scope: !3886)
!3891 = !DILocalVariable(name: "type", scope: !3892, file: !1803, line: 468, type: !1012)
!3892 = distinct !DILexicalBlock(scope: !3887, file: !1803, line: 467, column: 32)
!3893 = !DILocation(line: 468, column: 13, scope: !3892)
!3894 = !DILocation(line: 468, column: 31, scope: !3892)
!3895 = !DILocation(line: 468, column: 20, scope: !3892)
!3896 = !DILocalVariable(name: "id", scope: !3892, file: !1803, line: 469, type: !1012)
!3897 = !DILocation(line: 469, column: 13, scope: !3892)
!3898 = !DILocation(line: 469, column: 29, scope: !3892)
!3899 = !DILocation(line: 469, column: 18, scope: !3892)
!3900 = !DILocalVariable(name: "iid", scope: !3892, file: !1803, line: 470, type: !1012)
!3901 = !DILocation(line: 470, column: 13, scope: !3892)
!3902 = !DILocation(line: 470, column: 32, scope: !3892)
!3903 = !DILocation(line: 470, column: 19, scope: !3892)
!3904 = !DILocation(line: 470, column: 26, scope: !3892)
!3905 = !DILocalVariable(name: "position", scope: !3892, file: !1803, line: 471, type: !1012)
!3906 = !DILocation(line: 471, column: 13, scope: !3892)
!3907 = !DILocation(line: 471, column: 35, scope: !3892)
!3908 = !DILocation(line: 471, column: 24, scope: !3892)
!3909 = !DILocation(line: 474, column: 29, scope: !3892)
!3910 = !DILocation(line: 474, column: 33, scope: !3892)
!3911 = !DILocation(line: 474, column: 43, scope: !3892)
!3912 = !DILocation(line: 474, column: 49, scope: !3892)
!3913 = !DILocation(line: 474, column: 15, scope: !3892)
!3914 = !DILocation(line: 474, column: 13, scope: !3892)
!3915 = !DILocation(line: 475, column: 13, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3892, file: !1803, line: 475, column: 13)
!3917 = !DILocation(line: 475, column: 17, scope: !3916)
!3918 = !DILocation(line: 475, column: 13, scope: !3892)
!3919 = !DILocation(line: 476, column: 20, scope: !3916)
!3920 = !DILocation(line: 476, column: 13, scope: !3916)
!3921 = !DILocation(line: 477, column: 51, scope: !3892)
!3922 = !DILocation(line: 477, column: 37, scope: !3892)
!3923 = !DILocation(line: 477, column: 45, scope: !3892)
!3924 = !DILocation(line: 477, column: 41, scope: !3892)
!3925 = !DILocation(line: 477, column: 31, scope: !3892)
!3926 = !DILocation(line: 477, column: 9, scope: !3892)
!3927 = !DILocation(line: 477, column: 25, scope: !3892)
!3928 = !DILocation(line: 477, column: 13, scope: !3892)
!3929 = !DILocation(line: 477, column: 35, scope: !3892)
!3930 = !DILocation(line: 478, column: 5, scope: !3892)
!3931 = !DILocation(line: 467, column: 28, scope: !3932)
!3932 = !DILexicalBlockFile(scope: !3887, file: !1803, discriminator: 2)
!3933 = !DILocation(line: 467, column: 5, scope: !3932)
!3934 = distinct !{!3934, !3935}
!3935 = !DILocation(line: 467, column: 5, scope: !3778)
!3936 = !DILocation(line: 479, column: 9, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 479, column: 9)
!3938 = !DILocation(line: 479, column: 13, scope: !3937)
!3939 = !DILocation(line: 479, column: 19, scope: !3937)
!3940 = !DILocation(line: 479, column: 24, scope: !3937)
!3941 = !DILocation(line: 479, column: 27, scope: !3937)
!3942 = !DILocation(line: 479, column: 32, scope: !3937)
!3943 = !DILocation(line: 479, column: 35, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !3937, file: !1803, discriminator: 1)
!3945 = !DILocation(line: 479, column: 44, scope: !3944)
!3946 = !DILocation(line: 479, column: 9, scope: !3944)
!3947 = !DILocation(line: 480, column: 13, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !1803, line: 480, column: 13)
!3949 = distinct !DILexicalBlock(scope: !3937, file: !1803, line: 479, column: 50)
!3950 = !DILocation(line: 480, column: 20, scope: !3948)
!3951 = !DILocation(line: 480, column: 13, scope: !3949)
!3952 = !DILocation(line: 481, column: 20, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3948, file: !1803, line: 480, column: 35)
!3954 = !DILocation(line: 482, column: 9, scope: !3953)
!3955 = !DILocation(line: 483, column: 20, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3948, file: !1803, line: 482, column: 16)
!3957 = !DILocation(line: 485, column: 5, scope: !3949)
!3958 = !DILocation(line: 487, column: 9, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 487, column: 9)
!3960 = !DILocation(line: 487, column: 9, scope: !3778)
!3961 = !DILocation(line: 487, column: 41, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3959, file: !1803, discriminator: 1)
!3963 = !DILocation(line: 487, column: 17, scope: !3962)
!3964 = !DILocation(line: 487, column: 24, scope: !3962)
!3965 = !DILocation(line: 487, column: 39, scope: !3962)
!3966 = !DILocation(line: 488, column: 56, scope: !3778)
!3967 = !DILocation(line: 488, column: 29, scope: !3778)
!3968 = !DILocation(line: 488, column: 33, scope: !3778)
!3969 = !DILocation(line: 488, column: 39, scope: !3778)
!3970 = !DILocation(line: 488, column: 54, scope: !3778)
!3971 = !DILocation(line: 489, column: 44, scope: !3778)
!3972 = !DILocation(line: 489, column: 23, scope: !3778)
!3973 = !DILocation(line: 489, column: 27, scope: !3778)
!3974 = !DILocation(line: 489, column: 33, scope: !3778)
!3975 = !DILocation(line: 489, column: 42, scope: !3778)
!3976 = !DILocation(line: 489, column: 5, scope: !3778)
!3977 = !DILocation(line: 489, column: 12, scope: !3778)
!3978 = !DILocation(line: 489, column: 21, scope: !3778)
!3979 = !DILocation(line: 490, column: 24, scope: !3778)
!3980 = !DILocation(line: 490, column: 5, scope: !3778)
!3981 = !DILocation(line: 490, column: 9, scope: !3778)
!3982 = !DILocation(line: 490, column: 15, scope: !3778)
!3983 = !DILocation(line: 490, column: 22, scope: !3778)
!3984 = !DILocation(line: 492, column: 9, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3778, file: !1803, line: 492, column: 9)
!3986 = !DILocation(line: 492, column: 9, scope: !3778)
!3987 = !DILocation(line: 493, column: 45, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !1803, line: 493, column: 13)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !1803, line: 492, column: 24)
!3990 = !DILocation(line: 493, column: 49, scope: !3988)
!3991 = !DILocation(line: 493, column: 20, scope: !3988)
!3992 = !DILocation(line: 493, column: 18, scope: !3988)
!3993 = !DILocation(line: 493, column: 57, scope: !3988)
!3994 = !DILocation(line: 493, column: 13, scope: !3989)
!3995 = !DILocation(line: 494, column: 20, scope: !3988)
!3996 = !DILocation(line: 494, column: 13, scope: !3988)
!3997 = !DILocation(line: 495, column: 5, scope: !3989)
!3998 = !DILocation(line: 497, column: 5, scope: !3778)
!3999 = !DILocation(line: 498, column: 1, scope: !3778)
!4000 = !DILocalVariable(name: "i", scope: !1884, file: !1885, line: 47, type: !1012)
!4001 = !DILocation(line: 47, column: 9, scope: !1884)
!4002 = !DILocalVariable(name: "t1", scope: !1884, file: !1885, line: 68, type: !1016)
!4003 = !DILocation(line: 68, column: 11, scope: !1884)
!4004 = !DILocalVariable(name: "t2", scope: !1884, file: !1885, line: 69, type: !1016)
!4005 = !DILocation(line: 69, column: 11, scope: !1884)
!4006 = !DILocalVariable(name: "t1_inc_cur", scope: !1884, file: !1885, line: 70, type: !1012)
!4007 = !DILocation(line: 70, column: 9, scope: !1884)
!4008 = !DILocalVariable(name: "t2_inc_cur", scope: !1884, file: !1885, line: 70, type: !1012)
!4009 = !DILocation(line: 70, column: 21, scope: !1884)
!4010 = !DILocalVariable(name: "t1_inc_prev", scope: !1884, file: !1885, line: 71, type: !1012)
!4011 = !DILocation(line: 71, column: 9, scope: !1884)
!4012 = !DILocalVariable(name: "t2_inc_prev", scope: !1884, file: !1885, line: 72, type: !1012)
!4013 = !DILocation(line: 72, column: 9, scope: !1884)
!4014 = !DILocation(line: 74, column: 12, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !1884, file: !1885, line: 74, column: 5)
!4016 = !DILocation(line: 74, column: 10, scope: !4015)
!4017 = !DILocation(line: 74, column: 17, scope: !4018)
!4018 = !DILexicalBlockFile(scope: !4019, file: !1885, discriminator: 1)
!4019 = distinct !DILexicalBlock(scope: !4015, file: !1885, line: 74, column: 5)
!4020 = !DILocation(line: 74, column: 19, scope: !4018)
!4021 = !DILocation(line: 74, column: 5, scope: !4018)
!4022 = !DILocation(line: 75, column: 27, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !1885, line: 74, column: 31)
!4024 = !DILocation(line: 75, column: 29, scope: !4023)
!4025 = !DILocation(line: 75, column: 24, scope: !4023)
!4026 = !DILocation(line: 75, column: 20, scope: !4023)
!4027 = !DILocation(line: 76, column: 29, scope: !4023)
!4028 = !DILocation(line: 76, column: 28, scope: !4023)
!4029 = !DILocation(line: 76, column: 25, scope: !4023)
!4030 = !DILocation(line: 76, column: 32, scope: !4023)
!4031 = !DILocation(line: 76, column: 20, scope: !4023)
!4032 = !DILocation(line: 77, column: 13, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4023, file: !1885, line: 77, column: 13)
!4034 = !DILocation(line: 77, column: 26, scope: !4033)
!4035 = !DILocation(line: 77, column: 24, scope: !4033)
!4036 = !DILocation(line: 77, column: 13, scope: !4023)
!4037 = !DILocation(line: 78, column: 16, scope: !4033)
!4038 = !DILocation(line: 78, column: 13, scope: !4033)
!4039 = !DILocation(line: 79, column: 13, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4023, file: !1885, line: 79, column: 13)
!4041 = !DILocation(line: 79, column: 26, scope: !4040)
!4042 = !DILocation(line: 79, column: 24, scope: !4040)
!4043 = !DILocation(line: 79, column: 13, scope: !4023)
!4044 = !DILocation(line: 80, column: 16, scope: !4040)
!4045 = !DILocation(line: 80, column: 13, scope: !4040)
!4046 = !DILocation(line: 84, column: 32, scope: !4023)
!4047 = !DILocation(line: 84, column: 46, scope: !4023)
!4048 = !DILocation(line: 84, column: 37, scope: !4023)
!4049 = !DILocation(line: 84, column: 35, scope: !4023)
!4050 = !DILocation(line: 84, column: 27, scope: !4023)
!4051 = !DILocation(line: 84, column: 9, scope: !4023)
!4052 = !DILocation(line: 84, column: 30, scope: !4023)
!4053 = !DILocation(line: 85, column: 33, scope: !4023)
!4054 = !DILocation(line: 85, column: 47, scope: !4023)
!4055 = !DILocation(line: 85, column: 38, scope: !4023)
!4056 = !DILocation(line: 85, column: 36, scope: !4023)
!4057 = !DILocation(line: 85, column: 28, scope: !4023)
!4058 = !DILocation(line: 85, column: 9, scope: !4023)
!4059 = !DILocation(line: 85, column: 31, scope: !4023)
!4060 = !DILocation(line: 86, column: 23, scope: !4023)
!4061 = !DILocation(line: 86, column: 21, scope: !4023)
!4062 = !DILocation(line: 87, column: 23, scope: !4023)
!4063 = !DILocation(line: 87, column: 21, scope: !4023)
!4064 = !DILocation(line: 88, column: 5, scope: !4023)
!4065 = !DILocation(line: 74, column: 27, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !4019, file: !1885, discriminator: 2)
!4067 = !DILocation(line: 74, column: 5, scope: !4066)
!4068 = distinct !{!4068, !4069}
!4069 = !DILocation(line: 74, column: 5, scope: !1884)
!4070 = !DILocation(line: 89, column: 1, scope: !1884)
!4071 = distinct !DISubprogram(name: "imdct_and_windowing", scope: !1803, file: !1803, line: 2639, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2640, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!4072 = !DILocalVariable(name: "ac", arg: 1, scope: !4071, file: !1803, line: 2639, type: !2065)
!4073 = !DILocation(line: 2639, column: 45, scope: !4071)
!4074 = !DILocalVariable(name: "sce", arg: 2, scope: !4071, file: !1803, line: 2639, type: !1914)
!4075 = !DILocation(line: 2639, column: 71, scope: !4071)
!4076 = !DILocalVariable(name: "ics", scope: !4071, file: !1803, line: 2641, type: !2649)
!4077 = !DILocation(line: 2641, column: 30, scope: !4071)
!4078 = !DILocation(line: 2641, column: 37, scope: !4071)
!4079 = !DILocation(line: 2641, column: 42, scope: !4071)
!4080 = !DILocalVariable(name: "in", scope: !4071, file: !1803, line: 2642, type: !1031)
!4081 = !DILocation(line: 2642, column: 15, scope: !4071)
!4082 = !DILocation(line: 2642, column: 20, scope: !4071)
!4083 = !DILocation(line: 2642, column: 25, scope: !4071)
!4084 = !DILocalVariable(name: "out", scope: !4071, file: !1803, line: 2643, type: !1031)
!4085 = !DILocation(line: 2643, column: 15, scope: !4071)
!4086 = !DILocation(line: 2643, column: 21, scope: !4071)
!4087 = !DILocation(line: 2643, column: 26, scope: !4071)
!4088 = !DILocalVariable(name: "saved", scope: !4071, file: !1803, line: 2644, type: !1031)
!4089 = !DILocation(line: 2644, column: 15, scope: !4071)
!4090 = !DILocation(line: 2644, column: 23, scope: !4071)
!4091 = !DILocation(line: 2644, column: 28, scope: !4071)
!4092 = !DILocalVariable(name: "swindow", scope: !4071, file: !1803, line: 2645, type: !1903)
!4093 = !DILocation(line: 2645, column: 21, scope: !4071)
!4094 = !DILocation(line: 2645, column: 31, scope: !4071)
!4095 = !DILocation(line: 2645, column: 36, scope: !4071)
!4096 = !DILocalVariable(name: "lwindow_prev", scope: !4071, file: !1803, line: 2646, type: !1903)
!4097 = !DILocation(line: 2646, column: 21, scope: !4071)
!4098 = !DILocation(line: 2646, column: 36, scope: !4071)
!4099 = !DILocation(line: 2646, column: 41, scope: !4071)
!4100 = !DILocalVariable(name: "swindow_prev", scope: !4071, file: !1803, line: 2647, type: !1903)
!4101 = !DILocation(line: 2647, column: 21, scope: !4071)
!4102 = !DILocation(line: 2647, column: 36, scope: !4071)
!4103 = !DILocation(line: 2647, column: 41, scope: !4071)
!4104 = !DILocalVariable(name: "buf", scope: !4071, file: !1803, line: 2648, type: !1031)
!4105 = !DILocation(line: 2648, column: 15, scope: !4071)
!4106 = !DILocation(line: 2648, column: 21, scope: !4071)
!4107 = !DILocation(line: 2648, column: 25, scope: !4071)
!4108 = !DILocalVariable(name: "temp", scope: !4071, file: !1803, line: 2649, type: !1031)
!4109 = !DILocation(line: 2649, column: 15, scope: !4071)
!4110 = !DILocation(line: 2649, column: 22, scope: !4071)
!4111 = !DILocation(line: 2649, column: 26, scope: !4071)
!4112 = !DILocalVariable(name: "i", scope: !4071, file: !1803, line: 2650, type: !1012)
!4113 = !DILocation(line: 2650, column: 9, scope: !4071)
!4114 = !DILocation(line: 2653, column: 9, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4071, file: !1803, line: 2653, column: 9)
!4116 = !DILocation(line: 2653, column: 14, scope: !4115)
!4117 = !DILocation(line: 2653, column: 33, scope: !4115)
!4118 = !DILocation(line: 2653, column: 9, scope: !4071)
!4119 = !DILocation(line: 2654, column: 16, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !1803, line: 2654, column: 9)
!4121 = distinct !DILexicalBlock(scope: !4115, file: !1803, line: 2653, column: 58)
!4122 = !DILocation(line: 2654, column: 14, scope: !4120)
!4123 = !DILocation(line: 2654, column: 21, scope: !4124)
!4124 = !DILexicalBlockFile(scope: !4125, file: !1803, discriminator: 1)
!4125 = distinct !DILexicalBlock(scope: !4120, file: !1803, line: 2654, column: 9)
!4126 = !DILocation(line: 2654, column: 23, scope: !4124)
!4127 = !DILocation(line: 2654, column: 9, scope: !4124)
!4128 = !DILocation(line: 2655, column: 13, scope: !4125)
!4129 = !DILocation(line: 2655, column: 17, scope: !4125)
!4130 = !DILocation(line: 2655, column: 28, scope: !4125)
!4131 = !DILocation(line: 2655, column: 40, scope: !4125)
!4132 = !DILocation(line: 2655, column: 44, scope: !4125)
!4133 = !DILocation(line: 2655, column: 56, scope: !4125)
!4134 = !DILocation(line: 2655, column: 62, scope: !4125)
!4135 = !DILocation(line: 2655, column: 60, scope: !4125)
!4136 = !DILocation(line: 2655, column: 65, scope: !4125)
!4137 = !DILocation(line: 2655, column: 70, scope: !4125)
!4138 = !DILocation(line: 2655, column: 68, scope: !4125)
!4139 = !DILocation(line: 2654, column: 33, scope: !4140)
!4140 = !DILexicalBlockFile(scope: !4125, file: !1803, discriminator: 2)
!4141 = !DILocation(line: 2654, column: 9, scope: !4140)
!4142 = distinct !{!4142, !4143}
!4143 = !DILocation(line: 2654, column: 9, scope: !4121)
!4144 = !DILocation(line: 2656, column: 5, scope: !4121)
!4145 = !DILocation(line: 2657, column: 9, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4115, file: !1803, line: 2656, column: 12)
!4147 = !DILocation(line: 2657, column: 13, scope: !4146)
!4148 = !DILocation(line: 2657, column: 18, scope: !4146)
!4149 = !DILocation(line: 2657, column: 30, scope: !4146)
!4150 = !DILocation(line: 2657, column: 34, scope: !4146)
!4151 = !DILocation(line: 2657, column: 40, scope: !4146)
!4152 = !DILocation(line: 2657, column: 45, scope: !4146)
!4153 = !DILocation(line: 2670, column: 10, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4071, file: !1803, line: 2670, column: 9)
!4155 = !DILocation(line: 2670, column: 15, scope: !4154)
!4156 = !DILocation(line: 2670, column: 34, scope: !4154)
!4157 = !DILocation(line: 2670, column: 56, scope: !4154)
!4158 = !DILocation(line: 2670, column: 59, scope: !4159)
!4159 = !DILexicalBlockFile(scope: !4154, file: !1803, discriminator: 1)
!4160 = !DILocation(line: 2670, column: 64, scope: !4159)
!4161 = !DILocation(line: 2670, column: 83, scope: !4159)
!4162 = !DILocation(line: 2670, column: 106, scope: !4159)
!4163 = !DILocation(line: 2671, column: 14, scope: !4154)
!4164 = !DILocation(line: 2671, column: 19, scope: !4154)
!4165 = !DILocation(line: 2671, column: 38, scope: !4154)
!4166 = !DILocation(line: 2671, column: 60, scope: !4154)
!4167 = !DILocation(line: 2671, column: 63, scope: !4159)
!4168 = !DILocation(line: 2671, column: 68, scope: !4159)
!4169 = !DILocation(line: 2671, column: 87, scope: !4159)
!4170 = !DILocation(line: 2670, column: 9, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4071, file: !1803, discriminator: 2)
!4172 = !DILocation(line: 2672, column: 9, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4154, file: !1803, line: 2671, column: 112)
!4174 = !DILocation(line: 2672, column: 13, scope: !4173)
!4175 = !DILocation(line: 2672, column: 19, scope: !4173)
!4176 = !DILocation(line: 2672, column: 39, scope: !4173)
!4177 = !DILocation(line: 2672, column: 44, scope: !4173)
!4178 = !DILocation(line: 2672, column: 51, scope: !4173)
!4179 = !DILocation(line: 2672, column: 56, scope: !4173)
!4180 = !DILocation(line: 2673, column: 5, scope: !4173)
!4181 = !DILocation(line: 2674, column: 17, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4154, file: !1803, line: 2673, column: 12)
!4183 = !DILocation(line: 2674, column: 9, scope: !4182)
!4184 = !DILocation(line: 2674, column: 22, scope: !4182)
!4185 = !DILocation(line: 2676, column: 13, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4182, file: !1803, line: 2676, column: 13)
!4187 = !DILocation(line: 2676, column: 18, scope: !4186)
!4188 = !DILocation(line: 2676, column: 37, scope: !4186)
!4189 = !DILocation(line: 2676, column: 13, scope: !4182)
!4190 = !DILocation(line: 2677, column: 13, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4186, file: !1803, line: 2676, column: 62)
!4192 = !DILocation(line: 2677, column: 17, scope: !4191)
!4193 = !DILocation(line: 2677, column: 23, scope: !4191)
!4194 = !DILocation(line: 2677, column: 42, scope: !4191)
!4195 = !DILocation(line: 2677, column: 46, scope: !4191)
!4196 = !DILocation(line: 2677, column: 52, scope: !4191)
!4197 = !DILocation(line: 2677, column: 61, scope: !4191)
!4198 = !DILocation(line: 2677, column: 67, scope: !4191)
!4199 = !DILocation(line: 2677, column: 74, scope: !4191)
!4200 = !DILocation(line: 2677, column: 78, scope: !4191)
!4201 = !DILocation(line: 2677, column: 87, scope: !4191)
!4202 = !DILocation(line: 2678, column: 13, scope: !4191)
!4203 = !DILocation(line: 2678, column: 17, scope: !4191)
!4204 = !DILocation(line: 2678, column: 23, scope: !4191)
!4205 = !DILocation(line: 2678, column: 42, scope: !4191)
!4206 = !DILocation(line: 2678, column: 46, scope: !4191)
!4207 = !DILocation(line: 2678, column: 52, scope: !4191)
!4208 = !DILocation(line: 2678, column: 61, scope: !4191)
!4209 = !DILocation(line: 2678, column: 65, scope: !4191)
!4210 = !DILocation(line: 2678, column: 73, scope: !4191)
!4211 = !DILocation(line: 2678, column: 79, scope: !4191)
!4212 = !DILocation(line: 2678, column: 83, scope: !4191)
!4213 = !DILocation(line: 2678, column: 92, scope: !4191)
!4214 = !DILocation(line: 2679, column: 13, scope: !4191)
!4215 = !DILocation(line: 2679, column: 17, scope: !4191)
!4216 = !DILocation(line: 2679, column: 23, scope: !4191)
!4217 = !DILocation(line: 2679, column: 42, scope: !4191)
!4218 = !DILocation(line: 2679, column: 46, scope: !4191)
!4219 = !DILocation(line: 2679, column: 52, scope: !4191)
!4220 = !DILocation(line: 2679, column: 61, scope: !4191)
!4221 = !DILocation(line: 2679, column: 65, scope: !4191)
!4222 = !DILocation(line: 2679, column: 73, scope: !4191)
!4223 = !DILocation(line: 2679, column: 79, scope: !4191)
!4224 = !DILocation(line: 2679, column: 83, scope: !4191)
!4225 = !DILocation(line: 2679, column: 92, scope: !4191)
!4226 = !DILocation(line: 2680, column: 13, scope: !4191)
!4227 = !DILocation(line: 2680, column: 17, scope: !4191)
!4228 = !DILocation(line: 2680, column: 23, scope: !4191)
!4229 = !DILocation(line: 2680, column: 42, scope: !4191)
!4230 = !DILocation(line: 2680, column: 46, scope: !4191)
!4231 = !DILocation(line: 2680, column: 52, scope: !4191)
!4232 = !DILocation(line: 2680, column: 61, scope: !4191)
!4233 = !DILocation(line: 2680, column: 65, scope: !4191)
!4234 = !DILocation(line: 2680, column: 73, scope: !4191)
!4235 = !DILocation(line: 2680, column: 79, scope: !4191)
!4236 = !DILocation(line: 2680, column: 83, scope: !4191)
!4237 = !DILocation(line: 2680, column: 92, scope: !4191)
!4238 = !DILocation(line: 2681, column: 13, scope: !4191)
!4239 = !DILocation(line: 2681, column: 17, scope: !4191)
!4240 = !DILocation(line: 2681, column: 23, scope: !4191)
!4241 = !DILocation(line: 2681, column: 42, scope: !4191)
!4242 = !DILocation(line: 2681, column: 48, scope: !4191)
!4243 = !DILocation(line: 2681, column: 52, scope: !4191)
!4244 = !DILocation(line: 2681, column: 60, scope: !4191)
!4245 = !DILocation(line: 2681, column: 66, scope: !4191)
!4246 = !DILocation(line: 2681, column: 70, scope: !4191)
!4247 = !DILocation(line: 2681, column: 79, scope: !4191)
!4248 = !DILocation(line: 2682, column: 21, scope: !4191)
!4249 = !DILocation(line: 2682, column: 25, scope: !4191)
!4250 = !DILocation(line: 2682, column: 31, scope: !4191)
!4251 = !DILocation(line: 2682, column: 13, scope: !4191)
!4252 = !DILocation(line: 2682, column: 40, scope: !4191)
!4253 = !DILocation(line: 2683, column: 9, scope: !4191)
!4254 = !DILocation(line: 2684, column: 13, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4186, file: !1803, line: 2683, column: 16)
!4256 = !DILocation(line: 2684, column: 17, scope: !4255)
!4257 = !DILocation(line: 2684, column: 23, scope: !4255)
!4258 = !DILocation(line: 2684, column: 42, scope: !4255)
!4259 = !DILocation(line: 2684, column: 46, scope: !4255)
!4260 = !DILocation(line: 2684, column: 53, scope: !4255)
!4261 = !DILocation(line: 2684, column: 59, scope: !4255)
!4262 = !DILocation(line: 2684, column: 66, scope: !4255)
!4263 = !DILocation(line: 2684, column: 71, scope: !4255)
!4264 = !DILocation(line: 2685, column: 21, scope: !4255)
!4265 = !DILocation(line: 2685, column: 25, scope: !4255)
!4266 = !DILocation(line: 2685, column: 13, scope: !4255)
!4267 = !DILocation(line: 2685, column: 32, scope: !4255)
!4268 = !DILocation(line: 2685, column: 36, scope: !4255)
!4269 = !DILocation(line: 2690, column: 9, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4071, file: !1803, line: 2690, column: 9)
!4271 = !DILocation(line: 2690, column: 14, scope: !4270)
!4272 = !DILocation(line: 2690, column: 33, scope: !4270)
!4273 = !DILocation(line: 2690, column: 9, scope: !4071)
!4274 = !DILocation(line: 2691, column: 17, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !1803, line: 2690, column: 58)
!4276 = !DILocation(line: 2691, column: 9, scope: !4275)
!4277 = !DILocation(line: 2691, column: 24, scope: !4275)
!4278 = !DILocation(line: 2691, column: 29, scope: !4275)
!4279 = !DILocation(line: 2692, column: 9, scope: !4275)
!4280 = !DILocation(line: 2692, column: 13, scope: !4275)
!4281 = !DILocation(line: 2692, column: 19, scope: !4275)
!4282 = !DILocation(line: 2692, column: 38, scope: !4275)
!4283 = !DILocation(line: 2692, column: 44, scope: !4275)
!4284 = !DILocation(line: 2692, column: 50, scope: !4275)
!4285 = !DILocation(line: 2692, column: 54, scope: !4275)
!4286 = !DILocation(line: 2692, column: 62, scope: !4275)
!4287 = !DILocation(line: 2692, column: 68, scope: !4275)
!4288 = !DILocation(line: 2692, column: 72, scope: !4275)
!4289 = !DILocation(line: 2692, column: 81, scope: !4275)
!4290 = !DILocation(line: 2693, column: 9, scope: !4275)
!4291 = !DILocation(line: 2693, column: 13, scope: !4275)
!4292 = !DILocation(line: 2693, column: 19, scope: !4275)
!4293 = !DILocation(line: 2693, column: 38, scope: !4275)
!4294 = !DILocation(line: 2693, column: 44, scope: !4275)
!4295 = !DILocation(line: 2693, column: 51, scope: !4275)
!4296 = !DILocation(line: 2693, column: 55, scope: !4275)
!4297 = !DILocation(line: 2693, column: 63, scope: !4275)
!4298 = !DILocation(line: 2693, column: 69, scope: !4275)
!4299 = !DILocation(line: 2693, column: 73, scope: !4275)
!4300 = !DILocation(line: 2693, column: 82, scope: !4275)
!4301 = !DILocation(line: 2694, column: 9, scope: !4275)
!4302 = !DILocation(line: 2694, column: 13, scope: !4275)
!4303 = !DILocation(line: 2694, column: 19, scope: !4275)
!4304 = !DILocation(line: 2694, column: 38, scope: !4275)
!4305 = !DILocation(line: 2694, column: 44, scope: !4275)
!4306 = !DILocation(line: 2694, column: 51, scope: !4275)
!4307 = !DILocation(line: 2694, column: 55, scope: !4275)
!4308 = !DILocation(line: 2694, column: 63, scope: !4275)
!4309 = !DILocation(line: 2694, column: 69, scope: !4275)
!4310 = !DILocation(line: 2694, column: 73, scope: !4275)
!4311 = !DILocation(line: 2694, column: 82, scope: !4275)
!4312 = !DILocation(line: 2695, column: 17, scope: !4275)
!4313 = !DILocation(line: 2695, column: 23, scope: !4275)
!4314 = !DILocation(line: 2695, column: 9, scope: !4275)
!4315 = !DILocation(line: 2695, column: 30, scope: !4275)
!4316 = !DILocation(line: 2695, column: 34, scope: !4275)
!4317 = !DILocation(line: 2695, column: 42, scope: !4275)
!4318 = !DILocation(line: 2696, column: 5, scope: !4275)
!4319 = !DILocation(line: 2696, column: 16, scope: !4320)
!4320 = !DILexicalBlockFile(scope: !4321, file: !1803, discriminator: 1)
!4321 = distinct !DILexicalBlock(scope: !4270, file: !1803, line: 2696, column: 16)
!4322 = !DILocation(line: 2696, column: 21, scope: !4320)
!4323 = !DILocation(line: 2696, column: 40, scope: !4320)
!4324 = !DILocation(line: 2697, column: 17, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4321, file: !1803, line: 2696, column: 64)
!4326 = !DILocation(line: 2697, column: 9, scope: !4325)
!4327 = !DILocation(line: 2697, column: 24, scope: !4325)
!4328 = !DILocation(line: 2697, column: 28, scope: !4325)
!4329 = !DILocation(line: 2698, column: 17, scope: !4325)
!4330 = !DILocation(line: 2698, column: 23, scope: !4325)
!4331 = !DILocation(line: 2698, column: 9, scope: !4325)
!4332 = !DILocation(line: 2698, column: 30, scope: !4325)
!4333 = !DILocation(line: 2698, column: 34, scope: !4325)
!4334 = !DILocation(line: 2698, column: 42, scope: !4325)
!4335 = !DILocation(line: 2699, column: 5, scope: !4325)
!4336 = !DILocation(line: 2700, column: 17, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4321, file: !1803, line: 2699, column: 12)
!4338 = !DILocation(line: 2700, column: 9, scope: !4337)
!4339 = !DILocation(line: 2700, column: 24, scope: !4337)
!4340 = !DILocation(line: 2700, column: 28, scope: !4337)
!4341 = !DILocation(line: 2702, column: 1, scope: !4071)
!4342 = distinct !DISubprogram(name: "apply_ltp", scope: !1803, file: !1803, line: 2569, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2570, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!4343 = !DILocalVariable(name: "ac", arg: 1, scope: !4342, file: !1803, line: 2569, type: !2065)
!4344 = !DILocation(line: 2569, column: 35, scope: !4342)
!4345 = !DILocalVariable(name: "sce", arg: 2, scope: !4342, file: !1803, line: 2569, type: !1914)
!4346 = !DILocation(line: 2569, column: 61, scope: !4342)
!4347 = !DILocalVariable(name: "ltp", scope: !4342, file: !1803, line: 2571, type: !4348)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64, align: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!4350 = !DILocation(line: 2571, column: 31, scope: !4342)
!4351 = !DILocation(line: 2571, column: 38, scope: !4342)
!4352 = !DILocation(line: 2571, column: 43, scope: !4342)
!4353 = !DILocation(line: 2571, column: 47, scope: !4342)
!4354 = !DILocalVariable(name: "offsets", scope: !4342, file: !1803, line: 2572, type: !1943)
!4355 = !DILocation(line: 2572, column: 21, scope: !4342)
!4356 = !DILocation(line: 2572, column: 31, scope: !4342)
!4357 = !DILocation(line: 2572, column: 36, scope: !4342)
!4358 = !DILocation(line: 2572, column: 40, scope: !4342)
!4359 = !DILocalVariable(name: "i", scope: !4342, file: !1803, line: 2573, type: !1012)
!4360 = !DILocation(line: 2573, column: 9, scope: !4342)
!4361 = !DILocalVariable(name: "sfb", scope: !4342, file: !1803, line: 2573, type: !1012)
!4362 = !DILocation(line: 2573, column: 12, scope: !4342)
!4363 = !DILocation(line: 2575, column: 9, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4342, file: !1803, line: 2575, column: 9)
!4365 = !DILocation(line: 2575, column: 14, scope: !4364)
!4366 = !DILocation(line: 2575, column: 18, scope: !4364)
!4367 = !DILocation(line: 2575, column: 37, scope: !4364)
!4368 = !DILocation(line: 2575, column: 9, scope: !4342)
!4369 = !DILocalVariable(name: "predTime", scope: !4370, file: !1803, line: 2576, type: !1031)
!4370 = distinct !DILexicalBlock(scope: !4364, file: !1803, line: 2575, column: 62)
!4371 = !DILocation(line: 2576, column: 19, scope: !4370)
!4372 = !DILocation(line: 2576, column: 30, scope: !4370)
!4373 = !DILocation(line: 2576, column: 35, scope: !4370)
!4374 = !DILocalVariable(name: "predFreq", scope: !4370, file: !1803, line: 2577, type: !1031)
!4375 = !DILocation(line: 2577, column: 19, scope: !4370)
!4376 = !DILocation(line: 2577, column: 30, scope: !4370)
!4377 = !DILocation(line: 2577, column: 34, scope: !4370)
!4378 = !DILocalVariable(name: "num_samples", scope: !4370, file: !1803, line: 2578, type: !1819)
!4379 = !DILocation(line: 2578, column: 17, scope: !4370)
!4380 = !DILocation(line: 2580, column: 13, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4370, file: !1803, line: 2580, column: 13)
!4382 = !DILocation(line: 2580, column: 18, scope: !4381)
!4383 = !DILocation(line: 2580, column: 22, scope: !4381)
!4384 = !DILocation(line: 2580, column: 13, scope: !4370)
!4385 = !DILocation(line: 2581, column: 27, scope: !4381)
!4386 = !DILocation(line: 2581, column: 32, scope: !4381)
!4387 = !DILocation(line: 2581, column: 36, scope: !4381)
!4388 = !DILocation(line: 2581, column: 25, scope: !4381)
!4389 = !DILocation(line: 2581, column: 13, scope: !4381)
!4390 = !DILocation(line: 2582, column: 16, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4370, file: !1803, line: 2582, column: 9)
!4392 = !DILocation(line: 2582, column: 14, scope: !4391)
!4393 = !DILocation(line: 2582, column: 21, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4395, file: !1803, discriminator: 1)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !1803, line: 2582, column: 9)
!4396 = !DILocation(line: 2582, column: 25, scope: !4394)
!4397 = !DILocation(line: 2582, column: 23, scope: !4394)
!4398 = !DILocation(line: 2582, column: 9, scope: !4394)
!4399 = !DILocation(line: 2583, column: 44, scope: !4395)
!4400 = !DILocation(line: 2583, column: 46, scope: !4395)
!4401 = !DILocation(line: 2583, column: 55, scope: !4395)
!4402 = !DILocation(line: 2583, column: 60, scope: !4395)
!4403 = !DILocation(line: 2583, column: 53, scope: !4395)
!4404 = !DILocation(line: 2583, column: 29, scope: !4395)
!4405 = !DILocation(line: 2583, column: 34, scope: !4395)
!4406 = !DILocation(line: 2583, column: 69, scope: !4395)
!4407 = !DILocation(line: 2583, column: 74, scope: !4395)
!4408 = !DILocation(line: 2583, column: 66, scope: !4395)
!4409 = !DILocation(line: 2583, column: 22, scope: !4395)
!4410 = !DILocation(line: 2583, column: 13, scope: !4395)
!4411 = !DILocation(line: 2583, column: 25, scope: !4395)
!4412 = !DILocation(line: 2582, column: 39, scope: !4413)
!4413 = !DILexicalBlockFile(scope: !4395, file: !1803, discriminator: 2)
!4414 = !DILocation(line: 2582, column: 9, scope: !4413)
!4415 = distinct !{!4415, !4416}
!4416 = !DILocation(line: 2582, column: 9, scope: !4370)
!4417 = !DILocation(line: 2584, column: 26, scope: !4370)
!4418 = !DILocation(line: 2584, column: 17, scope: !4370)
!4419 = !DILocation(line: 2584, column: 9, scope: !4370)
!4420 = !DILocation(line: 2584, column: 41, scope: !4370)
!4421 = !DILocation(line: 2584, column: 39, scope: !4370)
!4422 = !DILocation(line: 2584, column: 33, scope: !4370)
!4423 = !DILocation(line: 2584, column: 44, scope: !4370)
!4424 = !DILocation(line: 2586, column: 9, scope: !4370)
!4425 = !DILocation(line: 2586, column: 13, scope: !4370)
!4426 = !DILocation(line: 2586, column: 36, scope: !4370)
!4427 = !DILocation(line: 2586, column: 40, scope: !4370)
!4428 = !DILocation(line: 2586, column: 50, scope: !4370)
!4429 = !DILocation(line: 2586, column: 61, scope: !4370)
!4430 = !DILocation(line: 2586, column: 66, scope: !4370)
!4431 = !DILocation(line: 2588, column: 13, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4370, file: !1803, line: 2588, column: 13)
!4433 = !DILocation(line: 2588, column: 18, scope: !4432)
!4434 = !DILocation(line: 2588, column: 22, scope: !4432)
!4435 = !DILocation(line: 2588, column: 13, scope: !4370)
!4436 = !DILocation(line: 2589, column: 13, scope: !4432)
!4437 = !DILocation(line: 2589, column: 17, scope: !4432)
!4438 = !DILocation(line: 2589, column: 27, scope: !4432)
!4439 = !DILocation(line: 2589, column: 38, scope: !4432)
!4440 = !DILocation(line: 2589, column: 43, scope: !4432)
!4441 = !DILocation(line: 2589, column: 49, scope: !4432)
!4442 = !DILocation(line: 2589, column: 54, scope: !4432)
!4443 = !DILocation(line: 2591, column: 18, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4370, file: !1803, line: 2591, column: 9)
!4445 = !DILocation(line: 2591, column: 14, scope: !4444)
!4446 = !DILocation(line: 2591, column: 23, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4448, file: !1803, discriminator: 1)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !1803, line: 2591, column: 9)
!4449 = !DILocation(line: 2591, column: 31, scope: !4447)
!4450 = !DILocation(line: 2591, column: 36, scope: !4447)
!4451 = !DILocation(line: 2591, column: 40, scope: !4447)
!4452 = !DILocation(line: 2591, column: 30, scope: !4447)
!4453 = !DILocation(line: 2591, column: 49, scope: !4447)
!4454 = !DILocation(line: 2591, column: 30, scope: !4455)
!4455 = !DILexicalBlockFile(scope: !4448, file: !1803, discriminator: 2)
!4456 = !DILocation(line: 2591, column: 66, scope: !4457)
!4457 = !DILexicalBlockFile(scope: !4448, file: !1803, discriminator: 3)
!4458 = !DILocation(line: 2591, column: 71, scope: !4457)
!4459 = !DILocation(line: 2591, column: 75, scope: !4457)
!4460 = !DILocation(line: 2591, column: 65, scope: !4457)
!4461 = !DILocation(line: 2591, column: 30, scope: !4457)
!4462 = !DILocation(line: 2591, column: 30, scope: !4463)
!4463 = !DILexicalBlockFile(scope: !4448, file: !1803, discriminator: 4)
!4464 = !DILocation(line: 2591, column: 27, scope: !4463)
!4465 = !DILocation(line: 2591, column: 9, scope: !4463)
!4466 = !DILocation(line: 2592, column: 27, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4448, file: !1803, line: 2592, column: 17)
!4468 = !DILocation(line: 2592, column: 17, scope: !4467)
!4469 = !DILocation(line: 2592, column: 22, scope: !4467)
!4470 = !DILocation(line: 2592, column: 17, scope: !4448)
!4471 = !DILocation(line: 2593, column: 34, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !1803, line: 2593, column: 17)
!4473 = !DILocation(line: 2593, column: 26, scope: !4472)
!4474 = !DILocation(line: 2593, column: 24, scope: !4472)
!4475 = !DILocation(line: 2593, column: 22, scope: !4472)
!4476 = !DILocation(line: 2593, column: 40, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4478, file: !1803, discriminator: 1)
!4478 = distinct !DILexicalBlock(scope: !4472, file: !1803, line: 2593, column: 17)
!4479 = !DILocation(line: 2593, column: 52, scope: !4477)
!4480 = !DILocation(line: 2593, column: 56, scope: !4477)
!4481 = !DILocation(line: 2593, column: 44, scope: !4477)
!4482 = !DILocation(line: 2593, column: 42, scope: !4477)
!4483 = !DILocation(line: 2593, column: 17, scope: !4477)
!4484 = !DILocation(line: 2594, column: 59, scope: !4478)
!4485 = !DILocation(line: 2594, column: 50, scope: !4478)
!4486 = !DILocation(line: 2594, column: 33, scope: !4478)
!4487 = !DILocation(line: 2594, column: 21, scope: !4478)
!4488 = !DILocation(line: 2594, column: 26, scope: !4478)
!4489 = !DILocation(line: 2594, column: 36, scope: !4478)
!4490 = !DILocation(line: 2593, column: 63, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4478, file: !1803, discriminator: 2)
!4492 = !DILocation(line: 2593, column: 17, scope: !4491)
!4493 = distinct !{!4493, !4494}
!4494 = !DILocation(line: 2593, column: 17, scope: !4467)
!4495 = !DILocation(line: 2594, column: 60, scope: !4496)
!4496 = !DILexicalBlockFile(scope: !4472, file: !1803, discriminator: 1)
!4497 = !DILocation(line: 2592, column: 30, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !4467, file: !1803, discriminator: 1)
!4499 = !DILocation(line: 2591, column: 89, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !4448, file: !1803, discriminator: 5)
!4501 = !DILocation(line: 2591, column: 9, scope: !4500)
!4502 = distinct !{!4502, !4503}
!4503 = !DILocation(line: 2591, column: 9, scope: !4370)
!4504 = !DILocation(line: 2595, column: 5, scope: !4370)
!4505 = !DILocation(line: 2596, column: 1, scope: !4342)
!4506 = distinct !DISubprogram(name: "apply_tns", scope: !1803, file: !1803, line: 2486, type: !2646, isLocal: true, isDefinition: true, scopeLine: 2488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!4507 = !DILocalVariable(name: "coef_param", arg: 1, scope: !4506, file: !1803, line: 2486, type: !1031)
!4508 = !DILocation(line: 2486, column: 32, scope: !4506)
!4509 = !DILocalVariable(name: "tns", arg: 2, scope: !4506, file: !1803, line: 2486, type: !2648)
!4510 = !DILocation(line: 2486, column: 72, scope: !4506)
!4511 = !DILocalVariable(name: "ics", arg: 3, scope: !4506, file: !1803, line: 2487, type: !2649)
!4512 = !DILocation(line: 2487, column: 48, scope: !4506)
!4513 = !DILocalVariable(name: "decode", arg: 4, scope: !4506, file: !1803, line: 2487, type: !1012)
!4514 = !DILocation(line: 2487, column: 57, scope: !4506)
!4515 = !DILocalVariable(name: "mmm", scope: !4506, file: !1803, line: 2489, type: !1165)
!4516 = !DILocation(line: 2489, column: 15, scope: !4506)
!4517 = !DILocation(line: 2489, column: 23, scope: !4506)
!4518 = !DILocation(line: 2489, column: 28, scope: !4506)
!4519 = !DILocation(line: 2489, column: 46, scope: !4506)
!4520 = !DILocation(line: 2489, column: 51, scope: !4506)
!4521 = !DILocation(line: 2489, column: 45, scope: !4506)
!4522 = !DILocation(line: 2489, column: 43, scope: !4506)
!4523 = !DILocation(line: 2489, column: 22, scope: !4506)
!4524 = !DILocation(line: 2489, column: 63, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !4506, file: !1803, discriminator: 1)
!4526 = !DILocation(line: 2489, column: 68, scope: !4525)
!4527 = !DILocation(line: 2489, column: 62, scope: !4525)
!4528 = !DILocation(line: 2489, column: 22, scope: !4525)
!4529 = !DILocation(line: 2489, column: 80, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4506, file: !1803, discriminator: 2)
!4531 = !DILocation(line: 2489, column: 85, scope: !4530)
!4532 = !DILocation(line: 2489, column: 22, scope: !4530)
!4533 = !DILocation(line: 2489, column: 22, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !4506, file: !1803, discriminator: 3)
!4535 = !DILocation(line: 2489, column: 15, scope: !4534)
!4536 = !DILocalVariable(name: "w", scope: !4506, file: !1803, line: 2490, type: !1012)
!4537 = !DILocation(line: 2490, column: 9, scope: !4506)
!4538 = !DILocalVariable(name: "filt", scope: !4506, file: !1803, line: 2490, type: !1012)
!4539 = !DILocation(line: 2490, column: 12, scope: !4506)
!4540 = !DILocalVariable(name: "m", scope: !4506, file: !1803, line: 2490, type: !1012)
!4541 = !DILocation(line: 2490, column: 18, scope: !4506)
!4542 = !DILocalVariable(name: "i", scope: !4506, file: !1803, line: 2490, type: !1012)
!4543 = !DILocation(line: 2490, column: 21, scope: !4506)
!4544 = !DILocalVariable(name: "bottom", scope: !4506, file: !1803, line: 2491, type: !1012)
!4545 = !DILocation(line: 2491, column: 9, scope: !4506)
!4546 = !DILocalVariable(name: "top", scope: !4506, file: !1803, line: 2491, type: !1012)
!4547 = !DILocation(line: 2491, column: 17, scope: !4506)
!4548 = !DILocalVariable(name: "order", scope: !4506, file: !1803, line: 2491, type: !1012)
!4549 = !DILocation(line: 2491, column: 22, scope: !4506)
!4550 = !DILocalVariable(name: "start", scope: !4506, file: !1803, line: 2491, type: !1012)
!4551 = !DILocation(line: 2491, column: 29, scope: !4506)
!4552 = !DILocalVariable(name: "end", scope: !4506, file: !1803, line: 2491, type: !1012)
!4553 = !DILocation(line: 2491, column: 36, scope: !4506)
!4554 = !DILocalVariable(name: "size", scope: !4506, file: !1803, line: 2491, type: !1012)
!4555 = !DILocation(line: 2491, column: 41, scope: !4506)
!4556 = !DILocalVariable(name: "inc", scope: !4506, file: !1803, line: 2491, type: !1012)
!4557 = !DILocation(line: 2491, column: 47, scope: !4506)
!4558 = !DILocalVariable(name: "lpc", scope: !4506, file: !1803, line: 2492, type: !4559)
!4559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 640, align: 32, elements: !4560)
!4560 = !{!1976}
!4561 = !DILocation(line: 2492, column: 14, scope: !4506)
!4562 = !DILocalVariable(name: "tmp", scope: !4506, file: !1803, line: 2493, type: !4563)
!4563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 672, align: 32, elements: !4564)
!4564 = !{!4565}
!4565 = !DISubrange(count: 21)
!4566 = !DILocation(line: 2493, column: 14, scope: !4506)
!4567 = !DILocalVariable(name: "coef", scope: !4506, file: !1803, line: 2494, type: !4568)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!4569 = !DILocation(line: 2494, column: 16, scope: !4506)
!4570 = !DILocation(line: 2494, column: 23, scope: !4506)
!4571 = !DILocation(line: 2496, column: 12, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4506, file: !1803, line: 2496, column: 5)
!4573 = !DILocation(line: 2496, column: 10, scope: !4572)
!4574 = !DILocation(line: 2496, column: 17, scope: !4575)
!4575 = !DILexicalBlockFile(scope: !4576, file: !1803, discriminator: 1)
!4576 = distinct !DILexicalBlock(scope: !4572, file: !1803, line: 2496, column: 5)
!4577 = !DILocation(line: 2496, column: 21, scope: !4575)
!4578 = !DILocation(line: 2496, column: 26, scope: !4575)
!4579 = !DILocation(line: 2496, column: 19, scope: !4575)
!4580 = !DILocation(line: 2496, column: 5, scope: !4575)
!4581 = !DILocation(line: 2497, column: 18, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4576, file: !1803, line: 2496, column: 44)
!4583 = !DILocation(line: 2497, column: 23, scope: !4582)
!4584 = !DILocation(line: 2497, column: 16, scope: !4582)
!4585 = !DILocation(line: 2498, column: 19, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !1803, line: 2498, column: 9)
!4587 = !DILocation(line: 2498, column: 14, scope: !4586)
!4588 = !DILocation(line: 2498, column: 24, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4590, file: !1803, discriminator: 1)
!4590 = distinct !DILexicalBlock(scope: !4586, file: !1803, line: 2498, column: 9)
!4591 = !DILocation(line: 2498, column: 43, scope: !4589)
!4592 = !DILocation(line: 2498, column: 31, scope: !4589)
!4593 = !DILocation(line: 2498, column: 36, scope: !4589)
!4594 = !DILocation(line: 2498, column: 29, scope: !4589)
!4595 = !DILocation(line: 2498, column: 9, scope: !4589)
!4596 = !DILocation(line: 2499, column: 19, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4590, file: !1803, line: 2498, column: 55)
!4598 = !DILocation(line: 2499, column: 17, scope: !4597)
!4599 = !DILocation(line: 2500, column: 30, scope: !4597)
!4600 = !DILocation(line: 2500, column: 51, scope: !4597)
!4601 = !DILocation(line: 2500, column: 36, scope: !4597)
!4602 = !DILocation(line: 2500, column: 48, scope: !4597)
!4603 = !DILocation(line: 2500, column: 41, scope: !4597)
!4604 = !DILocation(line: 2500, column: 34, scope: !4597)
!4605 = !DILocation(line: 2500, column: 27, scope: !4597)
!4606 = !DILocation(line: 2500, column: 23, scope: !4597)
!4607 = !DILocation(line: 2500, column: 23, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !4597, file: !1803, discriminator: 1)
!4609 = !DILocation(line: 2500, column: 67, scope: !4610)
!4610 = !DILexicalBlockFile(scope: !4597, file: !1803, discriminator: 2)
!4611 = !DILocation(line: 2500, column: 88, scope: !4610)
!4612 = !DILocation(line: 2500, column: 73, scope: !4610)
!4613 = !DILocation(line: 2500, column: 85, scope: !4610)
!4614 = !DILocation(line: 2500, column: 78, scope: !4610)
!4615 = !DILocation(line: 2500, column: 71, scope: !4610)
!4616 = !DILocation(line: 2500, column: 23, scope: !4610)
!4617 = !DILocation(line: 2500, column: 23, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !4597, file: !1803, discriminator: 3)
!4619 = !DILocation(line: 2500, column: 20, scope: !4618)
!4620 = !DILocation(line: 2501, column: 35, scope: !4597)
!4621 = !DILocation(line: 2501, column: 21, scope: !4597)
!4622 = !DILocation(line: 2501, column: 32, scope: !4597)
!4623 = !DILocation(line: 2501, column: 26, scope: !4597)
!4624 = !DILocation(line: 2501, column: 19, scope: !4597)
!4625 = !DILocation(line: 2502, column: 17, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4597, file: !1803, line: 2502, column: 17)
!4627 = !DILocation(line: 2502, column: 23, scope: !4626)
!4628 = !DILocation(line: 2502, column: 17, scope: !4597)
!4629 = !DILocation(line: 2503, column: 17, scope: !4626)
!4630 = !DILocation(line: 2506, column: 44, scope: !4597)
!4631 = !DILocation(line: 2506, column: 31, scope: !4597)
!4632 = !DILocation(line: 2506, column: 41, scope: !4597)
!4633 = !DILocation(line: 2506, column: 36, scope: !4597)
!4634 = !DILocation(line: 2506, column: 51, scope: !4597)
!4635 = !DILocation(line: 2506, column: 58, scope: !4597)
!4636 = !DILocation(line: 2506, column: 13, scope: !4597)
!4637 = !DILocation(line: 2508, column: 39, scope: !4597)
!4638 = !DILocation(line: 2508, column: 50, scope: !4597)
!4639 = !DILocation(line: 2508, column: 47, scope: !4597)
!4640 = !DILocation(line: 2508, column: 38, scope: !4597)
!4641 = !DILocation(line: 2508, column: 58, scope: !4608)
!4642 = !DILocation(line: 2508, column: 38, scope: !4608)
!4643 = !DILocation(line: 2508, column: 66, scope: !4610)
!4644 = !DILocation(line: 2508, column: 38, scope: !4610)
!4645 = !DILocation(line: 2508, column: 38, scope: !4618)
!4646 = !DILocation(line: 2508, column: 21, scope: !4618)
!4647 = !DILocation(line: 2508, column: 26, scope: !4618)
!4648 = !DILocation(line: 2508, column: 19, scope: !4618)
!4649 = !DILocation(line: 2509, column: 37, scope: !4597)
!4650 = !DILocation(line: 2509, column: 45, scope: !4597)
!4651 = !DILocation(line: 2509, column: 42, scope: !4597)
!4652 = !DILocation(line: 2509, column: 36, scope: !4597)
!4653 = !DILocation(line: 2509, column: 53, scope: !4608)
!4654 = !DILocation(line: 2509, column: 36, scope: !4608)
!4655 = !DILocation(line: 2509, column: 61, scope: !4610)
!4656 = !DILocation(line: 2509, column: 36, scope: !4610)
!4657 = !DILocation(line: 2509, column: 36, scope: !4618)
!4658 = !DILocation(line: 2509, column: 19, scope: !4618)
!4659 = !DILocation(line: 2509, column: 24, scope: !4618)
!4660 = !DILocation(line: 2509, column: 17, scope: !4618)
!4661 = !DILocation(line: 2510, column: 25, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4597, file: !1803, line: 2510, column: 17)
!4663 = !DILocation(line: 2510, column: 31, scope: !4662)
!4664 = !DILocation(line: 2510, column: 29, scope: !4662)
!4665 = !DILocation(line: 2510, column: 23, scope: !4662)
!4666 = !DILocation(line: 2510, column: 38, scope: !4662)
!4667 = !DILocation(line: 2510, column: 17, scope: !4597)
!4668 = !DILocation(line: 2511, column: 17, scope: !4662)
!4669 = !DILocation(line: 2512, column: 35, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4597, file: !1803, line: 2512, column: 17)
!4671 = !DILocation(line: 2512, column: 17, scope: !4670)
!4672 = !DILocation(line: 2512, column: 32, scope: !4670)
!4673 = !DILocation(line: 2512, column: 22, scope: !4670)
!4674 = !DILocation(line: 2512, column: 17, scope: !4597)
!4675 = !DILocation(line: 2513, column: 21, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4670, file: !1803, line: 2512, column: 42)
!4677 = !DILocation(line: 2514, column: 25, scope: !4676)
!4678 = !DILocation(line: 2514, column: 29, scope: !4676)
!4679 = !DILocation(line: 2514, column: 23, scope: !4676)
!4680 = !DILocation(line: 2515, column: 13, scope: !4676)
!4681 = !DILocation(line: 2516, column: 21, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4670, file: !1803, line: 2515, column: 20)
!4683 = !DILocation(line: 2518, column: 22, scope: !4597)
!4684 = !DILocation(line: 2518, column: 24, scope: !4597)
!4685 = !DILocation(line: 2518, column: 19, scope: !4597)
!4686 = !DILocation(line: 2520, column: 17, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4597, file: !1803, line: 2520, column: 17)
!4688 = !DILocation(line: 2520, column: 17, scope: !4597)
!4689 = !DILocation(line: 2522, column: 24, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !1803, line: 2522, column: 17)
!4691 = distinct !DILexicalBlock(scope: !4687, file: !1803, line: 2520, column: 25)
!4692 = !DILocation(line: 2522, column: 22, scope: !4690)
!4693 = !DILocation(line: 2522, column: 29, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4695, file: !1803, discriminator: 1)
!4695 = distinct !DILexicalBlock(scope: !4690, file: !1803, line: 2522, column: 17)
!4696 = !DILocation(line: 2522, column: 33, scope: !4694)
!4697 = !DILocation(line: 2522, column: 31, scope: !4694)
!4698 = !DILocation(line: 2522, column: 17, scope: !4694)
!4699 = !DILocation(line: 2523, column: 28, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4695, file: !1803, line: 2523, column: 21)
!4701 = !DILocation(line: 2523, column: 26, scope: !4700)
!4702 = !DILocation(line: 2523, column: 33, scope: !4703)
!4703 = !DILexicalBlockFile(scope: !4704, file: !1803, discriminator: 1)
!4704 = distinct !DILexicalBlock(scope: !4700, file: !1803, line: 2523, column: 21)
!4705 = !DILocation(line: 2523, column: 40, scope: !4703)
!4706 = !DILocation(line: 2523, column: 46, scope: !4703)
!4707 = !DILocation(line: 2523, column: 43, scope: !4703)
!4708 = !DILocation(line: 2523, column: 39, scope: !4703)
!4709 = !DILocation(line: 2523, column: 56, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4704, file: !1803, discriminator: 2)
!4711 = !DILocation(line: 2523, column: 39, scope: !4710)
!4712 = !DILocation(line: 2523, column: 66, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !4704, file: !1803, discriminator: 3)
!4714 = !DILocation(line: 2523, column: 39, scope: !4713)
!4715 = !DILocation(line: 2523, column: 39, scope: !4716)
!4716 = !DILexicalBlockFile(scope: !4704, file: !1803, discriminator: 4)
!4717 = !DILocation(line: 2523, column: 35, scope: !4716)
!4718 = !DILocation(line: 2523, column: 21, scope: !4716)
!4719 = !DILocation(line: 2524, column: 57, scope: !4704)
!4720 = !DILocation(line: 2524, column: 65, scope: !4704)
!4721 = !DILocation(line: 2524, column: 69, scope: !4704)
!4722 = !DILocation(line: 2524, column: 67, scope: !4704)
!4723 = !DILocation(line: 2524, column: 63, scope: !4704)
!4724 = !DILocation(line: 2524, column: 52, scope: !4704)
!4725 = !DILocation(line: 2524, column: 82, scope: !4704)
!4726 = !DILocation(line: 2524, column: 84, scope: !4704)
!4727 = !DILocation(line: 2524, column: 78, scope: !4704)
!4728 = !DILocation(line: 2524, column: 75, scope: !4704)
!4729 = !DILocation(line: 2524, column: 30, scope: !4704)
!4730 = !DILocation(line: 2524, column: 25, scope: !4704)
!4731 = !DILocation(line: 2524, column: 37, scope: !4704)
!4732 = !DILocation(line: 2523, column: 72, scope: !4733)
!4733 = !DILexicalBlockFile(scope: !4704, file: !1803, discriminator: 5)
!4734 = !DILocation(line: 2523, column: 21, scope: !4733)
!4735 = distinct !{!4735, !4736}
!4736 = !DILocation(line: 2523, column: 21, scope: !4695)
!4737 = !DILocation(line: 2524, column: 89, scope: !4738)
!4738 = !DILexicalBlockFile(scope: !4700, file: !1803, discriminator: 1)
!4739 = !DILocation(line: 2522, column: 40, scope: !4740)
!4740 = !DILexicalBlockFile(scope: !4695, file: !1803, discriminator: 2)
!4741 = !DILocation(line: 2522, column: 53, scope: !4740)
!4742 = !DILocation(line: 2522, column: 50, scope: !4740)
!4743 = !DILocation(line: 2522, column: 17, scope: !4740)
!4744 = distinct !{!4744, !4745}
!4745 = !DILocation(line: 2522, column: 17, scope: !4691)
!4746 = !DILocation(line: 2525, column: 13, scope: !4691)
!4747 = !DILocation(line: 2527, column: 24, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !1803, line: 2527, column: 17)
!4749 = distinct !DILexicalBlock(scope: !4687, file: !1803, line: 2525, column: 20)
!4750 = !DILocation(line: 2527, column: 22, scope: !4748)
!4751 = !DILocation(line: 2527, column: 29, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4753, file: !1803, discriminator: 1)
!4753 = distinct !DILexicalBlock(scope: !4748, file: !1803, line: 2527, column: 17)
!4754 = !DILocation(line: 2527, column: 33, scope: !4752)
!4755 = !DILocation(line: 2527, column: 31, scope: !4752)
!4756 = !DILocation(line: 2527, column: 17, scope: !4752)
!4757 = !DILocation(line: 2528, column: 35, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4753, file: !1803, line: 2527, column: 58)
!4759 = !DILocation(line: 2528, column: 30, scope: !4758)
!4760 = !DILocation(line: 2528, column: 21, scope: !4758)
!4761 = !DILocation(line: 2528, column: 28, scope: !4758)
!4762 = !DILocation(line: 2529, column: 28, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4758, file: !1803, line: 2529, column: 21)
!4764 = !DILocation(line: 2529, column: 26, scope: !4763)
!4765 = !DILocation(line: 2529, column: 33, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4767, file: !1803, discriminator: 1)
!4767 = distinct !DILexicalBlock(scope: !4763, file: !1803, line: 2529, column: 21)
!4768 = !DILocation(line: 2529, column: 40, scope: !4766)
!4769 = !DILocation(line: 2529, column: 46, scope: !4766)
!4770 = !DILocation(line: 2529, column: 43, scope: !4766)
!4771 = !DILocation(line: 2529, column: 39, scope: !4766)
!4772 = !DILocation(line: 2529, column: 56, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !4767, file: !1803, discriminator: 2)
!4774 = !DILocation(line: 2529, column: 39, scope: !4773)
!4775 = !DILocation(line: 2529, column: 66, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4767, file: !1803, discriminator: 3)
!4777 = !DILocation(line: 2529, column: 39, scope: !4776)
!4778 = !DILocation(line: 2529, column: 39, scope: !4779)
!4779 = !DILexicalBlockFile(scope: !4767, file: !1803, discriminator: 4)
!4780 = !DILocation(line: 2529, column: 35, scope: !4779)
!4781 = !DILocation(line: 2529, column: 21, scope: !4779)
!4782 = !DILocation(line: 2530, column: 46, scope: !4767)
!4783 = !DILocation(line: 2530, column: 42, scope: !4767)
!4784 = !DILocation(line: 2530, column: 57, scope: !4767)
!4785 = !DILocation(line: 2530, column: 59, scope: !4767)
!4786 = !DILocation(line: 2530, column: 53, scope: !4767)
!4787 = !DILocation(line: 2530, column: 50, scope: !4767)
!4788 = !DILocation(line: 2530, column: 30, scope: !4767)
!4789 = !DILocation(line: 2530, column: 25, scope: !4767)
!4790 = !DILocation(line: 2530, column: 37, scope: !4767)
!4791 = !DILocation(line: 2529, column: 72, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !4767, file: !1803, discriminator: 5)
!4793 = !DILocation(line: 2529, column: 21, scope: !4792)
!4794 = distinct !{!4794, !4795}
!4795 = !DILocation(line: 2529, column: 21, scope: !4758)
!4796 = !DILocation(line: 2531, column: 30, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4758, file: !1803, line: 2531, column: 21)
!4798 = !DILocation(line: 2531, column: 28, scope: !4797)
!4799 = !DILocation(line: 2531, column: 26, scope: !4797)
!4800 = !DILocation(line: 2531, column: 37, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !4802, file: !1803, discriminator: 1)
!4802 = distinct !DILexicalBlock(scope: !4797, file: !1803, line: 2531, column: 21)
!4803 = !DILocation(line: 2531, column: 39, scope: !4801)
!4804 = !DILocation(line: 2531, column: 21, scope: !4801)
!4805 = !DILocation(line: 2532, column: 38, scope: !4802)
!4806 = !DILocation(line: 2532, column: 40, scope: !4802)
!4807 = !DILocation(line: 2532, column: 34, scope: !4802)
!4808 = !DILocation(line: 2532, column: 29, scope: !4802)
!4809 = !DILocation(line: 2532, column: 25, scope: !4802)
!4810 = !DILocation(line: 2532, column: 32, scope: !4802)
!4811 = !DILocation(line: 2531, column: 45, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4802, file: !1803, discriminator: 2)
!4813 = !DILocation(line: 2531, column: 21, scope: !4812)
!4814 = distinct !{!4814, !4815}
!4815 = !DILocation(line: 2531, column: 21, scope: !4758)
!4816 = !DILocation(line: 2533, column: 17, scope: !4758)
!4817 = !DILocation(line: 2527, column: 40, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4753, file: !1803, discriminator: 2)
!4819 = !DILocation(line: 2527, column: 53, scope: !4818)
!4820 = !DILocation(line: 2527, column: 50, scope: !4818)
!4821 = !DILocation(line: 2527, column: 17, scope: !4818)
!4822 = distinct !{!4822, !4823}
!4823 = !DILocation(line: 2527, column: 17, scope: !4749)
!4824 = !DILocation(line: 2535, column: 9, scope: !4597)
!4825 = !DILocation(line: 2498, column: 51, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4590, file: !1803, discriminator: 2)
!4827 = !DILocation(line: 2498, column: 9, scope: !4826)
!4828 = distinct !{!4828, !4829}
!4829 = !DILocation(line: 2498, column: 9, scope: !4582)
!4830 = !DILocation(line: 2536, column: 5, scope: !4582)
!4831 = !DILocation(line: 2496, column: 40, scope: !4832)
!4832 = !DILexicalBlockFile(scope: !4576, file: !1803, discriminator: 2)
!4833 = !DILocation(line: 2496, column: 5, scope: !4832)
!4834 = distinct !{!4834, !4835}
!4835 = !DILocation(line: 2496, column: 5, scope: !4506)
!4836 = !DILocation(line: 2537, column: 1, scope: !4506)
!4837 = distinct !DISubprogram(name: "windowing_and_mdct_ltp", scope: !1803, file: !1803, line: 2543, type: !2652, isLocal: true, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!4838 = !DILocalVariable(name: "ac", arg: 1, scope: !4837, file: !1803, line: 2543, type: !2065)
!4839 = !DILocation(line: 2543, column: 48, scope: !4837)
!4840 = !DILocalVariable(name: "out", arg: 2, scope: !4837, file: !1803, line: 2543, type: !1031)
!4841 = !DILocation(line: 2543, column: 62, scope: !4837)
!4842 = !DILocalVariable(name: "in", arg: 3, scope: !4837, file: !1803, line: 2544, type: !1031)
!4843 = !DILocation(line: 2544, column: 46, scope: !4837)
!4844 = !DILocalVariable(name: "ics", arg: 4, scope: !4837, file: !1803, line: 2544, type: !2649)
!4845 = !DILocation(line: 2544, column: 75, scope: !4837)
!4846 = !DILocalVariable(name: "lwindow", scope: !4837, file: !1803, line: 2546, type: !1903)
!4847 = !DILocation(line: 2546, column: 21, scope: !4837)
!4848 = !DILocation(line: 2546, column: 31, scope: !4837)
!4849 = !DILocation(line: 2546, column: 36, scope: !4837)
!4850 = !DILocalVariable(name: "swindow", scope: !4837, file: !1803, line: 2547, type: !1903)
!4851 = !DILocation(line: 2547, column: 21, scope: !4837)
!4852 = !DILocation(line: 2547, column: 31, scope: !4837)
!4853 = !DILocation(line: 2547, column: 36, scope: !4837)
!4854 = !DILocalVariable(name: "lwindow_prev", scope: !4837, file: !1803, line: 2548, type: !1903)
!4855 = !DILocation(line: 2548, column: 21, scope: !4837)
!4856 = !DILocation(line: 2548, column: 36, scope: !4837)
!4857 = !DILocation(line: 2548, column: 41, scope: !4837)
!4858 = !DILocalVariable(name: "swindow_prev", scope: !4837, file: !1803, line: 2549, type: !1903)
!4859 = !DILocation(line: 2549, column: 21, scope: !4837)
!4860 = !DILocation(line: 2549, column: 36, scope: !4837)
!4861 = !DILocation(line: 2549, column: 41, scope: !4837)
!4862 = !DILocation(line: 2551, column: 9, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4837, file: !1803, line: 2551, column: 9)
!4864 = !DILocation(line: 2551, column: 14, scope: !4863)
!4865 = !DILocation(line: 2551, column: 33, scope: !4863)
!4866 = !DILocation(line: 2551, column: 9, scope: !4837)
!4867 = !DILocation(line: 2552, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !1803, line: 2551, column: 56)
!4869 = !DILocation(line: 2552, column: 13, scope: !4868)
!4870 = !DILocation(line: 2552, column: 19, scope: !4868)
!4871 = !DILocation(line: 2552, column: 31, scope: !4868)
!4872 = !DILocation(line: 2552, column: 35, scope: !4868)
!4873 = !DILocation(line: 2552, column: 39, scope: !4868)
!4874 = !DILocation(line: 2553, column: 5, scope: !4868)
!4875 = !DILocation(line: 2554, column: 16, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4863, file: !1803, line: 2553, column: 12)
!4877 = !DILocation(line: 2554, column: 9, scope: !4876)
!4878 = !DILocation(line: 2555, column: 9, scope: !4876)
!4879 = !DILocation(line: 2555, column: 13, scope: !4876)
!4880 = !DILocation(line: 2555, column: 19, scope: !4876)
!4881 = !DILocation(line: 2555, column: 31, scope: !4876)
!4882 = !DILocation(line: 2555, column: 34, scope: !4876)
!4883 = !DILocation(line: 2555, column: 41, scope: !4876)
!4884 = !DILocation(line: 2555, column: 44, scope: !4876)
!4885 = !DILocation(line: 2555, column: 51, scope: !4876)
!4886 = !DILocation(line: 2557, column: 9, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4837, file: !1803, line: 2557, column: 9)
!4888 = !DILocation(line: 2557, column: 14, scope: !4887)
!4889 = !DILocation(line: 2557, column: 33, scope: !4887)
!4890 = !DILocation(line: 2557, column: 9, scope: !4837)
!4891 = !DILocation(line: 2558, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !1803, line: 2557, column: 57)
!4893 = !DILocation(line: 2558, column: 13, scope: !4892)
!4894 = !DILocation(line: 2558, column: 19, scope: !4892)
!4895 = !DILocation(line: 2558, column: 39, scope: !4892)
!4896 = !DILocation(line: 2558, column: 42, scope: !4892)
!4897 = !DILocation(line: 2558, column: 50, scope: !4892)
!4898 = !DILocation(line: 2558, column: 53, scope: !4892)
!4899 = !DILocation(line: 2558, column: 61, scope: !4892)
!4900 = !DILocation(line: 2559, column: 5, scope: !4892)
!4901 = !DILocation(line: 2560, column: 9, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4887, file: !1803, line: 2559, column: 12)
!4903 = !DILocation(line: 2560, column: 13, scope: !4902)
!4904 = !DILocation(line: 2560, column: 19, scope: !4902)
!4905 = !DILocation(line: 2560, column: 39, scope: !4902)
!4906 = !DILocation(line: 2560, column: 42, scope: !4902)
!4907 = !DILocation(line: 2560, column: 49, scope: !4902)
!4908 = !DILocation(line: 2560, column: 56, scope: !4902)
!4909 = !DILocation(line: 2560, column: 59, scope: !4902)
!4910 = !DILocation(line: 2560, column: 66, scope: !4902)
!4911 = !DILocation(line: 2560, column: 73, scope: !4902)
!4912 = !DILocation(line: 2561, column: 16, scope: !4902)
!4913 = !DILocation(line: 2561, column: 19, scope: !4902)
!4914 = !DILocation(line: 2561, column: 26, scope: !4902)
!4915 = !DILocation(line: 2561, column: 9, scope: !4902)
!4916 = !DILocation(line: 2563, column: 5, scope: !4837)
!4917 = !DILocation(line: 2563, column: 9, scope: !4837)
!4918 = !DILocation(line: 2563, column: 18, scope: !4837)
!4919 = !DILocation(line: 2563, column: 29, scope: !4837)
!4920 = !DILocation(line: 2563, column: 33, scope: !4837)
!4921 = !DILocation(line: 2563, column: 43, scope: !4837)
!4922 = !DILocation(line: 2563, column: 48, scope: !4837)
!4923 = !DILocation(line: 2564, column: 1, scope: !4837)
!4924 = distinct !DISubprogram(name: "update_ltp", scope: !1803, file: !1803, line: 2601, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2602, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!4925 = !DILocalVariable(name: "ac", arg: 1, scope: !4924, file: !1803, line: 2601, type: !2065)
!4926 = !DILocation(line: 2601, column: 36, scope: !4924)
!4927 = !DILocalVariable(name: "sce", arg: 2, scope: !4924, file: !1803, line: 2601, type: !1914)
!4928 = !DILocation(line: 2601, column: 62, scope: !4924)
!4929 = !DILocalVariable(name: "ics", scope: !4924, file: !1803, line: 2603, type: !2649)
!4930 = !DILocation(line: 2603, column: 30, scope: !4924)
!4931 = !DILocation(line: 2603, column: 37, scope: !4924)
!4932 = !DILocation(line: 2603, column: 42, scope: !4924)
!4933 = !DILocalVariable(name: "saved", scope: !4924, file: !1803, line: 2604, type: !1031)
!4934 = !DILocation(line: 2604, column: 15, scope: !4924)
!4935 = !DILocation(line: 2604, column: 23, scope: !4924)
!4936 = !DILocation(line: 2604, column: 28, scope: !4924)
!4937 = !DILocalVariable(name: "saved_ltp", scope: !4924, file: !1803, line: 2605, type: !1031)
!4938 = !DILocation(line: 2605, column: 15, scope: !4924)
!4939 = !DILocation(line: 2605, column: 27, scope: !4924)
!4940 = !DILocation(line: 2605, column: 32, scope: !4924)
!4941 = !DILocalVariable(name: "lwindow", scope: !4924, file: !1803, line: 2606, type: !1903)
!4942 = !DILocation(line: 2606, column: 21, scope: !4924)
!4943 = !DILocation(line: 2606, column: 31, scope: !4924)
!4944 = !DILocation(line: 2606, column: 36, scope: !4924)
!4945 = !DILocalVariable(name: "swindow", scope: !4924, file: !1803, line: 2607, type: !1903)
!4946 = !DILocation(line: 2607, column: 21, scope: !4924)
!4947 = !DILocation(line: 2607, column: 31, scope: !4924)
!4948 = !DILocation(line: 2607, column: 36, scope: !4924)
!4949 = !DILocalVariable(name: "i", scope: !4924, file: !1803, line: 2608, type: !1012)
!4950 = !DILocation(line: 2608, column: 9, scope: !4924)
!4951 = !DILocation(line: 2610, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4924, file: !1803, line: 2610, column: 9)
!4953 = !DILocation(line: 2610, column: 14, scope: !4952)
!4954 = !DILocation(line: 2610, column: 33, scope: !4952)
!4955 = !DILocation(line: 2610, column: 9, scope: !4924)
!4956 = !DILocation(line: 2611, column: 16, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4952, file: !1803, line: 2610, column: 58)
!4958 = !DILocation(line: 2611, column: 9, scope: !4957)
!4959 = !DILocation(line: 2611, column: 27, scope: !4957)
!4960 = !DILocation(line: 2612, column: 16, scope: !4957)
!4961 = !DILocation(line: 2612, column: 26, scope: !4957)
!4962 = !DILocation(line: 2612, column: 9, scope: !4957)
!4963 = !DILocation(line: 2613, column: 9, scope: !4957)
!4964 = !DILocation(line: 2613, column: 13, scope: !4957)
!4965 = !DILocation(line: 2613, column: 19, scope: !4957)
!4966 = !DILocation(line: 2613, column: 39, scope: !4957)
!4967 = !DILocation(line: 2613, column: 49, scope: !4957)
!4968 = !DILocation(line: 2613, column: 56, scope: !4957)
!4969 = !DILocation(line: 2613, column: 60, scope: !4957)
!4970 = !DILocation(line: 2613, column: 69, scope: !4957)
!4971 = !DILocation(line: 2613, column: 77, scope: !4957)
!4972 = !DILocation(line: 2615, column: 16, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4957, file: !1803, line: 2615, column: 9)
!4974 = !DILocation(line: 2615, column: 14, scope: !4973)
!4975 = !DILocation(line: 2615, column: 21, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !4977, file: !1803, discriminator: 1)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !1803, line: 2615, column: 9)
!4978 = !DILocation(line: 2615, column: 23, scope: !4976)
!4979 = !DILocation(line: 2615, column: 9, scope: !4976)
!4980 = !DILocation(line: 2616, column: 56, scope: !4977)
!4981 = !DILocation(line: 2616, column: 54, scope: !4977)
!4982 = !DILocation(line: 2616, column: 36, scope: !4977)
!4983 = !DILocation(line: 2616, column: 40, scope: !4977)
!4984 = !DILocation(line: 2616, column: 76, scope: !4977)
!4985 = !DILocation(line: 2616, column: 74, scope: !4977)
!4986 = !DILocation(line: 2616, column: 63, scope: !4977)
!4987 = !DILocation(line: 2616, column: 60, scope: !4977)
!4988 = !DILocation(line: 2616, column: 23, scope: !4977)
!4989 = !DILocation(line: 2616, column: 25, scope: !4977)
!4990 = !DILocation(line: 2616, column: 13, scope: !4977)
!4991 = !DILocation(line: 2616, column: 32, scope: !4977)
!4992 = !DILocation(line: 2615, column: 30, scope: !4993)
!4993 = !DILexicalBlockFile(scope: !4977, file: !1803, discriminator: 2)
!4994 = !DILocation(line: 2615, column: 9, scope: !4993)
!4995 = distinct !{!4995, !4996}
!4996 = !DILocation(line: 2615, column: 9, scope: !4957)
!4997 = !DILocation(line: 2617, column: 5, scope: !4957)
!4998 = !DILocation(line: 2617, column: 16, scope: !4999)
!4999 = !DILexicalBlockFile(scope: !5000, file: !1803, discriminator: 1)
!5000 = distinct !DILexicalBlock(scope: !4952, file: !1803, line: 2617, column: 16)
!5001 = !DILocation(line: 2617, column: 21, scope: !4999)
!5002 = !DILocation(line: 2617, column: 40, scope: !4999)
!5003 = !DILocation(line: 2618, column: 16, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !1803, line: 2617, column: 64)
!5005 = !DILocation(line: 2618, column: 9, scope: !5004)
!5006 = !DILocation(line: 2618, column: 27, scope: !5004)
!5007 = !DILocation(line: 2618, column: 31, scope: !5004)
!5008 = !DILocation(line: 2618, column: 40, scope: !5004)
!5009 = !DILocation(line: 2619, column: 16, scope: !5004)
!5010 = !DILocation(line: 2619, column: 26, scope: !5004)
!5011 = !DILocation(line: 2619, column: 9, scope: !5004)
!5012 = !DILocation(line: 2620, column: 9, scope: !5004)
!5013 = !DILocation(line: 2620, column: 13, scope: !5004)
!5014 = !DILocation(line: 2620, column: 19, scope: !5004)
!5015 = !DILocation(line: 2620, column: 39, scope: !5004)
!5016 = !DILocation(line: 2620, column: 49, scope: !5004)
!5017 = !DILocation(line: 2620, column: 56, scope: !5004)
!5018 = !DILocation(line: 2620, column: 60, scope: !5004)
!5019 = !DILocation(line: 2620, column: 69, scope: !5004)
!5020 = !DILocation(line: 2620, column: 77, scope: !5004)
!5021 = !DILocation(line: 2622, column: 16, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5004, file: !1803, line: 2622, column: 9)
!5023 = !DILocation(line: 2622, column: 14, scope: !5022)
!5024 = !DILocation(line: 2622, column: 21, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !5026, file: !1803, discriminator: 1)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !1803, line: 2622, column: 9)
!5027 = !DILocation(line: 2622, column: 23, scope: !5025)
!5028 = !DILocation(line: 2622, column: 9, scope: !5025)
!5029 = !DILocation(line: 2623, column: 56, scope: !5026)
!5030 = !DILocation(line: 2623, column: 54, scope: !5026)
!5031 = !DILocation(line: 2623, column: 36, scope: !5026)
!5032 = !DILocation(line: 2623, column: 40, scope: !5026)
!5033 = !DILocation(line: 2623, column: 76, scope: !5026)
!5034 = !DILocation(line: 2623, column: 74, scope: !5026)
!5035 = !DILocation(line: 2623, column: 63, scope: !5026)
!5036 = !DILocation(line: 2623, column: 60, scope: !5026)
!5037 = !DILocation(line: 2623, column: 23, scope: !5026)
!5038 = !DILocation(line: 2623, column: 25, scope: !5026)
!5039 = !DILocation(line: 2623, column: 13, scope: !5026)
!5040 = !DILocation(line: 2623, column: 32, scope: !5026)
!5041 = !DILocation(line: 2622, column: 30, scope: !5042)
!5042 = !DILexicalBlockFile(scope: !5026, file: !1803, discriminator: 2)
!5043 = !DILocation(line: 2622, column: 9, scope: !5042)
!5044 = distinct !{!5044, !5045}
!5045 = !DILocation(line: 2622, column: 9, scope: !5004)
!5046 = !DILocation(line: 2624, column: 5, scope: !5004)
!5047 = !DILocation(line: 2625, column: 9, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5000, file: !1803, line: 2624, column: 12)
!5049 = !DILocation(line: 2625, column: 13, scope: !5048)
!5050 = !DILocation(line: 2625, column: 19, scope: !5048)
!5051 = !DILocation(line: 2625, column: 39, scope: !5048)
!5052 = !DILocation(line: 2625, column: 50, scope: !5048)
!5053 = !DILocation(line: 2625, column: 54, scope: !5048)
!5054 = !DILocation(line: 2625, column: 63, scope: !5048)
!5055 = !DILocation(line: 2625, column: 71, scope: !5048)
!5056 = !DILocation(line: 2627, column: 16, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5048, file: !1803, line: 2627, column: 9)
!5058 = !DILocation(line: 2627, column: 14, scope: !5057)
!5059 = !DILocation(line: 2627, column: 21, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !5061, file: !1803, discriminator: 1)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !1803, line: 2627, column: 9)
!5062 = !DILocation(line: 2627, column: 23, scope: !5060)
!5063 = !DILocation(line: 2627, column: 9, scope: !5060)
!5064 = !DILocation(line: 2628, column: 56, scope: !5061)
!5065 = !DILocation(line: 2628, column: 54, scope: !5061)
!5066 = !DILocation(line: 2628, column: 36, scope: !5061)
!5067 = !DILocation(line: 2628, column: 40, scope: !5061)
!5068 = !DILocation(line: 2628, column: 77, scope: !5061)
!5069 = !DILocation(line: 2628, column: 75, scope: !5061)
!5070 = !DILocation(line: 2628, column: 63, scope: !5061)
!5071 = !DILocation(line: 2628, column: 60, scope: !5061)
!5072 = !DILocation(line: 2628, column: 23, scope: !5061)
!5073 = !DILocation(line: 2628, column: 25, scope: !5061)
!5074 = !DILocation(line: 2628, column: 13, scope: !5061)
!5075 = !DILocation(line: 2628, column: 32, scope: !5061)
!5076 = !DILocation(line: 2627, column: 31, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !5061, file: !1803, discriminator: 2)
!5078 = !DILocation(line: 2627, column: 9, scope: !5077)
!5079 = distinct !{!5079, !5080}
!5080 = !DILocation(line: 2627, column: 9, scope: !5048)
!5081 = !DILocation(line: 2631, column: 12, scope: !4924)
!5082 = !DILocation(line: 2631, column: 17, scope: !4924)
!5083 = !DILocation(line: 2631, column: 5, scope: !4924)
!5084 = !DILocation(line: 2631, column: 28, scope: !4924)
!5085 = !DILocation(line: 2631, column: 33, scope: !4924)
!5086 = !DILocation(line: 2631, column: 42, scope: !4924)
!5087 = !DILocation(line: 2632, column: 12, scope: !4924)
!5088 = !DILocation(line: 2632, column: 17, scope: !4924)
!5089 = !DILocation(line: 2632, column: 26, scope: !4924)
!5090 = !DILocation(line: 2632, column: 5, scope: !4924)
!5091 = !DILocation(line: 2632, column: 33, scope: !4924)
!5092 = !DILocation(line: 2632, column: 38, scope: !4924)
!5093 = !DILocation(line: 2633, column: 12, scope: !4924)
!5094 = !DILocation(line: 2633, column: 17, scope: !4924)
!5095 = !DILocation(line: 2633, column: 26, scope: !4924)
!5096 = !DILocation(line: 2633, column: 5, scope: !4924)
!5097 = !DILocation(line: 2633, column: 33, scope: !4924)
!5098 = !DILocation(line: 2634, column: 1, scope: !4924)
!5099 = distinct !DISubprogram(name: "compute_lpc_coefs", scope: !1019, file: !1019, line: 166, type: !5100, isLocal: true, isDefinition: true, scopeLine: 169, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!1012, !5102, !1012, !5105, !1012, !1012, !1012}
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64, align: 64)
!5103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5104)
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPC_TYPE", file: !1019, line: 126, baseType: !1016)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64, align: 64)
!5106 = !DILocalVariable(name: "autoc", arg: 1, scope: !5099, file: !1019, line: 166, type: !5102)
!5107 = !DILocation(line: 166, column: 53, scope: !5099)
!5108 = !DILocalVariable(name: "max_order", arg: 2, scope: !5099, file: !1019, line: 166, type: !1012)
!5109 = !DILocation(line: 166, column: 64, scope: !5099)
!5110 = !DILocalVariable(name: "lpc", arg: 3, scope: !5099, file: !1019, line: 167, type: !5105)
!5111 = !DILocation(line: 167, column: 47, scope: !5099)
!5112 = !DILocalVariable(name: "lpc_stride", arg: 4, scope: !5099, file: !1019, line: 167, type: !1012)
!5113 = !DILocation(line: 167, column: 56, scope: !5099)
!5114 = !DILocalVariable(name: "fail", arg: 5, scope: !5099, file: !1019, line: 167, type: !1012)
!5115 = !DILocation(line: 167, column: 72, scope: !5099)
!5116 = !DILocalVariable(name: "normalize", arg: 6, scope: !5099, file: !1019, line: 168, type: !1012)
!5117 = !DILocation(line: 168, column: 41, scope: !5099)
!5118 = !DILocalVariable(name: "i", scope: !5099, file: !1019, line: 170, type: !1012)
!5119 = !DILocation(line: 170, column: 9, scope: !5099)
!5120 = !DILocalVariable(name: "j", scope: !5099, file: !1019, line: 170, type: !1012)
!5121 = !DILocation(line: 170, column: 12, scope: !5099)
!5122 = !DILocalVariable(name: "err", scope: !5099, file: !1019, line: 171, type: !5104)
!5123 = !DILocation(line: 171, column: 14, scope: !5099)
!5124 = !DILocalVariable(name: "lpc_last", scope: !5099, file: !1019, line: 172, type: !5105)
!5125 = !DILocation(line: 172, column: 15, scope: !5099)
!5126 = !DILocation(line: 172, column: 26, scope: !5099)
!5127 = !DILocation(line: 176, column: 9, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5099, file: !1019, line: 176, column: 9)
!5129 = !DILocation(line: 176, column: 9, scope: !5099)
!5130 = !DILocation(line: 177, column: 21, scope: !5128)
!5131 = !DILocation(line: 177, column: 15, scope: !5128)
!5132 = !DILocation(line: 177, column: 13, scope: !5128)
!5133 = !DILocation(line: 177, column: 9, scope: !5128)
!5134 = !DILocation(line: 179, column: 9, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5099, file: !1019, line: 179, column: 9)
!5136 = !DILocation(line: 179, column: 14, scope: !5135)
!5137 = !DILocation(line: 179, column: 24, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5135, file: !1019, discriminator: 1)
!5139 = !DILocation(line: 179, column: 34, scope: !5138)
!5140 = !DILocation(line: 179, column: 18, scope: !5138)
!5141 = !DILocation(line: 179, column: 39, scope: !5138)
!5142 = !DILocation(line: 179, column: 44, scope: !5138)
!5143 = !DILocation(line: 179, column: 47, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !5135, file: !1019, discriminator: 2)
!5145 = !DILocation(line: 179, column: 51, scope: !5144)
!5146 = !DILocation(line: 179, column: 9, scope: !5144)
!5147 = !DILocation(line: 180, column: 9, scope: !5135)
!5148 = !DILocation(line: 182, column: 10, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5099, file: !1019, line: 182, column: 5)
!5150 = !DILocation(line: 182, column: 9, scope: !5149)
!5151 = !DILocation(line: 182, column: 14, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5153, file: !1019, discriminator: 1)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !1019, line: 182, column: 5)
!5154 = !DILocation(line: 182, column: 16, scope: !5152)
!5155 = !DILocation(line: 182, column: 15, scope: !5152)
!5156 = !DILocation(line: 182, column: 5, scope: !5152)
!5157 = !DILocalVariable(name: "r", scope: !5158, file: !1019, line: 183, type: !5104)
!5158 = distinct !DILexicalBlock(scope: !5153, file: !1019, line: 182, column: 32)
!5159 = !DILocation(line: 183, column: 18, scope: !5158)
!5160 = !DILocation(line: 183, column: 30, scope: !5158)
!5161 = !DILocation(line: 183, column: 24, scope: !5158)
!5162 = !DILocation(line: 183, column: 23, scope: !5158)
!5163 = !DILocation(line: 185, column: 13, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5158, file: !1019, line: 185, column: 13)
!5165 = !DILocation(line: 185, column: 13, scope: !5158)
!5166 = !DILocation(line: 186, column: 18, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !1019, line: 186, column: 13)
!5168 = distinct !DILexicalBlock(scope: !5164, file: !1019, line: 185, column: 24)
!5169 = !DILocation(line: 186, column: 17, scope: !5167)
!5170 = !DILocation(line: 186, column: 22, scope: !5171)
!5171 = !DILexicalBlockFile(scope: !5172, file: !1019, discriminator: 1)
!5172 = distinct !DILexicalBlock(scope: !5167, file: !1019, line: 186, column: 13)
!5173 = !DILocation(line: 186, column: 24, scope: !5171)
!5174 = !DILocation(line: 186, column: 23, scope: !5171)
!5175 = !DILocation(line: 186, column: 13, scope: !5171)
!5176 = !DILocation(line: 187, column: 31, scope: !5172)
!5177 = !DILocation(line: 187, column: 22, scope: !5172)
!5178 = !DILocation(line: 187, column: 42, scope: !5172)
!5179 = !DILocation(line: 187, column: 44, scope: !5172)
!5180 = !DILocation(line: 187, column: 43, scope: !5172)
!5181 = !DILocation(line: 187, column: 45, scope: !5172)
!5182 = !DILocation(line: 187, column: 36, scope: !5172)
!5183 = !DILocation(line: 187, column: 34, scope: !5172)
!5184 = !DILocation(line: 187, column: 19, scope: !5172)
!5185 = !DILocation(line: 187, column: 17, scope: !5172)
!5186 = !DILocation(line: 186, column: 28, scope: !5187)
!5187 = !DILexicalBlockFile(scope: !5172, file: !1019, discriminator: 2)
!5188 = !DILocation(line: 186, column: 13, scope: !5187)
!5189 = distinct !{!5189, !5190}
!5190 = !DILocation(line: 186, column: 13, scope: !5168)
!5191 = !DILocation(line: 189, column: 18, scope: !5168)
!5192 = !DILocation(line: 189, column: 15, scope: !5168)
!5193 = !DILocation(line: 190, column: 38, scope: !5168)
!5194 = !DILocation(line: 190, column: 42, scope: !5168)
!5195 = !DILocation(line: 190, column: 40, scope: !5168)
!5196 = !DILocation(line: 190, column: 35, scope: !5168)
!5197 = !DILocation(line: 190, column: 17, scope: !5168)
!5198 = !DILocation(line: 191, column: 9, scope: !5168)
!5199 = !DILocation(line: 193, column: 18, scope: !5158)
!5200 = !DILocation(line: 193, column: 13, scope: !5158)
!5201 = !DILocation(line: 193, column: 9, scope: !5158)
!5202 = !DILocation(line: 193, column: 16, scope: !5158)
!5203 = !DILocation(line: 195, column: 14, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5158, file: !1019, line: 195, column: 9)
!5205 = !DILocation(line: 195, column: 13, scope: !5204)
!5206 = !DILocation(line: 195, column: 18, scope: !5207)
!5207 = !DILexicalBlockFile(scope: !5208, file: !1019, discriminator: 1)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !1019, line: 195, column: 9)
!5209 = !DILocation(line: 195, column: 23, scope: !5207)
!5210 = !DILocation(line: 195, column: 24, scope: !5207)
!5211 = !DILocation(line: 195, column: 27, scope: !5207)
!5212 = !DILocation(line: 195, column: 20, scope: !5207)
!5213 = !DILocation(line: 195, column: 9, scope: !5207)
!5214 = !DILocalVariable(name: "f", scope: !5215, file: !1019, line: 196, type: !5104)
!5215 = distinct !DILexicalBlock(scope: !5208, file: !1019, line: 195, column: 37)
!5216 = !DILocation(line: 196, column: 22, scope: !5215)
!5217 = !DILocation(line: 196, column: 36, scope: !5215)
!5218 = !DILocation(line: 196, column: 26, scope: !5215)
!5219 = !DILocalVariable(name: "b", scope: !5215, file: !1019, line: 197, type: !5104)
!5220 = !DILocation(line: 197, column: 22, scope: !5215)
!5221 = !DILocation(line: 197, column: 35, scope: !5215)
!5222 = !DILocation(line: 197, column: 36, scope: !5215)
!5223 = !DILocation(line: 197, column: 39, scope: !5215)
!5224 = !DILocation(line: 197, column: 38, scope: !5215)
!5225 = !DILocation(line: 197, column: 26, scope: !5215)
!5226 = !DILocation(line: 198, column: 23, scope: !5215)
!5227 = !DILocation(line: 198, column: 41, scope: !5215)
!5228 = !DILocation(line: 198, column: 47, scope: !5215)
!5229 = !DILocation(line: 198, column: 44, scope: !5215)
!5230 = !DILocation(line: 198, column: 25, scope: !5215)
!5231 = !DILocation(line: 198, column: 18, scope: !5215)
!5232 = !DILocation(line: 198, column: 13, scope: !5215)
!5233 = !DILocation(line: 198, column: 21, scope: !5215)
!5234 = !DILocation(line: 199, column: 26, scope: !5215)
!5235 = !DILocation(line: 199, column: 44, scope: !5215)
!5236 = !DILocation(line: 199, column: 50, scope: !5215)
!5237 = !DILocation(line: 199, column: 47, scope: !5215)
!5238 = !DILocation(line: 199, column: 28, scope: !5215)
!5239 = !DILocation(line: 199, column: 17, scope: !5215)
!5240 = !DILocation(line: 199, column: 18, scope: !5215)
!5241 = !DILocation(line: 199, column: 21, scope: !5215)
!5242 = !DILocation(line: 199, column: 20, scope: !5215)
!5243 = !DILocation(line: 199, column: 13, scope: !5215)
!5244 = !DILocation(line: 199, column: 24, scope: !5215)
!5245 = !DILocation(line: 200, column: 9, scope: !5215)
!5246 = !DILocation(line: 195, column: 33, scope: !5247)
!5247 = !DILexicalBlockFile(scope: !5208, file: !1019, discriminator: 2)
!5248 = !DILocation(line: 195, column: 9, scope: !5247)
!5249 = distinct !{!5249, !5250}
!5250 = !DILocation(line: 195, column: 9, scope: !5158)
!5251 = !DILocation(line: 202, column: 13, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5158, file: !1019, line: 202, column: 13)
!5253 = !DILocation(line: 202, column: 18, scope: !5252)
!5254 = !DILocation(line: 202, column: 21, scope: !5255)
!5255 = !DILexicalBlockFile(scope: !5252, file: !1019, discriminator: 1)
!5256 = !DILocation(line: 202, column: 25, scope: !5255)
!5257 = !DILocation(line: 202, column: 13, scope: !5255)
!5258 = !DILocation(line: 203, column: 13, scope: !5252)
!5259 = !DILocation(line: 205, column: 20, scope: !5158)
!5260 = !DILocation(line: 205, column: 18, scope: !5158)
!5261 = !DILocation(line: 206, column: 16, scope: !5158)
!5262 = !DILocation(line: 206, column: 13, scope: !5158)
!5263 = !DILocation(line: 207, column: 5, scope: !5158)
!5264 = !DILocation(line: 182, column: 28, scope: !5265)
!5265 = !DILexicalBlockFile(scope: !5153, file: !1019, discriminator: 2)
!5266 = !DILocation(line: 182, column: 5, scope: !5265)
!5267 = distinct !{!5267, !5268}
!5268 = !DILocation(line: 182, column: 5, scope: !5099)
!5269 = !DILocation(line: 209, column: 5, scope: !5099)
!5270 = !DILocation(line: 210, column: 1, scope: !5099)
!5271 = distinct !DISubprogram(name: "init_get_bits", scope: !2045, file: !2045, line: 615, type: !5272, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!1012, !2043, !1607, !1012}
!5274 = !DILocalVariable(name: "s", arg: 1, scope: !5271, file: !2045, line: 615, type: !2043)
!5275 = !DILocation(line: 615, column: 48, scope: !5271)
!5276 = !DILocalVariable(name: "buffer", arg: 2, scope: !5271, file: !2045, line: 615, type: !1607)
!5277 = !DILocation(line: 615, column: 66, scope: !5271)
!5278 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5271, file: !2045, line: 616, type: !1012)
!5279 = !DILocation(line: 616, column: 37, scope: !5271)
!5280 = !DILocalVariable(name: "buffer_size", scope: !5271, file: !2045, line: 618, type: !1012)
!5281 = !DILocation(line: 618, column: 9, scope: !5271)
!5282 = !DILocalVariable(name: "ret", scope: !5271, file: !2045, line: 619, type: !1012)
!5283 = !DILocation(line: 619, column: 9, scope: !5271)
!5284 = !DILocation(line: 621, column: 9, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5271, file: !2045, line: 621, column: 9)
!5286 = !DILocation(line: 621, column: 18, scope: !5285)
!5287 = !DILocation(line: 621, column: 64, scope: !5285)
!5288 = !DILocation(line: 621, column: 67, scope: !5289)
!5289 = !DILexicalBlockFile(scope: !5285, file: !2045, discriminator: 1)
!5290 = !DILocation(line: 621, column: 76, scope: !5289)
!5291 = !DILocation(line: 621, column: 80, scope: !5289)
!5292 = !DILocation(line: 621, column: 84, scope: !5293)
!5293 = !DILexicalBlockFile(scope: !5285, file: !2045, discriminator: 2)
!5294 = !DILocation(line: 621, column: 9, scope: !5293)
!5295 = !DILocation(line: 622, column: 18, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5285, file: !2045, line: 621, column: 92)
!5297 = !DILocation(line: 623, column: 16, scope: !5296)
!5298 = !DILocation(line: 624, column: 13, scope: !5296)
!5299 = !DILocation(line: 625, column: 5, scope: !5296)
!5300 = !DILocation(line: 627, column: 20, scope: !5271)
!5301 = !DILocation(line: 627, column: 29, scope: !5271)
!5302 = !DILocation(line: 627, column: 34, scope: !5271)
!5303 = !DILocation(line: 627, column: 17, scope: !5271)
!5304 = !DILocation(line: 629, column: 17, scope: !5271)
!5305 = !DILocation(line: 629, column: 5, scope: !5271)
!5306 = !DILocation(line: 629, column: 8, scope: !5271)
!5307 = !DILocation(line: 629, column: 15, scope: !5271)
!5308 = !DILocation(line: 630, column: 23, scope: !5271)
!5309 = !DILocation(line: 630, column: 5, scope: !5271)
!5310 = !DILocation(line: 630, column: 8, scope: !5271)
!5311 = !DILocation(line: 630, column: 21, scope: !5271)
!5312 = !DILocation(line: 631, column: 29, scope: !5271)
!5313 = !DILocation(line: 631, column: 38, scope: !5271)
!5314 = !DILocation(line: 631, column: 5, scope: !5271)
!5315 = !DILocation(line: 631, column: 8, scope: !5271)
!5316 = !DILocation(line: 631, column: 27, scope: !5271)
!5317 = !DILocation(line: 632, column: 21, scope: !5271)
!5318 = !DILocation(line: 632, column: 30, scope: !5271)
!5319 = !DILocation(line: 632, column: 28, scope: !5271)
!5320 = !DILocation(line: 632, column: 5, scope: !5271)
!5321 = !DILocation(line: 632, column: 8, scope: !5271)
!5322 = !DILocation(line: 632, column: 19, scope: !5271)
!5323 = !DILocation(line: 633, column: 5, scope: !5271)
!5324 = !DILocation(line: 633, column: 8, scope: !5271)
!5325 = !DILocation(line: 633, column: 14, scope: !5271)
!5326 = !DILocation(line: 639, column: 12, scope: !5271)
!5327 = !DILocation(line: 639, column: 5, scope: !5271)
!5328 = distinct !DISubprogram(name: "decode_audio_specific_config_gb", scope: !1803, file: !1803, line: 968, type: !5329, isLocal: true, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!1012, !2065, !1262, !3564, !2043, !1012, !1012}
!5331 = !DILocalVariable(name: "ac", arg: 1, scope: !5328, file: !1803, line: 968, type: !2065)
!5332 = !DILocation(line: 968, column: 56, scope: !5328)
!5333 = !DILocalVariable(name: "avctx", arg: 2, scope: !5328, file: !1803, line: 969, type: !1262)
!5334 = !DILocation(line: 969, column: 60, scope: !5328)
!5335 = !DILocalVariable(name: "m4ac", arg: 3, scope: !5328, file: !1803, line: 970, type: !3564)
!5336 = !DILocation(line: 970, column: 62, scope: !5328)
!5337 = !DILocalVariable(name: "gb", arg: 4, scope: !5328, file: !1803, line: 971, type: !2043)
!5338 = !DILocation(line: 971, column: 59, scope: !5328)
!5339 = !DILocalVariable(name: "get_bit_alignment", arg: 5, scope: !5328, file: !1803, line: 972, type: !1012)
!5340 = !DILocation(line: 972, column: 48, scope: !5328)
!5341 = !DILocalVariable(name: "sync_extension", arg: 6, scope: !5328, file: !1803, line: 973, type: !1012)
!5342 = !DILocation(line: 973, column: 48, scope: !5328)
!5343 = !DILocalVariable(name: "i", scope: !5328, file: !1803, line: 975, type: !1012)
!5344 = !DILocation(line: 975, column: 9, scope: !5328)
!5345 = !DILocalVariable(name: "ret", scope: !5328, file: !1803, line: 975, type: !1012)
!5346 = !DILocation(line: 975, column: 12, scope: !5328)
!5347 = !DILocalVariable(name: "gbc", scope: !5328, file: !1803, line: 976, type: !2044)
!5348 = !DILocation(line: 976, column: 19, scope: !5328)
!5349 = !DILocation(line: 976, column: 26, scope: !5328)
!5350 = !DILocation(line: 976, column: 25, scope: !5328)
!5351 = !DILocation(line: 978, column: 42, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5328, file: !1803, line: 978, column: 9)
!5353 = !DILocation(line: 978, column: 54, scope: !5352)
!5354 = !DILocation(line: 978, column: 14, scope: !5352)
!5355 = !DILocation(line: 978, column: 12, scope: !5352)
!5356 = !DILocation(line: 978, column: 71, scope: !5352)
!5357 = !DILocation(line: 978, column: 9, scope: !5328)
!5358 = !DILocation(line: 979, column: 9, scope: !5352)
!5359 = !DILocation(line: 981, column: 9, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5328, file: !1803, line: 981, column: 9)
!5361 = !DILocation(line: 981, column: 15, scope: !5360)
!5362 = !DILocation(line: 981, column: 30, scope: !5360)
!5363 = !DILocation(line: 981, column: 9, scope: !5328)
!5364 = !DILocation(line: 982, column: 16, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5360, file: !1803, line: 981, column: 36)
!5366 = !DILocation(line: 984, column: 16, scope: !5365)
!5367 = !DILocation(line: 984, column: 22, scope: !5365)
!5368 = !DILocation(line: 982, column: 9, scope: !5365)
!5369 = !DILocation(line: 985, column: 9, scope: !5365)
!5370 = !DILocation(line: 987, column: 9, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5328, file: !1803, line: 987, column: 9)
!5372 = !DILocation(line: 987, column: 15, scope: !5371)
!5373 = !DILocation(line: 987, column: 27, scope: !5371)
!5374 = !DILocation(line: 987, column: 44, scope: !5371)
!5375 = !DILocation(line: 988, column: 10, scope: !5371)
!5376 = !DILocation(line: 988, column: 16, scope: !5371)
!5377 = !DILocation(line: 988, column: 31, scope: !5371)
!5378 = !DILocation(line: 988, column: 35, scope: !5371)
!5379 = !DILocation(line: 988, column: 38, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !5371, file: !1803, discriminator: 1)
!5381 = !DILocation(line: 988, column: 44, scope: !5380)
!5382 = !DILocation(line: 988, column: 59, scope: !5380)
!5383 = !DILocation(line: 987, column: 9, scope: !5384)
!5384 = !DILexicalBlockFile(scope: !5328, file: !1803, discriminator: 1)
!5385 = !DILocation(line: 989, column: 16, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5371, file: !1803, line: 988, column: 65)
!5387 = !DILocation(line: 991, column: 16, scope: !5386)
!5388 = !DILocation(line: 991, column: 22, scope: !5386)
!5389 = !DILocation(line: 989, column: 9, scope: !5386)
!5390 = !DILocation(line: 992, column: 9, scope: !5386)
!5391 = !DILocation(line: 995, column: 20, scope: !5328)
!5392 = !DILocation(line: 995, column: 24, scope: !5328)
!5393 = !DILocation(line: 995, column: 5, scope: !5328)
!5394 = !DILocation(line: 997, column: 13, scope: !5328)
!5395 = !DILocation(line: 997, column: 19, scope: !5328)
!5396 = !DILocation(line: 997, column: 5, scope: !5328)
!5397 = !DILocation(line: 1004, column: 46, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !1803, line: 1004, column: 13)
!5399 = distinct !DILexicalBlock(scope: !5328, file: !1803, line: 997, column: 32)
!5400 = !DILocation(line: 1004, column: 50, scope: !5398)
!5401 = !DILocation(line: 1004, column: 57, scope: !5398)
!5402 = !DILocation(line: 1004, column: 61, scope: !5398)
!5403 = !DILocation(line: 1005, column: 45, scope: !5398)
!5404 = !DILocation(line: 1005, column: 51, scope: !5398)
!5405 = !DILocation(line: 1005, column: 57, scope: !5398)
!5406 = !DILocation(line: 1004, column: 20, scope: !5398)
!5407 = !DILocation(line: 1004, column: 18, scope: !5398)
!5408 = !DILocation(line: 1005, column: 71, scope: !5398)
!5409 = !DILocation(line: 1004, column: 13, scope: !5399)
!5410 = !DILocation(line: 1006, column: 20, scope: !5398)
!5411 = !DILocation(line: 1006, column: 13, scope: !5398)
!5412 = !DILocation(line: 1007, column: 9, scope: !5399)
!5413 = !DILocation(line: 1009, column: 47, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5399, file: !1803, line: 1009, column: 13)
!5415 = !DILocation(line: 1009, column: 51, scope: !5414)
!5416 = !DILocation(line: 1009, column: 58, scope: !5414)
!5417 = !DILocation(line: 1010, column: 47, scope: !5414)
!5418 = !DILocation(line: 1010, column: 53, scope: !5414)
!5419 = !DILocation(line: 1010, column: 59, scope: !5414)
!5420 = !DILocation(line: 1009, column: 20, scope: !5414)
!5421 = !DILocation(line: 1009, column: 18, scope: !5414)
!5422 = !DILocation(line: 1010, column: 73, scope: !5414)
!5423 = !DILocation(line: 1009, column: 13, scope: !5399)
!5424 = !DILocation(line: 1011, column: 20, scope: !5414)
!5425 = !DILocation(line: 1011, column: 13, scope: !5414)
!5426 = !DILocation(line: 1012, column: 9, scope: !5399)
!5427 = !DILocation(line: 1014, column: 39, scope: !5399)
!5428 = !DILocation(line: 1016, column: 39, scope: !5399)
!5429 = !DILocation(line: 1016, column: 45, scope: !5399)
!5430 = !DILocation(line: 1016, column: 49, scope: !5399)
!5431 = !DILocation(line: 1017, column: 39, scope: !5399)
!5432 = !DILocation(line: 1017, column: 45, scope: !5399)
!5433 = !DILocation(line: 1014, column: 9, scope: !5399)
!5434 = !DILocation(line: 1018, column: 9, scope: !5399)
!5435 = !DILocation(line: 1021, column: 5, scope: !5328)
!5436 = distinct !{!5436, !5435}
!5437 = !DILocation(line: 1021, column: 199, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5439, file: !1803, discriminator: 1)
!5439 = distinct !DILexicalBlock(scope: !5328, file: !1803, line: 1021, column: 8)
!5440 = !DILocation(line: 1027, column: 27, scope: !5328)
!5441 = !DILocation(line: 1027, column: 12, scope: !5328)
!5442 = !DILocation(line: 1027, column: 5, scope: !5328)
!5443 = !DILocation(line: 1028, column: 1, scope: !5328)
!5444 = distinct !DISubprogram(name: "skip_bits_long", scope: !2045, file: !2045, line: 293, type: !5445, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{null, !2043, !1012}
!5447 = !DILocalVariable(name: "a", arg: 1, scope: !5448, file: !5449, line: 127, type: !1012)
!5448 = distinct !DISubprogram(name: "av_clip_c", scope: !5449, file: !5449, line: 127, type: !5450, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5449 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!1012, !1012, !1012, !1012}
!5452 = !DILocation(line: 127, column: 87, scope: !5448, inlinedAt: !5453)
!5453 = distinct !DILocation(line: 301, column: 17, scope: !5444)
!5454 = !DILocalVariable(name: "amin", arg: 2, scope: !5448, file: !5449, line: 127, type: !1012)
!5455 = !DILocation(line: 127, column: 94, scope: !5448, inlinedAt: !5453)
!5456 = !DILocalVariable(name: "amax", arg: 3, scope: !5448, file: !5449, line: 127, type: !1012)
!5457 = !DILocation(line: 127, column: 104, scope: !5448, inlinedAt: !5453)
!5458 = !DILocalVariable(name: "s", arg: 1, scope: !5444, file: !2045, line: 293, type: !2043)
!5459 = !DILocation(line: 293, column: 50, scope: !5444)
!5460 = !DILocalVariable(name: "n", arg: 2, scope: !5444, file: !2045, line: 293, type: !1012)
!5461 = !DILocation(line: 293, column: 57, scope: !5444)
!5462 = !DILocation(line: 301, column: 27, scope: !5444)
!5463 = !DILocation(line: 301, column: 31, scope: !5444)
!5464 = !DILocation(line: 301, column: 34, scope: !5444)
!5465 = !DILocation(line: 301, column: 30, scope: !5444)
!5466 = !DILocation(line: 301, column: 41, scope: !5444)
!5467 = !DILocation(line: 301, column: 44, scope: !5444)
!5468 = !DILocation(line: 301, column: 65, scope: !5444)
!5469 = !DILocation(line: 301, column: 68, scope: !5444)
!5470 = !DILocation(line: 301, column: 63, scope: !5444)
!5471 = !DILocation(line: 301, column: 17, scope: !5444)
!5472 = !DILocation(line: 132, column: 9, scope: !5473, inlinedAt: !5453)
!5473 = distinct !DILexicalBlock(scope: !5448, file: !5449, line: 132, column: 9)
!5474 = !DILocation(line: 132, column: 13, scope: !5473, inlinedAt: !5453)
!5475 = !DILocation(line: 132, column: 11, scope: !5473, inlinedAt: !5453)
!5476 = !DILocation(line: 132, column: 9, scope: !5448, inlinedAt: !5453)
!5477 = !DILocation(line: 132, column: 26, scope: !5478, inlinedAt: !5453)
!5478 = !DILexicalBlockFile(scope: !5473, file: !5449, discriminator: 1)
!5479 = !DILocation(line: 132, column: 19, scope: !5478, inlinedAt: !5453)
!5480 = !DILocation(line: 133, column: 14, scope: !5481, inlinedAt: !5453)
!5481 = distinct !DILexicalBlock(scope: !5473, file: !5449, line: 133, column: 14)
!5482 = !DILocation(line: 133, column: 18, scope: !5481, inlinedAt: !5453)
!5483 = !DILocation(line: 133, column: 16, scope: !5481, inlinedAt: !5453)
!5484 = !DILocation(line: 133, column: 14, scope: !5473, inlinedAt: !5453)
!5485 = !DILocation(line: 133, column: 31, scope: !5486, inlinedAt: !5453)
!5486 = !DILexicalBlockFile(scope: !5481, file: !5449, discriminator: 1)
!5487 = !DILocation(line: 133, column: 24, scope: !5486, inlinedAt: !5453)
!5488 = !DILocation(line: 134, column: 17, scope: !5481, inlinedAt: !5453)
!5489 = !DILocation(line: 134, column: 10, scope: !5481, inlinedAt: !5453)
!5490 = !DILocation(line: 135, column: 1, scope: !5448, inlinedAt: !5453)
!5491 = !DILocation(line: 301, column: 5, scope: !5444)
!5492 = !DILocation(line: 301, column: 8, scope: !5444)
!5493 = !DILocation(line: 301, column: 14, scope: !5444)
!5494 = !DILocation(line: 304, column: 1, scope: !5444)
!5495 = distinct !DISubprogram(name: "decode_ga_specific_config", scope: !1803, file: !1803, line: 804, type: !5496, isLocal: true, isDefinition: true, scopeLine: 809, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!1012, !2065, !1262, !2043, !1012, !3564, !1012}
!5498 = !DILocalVariable(name: "ac", arg: 1, scope: !5495, file: !1803, line: 804, type: !2065)
!5499 = !DILocation(line: 804, column: 50, scope: !5495)
!5500 = !DILocalVariable(name: "avctx", arg: 2, scope: !5495, file: !1803, line: 804, type: !1262)
!5501 = !DILocation(line: 804, column: 70, scope: !5495)
!5502 = !DILocalVariable(name: "gb", arg: 3, scope: !5495, file: !1803, line: 805, type: !2043)
!5503 = !DILocation(line: 805, column: 53, scope: !5495)
!5504 = !DILocalVariable(name: "get_bit_alignment", arg: 4, scope: !5495, file: !1803, line: 806, type: !1012)
!5505 = !DILocation(line: 806, column: 42, scope: !5495)
!5506 = !DILocalVariable(name: "m4ac", arg: 5, scope: !5495, file: !1803, line: 807, type: !3564)
!5507 = !DILocation(line: 807, column: 56, scope: !5495)
!5508 = !DILocalVariable(name: "channel_config", arg: 6, scope: !5495, file: !1803, line: 808, type: !1012)
!5509 = !DILocation(line: 808, column: 42, scope: !5495)
!5510 = !DILocalVariable(name: "extension_flag", scope: !5495, file: !1803, line: 810, type: !1012)
!5511 = !DILocation(line: 810, column: 9, scope: !5495)
!5512 = !DILocalVariable(name: "ret", scope: !5495, file: !1803, line: 810, type: !1012)
!5513 = !DILocation(line: 810, column: 25, scope: !5495)
!5514 = !DILocalVariable(name: "ep_config", scope: !5495, file: !1803, line: 810, type: !1012)
!5515 = !DILocation(line: 810, column: 30, scope: !5495)
!5516 = !DILocalVariable(name: "res_flags", scope: !5495, file: !1803, line: 810, type: !1012)
!5517 = !DILocation(line: 810, column: 41, scope: !5495)
!5518 = !DILocalVariable(name: "layout_map", scope: !5495, file: !1803, line: 811, type: !2630)
!5519 = !DILocation(line: 811, column: 13, scope: !5495)
!5520 = !DILocalVariable(name: "tags", scope: !5495, file: !1803, line: 812, type: !1012)
!5521 = !DILocation(line: 812, column: 9, scope: !5495)
!5522 = !DILocation(line: 821, column: 42, scope: !5495)
!5523 = !DILocation(line: 821, column: 32, scope: !5495)
!5524 = !DILocation(line: 821, column: 5, scope: !5495)
!5525 = !DILocation(line: 821, column: 11, scope: !5495)
!5526 = !DILocation(line: 821, column: 30, scope: !5495)
!5527 = !DILocation(line: 822, column: 9, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 822, column: 9)
!5529 = !DILocation(line: 822, column: 15, scope: !5528)
!5530 = !DILocation(line: 822, column: 34, scope: !5528)
!5531 = !DILocation(line: 822, column: 37, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !5528, file: !1803, discriminator: 1)
!5533 = !DILocation(line: 822, column: 43, scope: !5532)
!5534 = !DILocation(line: 822, column: 47, scope: !5532)
!5535 = !DILocation(line: 822, column: 9, scope: !5532)
!5536 = !DILocation(line: 823, column: 37, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5528, file: !1803, line: 822, column: 53)
!5538 = !DILocation(line: 823, column: 7, scope: !5537)
!5539 = !DILocation(line: 824, column: 11, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5537, file: !1803, line: 824, column: 11)
!5541 = !DILocation(line: 824, column: 11, scope: !5537)
!5542 = !DILocation(line: 824, column: 15, scope: !5543)
!5543 = !DILexicalBlockFile(scope: !5540, file: !1803, discriminator: 1)
!5544 = !DILocation(line: 824, column: 19, scope: !5543)
!5545 = !DILocation(line: 824, column: 34, scope: !5543)
!5546 = !DILocation(line: 825, column: 7, scope: !5537)
!5547 = !DILocation(line: 825, column: 13, scope: !5537)
!5548 = !DILocation(line: 825, column: 17, scope: !5537)
!5549 = !DILocation(line: 826, column: 7, scope: !5537)
!5550 = !DILocation(line: 826, column: 13, scope: !5537)
!5551 = !DILocation(line: 826, column: 16, scope: !5537)
!5552 = !DILocation(line: 827, column: 5, scope: !5537)
!5553 = !DILocation(line: 830, column: 19, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 830, column: 9)
!5555 = !DILocation(line: 830, column: 9, scope: !5554)
!5556 = !DILocation(line: 830, column: 9, scope: !5495)
!5557 = !DILocation(line: 831, column: 19, scope: !5554)
!5558 = !DILocation(line: 831, column: 9, scope: !5554)
!5559 = !DILocation(line: 832, column: 32, scope: !5495)
!5560 = !DILocation(line: 832, column: 22, scope: !5495)
!5561 = !DILocation(line: 832, column: 20, scope: !5495)
!5562 = !DILocation(line: 834, column: 9, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 834, column: 9)
!5564 = !DILocation(line: 834, column: 15, scope: !5563)
!5565 = !DILocation(line: 834, column: 27, scope: !5563)
!5566 = !DILocation(line: 834, column: 47, scope: !5563)
!5567 = !DILocation(line: 835, column: 9, scope: !5563)
!5568 = !DILocation(line: 835, column: 15, scope: !5563)
!5569 = !DILocation(line: 835, column: 27, scope: !5563)
!5570 = !DILocation(line: 834, column: 9, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5495, file: !1803, discriminator: 1)
!5572 = !DILocation(line: 836, column: 19, scope: !5563)
!5573 = !DILocation(line: 836, column: 9, scope: !5563)
!5574 = !DILocation(line: 838, column: 9, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 838, column: 9)
!5576 = !DILocation(line: 838, column: 24, scope: !5575)
!5577 = !DILocation(line: 838, column: 9, scope: !5495)
!5578 = !DILocation(line: 839, column: 19, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5575, file: !1803, line: 838, column: 30)
!5580 = !DILocation(line: 839, column: 9, scope: !5579)
!5581 = !DILocation(line: 840, column: 27, scope: !5579)
!5582 = !DILocation(line: 840, column: 34, scope: !5579)
!5583 = !DILocation(line: 840, column: 40, scope: !5579)
!5584 = !DILocation(line: 840, column: 52, scope: !5579)
!5585 = !DILocation(line: 840, column: 56, scope: !5579)
!5586 = !DILocation(line: 840, column: 16, scope: !5579)
!5587 = !DILocation(line: 840, column: 14, scope: !5579)
!5588 = !DILocation(line: 841, column: 13, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5579, file: !1803, line: 841, column: 13)
!5590 = !DILocation(line: 841, column: 18, scope: !5589)
!5591 = !DILocation(line: 841, column: 13, scope: !5579)
!5592 = !DILocation(line: 842, column: 20, scope: !5589)
!5593 = !DILocation(line: 842, column: 13, scope: !5589)
!5594 = !DILocation(line: 843, column: 5, scope: !5579)
!5595 = !DILocation(line: 844, column: 47, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !1803, line: 844, column: 13)
!5597 = distinct !DILexicalBlock(scope: !5575, file: !1803, line: 843, column: 12)
!5598 = !DILocation(line: 844, column: 54, scope: !5596)
!5599 = !DILocation(line: 845, column: 54, scope: !5596)
!5600 = !DILocation(line: 844, column: 20, scope: !5596)
!5601 = !DILocation(line: 844, column: 18, scope: !5596)
!5602 = !DILocation(line: 844, column: 13, scope: !5597)
!5603 = !DILocation(line: 846, column: 20, scope: !5596)
!5604 = !DILocation(line: 846, column: 13, scope: !5596)
!5605 = !DILocation(line: 849, column: 24, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 849, column: 9)
!5607 = !DILocation(line: 849, column: 36, scope: !5606)
!5608 = !DILocation(line: 849, column: 9, scope: !5606)
!5609 = !DILocation(line: 849, column: 42, scope: !5606)
!5610 = !DILocation(line: 849, column: 9, scope: !5495)
!5611 = !DILocation(line: 850, column: 9, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !1803, line: 849, column: 47)
!5613 = !DILocation(line: 850, column: 15, scope: !5612)
!5614 = !DILocation(line: 850, column: 18, scope: !5612)
!5615 = !DILocation(line: 851, column: 5, scope: !5612)
!5616 = !DILocation(line: 851, column: 16, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5618, file: !1803, discriminator: 1)
!5618 = distinct !DILexicalBlock(scope: !5606, file: !1803, line: 851, column: 16)
!5619 = !DILocation(line: 851, column: 22, scope: !5617)
!5620 = !DILocation(line: 851, column: 26, scope: !5617)
!5621 = !DILocation(line: 851, column: 31, scope: !5617)
!5622 = !DILocation(line: 851, column: 34, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !5618, file: !1803, discriminator: 2)
!5624 = !DILocation(line: 851, column: 40, scope: !5623)
!5625 = !DILocation(line: 851, column: 43, scope: !5623)
!5626 = !DILocation(line: 851, column: 16, scope: !5623)
!5627 = !DILocation(line: 852, column: 9, scope: !5618)
!5628 = !DILocation(line: 852, column: 15, scope: !5618)
!5629 = !DILocation(line: 852, column: 18, scope: !5618)
!5630 = !DILocation(line: 854, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 854, column: 9)
!5632 = !DILocation(line: 854, column: 12, scope: !5631)
!5633 = !DILocation(line: 854, column: 39, scope: !5634)
!5634 = !DILexicalBlockFile(scope: !5631, file: !1803, discriminator: 1)
!5635 = !DILocation(line: 854, column: 43, scope: !5634)
!5636 = !DILocation(line: 854, column: 55, scope: !5634)
!5637 = !DILocation(line: 854, column: 22, scope: !5634)
!5638 = !DILocation(line: 854, column: 20, scope: !5634)
!5639 = !DILocation(line: 854, column: 9, scope: !5634)
!5640 = !DILocation(line: 855, column: 16, scope: !5631)
!5641 = !DILocation(line: 855, column: 9, scope: !5631)
!5642 = !DILocation(line: 857, column: 9, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 857, column: 9)
!5644 = !DILocation(line: 857, column: 9, scope: !5495)
!5645 = !DILocation(line: 858, column: 17, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5643, file: !1803, line: 857, column: 25)
!5647 = !DILocation(line: 858, column: 23, scope: !5646)
!5648 = !DILocation(line: 858, column: 9, scope: !5646)
!5649 = !DILocation(line: 860, column: 23, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5646, file: !1803, line: 858, column: 36)
!5651 = !DILocation(line: 860, column: 13, scope: !5650)
!5652 = !DILocation(line: 861, column: 23, scope: !5650)
!5653 = !DILocation(line: 861, column: 13, scope: !5650)
!5654 = !DILocation(line: 862, column: 13, scope: !5650)
!5655 = !DILocation(line: 867, column: 34, scope: !5650)
!5656 = !DILocation(line: 867, column: 25, scope: !5650)
!5657 = !DILocation(line: 867, column: 23, scope: !5650)
!5658 = !DILocation(line: 868, column: 17, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5650, file: !1803, line: 868, column: 17)
!5660 = !DILocation(line: 868, column: 17, scope: !5650)
!5661 = !DILocation(line: 869, column: 47, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5659, file: !1803, line: 868, column: 28)
!5663 = !DILocation(line: 871, column: 47, scope: !5662)
!5664 = !DILocation(line: 869, column: 17, scope: !5662)
!5665 = !DILocation(line: 872, column: 17, scope: !5662)
!5666 = !DILocation(line: 874, column: 13, scope: !5650)
!5667 = !DILocation(line: 876, column: 20, scope: !5646)
!5668 = !DILocation(line: 876, column: 9, scope: !5646)
!5669 = !DILocation(line: 877, column: 5, scope: !5646)
!5670 = !DILocation(line: 878, column: 13, scope: !5495)
!5671 = !DILocation(line: 878, column: 19, scope: !5495)
!5672 = !DILocation(line: 878, column: 5, scope: !5495)
!5673 = !DILocation(line: 883, column: 30, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5495, file: !1803, line: 878, column: 32)
!5675 = !DILocation(line: 883, column: 21, scope: !5674)
!5676 = !DILocation(line: 883, column: 19, scope: !5674)
!5677 = !DILocation(line: 884, column: 13, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !1803, line: 884, column: 13)
!5679 = !DILocation(line: 884, column: 13, scope: !5674)
!5680 = !DILocation(line: 885, column: 43, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5678, file: !1803, line: 884, column: 24)
!5682 = !DILocation(line: 886, column: 58, scope: !5681)
!5683 = !DILocation(line: 885, column: 13, scope: !5681)
!5684 = !DILocation(line: 887, column: 13, scope: !5681)
!5685 = !DILocation(line: 889, column: 5, scope: !5674)
!5686 = !DILocation(line: 890, column: 5, scope: !5495)
!5687 = !DILocation(line: 891, column: 1, scope: !5495)
!5688 = distinct !DISubprogram(name: "decode_eld_specific_config", scope: !1803, file: !1803, line: 893, type: !5689, isLocal: true, isDefinition: true, scopeLine: 897, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!1012, !2065, !1262, !2043, !3564, !1012}
!5691 = !DILocalVariable(name: "ac", arg: 1, scope: !5688, file: !1803, line: 893, type: !2065)
!5692 = !DILocation(line: 893, column: 51, scope: !5688)
!5693 = !DILocalVariable(name: "avctx", arg: 2, scope: !5688, file: !1803, line: 893, type: !1262)
!5694 = !DILocation(line: 893, column: 71, scope: !5688)
!5695 = !DILocalVariable(name: "gb", arg: 3, scope: !5688, file: !1803, line: 894, type: !2043)
!5696 = !DILocation(line: 894, column: 53, scope: !5688)
!5697 = !DILocalVariable(name: "m4ac", arg: 4, scope: !5688, file: !1803, line: 895, type: !3564)
!5698 = !DILocation(line: 895, column: 56, scope: !5688)
!5699 = !DILocalVariable(name: "channel_config", arg: 5, scope: !5688, file: !1803, line: 896, type: !1012)
!5700 = !DILocation(line: 896, column: 42, scope: !5688)
!5701 = !DILocalVariable(name: "ret", scope: !5688, file: !1803, line: 898, type: !1012)
!5702 = !DILocation(line: 898, column: 9, scope: !5688)
!5703 = !DILocalVariable(name: "ep_config", scope: !5688, file: !1803, line: 898, type: !1012)
!5704 = !DILocation(line: 898, column: 14, scope: !5688)
!5705 = !DILocalVariable(name: "res_flags", scope: !5688, file: !1803, line: 898, type: !1012)
!5706 = !DILocation(line: 898, column: 25, scope: !5688)
!5707 = !DILocalVariable(name: "layout_map", scope: !5688, file: !1803, line: 899, type: !2630)
!5708 = !DILocation(line: 899, column: 13, scope: !5688)
!5709 = !DILocalVariable(name: "tags", scope: !5688, file: !1803, line: 900, type: !1012)
!5710 = !DILocation(line: 900, column: 9, scope: !5688)
!5711 = !DILocalVariable(name: "ELDEXT_TERM", scope: !5688, file: !1803, line: 901, type: !1165)
!5712 = !DILocation(line: 901, column: 15, scope: !5688)
!5713 = !DILocation(line: 903, column: 5, scope: !5688)
!5714 = !DILocation(line: 903, column: 11, scope: !5688)
!5715 = !DILocation(line: 903, column: 14, scope: !5688)
!5716 = !DILocation(line: 904, column: 5, scope: !5688)
!5717 = !DILocation(line: 904, column: 11, scope: !5688)
!5718 = !DILocation(line: 904, column: 15, scope: !5688)
!5719 = !DILocation(line: 911, column: 42, scope: !5688)
!5720 = !DILocation(line: 911, column: 32, scope: !5688)
!5721 = !DILocation(line: 911, column: 5, scope: !5688)
!5722 = !DILocation(line: 911, column: 11, scope: !5688)
!5723 = !DILocation(line: 911, column: 30, scope: !5688)
!5724 = !DILocation(line: 913, column: 26, scope: !5688)
!5725 = !DILocation(line: 913, column: 17, scope: !5688)
!5726 = !DILocation(line: 913, column: 15, scope: !5688)
!5727 = !DILocation(line: 914, column: 9, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 914, column: 9)
!5729 = !DILocation(line: 914, column: 9, scope: !5688)
!5730 = !DILocation(line: 915, column: 39, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !1803, line: 914, column: 20)
!5732 = !DILocation(line: 917, column: 39, scope: !5731)
!5733 = !DILocation(line: 915, column: 9, scope: !5731)
!5734 = !DILocation(line: 918, column: 9, scope: !5731)
!5735 = !DILocation(line: 921, column: 19, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 921, column: 9)
!5737 = !DILocation(line: 921, column: 9, scope: !5736)
!5738 = !DILocation(line: 921, column: 9, scope: !5688)
!5739 = !DILocation(line: 922, column: 39, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !1803, line: 921, column: 24)
!5741 = !DILocation(line: 922, column: 9, scope: !5740)
!5742 = !DILocation(line: 924, column: 9, scope: !5740)
!5743 = !DILocation(line: 927, column: 5, scope: !5688)
!5744 = !DILocation(line: 927, column: 21, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5688, file: !1803, discriminator: 1)
!5746 = !DILocation(line: 927, column: 12, scope: !5745)
!5747 = !DILocation(line: 927, column: 28, scope: !5745)
!5748 = !DILocation(line: 927, column: 5, scope: !5745)
!5749 = !DILocalVariable(name: "len", scope: !5750, file: !1803, line: 928, type: !1012)
!5750 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 927, column: 44)
!5751 = !DILocation(line: 928, column: 13, scope: !5750)
!5752 = !DILocation(line: 928, column: 28, scope: !5750)
!5753 = !DILocation(line: 928, column: 19, scope: !5750)
!5754 = !DILocation(line: 929, column: 13, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5750, file: !1803, line: 929, column: 13)
!5756 = !DILocation(line: 929, column: 17, scope: !5755)
!5757 = !DILocation(line: 929, column: 13, scope: !5750)
!5758 = !DILocation(line: 930, column: 29, scope: !5755)
!5759 = !DILocation(line: 930, column: 20, scope: !5755)
!5760 = !DILocation(line: 930, column: 17, scope: !5755)
!5761 = !DILocation(line: 930, column: 13, scope: !5755)
!5762 = !DILocation(line: 931, column: 13, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5750, file: !1803, line: 931, column: 13)
!5764 = !DILocation(line: 931, column: 17, scope: !5763)
!5765 = !DILocation(line: 931, column: 13, scope: !5750)
!5766 = !DILocation(line: 932, column: 29, scope: !5763)
!5767 = !DILocation(line: 932, column: 20, scope: !5763)
!5768 = !DILocation(line: 932, column: 17, scope: !5763)
!5769 = !DILocation(line: 932, column: 13, scope: !5763)
!5770 = !DILocation(line: 933, column: 27, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5750, file: !1803, line: 933, column: 13)
!5772 = !DILocation(line: 933, column: 13, scope: !5771)
!5773 = !DILocation(line: 933, column: 33, scope: !5771)
!5774 = !DILocation(line: 933, column: 37, scope: !5771)
!5775 = !DILocation(line: 933, column: 41, scope: !5771)
!5776 = !DILocation(line: 933, column: 31, scope: !5771)
!5777 = !DILocation(line: 933, column: 13, scope: !5750)
!5778 = !DILocation(line: 934, column: 20, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5771, file: !1803, line: 933, column: 46)
!5780 = !DILocation(line: 934, column: 13, scope: !5779)
!5781 = !DILocation(line: 935, column: 13, scope: !5779)
!5782 = !DILocation(line: 937, column: 24, scope: !5750)
!5783 = !DILocation(line: 937, column: 32, scope: !5750)
!5784 = !DILocation(line: 937, column: 30, scope: !5750)
!5785 = !DILocation(line: 937, column: 9, scope: !5750)
!5786 = !DILocation(line: 927, column: 5, scope: !5787)
!5787 = !DILexicalBlockFile(scope: !5688, file: !1803, discriminator: 2)
!5788 = distinct !{!5788, !5743}
!5789 = !DILocation(line: 940, column: 43, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 940, column: 9)
!5791 = !DILocation(line: 940, column: 50, scope: !5790)
!5792 = !DILocation(line: 941, column: 50, scope: !5790)
!5793 = !DILocation(line: 940, column: 16, scope: !5790)
!5794 = !DILocation(line: 940, column: 14, scope: !5790)
!5795 = !DILocation(line: 940, column: 9, scope: !5688)
!5796 = !DILocation(line: 942, column: 16, scope: !5790)
!5797 = !DILocation(line: 942, column: 9, scope: !5790)
!5798 = !DILocation(line: 944, column: 9, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 944, column: 9)
!5800 = !DILocation(line: 944, column: 12, scope: !5799)
!5801 = !DILocation(line: 944, column: 39, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5799, file: !1803, discriminator: 1)
!5803 = !DILocation(line: 944, column: 43, scope: !5802)
!5804 = !DILocation(line: 944, column: 55, scope: !5802)
!5805 = !DILocation(line: 944, column: 22, scope: !5802)
!5806 = !DILocation(line: 944, column: 20, scope: !5802)
!5807 = !DILocation(line: 944, column: 9, scope: !5802)
!5808 = !DILocation(line: 945, column: 16, scope: !5799)
!5809 = !DILocation(line: 945, column: 9, scope: !5799)
!5810 = !DILocation(line: 947, column: 26, scope: !5688)
!5811 = !DILocation(line: 947, column: 17, scope: !5688)
!5812 = !DILocation(line: 947, column: 15, scope: !5688)
!5813 = !DILocation(line: 948, column: 9, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5688, file: !1803, line: 948, column: 9)
!5815 = !DILocation(line: 948, column: 9, scope: !5688)
!5816 = !DILocation(line: 949, column: 39, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !1803, line: 948, column: 20)
!5818 = !DILocation(line: 950, column: 54, scope: !5817)
!5819 = !DILocation(line: 949, column: 9, scope: !5817)
!5820 = !DILocation(line: 951, column: 9, scope: !5817)
!5821 = !DILocation(line: 953, column: 5, scope: !5688)
!5822 = !DILocation(line: 954, column: 1, scope: !5688)
!5823 = distinct !DISubprogram(name: "get_bits_count", scope: !2045, file: !2045, line: 219, type: !5824, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5824 = !DISubroutineType(types: !5825)
!5825 = !{!1012, !5826}
!5826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5827, size: 64, align: 64)
!5827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2044)
!5828 = !DILocalVariable(name: "s", arg: 1, scope: !5823, file: !2045, line: 219, type: !5826)
!5829 = !DILocation(line: 219, column: 55, scope: !5823)
!5830 = !DILocation(line: 224, column: 12, scope: !5823)
!5831 = !DILocation(line: 224, column: 15, scope: !5823)
!5832 = !DILocation(line: 224, column: 5, scope: !5823)
!5833 = distinct !DISubprogram(name: "get_bits1", scope: !2045, file: !2045, line: 487, type: !5834, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!1013, !2043}
!5836 = !DILocalVariable(name: "s", arg: 1, scope: !5833, file: !2045, line: 487, type: !2043)
!5837 = !DILocation(line: 487, column: 53, scope: !5833)
!5838 = !DILocalVariable(name: "index", scope: !5833, file: !2045, line: 499, type: !1013)
!5839 = !DILocation(line: 499, column: 18, scope: !5833)
!5840 = !DILocation(line: 499, column: 26, scope: !5833)
!5841 = !DILocation(line: 499, column: 29, scope: !5833)
!5842 = !DILocalVariable(name: "result", scope: !5833, file: !2045, line: 500, type: !1029)
!5843 = !DILocation(line: 500, column: 13, scope: !5833)
!5844 = !DILocation(line: 500, column: 32, scope: !5833)
!5845 = !DILocation(line: 500, column: 38, scope: !5833)
!5846 = !DILocation(line: 500, column: 22, scope: !5833)
!5847 = !DILocation(line: 500, column: 25, scope: !5833)
!5848 = !DILocation(line: 505, column: 16, scope: !5833)
!5849 = !DILocation(line: 505, column: 22, scope: !5833)
!5850 = !DILocation(line: 505, column: 12, scope: !5833)
!5851 = !DILocation(line: 506, column: 12, scope: !5833)
!5852 = !DILocation(line: 509, column: 9, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5833, file: !2045, line: 509, column: 9)
!5854 = !DILocation(line: 509, column: 12, scope: !5853)
!5855 = !DILocation(line: 509, column: 20, scope: !5853)
!5856 = !DILocation(line: 509, column: 23, scope: !5853)
!5857 = !DILocation(line: 509, column: 18, scope: !5853)
!5858 = !DILocation(line: 509, column: 9, scope: !5833)
!5859 = !DILocation(line: 511, column: 14, scope: !5853)
!5860 = !DILocation(line: 511, column: 9, scope: !5853)
!5861 = !DILocation(line: 512, column: 16, scope: !5833)
!5862 = !DILocation(line: 512, column: 5, scope: !5833)
!5863 = !DILocation(line: 512, column: 8, scope: !5833)
!5864 = !DILocation(line: 512, column: 14, scope: !5833)
!5865 = !DILocation(line: 514, column: 12, scope: !5833)
!5866 = !DILocation(line: 514, column: 5, scope: !5833)
!5867 = distinct !DISubprogram(name: "skip_bits", scope: !2045, file: !2045, line: 460, type: !5445, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5868 = !DILocalVariable(name: "s", arg: 1, scope: !5867, file: !2045, line: 460, type: !2043)
!5869 = !DILocation(line: 460, column: 45, scope: !5867)
!5870 = !DILocalVariable(name: "n", arg: 2, scope: !5867, file: !2045, line: 460, type: !1012)
!5871 = !DILocation(line: 460, column: 52, scope: !5867)
!5872 = !DILocalVariable(name: "re_index", scope: !5867, file: !2045, line: 481, type: !1013)
!5873 = !DILocation(line: 481, column: 18, scope: !5867)
!5874 = !DILocation(line: 481, column: 30, scope: !5867)
!5875 = !DILocation(line: 481, column: 34, scope: !5867)
!5876 = !DILocalVariable(name: "re_cache", scope: !5867, file: !2045, line: 481, type: !1013)
!5877 = !DILocation(line: 481, column: 78, scope: !5867)
!5878 = !DILocalVariable(name: "re_size_plus8", scope: !5867, file: !2045, line: 481, type: !1013)
!5879 = !DILocation(line: 481, column: 101, scope: !5867)
!5880 = !DILocation(line: 481, column: 118, scope: !5867)
!5881 = !DILocation(line: 481, column: 122, scope: !5867)
!5882 = !DILocation(line: 482, column: 18, scope: !5867)
!5883 = !DILocation(line: 482, column: 36, scope: !5867)
!5884 = !DILocation(line: 482, column: 48, scope: !5867)
!5885 = !DILocation(line: 482, column: 45, scope: !5867)
!5886 = !DILocation(line: 482, column: 33, scope: !5867)
!5887 = !DILocation(line: 482, column: 17, scope: !5867)
!5888 = !DILocation(line: 482, column: 55, scope: !5889)
!5889 = !DILexicalBlockFile(scope: !5867, file: !2045, discriminator: 1)
!5890 = !DILocation(line: 482, column: 67, scope: !5889)
!5891 = !DILocation(line: 482, column: 64, scope: !5889)
!5892 = !DILocation(line: 482, column: 17, scope: !5889)
!5893 = !DILocation(line: 482, column: 74, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5867, file: !2045, discriminator: 2)
!5895 = !DILocation(line: 482, column: 17, scope: !5894)
!5896 = !DILocation(line: 482, column: 17, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5867, file: !2045, discriminator: 3)
!5898 = !DILocation(line: 482, column: 14, scope: !5897)
!5899 = !DILocation(line: 483, column: 18, scope: !5867)
!5900 = !DILocation(line: 483, column: 6, scope: !5867)
!5901 = !DILocation(line: 483, column: 10, scope: !5867)
!5902 = !DILocation(line: 483, column: 16, scope: !5867)
!5903 = !DILocation(line: 485, column: 1, scope: !5867)
!5904 = distinct !DISubprogram(name: "decode_pce", scope: !1803, file: !1803, line: 734, type: !5905, isLocal: true, isDefinition: true, scopeLine: 737, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!1012, !1262, !3564, !3719, !2043, !1012}
!5907 = !DILocalVariable(name: "avctx", arg: 1, scope: !5904, file: !1803, line: 734, type: !1262)
!5908 = !DILocation(line: 734, column: 39, scope: !5904)
!5909 = !DILocalVariable(name: "m4ac", arg: 2, scope: !5904, file: !1803, line: 734, type: !3564)
!5910 = !DILocation(line: 734, column: 64, scope: !5904)
!5911 = !DILocalVariable(name: "layout_map", arg: 3, scope: !5904, file: !1803, line: 735, type: !3719)
!5912 = !DILocation(line: 735, column: 33, scope: !5904)
!5913 = !DILocalVariable(name: "gb", arg: 4, scope: !5904, file: !1803, line: 736, type: !2043)
!5914 = !DILocation(line: 736, column: 38, scope: !5904)
!5915 = !DILocalVariable(name: "byte_align_ref", arg: 5, scope: !5904, file: !1803, line: 736, type: !1012)
!5916 = !DILocation(line: 736, column: 46, scope: !5904)
!5917 = !DILocalVariable(name: "num_front", scope: !5904, file: !1803, line: 738, type: !1012)
!5918 = !DILocation(line: 738, column: 9, scope: !5904)
!5919 = !DILocalVariable(name: "num_side", scope: !5904, file: !1803, line: 738, type: !1012)
!5920 = !DILocation(line: 738, column: 20, scope: !5904)
!5921 = !DILocalVariable(name: "num_back", scope: !5904, file: !1803, line: 738, type: !1012)
!5922 = !DILocation(line: 738, column: 30, scope: !5904)
!5923 = !DILocalVariable(name: "num_lfe", scope: !5904, file: !1803, line: 738, type: !1012)
!5924 = !DILocation(line: 738, column: 40, scope: !5904)
!5925 = !DILocalVariable(name: "num_assoc_data", scope: !5904, file: !1803, line: 738, type: !1012)
!5926 = !DILocation(line: 738, column: 49, scope: !5904)
!5927 = !DILocalVariable(name: "num_cc", scope: !5904, file: !1803, line: 738, type: !1012)
!5928 = !DILocation(line: 738, column: 65, scope: !5904)
!5929 = !DILocalVariable(name: "sampling_index", scope: !5904, file: !1803, line: 739, type: !1012)
!5930 = !DILocation(line: 739, column: 9, scope: !5904)
!5931 = !DILocalVariable(name: "comment_len", scope: !5904, file: !1803, line: 740, type: !1012)
!5932 = !DILocation(line: 740, column: 9, scope: !5904)
!5933 = !DILocalVariable(name: "tags", scope: !5904, file: !1803, line: 741, type: !1012)
!5934 = !DILocation(line: 741, column: 9, scope: !5904)
!5935 = !DILocation(line: 743, column: 15, scope: !5904)
!5936 = !DILocation(line: 743, column: 5, scope: !5904)
!5937 = !DILocation(line: 745, column: 31, scope: !5904)
!5938 = !DILocation(line: 745, column: 22, scope: !5904)
!5939 = !DILocation(line: 745, column: 20, scope: !5904)
!5940 = !DILocation(line: 746, column: 9, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 746, column: 9)
!5942 = !DILocation(line: 746, column: 15, scope: !5941)
!5943 = !DILocation(line: 746, column: 33, scope: !5941)
!5944 = !DILocation(line: 746, column: 30, scope: !5941)
!5945 = !DILocation(line: 746, column: 9, scope: !5904)
!5946 = !DILocation(line: 747, column: 16, scope: !5941)
!5947 = !DILocation(line: 747, column: 9, scope: !5941)
!5948 = !DILocation(line: 751, column: 26, scope: !5904)
!5949 = !DILocation(line: 751, column: 17, scope: !5904)
!5950 = !DILocation(line: 751, column: 15, scope: !5904)
!5951 = !DILocation(line: 752, column: 25, scope: !5904)
!5952 = !DILocation(line: 752, column: 16, scope: !5904)
!5953 = !DILocation(line: 752, column: 14, scope: !5904)
!5954 = !DILocation(line: 753, column: 25, scope: !5904)
!5955 = !DILocation(line: 753, column: 16, scope: !5904)
!5956 = !DILocation(line: 753, column: 14, scope: !5904)
!5957 = !DILocation(line: 754, column: 24, scope: !5904)
!5958 = !DILocation(line: 754, column: 15, scope: !5904)
!5959 = !DILocation(line: 754, column: 13, scope: !5904)
!5960 = !DILocation(line: 755, column: 31, scope: !5904)
!5961 = !DILocation(line: 755, column: 22, scope: !5904)
!5962 = !DILocation(line: 755, column: 20, scope: !5904)
!5963 = !DILocation(line: 756, column: 23, scope: !5904)
!5964 = !DILocation(line: 756, column: 14, scope: !5904)
!5965 = !DILocation(line: 756, column: 12, scope: !5904)
!5966 = !DILocation(line: 758, column: 19, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 758, column: 9)
!5968 = !DILocation(line: 758, column: 9, scope: !5967)
!5969 = !DILocation(line: 758, column: 9, scope: !5904)
!5970 = !DILocation(line: 759, column: 19, scope: !5967)
!5971 = !DILocation(line: 759, column: 9, scope: !5967)
!5972 = !DILocation(line: 760, column: 19, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 760, column: 9)
!5974 = !DILocation(line: 760, column: 9, scope: !5973)
!5975 = !DILocation(line: 760, column: 9, scope: !5904)
!5976 = !DILocation(line: 761, column: 19, scope: !5973)
!5977 = !DILocation(line: 761, column: 9, scope: !5973)
!5978 = !DILocation(line: 763, column: 19, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 763, column: 9)
!5980 = !DILocation(line: 763, column: 9, scope: !5979)
!5981 = !DILocation(line: 763, column: 9, scope: !5904)
!5982 = !DILocation(line: 764, column: 19, scope: !5979)
!5983 = !DILocation(line: 764, column: 9, scope: !5979)
!5984 = !DILocation(line: 766, column: 23, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 766, column: 9)
!5986 = !DILocation(line: 766, column: 9, scope: !5985)
!5987 = !DILocation(line: 766, column: 34, scope: !5985)
!5988 = !DILocation(line: 766, column: 46, scope: !5985)
!5989 = !DILocation(line: 766, column: 44, scope: !5985)
!5990 = !DILocation(line: 766, column: 57, scope: !5985)
!5991 = !DILocation(line: 766, column: 55, scope: !5985)
!5992 = !DILocation(line: 766, column: 68, scope: !5985)
!5993 = !DILocation(line: 766, column: 66, scope: !5985)
!5994 = !DILocation(line: 766, column: 31, scope: !5985)
!5995 = !DILocation(line: 766, column: 82, scope: !5985)
!5996 = !DILocation(line: 766, column: 92, scope: !5985)
!5997 = !DILocation(line: 766, column: 90, scope: !5985)
!5998 = !DILocation(line: 766, column: 109, scope: !5985)
!5999 = !DILocation(line: 766, column: 107, scope: !5985)
!6000 = !DILocation(line: 766, column: 80, scope: !5985)
!6001 = !DILocation(line: 766, column: 76, scope: !5985)
!6002 = !DILocation(line: 766, column: 27, scope: !5985)
!6003 = !DILocation(line: 766, column: 9, scope: !5904)
!6004 = !DILocation(line: 767, column: 16, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5985, file: !1803, line: 766, column: 118)
!6006 = !DILocation(line: 767, column: 9, scope: !6005)
!6007 = !DILocation(line: 768, column: 9, scope: !6005)
!6008 = !DILocation(line: 770, column: 24, scope: !5904)
!6009 = !DILocation(line: 770, column: 56, scope: !5904)
!6010 = !DILocation(line: 770, column: 60, scope: !5904)
!6011 = !DILocation(line: 770, column: 5, scope: !5904)
!6012 = !DILocation(line: 771, column: 12, scope: !5904)
!6013 = !DILocation(line: 771, column: 10, scope: !5904)
!6014 = !DILocation(line: 772, column: 24, scope: !5904)
!6015 = !DILocation(line: 772, column: 37, scope: !5904)
!6016 = !DILocation(line: 772, column: 35, scope: !5904)
!6017 = !DILocation(line: 772, column: 61, scope: !5904)
!6018 = !DILocation(line: 772, column: 65, scope: !5904)
!6019 = !DILocation(line: 772, column: 5, scope: !5904)
!6020 = !DILocation(line: 773, column: 13, scope: !5904)
!6021 = !DILocation(line: 773, column: 10, scope: !5904)
!6022 = !DILocation(line: 774, column: 24, scope: !5904)
!6023 = !DILocation(line: 774, column: 37, scope: !5904)
!6024 = !DILocation(line: 774, column: 35, scope: !5904)
!6025 = !DILocation(line: 774, column: 61, scope: !5904)
!6026 = !DILocation(line: 774, column: 65, scope: !5904)
!6027 = !DILocation(line: 774, column: 5, scope: !5904)
!6028 = !DILocation(line: 775, column: 13, scope: !5904)
!6029 = !DILocation(line: 775, column: 10, scope: !5904)
!6030 = !DILocation(line: 776, column: 24, scope: !5904)
!6031 = !DILocation(line: 776, column: 37, scope: !5904)
!6032 = !DILocation(line: 776, column: 35, scope: !5904)
!6033 = !DILocation(line: 776, column: 60, scope: !5904)
!6034 = !DILocation(line: 776, column: 64, scope: !5904)
!6035 = !DILocation(line: 776, column: 5, scope: !5904)
!6036 = !DILocation(line: 777, column: 13, scope: !5904)
!6037 = !DILocation(line: 777, column: 10, scope: !5904)
!6038 = !DILocation(line: 779, column: 20, scope: !5904)
!6039 = !DILocation(line: 779, column: 28, scope: !5904)
!6040 = !DILocation(line: 779, column: 26, scope: !5904)
!6041 = !DILocation(line: 779, column: 5, scope: !5904)
!6042 = !DILocation(line: 781, column: 24, scope: !5904)
!6043 = !DILocation(line: 781, column: 37, scope: !5904)
!6044 = !DILocation(line: 781, column: 35, scope: !5904)
!6045 = !DILocation(line: 781, column: 59, scope: !5904)
!6046 = !DILocation(line: 781, column: 63, scope: !5904)
!6047 = !DILocation(line: 781, column: 5, scope: !5904)
!6048 = !DILocation(line: 782, column: 13, scope: !5904)
!6049 = !DILocation(line: 782, column: 10, scope: !5904)
!6050 = !DILocation(line: 784, column: 29, scope: !5904)
!6051 = !DILocation(line: 784, column: 33, scope: !5904)
!6052 = !DILocation(line: 784, column: 5, scope: !5904)
!6053 = !DILocation(line: 787, column: 28, scope: !5904)
!6054 = !DILocation(line: 787, column: 19, scope: !5904)
!6055 = !DILocation(line: 787, column: 35, scope: !5904)
!6056 = !DILocation(line: 787, column: 17, scope: !5904)
!6057 = !DILocation(line: 788, column: 23, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !5904, file: !1803, line: 788, column: 9)
!6059 = !DILocation(line: 788, column: 9, scope: !6058)
!6060 = !DILocation(line: 788, column: 29, scope: !6058)
!6061 = !DILocation(line: 788, column: 27, scope: !6058)
!6062 = !DILocation(line: 788, column: 9, scope: !5904)
!6063 = !DILocation(line: 789, column: 16, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !1803, line: 788, column: 42)
!6065 = !DILocation(line: 789, column: 9, scope: !6064)
!6066 = !DILocation(line: 790, column: 9, scope: !6064)
!6067 = !DILocation(line: 792, column: 20, scope: !5904)
!6068 = !DILocation(line: 792, column: 24, scope: !5904)
!6069 = !DILocation(line: 792, column: 5, scope: !5904)
!6070 = !DILocation(line: 793, column: 12, scope: !5904)
!6071 = !DILocation(line: 793, column: 5, scope: !5904)
!6072 = !DILocation(line: 794, column: 1, scope: !5904)
!6073 = distinct !DISubprogram(name: "count_channels", scope: !1803, file: !1803, line: 103, type: !6074, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{!1012, !3719, !1012}
!6076 = !DILocalVariable(name: "layout", arg: 1, scope: !6073, file: !1803, line: 103, type: !3719)
!6077 = !DILocation(line: 103, column: 37, scope: !6073)
!6078 = !DILocalVariable(name: "tags", arg: 2, scope: !6073, file: !1803, line: 103, type: !1012)
!6079 = !DILocation(line: 103, column: 53, scope: !6073)
!6080 = !DILocalVariable(name: "i", scope: !6073, file: !1803, line: 105, type: !1012)
!6081 = !DILocation(line: 105, column: 9, scope: !6073)
!6082 = !DILocalVariable(name: "sum", scope: !6073, file: !1803, line: 105, type: !1012)
!6083 = !DILocation(line: 105, column: 12, scope: !6073)
!6084 = !DILocation(line: 106, column: 12, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6073, file: !1803, line: 106, column: 5)
!6086 = !DILocation(line: 106, column: 10, scope: !6085)
!6087 = !DILocation(line: 106, column: 17, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6089, file: !1803, discriminator: 1)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !1803, line: 106, column: 5)
!6090 = !DILocation(line: 106, column: 21, scope: !6088)
!6091 = !DILocation(line: 106, column: 19, scope: !6088)
!6092 = !DILocation(line: 106, column: 5, scope: !6088)
!6093 = !DILocalVariable(name: "syn_ele", scope: !6094, file: !1803, line: 107, type: !1012)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !1803, line: 106, column: 32)
!6095 = !DILocation(line: 107, column: 13, scope: !6094)
!6096 = !DILocation(line: 107, column: 30, scope: !6094)
!6097 = !DILocation(line: 107, column: 23, scope: !6094)
!6098 = !DILocalVariable(name: "pos", scope: !6094, file: !1803, line: 108, type: !1012)
!6099 = !DILocation(line: 108, column: 13, scope: !6094)
!6100 = !DILocation(line: 108, column: 26, scope: !6094)
!6101 = !DILocation(line: 108, column: 19, scope: !6094)
!6102 = !DILocation(line: 109, column: 22, scope: !6094)
!6103 = !DILocation(line: 109, column: 30, scope: !6094)
!6104 = !DILocation(line: 109, column: 19, scope: !6094)
!6105 = !DILocation(line: 110, column: 17, scope: !6094)
!6106 = !DILocation(line: 110, column: 21, scope: !6094)
!6107 = !DILocation(line: 110, column: 40, scope: !6094)
!6108 = !DILocation(line: 110, column: 43, scope: !6109)
!6109 = !DILexicalBlockFile(scope: !6094, file: !1803, discriminator: 1)
!6110 = !DILocation(line: 110, column: 47, scope: !6109)
!6111 = !DILocation(line: 110, column: 40, scope: !6112)
!6112 = !DILexicalBlockFile(scope: !6094, file: !1803, discriminator: 2)
!6113 = !DILocation(line: 109, column: 44, scope: !6109)
!6114 = !DILocation(line: 109, column: 13, scope: !6109)
!6115 = !DILocation(line: 111, column: 5, scope: !6094)
!6116 = !DILocation(line: 106, column: 28, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !6089, file: !1803, discriminator: 2)
!6118 = !DILocation(line: 106, column: 5, scope: !6117)
!6119 = distinct !{!6119, !6120}
!6120 = !DILocation(line: 106, column: 5, scope: !6073)
!6121 = !DILocation(line: 112, column: 12, scope: !6073)
!6122 = !DILocation(line: 112, column: 5, scope: !6073)
!6123 = distinct !DISubprogram(name: "get_bits", scope: !2045, file: !2045, line: 381, type: !6124, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{!1013, !2043, !1012}
!6126 = !DILocalVariable(name: "x", arg: 1, scope: !6127, file: !6128, line: 66, type: !1027)
!6127 = distinct !DISubprogram(name: "av_bswap32", scope: !6128, file: !6128, line: 66, type: !6129, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6128 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!1027, !1027}
!6131 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !6132)
!6132 = distinct !DILocation(line: 401, column: 16, scope: !6123)
!6133 = !DILocalVariable(name: "s", arg: 1, scope: !6123, file: !2045, line: 381, type: !2043)
!6134 = !DILocation(line: 381, column: 52, scope: !6123)
!6135 = !DILocalVariable(name: "n", arg: 2, scope: !6123, file: !2045, line: 381, type: !1012)
!6136 = !DILocation(line: 381, column: 59, scope: !6123)
!6137 = !DILocalVariable(name: "tmp", scope: !6123, file: !2045, line: 383, type: !1012)
!6138 = !DILocation(line: 383, column: 18, scope: !6123)
!6139 = !DILocalVariable(name: "re_index", scope: !6123, file: !2045, line: 399, type: !1013)
!6140 = !DILocation(line: 399, column: 18, scope: !6123)
!6141 = !DILocation(line: 399, column: 30, scope: !6123)
!6142 = !DILocation(line: 399, column: 34, scope: !6123)
!6143 = !DILocalVariable(name: "re_cache", scope: !6123, file: !2045, line: 399, type: !1013)
!6144 = !DILocation(line: 399, column: 78, scope: !6123)
!6145 = !DILocalVariable(name: "re_size_plus8", scope: !6123, file: !2045, line: 399, type: !1013)
!6146 = !DILocation(line: 399, column: 101, scope: !6123)
!6147 = !DILocation(line: 399, column: 118, scope: !6123)
!6148 = !DILocation(line: 399, column: 122, scope: !6123)
!6149 = !DILocation(line: 401, column: 60, scope: !6123)
!6150 = !DILocation(line: 401, column: 64, scope: !6123)
!6151 = !DILocation(line: 401, column: 74, scope: !6123)
!6152 = !DILocation(line: 401, column: 83, scope: !6123)
!6153 = !DILocation(line: 401, column: 71, scope: !6123)
!6154 = !DILocation(line: 401, column: 92, scope: !6123)
!6155 = !DILocation(line: 401, column: 16, scope: !6123)
!6156 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !6132)
!6157 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !6132)
!6158 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !6132)
!6159 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !6132)
!6160 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !6132)
!6161 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !6132)
!6162 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !6132)
!6163 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !6132)
!6164 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !6132)
!6165 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !6132)
!6166 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !6132)
!6167 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !6132)
!6168 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !6132)
!6169 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !6132)
!6170 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !6132)
!6171 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !6132)
!6172 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !6132)
!6173 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !6132)
!6174 = !DILocation(line: 401, column: 100, scope: !6123)
!6175 = !DILocation(line: 401, column: 109, scope: !6123)
!6176 = !DILocation(line: 401, column: 96, scope: !6123)
!6177 = !DILocation(line: 401, column: 14, scope: !6123)
!6178 = !DILocation(line: 402, column: 21, scope: !6123)
!6179 = !DILocation(line: 402, column: 31, scope: !6123)
!6180 = !DILocation(line: 402, column: 11, scope: !6123)
!6181 = !DILocation(line: 402, column: 9, scope: !6123)
!6182 = !DILocation(line: 403, column: 18, scope: !6123)
!6183 = !DILocation(line: 403, column: 36, scope: !6123)
!6184 = !DILocation(line: 403, column: 48, scope: !6123)
!6185 = !DILocation(line: 403, column: 45, scope: !6123)
!6186 = !DILocation(line: 403, column: 33, scope: !6123)
!6187 = !DILocation(line: 403, column: 17, scope: !6123)
!6188 = !DILocation(line: 403, column: 55, scope: !6189)
!6189 = !DILexicalBlockFile(scope: !6123, file: !2045, discriminator: 1)
!6190 = !DILocation(line: 403, column: 67, scope: !6189)
!6191 = !DILocation(line: 403, column: 64, scope: !6189)
!6192 = !DILocation(line: 403, column: 17, scope: !6189)
!6193 = !DILocation(line: 403, column: 74, scope: !6194)
!6194 = !DILexicalBlockFile(scope: !6123, file: !2045, discriminator: 2)
!6195 = !DILocation(line: 403, column: 17, scope: !6194)
!6196 = !DILocation(line: 403, column: 17, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6123, file: !2045, discriminator: 3)
!6198 = !DILocation(line: 403, column: 14, scope: !6197)
!6199 = !DILocation(line: 404, column: 18, scope: !6123)
!6200 = !DILocation(line: 404, column: 6, scope: !6123)
!6201 = !DILocation(line: 404, column: 10, scope: !6123)
!6202 = !DILocation(line: 404, column: 16, scope: !6123)
!6203 = !DILocation(line: 406, column: 12, scope: !6123)
!6204 = !DILocation(line: 406, column: 5, scope: !6123)
!6205 = distinct !DISubprogram(name: "skip_bits1", scope: !2045, file: !2045, line: 523, type: !6206, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !2043}
!6208 = !DILocalVariable(name: "s", arg: 1, scope: !6205, file: !2045, line: 523, type: !2043)
!6209 = !DILocation(line: 523, column: 46, scope: !6205)
!6210 = !DILocation(line: 525, column: 15, scope: !6205)
!6211 = !DILocation(line: 525, column: 5, scope: !6205)
!6212 = !DILocation(line: 526, column: 1, scope: !6205)
!6213 = distinct !DISubprogram(name: "get_bits_left", scope: !2045, file: !2045, line: 814, type: !6214, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!1012, !2043}
!6216 = !DILocalVariable(name: "gb", arg: 1, scope: !6213, file: !2045, line: 814, type: !2043)
!6217 = !DILocation(line: 814, column: 48, scope: !6213)
!6218 = !DILocation(line: 816, column: 12, scope: !6213)
!6219 = !DILocation(line: 816, column: 16, scope: !6213)
!6220 = !DILocation(line: 816, column: 46, scope: !6213)
!6221 = !DILocation(line: 816, column: 31, scope: !6213)
!6222 = !DILocation(line: 816, column: 29, scope: !6213)
!6223 = !DILocation(line: 816, column: 5, scope: !6213)
!6224 = distinct !DISubprogram(name: "decode_channel_map", scope: !1803, file: !1803, line: 692, type: !6225, isLocal: true, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !3719, !1003, !2043, !1012}
!6227 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6224, file: !1803, line: 692, type: !3719)
!6228 = !DILocation(line: 692, column: 40, scope: !6224)
!6229 = !DILocalVariable(name: "type", arg: 2, scope: !6224, file: !1803, line: 693, type: !1003)
!6230 = !DILocation(line: 693, column: 53, scope: !6224)
!6231 = !DILocalVariable(name: "gb", arg: 3, scope: !6224, file: !1803, line: 694, type: !2043)
!6232 = !DILocation(line: 694, column: 47, scope: !6224)
!6233 = !DILocalVariable(name: "n", arg: 4, scope: !6224, file: !1803, line: 694, type: !1012)
!6234 = !DILocation(line: 694, column: 55, scope: !6224)
!6235 = !DILocation(line: 696, column: 5, scope: !6224)
!6236 = !DILocation(line: 696, column: 13, scope: !6237)
!6237 = !DILexicalBlockFile(scope: !6224, file: !1803, discriminator: 1)
!6238 = !DILocation(line: 696, column: 5, scope: !6237)
!6239 = !DILocalVariable(name: "syn_ele", scope: !6240, file: !1803, line: 697, type: !930)
!6240 = distinct !DILexicalBlock(scope: !6224, file: !1803, line: 696, column: 17)
!6241 = !DILocation(line: 697, column: 31, scope: !6240)
!6242 = !DILocation(line: 698, column: 17, scope: !6240)
!6243 = !DILocation(line: 698, column: 9, scope: !6240)
!6244 = !DILocation(line: 702, column: 33, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !1803, line: 698, column: 23)
!6246 = !DILocation(line: 702, column: 23, scope: !6245)
!6247 = !DILocation(line: 702, column: 21, scope: !6245)
!6248 = !DILocation(line: 703, column: 13, scope: !6245)
!6249 = !DILocation(line: 705, column: 24, scope: !6245)
!6250 = !DILocation(line: 705, column: 13, scope: !6245)
!6251 = !DILocation(line: 706, column: 21, scope: !6245)
!6252 = !DILocation(line: 707, column: 13, scope: !6245)
!6253 = !DILocation(line: 709, column: 21, scope: !6245)
!6254 = !DILocation(line: 710, column: 13, scope: !6245)
!6255 = !DILocation(line: 713, column: 13, scope: !6245)
!6256 = distinct !{!6256, !6255}
!6257 = !DILocation(line: 713, column: 30, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !6259, file: !1803, discriminator: 1)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !1803, line: 713, column: 28)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !1803, line: 713, column: 22)
!6261 = distinct !DILexicalBlock(scope: !6245, file: !1803, line: 713, column: 16)
!6262 = !DILocation(line: 713, column: 94, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6258, file: !1803, discriminator: 2)
!6264 = !DILocation(line: 713, column: 94, scope: !6258)
!6265 = !DILocation(line: 714, column: 9, scope: !6245)
!6266 = !DILocation(line: 715, column: 28, scope: !6240)
!6267 = !DILocation(line: 715, column: 9, scope: !6240)
!6268 = !DILocation(line: 715, column: 26, scope: !6240)
!6269 = !DILocation(line: 716, column: 37, scope: !6240)
!6270 = !DILocation(line: 716, column: 28, scope: !6240)
!6271 = !DILocation(line: 716, column: 9, scope: !6240)
!6272 = !DILocation(line: 716, column: 26, scope: !6240)
!6273 = !DILocation(line: 717, column: 28, scope: !6240)
!6274 = !DILocation(line: 717, column: 9, scope: !6240)
!6275 = !DILocation(line: 717, column: 26, scope: !6240)
!6276 = !DILocation(line: 718, column: 19, scope: !6240)
!6277 = !DILocation(line: 696, column: 5, scope: !6278)
!6278 = !DILexicalBlockFile(scope: !6224, file: !1803, discriminator: 2)
!6279 = distinct !{!6279, !6235}
!6280 = !DILocation(line: 720, column: 1, scope: !6224)
!6281 = distinct !DISubprogram(name: "relative_align_get_bits", scope: !1803, file: !1803, line: 722, type: !5445, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6282 = !DILocalVariable(name: "gb", arg: 1, scope: !6281, file: !1803, line: 722, type: !2043)
!6283 = !DILocation(line: 722, column: 59, scope: !6281)
!6284 = !DILocalVariable(name: "reference_position", arg: 2, scope: !6281, file: !1803, line: 723, type: !1012)
!6285 = !DILocation(line: 723, column: 48, scope: !6281)
!6286 = !DILocalVariable(name: "n", scope: !6281, file: !1803, line: 724, type: !1012)
!6287 = !DILocation(line: 724, column: 9, scope: !6281)
!6288 = !DILocation(line: 724, column: 14, scope: !6281)
!6289 = !DILocation(line: 724, column: 50, scope: !6281)
!6290 = !DILocation(line: 724, column: 35, scope: !6281)
!6291 = !DILocation(line: 724, column: 33, scope: !6281)
!6292 = !DILocation(line: 724, column: 54, scope: !6281)
!6293 = !DILocation(line: 725, column: 9, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6281, file: !1803, line: 725, column: 9)
!6295 = !DILocation(line: 725, column: 9, scope: !6281)
!6296 = !DILocation(line: 726, column: 19, scope: !6294)
!6297 = !DILocation(line: 726, column: 23, scope: !6294)
!6298 = !DILocation(line: 726, column: 9, scope: !6294)
!6299 = !DILocation(line: 727, column: 1, scope: !6281)
!6300 = distinct !DISubprogram(name: "NEG_USR32", scope: !6301, file: !6301, line: 124, type: !6302, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6301 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!1027, !1027, !1129}
!6304 = !DILocalVariable(name: "a", arg: 1, scope: !6300, file: !6301, line: 124, type: !1027)
!6305 = !DILocation(line: 124, column: 43, scope: !6300)
!6306 = !DILocalVariable(name: "s", arg: 2, scope: !6300, file: !6301, line: 124, type: !1129)
!6307 = !DILocation(line: 124, column: 53, scope: !6300)
!6308 = !DILocation(line: 125, column: 5, scope: !6300)
!6309 = !DILocation(line: 127, column: 29, scope: !6300)
!6310 = !DILocation(line: 127, column: 28, scope: !6300)
!6311 = !DILocation(line: 127, column: 18, scope: !6300)
!6312 = !{i32 191682, i32 191696}
!6313 = !DILocation(line: 129, column: 12, scope: !6300)
!6314 = !DILocation(line: 129, column: 5, scope: !6300)
!6315 = distinct !DISubprogram(name: "sniff_channel_order", scope: !1803, file: !1803, line: 260, type: !6316, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{!1073, !3719, !1012}
!6318 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6315, file: !1803, line: 260, type: !3719)
!6319 = !DILocation(line: 260, column: 47, scope: !6315)
!6320 = !DILocalVariable(name: "tags", arg: 2, scope: !6315, file: !1803, line: 260, type: !1012)
!6321 = !DILocation(line: 260, column: 67, scope: !6315)
!6322 = !DILocalVariable(name: "i", scope: !6315, file: !1803, line: 262, type: !1012)
!6323 = !DILocation(line: 262, column: 9, scope: !6315)
!6324 = !DILocalVariable(name: "n", scope: !6315, file: !1803, line: 262, type: !1012)
!6325 = !DILocation(line: 262, column: 12, scope: !6315)
!6326 = !DILocalVariable(name: "total_non_cc_elements", scope: !6315, file: !1803, line: 262, type: !1012)
!6327 = !DILocation(line: 262, column: 15, scope: !6315)
!6328 = !DILocalVariable(name: "e2c_vec", scope: !6315, file: !1803, line: 263, type: !6329)
!6329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6330, size: 8192, align: 64, elements: !2087)
!6330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elem_to_channel", file: !1803, line: 192, size: 128, align: 64, elements: !6331)
!6331 = !{!6332, !6333, !6334, !6335}
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "av_position", scope: !6330, file: !1803, line: 193, baseType: !1073, size: 64, align: 64)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ele", scope: !6330, file: !1803, line: 194, baseType: !1029, size: 8, align: 8, offset: 64)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "elem_id", scope: !6330, file: !1803, line: 195, baseType: !1029, size: 8, align: 8, offset: 72)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "aac_position", scope: !6330, file: !1803, line: 196, baseType: !1029, size: 8, align: 8, offset: 80)
!6336 = !DILocation(line: 263, column: 28, scope: !6315)
!6337 = !DILocalVariable(name: "num_front_channels", scope: !6315, file: !1803, line: 264, type: !1012)
!6338 = !DILocation(line: 264, column: 9, scope: !6315)
!6339 = !DILocalVariable(name: "num_side_channels", scope: !6315, file: !1803, line: 264, type: !1012)
!6340 = !DILocation(line: 264, column: 29, scope: !6315)
!6341 = !DILocalVariable(name: "num_back_channels", scope: !6315, file: !1803, line: 264, type: !1012)
!6342 = !DILocation(line: 264, column: 48, scope: !6315)
!6343 = !DILocalVariable(name: "layout", scope: !6315, file: !1803, line: 265, type: !1073)
!6344 = !DILocation(line: 265, column: 14, scope: !6315)
!6345 = !DILocation(line: 267, column: 52, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 267, column: 9)
!6347 = !DILocation(line: 267, column: 50, scope: !6346)
!6348 = !DILocation(line: 267, column: 9, scope: !6315)
!6349 = !DILocation(line: 268, column: 9, scope: !6346)
!6350 = !DILocation(line: 270, column: 7, scope: !6315)
!6351 = !DILocation(line: 272, column: 31, scope: !6315)
!6352 = !DILocation(line: 272, column: 43, scope: !6315)
!6353 = !DILocation(line: 272, column: 9, scope: !6315)
!6354 = !DILocation(line: 271, column: 24, scope: !6315)
!6355 = !DILocation(line: 273, column: 9, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 273, column: 9)
!6357 = !DILocation(line: 273, column: 28, scope: !6356)
!6358 = !DILocation(line: 273, column: 9, scope: !6315)
!6359 = !DILocation(line: 274, column: 9, scope: !6356)
!6360 = !DILocation(line: 276, column: 31, scope: !6315)
!6361 = !DILocation(line: 276, column: 43, scope: !6315)
!6362 = !DILocation(line: 276, column: 9, scope: !6315)
!6363 = !DILocation(line: 275, column: 23, scope: !6315)
!6364 = !DILocation(line: 277, column: 9, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 277, column: 9)
!6366 = !DILocation(line: 277, column: 27, scope: !6365)
!6367 = !DILocation(line: 277, column: 9, scope: !6315)
!6368 = !DILocation(line: 278, column: 9, scope: !6365)
!6369 = !DILocation(line: 280, column: 31, scope: !6315)
!6370 = !DILocation(line: 280, column: 43, scope: !6315)
!6371 = !DILocation(line: 280, column: 9, scope: !6315)
!6372 = !DILocation(line: 279, column: 23, scope: !6315)
!6373 = !DILocation(line: 281, column: 9, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 281, column: 9)
!6375 = !DILocation(line: 281, column: 27, scope: !6374)
!6376 = !DILocation(line: 281, column: 9, scope: !6315)
!6377 = !DILocation(line: 282, column: 9, scope: !6374)
!6378 = !DILocation(line: 284, column: 9, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 284, column: 9)
!6380 = !DILocation(line: 284, column: 27, scope: !6379)
!6381 = !DILocation(line: 284, column: 32, scope: !6379)
!6382 = !DILocation(line: 284, column: 35, scope: !6383)
!6383 = !DILexicalBlockFile(scope: !6379, file: !1803, discriminator: 1)
!6384 = !DILocation(line: 284, column: 53, scope: !6383)
!6385 = !DILocation(line: 284, column: 9, scope: !6383)
!6386 = !DILocation(line: 285, column: 27, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6379, file: !1803, line: 284, column: 59)
!6388 = !DILocation(line: 286, column: 27, scope: !6387)
!6389 = !DILocation(line: 287, column: 5, scope: !6387)
!6390 = !DILocation(line: 289, column: 7, scope: !6315)
!6391 = !DILocation(line: 290, column: 9, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 290, column: 9)
!6393 = !DILocation(line: 290, column: 28, scope: !6392)
!6394 = !DILocation(line: 290, column: 9, scope: !6315)
!6395 = !DILocation(line: 291, column: 17, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6392, file: !1803, line: 290, column: 33)
!6397 = !DILocation(line: 291, column: 9, scope: !6396)
!6398 = !DILocation(line: 291, column: 47, scope: !6396)
!6399 = !DILocation(line: 294, column: 35, scope: !6396)
!6400 = !DILocation(line: 294, column: 24, scope: !6396)
!6401 = !DILocation(line: 291, column: 22, scope: !6396)
!6402 = !DILocation(line: 297, column: 10, scope: !6396)
!6403 = !DILocation(line: 298, column: 27, scope: !6396)
!6404 = !DILocation(line: 299, column: 5, scope: !6396)
!6405 = !DILocation(line: 300, column: 9, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 300, column: 9)
!6407 = !DILocation(line: 300, column: 28, scope: !6406)
!6408 = !DILocation(line: 300, column: 9, scope: !6315)
!6409 = !DILocation(line: 301, column: 26, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !1803, line: 300, column: 34)
!6411 = !DILocation(line: 301, column: 35, scope: !6410)
!6412 = !DILocation(line: 301, column: 47, scope: !6410)
!6413 = !DILocation(line: 301, column: 14, scope: !6410)
!6414 = !DILocation(line: 301, column: 11, scope: !6410)
!6415 = !DILocation(line: 305, column: 28, scope: !6410)
!6416 = !DILocation(line: 306, column: 5, scope: !6410)
!6417 = !DILocation(line: 307, column: 9, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 307, column: 9)
!6419 = !DILocation(line: 307, column: 28, scope: !6418)
!6420 = !DILocation(line: 307, column: 9, scope: !6315)
!6421 = !DILocation(line: 308, column: 26, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6418, file: !1803, line: 307, column: 34)
!6423 = !DILocation(line: 308, column: 35, scope: !6422)
!6424 = !DILocation(line: 308, column: 47, scope: !6422)
!6425 = !DILocation(line: 308, column: 14, scope: !6422)
!6426 = !DILocation(line: 308, column: 11, scope: !6422)
!6427 = !DILocation(line: 312, column: 28, scope: !6422)
!6428 = !DILocation(line: 313, column: 5, scope: !6422)
!6429 = !DILocation(line: 314, column: 5, scope: !6315)
!6430 = !DILocation(line: 314, column: 12, scope: !6431)
!6431 = !DILexicalBlockFile(scope: !6315, file: !1803, discriminator: 1)
!6432 = !DILocation(line: 314, column: 31, scope: !6431)
!6433 = !DILocation(line: 314, column: 5, scope: !6431)
!6434 = !DILocation(line: 315, column: 26, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 314, column: 37)
!6436 = !DILocation(line: 315, column: 35, scope: !6435)
!6437 = !DILocation(line: 315, column: 47, scope: !6435)
!6438 = !DILocation(line: 315, column: 14, scope: !6435)
!6439 = !DILocation(line: 315, column: 11, scope: !6435)
!6440 = !DILocation(line: 319, column: 28, scope: !6435)
!6441 = !DILocation(line: 314, column: 5, scope: !6442)
!6442 = !DILexicalBlockFile(scope: !6315, file: !1803, discriminator: 2)
!6443 = distinct !{!6443, !6429}
!6444 = !DILocation(line: 322, column: 9, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 322, column: 9)
!6446 = !DILocation(line: 322, column: 27, scope: !6445)
!6447 = !DILocation(line: 322, column: 9, scope: !6315)
!6448 = !DILocation(line: 323, column: 26, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6445, file: !1803, line: 322, column: 33)
!6450 = !DILocation(line: 323, column: 35, scope: !6449)
!6451 = !DILocation(line: 323, column: 47, scope: !6449)
!6452 = !DILocation(line: 323, column: 14, scope: !6449)
!6453 = !DILocation(line: 323, column: 11, scope: !6449)
!6454 = !DILocation(line: 327, column: 27, scope: !6449)
!6455 = !DILocation(line: 328, column: 5, scope: !6449)
!6456 = !DILocation(line: 329, column: 5, scope: !6315)
!6457 = !DILocation(line: 329, column: 12, scope: !6431)
!6458 = !DILocation(line: 329, column: 30, scope: !6431)
!6459 = !DILocation(line: 329, column: 5, scope: !6431)
!6460 = !DILocation(line: 330, column: 26, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 329, column: 36)
!6462 = !DILocation(line: 330, column: 35, scope: !6461)
!6463 = !DILocation(line: 330, column: 47, scope: !6461)
!6464 = !DILocation(line: 330, column: 14, scope: !6461)
!6465 = !DILocation(line: 330, column: 11, scope: !6461)
!6466 = !DILocation(line: 334, column: 27, scope: !6461)
!6467 = !DILocation(line: 329, column: 5, scope: !6442)
!6468 = distinct !{!6468, !6456}
!6469 = !DILocation(line: 337, column: 5, scope: !6315)
!6470 = !DILocation(line: 337, column: 12, scope: !6431)
!6471 = !DILocation(line: 337, column: 30, scope: !6431)
!6472 = !DILocation(line: 337, column: 5, scope: !6431)
!6473 = !DILocation(line: 338, column: 26, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 337, column: 36)
!6475 = !DILocation(line: 338, column: 35, scope: !6474)
!6476 = !DILocation(line: 338, column: 47, scope: !6474)
!6477 = !DILocation(line: 338, column: 14, scope: !6474)
!6478 = !DILocation(line: 338, column: 11, scope: !6474)
!6479 = !DILocation(line: 342, column: 27, scope: !6474)
!6480 = !DILocation(line: 337, column: 5, scope: !6442)
!6481 = distinct !{!6481, !6469}
!6482 = !DILocation(line: 344, column: 9, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 344, column: 9)
!6484 = !DILocation(line: 344, column: 27, scope: !6483)
!6485 = !DILocation(line: 344, column: 9, scope: !6315)
!6486 = !DILocation(line: 345, column: 26, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !1803, line: 344, column: 33)
!6488 = !DILocation(line: 345, column: 35, scope: !6487)
!6489 = !DILocation(line: 345, column: 47, scope: !6487)
!6490 = !DILocation(line: 345, column: 14, scope: !6487)
!6491 = !DILocation(line: 345, column: 11, scope: !6487)
!6492 = !DILocation(line: 349, column: 27, scope: !6487)
!6493 = !DILocation(line: 350, column: 5, scope: !6487)
!6494 = !DILocation(line: 351, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 351, column: 9)
!6496 = !DILocation(line: 351, column: 9, scope: !6315)
!6497 = !DILocation(line: 352, column: 17, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6495, file: !1803, line: 351, column: 28)
!6499 = !DILocation(line: 352, column: 9, scope: !6498)
!6500 = !DILocation(line: 352, column: 47, scope: !6498)
!6501 = !DILocation(line: 355, column: 35, scope: !6498)
!6502 = !DILocation(line: 355, column: 24, scope: !6498)
!6503 = !DILocation(line: 352, column: 22, scope: !6498)
!6504 = !DILocation(line: 358, column: 10, scope: !6498)
!6505 = !DILocation(line: 359, column: 26, scope: !6498)
!6506 = !DILocation(line: 360, column: 5, scope: !6498)
!6507 = !DILocation(line: 362, column: 9, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 362, column: 9)
!6509 = !DILocation(line: 362, column: 13, scope: !6508)
!6510 = !DILocation(line: 362, column: 11, scope: !6508)
!6511 = !DILocation(line: 362, column: 18, scope: !6508)
!6512 = !DILocation(line: 362, column: 32, scope: !6513)
!6513 = !DILexicalBlockFile(scope: !6508, file: !1803, discriminator: 1)
!6514 = !DILocation(line: 362, column: 21, scope: !6513)
!6515 = !DILocation(line: 362, column: 38, scope: !6513)
!6516 = !DILocation(line: 362, column: 9, scope: !6513)
!6517 = !DILocation(line: 363, column: 17, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6508, file: !1803, line: 362, column: 58)
!6519 = !DILocation(line: 363, column: 9, scope: !6518)
!6520 = !DILocation(line: 363, column: 47, scope: !6518)
!6521 = !DILocation(line: 366, column: 35, scope: !6518)
!6522 = !DILocation(line: 366, column: 24, scope: !6518)
!6523 = !DILocation(line: 363, column: 22, scope: !6518)
!6524 = !DILocation(line: 369, column: 10, scope: !6518)
!6525 = !DILocation(line: 370, column: 5, scope: !6518)
!6526 = !DILocation(line: 371, column: 5, scope: !6315)
!6527 = !DILocation(line: 371, column: 12, scope: !6431)
!6528 = !DILocation(line: 371, column: 16, scope: !6431)
!6529 = !DILocation(line: 371, column: 14, scope: !6431)
!6530 = !DILocation(line: 371, column: 21, scope: !6431)
!6531 = !DILocation(line: 371, column: 35, scope: !6442)
!6532 = !DILocation(line: 371, column: 24, scope: !6442)
!6533 = !DILocation(line: 371, column: 41, scope: !6442)
!6534 = !DILocation(line: 371, column: 5, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !6315, file: !1803, discriminator: 3)
!6536 = !DILocation(line: 372, column: 17, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 371, column: 61)
!6538 = !DILocation(line: 372, column: 9, scope: !6537)
!6539 = !DILocation(line: 372, column: 47, scope: !6537)
!6540 = !DILocation(line: 375, column: 35, scope: !6537)
!6541 = !DILocation(line: 375, column: 24, scope: !6537)
!6542 = !DILocation(line: 372, column: 22, scope: !6537)
!6543 = !DILocation(line: 378, column: 10, scope: !6537)
!6544 = !DILocation(line: 371, column: 5, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6315, file: !1803, discriminator: 4)
!6546 = distinct !{!6546, !6526}
!6547 = !DILocation(line: 382, column: 33, scope: !6315)
!6548 = !DILocation(line: 382, column: 31, scope: !6315)
!6549 = !DILocation(line: 382, column: 27, scope: !6315)
!6550 = !DILocation(line: 383, column: 5, scope: !6315)
!6551 = distinct !{!6551, !6550}
!6552 = !DILocalVariable(name: "next_n", scope: !6553, file: !1803, line: 384, type: !1012)
!6553 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 383, column: 8)
!6554 = !DILocation(line: 384, column: 13, scope: !6553)
!6555 = !DILocation(line: 385, column: 16, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !1803, line: 385, column: 9)
!6557 = !DILocation(line: 385, column: 14, scope: !6556)
!6558 = !DILocation(line: 385, column: 21, scope: !6559)
!6559 = !DILexicalBlockFile(scope: !6560, file: !1803, discriminator: 1)
!6560 = distinct !DILexicalBlock(scope: !6556, file: !1803, line: 385, column: 9)
!6561 = !DILocation(line: 385, column: 25, scope: !6559)
!6562 = !DILocation(line: 385, column: 23, scope: !6559)
!6563 = !DILocation(line: 385, column: 9, scope: !6559)
!6564 = !DILocation(line: 386, column: 25, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !1803, line: 386, column: 17)
!6566 = !DILocation(line: 386, column: 27, scope: !6565)
!6567 = !DILocation(line: 386, column: 17, scope: !6565)
!6568 = !DILocation(line: 386, column: 32, scope: !6565)
!6569 = !DILocation(line: 386, column: 54, scope: !6565)
!6570 = !DILocation(line: 386, column: 46, scope: !6565)
!6571 = !DILocation(line: 386, column: 57, scope: !6565)
!6572 = !DILocation(line: 386, column: 44, scope: !6565)
!6573 = !DILocation(line: 386, column: 17, scope: !6560)
!6574 = !DILocation(line: 387, column: 17, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6565, file: !1803, line: 386, column: 70)
!6576 = distinct !{!6576, !6574}
!6577 = !DILocalVariable(name: "SWAP_tmp", scope: !6578, file: !1803, line: 387, type: !6330)
!6578 = distinct !DILexicalBlock(scope: !6575, file: !1803, line: 387, column: 19)
!6579 = !DILocation(line: 387, column: 43, scope: !6578)
!6580 = !DILocation(line: 387, column: 61, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !6578, file: !1803, discriminator: 1)
!6582 = !DILocation(line: 387, column: 53, scope: !6581)
!6583 = !DILocation(line: 387, column: 73, scope: !6581)
!6584 = !DILocation(line: 387, column: 65, scope: !6581)
!6585 = !DILocation(line: 387, column: 85, scope: !6581)
!6586 = !DILocation(line: 387, column: 87, scope: !6581)
!6587 = !DILocation(line: 387, column: 77, scope: !6581)
!6588 = !DILocation(line: 387, column: 77, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6581, file: !1803, discriminator: 2)
!6590 = !DILocation(line: 387, column: 101, scope: !6581)
!6591 = !DILocation(line: 387, column: 103, scope: !6581)
!6592 = !DILocation(line: 387, column: 93, scope: !6581)
!6593 = !DILocation(line: 387, column: 109, scope: !6581)
!6594 = !DILocation(line: 387, column: 109, scope: !6595)
!6595 = !DILexicalBlockFile(scope: !6581, file: !1803, discriminator: 3)
!6596 = !DILocation(line: 387, column: 118, scope: !6581)
!6597 = !DILocation(line: 388, column: 26, scope: !6575)
!6598 = !DILocation(line: 388, column: 24, scope: !6575)
!6599 = !DILocation(line: 389, column: 13, scope: !6575)
!6600 = !DILocation(line: 386, column: 57, scope: !6601)
!6601 = !DILexicalBlockFile(scope: !6565, file: !1803, discriminator: 1)
!6602 = !DILocation(line: 385, column: 29, scope: !6603)
!6603 = !DILexicalBlockFile(scope: !6560, file: !1803, discriminator: 2)
!6604 = !DILocation(line: 385, column: 9, scope: !6603)
!6605 = distinct !{!6605, !6606}
!6606 = !DILocation(line: 385, column: 9, scope: !6553)
!6607 = !DILocation(line: 390, column: 13, scope: !6553)
!6608 = !DILocation(line: 390, column: 11, scope: !6553)
!6609 = !DILocation(line: 391, column: 5, scope: !6553)
!6610 = !DILocation(line: 391, column: 14, scope: !6431)
!6611 = !DILocation(line: 391, column: 16, scope: !6431)
!6612 = !DILocation(line: 391, column: 5, scope: !6431)
!6613 = !DILocation(line: 393, column: 12, scope: !6315)
!6614 = !DILocation(line: 394, column: 12, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6315, file: !1803, line: 394, column: 5)
!6616 = !DILocation(line: 394, column: 10, scope: !6615)
!6617 = !DILocation(line: 394, column: 17, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6619, file: !1803, discriminator: 1)
!6619 = distinct !DILexicalBlock(scope: !6615, file: !1803, line: 394, column: 5)
!6620 = !DILocation(line: 394, column: 21, scope: !6618)
!6621 = !DILocation(line: 394, column: 19, scope: !6618)
!6622 = !DILocation(line: 394, column: 5, scope: !6618)
!6623 = !DILocation(line: 395, column: 36, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6619, file: !1803, line: 394, column: 49)
!6625 = !DILocation(line: 395, column: 28, scope: !6624)
!6626 = !DILocation(line: 395, column: 39, scope: !6624)
!6627 = !DILocation(line: 395, column: 20, scope: !6624)
!6628 = !DILocation(line: 395, column: 9, scope: !6624)
!6629 = !DILocation(line: 395, column: 26, scope: !6624)
!6630 = !DILocation(line: 396, column: 36, scope: !6624)
!6631 = !DILocation(line: 396, column: 28, scope: !6624)
!6632 = !DILocation(line: 396, column: 39, scope: !6624)
!6633 = !DILocation(line: 396, column: 20, scope: !6624)
!6634 = !DILocation(line: 396, column: 9, scope: !6624)
!6635 = !DILocation(line: 396, column: 26, scope: !6624)
!6636 = !DILocation(line: 397, column: 36, scope: !6624)
!6637 = !DILocation(line: 397, column: 28, scope: !6624)
!6638 = !DILocation(line: 397, column: 39, scope: !6624)
!6639 = !DILocation(line: 397, column: 20, scope: !6624)
!6640 = !DILocation(line: 397, column: 9, scope: !6624)
!6641 = !DILocation(line: 397, column: 26, scope: !6624)
!6642 = !DILocation(line: 398, column: 21, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6624, file: !1803, line: 398, column: 13)
!6644 = !DILocation(line: 398, column: 13, scope: !6643)
!6645 = !DILocation(line: 398, column: 24, scope: !6643)
!6646 = !DILocation(line: 398, column: 36, scope: !6643)
!6647 = !DILocation(line: 398, column: 13, scope: !6624)
!6648 = !DILocation(line: 399, column: 31, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !1803, line: 398, column: 50)
!6650 = !DILocation(line: 399, column: 23, scope: !6649)
!6651 = !DILocation(line: 399, column: 34, scope: !6649)
!6652 = !DILocation(line: 399, column: 20, scope: !6649)
!6653 = !DILocation(line: 400, column: 9, scope: !6649)
!6654 = !DILocation(line: 401, column: 5, scope: !6624)
!6655 = !DILocation(line: 394, column: 45, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !6619, file: !1803, discriminator: 2)
!6657 = !DILocation(line: 394, column: 5, scope: !6656)
!6658 = distinct !{!6658, !6659}
!6659 = !DILocation(line: 394, column: 5, scope: !6315)
!6660 = !DILocation(line: 403, column: 12, scope: !6315)
!6661 = !DILocation(line: 403, column: 5, scope: !6315)
!6662 = !DILocation(line: 404, column: 1, scope: !6315)
!6663 = distinct !DISubprogram(name: "che_configure", scope: !1803, file: !1803, line: 127, type: !6664, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!1012, !2065, !1003, !1012, !1012, !1457}
!6666 = !DILocalVariable(name: "ac", arg: 1, scope: !6663, file: !1803, line: 127, type: !2065)
!6667 = !DILocation(line: 127, column: 60, scope: !6663)
!6668 = !DILocalVariable(name: "che_pos", arg: 2, scope: !6663, file: !1803, line: 128, type: !1003)
!6669 = !DILocation(line: 128, column: 55, scope: !6663)
!6670 = !DILocalVariable(name: "type", arg: 3, scope: !6663, file: !1803, line: 129, type: !1012)
!6671 = !DILocation(line: 129, column: 38, scope: !6663)
!6672 = !DILocalVariable(name: "id", arg: 4, scope: !6663, file: !1803, line: 129, type: !1012)
!6673 = !DILocation(line: 129, column: 48, scope: !6663)
!6674 = !DILocalVariable(name: "channels", arg: 5, scope: !6663, file: !1803, line: 129, type: !1457)
!6675 = !DILocation(line: 129, column: 57, scope: !6663)
!6676 = !DILocation(line: 131, column: 10, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6663, file: !1803, line: 131, column: 9)
!6678 = !DILocation(line: 131, column: 9, scope: !6677)
!6679 = !DILocation(line: 131, column: 19, scope: !6677)
!6680 = !DILocation(line: 131, column: 9, scope: !6663)
!6681 = !DILocation(line: 132, column: 9, scope: !6677)
!6682 = !DILocation(line: 133, column: 9, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6663, file: !1803, line: 133, column: 9)
!6684 = !DILocation(line: 133, column: 9, scope: !6663)
!6685 = !DILocation(line: 134, column: 28, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !1803, line: 134, column: 13)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !1803, line: 133, column: 18)
!6688 = !DILocation(line: 134, column: 14, scope: !6686)
!6689 = !DILocation(line: 134, column: 22, scope: !6686)
!6690 = !DILocation(line: 134, column: 18, scope: !6686)
!6691 = !DILocation(line: 134, column: 13, scope: !6687)
!6692 = !DILocation(line: 135, column: 39, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !1803, line: 135, column: 17)
!6694 = distinct !DILexicalBlock(scope: !6686, file: !1803, line: 134, column: 33)
!6695 = !DILocation(line: 135, column: 33, scope: !6693)
!6696 = !DILocation(line: 135, column: 19, scope: !6693)
!6697 = !DILocation(line: 135, column: 27, scope: !6693)
!6698 = !DILocation(line: 135, column: 23, scope: !6693)
!6699 = !DILocation(line: 135, column: 37, scope: !6693)
!6700 = !DILocation(line: 135, column: 17, scope: !6694)
!6701 = !DILocation(line: 136, column: 17, scope: !6693)
!6702 = !DILocation(line: 137, column: 33, scope: !6694)
!6703 = !DILocation(line: 137, column: 52, scope: !6694)
!6704 = !DILocation(line: 137, column: 38, scope: !6694)
!6705 = !DILocation(line: 137, column: 46, scope: !6694)
!6706 = !DILocation(line: 137, column: 42, scope: !6694)
!6707 = !DILocation(line: 137, column: 57, scope: !6694)
!6708 = !DILocation(line: 137, column: 62, scope: !6694)
!6709 = !DILocation(line: 137, column: 13, scope: !6694)
!6710 = !DILocation(line: 138, column: 9, scope: !6694)
!6711 = !DILocation(line: 139, column: 13, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6687, file: !1803, line: 139, column: 13)
!6713 = !DILocation(line: 139, column: 18, scope: !6712)
!6714 = !DILocation(line: 139, column: 13, scope: !6687)
!6715 = !DILocation(line: 140, column: 18, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !1803, line: 140, column: 17)
!6717 = distinct !DILexicalBlock(scope: !6712, file: !1803, line: 139, column: 31)
!6718 = !DILocation(line: 140, column: 17, scope: !6716)
!6719 = !DILocation(line: 140, column: 36, scope: !6716)
!6720 = !DILocation(line: 140, column: 41, scope: !6716)
!6721 = !DILocation(line: 140, column: 53, scope: !6716)
!6722 = !DILocation(line: 140, column: 57, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6716, file: !1803, discriminator: 1)
!6724 = !DILocation(line: 140, column: 62, scope: !6723)
!6725 = !DILocation(line: 140, column: 74, scope: !6723)
!6726 = !DILocation(line: 140, column: 77, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !6716, file: !1803, discriminator: 2)
!6728 = !DILocation(line: 140, column: 81, scope: !6727)
!6729 = !DILocation(line: 140, column: 87, scope: !6727)
!6730 = !DILocation(line: 140, column: 92, scope: !6727)
!6731 = !DILocation(line: 140, column: 95, scope: !6727)
!6732 = !DILocation(line: 140, column: 53, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6716, file: !1803, discriminator: 3)
!6734 = !DILocation(line: 140, column: 53, scope: !6735)
!6735 = !DILexicalBlockFile(scope: !6716, file: !1803, discriminator: 4)
!6736 = !DILocation(line: 140, column: 33, scope: !6735)
!6737 = !DILocation(line: 140, column: 27, scope: !6735)
!6738 = !DILocation(line: 140, column: 17, scope: !6735)
!6739 = !DILocation(line: 141, column: 24, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6716, file: !1803, line: 140, column: 103)
!6741 = !DILocation(line: 141, column: 28, scope: !6740)
!6742 = !DILocation(line: 141, column: 17, scope: !6740)
!6743 = !DILocation(line: 142, column: 17, scope: !6740)
!6744 = !DILocation(line: 144, column: 64, scope: !6717)
!6745 = !DILocation(line: 144, column: 50, scope: !6717)
!6746 = !DILocation(line: 144, column: 58, scope: !6717)
!6747 = !DILocation(line: 144, column: 54, scope: !6717)
!6748 = !DILocation(line: 144, column: 69, scope: !6717)
!6749 = !DILocation(line: 144, column: 34, scope: !6717)
!6750 = !DILocation(line: 144, column: 43, scope: !6717)
!6751 = !DILocation(line: 144, column: 13, scope: !6717)
!6752 = !DILocation(line: 144, column: 17, scope: !6717)
!6753 = !DILocation(line: 144, column: 47, scope: !6717)
!6754 = !DILocation(line: 145, column: 17, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6717, file: !1803, line: 145, column: 17)
!6756 = !DILocation(line: 145, column: 22, scope: !6755)
!6757 = !DILocation(line: 145, column: 34, scope: !6755)
!6758 = !DILocation(line: 146, column: 18, scope: !6755)
!6759 = !DILocation(line: 146, column: 23, scope: !6755)
!6760 = !DILocation(line: 146, column: 35, scope: !6755)
!6761 = !DILocation(line: 146, column: 38, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6755, file: !1803, discriminator: 1)
!6763 = !DILocation(line: 146, column: 42, scope: !6762)
!6764 = !DILocation(line: 146, column: 48, scope: !6762)
!6765 = !DILocation(line: 146, column: 53, scope: !6762)
!6766 = !DILocation(line: 146, column: 56, scope: !6762)
!6767 = !DILocation(line: 145, column: 17, scope: !6768)
!6768 = !DILexicalBlockFile(scope: !6717, file: !1803, discriminator: 1)
!6769 = !DILocation(line: 147, column: 68, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6755, file: !1803, line: 146, column: 63)
!6771 = !DILocation(line: 147, column: 54, scope: !6770)
!6772 = !DILocation(line: 147, column: 62, scope: !6770)
!6773 = !DILocation(line: 147, column: 58, scope: !6770)
!6774 = !DILocation(line: 147, column: 73, scope: !6770)
!6775 = !DILocation(line: 147, column: 38, scope: !6770)
!6776 = !DILocation(line: 147, column: 47, scope: !6770)
!6777 = !DILocation(line: 147, column: 17, scope: !6770)
!6778 = !DILocation(line: 147, column: 21, scope: !6770)
!6779 = !DILocation(line: 147, column: 51, scope: !6770)
!6780 = !DILocation(line: 148, column: 13, scope: !6770)
!6781 = !DILocation(line: 149, column: 9, scope: !6717)
!6782 = !DILocation(line: 150, column: 5, scope: !6687)
!6783 = !DILocation(line: 151, column: 27, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !1803, line: 151, column: 13)
!6785 = distinct !DILexicalBlock(scope: !6683, file: !1803, line: 150, column: 12)
!6786 = !DILocation(line: 151, column: 13, scope: !6784)
!6787 = !DILocation(line: 151, column: 21, scope: !6784)
!6788 = !DILocation(line: 151, column: 17, scope: !6784)
!6789 = !DILocation(line: 151, column: 13, scope: !6785)
!6790 = !DILocation(line: 152, column: 49, scope: !6784)
!6791 = !DILocation(line: 152, column: 35, scope: !6784)
!6792 = !DILocation(line: 152, column: 43, scope: !6784)
!6793 = !DILocation(line: 152, column: 39, scope: !6784)
!6794 = !DILocation(line: 152, column: 54, scope: !6784)
!6795 = !DILocation(line: 152, column: 13, scope: !6784)
!6796 = !DILocation(line: 153, column: 33, scope: !6785)
!6797 = !DILocation(line: 153, column: 19, scope: !6785)
!6798 = !DILocation(line: 153, column: 27, scope: !6785)
!6799 = !DILocation(line: 153, column: 23, scope: !6785)
!6800 = !DILocation(line: 153, column: 18, scope: !6785)
!6801 = !DILocation(line: 153, column: 9, scope: !6785)
!6802 = !DILocation(line: 155, column: 5, scope: !6663)
!6803 = !DILocation(line: 156, column: 1, scope: !6663)
!6804 = distinct !DISubprogram(name: "frame_configure_elements", scope: !1803, file: !1803, line: 158, type: !1260, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6805 = !DILocalVariable(name: "avctx", arg: 1, scope: !6804, file: !1803, line: 158, type: !1262)
!6806 = !DILocation(line: 158, column: 53, scope: !6804)
!6807 = !DILocalVariable(name: "ac", scope: !6804, file: !1803, line: 160, type: !2065)
!6808 = !DILocation(line: 160, column: 17, scope: !6804)
!6809 = !DILocation(line: 160, column: 22, scope: !6804)
!6810 = !DILocation(line: 160, column: 29, scope: !6804)
!6811 = !DILocalVariable(name: "type", scope: !6804, file: !1803, line: 161, type: !1012)
!6812 = !DILocation(line: 161, column: 9, scope: !6804)
!6813 = !DILocalVariable(name: "id", scope: !6804, file: !1803, line: 161, type: !1012)
!6814 = !DILocation(line: 161, column: 15, scope: !6804)
!6815 = !DILocalVariable(name: "ch", scope: !6804, file: !1803, line: 161, type: !1012)
!6816 = !DILocation(line: 161, column: 19, scope: !6804)
!6817 = !DILocalVariable(name: "ret", scope: !6804, file: !1803, line: 161, type: !1012)
!6818 = !DILocation(line: 161, column: 23, scope: !6804)
!6819 = !DILocation(line: 164, column: 15, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6804, file: !1803, line: 164, column: 5)
!6821 = !DILocation(line: 164, column: 10, scope: !6820)
!6822 = !DILocation(line: 164, column: 20, scope: !6823)
!6823 = !DILexicalBlockFile(scope: !6824, file: !1803, discriminator: 1)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !1803, line: 164, column: 5)
!6825 = !DILocation(line: 164, column: 25, scope: !6823)
!6826 = !DILocation(line: 164, column: 5, scope: !6823)
!6827 = !DILocation(line: 165, column: 17, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !1803, line: 165, column: 9)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !1803, line: 164, column: 38)
!6830 = !DILocation(line: 165, column: 14, scope: !6828)
!6831 = !DILocation(line: 165, column: 22, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6833, file: !1803, discriminator: 1)
!6833 = distinct !DILexicalBlock(scope: !6828, file: !1803, line: 165, column: 9)
!6834 = !DILocation(line: 165, column: 25, scope: !6832)
!6835 = !DILocation(line: 165, column: 9, scope: !6832)
!6836 = !DILocalVariable(name: "che", scope: !6837, file: !1803, line: 166, type: !2095)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !1803, line: 165, column: 37)
!6838 = !DILocation(line: 166, column: 29, scope: !6837)
!6839 = !DILocation(line: 166, column: 49, scope: !6837)
!6840 = !DILocation(line: 166, column: 35, scope: !6837)
!6841 = !DILocation(line: 166, column: 43, scope: !6837)
!6842 = !DILocation(line: 166, column: 39, scope: !6837)
!6843 = !DILocation(line: 167, column: 17, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6837, file: !1803, line: 167, column: 17)
!6845 = !DILocation(line: 167, column: 17, scope: !6837)
!6846 = !DILocation(line: 168, column: 34, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6844, file: !1803, line: 167, column: 22)
!6848 = !DILocation(line: 168, column: 39, scope: !6847)
!6849 = !DILocation(line: 168, column: 45, scope: !6847)
!6850 = !DILocation(line: 168, column: 17, scope: !6847)
!6851 = !DILocation(line: 168, column: 22, scope: !6847)
!6852 = !DILocation(line: 168, column: 28, scope: !6847)
!6853 = !DILocation(line: 168, column: 32, scope: !6847)
!6854 = !DILocation(line: 169, column: 34, scope: !6847)
!6855 = !DILocation(line: 169, column: 39, scope: !6847)
!6856 = !DILocation(line: 169, column: 45, scope: !6847)
!6857 = !DILocation(line: 169, column: 17, scope: !6847)
!6858 = !DILocation(line: 169, column: 22, scope: !6847)
!6859 = !DILocation(line: 169, column: 28, scope: !6847)
!6860 = !DILocation(line: 169, column: 32, scope: !6847)
!6861 = !DILocation(line: 170, column: 13, scope: !6847)
!6862 = !DILocation(line: 171, column: 9, scope: !6837)
!6863 = !DILocation(line: 165, column: 33, scope: !6864)
!6864 = !DILexicalBlockFile(scope: !6833, file: !1803, discriminator: 2)
!6865 = !DILocation(line: 165, column: 9, scope: !6864)
!6866 = distinct !{!6866, !6867}
!6867 = !DILocation(line: 165, column: 9, scope: !6829)
!6868 = !DILocation(line: 172, column: 5, scope: !6829)
!6869 = !DILocation(line: 164, column: 34, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6824, file: !1803, discriminator: 2)
!6871 = !DILocation(line: 164, column: 5, scope: !6870)
!6872 = distinct !{!6872, !6873}
!6873 = !DILocation(line: 164, column: 5, scope: !6804)
!6874 = !DILocation(line: 175, column: 20, scope: !6804)
!6875 = !DILocation(line: 175, column: 24, scope: !6804)
!6876 = !DILocation(line: 175, column: 5, scope: !6804)
!6877 = !DILocation(line: 176, column: 10, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6804, file: !1803, line: 176, column: 9)
!6879 = !DILocation(line: 176, column: 17, scope: !6878)
!6880 = !DILocation(line: 176, column: 9, scope: !6804)
!6881 = !DILocation(line: 177, column: 9, scope: !6878)
!6882 = !DILocation(line: 179, column: 5, scope: !6804)
!6883 = !DILocation(line: 179, column: 9, scope: !6804)
!6884 = !DILocation(line: 179, column: 16, scope: !6804)
!6885 = !DILocation(line: 179, column: 27, scope: !6804)
!6886 = !DILocation(line: 180, column: 30, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6804, file: !1803, line: 180, column: 9)
!6888 = !DILocation(line: 180, column: 37, scope: !6887)
!6889 = !DILocation(line: 180, column: 41, scope: !6887)
!6890 = !DILocation(line: 180, column: 16, scope: !6887)
!6891 = !DILocation(line: 180, column: 14, scope: !6887)
!6892 = !DILocation(line: 180, column: 52, scope: !6887)
!6893 = !DILocation(line: 180, column: 9, scope: !6804)
!6894 = !DILocation(line: 181, column: 16, scope: !6887)
!6895 = !DILocation(line: 181, column: 9, scope: !6887)
!6896 = !DILocation(line: 184, column: 13, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6804, file: !1803, line: 184, column: 5)
!6898 = !DILocation(line: 184, column: 10, scope: !6897)
!6899 = !DILocation(line: 184, column: 18, scope: !6900)
!6900 = !DILexicalBlockFile(scope: !6901, file: !1803, discriminator: 1)
!6901 = distinct !DILexicalBlock(scope: !6897, file: !1803, line: 184, column: 5)
!6902 = !DILocation(line: 184, column: 23, scope: !6900)
!6903 = !DILocation(line: 184, column: 30, scope: !6900)
!6904 = !DILocation(line: 184, column: 21, scope: !6900)
!6905 = !DILocation(line: 184, column: 5, scope: !6900)
!6906 = !DILocation(line: 185, column: 32, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !1803, line: 185, column: 13)
!6908 = distinct !DILexicalBlock(scope: !6901, file: !1803, line: 184, column: 46)
!6909 = !DILocation(line: 185, column: 13, scope: !6907)
!6910 = !DILocation(line: 185, column: 17, scope: !6907)
!6911 = !DILocation(line: 185, column: 13, scope: !6908)
!6912 = !DILocation(line: 186, column: 80, scope: !6907)
!6913 = !DILocation(line: 186, column: 55, scope: !6907)
!6914 = !DILocation(line: 186, column: 59, scope: !6907)
!6915 = !DILocation(line: 186, column: 66, scope: !6907)
!6916 = !DILocation(line: 186, column: 43, scope: !6907)
!6917 = !DILocation(line: 186, column: 32, scope: !6907)
!6918 = !DILocation(line: 186, column: 13, scope: !6907)
!6919 = !DILocation(line: 186, column: 17, scope: !6907)
!6920 = !DILocation(line: 186, column: 37, scope: !6907)
!6921 = !DILocation(line: 186, column: 41, scope: !6907)
!6922 = !DILocation(line: 187, column: 5, scope: !6908)
!6923 = !DILocation(line: 184, column: 42, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6901, file: !1803, discriminator: 2)
!6925 = !DILocation(line: 184, column: 5, scope: !6924)
!6926 = distinct !{!6926, !6927}
!6927 = !DILocation(line: 184, column: 5, scope: !6804)
!6928 = !DILocation(line: 189, column: 5, scope: !6804)
!6929 = !DILocation(line: 190, column: 1, scope: !6804)
!6930 = distinct !DISubprogram(name: "count_paired_channels", scope: !1803, file: !1803, line: 228, type: !6931, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!1012, !3719, !1012, !1012, !1457}
!6933 = !DILocalVariable(name: "layout_map", arg: 1, scope: !6930, file: !1803, line: 228, type: !3719)
!6934 = !DILocation(line: 228, column: 44, scope: !6930)
!6935 = !DILocalVariable(name: "tags", arg: 2, scope: !6930, file: !1803, line: 228, type: !1012)
!6936 = !DILocation(line: 228, column: 64, scope: !6930)
!6937 = !DILocalVariable(name: "pos", arg: 3, scope: !6930, file: !1803, line: 228, type: !1012)
!6938 = !DILocation(line: 228, column: 74, scope: !6930)
!6939 = !DILocalVariable(name: "current", arg: 4, scope: !6930, file: !1803, line: 229, type: !1457)
!6940 = !DILocation(line: 229, column: 39, scope: !6930)
!6941 = !DILocalVariable(name: "num_pos_channels", scope: !6930, file: !1803, line: 231, type: !1012)
!6942 = !DILocation(line: 231, column: 9, scope: !6930)
!6943 = !DILocalVariable(name: "first_cpe", scope: !6930, file: !1803, line: 232, type: !1012)
!6944 = !DILocation(line: 232, column: 9, scope: !6930)
!6945 = !DILocalVariable(name: "sce_parity", scope: !6930, file: !1803, line: 233, type: !1012)
!6946 = !DILocation(line: 233, column: 9, scope: !6930)
!6947 = !DILocalVariable(name: "i", scope: !6930, file: !1803, line: 234, type: !1012)
!6948 = !DILocation(line: 234, column: 9, scope: !6930)
!6949 = !DILocation(line: 235, column: 15, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6930, file: !1803, line: 235, column: 5)
!6951 = !DILocation(line: 235, column: 14, scope: !6950)
!6952 = !DILocation(line: 235, column: 12, scope: !6950)
!6953 = !DILocation(line: 235, column: 10, scope: !6950)
!6954 = !DILocation(line: 235, column: 24, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6956, file: !1803, discriminator: 1)
!6956 = distinct !DILexicalBlock(scope: !6950, file: !1803, line: 235, column: 5)
!6957 = !DILocation(line: 235, column: 28, scope: !6955)
!6958 = !DILocation(line: 235, column: 26, scope: !6955)
!6959 = !DILocation(line: 235, column: 5, scope: !6955)
!6960 = !DILocation(line: 236, column: 24, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !1803, line: 236, column: 13)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !1803, line: 235, column: 39)
!6963 = !DILocation(line: 236, column: 13, scope: !6961)
!6964 = !DILocation(line: 236, column: 33, scope: !6961)
!6965 = !DILocation(line: 236, column: 30, scope: !6961)
!6966 = !DILocation(line: 236, column: 13, scope: !6962)
!6967 = !DILocation(line: 237, column: 13, scope: !6961)
!6968 = !DILocation(line: 238, column: 24, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6962, file: !1803, line: 238, column: 13)
!6970 = !DILocation(line: 238, column: 13, scope: !6969)
!6971 = !DILocation(line: 238, column: 30, scope: !6969)
!6972 = !DILocation(line: 238, column: 13, scope: !6962)
!6973 = !DILocation(line: 239, column: 17, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !1803, line: 239, column: 17)
!6975 = distinct !DILexicalBlock(scope: !6969, file: !1803, line: 238, column: 43)
!6976 = !DILocation(line: 239, column: 17, scope: !6975)
!6977 = !DILocation(line: 240, column: 21, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !1803, line: 240, column: 21)
!6979 = distinct !DILexicalBlock(scope: !6974, file: !1803, line: 239, column: 29)
!6980 = !DILocation(line: 240, column: 25, scope: !6978)
!6981 = !DILocation(line: 240, column: 46, scope: !6978)
!6982 = !DILocation(line: 240, column: 50, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !6978, file: !1803, discriminator: 1)
!6984 = !DILocation(line: 240, column: 21, scope: !6983)
!6985 = !DILocation(line: 241, column: 32, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6978, file: !1803, line: 240, column: 61)
!6987 = !DILocation(line: 242, column: 17, scope: !6986)
!6988 = !DILocation(line: 243, column: 21, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6978, file: !1803, line: 242, column: 24)
!6990 = !DILocation(line: 245, column: 13, scope: !6979)
!6991 = !DILocation(line: 246, column: 30, scope: !6975)
!6992 = !DILocation(line: 247, column: 23, scope: !6975)
!6993 = !DILocation(line: 248, column: 9, scope: !6975)
!6994 = !DILocation(line: 249, column: 29, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6969, file: !1803, line: 248, column: 16)
!6996 = !DILocation(line: 250, column: 24, scope: !6995)
!6997 = !DILocation(line: 252, column: 5, scope: !6962)
!6998 = !DILocation(line: 235, column: 35, scope: !6999)
!6999 = !DILexicalBlockFile(scope: !6956, file: !1803, discriminator: 2)
!7000 = !DILocation(line: 235, column: 5, scope: !6999)
!7001 = distinct !{!7001, !7002}
!7002 = !DILocation(line: 235, column: 5, scope: !6930)
!7003 = !DILocation(line: 253, column: 9, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6930, file: !1803, line: 253, column: 9)
!7005 = !DILocation(line: 253, column: 20, scope: !7004)
!7006 = !DILocation(line: 254, column: 11, scope: !7004)
!7007 = !DILocation(line: 254, column: 15, scope: !7004)
!7008 = !DILocation(line: 254, column: 36, scope: !7004)
!7009 = !DILocation(line: 254, column: 39, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !7004, file: !1803, discriminator: 1)
!7011 = !DILocation(line: 254, column: 50, scope: !7010)
!7012 = !DILocation(line: 254, column: 53, scope: !7013)
!7013 = !DILexicalBlockFile(scope: !7004, file: !1803, discriminator: 2)
!7014 = !DILocation(line: 254, column: 57, scope: !7013)
!7015 = !DILocation(line: 253, column: 9, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !6930, file: !1803, discriminator: 1)
!7017 = !DILocation(line: 255, column: 9, scope: !7004)
!7018 = !DILocation(line: 256, column: 16, scope: !6930)
!7019 = !DILocation(line: 256, column: 6, scope: !6930)
!7020 = !DILocation(line: 256, column: 14, scope: !6930)
!7021 = !DILocation(line: 257, column: 12, scope: !6930)
!7022 = !DILocation(line: 257, column: 5, scope: !6930)
!7023 = !DILocation(line: 258, column: 1, scope: !6930)
!7024 = distinct !DISubprogram(name: "assign_pair", scope: !1803, file: !1803, line: 199, type: !7025, isLocal: true, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!7025 = !DISubroutineType(types: !7026)
!7026 = !{!1012, !7027, !3719, !1012, !1073, !1073, !1012}
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6330, size: 64, align: 64)
!7028 = !DILocalVariable(name: "e2c_vec", arg: 1, scope: !7024, file: !1803, line: 199, type: !7027)
!7029 = !DILocation(line: 199, column: 47, scope: !7024)
!7030 = !DILocalVariable(name: "layout_map", arg: 2, scope: !7024, file: !1803, line: 200, type: !3719)
!7031 = !DILocation(line: 200, column: 34, scope: !7024)
!7032 = !DILocalVariable(name: "offset", arg: 3, scope: !7024, file: !1803, line: 200, type: !1012)
!7033 = !DILocation(line: 200, column: 54, scope: !7024)
!7034 = !DILocalVariable(name: "left", arg: 4, scope: !7024, file: !1803, line: 200, type: !1073)
!7035 = !DILocation(line: 200, column: 71, scope: !7024)
!7036 = !DILocalVariable(name: "right", arg: 5, scope: !7024, file: !1803, line: 201, type: !1073)
!7037 = !DILocation(line: 201, column: 33, scope: !7024)
!7038 = !DILocalVariable(name: "pos", arg: 6, scope: !7024, file: !1803, line: 201, type: !1012)
!7039 = !DILocation(line: 201, column: 44, scope: !7024)
!7040 = !DILocation(line: 203, column: 20, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7024, file: !1803, line: 203, column: 9)
!7042 = !DILocation(line: 203, column: 9, scope: !7041)
!7043 = !DILocation(line: 203, column: 31, scope: !7041)
!7044 = !DILocation(line: 203, column: 9, scope: !7024)
!7045 = !DILocation(line: 204, column: 17, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7041, file: !1803, line: 203, column: 44)
!7047 = !DILocation(line: 204, column: 9, scope: !7046)
!7048 = !DILocation(line: 204, column: 52, scope: !7046)
!7049 = !DILocation(line: 205, column: 28, scope: !7046)
!7050 = !DILocation(line: 205, column: 35, scope: !7046)
!7051 = !DILocation(line: 205, column: 33, scope: !7046)
!7052 = !DILocation(line: 207, column: 35, scope: !7046)
!7053 = !DILocation(line: 207, column: 24, scope: !7046)
!7054 = !DILocation(line: 208, column: 29, scope: !7046)
!7055 = !DILocation(line: 204, column: 27, scope: !7046)
!7056 = !DILocation(line: 210, column: 9, scope: !7046)
!7057 = !DILocation(line: 212, column: 17, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7041, file: !1803, line: 211, column: 12)
!7059 = !DILocation(line: 212, column: 9, scope: !7058)
!7060 = !DILocation(line: 212, column: 52, scope: !7058)
!7061 = !DILocation(line: 213, column: 28, scope: !7058)
!7062 = !DILocation(line: 215, column: 35, scope: !7058)
!7063 = !DILocation(line: 215, column: 24, scope: !7058)
!7064 = !DILocation(line: 216, column: 29, scope: !7058)
!7065 = !DILocation(line: 212, column: 27, scope: !7058)
!7066 = !DILocation(line: 218, column: 17, scope: !7058)
!7067 = !DILocation(line: 218, column: 24, scope: !7058)
!7068 = !DILocation(line: 218, column: 9, scope: !7058)
!7069 = !DILocation(line: 218, column: 56, scope: !7058)
!7070 = !DILocation(line: 219, column: 28, scope: !7058)
!7071 = !DILocation(line: 221, column: 35, scope: !7058)
!7072 = !DILocation(line: 221, column: 42, scope: !7058)
!7073 = !DILocation(line: 221, column: 24, scope: !7058)
!7074 = !DILocation(line: 222, column: 29, scope: !7058)
!7075 = !DILocation(line: 218, column: 31, scope: !7058)
!7076 = !DILocation(line: 224, column: 9, scope: !7058)
!7077 = !DILocation(line: 226, column: 1, scope: !7024)
!7078 = distinct !DISubprogram(name: "init_get_bits8", scope: !2045, file: !2045, line: 650, type: !5272, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!7079 = !DILocalVariable(name: "s", arg: 1, scope: !7078, file: !2045, line: 650, type: !2043)
!7080 = !DILocation(line: 650, column: 49, scope: !7078)
!7081 = !DILocalVariable(name: "buffer", arg: 2, scope: !7078, file: !2045, line: 650, type: !1607)
!7082 = !DILocation(line: 650, column: 67, scope: !7078)
!7083 = !DILocalVariable(name: "byte_size", arg: 3, scope: !7078, file: !2045, line: 651, type: !1012)
!7084 = !DILocation(line: 651, column: 38, scope: !7078)
!7085 = !DILocation(line: 653, column: 9, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7078, file: !2045, line: 653, column: 9)
!7087 = !DILocation(line: 653, column: 19, scope: !7086)
!7088 = !DILocation(line: 653, column: 36, scope: !7086)
!7089 = !DILocation(line: 653, column: 39, scope: !7090)
!7090 = !DILexicalBlockFile(scope: !7086, file: !2045, discriminator: 1)
!7091 = !DILocation(line: 653, column: 49, scope: !7090)
!7092 = !DILocation(line: 653, column: 9, scope: !7090)
!7093 = !DILocation(line: 654, column: 19, scope: !7086)
!7094 = !DILocation(line: 654, column: 9, scope: !7086)
!7095 = !DILocation(line: 655, column: 26, scope: !7078)
!7096 = !DILocation(line: 655, column: 29, scope: !7078)
!7097 = !DILocation(line: 655, column: 37, scope: !7078)
!7098 = !DILocation(line: 655, column: 47, scope: !7078)
!7099 = !DILocation(line: 655, column: 12, scope: !7078)
!7100 = !DILocation(line: 655, column: 5, scope: !7078)
!7101 = distinct !DISubprogram(name: "aac_decode_er_frame", scope: !1803, file: !1803, line: 3043, type: !7102, isLocal: true, isDefinition: true, scopeLine: 3045, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{!1012, !1262, !1020, !1457, !2043}
!7104 = !DILocalVariable(name: "avctx", arg: 1, scope: !7101, file: !1803, line: 3043, type: !1262)
!7105 = !DILocation(line: 3043, column: 48, scope: !7101)
!7106 = !DILocalVariable(name: "data", arg: 2, scope: !7101, file: !1803, line: 3043, type: !1020)
!7107 = !DILocation(line: 3043, column: 61, scope: !7101)
!7108 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !7101, file: !1803, line: 3044, type: !1457)
!7109 = !DILocation(line: 3044, column: 37, scope: !7101)
!7110 = !DILocalVariable(name: "gb", arg: 4, scope: !7101, file: !1803, line: 3044, type: !2043)
!7111 = !DILocation(line: 3044, column: 67, scope: !7101)
!7112 = !DILocalVariable(name: "ac", scope: !7101, file: !1803, line: 3046, type: !2065)
!7113 = !DILocation(line: 3046, column: 17, scope: !7101)
!7114 = !DILocation(line: 3046, column: 22, scope: !7101)
!7115 = !DILocation(line: 3046, column: 29, scope: !7101)
!7116 = !DILocalVariable(name: "m4ac", scope: !7101, file: !1803, line: 3047, type: !7117)
!7117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7118)
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64, align: 64)
!7119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2614)
!7120 = !DILocation(line: 3047, column: 35, scope: !7101)
!7121 = !DILocation(line: 3047, column: 43, scope: !7101)
!7122 = !DILocation(line: 3047, column: 47, scope: !7101)
!7123 = !DILocation(line: 3047, column: 53, scope: !7101)
!7124 = !DILocalVariable(name: "che", scope: !7101, file: !1803, line: 3048, type: !2095)
!7125 = !DILocation(line: 3048, column: 21, scope: !7101)
!7126 = !DILocalVariable(name: "err", scope: !7101, file: !1803, line: 3049, type: !1012)
!7127 = !DILocation(line: 3049, column: 9, scope: !7101)
!7128 = !DILocalVariable(name: "i", scope: !7101, file: !1803, line: 3049, type: !1012)
!7129 = !DILocation(line: 3049, column: 14, scope: !7101)
!7130 = !DILocalVariable(name: "samples", scope: !7101, file: !1803, line: 3050, type: !1012)
!7131 = !DILocation(line: 3050, column: 9, scope: !7101)
!7132 = !DILocation(line: 3050, column: 19, scope: !7101)
!7133 = !DILocation(line: 3050, column: 25, scope: !7101)
!7134 = !DILocalVariable(name: "chan_config", scope: !7101, file: !1803, line: 3051, type: !1012)
!7135 = !DILocation(line: 3051, column: 9, scope: !7101)
!7136 = !DILocation(line: 3051, column: 23, scope: !7101)
!7137 = !DILocation(line: 3051, column: 29, scope: !7101)
!7138 = !DILocalVariable(name: "aot", scope: !7101, file: !1803, line: 3052, type: !1012)
!7139 = !DILocation(line: 3052, column: 9, scope: !7101)
!7140 = !DILocation(line: 3052, column: 15, scope: !7101)
!7141 = !DILocation(line: 3052, column: 21, scope: !7101)
!7142 = !DILocation(line: 3054, column: 9, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7101, file: !1803, line: 3054, column: 9)
!7144 = !DILocation(line: 3054, column: 13, scope: !7143)
!7145 = !DILocation(line: 3054, column: 30, scope: !7143)
!7146 = !DILocation(line: 3054, column: 33, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !7143, file: !1803, discriminator: 1)
!7148 = !DILocation(line: 3054, column: 37, scope: !7147)
!7149 = !DILocation(line: 3054, column: 9, scope: !7147)
!7150 = !DILocation(line: 3055, column: 17, scope: !7143)
!7151 = !DILocation(line: 3055, column: 9, scope: !7143)
!7152 = !DILocation(line: 3057, column: 17, scope: !7101)
!7153 = !DILocation(line: 3057, column: 5, scope: !7101)
!7154 = !DILocation(line: 3057, column: 9, scope: !7101)
!7155 = !DILocation(line: 3057, column: 15, scope: !7101)
!7156 = !DILocation(line: 3059, column: 41, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7101, file: !1803, line: 3059, column: 9)
!7158 = !DILocation(line: 3059, column: 16, scope: !7157)
!7159 = !DILocation(line: 3059, column: 14, scope: !7157)
!7160 = !DILocation(line: 3059, column: 49, scope: !7157)
!7161 = !DILocation(line: 3059, column: 9, scope: !7101)
!7162 = !DILocation(line: 3060, column: 16, scope: !7157)
!7163 = !DILocation(line: 3060, column: 9, scope: !7157)
!7164 = !DILocation(line: 3064, column: 26, scope: !7101)
!7165 = !DILocation(line: 3064, column: 30, scope: !7101)
!7166 = !DILocation(line: 3064, column: 5, scope: !7101)
!7167 = !DILocation(line: 3064, column: 9, scope: !7101)
!7168 = !DILocation(line: 3064, column: 16, scope: !7101)
!7169 = !DILocation(line: 3064, column: 24, scope: !7101)
!7170 = !DILocation(line: 3066, column: 5, scope: !7101)
!7171 = !DILocation(line: 3066, column: 9, scope: !7101)
!7172 = !DILocation(line: 3066, column: 21, scope: !7101)
!7173 = !DILocation(line: 3068, column: 9, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7101, file: !1803, line: 3068, column: 9)
!7175 = !DILocation(line: 3068, column: 21, scope: !7174)
!7176 = !DILocation(line: 3068, column: 25, scope: !7174)
!7177 = !DILocation(line: 3068, column: 29, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !7174, file: !1803, discriminator: 1)
!7179 = !DILocation(line: 3068, column: 41, scope: !7178)
!7180 = !DILocation(line: 3068, column: 46, scope: !7178)
!7181 = !DILocation(line: 3068, column: 49, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !7174, file: !1803, discriminator: 2)
!7183 = !DILocation(line: 3068, column: 61, scope: !7182)
!7184 = !DILocation(line: 3068, column: 67, scope: !7182)
!7185 = !DILocation(line: 3068, column: 70, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7174, file: !1803, discriminator: 3)
!7187 = !DILocation(line: 3068, column: 82, scope: !7186)
!7188 = !DILocation(line: 3068, column: 9, scope: !7186)
!7189 = !DILocation(line: 3069, column: 31, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7174, file: !1803, line: 3068, column: 89)
!7191 = !DILocation(line: 3070, column: 31, scope: !7190)
!7192 = !DILocation(line: 3069, column: 9, scope: !7190)
!7193 = !DILocation(line: 3071, column: 9, scope: !7190)
!7194 = !DILocation(line: 3073, column: 12, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7101, file: !1803, line: 3073, column: 5)
!7196 = !DILocation(line: 3073, column: 10, scope: !7195)
!7197 = !DILocation(line: 3073, column: 17, scope: !7198)
!7198 = !DILexicalBlockFile(scope: !7199, file: !1803, discriminator: 1)
!7199 = distinct !DILexicalBlock(scope: !7195, file: !1803, line: 3073, column: 5)
!7200 = !DILocation(line: 3073, column: 37, scope: !7198)
!7201 = !DILocation(line: 3073, column: 21, scope: !7198)
!7202 = !DILocation(line: 3073, column: 19, scope: !7198)
!7203 = !DILocation(line: 3073, column: 5, scope: !7198)
!7204 = !DILocalVariable(name: "elem_type", scope: !7205, file: !1803, line: 3074, type: !1165)
!7205 = distinct !DILexicalBlock(scope: !7199, file: !1803, line: 3073, column: 56)
!7206 = !DILocation(line: 3074, column: 19, scope: !7205)
!7207 = !DILocation(line: 3074, column: 69, scope: !7205)
!7208 = !DILocation(line: 3074, column: 31, scope: !7205)
!7209 = !DILocation(line: 3074, column: 54, scope: !7205)
!7210 = !DILocation(line: 3074, column: 65, scope: !7205)
!7211 = !DILocalVariable(name: "elem_id", scope: !7205, file: !1803, line: 3075, type: !1165)
!7212 = !DILocation(line: 3075, column: 19, scope: !7205)
!7213 = !DILocation(line: 3075, column: 67, scope: !7205)
!7214 = !DILocation(line: 3075, column: 29, scope: !7205)
!7215 = !DILocation(line: 3075, column: 52, scope: !7205)
!7216 = !DILocation(line: 3075, column: 63, scope: !7205)
!7217 = !DILocation(line: 3076, column: 27, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7205, file: !1803, line: 3076, column: 13)
!7219 = !DILocation(line: 3076, column: 31, scope: !7218)
!7220 = !DILocation(line: 3076, column: 42, scope: !7218)
!7221 = !DILocation(line: 3076, column: 19, scope: !7218)
!7222 = !DILocation(line: 3076, column: 18, scope: !7218)
!7223 = !DILocation(line: 3076, column: 13, scope: !7205)
!7224 = !DILocation(line: 3077, column: 20, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7218, file: !1803, line: 3076, column: 53)
!7226 = !DILocation(line: 3077, column: 24, scope: !7225)
!7227 = !DILocation(line: 3079, column: 20, scope: !7225)
!7228 = !DILocation(line: 3079, column: 31, scope: !7225)
!7229 = !DILocation(line: 3077, column: 13, scope: !7225)
!7230 = !DILocation(line: 3080, column: 13, scope: !7225)
!7231 = !DILocation(line: 3082, column: 9, scope: !7205)
!7232 = !DILocation(line: 3082, column: 14, scope: !7205)
!7233 = !DILocation(line: 3082, column: 22, scope: !7205)
!7234 = !DILocation(line: 3083, column: 13, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7205, file: !1803, line: 3083, column: 13)
!7236 = !DILocation(line: 3083, column: 17, scope: !7235)
!7237 = !DILocation(line: 3083, column: 13, scope: !7205)
!7238 = !DILocation(line: 3084, column: 23, scope: !7235)
!7239 = !DILocation(line: 3084, column: 13, scope: !7235)
!7240 = !DILocation(line: 3085, column: 17, scope: !7205)
!7241 = !DILocation(line: 3085, column: 9, scope: !7205)
!7242 = !DILocation(line: 3087, column: 30, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7205, file: !1803, line: 3085, column: 28)
!7244 = !DILocation(line: 3087, column: 35, scope: !7243)
!7245 = !DILocation(line: 3087, column: 40, scope: !7243)
!7246 = !DILocation(line: 3087, column: 47, scope: !7243)
!7247 = !DILocation(line: 3087, column: 19, scope: !7243)
!7248 = !DILocation(line: 3087, column: 17, scope: !7243)
!7249 = !DILocation(line: 3088, column: 13, scope: !7243)
!7250 = !DILocation(line: 3090, column: 30, scope: !7243)
!7251 = !DILocation(line: 3090, column: 34, scope: !7243)
!7252 = !DILocation(line: 3090, column: 38, scope: !7243)
!7253 = !DILocation(line: 3090, column: 19, scope: !7243)
!7254 = !DILocation(line: 3090, column: 17, scope: !7243)
!7255 = !DILocation(line: 3091, column: 13, scope: !7243)
!7256 = !DILocation(line: 3093, column: 30, scope: !7243)
!7257 = !DILocation(line: 3093, column: 35, scope: !7243)
!7258 = !DILocation(line: 3093, column: 40, scope: !7243)
!7259 = !DILocation(line: 3093, column: 47, scope: !7243)
!7260 = !DILocation(line: 3093, column: 19, scope: !7243)
!7261 = !DILocation(line: 3093, column: 17, scope: !7243)
!7262 = !DILocation(line: 3094, column: 13, scope: !7243)
!7263 = !DILocation(line: 3096, column: 13, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7205, file: !1803, line: 3096, column: 13)
!7265 = !DILocation(line: 3096, column: 17, scope: !7264)
!7266 = !DILocation(line: 3096, column: 13, scope: !7205)
!7267 = !DILocation(line: 3097, column: 20, scope: !7264)
!7268 = !DILocation(line: 3097, column: 13, scope: !7264)
!7269 = !DILocation(line: 3098, column: 5, scope: !7205)
!7270 = !DILocation(line: 3073, column: 52, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7199, file: !1803, discriminator: 2)
!7272 = !DILocation(line: 3073, column: 5, scope: !7271)
!7273 = distinct !{!7273, !7274}
!7274 = !DILocation(line: 3073, column: 5, scope: !7101)
!7275 = !DILocation(line: 3100, column: 24, scope: !7101)
!7276 = !DILocation(line: 3100, column: 28, scope: !7101)
!7277 = !DILocation(line: 3100, column: 5, scope: !7101)
!7278 = !DILocation(line: 3102, column: 10, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7101, file: !1803, line: 3102, column: 9)
!7280 = !DILocation(line: 3102, column: 14, scope: !7279)
!7281 = !DILocation(line: 3102, column: 21, scope: !7279)
!7282 = !DILocation(line: 3102, column: 29, scope: !7279)
!7283 = !DILocation(line: 3102, column: 32, scope: !7284)
!7284 = !DILexicalBlockFile(scope: !7279, file: !1803, discriminator: 1)
!7285 = !DILocation(line: 3102, column: 9, scope: !7284)
!7286 = !DILocation(line: 3103, column: 16, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7279, file: !1803, line: 3102, column: 41)
!7288 = !DILocation(line: 3103, column: 9, scope: !7287)
!7289 = !DILocation(line: 3104, column: 9, scope: !7287)
!7290 = !DILocation(line: 3107, column: 29, scope: !7101)
!7291 = !DILocation(line: 3107, column: 5, scope: !7101)
!7292 = !DILocation(line: 3107, column: 9, scope: !7101)
!7293 = !DILocation(line: 3107, column: 16, scope: !7101)
!7294 = !DILocation(line: 3107, column: 27, scope: !7101)
!7295 = !DILocation(line: 3108, column: 30, scope: !7101)
!7296 = !DILocation(line: 3108, column: 37, scope: !7101)
!7297 = !DILocation(line: 3108, column: 5, scope: !7101)
!7298 = !DILocation(line: 3108, column: 9, scope: !7101)
!7299 = !DILocation(line: 3108, column: 16, scope: !7101)
!7300 = !DILocation(line: 3108, column: 28, scope: !7101)
!7301 = !DILocation(line: 3109, column: 6, scope: !7101)
!7302 = !DILocation(line: 3109, column: 20, scope: !7101)
!7303 = !DILocation(line: 3111, column: 20, scope: !7101)
!7304 = !DILocation(line: 3111, column: 38, scope: !7101)
!7305 = !DILocation(line: 3111, column: 24, scope: !7101)
!7306 = !DILocation(line: 3111, column: 5, scope: !7307)
!7307 = !DILexicalBlockFile(scope: !7101, file: !1803, discriminator: 1)
!7308 = !DILocation(line: 3112, column: 5, scope: !7101)
!7309 = !DILocation(line: 3113, column: 1, scope: !7101)
!7310 = distinct !DISubprogram(name: "aac_decode_frame_int", scope: !1803, file: !1803, line: 3115, type: !7311, isLocal: true, isDefinition: true, scopeLine: 3117, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{!1012, !1262, !1020, !1457, !2043, !1311}
!7313 = !DILocalVariable(name: "avctx", arg: 1, scope: !7310, file: !1803, line: 3115, type: !1262)
!7314 = !DILocation(line: 3115, column: 49, scope: !7310)
!7315 = !DILocalVariable(name: "data", arg: 2, scope: !7310, file: !1803, line: 3115, type: !1020)
!7316 = !DILocation(line: 3115, column: 62, scope: !7310)
!7317 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !7310, file: !1803, line: 3116, type: !1457)
!7318 = !DILocation(line: 3116, column: 38, scope: !7310)
!7319 = !DILocalVariable(name: "gb", arg: 4, scope: !7310, file: !1803, line: 3116, type: !2043)
!7320 = !DILocation(line: 3116, column: 68, scope: !7310)
!7321 = !DILocalVariable(name: "avpkt", arg: 5, scope: !7310, file: !1803, line: 3116, type: !1311)
!7322 = !DILocation(line: 3116, column: 82, scope: !7310)
!7323 = !DILocalVariable(name: "ac", scope: !7310, file: !1803, line: 3118, type: !2065)
!7324 = !DILocation(line: 3118, column: 17, scope: !7310)
!7325 = !DILocation(line: 3118, column: 22, scope: !7310)
!7326 = !DILocation(line: 3118, column: 29, scope: !7310)
!7327 = !DILocalVariable(name: "che", scope: !7310, file: !1803, line: 3119, type: !2095)
!7328 = !DILocation(line: 3119, column: 21, scope: !7310)
!7329 = !DILocalVariable(name: "che_prev", scope: !7310, file: !1803, line: 3119, type: !2095)
!7330 = !DILocation(line: 3119, column: 33, scope: !7310)
!7331 = !DILocalVariable(name: "elem_type", scope: !7310, file: !1803, line: 3120, type: !930)
!7332 = !DILocation(line: 3120, column: 27, scope: !7310)
!7333 = !DILocalVariable(name: "che_prev_type", scope: !7310, file: !1803, line: 3120, type: !930)
!7334 = !DILocation(line: 3120, column: 38, scope: !7310)
!7335 = !DILocalVariable(name: "err", scope: !7310, file: !1803, line: 3121, type: !1012)
!7336 = !DILocation(line: 3121, column: 9, scope: !7310)
!7337 = !DILocalVariable(name: "elem_id", scope: !7310, file: !1803, line: 3121, type: !1012)
!7338 = !DILocation(line: 3121, column: 14, scope: !7310)
!7339 = !DILocalVariable(name: "samples", scope: !7310, file: !1803, line: 3122, type: !1012)
!7340 = !DILocation(line: 3122, column: 9, scope: !7310)
!7341 = !DILocalVariable(name: "multiplier", scope: !7310, file: !1803, line: 3122, type: !1012)
!7342 = !DILocation(line: 3122, column: 22, scope: !7310)
!7343 = !DILocalVariable(name: "audio_found", scope: !7310, file: !1803, line: 3122, type: !1012)
!7344 = !DILocation(line: 3122, column: 34, scope: !7310)
!7345 = !DILocalVariable(name: "pce_found", scope: !7310, file: !1803, line: 3122, type: !1012)
!7346 = !DILocation(line: 3122, column: 51, scope: !7310)
!7347 = !DILocalVariable(name: "is_dmono", scope: !7310, file: !1803, line: 3123, type: !1012)
!7348 = !DILocation(line: 3123, column: 9, scope: !7310)
!7349 = !DILocalVariable(name: "sce_count", scope: !7310, file: !1803, line: 3123, type: !1012)
!7350 = !DILocation(line: 3123, column: 19, scope: !7310)
!7351 = !DILocalVariable(name: "payload_alignment", scope: !7310, file: !1803, line: 3124, type: !1012)
!7352 = !DILocation(line: 3124, column: 9, scope: !7310)
!7353 = !DILocalVariable(name: "che_presence", scope: !7310, file: !1803, line: 3125, type: !7354)
!7354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 512, align: 8, elements: !2515)
!7355 = !DILocation(line: 3125, column: 13, scope: !7310)
!7356 = !DILocation(line: 3127, column: 17, scope: !7310)
!7357 = !DILocation(line: 3127, column: 5, scope: !7310)
!7358 = !DILocation(line: 3127, column: 9, scope: !7310)
!7359 = !DILocation(line: 3127, column: 15, scope: !7310)
!7360 = !DILocation(line: 3129, column: 19, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3129, column: 9)
!7362 = !DILocation(line: 3129, column: 9, scope: !7361)
!7363 = !DILocation(line: 3129, column: 27, scope: !7361)
!7364 = !DILocation(line: 3129, column: 9, scope: !7310)
!7365 = !DILocation(line: 3130, column: 44, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7367, file: !1803, line: 3130, column: 13)
!7367 = distinct !DILexicalBlock(scope: !7361, file: !1803, line: 3129, column: 37)
!7368 = !DILocation(line: 3130, column: 48, scope: !7366)
!7369 = !DILocation(line: 3130, column: 20, scope: !7366)
!7370 = !DILocation(line: 3130, column: 18, scope: !7366)
!7371 = !DILocation(line: 3130, column: 53, scope: !7366)
!7372 = !DILocation(line: 3130, column: 13, scope: !7367)
!7373 = !DILocation(line: 3131, column: 20, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7366, file: !1803, line: 3130, column: 58)
!7375 = !DILocation(line: 3131, column: 13, scope: !7374)
!7376 = !DILocation(line: 3132, column: 13, scope: !7374)
!7377 = !DILocation(line: 3134, column: 13, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7367, file: !1803, line: 3134, column: 13)
!7379 = !DILocation(line: 3134, column: 17, scope: !7378)
!7380 = !DILocation(line: 3134, column: 23, scope: !7378)
!7381 = !DILocation(line: 3134, column: 28, scope: !7378)
!7382 = !DILocation(line: 3134, column: 43, scope: !7378)
!7383 = !DILocation(line: 3134, column: 13, scope: !7367)
!7384 = !DILocation(line: 3135, column: 20, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7378, file: !1803, line: 3134, column: 49)
!7386 = !DILocation(line: 3135, column: 24, scope: !7385)
!7387 = !DILocation(line: 3135, column: 71, scope: !7385)
!7388 = !DILocation(line: 3135, column: 75, scope: !7385)
!7389 = !DILocation(line: 3135, column: 81, scope: !7385)
!7390 = !DILocation(line: 3135, column: 86, scope: !7385)
!7391 = !DILocation(line: 3135, column: 13, scope: !7385)
!7392 = !DILocation(line: 3136, column: 17, scope: !7385)
!7393 = !DILocation(line: 3137, column: 13, scope: !7385)
!7394 = !DILocation(line: 3139, column: 5, scope: !7367)
!7395 = !DILocation(line: 3141, column: 41, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3141, column: 9)
!7397 = !DILocation(line: 3141, column: 16, scope: !7396)
!7398 = !DILocation(line: 3141, column: 14, scope: !7396)
!7399 = !DILocation(line: 3141, column: 49, scope: !7396)
!7400 = !DILocation(line: 3141, column: 9, scope: !7310)
!7401 = !DILocation(line: 3142, column: 9, scope: !7396)
!7402 = !DILocation(line: 3146, column: 26, scope: !7310)
!7403 = !DILocation(line: 3146, column: 30, scope: !7310)
!7404 = !DILocation(line: 3146, column: 36, scope: !7310)
!7405 = !DILocation(line: 3146, column: 41, scope: !7310)
!7406 = !DILocation(line: 3146, column: 53, scope: !7310)
!7407 = !DILocation(line: 3146, column: 5, scope: !7310)
!7408 = !DILocation(line: 3146, column: 9, scope: !7310)
!7409 = !DILocation(line: 3146, column: 16, scope: !7310)
!7410 = !DILocation(line: 3146, column: 24, scope: !7310)
!7411 = !DILocation(line: 3148, column: 40, scope: !7310)
!7412 = !DILocation(line: 3148, column: 25, scope: !7310)
!7413 = !DILocation(line: 3148, column: 23, scope: !7310)
!7414 = !DILocation(line: 3149, column: 5, scope: !7310)
!7415 = !DILocation(line: 3149, column: 9, scope: !7310)
!7416 = !DILocation(line: 3149, column: 21, scope: !7310)
!7417 = !DILocation(line: 3151, column: 5, scope: !7310)
!7418 = !DILocation(line: 3151, column: 34, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !7310, file: !1803, discriminator: 1)
!7420 = !DILocation(line: 3151, column: 25, scope: !7419)
!7421 = !DILocation(line: 3151, column: 23, scope: !7419)
!7422 = !DILocation(line: 3151, column: 42, scope: !7419)
!7423 = !DILocation(line: 3151, column: 5, scope: !7419)
!7424 = !DILocation(line: 3152, column: 28, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3151, column: 55)
!7426 = !DILocation(line: 3152, column: 19, scope: !7425)
!7427 = !DILocation(line: 3152, column: 17, scope: !7425)
!7428 = !DILocation(line: 3154, column: 13, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3154, column: 13)
!7430 = !DILocation(line: 3154, column: 20, scope: !7429)
!7431 = !DILocation(line: 3154, column: 26, scope: !7429)
!7432 = !DILocation(line: 3154, column: 13, scope: !7425)
!7433 = !DILocation(line: 3155, column: 20, scope: !7429)
!7434 = !DILocation(line: 3155, column: 55, scope: !7429)
!7435 = !DILocation(line: 3155, column: 66, scope: !7429)
!7436 = !DILocation(line: 3155, column: 13, scope: !7429)
!7437 = !DILocation(line: 3157, column: 14, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3157, column: 13)
!7439 = !DILocation(line: 3157, column: 21, scope: !7438)
!7440 = !DILocation(line: 3157, column: 30, scope: !7438)
!7441 = !DILocation(line: 3157, column: 33, scope: !7442)
!7442 = !DILexicalBlockFile(scope: !7438, file: !1803, discriminator: 1)
!7443 = !DILocation(line: 3157, column: 43, scope: !7442)
!7444 = !DILocation(line: 3157, column: 13, scope: !7442)
!7445 = !DILocation(line: 3158, column: 17, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7438, file: !1803, line: 3157, column: 56)
!7447 = !DILocation(line: 3159, column: 13, scope: !7446)
!7448 = !DILocation(line: 3162, column: 13, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3162, column: 13)
!7450 = !DILocation(line: 3162, column: 23, scope: !7449)
!7451 = !DILocation(line: 3162, column: 13, scope: !7425)
!7452 = !DILocation(line: 3163, column: 41, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !1803, line: 3163, column: 17)
!7454 = distinct !DILexicalBlock(scope: !7449, file: !1803, line: 3162, column: 35)
!7455 = !DILocation(line: 3163, column: 17, scope: !7453)
!7456 = !DILocation(line: 3163, column: 30, scope: !7453)
!7457 = !DILocation(line: 3163, column: 17, scope: !7454)
!7458 = !DILocalVariable(name: "error", scope: !7459, file: !1803, line: 3164, type: !1012)
!7459 = distinct !DILexicalBlock(scope: !7453, file: !1803, line: 3163, column: 51)
!7460 = !DILocation(line: 3164, column: 21, scope: !7459)
!7461 = !DILocation(line: 3164, column: 53, scope: !7459)
!7462 = !DILocation(line: 3164, column: 29, scope: !7459)
!7463 = !DILocation(line: 3164, column: 42, scope: !7459)
!7464 = !DILocation(line: 3164, column: 62, scope: !7459)
!7465 = !DILocation(line: 3165, column: 24, scope: !7459)
!7466 = !DILocation(line: 3165, column: 28, scope: !7459)
!7467 = !DILocation(line: 3165, column: 35, scope: !7459)
!7468 = !DILocation(line: 3166, column: 24, scope: !7459)
!7469 = !DILocation(line: 3166, column: 35, scope: !7459)
!7470 = !DILocation(line: 3165, column: 17, scope: !7459)
!7471 = !DILocation(line: 3167, column: 21, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7459, file: !1803, line: 3167, column: 21)
!7473 = !DILocation(line: 3167, column: 21, scope: !7459)
!7474 = !DILocation(line: 3168, column: 25, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7472, file: !1803, line: 3167, column: 28)
!7476 = !DILocation(line: 3169, column: 21, scope: !7475)
!7477 = !DILocation(line: 3171, column: 13, scope: !7459)
!7478 = !DILocation(line: 3172, column: 37, scope: !7454)
!7479 = !DILocation(line: 3172, column: 13, scope: !7454)
!7480 = !DILocation(line: 3172, column: 26, scope: !7454)
!7481 = !DILocation(line: 3172, column: 45, scope: !7454)
!7482 = !DILocation(line: 3174, column: 31, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7454, file: !1803, line: 3174, column: 17)
!7484 = !DILocation(line: 3174, column: 35, scope: !7483)
!7485 = !DILocation(line: 3174, column: 46, scope: !7483)
!7486 = !DILocation(line: 3174, column: 23, scope: !7483)
!7487 = !DILocation(line: 3174, column: 22, scope: !7483)
!7488 = !DILocation(line: 3174, column: 17, scope: !7454)
!7489 = !DILocation(line: 3175, column: 24, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7483, file: !1803, line: 3174, column: 57)
!7491 = !DILocation(line: 3175, column: 28, scope: !7490)
!7492 = !DILocation(line: 3176, column: 24, scope: !7490)
!7493 = !DILocation(line: 3176, column: 35, scope: !7490)
!7494 = !DILocation(line: 3175, column: 17, scope: !7490)
!7495 = !DILocation(line: 3177, column: 21, scope: !7490)
!7496 = !DILocation(line: 3178, column: 17, scope: !7490)
!7497 = !DILocation(line: 3180, column: 23, scope: !7454)
!7498 = !DILocation(line: 3180, column: 27, scope: !7454)
!7499 = !DILocation(line: 3180, column: 33, scope: !7454)
!7500 = !DILocation(line: 3180, column: 38, scope: !7454)
!7501 = !DILocation(line: 3180, column: 21, scope: !7454)
!7502 = !DILocation(line: 3181, column: 13, scope: !7454)
!7503 = !DILocation(line: 3181, column: 18, scope: !7454)
!7504 = !DILocation(line: 3181, column: 26, scope: !7454)
!7505 = !DILocation(line: 3182, column: 9, scope: !7454)
!7506 = !DILocation(line: 3184, column: 17, scope: !7425)
!7507 = !DILocation(line: 3184, column: 9, scope: !7425)
!7508 = !DILocation(line: 3187, column: 30, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3184, column: 28)
!7510 = !DILocation(line: 3187, column: 35, scope: !7509)
!7511 = !DILocation(line: 3187, column: 40, scope: !7509)
!7512 = !DILocation(line: 3187, column: 47, scope: !7509)
!7513 = !DILocation(line: 3187, column: 19, scope: !7509)
!7514 = !DILocation(line: 3187, column: 17, scope: !7509)
!7515 = !DILocation(line: 3188, column: 25, scope: !7509)
!7516 = !DILocation(line: 3189, column: 22, scope: !7509)
!7517 = !DILocation(line: 3190, column: 13, scope: !7509)
!7518 = !DILocation(line: 3193, column: 30, scope: !7509)
!7519 = !DILocation(line: 3193, column: 34, scope: !7509)
!7520 = !DILocation(line: 3193, column: 38, scope: !7509)
!7521 = !DILocation(line: 3193, column: 19, scope: !7509)
!7522 = !DILocation(line: 3193, column: 17, scope: !7509)
!7523 = !DILocation(line: 3194, column: 25, scope: !7509)
!7524 = !DILocation(line: 3195, column: 13, scope: !7509)
!7525 = !DILocation(line: 3198, column: 30, scope: !7509)
!7526 = !DILocation(line: 3198, column: 34, scope: !7509)
!7527 = !DILocation(line: 3198, column: 38, scope: !7509)
!7528 = !DILocation(line: 3198, column: 19, scope: !7509)
!7529 = !DILocation(line: 3198, column: 17, scope: !7509)
!7530 = !DILocation(line: 3199, column: 13, scope: !7509)
!7531 = !DILocation(line: 3202, column: 30, scope: !7509)
!7532 = !DILocation(line: 3202, column: 35, scope: !7509)
!7533 = !DILocation(line: 3202, column: 40, scope: !7509)
!7534 = !DILocation(line: 3202, column: 47, scope: !7509)
!7535 = !DILocation(line: 3202, column: 19, scope: !7509)
!7536 = !DILocation(line: 3202, column: 17, scope: !7509)
!7537 = !DILocation(line: 3203, column: 25, scope: !7509)
!7538 = !DILocation(line: 3204, column: 13, scope: !7509)
!7539 = !DILocation(line: 3207, column: 44, scope: !7509)
!7540 = !DILocation(line: 3207, column: 48, scope: !7509)
!7541 = !DILocation(line: 3207, column: 19, scope: !7509)
!7542 = !DILocation(line: 3207, column: 17, scope: !7509)
!7543 = !DILocation(line: 3208, column: 13, scope: !7509)
!7544 = !DILocalVariable(name: "layout_map", scope: !7545, file: !1803, line: 3211, type: !2630)
!7545 = distinct !DILexicalBlock(scope: !7509, file: !1803, line: 3210, column: 24)
!7546 = !DILocation(line: 3211, column: 21, scope: !7545)
!7547 = !DILocalVariable(name: "tags", scope: !7545, file: !1803, line: 3212, type: !1012)
!7548 = !DILocation(line: 3212, column: 17, scope: !7545)
!7549 = !DILocalVariable(name: "pushed", scope: !7545, file: !1803, line: 3214, type: !1012)
!7550 = !DILocation(line: 3214, column: 17, scope: !7545)
!7551 = !DILocation(line: 3214, column: 52, scope: !7545)
!7552 = !DILocation(line: 3214, column: 26, scope: !7545)
!7553 = !DILocation(line: 3215, column: 17, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7545, file: !1803, line: 3215, column: 17)
!7555 = !DILocation(line: 3215, column: 27, scope: !7554)
!7556 = !DILocation(line: 3215, column: 31, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !7554, file: !1803, discriminator: 1)
!7558 = !DILocation(line: 3215, column: 17, scope: !7557)
!7559 = !DILocation(line: 3216, column: 21, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7554, file: !1803, line: 3215, column: 39)
!7561 = !DILocation(line: 3217, column: 17, scope: !7560)
!7562 = !DILocation(line: 3220, column: 31, scope: !7545)
!7563 = !DILocation(line: 3220, column: 39, scope: !7545)
!7564 = !DILocation(line: 3220, column: 43, scope: !7545)
!7565 = !DILocation(line: 3220, column: 49, scope: !7545)
!7566 = !DILocation(line: 3220, column: 55, scope: !7545)
!7567 = !DILocation(line: 3220, column: 67, scope: !7545)
!7568 = !DILocation(line: 3221, column: 31, scope: !7545)
!7569 = !DILocation(line: 3220, column: 20, scope: !7545)
!7570 = !DILocation(line: 3220, column: 18, scope: !7545)
!7571 = !DILocation(line: 3222, column: 17, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7545, file: !1803, line: 3222, column: 17)
!7573 = !DILocation(line: 3222, column: 22, scope: !7572)
!7574 = !DILocation(line: 3222, column: 17, scope: !7545)
!7575 = !DILocation(line: 3223, column: 23, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !1803, line: 3222, column: 27)
!7577 = !DILocation(line: 3223, column: 21, scope: !7576)
!7578 = !DILocation(line: 3224, column: 17, scope: !7576)
!7579 = !DILocation(line: 3226, column: 17, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7545, file: !1803, line: 3226, column: 17)
!7581 = !DILocation(line: 3226, column: 17, scope: !7545)
!7582 = !DILocation(line: 3227, column: 24, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !1803, line: 3226, column: 28)
!7584 = !DILocation(line: 3227, column: 17, scope: !7583)
!7585 = !DILocation(line: 3229, column: 42, scope: !7583)
!7586 = !DILocation(line: 3229, column: 17, scope: !7583)
!7587 = !DILocation(line: 3230, column: 13, scope: !7583)
!7588 = !DILocation(line: 3231, column: 40, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7580, file: !1803, line: 3230, column: 20)
!7590 = !DILocation(line: 3231, column: 44, scope: !7589)
!7591 = !DILocation(line: 3231, column: 56, scope: !7589)
!7592 = !DILocation(line: 3231, column: 23, scope: !7589)
!7593 = !DILocation(line: 3231, column: 21, scope: !7589)
!7594 = !DILocation(line: 3232, column: 22, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7589, file: !1803, line: 3232, column: 21)
!7596 = !DILocation(line: 3232, column: 21, scope: !7589)
!7597 = !DILocation(line: 3233, column: 21, scope: !7595)
!7598 = !DILocation(line: 3233, column: 25, scope: !7595)
!7599 = !DILocation(line: 3233, column: 31, scope: !7595)
!7600 = !DILocation(line: 3233, column: 36, scope: !7595)
!7601 = !DILocation(line: 3233, column: 48, scope: !7595)
!7602 = !DILocation(line: 3234, column: 27, scope: !7589)
!7603 = !DILocation(line: 3236, column: 13, scope: !7545)
!7604 = !DILocation(line: 3240, column: 17, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7509, file: !1803, line: 3240, column: 17)
!7606 = !DILocation(line: 3240, column: 25, scope: !7605)
!7607 = !DILocation(line: 3240, column: 17, scope: !7509)
!7608 = !DILocation(line: 3241, column: 37, scope: !7605)
!7609 = !DILocation(line: 3241, column: 28, scope: !7605)
!7610 = !DILocation(line: 3241, column: 44, scope: !7605)
!7611 = !DILocation(line: 3241, column: 25, scope: !7605)
!7612 = !DILocation(line: 3241, column: 17, scope: !7605)
!7613 = !DILocation(line: 3242, column: 31, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7509, file: !1803, line: 3242, column: 17)
!7615 = !DILocation(line: 3242, column: 17, scope: !7614)
!7616 = !DILocation(line: 3242, column: 41, scope: !7614)
!7617 = !DILocation(line: 3242, column: 39, scope: !7614)
!7618 = !DILocation(line: 3242, column: 35, scope: !7614)
!7619 = !DILocation(line: 3242, column: 17, scope: !7509)
!7620 = !DILocation(line: 3243, column: 28, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7614, file: !1803, line: 3242, column: 50)
!7622 = !DILocation(line: 3243, column: 21, scope: !7621)
!7623 = !DILocation(line: 3244, column: 25, scope: !7621)
!7624 = !DILocation(line: 3245, column: 21, scope: !7621)
!7625 = !DILocation(line: 3247, column: 13, scope: !7509)
!7626 = !DILocation(line: 3247, column: 20, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7509, file: !1803, discriminator: 1)
!7628 = !DILocation(line: 3247, column: 28, scope: !7627)
!7629 = !DILocation(line: 3247, column: 13, scope: !7627)
!7630 = !DILocation(line: 3248, column: 53, scope: !7509)
!7631 = !DILocation(line: 3248, column: 57, scope: !7509)
!7632 = !DILocation(line: 3248, column: 61, scope: !7509)
!7633 = !DILocation(line: 3248, column: 70, scope: !7509)
!7634 = !DILocation(line: 3248, column: 80, scope: !7509)
!7635 = !DILocation(line: 3248, column: 28, scope: !7509)
!7636 = !DILocation(line: 3248, column: 25, scope: !7509)
!7637 = !DILocation(line: 3247, column: 13, scope: !7638)
!7638 = !DILexicalBlockFile(scope: !7509, file: !1803, discriminator: 2)
!7639 = distinct !{!7639, !7625}
!7640 = !DILocation(line: 3249, column: 17, scope: !7509)
!7641 = !DILocation(line: 3250, column: 13, scope: !7509)
!7642 = !DILocation(line: 3253, column: 17, scope: !7509)
!7643 = !DILocation(line: 3254, column: 13, scope: !7509)
!7644 = !DILocation(line: 3257, column: 13, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3257, column: 13)
!7646 = !DILocation(line: 3257, column: 23, scope: !7645)
!7647 = !DILocation(line: 3257, column: 13, scope: !7425)
!7648 = !DILocation(line: 3258, column: 24, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7645, file: !1803, line: 3257, column: 35)
!7650 = !DILocation(line: 3258, column: 22, scope: !7649)
!7651 = !DILocation(line: 3259, column: 29, scope: !7649)
!7652 = !DILocation(line: 3259, column: 27, scope: !7649)
!7653 = !DILocation(line: 3260, column: 9, scope: !7649)
!7654 = !DILocation(line: 3262, column: 13, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3262, column: 13)
!7656 = !DILocation(line: 3262, column: 13, scope: !7425)
!7657 = !DILocation(line: 3263, column: 13, scope: !7655)
!7658 = !DILocation(line: 3265, column: 27, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7425, file: !1803, line: 3265, column: 13)
!7660 = !DILocation(line: 3265, column: 13, scope: !7659)
!7661 = !DILocation(line: 3265, column: 31, scope: !7659)
!7662 = !DILocation(line: 3265, column: 13, scope: !7425)
!7663 = !DILocation(line: 3266, column: 20, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7659, file: !1803, line: 3265, column: 36)
!7665 = !DILocation(line: 3266, column: 13, scope: !7664)
!7666 = !DILocation(line: 3267, column: 17, scope: !7664)
!7667 = !DILocation(line: 3268, column: 13, scope: !7664)
!7668 = !DILocation(line: 3151, column: 5, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !7310, file: !1803, discriminator: 2)
!7670 = distinct !{!7670, !7417}
!7671 = !DILocation(line: 3272, column: 10, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3272, column: 9)
!7673 = !DILocation(line: 3272, column: 17, scope: !7672)
!7674 = !DILocation(line: 3272, column: 9, scope: !7310)
!7675 = !DILocation(line: 3273, column: 10, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !1803, line: 3272, column: 27)
!7677 = !DILocation(line: 3273, column: 24, scope: !7676)
!7678 = !DILocation(line: 3274, column: 9, scope: !7676)
!7679 = !DILocation(line: 3277, column: 19, scope: !7310)
!7680 = !DILocation(line: 3277, column: 23, scope: !7310)
!7681 = !DILocation(line: 3277, column: 29, scope: !7310)
!7682 = !DILocation(line: 3277, column: 34, scope: !7310)
!7683 = !DILocation(line: 3277, column: 38, scope: !7310)
!7684 = !DILocation(line: 3277, column: 18, scope: !7310)
!7685 = !DILocation(line: 3277, column: 46, scope: !7419)
!7686 = !DILocation(line: 3277, column: 50, scope: !7419)
!7687 = !DILocation(line: 3277, column: 56, scope: !7419)
!7688 = !DILocation(line: 3277, column: 61, scope: !7419)
!7689 = !DILocation(line: 3277, column: 79, scope: !7419)
!7690 = !DILocation(line: 3277, column: 83, scope: !7419)
!7691 = !DILocation(line: 3277, column: 89, scope: !7419)
!7692 = !DILocation(line: 3277, column: 94, scope: !7419)
!7693 = !DILocation(line: 3277, column: 77, scope: !7419)
!7694 = !DILocation(line: 3277, column: 18, scope: !7419)
!7695 = !DILocation(line: 3277, column: 18, scope: !7669)
!7696 = !DILocation(line: 3277, column: 18, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !7310, file: !1803, discriminator: 3)
!7698 = !DILocation(line: 3277, column: 16, scope: !7697)
!7699 = !DILocation(line: 3278, column: 17, scope: !7310)
!7700 = !DILocation(line: 3278, column: 13, scope: !7310)
!7701 = !DILocation(line: 3280, column: 24, scope: !7310)
!7702 = !DILocation(line: 3280, column: 28, scope: !7310)
!7703 = !DILocation(line: 3280, column: 5, scope: !7310)
!7704 = !DILocation(line: 3282, column: 9, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3282, column: 9)
!7706 = !DILocation(line: 3282, column: 13, scope: !7705)
!7707 = !DILocation(line: 3282, column: 19, scope: !7705)
!7708 = !DILocation(line: 3282, column: 26, scope: !7705)
!7709 = !DILocation(line: 3282, column: 29, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !7705, file: !1803, discriminator: 1)
!7711 = !DILocation(line: 3282, column: 9, scope: !7710)
!7712 = !DILocation(line: 3283, column: 30, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !1803, line: 3282, column: 42)
!7714 = !DILocation(line: 3283, column: 34, scope: !7713)
!7715 = !DILocation(line: 3283, column: 40, scope: !7713)
!7716 = !DILocation(line: 3283, column: 45, scope: !7713)
!7717 = !DILocation(line: 3283, column: 60, scope: !7713)
!7718 = !DILocation(line: 3283, column: 57, scope: !7713)
!7719 = !DILocation(line: 3283, column: 9, scope: !7713)
!7720 = !DILocation(line: 3283, column: 16, scope: !7713)
!7721 = !DILocation(line: 3283, column: 28, scope: !7713)
!7722 = !DILocation(line: 3284, column: 29, scope: !7713)
!7723 = !DILocation(line: 3284, column: 9, scope: !7713)
!7724 = !DILocation(line: 3284, column: 16, scope: !7713)
!7725 = !DILocation(line: 3284, column: 27, scope: !7713)
!7726 = !DILocation(line: 3285, column: 9, scope: !7713)
!7727 = !DILocation(line: 3285, column: 13, scope: !7713)
!7728 = !DILocation(line: 3285, column: 19, scope: !7713)
!7729 = !DILocation(line: 3285, column: 26, scope: !7713)
!7730 = !DILocation(line: 3286, column: 5, scope: !7713)
!7731 = !DILocation(line: 3288, column: 9, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3288, column: 9)
!7733 = !DILocation(line: 3288, column: 9, scope: !7310)
!7734 = !DILocation(line: 3289, column: 9, scope: !7732)
!7735 = !DILocation(line: 3289, column: 16, scope: !7732)
!7736 = !DILocation(line: 3289, column: 26, scope: !7732)
!7737 = !DILocation(line: 3289, column: 50, scope: !7732)
!7738 = !DILocation(line: 3291, column: 10, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3291, column: 9)
!7740 = !DILocation(line: 3291, column: 14, scope: !7739)
!7741 = !DILocation(line: 3291, column: 21, scope: !7739)
!7742 = !DILocation(line: 3291, column: 29, scope: !7739)
!7743 = !DILocation(line: 3291, column: 32, scope: !7744)
!7744 = !DILexicalBlockFile(scope: !7739, file: !1803, discriminator: 1)
!7745 = !DILocation(line: 3291, column: 9, scope: !7744)
!7746 = !DILocation(line: 3292, column: 16, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7739, file: !1803, line: 3291, column: 41)
!7748 = !DILocation(line: 3292, column: 9, scope: !7747)
!7749 = !DILocation(line: 3293, column: 13, scope: !7747)
!7750 = !DILocation(line: 3294, column: 9, scope: !7747)
!7751 = !DILocation(line: 3297, column: 9, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3297, column: 9)
!7753 = !DILocation(line: 3297, column: 9, scope: !7310)
!7754 = !DILocation(line: 3298, column: 33, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7752, file: !1803, line: 3297, column: 18)
!7756 = !DILocation(line: 3298, column: 9, scope: !7755)
!7757 = !DILocation(line: 3298, column: 13, scope: !7755)
!7758 = !DILocation(line: 3298, column: 20, scope: !7755)
!7759 = !DILocation(line: 3298, column: 31, scope: !7755)
!7760 = !DILocation(line: 3299, column: 34, scope: !7755)
!7761 = !DILocation(line: 3299, column: 41, scope: !7755)
!7762 = !DILocation(line: 3299, column: 9, scope: !7755)
!7763 = !DILocation(line: 3299, column: 13, scope: !7755)
!7764 = !DILocation(line: 3299, column: 20, scope: !7755)
!7765 = !DILocation(line: 3299, column: 32, scope: !7755)
!7766 = !DILocation(line: 3300, column: 5, scope: !7755)
!7767 = !DILocation(line: 3301, column: 24, scope: !7752)
!7768 = !DILocation(line: 3301, column: 28, scope: !7752)
!7769 = !DILocation(line: 3301, column: 9, scope: !7752)
!7770 = !DILocation(line: 3302, column: 24, scope: !7310)
!7771 = !DILocation(line: 3302, column: 23, scope: !7310)
!7772 = !DILocation(line: 3302, column: 22, scope: !7310)
!7773 = !DILocation(line: 3302, column: 6, scope: !7310)
!7774 = !DILocation(line: 3302, column: 20, scope: !7310)
!7775 = !DILocation(line: 3305, column: 16, scope: !7310)
!7776 = !DILocation(line: 3305, column: 20, scope: !7310)
!7777 = !DILocation(line: 3305, column: 31, scope: !7310)
!7778 = !DILocation(line: 3305, column: 34, scope: !7419)
!7779 = !DILocation(line: 3305, column: 44, scope: !7419)
!7780 = !DILocation(line: 3305, column: 49, scope: !7419)
!7781 = !DILocation(line: 3306, column: 16, scope: !7310)
!7782 = !DILocation(line: 3306, column: 20, scope: !7310)
!7783 = !DILocation(line: 3306, column: 26, scope: !7310)
!7784 = !DILocation(line: 3306, column: 41, scope: !7310)
!7785 = !DILocation(line: 3305, column: 49, scope: !7669)
!7786 = !DILocation(line: 3305, column: 14, scope: !7669)
!7787 = !DILocation(line: 3307, column: 9, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7310, file: !1803, line: 3307, column: 9)
!7789 = !DILocation(line: 3307, column: 9, scope: !7310)
!7790 = !DILocation(line: 3308, column: 13, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !1803, line: 3308, column: 13)
!7792 = distinct !DILexicalBlock(scope: !7788, file: !1803, line: 3307, column: 19)
!7793 = !DILocation(line: 3308, column: 17, scope: !7791)
!7794 = !DILocation(line: 3308, column: 28, scope: !7791)
!7795 = !DILocation(line: 3308, column: 13, scope: !7792)
!7796 = !DILocation(line: 3309, column: 53, scope: !7791)
!7797 = !DILocation(line: 3309, column: 42, scope: !7791)
!7798 = !DILocation(line: 3309, column: 60, scope: !7791)
!7799 = !DILocation(line: 3309, column: 41, scope: !7791)
!7800 = !DILocation(line: 3309, column: 25, scope: !7791)
!7801 = !DILocation(line: 3309, column: 14, scope: !7791)
!7802 = !DILocation(line: 3309, column: 32, scope: !7791)
!7803 = !DILocation(line: 3309, column: 13, scope: !7791)
!7804 = !DILocation(line: 3309, column: 40, scope: !7791)
!7805 = !DILocation(line: 3310, column: 18, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7791, file: !1803, line: 3310, column: 18)
!7807 = !DILocation(line: 3310, column: 22, scope: !7806)
!7808 = !DILocation(line: 3310, column: 33, scope: !7806)
!7809 = !DILocation(line: 3310, column: 18, scope: !7791)
!7810 = !DILocation(line: 3311, column: 53, scope: !7806)
!7811 = !DILocation(line: 3311, column: 42, scope: !7806)
!7812 = !DILocation(line: 3311, column: 60, scope: !7806)
!7813 = !DILocation(line: 3311, column: 41, scope: !7806)
!7814 = !DILocation(line: 3311, column: 25, scope: !7806)
!7815 = !DILocation(line: 3311, column: 14, scope: !7806)
!7816 = !DILocation(line: 3311, column: 32, scope: !7806)
!7817 = !DILocation(line: 3311, column: 13, scope: !7806)
!7818 = !DILocation(line: 3311, column: 40, scope: !7806)
!7819 = !DILocation(line: 3312, column: 5, scope: !7792)
!7820 = !DILocation(line: 3314, column: 5, scope: !7310)
!7821 = !DILocation(line: 3316, column: 30, scope: !7310)
!7822 = !DILocation(line: 3316, column: 5, scope: !7310)
!7823 = !DILocation(line: 3317, column: 12, scope: !7310)
!7824 = !DILocation(line: 3317, column: 5, scope: !7310)
!7825 = !DILocation(line: 3318, column: 1, scope: !7310)
!7826 = distinct !DISubprogram(name: "get_che", scope: !1803, file: !1803, line: 560, type: !7827, isLocal: true, isDefinition: true, scopeLine: 561, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!2095, !2065, !1012, !1012}
!7829 = !DILocalVariable(name: "ac", arg: 1, scope: !7826, file: !1803, line: 560, type: !2065)
!7830 = !DILocation(line: 560, column: 44, scope: !7826)
!7831 = !DILocalVariable(name: "type", arg: 2, scope: !7826, file: !1803, line: 560, type: !1012)
!7832 = !DILocation(line: 560, column: 52, scope: !7826)
!7833 = !DILocalVariable(name: "elem_id", arg: 3, scope: !7826, file: !1803, line: 560, type: !1012)
!7834 = !DILocation(line: 560, column: 62, scope: !7826)
!7835 = !DILocation(line: 564, column: 10, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7826, file: !1803, line: 564, column: 9)
!7837 = !DILocation(line: 564, column: 14, scope: !7836)
!7838 = !DILocation(line: 564, column: 20, scope: !7836)
!7839 = !DILocation(line: 564, column: 25, scope: !7836)
!7840 = !DILocation(line: 564, column: 9, scope: !7826)
!7841 = !DILocation(line: 565, column: 38, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7836, file: !1803, line: 564, column: 38)
!7843 = !DILocation(line: 565, column: 16, scope: !7842)
!7844 = !DILocation(line: 565, column: 32, scope: !7842)
!7845 = !DILocation(line: 565, column: 20, scope: !7842)
!7846 = !DILocation(line: 565, column: 9, scope: !7842)
!7847 = !DILocation(line: 568, column: 10, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7826, file: !1803, line: 568, column: 9)
!7849 = !DILocation(line: 568, column: 14, scope: !7848)
!7850 = !DILocation(line: 568, column: 26, scope: !7848)
!7851 = !DILocation(line: 568, column: 29, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !7848, file: !1803, discriminator: 1)
!7853 = !DILocation(line: 568, column: 34, scope: !7852)
!7854 = !DILocation(line: 568, column: 46, scope: !7852)
!7855 = !DILocation(line: 569, column: 9, scope: !7848)
!7856 = !DILocation(line: 569, column: 13, scope: !7848)
!7857 = !DILocation(line: 569, column: 19, scope: !7848)
!7858 = !DILocation(line: 569, column: 24, scope: !7848)
!7859 = !DILocation(line: 569, column: 36, scope: !7848)
!7860 = !DILocation(line: 568, column: 9, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !7826, file: !1803, discriminator: 2)
!7862 = !DILocalVariable(name: "layout_map", scope: !7863, file: !1803, line: 570, type: !2630)
!7863 = distinct !DILexicalBlock(scope: !7848, file: !1803, line: 569, column: 42)
!7864 = !DILocation(line: 570, column: 17, scope: !7863)
!7865 = !DILocalVariable(name: "layout_map_tags", scope: !7863, file: !1803, line: 571, type: !1012)
!7866 = !DILocation(line: 571, column: 13, scope: !7863)
!7867 = !DILocation(line: 572, column: 35, scope: !7863)
!7868 = !DILocation(line: 572, column: 9, scope: !7863)
!7869 = !DILocation(line: 574, column: 16, scope: !7863)
!7870 = !DILocation(line: 574, column: 20, scope: !7863)
!7871 = !DILocation(line: 574, column: 9, scope: !7863)
!7872 = !DILocation(line: 576, column: 40, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7863, file: !1803, line: 576, column: 13)
!7874 = !DILocation(line: 576, column: 44, scope: !7873)
!7875 = !DILocation(line: 576, column: 51, scope: !7873)
!7876 = !DILocation(line: 576, column: 13, scope: !7873)
!7877 = !DILocation(line: 577, column: 61, scope: !7873)
!7878 = !DILocation(line: 576, column: 13, scope: !7863)
!7879 = !DILocation(line: 578, column: 13, scope: !7873)
!7880 = !DILocation(line: 579, column: 30, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7863, file: !1803, line: 579, column: 13)
!7882 = !DILocation(line: 579, column: 34, scope: !7881)
!7883 = !DILocation(line: 579, column: 46, scope: !7881)
!7884 = !DILocation(line: 579, column: 13, scope: !7881)
!7885 = !DILocation(line: 580, column: 49, scope: !7881)
!7886 = !DILocation(line: 579, column: 13, scope: !7863)
!7887 = !DILocation(line: 581, column: 13, scope: !7881)
!7888 = !DILocation(line: 583, column: 9, scope: !7863)
!7889 = !DILocation(line: 583, column: 13, scope: !7863)
!7890 = !DILocation(line: 583, column: 19, scope: !7863)
!7891 = !DILocation(line: 583, column: 24, scope: !7863)
!7892 = !DILocation(line: 583, column: 36, scope: !7863)
!7893 = !DILocation(line: 584, column: 9, scope: !7863)
!7894 = !DILocation(line: 584, column: 13, scope: !7863)
!7895 = !DILocation(line: 584, column: 19, scope: !7863)
!7896 = !DILocation(line: 584, column: 24, scope: !7863)
!7897 = !DILocation(line: 584, column: 27, scope: !7863)
!7898 = !DILocation(line: 585, column: 5, scope: !7863)
!7899 = !DILocation(line: 587, column: 10, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7826, file: !1803, line: 587, column: 9)
!7901 = !DILocation(line: 587, column: 14, scope: !7900)
!7902 = !DILocation(line: 587, column: 26, scope: !7900)
!7903 = !DILocation(line: 587, column: 29, scope: !7904)
!7904 = !DILexicalBlockFile(scope: !7900, file: !1803, discriminator: 1)
!7905 = !DILocation(line: 587, column: 34, scope: !7904)
!7906 = !DILocation(line: 587, column: 46, scope: !7904)
!7907 = !DILocation(line: 588, column: 9, scope: !7900)
!7908 = !DILocation(line: 588, column: 13, scope: !7900)
!7909 = !DILocation(line: 588, column: 19, scope: !7900)
!7910 = !DILocation(line: 588, column: 24, scope: !7900)
!7911 = !DILocation(line: 588, column: 36, scope: !7900)
!7912 = !DILocation(line: 587, column: 9, scope: !7861)
!7913 = !DILocalVariable(name: "layout_map", scope: !7914, file: !1803, line: 589, type: !2630)
!7914 = distinct !DILexicalBlock(scope: !7900, file: !1803, line: 588, column: 42)
!7915 = !DILocation(line: 589, column: 17, scope: !7914)
!7916 = !DILocalVariable(name: "layout_map_tags", scope: !7914, file: !1803, line: 590, type: !1012)
!7917 = !DILocation(line: 590, column: 13, scope: !7914)
!7918 = !DILocation(line: 591, column: 35, scope: !7914)
!7919 = !DILocation(line: 591, column: 9, scope: !7914)
!7920 = !DILocation(line: 593, column: 16, scope: !7914)
!7921 = !DILocation(line: 593, column: 20, scope: !7914)
!7922 = !DILocation(line: 593, column: 9, scope: !7914)
!7923 = !DILocation(line: 595, column: 40, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7914, file: !1803, line: 595, column: 13)
!7925 = !DILocation(line: 595, column: 44, scope: !7924)
!7926 = !DILocation(line: 595, column: 51, scope: !7924)
!7927 = !DILocation(line: 595, column: 13, scope: !7924)
!7928 = !DILocation(line: 596, column: 61, scope: !7924)
!7929 = !DILocation(line: 595, column: 13, scope: !7914)
!7930 = !DILocation(line: 597, column: 13, scope: !7924)
!7931 = !DILocation(line: 598, column: 30, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7914, file: !1803, line: 598, column: 13)
!7933 = !DILocation(line: 598, column: 34, scope: !7932)
!7934 = !DILocation(line: 598, column: 46, scope: !7932)
!7935 = !DILocation(line: 598, column: 13, scope: !7932)
!7936 = !DILocation(line: 599, column: 49, scope: !7932)
!7937 = !DILocation(line: 598, column: 13, scope: !7914)
!7938 = !DILocation(line: 600, column: 13, scope: !7932)
!7939 = !DILocation(line: 602, column: 9, scope: !7914)
!7940 = !DILocation(line: 602, column: 13, scope: !7914)
!7941 = !DILocation(line: 602, column: 19, scope: !7914)
!7942 = !DILocation(line: 602, column: 24, scope: !7914)
!7943 = !DILocation(line: 602, column: 36, scope: !7914)
!7944 = !DILocation(line: 603, column: 13, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7914, file: !1803, line: 603, column: 13)
!7946 = !DILocation(line: 603, column: 17, scope: !7945)
!7947 = !DILocation(line: 603, column: 23, scope: !7945)
!7948 = !DILocation(line: 603, column: 28, scope: !7945)
!7949 = !DILocation(line: 603, column: 13, scope: !7914)
!7950 = !DILocation(line: 604, column: 13, scope: !7945)
!7951 = !DILocation(line: 604, column: 17, scope: !7945)
!7952 = !DILocation(line: 604, column: 23, scope: !7945)
!7953 = !DILocation(line: 604, column: 28, scope: !7945)
!7954 = !DILocation(line: 604, column: 31, scope: !7945)
!7955 = !DILocation(line: 605, column: 5, scope: !7914)
!7956 = !DILocation(line: 608, column: 13, scope: !7826)
!7957 = !DILocation(line: 608, column: 17, scope: !7826)
!7958 = !DILocation(line: 608, column: 23, scope: !7826)
!7959 = !DILocation(line: 608, column: 28, scope: !7826)
!7960 = !DILocation(line: 608, column: 5, scope: !7826)
!7961 = !DILocation(line: 611, column: 13, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 611, column: 13)
!7963 = distinct !DILexicalBlock(scope: !7826, file: !1803, line: 608, column: 41)
!7964 = !DILocation(line: 611, column: 17, scope: !7962)
!7965 = !DILocation(line: 611, column: 29, scope: !7962)
!7966 = !DILocation(line: 611, column: 34, scope: !7962)
!7967 = !DILocation(line: 611, column: 37, scope: !7968)
!7968 = !DILexicalBlockFile(scope: !7962, file: !1803, discriminator: 1)
!7969 = !DILocation(line: 611, column: 42, scope: !7968)
!7970 = !DILocation(line: 611, column: 13, scope: !7968)
!7971 = !DILocation(line: 612, column: 13, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7962, file: !1803, line: 611, column: 55)
!7973 = !DILocation(line: 612, column: 17, scope: !7972)
!7974 = !DILocation(line: 612, column: 28, scope: !7972)
!7975 = !DILocation(line: 613, column: 57, scope: !7972)
!7976 = !DILocation(line: 613, column: 61, scope: !7972)
!7977 = !DILocation(line: 613, column: 46, scope: !7972)
!7978 = !DILocation(line: 613, column: 20, scope: !7972)
!7979 = !DILocation(line: 613, column: 24, scope: !7972)
!7980 = !DILocation(line: 613, column: 55, scope: !7972)
!7981 = !DILocation(line: 613, column: 13, scope: !7972)
!7982 = !DILocation(line: 611, column: 45, scope: !7983)
!7983 = !DILexicalBlockFile(scope: !7962, file: !1803, discriminator: 2)
!7984 = !DILocation(line: 616, column: 13, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 616, column: 13)
!7986 = !DILocation(line: 616, column: 17, scope: !7985)
!7987 = !DILocation(line: 616, column: 29, scope: !7985)
!7988 = !DILocation(line: 616, column: 34, scope: !7985)
!7989 = !DILocation(line: 617, column: 13, scope: !7985)
!7990 = !DILocation(line: 617, column: 17, scope: !7985)
!7991 = !DILocation(line: 617, column: 23, scope: !7985)
!7992 = !DILocation(line: 617, column: 28, scope: !7985)
!7993 = !DILocation(line: 617, column: 40, scope: !7985)
!7994 = !DILocation(line: 617, column: 46, scope: !7985)
!7995 = !DILocation(line: 618, column: 13, scope: !7985)
!7996 = !DILocation(line: 618, column: 18, scope: !7985)
!7997 = !DILocation(line: 616, column: 13, scope: !7998)
!7998 = !DILexicalBlockFile(scope: !7963, file: !1803, discriminator: 1)
!7999 = !DILocation(line: 619, column: 13, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7985, file: !1803, line: 618, column: 31)
!8001 = !DILocation(line: 619, column: 17, scope: !8000)
!8002 = !DILocation(line: 619, column: 28, scope: !8000)
!8003 = !DILocation(line: 620, column: 57, scope: !8000)
!8004 = !DILocation(line: 620, column: 61, scope: !8000)
!8005 = !DILocation(line: 620, column: 46, scope: !8000)
!8006 = !DILocation(line: 620, column: 20, scope: !8000)
!8007 = !DILocation(line: 620, column: 24, scope: !8000)
!8008 = !DILocation(line: 620, column: 55, scope: !8000)
!8009 = !DILocation(line: 620, column: 13, scope: !8000)
!8010 = !DILocation(line: 618, column: 21, scope: !8011)
!8011 = !DILexicalBlockFile(scope: !7985, file: !1803, discriminator: 1)
!8012 = !DILocation(line: 629, column: 13, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 629, column: 13)
!8014 = !DILocation(line: 629, column: 17, scope: !8013)
!8015 = !DILocation(line: 629, column: 48, scope: !8013)
!8016 = !DILocation(line: 629, column: 52, scope: !8013)
!8017 = !DILocation(line: 629, column: 58, scope: !8013)
!8018 = !DILocation(line: 629, column: 63, scope: !8013)
!8019 = !DILocation(line: 629, column: 32, scope: !8013)
!8020 = !DILocation(line: 629, column: 76, scope: !8013)
!8021 = !DILocation(line: 629, column: 29, scope: !8013)
!8022 = !DILocation(line: 629, column: 80, scope: !8013)
!8023 = !DILocation(line: 629, column: 84, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8013, file: !1803, discriminator: 1)
!8025 = !DILocation(line: 629, column: 89, scope: !8024)
!8026 = !DILocation(line: 629, column: 101, scope: !8024)
!8027 = !DILocation(line: 629, column: 104, scope: !8028)
!8028 = !DILexicalBlockFile(scope: !8013, file: !1803, discriminator: 2)
!8029 = !DILocation(line: 629, column: 109, scope: !8028)
!8030 = !DILocation(line: 629, column: 13, scope: !8028)
!8031 = !DILocation(line: 630, column: 18, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !1803, line: 630, column: 17)
!8033 = distinct !DILexicalBlock(scope: !8013, file: !1803, line: 629, column: 123)
!8034 = !DILocation(line: 630, column: 22, scope: !8032)
!8035 = !DILocation(line: 630, column: 44, scope: !8032)
!8036 = !DILocation(line: 630, column: 48, scope: !8037)
!8037 = !DILexicalBlockFile(scope: !8032, file: !1803, discriminator: 1)
!8038 = !DILocation(line: 630, column: 53, scope: !8037)
!8039 = !DILocation(line: 630, column: 65, scope: !8037)
!8040 = !DILocation(line: 630, column: 68, scope: !8041)
!8041 = !DILexicalBlockFile(scope: !8032, file: !1803, discriminator: 2)
!8042 = !DILocation(line: 630, column: 76, scope: !8041)
!8043 = !DILocation(line: 630, column: 17, scope: !8041)
!8044 = !DILocation(line: 631, column: 24, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8032, file: !1803, line: 630, column: 83)
!8046 = !DILocation(line: 631, column: 28, scope: !8045)
!8047 = !DILocation(line: 633, column: 20, scope: !8045)
!8048 = !DILocation(line: 633, column: 25, scope: !8045)
!8049 = !DILocation(line: 633, column: 54, scope: !8045)
!8050 = !DILocation(line: 631, column: 17, scope: !8045)
!8051 = !DILocation(line: 634, column: 17, scope: !8045)
!8052 = !DILocation(line: 634, column: 21, scope: !8045)
!8053 = !DILocation(line: 634, column: 42, scope: !8045)
!8054 = !DILocation(line: 635, column: 13, scope: !8045)
!8055 = !DILocation(line: 636, column: 13, scope: !8033)
!8056 = !DILocation(line: 636, column: 17, scope: !8033)
!8057 = !DILocation(line: 636, column: 28, scope: !8033)
!8058 = !DILocation(line: 637, column: 53, scope: !8033)
!8059 = !DILocation(line: 637, column: 57, scope: !8033)
!8060 = !DILocation(line: 637, column: 42, scope: !8033)
!8061 = !DILocation(line: 637, column: 20, scope: !8033)
!8062 = !DILocation(line: 637, column: 36, scope: !8033)
!8063 = !DILocation(line: 637, column: 24, scope: !8033)
!8064 = !DILocation(line: 637, column: 51, scope: !8033)
!8065 = !DILocation(line: 637, column: 13, scope: !8033)
!8066 = !DILocation(line: 629, column: 120, scope: !8067)
!8067 = !DILexicalBlockFile(scope: !8013, file: !1803, discriminator: 3)
!8068 = !DILocation(line: 640, column: 13, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 640, column: 13)
!8070 = !DILocation(line: 640, column: 17, scope: !8069)
!8071 = !DILocation(line: 640, column: 29, scope: !8069)
!8072 = !DILocation(line: 640, column: 34, scope: !8069)
!8073 = !DILocation(line: 640, column: 37, scope: !8074)
!8074 = !DILexicalBlockFile(scope: !8069, file: !1803, discriminator: 1)
!8075 = !DILocation(line: 640, column: 42, scope: !8074)
!8076 = !DILocation(line: 640, column: 13, scope: !8074)
!8077 = !DILocation(line: 641, column: 13, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8069, file: !1803, line: 640, column: 55)
!8079 = !DILocation(line: 641, column: 17, scope: !8078)
!8080 = !DILocation(line: 641, column: 28, scope: !8078)
!8081 = !DILocation(line: 642, column: 57, scope: !8078)
!8082 = !DILocation(line: 642, column: 61, scope: !8078)
!8083 = !DILocation(line: 642, column: 46, scope: !8078)
!8084 = !DILocation(line: 642, column: 20, scope: !8078)
!8085 = !DILocation(line: 642, column: 24, scope: !8078)
!8086 = !DILocation(line: 642, column: 55, scope: !8078)
!8087 = !DILocation(line: 642, column: 13, scope: !8078)
!8088 = !DILocation(line: 640, column: 45, scope: !8089)
!8089 = !DILexicalBlockFile(scope: !8069, file: !1803, discriminator: 2)
!8090 = !DILocation(line: 651, column: 13, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 651, column: 13)
!8092 = !DILocation(line: 651, column: 17, scope: !8091)
!8093 = !DILocation(line: 651, column: 48, scope: !8091)
!8094 = !DILocation(line: 651, column: 52, scope: !8091)
!8095 = !DILocation(line: 651, column: 58, scope: !8091)
!8096 = !DILocation(line: 651, column: 63, scope: !8091)
!8097 = !DILocation(line: 651, column: 32, scope: !8091)
!8098 = !DILocation(line: 651, column: 76, scope: !8091)
!8099 = !DILocation(line: 651, column: 29, scope: !8091)
!8100 = !DILocation(line: 651, column: 80, scope: !8091)
!8101 = !DILocation(line: 651, column: 84, scope: !8102)
!8102 = !DILexicalBlockFile(scope: !8091, file: !1803, discriminator: 1)
!8103 = !DILocation(line: 651, column: 89, scope: !8102)
!8104 = !DILocation(line: 651, column: 101, scope: !8102)
!8105 = !DILocation(line: 651, column: 104, scope: !8106)
!8106 = !DILexicalBlockFile(scope: !8091, file: !1803, discriminator: 2)
!8107 = !DILocation(line: 651, column: 109, scope: !8106)
!8108 = !DILocation(line: 651, column: 13, scope: !8106)
!8109 = !DILocation(line: 652, column: 18, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !1803, line: 652, column: 17)
!8111 = distinct !DILexicalBlock(scope: !8091, file: !1803, line: 651, column: 123)
!8112 = !DILocation(line: 652, column: 22, scope: !8110)
!8113 = !DILocation(line: 652, column: 44, scope: !8110)
!8114 = !DILocation(line: 652, column: 48, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8110, file: !1803, discriminator: 1)
!8116 = !DILocation(line: 652, column: 53, scope: !8115)
!8117 = !DILocation(line: 652, column: 65, scope: !8115)
!8118 = !DILocation(line: 652, column: 68, scope: !8119)
!8119 = !DILexicalBlockFile(scope: !8110, file: !1803, discriminator: 2)
!8120 = !DILocation(line: 652, column: 76, scope: !8119)
!8121 = !DILocation(line: 652, column: 17, scope: !8119)
!8122 = !DILocation(line: 653, column: 24, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8110, file: !1803, line: 652, column: 83)
!8124 = !DILocation(line: 653, column: 28, scope: !8123)
!8125 = !DILocation(line: 655, column: 20, scope: !8123)
!8126 = !DILocation(line: 655, column: 25, scope: !8123)
!8127 = !DILocation(line: 655, column: 54, scope: !8123)
!8128 = !DILocation(line: 653, column: 17, scope: !8123)
!8129 = !DILocation(line: 656, column: 17, scope: !8123)
!8130 = !DILocation(line: 656, column: 21, scope: !8123)
!8131 = !DILocation(line: 656, column: 42, scope: !8123)
!8132 = !DILocation(line: 657, column: 13, scope: !8123)
!8133 = !DILocation(line: 658, column: 13, scope: !8111)
!8134 = !DILocation(line: 658, column: 17, scope: !8111)
!8135 = !DILocation(line: 658, column: 28, scope: !8111)
!8136 = !DILocation(line: 659, column: 53, scope: !8111)
!8137 = !DILocation(line: 659, column: 57, scope: !8111)
!8138 = !DILocation(line: 659, column: 42, scope: !8111)
!8139 = !DILocation(line: 659, column: 20, scope: !8111)
!8140 = !DILocation(line: 659, column: 36, scope: !8111)
!8141 = !DILocation(line: 659, column: 24, scope: !8111)
!8142 = !DILocation(line: 659, column: 51, scope: !8111)
!8143 = !DILocation(line: 659, column: 13, scope: !8111)
!8144 = !DILocation(line: 661, column: 13, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 661, column: 13)
!8146 = !DILocation(line: 661, column: 17, scope: !8145)
!8147 = !DILocation(line: 661, column: 29, scope: !8145)
!8148 = !DILocation(line: 661, column: 34, scope: !8145)
!8149 = !DILocation(line: 662, column: 13, scope: !8145)
!8150 = !DILocation(line: 662, column: 17, scope: !8145)
!8151 = !DILocation(line: 662, column: 23, scope: !8145)
!8152 = !DILocation(line: 662, column: 28, scope: !8145)
!8153 = !DILocation(line: 662, column: 40, scope: !8145)
!8154 = !DILocation(line: 662, column: 45, scope: !8145)
!8155 = !DILocation(line: 663, column: 13, scope: !8145)
!8156 = !DILocation(line: 663, column: 18, scope: !8145)
!8157 = !DILocation(line: 661, column: 13, scope: !7998)
!8158 = !DILocation(line: 664, column: 13, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8145, file: !1803, line: 663, column: 31)
!8160 = !DILocation(line: 664, column: 17, scope: !8159)
!8161 = !DILocation(line: 664, column: 28, scope: !8159)
!8162 = !DILocation(line: 665, column: 57, scope: !8159)
!8163 = !DILocation(line: 665, column: 61, scope: !8159)
!8164 = !DILocation(line: 665, column: 46, scope: !8159)
!8165 = !DILocation(line: 665, column: 20, scope: !8159)
!8166 = !DILocation(line: 665, column: 24, scope: !8159)
!8167 = !DILocation(line: 665, column: 55, scope: !8159)
!8168 = !DILocation(line: 665, column: 13, scope: !8159)
!8169 = !DILocation(line: 663, column: 21, scope: !8170)
!8170 = !DILexicalBlockFile(scope: !8145, file: !1803, discriminator: 1)
!8171 = !DILocation(line: 669, column: 13, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 669, column: 13)
!8173 = !DILocation(line: 669, column: 17, scope: !8172)
!8174 = !DILocation(line: 669, column: 33, scope: !8172)
!8175 = !DILocation(line: 669, column: 37, scope: !8172)
!8176 = !DILocation(line: 669, column: 43, scope: !8172)
!8177 = !DILocation(line: 669, column: 48, scope: !8172)
!8178 = !DILocation(line: 669, column: 60, scope: !8172)
!8179 = !DILocation(line: 669, column: 29, scope: !8172)
!8180 = !DILocation(line: 669, column: 66, scope: !8172)
!8181 = !DILocation(line: 670, column: 13, scope: !8172)
!8182 = !DILocation(line: 670, column: 18, scope: !8172)
!8183 = !DILocation(line: 669, column: 13, scope: !7998)
!8184 = !DILocation(line: 671, column: 13, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8172, file: !1803, line: 670, column: 31)
!8186 = !DILocation(line: 671, column: 17, scope: !8185)
!8187 = !DILocation(line: 671, column: 28, scope: !8185)
!8188 = !DILocation(line: 672, column: 57, scope: !8185)
!8189 = !DILocation(line: 672, column: 61, scope: !8185)
!8190 = !DILocation(line: 672, column: 46, scope: !8185)
!8191 = !DILocation(line: 672, column: 20, scope: !8185)
!8192 = !DILocation(line: 672, column: 24, scope: !8185)
!8193 = !DILocation(line: 672, column: 55, scope: !8185)
!8194 = !DILocation(line: 672, column: 13, scope: !8185)
!8195 = !DILocation(line: 673, column: 20, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8172, file: !1803, line: 673, column: 20)
!8197 = !DILocation(line: 673, column: 24, scope: !8196)
!8198 = !DILocation(line: 673, column: 30, scope: !8196)
!8199 = !DILocation(line: 673, column: 35, scope: !8196)
!8200 = !DILocation(line: 673, column: 47, scope: !8196)
!8201 = !DILocation(line: 673, column: 20, scope: !8172)
!8202 = !DILocation(line: 674, column: 13, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8196, file: !1803, line: 673, column: 53)
!8204 = !DILocation(line: 670, column: 21, scope: !8205)
!8205 = !DILexicalBlockFile(scope: !8172, file: !1803, discriminator: 1)
!8206 = !DILocation(line: 677, column: 14, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !7963, file: !1803, line: 677, column: 13)
!8208 = !DILocation(line: 677, column: 18, scope: !8207)
!8209 = !DILocation(line: 677, column: 30, scope: !8207)
!8210 = !DILocation(line: 677, column: 33, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8207, file: !1803, discriminator: 1)
!8212 = !DILocation(line: 677, column: 38, scope: !8211)
!8213 = !DILocation(line: 677, column: 13, scope: !8211)
!8214 = !DILocation(line: 678, column: 13, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8207, file: !1803, line: 677, column: 51)
!8216 = !DILocation(line: 678, column: 17, scope: !8215)
!8217 = !DILocation(line: 678, column: 28, scope: !8215)
!8218 = !DILocation(line: 679, column: 57, scope: !8215)
!8219 = !DILocation(line: 679, column: 61, scope: !8215)
!8220 = !DILocation(line: 679, column: 46, scope: !8215)
!8221 = !DILocation(line: 679, column: 20, scope: !8215)
!8222 = !DILocation(line: 679, column: 24, scope: !8215)
!8223 = !DILocation(line: 679, column: 55, scope: !8215)
!8224 = !DILocation(line: 679, column: 13, scope: !8215)
!8225 = !DILocation(line: 677, column: 41, scope: !8226)
!8226 = !DILexicalBlockFile(scope: !8207, file: !1803, discriminator: 2)
!8227 = !DILocation(line: 682, column: 9, scope: !7963)
!8228 = !DILocation(line: 684, column: 1, scope: !7826)
!8229 = distinct !DISubprogram(name: "decode_ics", scope: !1803, file: !1803, line: 2006, type: !8230, isLocal: true, isDefinition: true, scopeLine: 2008, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!1012, !2065, !1914, !2043, !1012, !1012}
!8232 = !DILocalVariable(name: "ac", arg: 1, scope: !8229, file: !1803, line: 2006, type: !2065)
!8233 = !DILocation(line: 2006, column: 35, scope: !8229)
!8234 = !DILocalVariable(name: "sce", arg: 2, scope: !8229, file: !1803, line: 2006, type: !1914)
!8235 = !DILocation(line: 2006, column: 61, scope: !8229)
!8236 = !DILocalVariable(name: "gb", arg: 3, scope: !8229, file: !1803, line: 2007, type: !2043)
!8237 = !DILocation(line: 2007, column: 38, scope: !8229)
!8238 = !DILocalVariable(name: "common_window", arg: 4, scope: !8229, file: !1803, line: 2007, type: !1012)
!8239 = !DILocation(line: 2007, column: 46, scope: !8229)
!8240 = !DILocalVariable(name: "scale_flag", arg: 5, scope: !8229, file: !1803, line: 2007, type: !1012)
!8241 = !DILocation(line: 2007, column: 65, scope: !8229)
!8242 = !DILocalVariable(name: "pulse", scope: !8229, file: !1803, line: 2009, type: !1980)
!8243 = !DILocation(line: 2009, column: 11, scope: !8229)
!8244 = !DILocalVariable(name: "tns", scope: !8229, file: !1803, line: 2010, type: !2648)
!8245 = !DILocation(line: 2010, column: 27, scope: !8229)
!8246 = !DILocation(line: 2010, column: 34, scope: !8229)
!8247 = !DILocation(line: 2010, column: 39, scope: !8229)
!8248 = !DILocalVariable(name: "ics", scope: !8229, file: !1803, line: 2011, type: !2649)
!8249 = !DILocation(line: 2011, column: 30, scope: !8229)
!8250 = !DILocation(line: 2011, column: 37, scope: !8229)
!8251 = !DILocation(line: 2011, column: 42, scope: !8229)
!8252 = !DILocalVariable(name: "out", scope: !8229, file: !1803, line: 2012, type: !1031)
!8253 = !DILocation(line: 2012, column: 15, scope: !8229)
!8254 = !DILocation(line: 2012, column: 21, scope: !8229)
!8255 = !DILocation(line: 2012, column: 26, scope: !8229)
!8256 = !DILocalVariable(name: "global_gain", scope: !8229, file: !1803, line: 2013, type: !1012)
!8257 = !DILocation(line: 2013, column: 9, scope: !8229)
!8258 = !DILocalVariable(name: "eld_syntax", scope: !8229, file: !1803, line: 2013, type: !1012)
!8259 = !DILocation(line: 2013, column: 22, scope: !8229)
!8260 = !DILocalVariable(name: "er_syntax", scope: !8229, file: !1803, line: 2013, type: !1012)
!8261 = !DILocation(line: 2013, column: 34, scope: !8229)
!8262 = !DILocalVariable(name: "pulse_present", scope: !8229, file: !1803, line: 2013, type: !1012)
!8263 = !DILocation(line: 2013, column: 45, scope: !8229)
!8264 = !DILocalVariable(name: "ret", scope: !8229, file: !1803, line: 2014, type: !1012)
!8265 = !DILocation(line: 2014, column: 9, scope: !8229)
!8266 = !DILocation(line: 2016, column: 18, scope: !8229)
!8267 = !DILocation(line: 2016, column: 22, scope: !8229)
!8268 = !DILocation(line: 2016, column: 28, scope: !8229)
!8269 = !DILocation(line: 2016, column: 33, scope: !8229)
!8270 = !DILocation(line: 2016, column: 45, scope: !8229)
!8271 = !DILocation(line: 2016, column: 16, scope: !8229)
!8272 = !DILocation(line: 2017, column: 17, scope: !8229)
!8273 = !DILocation(line: 2017, column: 21, scope: !8229)
!8274 = !DILocation(line: 2017, column: 27, scope: !8229)
!8275 = !DILocation(line: 2017, column: 32, scope: !8229)
!8276 = !DILocation(line: 2017, column: 44, scope: !8229)
!8277 = !DILocation(line: 2017, column: 61, scope: !8229)
!8278 = !DILocation(line: 2018, column: 18, scope: !8229)
!8279 = !DILocation(line: 2018, column: 22, scope: !8229)
!8280 = !DILocation(line: 2018, column: 28, scope: !8229)
!8281 = !DILocation(line: 2018, column: 33, scope: !8229)
!8282 = !DILocation(line: 2018, column: 45, scope: !8229)
!8283 = !DILocation(line: 2018, column: 63, scope: !8229)
!8284 = !DILocation(line: 2019, column: 18, scope: !8229)
!8285 = !DILocation(line: 2019, column: 22, scope: !8229)
!8286 = !DILocation(line: 2019, column: 28, scope: !8229)
!8287 = !DILocation(line: 2019, column: 33, scope: !8229)
!8288 = !DILocation(line: 2019, column: 45, scope: !8229)
!8289 = !DILocation(line: 2019, column: 62, scope: !8229)
!8290 = !DILocation(line: 2020, column: 18, scope: !8229)
!8291 = !DILocation(line: 2020, column: 22, scope: !8229)
!8292 = !DILocation(line: 2020, column: 28, scope: !8229)
!8293 = !DILocation(line: 2020, column: 33, scope: !8229)
!8294 = !DILocation(line: 2020, column: 45, scope: !8229)
!8295 = !DILocation(line: 2019, column: 62, scope: !8296)
!8296 = !DILexicalBlockFile(scope: !8229, file: !1803, discriminator: 1)
!8297 = !DILocation(line: 2019, column: 62, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !8229, file: !1803, discriminator: 2)
!8299 = !DILocation(line: 2017, column: 15, scope: !8296)
!8300 = !DILocation(line: 2025, column: 11, scope: !8229)
!8301 = !DILocation(line: 2025, column: 21, scope: !8229)
!8302 = !DILocation(line: 2027, column: 28, scope: !8229)
!8303 = !DILocation(line: 2027, column: 19, scope: !8229)
!8304 = !DILocation(line: 2027, column: 17, scope: !8229)
!8305 = !DILocation(line: 2029, column: 10, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2029, column: 9)
!8307 = !DILocation(line: 2029, column: 24, scope: !8306)
!8308 = !DILocation(line: 2029, column: 28, scope: !8309)
!8309 = !DILexicalBlockFile(scope: !8306, file: !1803, discriminator: 1)
!8310 = !DILocation(line: 2029, column: 9, scope: !8309)
!8311 = !DILocation(line: 2030, column: 31, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8306, file: !1803, line: 2029, column: 40)
!8313 = !DILocation(line: 2030, column: 35, scope: !8312)
!8314 = !DILocation(line: 2030, column: 40, scope: !8312)
!8315 = !DILocation(line: 2030, column: 15, scope: !8312)
!8316 = !DILocation(line: 2030, column: 13, scope: !8312)
!8317 = !DILocation(line: 2031, column: 13, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8312, file: !1803, line: 2031, column: 13)
!8319 = !DILocation(line: 2031, column: 17, scope: !8318)
!8320 = !DILocation(line: 2031, column: 13, scope: !8312)
!8321 = !DILocation(line: 2032, column: 13, scope: !8318)
!8322 = !DILocation(line: 2033, column: 5, scope: !8312)
!8323 = !DILocation(line: 2035, column: 34, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2035, column: 9)
!8325 = !DILocation(line: 2035, column: 38, scope: !8324)
!8326 = !DILocation(line: 2035, column: 43, scope: !8324)
!8327 = !DILocation(line: 2036, column: 34, scope: !8324)
!8328 = !DILocation(line: 2036, column: 39, scope: !8324)
!8329 = !DILocation(line: 2036, column: 58, scope: !8324)
!8330 = !DILocation(line: 2036, column: 62, scope: !8324)
!8331 = !DILocation(line: 2035, column: 16, scope: !8324)
!8332 = !DILocation(line: 2035, column: 14, scope: !8324)
!8333 = !DILocation(line: 2036, column: 68, scope: !8324)
!8334 = !DILocation(line: 2035, column: 9, scope: !8229)
!8335 = !DILocation(line: 2037, column: 9, scope: !8324)
!8336 = !DILocation(line: 2038, column: 36, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2038, column: 9)
!8338 = !DILocation(line: 2038, column: 40, scope: !8337)
!8339 = !DILocation(line: 2038, column: 45, scope: !8337)
!8340 = !DILocation(line: 2038, column: 49, scope: !8337)
!8341 = !DILocation(line: 2038, column: 53, scope: !8337)
!8342 = !DILocation(line: 2038, column: 66, scope: !8337)
!8343 = !DILocation(line: 2039, column: 35, scope: !8337)
!8344 = !DILocation(line: 2039, column: 40, scope: !8337)
!8345 = !DILocation(line: 2039, column: 51, scope: !8337)
!8346 = !DILocation(line: 2039, column: 56, scope: !8337)
!8347 = !DILocation(line: 2038, column: 16, scope: !8337)
!8348 = !DILocation(line: 2038, column: 14, scope: !8337)
!8349 = !DILocation(line: 2039, column: 76, scope: !8337)
!8350 = !DILocation(line: 2038, column: 9, scope: !8229)
!8351 = !DILocation(line: 2040, column: 9, scope: !8337)
!8352 = !DILocation(line: 2042, column: 19, scope: !8229)
!8353 = !DILocation(line: 2043, column: 10, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2043, column: 9)
!8355 = !DILocation(line: 2043, column: 9, scope: !8229)
!8356 = !DILocation(line: 2044, column: 14, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !1803, line: 2044, column: 13)
!8358 = distinct !DILexicalBlock(scope: !8354, file: !1803, line: 2043, column: 22)
!8359 = !DILocation(line: 2044, column: 25, scope: !8357)
!8360 = !DILocation(line: 2044, column: 55, scope: !8361)
!8361 = !DILexicalBlockFile(scope: !8357, file: !1803, discriminator: 1)
!8362 = !DILocation(line: 2044, column: 45, scope: !8361)
!8363 = !DILocation(line: 2044, column: 43, scope: !8361)
!8364 = !DILocation(line: 2044, column: 13, scope: !8361)
!8365 = !DILocation(line: 2045, column: 17, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !1803, line: 2045, column: 17)
!8367 = distinct !DILexicalBlock(scope: !8357, file: !1803, line: 2044, column: 61)
!8368 = !DILocation(line: 2045, column: 22, scope: !8366)
!8369 = !DILocation(line: 2045, column: 41, scope: !8366)
!8370 = !DILocation(line: 2045, column: 17, scope: !8367)
!8371 = !DILocation(line: 2046, column: 24, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8366, file: !1803, line: 2045, column: 66)
!8373 = !DILocation(line: 2046, column: 28, scope: !8372)
!8374 = !DILocation(line: 2046, column: 17, scope: !8372)
!8375 = !DILocation(line: 2048, column: 21, scope: !8372)
!8376 = !DILocation(line: 2049, column: 17, scope: !8372)
!8377 = !DILocation(line: 2051, column: 39, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8367, file: !1803, line: 2051, column: 17)
!8379 = !DILocation(line: 2051, column: 43, scope: !8378)
!8380 = !DILocation(line: 2051, column: 48, scope: !8378)
!8381 = !DILocation(line: 2051, column: 60, scope: !8378)
!8382 = !DILocation(line: 2051, column: 65, scope: !8378)
!8383 = !DILocation(line: 2051, column: 17, scope: !8378)
!8384 = !DILocation(line: 2051, column: 17, scope: !8367)
!8385 = !DILocation(line: 2052, column: 24, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8378, file: !1803, line: 2051, column: 75)
!8387 = !DILocation(line: 2052, column: 28, scope: !8386)
!8388 = !DILocation(line: 2052, column: 17, scope: !8386)
!8389 = !DILocation(line: 2054, column: 21, scope: !8386)
!8390 = !DILocation(line: 2055, column: 17, scope: !8386)
!8391 = !DILocation(line: 2057, column: 9, scope: !8367)
!8392 = !DILocation(line: 2058, column: 34, scope: !8358)
!8393 = !DILocation(line: 2058, column: 24, scope: !8358)
!8394 = !DILocation(line: 2058, column: 9, scope: !8358)
!8395 = !DILocation(line: 2058, column: 14, scope: !8358)
!8396 = !DILocation(line: 2058, column: 22, scope: !8358)
!8397 = !DILocation(line: 2059, column: 13, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8358, file: !1803, line: 2059, column: 13)
!8399 = !DILocation(line: 2059, column: 18, scope: !8398)
!8400 = !DILocation(line: 2059, column: 26, scope: !8398)
!8401 = !DILocation(line: 2059, column: 30, scope: !8402)
!8402 = !DILexicalBlockFile(scope: !8398, file: !1803, discriminator: 1)
!8403 = !DILocation(line: 2059, column: 13, scope: !8402)
!8404 = !DILocation(line: 2060, column: 30, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8398, file: !1803, line: 2059, column: 41)
!8406 = !DILocation(line: 2060, column: 34, scope: !8405)
!8407 = !DILocation(line: 2060, column: 39, scope: !8405)
!8408 = !DILocation(line: 2060, column: 43, scope: !8405)
!8409 = !DILocation(line: 2060, column: 19, scope: !8405)
!8410 = !DILocation(line: 2060, column: 17, scope: !8405)
!8411 = !DILocation(line: 2061, column: 17, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8405, file: !1803, line: 2061, column: 17)
!8413 = !DILocation(line: 2061, column: 21, scope: !8412)
!8414 = !DILocation(line: 2061, column: 17, scope: !8405)
!8415 = !DILocation(line: 2062, column: 17, scope: !8412)
!8416 = !DILocation(line: 2063, column: 9, scope: !8405)
!8417 = !DILocation(line: 2064, column: 14, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8358, file: !1803, line: 2064, column: 13)
!8419 = !DILocation(line: 2064, column: 25, scope: !8418)
!8420 = !DILocation(line: 2064, column: 38, scope: !8421)
!8421 = !DILexicalBlockFile(scope: !8418, file: !1803, discriminator: 1)
!8422 = !DILocation(line: 2064, column: 28, scope: !8421)
!8423 = !DILocation(line: 2064, column: 13, scope: !8421)
!8424 = !DILocation(line: 2065, column: 33, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8418, file: !1803, line: 2064, column: 43)
!8426 = !DILocation(line: 2065, column: 38, scope: !8425)
!8427 = !DILocation(line: 2065, column: 13, scope: !8425)
!8428 = !DILocation(line: 2066, column: 18, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8425, file: !1803, line: 2066, column: 17)
!8430 = !DILocation(line: 2066, column: 22, scope: !8429)
!8431 = !DILocation(line: 2066, column: 17, scope: !8425)
!8432 = !DILocation(line: 2067, column: 47, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8429, file: !1803, line: 2066, column: 43)
!8434 = !DILocation(line: 2067, column: 51, scope: !8433)
!8435 = !DILocation(line: 2067, column: 17, scope: !8433)
!8436 = !DILocation(line: 2068, column: 17, scope: !8433)
!8437 = !DILocation(line: 2068, column: 21, scope: !8433)
!8438 = !DILocation(line: 2068, column: 41, scope: !8433)
!8439 = !DILocation(line: 2069, column: 13, scope: !8433)
!8440 = !DILocation(line: 2070, column: 9, scope: !8425)
!8441 = !DILocation(line: 2073, column: 13, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8358, file: !1803, line: 2073, column: 13)
!8443 = !DILocation(line: 2073, column: 18, scope: !8442)
!8444 = !DILocation(line: 2073, column: 26, scope: !8442)
!8445 = !DILocation(line: 2073, column: 29, scope: !8446)
!8446 = !DILexicalBlockFile(scope: !8442, file: !1803, discriminator: 1)
!8447 = !DILocation(line: 2073, column: 13, scope: !8446)
!8448 = !DILocation(line: 2074, column: 30, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8442, file: !1803, line: 2073, column: 40)
!8450 = !DILocation(line: 2074, column: 34, scope: !8449)
!8451 = !DILocation(line: 2074, column: 39, scope: !8449)
!8452 = !DILocation(line: 2074, column: 43, scope: !8449)
!8453 = !DILocation(line: 2074, column: 19, scope: !8449)
!8454 = !DILocation(line: 2074, column: 17, scope: !8449)
!8455 = !DILocation(line: 2075, column: 17, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8449, file: !1803, line: 2075, column: 17)
!8457 = !DILocation(line: 2075, column: 21, scope: !8456)
!8458 = !DILocation(line: 2075, column: 17, scope: !8449)
!8459 = !DILocation(line: 2076, column: 17, scope: !8456)
!8460 = !DILocation(line: 2077, column: 9, scope: !8449)
!8461 = !DILocation(line: 2078, column: 5, scope: !8358)
!8462 = !DILocation(line: 2080, column: 39, scope: !8229)
!8463 = !DILocation(line: 2080, column: 43, scope: !8229)
!8464 = !DILocation(line: 2080, column: 48, scope: !8229)
!8465 = !DILocation(line: 2080, column: 52, scope: !8229)
!8466 = !DILocation(line: 2080, column: 57, scope: !8229)
!8467 = !DILocation(line: 2080, column: 61, scope: !8229)
!8468 = !DILocation(line: 2081, column: 45, scope: !8229)
!8469 = !DILocation(line: 2081, column: 50, scope: !8229)
!8470 = !DILocation(line: 2081, column: 55, scope: !8229)
!8471 = !DILocation(line: 2080, column: 11, scope: !8229)
!8472 = !DILocation(line: 2080, column: 9, scope: !8229)
!8473 = !DILocation(line: 2082, column: 9, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2082, column: 9)
!8475 = !DILocation(line: 2082, column: 13, scope: !8474)
!8476 = !DILocation(line: 2082, column: 9, scope: !8229)
!8477 = !DILocation(line: 2083, column: 9, scope: !8474)
!8478 = !DILocation(line: 2085, column: 9, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8229, file: !1803, line: 2085, column: 9)
!8480 = !DILocation(line: 2085, column: 13, scope: !8479)
!8481 = !DILocation(line: 2085, column: 19, scope: !8479)
!8482 = !DILocation(line: 2085, column: 24, scope: !8479)
!8483 = !DILocation(line: 2085, column: 36, scope: !8479)
!8484 = !DILocation(line: 2085, column: 52, scope: !8479)
!8485 = !DILocation(line: 2085, column: 56, scope: !8486)
!8486 = !DILexicalBlockFile(scope: !8479, file: !1803, discriminator: 1)
!8487 = !DILocation(line: 2085, column: 9, scope: !8486)
!8488 = !DILocation(line: 2086, column: 26, scope: !8479)
!8489 = !DILocation(line: 2086, column: 30, scope: !8479)
!8490 = !DILocation(line: 2086, column: 9, scope: !8479)
!8491 = !DILocation(line: 2088, column: 5, scope: !8229)
!8492 = !DILocation(line: 2090, column: 5, scope: !8229)
!8493 = !DILocation(line: 2090, column: 10, scope: !8229)
!8494 = !DILocation(line: 2090, column: 18, scope: !8229)
!8495 = !DILocation(line: 2091, column: 12, scope: !8229)
!8496 = !DILocation(line: 2091, column: 5, scope: !8229)
!8497 = !DILocation(line: 2092, column: 1, scope: !8229)
!8498 = distinct !DISubprogram(name: "decode_cpe", scope: !1803, file: !1803, line: 2185, type: !8499, isLocal: true, isDefinition: true, scopeLine: 2186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!1012, !2065, !2043, !2095}
!8501 = !DILocalVariable(name: "ac", arg: 1, scope: !8498, file: !1803, line: 2185, type: !2065)
!8502 = !DILocation(line: 2185, column: 35, scope: !8498)
!8503 = !DILocalVariable(name: "gb", arg: 2, scope: !8498, file: !1803, line: 2185, type: !2043)
!8504 = !DILocation(line: 2185, column: 54, scope: !8498)
!8505 = !DILocalVariable(name: "cpe", arg: 3, scope: !8498, file: !1803, line: 2185, type: !2095)
!8506 = !DILocation(line: 2185, column: 74, scope: !8498)
!8507 = !DILocalVariable(name: "i", scope: !8498, file: !1803, line: 2187, type: !1012)
!8508 = !DILocation(line: 2187, column: 9, scope: !8498)
!8509 = !DILocalVariable(name: "ret", scope: !8498, file: !1803, line: 2187, type: !1012)
!8510 = !DILocation(line: 2187, column: 12, scope: !8498)
!8511 = !DILocalVariable(name: "common_window", scope: !8498, file: !1803, line: 2187, type: !1012)
!8512 = !DILocation(line: 2187, column: 17, scope: !8498)
!8513 = !DILocalVariable(name: "ms_present", scope: !8498, file: !1803, line: 2187, type: !1012)
!8514 = !DILocation(line: 2187, column: 32, scope: !8498)
!8515 = !DILocalVariable(name: "eld_syntax", scope: !8498, file: !1803, line: 2188, type: !1012)
!8516 = !DILocation(line: 2188, column: 9, scope: !8498)
!8517 = !DILocation(line: 2188, column: 22, scope: !8498)
!8518 = !DILocation(line: 2188, column: 26, scope: !8498)
!8519 = !DILocation(line: 2188, column: 32, scope: !8498)
!8520 = !DILocation(line: 2188, column: 37, scope: !8498)
!8521 = !DILocation(line: 2188, column: 49, scope: !8498)
!8522 = !DILocation(line: 2190, column: 21, scope: !8498)
!8523 = !DILocation(line: 2190, column: 32, scope: !8498)
!8524 = !DILocation(line: 2190, column: 45, scope: !8525)
!8525 = !DILexicalBlockFile(scope: !8498, file: !1803, discriminator: 1)
!8526 = !DILocation(line: 2190, column: 35, scope: !8525)
!8527 = !DILocation(line: 2190, column: 32, scope: !8525)
!8528 = !DILocation(line: 2190, column: 32, scope: !8529)
!8529 = !DILexicalBlockFile(scope: !8498, file: !1803, discriminator: 2)
!8530 = !DILocation(line: 2190, column: 19, scope: !8529)
!8531 = !DILocation(line: 2191, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8498, file: !1803, line: 2191, column: 9)
!8533 = !DILocation(line: 2191, column: 9, scope: !8498)
!8534 = !DILocation(line: 2192, column: 29, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !1803, line: 2192, column: 13)
!8536 = distinct !DILexicalBlock(scope: !8532, file: !1803, line: 2191, column: 24)
!8537 = !DILocation(line: 2192, column: 34, scope: !8535)
!8538 = !DILocation(line: 2192, column: 39, scope: !8535)
!8539 = !DILocation(line: 2192, column: 45, scope: !8535)
!8540 = !DILocation(line: 2192, column: 50, scope: !8535)
!8541 = !DILocation(line: 2192, column: 13, scope: !8535)
!8542 = !DILocation(line: 2192, column: 13, scope: !8536)
!8543 = !DILocation(line: 2193, column: 13, scope: !8535)
!8544 = !DILocation(line: 2194, column: 13, scope: !8536)
!8545 = !DILocation(line: 2194, column: 18, scope: !8536)
!8546 = !DILocation(line: 2194, column: 24, scope: !8536)
!8547 = !DILocation(line: 2194, column: 28, scope: !8536)
!8548 = !DILocation(line: 2194, column: 11, scope: !8536)
!8549 = !DILocation(line: 2195, column: 9, scope: !8536)
!8550 = !DILocation(line: 2195, column: 14, scope: !8536)
!8551 = !DILocation(line: 2195, column: 20, scope: !8536)
!8552 = !DILocation(line: 2195, column: 26, scope: !8536)
!8553 = !DILocation(line: 2195, column: 31, scope: !8536)
!8554 = !DILocation(line: 2195, column: 37, scope: !8536)
!8555 = !DILocation(line: 2196, column: 43, scope: !8536)
!8556 = !DILocation(line: 2196, column: 9, scope: !8536)
!8557 = !DILocation(line: 2196, column: 14, scope: !8536)
!8558 = !DILocation(line: 2196, column: 20, scope: !8536)
!8559 = !DILocation(line: 2196, column: 24, scope: !8536)
!8560 = !DILocation(line: 2196, column: 41, scope: !8536)
!8561 = !DILocation(line: 2197, column: 13, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8536, file: !1803, line: 2197, column: 13)
!8563 = !DILocation(line: 2197, column: 18, scope: !8562)
!8564 = !DILocation(line: 2197, column: 24, scope: !8562)
!8565 = !DILocation(line: 2197, column: 28, scope: !8562)
!8566 = !DILocation(line: 2197, column: 46, scope: !8562)
!8567 = !DILocation(line: 2198, column: 14, scope: !8562)
!8568 = !DILocation(line: 2198, column: 18, scope: !8562)
!8569 = !DILocation(line: 2198, column: 24, scope: !8562)
!8570 = !DILocation(line: 2198, column: 29, scope: !8562)
!8571 = !DILocation(line: 2198, column: 41, scope: !8562)
!8572 = !DILocation(line: 2197, column: 13, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8536, file: !1803, discriminator: 1)
!8574 = !DILocation(line: 2199, column: 56, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8562, file: !1803, line: 2199, column: 17)
!8576 = !DILocation(line: 2199, column: 47, scope: !8575)
!8577 = !DILocation(line: 2199, column: 18, scope: !8575)
!8578 = !DILocation(line: 2199, column: 23, scope: !8575)
!8579 = !DILocation(line: 2199, column: 29, scope: !8575)
!8580 = !DILocation(line: 2199, column: 33, scope: !8575)
!8581 = !DILocation(line: 2199, column: 37, scope: !8575)
!8582 = !DILocation(line: 2199, column: 45, scope: !8575)
!8583 = !DILocation(line: 2199, column: 17, scope: !8562)
!8584 = !DILocation(line: 2200, column: 29, scope: !8575)
!8585 = !DILocation(line: 2200, column: 34, scope: !8575)
!8586 = !DILocation(line: 2200, column: 40, scope: !8575)
!8587 = !DILocation(line: 2200, column: 44, scope: !8575)
!8588 = !DILocation(line: 2200, column: 49, scope: !8575)
!8589 = !DILocation(line: 2200, column: 53, scope: !8575)
!8590 = !DILocation(line: 2200, column: 58, scope: !8575)
!8591 = !DILocation(line: 2200, column: 64, scope: !8575)
!8592 = !DILocation(line: 2200, column: 68, scope: !8575)
!8593 = !DILocation(line: 2200, column: 17, scope: !8575)
!8594 = !DILocation(line: 2199, column: 62, scope: !8595)
!8595 = !DILexicalBlockFile(scope: !8575, file: !1803, discriminator: 1)
!8596 = !DILocation(line: 2201, column: 31, scope: !8536)
!8597 = !DILocation(line: 2201, column: 22, scope: !8536)
!8598 = !DILocation(line: 2201, column: 20, scope: !8536)
!8599 = !DILocation(line: 2202, column: 13, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8536, file: !1803, line: 2202, column: 13)
!8601 = !DILocation(line: 2202, column: 24, scope: !8600)
!8602 = !DILocation(line: 2202, column: 13, scope: !8536)
!8603 = !DILocation(line: 2203, column: 20, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !1803, line: 2202, column: 30)
!8605 = !DILocation(line: 2203, column: 24, scope: !8604)
!8606 = !DILocation(line: 2203, column: 13, scope: !8604)
!8607 = !DILocation(line: 2204, column: 13, scope: !8604)
!8608 = !DILocation(line: 2205, column: 20, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8600, file: !1803, line: 2205, column: 20)
!8610 = !DILocation(line: 2205, column: 20, scope: !8600)
!8611 = !DILocation(line: 2206, column: 36, scope: !8609)
!8612 = !DILocation(line: 2206, column: 41, scope: !8609)
!8613 = !DILocation(line: 2206, column: 45, scope: !8609)
!8614 = !DILocation(line: 2206, column: 13, scope: !8609)
!8615 = !DILocation(line: 2207, column: 5, scope: !8536)
!8616 = !DILocation(line: 2208, column: 27, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8498, file: !1803, line: 2208, column: 9)
!8618 = !DILocation(line: 2208, column: 32, scope: !8617)
!8619 = !DILocation(line: 2208, column: 37, scope: !8617)
!8620 = !DILocation(line: 2208, column: 44, scope: !8617)
!8621 = !DILocation(line: 2208, column: 48, scope: !8617)
!8622 = !DILocation(line: 2208, column: 16, scope: !8617)
!8623 = !DILocation(line: 2208, column: 14, scope: !8617)
!8624 = !DILocation(line: 2208, column: 9, scope: !8498)
!8625 = !DILocation(line: 2209, column: 16, scope: !8617)
!8626 = !DILocation(line: 2209, column: 9, scope: !8617)
!8627 = !DILocation(line: 2210, column: 27, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8498, file: !1803, line: 2210, column: 9)
!8629 = !DILocation(line: 2210, column: 32, scope: !8628)
!8630 = !DILocation(line: 2210, column: 37, scope: !8628)
!8631 = !DILocation(line: 2210, column: 44, scope: !8628)
!8632 = !DILocation(line: 2210, column: 48, scope: !8628)
!8633 = !DILocation(line: 2210, column: 16, scope: !8628)
!8634 = !DILocation(line: 2210, column: 14, scope: !8628)
!8635 = !DILocation(line: 2210, column: 9, scope: !8498)
!8636 = !DILocation(line: 2211, column: 16, scope: !8628)
!8637 = !DILocation(line: 2211, column: 9, scope: !8628)
!8638 = !DILocation(line: 2213, column: 9, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8498, file: !1803, line: 2213, column: 9)
!8640 = !DILocation(line: 2213, column: 9, scope: !8498)
!8641 = !DILocation(line: 2214, column: 13, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !1803, line: 2214, column: 13)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !1803, line: 2213, column: 24)
!8644 = !DILocation(line: 2214, column: 13, scope: !8643)
!8645 = !DILocation(line: 2215, column: 35, scope: !8642)
!8646 = !DILocation(line: 2215, column: 39, scope: !8642)
!8647 = !DILocation(line: 2215, column: 13, scope: !8642)
!8648 = !DILocation(line: 2216, column: 13, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8643, file: !1803, line: 2216, column: 13)
!8650 = !DILocation(line: 2216, column: 17, scope: !8649)
!8651 = !DILocation(line: 2216, column: 23, scope: !8649)
!8652 = !DILocation(line: 2216, column: 28, scope: !8649)
!8653 = !DILocation(line: 2216, column: 40, scope: !8649)
!8654 = !DILocation(line: 2216, column: 13, scope: !8643)
!8655 = !DILocation(line: 2217, column: 30, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8649, file: !1803, line: 2216, column: 57)
!8657 = !DILocation(line: 2217, column: 35, scope: !8656)
!8658 = !DILocation(line: 2217, column: 40, scope: !8656)
!8659 = !DILocation(line: 2217, column: 13, scope: !8656)
!8660 = !DILocation(line: 2218, column: 30, scope: !8656)
!8661 = !DILocation(line: 2218, column: 35, scope: !8656)
!8662 = !DILocation(line: 2218, column: 40, scope: !8656)
!8663 = !DILocation(line: 2218, column: 13, scope: !8656)
!8664 = !DILocation(line: 2219, column: 9, scope: !8656)
!8665 = !DILocation(line: 2220, column: 5, scope: !8643)
!8666 = !DILocation(line: 2222, column: 28, scope: !8498)
!8667 = !DILocation(line: 2222, column: 32, scope: !8498)
!8668 = !DILocation(line: 2222, column: 37, scope: !8498)
!8669 = !DILocation(line: 2222, column: 5, scope: !8498)
!8670 = !DILocation(line: 2223, column: 5, scope: !8498)
!8671 = !DILocation(line: 2224, column: 1, scope: !8498)
!8672 = distinct !DISubprogram(name: "spectral_to_sample", scope: !1803, file: !1803, line: 2909, type: !8673, isLocal: true, isDefinition: true, scopeLine: 2910, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{null, !2065, !1012}
!8675 = !DILocalVariable(name: "ac", arg: 1, scope: !8672, file: !1803, line: 2909, type: !2065)
!8676 = !DILocation(line: 2909, column: 44, scope: !8672)
!8677 = !DILocalVariable(name: "samples", arg: 2, scope: !8672, file: !1803, line: 2909, type: !1012)
!8678 = !DILocation(line: 2909, column: 52, scope: !8672)
!8679 = !DILocalVariable(name: "i", scope: !8672, file: !1803, line: 2911, type: !1012)
!8680 = !DILocation(line: 2911, column: 9, scope: !8672)
!8681 = !DILocalVariable(name: "type", scope: !8672, file: !1803, line: 2911, type: !1012)
!8682 = !DILocation(line: 2911, column: 12, scope: !8672)
!8683 = !DILocalVariable(name: "imdct_and_window", scope: !8672, file: !1803, line: 2912, type: !2640)
!8684 = !DILocation(line: 2912, column: 12, scope: !8672)
!8685 = !DILocation(line: 2913, column: 13, scope: !8672)
!8686 = !DILocation(line: 2913, column: 17, scope: !8672)
!8687 = !DILocation(line: 2913, column: 23, scope: !8672)
!8688 = !DILocation(line: 2913, column: 28, scope: !8672)
!8689 = !DILocation(line: 2913, column: 5, scope: !8672)
!8690 = !DILocation(line: 2915, column: 26, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8672, file: !1803, line: 2913, column: 41)
!8692 = !DILocation(line: 2916, column: 9, scope: !8691)
!8693 = !DILocation(line: 2918, column: 26, scope: !8691)
!8694 = !DILocation(line: 2919, column: 9, scope: !8691)
!8695 = !DILocation(line: 2921, column: 13, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8691, file: !1803, line: 2921, column: 13)
!8697 = !DILocation(line: 2921, column: 17, scope: !8696)
!8698 = !DILocation(line: 2921, column: 23, scope: !8696)
!8699 = !DILocation(line: 2921, column: 28, scope: !8696)
!8700 = !DILocation(line: 2921, column: 13, scope: !8691)
!8701 = !DILocation(line: 2922, column: 30, scope: !8696)
!8702 = !DILocation(line: 2922, column: 13, scope: !8696)
!8703 = !DILocation(line: 2924, column: 32, scope: !8696)
!8704 = !DILocation(line: 2924, column: 36, scope: !8696)
!8705 = !DILocation(line: 2924, column: 30, scope: !8696)
!8706 = !DILocation(line: 2925, column: 5, scope: !8691)
!8707 = !DILocation(line: 2926, column: 15, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8672, file: !1803, line: 2926, column: 5)
!8709 = !DILocation(line: 2926, column: 10, scope: !8708)
!8710 = !DILocation(line: 2926, column: 20, scope: !8711)
!8711 = !DILexicalBlockFile(scope: !8712, file: !1803, discriminator: 1)
!8712 = distinct !DILexicalBlock(scope: !8708, file: !1803, line: 2926, column: 5)
!8713 = !DILocation(line: 2926, column: 25, scope: !8711)
!8714 = !DILocation(line: 2926, column: 5, scope: !8711)
!8715 = !DILocation(line: 2927, column: 16, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !1803, line: 2927, column: 9)
!8717 = distinct !DILexicalBlock(scope: !8712, file: !1803, line: 2926, column: 39)
!8718 = !DILocation(line: 2927, column: 14, scope: !8716)
!8719 = !DILocation(line: 2927, column: 21, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8721, file: !1803, discriminator: 1)
!8721 = distinct !DILexicalBlock(scope: !8716, file: !1803, line: 2927, column: 9)
!8722 = !DILocation(line: 2927, column: 23, scope: !8720)
!8723 = !DILocation(line: 2927, column: 9, scope: !8720)
!8724 = !DILocalVariable(name: "che", scope: !8725, file: !1803, line: 2928, type: !2095)
!8725 = distinct !DILexicalBlock(scope: !8721, file: !1803, line: 2927, column: 34)
!8726 = !DILocation(line: 2928, column: 29, scope: !8725)
!8727 = !DILocation(line: 2928, column: 49, scope: !8725)
!8728 = !DILocation(line: 2928, column: 35, scope: !8725)
!8729 = !DILocation(line: 2928, column: 43, scope: !8725)
!8730 = !DILocation(line: 2928, column: 39, scope: !8725)
!8731 = !DILocation(line: 2929, column: 17, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8725, file: !1803, line: 2929, column: 17)
!8733 = !DILocation(line: 2929, column: 21, scope: !8732)
!8734 = !DILocation(line: 2929, column: 24, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !8732, file: !1803, discriminator: 1)
!8736 = !DILocation(line: 2929, column: 29, scope: !8735)
!8737 = !DILocation(line: 2929, column: 17, scope: !8735)
!8738 = !DILocation(line: 2930, column: 21, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2930, column: 21)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !1803, line: 2929, column: 38)
!8741 = !DILocation(line: 2930, column: 26, scope: !8739)
!8742 = !DILocation(line: 2930, column: 21, scope: !8740)
!8743 = !DILocation(line: 2931, column: 44, scope: !8739)
!8744 = !DILocation(line: 2931, column: 48, scope: !8739)
!8745 = !DILocation(line: 2931, column: 53, scope: !8739)
!8746 = !DILocation(line: 2931, column: 59, scope: !8739)
!8747 = !DILocation(line: 2931, column: 21, scope: !8739)
!8748 = !DILocation(line: 2932, column: 21, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2932, column: 21)
!8750 = !DILocation(line: 2932, column: 25, scope: !8749)
!8751 = !DILocation(line: 2932, column: 31, scope: !8749)
!8752 = !DILocation(line: 2932, column: 36, scope: !8749)
!8753 = !DILocation(line: 2932, column: 48, scope: !8749)
!8754 = !DILocation(line: 2932, column: 21, scope: !8740)
!8755 = !DILocation(line: 2933, column: 25, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !1803, line: 2933, column: 25)
!8757 = distinct !DILexicalBlock(scope: !8749, file: !1803, line: 2932, column: 64)
!8758 = !DILocation(line: 2933, column: 30, scope: !8756)
!8759 = !DILocation(line: 2933, column: 36, scope: !8756)
!8760 = !DILocation(line: 2933, column: 40, scope: !8756)
!8761 = !DILocation(line: 2933, column: 25, scope: !8757)
!8762 = !DILocation(line: 2934, column: 29, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !1803, line: 2934, column: 29)
!8764 = distinct !DILexicalBlock(scope: !8756, file: !1803, line: 2933, column: 59)
!8765 = !DILocation(line: 2934, column: 34, scope: !8763)
!8766 = !DILocation(line: 2934, column: 40, scope: !8763)
!8767 = !DILocation(line: 2934, column: 44, scope: !8763)
!8768 = !DILocation(line: 2934, column: 48, scope: !8763)
!8769 = !DILocation(line: 2934, column: 29, scope: !8764)
!8770 = !DILocation(line: 2935, column: 29, scope: !8763)
!8771 = !DILocation(line: 2935, column: 33, scope: !8763)
!8772 = !DILocation(line: 2935, column: 43, scope: !8763)
!8773 = !DILocation(line: 2935, column: 48, scope: !8763)
!8774 = !DILocation(line: 2935, column: 53, scope: !8763)
!8775 = !DILocation(line: 2936, column: 29, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8764, file: !1803, line: 2936, column: 29)
!8777 = !DILocation(line: 2936, column: 34, scope: !8776)
!8778 = !DILocation(line: 2936, column: 40, scope: !8776)
!8779 = !DILocation(line: 2936, column: 44, scope: !8776)
!8780 = !DILocation(line: 2936, column: 48, scope: !8776)
!8781 = !DILocation(line: 2936, column: 56, scope: !8776)
!8782 = !DILocation(line: 2936, column: 59, scope: !8783)
!8783 = !DILexicalBlockFile(scope: !8776, file: !1803, discriminator: 1)
!8784 = !DILocation(line: 2936, column: 64, scope: !8783)
!8785 = !DILocation(line: 2936, column: 29, scope: !8783)
!8786 = !DILocation(line: 2937, column: 29, scope: !8776)
!8787 = !DILocation(line: 2937, column: 33, scope: !8776)
!8788 = !DILocation(line: 2937, column: 43, scope: !8776)
!8789 = !DILocation(line: 2937, column: 48, scope: !8776)
!8790 = !DILocation(line: 2937, column: 53, scope: !8776)
!8791 = !DILocation(line: 2938, column: 21, scope: !8764)
!8792 = !DILocation(line: 2939, column: 17, scope: !8757)
!8793 = !DILocation(line: 2940, column: 21, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2940, column: 21)
!8795 = !DILocation(line: 2940, column: 26, scope: !8794)
!8796 = !DILocation(line: 2940, column: 32, scope: !8794)
!8797 = !DILocation(line: 2940, column: 36, scope: !8794)
!8798 = !DILocation(line: 2940, column: 21, scope: !8740)
!8799 = !DILocation(line: 2941, column: 21, scope: !8794)
!8800 = !DILocation(line: 2941, column: 25, scope: !8794)
!8801 = !DILocation(line: 2941, column: 35, scope: !8794)
!8802 = !DILocation(line: 2941, column: 40, scope: !8794)
!8803 = !DILocation(line: 2941, column: 46, scope: !8794)
!8804 = !DILocation(line: 2941, column: 55, scope: !8794)
!8805 = !DILocation(line: 2941, column: 60, scope: !8794)
!8806 = !DILocation(line: 2941, column: 66, scope: !8794)
!8807 = !DILocation(line: 2941, column: 72, scope: !8794)
!8808 = !DILocation(line: 2941, column: 77, scope: !8794)
!8809 = !DILocation(line: 2941, column: 83, scope: !8794)
!8810 = !DILocation(line: 2942, column: 21, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2942, column: 21)
!8812 = !DILocation(line: 2942, column: 26, scope: !8811)
!8813 = !DILocation(line: 2942, column: 32, scope: !8811)
!8814 = !DILocation(line: 2942, column: 36, scope: !8811)
!8815 = !DILocation(line: 2942, column: 21, scope: !8740)
!8816 = !DILocation(line: 2943, column: 21, scope: !8811)
!8817 = !DILocation(line: 2943, column: 25, scope: !8811)
!8818 = !DILocation(line: 2943, column: 35, scope: !8811)
!8819 = !DILocation(line: 2943, column: 40, scope: !8811)
!8820 = !DILocation(line: 2943, column: 46, scope: !8811)
!8821 = !DILocation(line: 2943, column: 55, scope: !8811)
!8822 = !DILocation(line: 2943, column: 60, scope: !8811)
!8823 = !DILocation(line: 2943, column: 66, scope: !8811)
!8824 = !DILocation(line: 2943, column: 72, scope: !8811)
!8825 = !DILocation(line: 2943, column: 77, scope: !8811)
!8826 = !DILocation(line: 2943, column: 83, scope: !8811)
!8827 = !DILocation(line: 2944, column: 21, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2944, column: 21)
!8829 = !DILocation(line: 2944, column: 26, scope: !8828)
!8830 = !DILocation(line: 2944, column: 21, scope: !8740)
!8831 = !DILocation(line: 2945, column: 44, scope: !8828)
!8832 = !DILocation(line: 2945, column: 48, scope: !8828)
!8833 = !DILocation(line: 2945, column: 53, scope: !8828)
!8834 = !DILocation(line: 2945, column: 59, scope: !8828)
!8835 = !DILocation(line: 2945, column: 21, scope: !8828)
!8836 = !DILocation(line: 2946, column: 21, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2946, column: 21)
!8838 = !DILocation(line: 2946, column: 26, scope: !8837)
!8839 = !DILocation(line: 2946, column: 38, scope: !8837)
!8840 = !DILocation(line: 2946, column: 41, scope: !8841)
!8841 = !DILexicalBlockFile(scope: !8837, file: !1803, discriminator: 1)
!8842 = !DILocation(line: 2946, column: 46, scope: !8841)
!8843 = !DILocation(line: 2946, column: 51, scope: !8841)
!8844 = !DILocation(line: 2946, column: 66, scope: !8841)
!8845 = !DILocation(line: 2946, column: 21, scope: !8841)
!8846 = !DILocation(line: 2947, column: 21, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8837, file: !1803, line: 2946, column: 82)
!8848 = !DILocation(line: 2947, column: 38, scope: !8847)
!8849 = !DILocation(line: 2947, column: 43, scope: !8847)
!8850 = !DILocation(line: 2947, column: 48, scope: !8847)
!8851 = !DILocation(line: 2948, column: 25, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8847, file: !1803, line: 2948, column: 25)
!8853 = !DILocation(line: 2948, column: 29, scope: !8852)
!8854 = !DILocation(line: 2948, column: 35, scope: !8852)
!8855 = !DILocation(line: 2948, column: 40, scope: !8852)
!8856 = !DILocation(line: 2948, column: 52, scope: !8852)
!8857 = !DILocation(line: 2948, column: 25, scope: !8847)
!8858 = !DILocation(line: 2949, column: 25, scope: !8852)
!8859 = !DILocation(line: 2949, column: 29, scope: !8852)
!8860 = !DILocation(line: 2949, column: 40, scope: !8852)
!8861 = !DILocation(line: 2949, column: 45, scope: !8852)
!8862 = !DILocation(line: 2949, column: 50, scope: !8852)
!8863 = !DILocation(line: 2950, column: 25, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8847, file: !1803, line: 2950, column: 25)
!8865 = !DILocation(line: 2950, column: 30, scope: !8864)
!8866 = !DILocation(line: 2950, column: 25, scope: !8847)
!8867 = !DILocation(line: 2951, column: 25, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !1803, line: 2950, column: 43)
!8869 = !DILocation(line: 2951, column: 42, scope: !8868)
!8870 = !DILocation(line: 2951, column: 47, scope: !8868)
!8871 = !DILocation(line: 2951, column: 52, scope: !8868)
!8872 = !DILocation(line: 2952, column: 29, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8868, file: !1803, line: 2952, column: 29)
!8874 = !DILocation(line: 2952, column: 33, scope: !8873)
!8875 = !DILocation(line: 2952, column: 39, scope: !8873)
!8876 = !DILocation(line: 2952, column: 44, scope: !8873)
!8877 = !DILocation(line: 2952, column: 56, scope: !8873)
!8878 = !DILocation(line: 2952, column: 29, scope: !8868)
!8879 = !DILocation(line: 2953, column: 29, scope: !8873)
!8880 = !DILocation(line: 2953, column: 33, scope: !8873)
!8881 = !DILocation(line: 2953, column: 44, scope: !8873)
!8882 = !DILocation(line: 2953, column: 49, scope: !8873)
!8883 = !DILocation(line: 2953, column: 54, scope: !8873)
!8884 = !DILocation(line: 2954, column: 21, scope: !8868)
!8885 = !DILocation(line: 2955, column: 25, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8847, file: !1803, line: 2955, column: 25)
!8887 = !DILocation(line: 2955, column: 29, scope: !8886)
!8888 = !DILocation(line: 2955, column: 35, scope: !8886)
!8889 = !DILocation(line: 2955, column: 40, scope: !8886)
!8890 = !DILocation(line: 2955, column: 44, scope: !8886)
!8891 = !DILocation(line: 2955, column: 25, scope: !8847)
!8892 = !DILocation(line: 2956, column: 38, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8886, file: !1803, line: 2955, column: 49)
!8894 = !DILocation(line: 2956, column: 43, scope: !8893)
!8895 = !DILocation(line: 2956, column: 48, scope: !8893)
!8896 = !DILocation(line: 2956, column: 53, scope: !8893)
!8897 = !DILocation(line: 2956, column: 59, scope: !8893)
!8898 = !DILocation(line: 2956, column: 64, scope: !8893)
!8899 = !DILocation(line: 2956, column: 70, scope: !8893)
!8900 = !DILocation(line: 2956, column: 75, scope: !8893)
!8901 = !DILocation(line: 2956, column: 80, scope: !8893)
!8902 = !DILocation(line: 2956, column: 86, scope: !8893)
!8903 = !DILocation(line: 2956, column: 25, scope: !8893)
!8904 = !DILocation(line: 2957, column: 21, scope: !8893)
!8905 = !DILocation(line: 2958, column: 17, scope: !8847)
!8906 = !DILocation(line: 2959, column: 21, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8740, file: !1803, line: 2959, column: 21)
!8908 = !DILocation(line: 2959, column: 26, scope: !8907)
!8909 = !DILocation(line: 2959, column: 21, scope: !8740)
!8910 = !DILocation(line: 2960, column: 44, scope: !8907)
!8911 = !DILocation(line: 2960, column: 48, scope: !8907)
!8912 = !DILocation(line: 2960, column: 53, scope: !8907)
!8913 = !DILocation(line: 2960, column: 59, scope: !8907)
!8914 = !DILocation(line: 2960, column: 21, scope: !8907)
!8915 = !DILocation(line: 2973, column: 17, scope: !8740)
!8916 = !DILocation(line: 2973, column: 22, scope: !8740)
!8917 = !DILocation(line: 2973, column: 30, scope: !8740)
!8918 = !DILocation(line: 2974, column: 13, scope: !8740)
!8919 = !DILocation(line: 2974, column: 24, scope: !8920)
!8920 = !DILexicalBlockFile(scope: !8921, file: !1803, discriminator: 1)
!8921 = distinct !DILexicalBlock(scope: !8732, file: !1803, line: 2974, column: 24)
!8922 = !DILocation(line: 2975, column: 24, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8921, file: !1803, line: 2974, column: 29)
!8924 = !DILocation(line: 2975, column: 28, scope: !8923)
!8925 = !DILocation(line: 2975, column: 74, scope: !8923)
!8926 = !DILocation(line: 2975, column: 80, scope: !8923)
!8927 = !DILocation(line: 2975, column: 17, scope: !8923)
!8928 = !DILocation(line: 2976, column: 13, scope: !8923)
!8929 = !DILocation(line: 2977, column: 9, scope: !8725)
!8930 = !DILocation(line: 2927, column: 30, scope: !8931)
!8931 = !DILexicalBlockFile(scope: !8721, file: !1803, discriminator: 2)
!8932 = !DILocation(line: 2927, column: 9, scope: !8931)
!8933 = distinct !{!8933, !8934}
!8934 = !DILocation(line: 2927, column: 9, scope: !8717)
!8935 = !DILocation(line: 2978, column: 5, scope: !8717)
!8936 = !DILocation(line: 2926, column: 35, scope: !8937)
!8937 = !DILexicalBlockFile(scope: !8712, file: !1803, discriminator: 2)
!8938 = !DILocation(line: 2926, column: 5, scope: !8937)
!8939 = distinct !{!8939, !8940}
!8940 = !DILocation(line: 2926, column: 5, scope: !8672)
!8941 = !DILocation(line: 2979, column: 1, scope: !8672)
!8942 = distinct !DISubprogram(name: "push_output_configuration", scope: !1803, file: !1803, line: 409, type: !8943, isLocal: true, isDefinition: true, scopeLine: 409, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!1012, !2065}
!8945 = !DILocalVariable(name: "ac", arg: 1, scope: !8942, file: !1803, line: 409, type: !2065)
!8946 = !DILocation(line: 409, column: 50, scope: !8942)
!8947 = !DILocalVariable(name: "pushed", scope: !8942, file: !1803, line: 410, type: !1012)
!8948 = !DILocation(line: 410, column: 9, scope: !8942)
!8949 = !DILocation(line: 412, column: 9, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8942, file: !1803, line: 412, column: 9)
!8951 = !DILocation(line: 412, column: 13, scope: !8950)
!8952 = !DILocation(line: 412, column: 19, scope: !8950)
!8953 = !DILocation(line: 412, column: 26, scope: !8950)
!8954 = !DILocation(line: 412, column: 39, scope: !8950)
!8955 = !DILocation(line: 412, column: 42, scope: !8956)
!8956 = !DILexicalBlockFile(scope: !8950, file: !1803, discriminator: 1)
!8957 = !DILocation(line: 412, column: 46, scope: !8956)
!8958 = !DILocation(line: 412, column: 52, scope: !8956)
!8959 = !DILocation(line: 412, column: 59, scope: !8956)
!8960 = !DILocation(line: 412, column: 9, scope: !8956)
!8961 = !DILocation(line: 413, column: 9, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8950, file: !1803, line: 412, column: 71)
!8963 = !DILocation(line: 413, column: 13, scope: !8962)
!8964 = !DILocation(line: 413, column: 21, scope: !8962)
!8965 = !DILocation(line: 413, column: 25, scope: !8962)
!8966 = !DILocation(line: 414, column: 16, scope: !8962)
!8967 = !DILocation(line: 415, column: 5, scope: !8962)
!8968 = !DILocation(line: 416, column: 5, scope: !8942)
!8969 = !DILocation(line: 416, column: 9, scope: !8942)
!8970 = !DILocation(line: 416, column: 15, scope: !8942)
!8971 = !DILocation(line: 416, column: 22, scope: !8942)
!8972 = !DILocation(line: 417, column: 12, scope: !8942)
!8973 = !DILocation(line: 417, column: 5, scope: !8942)
!8974 = distinct !DISubprogram(name: "decode_ics_info", scope: !1803, file: !1803, line: 1301, type: !8975, isLocal: true, isDefinition: true, scopeLine: 1303, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!8975 = !DISubroutineType(types: !8976)
!8976 = !{!1012, !2065, !2649, !2043}
!8977 = !DILocalVariable(name: "ac", arg: 1, scope: !8974, file: !1803, line: 1301, type: !2065)
!8978 = !DILocation(line: 1301, column: 40, scope: !8974)
!8979 = !DILocalVariable(name: "ics", arg: 2, scope: !8974, file: !1803, line: 1301, type: !2649)
!8980 = !DILocation(line: 1301, column: 69, scope: !8974)
!8981 = !DILocalVariable(name: "gb", arg: 3, scope: !8974, file: !1803, line: 1302, type: !2043)
!8982 = !DILocation(line: 1302, column: 43, scope: !8974)
!8983 = !DILocalVariable(name: "m4ac", scope: !8974, file: !1803, line: 1304, type: !7117)
!8984 = !DILocation(line: 1304, column: 35, scope: !8974)
!8985 = !DILocation(line: 1304, column: 43, scope: !8974)
!8986 = !DILocation(line: 1304, column: 47, scope: !8974)
!8987 = !DILocation(line: 1304, column: 53, scope: !8974)
!8988 = !DILocalVariable(name: "aot", scope: !8974, file: !1803, line: 1305, type: !1165)
!8989 = !DILocation(line: 1305, column: 15, scope: !8974)
!8990 = !DILocation(line: 1305, column: 21, scope: !8974)
!8991 = !DILocation(line: 1305, column: 27, scope: !8974)
!8992 = !DILocalVariable(name: "sampling_index", scope: !8974, file: !1803, line: 1306, type: !1165)
!8993 = !DILocation(line: 1306, column: 15, scope: !8974)
!8994 = !DILocation(line: 1306, column: 32, scope: !8974)
!8995 = !DILocation(line: 1306, column: 38, scope: !8974)
!8996 = !DILocalVariable(name: "ret_fail", scope: !8974, file: !1803, line: 1307, type: !1012)
!8997 = !DILocation(line: 1307, column: 9, scope: !8974)
!8998 = !DILocation(line: 1309, column: 9, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8974, file: !1803, line: 1309, column: 9)
!9000 = !DILocation(line: 1309, column: 13, scope: !8999)
!9001 = !DILocation(line: 1309, column: 9, scope: !8974)
!9002 = !DILocation(line: 1310, column: 23, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !1803, line: 1310, column: 13)
!9004 = distinct !DILexicalBlock(scope: !8999, file: !1803, line: 1309, column: 32)
!9005 = !DILocation(line: 1310, column: 13, scope: !9003)
!9006 = !DILocation(line: 1310, column: 13, scope: !9004)
!9007 = !DILocation(line: 1311, column: 20, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9003, file: !1803, line: 1310, column: 28)
!9009 = !DILocation(line: 1311, column: 24, scope: !9008)
!9010 = !DILocation(line: 1311, column: 13, scope: !9008)
!9011 = !DILocation(line: 1312, column: 17, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9008, file: !1803, line: 1312, column: 17)
!9013 = !DILocation(line: 1312, column: 21, scope: !9012)
!9014 = !DILocation(line: 1312, column: 28, scope: !9012)
!9015 = !DILocation(line: 1312, column: 44, scope: !9012)
!9016 = !DILocation(line: 1312, column: 17, scope: !9008)
!9017 = !DILocation(line: 1313, column: 17, scope: !9012)
!9018 = !DILocation(line: 1314, column: 9, scope: !9008)
!9019 = !DILocation(line: 1315, column: 35, scope: !9004)
!9020 = !DILocation(line: 1315, column: 40, scope: !9004)
!9021 = !DILocation(line: 1315, column: 9, scope: !9004)
!9022 = !DILocation(line: 1315, column: 14, scope: !9004)
!9023 = !DILocation(line: 1315, column: 33, scope: !9004)
!9024 = !DILocation(line: 1316, column: 44, scope: !9004)
!9025 = !DILocation(line: 1316, column: 35, scope: !9004)
!9026 = !DILocation(line: 1316, column: 9, scope: !9004)
!9027 = !DILocation(line: 1316, column: 14, scope: !9004)
!9028 = !DILocation(line: 1316, column: 33, scope: !9004)
!9029 = !DILocation(line: 1317, column: 13, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9004, file: !1803, line: 1317, column: 13)
!9031 = !DILocation(line: 1317, column: 17, scope: !9030)
!9032 = !DILocation(line: 1317, column: 34, scope: !9030)
!9033 = !DILocation(line: 1318, column: 13, scope: !9030)
!9034 = !DILocation(line: 1318, column: 18, scope: !9030)
!9035 = !DILocation(line: 1318, column: 37, scope: !9030)
!9036 = !DILocation(line: 1317, column: 13, scope: !9037)
!9037 = !DILexicalBlockFile(scope: !9004, file: !1803, discriminator: 1)
!9038 = !DILocation(line: 1319, column: 20, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9030, file: !1803, line: 1318, column: 60)
!9040 = !DILocation(line: 1319, column: 24, scope: !9039)
!9041 = !DILocation(line: 1321, column: 51, scope: !9039)
!9042 = !DILocation(line: 1321, column: 56, scope: !9039)
!9043 = !DILocation(line: 1319, column: 13, scope: !9039)
!9044 = !DILocation(line: 1322, column: 13, scope: !9039)
!9045 = !DILocation(line: 1322, column: 18, scope: !9039)
!9046 = !DILocation(line: 1322, column: 37, scope: !9039)
!9047 = !DILocation(line: 1323, column: 13, scope: !9039)
!9048 = !DILocation(line: 1325, column: 33, scope: !9004)
!9049 = !DILocation(line: 1325, column: 38, scope: !9004)
!9050 = !DILocation(line: 1325, column: 9, scope: !9004)
!9051 = !DILocation(line: 1325, column: 14, scope: !9004)
!9052 = !DILocation(line: 1325, column: 31, scope: !9004)
!9053 = !DILocation(line: 1326, column: 43, scope: !9004)
!9054 = !DILocation(line: 1326, column: 33, scope: !9004)
!9055 = !DILocation(line: 1326, column: 9, scope: !9004)
!9056 = !DILocation(line: 1326, column: 14, scope: !9004)
!9057 = !DILocation(line: 1326, column: 31, scope: !9004)
!9058 = !DILocation(line: 1327, column: 5, scope: !9004)
!9059 = !DILocation(line: 1328, column: 5, scope: !8974)
!9060 = !DILocation(line: 1328, column: 10, scope: !8974)
!9061 = !DILocation(line: 1328, column: 28, scope: !8974)
!9062 = !DILocation(line: 1329, column: 5, scope: !8974)
!9063 = !DILocation(line: 1329, column: 10, scope: !8974)
!9064 = !DILocation(line: 1329, column: 23, scope: !8974)
!9065 = !DILocation(line: 1330, column: 9, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !8974, file: !1803, line: 1330, column: 9)
!9067 = !DILocation(line: 1330, column: 14, scope: !9066)
!9068 = !DILocation(line: 1330, column: 33, scope: !9066)
!9069 = !DILocation(line: 1330, column: 9, scope: !8974)
!9070 = !DILocalVariable(name: "i", scope: !9071, file: !1803, line: 1331, type: !1012)
!9071 = distinct !DILexicalBlock(scope: !9066, file: !1803, line: 1330, column: 58)
!9072 = !DILocation(line: 1331, column: 13, scope: !9071)
!9073 = !DILocation(line: 1332, column: 33, scope: !9071)
!9074 = !DILocation(line: 1332, column: 24, scope: !9071)
!9075 = !DILocation(line: 1332, column: 9, scope: !9071)
!9076 = !DILocation(line: 1332, column: 14, scope: !9071)
!9077 = !DILocation(line: 1332, column: 22, scope: !9071)
!9078 = !DILocation(line: 1333, column: 16, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9071, file: !1803, line: 1333, column: 9)
!9080 = !DILocation(line: 1333, column: 14, scope: !9079)
!9081 = !DILocation(line: 1333, column: 21, scope: !9082)
!9082 = !DILexicalBlockFile(scope: !9083, file: !1803, discriminator: 1)
!9083 = distinct !DILexicalBlock(scope: !9079, file: !1803, line: 1333, column: 9)
!9084 = !DILocation(line: 1333, column: 23, scope: !9082)
!9085 = !DILocation(line: 1333, column: 9, scope: !9082)
!9086 = !DILocation(line: 1334, column: 27, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !1803, line: 1334, column: 17)
!9088 = distinct !DILexicalBlock(scope: !9083, file: !1803, line: 1333, column: 33)
!9089 = !DILocation(line: 1334, column: 17, scope: !9087)
!9090 = !DILocation(line: 1334, column: 17, scope: !9088)
!9091 = !DILocation(line: 1335, column: 32, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9087, file: !1803, line: 1334, column: 32)
!9093 = !DILocation(line: 1335, column: 37, scope: !9092)
!9094 = !DILocation(line: 1335, column: 55, scope: !9092)
!9095 = !DILocation(line: 1335, column: 17, scope: !9092)
!9096 = !DILocation(line: 1335, column: 22, scope: !9092)
!9097 = !DILocation(line: 1335, column: 59, scope: !9092)
!9098 = !DILocation(line: 1336, column: 13, scope: !9092)
!9099 = !DILocation(line: 1337, column: 17, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9087, file: !1803, line: 1336, column: 20)
!9101 = !DILocation(line: 1337, column: 22, scope: !9100)
!9102 = !DILocation(line: 1337, column: 39, scope: !9100)
!9103 = !DILocation(line: 1338, column: 32, scope: !9100)
!9104 = !DILocation(line: 1338, column: 37, scope: !9100)
!9105 = !DILocation(line: 1338, column: 55, scope: !9100)
!9106 = !DILocation(line: 1338, column: 17, scope: !9100)
!9107 = !DILocation(line: 1338, column: 22, scope: !9100)
!9108 = !DILocation(line: 1338, column: 60, scope: !9100)
!9109 = !DILocation(line: 1340, column: 9, scope: !9088)
!9110 = !DILocation(line: 1333, column: 29, scope: !9111)
!9111 = !DILexicalBlockFile(scope: !9083, file: !1803, discriminator: 2)
!9112 = !DILocation(line: 1333, column: 9, scope: !9111)
!9113 = distinct !{!9113, !9114}
!9114 = !DILocation(line: 1333, column: 9, scope: !9071)
!9115 = !DILocation(line: 1341, column: 9, scope: !9071)
!9116 = !DILocation(line: 1341, column: 14, scope: !9071)
!9117 = !DILocation(line: 1341, column: 26, scope: !9071)
!9118 = !DILocation(line: 1342, column: 13, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9071, file: !1803, line: 1342, column: 13)
!9120 = !DILocation(line: 1342, column: 19, scope: !9119)
!9121 = !DILocation(line: 1342, column: 13, scope: !9071)
!9122 = !DILocation(line: 1343, column: 49, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !1803, line: 1342, column: 39)
!9124 = !DILocation(line: 1343, column: 31, scope: !9123)
!9125 = !DILocation(line: 1343, column: 13, scope: !9123)
!9126 = !DILocation(line: 1343, column: 18, scope: !9123)
!9127 = !DILocation(line: 1343, column: 29, scope: !9123)
!9128 = !DILocation(line: 1344, column: 47, scope: !9123)
!9129 = !DILocation(line: 1344, column: 28, scope: !9123)
!9130 = !DILocation(line: 1344, column: 13, scope: !9123)
!9131 = !DILocation(line: 1344, column: 18, scope: !9123)
!9132 = !DILocation(line: 1344, column: 26, scope: !9123)
!9133 = !DILocation(line: 1345, column: 9, scope: !9123)
!9134 = !DILocation(line: 1346, column: 49, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9119, file: !1803, line: 1345, column: 16)
!9136 = !DILocation(line: 1346, column: 31, scope: !9135)
!9137 = !DILocation(line: 1346, column: 13, scope: !9135)
!9138 = !DILocation(line: 1346, column: 18, scope: !9135)
!9139 = !DILocation(line: 1346, column: 29, scope: !9135)
!9140 = !DILocation(line: 1347, column: 47, scope: !9135)
!9141 = !DILocation(line: 1347, column: 28, scope: !9135)
!9142 = !DILocation(line: 1347, column: 13, scope: !9135)
!9143 = !DILocation(line: 1347, column: 18, scope: !9135)
!9144 = !DILocation(line: 1347, column: 26, scope: !9135)
!9145 = !DILocation(line: 1349, column: 51, scope: !9071)
!9146 = !DILocation(line: 1349, column: 30, scope: !9071)
!9147 = !DILocation(line: 1349, column: 9, scope: !9071)
!9148 = !DILocation(line: 1349, column: 14, scope: !9071)
!9149 = !DILocation(line: 1349, column: 28, scope: !9071)
!9150 = !DILocation(line: 1350, column: 9, scope: !9071)
!9151 = !DILocation(line: 1350, column: 14, scope: !9071)
!9152 = !DILocation(line: 1350, column: 32, scope: !9071)
!9153 = !DILocation(line: 1351, column: 5, scope: !9071)
!9154 = !DILocation(line: 1352, column: 33, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9066, file: !1803, line: 1351, column: 12)
!9156 = !DILocation(line: 1352, column: 24, scope: !9155)
!9157 = !DILocation(line: 1352, column: 9, scope: !9155)
!9158 = !DILocation(line: 1352, column: 14, scope: !9155)
!9159 = !DILocation(line: 1352, column: 22, scope: !9155)
!9160 = !DILocation(line: 1353, column: 9, scope: !9155)
!9161 = !DILocation(line: 1353, column: 14, scope: !9155)
!9162 = !DILocation(line: 1353, column: 26, scope: !9155)
!9163 = !DILocation(line: 1354, column: 13, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9155, file: !1803, line: 1354, column: 13)
!9165 = !DILocation(line: 1354, column: 17, scope: !9164)
!9166 = !DILocation(line: 1354, column: 34, scope: !9164)
!9167 = !DILocation(line: 1354, column: 37, scope: !9168)
!9168 = !DILexicalBlockFile(scope: !9164, file: !1803, discriminator: 1)
!9169 = !DILocation(line: 1354, column: 41, scope: !9168)
!9170 = !DILocation(line: 1354, column: 13, scope: !9168)
!9171 = !DILocation(line: 1355, column: 17, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !1803, line: 1355, column: 17)
!9173 = distinct !DILexicalBlock(scope: !9164, file: !1803, line: 1354, column: 60)
!9174 = !DILocation(line: 1355, column: 23, scope: !9172)
!9175 = !DILocation(line: 1355, column: 17, scope: !9173)
!9176 = !DILocation(line: 1356, column: 53, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !1803, line: 1355, column: 43)
!9178 = !DILocation(line: 1356, column: 35, scope: !9177)
!9179 = !DILocation(line: 1356, column: 17, scope: !9177)
!9180 = !DILocation(line: 1356, column: 22, scope: !9177)
!9181 = !DILocation(line: 1356, column: 33, scope: !9177)
!9182 = !DILocation(line: 1357, column: 51, scope: !9177)
!9183 = !DILocation(line: 1357, column: 32, scope: !9177)
!9184 = !DILocation(line: 1357, column: 17, scope: !9177)
!9185 = !DILocation(line: 1357, column: 22, scope: !9177)
!9186 = !DILocation(line: 1357, column: 30, scope: !9177)
!9187 = !DILocation(line: 1358, column: 59, scope: !9177)
!9188 = !DILocation(line: 1358, column: 38, scope: !9177)
!9189 = !DILocation(line: 1358, column: 17, scope: !9177)
!9190 = !DILocation(line: 1358, column: 22, scope: !9177)
!9191 = !DILocation(line: 1358, column: 36, scope: !9177)
!9192 = !DILocation(line: 1359, column: 13, scope: !9177)
!9193 = !DILocation(line: 1360, column: 53, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9172, file: !1803, line: 1359, column: 20)
!9195 = !DILocation(line: 1360, column: 35, scope: !9194)
!9196 = !DILocation(line: 1360, column: 17, scope: !9194)
!9197 = !DILocation(line: 1360, column: 22, scope: !9194)
!9198 = !DILocation(line: 1360, column: 33, scope: !9194)
!9199 = !DILocation(line: 1361, column: 51, scope: !9194)
!9200 = !DILocation(line: 1361, column: 32, scope: !9194)
!9201 = !DILocation(line: 1361, column: 17, scope: !9194)
!9202 = !DILocation(line: 1361, column: 22, scope: !9194)
!9203 = !DILocation(line: 1361, column: 30, scope: !9194)
!9204 = !DILocation(line: 1362, column: 59, scope: !9194)
!9205 = !DILocation(line: 1362, column: 38, scope: !9194)
!9206 = !DILocation(line: 1362, column: 17, scope: !9194)
!9207 = !DILocation(line: 1362, column: 22, scope: !9194)
!9208 = !DILocation(line: 1362, column: 36, scope: !9194)
!9209 = !DILocation(line: 1364, column: 18, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9173, file: !1803, line: 1364, column: 17)
!9211 = !DILocation(line: 1364, column: 23, scope: !9210)
!9212 = !DILocation(line: 1364, column: 31, scope: !9210)
!9213 = !DILocation(line: 1364, column: 35, scope: !9214)
!9214 = !DILexicalBlockFile(scope: !9210, file: !1803, discriminator: 1)
!9215 = !DILocation(line: 1364, column: 40, scope: !9214)
!9216 = !DILocation(line: 1364, column: 17, scope: !9214)
!9217 = !DILocation(line: 1365, column: 26, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9210, file: !1803, line: 1364, column: 52)
!9219 = !DILocation(line: 1366, column: 17, scope: !9218)
!9220 = !DILocation(line: 1368, column: 9, scope: !9173)
!9221 = !DILocation(line: 1369, column: 17, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !1803, line: 1369, column: 17)
!9223 = distinct !DILexicalBlock(scope: !9164, file: !1803, line: 1368, column: 16)
!9224 = !DILocation(line: 1369, column: 23, scope: !9222)
!9225 = !DILocation(line: 1369, column: 17, scope: !9223)
!9226 = !DILocation(line: 1370, column: 51, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9222, file: !1803, line: 1369, column: 43)
!9228 = !DILocation(line: 1370, column: 32, scope: !9227)
!9229 = !DILocation(line: 1370, column: 17, scope: !9227)
!9230 = !DILocation(line: 1370, column: 22, scope: !9227)
!9231 = !DILocation(line: 1370, column: 30, scope: !9227)
!9232 = !DILocation(line: 1371, column: 53, scope: !9227)
!9233 = !DILocation(line: 1371, column: 35, scope: !9227)
!9234 = !DILocation(line: 1371, column: 17, scope: !9227)
!9235 = !DILocation(line: 1371, column: 22, scope: !9227)
!9236 = !DILocation(line: 1371, column: 33, scope: !9227)
!9237 = !DILocation(line: 1372, column: 13, scope: !9227)
!9238 = !DILocation(line: 1373, column: 52, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9222, file: !1803, line: 1372, column: 20)
!9240 = !DILocation(line: 1373, column: 32, scope: !9239)
!9241 = !DILocation(line: 1373, column: 17, scope: !9239)
!9242 = !DILocation(line: 1373, column: 22, scope: !9239)
!9243 = !DILocation(line: 1373, column: 30, scope: !9239)
!9244 = !DILocation(line: 1374, column: 54, scope: !9239)
!9245 = !DILocation(line: 1374, column: 35, scope: !9239)
!9246 = !DILocation(line: 1374, column: 17, scope: !9239)
!9247 = !DILocation(line: 1374, column: 22, scope: !9239)
!9248 = !DILocation(line: 1374, column: 33, scope: !9239)
!9249 = !DILocation(line: 1376, column: 56, scope: !9223)
!9250 = !DILocation(line: 1376, column: 34, scope: !9223)
!9251 = !DILocation(line: 1376, column: 13, scope: !9223)
!9252 = !DILocation(line: 1376, column: 18, scope: !9223)
!9253 = !DILocation(line: 1376, column: 32, scope: !9223)
!9254 = !DILocation(line: 1378, column: 13, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9155, file: !1803, line: 1378, column: 13)
!9256 = !DILocation(line: 1378, column: 17, scope: !9255)
!9257 = !DILocation(line: 1378, column: 13, scope: !9155)
!9258 = !DILocation(line: 1379, column: 48, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !1803, line: 1378, column: 36)
!9260 = !DILocation(line: 1379, column: 38, scope: !9259)
!9261 = !DILocation(line: 1379, column: 13, scope: !9259)
!9262 = !DILocation(line: 1379, column: 18, scope: !9259)
!9263 = !DILocation(line: 1379, column: 36, scope: !9259)
!9264 = !DILocation(line: 1380, column: 13, scope: !9259)
!9265 = !DILocation(line: 1380, column: 18, scope: !9259)
!9266 = !DILocation(line: 1380, column: 40, scope: !9259)
!9267 = !DILocation(line: 1381, column: 9, scope: !9259)
!9268 = !DILocation(line: 1382, column: 13, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9155, file: !1803, line: 1382, column: 13)
!9270 = !DILocation(line: 1382, column: 18, scope: !9269)
!9271 = !DILocation(line: 1382, column: 13, scope: !9155)
!9272 = !DILocation(line: 1383, column: 17, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !1803, line: 1383, column: 17)
!9274 = distinct !DILexicalBlock(scope: !9269, file: !1803, line: 1382, column: 37)
!9275 = !DILocation(line: 1383, column: 21, scope: !9273)
!9276 = !DILocation(line: 1383, column: 17, scope: !9274)
!9277 = !DILocation(line: 1384, column: 39, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9279, file: !1803, line: 1384, column: 21)
!9279 = distinct !DILexicalBlock(scope: !9273, file: !1803, line: 1383, column: 38)
!9280 = !DILocation(line: 1384, column: 43, scope: !9278)
!9281 = !DILocation(line: 1384, column: 48, scope: !9278)
!9282 = !DILocation(line: 1384, column: 21, scope: !9278)
!9283 = !DILocation(line: 1384, column: 21, scope: !9279)
!9284 = !DILocation(line: 1385, column: 21, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9278, file: !1803, line: 1384, column: 53)
!9286 = !DILocation(line: 1387, column: 13, scope: !9279)
!9287 = !DILocation(line: 1387, column: 24, scope: !9288)
!9288 = !DILexicalBlockFile(scope: !9289, file: !1803, discriminator: 1)
!9289 = distinct !DILexicalBlock(scope: !9273, file: !1803, line: 1387, column: 24)
!9290 = !DILocation(line: 1387, column: 28, scope: !9288)
!9291 = !DILocation(line: 1387, column: 42, scope: !9288)
!9292 = !DILocation(line: 1388, column: 24, scope: !9289)
!9293 = !DILocation(line: 1388, column: 28, scope: !9289)
!9294 = !DILocation(line: 1387, column: 24, scope: !9295)
!9295 = !DILexicalBlockFile(scope: !9273, file: !1803, discriminator: 2)
!9296 = !DILocation(line: 1389, column: 24, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9289, file: !1803, line: 1388, column: 46)
!9298 = !DILocation(line: 1389, column: 28, scope: !9297)
!9299 = !DILocation(line: 1389, column: 17, scope: !9297)
!9300 = !DILocation(line: 1391, column: 17, scope: !9297)
!9301 = !DILocation(line: 1393, column: 21, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9303, file: !1803, line: 1393, column: 21)
!9303 = distinct !DILexicalBlock(scope: !9289, file: !1803, line: 1392, column: 20)
!9304 = !DILocation(line: 1393, column: 25, scope: !9302)
!9305 = !DILocation(line: 1393, column: 21, scope: !9303)
!9306 = !DILocation(line: 1394, column: 28, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9302, file: !1803, line: 1393, column: 43)
!9308 = !DILocation(line: 1394, column: 32, scope: !9307)
!9309 = !DILocation(line: 1394, column: 21, scope: !9307)
!9310 = !DILocation(line: 1396, column: 30, scope: !9307)
!9311 = !DILocation(line: 1397, column: 21, scope: !9307)
!9312 = !DILocation(line: 1399, column: 50, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9303, file: !1803, line: 1399, column: 21)
!9314 = !DILocation(line: 1399, column: 41, scope: !9313)
!9315 = !DILocation(line: 1399, column: 22, scope: !9313)
!9316 = !DILocation(line: 1399, column: 27, scope: !9313)
!9317 = !DILocation(line: 1399, column: 31, scope: !9313)
!9318 = !DILocation(line: 1399, column: 39, scope: !9313)
!9319 = !DILocation(line: 1399, column: 21, scope: !9303)
!9320 = !DILocation(line: 1400, column: 33, scope: !9313)
!9321 = !DILocation(line: 1400, column: 38, scope: !9313)
!9322 = !DILocation(line: 1400, column: 43, scope: !9313)
!9323 = !DILocation(line: 1400, column: 47, scope: !9313)
!9324 = !DILocation(line: 1400, column: 52, scope: !9313)
!9325 = !DILocation(line: 1400, column: 21, scope: !9313)
!9326 = !DILocation(line: 1402, column: 9, scope: !9274)
!9327 = !DILocation(line: 1405, column: 9, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !8974, file: !1803, line: 1405, column: 9)
!9329 = !DILocation(line: 1405, column: 14, scope: !9328)
!9330 = !DILocation(line: 1405, column: 24, scope: !9328)
!9331 = !DILocation(line: 1405, column: 29, scope: !9328)
!9332 = !DILocation(line: 1405, column: 22, scope: !9328)
!9333 = !DILocation(line: 1405, column: 9, scope: !8974)
!9334 = !DILocation(line: 1406, column: 16, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9328, file: !1803, line: 1405, column: 38)
!9336 = !DILocation(line: 1406, column: 20, scope: !9335)
!9337 = !DILocation(line: 1409, column: 16, scope: !9335)
!9338 = !DILocation(line: 1409, column: 21, scope: !9335)
!9339 = !DILocation(line: 1409, column: 30, scope: !9335)
!9340 = !DILocation(line: 1409, column: 35, scope: !9335)
!9341 = !DILocation(line: 1406, column: 9, scope: !9335)
!9342 = !DILocation(line: 1410, column: 9, scope: !9335)
!9343 = !DILocation(line: 1413, column: 5, scope: !8974)
!9344 = !DILocation(line: 1415, column: 5, scope: !8974)
!9345 = !DILocation(line: 1415, column: 10, scope: !8974)
!9346 = !DILocation(line: 1415, column: 18, scope: !8974)
!9347 = !DILocation(line: 1416, column: 12, scope: !8974)
!9348 = !DILocation(line: 1416, column: 5, scope: !8974)
!9349 = !DILocation(line: 1417, column: 1, scope: !8974)
!9350 = distinct !DISubprogram(name: "decode_band_types", scope: !1803, file: !1803, line: 1427, type: !9351, isLocal: true, isDefinition: true, scopeLine: 1430, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{!1012, !2065, !9353, !1457, !2043, !2649}
!9353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!9354 = !DILocalVariable(name: "ac", arg: 1, scope: !9350, file: !1803, line: 1427, type: !2065)
!9355 = !DILocation(line: 1427, column: 42, scope: !9350)
!9356 = !DILocalVariable(name: "band_type", arg: 2, scope: !9350, file: !1803, line: 1427, type: !9353)
!9357 = !DILocation(line: 1427, column: 60, scope: !9350)
!9358 = !DILocalVariable(name: "band_type_run_end", arg: 3, scope: !9350, file: !1803, line: 1428, type: !1457)
!9359 = !DILocation(line: 1428, column: 34, scope: !9350)
!9360 = !DILocalVariable(name: "gb", arg: 4, scope: !9350, file: !1803, line: 1428, type: !2043)
!9361 = !DILocation(line: 1428, column: 73, scope: !9350)
!9362 = !DILocalVariable(name: "ics", arg: 5, scope: !9350, file: !1803, line: 1429, type: !2649)
!9363 = !DILocation(line: 1429, column: 55, scope: !9350)
!9364 = !DILocalVariable(name: "g", scope: !9350, file: !1803, line: 1431, type: !1012)
!9365 = !DILocation(line: 1431, column: 9, scope: !9350)
!9366 = !DILocalVariable(name: "idx", scope: !9350, file: !1803, line: 1431, type: !1012)
!9367 = !DILocation(line: 1431, column: 12, scope: !9350)
!9368 = !DILocalVariable(name: "bits", scope: !9350, file: !1803, line: 1432, type: !1165)
!9369 = !DILocation(line: 1432, column: 15, scope: !9350)
!9370 = !DILocation(line: 1432, column: 23, scope: !9350)
!9371 = !DILocation(line: 1432, column: 28, scope: !9350)
!9372 = !DILocation(line: 1432, column: 47, scope: !9350)
!9373 = !DILocation(line: 1432, column: 22, scope: !9350)
!9374 = !DILocation(line: 1433, column: 12, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9350, file: !1803, line: 1433, column: 5)
!9376 = !DILocation(line: 1433, column: 10, scope: !9375)
!9377 = !DILocation(line: 1433, column: 17, scope: !9378)
!9378 = !DILexicalBlockFile(scope: !9379, file: !1803, discriminator: 1)
!9379 = distinct !DILexicalBlock(scope: !9375, file: !1803, line: 1433, column: 5)
!9380 = !DILocation(line: 1433, column: 21, scope: !9378)
!9381 = !DILocation(line: 1433, column: 26, scope: !9378)
!9382 = !DILocation(line: 1433, column: 19, scope: !9378)
!9383 = !DILocation(line: 1433, column: 5, scope: !9378)
!9384 = !DILocalVariable(name: "k", scope: !9385, file: !1803, line: 1434, type: !1012)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !1803, line: 1433, column: 50)
!9386 = !DILocation(line: 1434, column: 13, scope: !9385)
!9387 = !DILocation(line: 1435, column: 9, scope: !9385)
!9388 = !DILocation(line: 1435, column: 16, scope: !9389)
!9389 = !DILexicalBlockFile(scope: !9385, file: !1803, discriminator: 1)
!9390 = !DILocation(line: 1435, column: 20, scope: !9389)
!9391 = !DILocation(line: 1435, column: 25, scope: !9389)
!9392 = !DILocation(line: 1435, column: 18, scope: !9389)
!9393 = !DILocation(line: 1435, column: 9, scope: !9389)
!9394 = !DILocalVariable(name: "sect_end", scope: !9395, file: !1803, line: 1436, type: !1029)
!9395 = distinct !DILexicalBlock(scope: !9385, file: !1803, line: 1435, column: 34)
!9396 = !DILocation(line: 1436, column: 21, scope: !9395)
!9397 = !DILocation(line: 1436, column: 32, scope: !9395)
!9398 = !DILocalVariable(name: "sect_len_incr", scope: !9395, file: !1803, line: 1437, type: !1012)
!9399 = !DILocation(line: 1437, column: 17, scope: !9395)
!9400 = !DILocalVariable(name: "sect_band_type", scope: !9395, file: !1803, line: 1438, type: !1012)
!9401 = !DILocation(line: 1438, column: 17, scope: !9395)
!9402 = !DILocation(line: 1438, column: 43, scope: !9395)
!9403 = !DILocation(line: 1438, column: 34, scope: !9395)
!9404 = !DILocation(line: 1439, column: 17, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9395, file: !1803, line: 1439, column: 17)
!9406 = !DILocation(line: 1439, column: 32, scope: !9405)
!9407 = !DILocation(line: 1439, column: 17, scope: !9395)
!9408 = !DILocation(line: 1440, column: 24, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !1803, line: 1439, column: 39)
!9410 = !DILocation(line: 1440, column: 28, scope: !9409)
!9411 = !DILocation(line: 1440, column: 17, scope: !9409)
!9412 = !DILocation(line: 1441, column: 17, scope: !9409)
!9413 = !DILocation(line: 1443, column: 13, scope: !9395)
!9414 = distinct !{!9414, !9413}
!9415 = !DILocation(line: 1444, column: 42, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9395, file: !1803, line: 1443, column: 16)
!9417 = !DILocation(line: 1444, column: 46, scope: !9416)
!9418 = !DILocation(line: 1444, column: 33, scope: !9416)
!9419 = !DILocation(line: 1444, column: 31, scope: !9416)
!9420 = !DILocation(line: 1445, column: 29, scope: !9416)
!9421 = !DILocation(line: 1445, column: 26, scope: !9416)
!9422 = !DILocation(line: 1446, column: 35, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9416, file: !1803, line: 1446, column: 21)
!9424 = !DILocation(line: 1446, column: 21, scope: !9423)
!9425 = !DILocation(line: 1446, column: 39, scope: !9423)
!9426 = !DILocation(line: 1446, column: 21, scope: !9416)
!9427 = !DILocation(line: 1447, column: 28, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9423, file: !1803, line: 1446, column: 44)
!9429 = !DILocation(line: 1447, column: 32, scope: !9428)
!9430 = !DILocation(line: 1447, column: 21, scope: !9428)
!9431 = !DILocation(line: 1448, column: 21, scope: !9428)
!9432 = !DILocation(line: 1450, column: 21, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9416, file: !1803, line: 1450, column: 21)
!9434 = !DILocation(line: 1450, column: 32, scope: !9433)
!9435 = !DILocation(line: 1450, column: 37, scope: !9433)
!9436 = !DILocation(line: 1450, column: 30, scope: !9433)
!9437 = !DILocation(line: 1450, column: 21, scope: !9416)
!9438 = !DILocation(line: 1451, column: 28, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9433, file: !1803, line: 1450, column: 46)
!9440 = !DILocation(line: 1451, column: 32, scope: !9439)
!9441 = !DILocation(line: 1453, column: 28, scope: !9439)
!9442 = !DILocation(line: 1453, column: 38, scope: !9439)
!9443 = !DILocation(line: 1453, column: 43, scope: !9439)
!9444 = !DILocation(line: 1451, column: 21, scope: !9439)
!9445 = !DILocation(line: 1454, column: 21, scope: !9439)
!9446 = !DILocation(line: 1456, column: 13, scope: !9416)
!9447 = !DILocation(line: 1456, column: 22, scope: !9448)
!9448 = !DILexicalBlockFile(scope: !9395, file: !1803, discriminator: 1)
!9449 = !DILocation(line: 1456, column: 45, scope: !9448)
!9450 = !DILocation(line: 1456, column: 42, scope: !9448)
!9451 = !DILocation(line: 1456, column: 51, scope: !9448)
!9452 = !DILocation(line: 1456, column: 36, scope: !9448)
!9453 = !DILocation(line: 1456, column: 13, scope: !9448)
!9454 = !DILocation(line: 1457, column: 13, scope: !9395)
!9455 = !DILocation(line: 1457, column: 20, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !9457, file: !1803, discriminator: 1)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !1803, line: 1457, column: 13)
!9458 = distinct !DILexicalBlock(scope: !9395, file: !1803, line: 1457, column: 13)
!9459 = !DILocation(line: 1457, column: 24, scope: !9456)
!9460 = !DILocation(line: 1457, column: 22, scope: !9456)
!9461 = !DILocation(line: 1457, column: 13, scope: !9456)
!9462 = !DILocation(line: 1458, column: 35, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9457, file: !1803, line: 1457, column: 39)
!9464 = !DILocation(line: 1458, column: 28, scope: !9463)
!9465 = !DILocation(line: 1458, column: 17, scope: !9463)
!9466 = !DILocation(line: 1458, column: 33, scope: !9463)
!9467 = !DILocation(line: 1459, column: 44, scope: !9463)
!9468 = !DILocation(line: 1459, column: 38, scope: !9463)
!9469 = !DILocation(line: 1459, column: 17, scope: !9463)
!9470 = !DILocation(line: 1459, column: 42, scope: !9463)
!9471 = !DILocation(line: 1460, column: 13, scope: !9463)
!9472 = !DILocation(line: 1457, column: 35, scope: !9473)
!9473 = !DILexicalBlockFile(scope: !9457, file: !1803, discriminator: 2)
!9474 = !DILocation(line: 1457, column: 13, scope: !9473)
!9475 = distinct !{!9475, !9454}
!9476 = !DILocation(line: 1435, column: 9, scope: !9477)
!9477 = !DILexicalBlockFile(scope: !9385, file: !1803, discriminator: 2)
!9478 = distinct !{!9478, !9387}
!9479 = !DILocation(line: 1462, column: 5, scope: !9385)
!9480 = !DILocation(line: 1433, column: 46, scope: !9481)
!9481 = !DILexicalBlockFile(scope: !9379, file: !1803, discriminator: 2)
!9482 = !DILocation(line: 1433, column: 5, scope: !9481)
!9483 = distinct !{!9483, !9484}
!9484 = !DILocation(line: 1433, column: 5, scope: !9350)
!9485 = !DILocation(line: 1463, column: 5, scope: !9350)
!9486 = !DILocation(line: 1464, column: 1, scope: !9350)
!9487 = distinct !DISubprogram(name: "decode_scalefactors", scope: !1803, file: !1803, line: 1476, type: !9488, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{!1012, !2065, !1031, !2043, !1013, !2649, !9353, !1457}
!9490 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9501)
!9492 = !DILexicalBlockFile(scope: !9493, file: !2045, discriminator: 11)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !2045, line: 788, column: 490)
!9494 = distinct !DILexicalBlock(scope: !9495, file: !2045, line: 788, column: 466)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !2045, line: 788, column: 154)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !2045, line: 788, column: 130)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !2045, line: 788, column: 8)
!9498 = distinct !DISubprogram(name: "get_vlc2", scope: !2045, file: !2045, line: 762, type: !9499, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!1012, !2043, !1876, !1012, !1012}
!9501 = distinct !DILocation(line: 1530, column: 34, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !1803, line: 1529, column: 49)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1803, line: 1529, column: 17)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !1803, line: 1529, column: 17)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !1803, line: 1528, column: 20)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1803, line: 1509, column: 24)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !1803, line: 1492, column: 24)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !1803, line: 1489, column: 17)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !1803, line: 1487, column: 40)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !1803, line: 1487, column: 9)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !1803, line: 1487, column: 9)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !1803, line: 1486, column: 50)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !1803, line: 1486, column: 5)
!9514 = distinct !DILexicalBlock(scope: !9487, file: !1803, line: 1486, column: 5)
!9515 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9516)
!9516 = distinct !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9501)
!9517 = !DILexicalBlockFile(scope: !9495, file: !2045, discriminator: 6)
!9518 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9519)
!9519 = distinct !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9501)
!9520 = !DILocalVariable(name: "s", arg: 1, scope: !9498, file: !2045, line: 762, type: !2043)
!9521 = !DILocation(line: 762, column: 74, scope: !9498, inlinedAt: !9501)
!9522 = !DILocalVariable(name: "table", arg: 2, scope: !9498, file: !2045, line: 762, type: !1876)
!9523 = !DILocation(line: 762, column: 87, scope: !9498, inlinedAt: !9501)
!9524 = !DILocalVariable(name: "bits", arg: 3, scope: !9498, file: !2045, line: 763, type: !1012)
!9525 = !DILocation(line: 763, column: 42, scope: !9498, inlinedAt: !9501)
!9526 = !DILocalVariable(name: "max_depth", arg: 4, scope: !9498, file: !2045, line: 763, type: !1012)
!9527 = !DILocation(line: 763, column: 52, scope: !9498, inlinedAt: !9501)
!9528 = !DILocalVariable(name: "code", scope: !9498, file: !2045, line: 783, type: !1012)
!9529 = !DILocation(line: 783, column: 9, scope: !9498, inlinedAt: !9501)
!9530 = !DILocalVariable(name: "re_index", scope: !9498, file: !2045, line: 785, type: !1013)
!9531 = !DILocation(line: 785, column: 18, scope: !9498, inlinedAt: !9501)
!9532 = !DILocalVariable(name: "re_cache", scope: !9498, file: !2045, line: 785, type: !1013)
!9533 = !DILocation(line: 785, column: 78, scope: !9498, inlinedAt: !9501)
!9534 = !DILocalVariable(name: "re_size_plus8", scope: !9498, file: !2045, line: 785, type: !1013)
!9535 = !DILocation(line: 785, column: 101, scope: !9498, inlinedAt: !9501)
!9536 = !DILocalVariable(name: "n", scope: !9497, file: !2045, line: 788, type: !1012)
!9537 = !DILocation(line: 788, column: 14, scope: !9497, inlinedAt: !9501)
!9538 = !DILocalVariable(name: "nb_bits", scope: !9497, file: !2045, line: 788, type: !1012)
!9539 = !DILocation(line: 788, column: 17, scope: !9497, inlinedAt: !9501)
!9540 = !DILocalVariable(name: "index", scope: !9497, file: !2045, line: 788, type: !1013)
!9541 = !DILocation(line: 788, column: 39, scope: !9497, inlinedAt: !9501)
!9542 = !DILocation(line: 127, column: 87, scope: !5448, inlinedAt: !9543)
!9543 = distinct !DILocation(line: 1515, column: 38, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !1803, line: 1510, column: 49)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !1803, line: 1510, column: 17)
!9546 = distinct !DILexicalBlock(scope: !9547, file: !1803, line: 1510, column: 17)
!9547 = distinct !DILexicalBlock(scope: !9506, file: !1803, line: 1509, column: 52)
!9548 = !DILocation(line: 127, column: 94, scope: !5448, inlinedAt: !9543)
!9549 = !DILocation(line: 127, column: 104, scope: !5448, inlinedAt: !9543)
!9550 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9551)
!9551 = distinct !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9552)
!9552 = distinct !DILocation(line: 1514, column: 38, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9544, file: !1803, line: 1511, column: 25)
!9554 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9552)
!9556 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9557)
!9557 = distinct !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9552)
!9558 = !DILocation(line: 762, column: 74, scope: !9498, inlinedAt: !9552)
!9559 = !DILocation(line: 762, column: 87, scope: !9498, inlinedAt: !9552)
!9560 = !DILocation(line: 763, column: 42, scope: !9498, inlinedAt: !9552)
!9561 = !DILocation(line: 763, column: 52, scope: !9498, inlinedAt: !9552)
!9562 = !DILocation(line: 783, column: 9, scope: !9498, inlinedAt: !9552)
!9563 = !DILocation(line: 785, column: 18, scope: !9498, inlinedAt: !9552)
!9564 = !DILocation(line: 785, column: 78, scope: !9498, inlinedAt: !9552)
!9565 = !DILocation(line: 785, column: 101, scope: !9498, inlinedAt: !9552)
!9566 = !DILocation(line: 788, column: 14, scope: !9497, inlinedAt: !9552)
!9567 = !DILocation(line: 788, column: 17, scope: !9497, inlinedAt: !9552)
!9568 = !DILocation(line: 788, column: 39, scope: !9497, inlinedAt: !9552)
!9569 = !DILocation(line: 127, column: 87, scope: !5448, inlinedAt: !9570)
!9570 = distinct !DILocation(line: 1496, column: 38, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !1803, line: 1494, column: 49)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !1803, line: 1494, column: 17)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !1803, line: 1494, column: 17)
!9574 = distinct !DILexicalBlock(scope: !9507, file: !1803, line: 1493, column: 59)
!9575 = !DILocation(line: 127, column: 94, scope: !5448, inlinedAt: !9570)
!9576 = !DILocation(line: 127, column: 104, scope: !5448, inlinedAt: !9570)
!9577 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9578)
!9578 = distinct !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9579)
!9579 = distinct !DILocation(line: 1495, column: 34, scope: !9571)
!9580 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9581)
!9581 = distinct !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9579)
!9582 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !9583)
!9583 = distinct !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9579)
!9584 = !DILocation(line: 762, column: 74, scope: !9498, inlinedAt: !9579)
!9585 = !DILocation(line: 762, column: 87, scope: !9498, inlinedAt: !9579)
!9586 = !DILocation(line: 763, column: 42, scope: !9498, inlinedAt: !9579)
!9587 = !DILocation(line: 763, column: 52, scope: !9498, inlinedAt: !9579)
!9588 = !DILocation(line: 783, column: 9, scope: !9498, inlinedAt: !9579)
!9589 = !DILocation(line: 785, column: 18, scope: !9498, inlinedAt: !9579)
!9590 = !DILocation(line: 785, column: 78, scope: !9498, inlinedAt: !9579)
!9591 = !DILocation(line: 785, column: 101, scope: !9498, inlinedAt: !9579)
!9592 = !DILocation(line: 788, column: 14, scope: !9497, inlinedAt: !9579)
!9593 = !DILocation(line: 788, column: 17, scope: !9497, inlinedAt: !9579)
!9594 = !DILocation(line: 788, column: 39, scope: !9497, inlinedAt: !9579)
!9595 = !DILocalVariable(name: "ac", arg: 1, scope: !9487, file: !1803, line: 1476, type: !2065)
!9596 = !DILocation(line: 1476, column: 44, scope: !9487)
!9597 = !DILocalVariable(name: "sf", arg: 2, scope: !9487, file: !1803, line: 1476, type: !1031)
!9598 = !DILocation(line: 1476, column: 57, scope: !9487)
!9599 = !DILocalVariable(name: "gb", arg: 3, scope: !9487, file: !1803, line: 1476, type: !2043)
!9600 = !DILocation(line: 1476, column: 81, scope: !9487)
!9601 = !DILocalVariable(name: "global_gain", arg: 4, scope: !9487, file: !1803, line: 1477, type: !1013)
!9602 = !DILocation(line: 1477, column: 45, scope: !9487)
!9603 = !DILocalVariable(name: "ics", arg: 5, scope: !9487, file: !1803, line: 1478, type: !2649)
!9604 = !DILocation(line: 1478, column: 57, scope: !9487)
!9605 = !DILocalVariable(name: "band_type", arg: 6, scope: !9487, file: !1803, line: 1479, type: !9353)
!9606 = !DILocation(line: 1479, column: 46, scope: !9487)
!9607 = !DILocalVariable(name: "band_type_run_end", arg: 7, scope: !9487, file: !1803, line: 1480, type: !1457)
!9608 = !DILocation(line: 1480, column: 36, scope: !9487)
!9609 = !DILocalVariable(name: "g", scope: !9487, file: !1803, line: 1482, type: !1012)
!9610 = !DILocation(line: 1482, column: 9, scope: !9487)
!9611 = !DILocalVariable(name: "i", scope: !9487, file: !1803, line: 1482, type: !1012)
!9612 = !DILocation(line: 1482, column: 12, scope: !9487)
!9613 = !DILocalVariable(name: "idx", scope: !9487, file: !1803, line: 1482, type: !1012)
!9614 = !DILocation(line: 1482, column: 15, scope: !9487)
!9615 = !DILocalVariable(name: "offset", scope: !9487, file: !1803, line: 1483, type: !9616)
!9616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 96, align: 32, elements: !2221)
!9617 = !DILocation(line: 1483, column: 9, scope: !9487)
!9618 = !DILocation(line: 1483, column: 21, scope: !9487)
!9619 = !DILocation(line: 1483, column: 23, scope: !9487)
!9620 = !DILocation(line: 1483, column: 36, scope: !9487)
!9621 = !DILocation(line: 1483, column: 48, scope: !9487)
!9622 = !DILocalVariable(name: "clipped_offset", scope: !9487, file: !1803, line: 1484, type: !1012)
!9623 = !DILocation(line: 1484, column: 9, scope: !9487)
!9624 = !DILocalVariable(name: "noise_flag", scope: !9487, file: !1803, line: 1485, type: !1012)
!9625 = !DILocation(line: 1485, column: 9, scope: !9487)
!9626 = !DILocation(line: 1486, column: 12, scope: !9514)
!9627 = !DILocation(line: 1486, column: 10, scope: !9514)
!9628 = !DILocation(line: 1486, column: 17, scope: !9629)
!9629 = !DILexicalBlockFile(scope: !9513, file: !1803, discriminator: 1)
!9630 = !DILocation(line: 1486, column: 21, scope: !9629)
!9631 = !DILocation(line: 1486, column: 26, scope: !9629)
!9632 = !DILocation(line: 1486, column: 19, scope: !9629)
!9633 = !DILocation(line: 1486, column: 5, scope: !9629)
!9634 = !DILocation(line: 1487, column: 16, scope: !9511)
!9635 = !DILocation(line: 1487, column: 14, scope: !9511)
!9636 = !DILocation(line: 1487, column: 21, scope: !9637)
!9637 = !DILexicalBlockFile(scope: !9510, file: !1803, discriminator: 1)
!9638 = !DILocation(line: 1487, column: 25, scope: !9637)
!9639 = !DILocation(line: 1487, column: 30, scope: !9637)
!9640 = !DILocation(line: 1487, column: 23, scope: !9637)
!9641 = !DILocation(line: 1487, column: 9, scope: !9637)
!9642 = !DILocalVariable(name: "run_end", scope: !9509, file: !1803, line: 1488, type: !1012)
!9643 = !DILocation(line: 1488, column: 17, scope: !9509)
!9644 = !DILocation(line: 1488, column: 45, scope: !9509)
!9645 = !DILocation(line: 1488, column: 27, scope: !9509)
!9646 = !DILocation(line: 1489, column: 27, scope: !9508)
!9647 = !DILocation(line: 1489, column: 17, scope: !9508)
!9648 = !DILocation(line: 1489, column: 32, scope: !9508)
!9649 = !DILocation(line: 1489, column: 17, scope: !9509)
!9650 = !DILocation(line: 1490, column: 17, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9508, file: !1803, line: 1489, column: 44)
!9652 = !DILocation(line: 1490, column: 24, scope: !9653)
!9653 = !DILexicalBlockFile(scope: !9654, file: !1803, discriminator: 1)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !1803, line: 1490, column: 17)
!9655 = distinct !DILexicalBlock(scope: !9651, file: !1803, line: 1490, column: 17)
!9656 = !DILocation(line: 1490, column: 28, scope: !9653)
!9657 = !DILocation(line: 1490, column: 26, scope: !9653)
!9658 = !DILocation(line: 1490, column: 17, scope: !9653)
!9659 = !DILocation(line: 1491, column: 24, scope: !9654)
!9660 = !DILocation(line: 1491, column: 21, scope: !9654)
!9661 = !DILocation(line: 1491, column: 29, scope: !9654)
!9662 = !DILocation(line: 1490, column: 38, scope: !9663)
!9663 = !DILexicalBlockFile(scope: !9654, file: !1803, discriminator: 2)
!9664 = !DILocation(line: 1490, column: 45, scope: !9663)
!9665 = !DILocation(line: 1490, column: 17, scope: !9663)
!9666 = distinct !{!9666, !9650}
!9667 = !DILocation(line: 1492, column: 13, scope: !9651)
!9668 = !DILocation(line: 1492, column: 35, scope: !9669)
!9669 = !DILexicalBlockFile(scope: !9507, file: !1803, discriminator: 1)
!9670 = !DILocation(line: 1492, column: 25, scope: !9669)
!9671 = !DILocation(line: 1492, column: 40, scope: !9669)
!9672 = !DILocation(line: 1492, column: 57, scope: !9669)
!9673 = !DILocation(line: 1493, column: 35, scope: !9507)
!9674 = !DILocation(line: 1493, column: 25, scope: !9507)
!9675 = !DILocation(line: 1493, column: 40, scope: !9507)
!9676 = !DILocation(line: 1492, column: 24, scope: !9677)
!9677 = !DILexicalBlockFile(scope: !9508, file: !1803, discriminator: 2)
!9678 = !DILocation(line: 1494, column: 17, scope: !9574)
!9679 = !DILocation(line: 1494, column: 24, scope: !9680)
!9680 = !DILexicalBlockFile(scope: !9572, file: !1803, discriminator: 1)
!9681 = !DILocation(line: 1494, column: 28, scope: !9680)
!9682 = !DILocation(line: 1494, column: 26, scope: !9680)
!9683 = !DILocation(line: 1494, column: 17, scope: !9680)
!9684 = !DILocation(line: 1495, column: 43, scope: !9571)
!9685 = !DILocation(line: 1495, column: 64, scope: !9571)
!9686 = !DILocation(line: 1495, column: 34, scope: !9571)
!9687 = !DILocation(line: 785, column: 30, scope: !9498, inlinedAt: !9579)
!9688 = !DILocation(line: 785, column: 34, scope: !9498, inlinedAt: !9579)
!9689 = !DILocation(line: 785, column: 118, scope: !9498, inlinedAt: !9579)
!9690 = !DILocation(line: 785, column: 122, scope: !9498, inlinedAt: !9579)
!9691 = !DILocation(line: 786, column: 60, scope: !9498, inlinedAt: !9579)
!9692 = !DILocation(line: 786, column: 64, scope: !9498, inlinedAt: !9579)
!9693 = !DILocation(line: 786, column: 74, scope: !9498, inlinedAt: !9579)
!9694 = !DILocation(line: 786, column: 83, scope: !9498, inlinedAt: !9579)
!9695 = !DILocation(line: 786, column: 71, scope: !9498, inlinedAt: !9579)
!9696 = !DILocation(line: 786, column: 92, scope: !9498, inlinedAt: !9579)
!9697 = !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9579)
!9698 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9583)
!9699 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9583)
!9700 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9583)
!9701 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9583)
!9702 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9583)
!9703 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9583)
!9704 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9583)
!9705 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9583)
!9706 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9583)
!9707 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9583)
!9708 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9583)
!9709 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9583)
!9710 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9583)
!9711 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9583)
!9712 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9583)
!9713 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9583)
!9714 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9583)
!9715 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9583)
!9716 = !DILocation(line: 786, column: 100, scope: !9498, inlinedAt: !9579)
!9717 = !DILocation(line: 786, column: 109, scope: !9498, inlinedAt: !9579)
!9718 = !DILocation(line: 786, column: 96, scope: !9498, inlinedAt: !9579)
!9719 = !DILocation(line: 786, column: 14, scope: !9498, inlinedAt: !9579)
!9720 = !DILocation(line: 788, column: 64, scope: !9721, inlinedAt: !9579)
!9721 = !DILexicalBlockFile(scope: !9497, file: !2045, discriminator: 1)
!9722 = !DILocation(line: 788, column: 74, scope: !9721, inlinedAt: !9579)
!9723 = !DILocation(line: 788, column: 54, scope: !9721, inlinedAt: !9579)
!9724 = !DILocation(line: 788, column: 52, scope: !9721, inlinedAt: !9579)
!9725 = !DILocation(line: 788, column: 94, scope: !9721, inlinedAt: !9579)
!9726 = !DILocation(line: 788, column: 88, scope: !9721, inlinedAt: !9579)
!9727 = !DILocation(line: 788, column: 86, scope: !9721, inlinedAt: !9579)
!9728 = !DILocation(line: 788, column: 115, scope: !9721, inlinedAt: !9579)
!9729 = !DILocation(line: 788, column: 109, scope: !9721, inlinedAt: !9579)
!9730 = !DILocation(line: 788, column: 107, scope: !9721, inlinedAt: !9579)
!9731 = !DILocation(line: 788, column: 130, scope: !9721, inlinedAt: !9579)
!9732 = !DILocation(line: 788, column: 140, scope: !9721, inlinedAt: !9579)
!9733 = !DILocation(line: 788, column: 144, scope: !9721, inlinedAt: !9579)
!9734 = !DILocation(line: 788, column: 147, scope: !9735, inlinedAt: !9579)
!9735 = !DILexicalBlockFile(scope: !9496, file: !2045, discriminator: 2)
!9736 = !DILocation(line: 788, column: 149, scope: !9735, inlinedAt: !9579)
!9737 = !DILocation(line: 788, column: 130, scope: !9735, inlinedAt: !9579)
!9738 = !DILocation(line: 788, column: 169, scope: !9739, inlinedAt: !9579)
!9739 = !DILexicalBlockFile(scope: !9495, file: !2045, discriminator: 3)
!9740 = !DILocation(line: 788, column: 187, scope: !9739, inlinedAt: !9579)
!9741 = !DILocation(line: 788, column: 199, scope: !9739, inlinedAt: !9579)
!9742 = !DILocation(line: 788, column: 196, scope: !9739, inlinedAt: !9579)
!9743 = !DILocation(line: 788, column: 184, scope: !9739, inlinedAt: !9579)
!9744 = !DILocation(line: 788, column: 168, scope: !9739, inlinedAt: !9579)
!9745 = !DILocation(line: 788, column: 209, scope: !9746, inlinedAt: !9579)
!9746 = !DILexicalBlockFile(scope: !9495, file: !2045, discriminator: 4)
!9747 = !DILocation(line: 788, column: 221, scope: !9746, inlinedAt: !9579)
!9748 = !DILocation(line: 788, column: 218, scope: !9746, inlinedAt: !9579)
!9749 = !DILocation(line: 788, column: 168, scope: !9746, inlinedAt: !9579)
!9750 = !DILocation(line: 788, column: 231, scope: !9751, inlinedAt: !9579)
!9751 = !DILexicalBlockFile(scope: !9495, file: !2045, discriminator: 5)
!9752 = !DILocation(line: 788, column: 168, scope: !9751, inlinedAt: !9579)
!9753 = !DILocation(line: 788, column: 168, scope: !9517, inlinedAt: !9579)
!9754 = !DILocation(line: 788, column: 165, scope: !9517, inlinedAt: !9579)
!9755 = !DILocation(line: 788, column: 303, scope: !9517, inlinedAt: !9579)
!9756 = !DILocation(line: 788, column: 307, scope: !9517, inlinedAt: !9579)
!9757 = !DILocation(line: 788, column: 317, scope: !9517, inlinedAt: !9579)
!9758 = !DILocation(line: 788, column: 326, scope: !9517, inlinedAt: !9579)
!9759 = !DILocation(line: 788, column: 314, scope: !9517, inlinedAt: !9579)
!9760 = !DILocation(line: 788, column: 335, scope: !9517, inlinedAt: !9579)
!9761 = !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9579)
!9762 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9581)
!9763 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9581)
!9764 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9581)
!9765 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9581)
!9766 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9581)
!9767 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9581)
!9768 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9581)
!9769 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9581)
!9770 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9581)
!9771 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9581)
!9772 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9581)
!9773 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9581)
!9774 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9581)
!9775 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9581)
!9776 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9581)
!9777 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9581)
!9778 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9581)
!9779 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9581)
!9780 = !DILocation(line: 788, column: 343, scope: !9517, inlinedAt: !9579)
!9781 = !DILocation(line: 788, column: 352, scope: !9517, inlinedAt: !9579)
!9782 = !DILocation(line: 788, column: 339, scope: !9517, inlinedAt: !9579)
!9783 = !DILocation(line: 788, column: 257, scope: !9517, inlinedAt: !9579)
!9784 = !DILocation(line: 788, column: 369, scope: !9517, inlinedAt: !9579)
!9785 = !DILocation(line: 788, column: 368, scope: !9517, inlinedAt: !9579)
!9786 = !DILocation(line: 788, column: 366, scope: !9517, inlinedAt: !9579)
!9787 = !DILocation(line: 788, column: 390, scope: !9517, inlinedAt: !9579)
!9788 = !DILocation(line: 788, column: 400, scope: !9517, inlinedAt: !9579)
!9789 = !DILocation(line: 788, column: 380, scope: !9790, inlinedAt: !9579)
!9790 = !DILexicalBlockFile(scope: !9517, file: !2045, discriminator: 19)
!9791 = !DILocation(line: 788, column: 411, scope: !9517, inlinedAt: !9579)
!9792 = !DILocation(line: 788, column: 409, scope: !9517, inlinedAt: !9579)
!9793 = !DILocation(line: 788, column: 378, scope: !9517, inlinedAt: !9579)
!9794 = !DILocation(line: 788, column: 430, scope: !9517, inlinedAt: !9579)
!9795 = !DILocation(line: 788, column: 424, scope: !9517, inlinedAt: !9579)
!9796 = !DILocation(line: 788, column: 422, scope: !9517, inlinedAt: !9579)
!9797 = !DILocation(line: 788, column: 451, scope: !9517, inlinedAt: !9579)
!9798 = !DILocation(line: 788, column: 445, scope: !9517, inlinedAt: !9579)
!9799 = !DILocation(line: 788, column: 443, scope: !9517, inlinedAt: !9579)
!9800 = !DILocation(line: 788, column: 466, scope: !9517, inlinedAt: !9579)
!9801 = !DILocation(line: 788, column: 476, scope: !9517, inlinedAt: !9579)
!9802 = !DILocation(line: 788, column: 480, scope: !9517, inlinedAt: !9579)
!9803 = !DILocation(line: 788, column: 483, scope: !9804, inlinedAt: !9579)
!9804 = !DILexicalBlockFile(scope: !9494, file: !2045, discriminator: 7)
!9805 = !DILocation(line: 788, column: 485, scope: !9804, inlinedAt: !9579)
!9806 = !DILocation(line: 788, column: 466, scope: !9804, inlinedAt: !9579)
!9807 = !DILocation(line: 788, column: 505, scope: !9808, inlinedAt: !9579)
!9808 = !DILexicalBlockFile(scope: !9493, file: !2045, discriminator: 8)
!9809 = !DILocation(line: 788, column: 523, scope: !9808, inlinedAt: !9579)
!9810 = !DILocation(line: 788, column: 535, scope: !9808, inlinedAt: !9579)
!9811 = !DILocation(line: 788, column: 532, scope: !9808, inlinedAt: !9579)
!9812 = !DILocation(line: 788, column: 520, scope: !9808, inlinedAt: !9579)
!9813 = !DILocation(line: 788, column: 504, scope: !9808, inlinedAt: !9579)
!9814 = !DILocation(line: 788, column: 548, scope: !9815, inlinedAt: !9579)
!9815 = !DILexicalBlockFile(scope: !9493, file: !2045, discriminator: 9)
!9816 = !DILocation(line: 788, column: 560, scope: !9815, inlinedAt: !9579)
!9817 = !DILocation(line: 788, column: 557, scope: !9815, inlinedAt: !9579)
!9818 = !DILocation(line: 788, column: 504, scope: !9815, inlinedAt: !9579)
!9819 = !DILocation(line: 788, column: 573, scope: !9820, inlinedAt: !9579)
!9820 = !DILexicalBlockFile(scope: !9493, file: !2045, discriminator: 10)
!9821 = !DILocation(line: 788, column: 504, scope: !9820, inlinedAt: !9579)
!9822 = !DILocation(line: 788, column: 504, scope: !9492, inlinedAt: !9579)
!9823 = !DILocation(line: 788, column: 501, scope: !9492, inlinedAt: !9579)
!9824 = !DILocation(line: 788, column: 645, scope: !9492, inlinedAt: !9579)
!9825 = !DILocation(line: 788, column: 649, scope: !9492, inlinedAt: !9579)
!9826 = !DILocation(line: 788, column: 659, scope: !9492, inlinedAt: !9579)
!9827 = !DILocation(line: 788, column: 668, scope: !9492, inlinedAt: !9579)
!9828 = !DILocation(line: 788, column: 656, scope: !9492, inlinedAt: !9579)
!9829 = !DILocation(line: 788, column: 677, scope: !9492, inlinedAt: !9579)
!9830 = !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9579)
!9831 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9578)
!9832 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9578)
!9833 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9578)
!9834 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9578)
!9835 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9578)
!9836 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9578)
!9837 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9578)
!9838 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9578)
!9839 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9578)
!9840 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9578)
!9841 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9578)
!9842 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9578)
!9843 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9578)
!9844 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9578)
!9845 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9578)
!9846 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9578)
!9847 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9578)
!9848 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9578)
!9849 = !DILocation(line: 788, column: 685, scope: !9492, inlinedAt: !9579)
!9850 = !DILocation(line: 788, column: 694, scope: !9492, inlinedAt: !9579)
!9851 = !DILocation(line: 788, column: 681, scope: !9492, inlinedAt: !9579)
!9852 = !DILocation(line: 788, column: 599, scope: !9492, inlinedAt: !9579)
!9853 = !DILocation(line: 788, column: 711, scope: !9492, inlinedAt: !9579)
!9854 = !DILocation(line: 788, column: 710, scope: !9492, inlinedAt: !9579)
!9855 = !DILocation(line: 788, column: 708, scope: !9492, inlinedAt: !9579)
!9856 = !DILocation(line: 788, column: 732, scope: !9492, inlinedAt: !9579)
!9857 = !DILocation(line: 788, column: 742, scope: !9492, inlinedAt: !9579)
!9858 = !DILocation(line: 788, column: 722, scope: !9859, inlinedAt: !9579)
!9859 = !DILexicalBlockFile(scope: !9492, file: !2045, discriminator: 20)
!9860 = !DILocation(line: 788, column: 753, scope: !9492, inlinedAt: !9579)
!9861 = !DILocation(line: 788, column: 751, scope: !9492, inlinedAt: !9579)
!9862 = !DILocation(line: 788, column: 720, scope: !9492, inlinedAt: !9579)
!9863 = !DILocation(line: 788, column: 772, scope: !9492, inlinedAt: !9579)
!9864 = !DILocation(line: 788, column: 766, scope: !9492, inlinedAt: !9579)
!9865 = !DILocation(line: 788, column: 764, scope: !9492, inlinedAt: !9579)
!9866 = !DILocation(line: 788, column: 793, scope: !9492, inlinedAt: !9579)
!9867 = !DILocation(line: 788, column: 787, scope: !9492, inlinedAt: !9579)
!9868 = !DILocation(line: 788, column: 785, scope: !9492, inlinedAt: !9579)
!9869 = !DILocation(line: 788, column: 804, scope: !9492, inlinedAt: !9579)
!9870 = !DILocation(line: 788, column: 806, scope: !9871, inlinedAt: !9579)
!9871 = !DILexicalBlockFile(scope: !9495, file: !2045, discriminator: 12)
!9872 = !DILocation(line: 788, column: 827, scope: !9873, inlinedAt: !9579)
!9873 = !DILexicalBlockFile(scope: !9874, file: !2045, discriminator: 14)
!9874 = distinct !DILexicalBlock(scope: !9497, file: !2045, line: 788, column: 811)
!9875 = !DILocation(line: 788, column: 822, scope: !9873, inlinedAt: !9579)
!9876 = !DILocation(line: 788, column: 844, scope: !9873, inlinedAt: !9579)
!9877 = !DILocation(line: 788, column: 862, scope: !9873, inlinedAt: !9579)
!9878 = !DILocation(line: 788, column: 874, scope: !9873, inlinedAt: !9579)
!9879 = !DILocation(line: 788, column: 871, scope: !9873, inlinedAt: !9579)
!9880 = !DILocation(line: 788, column: 859, scope: !9873, inlinedAt: !9579)
!9881 = !DILocation(line: 788, column: 843, scope: !9873, inlinedAt: !9579)
!9882 = !DILocation(line: 788, column: 881, scope: !9883, inlinedAt: !9579)
!9883 = !DILexicalBlockFile(scope: !9874, file: !2045, discriminator: 15)
!9884 = !DILocation(line: 788, column: 893, scope: !9883, inlinedAt: !9579)
!9885 = !DILocation(line: 788, column: 890, scope: !9883, inlinedAt: !9579)
!9886 = !DILocation(line: 788, column: 843, scope: !9883, inlinedAt: !9579)
!9887 = !DILocation(line: 788, column: 900, scope: !9888, inlinedAt: !9579)
!9888 = !DILexicalBlockFile(scope: !9874, file: !2045, discriminator: 16)
!9889 = !DILocation(line: 788, column: 843, scope: !9888, inlinedAt: !9579)
!9890 = !DILocation(line: 788, column: 843, scope: !9891, inlinedAt: !9579)
!9891 = !DILexicalBlockFile(scope: !9874, file: !2045, discriminator: 17)
!9892 = !DILocation(line: 788, column: 840, scope: !9891, inlinedAt: !9579)
!9893 = !DILocation(line: 790, column: 18, scope: !9498, inlinedAt: !9579)
!9894 = !DILocation(line: 790, column: 6, scope: !9498, inlinedAt: !9579)
!9895 = !DILocation(line: 790, column: 10, scope: !9498, inlinedAt: !9579)
!9896 = !DILocation(line: 790, column: 16, scope: !9498, inlinedAt: !9579)
!9897 = !DILocation(line: 792, column: 12, scope: !9498, inlinedAt: !9579)
!9898 = !DILocation(line: 1495, column: 77, scope: !9571)
!9899 = !DILocation(line: 1495, column: 21, scope: !9571)
!9900 = !DILocation(line: 1495, column: 31, scope: !9571)
!9901 = !DILocation(line: 1496, column: 48, scope: !9571)
!9902 = !DILocation(line: 1496, column: 38, scope: !9571)
!9903 = !DILocation(line: 132, column: 9, scope: !5473, inlinedAt: !9570)
!9904 = !DILocation(line: 132, column: 13, scope: !5473, inlinedAt: !9570)
!9905 = !DILocation(line: 132, column: 11, scope: !5473, inlinedAt: !9570)
!9906 = !DILocation(line: 132, column: 9, scope: !5448, inlinedAt: !9570)
!9907 = !DILocation(line: 132, column: 26, scope: !5478, inlinedAt: !9570)
!9908 = !DILocation(line: 132, column: 19, scope: !5478, inlinedAt: !9570)
!9909 = !DILocation(line: 133, column: 14, scope: !5481, inlinedAt: !9570)
!9910 = !DILocation(line: 133, column: 18, scope: !5481, inlinedAt: !9570)
!9911 = !DILocation(line: 133, column: 16, scope: !5481, inlinedAt: !9570)
!9912 = !DILocation(line: 133, column: 14, scope: !5473, inlinedAt: !9570)
!9913 = !DILocation(line: 133, column: 31, scope: !5486, inlinedAt: !9570)
!9914 = !DILocation(line: 133, column: 24, scope: !5486, inlinedAt: !9570)
!9915 = !DILocation(line: 134, column: 17, scope: !5481, inlinedAt: !9570)
!9916 = !DILocation(line: 134, column: 10, scope: !5481, inlinedAt: !9570)
!9917 = !DILocation(line: 135, column: 1, scope: !5448, inlinedAt: !9570)
!9918 = !DILocation(line: 1496, column: 36, scope: !9571)
!9919 = !DILocation(line: 1497, column: 25, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9571, file: !1803, line: 1497, column: 25)
!9921 = !DILocation(line: 1497, column: 38, scope: !9920)
!9922 = !DILocation(line: 1497, column: 35, scope: !9920)
!9923 = !DILocation(line: 1497, column: 25, scope: !9571)
!9924 = !DILocation(line: 1498, column: 47, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9920, file: !1803, line: 1497, column: 54)
!9926 = !DILocation(line: 1498, column: 51, scope: !9925)
!9927 = !DILocation(line: 1501, column: 47, scope: !9925)
!9928 = !DILocation(line: 1501, column: 58, scope: !9925)
!9929 = !DILocation(line: 1498, column: 25, scope: !9925)
!9930 = !DILocation(line: 1502, column: 21, scope: !9925)
!9931 = !DILocation(line: 1506, column: 50, scope: !9571)
!9932 = !DILocation(line: 1506, column: 49, scope: !9571)
!9933 = !DILocation(line: 1506, column: 65, scope: !9571)
!9934 = !DILocation(line: 1506, column: 31, scope: !9571)
!9935 = !DILocation(line: 1506, column: 24, scope: !9571)
!9936 = !DILocation(line: 1506, column: 21, scope: !9571)
!9937 = !DILocation(line: 1506, column: 29, scope: !9571)
!9938 = !DILocation(line: 1508, column: 17, scope: !9571)
!9939 = !DILocation(line: 1494, column: 38, scope: !9940)
!9940 = !DILexicalBlockFile(scope: !9572, file: !1803, discriminator: 2)
!9941 = !DILocation(line: 1494, column: 45, scope: !9940)
!9942 = !DILocation(line: 1494, column: 17, scope: !9940)
!9943 = distinct !{!9943, !9678}
!9944 = !DILocation(line: 1509, column: 13, scope: !9574)
!9945 = !DILocation(line: 1509, column: 34, scope: !9946)
!9946 = !DILexicalBlockFile(scope: !9506, file: !1803, discriminator: 1)
!9947 = !DILocation(line: 1509, column: 24, scope: !9946)
!9948 = !DILocation(line: 1509, column: 39, scope: !9946)
!9949 = !DILocation(line: 1510, column: 17, scope: !9547)
!9950 = !DILocation(line: 1510, column: 24, scope: !9951)
!9951 = !DILexicalBlockFile(scope: !9545, file: !1803, discriminator: 1)
!9952 = !DILocation(line: 1510, column: 28, scope: !9951)
!9953 = !DILocation(line: 1510, column: 26, scope: !9951)
!9954 = !DILocation(line: 1510, column: 17, scope: !9951)
!9955 = !DILocation(line: 1511, column: 35, scope: !9553)
!9956 = !DILocation(line: 1511, column: 38, scope: !9553)
!9957 = !DILocation(line: 1511, column: 25, scope: !9544)
!9958 = !DILocation(line: 1512, column: 47, scope: !9553)
!9959 = !DILocation(line: 1512, column: 38, scope: !9553)
!9960 = !DILocation(line: 1512, column: 54, scope: !9553)
!9961 = !DILocation(line: 1512, column: 25, scope: !9553)
!9962 = !DILocation(line: 1512, column: 35, scope: !9553)
!9963 = !DILocation(line: 1514, column: 47, scope: !9553)
!9964 = !DILocation(line: 1514, column: 68, scope: !9553)
!9965 = !DILocation(line: 1514, column: 38, scope: !9553)
!9966 = !DILocation(line: 785, column: 30, scope: !9498, inlinedAt: !9552)
!9967 = !DILocation(line: 785, column: 34, scope: !9498, inlinedAt: !9552)
!9968 = !DILocation(line: 785, column: 118, scope: !9498, inlinedAt: !9552)
!9969 = !DILocation(line: 785, column: 122, scope: !9498, inlinedAt: !9552)
!9970 = !DILocation(line: 786, column: 60, scope: !9498, inlinedAt: !9552)
!9971 = !DILocation(line: 786, column: 64, scope: !9498, inlinedAt: !9552)
!9972 = !DILocation(line: 786, column: 74, scope: !9498, inlinedAt: !9552)
!9973 = !DILocation(line: 786, column: 83, scope: !9498, inlinedAt: !9552)
!9974 = !DILocation(line: 786, column: 71, scope: !9498, inlinedAt: !9552)
!9975 = !DILocation(line: 786, column: 92, scope: !9498, inlinedAt: !9552)
!9976 = !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9552)
!9977 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9557)
!9978 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9557)
!9979 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9557)
!9980 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9557)
!9981 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9557)
!9982 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9557)
!9983 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9557)
!9984 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9557)
!9985 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9557)
!9986 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9557)
!9987 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9557)
!9988 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9557)
!9989 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9557)
!9990 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9557)
!9991 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9557)
!9992 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9557)
!9993 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9557)
!9994 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9557)
!9995 = !DILocation(line: 786, column: 100, scope: !9498, inlinedAt: !9552)
!9996 = !DILocation(line: 786, column: 109, scope: !9498, inlinedAt: !9552)
!9997 = !DILocation(line: 786, column: 96, scope: !9498, inlinedAt: !9552)
!9998 = !DILocation(line: 786, column: 14, scope: !9498, inlinedAt: !9552)
!9999 = !DILocation(line: 788, column: 64, scope: !9721, inlinedAt: !9552)
!10000 = !DILocation(line: 788, column: 74, scope: !9721, inlinedAt: !9552)
!10001 = !DILocation(line: 788, column: 54, scope: !9721, inlinedAt: !9552)
!10002 = !DILocation(line: 788, column: 52, scope: !9721, inlinedAt: !9552)
!10003 = !DILocation(line: 788, column: 94, scope: !9721, inlinedAt: !9552)
!10004 = !DILocation(line: 788, column: 88, scope: !9721, inlinedAt: !9552)
!10005 = !DILocation(line: 788, column: 86, scope: !9721, inlinedAt: !9552)
!10006 = !DILocation(line: 788, column: 115, scope: !9721, inlinedAt: !9552)
!10007 = !DILocation(line: 788, column: 109, scope: !9721, inlinedAt: !9552)
!10008 = !DILocation(line: 788, column: 107, scope: !9721, inlinedAt: !9552)
!10009 = !DILocation(line: 788, column: 130, scope: !9721, inlinedAt: !9552)
!10010 = !DILocation(line: 788, column: 140, scope: !9721, inlinedAt: !9552)
!10011 = !DILocation(line: 788, column: 144, scope: !9721, inlinedAt: !9552)
!10012 = !DILocation(line: 788, column: 147, scope: !9735, inlinedAt: !9552)
!10013 = !DILocation(line: 788, column: 149, scope: !9735, inlinedAt: !9552)
!10014 = !DILocation(line: 788, column: 130, scope: !9735, inlinedAt: !9552)
!10015 = !DILocation(line: 788, column: 169, scope: !9739, inlinedAt: !9552)
!10016 = !DILocation(line: 788, column: 187, scope: !9739, inlinedAt: !9552)
!10017 = !DILocation(line: 788, column: 199, scope: !9739, inlinedAt: !9552)
!10018 = !DILocation(line: 788, column: 196, scope: !9739, inlinedAt: !9552)
!10019 = !DILocation(line: 788, column: 184, scope: !9739, inlinedAt: !9552)
!10020 = !DILocation(line: 788, column: 168, scope: !9739, inlinedAt: !9552)
!10021 = !DILocation(line: 788, column: 209, scope: !9746, inlinedAt: !9552)
!10022 = !DILocation(line: 788, column: 221, scope: !9746, inlinedAt: !9552)
!10023 = !DILocation(line: 788, column: 218, scope: !9746, inlinedAt: !9552)
!10024 = !DILocation(line: 788, column: 168, scope: !9746, inlinedAt: !9552)
!10025 = !DILocation(line: 788, column: 231, scope: !9751, inlinedAt: !9552)
!10026 = !DILocation(line: 788, column: 168, scope: !9751, inlinedAt: !9552)
!10027 = !DILocation(line: 788, column: 168, scope: !9517, inlinedAt: !9552)
!10028 = !DILocation(line: 788, column: 165, scope: !9517, inlinedAt: !9552)
!10029 = !DILocation(line: 788, column: 303, scope: !9517, inlinedAt: !9552)
!10030 = !DILocation(line: 788, column: 307, scope: !9517, inlinedAt: !9552)
!10031 = !DILocation(line: 788, column: 317, scope: !9517, inlinedAt: !9552)
!10032 = !DILocation(line: 788, column: 326, scope: !9517, inlinedAt: !9552)
!10033 = !DILocation(line: 788, column: 314, scope: !9517, inlinedAt: !9552)
!10034 = !DILocation(line: 788, column: 335, scope: !9517, inlinedAt: !9552)
!10035 = !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9552)
!10036 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9555)
!10037 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9555)
!10038 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9555)
!10039 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9555)
!10040 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9555)
!10041 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9555)
!10042 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9555)
!10043 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9555)
!10044 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9555)
!10045 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9555)
!10046 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9555)
!10047 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9555)
!10048 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9555)
!10049 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9555)
!10050 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9555)
!10051 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9555)
!10052 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9555)
!10053 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9555)
!10054 = !DILocation(line: 788, column: 343, scope: !9517, inlinedAt: !9552)
!10055 = !DILocation(line: 788, column: 352, scope: !9517, inlinedAt: !9552)
!10056 = !DILocation(line: 788, column: 339, scope: !9517, inlinedAt: !9552)
!10057 = !DILocation(line: 788, column: 257, scope: !9517, inlinedAt: !9552)
!10058 = !DILocation(line: 788, column: 369, scope: !9517, inlinedAt: !9552)
!10059 = !DILocation(line: 788, column: 368, scope: !9517, inlinedAt: !9552)
!10060 = !DILocation(line: 788, column: 366, scope: !9517, inlinedAt: !9552)
!10061 = !DILocation(line: 788, column: 390, scope: !9517, inlinedAt: !9552)
!10062 = !DILocation(line: 788, column: 400, scope: !9517, inlinedAt: !9552)
!10063 = !DILocation(line: 788, column: 380, scope: !9790, inlinedAt: !9552)
!10064 = !DILocation(line: 788, column: 411, scope: !9517, inlinedAt: !9552)
!10065 = !DILocation(line: 788, column: 409, scope: !9517, inlinedAt: !9552)
!10066 = !DILocation(line: 788, column: 378, scope: !9517, inlinedAt: !9552)
!10067 = !DILocation(line: 788, column: 430, scope: !9517, inlinedAt: !9552)
!10068 = !DILocation(line: 788, column: 424, scope: !9517, inlinedAt: !9552)
!10069 = !DILocation(line: 788, column: 422, scope: !9517, inlinedAt: !9552)
!10070 = !DILocation(line: 788, column: 451, scope: !9517, inlinedAt: !9552)
!10071 = !DILocation(line: 788, column: 445, scope: !9517, inlinedAt: !9552)
!10072 = !DILocation(line: 788, column: 443, scope: !9517, inlinedAt: !9552)
!10073 = !DILocation(line: 788, column: 466, scope: !9517, inlinedAt: !9552)
!10074 = !DILocation(line: 788, column: 476, scope: !9517, inlinedAt: !9552)
!10075 = !DILocation(line: 788, column: 480, scope: !9517, inlinedAt: !9552)
!10076 = !DILocation(line: 788, column: 483, scope: !9804, inlinedAt: !9552)
!10077 = !DILocation(line: 788, column: 485, scope: !9804, inlinedAt: !9552)
!10078 = !DILocation(line: 788, column: 466, scope: !9804, inlinedAt: !9552)
!10079 = !DILocation(line: 788, column: 505, scope: !9808, inlinedAt: !9552)
!10080 = !DILocation(line: 788, column: 523, scope: !9808, inlinedAt: !9552)
!10081 = !DILocation(line: 788, column: 535, scope: !9808, inlinedAt: !9552)
!10082 = !DILocation(line: 788, column: 532, scope: !9808, inlinedAt: !9552)
!10083 = !DILocation(line: 788, column: 520, scope: !9808, inlinedAt: !9552)
!10084 = !DILocation(line: 788, column: 504, scope: !9808, inlinedAt: !9552)
!10085 = !DILocation(line: 788, column: 548, scope: !9815, inlinedAt: !9552)
!10086 = !DILocation(line: 788, column: 560, scope: !9815, inlinedAt: !9552)
!10087 = !DILocation(line: 788, column: 557, scope: !9815, inlinedAt: !9552)
!10088 = !DILocation(line: 788, column: 504, scope: !9815, inlinedAt: !9552)
!10089 = !DILocation(line: 788, column: 573, scope: !9820, inlinedAt: !9552)
!10090 = !DILocation(line: 788, column: 504, scope: !9820, inlinedAt: !9552)
!10091 = !DILocation(line: 788, column: 504, scope: !9492, inlinedAt: !9552)
!10092 = !DILocation(line: 788, column: 501, scope: !9492, inlinedAt: !9552)
!10093 = !DILocation(line: 788, column: 645, scope: !9492, inlinedAt: !9552)
!10094 = !DILocation(line: 788, column: 649, scope: !9492, inlinedAt: !9552)
!10095 = !DILocation(line: 788, column: 659, scope: !9492, inlinedAt: !9552)
!10096 = !DILocation(line: 788, column: 668, scope: !9492, inlinedAt: !9552)
!10097 = !DILocation(line: 788, column: 656, scope: !9492, inlinedAt: !9552)
!10098 = !DILocation(line: 788, column: 677, scope: !9492, inlinedAt: !9552)
!10099 = !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9552)
!10100 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9551)
!10101 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9551)
!10102 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9551)
!10103 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9551)
!10104 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9551)
!10105 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9551)
!10106 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9551)
!10107 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9551)
!10108 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9551)
!10109 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9551)
!10110 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9551)
!10111 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9551)
!10112 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9551)
!10113 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9551)
!10114 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9551)
!10115 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9551)
!10116 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9551)
!10117 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9551)
!10118 = !DILocation(line: 788, column: 685, scope: !9492, inlinedAt: !9552)
!10119 = !DILocation(line: 788, column: 694, scope: !9492, inlinedAt: !9552)
!10120 = !DILocation(line: 788, column: 681, scope: !9492, inlinedAt: !9552)
!10121 = !DILocation(line: 788, column: 599, scope: !9492, inlinedAt: !9552)
!10122 = !DILocation(line: 788, column: 711, scope: !9492, inlinedAt: !9552)
!10123 = !DILocation(line: 788, column: 710, scope: !9492, inlinedAt: !9552)
!10124 = !DILocation(line: 788, column: 708, scope: !9492, inlinedAt: !9552)
!10125 = !DILocation(line: 788, column: 732, scope: !9492, inlinedAt: !9552)
!10126 = !DILocation(line: 788, column: 742, scope: !9492, inlinedAt: !9552)
!10127 = !DILocation(line: 788, column: 722, scope: !9859, inlinedAt: !9552)
!10128 = !DILocation(line: 788, column: 753, scope: !9492, inlinedAt: !9552)
!10129 = !DILocation(line: 788, column: 751, scope: !9492, inlinedAt: !9552)
!10130 = !DILocation(line: 788, column: 720, scope: !9492, inlinedAt: !9552)
!10131 = !DILocation(line: 788, column: 772, scope: !9492, inlinedAt: !9552)
!10132 = !DILocation(line: 788, column: 766, scope: !9492, inlinedAt: !9552)
!10133 = !DILocation(line: 788, column: 764, scope: !9492, inlinedAt: !9552)
!10134 = !DILocation(line: 788, column: 793, scope: !9492, inlinedAt: !9552)
!10135 = !DILocation(line: 788, column: 787, scope: !9492, inlinedAt: !9552)
!10136 = !DILocation(line: 788, column: 785, scope: !9492, inlinedAt: !9552)
!10137 = !DILocation(line: 788, column: 804, scope: !9492, inlinedAt: !9552)
!10138 = !DILocation(line: 788, column: 806, scope: !9871, inlinedAt: !9552)
!10139 = !DILocation(line: 788, column: 827, scope: !9873, inlinedAt: !9552)
!10140 = !DILocation(line: 788, column: 822, scope: !9873, inlinedAt: !9552)
!10141 = !DILocation(line: 788, column: 844, scope: !9873, inlinedAt: !9552)
!10142 = !DILocation(line: 788, column: 862, scope: !9873, inlinedAt: !9552)
!10143 = !DILocation(line: 788, column: 874, scope: !9873, inlinedAt: !9552)
!10144 = !DILocation(line: 788, column: 871, scope: !9873, inlinedAt: !9552)
!10145 = !DILocation(line: 788, column: 859, scope: !9873, inlinedAt: !9552)
!10146 = !DILocation(line: 788, column: 843, scope: !9873, inlinedAt: !9552)
!10147 = !DILocation(line: 788, column: 881, scope: !9883, inlinedAt: !9552)
!10148 = !DILocation(line: 788, column: 893, scope: !9883, inlinedAt: !9552)
!10149 = !DILocation(line: 788, column: 890, scope: !9883, inlinedAt: !9552)
!10150 = !DILocation(line: 788, column: 843, scope: !9883, inlinedAt: !9552)
!10151 = !DILocation(line: 788, column: 900, scope: !9888, inlinedAt: !9552)
!10152 = !DILocation(line: 788, column: 843, scope: !9888, inlinedAt: !9552)
!10153 = !DILocation(line: 788, column: 843, scope: !9891, inlinedAt: !9552)
!10154 = !DILocation(line: 788, column: 840, scope: !9891, inlinedAt: !9552)
!10155 = !DILocation(line: 790, column: 18, scope: !9498, inlinedAt: !9552)
!10156 = !DILocation(line: 790, column: 6, scope: !9498, inlinedAt: !9552)
!10157 = !DILocation(line: 790, column: 10, scope: !9498, inlinedAt: !9552)
!10158 = !DILocation(line: 790, column: 16, scope: !9498, inlinedAt: !9552)
!10159 = !DILocation(line: 792, column: 12, scope: !9498, inlinedAt: !9552)
!10160 = !DILocation(line: 1514, column: 81, scope: !9553)
!10161 = !DILocation(line: 1514, column: 25, scope: !9553)
!10162 = !DILocation(line: 1514, column: 35, scope: !9553)
!10163 = !DILocation(line: 1515, column: 48, scope: !9544)
!10164 = !DILocation(line: 1515, column: 38, scope: !9544)
!10165 = !DILocation(line: 132, column: 9, scope: !5473, inlinedAt: !9543)
!10166 = !DILocation(line: 132, column: 13, scope: !5473, inlinedAt: !9543)
!10167 = !DILocation(line: 132, column: 11, scope: !5473, inlinedAt: !9543)
!10168 = !DILocation(line: 132, column: 9, scope: !5448, inlinedAt: !9543)
!10169 = !DILocation(line: 132, column: 26, scope: !5478, inlinedAt: !9543)
!10170 = !DILocation(line: 132, column: 19, scope: !5478, inlinedAt: !9543)
!10171 = !DILocation(line: 133, column: 14, scope: !5481, inlinedAt: !9543)
!10172 = !DILocation(line: 133, column: 18, scope: !5481, inlinedAt: !9543)
!10173 = !DILocation(line: 133, column: 16, scope: !5481, inlinedAt: !9543)
!10174 = !DILocation(line: 133, column: 14, scope: !5473, inlinedAt: !9543)
!10175 = !DILocation(line: 133, column: 31, scope: !5486, inlinedAt: !9543)
!10176 = !DILocation(line: 133, column: 24, scope: !5486, inlinedAt: !9543)
!10177 = !DILocation(line: 134, column: 17, scope: !5481, inlinedAt: !9543)
!10178 = !DILocation(line: 134, column: 10, scope: !5481, inlinedAt: !9543)
!10179 = !DILocation(line: 135, column: 1, scope: !5448, inlinedAt: !9543)
!10180 = !DILocation(line: 1515, column: 36, scope: !9544)
!10181 = !DILocation(line: 1516, column: 25, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !9544, file: !1803, line: 1516, column: 25)
!10183 = !DILocation(line: 1516, column: 38, scope: !10182)
!10184 = !DILocation(line: 1516, column: 35, scope: !10182)
!10185 = !DILocation(line: 1516, column: 25, scope: !9544)
!10186 = !DILocation(line: 1517, column: 47, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10182, file: !1803, line: 1516, column: 54)
!10188 = !DILocation(line: 1517, column: 51, scope: !10187)
!10189 = !DILocation(line: 1520, column: 47, scope: !10187)
!10190 = !DILocation(line: 1520, column: 58, scope: !10187)
!10191 = !DILocation(line: 1517, column: 25, scope: !10187)
!10192 = !DILocation(line: 1521, column: 21, scope: !10187)
!10193 = !DILocation(line: 1525, column: 50, scope: !9544)
!10194 = !DILocation(line: 1525, column: 65, scope: !9544)
!10195 = !DILocation(line: 1525, column: 32, scope: !9544)
!10196 = !DILocation(line: 1525, column: 31, scope: !9544)
!10197 = !DILocation(line: 1525, column: 24, scope: !9544)
!10198 = !DILocation(line: 1525, column: 21, scope: !9544)
!10199 = !DILocation(line: 1525, column: 29, scope: !9544)
!10200 = !DILocation(line: 1527, column: 17, scope: !9544)
!10201 = !DILocation(line: 1510, column: 38, scope: !10202)
!10202 = !DILexicalBlockFile(scope: !9545, file: !1803, discriminator: 2)
!10203 = !DILocation(line: 1510, column: 45, scope: !10202)
!10204 = !DILocation(line: 1510, column: 17, scope: !10202)
!10205 = distinct !{!10205, !9949}
!10206 = !DILocation(line: 1528, column: 13, scope: !9547)
!10207 = !DILocation(line: 1529, column: 17, scope: !9505)
!10208 = !DILocation(line: 1529, column: 24, scope: !10209)
!10209 = !DILexicalBlockFile(scope: !9503, file: !1803, discriminator: 1)
!10210 = !DILocation(line: 1529, column: 28, scope: !10209)
!10211 = !DILocation(line: 1529, column: 26, scope: !10209)
!10212 = !DILocation(line: 1529, column: 17, scope: !10209)
!10213 = !DILocation(line: 1530, column: 43, scope: !9502)
!10214 = !DILocation(line: 1530, column: 64, scope: !9502)
!10215 = !DILocation(line: 1530, column: 34, scope: !9502)
!10216 = !DILocation(line: 785, column: 30, scope: !9498, inlinedAt: !9501)
!10217 = !DILocation(line: 785, column: 34, scope: !9498, inlinedAt: !9501)
!10218 = !DILocation(line: 785, column: 118, scope: !9498, inlinedAt: !9501)
!10219 = !DILocation(line: 785, column: 122, scope: !9498, inlinedAt: !9501)
!10220 = !DILocation(line: 786, column: 60, scope: !9498, inlinedAt: !9501)
!10221 = !DILocation(line: 786, column: 64, scope: !9498, inlinedAt: !9501)
!10222 = !DILocation(line: 786, column: 74, scope: !9498, inlinedAt: !9501)
!10223 = !DILocation(line: 786, column: 83, scope: !9498, inlinedAt: !9501)
!10224 = !DILocation(line: 786, column: 71, scope: !9498, inlinedAt: !9501)
!10225 = !DILocation(line: 786, column: 92, scope: !9498, inlinedAt: !9501)
!10226 = !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !9501)
!10227 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9519)
!10228 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9519)
!10229 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9519)
!10230 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9519)
!10231 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9519)
!10232 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9519)
!10233 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9519)
!10234 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9519)
!10235 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9519)
!10236 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9519)
!10237 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9519)
!10238 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9519)
!10239 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9519)
!10240 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9519)
!10241 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9519)
!10242 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9519)
!10243 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9519)
!10244 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9519)
!10245 = !DILocation(line: 786, column: 100, scope: !9498, inlinedAt: !9501)
!10246 = !DILocation(line: 786, column: 109, scope: !9498, inlinedAt: !9501)
!10247 = !DILocation(line: 786, column: 96, scope: !9498, inlinedAt: !9501)
!10248 = !DILocation(line: 786, column: 14, scope: !9498, inlinedAt: !9501)
!10249 = !DILocation(line: 788, column: 64, scope: !9721, inlinedAt: !9501)
!10250 = !DILocation(line: 788, column: 74, scope: !9721, inlinedAt: !9501)
!10251 = !DILocation(line: 788, column: 54, scope: !9721, inlinedAt: !9501)
!10252 = !DILocation(line: 788, column: 52, scope: !9721, inlinedAt: !9501)
!10253 = !DILocation(line: 788, column: 94, scope: !9721, inlinedAt: !9501)
!10254 = !DILocation(line: 788, column: 88, scope: !9721, inlinedAt: !9501)
!10255 = !DILocation(line: 788, column: 86, scope: !9721, inlinedAt: !9501)
!10256 = !DILocation(line: 788, column: 115, scope: !9721, inlinedAt: !9501)
!10257 = !DILocation(line: 788, column: 109, scope: !9721, inlinedAt: !9501)
!10258 = !DILocation(line: 788, column: 107, scope: !9721, inlinedAt: !9501)
!10259 = !DILocation(line: 788, column: 130, scope: !9721, inlinedAt: !9501)
!10260 = !DILocation(line: 788, column: 140, scope: !9721, inlinedAt: !9501)
!10261 = !DILocation(line: 788, column: 144, scope: !9721, inlinedAt: !9501)
!10262 = !DILocation(line: 788, column: 147, scope: !9735, inlinedAt: !9501)
!10263 = !DILocation(line: 788, column: 149, scope: !9735, inlinedAt: !9501)
!10264 = !DILocation(line: 788, column: 130, scope: !9735, inlinedAt: !9501)
!10265 = !DILocation(line: 788, column: 169, scope: !9739, inlinedAt: !9501)
!10266 = !DILocation(line: 788, column: 187, scope: !9739, inlinedAt: !9501)
!10267 = !DILocation(line: 788, column: 199, scope: !9739, inlinedAt: !9501)
!10268 = !DILocation(line: 788, column: 196, scope: !9739, inlinedAt: !9501)
!10269 = !DILocation(line: 788, column: 184, scope: !9739, inlinedAt: !9501)
!10270 = !DILocation(line: 788, column: 168, scope: !9739, inlinedAt: !9501)
!10271 = !DILocation(line: 788, column: 209, scope: !9746, inlinedAt: !9501)
!10272 = !DILocation(line: 788, column: 221, scope: !9746, inlinedAt: !9501)
!10273 = !DILocation(line: 788, column: 218, scope: !9746, inlinedAt: !9501)
!10274 = !DILocation(line: 788, column: 168, scope: !9746, inlinedAt: !9501)
!10275 = !DILocation(line: 788, column: 231, scope: !9751, inlinedAt: !9501)
!10276 = !DILocation(line: 788, column: 168, scope: !9751, inlinedAt: !9501)
!10277 = !DILocation(line: 788, column: 168, scope: !9517, inlinedAt: !9501)
!10278 = !DILocation(line: 788, column: 165, scope: !9517, inlinedAt: !9501)
!10279 = !DILocation(line: 788, column: 303, scope: !9517, inlinedAt: !9501)
!10280 = !DILocation(line: 788, column: 307, scope: !9517, inlinedAt: !9501)
!10281 = !DILocation(line: 788, column: 317, scope: !9517, inlinedAt: !9501)
!10282 = !DILocation(line: 788, column: 326, scope: !9517, inlinedAt: !9501)
!10283 = !DILocation(line: 788, column: 314, scope: !9517, inlinedAt: !9501)
!10284 = !DILocation(line: 788, column: 335, scope: !9517, inlinedAt: !9501)
!10285 = !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !9501)
!10286 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9516)
!10287 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9516)
!10288 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9516)
!10289 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9516)
!10290 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9516)
!10291 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9516)
!10292 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9516)
!10293 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9516)
!10294 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9516)
!10295 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9516)
!10296 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9516)
!10297 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9516)
!10298 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9516)
!10299 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9516)
!10300 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9516)
!10301 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9516)
!10302 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9516)
!10303 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9516)
!10304 = !DILocation(line: 788, column: 343, scope: !9517, inlinedAt: !9501)
!10305 = !DILocation(line: 788, column: 352, scope: !9517, inlinedAt: !9501)
!10306 = !DILocation(line: 788, column: 339, scope: !9517, inlinedAt: !9501)
!10307 = !DILocation(line: 788, column: 257, scope: !9517, inlinedAt: !9501)
!10308 = !DILocation(line: 788, column: 369, scope: !9517, inlinedAt: !9501)
!10309 = !DILocation(line: 788, column: 368, scope: !9517, inlinedAt: !9501)
!10310 = !DILocation(line: 788, column: 366, scope: !9517, inlinedAt: !9501)
!10311 = !DILocation(line: 788, column: 390, scope: !9517, inlinedAt: !9501)
!10312 = !DILocation(line: 788, column: 400, scope: !9517, inlinedAt: !9501)
!10313 = !DILocation(line: 788, column: 380, scope: !9790, inlinedAt: !9501)
!10314 = !DILocation(line: 788, column: 411, scope: !9517, inlinedAt: !9501)
!10315 = !DILocation(line: 788, column: 409, scope: !9517, inlinedAt: !9501)
!10316 = !DILocation(line: 788, column: 378, scope: !9517, inlinedAt: !9501)
!10317 = !DILocation(line: 788, column: 430, scope: !9517, inlinedAt: !9501)
!10318 = !DILocation(line: 788, column: 424, scope: !9517, inlinedAt: !9501)
!10319 = !DILocation(line: 788, column: 422, scope: !9517, inlinedAt: !9501)
!10320 = !DILocation(line: 788, column: 451, scope: !9517, inlinedAt: !9501)
!10321 = !DILocation(line: 788, column: 445, scope: !9517, inlinedAt: !9501)
!10322 = !DILocation(line: 788, column: 443, scope: !9517, inlinedAt: !9501)
!10323 = !DILocation(line: 788, column: 466, scope: !9517, inlinedAt: !9501)
!10324 = !DILocation(line: 788, column: 476, scope: !9517, inlinedAt: !9501)
!10325 = !DILocation(line: 788, column: 480, scope: !9517, inlinedAt: !9501)
!10326 = !DILocation(line: 788, column: 483, scope: !9804, inlinedAt: !9501)
!10327 = !DILocation(line: 788, column: 485, scope: !9804, inlinedAt: !9501)
!10328 = !DILocation(line: 788, column: 466, scope: !9804, inlinedAt: !9501)
!10329 = !DILocation(line: 788, column: 505, scope: !9808, inlinedAt: !9501)
!10330 = !DILocation(line: 788, column: 523, scope: !9808, inlinedAt: !9501)
!10331 = !DILocation(line: 788, column: 535, scope: !9808, inlinedAt: !9501)
!10332 = !DILocation(line: 788, column: 532, scope: !9808, inlinedAt: !9501)
!10333 = !DILocation(line: 788, column: 520, scope: !9808, inlinedAt: !9501)
!10334 = !DILocation(line: 788, column: 504, scope: !9808, inlinedAt: !9501)
!10335 = !DILocation(line: 788, column: 548, scope: !9815, inlinedAt: !9501)
!10336 = !DILocation(line: 788, column: 560, scope: !9815, inlinedAt: !9501)
!10337 = !DILocation(line: 788, column: 557, scope: !9815, inlinedAt: !9501)
!10338 = !DILocation(line: 788, column: 504, scope: !9815, inlinedAt: !9501)
!10339 = !DILocation(line: 788, column: 573, scope: !9820, inlinedAt: !9501)
!10340 = !DILocation(line: 788, column: 504, scope: !9820, inlinedAt: !9501)
!10341 = !DILocation(line: 788, column: 504, scope: !9492, inlinedAt: !9501)
!10342 = !DILocation(line: 788, column: 501, scope: !9492, inlinedAt: !9501)
!10343 = !DILocation(line: 788, column: 645, scope: !9492, inlinedAt: !9501)
!10344 = !DILocation(line: 788, column: 649, scope: !9492, inlinedAt: !9501)
!10345 = !DILocation(line: 788, column: 659, scope: !9492, inlinedAt: !9501)
!10346 = !DILocation(line: 788, column: 668, scope: !9492, inlinedAt: !9501)
!10347 = !DILocation(line: 788, column: 656, scope: !9492, inlinedAt: !9501)
!10348 = !DILocation(line: 788, column: 677, scope: !9492, inlinedAt: !9501)
!10349 = !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !9501)
!10350 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !9491)
!10351 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !9491)
!10352 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !9491)
!10353 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !9491)
!10354 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !9491)
!10355 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !9491)
!10356 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !9491)
!10357 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !9491)
!10358 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !9491)
!10359 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !9491)
!10360 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !9491)
!10361 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !9491)
!10362 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !9491)
!10363 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !9491)
!10364 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !9491)
!10365 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !9491)
!10366 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !9491)
!10367 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !9491)
!10368 = !DILocation(line: 788, column: 685, scope: !9492, inlinedAt: !9501)
!10369 = !DILocation(line: 788, column: 694, scope: !9492, inlinedAt: !9501)
!10370 = !DILocation(line: 788, column: 681, scope: !9492, inlinedAt: !9501)
!10371 = !DILocation(line: 788, column: 599, scope: !9492, inlinedAt: !9501)
!10372 = !DILocation(line: 788, column: 711, scope: !9492, inlinedAt: !9501)
!10373 = !DILocation(line: 788, column: 710, scope: !9492, inlinedAt: !9501)
!10374 = !DILocation(line: 788, column: 708, scope: !9492, inlinedAt: !9501)
!10375 = !DILocation(line: 788, column: 732, scope: !9492, inlinedAt: !9501)
!10376 = !DILocation(line: 788, column: 742, scope: !9492, inlinedAt: !9501)
!10377 = !DILocation(line: 788, column: 722, scope: !9859, inlinedAt: !9501)
!10378 = !DILocation(line: 788, column: 753, scope: !9492, inlinedAt: !9501)
!10379 = !DILocation(line: 788, column: 751, scope: !9492, inlinedAt: !9501)
!10380 = !DILocation(line: 788, column: 720, scope: !9492, inlinedAt: !9501)
!10381 = !DILocation(line: 788, column: 772, scope: !9492, inlinedAt: !9501)
!10382 = !DILocation(line: 788, column: 766, scope: !9492, inlinedAt: !9501)
!10383 = !DILocation(line: 788, column: 764, scope: !9492, inlinedAt: !9501)
!10384 = !DILocation(line: 788, column: 793, scope: !9492, inlinedAt: !9501)
!10385 = !DILocation(line: 788, column: 787, scope: !9492, inlinedAt: !9501)
!10386 = !DILocation(line: 788, column: 785, scope: !9492, inlinedAt: !9501)
!10387 = !DILocation(line: 788, column: 804, scope: !9492, inlinedAt: !9501)
!10388 = !DILocation(line: 788, column: 806, scope: !9871, inlinedAt: !9501)
!10389 = !DILocation(line: 788, column: 827, scope: !9873, inlinedAt: !9501)
!10390 = !DILocation(line: 788, column: 822, scope: !9873, inlinedAt: !9501)
!10391 = !DILocation(line: 788, column: 844, scope: !9873, inlinedAt: !9501)
!10392 = !DILocation(line: 788, column: 862, scope: !9873, inlinedAt: !9501)
!10393 = !DILocation(line: 788, column: 874, scope: !9873, inlinedAt: !9501)
!10394 = !DILocation(line: 788, column: 871, scope: !9873, inlinedAt: !9501)
!10395 = !DILocation(line: 788, column: 859, scope: !9873, inlinedAt: !9501)
!10396 = !DILocation(line: 788, column: 843, scope: !9873, inlinedAt: !9501)
!10397 = !DILocation(line: 788, column: 881, scope: !9883, inlinedAt: !9501)
!10398 = !DILocation(line: 788, column: 893, scope: !9883, inlinedAt: !9501)
!10399 = !DILocation(line: 788, column: 890, scope: !9883, inlinedAt: !9501)
!10400 = !DILocation(line: 788, column: 843, scope: !9883, inlinedAt: !9501)
!10401 = !DILocation(line: 788, column: 900, scope: !9888, inlinedAt: !9501)
!10402 = !DILocation(line: 788, column: 843, scope: !9888, inlinedAt: !9501)
!10403 = !DILocation(line: 788, column: 843, scope: !9891, inlinedAt: !9501)
!10404 = !DILocation(line: 788, column: 840, scope: !9891, inlinedAt: !9501)
!10405 = !DILocation(line: 790, column: 18, scope: !9498, inlinedAt: !9501)
!10406 = !DILocation(line: 790, column: 6, scope: !9498, inlinedAt: !9501)
!10407 = !DILocation(line: 790, column: 10, scope: !9498, inlinedAt: !9501)
!10408 = !DILocation(line: 790, column: 16, scope: !9498, inlinedAt: !9501)
!10409 = !DILocation(line: 792, column: 12, scope: !9498, inlinedAt: !9501)
!10410 = !DILocation(line: 1530, column: 77, scope: !9502)
!10411 = !DILocation(line: 1530, column: 21, scope: !9502)
!10412 = !DILocation(line: 1530, column: 31, scope: !9502)
!10413 = !DILocation(line: 1531, column: 25, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !9502, file: !1803, line: 1531, column: 25)
!10415 = !DILocation(line: 1531, column: 35, scope: !10414)
!10416 = !DILocation(line: 1531, column: 25, scope: !9502)
!10417 = !DILocation(line: 1532, column: 32, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10414, file: !1803, line: 1531, column: 43)
!10419 = !DILocation(line: 1532, column: 36, scope: !10418)
!10420 = !DILocation(line: 1533, column: 68, scope: !10418)
!10421 = !DILocation(line: 1532, column: 25, scope: !10418)
!10422 = !DILocation(line: 1534, column: 25, scope: !10418)
!10423 = !DILocation(line: 1539, column: 50, scope: !9502)
!10424 = !DILocation(line: 1539, column: 60, scope: !9502)
!10425 = !DILocation(line: 1539, column: 66, scope: !9502)
!10426 = !DILocation(line: 1539, column: 32, scope: !9502)
!10427 = !DILocation(line: 1539, column: 31, scope: !9502)
!10428 = !DILocation(line: 1539, column: 24, scope: !9502)
!10429 = !DILocation(line: 1539, column: 21, scope: !9502)
!10430 = !DILocation(line: 1539, column: 29, scope: !9502)
!10431 = !DILocation(line: 1541, column: 17, scope: !9502)
!10432 = !DILocation(line: 1529, column: 38, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !9503, file: !1803, discriminator: 2)
!10434 = !DILocation(line: 1529, column: 45, scope: !10433)
!10435 = !DILocation(line: 1529, column: 17, scope: !10433)
!10436 = distinct !{!10436, !10207}
!10437 = !DILocation(line: 1487, column: 9, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !9510, file: !1803, discriminator: 2)
!10439 = distinct !{!10439, !10440}
!10440 = !DILocation(line: 1487, column: 9, scope: !9512)
!10441 = !DILocation(line: 1544, column: 5, scope: !9512)
!10442 = !DILocation(line: 1486, column: 46, scope: !10443)
!10443 = !DILexicalBlockFile(scope: !9513, file: !1803, discriminator: 2)
!10444 = !DILocation(line: 1486, column: 5, scope: !10443)
!10445 = distinct !{!10445, !10446}
!10446 = !DILocation(line: 1486, column: 5, scope: !9487)
!10447 = !DILocation(line: 1545, column: 5, scope: !9487)
!10448 = !DILocation(line: 1546, column: 1, scope: !9487)
!10449 = distinct !DISubprogram(name: "decode_pulses", scope: !1803, file: !1803, line: 1551, type: !10450, isLocal: true, isDefinition: true, scopeLine: 1553, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!1012, !10452, !2043, !1943, !1012}
!10452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64, align: 64)
!10453 = !DILocalVariable(name: "pulse", arg: 1, scope: !10449, file: !1803, line: 1551, type: !10452)
!10454 = !DILocation(line: 1551, column: 33, scope: !10449)
!10455 = !DILocalVariable(name: "gb", arg: 2, scope: !10449, file: !1803, line: 1551, type: !2043)
!10456 = !DILocation(line: 1551, column: 55, scope: !10449)
!10457 = !DILocalVariable(name: "swb_offset", arg: 3, scope: !10449, file: !1803, line: 1552, type: !1943)
!10458 = !DILocation(line: 1552, column: 42, scope: !10449)
!10459 = !DILocalVariable(name: "num_swb", arg: 4, scope: !10449, file: !1803, line: 1552, type: !1012)
!10460 = !DILocation(line: 1552, column: 58, scope: !10449)
!10461 = !DILocalVariable(name: "i", scope: !10449, file: !1803, line: 1554, type: !1012)
!10462 = !DILocation(line: 1554, column: 9, scope: !10449)
!10463 = !DILocalVariable(name: "pulse_swb", scope: !10449, file: !1803, line: 1554, type: !1012)
!10464 = !DILocation(line: 1554, column: 12, scope: !10449)
!10465 = !DILocation(line: 1555, column: 33, scope: !10449)
!10466 = !DILocation(line: 1555, column: 24, scope: !10449)
!10467 = !DILocation(line: 1555, column: 40, scope: !10449)
!10468 = !DILocation(line: 1555, column: 5, scope: !10449)
!10469 = !DILocation(line: 1555, column: 12, scope: !10449)
!10470 = !DILocation(line: 1555, column: 22, scope: !10449)
!10471 = !DILocation(line: 1556, column: 26, scope: !10449)
!10472 = !DILocation(line: 1556, column: 17, scope: !10449)
!10473 = !DILocation(line: 1556, column: 15, scope: !10449)
!10474 = !DILocation(line: 1557, column: 9, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10449, file: !1803, line: 1557, column: 9)
!10476 = !DILocation(line: 1557, column: 22, scope: !10475)
!10477 = !DILocation(line: 1557, column: 19, scope: !10475)
!10478 = !DILocation(line: 1557, column: 9, scope: !10449)
!10479 = !DILocation(line: 1558, column: 9, scope: !10475)
!10480 = !DILocation(line: 1559, column: 32, scope: !10449)
!10481 = !DILocation(line: 1559, column: 21, scope: !10449)
!10482 = !DILocation(line: 1559, column: 5, scope: !10449)
!10483 = !DILocation(line: 1559, column: 12, scope: !10449)
!10484 = !DILocation(line: 1559, column: 19, scope: !10449)
!10485 = !DILocation(line: 1560, column: 31, scope: !10449)
!10486 = !DILocation(line: 1560, column: 22, scope: !10449)
!10487 = !DILocation(line: 1560, column: 5, scope: !10449)
!10488 = !DILocation(line: 1560, column: 12, scope: !10449)
!10489 = !DILocation(line: 1560, column: 19, scope: !10449)
!10490 = !DILocation(line: 1561, column: 9, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10449, file: !1803, line: 1561, column: 9)
!10492 = !DILocation(line: 1561, column: 16, scope: !10491)
!10493 = !DILocation(line: 1561, column: 37, scope: !10491)
!10494 = !DILocation(line: 1561, column: 26, scope: !10491)
!10495 = !DILocation(line: 1561, column: 23, scope: !10491)
!10496 = !DILocation(line: 1561, column: 9, scope: !10449)
!10497 = !DILocation(line: 1562, column: 9, scope: !10491)
!10498 = !DILocation(line: 1563, column: 30, scope: !10449)
!10499 = !DILocation(line: 1563, column: 21, scope: !10449)
!10500 = !DILocation(line: 1563, column: 5, scope: !10449)
!10501 = !DILocation(line: 1563, column: 12, scope: !10449)
!10502 = !DILocation(line: 1563, column: 19, scope: !10449)
!10503 = !DILocation(line: 1564, column: 12, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10449, file: !1803, line: 1564, column: 5)
!10505 = !DILocation(line: 1564, column: 10, scope: !10504)
!10506 = !DILocation(line: 1564, column: 17, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !10508, file: !1803, discriminator: 1)
!10508 = distinct !DILexicalBlock(scope: !10504, file: !1803, line: 1564, column: 5)
!10509 = !DILocation(line: 1564, column: 21, scope: !10507)
!10510 = !DILocation(line: 1564, column: 28, scope: !10507)
!10511 = !DILocation(line: 1564, column: 19, scope: !10507)
!10512 = !DILocation(line: 1564, column: 5, scope: !10507)
!10513 = !DILocation(line: 1565, column: 34, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10508, file: !1803, line: 1564, column: 44)
!10515 = !DILocation(line: 1565, column: 25, scope: !10514)
!10516 = !DILocation(line: 1565, column: 54, scope: !10514)
!10517 = !DILocation(line: 1565, column: 56, scope: !10514)
!10518 = !DILocation(line: 1565, column: 43, scope: !10514)
!10519 = !DILocation(line: 1565, column: 50, scope: !10514)
!10520 = !DILocation(line: 1565, column: 41, scope: !10514)
!10521 = !DILocation(line: 1565, column: 20, scope: !10514)
!10522 = !DILocation(line: 1565, column: 9, scope: !10514)
!10523 = !DILocation(line: 1565, column: 16, scope: !10514)
!10524 = !DILocation(line: 1565, column: 23, scope: !10514)
!10525 = !DILocation(line: 1566, column: 24, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10514, file: !1803, line: 1566, column: 13)
!10527 = !DILocation(line: 1566, column: 13, scope: !10526)
!10528 = !DILocation(line: 1566, column: 20, scope: !10526)
!10529 = !DILocation(line: 1566, column: 41, scope: !10526)
!10530 = !DILocation(line: 1566, column: 30, scope: !10526)
!10531 = !DILocation(line: 1566, column: 27, scope: !10526)
!10532 = !DILocation(line: 1566, column: 13, scope: !10514)
!10533 = !DILocation(line: 1567, column: 13, scope: !10526)
!10534 = !DILocation(line: 1568, column: 34, scope: !10514)
!10535 = !DILocation(line: 1568, column: 25, scope: !10514)
!10536 = !DILocation(line: 1568, column: 20, scope: !10514)
!10537 = !DILocation(line: 1568, column: 9, scope: !10514)
!10538 = !DILocation(line: 1568, column: 16, scope: !10514)
!10539 = !DILocation(line: 1568, column: 23, scope: !10514)
!10540 = !DILocation(line: 1569, column: 5, scope: !10514)
!10541 = !DILocation(line: 1564, column: 40, scope: !10542)
!10542 = !DILexicalBlockFile(scope: !10508, file: !1803, discriminator: 2)
!10543 = !DILocation(line: 1564, column: 5, scope: !10542)
!10544 = distinct !{!10544, !10545}
!10545 = !DILocation(line: 1564, column: 5, scope: !10449)
!10546 = !DILocation(line: 1570, column: 5, scope: !10449)
!10547 = !DILocation(line: 1571, column: 1, scope: !10449)
!10548 = distinct !DISubprogram(name: "decode_tns", scope: !1803, file: !1803, line: 1578, type: !10549, isLocal: true, isDefinition: true, scopeLine: 1580, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{!1012, !2065, !2648, !2043, !10551}
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10552, size: 64, align: 64)
!10552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1919)
!10553 = !DILocalVariable(name: "ac", arg: 1, scope: !10548, file: !1803, line: 1578, type: !2065)
!10554 = !DILocation(line: 1578, column: 35, scope: !10548)
!10555 = !DILocalVariable(name: "tns", arg: 2, scope: !10548, file: !1803, line: 1578, type: !2648)
!10556 = !DILocation(line: 1578, column: 61, scope: !10548)
!10557 = !DILocalVariable(name: "gb", arg: 3, scope: !10548, file: !1803, line: 1579, type: !2043)
!10558 = !DILocation(line: 1579, column: 38, scope: !10548)
!10559 = !DILocalVariable(name: "ics", arg: 4, scope: !10548, file: !1803, line: 1579, type: !10551)
!10560 = !DILocation(line: 1579, column: 73, scope: !10548)
!10561 = !DILocalVariable(name: "w", scope: !10548, file: !1803, line: 1581, type: !1012)
!10562 = !DILocation(line: 1581, column: 9, scope: !10548)
!10563 = !DILocalVariable(name: "filt", scope: !10548, file: !1803, line: 1581, type: !1012)
!10564 = !DILocation(line: 1581, column: 12, scope: !10548)
!10565 = !DILocalVariable(name: "i", scope: !10548, file: !1803, line: 1581, type: !1012)
!10566 = !DILocation(line: 1581, column: 18, scope: !10548)
!10567 = !DILocalVariable(name: "coef_len", scope: !10548, file: !1803, line: 1581, type: !1012)
!10568 = !DILocation(line: 1581, column: 21, scope: !10548)
!10569 = !DILocalVariable(name: "coef_res", scope: !10548, file: !1803, line: 1581, type: !1012)
!10570 = !DILocation(line: 1581, column: 31, scope: !10548)
!10571 = !DILocalVariable(name: "coef_compress", scope: !10548, file: !1803, line: 1581, type: !1012)
!10572 = !DILocation(line: 1581, column: 41, scope: !10548)
!10573 = !DILocalVariable(name: "is8", scope: !10548, file: !1803, line: 1582, type: !1165)
!10574 = !DILocation(line: 1582, column: 15, scope: !10548)
!10575 = !DILocation(line: 1582, column: 21, scope: !10548)
!10576 = !DILocation(line: 1582, column: 26, scope: !10548)
!10577 = !DILocation(line: 1582, column: 45, scope: !10548)
!10578 = !DILocalVariable(name: "tns_max_order", scope: !10548, file: !1803, line: 1583, type: !1165)
!10579 = !DILocation(line: 1583, column: 15, scope: !10548)
!10580 = !DILocation(line: 1583, column: 31, scope: !10548)
!10581 = !DILocation(line: 1583, column: 31, scope: !10582)
!10582 = !DILexicalBlockFile(scope: !10548, file: !1803, discriminator: 1)
!10583 = !DILocation(line: 1583, column: 41, scope: !10584)
!10584 = !DILexicalBlockFile(scope: !10548, file: !1803, discriminator: 2)
!10585 = !DILocation(line: 1583, column: 45, scope: !10584)
!10586 = !DILocation(line: 1583, column: 51, scope: !10584)
!10587 = !DILocation(line: 1583, column: 56, scope: !10584)
!10588 = !DILocation(line: 1583, column: 68, scope: !10584)
!10589 = !DILocation(line: 1583, column: 31, scope: !10584)
!10590 = !DILocation(line: 1583, column: 31, scope: !10591)
!10591 = !DILexicalBlockFile(scope: !10548, file: !1803, discriminator: 3)
!10592 = !DILocation(line: 1583, column: 15, scope: !10591)
!10593 = !DILocation(line: 1584, column: 12, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10548, file: !1803, line: 1584, column: 5)
!10595 = !DILocation(line: 1584, column: 10, scope: !10594)
!10596 = !DILocation(line: 1584, column: 17, scope: !10597)
!10597 = !DILexicalBlockFile(scope: !10598, file: !1803, discriminator: 1)
!10598 = distinct !DILexicalBlock(scope: !10594, file: !1803, line: 1584, column: 5)
!10599 = !DILocation(line: 1584, column: 21, scope: !10597)
!10600 = !DILocation(line: 1584, column: 26, scope: !10597)
!10601 = !DILocation(line: 1584, column: 19, scope: !10597)
!10602 = !DILocation(line: 1584, column: 5, scope: !10597)
!10603 = !DILocation(line: 1585, column: 40, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !1803, line: 1585, column: 13)
!10605 = distinct !DILexicalBlock(scope: !10598, file: !1803, line: 1584, column: 44)
!10606 = !DILocation(line: 1585, column: 48, scope: !10604)
!10607 = !DILocation(line: 1585, column: 46, scope: !10604)
!10608 = !DILocation(line: 1585, column: 31, scope: !10604)
!10609 = !DILocation(line: 1585, column: 26, scope: !10604)
!10610 = !DILocation(line: 1585, column: 14, scope: !10604)
!10611 = !DILocation(line: 1585, column: 19, scope: !10604)
!10612 = !DILocation(line: 1585, column: 29, scope: !10604)
!10613 = !DILocation(line: 1585, column: 13, scope: !10605)
!10614 = !DILocation(line: 1586, column: 34, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10604, file: !1803, line: 1585, column: 55)
!10616 = !DILocation(line: 1586, column: 24, scope: !10615)
!10617 = !DILocation(line: 1586, column: 22, scope: !10615)
!10618 = !DILocation(line: 1588, column: 23, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !1803, line: 1588, column: 13)
!10620 = !DILocation(line: 1588, column: 18, scope: !10619)
!10621 = !DILocation(line: 1588, column: 28, scope: !10622)
!10622 = !DILexicalBlockFile(scope: !10623, file: !1803, discriminator: 1)
!10623 = distinct !DILexicalBlock(scope: !10619, file: !1803, line: 1588, column: 13)
!10624 = !DILocation(line: 1588, column: 47, scope: !10622)
!10625 = !DILocation(line: 1588, column: 35, scope: !10622)
!10626 = !DILocation(line: 1588, column: 40, scope: !10622)
!10627 = !DILocation(line: 1588, column: 33, scope: !10622)
!10628 = !DILocation(line: 1588, column: 13, scope: !10622)
!10629 = !DILocalVariable(name: "tmp2_idx", scope: !10630, file: !1803, line: 1589, type: !1012)
!10630 = distinct !DILexicalBlock(scope: !10623, file: !1803, line: 1588, column: 59)
!10631 = !DILocation(line: 1589, column: 21, scope: !10630)
!10632 = !DILocation(line: 1590, column: 49, scope: !10630)
!10633 = !DILocation(line: 1590, column: 61, scope: !10630)
!10634 = !DILocation(line: 1590, column: 59, scope: !10630)
!10635 = !DILocation(line: 1590, column: 55, scope: !10630)
!10636 = !DILocation(line: 1590, column: 40, scope: !10630)
!10637 = !DILocation(line: 1590, column: 32, scope: !10630)
!10638 = !DILocation(line: 1590, column: 17, scope: !10630)
!10639 = !DILocation(line: 1590, column: 29, scope: !10630)
!10640 = !DILocation(line: 1590, column: 22, scope: !10630)
!10641 = !DILocation(line: 1590, column: 38, scope: !10630)
!10642 = !DILocation(line: 1592, column: 53, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10630, file: !1803, line: 1592, column: 21)
!10644 = !DILocation(line: 1592, column: 65, scope: !10643)
!10645 = !DILocation(line: 1592, column: 63, scope: !10643)
!10646 = !DILocation(line: 1592, column: 59, scope: !10643)
!10647 = !DILocation(line: 1592, column: 44, scope: !10643)
!10648 = !DILocation(line: 1592, column: 36, scope: !10643)
!10649 = !DILocation(line: 1592, column: 22, scope: !10643)
!10650 = !DILocation(line: 1592, column: 33, scope: !10643)
!10651 = !DILocation(line: 1592, column: 27, scope: !10643)
!10652 = !DILocation(line: 1592, column: 42, scope: !10643)
!10653 = !DILocation(line: 1592, column: 73, scope: !10643)
!10654 = !DILocation(line: 1592, column: 71, scope: !10643)
!10655 = !DILocation(line: 1592, column: 21, scope: !10630)
!10656 = !DILocation(line: 1593, column: 28, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10643, file: !1803, line: 1592, column: 88)
!10658 = !DILocation(line: 1593, column: 32, scope: !10657)
!10659 = !DILocation(line: 1595, column: 42, scope: !10657)
!10660 = !DILocation(line: 1595, column: 28, scope: !10657)
!10661 = !DILocation(line: 1595, column: 39, scope: !10657)
!10662 = !DILocation(line: 1595, column: 33, scope: !10657)
!10663 = !DILocation(line: 1595, column: 49, scope: !10657)
!10664 = !DILocation(line: 1593, column: 21, scope: !10657)
!10665 = !DILocation(line: 1596, column: 35, scope: !10657)
!10666 = !DILocation(line: 1596, column: 21, scope: !10657)
!10667 = !DILocation(line: 1596, column: 32, scope: !10657)
!10668 = !DILocation(line: 1596, column: 26, scope: !10657)
!10669 = !DILocation(line: 1596, column: 41, scope: !10657)
!10670 = !DILocation(line: 1597, column: 21, scope: !10657)
!10671 = !DILocation(line: 1599, column: 35, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10630, file: !1803, line: 1599, column: 21)
!10673 = !DILocation(line: 1599, column: 21, scope: !10672)
!10674 = !DILocation(line: 1599, column: 32, scope: !10672)
!10675 = !DILocation(line: 1599, column: 26, scope: !10672)
!10676 = !DILocation(line: 1599, column: 21, scope: !10630)
!10677 = !DILocation(line: 1600, column: 57, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10672, file: !1803, line: 1599, column: 42)
!10679 = !DILocation(line: 1600, column: 47, scope: !10678)
!10680 = !DILocation(line: 1600, column: 39, scope: !10678)
!10681 = !DILocation(line: 1600, column: 21, scope: !10678)
!10682 = !DILocation(line: 1600, column: 36, scope: !10678)
!10683 = !DILocation(line: 1600, column: 26, scope: !10678)
!10684 = !DILocation(line: 1600, column: 45, scope: !10678)
!10685 = !DILocation(line: 1601, column: 47, scope: !10678)
!10686 = !DILocation(line: 1601, column: 37, scope: !10678)
!10687 = !DILocation(line: 1601, column: 35, scope: !10678)
!10688 = !DILocation(line: 1602, column: 32, scope: !10678)
!10689 = !DILocation(line: 1602, column: 41, scope: !10678)
!10690 = !DILocation(line: 1602, column: 47, scope: !10678)
!10691 = !DILocation(line: 1602, column: 45, scope: !10678)
!10692 = !DILocation(line: 1602, column: 30, scope: !10678)
!10693 = !DILocation(line: 1603, column: 36, scope: !10678)
!10694 = !DILocation(line: 1603, column: 34, scope: !10678)
!10695 = !DILocation(line: 1603, column: 52, scope: !10678)
!10696 = !DILocation(line: 1603, column: 50, scope: !10678)
!10697 = !DILocation(line: 1603, column: 30, scope: !10678)
!10698 = !DILocation(line: 1605, column: 28, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10678, file: !1803, line: 1605, column: 21)
!10700 = !DILocation(line: 1605, column: 26, scope: !10699)
!10701 = !DILocation(line: 1605, column: 33, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10703, file: !1803, discriminator: 1)
!10703 = distinct !DILexicalBlock(scope: !10699, file: !1803, line: 1605, column: 21)
!10704 = !DILocation(line: 1605, column: 51, scope: !10702)
!10705 = !DILocation(line: 1605, column: 37, scope: !10702)
!10706 = !DILocation(line: 1605, column: 48, scope: !10702)
!10707 = !DILocation(line: 1605, column: 42, scope: !10702)
!10708 = !DILocation(line: 1605, column: 35, scope: !10702)
!10709 = !DILocation(line: 1605, column: 21, scope: !10702)
!10710 = !DILocation(line: 1606, column: 81, scope: !10703)
!10711 = !DILocation(line: 1606, column: 85, scope: !10703)
!10712 = !DILocation(line: 1606, column: 72, scope: !10703)
!10713 = !DILocation(line: 1606, column: 49, scope: !10703)
!10714 = !DILocation(line: 1606, column: 62, scope: !10703)
!10715 = !DILocation(line: 1606, column: 44, scope: !10703)
!10716 = !DILocation(line: 1606, column: 25, scope: !10703)
!10717 = !DILocation(line: 1606, column: 38, scope: !10703)
!10718 = !DILocation(line: 1606, column: 35, scope: !10703)
!10719 = !DILocation(line: 1606, column: 30, scope: !10703)
!10720 = !DILocation(line: 1606, column: 47, scope: !10703)
!10721 = !DILocation(line: 1605, column: 59, scope: !10722)
!10722 = !DILexicalBlockFile(scope: !10703, file: !1803, discriminator: 2)
!10723 = !DILocation(line: 1605, column: 21, scope: !10722)
!10724 = distinct !{!10724, !10725}
!10725 = !DILocation(line: 1605, column: 21, scope: !10678)
!10726 = !DILocation(line: 1607, column: 17, scope: !10678)
!10727 = !DILocation(line: 1608, column: 13, scope: !10630)
!10728 = !DILocation(line: 1588, column: 55, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10623, file: !1803, discriminator: 2)
!10730 = !DILocation(line: 1588, column: 13, scope: !10729)
!10731 = distinct !{!10731, !10732}
!10732 = !DILocation(line: 1588, column: 13, scope: !10615)
!10733 = !DILocation(line: 1609, column: 9, scope: !10615)
!10734 = !DILocation(line: 1610, column: 5, scope: !10605)
!10735 = !DILocation(line: 1584, column: 40, scope: !10736)
!10736 = !DILexicalBlockFile(scope: !10598, file: !1803, discriminator: 2)
!10737 = !DILocation(line: 1584, column: 5, scope: !10736)
!10738 = distinct !{!10738, !10739}
!10739 = !DILocation(line: 1584, column: 5, scope: !10548)
!10740 = !DILocation(line: 1611, column: 5, scope: !10548)
!10741 = !DILocation(line: 1612, column: 1, scope: !10548)
!10742 = !DILocalVariable(name: "sce", arg: 1, scope: !1911, file: !1803, line: 1971, type: !1914)
!10743 = !DILocation(line: 1971, column: 56, scope: !1911)
!10744 = !DILocalVariable(name: "gb", arg: 2, scope: !1911, file: !1803, line: 1971, type: !2043)
!10745 = !DILocation(line: 1971, column: 77, scope: !1911)
!10746 = !DILocalVariable(name: "mode", scope: !1911, file: !1803, line: 1981, type: !1165)
!10747 = !DILocation(line: 1981, column: 15, scope: !1911)
!10748 = !DILocation(line: 1981, column: 22, scope: !1911)
!10749 = !DILocation(line: 1981, column: 27, scope: !1911)
!10750 = !DILocation(line: 1981, column: 31, scope: !1911)
!10751 = !DILocalVariable(name: "bd", scope: !1911, file: !1803, line: 1982, type: !1029)
!10752 = !DILocation(line: 1982, column: 13, scope: !1911)
!10753 = !DILocalVariable(name: "wd", scope: !1911, file: !1803, line: 1982, type: !1029)
!10754 = !DILocation(line: 1982, column: 17, scope: !1911)
!10755 = !DILocalVariable(name: "ad", scope: !1911, file: !1803, line: 1982, type: !1029)
!10756 = !DILocation(line: 1982, column: 21, scope: !1911)
!10757 = !DILocalVariable(name: "max_band", scope: !1911, file: !1803, line: 1985, type: !1029)
!10758 = !DILocation(line: 1985, column: 13, scope: !1911)
!10759 = !DILocation(line: 1985, column: 33, scope: !1911)
!10760 = !DILocation(line: 1985, column: 24, scope: !1911)
!10761 = !DILocation(line: 1986, column: 13, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !1911, file: !1803, line: 1986, column: 5)
!10763 = !DILocation(line: 1986, column: 10, scope: !10762)
!10764 = !DILocation(line: 1986, column: 18, scope: !10765)
!10765 = !DILexicalBlockFile(scope: !10766, file: !1803, discriminator: 1)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !1803, line: 1986, column: 5)
!10767 = !DILocation(line: 1986, column: 23, scope: !10765)
!10768 = !DILocation(line: 1986, column: 21, scope: !10765)
!10769 = !DILocation(line: 1986, column: 5, scope: !10765)
!10770 = !DILocation(line: 1987, column: 17, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !1803, line: 1987, column: 9)
!10772 = distinct !DILexicalBlock(scope: !10766, file: !1803, line: 1986, column: 39)
!10773 = !DILocation(line: 1987, column: 14, scope: !10771)
!10774 = !DILocation(line: 1987, column: 22, scope: !10775)
!10775 = !DILexicalBlockFile(scope: !10776, file: !1803, discriminator: 1)
!10776 = distinct !DILexicalBlock(scope: !10771, file: !1803, line: 1987, column: 9)
!10777 = !DILocation(line: 1987, column: 37, scope: !10775)
!10778 = !DILocation(line: 1987, column: 27, scope: !10775)
!10779 = !DILocation(line: 1987, column: 25, scope: !10775)
!10780 = !DILocation(line: 1987, column: 9, scope: !10775)
!10781 = !DILocalVariable(name: "adjust_num", scope: !10782, file: !1803, line: 1988, type: !1029)
!10782 = distinct !DILexicalBlock(scope: !10776, file: !1803, line: 1987, column: 53)
!10783 = !DILocation(line: 1988, column: 21, scope: !10782)
!10784 = !DILocation(line: 1988, column: 43, scope: !10782)
!10785 = !DILocation(line: 1988, column: 34, scope: !10782)
!10786 = !DILocation(line: 1989, column: 21, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10782, file: !1803, line: 1989, column: 13)
!10788 = !DILocation(line: 1989, column: 18, scope: !10787)
!10789 = !DILocation(line: 1989, column: 26, scope: !10790)
!10790 = !DILexicalBlockFile(scope: !10791, file: !1803, discriminator: 1)
!10791 = distinct !DILexicalBlock(scope: !10787, file: !1803, line: 1989, column: 13)
!10792 = !DILocation(line: 1989, column: 31, scope: !10790)
!10793 = !DILocation(line: 1989, column: 29, scope: !10790)
!10794 = !DILocation(line: 1989, column: 13, scope: !10790)
!10795 = !DILocation(line: 1990, column: 27, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !1803, line: 1989, column: 49)
!10797 = !DILocation(line: 1990, column: 37, scope: !10796)
!10798 = !DILocation(line: 1990, column: 40, scope: !10796)
!10799 = !DILocation(line: 1990, column: 45, scope: !10796)
!10800 = !DILocation(line: 1990, column: 58, scope: !10801)
!10801 = !DILexicalBlockFile(scope: !10796, file: !1803, discriminator: 1)
!10802 = !DILocation(line: 1990, column: 48, scope: !10801)
!10803 = !DILocation(line: 1990, column: 36, scope: !10801)
!10804 = !DILocation(line: 1990, column: 36, scope: !10805)
!10805 = !DILexicalBlockFile(scope: !10796, file: !1803, discriminator: 2)
!10806 = !DILocation(line: 1992, column: 50, scope: !10796)
!10807 = !DILocation(line: 1992, column: 40, scope: !10796)
!10808 = !DILocation(line: 1990, column: 36, scope: !10809)
!10809 = !DILexicalBlockFile(scope: !10796, file: !1803, discriminator: 3)
!10810 = !DILocation(line: 1990, column: 36, scope: !10811)
!10811 = !DILexicalBlockFile(scope: !10796, file: !1803, discriminator: 4)
!10812 = !DILocation(line: 1990, column: 33, scope: !10811)
!10813 = !DILocation(line: 1990, column: 17, scope: !10811)
!10814 = !DILocation(line: 1993, column: 13, scope: !10796)
!10815 = !DILocation(line: 1989, column: 45, scope: !10816)
!10816 = !DILexicalBlockFile(scope: !10791, file: !1803, discriminator: 2)
!10817 = !DILocation(line: 1989, column: 13, scope: !10816)
!10818 = distinct !{!10818, !10819}
!10819 = !DILocation(line: 1989, column: 13, scope: !10782)
!10820 = !DILocation(line: 1994, column: 9, scope: !10782)
!10821 = !DILocation(line: 1987, column: 49, scope: !10822)
!10822 = !DILexicalBlockFile(scope: !10776, file: !1803, discriminator: 2)
!10823 = !DILocation(line: 1987, column: 9, scope: !10822)
!10824 = distinct !{!10824, !10825}
!10825 = !DILocation(line: 1987, column: 9, scope: !10772)
!10826 = !DILocation(line: 1995, column: 5, scope: !10772)
!10827 = !DILocation(line: 1986, column: 35, scope: !10828)
!10828 = !DILexicalBlockFile(scope: !10766, file: !1803, discriminator: 2)
!10829 = !DILocation(line: 1986, column: 5, scope: !10828)
!10830 = distinct !{!10830, !10831}
!10831 = !DILocation(line: 1986, column: 5, scope: !1911)
!10832 = !DILocation(line: 1996, column: 1, scope: !1911)
!10833 = distinct !DISubprogram(name: "decode_spectrum_and_dequant", scope: !1803, file: !1803, line: 1646, type: !10834, isLocal: true, isDefinition: true, scopeLine: 1651, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{!1012, !2065, !1031, !2043, !1903, !1012, !10836, !10551, !9353}
!10836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10837, size: 64, align: 64)
!10837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!10838 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 1790, column: 270, scope: !10840)
!10840 = !DILexicalBlockFile(scope: !10841, file: !1803, discriminator: 5)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !1803, line: 1790, column: 171)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1803, line: 1790, column: 155)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1803, line: 1790, column: 32)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !1803, line: 1783, column: 28)
!10845 = distinct !DILexicalBlock(scope: !10846, file: !1803, line: 1779, column: 82)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !1803, line: 1779, column: 21)
!10847 = distinct !DILexicalBlock(scope: !10848, file: !1803, line: 1779, column: 21)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !1803, line: 1708, column: 38)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !1803, line: 1700, column: 20)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !1803, line: 1674, column: 24)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !1803, line: 1670, column: 17)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !1803, line: 1664, column: 51)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !1803, line: 1664, column: 9)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !1803, line: 1664, column: 9)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !1803, line: 1661, column: 50)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !1803, line: 1661, column: 5)
!10857 = distinct !DILexicalBlock(scope: !10833, file: !1803, line: 1661, column: 5)
!10858 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 1789, column: 40, scope: !10844)
!10860 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10861)
!10861 = distinct !DILocation(line: 1766, column: 270, scope: !10862)
!10862 = !DILexicalBlockFile(scope: !10863, file: !1803, discriminator: 5)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !1803, line: 1766, column: 171)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !1803, line: 1766, column: 155)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1803, line: 1766, column: 32)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1803, line: 1761, column: 28)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !1803, line: 1757, column: 82)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !1803, line: 1757, column: 21)
!10869 = distinct !DILexicalBlock(scope: !10848, file: !1803, line: 1757, column: 21)
!10870 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 1822, column: 40, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !1803, line: 1815, column: 28)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !1803, line: 1805, column: 82)
!10874 = distinct !DILexicalBlock(scope: !10875, file: !1803, line: 1805, column: 21)
!10875 = distinct !DILexicalBlock(scope: !10848, file: !1803, line: 1805, column: 21)
!10876 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 1765, column: 40, scope: !10866)
!10878 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10879)
!10879 = distinct !DILocation(line: 1823, column: 270, scope: !10880)
!10880 = !DILexicalBlockFile(scope: !10881, file: !1803, discriminator: 5)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !1803, line: 1823, column: 171)
!10882 = distinct !DILexicalBlock(scope: !10883, file: !1803, line: 1823, column: 155)
!10883 = distinct !DILexicalBlock(scope: !10872, file: !1803, line: 1823, column: 32)
!10884 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10885)
!10885 = distinct !DILocation(line: 1742, column: 270, scope: !10886)
!10886 = !DILexicalBlockFile(scope: !10887, file: !1803, discriminator: 5)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !1803, line: 1742, column: 171)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !1803, line: 1742, column: 155)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !1803, line: 1742, column: 32)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !1803, line: 1735, column: 28)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !1803, line: 1731, column: 82)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !1803, line: 1731, column: 21)
!10893 = distinct !DILexicalBlock(scope: !10848, file: !1803, line: 1731, column: 21)
!10894 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10895)
!10895 = distinct !DILocation(line: 1741, column: 40, scope: !10890)
!10896 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10897)
!10897 = distinct !DILocation(line: 1843, column: 48, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1803, line: 1838, column: 49)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !1803, line: 1838, column: 37)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !1803, line: 1837, column: 53)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !1803, line: 1837, column: 29)
!10902 = distinct !DILexicalBlock(scope: !10872, file: !1803, line: 1837, column: 29)
!10903 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 1719, column: 270, scope: !10905)
!10905 = !DILexicalBlockFile(scope: !10906, file: !1803, discriminator: 5)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !1803, line: 1719, column: 171)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !1803, line: 1719, column: 155)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !1803, line: 1719, column: 32)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !1803, line: 1714, column: 28)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !1803, line: 1710, column: 82)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1803, line: 1710, column: 21)
!10912 = distinct !DILexicalBlock(scope: !10848, file: !1803, line: 1710, column: 21)
!10913 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !10914)
!10914 = distinct !DILocation(line: 1718, column: 40, scope: !10909)
!10915 = !DILocalVariable(name: "previous_val", arg: 1, scope: !10916, file: !1803, line: 1063, type: !1013)
!10916 = distinct !DISubprogram(name: "lcg_random", scope: !1803, file: !1803, line: 1063, type: !10917, isLocal: true, isDefinition: true, scopeLine: 1064, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!10917 = !DISubroutineType(types: !10918)
!10918 = !{!1012, !1013}
!10919 = !DILocation(line: 1063, column: 70, scope: !10916, inlinedAt: !10920)
!10920 = distinct !DILocation(line: 1682, column: 44, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !1803, line: 1681, column: 51)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !1803, line: 1681, column: 21)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !1803, line: 1681, column: 21)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !1803, line: 1675, column: 78)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1803, line: 1675, column: 17)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1803, line: 1675, column: 17)
!10927 = distinct !DILexicalBlock(scope: !10850, file: !1803, line: 1674, column: 48)
!10928 = !DILocalVariable(name: "v", scope: !10916, file: !1803, line: 1065, type: !10929)
!10929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10916, file: !1803, line: 1065, size: 32, align: 32, elements: !10930)
!10930 = !{!10931, !10932}
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10929, file: !1803, line: 1065, baseType: !1013, size: 32, align: 32)
!10932 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !10929, file: !1803, line: 1065, baseType: !1012, size: 32, align: 32)
!10933 = !DILocation(line: 1065, column: 34, scope: !10916, inlinedAt: !10920)
!10934 = !DILocalVariable(name: "ac", arg: 1, scope: !10833, file: !1803, line: 1646, type: !2065)
!10935 = !DILocation(line: 1646, column: 52, scope: !10833)
!10936 = !DILocalVariable(name: "coef", arg: 2, scope: !10833, file: !1803, line: 1646, type: !1031)
!10937 = !DILocation(line: 1646, column: 65, scope: !10833)
!10938 = !DILocalVariable(name: "gb", arg: 3, scope: !10833, file: !1803, line: 1647, type: !2043)
!10939 = !DILocation(line: 1647, column: 55, scope: !10833)
!10940 = !DILocalVariable(name: "sf", arg: 4, scope: !10833, file: !1803, line: 1647, type: !1903)
!10941 = !DILocation(line: 1647, column: 74, scope: !10833)
!10942 = !DILocalVariable(name: "pulse_present", arg: 5, scope: !10833, file: !1803, line: 1648, type: !1012)
!10943 = !DILocation(line: 1648, column: 44, scope: !10833)
!10944 = !DILocalVariable(name: "pulse", arg: 6, scope: !10833, file: !1803, line: 1648, type: !10836)
!10945 = !DILocation(line: 1648, column: 72, scope: !10833)
!10946 = !DILocalVariable(name: "ics", arg: 7, scope: !10833, file: !1803, line: 1649, type: !10551)
!10947 = !DILocation(line: 1649, column: 71, scope: !10833)
!10948 = !DILocalVariable(name: "band_type", arg: 8, scope: !10833, file: !1803, line: 1650, type: !9353)
!10949 = !DILocation(line: 1650, column: 54, scope: !10833)
!10950 = !DILocalVariable(name: "i", scope: !10833, file: !1803, line: 1652, type: !1012)
!10951 = !DILocation(line: 1652, column: 9, scope: !10833)
!10952 = !DILocalVariable(name: "k", scope: !10833, file: !1803, line: 1652, type: !1012)
!10953 = !DILocation(line: 1652, column: 12, scope: !10833)
!10954 = !DILocalVariable(name: "g", scope: !10833, file: !1803, line: 1652, type: !1012)
!10955 = !DILocation(line: 1652, column: 15, scope: !10833)
!10956 = !DILocalVariable(name: "idx", scope: !10833, file: !1803, line: 1652, type: !1012)
!10957 = !DILocation(line: 1652, column: 18, scope: !10833)
!10958 = !DILocalVariable(name: "c", scope: !10833, file: !1803, line: 1653, type: !1165)
!10959 = !DILocation(line: 1653, column: 15, scope: !10833)
!10960 = !DILocation(line: 1653, column: 26, scope: !10833)
!10961 = !DILocation(line: 1653, column: 31, scope: !10833)
!10962 = !DILocation(line: 1653, column: 24, scope: !10833)
!10963 = !DILocalVariable(name: "offsets", scope: !10833, file: !1803, line: 1654, type: !1943)
!10964 = !DILocation(line: 1654, column: 21, scope: !10833)
!10965 = !DILocation(line: 1654, column: 31, scope: !10833)
!10966 = !DILocation(line: 1654, column: 36, scope: !10833)
!10967 = !DILocalVariable(name: "coef_base", scope: !10833, file: !1803, line: 1655, type: !1031)
!10968 = !DILocation(line: 1655, column: 15, scope: !10833)
!10969 = !DILocation(line: 1655, column: 27, scope: !10833)
!10970 = !DILocation(line: 1657, column: 12, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10833, file: !1803, line: 1657, column: 5)
!10972 = !DILocation(line: 1657, column: 10, scope: !10971)
!10973 = !DILocation(line: 1657, column: 17, scope: !10974)
!10974 = !DILexicalBlockFile(scope: !10975, file: !1803, discriminator: 1)
!10975 = distinct !DILexicalBlock(scope: !10971, file: !1803, line: 1657, column: 5)
!10976 = !DILocation(line: 1657, column: 21, scope: !10974)
!10977 = !DILocation(line: 1657, column: 26, scope: !10974)
!10978 = !DILocation(line: 1657, column: 19, scope: !10974)
!10979 = !DILocation(line: 1657, column: 5, scope: !10974)
!10980 = !DILocation(line: 1658, column: 16, scope: !10975)
!10981 = !DILocation(line: 1658, column: 23, scope: !10975)
!10982 = !DILocation(line: 1658, column: 25, scope: !10975)
!10983 = !DILocation(line: 1658, column: 21, scope: !10975)
!10984 = !DILocation(line: 1658, column: 41, scope: !10975)
!10985 = !DILocation(line: 1658, column: 46, scope: !10975)
!10986 = !DILocation(line: 1658, column: 33, scope: !10975)
!10987 = !DILocation(line: 1658, column: 31, scope: !10975)
!10988 = !DILocation(line: 1658, column: 9, scope: !10975)
!10989 = !DILocation(line: 1659, column: 36, scope: !10975)
!10990 = !DILocation(line: 1659, column: 48, scope: !10975)
!10991 = !DILocation(line: 1659, column: 53, scope: !10975)
!10992 = !DILocation(line: 1659, column: 40, scope: !10975)
!10993 = !DILocation(line: 1659, column: 38, scope: !10975)
!10994 = !DILocation(line: 1659, column: 35, scope: !10975)
!10995 = !DILocation(line: 1659, column: 33, scope: !10975)
!10996 = !DILocation(line: 1657, column: 40, scope: !10997)
!10997 = !DILexicalBlockFile(scope: !10975, file: !1803, discriminator: 2)
!10998 = !DILocation(line: 1657, column: 5, scope: !10997)
!10999 = distinct !{!10999, !11000}
!11000 = !DILocation(line: 1657, column: 5, scope: !10833)
!11001 = !DILocation(line: 1661, column: 12, scope: !10857)
!11002 = !DILocation(line: 1661, column: 10, scope: !10857)
!11003 = !DILocation(line: 1661, column: 17, scope: !11004)
!11004 = !DILexicalBlockFile(scope: !10856, file: !1803, discriminator: 1)
!11005 = !DILocation(line: 1661, column: 21, scope: !11004)
!11006 = !DILocation(line: 1661, column: 26, scope: !11004)
!11007 = !DILocation(line: 1661, column: 19, scope: !11004)
!11008 = !DILocation(line: 1661, column: 5, scope: !11004)
!11009 = !DILocalVariable(name: "g_len", scope: !10855, file: !1803, line: 1662, type: !1013)
!11010 = !DILocation(line: 1662, column: 18, scope: !10855)
!11011 = !DILocation(line: 1662, column: 41, scope: !10855)
!11012 = !DILocation(line: 1662, column: 26, scope: !10855)
!11013 = !DILocation(line: 1662, column: 31, scope: !10855)
!11014 = !DILocation(line: 1664, column: 16, scope: !10854)
!11015 = !DILocation(line: 1664, column: 14, scope: !10854)
!11016 = !DILocation(line: 1664, column: 21, scope: !11017)
!11017 = !DILexicalBlockFile(scope: !10853, file: !1803, discriminator: 1)
!11018 = !DILocation(line: 1664, column: 25, scope: !11017)
!11019 = !DILocation(line: 1664, column: 30, scope: !11017)
!11020 = !DILocation(line: 1664, column: 23, scope: !11017)
!11021 = !DILocation(line: 1664, column: 9, scope: !11017)
!11022 = !DILocalVariable(name: "cbt_m1", scope: !10852, file: !1803, line: 1665, type: !11023)
!11023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!11024 = !DILocation(line: 1665, column: 28, scope: !10852)
!11025 = !DILocation(line: 1665, column: 47, scope: !10852)
!11026 = !DILocation(line: 1665, column: 37, scope: !10852)
!11027 = !DILocation(line: 1665, column: 52, scope: !10852)
!11028 = !DILocalVariable(name: "cfo", scope: !10852, file: !1803, line: 1666, type: !1031)
!11029 = !DILocation(line: 1666, column: 23, scope: !10852)
!11030 = !DILocation(line: 1666, column: 29, scope: !10852)
!11031 = !DILocation(line: 1666, column: 44, scope: !10852)
!11032 = !DILocation(line: 1666, column: 36, scope: !10852)
!11033 = !DILocation(line: 1666, column: 34, scope: !10852)
!11034 = !DILocalVariable(name: "off_len", scope: !10852, file: !1803, line: 1667, type: !1012)
!11035 = !DILocation(line: 1667, column: 17, scope: !10852)
!11036 = !DILocation(line: 1667, column: 35, scope: !10852)
!11037 = !DILocation(line: 1667, column: 37, scope: !10852)
!11038 = !DILocation(line: 1667, column: 27, scope: !10852)
!11039 = !DILocation(line: 1667, column: 52, scope: !10852)
!11040 = !DILocation(line: 1667, column: 44, scope: !10852)
!11041 = !DILocation(line: 1667, column: 42, scope: !10852)
!11042 = !DILocalVariable(name: "group", scope: !10852, file: !1803, line: 1668, type: !1012)
!11043 = !DILocation(line: 1668, column: 17, scope: !10852)
!11044 = !DILocation(line: 1670, column: 17, scope: !10851)
!11045 = !DILocation(line: 1670, column: 24, scope: !10851)
!11046 = !DILocation(line: 1670, column: 17, scope: !10852)
!11047 = !DILocation(line: 1671, column: 28, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !1803, line: 1671, column: 17)
!11049 = distinct !DILexicalBlock(scope: !10851, file: !1803, line: 1670, column: 46)
!11050 = !DILocation(line: 1671, column: 22, scope: !11048)
!11051 = !DILocation(line: 1671, column: 33, scope: !11052)
!11052 = !DILexicalBlockFile(scope: !11053, file: !1803, discriminator: 1)
!11053 = distinct !DILexicalBlock(scope: !11048, file: !1803, line: 1671, column: 17)
!11054 = !DILocation(line: 1671, column: 52, scope: !11052)
!11055 = !DILocation(line: 1671, column: 39, scope: !11052)
!11056 = !DILocation(line: 1671, column: 17, scope: !11052)
!11057 = !DILocation(line: 1672, column: 28, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11053, file: !1803, line: 1671, column: 78)
!11059 = !DILocation(line: 1672, column: 21, scope: !11058)
!11060 = !DILocation(line: 1672, column: 36, scope: !11058)
!11061 = !DILocation(line: 1672, column: 44, scope: !11058)
!11062 = !DILocation(line: 1673, column: 17, scope: !11058)
!11063 = !DILocation(line: 1671, column: 64, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !11053, file: !1803, discriminator: 2)
!11065 = !DILocation(line: 1671, column: 71, scope: !11064)
!11066 = !DILocation(line: 1671, column: 17, scope: !11064)
!11067 = distinct !{!11067, !11068}
!11068 = !DILocation(line: 1671, column: 17, scope: !11049)
!11069 = !DILocation(line: 1674, column: 13, scope: !11049)
!11070 = !DILocation(line: 1674, column: 24, scope: !11071)
!11071 = !DILexicalBlockFile(scope: !10850, file: !1803, discriminator: 1)
!11072 = !DILocation(line: 1674, column: 31, scope: !11071)
!11073 = !DILocation(line: 1675, column: 28, scope: !10926)
!11074 = !DILocation(line: 1675, column: 22, scope: !10926)
!11075 = !DILocation(line: 1675, column: 33, scope: !11076)
!11076 = !DILexicalBlockFile(scope: !10925, file: !1803, discriminator: 1)
!11077 = !DILocation(line: 1675, column: 52, scope: !11076)
!11078 = !DILocation(line: 1675, column: 39, scope: !11076)
!11079 = !DILocation(line: 1675, column: 17, scope: !11076)
!11080 = !DILocalVariable(name: "scale", scope: !10924, file: !1803, line: 1677, type: !1016)
!11081 = !DILocation(line: 1677, column: 27, scope: !10924)
!11082 = !DILocalVariable(name: "band_energy", scope: !10924, file: !1803, line: 1679, type: !1017)
!11083 = !DILocation(line: 1679, column: 30, scope: !10924)
!11084 = !DILocation(line: 1681, column: 28, scope: !10923)
!11085 = !DILocation(line: 1681, column: 26, scope: !10923)
!11086 = !DILocation(line: 1681, column: 33, scope: !11087)
!11087 = !DILexicalBlockFile(scope: !10922, file: !1803, discriminator: 1)
!11088 = !DILocation(line: 1681, column: 37, scope: !11087)
!11089 = !DILocation(line: 1681, column: 35, scope: !11087)
!11090 = !DILocation(line: 1681, column: 21, scope: !11087)
!11091 = !DILocation(line: 1682, column: 55, scope: !10921)
!11092 = !DILocation(line: 1682, column: 59, scope: !10921)
!11093 = !DILocation(line: 1682, column: 44, scope: !10921)
!11094 = !DILocation(line: 1065, column: 38, scope: !10916, inlinedAt: !10920)
!11095 = !DILocation(line: 1065, column: 40, scope: !10916, inlinedAt: !10920)
!11096 = !DILocation(line: 1065, column: 53, scope: !10916, inlinedAt: !10920)
!11097 = !DILocation(line: 1065, column: 64, scope: !10916, inlinedAt: !10920)
!11098 = !DILocation(line: 1066, column: 14, scope: !10916, inlinedAt: !10920)
!11099 = !DILocation(line: 1682, column: 25, scope: !10921)
!11100 = !DILocation(line: 1682, column: 29, scope: !10921)
!11101 = !DILocation(line: 1682, column: 42, scope: !10921)
!11102 = !DILocation(line: 1686, column: 34, scope: !10921)
!11103 = !DILocation(line: 1686, column: 38, scope: !10921)
!11104 = !DILocation(line: 1686, column: 29, scope: !10921)
!11105 = !DILocation(line: 1686, column: 25, scope: !10921)
!11106 = !DILocation(line: 1686, column: 32, scope: !10921)
!11107 = !DILocation(line: 1688, column: 21, scope: !10921)
!11108 = !DILocation(line: 1681, column: 47, scope: !11109)
!11109 = !DILexicalBlockFile(scope: !10922, file: !1803, discriminator: 2)
!11110 = !DILocation(line: 1681, column: 21, scope: !11109)
!11111 = distinct !{!11111, !11112}
!11112 = !DILocation(line: 1681, column: 21, scope: !10924)
!11113 = !DILocation(line: 1695, column: 35, scope: !10924)
!11114 = !DILocation(line: 1695, column: 39, scope: !10924)
!11115 = !DILocation(line: 1695, column: 45, scope: !10924)
!11116 = !DILocation(line: 1695, column: 65, scope: !10924)
!11117 = !DILocation(line: 1695, column: 70, scope: !10924)
!11118 = !DILocation(line: 1695, column: 75, scope: !10924)
!11119 = !DILocation(line: 1695, column: 33, scope: !10924)
!11120 = !DILocation(line: 1696, column: 32, scope: !10924)
!11121 = !DILocation(line: 1696, column: 29, scope: !10924)
!11122 = !DILocation(line: 1696, column: 45, scope: !10924)
!11123 = !DILocation(line: 1696, column: 39, scope: !10924)
!11124 = !DILocation(line: 1696, column: 37, scope: !10924)
!11125 = !DILocation(line: 1696, column: 27, scope: !10924)
!11126 = !DILocation(line: 1697, column: 21, scope: !10924)
!11127 = !DILocation(line: 1697, column: 25, scope: !10924)
!11128 = !DILocation(line: 1697, column: 31, scope: !10924)
!11129 = !DILocation(line: 1697, column: 50, scope: !10924)
!11130 = !DILocation(line: 1697, column: 55, scope: !10924)
!11131 = !DILocation(line: 1697, column: 60, scope: !10924)
!11132 = !DILocation(line: 1697, column: 67, scope: !10924)
!11133 = !DILocation(line: 1699, column: 17, scope: !10924)
!11134 = !DILocation(line: 1675, column: 64, scope: !11135)
!11135 = !DILexicalBlockFile(scope: !10925, file: !1803, discriminator: 2)
!11136 = !DILocation(line: 1675, column: 71, scope: !11135)
!11137 = !DILocation(line: 1675, column: 17, scope: !11135)
!11138 = distinct !{!11138, !11139}
!11139 = !DILocation(line: 1675, column: 17, scope: !10927)
!11140 = !DILocation(line: 1700, column: 13, scope: !10927)
!11141 = !DILocalVariable(name: "vq", scope: !10849, file: !1803, line: 1702, type: !2555)
!11142 = !DILocation(line: 1702, column: 30, scope: !10849)
!11143 = !DILocation(line: 1702, column: 63, scope: !10849)
!11144 = !DILocation(line: 1702, column: 35, scope: !10849)
!11145 = !DILocalVariable(name: "cb_vector_idx", scope: !10849, file: !1803, line: 1704, type: !1943)
!11146 = !DILocation(line: 1704, column: 33, scope: !10849)
!11147 = !DILocation(line: 1704, column: 76, scope: !10849)
!11148 = !DILocation(line: 1704, column: 49, scope: !10849)
!11149 = !DILocalVariable(name: "vlc_tab", scope: !10849, file: !1803, line: 1705, type: !1876)
!11150 = !DILocation(line: 1705, column: 27, scope: !10849)
!11151 = !DILocation(line: 1705, column: 54, scope: !10849)
!11152 = !DILocation(line: 1705, column: 41, scope: !10849)
!11153 = !DILocation(line: 1705, column: 62, scope: !10849)
!11154 = !DILocalVariable(name: "re_index", scope: !10849, file: !1803, line: 1706, type: !1013)
!11155 = !DILocation(line: 1706, column: 30, scope: !10849)
!11156 = !DILocation(line: 1706, column: 42, scope: !10849)
!11157 = !DILocation(line: 1706, column: 47, scope: !10849)
!11158 = !DILocalVariable(name: "re_cache", scope: !10849, file: !1803, line: 1706, type: !1013)
!11159 = !DILocation(line: 1706, column: 91, scope: !10849)
!11160 = !DILocalVariable(name: "re_size_plus8", scope: !10849, file: !1803, line: 1706, type: !1013)
!11161 = !DILocation(line: 1706, column: 114, scope: !10849)
!11162 = !DILocation(line: 1706, column: 131, scope: !10849)
!11163 = !DILocation(line: 1706, column: 136, scope: !10849)
!11164 = !DILocation(line: 1708, column: 25, scope: !10849)
!11165 = !DILocation(line: 1708, column: 32, scope: !10849)
!11166 = !DILocation(line: 1708, column: 17, scope: !10849)
!11167 = !DILocation(line: 1710, column: 32, scope: !10912)
!11168 = !DILocation(line: 1710, column: 26, scope: !10912)
!11169 = !DILocation(line: 1710, column: 37, scope: !11170)
!11170 = !DILexicalBlockFile(scope: !10911, file: !1803, discriminator: 1)
!11171 = !DILocation(line: 1710, column: 56, scope: !11170)
!11172 = !DILocation(line: 1710, column: 43, scope: !11170)
!11173 = !DILocation(line: 1710, column: 21, scope: !11170)
!11174 = !DILocalVariable(name: "cf", scope: !10910, file: !1803, line: 1711, type: !1031)
!11175 = !DILocation(line: 1711, column: 35, scope: !10910)
!11176 = !DILocation(line: 1711, column: 40, scope: !10910)
!11177 = !DILocalVariable(name: "len", scope: !10910, file: !1803, line: 1712, type: !1012)
!11178 = !DILocation(line: 1712, column: 29, scope: !10910)
!11179 = !DILocation(line: 1712, column: 35, scope: !10910)
!11180 = !DILocation(line: 1714, column: 25, scope: !10910)
!11181 = distinct !{!11181, !11180}
!11182 = !DILocalVariable(name: "code", scope: !10909, file: !1803, line: 1715, type: !1012)
!11183 = !DILocation(line: 1715, column: 33, scope: !10909)
!11184 = !DILocalVariable(name: "cb_idx", scope: !10909, file: !1803, line: 1716, type: !1013)
!11185 = !DILocation(line: 1716, column: 38, scope: !10909)
!11186 = !DILocation(line: 1718, column: 84, scope: !10909)
!11187 = !DILocation(line: 1718, column: 89, scope: !10909)
!11188 = !DILocation(line: 1718, column: 99, scope: !10909)
!11189 = !DILocation(line: 1718, column: 108, scope: !10909)
!11190 = !DILocation(line: 1718, column: 96, scope: !10909)
!11191 = !DILocation(line: 1718, column: 117, scope: !10909)
!11192 = !DILocation(line: 1718, column: 40, scope: !10909)
!11193 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10914)
!11194 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10914)
!11195 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10914)
!11196 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10914)
!11197 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10914)
!11198 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10914)
!11199 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10914)
!11200 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10914)
!11201 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10914)
!11202 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10914)
!11203 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10914)
!11204 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10914)
!11205 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10914)
!11206 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10914)
!11207 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10914)
!11208 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10914)
!11209 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10914)
!11210 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10914)
!11211 = !DILocation(line: 1718, column: 125, scope: !10909)
!11212 = !DILocation(line: 1718, column: 134, scope: !10909)
!11213 = !DILocation(line: 1718, column: 121, scope: !10909)
!11214 = !DILocation(line: 1718, column: 38, scope: !10909)
!11215 = !DILocation(line: 1719, column: 29, scope: !10909)
!11216 = distinct !{!11216, !11215}
!11217 = !DILocalVariable(name: "n", scope: !10908, file: !1803, line: 1719, type: !1012)
!11218 = !DILocation(line: 1719, column: 38, scope: !10908)
!11219 = !DILocalVariable(name: "nb_bits", scope: !10908, file: !1803, line: 1719, type: !1012)
!11220 = !DILocation(line: 1719, column: 41, scope: !10908)
!11221 = !DILocalVariable(name: "index", scope: !10908, file: !1803, line: 1719, type: !1013)
!11222 = !DILocation(line: 1719, column: 63, scope: !10908)
!11223 = !DILocation(line: 1719, column: 88, scope: !11224)
!11224 = !DILexicalBlockFile(scope: !10908, file: !1803, discriminator: 1)
!11225 = !DILocation(line: 1719, column: 78, scope: !11224)
!11226 = !DILocation(line: 1719, column: 76, scope: !11224)
!11227 = !DILocation(line: 1719, column: 117, scope: !11224)
!11228 = !DILocation(line: 1719, column: 109, scope: !11224)
!11229 = !DILocation(line: 1719, column: 107, scope: !11224)
!11230 = !DILocation(line: 1719, column: 140, scope: !11224)
!11231 = !DILocation(line: 1719, column: 132, scope: !11224)
!11232 = !DILocation(line: 1719, column: 130, scope: !11224)
!11233 = !DILocation(line: 1719, column: 164, scope: !11224)
!11234 = !DILocation(line: 1719, column: 166, scope: !11224)
!11235 = !DILocation(line: 1719, column: 155, scope: !11224)
!11236 = !DILocation(line: 1719, column: 186, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !10906, file: !1803, discriminator: 2)
!11238 = !DILocation(line: 1719, column: 204, scope: !11237)
!11239 = !DILocation(line: 1719, column: 213, scope: !11237)
!11240 = !DILocation(line: 1719, column: 201, scope: !11237)
!11241 = !DILocation(line: 1719, column: 185, scope: !11237)
!11242 = !DILocation(line: 1719, column: 223, scope: !11243)
!11243 = !DILexicalBlockFile(scope: !10906, file: !1803, discriminator: 3)
!11244 = !DILocation(line: 1719, column: 232, scope: !11243)
!11245 = !DILocation(line: 1719, column: 185, scope: !11243)
!11246 = !DILocation(line: 1719, column: 242, scope: !11247)
!11247 = !DILexicalBlockFile(scope: !10906, file: !1803, discriminator: 4)
!11248 = !DILocation(line: 1719, column: 185, scope: !11247)
!11249 = !DILocation(line: 1719, column: 185, scope: !10905)
!11250 = !DILocation(line: 1719, column: 182, scope: !10905)
!11251 = !DILocation(line: 1719, column: 314, scope: !10905)
!11252 = !DILocation(line: 1719, column: 319, scope: !10905)
!11253 = !DILocation(line: 1719, column: 329, scope: !10905)
!11254 = !DILocation(line: 1719, column: 338, scope: !10905)
!11255 = !DILocation(line: 1719, column: 326, scope: !10905)
!11256 = !DILocation(line: 1719, column: 347, scope: !10905)
!11257 = !DILocation(line: 1719, column: 270, scope: !10905)
!11258 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10904)
!11259 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10904)
!11260 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10904)
!11261 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10904)
!11262 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10904)
!11263 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10904)
!11264 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10904)
!11265 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10904)
!11266 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10904)
!11267 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10904)
!11268 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10904)
!11269 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10904)
!11270 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10904)
!11271 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10904)
!11272 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10904)
!11273 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10904)
!11274 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10904)
!11275 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10904)
!11276 = !DILocation(line: 1719, column: 355, scope: !10905)
!11277 = !DILocation(line: 1719, column: 364, scope: !10905)
!11278 = !DILocation(line: 1719, column: 351, scope: !10905)
!11279 = !DILocation(line: 1719, column: 268, scope: !10905)
!11280 = !DILocation(line: 1719, column: 381, scope: !10905)
!11281 = !DILocation(line: 1719, column: 380, scope: !10905)
!11282 = !DILocation(line: 1719, column: 378, scope: !10905)
!11283 = !DILocation(line: 1719, column: 402, scope: !10905)
!11284 = !DILocation(line: 1719, column: 412, scope: !10905)
!11285 = !DILocation(line: 1719, column: 392, scope: !11286)
!11286 = !DILexicalBlockFile(scope: !10905, file: !1803, discriminator: 12)
!11287 = !DILocation(line: 1719, column: 423, scope: !10905)
!11288 = !DILocation(line: 1719, column: 421, scope: !10905)
!11289 = !DILocation(line: 1719, column: 390, scope: !10905)
!11290 = !DILocation(line: 1719, column: 444, scope: !10905)
!11291 = !DILocation(line: 1719, column: 436, scope: !10905)
!11292 = !DILocation(line: 1719, column: 434, scope: !10905)
!11293 = !DILocation(line: 1719, column: 467, scope: !10905)
!11294 = !DILocation(line: 1719, column: 459, scope: !10905)
!11295 = !DILocation(line: 1719, column: 457, scope: !10905)
!11296 = !DILocation(line: 1719, column: 819, scope: !10905)
!11297 = !DILocation(line: 1719, column: 821, scope: !11298)
!11298 = !DILexicalBlockFile(scope: !10908, file: !1803, discriminator: 6)
!11299 = distinct !{!11299, !11300}
!11300 = !DILocation(line: 1719, column: 821, scope: !10908)
!11301 = !DILocation(line: 1719, column: 840, scope: !11302)
!11302 = !DILexicalBlockFile(scope: !11303, file: !1803, discriminator: 7)
!11303 = distinct !DILexicalBlock(scope: !10908, file: !1803, line: 1719, column: 824)
!11304 = !DILocation(line: 1719, column: 835, scope: !11302)
!11305 = !DILocation(line: 1719, column: 857, scope: !11302)
!11306 = !DILocation(line: 1719, column: 875, scope: !11302)
!11307 = !DILocation(line: 1719, column: 887, scope: !11302)
!11308 = !DILocation(line: 1719, column: 884, scope: !11302)
!11309 = !DILocation(line: 1719, column: 872, scope: !11302)
!11310 = !DILocation(line: 1719, column: 856, scope: !11302)
!11311 = !DILocation(line: 1719, column: 894, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !11303, file: !1803, discriminator: 8)
!11313 = !DILocation(line: 1719, column: 906, scope: !11312)
!11314 = !DILocation(line: 1719, column: 903, scope: !11312)
!11315 = !DILocation(line: 1719, column: 856, scope: !11312)
!11316 = !DILocation(line: 1719, column: 913, scope: !11317)
!11317 = !DILexicalBlockFile(scope: !11303, file: !1803, discriminator: 9)
!11318 = !DILocation(line: 1719, column: 856, scope: !11317)
!11319 = !DILocation(line: 1719, column: 856, scope: !11320)
!11320 = !DILexicalBlockFile(scope: !11303, file: !1803, discriminator: 10)
!11321 = !DILocation(line: 1719, column: 853, scope: !11320)
!11322 = !DILocation(line: 1719, column: 930, scope: !11320)
!11323 = !DILocation(line: 1719, column: 943, scope: !11324)
!11324 = !DILexicalBlockFile(scope: !10908, file: !1803, discriminator: 11)
!11325 = !DILocation(line: 1720, column: 52, scope: !10909)
!11326 = !DILocation(line: 1720, column: 38, scope: !10909)
!11327 = !DILocation(line: 1720, column: 36, scope: !10909)
!11328 = !DILocation(line: 1724, column: 40, scope: !10909)
!11329 = !DILocation(line: 1724, column: 44, scope: !10909)
!11330 = !DILocation(line: 1724, column: 48, scope: !10909)
!11331 = !DILocation(line: 1724, column: 56, scope: !10909)
!11332 = !DILocation(line: 1724, column: 61, scope: !10909)
!11333 = !DILocation(line: 1724, column: 59, scope: !10909)
!11334 = !DILocation(line: 1724, column: 34, scope: !10909)
!11335 = !DILocation(line: 1724, column: 32, scope: !10909)
!11336 = !DILocation(line: 1726, column: 25, scope: !10909)
!11337 = !DILocation(line: 1726, column: 38, scope: !11338)
!11338 = !DILexicalBlockFile(scope: !10910, file: !1803, discriminator: 1)
!11339 = !DILocation(line: 1726, column: 25, scope: !11338)
!11340 = !DILocation(line: 1727, column: 21, scope: !10910)
!11341 = !DILocation(line: 1710, column: 68, scope: !11342)
!11342 = !DILexicalBlockFile(scope: !10911, file: !1803, discriminator: 2)
!11343 = !DILocation(line: 1710, column: 75, scope: !11342)
!11344 = !DILocation(line: 1710, column: 21, scope: !11342)
!11345 = distinct !{!11345, !11346}
!11346 = !DILocation(line: 1710, column: 21, scope: !10848)
!11347 = !DILocation(line: 1728, column: 21, scope: !10848)
!11348 = !DILocation(line: 1731, column: 32, scope: !10893)
!11349 = !DILocation(line: 1731, column: 26, scope: !10893)
!11350 = !DILocation(line: 1731, column: 37, scope: !11351)
!11351 = !DILexicalBlockFile(scope: !10892, file: !1803, discriminator: 1)
!11352 = !DILocation(line: 1731, column: 56, scope: !11351)
!11353 = !DILocation(line: 1731, column: 43, scope: !11351)
!11354 = !DILocation(line: 1731, column: 21, scope: !11351)
!11355 = !DILocalVariable(name: "cf", scope: !10891, file: !1803, line: 1732, type: !1031)
!11356 = !DILocation(line: 1732, column: 35, scope: !10891)
!11357 = !DILocation(line: 1732, column: 40, scope: !10891)
!11358 = !DILocalVariable(name: "len", scope: !10891, file: !1803, line: 1733, type: !1012)
!11359 = !DILocation(line: 1733, column: 29, scope: !10891)
!11360 = !DILocation(line: 1733, column: 35, scope: !10891)
!11361 = !DILocation(line: 1735, column: 25, scope: !10891)
!11362 = distinct !{!11362, !11361}
!11363 = !DILocalVariable(name: "code", scope: !10890, file: !1803, line: 1736, type: !1012)
!11364 = !DILocation(line: 1736, column: 33, scope: !10890)
!11365 = !DILocalVariable(name: "nnz", scope: !10890, file: !1803, line: 1737, type: !1013)
!11366 = !DILocation(line: 1737, column: 38, scope: !10890)
!11367 = !DILocalVariable(name: "cb_idx", scope: !10890, file: !1803, line: 1738, type: !1013)
!11368 = !DILocation(line: 1738, column: 38, scope: !10890)
!11369 = !DILocalVariable(name: "bits", scope: !10890, file: !1803, line: 1739, type: !1027)
!11370 = !DILocation(line: 1739, column: 38, scope: !10890)
!11371 = !DILocation(line: 1741, column: 84, scope: !10890)
!11372 = !DILocation(line: 1741, column: 89, scope: !10890)
!11373 = !DILocation(line: 1741, column: 99, scope: !10890)
!11374 = !DILocation(line: 1741, column: 108, scope: !10890)
!11375 = !DILocation(line: 1741, column: 96, scope: !10890)
!11376 = !DILocation(line: 1741, column: 117, scope: !10890)
!11377 = !DILocation(line: 1741, column: 40, scope: !10890)
!11378 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10895)
!11379 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10895)
!11380 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10895)
!11381 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10895)
!11382 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10895)
!11383 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10895)
!11384 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10895)
!11385 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10895)
!11386 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10895)
!11387 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10895)
!11388 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10895)
!11389 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10895)
!11390 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10895)
!11391 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10895)
!11392 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10895)
!11393 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10895)
!11394 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10895)
!11395 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10895)
!11396 = !DILocation(line: 1741, column: 125, scope: !10890)
!11397 = !DILocation(line: 1741, column: 134, scope: !10890)
!11398 = !DILocation(line: 1741, column: 121, scope: !10890)
!11399 = !DILocation(line: 1741, column: 38, scope: !10890)
!11400 = !DILocation(line: 1742, column: 29, scope: !10890)
!11401 = distinct !{!11401, !11400}
!11402 = !DILocalVariable(name: "n", scope: !10889, file: !1803, line: 1742, type: !1012)
!11403 = !DILocation(line: 1742, column: 38, scope: !10889)
!11404 = !DILocalVariable(name: "nb_bits", scope: !10889, file: !1803, line: 1742, type: !1012)
!11405 = !DILocation(line: 1742, column: 41, scope: !10889)
!11406 = !DILocalVariable(name: "index", scope: !10889, file: !1803, line: 1742, type: !1013)
!11407 = !DILocation(line: 1742, column: 63, scope: !10889)
!11408 = !DILocation(line: 1742, column: 88, scope: !11409)
!11409 = !DILexicalBlockFile(scope: !10889, file: !1803, discriminator: 1)
!11410 = !DILocation(line: 1742, column: 78, scope: !11409)
!11411 = !DILocation(line: 1742, column: 76, scope: !11409)
!11412 = !DILocation(line: 1742, column: 117, scope: !11409)
!11413 = !DILocation(line: 1742, column: 109, scope: !11409)
!11414 = !DILocation(line: 1742, column: 107, scope: !11409)
!11415 = !DILocation(line: 1742, column: 140, scope: !11409)
!11416 = !DILocation(line: 1742, column: 132, scope: !11409)
!11417 = !DILocation(line: 1742, column: 130, scope: !11409)
!11418 = !DILocation(line: 1742, column: 164, scope: !11409)
!11419 = !DILocation(line: 1742, column: 166, scope: !11409)
!11420 = !DILocation(line: 1742, column: 155, scope: !11409)
!11421 = !DILocation(line: 1742, column: 186, scope: !11422)
!11422 = !DILexicalBlockFile(scope: !10887, file: !1803, discriminator: 2)
!11423 = !DILocation(line: 1742, column: 204, scope: !11422)
!11424 = !DILocation(line: 1742, column: 213, scope: !11422)
!11425 = !DILocation(line: 1742, column: 201, scope: !11422)
!11426 = !DILocation(line: 1742, column: 185, scope: !11422)
!11427 = !DILocation(line: 1742, column: 223, scope: !11428)
!11428 = !DILexicalBlockFile(scope: !10887, file: !1803, discriminator: 3)
!11429 = !DILocation(line: 1742, column: 232, scope: !11428)
!11430 = !DILocation(line: 1742, column: 185, scope: !11428)
!11431 = !DILocation(line: 1742, column: 242, scope: !11432)
!11432 = !DILexicalBlockFile(scope: !10887, file: !1803, discriminator: 4)
!11433 = !DILocation(line: 1742, column: 185, scope: !11432)
!11434 = !DILocation(line: 1742, column: 185, scope: !10886)
!11435 = !DILocation(line: 1742, column: 182, scope: !10886)
!11436 = !DILocation(line: 1742, column: 314, scope: !10886)
!11437 = !DILocation(line: 1742, column: 319, scope: !10886)
!11438 = !DILocation(line: 1742, column: 329, scope: !10886)
!11439 = !DILocation(line: 1742, column: 338, scope: !10886)
!11440 = !DILocation(line: 1742, column: 326, scope: !10886)
!11441 = !DILocation(line: 1742, column: 347, scope: !10886)
!11442 = !DILocation(line: 1742, column: 270, scope: !10886)
!11443 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10885)
!11444 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10885)
!11445 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10885)
!11446 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10885)
!11447 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10885)
!11448 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10885)
!11449 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10885)
!11450 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10885)
!11451 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10885)
!11452 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10885)
!11453 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10885)
!11454 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10885)
!11455 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10885)
!11456 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10885)
!11457 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10885)
!11458 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10885)
!11459 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10885)
!11460 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10885)
!11461 = !DILocation(line: 1742, column: 355, scope: !10886)
!11462 = !DILocation(line: 1742, column: 364, scope: !10886)
!11463 = !DILocation(line: 1742, column: 351, scope: !10886)
!11464 = !DILocation(line: 1742, column: 268, scope: !10886)
!11465 = !DILocation(line: 1742, column: 381, scope: !10886)
!11466 = !DILocation(line: 1742, column: 380, scope: !10886)
!11467 = !DILocation(line: 1742, column: 378, scope: !10886)
!11468 = !DILocation(line: 1742, column: 402, scope: !10886)
!11469 = !DILocation(line: 1742, column: 412, scope: !10886)
!11470 = !DILocation(line: 1742, column: 392, scope: !11471)
!11471 = !DILexicalBlockFile(scope: !10886, file: !1803, discriminator: 12)
!11472 = !DILocation(line: 1742, column: 423, scope: !10886)
!11473 = !DILocation(line: 1742, column: 421, scope: !10886)
!11474 = !DILocation(line: 1742, column: 390, scope: !10886)
!11475 = !DILocation(line: 1742, column: 444, scope: !10886)
!11476 = !DILocation(line: 1742, column: 436, scope: !10886)
!11477 = !DILocation(line: 1742, column: 434, scope: !10886)
!11478 = !DILocation(line: 1742, column: 467, scope: !10886)
!11479 = !DILocation(line: 1742, column: 459, scope: !10886)
!11480 = !DILocation(line: 1742, column: 457, scope: !10886)
!11481 = !DILocation(line: 1742, column: 819, scope: !10886)
!11482 = !DILocation(line: 1742, column: 821, scope: !11483)
!11483 = !DILexicalBlockFile(scope: !10889, file: !1803, discriminator: 6)
!11484 = distinct !{!11484, !11485}
!11485 = !DILocation(line: 1742, column: 821, scope: !10889)
!11486 = !DILocation(line: 1742, column: 840, scope: !11487)
!11487 = !DILexicalBlockFile(scope: !11488, file: !1803, discriminator: 7)
!11488 = distinct !DILexicalBlock(scope: !10889, file: !1803, line: 1742, column: 824)
!11489 = !DILocation(line: 1742, column: 835, scope: !11487)
!11490 = !DILocation(line: 1742, column: 857, scope: !11487)
!11491 = !DILocation(line: 1742, column: 875, scope: !11487)
!11492 = !DILocation(line: 1742, column: 887, scope: !11487)
!11493 = !DILocation(line: 1742, column: 884, scope: !11487)
!11494 = !DILocation(line: 1742, column: 872, scope: !11487)
!11495 = !DILocation(line: 1742, column: 856, scope: !11487)
!11496 = !DILocation(line: 1742, column: 894, scope: !11497)
!11497 = !DILexicalBlockFile(scope: !11488, file: !1803, discriminator: 8)
!11498 = !DILocation(line: 1742, column: 906, scope: !11497)
!11499 = !DILocation(line: 1742, column: 903, scope: !11497)
!11500 = !DILocation(line: 1742, column: 856, scope: !11497)
!11501 = !DILocation(line: 1742, column: 913, scope: !11502)
!11502 = !DILexicalBlockFile(scope: !11488, file: !1803, discriminator: 9)
!11503 = !DILocation(line: 1742, column: 856, scope: !11502)
!11504 = !DILocation(line: 1742, column: 856, scope: !11505)
!11505 = !DILexicalBlockFile(scope: !11488, file: !1803, discriminator: 10)
!11506 = !DILocation(line: 1742, column: 853, scope: !11505)
!11507 = !DILocation(line: 1742, column: 930, scope: !11505)
!11508 = !DILocation(line: 1742, column: 943, scope: !11509)
!11509 = !DILexicalBlockFile(scope: !10889, file: !1803, discriminator: 11)
!11510 = !DILocation(line: 1743, column: 52, scope: !10890)
!11511 = !DILocation(line: 1743, column: 38, scope: !10890)
!11512 = !DILocation(line: 1743, column: 36, scope: !10890)
!11513 = !DILocation(line: 1744, column: 35, scope: !10890)
!11514 = !DILocation(line: 1744, column: 42, scope: !10890)
!11515 = !DILocation(line: 1744, column: 47, scope: !10890)
!11516 = !DILocation(line: 1744, column: 33, scope: !10890)
!11517 = !DILocation(line: 1745, column: 36, scope: !10890)
!11518 = !DILocation(line: 1745, column: 54, scope: !11519)
!11519 = !DILexicalBlockFile(scope: !10890, file: !1803, discriminator: 1)
!11520 = !DILocation(line: 1745, column: 36, scope: !11519)
!11521 = !DILocation(line: 1745, column: 36, scope: !11522)
!11522 = !DILexicalBlockFile(scope: !10890, file: !1803, discriminator: 2)
!11523 = !DILocation(line: 1745, column: 36, scope: !11524)
!11524 = !DILexicalBlockFile(scope: !10890, file: !1803, discriminator: 3)
!11525 = !DILocation(line: 1745, column: 34, scope: !11524)
!11526 = !DILocation(line: 1746, column: 42, scope: !10890)
!11527 = !DILocation(line: 1746, column: 60, scope: !10890)
!11528 = !DILocation(line: 1746, column: 72, scope: !10890)
!11529 = !DILocation(line: 1746, column: 69, scope: !10890)
!11530 = !DILocation(line: 1746, column: 57, scope: !10890)
!11531 = !DILocation(line: 1746, column: 41, scope: !10890)
!11532 = !DILocation(line: 1746, column: 81, scope: !11519)
!11533 = !DILocation(line: 1746, column: 93, scope: !11519)
!11534 = !DILocation(line: 1746, column: 90, scope: !11519)
!11535 = !DILocation(line: 1746, column: 41, scope: !11519)
!11536 = !DILocation(line: 1746, column: 102, scope: !11522)
!11537 = !DILocation(line: 1746, column: 41, scope: !11522)
!11538 = !DILocation(line: 1746, column: 41, scope: !11524)
!11539 = !DILocation(line: 1746, column: 38, scope: !11524)
!11540 = !DILocation(line: 1750, column: 41, scope: !10890)
!11541 = !DILocation(line: 1750, column: 45, scope: !10890)
!11542 = !DILocation(line: 1750, column: 49, scope: !10890)
!11543 = !DILocation(line: 1750, column: 57, scope: !10890)
!11544 = !DILocation(line: 1750, column: 63, scope: !10890)
!11545 = !DILocation(line: 1750, column: 68, scope: !10890)
!11546 = !DILocation(line: 1750, column: 66, scope: !10890)
!11547 = !DILocation(line: 1750, column: 34, scope: !10890)
!11548 = !DILocation(line: 1750, column: 32, scope: !10890)
!11549 = !DILocation(line: 1752, column: 25, scope: !10890)
!11550 = !DILocation(line: 1752, column: 38, scope: !11551)
!11551 = !DILexicalBlockFile(scope: !10891, file: !1803, discriminator: 1)
!11552 = !DILocation(line: 1752, column: 25, scope: !11551)
!11553 = !DILocation(line: 1753, column: 21, scope: !10891)
!11554 = !DILocation(line: 1731, column: 68, scope: !11555)
!11555 = !DILexicalBlockFile(scope: !10892, file: !1803, discriminator: 2)
!11556 = !DILocation(line: 1731, column: 75, scope: !11555)
!11557 = !DILocation(line: 1731, column: 21, scope: !11555)
!11558 = distinct !{!11558, !11559}
!11559 = !DILocation(line: 1731, column: 21, scope: !10848)
!11560 = !DILocation(line: 1754, column: 21, scope: !10848)
!11561 = !DILocation(line: 1757, column: 32, scope: !10869)
!11562 = !DILocation(line: 1757, column: 26, scope: !10869)
!11563 = !DILocation(line: 1757, column: 37, scope: !11564)
!11564 = !DILexicalBlockFile(scope: !10868, file: !1803, discriminator: 1)
!11565 = !DILocation(line: 1757, column: 56, scope: !11564)
!11566 = !DILocation(line: 1757, column: 43, scope: !11564)
!11567 = !DILocation(line: 1757, column: 21, scope: !11564)
!11568 = !DILocalVariable(name: "cf", scope: !10867, file: !1803, line: 1758, type: !1031)
!11569 = !DILocation(line: 1758, column: 35, scope: !10867)
!11570 = !DILocation(line: 1758, column: 40, scope: !10867)
!11571 = !DILocalVariable(name: "len", scope: !10867, file: !1803, line: 1759, type: !1012)
!11572 = !DILocation(line: 1759, column: 29, scope: !10867)
!11573 = !DILocation(line: 1759, column: 35, scope: !10867)
!11574 = !DILocation(line: 1761, column: 25, scope: !10867)
!11575 = distinct !{!11575, !11574}
!11576 = !DILocalVariable(name: "code", scope: !10866, file: !1803, line: 1762, type: !1012)
!11577 = !DILocation(line: 1762, column: 33, scope: !10866)
!11578 = !DILocalVariable(name: "cb_idx", scope: !10866, file: !1803, line: 1763, type: !1013)
!11579 = !DILocation(line: 1763, column: 38, scope: !10866)
!11580 = !DILocation(line: 1765, column: 84, scope: !10866)
!11581 = !DILocation(line: 1765, column: 89, scope: !10866)
!11582 = !DILocation(line: 1765, column: 99, scope: !10866)
!11583 = !DILocation(line: 1765, column: 108, scope: !10866)
!11584 = !DILocation(line: 1765, column: 96, scope: !10866)
!11585 = !DILocation(line: 1765, column: 117, scope: !10866)
!11586 = !DILocation(line: 1765, column: 40, scope: !10866)
!11587 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10877)
!11588 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10877)
!11589 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10877)
!11590 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10877)
!11591 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10877)
!11592 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10877)
!11593 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10877)
!11594 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10877)
!11595 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10877)
!11596 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10877)
!11597 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10877)
!11598 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10877)
!11599 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10877)
!11600 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10877)
!11601 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10877)
!11602 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10877)
!11603 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10877)
!11604 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10877)
!11605 = !DILocation(line: 1765, column: 125, scope: !10866)
!11606 = !DILocation(line: 1765, column: 134, scope: !10866)
!11607 = !DILocation(line: 1765, column: 121, scope: !10866)
!11608 = !DILocation(line: 1765, column: 38, scope: !10866)
!11609 = !DILocation(line: 1766, column: 29, scope: !10866)
!11610 = distinct !{!11610, !11609}
!11611 = !DILocalVariable(name: "n", scope: !10865, file: !1803, line: 1766, type: !1012)
!11612 = !DILocation(line: 1766, column: 38, scope: !10865)
!11613 = !DILocalVariable(name: "nb_bits", scope: !10865, file: !1803, line: 1766, type: !1012)
!11614 = !DILocation(line: 1766, column: 41, scope: !10865)
!11615 = !DILocalVariable(name: "index", scope: !10865, file: !1803, line: 1766, type: !1013)
!11616 = !DILocation(line: 1766, column: 63, scope: !10865)
!11617 = !DILocation(line: 1766, column: 88, scope: !11618)
!11618 = !DILexicalBlockFile(scope: !10865, file: !1803, discriminator: 1)
!11619 = !DILocation(line: 1766, column: 78, scope: !11618)
!11620 = !DILocation(line: 1766, column: 76, scope: !11618)
!11621 = !DILocation(line: 1766, column: 117, scope: !11618)
!11622 = !DILocation(line: 1766, column: 109, scope: !11618)
!11623 = !DILocation(line: 1766, column: 107, scope: !11618)
!11624 = !DILocation(line: 1766, column: 140, scope: !11618)
!11625 = !DILocation(line: 1766, column: 132, scope: !11618)
!11626 = !DILocation(line: 1766, column: 130, scope: !11618)
!11627 = !DILocation(line: 1766, column: 164, scope: !11618)
!11628 = !DILocation(line: 1766, column: 166, scope: !11618)
!11629 = !DILocation(line: 1766, column: 155, scope: !11618)
!11630 = !DILocation(line: 1766, column: 186, scope: !11631)
!11631 = !DILexicalBlockFile(scope: !10863, file: !1803, discriminator: 2)
!11632 = !DILocation(line: 1766, column: 204, scope: !11631)
!11633 = !DILocation(line: 1766, column: 213, scope: !11631)
!11634 = !DILocation(line: 1766, column: 201, scope: !11631)
!11635 = !DILocation(line: 1766, column: 185, scope: !11631)
!11636 = !DILocation(line: 1766, column: 223, scope: !11637)
!11637 = !DILexicalBlockFile(scope: !10863, file: !1803, discriminator: 3)
!11638 = !DILocation(line: 1766, column: 232, scope: !11637)
!11639 = !DILocation(line: 1766, column: 185, scope: !11637)
!11640 = !DILocation(line: 1766, column: 242, scope: !11641)
!11641 = !DILexicalBlockFile(scope: !10863, file: !1803, discriminator: 4)
!11642 = !DILocation(line: 1766, column: 185, scope: !11641)
!11643 = !DILocation(line: 1766, column: 185, scope: !10862)
!11644 = !DILocation(line: 1766, column: 182, scope: !10862)
!11645 = !DILocation(line: 1766, column: 314, scope: !10862)
!11646 = !DILocation(line: 1766, column: 319, scope: !10862)
!11647 = !DILocation(line: 1766, column: 329, scope: !10862)
!11648 = !DILocation(line: 1766, column: 338, scope: !10862)
!11649 = !DILocation(line: 1766, column: 326, scope: !10862)
!11650 = !DILocation(line: 1766, column: 347, scope: !10862)
!11651 = !DILocation(line: 1766, column: 270, scope: !10862)
!11652 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10861)
!11653 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10861)
!11654 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10861)
!11655 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10861)
!11656 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10861)
!11657 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10861)
!11658 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10861)
!11659 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10861)
!11660 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10861)
!11661 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10861)
!11662 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10861)
!11663 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10861)
!11664 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10861)
!11665 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10861)
!11666 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10861)
!11667 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10861)
!11668 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10861)
!11669 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10861)
!11670 = !DILocation(line: 1766, column: 355, scope: !10862)
!11671 = !DILocation(line: 1766, column: 364, scope: !10862)
!11672 = !DILocation(line: 1766, column: 351, scope: !10862)
!11673 = !DILocation(line: 1766, column: 268, scope: !10862)
!11674 = !DILocation(line: 1766, column: 381, scope: !10862)
!11675 = !DILocation(line: 1766, column: 380, scope: !10862)
!11676 = !DILocation(line: 1766, column: 378, scope: !10862)
!11677 = !DILocation(line: 1766, column: 402, scope: !10862)
!11678 = !DILocation(line: 1766, column: 412, scope: !10862)
!11679 = !DILocation(line: 1766, column: 392, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !10862, file: !1803, discriminator: 12)
!11681 = !DILocation(line: 1766, column: 423, scope: !10862)
!11682 = !DILocation(line: 1766, column: 421, scope: !10862)
!11683 = !DILocation(line: 1766, column: 390, scope: !10862)
!11684 = !DILocation(line: 1766, column: 444, scope: !10862)
!11685 = !DILocation(line: 1766, column: 436, scope: !10862)
!11686 = !DILocation(line: 1766, column: 434, scope: !10862)
!11687 = !DILocation(line: 1766, column: 467, scope: !10862)
!11688 = !DILocation(line: 1766, column: 459, scope: !10862)
!11689 = !DILocation(line: 1766, column: 457, scope: !10862)
!11690 = !DILocation(line: 1766, column: 819, scope: !10862)
!11691 = !DILocation(line: 1766, column: 821, scope: !11692)
!11692 = !DILexicalBlockFile(scope: !10865, file: !1803, discriminator: 6)
!11693 = distinct !{!11693, !11694}
!11694 = !DILocation(line: 1766, column: 821, scope: !10865)
!11695 = !DILocation(line: 1766, column: 840, scope: !11696)
!11696 = !DILexicalBlockFile(scope: !11697, file: !1803, discriminator: 7)
!11697 = distinct !DILexicalBlock(scope: !10865, file: !1803, line: 1766, column: 824)
!11698 = !DILocation(line: 1766, column: 835, scope: !11696)
!11699 = !DILocation(line: 1766, column: 857, scope: !11696)
!11700 = !DILocation(line: 1766, column: 875, scope: !11696)
!11701 = !DILocation(line: 1766, column: 887, scope: !11696)
!11702 = !DILocation(line: 1766, column: 884, scope: !11696)
!11703 = !DILocation(line: 1766, column: 872, scope: !11696)
!11704 = !DILocation(line: 1766, column: 856, scope: !11696)
!11705 = !DILocation(line: 1766, column: 894, scope: !11706)
!11706 = !DILexicalBlockFile(scope: !11697, file: !1803, discriminator: 8)
!11707 = !DILocation(line: 1766, column: 906, scope: !11706)
!11708 = !DILocation(line: 1766, column: 903, scope: !11706)
!11709 = !DILocation(line: 1766, column: 856, scope: !11706)
!11710 = !DILocation(line: 1766, column: 913, scope: !11711)
!11711 = !DILexicalBlockFile(scope: !11697, file: !1803, discriminator: 9)
!11712 = !DILocation(line: 1766, column: 856, scope: !11711)
!11713 = !DILocation(line: 1766, column: 856, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !11697, file: !1803, discriminator: 10)
!11715 = !DILocation(line: 1766, column: 853, scope: !11714)
!11716 = !DILocation(line: 1766, column: 930, scope: !11714)
!11717 = !DILocation(line: 1766, column: 943, scope: !11718)
!11718 = !DILexicalBlockFile(scope: !10865, file: !1803, discriminator: 11)
!11719 = !DILocation(line: 1767, column: 52, scope: !10866)
!11720 = !DILocation(line: 1767, column: 38, scope: !10866)
!11721 = !DILocation(line: 1767, column: 36, scope: !10866)
!11722 = !DILocation(line: 1771, column: 40, scope: !10866)
!11723 = !DILocation(line: 1771, column: 44, scope: !10866)
!11724 = !DILocation(line: 1771, column: 48, scope: !10866)
!11725 = !DILocation(line: 1771, column: 56, scope: !10866)
!11726 = !DILocation(line: 1771, column: 61, scope: !10866)
!11727 = !DILocation(line: 1771, column: 59, scope: !10866)
!11728 = !DILocation(line: 1771, column: 34, scope: !10866)
!11729 = !DILocation(line: 1771, column: 32, scope: !10866)
!11730 = !DILocation(line: 1773, column: 25, scope: !10866)
!11731 = !DILocation(line: 1773, column: 38, scope: !11732)
!11732 = !DILexicalBlockFile(scope: !10867, file: !1803, discriminator: 1)
!11733 = !DILocation(line: 1773, column: 25, scope: !11732)
!11734 = !DILocation(line: 1774, column: 21, scope: !10867)
!11735 = !DILocation(line: 1757, column: 68, scope: !11736)
!11736 = !DILexicalBlockFile(scope: !10868, file: !1803, discriminator: 2)
!11737 = !DILocation(line: 1757, column: 75, scope: !11736)
!11738 = !DILocation(line: 1757, column: 21, scope: !11736)
!11739 = distinct !{!11739, !11740}
!11740 = !DILocation(line: 1757, column: 21, scope: !10848)
!11741 = !DILocation(line: 1775, column: 21, scope: !10848)
!11742 = !DILocation(line: 1779, column: 32, scope: !10847)
!11743 = !DILocation(line: 1779, column: 26, scope: !10847)
!11744 = !DILocation(line: 1779, column: 37, scope: !11745)
!11745 = !DILexicalBlockFile(scope: !10846, file: !1803, discriminator: 1)
!11746 = !DILocation(line: 1779, column: 56, scope: !11745)
!11747 = !DILocation(line: 1779, column: 43, scope: !11745)
!11748 = !DILocation(line: 1779, column: 21, scope: !11745)
!11749 = !DILocalVariable(name: "cf", scope: !10845, file: !1803, line: 1780, type: !1031)
!11750 = !DILocation(line: 1780, column: 35, scope: !10845)
!11751 = !DILocation(line: 1780, column: 40, scope: !10845)
!11752 = !DILocalVariable(name: "len", scope: !10845, file: !1803, line: 1781, type: !1012)
!11753 = !DILocation(line: 1781, column: 29, scope: !10845)
!11754 = !DILocation(line: 1781, column: 35, scope: !10845)
!11755 = !DILocation(line: 1783, column: 25, scope: !10845)
!11756 = distinct !{!11756, !11755}
!11757 = !DILocalVariable(name: "code", scope: !10844, file: !1803, line: 1784, type: !1012)
!11758 = !DILocation(line: 1784, column: 33, scope: !10844)
!11759 = !DILocalVariable(name: "nnz", scope: !10844, file: !1803, line: 1785, type: !1013)
!11760 = !DILocation(line: 1785, column: 38, scope: !10844)
!11761 = !DILocalVariable(name: "cb_idx", scope: !10844, file: !1803, line: 1786, type: !1013)
!11762 = !DILocation(line: 1786, column: 38, scope: !10844)
!11763 = !DILocalVariable(name: "sign", scope: !10844, file: !1803, line: 1787, type: !1013)
!11764 = !DILocation(line: 1787, column: 38, scope: !10844)
!11765 = !DILocation(line: 1789, column: 84, scope: !10844)
!11766 = !DILocation(line: 1789, column: 89, scope: !10844)
!11767 = !DILocation(line: 1789, column: 99, scope: !10844)
!11768 = !DILocation(line: 1789, column: 108, scope: !10844)
!11769 = !DILocation(line: 1789, column: 96, scope: !10844)
!11770 = !DILocation(line: 1789, column: 117, scope: !10844)
!11771 = !DILocation(line: 1789, column: 40, scope: !10844)
!11772 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10859)
!11773 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10859)
!11774 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10859)
!11775 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10859)
!11776 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10859)
!11777 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10859)
!11778 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10859)
!11779 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10859)
!11780 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10859)
!11781 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10859)
!11782 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10859)
!11783 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10859)
!11784 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10859)
!11785 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10859)
!11786 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10859)
!11787 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10859)
!11788 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10859)
!11789 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10859)
!11790 = !DILocation(line: 1789, column: 125, scope: !10844)
!11791 = !DILocation(line: 1789, column: 134, scope: !10844)
!11792 = !DILocation(line: 1789, column: 121, scope: !10844)
!11793 = !DILocation(line: 1789, column: 38, scope: !10844)
!11794 = !DILocation(line: 1790, column: 29, scope: !10844)
!11795 = distinct !{!11795, !11794}
!11796 = !DILocalVariable(name: "n", scope: !10843, file: !1803, line: 1790, type: !1012)
!11797 = !DILocation(line: 1790, column: 38, scope: !10843)
!11798 = !DILocalVariable(name: "nb_bits", scope: !10843, file: !1803, line: 1790, type: !1012)
!11799 = !DILocation(line: 1790, column: 41, scope: !10843)
!11800 = !DILocalVariable(name: "index", scope: !10843, file: !1803, line: 1790, type: !1013)
!11801 = !DILocation(line: 1790, column: 63, scope: !10843)
!11802 = !DILocation(line: 1790, column: 88, scope: !11803)
!11803 = !DILexicalBlockFile(scope: !10843, file: !1803, discriminator: 1)
!11804 = !DILocation(line: 1790, column: 78, scope: !11803)
!11805 = !DILocation(line: 1790, column: 76, scope: !11803)
!11806 = !DILocation(line: 1790, column: 117, scope: !11803)
!11807 = !DILocation(line: 1790, column: 109, scope: !11803)
!11808 = !DILocation(line: 1790, column: 107, scope: !11803)
!11809 = !DILocation(line: 1790, column: 140, scope: !11803)
!11810 = !DILocation(line: 1790, column: 132, scope: !11803)
!11811 = !DILocation(line: 1790, column: 130, scope: !11803)
!11812 = !DILocation(line: 1790, column: 164, scope: !11803)
!11813 = !DILocation(line: 1790, column: 166, scope: !11803)
!11814 = !DILocation(line: 1790, column: 155, scope: !11803)
!11815 = !DILocation(line: 1790, column: 186, scope: !11816)
!11816 = !DILexicalBlockFile(scope: !10841, file: !1803, discriminator: 2)
!11817 = !DILocation(line: 1790, column: 204, scope: !11816)
!11818 = !DILocation(line: 1790, column: 213, scope: !11816)
!11819 = !DILocation(line: 1790, column: 201, scope: !11816)
!11820 = !DILocation(line: 1790, column: 185, scope: !11816)
!11821 = !DILocation(line: 1790, column: 223, scope: !11822)
!11822 = !DILexicalBlockFile(scope: !10841, file: !1803, discriminator: 3)
!11823 = !DILocation(line: 1790, column: 232, scope: !11822)
!11824 = !DILocation(line: 1790, column: 185, scope: !11822)
!11825 = !DILocation(line: 1790, column: 242, scope: !11826)
!11826 = !DILexicalBlockFile(scope: !10841, file: !1803, discriminator: 4)
!11827 = !DILocation(line: 1790, column: 185, scope: !11826)
!11828 = !DILocation(line: 1790, column: 185, scope: !10840)
!11829 = !DILocation(line: 1790, column: 182, scope: !10840)
!11830 = !DILocation(line: 1790, column: 314, scope: !10840)
!11831 = !DILocation(line: 1790, column: 319, scope: !10840)
!11832 = !DILocation(line: 1790, column: 329, scope: !10840)
!11833 = !DILocation(line: 1790, column: 338, scope: !10840)
!11834 = !DILocation(line: 1790, column: 326, scope: !10840)
!11835 = !DILocation(line: 1790, column: 347, scope: !10840)
!11836 = !DILocation(line: 1790, column: 270, scope: !10840)
!11837 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10839)
!11838 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10839)
!11839 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10839)
!11840 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10839)
!11841 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10839)
!11842 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10839)
!11843 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10839)
!11844 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10839)
!11845 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10839)
!11846 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10839)
!11847 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10839)
!11848 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10839)
!11849 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10839)
!11850 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10839)
!11851 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10839)
!11852 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10839)
!11853 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10839)
!11854 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10839)
!11855 = !DILocation(line: 1790, column: 355, scope: !10840)
!11856 = !DILocation(line: 1790, column: 364, scope: !10840)
!11857 = !DILocation(line: 1790, column: 351, scope: !10840)
!11858 = !DILocation(line: 1790, column: 268, scope: !10840)
!11859 = !DILocation(line: 1790, column: 381, scope: !10840)
!11860 = !DILocation(line: 1790, column: 380, scope: !10840)
!11861 = !DILocation(line: 1790, column: 378, scope: !10840)
!11862 = !DILocation(line: 1790, column: 402, scope: !10840)
!11863 = !DILocation(line: 1790, column: 412, scope: !10840)
!11864 = !DILocation(line: 1790, column: 392, scope: !11865)
!11865 = !DILexicalBlockFile(scope: !10840, file: !1803, discriminator: 12)
!11866 = !DILocation(line: 1790, column: 423, scope: !10840)
!11867 = !DILocation(line: 1790, column: 421, scope: !10840)
!11868 = !DILocation(line: 1790, column: 390, scope: !10840)
!11869 = !DILocation(line: 1790, column: 444, scope: !10840)
!11870 = !DILocation(line: 1790, column: 436, scope: !10840)
!11871 = !DILocation(line: 1790, column: 434, scope: !10840)
!11872 = !DILocation(line: 1790, column: 467, scope: !10840)
!11873 = !DILocation(line: 1790, column: 459, scope: !10840)
!11874 = !DILocation(line: 1790, column: 457, scope: !10840)
!11875 = !DILocation(line: 1790, column: 819, scope: !10840)
!11876 = !DILocation(line: 1790, column: 821, scope: !11877)
!11877 = !DILexicalBlockFile(scope: !10843, file: !1803, discriminator: 6)
!11878 = distinct !{!11878, !11879}
!11879 = !DILocation(line: 1790, column: 821, scope: !10843)
!11880 = !DILocation(line: 1790, column: 840, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !11882, file: !1803, discriminator: 7)
!11882 = distinct !DILexicalBlock(scope: !10843, file: !1803, line: 1790, column: 824)
!11883 = !DILocation(line: 1790, column: 835, scope: !11881)
!11884 = !DILocation(line: 1790, column: 857, scope: !11881)
!11885 = !DILocation(line: 1790, column: 875, scope: !11881)
!11886 = !DILocation(line: 1790, column: 887, scope: !11881)
!11887 = !DILocation(line: 1790, column: 884, scope: !11881)
!11888 = !DILocation(line: 1790, column: 872, scope: !11881)
!11889 = !DILocation(line: 1790, column: 856, scope: !11881)
!11890 = !DILocation(line: 1790, column: 894, scope: !11891)
!11891 = !DILexicalBlockFile(scope: !11882, file: !1803, discriminator: 8)
!11892 = !DILocation(line: 1790, column: 906, scope: !11891)
!11893 = !DILocation(line: 1790, column: 903, scope: !11891)
!11894 = !DILocation(line: 1790, column: 856, scope: !11891)
!11895 = !DILocation(line: 1790, column: 913, scope: !11896)
!11896 = !DILexicalBlockFile(scope: !11882, file: !1803, discriminator: 9)
!11897 = !DILocation(line: 1790, column: 856, scope: !11896)
!11898 = !DILocation(line: 1790, column: 856, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !11882, file: !1803, discriminator: 10)
!11900 = !DILocation(line: 1790, column: 853, scope: !11899)
!11901 = !DILocation(line: 1790, column: 930, scope: !11899)
!11902 = !DILocation(line: 1790, column: 943, scope: !11903)
!11903 = !DILexicalBlockFile(scope: !10843, file: !1803, discriminator: 11)
!11904 = !DILocation(line: 1791, column: 52, scope: !10844)
!11905 = !DILocation(line: 1791, column: 38, scope: !10844)
!11906 = !DILocation(line: 1791, column: 36, scope: !10844)
!11907 = !DILocation(line: 1792, column: 35, scope: !10844)
!11908 = !DILocation(line: 1792, column: 42, scope: !10844)
!11909 = !DILocation(line: 1792, column: 47, scope: !10844)
!11910 = !DILocation(line: 1792, column: 33, scope: !10844)
!11911 = !DILocation(line: 1793, column: 36, scope: !10844)
!11912 = !DILocation(line: 1793, column: 52, scope: !11913)
!11913 = !DILexicalBlockFile(scope: !10844, file: !1803, discriminator: 1)
!11914 = !DILocation(line: 1793, column: 62, scope: !11913)
!11915 = !DILocation(line: 1793, column: 42, scope: !11913)
!11916 = !DILocation(line: 1793, column: 71, scope: !11913)
!11917 = !DILocation(line: 1793, column: 78, scope: !11913)
!11918 = !DILocation(line: 1793, column: 67, scope: !11913)
!11919 = !DILocation(line: 1793, column: 36, scope: !11913)
!11920 = !DILocation(line: 1793, column: 36, scope: !11921)
!11921 = !DILexicalBlockFile(scope: !10844, file: !1803, discriminator: 2)
!11922 = !DILocation(line: 1793, column: 36, scope: !11923)
!11923 = !DILexicalBlockFile(scope: !10844, file: !1803, discriminator: 3)
!11924 = !DILocation(line: 1793, column: 34, scope: !11923)
!11925 = !DILocation(line: 1794, column: 42, scope: !10844)
!11926 = !DILocation(line: 1794, column: 60, scope: !10844)
!11927 = !DILocation(line: 1794, column: 72, scope: !10844)
!11928 = !DILocation(line: 1794, column: 69, scope: !10844)
!11929 = !DILocation(line: 1794, column: 57, scope: !10844)
!11930 = !DILocation(line: 1794, column: 41, scope: !10844)
!11931 = !DILocation(line: 1794, column: 81, scope: !11913)
!11932 = !DILocation(line: 1794, column: 93, scope: !11913)
!11933 = !DILocation(line: 1794, column: 90, scope: !11913)
!11934 = !DILocation(line: 1794, column: 41, scope: !11913)
!11935 = !DILocation(line: 1794, column: 102, scope: !11921)
!11936 = !DILocation(line: 1794, column: 41, scope: !11921)
!11937 = !DILocation(line: 1794, column: 41, scope: !11923)
!11938 = !DILocation(line: 1794, column: 38, scope: !11923)
!11939 = !DILocation(line: 1798, column: 41, scope: !10844)
!11940 = !DILocation(line: 1798, column: 45, scope: !10844)
!11941 = !DILocation(line: 1798, column: 49, scope: !10844)
!11942 = !DILocation(line: 1798, column: 57, scope: !10844)
!11943 = !DILocation(line: 1798, column: 63, scope: !10844)
!11944 = !DILocation(line: 1798, column: 68, scope: !10844)
!11945 = !DILocation(line: 1798, column: 66, scope: !10844)
!11946 = !DILocation(line: 1798, column: 34, scope: !10844)
!11947 = !DILocation(line: 1798, column: 32, scope: !10844)
!11948 = !DILocation(line: 1800, column: 25, scope: !10844)
!11949 = !DILocation(line: 1800, column: 38, scope: !11950)
!11950 = !DILexicalBlockFile(scope: !10845, file: !1803, discriminator: 1)
!11951 = !DILocation(line: 1800, column: 25, scope: !11950)
!11952 = !DILocation(line: 1801, column: 21, scope: !10845)
!11953 = !DILocation(line: 1779, column: 68, scope: !11954)
!11954 = !DILexicalBlockFile(scope: !10846, file: !1803, discriminator: 2)
!11955 = !DILocation(line: 1779, column: 75, scope: !11954)
!11956 = !DILocation(line: 1779, column: 21, scope: !11954)
!11957 = distinct !{!11957, !11958}
!11958 = !DILocation(line: 1779, column: 21, scope: !10848)
!11959 = !DILocation(line: 1802, column: 21, scope: !10848)
!11960 = !DILocation(line: 1805, column: 32, scope: !10875)
!11961 = !DILocation(line: 1805, column: 26, scope: !10875)
!11962 = !DILocation(line: 1805, column: 37, scope: !11963)
!11963 = !DILexicalBlockFile(scope: !10874, file: !1803, discriminator: 1)
!11964 = !DILocation(line: 1805, column: 56, scope: !11963)
!11965 = !DILocation(line: 1805, column: 43, scope: !11963)
!11966 = !DILocation(line: 1805, column: 21, scope: !11963)
!11967 = !DILocalVariable(name: "cf", scope: !10873, file: !1803, line: 1810, type: !2554)
!11968 = !DILocation(line: 1810, column: 32, scope: !10873)
!11969 = !DILocation(line: 1810, column: 37, scope: !10873)
!11970 = !DILocalVariable(name: "icf", scope: !10873, file: !1803, line: 1811, type: !1033)
!11971 = !DILocation(line: 1811, column: 35, scope: !10873)
!11972 = !DILocation(line: 1811, column: 54, scope: !10873)
!11973 = !DILocation(line: 1811, column: 41, scope: !10873)
!11974 = !DILocalVariable(name: "len", scope: !10873, file: !1803, line: 1813, type: !1012)
!11975 = !DILocation(line: 1813, column: 29, scope: !10873)
!11976 = !DILocation(line: 1813, column: 35, scope: !10873)
!11977 = !DILocation(line: 1815, column: 25, scope: !10873)
!11978 = distinct !{!11978, !11977}
!11979 = !DILocalVariable(name: "code", scope: !10872, file: !1803, line: 1816, type: !1012)
!11980 = !DILocation(line: 1816, column: 33, scope: !10872)
!11981 = !DILocalVariable(name: "nzt", scope: !10872, file: !1803, line: 1817, type: !1013)
!11982 = !DILocation(line: 1817, column: 38, scope: !10872)
!11983 = !DILocalVariable(name: "nnz", scope: !10872, file: !1803, line: 1817, type: !1013)
!11984 = !DILocation(line: 1817, column: 43, scope: !10872)
!11985 = !DILocalVariable(name: "cb_idx", scope: !10872, file: !1803, line: 1818, type: !1013)
!11986 = !DILocation(line: 1818, column: 38, scope: !10872)
!11987 = !DILocalVariable(name: "bits", scope: !10872, file: !1803, line: 1819, type: !1027)
!11988 = !DILocation(line: 1819, column: 38, scope: !10872)
!11989 = !DILocalVariable(name: "j", scope: !10872, file: !1803, line: 1820, type: !1012)
!11990 = !DILocation(line: 1820, column: 33, scope: !10872)
!11991 = !DILocation(line: 1822, column: 84, scope: !10872)
!11992 = !DILocation(line: 1822, column: 89, scope: !10872)
!11993 = !DILocation(line: 1822, column: 99, scope: !10872)
!11994 = !DILocation(line: 1822, column: 108, scope: !10872)
!11995 = !DILocation(line: 1822, column: 96, scope: !10872)
!11996 = !DILocation(line: 1822, column: 117, scope: !10872)
!11997 = !DILocation(line: 1822, column: 40, scope: !10872)
!11998 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10871)
!11999 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10871)
!12000 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10871)
!12001 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10871)
!12002 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10871)
!12003 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10871)
!12004 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10871)
!12005 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10871)
!12006 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10871)
!12007 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10871)
!12008 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10871)
!12009 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10871)
!12010 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10871)
!12011 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10871)
!12012 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10871)
!12013 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10871)
!12014 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10871)
!12015 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10871)
!12016 = !DILocation(line: 1822, column: 125, scope: !10872)
!12017 = !DILocation(line: 1822, column: 134, scope: !10872)
!12018 = !DILocation(line: 1822, column: 121, scope: !10872)
!12019 = !DILocation(line: 1822, column: 38, scope: !10872)
!12020 = !DILocation(line: 1823, column: 29, scope: !10872)
!12021 = distinct !{!12021, !12020}
!12022 = !DILocalVariable(name: "n", scope: !10883, file: !1803, line: 1823, type: !1012)
!12023 = !DILocation(line: 1823, column: 38, scope: !10883)
!12024 = !DILocalVariable(name: "nb_bits", scope: !10883, file: !1803, line: 1823, type: !1012)
!12025 = !DILocation(line: 1823, column: 41, scope: !10883)
!12026 = !DILocalVariable(name: "index", scope: !10883, file: !1803, line: 1823, type: !1013)
!12027 = !DILocation(line: 1823, column: 63, scope: !10883)
!12028 = !DILocation(line: 1823, column: 88, scope: !12029)
!12029 = !DILexicalBlockFile(scope: !10883, file: !1803, discriminator: 1)
!12030 = !DILocation(line: 1823, column: 78, scope: !12029)
!12031 = !DILocation(line: 1823, column: 76, scope: !12029)
!12032 = !DILocation(line: 1823, column: 117, scope: !12029)
!12033 = !DILocation(line: 1823, column: 109, scope: !12029)
!12034 = !DILocation(line: 1823, column: 107, scope: !12029)
!12035 = !DILocation(line: 1823, column: 140, scope: !12029)
!12036 = !DILocation(line: 1823, column: 132, scope: !12029)
!12037 = !DILocation(line: 1823, column: 130, scope: !12029)
!12038 = !DILocation(line: 1823, column: 164, scope: !12029)
!12039 = !DILocation(line: 1823, column: 166, scope: !12029)
!12040 = !DILocation(line: 1823, column: 155, scope: !12029)
!12041 = !DILocation(line: 1823, column: 186, scope: !12042)
!12042 = !DILexicalBlockFile(scope: !10881, file: !1803, discriminator: 2)
!12043 = !DILocation(line: 1823, column: 204, scope: !12042)
!12044 = !DILocation(line: 1823, column: 213, scope: !12042)
!12045 = !DILocation(line: 1823, column: 201, scope: !12042)
!12046 = !DILocation(line: 1823, column: 185, scope: !12042)
!12047 = !DILocation(line: 1823, column: 223, scope: !12048)
!12048 = !DILexicalBlockFile(scope: !10881, file: !1803, discriminator: 3)
!12049 = !DILocation(line: 1823, column: 232, scope: !12048)
!12050 = !DILocation(line: 1823, column: 185, scope: !12048)
!12051 = !DILocation(line: 1823, column: 242, scope: !12052)
!12052 = !DILexicalBlockFile(scope: !10881, file: !1803, discriminator: 4)
!12053 = !DILocation(line: 1823, column: 185, scope: !12052)
!12054 = !DILocation(line: 1823, column: 185, scope: !10880)
!12055 = !DILocation(line: 1823, column: 182, scope: !10880)
!12056 = !DILocation(line: 1823, column: 314, scope: !10880)
!12057 = !DILocation(line: 1823, column: 319, scope: !10880)
!12058 = !DILocation(line: 1823, column: 329, scope: !10880)
!12059 = !DILocation(line: 1823, column: 338, scope: !10880)
!12060 = !DILocation(line: 1823, column: 326, scope: !10880)
!12061 = !DILocation(line: 1823, column: 347, scope: !10880)
!12062 = !DILocation(line: 1823, column: 270, scope: !10880)
!12063 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10879)
!12064 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10879)
!12065 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10879)
!12066 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10879)
!12067 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10879)
!12068 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10879)
!12069 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10879)
!12070 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10879)
!12071 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10879)
!12072 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10879)
!12073 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10879)
!12074 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10879)
!12075 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10879)
!12076 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10879)
!12077 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10879)
!12078 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10879)
!12079 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10879)
!12080 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10879)
!12081 = !DILocation(line: 1823, column: 355, scope: !10880)
!12082 = !DILocation(line: 1823, column: 364, scope: !10880)
!12083 = !DILocation(line: 1823, column: 351, scope: !10880)
!12084 = !DILocation(line: 1823, column: 268, scope: !10880)
!12085 = !DILocation(line: 1823, column: 381, scope: !10880)
!12086 = !DILocation(line: 1823, column: 380, scope: !10880)
!12087 = !DILocation(line: 1823, column: 378, scope: !10880)
!12088 = !DILocation(line: 1823, column: 402, scope: !10880)
!12089 = !DILocation(line: 1823, column: 412, scope: !10880)
!12090 = !DILocation(line: 1823, column: 392, scope: !12091)
!12091 = !DILexicalBlockFile(scope: !10880, file: !1803, discriminator: 12)
!12092 = !DILocation(line: 1823, column: 423, scope: !10880)
!12093 = !DILocation(line: 1823, column: 421, scope: !10880)
!12094 = !DILocation(line: 1823, column: 390, scope: !10880)
!12095 = !DILocation(line: 1823, column: 444, scope: !10880)
!12096 = !DILocation(line: 1823, column: 436, scope: !10880)
!12097 = !DILocation(line: 1823, column: 434, scope: !10880)
!12098 = !DILocation(line: 1823, column: 467, scope: !10880)
!12099 = !DILocation(line: 1823, column: 459, scope: !10880)
!12100 = !DILocation(line: 1823, column: 457, scope: !10880)
!12101 = !DILocation(line: 1823, column: 819, scope: !10880)
!12102 = !DILocation(line: 1823, column: 821, scope: !12103)
!12103 = !DILexicalBlockFile(scope: !10883, file: !1803, discriminator: 6)
!12104 = distinct !{!12104, !12105}
!12105 = !DILocation(line: 1823, column: 821, scope: !10883)
!12106 = !DILocation(line: 1823, column: 840, scope: !12107)
!12107 = !DILexicalBlockFile(scope: !12108, file: !1803, discriminator: 7)
!12108 = distinct !DILexicalBlock(scope: !10883, file: !1803, line: 1823, column: 824)
!12109 = !DILocation(line: 1823, column: 835, scope: !12107)
!12110 = !DILocation(line: 1823, column: 857, scope: !12107)
!12111 = !DILocation(line: 1823, column: 875, scope: !12107)
!12112 = !DILocation(line: 1823, column: 887, scope: !12107)
!12113 = !DILocation(line: 1823, column: 884, scope: !12107)
!12114 = !DILocation(line: 1823, column: 872, scope: !12107)
!12115 = !DILocation(line: 1823, column: 856, scope: !12107)
!12116 = !DILocation(line: 1823, column: 894, scope: !12117)
!12117 = !DILexicalBlockFile(scope: !12108, file: !1803, discriminator: 8)
!12118 = !DILocation(line: 1823, column: 906, scope: !12117)
!12119 = !DILocation(line: 1823, column: 903, scope: !12117)
!12120 = !DILocation(line: 1823, column: 856, scope: !12117)
!12121 = !DILocation(line: 1823, column: 913, scope: !12122)
!12122 = !DILexicalBlockFile(scope: !12108, file: !1803, discriminator: 9)
!12123 = !DILocation(line: 1823, column: 856, scope: !12122)
!12124 = !DILocation(line: 1823, column: 856, scope: !12125)
!12125 = !DILexicalBlockFile(scope: !12108, file: !1803, discriminator: 10)
!12126 = !DILocation(line: 1823, column: 853, scope: !12125)
!12127 = !DILocation(line: 1823, column: 930, scope: !12125)
!12128 = !DILocation(line: 1823, column: 943, scope: !12129)
!12129 = !DILexicalBlockFile(scope: !10883, file: !1803, discriminator: 11)
!12130 = !DILocation(line: 1825, column: 34, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !10872, file: !1803, line: 1825, column: 33)
!12132 = !DILocation(line: 1825, column: 33, scope: !10872)
!12133 = !DILocation(line: 1826, column: 37, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12131, file: !1803, line: 1825, column: 40)
!12135 = !DILocation(line: 1826, column: 40, scope: !12134)
!12136 = !DILocation(line: 1827, column: 37, scope: !12134)
!12137 = !DILocation(line: 1827, column: 40, scope: !12134)
!12138 = !DILocation(line: 1828, column: 33, scope: !12134)
!12139 = !DILocation(line: 1831, column: 52, scope: !10872)
!12140 = !DILocation(line: 1831, column: 38, scope: !10872)
!12141 = !DILocation(line: 1831, column: 36, scope: !10872)
!12142 = !DILocation(line: 1832, column: 35, scope: !10872)
!12143 = !DILocation(line: 1832, column: 42, scope: !10872)
!12144 = !DILocation(line: 1832, column: 33, scope: !10872)
!12145 = !DILocation(line: 1833, column: 35, scope: !10872)
!12146 = !DILocation(line: 1833, column: 42, scope: !10872)
!12147 = !DILocation(line: 1833, column: 33, scope: !10872)
!12148 = !DILocation(line: 1834, column: 46, scope: !10872)
!12149 = !DILocation(line: 1834, column: 56, scope: !10872)
!12150 = !DILocation(line: 1834, column: 36, scope: !10872)
!12151 = !DILocation(line: 1834, column: 68, scope: !10872)
!12152 = !DILocation(line: 1834, column: 67, scope: !10872)
!12153 = !DILocation(line: 1834, column: 61, scope: !10872)
!12154 = !DILocation(line: 1834, column: 34, scope: !10872)
!12155 = !DILocation(line: 1835, column: 42, scope: !10872)
!12156 = !DILocation(line: 1835, column: 60, scope: !10872)
!12157 = !DILocation(line: 1835, column: 72, scope: !10872)
!12158 = !DILocation(line: 1835, column: 69, scope: !10872)
!12159 = !DILocation(line: 1835, column: 57, scope: !10872)
!12160 = !DILocation(line: 1835, column: 41, scope: !10872)
!12161 = !DILocation(line: 1835, column: 81, scope: !12162)
!12162 = !DILexicalBlockFile(scope: !10872, file: !1803, discriminator: 1)
!12163 = !DILocation(line: 1835, column: 93, scope: !12162)
!12164 = !DILocation(line: 1835, column: 90, scope: !12162)
!12165 = !DILocation(line: 1835, column: 41, scope: !12162)
!12166 = !DILocation(line: 1835, column: 102, scope: !12167)
!12167 = !DILexicalBlockFile(scope: !10872, file: !1803, discriminator: 2)
!12168 = !DILocation(line: 1835, column: 41, scope: !12167)
!12169 = !DILocation(line: 1835, column: 41, scope: !12170)
!12170 = !DILexicalBlockFile(scope: !10872, file: !1803, discriminator: 3)
!12171 = !DILocation(line: 1835, column: 38, scope: !12170)
!12172 = !DILocation(line: 1837, column: 36, scope: !10902)
!12173 = !DILocation(line: 1837, column: 34, scope: !10902)
!12174 = !DILocation(line: 1837, column: 41, scope: !12175)
!12175 = !DILexicalBlockFile(scope: !10901, file: !1803, discriminator: 1)
!12176 = !DILocation(line: 1837, column: 43, scope: !12175)
!12177 = !DILocation(line: 1837, column: 29, scope: !12175)
!12178 = !DILocation(line: 1838, column: 37, scope: !10899)
!12179 = !DILocation(line: 1838, column: 46, scope: !10899)
!12180 = !DILocation(line: 1838, column: 44, scope: !10899)
!12181 = !DILocation(line: 1838, column: 41, scope: !10899)
!12182 = !DILocation(line: 1838, column: 37, scope: !10900)
!12183 = !DILocalVariable(name: "b", scope: !10898, file: !1803, line: 1839, type: !1027)
!12184 = !DILocation(line: 1839, column: 46, scope: !10898)
!12185 = !DILocalVariable(name: "n", scope: !10898, file: !1803, line: 1840, type: !1012)
!12186 = !DILocation(line: 1840, column: 41, scope: !10898)
!12187 = !DILocation(line: 1843, column: 92, scope: !10898)
!12188 = !DILocation(line: 1843, column: 97, scope: !10898)
!12189 = !DILocation(line: 1843, column: 107, scope: !10898)
!12190 = !DILocation(line: 1843, column: 116, scope: !10898)
!12191 = !DILocation(line: 1843, column: 104, scope: !10898)
!12192 = !DILocation(line: 1843, column: 125, scope: !10898)
!12193 = !DILocation(line: 1843, column: 48, scope: !10898)
!12194 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !10897)
!12195 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !10897)
!12196 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !10897)
!12197 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !10897)
!12198 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !10897)
!12199 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !10897)
!12200 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !10897)
!12201 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !10897)
!12202 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !10897)
!12203 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !10897)
!12204 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !10897)
!12205 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !10897)
!12206 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !10897)
!12207 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !10897)
!12208 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !10897)
!12209 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !10897)
!12210 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !10897)
!12211 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !10897)
!12212 = !DILocation(line: 1843, column: 133, scope: !10898)
!12213 = !DILocation(line: 1843, column: 142, scope: !10898)
!12214 = !DILocation(line: 1843, column: 129, scope: !10898)
!12215 = !DILocation(line: 1843, column: 46, scope: !10898)
!12216 = !DILocation(line: 1844, column: 53, scope: !10898)
!12217 = !DILocation(line: 1844, column: 39, scope: !10898)
!12218 = !DILocation(line: 1845, column: 68, scope: !10898)
!12219 = !DILocation(line: 1845, column: 67, scope: !10898)
!12220 = !DILocation(line: 1845, column: 70, scope: !10898)
!12221 = !DILocation(line: 1845, column: 52, scope: !10898)
!12222 = !DILocation(line: 1845, column: 50, scope: !10898)
!12223 = !DILocation(line: 1845, column: 44, scope: !10898)
!12224 = !DILocation(line: 1845, column: 39, scope: !10898)
!12225 = !DILocation(line: 1847, column: 41, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !10898, file: !1803, line: 1847, column: 41)
!12227 = !DILocation(line: 1847, column: 43, scope: !12226)
!12228 = !DILocation(line: 1847, column: 41, scope: !10898)
!12229 = !DILocation(line: 1848, column: 48, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12226, file: !1803, line: 1847, column: 48)
!12231 = !DILocation(line: 1848, column: 52, scope: !12230)
!12232 = !DILocation(line: 1848, column: 41, scope: !12230)
!12233 = !DILocation(line: 1849, column: 41, scope: !12230)
!12234 = !DILocation(line: 1852, column: 37, scope: !10898)
!12235 = distinct !{!12235, !12234}
!12236 = !DILocation(line: 1852, column: 56, scope: !12237)
!12237 = !DILexicalBlockFile(scope: !12238, file: !1803, discriminator: 1)
!12238 = distinct !DILexicalBlock(scope: !10898, file: !1803, line: 1852, column: 40)
!12239 = !DILocation(line: 1852, column: 58, scope: !12237)
!12240 = !DILocation(line: 1852, column: 51, scope: !12237)
!12241 = !DILocation(line: 1852, column: 77, scope: !12237)
!12242 = !DILocation(line: 1852, column: 95, scope: !12237)
!12243 = !DILocation(line: 1852, column: 107, scope: !12237)
!12244 = !DILocation(line: 1852, column: 109, scope: !12237)
!12245 = !DILocation(line: 1852, column: 104, scope: !12237)
!12246 = !DILocation(line: 1852, column: 92, scope: !12237)
!12247 = !DILocation(line: 1852, column: 76, scope: !12237)
!12248 = !DILocation(line: 1852, column: 118, scope: !12249)
!12249 = !DILexicalBlockFile(scope: !12238, file: !1803, discriminator: 2)
!12250 = !DILocation(line: 1852, column: 130, scope: !12249)
!12251 = !DILocation(line: 1852, column: 132, scope: !12249)
!12252 = !DILocation(line: 1852, column: 127, scope: !12249)
!12253 = !DILocation(line: 1852, column: 76, scope: !12249)
!12254 = !DILocation(line: 1852, column: 141, scope: !12255)
!12255 = !DILexicalBlockFile(scope: !12238, file: !1803, discriminator: 3)
!12256 = !DILocation(line: 1852, column: 76, scope: !12255)
!12257 = !DILocation(line: 1852, column: 76, scope: !12258)
!12258 = !DILexicalBlockFile(scope: !12238, file: !1803, discriminator: 4)
!12259 = !DILocation(line: 1852, column: 73, scope: !12258)
!12260 = !DILocation(line: 1852, column: 158, scope: !12258)
!12261 = !DILocation(line: 1853, column: 39, scope: !10898)
!12262 = !DILocation(line: 1854, column: 47, scope: !10898)
!12263 = !DILocation(line: 1854, column: 44, scope: !10898)
!12264 = !DILocation(line: 1854, column: 62, scope: !10898)
!12265 = !DILocation(line: 1854, column: 72, scope: !10898)
!12266 = !DILocation(line: 1854, column: 52, scope: !10898)
!12267 = !DILocation(line: 1854, column: 50, scope: !10898)
!12268 = !DILocation(line: 1854, column: 39, scope: !10898)
!12269 = !DILocation(line: 1855, column: 50, scope: !10898)
!12270 = !DILocation(line: 1855, column: 68, scope: !10898)
!12271 = !DILocation(line: 1855, column: 80, scope: !10898)
!12272 = !DILocation(line: 1855, column: 77, scope: !10898)
!12273 = !DILocation(line: 1855, column: 65, scope: !10898)
!12274 = !DILocation(line: 1855, column: 49, scope: !10898)
!12275 = !DILocation(line: 1855, column: 87, scope: !12276)
!12276 = !DILexicalBlockFile(scope: !10898, file: !1803, discriminator: 1)
!12277 = !DILocation(line: 1855, column: 99, scope: !12276)
!12278 = !DILocation(line: 1855, column: 96, scope: !12276)
!12279 = !DILocation(line: 1855, column: 49, scope: !12276)
!12280 = !DILocation(line: 1855, column: 106, scope: !12281)
!12281 = !DILexicalBlockFile(scope: !10898, file: !1803, discriminator: 2)
!12282 = !DILocation(line: 1855, column: 49, scope: !12281)
!12283 = !DILocation(line: 1855, column: 49, scope: !12284)
!12284 = !DILexicalBlockFile(scope: !10898, file: !1803, discriminator: 3)
!12285 = !DILocation(line: 1855, column: 46, scope: !12284)
!12286 = !DILocation(line: 1862, column: 58, scope: !10898)
!12287 = !DILocation(line: 1862, column: 46, scope: !10898)
!12288 = !DILocation(line: 1862, column: 64, scope: !10898)
!12289 = !DILocation(line: 1862, column: 69, scope: !10898)
!12290 = !DILocation(line: 1862, column: 61, scope: !10898)
!12291 = !DILocation(line: 1862, column: 41, scope: !10898)
!12292 = !DILocation(line: 1862, column: 44, scope: !10898)
!12293 = !DILocation(line: 1864, column: 42, scope: !10898)
!12294 = !DILocation(line: 1865, column: 33, scope: !10898)
!12295 = !DILocalVariable(name: "v", scope: !12296, file: !1803, line: 1872, type: !1013)
!12296 = distinct !DILexicalBlock(scope: !10899, file: !1803, line: 1865, column: 40)
!12297 = !DILocation(line: 1872, column: 46, scope: !12296)
!12298 = !DILocation(line: 1872, column: 72, scope: !12296)
!12299 = !DILocation(line: 1872, column: 79, scope: !12296)
!12300 = !DILocation(line: 1872, column: 50, scope: !12296)
!12301 = !DILocation(line: 1872, column: 68, scope: !12296)
!12302 = !DILocation(line: 1873, column: 47, scope: !12296)
!12303 = !DILocation(line: 1873, column: 52, scope: !12296)
!12304 = !DILocation(line: 1873, column: 64, scope: !12296)
!12305 = !DILocation(line: 1873, column: 62, scope: !12296)
!12306 = !DILocation(line: 1873, column: 41, scope: !12296)
!12307 = !DILocation(line: 1873, column: 44, scope: !12296)
!12308 = !DILocation(line: 1875, column: 48, scope: !12296)
!12309 = !DILocation(line: 1875, column: 47, scope: !12296)
!12310 = !DILocation(line: 1875, column: 46, scope: !12296)
!12311 = !DILocation(line: 1875, column: 42, scope: !12296)
!12312 = !DILocation(line: 1877, column: 40, scope: !10900)
!12313 = !DILocation(line: 1878, column: 29, scope: !10900)
!12314 = !DILocation(line: 1837, column: 49, scope: !12315)
!12315 = !DILexicalBlockFile(scope: !10901, file: !1803, discriminator: 2)
!12316 = !DILocation(line: 1837, column: 29, scope: !12315)
!12317 = distinct !{!12317, !12318}
!12318 = !DILocation(line: 1837, column: 29, scope: !10872)
!12319 = !DILocation(line: 1879, column: 25, scope: !10872)
!12320 = !DILocation(line: 1879, column: 38, scope: !12321)
!12321 = !DILexicalBlockFile(scope: !10873, file: !1803, discriminator: 1)
!12322 = !DILocation(line: 1879, column: 25, scope: !12321)
!12323 = !DILocation(line: 1881, column: 25, scope: !10873)
!12324 = !DILocation(line: 1881, column: 29, scope: !10873)
!12325 = !DILocation(line: 1881, column: 35, scope: !10873)
!12326 = !DILocation(line: 1881, column: 54, scope: !10873)
!12327 = !DILocation(line: 1881, column: 59, scope: !10873)
!12328 = !DILocation(line: 1881, column: 67, scope: !10873)
!12329 = !DILocation(line: 1881, column: 64, scope: !10873)
!12330 = !DILocation(line: 1881, column: 73, scope: !10873)
!12331 = !DILocation(line: 1883, column: 21, scope: !10873)
!12332 = !DILocation(line: 1805, column: 68, scope: !12333)
!12333 = !DILexicalBlockFile(scope: !10874, file: !1803, discriminator: 2)
!12334 = !DILocation(line: 1805, column: 75, scope: !12333)
!12335 = !DILocation(line: 1805, column: 21, scope: !12333)
!12336 = distinct !{!12336, !12337}
!12337 = !DILocation(line: 1805, column: 21, scope: !10848)
!12338 = !DILocation(line: 1884, column: 17, scope: !10848)
!12339 = !DILocation(line: 1886, column: 31, scope: !10849)
!12340 = !DILocation(line: 1886, column: 18, scope: !10849)
!12341 = !DILocation(line: 1886, column: 23, scope: !10849)
!12342 = !DILocation(line: 1886, column: 29, scope: !10849)
!12343 = !DILocation(line: 1888, column: 9, scope: !10852)
!12344 = !DILocation(line: 1664, column: 40, scope: !12345)
!12345 = !DILexicalBlockFile(scope: !10853, file: !1803, discriminator: 2)
!12346 = !DILocation(line: 1664, column: 47, scope: !12345)
!12347 = !DILocation(line: 1664, column: 9, scope: !12345)
!12348 = distinct !{!12348, !12349}
!12349 = !DILocation(line: 1664, column: 9, scope: !10855)
!12350 = !DILocation(line: 1889, column: 17, scope: !10855)
!12351 = !DILocation(line: 1889, column: 23, scope: !10855)
!12352 = !DILocation(line: 1889, column: 14, scope: !10855)
!12353 = !DILocation(line: 1890, column: 5, scope: !10855)
!12354 = !DILocation(line: 1661, column: 46, scope: !12355)
!12355 = !DILexicalBlockFile(scope: !10856, file: !1803, discriminator: 2)
!12356 = !DILocation(line: 1661, column: 5, scope: !12355)
!12357 = distinct !{!12357, !12358}
!12358 = !DILocation(line: 1661, column: 5, scope: !10833)
!12359 = !DILocation(line: 1892, column: 9, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !10833, file: !1803, line: 1892, column: 9)
!12361 = !DILocation(line: 1892, column: 9, scope: !10833)
!12362 = !DILocation(line: 1893, column: 13, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12360, file: !1803, line: 1892, column: 24)
!12364 = !DILocation(line: 1894, column: 16, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12363, file: !1803, line: 1894, column: 9)
!12366 = !DILocation(line: 1894, column: 14, scope: !12365)
!12367 = !DILocation(line: 1894, column: 21, scope: !12368)
!12368 = !DILexicalBlockFile(scope: !12369, file: !1803, discriminator: 1)
!12369 = distinct !DILexicalBlock(scope: !12365, file: !1803, line: 1894, column: 9)
!12370 = !DILocation(line: 1894, column: 25, scope: !12368)
!12371 = !DILocation(line: 1894, column: 32, scope: !12368)
!12372 = !DILocation(line: 1894, column: 23, scope: !12368)
!12373 = !DILocation(line: 1894, column: 9, scope: !12368)
!12374 = !DILocalVariable(name: "co", scope: !12375, file: !1803, line: 1895, type: !1017)
!12375 = distinct !DILexicalBlock(scope: !12369, file: !1803, line: 1894, column: 48)
!12376 = !DILocation(line: 1895, column: 22, scope: !12375)
!12377 = !DILocation(line: 1895, column: 49, scope: !12375)
!12378 = !DILocation(line: 1895, column: 38, scope: !12375)
!12379 = !DILocation(line: 1895, column: 45, scope: !12375)
!12380 = !DILocation(line: 1895, column: 27, scope: !12375)
!12381 = !DILocation(line: 1896, column: 13, scope: !12375)
!12382 = !DILocation(line: 1896, column: 28, scope: !12383)
!12383 = !DILexicalBlockFile(scope: !12375, file: !1803, discriminator: 1)
!12384 = !DILocation(line: 1896, column: 32, scope: !12383)
!12385 = !DILocation(line: 1896, column: 20, scope: !12383)
!12386 = !DILocation(line: 1896, column: 51, scope: !12383)
!12387 = !DILocation(line: 1896, column: 40, scope: !12383)
!12388 = !DILocation(line: 1896, column: 47, scope: !12383)
!12389 = !DILocation(line: 1896, column: 37, scope: !12383)
!12390 = !DILocation(line: 1896, column: 13, scope: !12383)
!12391 = !DILocation(line: 1897, column: 20, scope: !12375)
!12392 = !DILocation(line: 1896, column: 13, scope: !12393)
!12393 = !DILexicalBlockFile(scope: !12375, file: !1803, discriminator: 2)
!12394 = distinct !{!12394, !12381}
!12395 = !DILocation(line: 1898, column: 27, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12375, file: !1803, line: 1898, column: 17)
!12397 = !DILocation(line: 1898, column: 17, scope: !12396)
!12398 = !DILocation(line: 1898, column: 32, scope: !12396)
!12399 = !DILocation(line: 1898, column: 44, scope: !12396)
!12400 = !DILocation(line: 1898, column: 50, scope: !12401)
!12401 = !DILexicalBlockFile(scope: !12396, file: !1803, discriminator: 1)
!12402 = !DILocation(line: 1898, column: 47, scope: !12401)
!12403 = !DILocation(line: 1898, column: 17, scope: !12401)
!12404 = !DILocalVariable(name: "ico", scope: !12405, file: !1803, line: 1899, type: !1017)
!12405 = distinct !DILexicalBlock(scope: !12396, file: !1803, line: 1898, column: 56)
!12406 = !DILocation(line: 1899, column: 26, scope: !12405)
!12407 = !DILocation(line: 1899, column: 44, scope: !12405)
!12408 = !DILocation(line: 1899, column: 33, scope: !12405)
!12409 = !DILocation(line: 1899, column: 40, scope: !12405)
!12410 = !DILocation(line: 1899, column: 32, scope: !12405)
!12411 = !DILocation(line: 1906, column: 21, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12405, file: !1803, line: 1906, column: 21)
!12413 = !DILocation(line: 1906, column: 21, scope: !12405)
!12414 = !DILocation(line: 1907, column: 30, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12412, file: !1803, line: 1906, column: 25)
!12416 = !DILocation(line: 1907, column: 27, scope: !12415)
!12417 = !DILocation(line: 1907, column: 24, scope: !12415)
!12418 = !DILocation(line: 1908, column: 27, scope: !12415)
!12419 = !DILocation(line: 1908, column: 50, scope: !12415)
!12420 = !DILocation(line: 1908, column: 44, scope: !12415)
!12421 = !DILocation(line: 1908, column: 38, scope: !12422)
!12422 = !DILexicalBlockFile(scope: !12415, file: !1803, discriminator: 4)
!12423 = !DILocation(line: 1908, column: 32, scope: !12424)
!12424 = !DILexicalBlockFile(scope: !12415, file: !1803, discriminator: 5)
!12425 = !DILocation(line: 1908, column: 30, scope: !12415)
!12426 = !DILocation(line: 1908, column: 59, scope: !12415)
!12427 = !DILocation(line: 1908, column: 62, scope: !12415)
!12428 = !DILocation(line: 1908, column: 69, scope: !12429)
!12429 = !DILexicalBlockFile(scope: !12415, file: !1803, discriminator: 1)
!12430 = !DILocation(line: 1908, column: 68, scope: !12429)
!12431 = !DILocation(line: 1908, column: 59, scope: !12429)
!12432 = !DILocation(line: 1908, column: 75, scope: !12433)
!12433 = !DILexicalBlockFile(scope: !12415, file: !1803, discriminator: 2)
!12434 = !DILocation(line: 1908, column: 59, scope: !12433)
!12435 = !DILocation(line: 1908, column: 59, scope: !12436)
!12436 = !DILexicalBlockFile(scope: !12415, file: !1803, discriminator: 3)
!12437 = !DILocation(line: 1908, column: 56, scope: !12436)
!12438 = !DILocation(line: 1908, column: 25, scope: !12436)
!12439 = !DILocation(line: 1909, column: 17, scope: !12415)
!12440 = !DILocation(line: 1910, column: 58, scope: !12405)
!12441 = !DILocation(line: 1910, column: 52, scope: !12405)
!12442 = !DILocation(line: 1910, column: 46, scope: !12443)
!12443 = !DILexicalBlockFile(scope: !12405, file: !1803, discriminator: 1)
!12444 = !DILocation(line: 1910, column: 66, scope: !12405)
!12445 = !DILocation(line: 1910, column: 64, scope: !12405)
!12446 = !DILocation(line: 1910, column: 75, scope: !12405)
!12447 = !DILocation(line: 1910, column: 72, scope: !12405)
!12448 = !DILocation(line: 1910, column: 70, scope: !12405)
!12449 = !DILocation(line: 1910, column: 39, scope: !12405)
!12450 = !DILocation(line: 1910, column: 28, scope: !12405)
!12451 = !DILocation(line: 1910, column: 35, scope: !12405)
!12452 = !DILocation(line: 1910, column: 17, scope: !12405)
!12453 = !DILocation(line: 1910, column: 44, scope: !12405)
!12454 = !DILocation(line: 1912, column: 13, scope: !12405)
!12455 = !DILocation(line: 1913, column: 9, scope: !12375)
!12456 = !DILocation(line: 1894, column: 44, scope: !12457)
!12457 = !DILexicalBlockFile(scope: !12369, file: !1803, discriminator: 2)
!12458 = !DILocation(line: 1894, column: 9, scope: !12457)
!12459 = distinct !{!12459, !12460}
!12460 = !DILocation(line: 1894, column: 9, scope: !12363)
!12461 = !DILocation(line: 1914, column: 5, scope: !12363)
!12462 = !DILocation(line: 1937, column: 5, scope: !10833)
!12463 = !DILocation(line: 1938, column: 1, scope: !10833)
!12464 = distinct !DISubprogram(name: "apply_prediction", scope: !1803, file: !1803, line: 1943, type: !2641, isLocal: true, isDefinition: true, scopeLine: 1944, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12465 = !DILocalVariable(name: "pf", arg: 1, scope: !12466, file: !1145, line: 158, type: !1016)
!12466 = distinct !DISubprogram(name: "flt16_even", scope: !1145, file: !1145, line: 158, type: !12467, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12467 = !DISubroutineType(types: !12468)
!12468 = !{!1016, !1016}
!12469 = !DILocation(line: 158, column: 69, scope: !12466, inlinedAt: !12470)
!12470 = distinct !DILocation(line: 187, column: 28, scope: !12471, inlinedAt: !12476)
!12471 = !DILexicalBlockFile(scope: !12472, file: !1145, discriminator: 1)
!12472 = distinct !DISubprogram(name: "predict", scope: !1145, file: !1145, line: 174, type: !12473, isLocal: true, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{null, !12475, !2554, !1012}
!12475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64, align: 64)
!12476 = distinct !DILocation(line: 1959, column: 17, scope: !12477)
!12477 = !DILexicalBlockFile(scope: !12478, file: !1803, discriminator: 1)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !1803, line: 1958, column: 23)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !1803, line: 1956, column: 13)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !1803, line: 1956, column: 13)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !1803, line: 1955, column: 21)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !1803, line: 1953, column: 9)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !1803, line: 1953, column: 9)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !1803, line: 1952, column: 62)
!12485 = distinct !DILexicalBlock(scope: !12464, file: !1803, line: 1952, column: 9)
!12486 = !DILocalVariable(name: "tmp", scope: !12466, file: !1145, line: 160, type: !12487)
!12487 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat32", file: !12488, line: 27, size: 32, align: 32, elements: !12489)
!12488 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!12489 = !{!12490, !12491}
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !12487, file: !12488, line: 28, baseType: !1027, size: 32, align: 32)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !12487, file: !12488, line: 29, baseType: !1016, size: 32, align: 32)
!12492 = !DILocation(line: 160, column: 25, scope: !12466, inlinedAt: !12470)
!12493 = !DILocalVariable(name: "pf", arg: 1, scope: !12494, file: !1145, line: 150, type: !1016)
!12494 = distinct !DISubprogram(name: "flt16_round", scope: !1145, file: !1145, line: 150, type: !12467, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12495 = !DILocation(line: 150, column: 70, scope: !12494, inlinedAt: !12496)
!12496 = distinct !DILocation(line: 189, column: 10, scope: !12472, inlinedAt: !12476)
!12497 = !DILocalVariable(name: "tmp", scope: !12494, file: !1145, line: 152, type: !12487)
!12498 = !DILocation(line: 152, column: 25, scope: !12494, inlinedAt: !12496)
!12499 = !DILocalVariable(name: "pf", arg: 1, scope: !12500, file: !1145, line: 166, type: !1016)
!12500 = distinct !DISubprogram(name: "flt16_trunc", scope: !1145, file: !1145, line: 166, type: !12467, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12501 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 196, column: 16, scope: !12472, inlinedAt: !12476)
!12503 = !DILocalVariable(name: "pun", scope: !12500, file: !1145, line: 168, type: !12487)
!12504 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12502)
!12505 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12506)
!12506 = distinct !DILocation(line: 197, column: 16, scope: !12472, inlinedAt: !12476)
!12507 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12506)
!12508 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12509)
!12509 = distinct !DILocation(line: 198, column: 16, scope: !12472, inlinedAt: !12476)
!12510 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12509)
!12511 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12512)
!12512 = distinct !DILocation(line: 199, column: 16, scope: !12472, inlinedAt: !12476)
!12513 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12512)
!12514 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12515)
!12515 = distinct !DILocation(line: 201, column: 14, scope: !12472, inlinedAt: !12476)
!12516 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12515)
!12517 = !DILocation(line: 166, column: 70, scope: !12500, inlinedAt: !12518)
!12518 = distinct !DILocation(line: 202, column: 14, scope: !12472, inlinedAt: !12476)
!12519 = !DILocation(line: 168, column: 25, scope: !12500, inlinedAt: !12518)
!12520 = !DILocation(line: 158, column: 69, scope: !12466, inlinedAt: !12521)
!12521 = distinct !DILocation(line: 186, column: 28, scope: !12471, inlinedAt: !12476)
!12522 = !DILocation(line: 160, column: 25, scope: !12466, inlinedAt: !12521)
!12523 = !DILocalVariable(name: "ps", arg: 1, scope: !12472, file: !1145, line: 174, type: !12475)
!12524 = !DILocation(line: 174, column: 75, scope: !12472, inlinedAt: !12476)
!12525 = !DILocalVariable(name: "coef", arg: 2, scope: !12472, file: !1145, line: 174, type: !2554)
!12526 = !DILocation(line: 174, column: 86, scope: !12472, inlinedAt: !12476)
!12527 = !DILocalVariable(name: "output_enable", arg: 3, scope: !12472, file: !1145, line: 175, type: !1012)
!12528 = !DILocation(line: 175, column: 42, scope: !12472, inlinedAt: !12476)
!12529 = !DILocalVariable(name: "a", scope: !12472, file: !1145, line: 177, type: !1887)
!12530 = !DILocation(line: 177, column: 17, scope: !12472, inlinedAt: !12476)
!12531 = !DILocalVariable(name: "alpha", scope: !12472, file: !1145, line: 178, type: !1887)
!12532 = !DILocation(line: 178, column: 17, scope: !12472, inlinedAt: !12476)
!12533 = !DILocalVariable(name: "e0", scope: !12472, file: !1145, line: 179, type: !1016)
!12534 = !DILocation(line: 179, column: 11, scope: !12472, inlinedAt: !12476)
!12535 = !DILocalVariable(name: "e1", scope: !12472, file: !1145, line: 179, type: !1016)
!12536 = !DILocation(line: 179, column: 15, scope: !12472, inlinedAt: !12476)
!12537 = !DILocalVariable(name: "pv", scope: !12472, file: !1145, line: 180, type: !1016)
!12538 = !DILocation(line: 180, column: 11, scope: !12472, inlinedAt: !12476)
!12539 = !DILocalVariable(name: "k1", scope: !12472, file: !1145, line: 181, type: !1016)
!12540 = !DILocation(line: 181, column: 11, scope: !12472, inlinedAt: !12476)
!12541 = !DILocalVariable(name: "k2", scope: !12472, file: !1145, line: 181, type: !1016)
!12542 = !DILocation(line: 181, column: 15, scope: !12472, inlinedAt: !12476)
!12543 = !DILocalVariable(name: "r0", scope: !12472, file: !1145, line: 182, type: !1016)
!12544 = !DILocation(line: 182, column: 11, scope: !12472, inlinedAt: !12476)
!12545 = !DILocalVariable(name: "r1", scope: !12472, file: !1145, line: 182, type: !1016)
!12546 = !DILocation(line: 182, column: 24, scope: !12472, inlinedAt: !12476)
!12547 = !DILocalVariable(name: "cor0", scope: !12472, file: !1145, line: 183, type: !1016)
!12548 = !DILocation(line: 183, column: 11, scope: !12472, inlinedAt: !12476)
!12549 = !DILocalVariable(name: "cor1", scope: !12472, file: !1145, line: 183, type: !1016)
!12550 = !DILocation(line: 183, column: 28, scope: !12472, inlinedAt: !12476)
!12551 = !DILocalVariable(name: "var0", scope: !12472, file: !1145, line: 184, type: !1016)
!12552 = !DILocation(line: 184, column: 11, scope: !12472, inlinedAt: !12476)
!12553 = !DILocalVariable(name: "var1", scope: !12472, file: !1145, line: 184, type: !1016)
!12554 = !DILocation(line: 184, column: 28, scope: !12472, inlinedAt: !12476)
!12555 = !DILocalVariable(name: "ac", arg: 1, scope: !12464, file: !1803, line: 1943, type: !2065)
!12556 = !DILocation(line: 1943, column: 42, scope: !12464)
!12557 = !DILocalVariable(name: "sce", arg: 2, scope: !12464, file: !1803, line: 1943, type: !1914)
!12558 = !DILocation(line: 1943, column: 68, scope: !12464)
!12559 = !DILocalVariable(name: "sfb", scope: !12464, file: !1803, line: 1945, type: !1012)
!12560 = !DILocation(line: 1945, column: 9, scope: !12464)
!12561 = !DILocalVariable(name: "k", scope: !12464, file: !1803, line: 1945, type: !1012)
!12562 = !DILocation(line: 1945, column: 14, scope: !12464)
!12563 = !DILocation(line: 1947, column: 10, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12464, file: !1803, line: 1947, column: 9)
!12565 = !DILocation(line: 1947, column: 15, scope: !12564)
!12566 = !DILocation(line: 1947, column: 19, scope: !12564)
!12567 = !DILocation(line: 1947, column: 9, scope: !12464)
!12568 = !DILocation(line: 1948, column: 30, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12564, file: !1803, line: 1947, column: 42)
!12570 = !DILocation(line: 1948, column: 35, scope: !12569)
!12571 = !DILocation(line: 1948, column: 9, scope: !12569)
!12572 = !DILocation(line: 1949, column: 9, scope: !12569)
!12573 = !DILocation(line: 1949, column: 14, scope: !12569)
!12574 = !DILocation(line: 1949, column: 18, scope: !12569)
!12575 = !DILocation(line: 1949, column: 40, scope: !12569)
!12576 = !DILocation(line: 1950, column: 5, scope: !12569)
!12577 = !DILocation(line: 1952, column: 9, scope: !12485)
!12578 = !DILocation(line: 1952, column: 14, scope: !12485)
!12579 = !DILocation(line: 1952, column: 18, scope: !12485)
!12580 = !DILocation(line: 1952, column: 37, scope: !12485)
!12581 = !DILocation(line: 1952, column: 9, scope: !12464)
!12582 = !DILocation(line: 1953, column: 18, scope: !12483)
!12583 = !DILocation(line: 1953, column: 14, scope: !12483)
!12584 = !DILocation(line: 1954, column: 14, scope: !12482)
!12585 = !DILocation(line: 1954, column: 40, scope: !12482)
!12586 = !DILocation(line: 1954, column: 44, scope: !12482)
!12587 = !DILocation(line: 1954, column: 50, scope: !12482)
!12588 = !DILocation(line: 1954, column: 55, scope: !12482)
!12589 = !DILocation(line: 1954, column: 20, scope: !12482)
!12590 = !DILocation(line: 1954, column: 18, scope: !12482)
!12591 = !DILocation(line: 1953, column: 9, scope: !12592)
!12592 = !DILexicalBlockFile(scope: !12483, file: !1803, discriminator: 1)
!12593 = !DILocation(line: 1956, column: 42, scope: !12480)
!12594 = !DILocation(line: 1956, column: 22, scope: !12480)
!12595 = !DILocation(line: 1956, column: 27, scope: !12480)
!12596 = !DILocation(line: 1956, column: 31, scope: !12480)
!12597 = !DILocation(line: 1956, column: 20, scope: !12480)
!12598 = !DILocation(line: 1956, column: 18, scope: !12480)
!12599 = !DILocation(line: 1957, column: 18, scope: !12479)
!12600 = !DILocation(line: 1957, column: 42, scope: !12479)
!12601 = !DILocation(line: 1957, column: 46, scope: !12479)
!12602 = !DILocation(line: 1957, column: 22, scope: !12479)
!12603 = !DILocation(line: 1957, column: 27, scope: !12479)
!12604 = !DILocation(line: 1957, column: 31, scope: !12479)
!12605 = !DILocation(line: 1957, column: 20, scope: !12479)
!12606 = !DILocation(line: 1956, column: 13, scope: !12607)
!12607 = !DILexicalBlockFile(scope: !12480, file: !1803, discriminator: 1)
!12608 = !DILocation(line: 1959, column: 47, scope: !12478)
!12609 = !DILocation(line: 1959, column: 26, scope: !12478)
!12610 = !DILocation(line: 1959, column: 31, scope: !12478)
!12611 = !DILocation(line: 1959, column: 64, scope: !12478)
!12612 = !DILocation(line: 1959, column: 52, scope: !12478)
!12613 = !DILocation(line: 1959, column: 57, scope: !12478)
!12614 = !DILocation(line: 1960, column: 25, scope: !12478)
!12615 = !DILocation(line: 1960, column: 30, scope: !12478)
!12616 = !DILocation(line: 1960, column: 34, scope: !12478)
!12617 = !DILocation(line: 1960, column: 52, scope: !12478)
!12618 = !DILocation(line: 1961, column: 50, scope: !12478)
!12619 = !DILocation(line: 1961, column: 25, scope: !12478)
!12620 = !DILocation(line: 1961, column: 30, scope: !12478)
!12621 = !DILocation(line: 1961, column: 34, scope: !12478)
!12622 = !DILocation(line: 1960, column: 52, scope: !12477)
!12623 = !DILocation(line: 1960, column: 52, scope: !12624)
!12624 = !DILexicalBlockFile(scope: !12478, file: !1803, discriminator: 2)
!12625 = !DILocation(line: 1959, column: 17, scope: !12477)
!12626 = !DILocation(line: 182, column: 16, scope: !12472, inlinedAt: !12476)
!12627 = !DILocation(line: 182, column: 20, scope: !12472, inlinedAt: !12476)
!12628 = !DILocation(line: 182, column: 29, scope: !12472, inlinedAt: !12476)
!12629 = !DILocation(line: 182, column: 33, scope: !12472, inlinedAt: !12476)
!12630 = !DILocation(line: 183, column: 18, scope: !12472, inlinedAt: !12476)
!12631 = !DILocation(line: 183, column: 22, scope: !12472, inlinedAt: !12476)
!12632 = !DILocation(line: 183, column: 35, scope: !12472, inlinedAt: !12476)
!12633 = !DILocation(line: 183, column: 39, scope: !12472, inlinedAt: !12476)
!12634 = !DILocation(line: 184, column: 18, scope: !12472, inlinedAt: !12476)
!12635 = !DILocation(line: 184, column: 22, scope: !12472, inlinedAt: !12476)
!12636 = !DILocation(line: 184, column: 35, scope: !12472, inlinedAt: !12476)
!12637 = !DILocation(line: 184, column: 39, scope: !12472, inlinedAt: !12476)
!12638 = !DILocation(line: 186, column: 10, scope: !12472, inlinedAt: !12476)
!12639 = !DILocation(line: 186, column: 15, scope: !12472, inlinedAt: !12476)
!12640 = !DILocation(line: 186, column: 21, scope: !12471, inlinedAt: !12476)
!12641 = !DILocation(line: 186, column: 43, scope: !12471, inlinedAt: !12476)
!12642 = !DILocation(line: 186, column: 41, scope: !12471, inlinedAt: !12476)
!12643 = !DILocation(line: 186, column: 28, scope: !12471, inlinedAt: !12476)
!12644 = !DILocation(line: 161, column: 13, scope: !12466, inlinedAt: !12521)
!12645 = !DILocation(line: 161, column: 9, scope: !12466, inlinedAt: !12521)
!12646 = !DILocation(line: 161, column: 11, scope: !12466, inlinedAt: !12521)
!12647 = !DILocation(line: 162, column: 18, scope: !12466, inlinedAt: !12521)
!12648 = !DILocation(line: 162, column: 20, scope: !12466, inlinedAt: !12521)
!12649 = !DILocation(line: 162, column: 41, scope: !12466, inlinedAt: !12521)
!12650 = !DILocation(line: 162, column: 43, scope: !12466, inlinedAt: !12521)
!12651 = !DILocation(line: 162, column: 34, scope: !12466, inlinedAt: !12521)
!12652 = !DILocation(line: 162, column: 65, scope: !12466, inlinedAt: !12521)
!12653 = !DILocation(line: 162, column: 9, scope: !12466, inlinedAt: !12521)
!12654 = !DILocation(line: 162, column: 11, scope: !12466, inlinedAt: !12521)
!12655 = !DILocation(line: 163, column: 16, scope: !12466, inlinedAt: !12521)
!12656 = !DILocation(line: 186, column: 26, scope: !12471, inlinedAt: !12476)
!12657 = !DILocation(line: 186, column: 10, scope: !12471, inlinedAt: !12476)
!12658 = !DILocation(line: 186, column: 10, scope: !12659, inlinedAt: !12476)
!12659 = !DILexicalBlockFile(scope: !12472, file: !1145, discriminator: 2)
!12660 = !DILocation(line: 186, column: 10, scope: !12661, inlinedAt: !12476)
!12661 = !DILexicalBlockFile(scope: !12472, file: !1145, discriminator: 3)
!12662 = !DILocation(line: 186, column: 8, scope: !12661, inlinedAt: !12476)
!12663 = !DILocation(line: 187, column: 10, scope: !12472, inlinedAt: !12476)
!12664 = !DILocation(line: 187, column: 15, scope: !12472, inlinedAt: !12476)
!12665 = !DILocation(line: 187, column: 21, scope: !12471, inlinedAt: !12476)
!12666 = !DILocation(line: 187, column: 43, scope: !12471, inlinedAt: !12476)
!12667 = !DILocation(line: 187, column: 41, scope: !12471, inlinedAt: !12476)
!12668 = !DILocation(line: 187, column: 28, scope: !12471, inlinedAt: !12476)
!12669 = !DILocation(line: 161, column: 13, scope: !12466, inlinedAt: !12470)
!12670 = !DILocation(line: 161, column: 9, scope: !12466, inlinedAt: !12470)
!12671 = !DILocation(line: 161, column: 11, scope: !12466, inlinedAt: !12470)
!12672 = !DILocation(line: 162, column: 18, scope: !12466, inlinedAt: !12470)
!12673 = !DILocation(line: 162, column: 20, scope: !12466, inlinedAt: !12470)
!12674 = !DILocation(line: 162, column: 41, scope: !12466, inlinedAt: !12470)
!12675 = !DILocation(line: 162, column: 43, scope: !12466, inlinedAt: !12470)
!12676 = !DILocation(line: 162, column: 34, scope: !12466, inlinedAt: !12470)
!12677 = !DILocation(line: 162, column: 65, scope: !12466, inlinedAt: !12470)
!12678 = !DILocation(line: 162, column: 9, scope: !12466, inlinedAt: !12470)
!12679 = !DILocation(line: 162, column: 11, scope: !12466, inlinedAt: !12470)
!12680 = !DILocation(line: 163, column: 16, scope: !12466, inlinedAt: !12470)
!12681 = !DILocation(line: 187, column: 26, scope: !12471, inlinedAt: !12476)
!12682 = !DILocation(line: 187, column: 10, scope: !12471, inlinedAt: !12476)
!12683 = !DILocation(line: 187, column: 10, scope: !12659, inlinedAt: !12476)
!12684 = !DILocation(line: 187, column: 10, scope: !12661, inlinedAt: !12476)
!12685 = !DILocation(line: 187, column: 8, scope: !12661, inlinedAt: !12476)
!12686 = !DILocation(line: 189, column: 22, scope: !12472, inlinedAt: !12476)
!12687 = !DILocation(line: 189, column: 27, scope: !12472, inlinedAt: !12476)
!12688 = !DILocation(line: 189, column: 25, scope: !12472, inlinedAt: !12476)
!12689 = !DILocation(line: 189, column: 32, scope: !12472, inlinedAt: !12476)
!12690 = !DILocation(line: 189, column: 37, scope: !12472, inlinedAt: !12476)
!12691 = !DILocation(line: 189, column: 35, scope: !12472, inlinedAt: !12476)
!12692 = !DILocation(line: 189, column: 30, scope: !12472, inlinedAt: !12476)
!12693 = !DILocation(line: 189, column: 10, scope: !12472, inlinedAt: !12476)
!12694 = !DILocation(line: 153, column: 13, scope: !12494, inlinedAt: !12496)
!12695 = !DILocation(line: 153, column: 9, scope: !12494, inlinedAt: !12496)
!12696 = !DILocation(line: 153, column: 11, scope: !12494, inlinedAt: !12496)
!12697 = !DILocation(line: 154, column: 18, scope: !12494, inlinedAt: !12496)
!12698 = !DILocation(line: 154, column: 20, scope: !12494, inlinedAt: !12496)
!12699 = !DILocation(line: 154, column: 35, scope: !12494, inlinedAt: !12496)
!12700 = !DILocation(line: 154, column: 9, scope: !12494, inlinedAt: !12496)
!12701 = !DILocation(line: 154, column: 11, scope: !12494, inlinedAt: !12496)
!12702 = !DILocation(line: 155, column: 16, scope: !12494, inlinedAt: !12496)
!12703 = !DILocation(line: 189, column: 8, scope: !12472, inlinedAt: !12476)
!12704 = !DILocation(line: 190, column: 9, scope: !12705, inlinedAt: !12476)
!12705 = distinct !DILexicalBlock(scope: !12472, file: !1145, line: 190, column: 9)
!12706 = !DILocation(line: 190, column: 9, scope: !12472, inlinedAt: !12476)
!12707 = !DILocation(line: 191, column: 18, scope: !12705, inlinedAt: !12476)
!12708 = !DILocation(line: 191, column: 10, scope: !12705, inlinedAt: !12476)
!12709 = !DILocation(line: 191, column: 15, scope: !12705, inlinedAt: !12476)
!12710 = !DILocation(line: 191, column: 9, scope: !12705, inlinedAt: !12476)
!12711 = !DILocation(line: 193, column: 11, scope: !12472, inlinedAt: !12476)
!12712 = !DILocation(line: 193, column: 10, scope: !12472, inlinedAt: !12476)
!12713 = !DILocation(line: 193, column: 8, scope: !12472, inlinedAt: !12476)
!12714 = !DILocation(line: 194, column: 10, scope: !12472, inlinedAt: !12476)
!12715 = !DILocation(line: 194, column: 15, scope: !12472, inlinedAt: !12476)
!12716 = !DILocation(line: 194, column: 20, scope: !12472, inlinedAt: !12476)
!12717 = !DILocation(line: 194, column: 18, scope: !12472, inlinedAt: !12476)
!12718 = !DILocation(line: 194, column: 13, scope: !12472, inlinedAt: !12476)
!12719 = !DILocation(line: 194, column: 8, scope: !12472, inlinedAt: !12476)
!12720 = !DILocation(line: 196, column: 36, scope: !12472, inlinedAt: !12476)
!12721 = !DILocation(line: 196, column: 34, scope: !12472, inlinedAt: !12476)
!12722 = !DILocation(line: 196, column: 43, scope: !12472, inlinedAt: !12476)
!12723 = !DILocation(line: 196, column: 48, scope: !12472, inlinedAt: !12476)
!12724 = !DILocation(line: 196, column: 46, scope: !12472, inlinedAt: !12476)
!12725 = !DILocation(line: 196, column: 41, scope: !12472, inlinedAt: !12476)
!12726 = !DILocation(line: 196, column: 16, scope: !12472, inlinedAt: !12476)
!12727 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12502)
!12728 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12502)
!12729 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12502)
!12730 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12502)
!12731 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12502)
!12732 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12502)
!12733 = !DILocation(line: 196, column: 5, scope: !12472, inlinedAt: !12476)
!12734 = !DILocation(line: 196, column: 9, scope: !12472, inlinedAt: !12476)
!12735 = !DILocation(line: 196, column: 14, scope: !12472, inlinedAt: !12476)
!12736 = !DILocation(line: 197, column: 36, scope: !12472, inlinedAt: !12476)
!12737 = !DILocation(line: 197, column: 34, scope: !12472, inlinedAt: !12476)
!12738 = !DILocation(line: 197, column: 51, scope: !12472, inlinedAt: !12476)
!12739 = !DILocation(line: 197, column: 56, scope: !12472, inlinedAt: !12476)
!12740 = !DILocation(line: 197, column: 54, scope: !12472, inlinedAt: !12476)
!12741 = !DILocation(line: 197, column: 61, scope: !12472, inlinedAt: !12476)
!12742 = !DILocation(line: 197, column: 66, scope: !12472, inlinedAt: !12476)
!12743 = !DILocation(line: 197, column: 64, scope: !12472, inlinedAt: !12476)
!12744 = !DILocation(line: 197, column: 59, scope: !12472, inlinedAt: !12476)
!12745 = !DILocation(line: 197, column: 48, scope: !12472, inlinedAt: !12476)
!12746 = !DILocation(line: 197, column: 41, scope: !12472, inlinedAt: !12476)
!12747 = !DILocation(line: 197, column: 16, scope: !12472, inlinedAt: !12476)
!12748 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12506)
!12749 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12506)
!12750 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12506)
!12751 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12506)
!12752 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12506)
!12753 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12506)
!12754 = !DILocation(line: 197, column: 5, scope: !12472, inlinedAt: !12476)
!12755 = !DILocation(line: 197, column: 9, scope: !12472, inlinedAt: !12476)
!12756 = !DILocation(line: 197, column: 14, scope: !12472, inlinedAt: !12476)
!12757 = !DILocation(line: 198, column: 36, scope: !12472, inlinedAt: !12476)
!12758 = !DILocation(line: 198, column: 34, scope: !12472, inlinedAt: !12476)
!12759 = !DILocation(line: 198, column: 43, scope: !12472, inlinedAt: !12476)
!12760 = !DILocation(line: 198, column: 48, scope: !12472, inlinedAt: !12476)
!12761 = !DILocation(line: 198, column: 46, scope: !12472, inlinedAt: !12476)
!12762 = !DILocation(line: 198, column: 41, scope: !12472, inlinedAt: !12476)
!12763 = !DILocation(line: 198, column: 16, scope: !12472, inlinedAt: !12476)
!12764 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12509)
!12765 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12509)
!12766 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12509)
!12767 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12509)
!12768 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12509)
!12769 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12509)
!12770 = !DILocation(line: 198, column: 5, scope: !12472, inlinedAt: !12476)
!12771 = !DILocation(line: 198, column: 9, scope: !12472, inlinedAt: !12476)
!12772 = !DILocation(line: 198, column: 14, scope: !12472, inlinedAt: !12476)
!12773 = !DILocation(line: 199, column: 36, scope: !12472, inlinedAt: !12476)
!12774 = !DILocation(line: 199, column: 34, scope: !12472, inlinedAt: !12476)
!12775 = !DILocation(line: 199, column: 51, scope: !12472, inlinedAt: !12476)
!12776 = !DILocation(line: 199, column: 56, scope: !12472, inlinedAt: !12476)
!12777 = !DILocation(line: 199, column: 54, scope: !12472, inlinedAt: !12476)
!12778 = !DILocation(line: 199, column: 61, scope: !12472, inlinedAt: !12476)
!12779 = !DILocation(line: 199, column: 66, scope: !12472, inlinedAt: !12476)
!12780 = !DILocation(line: 199, column: 64, scope: !12472, inlinedAt: !12476)
!12781 = !DILocation(line: 199, column: 59, scope: !12472, inlinedAt: !12476)
!12782 = !DILocation(line: 199, column: 48, scope: !12472, inlinedAt: !12476)
!12783 = !DILocation(line: 199, column: 41, scope: !12472, inlinedAt: !12476)
!12784 = !DILocation(line: 199, column: 16, scope: !12472, inlinedAt: !12476)
!12785 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12512)
!12786 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12512)
!12787 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12512)
!12788 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12512)
!12789 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12512)
!12790 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12512)
!12791 = !DILocation(line: 199, column: 5, scope: !12472, inlinedAt: !12476)
!12792 = !DILocation(line: 199, column: 9, scope: !12472, inlinedAt: !12476)
!12793 = !DILocation(line: 199, column: 14, scope: !12472, inlinedAt: !12476)
!12794 = !DILocation(line: 201, column: 31, scope: !12472, inlinedAt: !12476)
!12795 = !DILocation(line: 201, column: 36, scope: !12472, inlinedAt: !12476)
!12796 = !DILocation(line: 201, column: 41, scope: !12472, inlinedAt: !12476)
!12797 = !DILocation(line: 201, column: 39, scope: !12472, inlinedAt: !12476)
!12798 = !DILocation(line: 201, column: 34, scope: !12472, inlinedAt: !12476)
!12799 = !DILocation(line: 201, column: 28, scope: !12472, inlinedAt: !12476)
!12800 = !DILocation(line: 201, column: 14, scope: !12472, inlinedAt: !12476)
!12801 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12515)
!12802 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12515)
!12803 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12515)
!12804 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12515)
!12805 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12515)
!12806 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12515)
!12807 = !DILocation(line: 201, column: 5, scope: !12472, inlinedAt: !12476)
!12808 = !DILocation(line: 201, column: 9, scope: !12472, inlinedAt: !12476)
!12809 = !DILocation(line: 201, column: 12, scope: !12472, inlinedAt: !12476)
!12810 = !DILocation(line: 202, column: 30, scope: !12472, inlinedAt: !12476)
!12811 = !DILocation(line: 202, column: 28, scope: !12472, inlinedAt: !12476)
!12812 = !DILocation(line: 202, column: 14, scope: !12472, inlinedAt: !12476)
!12813 = !DILocation(line: 169, column: 13, scope: !12500, inlinedAt: !12518)
!12814 = !DILocation(line: 169, column: 9, scope: !12500, inlinedAt: !12518)
!12815 = !DILocation(line: 169, column: 11, scope: !12500, inlinedAt: !12518)
!12816 = !DILocation(line: 170, column: 9, scope: !12500, inlinedAt: !12518)
!12817 = !DILocation(line: 170, column: 11, scope: !12500, inlinedAt: !12518)
!12818 = !DILocation(line: 171, column: 16, scope: !12500, inlinedAt: !12518)
!12819 = !DILocation(line: 202, column: 5, scope: !12472, inlinedAt: !12476)
!12820 = !DILocation(line: 202, column: 9, scope: !12472, inlinedAt: !12476)
!12821 = !DILocation(line: 202, column: 12, scope: !12472, inlinedAt: !12476)
!12822 = !DILocation(line: 1962, column: 13, scope: !12478)
!12823 = !DILocation(line: 1958, column: 19, scope: !12479)
!12824 = !DILocation(line: 1956, column: 13, scope: !12825)
!12825 = !DILexicalBlockFile(scope: !12479, file: !1803, discriminator: 2)
!12826 = distinct !{!12826, !12827}
!12827 = !DILocation(line: 1956, column: 13, scope: !12481)
!12828 = !DILocation(line: 1963, column: 9, scope: !12481)
!12829 = !DILocation(line: 1955, column: 17, scope: !12482)
!12830 = !DILocation(line: 1953, column: 9, scope: !12831)
!12831 = !DILexicalBlockFile(scope: !12482, file: !1803, discriminator: 2)
!12832 = distinct !{!12832, !12833}
!12833 = !DILocation(line: 1953, column: 9, scope: !12484)
!12834 = !DILocation(line: 1964, column: 13, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12484, file: !1803, line: 1964, column: 13)
!12836 = !DILocation(line: 1964, column: 18, scope: !12835)
!12837 = !DILocation(line: 1964, column: 22, scope: !12835)
!12838 = !DILocation(line: 1964, column: 13, scope: !12484)
!12839 = !DILocation(line: 1965, column: 35, scope: !12835)
!12840 = !DILocation(line: 1965, column: 40, scope: !12835)
!12841 = !DILocation(line: 1966, column: 35, scope: !12835)
!12842 = !DILocation(line: 1966, column: 40, scope: !12835)
!12843 = !DILocation(line: 1966, column: 44, scope: !12835)
!12844 = !DILocation(line: 1965, column: 13, scope: !12835)
!12845 = !DILocation(line: 1967, column: 5, scope: !12484)
!12846 = !DILocation(line: 1968, column: 30, scope: !12485)
!12847 = !DILocation(line: 1968, column: 35, scope: !12485)
!12848 = !DILocation(line: 1968, column: 9, scope: !12485)
!12849 = !DILocation(line: 1969, column: 1, scope: !12464)
!12850 = distinct !DISubprogram(name: "decode_prediction", scope: !1803, file: !1803, line: 1265, type: !8975, isLocal: true, isDefinition: true, scopeLine: 1267, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12851 = !DILocalVariable(name: "ac", arg: 1, scope: !12850, file: !1803, line: 1265, type: !2065)
!12852 = !DILocation(line: 1265, column: 42, scope: !12850)
!12853 = !DILocalVariable(name: "ics", arg: 2, scope: !12850, file: !1803, line: 1265, type: !2649)
!12854 = !DILocation(line: 1265, column: 71, scope: !12850)
!12855 = !DILocalVariable(name: "gb", arg: 3, scope: !12850, file: !1803, line: 1266, type: !2043)
!12856 = !DILocation(line: 1266, column: 45, scope: !12850)
!12857 = !DILocalVariable(name: "sfb", scope: !12850, file: !1803, line: 1268, type: !1012)
!12858 = !DILocation(line: 1268, column: 9, scope: !12850)
!12859 = !DILocation(line: 1269, column: 19, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12850, file: !1803, line: 1269, column: 9)
!12861 = !DILocation(line: 1269, column: 9, scope: !12860)
!12862 = !DILocation(line: 1269, column: 9, scope: !12850)
!12863 = !DILocation(line: 1270, column: 47, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12860, file: !1803, line: 1269, column: 24)
!12865 = !DILocation(line: 1270, column: 38, scope: !12864)
!12866 = !DILocation(line: 1270, column: 9, scope: !12864)
!12867 = !DILocation(line: 1270, column: 14, scope: !12864)
!12868 = !DILocation(line: 1270, column: 36, scope: !12864)
!12869 = !DILocation(line: 1271, column: 13, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12864, file: !1803, line: 1271, column: 13)
!12871 = !DILocation(line: 1271, column: 18, scope: !12870)
!12872 = !DILocation(line: 1271, column: 40, scope: !12870)
!12873 = !DILocation(line: 1271, column: 45, scope: !12870)
!12874 = !DILocation(line: 1272, column: 13, scope: !12870)
!12875 = !DILocation(line: 1272, column: 18, scope: !12870)
!12876 = !DILocation(line: 1272, column: 40, scope: !12870)
!12877 = !DILocation(line: 1271, column: 13, scope: !12878)
!12878 = !DILexicalBlockFile(scope: !12864, file: !1803, discriminator: 1)
!12879 = !DILocation(line: 1273, column: 20, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12870, file: !1803, line: 1272, column: 46)
!12881 = !DILocation(line: 1273, column: 24, scope: !12880)
!12882 = !DILocation(line: 1273, column: 13, scope: !12880)
!12883 = !DILocation(line: 1275, column: 13, scope: !12880)
!12884 = !DILocation(line: 1277, column: 5, scope: !12864)
!12885 = !DILocation(line: 1278, column: 14, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12850, file: !1803, line: 1278, column: 5)
!12887 = !DILocation(line: 1278, column: 10, scope: !12886)
!12888 = !DILocation(line: 1278, column: 19, scope: !12889)
!12889 = !DILexicalBlockFile(scope: !12890, file: !1803, discriminator: 1)
!12890 = distinct !DILexicalBlock(scope: !12886, file: !1803, line: 1278, column: 5)
!12891 = !DILocation(line: 1278, column: 27, scope: !12889)
!12892 = !DILocation(line: 1278, column: 32, scope: !12889)
!12893 = !DILocation(line: 1278, column: 26, scope: !12889)
!12894 = !DILocation(line: 1278, column: 64, scope: !12889)
!12895 = !DILocation(line: 1278, column: 68, scope: !12889)
!12896 = !DILocation(line: 1278, column: 74, scope: !12889)
!12897 = !DILocation(line: 1278, column: 79, scope: !12889)
!12898 = !DILocation(line: 1278, column: 44, scope: !12889)
!12899 = !DILocation(line: 1278, column: 43, scope: !12889)
!12900 = !DILocation(line: 1278, column: 41, scope: !12889)
!12901 = !DILocation(line: 1278, column: 119, scope: !12902)
!12902 = !DILexicalBlockFile(scope: !12890, file: !1803, discriminator: 2)
!12903 = !DILocation(line: 1278, column: 123, scope: !12902)
!12904 = !DILocation(line: 1278, column: 129, scope: !12902)
!12905 = !DILocation(line: 1278, column: 134, scope: !12902)
!12906 = !DILocation(line: 1278, column: 99, scope: !12902)
!12907 = !DILocation(line: 1278, column: 98, scope: !12902)
!12908 = !DILocation(line: 1278, column: 26, scope: !12902)
!12909 = !DILocation(line: 1278, column: 154, scope: !12910)
!12910 = !DILexicalBlockFile(scope: !12890, file: !1803, discriminator: 3)
!12911 = !DILocation(line: 1278, column: 159, scope: !12910)
!12912 = !DILocation(line: 1278, column: 153, scope: !12910)
!12913 = !DILocation(line: 1278, column: 26, scope: !12910)
!12914 = !DILocation(line: 1278, column: 26, scope: !12915)
!12915 = !DILexicalBlockFile(scope: !12890, file: !1803, discriminator: 4)
!12916 = !DILocation(line: 1278, column: 23, scope: !12915)
!12917 = !DILocation(line: 1278, column: 5, scope: !12915)
!12918 = !DILocation(line: 1279, column: 47, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12890, file: !1803, line: 1278, column: 177)
!12920 = !DILocation(line: 1279, column: 37, scope: !12919)
!12921 = !DILocation(line: 1279, column: 30, scope: !12919)
!12922 = !DILocation(line: 1279, column: 9, scope: !12919)
!12923 = !DILocation(line: 1279, column: 14, scope: !12919)
!12924 = !DILocation(line: 1279, column: 35, scope: !12919)
!12925 = !DILocation(line: 1280, column: 5, scope: !12919)
!12926 = !DILocation(line: 1278, column: 173, scope: !12927)
!12927 = !DILexicalBlockFile(scope: !12890, file: !1803, discriminator: 5)
!12928 = !DILocation(line: 1278, column: 5, scope: !12927)
!12929 = distinct !{!12929, !12930}
!12930 = !DILocation(line: 1278, column: 5, scope: !12850)
!12931 = !DILocation(line: 1281, column: 5, scope: !12850)
!12932 = !DILocation(line: 1282, column: 1, scope: !12850)
!12933 = distinct !DISubprogram(name: "decode_ltp", scope: !1803, file: !1803, line: 1287, type: !12934, isLocal: true, isDefinition: true, scopeLine: 1289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{null, !12936, !2043, !1029}
!12936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64, align: 64)
!12937 = !DILocalVariable(name: "ltp", arg: 1, scope: !12933, file: !1803, line: 1287, type: !12936)
!12938 = !DILocation(line: 1287, column: 44, scope: !12933)
!12939 = !DILocalVariable(name: "gb", arg: 2, scope: !12933, file: !1803, line: 1288, type: !2043)
!12940 = !DILocation(line: 1288, column: 39, scope: !12933)
!12941 = !DILocalVariable(name: "max_sfb", arg: 3, scope: !12933, file: !1803, line: 1288, type: !1029)
!12942 = !DILocation(line: 1288, column: 51, scope: !12933)
!12943 = !DILocalVariable(name: "sfb", scope: !12933, file: !1803, line: 1290, type: !1012)
!12944 = !DILocation(line: 1290, column: 9, scope: !12933)
!12945 = !DILocation(line: 1292, column: 25, scope: !12933)
!12946 = !DILocation(line: 1292, column: 16, scope: !12933)
!12947 = !DILocation(line: 1292, column: 5, scope: !12933)
!12948 = !DILocation(line: 1292, column: 10, scope: !12933)
!12949 = !DILocation(line: 1292, column: 14, scope: !12933)
!12950 = !DILocation(line: 1293, column: 35, scope: !12933)
!12951 = !DILocation(line: 1293, column: 26, scope: !12933)
!12952 = !DILocation(line: 1293, column: 17, scope: !12933)
!12953 = !DILocation(line: 1293, column: 5, scope: !12933)
!12954 = !DILocation(line: 1293, column: 10, scope: !12933)
!12955 = !DILocation(line: 1293, column: 15, scope: !12933)
!12956 = !DILocation(line: 1294, column: 14, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12933, file: !1803, line: 1294, column: 5)
!12958 = !DILocation(line: 1294, column: 10, scope: !12957)
!12959 = !DILocation(line: 1294, column: 19, scope: !12960)
!12960 = !DILexicalBlockFile(scope: !12961, file: !1803, discriminator: 1)
!12961 = distinct !DILexicalBlock(scope: !12957, file: !1803, line: 1294, column: 5)
!12962 = !DILocation(line: 1294, column: 27, scope: !12960)
!12963 = !DILocation(line: 1294, column: 26, scope: !12960)
!12964 = !DILocation(line: 1294, column: 36, scope: !12960)
!12965 = !DILocation(line: 1294, column: 26, scope: !12966)
!12966 = !DILexicalBlockFile(scope: !12961, file: !1803, discriminator: 2)
!12967 = !DILocation(line: 1294, column: 53, scope: !12968)
!12968 = !DILexicalBlockFile(scope: !12961, file: !1803, discriminator: 3)
!12969 = !DILocation(line: 1294, column: 52, scope: !12968)
!12970 = !DILocation(line: 1294, column: 26, scope: !12968)
!12971 = !DILocation(line: 1294, column: 26, scope: !12972)
!12972 = !DILexicalBlockFile(scope: !12961, file: !1803, discriminator: 4)
!12973 = !DILocation(line: 1294, column: 23, scope: !12972)
!12974 = !DILocation(line: 1294, column: 5, scope: !12972)
!12975 = !DILocation(line: 1295, column: 36, scope: !12961)
!12976 = !DILocation(line: 1295, column: 26, scope: !12961)
!12977 = !DILocation(line: 1295, column: 19, scope: !12961)
!12978 = !DILocation(line: 1295, column: 9, scope: !12961)
!12979 = !DILocation(line: 1295, column: 14, scope: !12961)
!12980 = !DILocation(line: 1295, column: 24, scope: !12961)
!12981 = !DILocation(line: 1294, column: 67, scope: !12982)
!12982 = !DILexicalBlockFile(scope: !12961, file: !1803, discriminator: 5)
!12983 = !DILocation(line: 1294, column: 5, scope: !12982)
!12984 = distinct !{!12984, !12985}
!12985 = !DILocation(line: 1294, column: 5, scope: !12933)
!12986 = !DILocation(line: 1296, column: 1, scope: !12933)
!12987 = distinct !DISubprogram(name: "VMUL4", scope: !1145, file: !1145, line: 94, type: !12988, isLocal: true, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{!2554, !2554, !2555, !1013, !2555}
!12990 = !DILocalVariable(name: "dst", arg: 1, scope: !12987, file: !1145, line: 94, type: !2554)
!12991 = !DILocation(line: 94, column: 35, scope: !12987)
!12992 = !DILocalVariable(name: "v", arg: 2, scope: !12987, file: !1145, line: 94, type: !2555)
!12993 = !DILocation(line: 94, column: 53, scope: !12987)
!12994 = !DILocalVariable(name: "idx", arg: 3, scope: !12987, file: !1145, line: 94, type: !1013)
!12995 = !DILocation(line: 94, column: 65, scope: !12987)
!12996 = !DILocalVariable(name: "scale", arg: 4, scope: !12987, file: !1145, line: 95, type: !2555)
!12997 = !DILocation(line: 95, column: 41, scope: !12987)
!12998 = !DILocalVariable(name: "s", scope: !12987, file: !1145, line: 97, type: !1016)
!12999 = !DILocation(line: 97, column: 11, scope: !12987)
!13000 = !DILocation(line: 97, column: 16, scope: !12987)
!13001 = !DILocation(line: 97, column: 15, scope: !12987)
!13002 = !DILocation(line: 98, column: 16, scope: !12987)
!13003 = !DILocation(line: 98, column: 20, scope: !12987)
!13004 = !DILocation(line: 98, column: 14, scope: !12987)
!13005 = !DILocation(line: 98, column: 27, scope: !12987)
!13006 = !DILocation(line: 98, column: 25, scope: !12987)
!13007 = !DILocation(line: 98, column: 9, scope: !12987)
!13008 = !DILocation(line: 98, column: 12, scope: !12987)
!13009 = !DILocation(line: 99, column: 16, scope: !12987)
!13010 = !DILocation(line: 99, column: 19, scope: !12987)
!13011 = !DILocation(line: 99, column: 23, scope: !12987)
!13012 = !DILocation(line: 99, column: 14, scope: !12987)
!13013 = !DILocation(line: 99, column: 30, scope: !12987)
!13014 = !DILocation(line: 99, column: 28, scope: !12987)
!13015 = !DILocation(line: 99, column: 9, scope: !12987)
!13016 = !DILocation(line: 99, column: 12, scope: !12987)
!13017 = !DILocation(line: 100, column: 16, scope: !12987)
!13018 = !DILocation(line: 100, column: 19, scope: !12987)
!13019 = !DILocation(line: 100, column: 23, scope: !12987)
!13020 = !DILocation(line: 100, column: 14, scope: !12987)
!13021 = !DILocation(line: 100, column: 30, scope: !12987)
!13022 = !DILocation(line: 100, column: 28, scope: !12987)
!13023 = !DILocation(line: 100, column: 9, scope: !12987)
!13024 = !DILocation(line: 100, column: 12, scope: !12987)
!13025 = !DILocation(line: 101, column: 16, scope: !12987)
!13026 = !DILocation(line: 101, column: 19, scope: !12987)
!13027 = !DILocation(line: 101, column: 23, scope: !12987)
!13028 = !DILocation(line: 101, column: 14, scope: !12987)
!13029 = !DILocation(line: 101, column: 30, scope: !12987)
!13030 = !DILocation(line: 101, column: 28, scope: !12987)
!13031 = !DILocation(line: 101, column: 9, scope: !12987)
!13032 = !DILocation(line: 101, column: 12, scope: !12987)
!13033 = !DILocation(line: 102, column: 12, scope: !12987)
!13034 = !DILocation(line: 102, column: 5, scope: !12987)
!13035 = distinct !DISubprogram(name: "VMUL4S", scope: !1145, file: !1145, line: 124, type: !13036, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!2554, !2554, !2555, !1013, !1013, !2555}
!13038 = !DILocalVariable(name: "dst", arg: 1, scope: !13035, file: !1145, line: 124, type: !2554)
!13039 = !DILocation(line: 124, column: 36, scope: !13035)
!13040 = !DILocalVariable(name: "v", arg: 2, scope: !13035, file: !1145, line: 124, type: !2555)
!13041 = !DILocation(line: 124, column: 54, scope: !13035)
!13042 = !DILocalVariable(name: "idx", arg: 3, scope: !13035, file: !1145, line: 124, type: !1013)
!13043 = !DILocation(line: 124, column: 66, scope: !13035)
!13044 = !DILocalVariable(name: "sign", arg: 4, scope: !13035, file: !1145, line: 125, type: !1013)
!13045 = !DILocation(line: 125, column: 38, scope: !13035)
!13046 = !DILocalVariable(name: "scale", arg: 5, scope: !13035, file: !1145, line: 125, type: !2555)
!13047 = !DILocation(line: 125, column: 57, scope: !13035)
!13048 = !DILocalVariable(name: "nz", scope: !13035, file: !1145, line: 127, type: !1013)
!13049 = !DILocation(line: 127, column: 14, scope: !13035)
!13050 = !DILocation(line: 127, column: 19, scope: !13035)
!13051 = !DILocation(line: 127, column: 23, scope: !13035)
!13052 = !DILocalVariable(name: "s", scope: !13035, file: !1145, line: 128, type: !12487)
!13053 = !DILocation(line: 128, column: 25, scope: !13035)
!13054 = !DILocation(line: 128, column: 29, scope: !13035)
!13055 = !DILocation(line: 128, column: 37, scope: !13035)
!13056 = !DILocation(line: 128, column: 36, scope: !13035)
!13057 = !DILocalVariable(name: "t", scope: !13035, file: !1145, line: 129, type: !12487)
!13058 = !DILocation(line: 129, column: 25, scope: !13035)
!13059 = !DILocation(line: 131, column: 13, scope: !13035)
!13060 = !DILocation(line: 131, column: 18, scope: !13035)
!13061 = !DILocation(line: 131, column: 23, scope: !13035)
!13062 = !DILocation(line: 131, column: 15, scope: !13035)
!13063 = !DILocation(line: 131, column: 7, scope: !13035)
!13064 = !DILocation(line: 131, column: 9, scope: !13035)
!13065 = !DILocation(line: 132, column: 16, scope: !13035)
!13066 = !DILocation(line: 132, column: 20, scope: !13035)
!13067 = !DILocation(line: 132, column: 14, scope: !13035)
!13068 = !DILocation(line: 132, column: 29, scope: !13035)
!13069 = !DILocation(line: 132, column: 25, scope: !13035)
!13070 = !DILocation(line: 132, column: 9, scope: !13035)
!13071 = !DILocation(line: 132, column: 12, scope: !13035)
!13072 = !DILocation(line: 134, column: 14, scope: !13035)
!13073 = !DILocation(line: 134, column: 17, scope: !13035)
!13074 = !DILocation(line: 134, column: 10, scope: !13035)
!13075 = !DILocation(line: 134, column: 25, scope: !13035)
!13076 = !DILocation(line: 135, column: 13, scope: !13035)
!13077 = !DILocation(line: 135, column: 18, scope: !13035)
!13078 = !DILocation(line: 135, column: 23, scope: !13035)
!13079 = !DILocation(line: 135, column: 15, scope: !13035)
!13080 = !DILocation(line: 135, column: 7, scope: !13035)
!13081 = !DILocation(line: 135, column: 9, scope: !13035)
!13082 = !DILocation(line: 136, column: 16, scope: !13035)
!13083 = !DILocation(line: 136, column: 19, scope: !13035)
!13084 = !DILocation(line: 136, column: 23, scope: !13035)
!13085 = !DILocation(line: 136, column: 14, scope: !13035)
!13086 = !DILocation(line: 136, column: 32, scope: !13035)
!13087 = !DILocation(line: 136, column: 28, scope: !13035)
!13088 = !DILocation(line: 136, column: 9, scope: !13035)
!13089 = !DILocation(line: 136, column: 12, scope: !13035)
!13090 = !DILocation(line: 138, column: 14, scope: !13035)
!13091 = !DILocation(line: 138, column: 17, scope: !13035)
!13092 = !DILocation(line: 138, column: 10, scope: !13035)
!13093 = !DILocation(line: 138, column: 25, scope: !13035)
!13094 = !DILocation(line: 139, column: 13, scope: !13035)
!13095 = !DILocation(line: 139, column: 18, scope: !13035)
!13096 = !DILocation(line: 139, column: 23, scope: !13035)
!13097 = !DILocation(line: 139, column: 15, scope: !13035)
!13098 = !DILocation(line: 139, column: 7, scope: !13035)
!13099 = !DILocation(line: 139, column: 9, scope: !13035)
!13100 = !DILocation(line: 140, column: 16, scope: !13035)
!13101 = !DILocation(line: 140, column: 19, scope: !13035)
!13102 = !DILocation(line: 140, column: 23, scope: !13035)
!13103 = !DILocation(line: 140, column: 14, scope: !13035)
!13104 = !DILocation(line: 140, column: 32, scope: !13035)
!13105 = !DILocation(line: 140, column: 28, scope: !13035)
!13106 = !DILocation(line: 140, column: 9, scope: !13035)
!13107 = !DILocation(line: 140, column: 12, scope: !13035)
!13108 = !DILocation(line: 142, column: 14, scope: !13035)
!13109 = !DILocation(line: 142, column: 17, scope: !13035)
!13110 = !DILocation(line: 142, column: 10, scope: !13035)
!13111 = !DILocation(line: 143, column: 13, scope: !13035)
!13112 = !DILocation(line: 143, column: 18, scope: !13035)
!13113 = !DILocation(line: 143, column: 23, scope: !13035)
!13114 = !DILocation(line: 143, column: 15, scope: !13035)
!13115 = !DILocation(line: 143, column: 7, scope: !13035)
!13116 = !DILocation(line: 143, column: 9, scope: !13035)
!13117 = !DILocation(line: 144, column: 16, scope: !13035)
!13118 = !DILocation(line: 144, column: 19, scope: !13035)
!13119 = !DILocation(line: 144, column: 23, scope: !13035)
!13120 = !DILocation(line: 144, column: 14, scope: !13035)
!13121 = !DILocation(line: 144, column: 32, scope: !13035)
!13122 = !DILocation(line: 144, column: 28, scope: !13035)
!13123 = !DILocation(line: 144, column: 9, scope: !13035)
!13124 = !DILocation(line: 144, column: 12, scope: !13035)
!13125 = !DILocation(line: 146, column: 12, scope: !13035)
!13126 = !DILocation(line: 146, column: 5, scope: !13035)
!13127 = distinct !DISubprogram(name: "VMUL2", scope: !1145, file: !1145, line: 83, type: !12988, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13128 = !DILocalVariable(name: "dst", arg: 1, scope: !13127, file: !1145, line: 83, type: !2554)
!13129 = !DILocation(line: 83, column: 35, scope: !13127)
!13130 = !DILocalVariable(name: "v", arg: 2, scope: !13127, file: !1145, line: 83, type: !2555)
!13131 = !DILocation(line: 83, column: 53, scope: !13127)
!13132 = !DILocalVariable(name: "idx", arg: 3, scope: !13127, file: !1145, line: 83, type: !1013)
!13133 = !DILocation(line: 83, column: 65, scope: !13127)
!13134 = !DILocalVariable(name: "scale", arg: 4, scope: !13127, file: !1145, line: 84, type: !2555)
!13135 = !DILocation(line: 84, column: 41, scope: !13127)
!13136 = !DILocalVariable(name: "s", scope: !13127, file: !1145, line: 86, type: !1016)
!13137 = !DILocation(line: 86, column: 11, scope: !13127)
!13138 = !DILocation(line: 86, column: 16, scope: !13127)
!13139 = !DILocation(line: 86, column: 15, scope: !13127)
!13140 = !DILocation(line: 87, column: 16, scope: !13127)
!13141 = !DILocation(line: 87, column: 20, scope: !13127)
!13142 = !DILocation(line: 87, column: 14, scope: !13127)
!13143 = !DILocation(line: 87, column: 28, scope: !13127)
!13144 = !DILocation(line: 87, column: 26, scope: !13127)
!13145 = !DILocation(line: 87, column: 9, scope: !13127)
!13146 = !DILocation(line: 87, column: 12, scope: !13127)
!13147 = !DILocation(line: 88, column: 16, scope: !13127)
!13148 = !DILocation(line: 88, column: 19, scope: !13127)
!13149 = !DILocation(line: 88, column: 23, scope: !13127)
!13150 = !DILocation(line: 88, column: 14, scope: !13127)
!13151 = !DILocation(line: 88, column: 31, scope: !13127)
!13152 = !DILocation(line: 88, column: 29, scope: !13127)
!13153 = !DILocation(line: 88, column: 9, scope: !13127)
!13154 = !DILocation(line: 88, column: 12, scope: !13127)
!13155 = !DILocation(line: 89, column: 12, scope: !13127)
!13156 = !DILocation(line: 89, column: 5, scope: !13127)
!13157 = distinct !DISubprogram(name: "VMUL2S", scope: !1145, file: !1145, line: 107, type: !13036, isLocal: true, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13158 = !DILocalVariable(name: "dst", arg: 1, scope: !13157, file: !1145, line: 107, type: !2554)
!13159 = !DILocation(line: 107, column: 36, scope: !13157)
!13160 = !DILocalVariable(name: "v", arg: 2, scope: !13157, file: !1145, line: 107, type: !2555)
!13161 = !DILocation(line: 107, column: 54, scope: !13157)
!13162 = !DILocalVariable(name: "idx", arg: 3, scope: !13157, file: !1145, line: 107, type: !1013)
!13163 = !DILocation(line: 107, column: 66, scope: !13157)
!13164 = !DILocalVariable(name: "sign", arg: 4, scope: !13157, file: !1145, line: 108, type: !1013)
!13165 = !DILocation(line: 108, column: 38, scope: !13157)
!13166 = !DILocalVariable(name: "scale", arg: 5, scope: !13157, file: !1145, line: 108, type: !2555)
!13167 = !DILocation(line: 108, column: 57, scope: !13157)
!13168 = !DILocalVariable(name: "s0", scope: !13157, file: !1145, line: 110, type: !12487)
!13169 = !DILocation(line: 110, column: 25, scope: !13157)
!13170 = !DILocalVariable(name: "s1", scope: !13157, file: !1145, line: 110, type: !12487)
!13171 = !DILocation(line: 110, column: 29, scope: !13157)
!13172 = !DILocation(line: 112, column: 20, scope: !13157)
!13173 = !DILocation(line: 112, column: 19, scope: !13157)
!13174 = !DILocation(line: 112, column: 15, scope: !13157)
!13175 = !DILocation(line: 112, column: 17, scope: !13157)
!13176 = !DILocation(line: 112, column: 8, scope: !13157)
!13177 = !DILocation(line: 112, column: 10, scope: !13157)
!13178 = !DILocation(line: 113, column: 13, scope: !13157)
!13179 = !DILocation(line: 113, column: 18, scope: !13157)
!13180 = !DILocation(line: 113, column: 23, scope: !13157)
!13181 = !DILocation(line: 113, column: 8, scope: !13157)
!13182 = !DILocation(line: 113, column: 10, scope: !13157)
!13183 = !DILocation(line: 114, column: 13, scope: !13157)
!13184 = !DILocation(line: 114, column: 18, scope: !13157)
!13185 = !DILocation(line: 114, column: 8, scope: !13157)
!13186 = !DILocation(line: 114, column: 10, scope: !13157)
!13187 = !DILocation(line: 116, column: 16, scope: !13157)
!13188 = !DILocation(line: 116, column: 20, scope: !13157)
!13189 = !DILocation(line: 116, column: 14, scope: !13157)
!13190 = !DILocation(line: 116, column: 31, scope: !13157)
!13191 = !DILocation(line: 116, column: 26, scope: !13157)
!13192 = !DILocation(line: 116, column: 9, scope: !13157)
!13193 = !DILocation(line: 116, column: 12, scope: !13157)
!13194 = !DILocation(line: 117, column: 16, scope: !13157)
!13195 = !DILocation(line: 117, column: 19, scope: !13157)
!13196 = !DILocation(line: 117, column: 23, scope: !13157)
!13197 = !DILocation(line: 117, column: 14, scope: !13157)
!13198 = !DILocation(line: 117, column: 34, scope: !13157)
!13199 = !DILocation(line: 117, column: 29, scope: !13157)
!13200 = !DILocation(line: 117, column: 9, scope: !13157)
!13201 = !DILocation(line: 117, column: 12, scope: !13157)
!13202 = !DILocation(line: 119, column: 12, scope: !13157)
!13203 = !DILocation(line: 119, column: 5, scope: !13157)
!13204 = distinct !DISubprogram(name: "reset_all_predictors", scope: !1803, file: !1803, line: 1069, type: !13205, isLocal: true, isDefinition: true, scopeLine: 1070, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{null, !12475}
!13207 = !DILocalVariable(name: "ps", arg: 1, scope: !13208, file: !1145, line: 72, type: !12475)
!13208 = distinct !DISubprogram(name: "reset_predict_state", scope: !1145, file: !1145, line: 72, type: !13205, isLocal: true, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13209 = !DILocation(line: 72, column: 87, scope: !13208, inlinedAt: !13210)
!13210 = distinct !DILocation(line: 1073, column: 9, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13212, file: !1803, line: 1072, column: 5)
!13212 = distinct !DILexicalBlock(scope: !13204, file: !1803, line: 1072, column: 5)
!13213 = !DILocalVariable(name: "ps", arg: 1, scope: !13204, file: !1803, line: 1069, type: !12475)
!13214 = !DILocation(line: 1069, column: 50, scope: !13204)
!13215 = !DILocalVariable(name: "i", scope: !13204, file: !1803, line: 1071, type: !1012)
!13216 = !DILocation(line: 1071, column: 9, scope: !13204)
!13217 = !DILocation(line: 1072, column: 12, scope: !13212)
!13218 = !DILocation(line: 1072, column: 10, scope: !13212)
!13219 = !DILocation(line: 1072, column: 17, scope: !13220)
!13220 = !DILexicalBlockFile(scope: !13211, file: !1803, discriminator: 1)
!13221 = !DILocation(line: 1072, column: 19, scope: !13220)
!13222 = !DILocation(line: 1072, column: 5, scope: !13220)
!13223 = !DILocation(line: 1073, column: 33, scope: !13211)
!13224 = !DILocation(line: 1073, column: 30, scope: !13211)
!13225 = !DILocation(line: 1073, column: 9, scope: !13211)
!13226 = !DILocation(line: 74, column: 5, scope: !13208, inlinedAt: !13210)
!13227 = !DILocation(line: 74, column: 9, scope: !13208, inlinedAt: !13210)
!13228 = !DILocation(line: 74, column: 12, scope: !13208, inlinedAt: !13210)
!13229 = !DILocation(line: 75, column: 5, scope: !13208, inlinedAt: !13210)
!13230 = !DILocation(line: 75, column: 9, scope: !13208, inlinedAt: !13210)
!13231 = !DILocation(line: 75, column: 12, scope: !13208, inlinedAt: !13210)
!13232 = !DILocation(line: 76, column: 5, scope: !13208, inlinedAt: !13210)
!13233 = !DILocation(line: 76, column: 9, scope: !13208, inlinedAt: !13210)
!13234 = !DILocation(line: 76, column: 14, scope: !13208, inlinedAt: !13210)
!13235 = !DILocation(line: 77, column: 5, scope: !13208, inlinedAt: !13210)
!13236 = !DILocation(line: 77, column: 9, scope: !13208, inlinedAt: !13210)
!13237 = !DILocation(line: 77, column: 14, scope: !13208, inlinedAt: !13210)
!13238 = !DILocation(line: 78, column: 5, scope: !13208, inlinedAt: !13210)
!13239 = !DILocation(line: 78, column: 9, scope: !13208, inlinedAt: !13210)
!13240 = !DILocation(line: 78, column: 14, scope: !13208, inlinedAt: !13210)
!13241 = !DILocation(line: 79, column: 5, scope: !13208, inlinedAt: !13210)
!13242 = !DILocation(line: 79, column: 9, scope: !13208, inlinedAt: !13210)
!13243 = !DILocation(line: 79, column: 14, scope: !13208, inlinedAt: !13210)
!13244 = !DILocation(line: 1072, column: 27, scope: !13245)
!13245 = !DILexicalBlockFile(scope: !13211, file: !1803, discriminator: 2)
!13246 = !DILocation(line: 1072, column: 5, scope: !13245)
!13247 = distinct !{!13247, !13248}
!13248 = !DILocation(line: 1072, column: 5, scope: !13204)
!13249 = !DILocation(line: 1074, column: 1, scope: !13204)
!13250 = distinct !DISubprogram(name: "reset_predictor_group", scope: !1803, file: !1803, line: 1092, type: !13251, isLocal: true, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13251 = !DISubroutineType(types: !13252)
!13252 = !{null, !12475, !1012}
!13253 = !DILocation(line: 72, column: 87, scope: !13208, inlinedAt: !13254)
!13254 = distinct !DILocation(line: 1096, column: 9, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !1803, line: 1095, column: 5)
!13256 = distinct !DILexicalBlock(scope: !13250, file: !1803, line: 1095, column: 5)
!13257 = !DILocalVariable(name: "ps", arg: 1, scope: !13250, file: !1803, line: 1092, type: !12475)
!13258 = !DILocation(line: 1092, column: 51, scope: !13250)
!13259 = !DILocalVariable(name: "group_num", arg: 2, scope: !13250, file: !1803, line: 1092, type: !1012)
!13260 = !DILocation(line: 1092, column: 59, scope: !13250)
!13261 = !DILocalVariable(name: "i", scope: !13250, file: !1803, line: 1094, type: !1012)
!13262 = !DILocation(line: 1094, column: 9, scope: !13250)
!13263 = !DILocation(line: 1095, column: 14, scope: !13256)
!13264 = !DILocation(line: 1095, column: 24, scope: !13256)
!13265 = !DILocation(line: 1095, column: 12, scope: !13256)
!13266 = !DILocation(line: 1095, column: 10, scope: !13256)
!13267 = !DILocation(line: 1095, column: 29, scope: !13268)
!13268 = !DILexicalBlockFile(scope: !13255, file: !1803, discriminator: 1)
!13269 = !DILocation(line: 1095, column: 31, scope: !13268)
!13270 = !DILocation(line: 1095, column: 5, scope: !13268)
!13271 = !DILocation(line: 1096, column: 33, scope: !13255)
!13272 = !DILocation(line: 1096, column: 30, scope: !13255)
!13273 = !DILocation(line: 1096, column: 9, scope: !13255)
!13274 = !DILocation(line: 74, column: 5, scope: !13208, inlinedAt: !13254)
!13275 = !DILocation(line: 74, column: 9, scope: !13208, inlinedAt: !13254)
!13276 = !DILocation(line: 74, column: 12, scope: !13208, inlinedAt: !13254)
!13277 = !DILocation(line: 75, column: 5, scope: !13208, inlinedAt: !13254)
!13278 = !DILocation(line: 75, column: 9, scope: !13208, inlinedAt: !13254)
!13279 = !DILocation(line: 75, column: 12, scope: !13208, inlinedAt: !13254)
!13280 = !DILocation(line: 76, column: 5, scope: !13208, inlinedAt: !13254)
!13281 = !DILocation(line: 76, column: 9, scope: !13208, inlinedAt: !13254)
!13282 = !DILocation(line: 76, column: 14, scope: !13208, inlinedAt: !13254)
!13283 = !DILocation(line: 77, column: 5, scope: !13208, inlinedAt: !13254)
!13284 = !DILocation(line: 77, column: 9, scope: !13208, inlinedAt: !13254)
!13285 = !DILocation(line: 77, column: 14, scope: !13208, inlinedAt: !13254)
!13286 = !DILocation(line: 78, column: 5, scope: !13208, inlinedAt: !13254)
!13287 = !DILocation(line: 78, column: 9, scope: !13208, inlinedAt: !13254)
!13288 = !DILocation(line: 78, column: 14, scope: !13208, inlinedAt: !13254)
!13289 = !DILocation(line: 79, column: 5, scope: !13208, inlinedAt: !13254)
!13290 = !DILocation(line: 79, column: 9, scope: !13208, inlinedAt: !13254)
!13291 = !DILocation(line: 79, column: 14, scope: !13208, inlinedAt: !13254)
!13292 = !DILocation(line: 1095, column: 40, scope: !13293)
!13293 = !DILexicalBlockFile(scope: !13255, file: !1803, discriminator: 2)
!13294 = !DILocation(line: 1095, column: 5, scope: !13293)
!13295 = distinct !{!13295, !13296}
!13296 = !DILocation(line: 1095, column: 5, scope: !13250)
!13297 = !DILocation(line: 1097, column: 1, scope: !13250)
!13298 = distinct !DISubprogram(name: "decode_mid_side_stereo", scope: !1803, file: !1803, line: 1621, type: !13299, isLocal: true, isDefinition: true, scopeLine: 1623, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13299 = !DISubroutineType(types: !13300)
!13300 = !{null, !2095, !2043, !1012}
!13301 = !DILocalVariable(name: "cpe", arg: 1, scope: !13298, file: !1803, line: 1621, type: !2095)
!13302 = !DILocation(line: 1621, column: 52, scope: !13298)
!13303 = !DILocalVariable(name: "gb", arg: 2, scope: !13298, file: !1803, line: 1621, type: !2043)
!13304 = !DILocation(line: 1621, column: 72, scope: !13298)
!13305 = !DILocalVariable(name: "ms_present", arg: 3, scope: !13298, file: !1803, line: 1622, type: !1012)
!13306 = !DILocation(line: 1622, column: 40, scope: !13298)
!13307 = !DILocalVariable(name: "idx", scope: !13298, file: !1803, line: 1624, type: !1012)
!13308 = !DILocation(line: 1624, column: 9, scope: !13298)
!13309 = !DILocalVariable(name: "max_idx", scope: !13298, file: !1803, line: 1625, type: !1012)
!13310 = !DILocation(line: 1625, column: 9, scope: !13298)
!13311 = !DILocation(line: 1625, column: 19, scope: !13298)
!13312 = !DILocation(line: 1625, column: 24, scope: !13298)
!13313 = !DILocation(line: 1625, column: 30, scope: !13298)
!13314 = !DILocation(line: 1625, column: 34, scope: !13298)
!13315 = !DILocation(line: 1625, column: 54, scope: !13298)
!13316 = !DILocation(line: 1625, column: 59, scope: !13298)
!13317 = !DILocation(line: 1625, column: 65, scope: !13298)
!13318 = !DILocation(line: 1625, column: 69, scope: !13298)
!13319 = !DILocation(line: 1625, column: 52, scope: !13298)
!13320 = !DILocation(line: 1626, column: 9, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13298, file: !1803, line: 1626, column: 9)
!13322 = !DILocation(line: 1626, column: 20, scope: !13321)
!13323 = !DILocation(line: 1626, column: 9, scope: !13298)
!13324 = !DILocation(line: 1627, column: 18, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13326, file: !1803, line: 1627, column: 9)
!13326 = distinct !DILexicalBlock(scope: !13321, file: !1803, line: 1626, column: 26)
!13327 = !DILocation(line: 1627, column: 14, scope: !13325)
!13328 = !DILocation(line: 1627, column: 23, scope: !13329)
!13329 = !DILexicalBlockFile(scope: !13330, file: !1803, discriminator: 1)
!13330 = distinct !DILexicalBlock(scope: !13325, file: !1803, line: 1627, column: 9)
!13331 = !DILocation(line: 1627, column: 29, scope: !13329)
!13332 = !DILocation(line: 1627, column: 27, scope: !13329)
!13333 = !DILocation(line: 1627, column: 9, scope: !13329)
!13334 = !DILocation(line: 1628, column: 43, scope: !13330)
!13335 = !DILocation(line: 1628, column: 33, scope: !13330)
!13336 = !DILocation(line: 1628, column: 26, scope: !13330)
!13337 = !DILocation(line: 1628, column: 13, scope: !13330)
!13338 = !DILocation(line: 1628, column: 18, scope: !13330)
!13339 = !DILocation(line: 1628, column: 31, scope: !13330)
!13340 = !DILocation(line: 1627, column: 41, scope: !13341)
!13341 = !DILexicalBlockFile(scope: !13330, file: !1803, discriminator: 2)
!13342 = !DILocation(line: 1627, column: 9, scope: !13341)
!13343 = distinct !{!13343, !13344}
!13344 = !DILocation(line: 1627, column: 9, scope: !13326)
!13345 = !DILocation(line: 1629, column: 5, scope: !13326)
!13346 = !DILocation(line: 1629, column: 16, scope: !13347)
!13347 = !DILexicalBlockFile(scope: !13348, file: !1803, discriminator: 1)
!13348 = distinct !DILexicalBlock(scope: !13321, file: !1803, line: 1629, column: 16)
!13349 = !DILocation(line: 1629, column: 27, scope: !13347)
!13350 = !DILocation(line: 1630, column: 16, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13348, file: !1803, line: 1629, column: 33)
!13352 = !DILocation(line: 1630, column: 21, scope: !13351)
!13353 = !DILocation(line: 1630, column: 9, scope: !13351)
!13354 = !DILocation(line: 1630, column: 33, scope: !13351)
!13355 = !DILocation(line: 1630, column: 41, scope: !13351)
!13356 = !DILocation(line: 1631, column: 5, scope: !13351)
!13357 = !DILocation(line: 1632, column: 1, scope: !13298)
!13358 = distinct !DISubprogram(name: "apply_mid_side_stereo", scope: !1803, file: !1803, line: 2097, type: !13359, isLocal: true, isDefinition: true, scopeLine: 2098, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{null, !2065, !2095}
!13361 = !DILocalVariable(name: "ac", arg: 1, scope: !13358, file: !1803, line: 2097, type: !2065)
!13362 = !DILocation(line: 2097, column: 47, scope: !13358)
!13363 = !DILocalVariable(name: "cpe", arg: 2, scope: !13358, file: !1803, line: 2097, type: !2095)
!13364 = !DILocation(line: 2097, column: 67, scope: !13358)
!13365 = !DILocalVariable(name: "ics", scope: !13358, file: !1803, line: 2099, type: !10551)
!13366 = !DILocation(line: 2099, column: 36, scope: !13358)
!13367 = !DILocation(line: 2099, column: 43, scope: !13358)
!13368 = !DILocation(line: 2099, column: 48, scope: !13358)
!13369 = !DILocation(line: 2099, column: 54, scope: !13358)
!13370 = !DILocalVariable(name: "ch0", scope: !13358, file: !1803, line: 2100, type: !1031)
!13371 = !DILocation(line: 2100, column: 15, scope: !13358)
!13372 = !DILocation(line: 2100, column: 21, scope: !13358)
!13373 = !DILocation(line: 2100, column: 26, scope: !13358)
!13374 = !DILocation(line: 2100, column: 32, scope: !13358)
!13375 = !DILocalVariable(name: "ch1", scope: !13358, file: !1803, line: 2101, type: !1031)
!13376 = !DILocation(line: 2101, column: 15, scope: !13358)
!13377 = !DILocation(line: 2101, column: 21, scope: !13358)
!13378 = !DILocation(line: 2101, column: 26, scope: !13358)
!13379 = !DILocation(line: 2101, column: 32, scope: !13358)
!13380 = !DILocalVariable(name: "g", scope: !13358, file: !1803, line: 2102, type: !1012)
!13381 = !DILocation(line: 2102, column: 9, scope: !13358)
!13382 = !DILocalVariable(name: "i", scope: !13358, file: !1803, line: 2102, type: !1012)
!13383 = !DILocation(line: 2102, column: 12, scope: !13358)
!13384 = !DILocalVariable(name: "group", scope: !13358, file: !1803, line: 2102, type: !1012)
!13385 = !DILocation(line: 2102, column: 15, scope: !13358)
!13386 = !DILocalVariable(name: "idx", scope: !13358, file: !1803, line: 2102, type: !1012)
!13387 = !DILocation(line: 2102, column: 22, scope: !13358)
!13388 = !DILocalVariable(name: "offsets", scope: !13358, file: !1803, line: 2103, type: !1943)
!13389 = !DILocation(line: 2103, column: 21, scope: !13358)
!13390 = !DILocation(line: 2103, column: 31, scope: !13358)
!13391 = !DILocation(line: 2103, column: 36, scope: !13358)
!13392 = !DILocation(line: 2104, column: 12, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13358, file: !1803, line: 2104, column: 5)
!13394 = !DILocation(line: 2104, column: 10, scope: !13393)
!13395 = !DILocation(line: 2104, column: 17, scope: !13396)
!13396 = !DILexicalBlockFile(scope: !13397, file: !1803, discriminator: 1)
!13397 = distinct !DILexicalBlock(scope: !13393, file: !1803, line: 2104, column: 5)
!13398 = !DILocation(line: 2104, column: 21, scope: !13396)
!13399 = !DILocation(line: 2104, column: 26, scope: !13396)
!13400 = !DILocation(line: 2104, column: 19, scope: !13396)
!13401 = !DILocation(line: 2104, column: 5, scope: !13396)
!13402 = !DILocation(line: 2105, column: 16, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !1803, line: 2105, column: 9)
!13404 = distinct !DILexicalBlock(scope: !13397, file: !1803, line: 2104, column: 50)
!13405 = !DILocation(line: 2105, column: 14, scope: !13403)
!13406 = !DILocation(line: 2105, column: 21, scope: !13407)
!13407 = !DILexicalBlockFile(scope: !13408, file: !1803, discriminator: 1)
!13408 = distinct !DILexicalBlock(scope: !13403, file: !1803, line: 2105, column: 9)
!13409 = !DILocation(line: 2105, column: 25, scope: !13407)
!13410 = !DILocation(line: 2105, column: 30, scope: !13407)
!13411 = !DILocation(line: 2105, column: 23, scope: !13407)
!13412 = !DILocation(line: 2105, column: 9, scope: !13407)
!13413 = !DILocation(line: 2106, column: 30, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !1803, line: 2106, column: 17)
!13415 = distinct !DILexicalBlock(scope: !13408, file: !1803, line: 2105, column: 51)
!13416 = !DILocation(line: 2106, column: 17, scope: !13414)
!13417 = !DILocation(line: 2106, column: 22, scope: !13414)
!13418 = !DILocation(line: 2106, column: 35, scope: !13414)
!13419 = !DILocation(line: 2107, column: 38, scope: !13414)
!13420 = !DILocation(line: 2107, column: 17, scope: !13414)
!13421 = !DILocation(line: 2107, column: 22, scope: !13414)
!13422 = !DILocation(line: 2107, column: 28, scope: !13414)
!13423 = !DILocation(line: 2107, column: 43, scope: !13414)
!13424 = !DILocation(line: 2107, column: 54, scope: !13414)
!13425 = !DILocation(line: 2108, column: 38, scope: !13414)
!13426 = !DILocation(line: 2108, column: 17, scope: !13414)
!13427 = !DILocation(line: 2108, column: 22, scope: !13414)
!13428 = !DILocation(line: 2108, column: 28, scope: !13414)
!13429 = !DILocation(line: 2108, column: 43, scope: !13414)
!13430 = !DILocation(line: 2106, column: 17, scope: !13431)
!13431 = !DILexicalBlockFile(scope: !13415, file: !1803, discriminator: 1)
!13432 = !DILocation(line: 2115, column: 28, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !1803, line: 2115, column: 17)
!13434 = distinct !DILexicalBlock(scope: !13414, file: !1803, line: 2108, column: 55)
!13435 = !DILocation(line: 2115, column: 22, scope: !13433)
!13436 = !DILocation(line: 2115, column: 33, scope: !13437)
!13437 = !DILexicalBlockFile(scope: !13438, file: !1803, discriminator: 1)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !1803, line: 2115, column: 17)
!13439 = !DILocation(line: 2115, column: 56, scope: !13437)
!13440 = !DILocation(line: 2115, column: 41, scope: !13437)
!13441 = !DILocation(line: 2115, column: 46, scope: !13437)
!13442 = !DILocation(line: 2115, column: 39, scope: !13437)
!13443 = !DILocation(line: 2115, column: 17, scope: !13437)
!13444 = !DILocation(line: 2116, column: 21, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13438, file: !1803, line: 2115, column: 69)
!13446 = !DILocation(line: 2116, column: 25, scope: !13445)
!13447 = !DILocation(line: 2116, column: 31, scope: !13445)
!13448 = !DILocation(line: 2116, column: 49, scope: !13445)
!13449 = !DILocation(line: 2116, column: 55, scope: !13445)
!13450 = !DILocation(line: 2116, column: 61, scope: !13445)
!13451 = !DILocation(line: 2116, column: 53, scope: !13445)
!13452 = !DILocation(line: 2116, column: 77, scope: !13445)
!13453 = !DILocation(line: 2116, column: 69, scope: !13445)
!13454 = !DILocation(line: 2116, column: 67, scope: !13445)
!13455 = !DILocation(line: 2117, column: 48, scope: !13445)
!13456 = !DILocation(line: 2117, column: 54, scope: !13445)
!13457 = !DILocation(line: 2117, column: 60, scope: !13445)
!13458 = !DILocation(line: 2117, column: 52, scope: !13445)
!13459 = !DILocation(line: 2117, column: 76, scope: !13445)
!13460 = !DILocation(line: 2117, column: 68, scope: !13445)
!13461 = !DILocation(line: 2117, column: 66, scope: !13445)
!13462 = !DILocation(line: 2118, column: 56, scope: !13445)
!13463 = !DILocation(line: 2118, column: 57, scope: !13445)
!13464 = !DILocation(line: 2118, column: 48, scope: !13445)
!13465 = !DILocation(line: 2118, column: 71, scope: !13445)
!13466 = !DILocation(line: 2118, column: 63, scope: !13445)
!13467 = !DILocation(line: 2118, column: 61, scope: !13445)
!13468 = !DILocation(line: 2120, column: 17, scope: !13445)
!13469 = !DILocation(line: 2115, column: 65, scope: !13470)
!13470 = !DILexicalBlockFile(scope: !13438, file: !1803, discriminator: 2)
!13471 = !DILocation(line: 2115, column: 17, scope: !13470)
!13472 = distinct !{!13472, !13473}
!13473 = !DILocation(line: 2115, column: 17, scope: !13434)
!13474 = !DILocation(line: 2121, column: 13, scope: !13434)
!13475 = !DILocation(line: 2122, column: 9, scope: !13415)
!13476 = !DILocation(line: 2105, column: 40, scope: !13477)
!13477 = !DILexicalBlockFile(scope: !13408, file: !1803, discriminator: 2)
!13478 = !DILocation(line: 2105, column: 47, scope: !13477)
!13479 = !DILocation(line: 2105, column: 9, scope: !13477)
!13480 = distinct !{!13480, !13481}
!13481 = !DILocation(line: 2105, column: 9, scope: !13404)
!13482 = !DILocation(line: 2123, column: 31, scope: !13404)
!13483 = !DILocation(line: 2123, column: 16, scope: !13404)
!13484 = !DILocation(line: 2123, column: 21, scope: !13404)
!13485 = !DILocation(line: 2123, column: 34, scope: !13404)
!13486 = !DILocation(line: 2123, column: 13, scope: !13404)
!13487 = !DILocation(line: 2124, column: 31, scope: !13404)
!13488 = !DILocation(line: 2124, column: 16, scope: !13404)
!13489 = !DILocation(line: 2124, column: 21, scope: !13404)
!13490 = !DILocation(line: 2124, column: 34, scope: !13404)
!13491 = !DILocation(line: 2124, column: 13, scope: !13404)
!13492 = !DILocation(line: 2125, column: 5, scope: !13404)
!13493 = !DILocation(line: 2104, column: 46, scope: !13494)
!13494 = !DILexicalBlockFile(scope: !13397, file: !1803, discriminator: 2)
!13495 = !DILocation(line: 2104, column: 5, scope: !13494)
!13496 = distinct !{!13496, !13497}
!13497 = !DILocation(line: 2104, column: 5, scope: !13358)
!13498 = !DILocation(line: 2126, column: 1, scope: !13358)
!13499 = distinct !DISubprogram(name: "apply_intensity_stereo", scope: !1803, file: !1803, line: 2135, type: !13500, isLocal: true, isDefinition: true, scopeLine: 2137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{null, !2065, !2095, !1012}
!13502 = !DILocalVariable(name: "ac", arg: 1, scope: !13499, file: !1803, line: 2135, type: !2065)
!13503 = !DILocation(line: 2135, column: 48, scope: !13499)
!13504 = !DILocalVariable(name: "cpe", arg: 2, scope: !13499, file: !1803, line: 2136, type: !2095)
!13505 = !DILocation(line: 2136, column: 52, scope: !13499)
!13506 = !DILocalVariable(name: "ms_present", arg: 3, scope: !13499, file: !1803, line: 2136, type: !1012)
!13507 = !DILocation(line: 2136, column: 61, scope: !13499)
!13508 = !DILocalVariable(name: "ics", scope: !13499, file: !1803, line: 2138, type: !10551)
!13509 = !DILocation(line: 2138, column: 36, scope: !13499)
!13510 = !DILocation(line: 2138, column: 43, scope: !13499)
!13511 = !DILocation(line: 2138, column: 48, scope: !13499)
!13512 = !DILocation(line: 2138, column: 54, scope: !13499)
!13513 = !DILocalVariable(name: "sce1", scope: !13499, file: !1803, line: 2139, type: !1914)
!13514 = !DILocation(line: 2139, column: 27, scope: !13499)
!13515 = !DILocation(line: 2139, column: 35, scope: !13499)
!13516 = !DILocation(line: 2139, column: 40, scope: !13499)
!13517 = !DILocalVariable(name: "coef0", scope: !13499, file: !1803, line: 2140, type: !1031)
!13518 = !DILocation(line: 2140, column: 15, scope: !13499)
!13519 = !DILocation(line: 2140, column: 23, scope: !13499)
!13520 = !DILocation(line: 2140, column: 28, scope: !13499)
!13521 = !DILocation(line: 2140, column: 34, scope: !13499)
!13522 = !DILocalVariable(name: "coef1", scope: !13499, file: !1803, line: 2140, type: !1031)
!13523 = !DILocation(line: 2140, column: 43, scope: !13499)
!13524 = !DILocation(line: 2140, column: 51, scope: !13499)
!13525 = !DILocation(line: 2140, column: 56, scope: !13499)
!13526 = !DILocation(line: 2140, column: 62, scope: !13499)
!13527 = !DILocalVariable(name: "offsets", scope: !13499, file: !1803, line: 2141, type: !1943)
!13528 = !DILocation(line: 2141, column: 21, scope: !13499)
!13529 = !DILocation(line: 2141, column: 31, scope: !13499)
!13530 = !DILocation(line: 2141, column: 36, scope: !13499)
!13531 = !DILocalVariable(name: "g", scope: !13499, file: !1803, line: 2142, type: !1012)
!13532 = !DILocation(line: 2142, column: 9, scope: !13499)
!13533 = !DILocalVariable(name: "group", scope: !13499, file: !1803, line: 2142, type: !1012)
!13534 = !DILocation(line: 2142, column: 12, scope: !13499)
!13535 = !DILocalVariable(name: "i", scope: !13499, file: !1803, line: 2142, type: !1012)
!13536 = !DILocation(line: 2142, column: 19, scope: !13499)
!13537 = !DILocalVariable(name: "idx", scope: !13499, file: !1803, line: 2142, type: !1012)
!13538 = !DILocation(line: 2142, column: 22, scope: !13499)
!13539 = !DILocalVariable(name: "c", scope: !13499, file: !1803, line: 2143, type: !1012)
!13540 = !DILocation(line: 2143, column: 9, scope: !13499)
!13541 = !DILocalVariable(name: "scale", scope: !13499, file: !1803, line: 2144, type: !1017)
!13542 = !DILocation(line: 2144, column: 14, scope: !13499)
!13543 = !DILocation(line: 2145, column: 12, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13499, file: !1803, line: 2145, column: 5)
!13545 = !DILocation(line: 2145, column: 10, scope: !13544)
!13546 = !DILocation(line: 2145, column: 17, scope: !13547)
!13547 = !DILexicalBlockFile(scope: !13548, file: !1803, discriminator: 1)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !1803, line: 2145, column: 5)
!13549 = !DILocation(line: 2145, column: 21, scope: !13547)
!13550 = !DILocation(line: 2145, column: 26, scope: !13547)
!13551 = !DILocation(line: 2145, column: 19, scope: !13547)
!13552 = !DILocation(line: 2145, column: 5, scope: !13547)
!13553 = !DILocation(line: 2146, column: 16, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !1803, line: 2146, column: 9)
!13555 = distinct !DILexicalBlock(scope: !13548, file: !1803, line: 2145, column: 50)
!13556 = !DILocation(line: 2146, column: 14, scope: !13554)
!13557 = !DILocation(line: 2146, column: 21, scope: !13558)
!13558 = !DILexicalBlockFile(scope: !13559, file: !1803, discriminator: 1)
!13559 = distinct !DILexicalBlock(scope: !13554, file: !1803, line: 2146, column: 9)
!13560 = !DILocation(line: 2146, column: 25, scope: !13558)
!13561 = !DILocation(line: 2146, column: 30, scope: !13558)
!13562 = !DILocation(line: 2146, column: 23, scope: !13558)
!13563 = !DILocation(line: 2146, column: 9, scope: !13558)
!13564 = !DILocation(line: 2147, column: 33, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13566, file: !1803, line: 2147, column: 17)
!13566 = distinct !DILexicalBlock(scope: !13559, file: !1803, line: 2146, column: 40)
!13567 = !DILocation(line: 2147, column: 17, scope: !13565)
!13568 = !DILocation(line: 2147, column: 23, scope: !13565)
!13569 = !DILocation(line: 2147, column: 38, scope: !13565)
!13570 = !DILocation(line: 2147, column: 54, scope: !13565)
!13571 = !DILocation(line: 2148, column: 33, scope: !13565)
!13572 = !DILocation(line: 2148, column: 17, scope: !13565)
!13573 = !DILocation(line: 2148, column: 23, scope: !13565)
!13574 = !DILocation(line: 2148, column: 38, scope: !13565)
!13575 = !DILocation(line: 2147, column: 17, scope: !13576)
!13576 = !DILexicalBlockFile(scope: !13566, file: !1803, discriminator: 1)
!13577 = !DILocalVariable(name: "bt_run_end", scope: !13578, file: !1803, line: 2149, type: !1165)
!13578 = distinct !DILexicalBlock(scope: !13565, file: !1803, line: 2148, column: 56)
!13579 = !DILocation(line: 2149, column: 27, scope: !13578)
!13580 = !DILocation(line: 2149, column: 64, scope: !13578)
!13581 = !DILocation(line: 2149, column: 40, scope: !13578)
!13582 = !DILocation(line: 2149, column: 46, scope: !13578)
!13583 = !DILocation(line: 2150, column: 17, scope: !13578)
!13584 = !DILocation(line: 2150, column: 24, scope: !13585)
!13585 = !DILexicalBlockFile(scope: !13586, file: !1803, discriminator: 1)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !1803, line: 2150, column: 17)
!13587 = distinct !DILexicalBlock(scope: !13578, file: !1803, line: 2150, column: 17)
!13588 = !DILocation(line: 2150, column: 28, scope: !13585)
!13589 = !DILocation(line: 2150, column: 26, scope: !13585)
!13590 = !DILocation(line: 2150, column: 17, scope: !13585)
!13591 = !DILocation(line: 2151, column: 51, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13586, file: !1803, line: 2150, column: 52)
!13593 = !DILocation(line: 2151, column: 35, scope: !13592)
!13594 = !DILocation(line: 2151, column: 41, scope: !13592)
!13595 = !DILocation(line: 2151, column: 56, scope: !13592)
!13596 = !DILocation(line: 2151, column: 32, scope: !13592)
!13597 = !DILocation(line: 2151, column: 28, scope: !13592)
!13598 = !DILocation(line: 2151, column: 23, scope: !13592)
!13599 = !DILocation(line: 2152, column: 25, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13592, file: !1803, line: 2152, column: 25)
!13601 = !DILocation(line: 2152, column: 25, scope: !13592)
!13602 = !DILocation(line: 2153, column: 51, scope: !13600)
!13603 = !DILocation(line: 2153, column: 38, scope: !13600)
!13604 = !DILocation(line: 2153, column: 43, scope: !13600)
!13605 = !DILocation(line: 2153, column: 36, scope: !13600)
!13606 = !DILocation(line: 2153, column: 32, scope: !13600)
!13607 = !DILocation(line: 2153, column: 27, scope: !13600)
!13608 = !DILocation(line: 2153, column: 25, scope: !13600)
!13609 = !DILocation(line: 2154, column: 29, scope: !13592)
!13610 = !DILocation(line: 2154, column: 42, scope: !13592)
!13611 = !DILocation(line: 2154, column: 33, scope: !13592)
!13612 = !DILocation(line: 2154, column: 39, scope: !13592)
!13613 = !DILocation(line: 2154, column: 31, scope: !13592)
!13614 = !DILocation(line: 2154, column: 27, scope: !13592)
!13615 = !DILocation(line: 2155, column: 32, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13592, file: !1803, line: 2155, column: 21)
!13617 = !DILocation(line: 2155, column: 26, scope: !13616)
!13618 = !DILocation(line: 2155, column: 37, scope: !13619)
!13619 = !DILexicalBlockFile(scope: !13620, file: !1803, discriminator: 1)
!13620 = distinct !DILexicalBlock(scope: !13616, file: !1803, line: 2155, column: 21)
!13621 = !DILocation(line: 2155, column: 60, scope: !13619)
!13622 = !DILocation(line: 2155, column: 45, scope: !13619)
!13623 = !DILocation(line: 2155, column: 50, scope: !13619)
!13624 = !DILocation(line: 2155, column: 43, scope: !13619)
!13625 = !DILocation(line: 2155, column: 21, scope: !13619)
!13626 = !DILocation(line: 2163, column: 25, scope: !13620)
!13627 = !DILocation(line: 2163, column: 29, scope: !13620)
!13628 = !DILocation(line: 2163, column: 35, scope: !13620)
!13629 = !DILocation(line: 2163, column: 54, scope: !13620)
!13630 = !DILocation(line: 2163, column: 62, scope: !13620)
!13631 = !DILocation(line: 2163, column: 68, scope: !13620)
!13632 = !DILocation(line: 2163, column: 60, scope: !13620)
!13633 = !DILocation(line: 2163, column: 84, scope: !13620)
!13634 = !DILocation(line: 2163, column: 76, scope: !13620)
!13635 = !DILocation(line: 2163, column: 74, scope: !13620)
!13636 = !DILocation(line: 2164, column: 53, scope: !13620)
!13637 = !DILocation(line: 2164, column: 61, scope: !13620)
!13638 = !DILocation(line: 2164, column: 67, scope: !13620)
!13639 = !DILocation(line: 2164, column: 59, scope: !13620)
!13640 = !DILocation(line: 2164, column: 83, scope: !13620)
!13641 = !DILocation(line: 2164, column: 75, scope: !13620)
!13642 = !DILocation(line: 2164, column: 73, scope: !13620)
!13643 = !DILocation(line: 2165, column: 53, scope: !13620)
!13644 = !DILocation(line: 2166, column: 61, scope: !13620)
!13645 = !DILocation(line: 2166, column: 63, scope: !13620)
!13646 = !DILocation(line: 2166, column: 53, scope: !13620)
!13647 = !DILocation(line: 2166, column: 78, scope: !13620)
!13648 = !DILocation(line: 2166, column: 70, scope: !13620)
!13649 = !DILocation(line: 2166, column: 68, scope: !13620)
!13650 = !DILocation(line: 2155, column: 69, scope: !13651)
!13651 = !DILexicalBlockFile(scope: !13620, file: !1803, discriminator: 2)
!13652 = !DILocation(line: 2155, column: 21, scope: !13651)
!13653 = distinct !{!13653, !13654}
!13654 = !DILocation(line: 2155, column: 21, scope: !13592)
!13655 = !DILocation(line: 2168, column: 17, scope: !13592)
!13656 = !DILocation(line: 2150, column: 41, scope: !13657)
!13657 = !DILexicalBlockFile(scope: !13586, file: !1803, discriminator: 2)
!13658 = !DILocation(line: 2150, column: 48, scope: !13657)
!13659 = !DILocation(line: 2150, column: 17, scope: !13657)
!13660 = distinct !{!13660, !13583}
!13661 = !DILocation(line: 2169, column: 13, scope: !13578)
!13662 = !DILocalVariable(name: "bt_run_end", scope: !13663, file: !1803, line: 2170, type: !1012)
!13663 = distinct !DILexicalBlock(scope: !13565, file: !1803, line: 2169, column: 20)
!13664 = !DILocation(line: 2170, column: 21, scope: !13663)
!13665 = !DILocation(line: 2170, column: 58, scope: !13663)
!13666 = !DILocation(line: 2170, column: 34, scope: !13663)
!13667 = !DILocation(line: 2170, column: 40, scope: !13663)
!13668 = !DILocation(line: 2171, column: 24, scope: !13663)
!13669 = !DILocation(line: 2171, column: 37, scope: !13663)
!13670 = !DILocation(line: 2171, column: 35, scope: !13663)
!13671 = !DILocation(line: 2171, column: 21, scope: !13663)
!13672 = !DILocation(line: 2172, column: 21, scope: !13663)
!13673 = !DILocation(line: 2172, column: 19, scope: !13663)
!13674 = !DILocation(line: 2146, column: 9, scope: !13675)
!13675 = !DILexicalBlockFile(scope: !13559, file: !1803, discriminator: 2)
!13676 = distinct !{!13676, !13677}
!13677 = !DILocation(line: 2146, column: 9, scope: !13555)
!13678 = !DILocation(line: 2175, column: 33, scope: !13555)
!13679 = !DILocation(line: 2175, column: 18, scope: !13555)
!13680 = !DILocation(line: 2175, column: 23, scope: !13555)
!13681 = !DILocation(line: 2175, column: 36, scope: !13555)
!13682 = !DILocation(line: 2175, column: 15, scope: !13555)
!13683 = !DILocation(line: 2176, column: 33, scope: !13555)
!13684 = !DILocation(line: 2176, column: 18, scope: !13555)
!13685 = !DILocation(line: 2176, column: 23, scope: !13555)
!13686 = !DILocation(line: 2176, column: 36, scope: !13555)
!13687 = !DILocation(line: 2176, column: 15, scope: !13555)
!13688 = !DILocation(line: 2177, column: 5, scope: !13555)
!13689 = !DILocation(line: 2145, column: 46, scope: !13690)
!13690 = !DILexicalBlockFile(scope: !13548, file: !1803, discriminator: 2)
!13691 = !DILocation(line: 2145, column: 5, scope: !13690)
!13692 = distinct !{!13692, !13693}
!13693 = !DILocation(line: 2145, column: 5, scope: !13499)
!13694 = !DILocation(line: 2178, column: 1, scope: !13499)
!13695 = distinct !DISubprogram(name: "imdct_and_windowing_ld", scope: !1803, file: !1803, line: 2770, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13696 = !DILocalVariable(name: "ac", arg: 1, scope: !13695, file: !1803, line: 2770, type: !2065)
!13697 = !DILocation(line: 2770, column: 48, scope: !13695)
!13698 = !DILocalVariable(name: "sce", arg: 2, scope: !13695, file: !1803, line: 2770, type: !1914)
!13699 = !DILocation(line: 2770, column: 74, scope: !13695)
!13700 = !DILocalVariable(name: "ics", scope: !13695, file: !1803, line: 2772, type: !2649)
!13701 = !DILocation(line: 2772, column: 30, scope: !13695)
!13702 = !DILocation(line: 2772, column: 37, scope: !13695)
!13703 = !DILocation(line: 2772, column: 42, scope: !13695)
!13704 = !DILocalVariable(name: "in", scope: !13695, file: !1803, line: 2773, type: !1031)
!13705 = !DILocation(line: 2773, column: 15, scope: !13695)
!13706 = !DILocation(line: 2773, column: 20, scope: !13695)
!13707 = !DILocation(line: 2773, column: 25, scope: !13695)
!13708 = !DILocalVariable(name: "out", scope: !13695, file: !1803, line: 2774, type: !1031)
!13709 = !DILocation(line: 2774, column: 15, scope: !13695)
!13710 = !DILocation(line: 2774, column: 21, scope: !13695)
!13711 = !DILocation(line: 2774, column: 26, scope: !13695)
!13712 = !DILocalVariable(name: "saved", scope: !13695, file: !1803, line: 2775, type: !1031)
!13713 = !DILocation(line: 2775, column: 15, scope: !13695)
!13714 = !DILocation(line: 2775, column: 23, scope: !13695)
!13715 = !DILocation(line: 2775, column: 28, scope: !13695)
!13716 = !DILocalVariable(name: "buf", scope: !13695, file: !1803, line: 2776, type: !1031)
!13717 = !DILocation(line: 2776, column: 15, scope: !13695)
!13718 = !DILocation(line: 2776, column: 21, scope: !13695)
!13719 = !DILocation(line: 2776, column: 25, scope: !13695)
!13720 = !DILocation(line: 2782, column: 5, scope: !13695)
!13721 = !DILocation(line: 2782, column: 9, scope: !13695)
!13722 = !DILocation(line: 2782, column: 14, scope: !13695)
!13723 = !DILocation(line: 2782, column: 26, scope: !13695)
!13724 = !DILocation(line: 2782, column: 30, scope: !13695)
!13725 = !DILocation(line: 2782, column: 39, scope: !13695)
!13726 = !DILocation(line: 2782, column: 44, scope: !13695)
!13727 = !DILocation(line: 2790, column: 9, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13695, file: !1803, line: 2790, column: 9)
!13729 = !DILocation(line: 2790, column: 14, scope: !13728)
!13730 = !DILocation(line: 2790, column: 9, scope: !13695)
!13731 = !DILocation(line: 2792, column: 16, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13728, file: !1803, line: 2790, column: 32)
!13733 = !DILocation(line: 2792, column: 9, scope: !13732)
!13734 = !DILocation(line: 2792, column: 21, scope: !13732)
!13735 = !DILocation(line: 2793, column: 9, scope: !13732)
!13736 = !DILocation(line: 2793, column: 13, scope: !13732)
!13737 = !DILocation(line: 2793, column: 19, scope: !13732)
!13738 = !DILocation(line: 2793, column: 38, scope: !13732)
!13739 = !DILocation(line: 2793, column: 42, scope: !13732)
!13740 = !DILocation(line: 2793, column: 49, scope: !13732)
!13741 = !DILocation(line: 2793, column: 55, scope: !13732)
!13742 = !DILocation(line: 2793, column: 62, scope: !13732)
!13743 = !DILocation(line: 2794, column: 17, scope: !13732)
!13744 = !DILocation(line: 2794, column: 21, scope: !13732)
!13745 = !DILocation(line: 2794, column: 9, scope: !13732)
!13746 = !DILocation(line: 2794, column: 28, scope: !13732)
!13747 = !DILocation(line: 2794, column: 32, scope: !13732)
!13748 = !DILocation(line: 2795, column: 5, scope: !13732)
!13749 = !DILocation(line: 2796, column: 9, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13728, file: !1803, line: 2795, column: 12)
!13751 = !DILocation(line: 2796, column: 13, scope: !13750)
!13752 = !DILocation(line: 2796, column: 19, scope: !13750)
!13753 = !DILocation(line: 2796, column: 38, scope: !13750)
!13754 = !DILocation(line: 2796, column: 43, scope: !13750)
!13755 = !DILocation(line: 2796, column: 50, scope: !13750)
!13756 = !DILocation(line: 2800, column: 12, scope: !13695)
!13757 = !DILocation(line: 2800, column: 5, scope: !13695)
!13758 = !DILocation(line: 2800, column: 19, scope: !13695)
!13759 = !DILocation(line: 2800, column: 23, scope: !13695)
!13760 = !DILocation(line: 2801, column: 1, scope: !13695)
!13761 = distinct !DISubprogram(name: "imdct_and_windowing_eld", scope: !1803, file: !1803, line: 2803, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2804, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!13762 = !DILocalVariable(name: "ac", arg: 1, scope: !13761, file: !1803, line: 2803, type: !2065)
!13763 = !DILocation(line: 2803, column: 49, scope: !13761)
!13764 = !DILocalVariable(name: "sce", arg: 2, scope: !13761, file: !1803, line: 2803, type: !1914)
!13765 = !DILocation(line: 2803, column: 75, scope: !13761)
!13766 = !DILocalVariable(name: "in", scope: !13761, file: !1803, line: 2805, type: !1031)
!13767 = !DILocation(line: 2805, column: 15, scope: !13761)
!13768 = !DILocation(line: 2805, column: 20, scope: !13761)
!13769 = !DILocation(line: 2805, column: 25, scope: !13761)
!13770 = !DILocalVariable(name: "out", scope: !13761, file: !1803, line: 2806, type: !1031)
!13771 = !DILocation(line: 2806, column: 15, scope: !13761)
!13772 = !DILocation(line: 2806, column: 21, scope: !13761)
!13773 = !DILocation(line: 2806, column: 26, scope: !13761)
!13774 = !DILocalVariable(name: "saved", scope: !13761, file: !1803, line: 2807, type: !1031)
!13775 = !DILocation(line: 2807, column: 15, scope: !13761)
!13776 = !DILocation(line: 2807, column: 23, scope: !13761)
!13777 = !DILocation(line: 2807, column: 28, scope: !13761)
!13778 = !DILocalVariable(name: "buf", scope: !13761, file: !1803, line: 2808, type: !1031)
!13779 = !DILocation(line: 2808, column: 15, scope: !13761)
!13780 = !DILocation(line: 2808, column: 21, scope: !13761)
!13781 = !DILocation(line: 2808, column: 25, scope: !13761)
!13782 = !DILocalVariable(name: "i", scope: !13761, file: !1803, line: 2809, type: !1012)
!13783 = !DILocation(line: 2809, column: 9, scope: !13761)
!13784 = !DILocalVariable(name: "n", scope: !13761, file: !1803, line: 2810, type: !1165)
!13785 = !DILocation(line: 2810, column: 15, scope: !13761)
!13786 = !DILocation(line: 2810, column: 19, scope: !13761)
!13787 = !DILocation(line: 2810, column: 23, scope: !13761)
!13788 = !DILocation(line: 2810, column: 29, scope: !13761)
!13789 = !DILocation(line: 2810, column: 34, scope: !13761)
!13790 = !DILocalVariable(name: "n2", scope: !13761, file: !1803, line: 2811, type: !1165)
!13791 = !DILocation(line: 2811, column: 15, scope: !13761)
!13792 = !DILocation(line: 2811, column: 20, scope: !13761)
!13793 = !DILocation(line: 2811, column: 22, scope: !13761)
!13794 = !DILocalVariable(name: "n4", scope: !13761, file: !1803, line: 2812, type: !1165)
!13795 = !DILocation(line: 2812, column: 15, scope: !13761)
!13796 = !DILocation(line: 2812, column: 20, scope: !13761)
!13797 = !DILocation(line: 2812, column: 22, scope: !13761)
!13798 = !DILocalVariable(name: "window", scope: !13761, file: !1803, line: 2813, type: !1902)
!13799 = !DILocation(line: 2813, column: 27, scope: !13761)
!13800 = !DILocation(line: 2813, column: 36, scope: !13761)
!13801 = !DILocation(line: 2813, column: 38, scope: !13761)
!13802 = !DILocation(line: 2821, column: 12, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2821, column: 5)
!13804 = !DILocation(line: 2821, column: 10, scope: !13803)
!13805 = !DILocation(line: 2821, column: 17, scope: !13806)
!13806 = !DILexicalBlockFile(scope: !13807, file: !1803, discriminator: 1)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !1803, line: 2821, column: 5)
!13808 = !DILocation(line: 2821, column: 21, scope: !13806)
!13809 = !DILocation(line: 2821, column: 19, scope: !13806)
!13810 = !DILocation(line: 2821, column: 5, scope: !13806)
!13811 = !DILocalVariable(name: "temp", scope: !13812, file: !1803, line: 2822, type: !1017)
!13812 = distinct !DILexicalBlock(scope: !13807, file: !1803, line: 2821, column: 31)
!13813 = !DILocation(line: 2822, column: 18, scope: !13812)
!13814 = !DILocation(line: 2823, column: 19, scope: !13812)
!13815 = !DILocation(line: 2823, column: 16, scope: !13812)
!13816 = !DILocation(line: 2823, column: 14, scope: !13812)
!13817 = !DILocation(line: 2823, column: 37, scope: !13812)
!13818 = !DILocation(line: 2823, column: 39, scope: !13812)
!13819 = !DILocation(line: 2823, column: 45, scope: !13812)
!13820 = !DILocation(line: 2823, column: 43, scope: !13812)
!13821 = !DILocation(line: 2823, column: 34, scope: !13812)
!13822 = !DILocation(line: 2823, column: 33, scope: !13812)
!13823 = !DILocation(line: 2823, column: 27, scope: !13812)
!13824 = !DILocation(line: 2823, column: 24, scope: !13812)
!13825 = !DILocation(line: 2823, column: 31, scope: !13812)
!13826 = !DILocation(line: 2823, column: 65, scope: !13812)
!13827 = !DILocation(line: 2823, column: 52, scope: !13812)
!13828 = !DILocation(line: 2823, column: 54, scope: !13812)
!13829 = !DILocation(line: 2823, column: 60, scope: !13812)
!13830 = !DILocation(line: 2823, column: 58, scope: !13812)
!13831 = !DILocation(line: 2823, column: 49, scope: !13812)
!13832 = !DILocation(line: 2823, column: 63, scope: !13812)
!13833 = !DILocation(line: 2824, column: 20, scope: !13812)
!13834 = !DILocation(line: 2824, column: 22, scope: !13812)
!13835 = !DILocation(line: 2824, column: 17, scope: !13812)
!13836 = !DILocation(line: 2824, column: 16, scope: !13812)
!13837 = !DILocation(line: 2824, column: 14, scope: !13812)
!13838 = !DILocation(line: 2824, column: 43, scope: !13812)
!13839 = !DILocation(line: 2824, column: 45, scope: !13812)
!13840 = !DILocation(line: 2824, column: 51, scope: !13812)
!13841 = !DILocation(line: 2824, column: 49, scope: !13812)
!13842 = !DILocation(line: 2824, column: 40, scope: !13812)
!13843 = !DILocation(line: 2824, column: 31, scope: !13812)
!13844 = !DILocation(line: 2824, column: 33, scope: !13812)
!13845 = !DILocation(line: 2824, column: 28, scope: !13812)
!13846 = !DILocation(line: 2824, column: 38, scope: !13812)
!13847 = !DILocation(line: 2824, column: 71, scope: !13812)
!13848 = !DILocation(line: 2824, column: 58, scope: !13812)
!13849 = !DILocation(line: 2824, column: 60, scope: !13812)
!13850 = !DILocation(line: 2824, column: 66, scope: !13812)
!13851 = !DILocation(line: 2824, column: 64, scope: !13812)
!13852 = !DILocation(line: 2824, column: 55, scope: !13812)
!13853 = !DILocation(line: 2824, column: 69, scope: !13812)
!13854 = !DILocation(line: 2825, column: 5, scope: !13812)
!13855 = !DILocation(line: 2821, column: 26, scope: !13856)
!13856 = !DILexicalBlockFile(scope: !13807, file: !1803, discriminator: 2)
!13857 = !DILocation(line: 2821, column: 5, scope: !13856)
!13858 = distinct !{!13858, !13859}
!13859 = !DILocation(line: 2821, column: 5, scope: !13761)
!13860 = !DILocation(line: 2827, column: 9, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2827, column: 9)
!13862 = !DILocation(line: 2827, column: 11, scope: !13861)
!13863 = !DILocation(line: 2827, column: 9, scope: !13761)
!13864 = !DILocation(line: 2828, column: 9, scope: !13861)
!13865 = !DILocation(line: 2828, column: 13, scope: !13861)
!13866 = !DILocation(line: 2828, column: 22, scope: !13861)
!13867 = !DILocation(line: 2828, column: 33, scope: !13861)
!13868 = !DILocation(line: 2828, column: 37, scope: !13861)
!13869 = !DILocation(line: 2828, column: 46, scope: !13861)
!13870 = !DILocation(line: 2828, column: 51, scope: !13861)
!13871 = !DILocation(line: 2831, column: 9, scope: !13861)
!13872 = !DILocation(line: 2831, column: 13, scope: !13861)
!13873 = !DILocation(line: 2831, column: 18, scope: !13861)
!13874 = !DILocation(line: 2831, column: 30, scope: !13861)
!13875 = !DILocation(line: 2831, column: 34, scope: !13861)
!13876 = !DILocation(line: 2831, column: 43, scope: !13861)
!13877 = !DILocation(line: 2831, column: 48, scope: !13861)
!13878 = !DILocation(line: 2838, column: 12, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2838, column: 5)
!13880 = !DILocation(line: 2838, column: 10, scope: !13879)
!13881 = !DILocation(line: 2838, column: 17, scope: !13882)
!13882 = !DILexicalBlockFile(scope: !13883, file: !1803, discriminator: 1)
!13883 = distinct !DILexicalBlock(scope: !13879, file: !1803, line: 2838, column: 5)
!13884 = !DILocation(line: 2838, column: 21, scope: !13882)
!13885 = !DILocation(line: 2838, column: 19, scope: !13882)
!13886 = !DILocation(line: 2838, column: 5, scope: !13882)
!13887 = !DILocation(line: 2839, column: 23, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13883, file: !1803, line: 2838, column: 30)
!13889 = !DILocation(line: 2839, column: 19, scope: !13888)
!13890 = !DILocation(line: 2839, column: 18, scope: !13888)
!13891 = !DILocation(line: 2839, column: 13, scope: !13888)
!13892 = !DILocation(line: 2839, column: 9, scope: !13888)
!13893 = !DILocation(line: 2839, column: 16, scope: !13888)
!13894 = !DILocation(line: 2840, column: 5, scope: !13888)
!13895 = !DILocation(line: 2838, column: 25, scope: !13896)
!13896 = !DILexicalBlockFile(scope: !13883, file: !1803, discriminator: 2)
!13897 = !DILocation(line: 2838, column: 5, scope: !13896)
!13898 = distinct !{!13898, !13899}
!13899 = !DILocation(line: 2838, column: 5, scope: !13761)
!13900 = !DILocation(line: 2848, column: 14, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2848, column: 5)
!13902 = !DILocation(line: 2848, column: 12, scope: !13901)
!13903 = !DILocation(line: 2848, column: 10, scope: !13901)
!13904 = !DILocation(line: 2848, column: 18, scope: !13905)
!13905 = !DILexicalBlockFile(scope: !13906, file: !1803, discriminator: 1)
!13906 = distinct !DILexicalBlock(scope: !13901, file: !1803, line: 2848, column: 5)
!13907 = !DILocation(line: 2848, column: 22, scope: !13905)
!13908 = !DILocation(line: 2848, column: 20, scope: !13905)
!13909 = !DILocation(line: 2848, column: 5, scope: !13905)
!13910 = !DILocation(line: 2849, column: 30, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13906, file: !1803, line: 2848, column: 32)
!13912 = !DILocation(line: 2849, column: 33, scope: !13911)
!13913 = !DILocation(line: 2849, column: 39, scope: !13911)
!13914 = !DILocation(line: 2849, column: 37, scope: !13911)
!13915 = !DILocation(line: 2849, column: 25, scope: !13911)
!13916 = !DILocation(line: 2849, column: 53, scope: !13911)
!13917 = !DILocation(line: 2849, column: 57, scope: !13911)
!13918 = !DILocation(line: 2849, column: 55, scope: !13911)
!13919 = !DILocation(line: 2849, column: 46, scope: !13911)
!13920 = !DILocation(line: 2849, column: 43, scope: !13911)
!13921 = !DILocation(line: 2850, column: 32, scope: !13911)
!13922 = !DILocation(line: 2850, column: 36, scope: !13911)
!13923 = !DILocation(line: 2850, column: 34, scope: !13911)
!13924 = !DILocation(line: 2850, column: 25, scope: !13911)
!13925 = !DILocation(line: 2850, column: 51, scope: !13911)
!13926 = !DILocation(line: 2850, column: 55, scope: !13911)
!13927 = !DILocation(line: 2850, column: 53, scope: !13911)
!13928 = !DILocation(line: 2850, column: 59, scope: !13911)
!13929 = !DILocation(line: 2850, column: 57, scope: !13911)
!13930 = !DILocation(line: 2850, column: 44, scope: !13911)
!13931 = !DILocation(line: 2850, column: 41, scope: !13911)
!13932 = !DILocation(line: 2849, column: 63, scope: !13911)
!13933 = !DILocation(line: 2851, column: 32, scope: !13911)
!13934 = !DILocation(line: 2851, column: 36, scope: !13911)
!13935 = !DILocation(line: 2851, column: 34, scope: !13911)
!13936 = !DILocation(line: 2851, column: 39, scope: !13911)
!13937 = !DILocation(line: 2851, column: 45, scope: !13911)
!13938 = !DILocation(line: 2851, column: 43, scope: !13911)
!13939 = !DILocation(line: 2851, column: 26, scope: !13911)
!13940 = !DILocation(line: 2851, column: 25, scope: !13911)
!13941 = !DILocation(line: 2851, column: 59, scope: !13911)
!13942 = !DILocation(line: 2851, column: 65, scope: !13911)
!13943 = !DILocation(line: 2851, column: 64, scope: !13911)
!13944 = !DILocation(line: 2851, column: 61, scope: !13911)
!13945 = !DILocation(line: 2851, column: 69, scope: !13911)
!13946 = !DILocation(line: 2851, column: 67, scope: !13911)
!13947 = !DILocation(line: 2851, column: 52, scope: !13911)
!13948 = !DILocation(line: 2851, column: 49, scope: !13911)
!13949 = !DILocation(line: 2850, column: 65, scope: !13911)
!13950 = !DILocation(line: 2852, column: 35, scope: !13911)
!13951 = !DILocation(line: 2852, column: 34, scope: !13911)
!13952 = !DILocation(line: 2852, column: 39, scope: !13911)
!13953 = !DILocation(line: 2852, column: 37, scope: !13911)
!13954 = !DILocation(line: 2852, column: 44, scope: !13911)
!13955 = !DILocation(line: 2852, column: 42, scope: !13911)
!13956 = !DILocation(line: 2852, column: 26, scope: !13911)
!13957 = !DILocation(line: 2852, column: 25, scope: !13911)
!13958 = !DILocation(line: 2852, column: 58, scope: !13911)
!13959 = !DILocation(line: 2852, column: 64, scope: !13911)
!13960 = !DILocation(line: 2852, column: 63, scope: !13911)
!13961 = !DILocation(line: 2852, column: 60, scope: !13911)
!13962 = !DILocation(line: 2852, column: 68, scope: !13911)
!13963 = !DILocation(line: 2852, column: 66, scope: !13911)
!13964 = !DILocation(line: 2852, column: 51, scope: !13911)
!13965 = !DILocation(line: 2852, column: 48, scope: !13911)
!13966 = !DILocation(line: 2851, column: 75, scope: !13911)
!13967 = !DILocation(line: 2849, column: 13, scope: !13911)
!13968 = !DILocation(line: 2849, column: 17, scope: !13911)
!13969 = !DILocation(line: 2849, column: 15, scope: !13911)
!13970 = !DILocation(line: 2849, column: 9, scope: !13911)
!13971 = !DILocation(line: 2849, column: 21, scope: !13911)
!13972 = !DILocation(line: 2853, column: 5, scope: !13911)
!13973 = !DILocation(line: 2848, column: 28, scope: !13974)
!13974 = !DILexicalBlockFile(scope: !13906, file: !1803, discriminator: 2)
!13975 = !DILocation(line: 2848, column: 5, scope: !13974)
!13976 = distinct !{!13976, !13977}
!13977 = !DILocation(line: 2848, column: 5, scope: !13761)
!13978 = !DILocation(line: 2854, column: 12, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2854, column: 5)
!13980 = !DILocation(line: 2854, column: 10, scope: !13979)
!13981 = !DILocation(line: 2854, column: 17, scope: !13982)
!13982 = !DILexicalBlockFile(scope: !13983, file: !1803, discriminator: 1)
!13983 = distinct !DILexicalBlock(scope: !13979, file: !1803, line: 2854, column: 5)
!13984 = !DILocation(line: 2854, column: 21, scope: !13982)
!13985 = !DILocation(line: 2854, column: 19, scope: !13982)
!13986 = !DILocation(line: 2854, column: 5, scope: !13982)
!13987 = !DILocation(line: 2855, column: 30, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13983, file: !1803, line: 2854, column: 31)
!13989 = !DILocation(line: 2855, column: 25, scope: !13988)
!13990 = !DILocation(line: 2855, column: 44, scope: !13988)
!13991 = !DILocation(line: 2855, column: 48, scope: !13988)
!13992 = !DILocation(line: 2855, column: 46, scope: !13988)
!13993 = !DILocation(line: 2855, column: 53, scope: !13988)
!13994 = !DILocation(line: 2855, column: 51, scope: !13988)
!13995 = !DILocation(line: 2855, column: 37, scope: !13988)
!13996 = !DILocation(line: 2855, column: 34, scope: !13988)
!13997 = !DILocation(line: 2856, column: 33, scope: !13988)
!13998 = !DILocation(line: 2856, column: 35, scope: !13988)
!13999 = !DILocation(line: 2856, column: 41, scope: !13988)
!14000 = !DILocation(line: 2856, column: 39, scope: !13988)
!14001 = !DILocation(line: 2856, column: 26, scope: !13988)
!14002 = !DILocation(line: 2856, column: 25, scope: !13988)
!14003 = !DILocation(line: 2856, column: 55, scope: !13988)
!14004 = !DILocation(line: 2856, column: 59, scope: !13988)
!14005 = !DILocation(line: 2856, column: 57, scope: !13988)
!14006 = !DILocation(line: 2856, column: 64, scope: !13988)
!14007 = !DILocation(line: 2856, column: 62, scope: !13988)
!14008 = !DILocation(line: 2856, column: 68, scope: !13988)
!14009 = !DILocation(line: 2856, column: 66, scope: !13988)
!14010 = !DILocation(line: 2856, column: 48, scope: !13988)
!14011 = !DILocation(line: 2856, column: 45, scope: !13988)
!14012 = !DILocation(line: 2855, column: 59, scope: !13988)
!14013 = !DILocation(line: 2857, column: 33, scope: !13988)
!14014 = !DILocation(line: 2857, column: 37, scope: !13988)
!14015 = !DILocation(line: 2857, column: 35, scope: !13988)
!14016 = !DILocation(line: 2857, column: 26, scope: !13988)
!14017 = !DILocation(line: 2857, column: 25, scope: !13988)
!14018 = !DILocation(line: 2857, column: 51, scope: !13988)
!14019 = !DILocation(line: 2857, column: 55, scope: !13988)
!14020 = !DILocation(line: 2857, column: 53, scope: !13988)
!14021 = !DILocation(line: 2857, column: 62, scope: !13988)
!14022 = !DILocation(line: 2857, column: 61, scope: !13988)
!14023 = !DILocation(line: 2857, column: 58, scope: !13988)
!14024 = !DILocation(line: 2857, column: 66, scope: !13988)
!14025 = !DILocation(line: 2857, column: 64, scope: !13988)
!14026 = !DILocation(line: 2857, column: 44, scope: !13988)
!14027 = !DILocation(line: 2857, column: 41, scope: !13988)
!14028 = !DILocation(line: 2856, column: 74, scope: !13988)
!14029 = !DILocation(line: 2858, column: 33, scope: !13988)
!14030 = !DILocation(line: 2858, column: 32, scope: !13988)
!14031 = !DILocation(line: 2858, column: 37, scope: !13988)
!14032 = !DILocation(line: 2858, column: 35, scope: !13988)
!14033 = !DILocation(line: 2858, column: 39, scope: !13988)
!14034 = !DILocation(line: 2858, column: 45, scope: !13988)
!14035 = !DILocation(line: 2858, column: 43, scope: !13988)
!14036 = !DILocation(line: 2858, column: 25, scope: !13988)
!14037 = !DILocation(line: 2858, column: 59, scope: !13988)
!14038 = !DILocation(line: 2858, column: 63, scope: !13988)
!14039 = !DILocation(line: 2858, column: 61, scope: !13988)
!14040 = !DILocation(line: 2858, column: 70, scope: !13988)
!14041 = !DILocation(line: 2858, column: 69, scope: !13988)
!14042 = !DILocation(line: 2858, column: 66, scope: !13988)
!14043 = !DILocation(line: 2858, column: 74, scope: !13988)
!14044 = !DILocation(line: 2858, column: 72, scope: !13988)
!14045 = !DILocation(line: 2858, column: 52, scope: !13988)
!14046 = !DILocation(line: 2858, column: 49, scope: !13988)
!14047 = !DILocation(line: 2857, column: 72, scope: !13988)
!14048 = !DILocation(line: 2855, column: 13, scope: !13988)
!14049 = !DILocation(line: 2855, column: 18, scope: !13988)
!14050 = !DILocation(line: 2855, column: 16, scope: !13988)
!14051 = !DILocation(line: 2855, column: 9, scope: !13988)
!14052 = !DILocation(line: 2855, column: 21, scope: !13988)
!14053 = !DILocation(line: 2859, column: 5, scope: !13988)
!14054 = !DILocation(line: 2854, column: 27, scope: !14055)
!14055 = !DILexicalBlockFile(scope: !13983, file: !1803, discriminator: 2)
!14056 = !DILocation(line: 2854, column: 5, scope: !14055)
!14057 = distinct !{!14057, !14058}
!14058 = !DILocation(line: 2854, column: 5, scope: !13761)
!14059 = !DILocation(line: 2860, column: 12, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !13761, file: !1803, line: 2860, column: 5)
!14061 = !DILocation(line: 2860, column: 10, scope: !14060)
!14062 = !DILocation(line: 2860, column: 17, scope: !14063)
!14063 = !DILexicalBlockFile(scope: !14064, file: !1803, discriminator: 1)
!14064 = distinct !DILexicalBlock(scope: !14060, file: !1803, line: 2860, column: 5)
!14065 = !DILocation(line: 2860, column: 21, scope: !14063)
!14066 = !DILocation(line: 2860, column: 19, scope: !14063)
!14067 = !DILocation(line: 2860, column: 5, scope: !14063)
!14068 = !DILocation(line: 2861, column: 35, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14064, file: !1803, line: 2860, column: 31)
!14070 = !DILocation(line: 2861, column: 39, scope: !14069)
!14071 = !DILocation(line: 2861, column: 37, scope: !14069)
!14072 = !DILocation(line: 2861, column: 30, scope: !14069)
!14073 = !DILocation(line: 2861, column: 54, scope: !14069)
!14074 = !DILocation(line: 2861, column: 58, scope: !14069)
!14075 = !DILocation(line: 2861, column: 56, scope: !14069)
!14076 = !DILocation(line: 2861, column: 62, scope: !14069)
!14077 = !DILocation(line: 2861, column: 60, scope: !14069)
!14078 = !DILocation(line: 2861, column: 47, scope: !14069)
!14079 = !DILocation(line: 2861, column: 44, scope: !14069)
!14080 = !DILocation(line: 2862, column: 37, scope: !14069)
!14081 = !DILocation(line: 2862, column: 40, scope: !14069)
!14082 = !DILocation(line: 2862, column: 46, scope: !14069)
!14083 = !DILocation(line: 2862, column: 44, scope: !14069)
!14084 = !DILocation(line: 2862, column: 31, scope: !14069)
!14085 = !DILocation(line: 2862, column: 30, scope: !14069)
!14086 = !DILocation(line: 2862, column: 60, scope: !14069)
!14087 = !DILocation(line: 2862, column: 66, scope: !14069)
!14088 = !DILocation(line: 2862, column: 65, scope: !14069)
!14089 = !DILocation(line: 2862, column: 62, scope: !14069)
!14090 = !DILocation(line: 2862, column: 70, scope: !14069)
!14091 = !DILocation(line: 2862, column: 68, scope: !14069)
!14092 = !DILocation(line: 2862, column: 53, scope: !14069)
!14093 = !DILocation(line: 2862, column: 50, scope: !14069)
!14094 = !DILocation(line: 2861, column: 68, scope: !14069)
!14095 = !DILocation(line: 2863, column: 37, scope: !14069)
!14096 = !DILocation(line: 2863, column: 41, scope: !14069)
!14097 = !DILocation(line: 2863, column: 39, scope: !14069)
!14098 = !DILocation(line: 2863, column: 46, scope: !14069)
!14099 = !DILocation(line: 2863, column: 44, scope: !14069)
!14100 = !DILocation(line: 2863, column: 31, scope: !14069)
!14101 = !DILocation(line: 2863, column: 30, scope: !14069)
!14102 = !DILocation(line: 2863, column: 60, scope: !14069)
!14103 = !DILocation(line: 2863, column: 66, scope: !14069)
!14104 = !DILocation(line: 2863, column: 65, scope: !14069)
!14105 = !DILocation(line: 2863, column: 62, scope: !14069)
!14106 = !DILocation(line: 2863, column: 70, scope: !14069)
!14107 = !DILocation(line: 2863, column: 68, scope: !14069)
!14108 = !DILocation(line: 2863, column: 53, scope: !14069)
!14109 = !DILocation(line: 2863, column: 50, scope: !14069)
!14110 = !DILocation(line: 2862, column: 76, scope: !14069)
!14111 = !DILocation(line: 2861, column: 13, scope: !14069)
!14112 = !DILocation(line: 2861, column: 18, scope: !14069)
!14113 = !DILocation(line: 2861, column: 16, scope: !14069)
!14114 = !DILocation(line: 2861, column: 23, scope: !14069)
!14115 = !DILocation(line: 2861, column: 21, scope: !14069)
!14116 = !DILocation(line: 2861, column: 9, scope: !14069)
!14117 = !DILocation(line: 2861, column: 26, scope: !14069)
!14118 = !DILocation(line: 2864, column: 5, scope: !14069)
!14119 = !DILocation(line: 2860, column: 27, scope: !14120)
!14120 = !DILexicalBlockFile(scope: !14064, file: !1803, discriminator: 2)
!14121 = !DILocation(line: 2860, column: 5, scope: !14120)
!14122 = distinct !{!14122, !14123}
!14123 = !DILocation(line: 2860, column: 5, scope: !13761)
!14124 = !DILocation(line: 2867, column: 13, scope: !13761)
!14125 = !DILocation(line: 2867, column: 21, scope: !13761)
!14126 = !DILocation(line: 2867, column: 19, scope: !13761)
!14127 = !DILocation(line: 2867, column: 5, scope: !13761)
!14128 = !DILocation(line: 2867, column: 24, scope: !13761)
!14129 = !DILocation(line: 2867, column: 35, scope: !13761)
!14130 = !DILocation(line: 2867, column: 33, scope: !13761)
!14131 = !DILocation(line: 2867, column: 31, scope: !13761)
!14132 = !DILocation(line: 2867, column: 37, scope: !13761)
!14133 = !DILocation(line: 2868, column: 13, scope: !13761)
!14134 = !DILocation(line: 2868, column: 5, scope: !13761)
!14135 = !DILocation(line: 2868, column: 20, scope: !13761)
!14136 = !DILocation(line: 2868, column: 25, scope: !13761)
!14137 = !DILocation(line: 2868, column: 27, scope: !13761)
!14138 = !DILocation(line: 2869, column: 1, scope: !13761)
!14139 = distinct !DISubprogram(name: "imdct_and_windowing_960", scope: !1803, file: !1803, line: 2707, type: !2641, isLocal: true, isDefinition: true, scopeLine: 2708, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14140 = !DILocalVariable(name: "ac", arg: 1, scope: !14139, file: !1803, line: 2707, type: !2065)
!14141 = !DILocation(line: 2707, column: 49, scope: !14139)
!14142 = !DILocalVariable(name: "sce", arg: 2, scope: !14139, file: !1803, line: 2707, type: !1914)
!14143 = !DILocation(line: 2707, column: 75, scope: !14139)
!14144 = !DILocalVariable(name: "ics", scope: !14139, file: !1803, line: 2710, type: !2649)
!14145 = !DILocation(line: 2710, column: 30, scope: !14139)
!14146 = !DILocation(line: 2710, column: 37, scope: !14139)
!14147 = !DILocation(line: 2710, column: 42, scope: !14139)
!14148 = !DILocalVariable(name: "in", scope: !14139, file: !1803, line: 2711, type: !1031)
!14149 = !DILocation(line: 2711, column: 15, scope: !14139)
!14150 = !DILocation(line: 2711, column: 20, scope: !14139)
!14151 = !DILocation(line: 2711, column: 25, scope: !14139)
!14152 = !DILocalVariable(name: "out", scope: !14139, file: !1803, line: 2712, type: !1031)
!14153 = !DILocation(line: 2712, column: 15, scope: !14139)
!14154 = !DILocation(line: 2712, column: 21, scope: !14139)
!14155 = !DILocation(line: 2712, column: 26, scope: !14139)
!14156 = !DILocalVariable(name: "saved", scope: !14139, file: !1803, line: 2713, type: !1031)
!14157 = !DILocation(line: 2713, column: 15, scope: !14139)
!14158 = !DILocation(line: 2713, column: 23, scope: !14139)
!14159 = !DILocation(line: 2713, column: 28, scope: !14139)
!14160 = !DILocalVariable(name: "swindow", scope: !14139, file: !1803, line: 2714, type: !1903)
!14161 = !DILocation(line: 2714, column: 21, scope: !14139)
!14162 = !DILocation(line: 2714, column: 31, scope: !14139)
!14163 = !DILocation(line: 2714, column: 36, scope: !14139)
!14164 = !DILocalVariable(name: "lwindow_prev", scope: !14139, file: !1803, line: 2715, type: !1903)
!14165 = !DILocation(line: 2715, column: 21, scope: !14139)
!14166 = !DILocation(line: 2715, column: 36, scope: !14139)
!14167 = !DILocation(line: 2715, column: 41, scope: !14139)
!14168 = !DILocalVariable(name: "swindow_prev", scope: !14139, file: !1803, line: 2716, type: !1903)
!14169 = !DILocation(line: 2716, column: 21, scope: !14139)
!14170 = !DILocation(line: 2716, column: 36, scope: !14139)
!14171 = !DILocation(line: 2716, column: 41, scope: !14139)
!14172 = !DILocalVariable(name: "buf", scope: !14139, file: !1803, line: 2717, type: !1031)
!14173 = !DILocation(line: 2717, column: 15, scope: !14139)
!14174 = !DILocation(line: 2717, column: 21, scope: !14139)
!14175 = !DILocation(line: 2717, column: 25, scope: !14139)
!14176 = !DILocalVariable(name: "temp", scope: !14139, file: !1803, line: 2718, type: !1031)
!14177 = !DILocation(line: 2718, column: 15, scope: !14139)
!14178 = !DILocation(line: 2718, column: 22, scope: !14139)
!14179 = !DILocation(line: 2718, column: 26, scope: !14139)
!14180 = !DILocalVariable(name: "i", scope: !14139, file: !1803, line: 2719, type: !1012)
!14181 = !DILocation(line: 2719, column: 9, scope: !14139)
!14182 = !DILocation(line: 2722, column: 9, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14139, file: !1803, line: 2722, column: 9)
!14184 = !DILocation(line: 2722, column: 14, scope: !14183)
!14185 = !DILocation(line: 2722, column: 33, scope: !14183)
!14186 = !DILocation(line: 2722, column: 9, scope: !14139)
!14187 = !DILocation(line: 2723, column: 16, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14189, file: !1803, line: 2723, column: 9)
!14189 = distinct !DILexicalBlock(scope: !14183, file: !1803, line: 2722, column: 58)
!14190 = !DILocation(line: 2723, column: 14, scope: !14188)
!14191 = !DILocation(line: 2723, column: 21, scope: !14192)
!14192 = !DILexicalBlockFile(scope: !14193, file: !1803, discriminator: 1)
!14193 = distinct !DILexicalBlock(scope: !14188, file: !1803, line: 2723, column: 9)
!14194 = !DILocation(line: 2723, column: 23, scope: !14192)
!14195 = !DILocation(line: 2723, column: 9, scope: !14192)
!14196 = !DILocation(line: 2724, column: 13, scope: !14193)
!14197 = !DILocation(line: 2724, column: 17, scope: !14193)
!14198 = !DILocation(line: 2724, column: 26, scope: !14193)
!14199 = !DILocation(line: 2724, column: 37, scope: !14193)
!14200 = !DILocation(line: 2724, column: 41, scope: !14193)
!14201 = !DILocation(line: 2724, column: 50, scope: !14193)
!14202 = !DILocation(line: 2724, column: 56, scope: !14193)
!14203 = !DILocation(line: 2724, column: 58, scope: !14193)
!14204 = !DILocation(line: 2724, column: 54, scope: !14193)
!14205 = !DILocation(line: 2724, column: 65, scope: !14193)
!14206 = !DILocation(line: 2724, column: 70, scope: !14193)
!14207 = !DILocation(line: 2724, column: 72, scope: !14193)
!14208 = !DILocation(line: 2724, column: 68, scope: !14193)
!14209 = !DILocation(line: 2723, column: 29, scope: !14210)
!14210 = !DILexicalBlockFile(scope: !14193, file: !1803, discriminator: 2)
!14211 = !DILocation(line: 2723, column: 9, scope: !14210)
!14212 = distinct !{!14212, !14213}
!14213 = !DILocation(line: 2723, column: 9, scope: !14189)
!14214 = !DILocation(line: 2725, column: 5, scope: !14189)
!14215 = !DILocation(line: 2726, column: 9, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14183, file: !1803, line: 2725, column: 12)
!14217 = !DILocation(line: 2726, column: 13, scope: !14216)
!14218 = !DILocation(line: 2726, column: 22, scope: !14216)
!14219 = !DILocation(line: 2726, column: 33, scope: !14216)
!14220 = !DILocation(line: 2726, column: 37, scope: !14216)
!14221 = !DILocation(line: 2726, column: 46, scope: !14216)
!14222 = !DILocation(line: 2726, column: 51, scope: !14216)
!14223 = !DILocation(line: 2736, column: 10, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14139, file: !1803, line: 2736, column: 9)
!14225 = !DILocation(line: 2736, column: 15, scope: !14224)
!14226 = !DILocation(line: 2736, column: 34, scope: !14224)
!14227 = !DILocation(line: 2736, column: 56, scope: !14224)
!14228 = !DILocation(line: 2736, column: 59, scope: !14229)
!14229 = !DILexicalBlockFile(scope: !14224, file: !1803, discriminator: 1)
!14230 = !DILocation(line: 2736, column: 64, scope: !14229)
!14231 = !DILocation(line: 2736, column: 83, scope: !14229)
!14232 = !DILocation(line: 2736, column: 106, scope: !14229)
!14233 = !DILocation(line: 2737, column: 10, scope: !14224)
!14234 = !DILocation(line: 2737, column: 15, scope: !14224)
!14235 = !DILocation(line: 2737, column: 34, scope: !14224)
!14236 = !DILocation(line: 2737, column: 56, scope: !14224)
!14237 = !DILocation(line: 2737, column: 59, scope: !14229)
!14238 = !DILocation(line: 2737, column: 64, scope: !14229)
!14239 = !DILocation(line: 2737, column: 83, scope: !14229)
!14240 = !DILocation(line: 2736, column: 9, scope: !14241)
!14241 = !DILexicalBlockFile(scope: !14139, file: !1803, discriminator: 2)
!14242 = !DILocation(line: 2738, column: 9, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14224, file: !1803, line: 2737, column: 108)
!14244 = !DILocation(line: 2738, column: 13, scope: !14243)
!14245 = !DILocation(line: 2738, column: 19, scope: !14243)
!14246 = !DILocation(line: 2738, column: 39, scope: !14243)
!14247 = !DILocation(line: 2738, column: 44, scope: !14243)
!14248 = !DILocation(line: 2738, column: 51, scope: !14243)
!14249 = !DILocation(line: 2738, column: 56, scope: !14243)
!14250 = !DILocation(line: 2739, column: 5, scope: !14243)
!14251 = !DILocation(line: 2740, column: 17, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14224, file: !1803, line: 2739, column: 12)
!14253 = !DILocation(line: 2740, column: 9, scope: !14252)
!14254 = !DILocation(line: 2740, column: 22, scope: !14252)
!14255 = !DILocation(line: 2742, column: 13, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14252, file: !1803, line: 2742, column: 13)
!14257 = !DILocation(line: 2742, column: 18, scope: !14256)
!14258 = !DILocation(line: 2742, column: 37, scope: !14256)
!14259 = !DILocation(line: 2742, column: 13, scope: !14252)
!14260 = !DILocation(line: 2743, column: 13, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14256, file: !1803, line: 2742, column: 62)
!14262 = !DILocation(line: 2743, column: 17, scope: !14261)
!14263 = !DILocation(line: 2743, column: 23, scope: !14261)
!14264 = !DILocation(line: 2743, column: 42, scope: !14261)
!14265 = !DILocation(line: 2743, column: 46, scope: !14261)
!14266 = !DILocation(line: 2743, column: 52, scope: !14261)
!14267 = !DILocation(line: 2743, column: 61, scope: !14261)
!14268 = !DILocation(line: 2743, column: 67, scope: !14261)
!14269 = !DILocation(line: 2743, column: 74, scope: !14261)
!14270 = !DILocation(line: 2743, column: 78, scope: !14261)
!14271 = !DILocation(line: 2743, column: 87, scope: !14261)
!14272 = !DILocation(line: 2744, column: 13, scope: !14261)
!14273 = !DILocation(line: 2744, column: 17, scope: !14261)
!14274 = !DILocation(line: 2744, column: 23, scope: !14261)
!14275 = !DILocation(line: 2744, column: 42, scope: !14261)
!14276 = !DILocation(line: 2744, column: 46, scope: !14261)
!14277 = !DILocation(line: 2744, column: 52, scope: !14261)
!14278 = !DILocation(line: 2744, column: 61, scope: !14261)
!14279 = !DILocation(line: 2744, column: 65, scope: !14261)
!14280 = !DILocation(line: 2744, column: 73, scope: !14261)
!14281 = !DILocation(line: 2744, column: 79, scope: !14261)
!14282 = !DILocation(line: 2744, column: 83, scope: !14261)
!14283 = !DILocation(line: 2744, column: 92, scope: !14261)
!14284 = !DILocation(line: 2745, column: 13, scope: !14261)
!14285 = !DILocation(line: 2745, column: 17, scope: !14261)
!14286 = !DILocation(line: 2745, column: 23, scope: !14261)
!14287 = !DILocation(line: 2745, column: 42, scope: !14261)
!14288 = !DILocation(line: 2745, column: 46, scope: !14261)
!14289 = !DILocation(line: 2745, column: 52, scope: !14261)
!14290 = !DILocation(line: 2745, column: 61, scope: !14261)
!14291 = !DILocation(line: 2745, column: 65, scope: !14261)
!14292 = !DILocation(line: 2745, column: 73, scope: !14261)
!14293 = !DILocation(line: 2745, column: 79, scope: !14261)
!14294 = !DILocation(line: 2745, column: 83, scope: !14261)
!14295 = !DILocation(line: 2745, column: 92, scope: !14261)
!14296 = !DILocation(line: 2746, column: 13, scope: !14261)
!14297 = !DILocation(line: 2746, column: 17, scope: !14261)
!14298 = !DILocation(line: 2746, column: 23, scope: !14261)
!14299 = !DILocation(line: 2746, column: 42, scope: !14261)
!14300 = !DILocation(line: 2746, column: 46, scope: !14261)
!14301 = !DILocation(line: 2746, column: 52, scope: !14261)
!14302 = !DILocation(line: 2746, column: 61, scope: !14261)
!14303 = !DILocation(line: 2746, column: 65, scope: !14261)
!14304 = !DILocation(line: 2746, column: 73, scope: !14261)
!14305 = !DILocation(line: 2746, column: 79, scope: !14261)
!14306 = !DILocation(line: 2746, column: 83, scope: !14261)
!14307 = !DILocation(line: 2746, column: 92, scope: !14261)
!14308 = !DILocation(line: 2747, column: 13, scope: !14261)
!14309 = !DILocation(line: 2747, column: 17, scope: !14261)
!14310 = !DILocation(line: 2747, column: 23, scope: !14261)
!14311 = !DILocation(line: 2747, column: 42, scope: !14261)
!14312 = !DILocation(line: 2747, column: 48, scope: !14261)
!14313 = !DILocation(line: 2747, column: 52, scope: !14261)
!14314 = !DILocation(line: 2747, column: 60, scope: !14261)
!14315 = !DILocation(line: 2747, column: 66, scope: !14261)
!14316 = !DILocation(line: 2747, column: 70, scope: !14261)
!14317 = !DILocation(line: 2747, column: 79, scope: !14261)
!14318 = !DILocation(line: 2748, column: 21, scope: !14261)
!14319 = !DILocation(line: 2748, column: 25, scope: !14261)
!14320 = !DILocation(line: 2748, column: 31, scope: !14261)
!14321 = !DILocation(line: 2748, column: 13, scope: !14261)
!14322 = !DILocation(line: 2748, column: 40, scope: !14261)
!14323 = !DILocation(line: 2749, column: 9, scope: !14261)
!14324 = !DILocation(line: 2750, column: 13, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14256, file: !1803, line: 2749, column: 16)
!14326 = !DILocation(line: 2750, column: 17, scope: !14325)
!14327 = !DILocation(line: 2750, column: 23, scope: !14325)
!14328 = !DILocation(line: 2750, column: 42, scope: !14325)
!14329 = !DILocation(line: 2750, column: 46, scope: !14325)
!14330 = !DILocation(line: 2750, column: 53, scope: !14325)
!14331 = !DILocation(line: 2750, column: 59, scope: !14325)
!14332 = !DILocation(line: 2750, column: 66, scope: !14325)
!14333 = !DILocation(line: 2750, column: 71, scope: !14325)
!14334 = !DILocation(line: 2751, column: 21, scope: !14325)
!14335 = !DILocation(line: 2751, column: 25, scope: !14325)
!14336 = !DILocation(line: 2751, column: 13, scope: !14325)
!14337 = !DILocation(line: 2751, column: 32, scope: !14325)
!14338 = !DILocation(line: 2751, column: 36, scope: !14325)
!14339 = !DILocation(line: 2756, column: 9, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14139, file: !1803, line: 2756, column: 9)
!14341 = !DILocation(line: 2756, column: 14, scope: !14340)
!14342 = !DILocation(line: 2756, column: 33, scope: !14340)
!14343 = !DILocation(line: 2756, column: 9, scope: !14139)
!14344 = !DILocation(line: 2757, column: 17, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14340, file: !1803, line: 2756, column: 58)
!14346 = !DILocation(line: 2757, column: 9, scope: !14345)
!14347 = !DILocation(line: 2757, column: 24, scope: !14345)
!14348 = !DILocation(line: 2757, column: 29, scope: !14345)
!14349 = !DILocation(line: 2758, column: 9, scope: !14345)
!14350 = !DILocation(line: 2758, column: 13, scope: !14345)
!14351 = !DILocation(line: 2758, column: 19, scope: !14345)
!14352 = !DILocation(line: 2758, column: 38, scope: !14345)
!14353 = !DILocation(line: 2758, column: 44, scope: !14345)
!14354 = !DILocation(line: 2758, column: 50, scope: !14345)
!14355 = !DILocation(line: 2758, column: 54, scope: !14345)
!14356 = !DILocation(line: 2758, column: 62, scope: !14345)
!14357 = !DILocation(line: 2758, column: 68, scope: !14345)
!14358 = !DILocation(line: 2758, column: 72, scope: !14345)
!14359 = !DILocation(line: 2758, column: 81, scope: !14345)
!14360 = !DILocation(line: 2759, column: 9, scope: !14345)
!14361 = !DILocation(line: 2759, column: 13, scope: !14345)
!14362 = !DILocation(line: 2759, column: 19, scope: !14345)
!14363 = !DILocation(line: 2759, column: 38, scope: !14345)
!14364 = !DILocation(line: 2759, column: 44, scope: !14345)
!14365 = !DILocation(line: 2759, column: 51, scope: !14345)
!14366 = !DILocation(line: 2759, column: 55, scope: !14345)
!14367 = !DILocation(line: 2759, column: 63, scope: !14345)
!14368 = !DILocation(line: 2759, column: 69, scope: !14345)
!14369 = !DILocation(line: 2759, column: 73, scope: !14345)
!14370 = !DILocation(line: 2759, column: 82, scope: !14345)
!14371 = !DILocation(line: 2760, column: 9, scope: !14345)
!14372 = !DILocation(line: 2760, column: 13, scope: !14345)
!14373 = !DILocation(line: 2760, column: 19, scope: !14345)
!14374 = !DILocation(line: 2760, column: 38, scope: !14345)
!14375 = !DILocation(line: 2760, column: 44, scope: !14345)
!14376 = !DILocation(line: 2760, column: 51, scope: !14345)
!14377 = !DILocation(line: 2760, column: 55, scope: !14345)
!14378 = !DILocation(line: 2760, column: 63, scope: !14345)
!14379 = !DILocation(line: 2760, column: 69, scope: !14345)
!14380 = !DILocation(line: 2760, column: 73, scope: !14345)
!14381 = !DILocation(line: 2760, column: 82, scope: !14345)
!14382 = !DILocation(line: 2761, column: 17, scope: !14345)
!14383 = !DILocation(line: 2761, column: 23, scope: !14345)
!14384 = !DILocation(line: 2761, column: 9, scope: !14345)
!14385 = !DILocation(line: 2761, column: 30, scope: !14345)
!14386 = !DILocation(line: 2761, column: 34, scope: !14345)
!14387 = !DILocation(line: 2761, column: 42, scope: !14345)
!14388 = !DILocation(line: 2762, column: 5, scope: !14345)
!14389 = !DILocation(line: 2762, column: 16, scope: !14390)
!14390 = !DILexicalBlockFile(scope: !14391, file: !1803, discriminator: 1)
!14391 = distinct !DILexicalBlock(scope: !14340, file: !1803, line: 2762, column: 16)
!14392 = !DILocation(line: 2762, column: 21, scope: !14390)
!14393 = !DILocation(line: 2762, column: 40, scope: !14390)
!14394 = !DILocation(line: 2763, column: 17, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14391, file: !1803, line: 2762, column: 64)
!14396 = !DILocation(line: 2763, column: 9, scope: !14395)
!14397 = !DILocation(line: 2763, column: 24, scope: !14395)
!14398 = !DILocation(line: 2763, column: 28, scope: !14395)
!14399 = !DILocation(line: 2764, column: 17, scope: !14395)
!14400 = !DILocation(line: 2764, column: 23, scope: !14395)
!14401 = !DILocation(line: 2764, column: 9, scope: !14395)
!14402 = !DILocation(line: 2764, column: 30, scope: !14395)
!14403 = !DILocation(line: 2764, column: 34, scope: !14395)
!14404 = !DILocation(line: 2764, column: 42, scope: !14395)
!14405 = !DILocation(line: 2765, column: 5, scope: !14395)
!14406 = !DILocation(line: 2766, column: 17, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14391, file: !1803, line: 2765, column: 12)
!14408 = !DILocation(line: 2766, column: 9, scope: !14407)
!14409 = !DILocation(line: 2766, column: 24, scope: !14407)
!14410 = !DILocation(line: 2766, column: 28, scope: !14407)
!14411 = !DILocation(line: 2769, column: 1, scope: !14139)
!14412 = distinct !DISubprogram(name: "apply_channel_coupling", scope: !1803, file: !1803, line: 2876, type: !14413, isLocal: true, isDefinition: true, scopeLine: 2880, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{null, !2065, !2095, !930, !1012, !925, !14415}
!14415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14416, size: 64, align: 64)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{null, !2065, !1914, !2095, !1012}
!14418 = !DILocalVariable(name: "ac", arg: 1, scope: !14412, file: !1803, line: 2876, type: !2065)
!14419 = !DILocation(line: 2876, column: 48, scope: !14412)
!14420 = !DILocalVariable(name: "cc", arg: 2, scope: !14412, file: !1803, line: 2876, type: !2095)
!14421 = !DILocation(line: 2876, column: 68, scope: !14412)
!14422 = !DILocalVariable(name: "type", arg: 3, scope: !14412, file: !1803, line: 2877, type: !930)
!14423 = !DILocation(line: 2877, column: 58, scope: !14412)
!14424 = !DILocalVariable(name: "elem_id", arg: 4, scope: !14412, file: !1803, line: 2877, type: !1012)
!14425 = !DILocation(line: 2877, column: 68, scope: !14412)
!14426 = !DILocalVariable(name: "coupling_point", arg: 5, scope: !14412, file: !1803, line: 2878, type: !925)
!14427 = !DILocation(line: 2878, column: 55, scope: !14412)
!14428 = !DILocalVariable(name: "apply_coupling_method", arg: 6, scope: !14412, file: !1803, line: 2879, type: !14415)
!14429 = !DILocation(line: 2879, column: 43, scope: !14412)
!14430 = !DILocalVariable(name: "i", scope: !14412, file: !1803, line: 2881, type: !1012)
!14431 = !DILocation(line: 2881, column: 9, scope: !14412)
!14432 = !DILocalVariable(name: "c", scope: !14412, file: !1803, line: 2881, type: !1012)
!14433 = !DILocation(line: 2881, column: 12, scope: !14412)
!14434 = !DILocation(line: 2883, column: 12, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14412, file: !1803, line: 2883, column: 5)
!14436 = !DILocation(line: 2883, column: 10, scope: !14435)
!14437 = !DILocation(line: 2883, column: 17, scope: !14438)
!14438 = !DILexicalBlockFile(scope: !14439, file: !1803, discriminator: 1)
!14439 = distinct !DILexicalBlock(scope: !14435, file: !1803, line: 2883, column: 5)
!14440 = !DILocation(line: 2883, column: 19, scope: !14438)
!14441 = !DILocation(line: 2883, column: 5, scope: !14438)
!14442 = !DILocalVariable(name: "cce", scope: !14443, file: !1803, line: 2884, type: !2095)
!14443 = distinct !DILexicalBlock(scope: !14439, file: !1803, line: 2883, column: 30)
!14444 = !DILocation(line: 2884, column: 25, scope: !14443)
!14445 = !DILocation(line: 2884, column: 49, scope: !14443)
!14446 = !DILocation(line: 2884, column: 31, scope: !14443)
!14447 = !DILocation(line: 2884, column: 35, scope: !14443)
!14448 = !DILocalVariable(name: "index", scope: !14443, file: !1803, line: 2885, type: !1012)
!14449 = !DILocation(line: 2885, column: 13, scope: !14443)
!14450 = !DILocation(line: 2887, column: 13, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14443, file: !1803, line: 2887, column: 13)
!14452 = !DILocation(line: 2887, column: 17, scope: !14451)
!14453 = !DILocation(line: 2887, column: 20, scope: !14454)
!14454 = !DILexicalBlockFile(scope: !14451, file: !1803, discriminator: 1)
!14455 = !DILocation(line: 2887, column: 25, scope: !14454)
!14456 = !DILocation(line: 2887, column: 30, scope: !14454)
!14457 = !DILocation(line: 2887, column: 48, scope: !14454)
!14458 = !DILocation(line: 2887, column: 45, scope: !14454)
!14459 = !DILocation(line: 2887, column: 13, scope: !14454)
!14460 = !DILocalVariable(name: "coup", scope: !14461, file: !1803, line: 2888, type: !14462)
!14461 = distinct !DILexicalBlock(scope: !14451, file: !1803, line: 2887, column: 64)
!14462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64, align: 64)
!14463 = !DILocation(line: 2888, column: 30, scope: !14461)
!14464 = !DILocation(line: 2888, column: 38, scope: !14461)
!14465 = !DILocation(line: 2888, column: 43, scope: !14461)
!14466 = !DILocation(line: 2890, column: 20, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14461, file: !1803, line: 2890, column: 13)
!14468 = !DILocation(line: 2890, column: 18, scope: !14467)
!14469 = !DILocation(line: 2890, column: 25, scope: !14470)
!14470 = !DILexicalBlockFile(scope: !14471, file: !1803, discriminator: 1)
!14471 = distinct !DILexicalBlock(scope: !14467, file: !1803, line: 2890, column: 13)
!14472 = !DILocation(line: 2890, column: 30, scope: !14470)
!14473 = !DILocation(line: 2890, column: 36, scope: !14470)
!14474 = !DILocation(line: 2890, column: 27, scope: !14470)
!14475 = !DILocation(line: 2890, column: 13, scope: !14470)
!14476 = !DILocation(line: 2891, column: 32, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !1803, line: 2891, column: 21)
!14478 = distinct !DILexicalBlock(scope: !14471, file: !1803, line: 2890, column: 54)
!14479 = !DILocation(line: 2891, column: 21, scope: !14477)
!14480 = !DILocation(line: 2891, column: 27, scope: !14477)
!14481 = !DILocation(line: 2891, column: 38, scope: !14477)
!14482 = !DILocation(line: 2891, column: 35, scope: !14477)
!14483 = !DILocation(line: 2891, column: 43, scope: !14477)
!14484 = !DILocation(line: 2891, column: 62, scope: !14485)
!14485 = !DILexicalBlockFile(scope: !14477, file: !1803, discriminator: 1)
!14486 = !DILocation(line: 2891, column: 46, scope: !14485)
!14487 = !DILocation(line: 2891, column: 52, scope: !14485)
!14488 = !DILocation(line: 2891, column: 68, scope: !14485)
!14489 = !DILocation(line: 2891, column: 65, scope: !14485)
!14490 = !DILocation(line: 2891, column: 21, scope: !14485)
!14491 = !DILocation(line: 2892, column: 41, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14493, file: !1803, line: 2892, column: 25)
!14493 = distinct !DILexicalBlock(scope: !14477, file: !1803, line: 2891, column: 77)
!14494 = !DILocation(line: 2892, column: 25, scope: !14492)
!14495 = !DILocation(line: 2892, column: 31, scope: !14492)
!14496 = !DILocation(line: 2892, column: 44, scope: !14492)
!14497 = !DILocation(line: 2892, column: 25, scope: !14493)
!14498 = !DILocation(line: 2893, column: 25, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14492, file: !1803, line: 2892, column: 50)
!14500 = !DILocation(line: 2893, column: 47, scope: !14499)
!14501 = !DILocation(line: 2893, column: 52, scope: !14499)
!14502 = !DILocation(line: 2893, column: 56, scope: !14499)
!14503 = !DILocation(line: 2893, column: 63, scope: !14499)
!14504 = !DILocation(line: 2893, column: 68, scope: !14499)
!14505 = !DILocation(line: 2894, column: 45, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14499, file: !1803, line: 2894, column: 29)
!14507 = !DILocation(line: 2894, column: 29, scope: !14506)
!14508 = !DILocation(line: 2894, column: 35, scope: !14506)
!14509 = !DILocation(line: 2894, column: 48, scope: !14506)
!14510 = !DILocation(line: 2894, column: 29, scope: !14499)
!14511 = !DILocation(line: 2895, column: 34, scope: !14506)
!14512 = !DILocation(line: 2895, column: 29, scope: !14506)
!14513 = !DILocation(line: 2896, column: 21, scope: !14499)
!14514 = !DILocation(line: 2897, column: 41, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14493, file: !1803, line: 2897, column: 25)
!14516 = !DILocation(line: 2897, column: 25, scope: !14515)
!14517 = !DILocation(line: 2897, column: 31, scope: !14515)
!14518 = !DILocation(line: 2897, column: 44, scope: !14515)
!14519 = !DILocation(line: 2897, column: 25, scope: !14493)
!14520 = !DILocation(line: 2898, column: 25, scope: !14515)
!14521 = !DILocation(line: 2898, column: 47, scope: !14515)
!14522 = !DILocation(line: 2898, column: 52, scope: !14515)
!14523 = !DILocation(line: 2898, column: 56, scope: !14515)
!14524 = !DILocation(line: 2898, column: 63, scope: !14515)
!14525 = !DILocation(line: 2898, column: 73, scope: !14515)
!14526 = !DILocation(line: 2899, column: 17, scope: !14493)
!14527 = !DILocation(line: 2900, column: 51, scope: !14477)
!14528 = !DILocation(line: 2900, column: 35, scope: !14477)
!14529 = !DILocation(line: 2900, column: 41, scope: !14477)
!14530 = !DILocation(line: 2900, column: 54, scope: !14477)
!14531 = !DILocation(line: 2900, column: 32, scope: !14477)
!14532 = !DILocation(line: 2900, column: 27, scope: !14477)
!14533 = !DILocation(line: 2901, column: 13, scope: !14478)
!14534 = !DILocation(line: 2890, column: 50, scope: !14535)
!14535 = !DILexicalBlockFile(scope: !14471, file: !1803, discriminator: 2)
!14536 = !DILocation(line: 2890, column: 13, scope: !14535)
!14537 = distinct !{!14537, !14538}
!14538 = !DILocation(line: 2890, column: 13, scope: !14461)
!14539 = !DILocation(line: 2902, column: 9, scope: !14461)
!14540 = !DILocation(line: 2903, column: 5, scope: !14443)
!14541 = !DILocation(line: 2883, column: 26, scope: !14542)
!14542 = !DILexicalBlockFile(scope: !14439, file: !1803, discriminator: 2)
!14543 = !DILocation(line: 2883, column: 5, scope: !14542)
!14544 = distinct !{!14544, !14545}
!14545 = !DILocation(line: 2883, column: 5, scope: !14412)
!14546 = !DILocation(line: 2904, column: 1, scope: !14412)
!14547 = distinct !DISubprogram(name: "apply_dependent_coupling", scope: !1145, file: !1145, line: 210, type: !14416, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14548 = !DILocalVariable(name: "ac", arg: 1, scope: !14547, file: !1145, line: 210, type: !2065)
!14549 = !DILocation(line: 210, column: 50, scope: !14547)
!14550 = !DILocalVariable(name: "target", arg: 2, scope: !14547, file: !1145, line: 211, type: !1914)
!14551 = !DILocation(line: 211, column: 60, scope: !14547)
!14552 = !DILocalVariable(name: "cce", arg: 3, scope: !14547, file: !1145, line: 212, type: !2095)
!14553 = !DILocation(line: 212, column: 54, scope: !14547)
!14554 = !DILocalVariable(name: "index", arg: 4, scope: !14547, file: !1145, line: 212, type: !1012)
!14555 = !DILocation(line: 212, column: 63, scope: !14547)
!14556 = !DILocalVariable(name: "ics", scope: !14547, file: !1145, line: 214, type: !2649)
!14557 = !DILocation(line: 214, column: 30, scope: !14547)
!14558 = !DILocation(line: 214, column: 37, scope: !14547)
!14559 = !DILocation(line: 214, column: 42, scope: !14547)
!14560 = !DILocation(line: 214, column: 48, scope: !14547)
!14561 = !DILocalVariable(name: "offsets", scope: !14547, file: !1145, line: 215, type: !1943)
!14562 = !DILocation(line: 215, column: 21, scope: !14547)
!14563 = !DILocation(line: 215, column: 31, scope: !14547)
!14564 = !DILocation(line: 215, column: 36, scope: !14547)
!14565 = !DILocalVariable(name: "dest", scope: !14547, file: !1145, line: 216, type: !2554)
!14566 = !DILocation(line: 216, column: 12, scope: !14547)
!14567 = !DILocation(line: 216, column: 19, scope: !14547)
!14568 = !DILocation(line: 216, column: 27, scope: !14547)
!14569 = !DILocalVariable(name: "src", scope: !14547, file: !1145, line: 217, type: !2555)
!14570 = !DILocation(line: 217, column: 18, scope: !14547)
!14571 = !DILocation(line: 217, column: 24, scope: !14547)
!14572 = !DILocation(line: 217, column: 29, scope: !14547)
!14573 = !DILocation(line: 217, column: 35, scope: !14547)
!14574 = !DILocalVariable(name: "g", scope: !14547, file: !1145, line: 218, type: !1012)
!14575 = !DILocation(line: 218, column: 9, scope: !14547)
!14576 = !DILocalVariable(name: "i", scope: !14547, file: !1145, line: 218, type: !1012)
!14577 = !DILocation(line: 218, column: 12, scope: !14547)
!14578 = !DILocalVariable(name: "group", scope: !14547, file: !1145, line: 218, type: !1012)
!14579 = !DILocation(line: 218, column: 15, scope: !14547)
!14580 = !DILocalVariable(name: "k", scope: !14547, file: !1145, line: 218, type: !1012)
!14581 = !DILocation(line: 218, column: 22, scope: !14547)
!14582 = !DILocalVariable(name: "idx", scope: !14547, file: !1145, line: 218, type: !1012)
!14583 = !DILocation(line: 218, column: 25, scope: !14547)
!14584 = !DILocation(line: 219, column: 9, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14547, file: !1145, line: 219, column: 9)
!14586 = !DILocation(line: 219, column: 13, scope: !14585)
!14587 = !DILocation(line: 219, column: 19, scope: !14585)
!14588 = !DILocation(line: 219, column: 24, scope: !14585)
!14589 = !DILocation(line: 219, column: 36, scope: !14585)
!14590 = !DILocation(line: 219, column: 9, scope: !14547)
!14591 = !DILocation(line: 220, column: 16, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14585, file: !1145, line: 219, column: 52)
!14593 = !DILocation(line: 220, column: 20, scope: !14592)
!14594 = !DILocation(line: 220, column: 9, scope: !14592)
!14595 = !DILocation(line: 222, column: 9, scope: !14592)
!14596 = !DILocation(line: 224, column: 12, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14547, file: !1145, line: 224, column: 5)
!14598 = !DILocation(line: 224, column: 10, scope: !14597)
!14599 = !DILocation(line: 224, column: 17, scope: !14600)
!14600 = !DILexicalBlockFile(scope: !14601, file: !1145, discriminator: 1)
!14601 = distinct !DILexicalBlock(scope: !14597, file: !1145, line: 224, column: 5)
!14602 = !DILocation(line: 224, column: 21, scope: !14600)
!14603 = !DILocation(line: 224, column: 26, scope: !14600)
!14604 = !DILocation(line: 224, column: 19, scope: !14600)
!14605 = !DILocation(line: 224, column: 5, scope: !14600)
!14606 = !DILocation(line: 225, column: 16, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14608, file: !1145, line: 225, column: 9)
!14608 = distinct !DILexicalBlock(scope: !14601, file: !1145, line: 224, column: 50)
!14609 = !DILocation(line: 225, column: 14, scope: !14607)
!14610 = !DILocation(line: 225, column: 21, scope: !14611)
!14611 = !DILexicalBlockFile(scope: !14612, file: !1145, discriminator: 1)
!14612 = distinct !DILexicalBlock(scope: !14607, file: !1145, line: 225, column: 9)
!14613 = !DILocation(line: 225, column: 25, scope: !14611)
!14614 = !DILocation(line: 225, column: 30, scope: !14611)
!14615 = !DILocation(line: 225, column: 23, scope: !14611)
!14616 = !DILocation(line: 225, column: 9, scope: !14611)
!14617 = !DILocation(line: 226, column: 38, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !1145, line: 226, column: 17)
!14619 = distinct !DILexicalBlock(scope: !14612, file: !1145, line: 225, column: 51)
!14620 = !DILocation(line: 226, column: 17, scope: !14618)
!14621 = !DILocation(line: 226, column: 22, scope: !14618)
!14622 = !DILocation(line: 226, column: 28, scope: !14618)
!14623 = !DILocation(line: 226, column: 43, scope: !14618)
!14624 = !DILocation(line: 226, column: 17, scope: !14619)
!14625 = !DILocalVariable(name: "gain", scope: !14626, file: !1145, line: 227, type: !1887)
!14626 = distinct !DILexicalBlock(scope: !14618, file: !1145, line: 226, column: 55)
!14627 = !DILocation(line: 227, column: 29, scope: !14626)
!14628 = !DILocation(line: 227, column: 58, scope: !14626)
!14629 = !DILocation(line: 227, column: 36, scope: !14626)
!14630 = !DILocation(line: 227, column: 51, scope: !14626)
!14631 = !DILocation(line: 227, column: 41, scope: !14626)
!14632 = !DILocation(line: 227, column: 46, scope: !14626)
!14633 = !DILocation(line: 228, column: 28, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14626, file: !1145, line: 228, column: 17)
!14635 = !DILocation(line: 228, column: 22, scope: !14634)
!14636 = !DILocation(line: 228, column: 33, scope: !14637)
!14637 = !DILexicalBlockFile(scope: !14638, file: !1145, discriminator: 1)
!14638 = distinct !DILexicalBlock(scope: !14634, file: !1145, line: 228, column: 17)
!14639 = !DILocation(line: 228, column: 56, scope: !14637)
!14640 = !DILocation(line: 228, column: 41, scope: !14637)
!14641 = !DILocation(line: 228, column: 46, scope: !14637)
!14642 = !DILocation(line: 228, column: 39, scope: !14637)
!14643 = !DILocation(line: 228, column: 17, scope: !14637)
!14644 = !DILocation(line: 229, column: 38, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !1145, line: 229, column: 21)
!14646 = distinct !DILexicalBlock(scope: !14638, file: !1145, line: 228, column: 69)
!14647 = !DILocation(line: 229, column: 30, scope: !14645)
!14648 = !DILocation(line: 229, column: 28, scope: !14645)
!14649 = !DILocation(line: 229, column: 26, scope: !14645)
!14650 = !DILocation(line: 229, column: 42, scope: !14651)
!14651 = !DILexicalBlockFile(scope: !14652, file: !1145, discriminator: 1)
!14652 = distinct !DILexicalBlock(scope: !14645, file: !1145, line: 229, column: 21)
!14653 = !DILocation(line: 229, column: 54, scope: !14651)
!14654 = !DILocation(line: 229, column: 56, scope: !14651)
!14655 = !DILocation(line: 229, column: 46, scope: !14651)
!14656 = !DILocation(line: 229, column: 44, scope: !14651)
!14657 = !DILocation(line: 229, column: 21, scope: !14651)
!14658 = !DILocation(line: 231, column: 50, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14652, file: !1145, line: 229, column: 67)
!14660 = !DILocation(line: 231, column: 61, scope: !14659)
!14661 = !DILocation(line: 231, column: 67, scope: !14659)
!14662 = !DILocation(line: 231, column: 75, scope: !14659)
!14663 = !DILocation(line: 231, column: 73, scope: !14659)
!14664 = !DILocation(line: 231, column: 57, scope: !14659)
!14665 = !DILocation(line: 231, column: 55, scope: !14659)
!14666 = !DILocation(line: 231, column: 30, scope: !14659)
!14667 = !DILocation(line: 231, column: 36, scope: !14659)
!14668 = !DILocation(line: 231, column: 44, scope: !14659)
!14669 = !DILocation(line: 231, column: 42, scope: !14659)
!14670 = !DILocation(line: 231, column: 25, scope: !14659)
!14671 = !DILocation(line: 231, column: 47, scope: !14659)
!14672 = !DILocation(line: 232, column: 21, scope: !14659)
!14673 = !DILocation(line: 229, column: 63, scope: !14674)
!14674 = !DILexicalBlockFile(scope: !14652, file: !1145, discriminator: 2)
!14675 = !DILocation(line: 229, column: 21, scope: !14674)
!14676 = distinct !{!14676, !14677}
!14677 = !DILocation(line: 229, column: 21, scope: !14646)
!14678 = !DILocation(line: 233, column: 17, scope: !14646)
!14679 = !DILocation(line: 228, column: 65, scope: !14680)
!14680 = !DILexicalBlockFile(scope: !14638, file: !1145, discriminator: 2)
!14681 = !DILocation(line: 228, column: 17, scope: !14680)
!14682 = distinct !{!14682, !14683}
!14683 = !DILocation(line: 228, column: 17, scope: !14626)
!14684 = !DILocation(line: 234, column: 13, scope: !14626)
!14685 = !DILocation(line: 235, column: 9, scope: !14619)
!14686 = !DILocation(line: 225, column: 40, scope: !14687)
!14687 = !DILexicalBlockFile(scope: !14612, file: !1145, discriminator: 2)
!14688 = !DILocation(line: 225, column: 47, scope: !14687)
!14689 = !DILocation(line: 225, column: 9, scope: !14687)
!14690 = distinct !{!14690, !14691}
!14691 = !DILocation(line: 225, column: 9, scope: !14608)
!14692 = !DILocation(line: 236, column: 32, scope: !14608)
!14693 = !DILocation(line: 236, column: 17, scope: !14608)
!14694 = !DILocation(line: 236, column: 22, scope: !14608)
!14695 = !DILocation(line: 236, column: 35, scope: !14608)
!14696 = !DILocation(line: 236, column: 14, scope: !14608)
!14697 = !DILocation(line: 237, column: 31, scope: !14608)
!14698 = !DILocation(line: 237, column: 16, scope: !14608)
!14699 = !DILocation(line: 237, column: 21, scope: !14608)
!14700 = !DILocation(line: 237, column: 34, scope: !14608)
!14701 = !DILocation(line: 237, column: 13, scope: !14608)
!14702 = !DILocation(line: 238, column: 5, scope: !14608)
!14703 = !DILocation(line: 224, column: 46, scope: !14704)
!14704 = !DILexicalBlockFile(scope: !14601, file: !1145, discriminator: 2)
!14705 = !DILocation(line: 224, column: 5, scope: !14704)
!14706 = distinct !{!14706, !14707}
!14707 = !DILocation(line: 224, column: 5, scope: !14547)
!14708 = !DILocation(line: 239, column: 1, scope: !14547)
!14709 = distinct !DISubprogram(name: "apply_independent_coupling", scope: !1145, file: !1145, line: 246, type: !14416, isLocal: true, isDefinition: true, scopeLine: 249, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14710 = !DILocalVariable(name: "ac", arg: 1, scope: !14709, file: !1145, line: 246, type: !2065)
!14711 = !DILocation(line: 246, column: 52, scope: !14709)
!14712 = !DILocalVariable(name: "target", arg: 2, scope: !14709, file: !1145, line: 247, type: !1914)
!14713 = !DILocation(line: 247, column: 62, scope: !14709)
!14714 = !DILocalVariable(name: "cce", arg: 3, scope: !14709, file: !1145, line: 248, type: !2095)
!14715 = !DILocation(line: 248, column: 56, scope: !14709)
!14716 = !DILocalVariable(name: "index", arg: 4, scope: !14709, file: !1145, line: 248, type: !1012)
!14717 = !DILocation(line: 248, column: 65, scope: !14709)
!14718 = !DILocalVariable(name: "i", scope: !14709, file: !1145, line: 250, type: !1012)
!14719 = !DILocation(line: 250, column: 9, scope: !14709)
!14720 = !DILocalVariable(name: "gain", scope: !14709, file: !1145, line: 251, type: !1887)
!14721 = !DILocation(line: 251, column: 17, scope: !14709)
!14722 = !DILocation(line: 251, column: 39, scope: !14709)
!14723 = !DILocation(line: 251, column: 24, scope: !14709)
!14724 = !DILocation(line: 251, column: 29, scope: !14709)
!14725 = !DILocation(line: 251, column: 34, scope: !14709)
!14726 = !DILocalVariable(name: "src", scope: !14709, file: !1145, line: 252, type: !2555)
!14727 = !DILocation(line: 252, column: 18, scope: !14709)
!14728 = !DILocation(line: 252, column: 24, scope: !14709)
!14729 = !DILocation(line: 252, column: 29, scope: !14709)
!14730 = !DILocation(line: 252, column: 35, scope: !14709)
!14731 = !DILocalVariable(name: "dest", scope: !14709, file: !1145, line: 253, type: !2554)
!14732 = !DILocation(line: 253, column: 12, scope: !14709)
!14733 = !DILocation(line: 253, column: 19, scope: !14709)
!14734 = !DILocation(line: 253, column: 27, scope: !14709)
!14735 = !DILocalVariable(name: "len", scope: !14709, file: !1145, line: 254, type: !1165)
!14736 = !DILocation(line: 254, column: 15, scope: !14709)
!14737 = !DILocation(line: 254, column: 30, scope: !14709)
!14738 = !DILocation(line: 254, column: 34, scope: !14709)
!14739 = !DILocation(line: 254, column: 40, scope: !14709)
!14740 = !DILocation(line: 254, column: 45, scope: !14709)
!14741 = !DILocation(line: 254, column: 49, scope: !14709)
!14742 = !DILocation(line: 254, column: 26, scope: !14709)
!14743 = !DILocation(line: 256, column: 12, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14709, file: !1145, line: 256, column: 5)
!14745 = !DILocation(line: 256, column: 10, scope: !14744)
!14746 = !DILocation(line: 256, column: 17, scope: !14747)
!14747 = !DILexicalBlockFile(scope: !14748, file: !1145, discriminator: 1)
!14748 = distinct !DILexicalBlock(scope: !14744, file: !1145, line: 256, column: 5)
!14749 = !DILocation(line: 256, column: 21, scope: !14747)
!14750 = !DILocation(line: 256, column: 19, scope: !14747)
!14751 = !DILocation(line: 256, column: 5, scope: !14747)
!14752 = !DILocation(line: 257, column: 20, scope: !14748)
!14753 = !DILocation(line: 257, column: 31, scope: !14748)
!14754 = !DILocation(line: 257, column: 27, scope: !14748)
!14755 = !DILocation(line: 257, column: 25, scope: !14748)
!14756 = !DILocation(line: 257, column: 14, scope: !14748)
!14757 = !DILocation(line: 257, column: 9, scope: !14748)
!14758 = !DILocation(line: 257, column: 17, scope: !14748)
!14759 = !DILocation(line: 256, column: 27, scope: !14760)
!14760 = !DILexicalBlockFile(scope: !14748, file: !1145, discriminator: 2)
!14761 = !DILocation(line: 256, column: 5, scope: !14760)
!14762 = distinct !{!14762, !14763}
!14763 = !DILocation(line: 256, column: 5, scope: !14709)
!14764 = !DILocation(line: 258, column: 1, scope: !14709)
!14765 = distinct !DISubprogram(name: "show_bits", scope: !2045, file: !2045, line: 443, type: !6124, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14766 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 454, column: 16, scope: !14765)
!14768 = !DILocalVariable(name: "s", arg: 1, scope: !14765, file: !2045, line: 443, type: !2043)
!14769 = !DILocation(line: 443, column: 53, scope: !14765)
!14770 = !DILocalVariable(name: "n", arg: 2, scope: !14765, file: !2045, line: 443, type: !1012)
!14771 = !DILocation(line: 443, column: 60, scope: !14765)
!14772 = !DILocalVariable(name: "tmp", scope: !14765, file: !2045, line: 445, type: !1012)
!14773 = !DILocation(line: 445, column: 18, scope: !14765)
!14774 = !DILocalVariable(name: "re_index", scope: !14765, file: !2045, line: 452, type: !1013)
!14775 = !DILocation(line: 452, column: 18, scope: !14765)
!14776 = !DILocation(line: 452, column: 30, scope: !14765)
!14777 = !DILocation(line: 452, column: 34, scope: !14765)
!14778 = !DILocalVariable(name: "re_cache", scope: !14765, file: !2045, line: 452, type: !1013)
!14779 = !DILocation(line: 452, column: 78, scope: !14765)
!14780 = !DILocation(line: 454, column: 60, scope: !14765)
!14781 = !DILocation(line: 454, column: 64, scope: !14765)
!14782 = !DILocation(line: 454, column: 74, scope: !14765)
!14783 = !DILocation(line: 454, column: 83, scope: !14765)
!14784 = !DILocation(line: 454, column: 71, scope: !14765)
!14785 = !DILocation(line: 454, column: 92, scope: !14765)
!14786 = !DILocation(line: 454, column: 16, scope: !14765)
!14787 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !14767)
!14788 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !14767)
!14789 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !14767)
!14790 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !14767)
!14791 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !14767)
!14792 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !14767)
!14793 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !14767)
!14794 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !14767)
!14795 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !14767)
!14796 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !14767)
!14797 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !14767)
!14798 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !14767)
!14799 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !14767)
!14800 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !14767)
!14801 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !14767)
!14802 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !14767)
!14803 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !14767)
!14804 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !14767)
!14805 = !DILocation(line: 454, column: 100, scope: !14765)
!14806 = !DILocation(line: 454, column: 109, scope: !14765)
!14807 = !DILocation(line: 454, column: 96, scope: !14765)
!14808 = !DILocation(line: 454, column: 14, scope: !14765)
!14809 = !DILocation(line: 455, column: 21, scope: !14765)
!14810 = !DILocation(line: 455, column: 31, scope: !14765)
!14811 = !DILocation(line: 455, column: 11, scope: !14765)
!14812 = !DILocation(line: 455, column: 9, scope: !14765)
!14813 = !DILocation(line: 457, column: 12, scope: !14765)
!14814 = !DILocation(line: 457, column: 5, scope: !14765)
!14815 = distinct !DISubprogram(name: "parse_adts_frame_header", scope: !1803, file: !1803, line: 2981, type: !14816, isLocal: true, isDefinition: true, scopeLine: 2982, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{!1012, !2065, !2043}
!14818 = !DILocalVariable(name: "ac", arg: 1, scope: !14815, file: !1803, line: 2981, type: !2065)
!14819 = !DILocation(line: 2981, column: 48, scope: !14815)
!14820 = !DILocalVariable(name: "gb", arg: 2, scope: !14815, file: !1803, line: 2981, type: !2043)
!14821 = !DILocation(line: 2981, column: 67, scope: !14815)
!14822 = !DILocalVariable(name: "size", scope: !14815, file: !1803, line: 2983, type: !1012)
!14823 = !DILocation(line: 2983, column: 9, scope: !14815)
!14824 = !DILocalVariable(name: "hdr_info", scope: !14815, file: !1803, line: 2984, type: !14825)
!14825 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACADTSHeaderInfo", file: !14826, line: 37, baseType: !14827)
!14826 = !DIFile(filename: "libavcodec/adts_header.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!14827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACADTSHeaderInfo", file: !14826, line: 28, size: 160, align: 32, elements: !14828)
!14828 = !{!14829, !14830, !14831, !14832, !14833, !14834, !14835, !14836}
!14829 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !14827, file: !14826, line: 29, baseType: !1027, size: 32, align: 32)
!14830 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !14827, file: !14826, line: 30, baseType: !1027, size: 32, align: 32, offset: 32)
!14831 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !14827, file: !14826, line: 31, baseType: !1027, size: 32, align: 32, offset: 64)
!14832 = !DIDerivedType(tag: DW_TAG_member, name: "crc_absent", scope: !14827, file: !14826, line: 32, baseType: !1029, size: 8, align: 8, offset: 96)
!14833 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !14827, file: !14826, line: 33, baseType: !1029, size: 8, align: 8, offset: 104)
!14834 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !14827, file: !14826, line: 34, baseType: !1029, size: 8, align: 8, offset: 112)
!14835 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !14827, file: !14826, line: 35, baseType: !1029, size: 8, align: 8, offset: 120)
!14836 = !DIDerivedType(tag: DW_TAG_member, name: "num_aac_frames", scope: !14827, file: !14826, line: 36, baseType: !1029, size: 8, align: 8, offset: 128)
!14837 = !DILocation(line: 2984, column: 23, scope: !14815)
!14838 = !DILocalVariable(name: "layout_map", scope: !14815, file: !1803, line: 2985, type: !2630)
!14839 = !DILocation(line: 2985, column: 13, scope: !14815)
!14840 = !DILocalVariable(name: "layout_map_tags", scope: !14815, file: !1803, line: 2986, type: !1012)
!14841 = !DILocation(line: 2986, column: 9, scope: !14815)
!14842 = !DILocalVariable(name: "ret", scope: !14815, file: !1803, line: 2986, type: !1012)
!14843 = !DILocation(line: 2986, column: 26, scope: !14815)
!14844 = !DILocation(line: 2988, column: 33, scope: !14815)
!14845 = !DILocation(line: 2988, column: 12, scope: !14815)
!14846 = !DILocation(line: 2988, column: 10, scope: !14815)
!14847 = !DILocation(line: 2989, column: 9, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14815, file: !1803, line: 2989, column: 9)
!14849 = !DILocation(line: 2989, column: 14, scope: !14848)
!14850 = !DILocation(line: 2989, column: 9, scope: !14815)
!14851 = !DILocation(line: 2990, column: 14, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14853, file: !1803, line: 2990, column: 13)
!14853 = distinct !DILexicalBlock(scope: !14848, file: !1803, line: 2989, column: 19)
!14854 = !DILocation(line: 2990, column: 18, scope: !14852)
!14855 = !DILocation(line: 2990, column: 40, scope: !14852)
!14856 = !DILocation(line: 2990, column: 52, scope: !14857)
!14857 = !DILexicalBlockFile(scope: !14852, file: !1803, discriminator: 1)
!14858 = !DILocation(line: 2990, column: 43, scope: !14857)
!14859 = !DILocation(line: 2990, column: 67, scope: !14857)
!14860 = !DILocation(line: 2990, column: 13, scope: !14857)
!14861 = !DILocation(line: 2993, column: 43, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14852, file: !1803, line: 2990, column: 73)
!14863 = !DILocation(line: 2993, column: 47, scope: !14862)
!14864 = !DILocation(line: 2993, column: 13, scope: !14862)
!14865 = !DILocation(line: 2995, column: 13, scope: !14862)
!14866 = !DILocation(line: 2995, column: 17, scope: !14862)
!14867 = !DILocation(line: 2995, column: 39, scope: !14862)
!14868 = !DILocation(line: 2996, column: 9, scope: !14862)
!14869 = !DILocation(line: 2997, column: 35, scope: !14853)
!14870 = !DILocation(line: 2997, column: 9, scope: !14853)
!14871 = !DILocation(line: 2998, column: 22, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14853, file: !1803, line: 2998, column: 13)
!14873 = !DILocation(line: 2998, column: 13, scope: !14872)
!14874 = !DILocation(line: 2998, column: 13, scope: !14853)
!14875 = !DILocation(line: 2999, column: 51, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14872, file: !1803, line: 2998, column: 35)
!14877 = !DILocation(line: 2999, column: 42, scope: !14876)
!14878 = !DILocation(line: 2999, column: 13, scope: !14876)
!14879 = !DILocation(line: 2999, column: 17, scope: !14876)
!14880 = !DILocation(line: 2999, column: 23, scope: !14876)
!14881 = !DILocation(line: 2999, column: 28, scope: !14876)
!14882 = !DILocation(line: 2999, column: 40, scope: !14876)
!14883 = !DILocation(line: 3000, column: 51, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14876, file: !1803, line: 3000, column: 17)
!14885 = !DILocation(line: 3000, column: 55, scope: !14884)
!14886 = !DILocation(line: 3001, column: 51, scope: !14884)
!14887 = !DILocation(line: 3003, column: 60, scope: !14884)
!14888 = !DILocation(line: 3003, column: 51, scope: !14884)
!14889 = !DILocation(line: 3000, column: 24, scope: !14884)
!14890 = !DILocation(line: 3000, column: 22, scope: !14884)
!14891 = !DILocation(line: 3003, column: 74, scope: !14884)
!14892 = !DILocation(line: 3000, column: 17, scope: !14876)
!14893 = !DILocation(line: 3004, column: 24, scope: !14884)
!14894 = !DILocation(line: 3004, column: 17, scope: !14884)
!14895 = !DILocation(line: 3005, column: 41, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14876, file: !1803, line: 3005, column: 17)
!14897 = !DILocation(line: 3005, column: 45, scope: !14896)
!14898 = !DILocation(line: 3005, column: 57, scope: !14896)
!14899 = !DILocation(line: 3006, column: 43, scope: !14896)
!14900 = !DILocation(line: 3006, column: 47, scope: !14896)
!14901 = !DILocation(line: 3006, column: 53, scope: !14896)
!14902 = !DILocation(line: 3006, column: 61, scope: !14896)
!14903 = !DILocation(line: 3006, column: 42, scope: !14896)
!14904 = !DILocation(line: 3006, column: 83, scope: !14905)
!14905 = !DILexicalBlockFile(scope: !14896, file: !1803, discriminator: 1)
!14906 = !DILocation(line: 3006, column: 87, scope: !14905)
!14907 = !DILocation(line: 3006, column: 93, scope: !14905)
!14908 = !DILocation(line: 3006, column: 42, scope: !14905)
!14909 = !DILocation(line: 3006, column: 42, scope: !14910)
!14910 = !DILexicalBlockFile(scope: !14896, file: !1803, discriminator: 2)
!14911 = !DILocation(line: 3006, column: 42, scope: !14912)
!14912 = !DILexicalBlockFile(scope: !14896, file: !1803, discriminator: 3)
!14913 = !DILocation(line: 3005, column: 24, scope: !14905)
!14914 = !DILocation(line: 3005, column: 22, scope: !14905)
!14915 = !DILocation(line: 3007, column: 68, scope: !14896)
!14916 = !DILocation(line: 3005, column: 17, scope: !14905)
!14917 = !DILocation(line: 3008, column: 24, scope: !14896)
!14918 = !DILocation(line: 3008, column: 17, scope: !14896)
!14919 = !DILocation(line: 3009, column: 9, scope: !14876)
!14920 = !DILocation(line: 3010, column: 13, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14872, file: !1803, line: 3009, column: 16)
!14922 = !DILocation(line: 3010, column: 17, scope: !14921)
!14923 = !DILocation(line: 3010, column: 23, scope: !14921)
!14924 = !DILocation(line: 3010, column: 28, scope: !14921)
!14925 = !DILocation(line: 3010, column: 40, scope: !14921)
!14926 = !DILocation(line: 3016, column: 17, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14921, file: !1803, line: 3016, column: 17)
!14928 = !DILocation(line: 3016, column: 21, scope: !14927)
!14929 = !DILocation(line: 3016, column: 32, scope: !14927)
!14930 = !DILocation(line: 3016, column: 35, scope: !14931)
!14931 = !DILexicalBlockFile(scope: !14927, file: !1803, discriminator: 1)
!14932 = !DILocation(line: 3016, column: 39, scope: !14931)
!14933 = !DILocation(line: 3016, column: 45, scope: !14931)
!14934 = !DILocation(line: 3016, column: 52, scope: !14931)
!14935 = !DILocation(line: 3016, column: 17, scope: !14931)
!14936 = !DILocation(line: 3017, column: 33, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14927, file: !1803, line: 3016, column: 64)
!14938 = !DILocation(line: 3018, column: 36, scope: !14937)
!14939 = !DILocation(line: 3018, column: 53, scope: !14937)
!14940 = !DILocation(line: 3018, column: 17, scope: !14937)
!14941 = !DILocation(line: 3018, column: 34, scope: !14937)
!14942 = !DILocation(line: 3019, column: 36, scope: !14937)
!14943 = !DILocation(line: 3019, column: 53, scope: !14937)
!14944 = !DILocation(line: 3019, column: 17, scope: !14937)
!14945 = !DILocation(line: 3019, column: 34, scope: !14937)
!14946 = !DILocation(line: 3020, column: 17, scope: !14937)
!14947 = !DILocation(line: 3020, column: 34, scope: !14937)
!14948 = !DILocation(line: 3021, column: 17, scope: !14937)
!14949 = !DILocation(line: 3021, column: 34, scope: !14937)
!14950 = !DILocation(line: 3022, column: 38, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14937, file: !1803, line: 3022, column: 21)
!14952 = !DILocation(line: 3022, column: 42, scope: !14951)
!14953 = !DILocation(line: 3022, column: 54, scope: !14951)
!14954 = !DILocation(line: 3022, column: 21, scope: !14951)
!14955 = !DILocation(line: 3022, column: 21, scope: !14937)
!14956 = !DILocation(line: 3024, column: 21, scope: !14951)
!14957 = !DILocation(line: 3025, column: 13, scope: !14937)
!14958 = !DILocation(line: 3027, column: 47, scope: !14853)
!14959 = !DILocation(line: 3027, column: 9, scope: !14853)
!14960 = !DILocation(line: 3027, column: 13, scope: !14853)
!14961 = !DILocation(line: 3027, column: 19, scope: !14853)
!14962 = !DILocation(line: 3027, column: 24, scope: !14853)
!14963 = !DILocation(line: 3027, column: 36, scope: !14853)
!14964 = !DILocation(line: 3028, column: 50, scope: !14853)
!14965 = !DILocation(line: 3028, column: 41, scope: !14853)
!14966 = !DILocation(line: 3028, column: 9, scope: !14853)
!14967 = !DILocation(line: 3028, column: 13, scope: !14853)
!14968 = !DILocation(line: 3028, column: 19, scope: !14853)
!14969 = !DILocation(line: 3028, column: 24, scope: !14853)
!14970 = !DILocation(line: 3028, column: 39, scope: !14853)
!14971 = !DILocation(line: 3029, column: 47, scope: !14853)
!14972 = !DILocation(line: 3029, column: 38, scope: !14853)
!14973 = !DILocation(line: 3029, column: 9, scope: !14853)
!14974 = !DILocation(line: 3029, column: 13, scope: !14853)
!14975 = !DILocation(line: 3029, column: 19, scope: !14853)
!14976 = !DILocation(line: 3029, column: 24, scope: !14853)
!14977 = !DILocation(line: 3029, column: 36, scope: !14853)
!14978 = !DILocation(line: 3030, column: 9, scope: !14853)
!14979 = !DILocation(line: 3030, column: 13, scope: !14853)
!14980 = !DILocation(line: 3030, column: 19, scope: !14853)
!14981 = !DILocation(line: 3030, column: 24, scope: !14853)
!14982 = !DILocation(line: 3030, column: 43, scope: !14853)
!14983 = !DILocation(line: 3031, column: 13, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14853, file: !1803, line: 3031, column: 13)
!14985 = !DILocation(line: 3031, column: 17, scope: !14984)
!14986 = !DILocation(line: 3031, column: 23, scope: !14984)
!14987 = !DILocation(line: 3031, column: 30, scope: !14984)
!14988 = !DILocation(line: 3031, column: 43, scope: !14984)
!14989 = !DILocation(line: 3032, column: 13, scope: !14984)
!14990 = !DILocation(line: 3032, column: 17, scope: !14984)
!14991 = !DILocation(line: 3032, column: 23, scope: !14984)
!14992 = !DILocation(line: 3032, column: 28, scope: !14984)
!14993 = !DILocation(line: 3032, column: 52, scope: !14984)
!14994 = !DILocation(line: 3032, column: 43, scope: !14984)
!14995 = !DILocation(line: 3032, column: 40, scope: !14984)
!14996 = !DILocation(line: 3032, column: 64, scope: !14984)
!14997 = !DILocation(line: 3033, column: 13, scope: !14984)
!14998 = !DILocation(line: 3033, column: 17, scope: !14984)
!14999 = !DILocation(line: 3033, column: 23, scope: !14984)
!15000 = !DILocation(line: 3033, column: 28, scope: !14984)
!15001 = !DILocation(line: 3033, column: 52, scope: !14984)
!15002 = !DILocation(line: 3033, column: 40, scope: !14984)
!15003 = !DILocation(line: 3031, column: 13, scope: !15004)
!15004 = !DILexicalBlockFile(scope: !14853, file: !1803, discriminator: 1)
!15005 = !DILocation(line: 3034, column: 13, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !14984, file: !1803, line: 3033, column: 65)
!15007 = !DILocation(line: 3034, column: 17, scope: !15006)
!15008 = !DILocation(line: 3034, column: 23, scope: !15006)
!15009 = !DILocation(line: 3034, column: 28, scope: !15006)
!15010 = !DILocation(line: 3034, column: 32, scope: !15006)
!15011 = !DILocation(line: 3035, column: 13, scope: !15006)
!15012 = !DILocation(line: 3035, column: 17, scope: !15006)
!15013 = !DILocation(line: 3035, column: 23, scope: !15006)
!15014 = !DILocation(line: 3035, column: 28, scope: !15006)
!15015 = !DILocation(line: 3035, column: 31, scope: !15006)
!15016 = !DILocation(line: 3036, column: 9, scope: !15006)
!15017 = !DILocation(line: 3037, column: 23, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !14853, file: !1803, line: 3037, column: 13)
!15019 = !DILocation(line: 3037, column: 14, scope: !15018)
!15020 = !DILocation(line: 3037, column: 13, scope: !14853)
!15021 = !DILocation(line: 3038, column: 23, scope: !15018)
!15022 = !DILocation(line: 3038, column: 13, scope: !15018)
!15023 = !DILocation(line: 3039, column: 5, scope: !14853)
!15024 = !DILocation(line: 3040, column: 12, scope: !14815)
!15025 = !DILocation(line: 3040, column: 5, scope: !14815)
!15026 = !DILocation(line: 3041, column: 1, scope: !14815)
!15027 = distinct !DISubprogram(name: "decode_cce", scope: !1803, file: !1803, line: 2238, type: !8499, isLocal: true, isDefinition: true, scopeLine: 2239, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!15028 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 2293, column: 37, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15032, file: !1803, line: 2292, column: 35)
!15032 = distinct !DILexicalBlock(scope: !15033, file: !1803, line: 2292, column: 29)
!15033 = distinct !DILexicalBlock(scope: !15034, file: !1803, line: 2291, column: 57)
!15034 = distinct !DILexicalBlock(scope: !15035, file: !1803, line: 2291, column: 25)
!15035 = distinct !DILexicalBlock(scope: !15036, file: !1803, line: 2290, column: 69)
!15036 = distinct !DILexicalBlock(scope: !15037, file: !1803, line: 2290, column: 17)
!15037 = distinct !DILexicalBlock(scope: !15038, file: !1803, line: 2290, column: 17)
!15038 = distinct !DILexicalBlock(scope: !15039, file: !1803, line: 2289, column: 62)
!15039 = distinct !DILexicalBlock(scope: !15040, file: !1803, line: 2289, column: 13)
!15040 = distinct !DILexicalBlock(scope: !15041, file: !1803, line: 2289, column: 13)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !1803, line: 2288, column: 16)
!15042 = distinct !DILexicalBlock(scope: !15043, file: !1803, line: 2286, column: 13)
!15043 = distinct !DILexicalBlock(scope: !15044, file: !1803, line: 2272, column: 36)
!15044 = distinct !DILexicalBlock(scope: !15045, file: !1803, line: 2272, column: 5)
!15045 = distinct !DILexicalBlock(scope: !15027, file: !1803, line: 2272, column: 5)
!15046 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15047)
!15047 = distinct !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !15030)
!15048 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15049)
!15049 = distinct !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !15030)
!15050 = !DILocation(line: 762, column: 74, scope: !9498, inlinedAt: !15030)
!15051 = !DILocation(line: 762, column: 87, scope: !9498, inlinedAt: !15030)
!15052 = !DILocation(line: 763, column: 42, scope: !9498, inlinedAt: !15030)
!15053 = !DILocation(line: 763, column: 52, scope: !9498, inlinedAt: !15030)
!15054 = !DILocation(line: 783, column: 9, scope: !9498, inlinedAt: !15030)
!15055 = !DILocation(line: 785, column: 18, scope: !9498, inlinedAt: !15030)
!15056 = !DILocation(line: 785, column: 78, scope: !9498, inlinedAt: !15030)
!15057 = !DILocation(line: 785, column: 101, scope: !9498, inlinedAt: !15030)
!15058 = !DILocation(line: 788, column: 14, scope: !9497, inlinedAt: !15030)
!15059 = !DILocation(line: 788, column: 17, scope: !9497, inlinedAt: !15030)
!15060 = !DILocation(line: 788, column: 39, scope: !9497, inlinedAt: !15030)
!15061 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 2279, column: 26, scope: !15064)
!15064 = !DILexicalBlockFile(scope: !15065, file: !1803, discriminator: 1)
!15065 = distinct !DILexicalBlock(scope: !15066, file: !1803, line: 2277, column: 16)
!15066 = distinct !DILexicalBlock(scope: !15043, file: !1803, line: 2277, column: 13)
!15067 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15068)
!15068 = distinct !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !15063)
!15069 = !DILocation(line: 66, column: 98, scope: !6127, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !15063)
!15071 = !DILocation(line: 762, column: 74, scope: !9498, inlinedAt: !15063)
!15072 = !DILocation(line: 762, column: 87, scope: !9498, inlinedAt: !15063)
!15073 = !DILocation(line: 763, column: 42, scope: !9498, inlinedAt: !15063)
!15074 = !DILocation(line: 763, column: 52, scope: !9498, inlinedAt: !15063)
!15075 = !DILocation(line: 783, column: 9, scope: !9498, inlinedAt: !15063)
!15076 = !DILocation(line: 785, column: 18, scope: !9498, inlinedAt: !15063)
!15077 = !DILocation(line: 785, column: 78, scope: !9498, inlinedAt: !15063)
!15078 = !DILocation(line: 785, column: 101, scope: !9498, inlinedAt: !15063)
!15079 = !DILocation(line: 788, column: 14, scope: !9497, inlinedAt: !15063)
!15080 = !DILocation(line: 788, column: 17, scope: !9497, inlinedAt: !15063)
!15081 = !DILocation(line: 788, column: 39, scope: !9497, inlinedAt: !15063)
!15082 = !DILocalVariable(name: "ac", arg: 1, scope: !15027, file: !1803, line: 2238, type: !2065)
!15083 = !DILocation(line: 2238, column: 35, scope: !15027)
!15084 = !DILocalVariable(name: "gb", arg: 2, scope: !15027, file: !1803, line: 2238, type: !2043)
!15085 = !DILocation(line: 2238, column: 54, scope: !15027)
!15086 = !DILocalVariable(name: "che", arg: 3, scope: !15027, file: !1803, line: 2238, type: !2095)
!15087 = !DILocation(line: 2238, column: 74, scope: !15027)
!15088 = !DILocalVariable(name: "num_gain", scope: !15027, file: !1803, line: 2240, type: !1012)
!15089 = !DILocation(line: 2240, column: 9, scope: !15027)
!15090 = !DILocalVariable(name: "c", scope: !15027, file: !1803, line: 2241, type: !1012)
!15091 = !DILocation(line: 2241, column: 9, scope: !15027)
!15092 = !DILocalVariable(name: "g", scope: !15027, file: !1803, line: 2241, type: !1012)
!15093 = !DILocation(line: 2241, column: 12, scope: !15027)
!15094 = !DILocalVariable(name: "sfb", scope: !15027, file: !1803, line: 2241, type: !1012)
!15095 = !DILocation(line: 2241, column: 15, scope: !15027)
!15096 = !DILocalVariable(name: "ret", scope: !15027, file: !1803, line: 2241, type: !1012)
!15097 = !DILocation(line: 2241, column: 20, scope: !15027)
!15098 = !DILocalVariable(name: "sign", scope: !15027, file: !1803, line: 2242, type: !1012)
!15099 = !DILocation(line: 2242, column: 9, scope: !15027)
!15100 = !DILocalVariable(name: "scale", scope: !15027, file: !1803, line: 2243, type: !1017)
!15101 = !DILocation(line: 2243, column: 14, scope: !15027)
!15102 = !DILocalVariable(name: "sce", scope: !15027, file: !1803, line: 2244, type: !1914)
!15103 = !DILocation(line: 2244, column: 27, scope: !15027)
!15104 = !DILocation(line: 2244, column: 34, scope: !15027)
!15105 = !DILocation(line: 2244, column: 39, scope: !15027)
!15106 = !DILocalVariable(name: "coup", scope: !15027, file: !1803, line: 2245, type: !14462)
!15107 = !DILocation(line: 2245, column: 22, scope: !15027)
!15108 = !DILocation(line: 2245, column: 30, scope: !15027)
!15109 = !DILocation(line: 2245, column: 35, scope: !15027)
!15110 = !DILocation(line: 2247, column: 42, scope: !15027)
!15111 = !DILocation(line: 2247, column: 32, scope: !15027)
!15112 = !DILocation(line: 2247, column: 30, scope: !15027)
!15113 = !DILocation(line: 2247, column: 5, scope: !15027)
!15114 = !DILocation(line: 2247, column: 11, scope: !15027)
!15115 = !DILocation(line: 2247, column: 26, scope: !15027)
!15116 = !DILocation(line: 2248, column: 34, scope: !15027)
!15117 = !DILocation(line: 2248, column: 25, scope: !15027)
!15118 = !DILocation(line: 2248, column: 5, scope: !15027)
!15119 = !DILocation(line: 2248, column: 11, scope: !15027)
!15120 = !DILocation(line: 2248, column: 23, scope: !15027)
!15121 = !DILocation(line: 2249, column: 12, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15027, file: !1803, line: 2249, column: 5)
!15123 = !DILocation(line: 2249, column: 10, scope: !15122)
!15124 = !DILocation(line: 2249, column: 17, scope: !15125)
!15125 = !DILexicalBlockFile(scope: !15126, file: !1803, discriminator: 1)
!15126 = distinct !DILexicalBlock(scope: !15122, file: !1803, line: 2249, column: 5)
!15127 = !DILocation(line: 2249, column: 22, scope: !15125)
!15128 = !DILocation(line: 2249, column: 28, scope: !15125)
!15129 = !DILocation(line: 2249, column: 19, scope: !15125)
!15130 = !DILocation(line: 2249, column: 5, scope: !15125)
!15131 = !DILocation(line: 2250, column: 17, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15126, file: !1803, line: 2249, column: 46)
!15133 = !DILocation(line: 2251, column: 35, scope: !15132)
!15134 = !DILocation(line: 2251, column: 25, scope: !15132)
!15135 = !DILocation(line: 2251, column: 20, scope: !15132)
!15136 = !DILocation(line: 2251, column: 9, scope: !15132)
!15137 = !DILocation(line: 2251, column: 15, scope: !15132)
!15138 = !DILocation(line: 2251, column: 23, scope: !15132)
!15139 = !DILocation(line: 2252, column: 39, scope: !15132)
!15140 = !DILocation(line: 2252, column: 30, scope: !15132)
!15141 = !DILocation(line: 2252, column: 25, scope: !15132)
!15142 = !DILocation(line: 2252, column: 9, scope: !15132)
!15143 = !DILocation(line: 2252, column: 15, scope: !15132)
!15144 = !DILocation(line: 2252, column: 28, scope: !15132)
!15145 = !DILocation(line: 2253, column: 24, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15132, file: !1803, line: 2253, column: 13)
!15147 = !DILocation(line: 2253, column: 13, scope: !15146)
!15148 = !DILocation(line: 2253, column: 19, scope: !15146)
!15149 = !DILocation(line: 2253, column: 27, scope: !15146)
!15150 = !DILocation(line: 2253, column: 13, scope: !15132)
!15151 = !DILocation(line: 2254, column: 43, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15146, file: !1803, line: 2253, column: 40)
!15153 = !DILocation(line: 2254, column: 34, scope: !15152)
!15154 = !DILocation(line: 2254, column: 29, scope: !15152)
!15155 = !DILocation(line: 2254, column: 13, scope: !15152)
!15156 = !DILocation(line: 2254, column: 19, scope: !15152)
!15157 = !DILocation(line: 2254, column: 32, scope: !15152)
!15158 = !DILocation(line: 2255, column: 33, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15152, file: !1803, line: 2255, column: 17)
!15160 = !DILocation(line: 2255, column: 17, scope: !15159)
!15161 = !DILocation(line: 2255, column: 23, scope: !15159)
!15162 = !DILocation(line: 2255, column: 36, scope: !15159)
!15163 = !DILocation(line: 2255, column: 17, scope: !15152)
!15164 = !DILocation(line: 2256, column: 25, scope: !15159)
!15165 = !DILocation(line: 2256, column: 17, scope: !15159)
!15166 = !DILocation(line: 2257, column: 9, scope: !15152)
!15167 = !DILocation(line: 2258, column: 29, scope: !15146)
!15168 = !DILocation(line: 2258, column: 13, scope: !15146)
!15169 = !DILocation(line: 2258, column: 19, scope: !15146)
!15170 = !DILocation(line: 2258, column: 32, scope: !15146)
!15171 = !DILocation(line: 2259, column: 5, scope: !15132)
!15172 = !DILocation(line: 2249, column: 42, scope: !15173)
!15173 = !DILexicalBlockFile(scope: !15126, file: !1803, discriminator: 2)
!15174 = !DILocation(line: 2249, column: 5, scope: !15173)
!15175 = distinct !{!15175, !15176}
!15176 = !DILocation(line: 2249, column: 5, scope: !15027)
!15177 = !DILocation(line: 2260, column: 39, scope: !15027)
!15178 = !DILocation(line: 2260, column: 29, scope: !15027)
!15179 = !DILocation(line: 2260, column: 43, scope: !15027)
!15180 = !DILocation(line: 2260, column: 47, scope: !15181)
!15181 = !DILexicalBlockFile(scope: !15027, file: !1803, discriminator: 1)
!15182 = !DILocation(line: 2260, column: 53, scope: !15181)
!15183 = !DILocation(line: 2260, column: 68, scope: !15181)
!15184 = !DILocation(line: 2260, column: 43, scope: !15181)
!15185 = !DILocation(line: 2260, column: 43, scope: !15186)
!15186 = !DILexicalBlockFile(scope: !15027, file: !1803, discriminator: 2)
!15187 = !DILocation(line: 2260, column: 5, scope: !15186)
!15188 = !DILocation(line: 2260, column: 11, scope: !15186)
!15189 = !DILocation(line: 2260, column: 26, scope: !15186)
!15190 = !DILocation(line: 2262, column: 21, scope: !15027)
!15191 = !DILocation(line: 2262, column: 12, scope: !15027)
!15192 = !DILocation(line: 2262, column: 10, scope: !15027)
!15193 = !DILocation(line: 2266, column: 32, scope: !15027)
!15194 = !DILocation(line: 2266, column: 23, scope: !15027)
!15195 = !DILocation(line: 2266, column: 13, scope: !15027)
!15196 = !DILocation(line: 2266, column: 11, scope: !15027)
!15197 = !DILocation(line: 2269, column: 27, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15027, file: !1803, line: 2269, column: 9)
!15199 = !DILocation(line: 2269, column: 31, scope: !15198)
!15200 = !DILocation(line: 2269, column: 36, scope: !15198)
!15201 = !DILocation(line: 2269, column: 16, scope: !15198)
!15202 = !DILocation(line: 2269, column: 14, scope: !15198)
!15203 = !DILocation(line: 2269, column: 9, scope: !15027)
!15204 = !DILocation(line: 2270, column: 16, scope: !15198)
!15205 = !DILocation(line: 2270, column: 9, scope: !15198)
!15206 = !DILocation(line: 2272, column: 12, scope: !15045)
!15207 = !DILocation(line: 2272, column: 10, scope: !15045)
!15208 = !DILocation(line: 2272, column: 17, scope: !15209)
!15209 = !DILexicalBlockFile(scope: !15044, file: !1803, discriminator: 1)
!15210 = !DILocation(line: 2272, column: 21, scope: !15209)
!15211 = !DILocation(line: 2272, column: 19, scope: !15209)
!15212 = !DILocation(line: 2272, column: 5, scope: !15209)
!15213 = !DILocalVariable(name: "idx", scope: !15043, file: !1803, line: 2273, type: !1012)
!15214 = !DILocation(line: 2273, column: 13, scope: !15043)
!15215 = !DILocalVariable(name: "cge", scope: !15043, file: !1803, line: 2274, type: !1012)
!15216 = !DILocation(line: 2274, column: 13, scope: !15043)
!15217 = !DILocalVariable(name: "gain", scope: !15043, file: !1803, line: 2275, type: !1012)
!15218 = !DILocation(line: 2275, column: 13, scope: !15043)
!15219 = !DILocalVariable(name: "gain_cache", scope: !15043, file: !1803, line: 2276, type: !1017)
!15220 = !DILocation(line: 2276, column: 18, scope: !15043)
!15221 = !DILocation(line: 2277, column: 13, scope: !15066)
!15222 = !DILocation(line: 2277, column: 13, scope: !15043)
!15223 = !DILocation(line: 2278, column: 19, scope: !15065)
!15224 = !DILocation(line: 2278, column: 25, scope: !15065)
!15225 = !DILocation(line: 2278, column: 40, scope: !15065)
!15226 = !DILocation(line: 2278, column: 19, scope: !15064)
!15227 = !DILocation(line: 2278, column: 71, scope: !15228)
!15228 = !DILexicalBlockFile(scope: !15065, file: !1803, discriminator: 2)
!15229 = !DILocation(line: 2278, column: 61, scope: !15228)
!15230 = !DILocation(line: 2278, column: 19, scope: !15228)
!15231 = !DILocation(line: 2278, column: 19, scope: !15232)
!15232 = !DILexicalBlockFile(scope: !15065, file: !1803, discriminator: 3)
!15233 = !DILocation(line: 2278, column: 17, scope: !15232)
!15234 = !DILocation(line: 2279, column: 20, scope: !15065)
!15235 = !DILocation(line: 2279, column: 35, scope: !15064)
!15236 = !DILocation(line: 2279, column: 56, scope: !15064)
!15237 = !DILocation(line: 2279, column: 26, scope: !15064)
!15238 = !DILocation(line: 785, column: 30, scope: !9498, inlinedAt: !15063)
!15239 = !DILocation(line: 785, column: 34, scope: !9498, inlinedAt: !15063)
!15240 = !DILocation(line: 785, column: 118, scope: !9498, inlinedAt: !15063)
!15241 = !DILocation(line: 785, column: 122, scope: !9498, inlinedAt: !15063)
!15242 = !DILocation(line: 786, column: 60, scope: !9498, inlinedAt: !15063)
!15243 = !DILocation(line: 786, column: 64, scope: !9498, inlinedAt: !15063)
!15244 = !DILocation(line: 786, column: 74, scope: !9498, inlinedAt: !15063)
!15245 = !DILocation(line: 786, column: 83, scope: !9498, inlinedAt: !15063)
!15246 = !DILocation(line: 786, column: 71, scope: !9498, inlinedAt: !15063)
!15247 = !DILocation(line: 786, column: 92, scope: !9498, inlinedAt: !15063)
!15248 = !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !15063)
!15249 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15070)
!15250 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15070)
!15251 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15070)
!15252 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15070)
!15253 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15070)
!15254 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15070)
!15255 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15070)
!15256 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15070)
!15257 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15070)
!15258 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15070)
!15259 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15070)
!15260 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15070)
!15261 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15070)
!15262 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15070)
!15263 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15070)
!15264 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15070)
!15265 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15070)
!15266 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15070)
!15267 = !DILocation(line: 786, column: 100, scope: !9498, inlinedAt: !15063)
!15268 = !DILocation(line: 786, column: 109, scope: !9498, inlinedAt: !15063)
!15269 = !DILocation(line: 786, column: 96, scope: !9498, inlinedAt: !15063)
!15270 = !DILocation(line: 786, column: 14, scope: !9498, inlinedAt: !15063)
!15271 = !DILocation(line: 788, column: 64, scope: !9721, inlinedAt: !15063)
!15272 = !DILocation(line: 788, column: 74, scope: !9721, inlinedAt: !15063)
!15273 = !DILocation(line: 788, column: 54, scope: !9721, inlinedAt: !15063)
!15274 = !DILocation(line: 788, column: 52, scope: !9721, inlinedAt: !15063)
!15275 = !DILocation(line: 788, column: 94, scope: !9721, inlinedAt: !15063)
!15276 = !DILocation(line: 788, column: 88, scope: !9721, inlinedAt: !15063)
!15277 = !DILocation(line: 788, column: 86, scope: !9721, inlinedAt: !15063)
!15278 = !DILocation(line: 788, column: 115, scope: !9721, inlinedAt: !15063)
!15279 = !DILocation(line: 788, column: 109, scope: !9721, inlinedAt: !15063)
!15280 = !DILocation(line: 788, column: 107, scope: !9721, inlinedAt: !15063)
!15281 = !DILocation(line: 788, column: 130, scope: !9721, inlinedAt: !15063)
!15282 = !DILocation(line: 788, column: 140, scope: !9721, inlinedAt: !15063)
!15283 = !DILocation(line: 788, column: 144, scope: !9721, inlinedAt: !15063)
!15284 = !DILocation(line: 788, column: 147, scope: !9735, inlinedAt: !15063)
!15285 = !DILocation(line: 788, column: 149, scope: !9735, inlinedAt: !15063)
!15286 = !DILocation(line: 788, column: 130, scope: !9735, inlinedAt: !15063)
!15287 = !DILocation(line: 788, column: 169, scope: !9739, inlinedAt: !15063)
!15288 = !DILocation(line: 788, column: 187, scope: !9739, inlinedAt: !15063)
!15289 = !DILocation(line: 788, column: 199, scope: !9739, inlinedAt: !15063)
!15290 = !DILocation(line: 788, column: 196, scope: !9739, inlinedAt: !15063)
!15291 = !DILocation(line: 788, column: 184, scope: !9739, inlinedAt: !15063)
!15292 = !DILocation(line: 788, column: 168, scope: !9739, inlinedAt: !15063)
!15293 = !DILocation(line: 788, column: 209, scope: !9746, inlinedAt: !15063)
!15294 = !DILocation(line: 788, column: 221, scope: !9746, inlinedAt: !15063)
!15295 = !DILocation(line: 788, column: 218, scope: !9746, inlinedAt: !15063)
!15296 = !DILocation(line: 788, column: 168, scope: !9746, inlinedAt: !15063)
!15297 = !DILocation(line: 788, column: 231, scope: !9751, inlinedAt: !15063)
!15298 = !DILocation(line: 788, column: 168, scope: !9751, inlinedAt: !15063)
!15299 = !DILocation(line: 788, column: 168, scope: !9517, inlinedAt: !15063)
!15300 = !DILocation(line: 788, column: 165, scope: !9517, inlinedAt: !15063)
!15301 = !DILocation(line: 788, column: 303, scope: !9517, inlinedAt: !15063)
!15302 = !DILocation(line: 788, column: 307, scope: !9517, inlinedAt: !15063)
!15303 = !DILocation(line: 788, column: 317, scope: !9517, inlinedAt: !15063)
!15304 = !DILocation(line: 788, column: 326, scope: !9517, inlinedAt: !15063)
!15305 = !DILocation(line: 788, column: 314, scope: !9517, inlinedAt: !15063)
!15306 = !DILocation(line: 788, column: 335, scope: !9517, inlinedAt: !15063)
!15307 = !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !15063)
!15308 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15068)
!15309 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15068)
!15310 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15068)
!15311 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15068)
!15312 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15068)
!15313 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15068)
!15314 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15068)
!15315 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15068)
!15316 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15068)
!15317 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15068)
!15318 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15068)
!15319 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15068)
!15320 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15068)
!15321 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15068)
!15322 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15068)
!15323 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15068)
!15324 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15068)
!15325 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15068)
!15326 = !DILocation(line: 788, column: 343, scope: !9517, inlinedAt: !15063)
!15327 = !DILocation(line: 788, column: 352, scope: !9517, inlinedAt: !15063)
!15328 = !DILocation(line: 788, column: 339, scope: !9517, inlinedAt: !15063)
!15329 = !DILocation(line: 788, column: 257, scope: !9517, inlinedAt: !15063)
!15330 = !DILocation(line: 788, column: 369, scope: !9517, inlinedAt: !15063)
!15331 = !DILocation(line: 788, column: 368, scope: !9517, inlinedAt: !15063)
!15332 = !DILocation(line: 788, column: 366, scope: !9517, inlinedAt: !15063)
!15333 = !DILocation(line: 788, column: 390, scope: !9517, inlinedAt: !15063)
!15334 = !DILocation(line: 788, column: 400, scope: !9517, inlinedAt: !15063)
!15335 = !DILocation(line: 788, column: 380, scope: !9790, inlinedAt: !15063)
!15336 = !DILocation(line: 788, column: 411, scope: !9517, inlinedAt: !15063)
!15337 = !DILocation(line: 788, column: 409, scope: !9517, inlinedAt: !15063)
!15338 = !DILocation(line: 788, column: 378, scope: !9517, inlinedAt: !15063)
!15339 = !DILocation(line: 788, column: 430, scope: !9517, inlinedAt: !15063)
!15340 = !DILocation(line: 788, column: 424, scope: !9517, inlinedAt: !15063)
!15341 = !DILocation(line: 788, column: 422, scope: !9517, inlinedAt: !15063)
!15342 = !DILocation(line: 788, column: 451, scope: !9517, inlinedAt: !15063)
!15343 = !DILocation(line: 788, column: 445, scope: !9517, inlinedAt: !15063)
!15344 = !DILocation(line: 788, column: 443, scope: !9517, inlinedAt: !15063)
!15345 = !DILocation(line: 788, column: 466, scope: !9517, inlinedAt: !15063)
!15346 = !DILocation(line: 788, column: 476, scope: !9517, inlinedAt: !15063)
!15347 = !DILocation(line: 788, column: 480, scope: !9517, inlinedAt: !15063)
!15348 = !DILocation(line: 788, column: 483, scope: !9804, inlinedAt: !15063)
!15349 = !DILocation(line: 788, column: 485, scope: !9804, inlinedAt: !15063)
!15350 = !DILocation(line: 788, column: 466, scope: !9804, inlinedAt: !15063)
!15351 = !DILocation(line: 788, column: 505, scope: !9808, inlinedAt: !15063)
!15352 = !DILocation(line: 788, column: 523, scope: !9808, inlinedAt: !15063)
!15353 = !DILocation(line: 788, column: 535, scope: !9808, inlinedAt: !15063)
!15354 = !DILocation(line: 788, column: 532, scope: !9808, inlinedAt: !15063)
!15355 = !DILocation(line: 788, column: 520, scope: !9808, inlinedAt: !15063)
!15356 = !DILocation(line: 788, column: 504, scope: !9808, inlinedAt: !15063)
!15357 = !DILocation(line: 788, column: 548, scope: !9815, inlinedAt: !15063)
!15358 = !DILocation(line: 788, column: 560, scope: !9815, inlinedAt: !15063)
!15359 = !DILocation(line: 788, column: 557, scope: !9815, inlinedAt: !15063)
!15360 = !DILocation(line: 788, column: 504, scope: !9815, inlinedAt: !15063)
!15361 = !DILocation(line: 788, column: 573, scope: !9820, inlinedAt: !15063)
!15362 = !DILocation(line: 788, column: 504, scope: !9820, inlinedAt: !15063)
!15363 = !DILocation(line: 788, column: 504, scope: !9492, inlinedAt: !15063)
!15364 = !DILocation(line: 788, column: 501, scope: !9492, inlinedAt: !15063)
!15365 = !DILocation(line: 788, column: 645, scope: !9492, inlinedAt: !15063)
!15366 = !DILocation(line: 788, column: 649, scope: !9492, inlinedAt: !15063)
!15367 = !DILocation(line: 788, column: 659, scope: !9492, inlinedAt: !15063)
!15368 = !DILocation(line: 788, column: 668, scope: !9492, inlinedAt: !15063)
!15369 = !DILocation(line: 788, column: 656, scope: !9492, inlinedAt: !15063)
!15370 = !DILocation(line: 788, column: 677, scope: !9492, inlinedAt: !15063)
!15371 = !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !15063)
!15372 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15062)
!15373 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15062)
!15374 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15062)
!15375 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15062)
!15376 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15062)
!15377 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15062)
!15378 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15062)
!15379 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15062)
!15380 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15062)
!15381 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15062)
!15382 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15062)
!15383 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15062)
!15384 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15062)
!15385 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15062)
!15386 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15062)
!15387 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15062)
!15388 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15062)
!15389 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15062)
!15390 = !DILocation(line: 788, column: 685, scope: !9492, inlinedAt: !15063)
!15391 = !DILocation(line: 788, column: 694, scope: !9492, inlinedAt: !15063)
!15392 = !DILocation(line: 788, column: 681, scope: !9492, inlinedAt: !15063)
!15393 = !DILocation(line: 788, column: 599, scope: !9492, inlinedAt: !15063)
!15394 = !DILocation(line: 788, column: 711, scope: !9492, inlinedAt: !15063)
!15395 = !DILocation(line: 788, column: 710, scope: !9492, inlinedAt: !15063)
!15396 = !DILocation(line: 788, column: 708, scope: !9492, inlinedAt: !15063)
!15397 = !DILocation(line: 788, column: 732, scope: !9492, inlinedAt: !15063)
!15398 = !DILocation(line: 788, column: 742, scope: !9492, inlinedAt: !15063)
!15399 = !DILocation(line: 788, column: 722, scope: !9859, inlinedAt: !15063)
!15400 = !DILocation(line: 788, column: 753, scope: !9492, inlinedAt: !15063)
!15401 = !DILocation(line: 788, column: 751, scope: !9492, inlinedAt: !15063)
!15402 = !DILocation(line: 788, column: 720, scope: !9492, inlinedAt: !15063)
!15403 = !DILocation(line: 788, column: 772, scope: !9492, inlinedAt: !15063)
!15404 = !DILocation(line: 788, column: 766, scope: !9492, inlinedAt: !15063)
!15405 = !DILocation(line: 788, column: 764, scope: !9492, inlinedAt: !15063)
!15406 = !DILocation(line: 788, column: 793, scope: !9492, inlinedAt: !15063)
!15407 = !DILocation(line: 788, column: 787, scope: !9492, inlinedAt: !15063)
!15408 = !DILocation(line: 788, column: 785, scope: !9492, inlinedAt: !15063)
!15409 = !DILocation(line: 788, column: 804, scope: !9492, inlinedAt: !15063)
!15410 = !DILocation(line: 788, column: 806, scope: !9871, inlinedAt: !15063)
!15411 = !DILocation(line: 788, column: 827, scope: !9873, inlinedAt: !15063)
!15412 = !DILocation(line: 788, column: 822, scope: !9873, inlinedAt: !15063)
!15413 = !DILocation(line: 788, column: 844, scope: !9873, inlinedAt: !15063)
!15414 = !DILocation(line: 788, column: 862, scope: !9873, inlinedAt: !15063)
!15415 = !DILocation(line: 788, column: 874, scope: !9873, inlinedAt: !15063)
!15416 = !DILocation(line: 788, column: 871, scope: !9873, inlinedAt: !15063)
!15417 = !DILocation(line: 788, column: 859, scope: !9873, inlinedAt: !15063)
!15418 = !DILocation(line: 788, column: 843, scope: !9873, inlinedAt: !15063)
!15419 = !DILocation(line: 788, column: 881, scope: !9883, inlinedAt: !15063)
!15420 = !DILocation(line: 788, column: 893, scope: !9883, inlinedAt: !15063)
!15421 = !DILocation(line: 788, column: 890, scope: !9883, inlinedAt: !15063)
!15422 = !DILocation(line: 788, column: 843, scope: !9883, inlinedAt: !15063)
!15423 = !DILocation(line: 788, column: 900, scope: !9888, inlinedAt: !15063)
!15424 = !DILocation(line: 788, column: 843, scope: !9888, inlinedAt: !15063)
!15425 = !DILocation(line: 788, column: 843, scope: !9891, inlinedAt: !15063)
!15426 = !DILocation(line: 788, column: 840, scope: !9891, inlinedAt: !15063)
!15427 = !DILocation(line: 790, column: 18, scope: !9498, inlinedAt: !15063)
!15428 = !DILocation(line: 790, column: 6, scope: !9498, inlinedAt: !15063)
!15429 = !DILocation(line: 790, column: 10, scope: !9498, inlinedAt: !15063)
!15430 = !DILocation(line: 790, column: 16, scope: !9498, inlinedAt: !15063)
!15431 = !DILocation(line: 792, column: 12, scope: !9498, inlinedAt: !15063)
!15432 = !DILocation(line: 2279, column: 69, scope: !15064)
!15433 = !DILocation(line: 2279, column: 20, scope: !15064)
!15434 = !DILocation(line: 2279, column: 20, scope: !15228)
!15435 = !DILocation(line: 2279, column: 20, scope: !15232)
!15436 = !DILocation(line: 2279, column: 18, scope: !15232)
!15437 = !DILocation(line: 2280, column: 32, scope: !15065)
!15438 = !DILocation(line: 2280, column: 42, scope: !15065)
!15439 = !DILocation(line: 2280, column: 40, scope: !15065)
!15440 = !DILocation(line: 2280, column: 26, scope: !15065)
!15441 = !DILocation(line: 2280, column: 24, scope: !15065)
!15442 = !DILocation(line: 2285, column: 9, scope: !15065)
!15443 = !DILocation(line: 2286, column: 13, scope: !15042)
!15444 = !DILocation(line: 2286, column: 19, scope: !15042)
!15445 = !DILocation(line: 2286, column: 34, scope: !15042)
!15446 = !DILocation(line: 2286, column: 13, scope: !15043)
!15447 = !DILocation(line: 2287, column: 32, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15042, file: !1803, line: 2286, column: 50)
!15449 = !DILocation(line: 2287, column: 24, scope: !15448)
!15450 = !DILocation(line: 2287, column: 13, scope: !15448)
!15451 = !DILocation(line: 2287, column: 19, scope: !15448)
!15452 = !DILocation(line: 2287, column: 30, scope: !15448)
!15453 = !DILocation(line: 2288, column: 9, scope: !15448)
!15454 = !DILocation(line: 2289, column: 20, scope: !15040)
!15455 = !DILocation(line: 2289, column: 18, scope: !15040)
!15456 = !DILocation(line: 2289, column: 25, scope: !15457)
!15457 = !DILexicalBlockFile(scope: !15039, file: !1803, discriminator: 1)
!15458 = !DILocation(line: 2289, column: 29, scope: !15457)
!15459 = !DILocation(line: 2289, column: 34, scope: !15457)
!15460 = !DILocation(line: 2289, column: 38, scope: !15457)
!15461 = !DILocation(line: 2289, column: 27, scope: !15457)
!15462 = !DILocation(line: 2289, column: 13, scope: !15457)
!15463 = !DILocation(line: 2290, column: 26, scope: !15037)
!15464 = !DILocation(line: 2290, column: 22, scope: !15037)
!15465 = !DILocation(line: 2290, column: 31, scope: !15466)
!15466 = !DILexicalBlockFile(scope: !15036, file: !1803, discriminator: 1)
!15467 = !DILocation(line: 2290, column: 37, scope: !15466)
!15468 = !DILocation(line: 2290, column: 42, scope: !15466)
!15469 = !DILocation(line: 2290, column: 46, scope: !15466)
!15470 = !DILocation(line: 2290, column: 35, scope: !15466)
!15471 = !DILocation(line: 2290, column: 17, scope: !15466)
!15472 = !DILocation(line: 2291, column: 40, scope: !15034)
!15473 = !DILocation(line: 2291, column: 25, scope: !15034)
!15474 = !DILocation(line: 2291, column: 30, scope: !15034)
!15475 = !DILocation(line: 2291, column: 45, scope: !15034)
!15476 = !DILocation(line: 2291, column: 25, scope: !15035)
!15477 = !DILocation(line: 2292, column: 30, scope: !15032)
!15478 = !DILocation(line: 2292, column: 29, scope: !15033)
!15479 = !DILocalVariable(name: "t", scope: !15031, file: !1803, line: 2293, type: !1012)
!15480 = !DILocation(line: 2293, column: 33, scope: !15031)
!15481 = !DILocation(line: 2293, column: 46, scope: !15031)
!15482 = !DILocation(line: 2293, column: 67, scope: !15031)
!15483 = !DILocation(line: 2293, column: 37, scope: !15031)
!15484 = !DILocation(line: 785, column: 30, scope: !9498, inlinedAt: !15030)
!15485 = !DILocation(line: 785, column: 34, scope: !9498, inlinedAt: !15030)
!15486 = !DILocation(line: 785, column: 118, scope: !9498, inlinedAt: !15030)
!15487 = !DILocation(line: 785, column: 122, scope: !9498, inlinedAt: !15030)
!15488 = !DILocation(line: 786, column: 60, scope: !9498, inlinedAt: !15030)
!15489 = !DILocation(line: 786, column: 64, scope: !9498, inlinedAt: !15030)
!15490 = !DILocation(line: 786, column: 74, scope: !9498, inlinedAt: !15030)
!15491 = !DILocation(line: 786, column: 83, scope: !9498, inlinedAt: !15030)
!15492 = !DILocation(line: 786, column: 71, scope: !9498, inlinedAt: !15030)
!15493 = !DILocation(line: 786, column: 92, scope: !9498, inlinedAt: !15030)
!15494 = !DILocation(line: 786, column: 16, scope: !9498, inlinedAt: !15030)
!15495 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15049)
!15496 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15049)
!15497 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15049)
!15498 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15049)
!15499 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15049)
!15500 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15049)
!15501 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15049)
!15502 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15049)
!15503 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15049)
!15504 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15049)
!15505 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15049)
!15506 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15049)
!15507 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15049)
!15508 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15049)
!15509 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15049)
!15510 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15049)
!15511 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15049)
!15512 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15049)
!15513 = !DILocation(line: 786, column: 100, scope: !9498, inlinedAt: !15030)
!15514 = !DILocation(line: 786, column: 109, scope: !9498, inlinedAt: !15030)
!15515 = !DILocation(line: 786, column: 96, scope: !9498, inlinedAt: !15030)
!15516 = !DILocation(line: 786, column: 14, scope: !9498, inlinedAt: !15030)
!15517 = !DILocation(line: 788, column: 64, scope: !9721, inlinedAt: !15030)
!15518 = !DILocation(line: 788, column: 74, scope: !9721, inlinedAt: !15030)
!15519 = !DILocation(line: 788, column: 54, scope: !9721, inlinedAt: !15030)
!15520 = !DILocation(line: 788, column: 52, scope: !9721, inlinedAt: !15030)
!15521 = !DILocation(line: 788, column: 94, scope: !9721, inlinedAt: !15030)
!15522 = !DILocation(line: 788, column: 88, scope: !9721, inlinedAt: !15030)
!15523 = !DILocation(line: 788, column: 86, scope: !9721, inlinedAt: !15030)
!15524 = !DILocation(line: 788, column: 115, scope: !9721, inlinedAt: !15030)
!15525 = !DILocation(line: 788, column: 109, scope: !9721, inlinedAt: !15030)
!15526 = !DILocation(line: 788, column: 107, scope: !9721, inlinedAt: !15030)
!15527 = !DILocation(line: 788, column: 130, scope: !9721, inlinedAt: !15030)
!15528 = !DILocation(line: 788, column: 140, scope: !9721, inlinedAt: !15030)
!15529 = !DILocation(line: 788, column: 144, scope: !9721, inlinedAt: !15030)
!15530 = !DILocation(line: 788, column: 147, scope: !9735, inlinedAt: !15030)
!15531 = !DILocation(line: 788, column: 149, scope: !9735, inlinedAt: !15030)
!15532 = !DILocation(line: 788, column: 130, scope: !9735, inlinedAt: !15030)
!15533 = !DILocation(line: 788, column: 169, scope: !9739, inlinedAt: !15030)
!15534 = !DILocation(line: 788, column: 187, scope: !9739, inlinedAt: !15030)
!15535 = !DILocation(line: 788, column: 199, scope: !9739, inlinedAt: !15030)
!15536 = !DILocation(line: 788, column: 196, scope: !9739, inlinedAt: !15030)
!15537 = !DILocation(line: 788, column: 184, scope: !9739, inlinedAt: !15030)
!15538 = !DILocation(line: 788, column: 168, scope: !9739, inlinedAt: !15030)
!15539 = !DILocation(line: 788, column: 209, scope: !9746, inlinedAt: !15030)
!15540 = !DILocation(line: 788, column: 221, scope: !9746, inlinedAt: !15030)
!15541 = !DILocation(line: 788, column: 218, scope: !9746, inlinedAt: !15030)
!15542 = !DILocation(line: 788, column: 168, scope: !9746, inlinedAt: !15030)
!15543 = !DILocation(line: 788, column: 231, scope: !9751, inlinedAt: !15030)
!15544 = !DILocation(line: 788, column: 168, scope: !9751, inlinedAt: !15030)
!15545 = !DILocation(line: 788, column: 168, scope: !9517, inlinedAt: !15030)
!15546 = !DILocation(line: 788, column: 165, scope: !9517, inlinedAt: !15030)
!15547 = !DILocation(line: 788, column: 303, scope: !9517, inlinedAt: !15030)
!15548 = !DILocation(line: 788, column: 307, scope: !9517, inlinedAt: !15030)
!15549 = !DILocation(line: 788, column: 317, scope: !9517, inlinedAt: !15030)
!15550 = !DILocation(line: 788, column: 326, scope: !9517, inlinedAt: !15030)
!15551 = !DILocation(line: 788, column: 314, scope: !9517, inlinedAt: !15030)
!15552 = !DILocation(line: 788, column: 335, scope: !9517, inlinedAt: !15030)
!15553 = !DILocation(line: 788, column: 259, scope: !9517, inlinedAt: !15030)
!15554 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15047)
!15555 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15047)
!15556 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15047)
!15557 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15047)
!15558 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15047)
!15559 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15047)
!15560 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15047)
!15561 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15047)
!15562 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15047)
!15563 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15047)
!15564 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15047)
!15565 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15047)
!15566 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15047)
!15567 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15047)
!15568 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15047)
!15569 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15047)
!15570 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15047)
!15571 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15047)
!15572 = !DILocation(line: 788, column: 343, scope: !9517, inlinedAt: !15030)
!15573 = !DILocation(line: 788, column: 352, scope: !9517, inlinedAt: !15030)
!15574 = !DILocation(line: 788, column: 339, scope: !9517, inlinedAt: !15030)
!15575 = !DILocation(line: 788, column: 257, scope: !9517, inlinedAt: !15030)
!15576 = !DILocation(line: 788, column: 369, scope: !9517, inlinedAt: !15030)
!15577 = !DILocation(line: 788, column: 368, scope: !9517, inlinedAt: !15030)
!15578 = !DILocation(line: 788, column: 366, scope: !9517, inlinedAt: !15030)
!15579 = !DILocation(line: 788, column: 390, scope: !9517, inlinedAt: !15030)
!15580 = !DILocation(line: 788, column: 400, scope: !9517, inlinedAt: !15030)
!15581 = !DILocation(line: 788, column: 380, scope: !9790, inlinedAt: !15030)
!15582 = !DILocation(line: 788, column: 411, scope: !9517, inlinedAt: !15030)
!15583 = !DILocation(line: 788, column: 409, scope: !9517, inlinedAt: !15030)
!15584 = !DILocation(line: 788, column: 378, scope: !9517, inlinedAt: !15030)
!15585 = !DILocation(line: 788, column: 430, scope: !9517, inlinedAt: !15030)
!15586 = !DILocation(line: 788, column: 424, scope: !9517, inlinedAt: !15030)
!15587 = !DILocation(line: 788, column: 422, scope: !9517, inlinedAt: !15030)
!15588 = !DILocation(line: 788, column: 451, scope: !9517, inlinedAt: !15030)
!15589 = !DILocation(line: 788, column: 445, scope: !9517, inlinedAt: !15030)
!15590 = !DILocation(line: 788, column: 443, scope: !9517, inlinedAt: !15030)
!15591 = !DILocation(line: 788, column: 466, scope: !9517, inlinedAt: !15030)
!15592 = !DILocation(line: 788, column: 476, scope: !9517, inlinedAt: !15030)
!15593 = !DILocation(line: 788, column: 480, scope: !9517, inlinedAt: !15030)
!15594 = !DILocation(line: 788, column: 483, scope: !9804, inlinedAt: !15030)
!15595 = !DILocation(line: 788, column: 485, scope: !9804, inlinedAt: !15030)
!15596 = !DILocation(line: 788, column: 466, scope: !9804, inlinedAt: !15030)
!15597 = !DILocation(line: 788, column: 505, scope: !9808, inlinedAt: !15030)
!15598 = !DILocation(line: 788, column: 523, scope: !9808, inlinedAt: !15030)
!15599 = !DILocation(line: 788, column: 535, scope: !9808, inlinedAt: !15030)
!15600 = !DILocation(line: 788, column: 532, scope: !9808, inlinedAt: !15030)
!15601 = !DILocation(line: 788, column: 520, scope: !9808, inlinedAt: !15030)
!15602 = !DILocation(line: 788, column: 504, scope: !9808, inlinedAt: !15030)
!15603 = !DILocation(line: 788, column: 548, scope: !9815, inlinedAt: !15030)
!15604 = !DILocation(line: 788, column: 560, scope: !9815, inlinedAt: !15030)
!15605 = !DILocation(line: 788, column: 557, scope: !9815, inlinedAt: !15030)
!15606 = !DILocation(line: 788, column: 504, scope: !9815, inlinedAt: !15030)
!15607 = !DILocation(line: 788, column: 573, scope: !9820, inlinedAt: !15030)
!15608 = !DILocation(line: 788, column: 504, scope: !9820, inlinedAt: !15030)
!15609 = !DILocation(line: 788, column: 504, scope: !9492, inlinedAt: !15030)
!15610 = !DILocation(line: 788, column: 501, scope: !9492, inlinedAt: !15030)
!15611 = !DILocation(line: 788, column: 645, scope: !9492, inlinedAt: !15030)
!15612 = !DILocation(line: 788, column: 649, scope: !9492, inlinedAt: !15030)
!15613 = !DILocation(line: 788, column: 659, scope: !9492, inlinedAt: !15030)
!15614 = !DILocation(line: 788, column: 668, scope: !9492, inlinedAt: !15030)
!15615 = !DILocation(line: 788, column: 656, scope: !9492, inlinedAt: !15030)
!15616 = !DILocation(line: 788, column: 677, scope: !9492, inlinedAt: !15030)
!15617 = !DILocation(line: 788, column: 601, scope: !9492, inlinedAt: !15030)
!15618 = !DILocation(line: 68, column: 16, scope: !6127, inlinedAt: !15029)
!15619 = !DILocation(line: 68, column: 19, scope: !6127, inlinedAt: !15029)
!15620 = !DILocation(line: 68, column: 24, scope: !6127, inlinedAt: !15029)
!15621 = !DILocation(line: 68, column: 38, scope: !6127, inlinedAt: !15029)
!15622 = !DILocation(line: 68, column: 41, scope: !6127, inlinedAt: !15029)
!15623 = !DILocation(line: 68, column: 46, scope: !6127, inlinedAt: !15029)
!15624 = !DILocation(line: 68, column: 34, scope: !6127, inlinedAt: !15029)
!15625 = !DILocation(line: 68, column: 57, scope: !6127, inlinedAt: !15029)
!15626 = !DILocation(line: 68, column: 69, scope: !6127, inlinedAt: !15029)
!15627 = !DILocation(line: 68, column: 72, scope: !6127, inlinedAt: !15029)
!15628 = !DILocation(line: 68, column: 79, scope: !6127, inlinedAt: !15029)
!15629 = !DILocation(line: 68, column: 84, scope: !6127, inlinedAt: !15029)
!15630 = !DILocation(line: 68, column: 99, scope: !6127, inlinedAt: !15029)
!15631 = !DILocation(line: 68, column: 102, scope: !6127, inlinedAt: !15029)
!15632 = !DILocation(line: 68, column: 109, scope: !6127, inlinedAt: !15029)
!15633 = !DILocation(line: 68, column: 114, scope: !6127, inlinedAt: !15029)
!15634 = !DILocation(line: 68, column: 94, scope: !6127, inlinedAt: !15029)
!15635 = !DILocation(line: 68, column: 63, scope: !6127, inlinedAt: !15029)
!15636 = !DILocation(line: 788, column: 685, scope: !9492, inlinedAt: !15030)
!15637 = !DILocation(line: 788, column: 694, scope: !9492, inlinedAt: !15030)
!15638 = !DILocation(line: 788, column: 681, scope: !9492, inlinedAt: !15030)
!15639 = !DILocation(line: 788, column: 599, scope: !9492, inlinedAt: !15030)
!15640 = !DILocation(line: 788, column: 711, scope: !9492, inlinedAt: !15030)
!15641 = !DILocation(line: 788, column: 710, scope: !9492, inlinedAt: !15030)
!15642 = !DILocation(line: 788, column: 708, scope: !9492, inlinedAt: !15030)
!15643 = !DILocation(line: 788, column: 732, scope: !9492, inlinedAt: !15030)
!15644 = !DILocation(line: 788, column: 742, scope: !9492, inlinedAt: !15030)
!15645 = !DILocation(line: 788, column: 722, scope: !9859, inlinedAt: !15030)
!15646 = !DILocation(line: 788, column: 753, scope: !9492, inlinedAt: !15030)
!15647 = !DILocation(line: 788, column: 751, scope: !9492, inlinedAt: !15030)
!15648 = !DILocation(line: 788, column: 720, scope: !9492, inlinedAt: !15030)
!15649 = !DILocation(line: 788, column: 772, scope: !9492, inlinedAt: !15030)
!15650 = !DILocation(line: 788, column: 766, scope: !9492, inlinedAt: !15030)
!15651 = !DILocation(line: 788, column: 764, scope: !9492, inlinedAt: !15030)
!15652 = !DILocation(line: 788, column: 793, scope: !9492, inlinedAt: !15030)
!15653 = !DILocation(line: 788, column: 787, scope: !9492, inlinedAt: !15030)
!15654 = !DILocation(line: 788, column: 785, scope: !9492, inlinedAt: !15030)
!15655 = !DILocation(line: 788, column: 804, scope: !9492, inlinedAt: !15030)
!15656 = !DILocation(line: 788, column: 806, scope: !9871, inlinedAt: !15030)
!15657 = !DILocation(line: 788, column: 827, scope: !9873, inlinedAt: !15030)
!15658 = !DILocation(line: 788, column: 822, scope: !9873, inlinedAt: !15030)
!15659 = !DILocation(line: 788, column: 844, scope: !9873, inlinedAt: !15030)
!15660 = !DILocation(line: 788, column: 862, scope: !9873, inlinedAt: !15030)
!15661 = !DILocation(line: 788, column: 874, scope: !9873, inlinedAt: !15030)
!15662 = !DILocation(line: 788, column: 871, scope: !9873, inlinedAt: !15030)
!15663 = !DILocation(line: 788, column: 859, scope: !9873, inlinedAt: !15030)
!15664 = !DILocation(line: 788, column: 843, scope: !9873, inlinedAt: !15030)
!15665 = !DILocation(line: 788, column: 881, scope: !9883, inlinedAt: !15030)
!15666 = !DILocation(line: 788, column: 893, scope: !9883, inlinedAt: !15030)
!15667 = !DILocation(line: 788, column: 890, scope: !9883, inlinedAt: !15030)
!15668 = !DILocation(line: 788, column: 843, scope: !9883, inlinedAt: !15030)
!15669 = !DILocation(line: 788, column: 900, scope: !9888, inlinedAt: !15030)
!15670 = !DILocation(line: 788, column: 843, scope: !9888, inlinedAt: !15030)
!15671 = !DILocation(line: 788, column: 843, scope: !9891, inlinedAt: !15030)
!15672 = !DILocation(line: 788, column: 840, scope: !9891, inlinedAt: !15030)
!15673 = !DILocation(line: 790, column: 18, scope: !9498, inlinedAt: !15030)
!15674 = !DILocation(line: 790, column: 6, scope: !9498, inlinedAt: !15030)
!15675 = !DILocation(line: 790, column: 10, scope: !9498, inlinedAt: !15030)
!15676 = !DILocation(line: 790, column: 16, scope: !9498, inlinedAt: !15030)
!15677 = !DILocation(line: 792, column: 12, scope: !9498, inlinedAt: !15030)
!15678 = !DILocation(line: 2293, column: 80, scope: !15031)
!15679 = !DILocation(line: 2294, column: 33, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15031, file: !1803, line: 2294, column: 33)
!15681 = !DILocation(line: 2294, column: 33, scope: !15031)
!15682 = !DILocalVariable(name: "s", scope: !15683, file: !1803, line: 2295, type: !1012)
!15683 = distinct !DILexicalBlock(scope: !15680, file: !1803, line: 2294, column: 36)
!15684 = !DILocation(line: 2295, column: 37, scope: !15683)
!15685 = !DILocation(line: 2296, column: 45, scope: !15683)
!15686 = !DILocation(line: 2296, column: 42, scope: !15683)
!15687 = !DILocation(line: 2296, column: 35, scope: !15683)
!15688 = !DILocation(line: 2297, column: 37, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15683, file: !1803, line: 2297, column: 37)
!15690 = !DILocation(line: 2297, column: 37, scope: !15683)
!15691 = !DILocation(line: 2298, column: 47, scope: !15692)
!15692 = distinct !DILexicalBlock(scope: !15689, file: !1803, line: 2297, column: 43)
!15693 = !DILocation(line: 2298, column: 49, scope: !15692)
!15694 = !DILocation(line: 2298, column: 44, scope: !15692)
!15695 = !DILocation(line: 2298, column: 39, scope: !15692)
!15696 = !DILocation(line: 2299, column: 39, scope: !15692)
!15697 = !DILocation(line: 2300, column: 33, scope: !15692)
!15698 = !DILocation(line: 2301, column: 52, scope: !15683)
!15699 = !DILocation(line: 2301, column: 62, scope: !15683)
!15700 = !DILocation(line: 2301, column: 60, scope: !15683)
!15701 = !DILocation(line: 2301, column: 46, scope: !15683)
!15702 = !DILocation(line: 2301, column: 68, scope: !15683)
!15703 = !DILocation(line: 2301, column: 66, scope: !15683)
!15704 = !DILocation(line: 2301, column: 44, scope: !15683)
!15705 = !DILocation(line: 2306, column: 29, scope: !15683)
!15706 = !DILocation(line: 2307, column: 25, scope: !15031)
!15707 = !DILocation(line: 2308, column: 46, scope: !15033)
!15708 = !DILocation(line: 2308, column: 39, scope: !15033)
!15709 = !DILocation(line: 2308, column: 25, scope: !15033)
!15710 = !DILocation(line: 2308, column: 36, scope: !15033)
!15711 = !DILocation(line: 2308, column: 31, scope: !15033)
!15712 = !DILocation(line: 2308, column: 44, scope: !15033)
!15713 = !DILocation(line: 2309, column: 21, scope: !15033)
!15714 = !DILocation(line: 2310, column: 17, scope: !15035)
!15715 = !DILocation(line: 2290, column: 58, scope: !15716)
!15716 = !DILexicalBlockFile(scope: !15036, file: !1803, discriminator: 2)
!15717 = !DILocation(line: 2290, column: 65, scope: !15716)
!15718 = !DILocation(line: 2290, column: 17, scope: !15716)
!15719 = distinct !{!15719, !15720}
!15720 = !DILocation(line: 2290, column: 17, scope: !15038)
!15721 = !DILocation(line: 2311, column: 13, scope: !15038)
!15722 = !DILocation(line: 2289, column: 58, scope: !15723)
!15723 = !DILexicalBlockFile(scope: !15039, file: !1803, discriminator: 2)
!15724 = !DILocation(line: 2289, column: 13, scope: !15723)
!15725 = distinct !{!15725, !15726}
!15726 = !DILocation(line: 2289, column: 13, scope: !15041)
!15727 = !DILocation(line: 2313, column: 5, scope: !15043)
!15728 = !DILocation(line: 2272, column: 32, scope: !15729)
!15729 = !DILexicalBlockFile(scope: !15044, file: !1803, discriminator: 2)
!15730 = !DILocation(line: 2272, column: 5, scope: !15729)
!15731 = distinct !{!15731, !15732}
!15732 = !DILocation(line: 2272, column: 5, scope: !15027)
!15733 = !DILocation(line: 2314, column: 5, scope: !15027)
!15734 = !DILocation(line: 2315, column: 1, scope: !15027)
!15735 = distinct !DISubprogram(name: "skip_data_stream_element", scope: !1803, file: !1803, line: 1248, type: !14816, isLocal: true, isDefinition: true, scopeLine: 1249, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!15736 = !DILocalVariable(name: "ac", arg: 1, scope: !15735, file: !1803, line: 1248, type: !2065)
!15737 = !DILocation(line: 1248, column: 49, scope: !15735)
!15738 = !DILocalVariable(name: "gb", arg: 2, scope: !15735, file: !1803, line: 1248, type: !2043)
!15739 = !DILocation(line: 1248, column: 68, scope: !15735)
!15740 = !DILocalVariable(name: "byte_align", scope: !15735, file: !1803, line: 1250, type: !1012)
!15741 = !DILocation(line: 1250, column: 9, scope: !15735)
!15742 = !DILocation(line: 1250, column: 32, scope: !15735)
!15743 = !DILocation(line: 1250, column: 22, scope: !15735)
!15744 = !DILocalVariable(name: "count", scope: !15735, file: !1803, line: 1251, type: !1012)
!15745 = !DILocation(line: 1251, column: 9, scope: !15735)
!15746 = !DILocation(line: 1251, column: 26, scope: !15735)
!15747 = !DILocation(line: 1251, column: 17, scope: !15735)
!15748 = !DILocation(line: 1252, column: 9, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15735, file: !1803, line: 1252, column: 9)
!15750 = !DILocation(line: 1252, column: 15, scope: !15749)
!15751 = !DILocation(line: 1252, column: 9, scope: !15735)
!15752 = !DILocation(line: 1253, column: 27, scope: !15749)
!15753 = !DILocation(line: 1253, column: 18, scope: !15749)
!15754 = !DILocation(line: 1253, column: 15, scope: !15749)
!15755 = !DILocation(line: 1253, column: 9, scope: !15749)
!15756 = !DILocation(line: 1254, column: 9, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15735, file: !1803, line: 1254, column: 9)
!15758 = !DILocation(line: 1254, column: 9, scope: !15735)
!15759 = !DILocation(line: 1255, column: 24, scope: !15757)
!15760 = !DILocation(line: 1255, column: 9, scope: !15757)
!15761 = !DILocation(line: 1257, column: 23, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15735, file: !1803, line: 1257, column: 9)
!15763 = !DILocation(line: 1257, column: 9, scope: !15762)
!15764 = !DILocation(line: 1257, column: 33, scope: !15762)
!15765 = !DILocation(line: 1257, column: 31, scope: !15762)
!15766 = !DILocation(line: 1257, column: 27, scope: !15762)
!15767 = !DILocation(line: 1257, column: 9, scope: !15735)
!15768 = !DILocation(line: 1258, column: 16, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15762, file: !1803, line: 1257, column: 40)
!15770 = !DILocation(line: 1258, column: 20, scope: !15769)
!15771 = !DILocation(line: 1258, column: 9, scope: !15769)
!15772 = !DILocation(line: 1259, column: 9, scope: !15769)
!15773 = !DILocation(line: 1261, column: 20, scope: !15735)
!15774 = !DILocation(line: 1261, column: 28, scope: !15735)
!15775 = !DILocation(line: 1261, column: 26, scope: !15735)
!15776 = !DILocation(line: 1261, column: 5, scope: !15735)
!15777 = !DILocation(line: 1262, column: 5, scope: !15735)
!15778 = !DILocation(line: 1263, column: 1, scope: !15735)
!15779 = distinct !DISubprogram(name: "pop_output_configuration", scope: !1803, file: !1803, line: 424, type: !3541, isLocal: true, isDefinition: true, scopeLine: 424, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!15780 = !DILocalVariable(name: "ac", arg: 1, scope: !15779, file: !1803, line: 424, type: !2065)
!15781 = !DILocation(line: 424, column: 50, scope: !15779)
!15782 = !DILocation(line: 425, column: 9, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15779, file: !1803, line: 425, column: 9)
!15784 = !DILocation(line: 425, column: 13, scope: !15783)
!15785 = !DILocation(line: 425, column: 19, scope: !15783)
!15786 = !DILocation(line: 425, column: 26, scope: !15783)
!15787 = !DILocation(line: 425, column: 39, scope: !15783)
!15788 = !DILocation(line: 425, column: 42, scope: !15789)
!15789 = !DILexicalBlockFile(scope: !15783, file: !1803, discriminator: 1)
!15790 = !DILocation(line: 425, column: 46, scope: !15789)
!15791 = !DILocation(line: 425, column: 52, scope: !15789)
!15792 = !DILocation(line: 425, column: 59, scope: !15789)
!15793 = !DILocation(line: 425, column: 9, scope: !15789)
!15794 = !DILocation(line: 426, column: 9, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15783, file: !1803, line: 425, column: 71)
!15796 = !DILocation(line: 426, column: 13, scope: !15795)
!15797 = !DILocation(line: 426, column: 21, scope: !15795)
!15798 = !DILocation(line: 426, column: 25, scope: !15795)
!15799 = !DILocation(line: 427, column: 31, scope: !15795)
!15800 = !DILocation(line: 427, column: 35, scope: !15795)
!15801 = !DILocation(line: 427, column: 41, scope: !15795)
!15802 = !DILocation(line: 427, column: 9, scope: !15795)
!15803 = !DILocation(line: 427, column: 13, scope: !15795)
!15804 = !DILocation(line: 427, column: 20, scope: !15795)
!15805 = !DILocation(line: 427, column: 29, scope: !15795)
!15806 = !DILocation(line: 428, column: 37, scope: !15795)
!15807 = !DILocation(line: 428, column: 41, scope: !15795)
!15808 = !DILocation(line: 428, column: 47, scope: !15795)
!15809 = !DILocation(line: 428, column: 9, scope: !15795)
!15810 = !DILocation(line: 428, column: 13, scope: !15795)
!15811 = !DILocation(line: 428, column: 20, scope: !15795)
!15812 = !DILocation(line: 428, column: 35, scope: !15795)
!15813 = !DILocation(line: 429, column: 26, scope: !15795)
!15814 = !DILocation(line: 429, column: 30, scope: !15795)
!15815 = !DILocation(line: 429, column: 34, scope: !15795)
!15816 = !DILocation(line: 429, column: 40, scope: !15795)
!15817 = !DILocation(line: 429, column: 52, scope: !15795)
!15818 = !DILocation(line: 429, column: 56, scope: !15795)
!15819 = !DILocation(line: 429, column: 62, scope: !15795)
!15820 = !DILocation(line: 430, column: 26, scope: !15795)
!15821 = !DILocation(line: 430, column: 30, scope: !15795)
!15822 = !DILocation(line: 430, column: 36, scope: !15795)
!15823 = !DILocation(line: 429, column: 9, scope: !15795)
!15824 = !DILocation(line: 431, column: 5, scope: !15795)
!15825 = !DILocation(line: 432, column: 1, scope: !15779)
!15826 = distinct !DISubprogram(name: "decode_extension_payload", scope: !1803, file: !1803, line: 2421, type: !15827, isLocal: true, isDefinition: true, scopeLine: 2423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!15827 = !DISubroutineType(types: !15828)
!15828 = !{!1012, !2065, !2043, !1012, !2095, !930}
!15829 = !DILocalVariable(name: "ac", arg: 1, scope: !15826, file: !1803, line: 2421, type: !2065)
!15830 = !DILocation(line: 2421, column: 49, scope: !15826)
!15831 = !DILocalVariable(name: "gb", arg: 2, scope: !15826, file: !1803, line: 2421, type: !2043)
!15832 = !DILocation(line: 2421, column: 68, scope: !15826)
!15833 = !DILocalVariable(name: "cnt", arg: 3, scope: !15826, file: !1803, line: 2421, type: !1012)
!15834 = !DILocation(line: 2421, column: 76, scope: !15826)
!15835 = !DILocalVariable(name: "che", arg: 4, scope: !15826, file: !1803, line: 2422, type: !2095)
!15836 = !DILocation(line: 2422, column: 53, scope: !15826)
!15837 = !DILocalVariable(name: "elem_type", arg: 5, scope: !15826, file: !1803, line: 2422, type: !930)
!15838 = !DILocation(line: 2422, column: 80, scope: !15826)
!15839 = !DILocalVariable(name: "crc_flag", scope: !15826, file: !1803, line: 2424, type: !1012)
!15840 = !DILocation(line: 2424, column: 9, scope: !15826)
!15841 = !DILocalVariable(name: "res", scope: !15826, file: !1803, line: 2425, type: !1012)
!15842 = !DILocation(line: 2425, column: 9, scope: !15826)
!15843 = !DILocation(line: 2425, column: 15, scope: !15826)
!15844 = !DILocalVariable(name: "type", scope: !15826, file: !1803, line: 2426, type: !1012)
!15845 = !DILocation(line: 2426, column: 9, scope: !15826)
!15846 = !DILocation(line: 2426, column: 25, scope: !15826)
!15847 = !DILocation(line: 2426, column: 16, scope: !15826)
!15848 = !DILocation(line: 2428, column: 9, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15826, file: !1803, line: 2428, column: 9)
!15850 = !DILocation(line: 2428, column: 13, scope: !15849)
!15851 = !DILocation(line: 2428, column: 20, scope: !15849)
!15852 = !DILocation(line: 2428, column: 26, scope: !15849)
!15853 = !DILocation(line: 2428, column: 9, scope: !15826)
!15854 = !DILocation(line: 2429, column: 16, scope: !15849)
!15855 = !DILocation(line: 2429, column: 20, scope: !15849)
!15856 = !DILocation(line: 2429, column: 62, scope: !15849)
!15857 = !DILocation(line: 2429, column: 68, scope: !15849)
!15858 = !DILocation(line: 2429, column: 9, scope: !15849)
!15859 = !DILocation(line: 2431, column: 13, scope: !15826)
!15860 = !DILocation(line: 2431, column: 5, scope: !15826)
!15861 = !DILocation(line: 2433, column: 17, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15826, file: !1803, line: 2431, column: 19)
!15863 = !DILocation(line: 2433, column: 9, scope: !15862)
!15864 = !DILocation(line: 2435, column: 14, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15862, file: !1803, line: 2435, column: 13)
!15866 = !DILocation(line: 2435, column: 13, scope: !15862)
!15867 = !DILocation(line: 2436, column: 20, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !1803, line: 2435, column: 19)
!15869 = !DILocation(line: 2436, column: 24, scope: !15868)
!15870 = !DILocation(line: 2436, column: 13, scope: !15868)
!15871 = !DILocation(line: 2437, column: 20, scope: !15868)
!15872 = !DILocation(line: 2437, column: 13, scope: !15868)
!15873 = !DILocation(line: 2438, column: 20, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15865, file: !1803, line: 2438, column: 20)
!15875 = !DILocation(line: 2438, column: 24, scope: !15874)
!15876 = !DILocation(line: 2438, column: 30, scope: !15874)
!15877 = !DILocation(line: 2438, column: 35, scope: !15874)
!15878 = !DILocation(line: 2438, column: 20, scope: !15865)
!15879 = !DILocation(line: 2439, column: 18, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !1803, line: 2439, column: 17)
!15881 = distinct !DILexicalBlock(scope: !15874, file: !1803, line: 2438, column: 55)
!15882 = !DILocation(line: 2439, column: 22, scope: !15880)
!15883 = !DILocation(line: 2439, column: 17, scope: !15881)
!15884 = !DILocation(line: 2440, column: 45, scope: !15880)
!15885 = !DILocation(line: 2440, column: 49, scope: !15880)
!15886 = !DILocation(line: 2440, column: 15, scope: !15880)
!15887 = !DILocation(line: 2442, column: 13, scope: !15881)
!15888 = !DILocation(line: 2442, column: 17, scope: !15881)
!15889 = !DILocation(line: 2442, column: 32, scope: !15881)
!15890 = !DILocation(line: 2443, column: 28, scope: !15881)
!15891 = !DILocation(line: 2443, column: 36, scope: !15881)
!15892 = !DILocation(line: 2443, column: 34, scope: !15881)
!15893 = !DILocation(line: 2443, column: 40, scope: !15881)
!15894 = !DILocation(line: 2443, column: 13, scope: !15881)
!15895 = !DILocation(line: 2444, column: 20, scope: !15881)
!15896 = !DILocation(line: 2444, column: 13, scope: !15881)
!15897 = !DILocation(line: 2445, column: 21, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15874, file: !1803, line: 2445, column: 20)
!15899 = !DILocation(line: 2445, column: 25, scope: !15898)
!15900 = !DILocation(line: 2445, column: 31, scope: !15898)
!15901 = !DILocation(line: 2445, column: 36, scope: !15898)
!15902 = !DILocation(line: 2445, column: 20, scope: !15874)
!15903 = !DILocation(line: 2446, column: 20, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15898, file: !1803, line: 2445, column: 41)
!15905 = !DILocation(line: 2446, column: 24, scope: !15904)
!15906 = !DILocation(line: 2446, column: 13, scope: !15904)
!15907 = !DILocation(line: 2447, column: 28, scope: !15904)
!15908 = !DILocation(line: 2447, column: 36, scope: !15904)
!15909 = !DILocation(line: 2447, column: 34, scope: !15904)
!15910 = !DILocation(line: 2447, column: 40, scope: !15904)
!15911 = !DILocation(line: 2447, column: 13, scope: !15904)
!15912 = !DILocation(line: 2448, column: 20, scope: !15904)
!15913 = !DILocation(line: 2448, column: 13, scope: !15904)
!15914 = !DILocation(line: 2449, column: 20, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15898, file: !1803, line: 2449, column: 20)
!15916 = !DILocation(line: 2449, column: 24, scope: !15915)
!15917 = !DILocation(line: 2449, column: 30, scope: !15915)
!15918 = !DILocation(line: 2449, column: 35, scope: !15915)
!15919 = !DILocation(line: 2449, column: 39, scope: !15915)
!15920 = !DILocation(line: 2449, column: 45, scope: !15915)
!15921 = !DILocation(line: 2449, column: 48, scope: !15922)
!15922 = !DILexicalBlockFile(scope: !15915, file: !1803, discriminator: 1)
!15923 = !DILocation(line: 2449, column: 52, scope: !15922)
!15924 = !DILocation(line: 2449, column: 58, scope: !15922)
!15925 = !DILocation(line: 2449, column: 65, scope: !15922)
!15926 = !DILocation(line: 2449, column: 20, scope: !15922)
!15927 = !DILocation(line: 2450, column: 20, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15915, file: !1803, line: 2449, column: 79)
!15929 = !DILocation(line: 2450, column: 24, scope: !15928)
!15930 = !DILocation(line: 2450, column: 13, scope: !15928)
!15931 = !DILocation(line: 2451, column: 28, scope: !15928)
!15932 = !DILocation(line: 2451, column: 36, scope: !15928)
!15933 = !DILocation(line: 2451, column: 34, scope: !15928)
!15934 = !DILocation(line: 2451, column: 40, scope: !15928)
!15935 = !DILocation(line: 2451, column: 13, scope: !15928)
!15936 = !DILocation(line: 2452, column: 20, scope: !15928)
!15937 = !DILocation(line: 2452, column: 13, scope: !15928)
!15938 = !DILocation(line: 2453, column: 20, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15915, file: !1803, line: 2453, column: 20)
!15940 = !DILocation(line: 2453, column: 24, scope: !15939)
!15941 = !DILocation(line: 2453, column: 30, scope: !15939)
!15942 = !DILocation(line: 2453, column: 35, scope: !15939)
!15943 = !DILocation(line: 2453, column: 38, scope: !15939)
!15944 = !DILocation(line: 2453, column: 44, scope: !15939)
!15945 = !DILocation(line: 2453, column: 47, scope: !15946)
!15946 = !DILexicalBlockFile(scope: !15939, file: !1803, discriminator: 1)
!15947 = !DILocation(line: 2453, column: 51, scope: !15946)
!15948 = !DILocation(line: 2453, column: 57, scope: !15946)
!15949 = !DILocation(line: 2453, column: 64, scope: !15946)
!15950 = !DILocation(line: 2453, column: 76, scope: !15946)
!15951 = !DILocation(line: 2453, column: 79, scope: !15952)
!15952 = !DILexicalBlockFile(scope: !15939, file: !1803, discriminator: 2)
!15953 = !DILocation(line: 2453, column: 83, scope: !15952)
!15954 = !DILocation(line: 2453, column: 90, scope: !15952)
!15955 = !DILocation(line: 2453, column: 99, scope: !15952)
!15956 = !DILocation(line: 2453, column: 20, scope: !15952)
!15957 = !DILocation(line: 2454, column: 13, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15939, file: !1803, line: 2453, column: 105)
!15959 = !DILocation(line: 2454, column: 17, scope: !15958)
!15960 = !DILocation(line: 2454, column: 23, scope: !15958)
!15961 = !DILocation(line: 2454, column: 28, scope: !15958)
!15962 = !DILocation(line: 2454, column: 32, scope: !15958)
!15963 = !DILocation(line: 2455, column: 13, scope: !15958)
!15964 = !DILocation(line: 2455, column: 17, scope: !15958)
!15965 = !DILocation(line: 2455, column: 23, scope: !15958)
!15966 = !DILocation(line: 2455, column: 28, scope: !15958)
!15967 = !DILocation(line: 2455, column: 31, scope: !15958)
!15968 = !DILocation(line: 2456, column: 13, scope: !15958)
!15969 = !DILocation(line: 2456, column: 17, scope: !15958)
!15970 = !DILocation(line: 2456, column: 24, scope: !15958)
!15971 = !DILocation(line: 2456, column: 32, scope: !15958)
!15972 = !DILocation(line: 2457, column: 30, scope: !15958)
!15973 = !DILocation(line: 2457, column: 34, scope: !15958)
!15974 = !DILocation(line: 2457, column: 38, scope: !15958)
!15975 = !DILocation(line: 2457, column: 44, scope: !15958)
!15976 = !DILocation(line: 2457, column: 56, scope: !15958)
!15977 = !DILocation(line: 2457, column: 60, scope: !15958)
!15978 = !DILocation(line: 2457, column: 66, scope: !15958)
!15979 = !DILocation(line: 2458, column: 30, scope: !15958)
!15980 = !DILocation(line: 2458, column: 34, scope: !15958)
!15981 = !DILocation(line: 2458, column: 40, scope: !15958)
!15982 = !DILocation(line: 2457, column: 13, scope: !15958)
!15983 = !DILocation(line: 2459, column: 9, scope: !15958)
!15984 = !DILocation(line: 2460, column: 13, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15939, file: !1803, line: 2459, column: 16)
!15986 = !DILocation(line: 2460, column: 17, scope: !15985)
!15987 = !DILocation(line: 2460, column: 23, scope: !15985)
!15988 = !DILocation(line: 2460, column: 28, scope: !15985)
!15989 = !DILocation(line: 2460, column: 32, scope: !15985)
!15990 = !DILocation(line: 2461, column: 13, scope: !15985)
!15991 = !DILocation(line: 2461, column: 17, scope: !15985)
!15992 = !DILocation(line: 2461, column: 24, scope: !15985)
!15993 = !DILocation(line: 2461, column: 32, scope: !15985)
!15994 = !DILocation(line: 2463, column: 39, scope: !15862)
!15995 = !DILocation(line: 2463, column: 44, scope: !15862)
!15996 = !DILocation(line: 2463, column: 49, scope: !15862)
!15997 = !DILocation(line: 2463, column: 54, scope: !15862)
!15998 = !DILocation(line: 2463, column: 58, scope: !15862)
!15999 = !DILocation(line: 2463, column: 68, scope: !15862)
!16000 = !DILocation(line: 2463, column: 73, scope: !15862)
!16001 = !DILocation(line: 2463, column: 15, scope: !15862)
!16002 = !DILocation(line: 2463, column: 13, scope: !15862)
!16003 = !DILocation(line: 2464, column: 9, scope: !15862)
!16004 = !DILocation(line: 2466, column: 37, scope: !15862)
!16005 = !DILocation(line: 2466, column: 41, scope: !15862)
!16006 = !DILocation(line: 2466, column: 50, scope: !15862)
!16007 = !DILocation(line: 2466, column: 15, scope: !15862)
!16008 = !DILocation(line: 2466, column: 13, scope: !15862)
!16009 = !DILocation(line: 2467, column: 9, scope: !15862)
!16010 = !DILocation(line: 2469, column: 21, scope: !15862)
!16011 = !DILocation(line: 2469, column: 25, scope: !15862)
!16012 = !DILocation(line: 2469, column: 33, scope: !15862)
!16013 = !DILocation(line: 2469, column: 31, scope: !15862)
!16014 = !DILocation(line: 2469, column: 37, scope: !15862)
!16015 = !DILocation(line: 2469, column: 9, scope: !15862)
!16016 = !DILocation(line: 2470, column: 9, scope: !15862)
!16017 = !DILocation(line: 2470, column: 9, scope: !16018)
!16018 = !DILexicalBlockFile(scope: !15862, file: !1803, discriminator: 1)
!16019 = !DILocation(line: 2474, column: 24, scope: !15862)
!16020 = !DILocation(line: 2474, column: 32, scope: !15862)
!16021 = !DILocation(line: 2474, column: 30, scope: !15862)
!16022 = !DILocation(line: 2474, column: 36, scope: !15862)
!16023 = !DILocation(line: 2474, column: 9, scope: !15862)
!16024 = !DILocation(line: 2475, column: 9, scope: !15862)
!16025 = !DILocation(line: 2477, column: 12, scope: !15826)
!16026 = !DILocation(line: 2477, column: 5, scope: !15826)
!16027 = !DILocation(line: 2478, column: 1, scope: !15826)
!16028 = distinct !DISubprogram(name: "align_get_bits", scope: !2045, file: !2045, line: 658, type: !16029, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16029 = !DISubroutineType(types: !16030)
!16030 = !{!1607, !2043}
!16031 = !DILocalVariable(name: "s", arg: 1, scope: !16028, file: !2045, line: 658, type: !2043)
!16032 = !DILocation(line: 658, column: 60, scope: !16028)
!16033 = !DILocalVariable(name: "n", scope: !16028, file: !2045, line: 660, type: !1012)
!16034 = !DILocation(line: 660, column: 9, scope: !16028)
!16035 = !DILocation(line: 660, column: 29, scope: !16028)
!16036 = !DILocation(line: 660, column: 14, scope: !16028)
!16037 = !DILocation(line: 660, column: 13, scope: !16028)
!16038 = !DILocation(line: 660, column: 32, scope: !16028)
!16039 = !DILocation(line: 661, column: 9, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16028, file: !2045, line: 661, column: 9)
!16041 = !DILocation(line: 661, column: 9, scope: !16028)
!16042 = !DILocation(line: 662, column: 19, scope: !16040)
!16043 = !DILocation(line: 662, column: 22, scope: !16040)
!16044 = !DILocation(line: 662, column: 9, scope: !16040)
!16045 = !DILocation(line: 663, column: 12, scope: !16028)
!16046 = !DILocation(line: 663, column: 15, scope: !16028)
!16047 = !DILocation(line: 663, column: 25, scope: !16028)
!16048 = !DILocation(line: 663, column: 28, scope: !16028)
!16049 = !DILocation(line: 663, column: 34, scope: !16028)
!16050 = !DILocation(line: 663, column: 22, scope: !16028)
!16051 = !DILocation(line: 663, column: 5, scope: !16028)
!16052 = distinct !DISubprogram(name: "decode_dynamic_range", scope: !1803, file: !1803, line: 2341, type: !16053, isLocal: true, isDefinition: true, scopeLine: 2343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!1012, !16055, !2043}
!16055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64, align: 64)
!16056 = !DILocalVariable(name: "che_drc", arg: 1, scope: !16052, file: !1803, line: 2341, type: !16055)
!16057 = !DILocation(line: 2341, column: 54, scope: !16052)
!16058 = !DILocalVariable(name: "gb", arg: 2, scope: !16052, file: !1803, line: 2342, type: !2043)
!16059 = !DILocation(line: 2342, column: 48, scope: !16052)
!16060 = !DILocalVariable(name: "n", scope: !16052, file: !1803, line: 2344, type: !1012)
!16061 = !DILocation(line: 2344, column: 9, scope: !16052)
!16062 = !DILocalVariable(name: "drc_num_bands", scope: !16052, file: !1803, line: 2345, type: !1012)
!16063 = !DILocation(line: 2345, column: 9, scope: !16052)
!16064 = !DILocalVariable(name: "i", scope: !16052, file: !1803, line: 2346, type: !1012)
!16065 = !DILocation(line: 2346, column: 9, scope: !16052)
!16066 = !DILocation(line: 2349, column: 19, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16052, file: !1803, line: 2349, column: 9)
!16068 = !DILocation(line: 2349, column: 9, scope: !16067)
!16069 = !DILocation(line: 2349, column: 9, scope: !16052)
!16070 = !DILocation(line: 2350, column: 46, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16067, file: !1803, line: 2349, column: 24)
!16072 = !DILocation(line: 2350, column: 37, scope: !16071)
!16073 = !DILocation(line: 2350, column: 9, scope: !16071)
!16074 = !DILocation(line: 2350, column: 18, scope: !16071)
!16075 = !DILocation(line: 2350, column: 35, scope: !16071)
!16076 = !DILocation(line: 2351, column: 19, scope: !16071)
!16077 = !DILocation(line: 2351, column: 9, scope: !16071)
!16078 = !DILocation(line: 2352, column: 10, scope: !16071)
!16079 = !DILocation(line: 2353, column: 5, scope: !16071)
!16080 = !DILocation(line: 2356, column: 19, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16052, file: !1803, line: 2356, column: 9)
!16082 = !DILocation(line: 2356, column: 9, scope: !16081)
!16083 = !DILocation(line: 2356, column: 9, scope: !16052)
!16084 = !DILocation(line: 2357, column: 44, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16081, file: !1803, line: 2356, column: 24)
!16086 = !DILocation(line: 2357, column: 53, scope: !16085)
!16087 = !DILocation(line: 2357, column: 14, scope: !16085)
!16088 = !DILocation(line: 2357, column: 11, scope: !16085)
!16089 = !DILocation(line: 2358, column: 5, scope: !16085)
!16090 = !DILocation(line: 2361, column: 19, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16052, file: !1803, line: 2361, column: 9)
!16092 = !DILocation(line: 2361, column: 9, scope: !16091)
!16093 = !DILocation(line: 2361, column: 9, scope: !16052)
!16094 = !DILocation(line: 2362, column: 39, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16091, file: !1803, line: 2361, column: 24)
!16096 = !DILocation(line: 2362, column: 30, scope: !16095)
!16097 = !DILocation(line: 2362, column: 9, scope: !16095)
!16098 = !DILocation(line: 2362, column: 18, scope: !16095)
!16099 = !DILocation(line: 2362, column: 28, scope: !16095)
!16100 = !DILocation(line: 2363, column: 50, scope: !16095)
!16101 = !DILocation(line: 2363, column: 41, scope: !16095)
!16102 = !DILocation(line: 2363, column: 9, scope: !16095)
!16103 = !DILocation(line: 2363, column: 18, scope: !16095)
!16104 = !DILocation(line: 2363, column: 39, scope: !16095)
!16105 = !DILocation(line: 2364, column: 10, scope: !16095)
!16106 = !DILocation(line: 2365, column: 26, scope: !16095)
!16107 = !DILocation(line: 2365, column: 35, scope: !16095)
!16108 = !DILocation(line: 2365, column: 23, scope: !16095)
!16109 = !DILocation(line: 2366, column: 16, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16095, file: !1803, line: 2366, column: 9)
!16111 = !DILocation(line: 2366, column: 14, scope: !16110)
!16112 = !DILocation(line: 2366, column: 21, scope: !16113)
!16113 = !DILexicalBlockFile(scope: !16114, file: !1803, discriminator: 1)
!16114 = distinct !DILexicalBlock(scope: !16110, file: !1803, line: 2366, column: 9)
!16115 = !DILocation(line: 2366, column: 25, scope: !16113)
!16116 = !DILocation(line: 2366, column: 23, scope: !16113)
!16117 = !DILocation(line: 2366, column: 9, scope: !16113)
!16118 = !DILocation(line: 2367, column: 45, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16114, file: !1803, line: 2366, column: 45)
!16120 = !DILocation(line: 2367, column: 36, scope: !16119)
!16121 = !DILocation(line: 2367, column: 31, scope: !16119)
!16122 = !DILocation(line: 2367, column: 13, scope: !16119)
!16123 = !DILocation(line: 2367, column: 22, scope: !16119)
!16124 = !DILocation(line: 2367, column: 34, scope: !16119)
!16125 = !DILocation(line: 2368, column: 14, scope: !16119)
!16126 = !DILocation(line: 2369, column: 9, scope: !16119)
!16127 = !DILocation(line: 2366, column: 41, scope: !16128)
!16128 = !DILexicalBlockFile(scope: !16114, file: !1803, discriminator: 2)
!16129 = !DILocation(line: 2366, column: 9, scope: !16128)
!16130 = distinct !{!16130, !16131}
!16131 = !DILocation(line: 2366, column: 9, scope: !16095)
!16132 = !DILocation(line: 2370, column: 5, scope: !16095)
!16133 = !DILocation(line: 2373, column: 19, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16052, file: !1803, line: 2373, column: 9)
!16135 = !DILocation(line: 2373, column: 9, scope: !16134)
!16136 = !DILocation(line: 2373, column: 9, scope: !16052)
!16137 = !DILocation(line: 2374, column: 44, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16134, file: !1803, line: 2373, column: 24)
!16139 = !DILocation(line: 2374, column: 35, scope: !16138)
!16140 = !DILocation(line: 2374, column: 9, scope: !16138)
!16141 = !DILocation(line: 2374, column: 18, scope: !16138)
!16142 = !DILocation(line: 2374, column: 33, scope: !16138)
!16143 = !DILocation(line: 2375, column: 20, scope: !16138)
!16144 = !DILocation(line: 2375, column: 9, scope: !16138)
!16145 = !DILocation(line: 2376, column: 10, scope: !16138)
!16146 = !DILocation(line: 2377, column: 5, scope: !16138)
!16147 = !DILocation(line: 2379, column: 12, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16052, file: !1803, line: 2379, column: 5)
!16149 = !DILocation(line: 2379, column: 10, scope: !16148)
!16150 = !DILocation(line: 2379, column: 17, scope: !16151)
!16151 = !DILexicalBlockFile(scope: !16152, file: !1803, discriminator: 1)
!16152 = distinct !DILexicalBlock(scope: !16148, file: !1803, line: 2379, column: 5)
!16153 = !DILocation(line: 2379, column: 21, scope: !16151)
!16154 = !DILocation(line: 2379, column: 19, scope: !16151)
!16155 = !DILocation(line: 2379, column: 5, scope: !16151)
!16156 = !DILocation(line: 2380, column: 45, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16152, file: !1803, line: 2379, column: 41)
!16158 = !DILocation(line: 2380, column: 35, scope: !16157)
!16159 = !DILocation(line: 2380, column: 30, scope: !16157)
!16160 = !DILocation(line: 2380, column: 9, scope: !16157)
!16161 = !DILocation(line: 2380, column: 18, scope: !16157)
!16162 = !DILocation(line: 2380, column: 33, scope: !16157)
!16163 = !DILocation(line: 2381, column: 44, scope: !16157)
!16164 = !DILocation(line: 2381, column: 35, scope: !16157)
!16165 = !DILocation(line: 2381, column: 30, scope: !16157)
!16166 = !DILocation(line: 2381, column: 9, scope: !16157)
!16167 = !DILocation(line: 2381, column: 18, scope: !16157)
!16168 = !DILocation(line: 2381, column: 33, scope: !16157)
!16169 = !DILocation(line: 2382, column: 10, scope: !16157)
!16170 = !DILocation(line: 2383, column: 5, scope: !16157)
!16171 = !DILocation(line: 2379, column: 37, scope: !16172)
!16172 = !DILexicalBlockFile(scope: !16152, file: !1803, discriminator: 2)
!16173 = !DILocation(line: 2379, column: 5, scope: !16172)
!16174 = distinct !{!16174, !16175}
!16175 = !DILocation(line: 2379, column: 5, scope: !16052)
!16176 = !DILocation(line: 2385, column: 12, scope: !16052)
!16177 = !DILocation(line: 2385, column: 5, scope: !16052)
!16178 = distinct !DISubprogram(name: "decode_fill", scope: !1803, file: !1803, line: 2388, type: !16179, isLocal: true, isDefinition: true, scopeLine: 2388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16179 = !DISubroutineType(types: !16180)
!16180 = !{!1012, !2065, !2043, !1012}
!16181 = !DILocalVariable(name: "ac", arg: 1, scope: !16178, file: !1803, line: 2388, type: !2065)
!16182 = !DILocation(line: 2388, column: 36, scope: !16178)
!16183 = !DILocalVariable(name: "gb", arg: 2, scope: !16178, file: !1803, line: 2388, type: !2043)
!16184 = !DILocation(line: 2388, column: 55, scope: !16178)
!16185 = !DILocalVariable(name: "len", arg: 3, scope: !16178, file: !1803, line: 2388, type: !1012)
!16186 = !DILocation(line: 2388, column: 63, scope: !16178)
!16187 = !DILocalVariable(name: "buf", scope: !16178, file: !1803, line: 2389, type: !16188)
!16188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 2048, align: 8, elements: !16189)
!16189 = !{!16190}
!16190 = !DISubrange(count: 256)
!16191 = !DILocation(line: 2389, column: 13, scope: !16178)
!16192 = !DILocalVariable(name: "i", scope: !16178, file: !1803, line: 2390, type: !1012)
!16193 = !DILocation(line: 2390, column: 9, scope: !16178)
!16194 = !DILocalVariable(name: "major", scope: !16178, file: !1803, line: 2390, type: !1012)
!16195 = !DILocation(line: 2390, column: 12, scope: !16178)
!16196 = !DILocalVariable(name: "minor", scope: !16178, file: !1803, line: 2390, type: !1012)
!16197 = !DILocation(line: 2390, column: 19, scope: !16178)
!16198 = !DILocation(line: 2392, column: 9, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16178, file: !1803, line: 2392, column: 9)
!16200 = !DILocation(line: 2392, column: 13, scope: !16199)
!16201 = !DILocation(line: 2392, column: 9, scope: !16178)
!16202 = !DILocation(line: 2393, column: 9, scope: !16199)
!16203 = !DILocation(line: 2395, column: 14, scope: !16178)
!16204 = !DILocation(line: 2395, column: 5, scope: !16178)
!16205 = !DILocation(line: 2395, column: 27, scope: !16178)
!16206 = !DILocation(line: 2397, column: 10, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16178, file: !1803, line: 2397, column: 5)
!16208 = !DILocation(line: 2397, column: 9, scope: !16207)
!16209 = !DILocation(line: 2397, column: 14, scope: !16210)
!16210 = !DILexicalBlockFile(scope: !16211, file: !1803, discriminator: 1)
!16211 = distinct !DILexicalBlock(scope: !16207, file: !1803, line: 2397, column: 5)
!16212 = !DILocation(line: 2397, column: 15, scope: !16210)
!16213 = !DILocation(line: 2397, column: 17, scope: !16210)
!16214 = !DILocation(line: 2397, column: 30, scope: !16210)
!16215 = !DILocation(line: 2397, column: 33, scope: !16216)
!16216 = !DILexicalBlockFile(scope: !16211, file: !1803, discriminator: 2)
!16217 = !DILocation(line: 2397, column: 36, scope: !16216)
!16218 = !DILocation(line: 2397, column: 5, scope: !16219)
!16219 = !DILexicalBlockFile(scope: !16207, file: !1803, discriminator: 3)
!16220 = !DILocation(line: 2398, column: 27, scope: !16211)
!16221 = !DILocation(line: 2398, column: 18, scope: !16211)
!16222 = !DILocation(line: 2398, column: 13, scope: !16211)
!16223 = !DILocation(line: 2398, column: 9, scope: !16211)
!16224 = !DILocation(line: 2398, column: 16, scope: !16211)
!16225 = !DILocation(line: 2397, column: 42, scope: !16226)
!16226 = !DILexicalBlockFile(scope: !16211, file: !1803, discriminator: 4)
!16227 = !DILocation(line: 2397, column: 49, scope: !16226)
!16228 = !DILocation(line: 2397, column: 5, scope: !16226)
!16229 = distinct !{!16229, !16230}
!16230 = !DILocation(line: 2397, column: 5, scope: !16178)
!16231 = !DILocation(line: 2400, column: 9, scope: !16178)
!16232 = !DILocation(line: 2400, column: 5, scope: !16178)
!16233 = !DILocation(line: 2400, column: 12, scope: !16178)
!16234 = !DILocation(line: 2401, column: 9, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16178, file: !1803, line: 2401, column: 9)
!16236 = !DILocation(line: 2401, column: 13, scope: !16235)
!16237 = !DILocation(line: 2401, column: 20, scope: !16235)
!16238 = !DILocation(line: 2401, column: 26, scope: !16235)
!16239 = !DILocation(line: 2401, column: 9, scope: !16178)
!16240 = !DILocation(line: 2402, column: 16, scope: !16235)
!16241 = !DILocation(line: 2402, column: 20, scope: !16235)
!16242 = !DILocation(line: 2402, column: 44, scope: !16235)
!16243 = !DILocation(line: 2402, column: 9, scope: !16235)
!16244 = !DILocation(line: 2404, column: 16, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16178, file: !1803, line: 2404, column: 9)
!16246 = !DILocation(line: 2404, column: 9, scope: !16245)
!16247 = !DILocation(line: 2404, column: 54, scope: !16245)
!16248 = !DILocation(line: 2404, column: 9, scope: !16178)
!16249 = !DILocation(line: 2405, column: 9, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16245, file: !1803, line: 2404, column: 59)
!16251 = !DILocation(line: 2405, column: 13, scope: !16250)
!16252 = !DILocation(line: 2405, column: 20, scope: !16250)
!16253 = !DILocation(line: 2405, column: 30, scope: !16250)
!16254 = !DILocation(line: 2405, column: 43, scope: !16250)
!16255 = !DILocation(line: 2406, column: 5, scope: !16250)
!16256 = !DILocation(line: 2404, column: 57, scope: !16257)
!16257 = !DILexicalBlockFile(scope: !16245, file: !1803, discriminator: 1)
!16258 = !DILocation(line: 2409, column: 20, scope: !16178)
!16259 = !DILocation(line: 2409, column: 24, scope: !16178)
!16260 = !DILocation(line: 2409, column: 5, scope: !16178)
!16261 = !DILocation(line: 2411, column: 5, scope: !16178)
!16262 = distinct !DISubprogram(name: "decode_drc_channel_exclusions", scope: !1803, file: !1803, line: 2322, type: !16053, isLocal: true, isDefinition: true, scopeLine: 2324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16263 = !DILocalVariable(name: "che_drc", arg: 1, scope: !16262, file: !1803, line: 2322, type: !16055)
!16264 = !DILocation(line: 2322, column: 63, scope: !16262)
!16265 = !DILocalVariable(name: "gb", arg: 2, scope: !16262, file: !1803, line: 2323, type: !2043)
!16266 = !DILocation(line: 2323, column: 57, scope: !16262)
!16267 = !DILocalVariable(name: "i", scope: !16262, file: !1803, line: 2325, type: !1012)
!16268 = !DILocation(line: 2325, column: 9, scope: !16262)
!16269 = !DILocalVariable(name: "num_excl_chan", scope: !16262, file: !1803, line: 2326, type: !1012)
!16270 = !DILocation(line: 2326, column: 9, scope: !16262)
!16271 = !DILocation(line: 2328, column: 5, scope: !16262)
!16272 = distinct !{!16272, !16271}
!16273 = !DILocation(line: 2329, column: 16, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16275, file: !1803, line: 2329, column: 9)
!16275 = distinct !DILexicalBlock(scope: !16262, file: !1803, line: 2328, column: 8)
!16276 = !DILocation(line: 2329, column: 14, scope: !16274)
!16277 = !DILocation(line: 2329, column: 21, scope: !16278)
!16278 = !DILexicalBlockFile(scope: !16279, file: !1803, discriminator: 1)
!16279 = distinct !DILexicalBlock(scope: !16274, file: !1803, line: 2329, column: 9)
!16280 = !DILocation(line: 2329, column: 23, scope: !16278)
!16281 = !DILocation(line: 2329, column: 9, scope: !16278)
!16282 = !DILocation(line: 2330, column: 64, scope: !16279)
!16283 = !DILocation(line: 2330, column: 54, scope: !16279)
!16284 = !DILocation(line: 2330, column: 48, scope: !16279)
!16285 = !DILocation(line: 2330, column: 13, scope: !16279)
!16286 = !DILocation(line: 2330, column: 22, scope: !16279)
!16287 = !DILocation(line: 2330, column: 52, scope: !16279)
!16288 = !DILocation(line: 2329, column: 29, scope: !16289)
!16289 = !DILexicalBlockFile(scope: !16279, file: !1803, discriminator: 2)
!16290 = !DILocation(line: 2329, column: 9, scope: !16289)
!16291 = distinct !{!16291, !16292}
!16292 = !DILocation(line: 2329, column: 9, scope: !16275)
!16293 = !DILocation(line: 2331, column: 5, scope: !16275)
!16294 = !DILocation(line: 2331, column: 14, scope: !16295)
!16295 = !DILexicalBlockFile(scope: !16262, file: !1803, discriminator: 1)
!16296 = !DILocation(line: 2331, column: 28, scope: !16295)
!16297 = !DILocation(line: 2331, column: 37, scope: !16295)
!16298 = !DILocation(line: 2331, column: 50, scope: !16299)
!16299 = !DILexicalBlockFile(scope: !16262, file: !1803, discriminator: 2)
!16300 = !DILocation(line: 2331, column: 40, scope: !16299)
!16301 = !DILocation(line: 2331, column: 37, scope: !16299)
!16302 = !DILocation(line: 2331, column: 5, scope: !16303)
!16303 = !DILexicalBlockFile(scope: !16275, file: !1803, discriminator: 3)
!16304 = !DILocation(line: 2333, column: 12, scope: !16262)
!16305 = !DILocation(line: 2333, column: 26, scope: !16262)
!16306 = !DILocation(line: 2333, column: 5, scope: !16262)
!16307 = distinct !DISubprogram(name: "read_audio_mux_element", scope: !1145, file: !1145, line: 450, type: !16308, isLocal: true, isDefinition: true, scopeLine: 452, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{!1012, !3223, !2043}
!16310 = !DILocalVariable(name: "latmctx", arg: 1, scope: !16307, file: !1145, line: 450, type: !3223)
!16311 = !DILocation(line: 450, column: 55, scope: !16307)
!16312 = !DILocalVariable(name: "gb", arg: 2, scope: !16307, file: !1145, line: 451, type: !2043)
!16313 = !DILocation(line: 451, column: 50, scope: !16307)
!16314 = !DILocalVariable(name: "err", scope: !16307, file: !1145, line: 453, type: !1012)
!16315 = !DILocation(line: 453, column: 9, scope: !16307)
!16316 = !DILocalVariable(name: "use_same_mux", scope: !16307, file: !1145, line: 454, type: !1029)
!16317 = !DILocation(line: 454, column: 13, scope: !16307)
!16318 = !DILocation(line: 454, column: 37, scope: !16307)
!16319 = !DILocation(line: 454, column: 28, scope: !16307)
!16320 = !DILocation(line: 455, column: 10, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16307, file: !1145, line: 455, column: 9)
!16322 = !DILocation(line: 455, column: 9, scope: !16307)
!16323 = !DILocation(line: 456, column: 43, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16325, file: !1145, line: 456, column: 13)
!16325 = distinct !DILexicalBlock(scope: !16321, file: !1145, line: 455, column: 24)
!16326 = !DILocation(line: 456, column: 52, scope: !16324)
!16327 = !DILocation(line: 456, column: 20, scope: !16324)
!16328 = !DILocation(line: 456, column: 18, scope: !16324)
!16329 = !DILocation(line: 456, column: 57, scope: !16324)
!16330 = !DILocation(line: 456, column: 13, scope: !16325)
!16331 = !DILocation(line: 457, column: 20, scope: !16324)
!16332 = !DILocation(line: 457, column: 13, scope: !16324)
!16333 = !DILocation(line: 458, column: 5, scope: !16325)
!16334 = !DILocation(line: 458, column: 17, scope: !16335)
!16335 = !DILexicalBlockFile(scope: !16336, file: !1145, discriminator: 1)
!16336 = distinct !DILexicalBlock(scope: !16321, file: !1145, line: 458, column: 16)
!16337 = !DILocation(line: 458, column: 26, scope: !16335)
!16338 = !DILocation(line: 458, column: 34, scope: !16335)
!16339 = !DILocation(line: 458, column: 41, scope: !16335)
!16340 = !DILocation(line: 458, column: 16, scope: !16335)
!16341 = !DILocation(line: 459, column: 16, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16336, file: !1145, line: 458, column: 52)
!16343 = !DILocation(line: 459, column: 25, scope: !16342)
!16344 = !DILocation(line: 459, column: 33, scope: !16342)
!16345 = !DILocation(line: 459, column: 9, scope: !16342)
!16346 = !DILocation(line: 461, column: 9, scope: !16342)
!16347 = !DILocation(line: 463, column: 9, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16307, file: !1145, line: 463, column: 9)
!16349 = !DILocation(line: 463, column: 18, scope: !16348)
!16350 = !DILocation(line: 463, column: 38, scope: !16348)
!16351 = !DILocation(line: 463, column: 9, scope: !16307)
!16352 = !DILocalVariable(name: "mux_slot_length_bytes", scope: !16353, file: !1145, line: 464, type: !1012)
!16353 = distinct !DILexicalBlock(scope: !16348, file: !1145, line: 463, column: 44)
!16354 = !DILocation(line: 464, column: 13, scope: !16353)
!16355 = !DILocation(line: 464, column: 62, scope: !16353)
!16356 = !DILocation(line: 464, column: 71, scope: !16353)
!16357 = !DILocation(line: 464, column: 37, scope: !16353)
!16358 = !DILocation(line: 465, column: 13, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16353, file: !1145, line: 465, column: 13)
!16360 = !DILocation(line: 465, column: 35, scope: !16359)
!16361 = !DILocation(line: 465, column: 39, scope: !16359)
!16362 = !DILocation(line: 465, column: 42, scope: !16363)
!16363 = !DILexicalBlockFile(scope: !16359, file: !1145, discriminator: 1)
!16364 = !DILocation(line: 465, column: 64, scope: !16363)
!16365 = !DILocation(line: 465, column: 86, scope: !16363)
!16366 = !DILocation(line: 465, column: 72, scope: !16363)
!16367 = !DILocation(line: 465, column: 70, scope: !16363)
!16368 = !DILocation(line: 465, column: 13, scope: !16363)
!16369 = !DILocation(line: 466, column: 20, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16359, file: !1145, line: 465, column: 91)
!16371 = !DILocation(line: 466, column: 29, scope: !16370)
!16372 = !DILocation(line: 466, column: 37, scope: !16370)
!16373 = !DILocation(line: 466, column: 13, scope: !16370)
!16374 = !DILocation(line: 467, column: 13, scope: !16370)
!16375 = !DILocation(line: 468, column: 20, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16359, file: !1145, line: 468, column: 20)
!16377 = !DILocation(line: 468, column: 42, scope: !16376)
!16378 = !DILocation(line: 468, column: 46, scope: !16376)
!16379 = !DILocation(line: 468, column: 68, scope: !16376)
!16380 = !DILocation(line: 468, column: 54, scope: !16376)
!16381 = !DILocation(line: 468, column: 52, scope: !16376)
!16382 = !DILocation(line: 468, column: 20, scope: !16359)
!16383 = !DILocation(line: 469, column: 20, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16376, file: !1145, line: 468, column: 73)
!16385 = !DILocation(line: 469, column: 29, scope: !16384)
!16386 = !DILocation(line: 469, column: 37, scope: !16384)
!16387 = !DILocation(line: 471, column: 20, scope: !16384)
!16388 = !DILocation(line: 471, column: 42, scope: !16384)
!16389 = !DILocation(line: 471, column: 61, scope: !16384)
!16390 = !DILocation(line: 471, column: 47, scope: !16384)
!16391 = !DILocation(line: 469, column: 13, scope: !16384)
!16392 = !DILocation(line: 472, column: 13, scope: !16384)
!16393 = !DILocation(line: 474, column: 5, scope: !16353)
!16394 = !DILocation(line: 475, column: 5, scope: !16307)
!16395 = !DILocation(line: 476, column: 1, scope: !16307)
!16396 = distinct !DISubprogram(name: "read_stream_mux_config", scope: !1145, file: !1145, line: 349, type: !16308, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16397 = !DILocalVariable(name: "latmctx", arg: 1, scope: !16396, file: !1145, line: 349, type: !3223)
!16398 = !DILocation(line: 349, column: 55, scope: !16396)
!16399 = !DILocalVariable(name: "gb", arg: 2, scope: !16396, file: !1145, line: 350, type: !2043)
!16400 = !DILocation(line: 350, column: 50, scope: !16396)
!16401 = !DILocalVariable(name: "ret", scope: !16396, file: !1145, line: 352, type: !1012)
!16402 = !DILocation(line: 352, column: 9, scope: !16396)
!16403 = !DILocalVariable(name: "audio_mux_version", scope: !16396, file: !1145, line: 352, type: !1012)
!16404 = !DILocation(line: 352, column: 14, scope: !16396)
!16405 = !DILocation(line: 352, column: 43, scope: !16396)
!16406 = !DILocation(line: 352, column: 34, scope: !16396)
!16407 = !DILocation(line: 354, column: 5, scope: !16396)
!16408 = !DILocation(line: 354, column: 14, scope: !16396)
!16409 = !DILocation(line: 354, column: 34, scope: !16396)
!16410 = !DILocation(line: 355, column: 9, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16396, file: !1145, line: 355, column: 9)
!16412 = !DILocation(line: 355, column: 9, scope: !16396)
!16413 = !DILocation(line: 356, column: 49, scope: !16411)
!16414 = !DILocation(line: 356, column: 40, scope: !16411)
!16415 = !DILocation(line: 356, column: 9, scope: !16411)
!16416 = !DILocation(line: 356, column: 18, scope: !16411)
!16417 = !DILocation(line: 356, column: 38, scope: !16411)
!16418 = !DILocation(line: 358, column: 10, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16396, file: !1145, line: 358, column: 9)
!16420 = !DILocation(line: 358, column: 19, scope: !16419)
!16421 = !DILocation(line: 358, column: 9, scope: !16396)
!16422 = !DILocation(line: 360, column: 13, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 360, column: 13)
!16424 = distinct !DILexicalBlock(scope: !16419, file: !1145, line: 358, column: 40)
!16425 = !DILocation(line: 360, column: 13, scope: !16424)
!16426 = !DILocation(line: 361, column: 28, scope: !16423)
!16427 = !DILocation(line: 361, column: 13, scope: !16423)
!16428 = !DILocation(line: 363, column: 19, scope: !16424)
!16429 = !DILocation(line: 363, column: 9, scope: !16424)
!16430 = !DILocation(line: 364, column: 19, scope: !16424)
!16431 = !DILocation(line: 364, column: 9, scope: !16424)
!16432 = !DILocation(line: 366, column: 22, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 366, column: 13)
!16434 = !DILocation(line: 366, column: 13, scope: !16433)
!16435 = !DILocation(line: 366, column: 13, scope: !16424)
!16436 = !DILocation(line: 367, column: 35, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16433, file: !1145, line: 366, column: 30)
!16438 = !DILocation(line: 367, column: 44, scope: !16437)
!16439 = !DILocation(line: 367, column: 52, scope: !16437)
!16440 = !DILocation(line: 367, column: 13, scope: !16437)
!16441 = !DILocation(line: 368, column: 13, scope: !16437)
!16442 = !DILocation(line: 374, column: 22, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 374, column: 13)
!16444 = !DILocation(line: 374, column: 13, scope: !16443)
!16445 = !DILocation(line: 374, column: 13, scope: !16424)
!16446 = !DILocation(line: 375, column: 35, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16443, file: !1145, line: 374, column: 30)
!16448 = !DILocation(line: 375, column: 44, scope: !16447)
!16449 = !DILocation(line: 375, column: 52, scope: !16447)
!16450 = !DILocation(line: 375, column: 13, scope: !16447)
!16451 = !DILocation(line: 376, column: 13, scope: !16447)
!16452 = !DILocation(line: 380, column: 14, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 380, column: 13)
!16454 = !DILocation(line: 380, column: 13, scope: !16424)
!16455 = !DILocation(line: 381, column: 58, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16457, file: !1145, line: 381, column: 17)
!16457 = distinct !DILexicalBlock(scope: !16453, file: !1145, line: 380, column: 33)
!16458 = !DILocation(line: 381, column: 67, scope: !16456)
!16459 = !DILocation(line: 381, column: 24, scope: !16456)
!16460 = !DILocation(line: 381, column: 22, scope: !16456)
!16461 = !DILocation(line: 381, column: 75, scope: !16456)
!16462 = !DILocation(line: 381, column: 17, scope: !16457)
!16463 = !DILocation(line: 382, column: 24, scope: !16456)
!16464 = !DILocation(line: 382, column: 17, scope: !16456)
!16465 = !DILocation(line: 383, column: 9, scope: !16457)
!16466 = !DILocalVariable(name: "ascLen", scope: !16467, file: !1145, line: 384, type: !1012)
!16467 = distinct !DILexicalBlock(scope: !16453, file: !1145, line: 383, column: 16)
!16468 = !DILocation(line: 384, column: 17, scope: !16467)
!16469 = !DILocation(line: 384, column: 41, scope: !16467)
!16470 = !DILocation(line: 384, column: 26, scope: !16467)
!16471 = !DILocation(line: 385, column: 58, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16467, file: !1145, line: 385, column: 17)
!16473 = !DILocation(line: 385, column: 67, scope: !16472)
!16474 = !DILocation(line: 385, column: 71, scope: !16472)
!16475 = !DILocation(line: 385, column: 24, scope: !16472)
!16476 = !DILocation(line: 385, column: 22, scope: !16472)
!16477 = !DILocation(line: 385, column: 80, scope: !16472)
!16478 = !DILocation(line: 385, column: 17, scope: !16467)
!16479 = !DILocation(line: 386, column: 24, scope: !16472)
!16480 = !DILocation(line: 386, column: 17, scope: !16472)
!16481 = !DILocation(line: 389, column: 47, scope: !16424)
!16482 = !DILocation(line: 389, column: 38, scope: !16424)
!16483 = !DILocation(line: 389, column: 9, scope: !16424)
!16484 = !DILocation(line: 389, column: 18, scope: !16424)
!16485 = !DILocation(line: 389, column: 36, scope: !16424)
!16486 = !DILocation(line: 390, column: 17, scope: !16424)
!16487 = !DILocation(line: 390, column: 26, scope: !16424)
!16488 = !DILocation(line: 390, column: 9, scope: !16424)
!16489 = !DILocation(line: 392, column: 23, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 390, column: 45)
!16491 = !DILocation(line: 392, column: 13, scope: !16490)
!16492 = !DILocation(line: 393, column: 13, scope: !16490)
!16493 = !DILocation(line: 395, column: 46, scope: !16490)
!16494 = !DILocation(line: 395, column: 37, scope: !16490)
!16495 = !DILocation(line: 395, column: 13, scope: !16490)
!16496 = !DILocation(line: 395, column: 22, scope: !16490)
!16497 = !DILocation(line: 395, column: 35, scope: !16490)
!16498 = !DILocation(line: 396, column: 13, scope: !16490)
!16499 = !DILocation(line: 400, column: 23, scope: !16490)
!16500 = !DILocation(line: 400, column: 13, scope: !16490)
!16501 = !DILocation(line: 401, column: 13, scope: !16490)
!16502 = !DILocation(line: 404, column: 23, scope: !16490)
!16503 = !DILocation(line: 404, column: 13, scope: !16490)
!16504 = !DILocation(line: 405, column: 13, scope: !16490)
!16505 = !DILocation(line: 408, column: 22, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 408, column: 13)
!16507 = !DILocation(line: 408, column: 13, scope: !16506)
!16508 = !DILocation(line: 408, column: 13, scope: !16424)
!16509 = !DILocation(line: 409, column: 17, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16511, file: !1145, line: 409, column: 17)
!16511 = distinct !DILexicalBlock(scope: !16506, file: !1145, line: 408, column: 30)
!16512 = !DILocation(line: 409, column: 17, scope: !16511)
!16513 = !DILocation(line: 410, column: 32, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16510, file: !1145, line: 409, column: 36)
!16515 = !DILocation(line: 410, column: 17, scope: !16514)
!16516 = !DILocation(line: 411, column: 13, scope: !16514)
!16517 = !DILocalVariable(name: "esc", scope: !16518, file: !1145, line: 412, type: !1012)
!16518 = distinct !DILexicalBlock(scope: !16510, file: !1145, line: 411, column: 20)
!16519 = !DILocation(line: 412, column: 21, scope: !16518)
!16520 = !DILocation(line: 413, column: 17, scope: !16518)
!16521 = distinct !{!16521, !16520}
!16522 = !DILocation(line: 414, column: 36, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16518, file: !1145, line: 413, column: 20)
!16524 = !DILocation(line: 414, column: 27, scope: !16523)
!16525 = !DILocation(line: 414, column: 25, scope: !16523)
!16526 = !DILocation(line: 415, column: 31, scope: !16523)
!16527 = !DILocation(line: 415, column: 21, scope: !16523)
!16528 = !DILocation(line: 416, column: 17, scope: !16523)
!16529 = !DILocation(line: 416, column: 26, scope: !16530)
!16530 = !DILexicalBlockFile(scope: !16518, file: !1145, discriminator: 1)
!16531 = !DILocation(line: 416, column: 17, scope: !16530)
!16532 = !DILocation(line: 418, column: 9, scope: !16511)
!16533 = !DILocation(line: 420, column: 22, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16424, file: !1145, line: 420, column: 13)
!16535 = !DILocation(line: 420, column: 13, scope: !16534)
!16536 = !DILocation(line: 420, column: 13, scope: !16424)
!16537 = !DILocation(line: 421, column: 23, scope: !16534)
!16538 = !DILocation(line: 421, column: 13, scope: !16534)
!16539 = !DILocation(line: 422, column: 5, scope: !16424)
!16540 = !DILocation(line: 424, column: 5, scope: !16396)
!16541 = !DILocation(line: 425, column: 1, scope: !16396)
!16542 = distinct !DISubprogram(name: "read_payload_length_info", scope: !1145, file: !1145, line: 427, type: !16308, isLocal: true, isDefinition: true, scopeLine: 428, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16543 = !DILocalVariable(name: "ctx", arg: 1, scope: !16542, file: !1145, line: 427, type: !3223)
!16544 = !DILocation(line: 427, column: 57, scope: !16542)
!16545 = !DILocalVariable(name: "gb", arg: 2, scope: !16542, file: !1145, line: 427, type: !2043)
!16546 = !DILocation(line: 427, column: 77, scope: !16542)
!16547 = !DILocalVariable(name: "tmp", scope: !16542, file: !1145, line: 429, type: !1029)
!16548 = !DILocation(line: 429, column: 13, scope: !16542)
!16549 = !DILocation(line: 431, column: 9, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16542, file: !1145, line: 431, column: 9)
!16551 = !DILocation(line: 431, column: 14, scope: !16550)
!16552 = !DILocation(line: 431, column: 32, scope: !16550)
!16553 = !DILocation(line: 431, column: 9, scope: !16542)
!16554 = !DILocalVariable(name: "mux_slot_length", scope: !16555, file: !1145, line: 432, type: !1012)
!16555 = distinct !DILexicalBlock(scope: !16550, file: !1145, line: 431, column: 38)
!16556 = !DILocation(line: 432, column: 13, scope: !16555)
!16557 = !DILocation(line: 433, column: 9, scope: !16555)
!16558 = distinct !{!16558, !16557}
!16559 = !DILocation(line: 434, column: 31, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16561, file: !1145, line: 434, column: 17)
!16561 = distinct !DILexicalBlock(scope: !16555, file: !1145, line: 433, column: 12)
!16562 = !DILocation(line: 434, column: 17, scope: !16560)
!16563 = !DILocation(line: 434, column: 35, scope: !16560)
!16564 = !DILocation(line: 434, column: 17, scope: !16561)
!16565 = !DILocation(line: 435, column: 17, scope: !16560)
!16566 = !DILocation(line: 436, column: 28, scope: !16561)
!16567 = !DILocation(line: 436, column: 19, scope: !16561)
!16568 = !DILocation(line: 436, column: 17, scope: !16561)
!16569 = !DILocation(line: 437, column: 32, scope: !16561)
!16570 = !DILocation(line: 437, column: 29, scope: !16561)
!16571 = !DILocation(line: 438, column: 9, scope: !16561)
!16572 = !DILocation(line: 438, column: 18, scope: !16573)
!16573 = !DILexicalBlockFile(scope: !16555, file: !1145, discriminator: 1)
!16574 = !DILocation(line: 438, column: 22, scope: !16573)
!16575 = !DILocation(line: 438, column: 9, scope: !16573)
!16576 = !DILocation(line: 439, column: 16, scope: !16555)
!16577 = !DILocation(line: 439, column: 9, scope: !16555)
!16578 = !DILocation(line: 440, column: 16, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16550, file: !1145, line: 440, column: 16)
!16580 = !DILocation(line: 440, column: 21, scope: !16579)
!16581 = !DILocation(line: 440, column: 39, scope: !16579)
!16582 = !DILocation(line: 440, column: 16, scope: !16550)
!16583 = !DILocation(line: 441, column: 16, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16579, file: !1145, line: 440, column: 45)
!16585 = !DILocation(line: 441, column: 21, scope: !16584)
!16586 = !DILocation(line: 441, column: 9, scope: !16584)
!16587 = !DILocation(line: 442, column: 16, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16579, file: !1145, line: 442, column: 16)
!16589 = !DILocation(line: 442, column: 21, scope: !16588)
!16590 = !DILocation(line: 442, column: 39, scope: !16588)
!16591 = !DILocation(line: 442, column: 44, scope: !16588)
!16592 = !DILocation(line: 443, column: 16, scope: !16588)
!16593 = !DILocation(line: 443, column: 21, scope: !16588)
!16594 = !DILocation(line: 443, column: 39, scope: !16588)
!16595 = !DILocation(line: 443, column: 44, scope: !16588)
!16596 = !DILocation(line: 444, column: 16, scope: !16588)
!16597 = !DILocation(line: 444, column: 21, scope: !16588)
!16598 = !DILocation(line: 444, column: 39, scope: !16588)
!16599 = !DILocation(line: 442, column: 16, scope: !16600)
!16600 = !DILexicalBlockFile(scope: !16579, file: !1145, discriminator: 1)
!16601 = !DILocation(line: 445, column: 19, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16588, file: !1145, line: 444, column: 45)
!16603 = !DILocation(line: 445, column: 9, scope: !16602)
!16604 = !DILocation(line: 446, column: 5, scope: !16602)
!16605 = !DILocation(line: 447, column: 5, scope: !16542)
!16606 = !DILocation(line: 448, column: 1, scope: !16542)
!16607 = distinct !DISubprogram(name: "latm_get_value", scope: !1145, file: !1145, line: 274, type: !16608, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16608 = !DISubroutineType(types: !16609)
!16609 = !{!1027, !2043}
!16610 = !DILocalVariable(name: "b", arg: 1, scope: !16607, file: !1145, line: 274, type: !2043)
!16611 = !DILocation(line: 274, column: 54, scope: !16607)
!16612 = !DILocalVariable(name: "length", scope: !16607, file: !1145, line: 276, type: !1012)
!16613 = !DILocation(line: 276, column: 9, scope: !16607)
!16614 = !DILocation(line: 276, column: 27, scope: !16607)
!16615 = !DILocation(line: 276, column: 18, scope: !16607)
!16616 = !DILocation(line: 278, column: 26, scope: !16607)
!16617 = !DILocation(line: 278, column: 30, scope: !16607)
!16618 = !DILocation(line: 278, column: 36, scope: !16607)
!16619 = !DILocation(line: 278, column: 39, scope: !16607)
!16620 = !DILocation(line: 278, column: 12, scope: !16607)
!16621 = !DILocation(line: 278, column: 5, scope: !16607)
!16622 = distinct !DISubprogram(name: "latm_decode_audio_specific_config", scope: !1145, file: !1145, line: 281, type: !16623, isLocal: true, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16623 = !DISubroutineType(types: !16624)
!16624 = !{!1012, !3223, !2043, !1012}
!16625 = !DILocalVariable(name: "latmctx", arg: 1, scope: !16622, file: !1145, line: 281, type: !3223)
!16626 = !DILocation(line: 281, column: 66, scope: !16622)
!16627 = !DILocalVariable(name: "gb", arg: 2, scope: !16622, file: !1145, line: 282, type: !2043)
!16628 = !DILocation(line: 282, column: 61, scope: !16622)
!16629 = !DILocalVariable(name: "asclen", arg: 3, scope: !16622, file: !1145, line: 282, type: !1012)
!16630 = !DILocation(line: 282, column: 69, scope: !16622)
!16631 = !DILocalVariable(name: "ac", scope: !16622, file: !1145, line: 284, type: !2065)
!16632 = !DILocation(line: 284, column: 17, scope: !16622)
!16633 = !DILocation(line: 284, column: 23, scope: !16622)
!16634 = !DILocation(line: 284, column: 32, scope: !16622)
!16635 = !DILocalVariable(name: "avctx", scope: !16622, file: !1145, line: 285, type: !1262)
!16636 = !DILocation(line: 285, column: 21, scope: !16622)
!16637 = !DILocation(line: 285, column: 29, scope: !16622)
!16638 = !DILocation(line: 285, column: 33, scope: !16622)
!16639 = !DILocalVariable(name: "m4ac", scope: !16622, file: !1145, line: 286, type: !2614)
!16640 = !DILocation(line: 286, column: 22, scope: !16622)
!16641 = !DILocalVariable(name: "gbc", scope: !16622, file: !1145, line: 287, type: !2044)
!16642 = !DILocation(line: 287, column: 19, scope: !16622)
!16643 = !DILocalVariable(name: "config_start_bit", scope: !16622, file: !1145, line: 288, type: !1012)
!16644 = !DILocation(line: 288, column: 9, scope: !16622)
!16645 = !DILocation(line: 288, column: 43, scope: !16622)
!16646 = !DILocation(line: 288, column: 28, scope: !16622)
!16647 = !DILocalVariable(name: "sync_extension", scope: !16622, file: !1145, line: 289, type: !1012)
!16648 = !DILocation(line: 289, column: 9, scope: !16622)
!16649 = !DILocalVariable(name: "bits_consumed", scope: !16622, file: !1145, line: 290, type: !1012)
!16650 = !DILocation(line: 290, column: 9, scope: !16622)
!16651 = !DILocalVariable(name: "esize", scope: !16622, file: !1145, line: 290, type: !1012)
!16652 = !DILocation(line: 290, column: 24, scope: !16622)
!16653 = !DILocalVariable(name: "i", scope: !16622, file: !1145, line: 290, type: !1012)
!16654 = !DILocation(line: 290, column: 31, scope: !16622)
!16655 = !DILocation(line: 292, column: 9, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16622, file: !1145, line: 292, column: 9)
!16657 = !DILocation(line: 292, column: 16, scope: !16656)
!16658 = !DILocation(line: 292, column: 9, scope: !16622)
!16659 = !DILocation(line: 293, column: 24, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16656, file: !1145, line: 292, column: 21)
!16661 = !DILocation(line: 294, column: 20, scope: !16660)
!16662 = !DILocation(line: 294, column: 45, scope: !16660)
!16663 = !DILocation(line: 294, column: 31, scope: !16660)
!16664 = !DILocation(line: 294, column: 28, scope: !16660)
!16665 = !DILocation(line: 294, column: 19, scope: !16660)
!16666 = !DILocation(line: 294, column: 67, scope: !16667)
!16667 = !DILexicalBlockFile(scope: !16660, file: !1145, discriminator: 1)
!16668 = !DILocation(line: 294, column: 53, scope: !16667)
!16669 = !DILocation(line: 294, column: 19, scope: !16667)
!16670 = !DILocation(line: 294, column: 75, scope: !16671)
!16671 = !DILexicalBlockFile(scope: !16660, file: !1145, discriminator: 2)
!16672 = !DILocation(line: 294, column: 19, scope: !16671)
!16673 = !DILocation(line: 294, column: 19, scope: !16674)
!16674 = !DILexicalBlockFile(scope: !16660, file: !1145, discriminator: 3)
!16675 = !DILocation(line: 294, column: 16, scope: !16674)
!16676 = !DILocation(line: 295, column: 29, scope: !16660)
!16677 = !DILocation(line: 295, column: 33, scope: !16660)
!16678 = !DILocation(line: 295, column: 41, scope: !16660)
!16679 = !DILocation(line: 295, column: 60, scope: !16660)
!16680 = !DILocation(line: 295, column: 58, scope: !16660)
!16681 = !DILocation(line: 295, column: 9, scope: !16660)
!16682 = !DILocation(line: 296, column: 30, scope: !16660)
!16683 = !DILocation(line: 296, column: 9, scope: !16660)
!16684 = !DILocation(line: 297, column: 5, scope: !16660)
!16685 = !DILocation(line: 297, column: 16, scope: !16686)
!16686 = !DILexicalBlockFile(scope: !16687, file: !1145, discriminator: 1)
!16687 = distinct !DILexicalBlock(scope: !16656, file: !1145, line: 297, column: 16)
!16688 = !DILocation(line: 297, column: 23, scope: !16686)
!16689 = !DILocation(line: 298, column: 16, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16687, file: !1145, line: 297, column: 29)
!16691 = !DILocation(line: 298, column: 15, scope: !16690)
!16692 = !DILocation(line: 299, column: 5, scope: !16690)
!16693 = !DILocation(line: 300, column: 9, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16687, file: !1145, line: 299, column: 12)
!16695 = !DILocation(line: 303, column: 23, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16622, file: !1145, line: 303, column: 9)
!16697 = !DILocation(line: 303, column: 9, scope: !16696)
!16698 = !DILocation(line: 303, column: 27, scope: !16696)
!16699 = !DILocation(line: 303, column: 9, scope: !16622)
!16700 = !DILocation(line: 304, column: 9, scope: !16696)
!16701 = !DILocation(line: 306, column: 58, scope: !16622)
!16702 = !DILocation(line: 307, column: 59, scope: !16622)
!16703 = !DILocation(line: 308, column: 53, scope: !16622)
!16704 = !DILocation(line: 306, column: 21, scope: !16622)
!16705 = !DILocation(line: 306, column: 19, scope: !16622)
!16706 = !DILocation(line: 310, column: 9, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16622, file: !1145, line: 310, column: 9)
!16708 = !DILocation(line: 310, column: 25, scope: !16707)
!16709 = !DILocation(line: 310, column: 23, scope: !16707)
!16710 = !DILocation(line: 310, column: 9, scope: !16622)
!16711 = !DILocation(line: 311, column: 9, scope: !16707)
!16712 = !DILocation(line: 312, column: 22, scope: !16622)
!16713 = !DILocation(line: 312, column: 19, scope: !16622)
!16714 = !DILocation(line: 314, column: 9, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16622, file: !1145, line: 314, column: 9)
!16716 = !DILocation(line: 314, column: 16, scope: !16715)
!16717 = !DILocation(line: 314, column: 9, scope: !16622)
!16718 = !DILocation(line: 315, column: 16, scope: !16715)
!16719 = !DILocation(line: 315, column: 14, scope: !16715)
!16720 = !DILocation(line: 315, column: 7, scope: !16715)
!16721 = !DILocation(line: 317, column: 10, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16622, file: !1145, line: 317, column: 9)
!16723 = !DILocation(line: 317, column: 19, scope: !16722)
!16724 = !DILocation(line: 317, column: 31, scope: !16722)
!16725 = !DILocation(line: 318, column: 9, scope: !16722)
!16726 = !DILocation(line: 318, column: 13, scope: !16722)
!16727 = !DILocation(line: 318, column: 19, scope: !16722)
!16728 = !DILocation(line: 318, column: 24, scope: !16722)
!16729 = !DILocation(line: 318, column: 44, scope: !16722)
!16730 = !DILocation(line: 318, column: 36, scope: !16722)
!16731 = !DILocation(line: 318, column: 56, scope: !16722)
!16732 = !DILocation(line: 319, column: 9, scope: !16722)
!16733 = !DILocation(line: 319, column: 13, scope: !16722)
!16734 = !DILocation(line: 319, column: 19, scope: !16722)
!16735 = !DILocation(line: 319, column: 24, scope: !16722)
!16736 = !DILocation(line: 319, column: 44, scope: !16722)
!16737 = !DILocation(line: 319, column: 36, scope: !16722)
!16738 = !DILocation(line: 317, column: 9, scope: !16739)
!16739 = !DILexicalBlockFile(scope: !16622, file: !1145, discriminator: 1)
!16740 = !DILocation(line: 321, column: 13, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !1145, line: 321, column: 13)
!16742 = distinct !DILexicalBlock(scope: !16722, file: !1145, line: 319, column: 57)
!16743 = !DILocation(line: 321, column: 22, scope: !16741)
!16744 = !DILocation(line: 321, column: 13, scope: !16742)
!16745 = !DILocation(line: 322, column: 20, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16741, file: !1145, line: 321, column: 35)
!16747 = !DILocation(line: 322, column: 95, scope: !16746)
!16748 = !DILocation(line: 322, column: 113, scope: !16746)
!16749 = !DILocation(line: 322, column: 13, scope: !16746)
!16750 = !DILocation(line: 323, column: 9, scope: !16746)
!16751 = !DILocation(line: 324, column: 20, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16741, file: !1145, line: 323, column: 16)
!16753 = !DILocation(line: 324, column: 13, scope: !16752)
!16754 = !DILocation(line: 326, column: 9, scope: !16742)
!16755 = !DILocation(line: 326, column: 18, scope: !16742)
!16756 = !DILocation(line: 326, column: 30, scope: !16742)
!16757 = !DILocation(line: 328, column: 18, scope: !16742)
!16758 = !DILocation(line: 328, column: 25, scope: !16742)
!16759 = !DILocation(line: 328, column: 30, scope: !16742)
!16760 = !DILocation(line: 328, column: 15, scope: !16742)
!16761 = !DILocation(line: 330, column: 13, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16742, file: !1145, line: 330, column: 13)
!16763 = !DILocation(line: 330, column: 20, scope: !16762)
!16764 = !DILocation(line: 330, column: 37, scope: !16762)
!16765 = !DILocation(line: 330, column: 35, scope: !16762)
!16766 = !DILocation(line: 330, column: 13, scope: !16742)
!16767 = !DILocation(line: 331, column: 21, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !1145, line: 330, column: 44)
!16769 = !DILocation(line: 331, column: 28, scope: !16768)
!16770 = !DILocation(line: 331, column: 13, scope: !16768)
!16771 = !DILocation(line: 332, column: 42, scope: !16768)
!16772 = !DILocation(line: 332, column: 48, scope: !16768)
!16773 = !DILocation(line: 332, column: 32, scope: !16768)
!16774 = !DILocation(line: 332, column: 13, scope: !16768)
!16775 = !DILocation(line: 332, column: 20, scope: !16768)
!16776 = !DILocation(line: 332, column: 30, scope: !16768)
!16777 = !DILocation(line: 333, column: 18, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16768, file: !1145, line: 333, column: 17)
!16779 = !DILocation(line: 333, column: 25, scope: !16778)
!16780 = !DILocation(line: 333, column: 17, scope: !16768)
!16781 = !DILocation(line: 334, column: 17, scope: !16778)
!16782 = !DILocation(line: 335, column: 9, scope: !16768)
!16783 = !DILocation(line: 337, column: 33, scope: !16742)
!16784 = !DILocation(line: 337, column: 9, scope: !16742)
!16785 = !DILocation(line: 337, column: 16, scope: !16742)
!16786 = !DILocation(line: 337, column: 31, scope: !16742)
!16787 = !DILocation(line: 338, column: 16, scope: !16742)
!16788 = !DILocation(line: 338, column: 15, scope: !16742)
!16789 = !DILocation(line: 339, column: 16, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16742, file: !1145, line: 339, column: 9)
!16791 = !DILocation(line: 339, column: 14, scope: !16790)
!16792 = !DILocation(line: 339, column: 21, scope: !16793)
!16793 = !DILexicalBlockFile(scope: !16794, file: !1145, discriminator: 1)
!16794 = distinct !DILexicalBlock(scope: !16790, file: !1145, line: 339, column: 9)
!16795 = !DILocation(line: 339, column: 25, scope: !16793)
!16796 = !DILocation(line: 339, column: 23, scope: !16793)
!16797 = !DILocation(line: 339, column: 9, scope: !16793)
!16798 = !DILocation(line: 340, column: 33, scope: !16799)
!16799 = distinct !DILexicalBlock(scope: !16794, file: !1145, line: 339, column: 37)
!16800 = !DILocation(line: 340, column: 28, scope: !16799)
!16801 = !DILocation(line: 340, column: 11, scope: !16799)
!16802 = !DILocation(line: 340, column: 18, scope: !16799)
!16803 = !DILocation(line: 340, column: 31, scope: !16799)
!16804 = !DILocation(line: 341, column: 9, scope: !16799)
!16805 = !DILocation(line: 339, column: 33, scope: !16806)
!16806 = !DILexicalBlockFile(scope: !16794, file: !1145, discriminator: 2)
!16807 = !DILocation(line: 339, column: 9, scope: !16806)
!16808 = distinct !{!16808, !16809}
!16809 = !DILocation(line: 339, column: 9, scope: !16742)
!16810 = !DILocation(line: 342, column: 16, scope: !16742)
!16811 = !DILocation(line: 342, column: 23, scope: !16742)
!16812 = !DILocation(line: 342, column: 33, scope: !16742)
!16813 = !DILocation(line: 342, column: 32, scope: !16742)
!16814 = !DILocation(line: 342, column: 9, scope: !16742)
!16815 = !DILocation(line: 343, column: 5, scope: !16742)
!16816 = !DILocation(line: 344, column: 20, scope: !16622)
!16817 = !DILocation(line: 344, column: 24, scope: !16622)
!16818 = !DILocation(line: 344, column: 5, scope: !16622)
!16819 = !DILocation(line: 346, column: 5, scope: !16622)
!16820 = !DILocation(line: 347, column: 1, scope: !16622)
!16821 = distinct !DISubprogram(name: "get_bits_long", scope: !2045, file: !2045, line: 531, type: !6124, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1817)
!16822 = !DILocalVariable(name: "s", arg: 1, scope: !16821, file: !2045, line: 531, type: !2043)
!16823 = !DILocation(line: 531, column: 57, scope: !16821)
!16824 = !DILocalVariable(name: "n", arg: 2, scope: !16821, file: !2045, line: 531, type: !1012)
!16825 = !DILocation(line: 531, column: 64, scope: !16821)
!16826 = !DILocation(line: 534, column: 10, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16821, file: !2045, line: 534, column: 9)
!16828 = !DILocation(line: 534, column: 9, scope: !16821)
!16829 = !DILocation(line: 535, column: 9, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16827, file: !2045, line: 534, column: 13)
!16831 = !DILocation(line: 540, column: 16, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16827, file: !2045, line: 540, column: 16)
!16833 = !DILocation(line: 540, column: 18, scope: !16832)
!16834 = !DILocation(line: 540, column: 16, scope: !16827)
!16835 = !DILocation(line: 541, column: 25, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16832, file: !2045, line: 540, column: 25)
!16837 = !DILocation(line: 541, column: 28, scope: !16836)
!16838 = !DILocation(line: 541, column: 16, scope: !16836)
!16839 = !DILocation(line: 541, column: 9, scope: !16836)
!16840 = !DILocalVariable(name: "ret", scope: !16841, file: !2045, line: 547, type: !1013)
!16841 = distinct !DILexicalBlock(scope: !16832, file: !2045, line: 542, column: 12)
!16842 = !DILocation(line: 547, column: 18, scope: !16841)
!16843 = !DILocation(line: 547, column: 33, scope: !16841)
!16844 = !DILocation(line: 547, column: 24, scope: !16841)
!16845 = !DILocation(line: 547, column: 44, scope: !16841)
!16846 = !DILocation(line: 547, column: 46, scope: !16841)
!16847 = !DILocation(line: 547, column: 40, scope: !16841)
!16848 = !DILocation(line: 548, column: 16, scope: !16841)
!16849 = !DILocation(line: 548, column: 31, scope: !16841)
!16850 = !DILocation(line: 548, column: 34, scope: !16841)
!16851 = !DILocation(line: 548, column: 36, scope: !16841)
!16852 = !DILocation(line: 548, column: 22, scope: !16841)
!16853 = !DILocation(line: 548, column: 20, scope: !16841)
!16854 = !DILocation(line: 548, column: 9, scope: !16841)
!16855 = !DILocation(line: 552, column: 1, scope: !16821)
