; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--cbs_vp9.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--cbs_vp9.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CodedBitstreamContext = type { i8*, %struct.CodedBitstreamType*, i8*, i32*, i32, i32, i32 }
%struct.CodedBitstreamType = type { i32, i64, {}*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*)*, void (%struct.CodedBitstreamContext*)* }
%struct.CodedBitstreamFragment = type { i8*, i64, i64, %struct.AVBufferRef*, i32, %struct.CodedBitstreamUnit* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.CodedBitstreamUnit = type { i32, i8*, i64, i64, %struct.AVBufferRef*, i8*, %struct.AVBufferRef* }
%struct.VP9RawSuperframeIndex = type { i8, i8, i8, [8 x i32] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.VP9RawFrame = type { %struct.VP9RawFrameHeader, i8*, i64, %struct.AVBufferRef* }
%struct.VP9RawFrameHeader = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], [4 x i8], i8, i8, i8, i8, [3 x i8], i16, i16, i8, i16, i16, i8, i8, i8, i8, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], i8, i8, i8, i8, i8, i8, [7 x i8], i8, [3 x i8], i8, i8, [8 x [4 x i8]], [8 x [4 x i8]], [8 x [4 x i8]], i8, i8, i16 }
%struct.CodedBitstreamVP9Context = type { i32, i16, i16, i16, i16, i32, i32, i8, i8, i32, [8 x %struct.VP9ReferenceFrameState], i8*, i64 }
%struct.VP9ReferenceFrameState = type { i32, i32, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%union.unaligned_32 = type { i32 }

@ff_cbs_type_vp9 = constant { i32, i64, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*, i32)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*)*, void (%struct.CodedBitstreamContext*)* } { i32 167, i64 208, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*, i32)* @cbs_vp9_split_fragment, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)* @cbs_vp9_read_unit, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)* @cbs_vp9_write_unit, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*)* @cbs_vp9_assemble_fragment, void (%struct.CodedBitstreamContext*)* @cbs_vp9_close }, align 8
@.str = private unnamed_addr constant [45 x i8] c"Frame %d too large in superframe: %u bytes.\0A\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"Extra padding at end of superframe: %zu bytes.\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"Superframe Index\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"superframe_marker\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"bytes_per_framesize_minus_1\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"frames_in_superframe_minus_1\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"frame_sizes[i]\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"width % 8 == 0\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"libavcodec/cbs_vp9.c\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"Invalid le value at %s: bitstream ended.\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"pos % 8 == 0\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"pos <= unit->data_size\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Frame\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"frame_marker\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"profile_low_bit\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"profile_high_bit\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"reserved_zero\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"show_existing_frame\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"frame_to_show_map_idx\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"frame_type\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"show_frame\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"error_resilient_mode\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"intra_only\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"reset_frame_context\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"refresh_frame_flags\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"ref_frame_idx[i]\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"ref_frame_sign_bias[VP9_LAST_FRAME + i]\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"allow_high_precision_mv\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"refresh_frame_context\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"frame_parallel_decoding_mode\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"frame_context_idx\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"header_size_in_bytes\00", align 1
@.str.33 = private unnamed_addr constant [65 x i8] c"Frame:  size %dx%d  subsample %dx%d  bit_depth %d  tiles %dx%d.\0A\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"frame_sync_byte_0\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"frame_sync_byte_1\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"frame_sync_byte_2\00", align 1
@.str.37 = private unnamed_addr constant [42 x i8] c"Invalid frame sync code: %02x %02x %02x.\0A\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"ten_or_twelve_bit\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"color_space\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"color_range\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"subsampling_x\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"subsampling_y\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"frame_width_minus_1\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"frame_height_minus_1\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"render_and_frame_size_different\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"render_width_minus_1\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"render_height_minus_1\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"found_ref[i]\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"is_filter_switchable\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"raw_interpolation_filter_type\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"loop_filter_level\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"loop_filter_sharpness\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"loop_filter_delta_enabled\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"loop_filter_delta_update\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"update_ref_delta[i]\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"loop_filter_ref_deltas[i]\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"update_mode_delta[i]\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"loop_filter_mode_deltas[i]\00", align 1
@.str.59 = private unnamed_addr constant [46 x i8] c"Invalid signed value at %s: bitstream ended.\0A\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"base_q_idx\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"delta_q_y_dc.delta_coded\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"delta_q_y_dc.delta_q\00", align 1
@.str.63 = private unnamed_addr constant [26 x i8] c"delta_q_uv_dc.delta_coded\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"delta_q_uv_dc.delta_q\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"delta_q_uv_ac.delta_coded\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"delta_q_uv_ac.delta_q\00", align 1
@cbs_vp9_read_segmentation_params.segmentation_feature_bits = internal constant [4 x i32] [i32 8, i32 6, i32 2, i32 0], align 16
@cbs_vp9_read_segmentation_params.segmentation_feature_signed = internal constant [4 x i32] [i32 1, i32 1, i32 0, i32 0], align 16
@.str.67 = private unnamed_addr constant [21 x i8] c"segmentation_enabled\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"segmentation_update_map\00", align 1
@.str.69 = private unnamed_addr constant [38 x i8] c"segmentation_tree_probs[i].prob_coded\00", align 1
@.str.70 = private unnamed_addr constant [32 x i8] c"segmentation_tree_probs[i].prob\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"segmentation_temporal_update\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"segmentation_pred_prob[i].prob_coded\00", align 1
@.str.73 = private unnamed_addr constant [31 x i8] c"segmentation_pred_prob[i].prob\00", align 1
@.str.74 = private unnamed_addr constant [25 x i8] c"segmentation_update_data\00", align 1
@.str.75 = private unnamed_addr constant [33 x i8] c"segmentation_abs_or_delta_update\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"feature_enabled[i][j]\00", align 1
@.str.77 = private unnamed_addr constant [20 x i8] c"feature_value[i][j]\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"feature_sign[i][j]\00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"tile_cols_log2\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"tile_rows_log2\00", align 1
@.str.81 = private unnamed_addr constant [67 x i8] c"range_min <= range_max && range_max - range_min < sizeof(bits) - 1\00", align 1
@.str.82 = private unnamed_addr constant [49 x i8] c"Invalid increment value at %s: bitstream ended.\0A\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"zero_bit\00", align 1
@.str.84 = private unnamed_addr constant [80 x i8] c"Unable to allocate a sufficiently large write buffer (last attempt %zu bytes).\0A\00", align 1
@.str.85 = private unnamed_addr constant [30 x i8] c"put_bits_count(&pbc) % 8 == 0\00", align 1
@.str.86 = private unnamed_addr constant [68 x i8] c"Warning: %s does not match inferred value: %ld, but should be %ld.\0A\00", align 1
@.str.87 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@cbs_vp9_write_segmentation_params.segmentation_feature_bits = internal constant [4 x i32] [i32 8, i32 6, i32 2, i32 0], align 16
@cbs_vp9_write_segmentation_params.segmentation_feature_signed = internal constant [4 x i32] [i32 1, i32 1, i32 0, i32 0], align 16
@.str.88 = private unnamed_addr constant [26 x i8] c"segmentation_pred_prob[i]\00", align 1
@.str.89 = private unnamed_addr constant [52 x i8] c"range_min <= range_max && range_max - range_min < 8\00", align 1
@.str.90 = private unnamed_addr constant [46 x i8] c"%s out of range: %u, but must be in [%u,%u].\0A\00", align 1
@.str.91 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.93 = private unnamed_addr constant [41 x i8] c"Too many frames to make superframe: %d.\0A\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"size_len <= 4\00", align 1
@.str.95 = private unnamed_addr constant [38 x i8] c"size - pos > frag->units[i].data_size\00", align 1
@.str.96 = private unnamed_addr constant [44 x i8] c"size - pos == 2 + frag->nb_units * size_len\00", align 1
@.str.97 = private unnamed_addr constant [35 x i8] c"Failed to write superframe index.\0A\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"put_bits_left(&pbc) == 0\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_split_fragment(%struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamFragment* %frag, i32 %header) #0 !dbg !728 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %frag.addr = alloca %struct.CodedBitstreamFragment*, align 8
  %header.addr = alloca i32, align 4
  %superframe_header = alloca i8, align 1
  %err = alloca i32, align 4
  %sfi = alloca %struct.VP9RawSuperframeIndex, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  %index_size = alloca i64, align 8
  %pos = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !729, metadata !730), !dbg !731
  store %struct.CodedBitstreamFragment* %frag, %struct.CodedBitstreamFragment** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamFragment** %frag.addr, metadata !732, metadata !730), !dbg !733
  store i32 %header, i32* %header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header.addr, metadata !734, metadata !730), !dbg !735
  call void @llvm.dbg.declare(metadata i8* %superframe_header, metadata !736, metadata !730), !dbg !737
  call void @llvm.dbg.declare(metadata i32* %err, metadata !738, metadata !730), !dbg !739
  %0 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !740
  %data_size = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %0, i32 0, i32 1, !dbg !741
  %1 = load i64, i64* %data_size, align 8, !dbg !741
  %sub = sub i64 %1, 1, !dbg !742
  %2 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !743
  %data = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %2, i32 0, i32 0, !dbg !744
  %3 = load i8*, i8** %data, align 8, !dbg !744
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !743
  %4 = load i8, i8* %arrayidx, align 1, !dbg !743
  store i8 %4, i8* %superframe_header, align 1, !dbg !745
  %5 = load i8, i8* %superframe_header, align 1, !dbg !746
  %conv = zext i8 %5 to i32, !dbg !746
  %and = and i32 %conv, 224, !dbg !748
  %cmp = icmp eq i32 %and, 192, !dbg !749
  br i1 %cmp, label %if.then, label %if.else, !dbg !750

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VP9RawSuperframeIndex* %sfi, metadata !751, metadata !730), !dbg !762
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !763, metadata !730), !dbg !764
  call void @llvm.dbg.declare(metadata i64* %index_size, metadata !765, metadata !730), !dbg !766
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !767, metadata !730), !dbg !768
  call void @llvm.dbg.declare(metadata i32* %i, metadata !769, metadata !730), !dbg !770
  %6 = load i8, i8* %superframe_header, align 1, !dbg !771
  %conv2 = zext i8 %6 to i32, !dbg !771
  %and3 = and i32 %conv2, 24, !dbg !772
  %shr = ashr i32 %and3, 3, !dbg !773
  %add = add nsw i32 %shr, 1, !dbg !774
  %7 = load i8, i8* %superframe_header, align 1, !dbg !775
  %conv4 = zext i8 %7 to i32, !dbg !775
  %and5 = and i32 %conv4, 7, !dbg !776
  %add6 = add nsw i32 %and5, 1, !dbg !777
  %mul = mul nsw i32 %add, %add6, !dbg !778
  %add7 = add nsw i32 2, %mul, !dbg !779
  %conv8 = sext i32 %add7 to i64, !dbg !780
  store i64 %conv8, i64* %index_size, align 8, !dbg !781
  %8 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !782
  %data9 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %8, i32 0, i32 0, !dbg !783
  %9 = load i8*, i8** %data9, align 8, !dbg !783
  %10 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !784
  %data_size10 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %10, i32 0, i32 1, !dbg !785
  %11 = load i64, i64* %data_size10, align 8, !dbg !785
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %11, !dbg !786
  %12 = load i64, i64* %index_size, align 8, !dbg !787
  %idx.neg = sub i64 0, %12, !dbg !788
  %add.ptr11 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !788
  %13 = load i64, i64* %index_size, align 8, !dbg !789
  %mul12 = mul i64 8, %13, !dbg !790
  %conv13 = trunc i64 %mul12 to i32, !dbg !791
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gbc, i8* %add.ptr11, i32 %conv13), !dbg !792
  store i32 %call, i32* %err, align 4, !dbg !793
  %14 = load i32, i32* %err, align 4, !dbg !794
  %cmp14 = icmp slt i32 %14, 0, !dbg !796
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !797

if.then16:                                        ; preds = %if.then
  %15 = load i32, i32* %err, align 4, !dbg !798
  store i32 %15, i32* %retval, align 4, !dbg !799
  br label %return, !dbg !799

if.end:                                           ; preds = %if.then
  %16 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !800
  %call17 = call i32 @cbs_vp9_read_superframe_index(%struct.CodedBitstreamContext* %16, %struct.GetBitContext* %gbc, %struct.VP9RawSuperframeIndex* %sfi), !dbg !801
  store i32 %call17, i32* %err, align 4, !dbg !802
  %17 = load i32, i32* %err, align 4, !dbg !803
  %cmp18 = icmp slt i32 %17, 0, !dbg !805
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !806

if.then20:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !807
  store i32 %18, i32* %retval, align 4, !dbg !808
  br label %return, !dbg !808

if.end21:                                         ; preds = %if.end
  store i64 0, i64* %pos, align 8, !dbg !809
  store i32 0, i32* %i, align 4, !dbg !810
  br label %for.cond, !dbg !812

for.cond:                                         ; preds = %for.inc, %if.end21
  %19 = load i32, i32* %i, align 4, !dbg !813
  %frames_in_superframe_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 2, !dbg !816
  %20 = load i8, i8* %frames_in_superframe_minus_1, align 2, !dbg !816
  %conv22 = zext i8 %20 to i32, !dbg !817
  %cmp23 = icmp sle i32 %19, %conv22, !dbg !818
  br i1 %cmp23, label %for.body, label %for.end, !dbg !819

for.body:                                         ; preds = %for.cond
  %21 = load i64, i64* %pos, align 8, !dbg !820
  %22 = load i32, i32* %i, align 4, !dbg !823
  %idxprom = sext i32 %22 to i64, !dbg !824
  %frame_sizes = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 3, !dbg !825
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes, i64 0, i64 %idxprom, !dbg !824
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !824
  %conv26 = zext i32 %23 to i64, !dbg !824
  %add27 = add i64 %21, %conv26, !dbg !826
  %24 = load i64, i64* %index_size, align 8, !dbg !827
  %add28 = add i64 %add27, %24, !dbg !828
  %25 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !829
  %data_size29 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %25, i32 0, i32 1, !dbg !830
  %26 = load i64, i64* %data_size29, align 8, !dbg !830
  %cmp30 = icmp ugt i64 %add28, %26, !dbg !831
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !832

if.then32:                                        ; preds = %for.body
  %27 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !833
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %27, i32 0, i32 0, !dbg !835
  %28 = load i8*, i8** %log_ctx, align 8, !dbg !835
  %29 = load i32, i32* %i, align 4, !dbg !836
  %30 = load i32, i32* %i, align 4, !dbg !837
  %idxprom33 = sext i32 %30 to i64, !dbg !838
  %frame_sizes34 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 3, !dbg !839
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes34, i64 0, i64 %idxprom33, !dbg !838
  %31 = load i32, i32* %arrayidx35, align 4, !dbg !838
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i32 0, i32 0), i32 %29, i32 %31), !dbg !840
  store i32 -1094995529, i32* %retval, align 4, !dbg !841
  br label %return, !dbg !841

if.end36:                                         ; preds = %for.body
  %32 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !842
  %33 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !843
  %34 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !844
  %data37 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %34, i32 0, i32 0, !dbg !845
  %35 = load i8*, i8** %data37, align 8, !dbg !845
  %36 = load i64, i64* %pos, align 8, !dbg !846
  %add.ptr38 = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !847
  %37 = load i32, i32* %i, align 4, !dbg !848
  %idxprom39 = sext i32 %37 to i64, !dbg !849
  %frame_sizes40 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 3, !dbg !850
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes40, i64 0, i64 %idxprom39, !dbg !849
  %38 = load i32, i32* %arrayidx41, align 4, !dbg !849
  %conv42 = zext i32 %38 to i64, !dbg !849
  %39 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !851
  %data_ref = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %39, i32 0, i32 3, !dbg !852
  %40 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref, align 8, !dbg !852
  %call43 = call i32 @ff_cbs_insert_unit_data(%struct.CodedBitstreamContext* %32, %struct.CodedBitstreamFragment* %33, i32 -1, i32 0, i8* %add.ptr38, i64 %conv42, %struct.AVBufferRef* %40), !dbg !853
  store i32 %call43, i32* %err, align 4, !dbg !854
  %41 = load i32, i32* %err, align 4, !dbg !855
  %cmp44 = icmp slt i32 %41, 0, !dbg !857
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !858

if.then46:                                        ; preds = %if.end36
  %42 = load i32, i32* %err, align 4, !dbg !859
  store i32 %42, i32* %retval, align 4, !dbg !860
  br label %return, !dbg !860

if.end47:                                         ; preds = %if.end36
  %43 = load i32, i32* %i, align 4, !dbg !861
  %idxprom48 = sext i32 %43 to i64, !dbg !862
  %frame_sizes49 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 3, !dbg !863
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes49, i64 0, i64 %idxprom48, !dbg !862
  %44 = load i32, i32* %arrayidx50, align 4, !dbg !862
  %conv51 = zext i32 %44 to i64, !dbg !862
  %45 = load i64, i64* %pos, align 8, !dbg !864
  %add52 = add i64 %45, %conv51, !dbg !864
  store i64 %add52, i64* %pos, align 8, !dbg !864
  br label %for.inc, !dbg !865

for.inc:                                          ; preds = %if.end47
  %46 = load i32, i32* %i, align 4, !dbg !866
  %inc = add nsw i32 %46, 1, !dbg !866
  store i32 %inc, i32* %i, align 4, !dbg !866
  br label %for.cond, !dbg !868, !llvm.loop !869

for.end:                                          ; preds = %for.cond
  %47 = load i64, i64* %pos, align 8, !dbg !871
  %48 = load i64, i64* %index_size, align 8, !dbg !873
  %add53 = add i64 %47, %48, !dbg !874
  %49 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !875
  %data_size54 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %49, i32 0, i32 1, !dbg !876
  %50 = load i64, i64* %data_size54, align 8, !dbg !876
  %cmp55 = icmp ne i64 %add53, %50, !dbg !877
  br i1 %cmp55, label %if.then57, label %if.end62, !dbg !878

if.then57:                                        ; preds = %for.end
  %51 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !879
  %log_ctx58 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %51, i32 0, i32 0, !dbg !881
  %52 = load i8*, i8** %log_ctx58, align 8, !dbg !881
  %53 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !882
  %data_size59 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %53, i32 0, i32 1, !dbg !883
  %54 = load i64, i64* %data_size59, align 8, !dbg !883
  %55 = load i64, i64* %pos, align 8, !dbg !884
  %56 = load i64, i64* %index_size, align 8, !dbg !885
  %add60 = add i64 %55, %56, !dbg !886
  %sub61 = sub i64 %54, %add60, !dbg !887
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i64 %sub61), !dbg !888
  br label %if.end62, !dbg !889

if.end62:                                         ; preds = %if.then57, %for.end
  store i32 0, i32* %retval, align 4, !dbg !890
  br label %return, !dbg !890

if.else:                                          ; preds = %entry
  %57 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !891
  %58 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !893
  %59 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !894
  %data63 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %59, i32 0, i32 0, !dbg !895
  %60 = load i8*, i8** %data63, align 8, !dbg !895
  %61 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !896
  %data_size64 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %61, i32 0, i32 1, !dbg !897
  %62 = load i64, i64* %data_size64, align 8, !dbg !897
  %63 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !898
  %data_ref65 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %63, i32 0, i32 3, !dbg !899
  %64 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref65, align 8, !dbg !899
  %call66 = call i32 @ff_cbs_insert_unit_data(%struct.CodedBitstreamContext* %57, %struct.CodedBitstreamFragment* %58, i32 -1, i32 0, i8* %60, i64 %62, %struct.AVBufferRef* %64), !dbg !900
  store i32 %call66, i32* %err, align 4, !dbg !901
  %65 = load i32, i32* %err, align 4, !dbg !902
  %cmp67 = icmp slt i32 %65, 0, !dbg !904
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !905

if.then69:                                        ; preds = %if.else
  %66 = load i32, i32* %err, align 4, !dbg !906
  store i32 %66, i32* %retval, align 4, !dbg !907
  br label %return, !dbg !907

if.end70:                                         ; preds = %if.else
  br label %if.end71

if.end71:                                         ; preds = %if.end70
  store i32 0, i32* %retval, align 4, !dbg !908
  br label %return, !dbg !908

return:                                           ; preds = %if.end71, %if.then69, %if.end62, %if.then46, %if.then32, %if.then20, %if.then16
  %67 = load i32, i32* %retval, align 4, !dbg !909
  ret i32 %67, !dbg !909
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_unit(%struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamUnit* %unit) #0 !dbg !910 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %unit.addr = alloca %struct.CodedBitstreamUnit*, align 8
  %frame = alloca %struct.VP9RawFrame*, align 8
  %gbc = alloca %struct.GetBitContext, align 8
  %err = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !911, metadata !730), !dbg !912
  store %struct.CodedBitstreamUnit* %unit, %struct.CodedBitstreamUnit** %unit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamUnit** %unit.addr, metadata !913, metadata !730), !dbg !914
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrame** %frame, metadata !915, metadata !730), !dbg !916
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !917, metadata !730), !dbg !918
  call void @llvm.dbg.declare(metadata i32* %err, metadata !919, metadata !730), !dbg !920
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !921, metadata !730), !dbg !922
  %0 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !923
  %data = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %0, i32 0, i32 1, !dbg !924
  %1 = load i8*, i8** %data, align 8, !dbg !924
  %2 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !925
  %data_size = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %2, i32 0, i32 2, !dbg !926
  %3 = load i64, i64* %data_size, align 8, !dbg !926
  %mul = mul i64 8, %3, !dbg !927
  %conv = trunc i64 %mul to i32, !dbg !928
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gbc, i8* %1, i32 %conv), !dbg !929
  store i32 %call, i32* %err, align 4, !dbg !930
  %4 = load i32, i32* %err, align 4, !dbg !931
  %cmp = icmp slt i32 %4, 0, !dbg !933
  br i1 %cmp, label %if.then, label %if.end, !dbg !934

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !935
  store i32 %5, i32* %retval, align 4, !dbg !936
  br label %return, !dbg !936

if.end:                                           ; preds = %entry
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !937
  %7 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !938
  %call2 = call i32 @ff_cbs_alloc_unit_content(%struct.CodedBitstreamContext* %6, %struct.CodedBitstreamUnit* %7, i64 208, void (i8*, i8*)* @cbs_vp9_free_frame), !dbg !939
  store i32 %call2, i32* %err, align 4, !dbg !940
  %8 = load i32, i32* %err, align 4, !dbg !941
  %cmp3 = icmp slt i32 %8, 0, !dbg !943
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !944

if.then5:                                         ; preds = %if.end
  %9 = load i32, i32* %err, align 4, !dbg !945
  store i32 %9, i32* %retval, align 4, !dbg !946
  br label %return, !dbg !946

if.end6:                                          ; preds = %if.end
  %10 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !947
  %content = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %10, i32 0, i32 5, !dbg !948
  %11 = load i8*, i8** %content, align 8, !dbg !948
  %12 = bitcast i8* %11 to %struct.VP9RawFrame*, !dbg !947
  store %struct.VP9RawFrame* %12, %struct.VP9RawFrame** %frame, align 8, !dbg !949
  %13 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !950
  %14 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !951
  %call7 = call i32 @cbs_vp9_read_frame(%struct.CodedBitstreamContext* %13, %struct.GetBitContext* %gbc, %struct.VP9RawFrame* %14), !dbg !952
  store i32 %call7, i32* %err, align 4, !dbg !953
  %15 = load i32, i32* %err, align 4, !dbg !954
  %cmp8 = icmp slt i32 %15, 0, !dbg !956
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !957

if.then10:                                        ; preds = %if.end6
  %16 = load i32, i32* %err, align 4, !dbg !958
  store i32 %16, i32* %retval, align 4, !dbg !959
  br label %return, !dbg !959

if.end11:                                         ; preds = %if.end6
  %call12 = call i32 @get_bits_count(%struct.GetBitContext* %gbc), !dbg !960
  store i32 %call12, i32* %pos, align 4, !dbg !961
  br label %do.body, !dbg !962, !llvm.loop !963

do.body:                                          ; preds = %if.end11
  %17 = load i32, i32* %pos, align 4, !dbg !964
  %rem = srem i32 %17, 8, !dbg !968
  %cmp13 = icmp eq i32 %rem, 0, !dbg !969
  br i1 %cmp13, label %if.end16, label %if.then15, !dbg !970

if.then15:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 506), !dbg !971
  call void @abort() #6, !dbg !974
  unreachable, !dbg !976

if.end16:                                         ; preds = %do.body
  br label %do.end, !dbg !977

do.end:                                           ; preds = %if.end16
  %18 = load i32, i32* %pos, align 4, !dbg !979
  %div = sdiv i32 %18, 8, !dbg !979
  store i32 %div, i32* %pos, align 4, !dbg !979
  br label %do.body17, !dbg !980, !llvm.loop !981

do.body17:                                        ; preds = %do.end
  %19 = load i32, i32* %pos, align 4, !dbg !982
  %conv18 = sext i32 %19 to i64, !dbg !982
  %20 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !986
  %data_size19 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %20, i32 0, i32 2, !dbg !987
  %21 = load i64, i64* %data_size19, align 8, !dbg !987
  %cmp20 = icmp ule i64 %conv18, %21, !dbg !988
  br i1 %cmp20, label %if.end23, label %if.then22, !dbg !989

if.then22:                                        ; preds = %do.body17
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 508), !dbg !990
  call void @abort() #6, !dbg !993
  unreachable, !dbg !995

if.end23:                                         ; preds = %do.body17
  br label %do.end24, !dbg !996

do.end24:                                         ; preds = %if.end23
  %22 = load i32, i32* %pos, align 4, !dbg !998
  %conv25 = sext i32 %22 to i64, !dbg !998
  %23 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1000
  %data_size26 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %23, i32 0, i32 2, !dbg !1001
  %24 = load i64, i64* %data_size26, align 8, !dbg !1001
  %cmp27 = icmp eq i64 %conv25, %24, !dbg !1002
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !1003

if.then29:                                        ; preds = %do.end24
  br label %if.end40, !dbg !1004

if.else:                                          ; preds = %do.end24
  %25 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1006
  %data_ref = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %25, i32 0, i32 4, !dbg !1008
  %26 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref, align 8, !dbg !1008
  %call30 = call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* %26), !dbg !1009
  %27 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1010
  %data_ref31 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %27, i32 0, i32 3, !dbg !1011
  store %struct.AVBufferRef* %call30, %struct.AVBufferRef** %data_ref31, align 8, !dbg !1012
  %28 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1013
  %data_ref32 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %28, i32 0, i32 3, !dbg !1015
  %29 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref32, align 8, !dbg !1015
  %tobool = icmp ne %struct.AVBufferRef* %29, null, !dbg !1013
  br i1 %tobool, label %if.end34, label %if.then33, !dbg !1016

if.then33:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !1017
  br label %return, !dbg !1017

if.end34:                                         ; preds = %if.else
  %30 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1018
  %data35 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %30, i32 0, i32 1, !dbg !1019
  %31 = load i8*, i8** %data35, align 8, !dbg !1019
  %32 = load i32, i32* %pos, align 4, !dbg !1020
  %idx.ext = sext i32 %32 to i64, !dbg !1021
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 %idx.ext, !dbg !1021
  %33 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1022
  %data36 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %33, i32 0, i32 1, !dbg !1023
  store i8* %add.ptr, i8** %data36, align 8, !dbg !1024
  %34 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1025
  %data_size37 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %34, i32 0, i32 2, !dbg !1026
  %35 = load i64, i64* %data_size37, align 8, !dbg !1026
  %36 = load i32, i32* %pos, align 4, !dbg !1027
  %conv38 = sext i32 %36 to i64, !dbg !1027
  %sub = sub i64 %35, %conv38, !dbg !1028
  %37 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1029
  %data_size39 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %37, i32 0, i32 2, !dbg !1030
  store i64 %sub, i64* %data_size39, align 8, !dbg !1031
  br label %if.end40

if.end40:                                         ; preds = %if.end34, %if.then29
  store i32 0, i32* %retval, align 4, !dbg !1032
  br label %return, !dbg !1032

return:                                           ; preds = %if.end40, %if.then33, %if.then10, %if.then5, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !1033
  ret i32 %38, !dbg !1033
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_unit(%struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamUnit* %unit) #0 !dbg !1034 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %unit.addr = alloca %struct.CodedBitstreamUnit*, align 8
  %priv = alloca %struct.CodedBitstreamVP9Context*, align 8
  %frame = alloca %struct.VP9RawFrame*, align 8
  %pbc = alloca %struct.PutBitContext, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !1035, metadata !730), !dbg !1036
  store %struct.CodedBitstreamUnit* %unit, %struct.CodedBitstreamUnit** %unit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamUnit** %unit.addr, metadata !1037, metadata !730), !dbg !1038
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %priv, metadata !1039, metadata !730), !dbg !1066
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1067
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !1068
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1068
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !1067
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1066
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrame** %frame, metadata !1069, metadata !730), !dbg !1070
  %3 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1071
  %content = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %3, i32 0, i32 5, !dbg !1072
  %4 = load i8*, i8** %content, align 8, !dbg !1072
  %5 = bitcast i8* %4 to %struct.VP9RawFrame*, !dbg !1071
  store %struct.VP9RawFrame* %5, %struct.VP9RawFrame** %frame, align 8, !dbg !1070
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pbc, metadata !1073, metadata !730), !dbg !1074
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1075, metadata !730), !dbg !1076
  %6 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1077
  %write_buffer = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %6, i32 0, i32 11, !dbg !1079
  %7 = load i8*, i8** %write_buffer, align 8, !dbg !1079
  %tobool = icmp ne i8* %7, null, !dbg !1077
  br i1 %tobool, label %if.end5, label %if.then, !dbg !1080

if.then:                                          ; preds = %entry
  %8 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1081
  %write_buffer_size = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %8, i32 0, i32 12, !dbg !1083
  store i64 1048576, i64* %write_buffer_size, align 8, !dbg !1084
  br label %reallocate_and_try_again, !dbg !1081

reallocate_and_try_again:                         ; preds = %if.then32, %if.then11, %if.then
  %9 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1085
  %write_buffer1 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %9, i32 0, i32 11, !dbg !1086
  %10 = bitcast i8** %write_buffer1 to i8*, !dbg !1087
  %11 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1088
  %write_buffer_size2 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %11, i32 0, i32 12, !dbg !1089
  %12 = load i64, i64* %write_buffer_size2, align 8, !dbg !1089
  %call = call i32 @av_reallocp(i8* %10, i64 %12), !dbg !1090
  store i32 %call, i32* %err, align 4, !dbg !1091
  %13 = load i32, i32* %err, align 4, !dbg !1092
  %cmp = icmp slt i32 %13, 0, !dbg !1094
  br i1 %cmp, label %if.then3, label %if.end, !dbg !1095

if.then3:                                         ; preds = %reallocate_and_try_again
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1096
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %14, i32 0, i32 0, !dbg !1098
  %15 = load i8*, i8** %log_ctx, align 8, !dbg !1098
  %16 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1099
  %write_buffer_size4 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %16, i32 0, i32 12, !dbg !1100
  %17 = load i64, i64* %write_buffer_size4, align 8, !dbg !1100
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.84, i32 0, i32 0), i64 %17), !dbg !1101
  %18 = load i32, i32* %err, align 4, !dbg !1102
  store i32 %18, i32* %retval, align 4, !dbg !1103
  br label %return, !dbg !1103

if.end:                                           ; preds = %reallocate_and_try_again
  br label %if.end5, !dbg !1104

if.end5:                                          ; preds = %if.end, %entry
  %19 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1105
  %write_buffer6 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %19, i32 0, i32 11, !dbg !1106
  %20 = load i8*, i8** %write_buffer6, align 8, !dbg !1106
  %21 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1107
  %write_buffer_size7 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %21, i32 0, i32 12, !dbg !1108
  %22 = load i64, i64* %write_buffer_size7, align 8, !dbg !1108
  %conv = trunc i64 %22 to i32, !dbg !1107
  call void @init_put_bits(%struct.PutBitContext* %pbc, i8* %20, i32 %conv), !dbg !1109
  %23 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1110
  %24 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1111
  %call8 = call i32 @cbs_vp9_write_frame(%struct.CodedBitstreamContext* %23, %struct.PutBitContext* %pbc, %struct.VP9RawFrame* %24), !dbg !1112
  store i32 %call8, i32* %err, align 4, !dbg !1113
  %25 = load i32, i32* %err, align 4, !dbg !1114
  %cmp9 = icmp eq i32 %25, -28, !dbg !1116
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !1117

if.then11:                                        ; preds = %if.end5
  %26 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1118
  %write_buffer_size12 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %26, i32 0, i32 12, !dbg !1120
  %27 = load i64, i64* %write_buffer_size12, align 8, !dbg !1121
  %mul = mul i64 %27, 2, !dbg !1121
  store i64 %mul, i64* %write_buffer_size12, align 8, !dbg !1121
  br label %reallocate_and_try_again, !dbg !1122

if.end13:                                         ; preds = %if.end5
  %28 = load i32, i32* %err, align 4, !dbg !1123
  %cmp14 = icmp slt i32 %28, 0, !dbg !1125
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !1126

if.then16:                                        ; preds = %if.end13
  %29 = load i32, i32* %err, align 4, !dbg !1127
  store i32 %29, i32* %retval, align 4, !dbg !1128
  br label %return, !dbg !1128

if.end17:                                         ; preds = %if.end13
  br label %do.body, !dbg !1129, !llvm.loop !1130

do.body:                                          ; preds = %if.end17
  %call18 = call i32 @put_bits_count(%struct.PutBitContext* %pbc), !dbg !1131
  %rem = srem i32 %call18, 8, !dbg !1135
  %cmp19 = icmp eq i32 %rem, 0, !dbg !1136
  br i1 %cmp19, label %if.end22, label %if.then21, !dbg !1137

if.then21:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 557), !dbg !1138
  call void @abort() #6, !dbg !1141
  unreachable, !dbg !1143

if.end22:                                         ; preds = %do.body
  br label %do.end, !dbg !1144

do.end:                                           ; preds = %if.end22
  %call23 = call i32 @put_bits_count(%struct.PutBitContext* %pbc), !dbg !1146
  %div = sdiv i32 %call23, 8, !dbg !1147
  %conv24 = sext i32 %div to i64, !dbg !1146
  %30 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1148
  %data_size = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %30, i32 0, i32 2, !dbg !1149
  store i64 %conv24, i64* %data_size, align 8, !dbg !1150
  %31 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1151
  %data_bit_padding = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %31, i32 0, i32 3, !dbg !1152
  store i64 0, i64* %data_bit_padding, align 8, !dbg !1153
  call void @flush_put_bits(%struct.PutBitContext* %pbc), !dbg !1154
  %32 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1155
  %data = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %32, i32 0, i32 1, !dbg !1157
  %33 = load i8*, i8** %data, align 8, !dbg !1157
  %tobool25 = icmp ne i8* %33, null, !dbg !1155
  br i1 %tobool25, label %if.then26, label %if.end43, !dbg !1158

if.then26:                                        ; preds = %do.end
  %34 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1159
  %data_size27 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %34, i32 0, i32 2, !dbg !1162
  %35 = load i64, i64* %data_size27, align 8, !dbg !1162
  %36 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1163
  %data_size28 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %36, i32 0, i32 2, !dbg !1164
  %37 = load i64, i64* %data_size28, align 8, !dbg !1164
  %add = add i64 %35, %37, !dbg !1165
  %38 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1166
  %write_buffer_size29 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %38, i32 0, i32 12, !dbg !1167
  %39 = load i64, i64* %write_buffer_size29, align 8, !dbg !1167
  %cmp30 = icmp ugt i64 %add, %39, !dbg !1168
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !1169

if.then32:                                        ; preds = %if.then26
  %40 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1170
  %write_buffer_size33 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %40, i32 0, i32 12, !dbg !1172
  %41 = load i64, i64* %write_buffer_size33, align 8, !dbg !1173
  %mul34 = mul i64 %41, 2, !dbg !1173
  store i64 %mul34, i64* %write_buffer_size33, align 8, !dbg !1173
  br label %reallocate_and_try_again, !dbg !1174

if.end35:                                         ; preds = %if.then26
  %42 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1175
  %write_buffer36 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %42, i32 0, i32 11, !dbg !1176
  %43 = load i8*, i8** %write_buffer36, align 8, !dbg !1176
  %44 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1177
  %data_size37 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %44, i32 0, i32 2, !dbg !1178
  %45 = load i64, i64* %data_size37, align 8, !dbg !1178
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %45, !dbg !1179
  %46 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1180
  %data38 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %46, i32 0, i32 1, !dbg !1181
  %47 = load i8*, i8** %data38, align 8, !dbg !1181
  %48 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1182
  %data_size39 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %48, i32 0, i32 2, !dbg !1183
  %49 = load i64, i64* %data_size39, align 8, !dbg !1183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %47, i64 %49, i32 1, i1 false), !dbg !1184
  %50 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !1185
  %data_size40 = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %50, i32 0, i32 2, !dbg !1186
  %51 = load i64, i64* %data_size40, align 8, !dbg !1186
  %52 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1187
  %data_size41 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %52, i32 0, i32 2, !dbg !1188
  %53 = load i64, i64* %data_size41, align 8, !dbg !1189
  %add42 = add i64 %53, %51, !dbg !1189
  store i64 %add42, i64* %data_size41, align 8, !dbg !1189
  br label %if.end43, !dbg !1190

if.end43:                                         ; preds = %if.end35, %do.end
  %54 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1191
  %55 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1192
  %56 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1193
  %data_size44 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %56, i32 0, i32 2, !dbg !1194
  %57 = load i64, i64* %data_size44, align 8, !dbg !1194
  %call45 = call i32 @ff_cbs_alloc_unit_data(%struct.CodedBitstreamContext* %54, %struct.CodedBitstreamUnit* %55, i64 %57), !dbg !1195
  store i32 %call45, i32* %err, align 4, !dbg !1196
  %58 = load i32, i32* %err, align 4, !dbg !1197
  %cmp46 = icmp slt i32 %58, 0, !dbg !1199
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !1200

if.then48:                                        ; preds = %if.end43
  %59 = load i32, i32* %err, align 4, !dbg !1201
  store i32 %59, i32* %retval, align 4, !dbg !1202
  br label %return, !dbg !1202

if.end49:                                         ; preds = %if.end43
  %60 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1203
  %data50 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %60, i32 0, i32 1, !dbg !1204
  %61 = load i8*, i8** %data50, align 8, !dbg !1204
  %62 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1205
  %write_buffer51 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %62, i32 0, i32 11, !dbg !1206
  %63 = load i8*, i8** %write_buffer51, align 8, !dbg !1206
  %64 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %unit.addr, align 8, !dbg !1207
  %data_size52 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %64, i32 0, i32 2, !dbg !1208
  %65 = load i64, i64* %data_size52, align 8, !dbg !1208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %63, i64 %65, i32 1, i1 false), !dbg !1209
  store i32 0, i32* %retval, align 4, !dbg !1210
  br label %return, !dbg !1210

return:                                           ; preds = %if.end49, %if.then48, %if.then16, %if.then3
  %66 = load i32, i32* %retval, align 4, !dbg !1211
  ret i32 %66, !dbg !1211
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_assemble_fragment(%struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamFragment* %frag) #0 !dbg !1212 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %frag.addr = alloca %struct.CodedBitstreamFragment*, align 8
  %err = alloca i32, align 4
  %frame = alloca %struct.CodedBitstreamUnit*, align 8
  %sfi = alloca %struct.VP9RawSuperframeIndex, align 4
  %pbc = alloca %struct.PutBitContext, align 8
  %ref = alloca %struct.AVBufferRef*, align 8
  %data6 = alloca i8*, align 8
  %size = alloca i64, align 8
  %max = alloca i64, align 8
  %pos = alloca i64, align 8
  %i = alloca i32, align 4
  %size_len = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !1213, metadata !730), !dbg !1214
  store %struct.CodedBitstreamFragment* %frag, %struct.CodedBitstreamFragment** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamFragment** %frag.addr, metadata !1215, metadata !730), !dbg !1216
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1217, metadata !730), !dbg !1218
  %0 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1219
  %nb_units = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %0, i32 0, i32 4, !dbg !1221
  %1 = load i32, i32* %nb_units, align 8, !dbg !1221
  %cmp = icmp eq i32 %1, 1, !dbg !1222
  br i1 %cmp, label %if.then, label %if.else, !dbg !1223

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamUnit** %frame, metadata !1224, metadata !730), !dbg !1226
  %2 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1227
  %units = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %2, i32 0, i32 5, !dbg !1228
  %3 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units, align 8, !dbg !1228
  %arrayidx = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %3, i64 0, !dbg !1227
  store %struct.CodedBitstreamUnit* %arrayidx, %struct.CodedBitstreamUnit** %frame, align 8, !dbg !1226
  %4 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %frame, align 8, !dbg !1229
  %data_ref = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %4, i32 0, i32 4, !dbg !1230
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref, align 8, !dbg !1230
  %call = call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* %5), !dbg !1231
  %6 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1232
  %data_ref1 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %6, i32 0, i32 3, !dbg !1233
  store %struct.AVBufferRef* %call, %struct.AVBufferRef** %data_ref1, align 8, !dbg !1234
  %7 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1235
  %data_ref2 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %7, i32 0, i32 3, !dbg !1237
  %8 = load %struct.AVBufferRef*, %struct.AVBufferRef** %data_ref2, align 8, !dbg !1237
  %tobool = icmp ne %struct.AVBufferRef* %8, null, !dbg !1235
  br i1 %tobool, label %if.end, label %if.then3, !dbg !1238

if.then3:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !1239
  br label %return, !dbg !1239

if.end:                                           ; preds = %if.then
  %9 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %frame, align 8, !dbg !1240
  %data = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %9, i32 0, i32 1, !dbg !1241
  %10 = load i8*, i8** %data, align 8, !dbg !1241
  %11 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1242
  %data4 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %11, i32 0, i32 0, !dbg !1243
  store i8* %10, i8** %data4, align 8, !dbg !1244
  %12 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %frame, align 8, !dbg !1245
  %data_size = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %12, i32 0, i32 2, !dbg !1246
  %13 = load i64, i64* %data_size, align 8, !dbg !1246
  %14 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1247
  %data_size5 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %14, i32 0, i32 1, !dbg !1248
  store i64 %13, i64* %data_size5, align 8, !dbg !1249
  br label %if.end128, !dbg !1250

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VP9RawSuperframeIndex* %sfi, metadata !1251, metadata !730), !dbg !1253
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pbc, metadata !1254, metadata !730), !dbg !1255
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %ref, metadata !1256, metadata !730), !dbg !1257
  call void @llvm.dbg.declare(metadata i8** %data6, metadata !1258, metadata !730), !dbg !1259
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1260, metadata !730), !dbg !1261
  call void @llvm.dbg.declare(metadata i64* %max, metadata !1262, metadata !730), !dbg !1263
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !1264, metadata !730), !dbg !1265
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1266, metadata !730), !dbg !1267
  call void @llvm.dbg.declare(metadata i32* %size_len, metadata !1268, metadata !730), !dbg !1269
  %15 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1270
  %nb_units7 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %15, i32 0, i32 4, !dbg !1272
  %16 = load i32, i32* %nb_units7, align 8, !dbg !1272
  %cmp8 = icmp sgt i32 %16, 8, !dbg !1273
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !1274

if.then9:                                         ; preds = %if.else
  %17 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1275
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %17, i32 0, i32 0, !dbg !1277
  %18 = load i8*, i8** %log_ctx, align 8, !dbg !1277
  %19 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1278
  %nb_units10 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %19, i32 0, i32 4, !dbg !1279
  %20 = load i32, i32* %nb_units10, align 8, !dbg !1279
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.93, i32 0, i32 0), i32 %20), !dbg !1280
  store i32 -22, i32* %retval, align 4, !dbg !1281
  br label %return, !dbg !1281

if.end11:                                         ; preds = %if.else
  store i64 0, i64* %max, align 8, !dbg !1282
  store i32 0, i32* %i, align 4, !dbg !1283
  br label %for.cond, !dbg !1285

for.cond:                                         ; preds = %for.inc, %if.end11
  %21 = load i32, i32* %i, align 4, !dbg !1286
  %22 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1289
  %nb_units12 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %22, i32 0, i32 4, !dbg !1290
  %23 = load i32, i32* %nb_units12, align 8, !dbg !1290
  %cmp13 = icmp slt i32 %21, %23, !dbg !1291
  br i1 %cmp13, label %for.body, label %for.end, !dbg !1292

for.body:                                         ; preds = %for.cond
  %24 = load i64, i64* %max, align 8, !dbg !1293
  %25 = load i32, i32* %i, align 4, !dbg !1295
  %idxprom = sext i32 %25 to i64, !dbg !1296
  %26 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1296
  %units14 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %26, i32 0, i32 5, !dbg !1297
  %27 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units14, align 8, !dbg !1297
  %arrayidx15 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %27, i64 %idxprom, !dbg !1296
  %data_size16 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx15, i32 0, i32 2, !dbg !1298
  %28 = load i64, i64* %data_size16, align 8, !dbg !1298
  %cmp17 = icmp ult i64 %24, %28, !dbg !1299
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !1300

if.then18:                                        ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !1301
  %idxprom19 = sext i32 %29 to i64, !dbg !1302
  %30 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1302
  %units20 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %30, i32 0, i32 5, !dbg !1303
  %31 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units20, align 8, !dbg !1303
  %arrayidx21 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %31, i64 %idxprom19, !dbg !1302
  %data_size22 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx21, i32 0, i32 2, !dbg !1304
  %32 = load i64, i64* %data_size22, align 8, !dbg !1304
  store i64 %32, i64* %max, align 8, !dbg !1305
  br label %if.end23, !dbg !1306

if.end23:                                         ; preds = %if.then18, %for.body
  br label %for.inc, !dbg !1307

for.inc:                                          ; preds = %if.end23
  %33 = load i32, i32* %i, align 4, !dbg !1309
  %inc = add nsw i32 %33, 1, !dbg !1309
  store i32 %inc, i32* %i, align 4, !dbg !1309
  br label %for.cond, !dbg !1311, !llvm.loop !1312

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %max, align 8, !dbg !1314
  %cmp24 = icmp ult i64 %34, 2, !dbg !1316
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !1317

if.then25:                                        ; preds = %for.end
  store i32 1, i32* %size_len, align 4, !dbg !1318
  br label %if.end27, !dbg !1319

if.else26:                                        ; preds = %for.end
  %35 = load i64, i64* %max, align 8, !dbg !1320
  %or = or i64 %35, 1, !dbg !1321
  %conv = trunc i64 %or to i32, !dbg !1322
  %36 = call i32 @llvm.ctlz.i32(i32 %conv, i1 true), !dbg !1323
  %sub = sub nsw i32 31, %36, !dbg !1324
  %div = sdiv i32 %sub, 8, !dbg !1325
  %add = add nsw i32 %div, 1, !dbg !1326
  store i32 %add, i32* %size_len, align 4, !dbg !1327
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then25
  br label %do.body, !dbg !1328, !llvm.loop !1329

do.body:                                          ; preds = %if.end27
  %37 = load i32, i32* %size_len, align 4, !dbg !1330
  %cmp28 = icmp sle i32 %37, 4, !dbg !1334
  br i1 %cmp28, label %if.end31, label %if.then30, !dbg !1335

if.then30:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 626), !dbg !1336
  call void @abort() #6, !dbg !1339
  unreachable, !dbg !1341

if.end31:                                         ; preds = %do.body
  br label %do.end, !dbg !1342

do.end:                                           ; preds = %if.end31
  %superframe_marker = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 0, !dbg !1344
  store i8 6, i8* %superframe_marker, align 4, !dbg !1345
  %38 = load i32, i32* %size_len, align 4, !dbg !1346
  %sub32 = sub nsw i32 %38, 1, !dbg !1347
  %conv33 = trunc i32 %sub32 to i8, !dbg !1346
  %bytes_per_framesize_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 1, !dbg !1348
  store i8 %conv33, i8* %bytes_per_framesize_minus_1, align 1, !dbg !1349
  %39 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1350
  %nb_units34 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %39, i32 0, i32 4, !dbg !1351
  %40 = load i32, i32* %nb_units34, align 8, !dbg !1351
  %sub35 = sub nsw i32 %40, 1, !dbg !1352
  %conv36 = trunc i32 %sub35 to i8, !dbg !1350
  %frames_in_superframe_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 2, !dbg !1353
  store i8 %conv36, i8* %frames_in_superframe_minus_1, align 2, !dbg !1354
  store i64 2, i64* %size, align 8, !dbg !1355
  store i32 0, i32* %i, align 4, !dbg !1356
  br label %for.cond37, !dbg !1358

for.cond37:                                       ; preds = %for.inc56, %do.end
  %41 = load i32, i32* %i, align 4, !dbg !1359
  %42 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1362
  %nb_units38 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %42, i32 0, i32 4, !dbg !1363
  %43 = load i32, i32* %nb_units38, align 8, !dbg !1363
  %cmp39 = icmp slt i32 %41, %43, !dbg !1364
  br i1 %cmp39, label %for.body41, label %for.end58, !dbg !1365

for.body41:                                       ; preds = %for.cond37
  %44 = load i32, i32* %size_len, align 4, !dbg !1366
  %conv42 = sext i32 %44 to i64, !dbg !1366
  %45 = load i32, i32* %i, align 4, !dbg !1368
  %idxprom43 = sext i32 %45 to i64, !dbg !1369
  %46 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1369
  %units44 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %46, i32 0, i32 5, !dbg !1370
  %47 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units44, align 8, !dbg !1370
  %arrayidx45 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %47, i64 %idxprom43, !dbg !1369
  %data_size46 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx45, i32 0, i32 2, !dbg !1371
  %48 = load i64, i64* %data_size46, align 8, !dbg !1371
  %add47 = add i64 %conv42, %48, !dbg !1372
  %49 = load i64, i64* %size, align 8, !dbg !1373
  %add48 = add i64 %49, %add47, !dbg !1373
  store i64 %add48, i64* %size, align 8, !dbg !1373
  %50 = load i32, i32* %i, align 4, !dbg !1374
  %idxprom49 = sext i32 %50 to i64, !dbg !1375
  %51 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1375
  %units50 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %51, i32 0, i32 5, !dbg !1376
  %52 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units50, align 8, !dbg !1376
  %arrayidx51 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %52, i64 %idxprom49, !dbg !1375
  %data_size52 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx51, i32 0, i32 2, !dbg !1377
  %53 = load i64, i64* %data_size52, align 8, !dbg !1377
  %conv53 = trunc i64 %53 to i32, !dbg !1375
  %54 = load i32, i32* %i, align 4, !dbg !1378
  %idxprom54 = sext i32 %54 to i64, !dbg !1379
  %frame_sizes = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %sfi, i32 0, i32 3, !dbg !1380
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes, i64 0, i64 %idxprom54, !dbg !1379
  store i32 %conv53, i32* %arrayidx55, align 4, !dbg !1381
  br label %for.inc56, !dbg !1382

for.inc56:                                        ; preds = %for.body41
  %55 = load i32, i32* %i, align 4, !dbg !1383
  %inc57 = add nsw i32 %55, 1, !dbg !1383
  store i32 %inc57, i32* %i, align 4, !dbg !1383
  br label %for.cond37, !dbg !1385, !llvm.loop !1386

for.end58:                                        ; preds = %for.cond37
  %56 = load i64, i64* %size, align 8, !dbg !1388
  %add59 = add i64 %56, 64, !dbg !1389
  %conv60 = trunc i64 %add59 to i32, !dbg !1388
  %call61 = call %struct.AVBufferRef* @av_buffer_alloc(i32 %conv60), !dbg !1390
  store %struct.AVBufferRef* %call61, %struct.AVBufferRef** %ref, align 8, !dbg !1391
  %57 = load %struct.AVBufferRef*, %struct.AVBufferRef** %ref, align 8, !dbg !1392
  %tobool62 = icmp ne %struct.AVBufferRef* %57, null, !dbg !1392
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !1394

if.then63:                                        ; preds = %for.end58
  store i32 -12, i32* %retval, align 4, !dbg !1395
  br label %return, !dbg !1395

if.end64:                                         ; preds = %for.end58
  %58 = load %struct.AVBufferRef*, %struct.AVBufferRef** %ref, align 8, !dbg !1396
  %data65 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %58, i32 0, i32 1, !dbg !1397
  %59 = load i8*, i8** %data65, align 8, !dbg !1397
  store i8* %59, i8** %data6, align 8, !dbg !1398
  %60 = load i8*, i8** %data6, align 8, !dbg !1399
  %61 = load i64, i64* %size, align 8, !dbg !1400
  %add.ptr = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !1401
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 64, i32 1, i1 false), !dbg !1402
  store i64 0, i64* %pos, align 8, !dbg !1403
  store i32 0, i32* %i, align 4, !dbg !1404
  br label %for.cond66, !dbg !1406

for.cond66:                                       ; preds = %for.inc96, %if.end64
  %62 = load i32, i32* %i, align 4, !dbg !1407
  %63 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1410
  %nb_units67 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %63, i32 0, i32 4, !dbg !1411
  %64 = load i32, i32* %nb_units67, align 8, !dbg !1411
  %cmp68 = icmp slt i32 %62, %64, !dbg !1412
  br i1 %cmp68, label %for.body70, label %for.end98, !dbg !1413

for.body70:                                       ; preds = %for.cond66
  br label %do.body71, !dbg !1414, !llvm.loop !1416

do.body71:                                        ; preds = %for.body70
  %65 = load i64, i64* %size, align 8, !dbg !1417
  %66 = load i64, i64* %pos, align 8, !dbg !1421
  %sub72 = sub i64 %65, %66, !dbg !1422
  %67 = load i32, i32* %i, align 4, !dbg !1423
  %idxprom73 = sext i32 %67 to i64, !dbg !1424
  %68 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1424
  %units74 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %68, i32 0, i32 5, !dbg !1425
  %69 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units74, align 8, !dbg !1425
  %arrayidx75 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %69, i64 %idxprom73, !dbg !1424
  %data_size76 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx75, i32 0, i32 2, !dbg !1426
  %70 = load i64, i64* %data_size76, align 8, !dbg !1426
  %cmp77 = icmp ugt i64 %sub72, %70, !dbg !1427
  br i1 %cmp77, label %if.end80, label %if.then79, !dbg !1428

if.then79:                                        ; preds = %do.body71
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 646), !dbg !1429
  call void @abort() #6, !dbg !1432
  unreachable, !dbg !1434

if.end80:                                         ; preds = %do.body71
  br label %do.end81, !dbg !1435

do.end81:                                         ; preds = %if.end80
  %71 = load i8*, i8** %data6, align 8, !dbg !1437
  %72 = load i64, i64* %pos, align 8, !dbg !1438
  %add.ptr82 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !1439
  %73 = load i32, i32* %i, align 4, !dbg !1440
  %idxprom83 = sext i32 %73 to i64, !dbg !1441
  %74 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1441
  %units84 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %74, i32 0, i32 5, !dbg !1442
  %75 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units84, align 8, !dbg !1442
  %arrayidx85 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %75, i64 %idxprom83, !dbg !1441
  %data86 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx85, i32 0, i32 1, !dbg !1443
  %76 = load i8*, i8** %data86, align 8, !dbg !1443
  %77 = load i32, i32* %i, align 4, !dbg !1444
  %idxprom87 = sext i32 %77 to i64, !dbg !1445
  %78 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1445
  %units88 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %78, i32 0, i32 5, !dbg !1446
  %79 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units88, align 8, !dbg !1446
  %arrayidx89 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %79, i64 %idxprom87, !dbg !1445
  %data_size90 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx89, i32 0, i32 2, !dbg !1447
  %80 = load i64, i64* %data_size90, align 8, !dbg !1447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr82, i8* %76, i64 %80, i32 1, i1 false), !dbg !1448
  %81 = load i32, i32* %i, align 4, !dbg !1449
  %idxprom91 = sext i32 %81 to i64, !dbg !1450
  %82 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1450
  %units92 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %82, i32 0, i32 5, !dbg !1451
  %83 = load %struct.CodedBitstreamUnit*, %struct.CodedBitstreamUnit** %units92, align 8, !dbg !1451
  %arrayidx93 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %83, i64 %idxprom91, !dbg !1450
  %data_size94 = getelementptr inbounds %struct.CodedBitstreamUnit, %struct.CodedBitstreamUnit* %arrayidx93, i32 0, i32 2, !dbg !1452
  %84 = load i64, i64* %data_size94, align 8, !dbg !1452
  %85 = load i64, i64* %pos, align 8, !dbg !1453
  %add95 = add i64 %85, %84, !dbg !1453
  store i64 %add95, i64* %pos, align 8, !dbg !1453
  br label %for.inc96, !dbg !1454

for.inc96:                                        ; preds = %do.end81
  %86 = load i32, i32* %i, align 4, !dbg !1455
  %inc97 = add nsw i32 %86, 1, !dbg !1455
  store i32 %inc97, i32* %i, align 4, !dbg !1455
  br label %for.cond66, !dbg !1457, !llvm.loop !1458

for.end98:                                        ; preds = %for.cond66
  br label %do.body99, !dbg !1460, !llvm.loop !1461

do.body99:                                        ; preds = %for.end98
  %87 = load i64, i64* %size, align 8, !dbg !1462
  %88 = load i64, i64* %pos, align 8, !dbg !1466
  %sub100 = sub i64 %87, %88, !dbg !1467
  %89 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1468
  %nb_units101 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %89, i32 0, i32 4, !dbg !1469
  %90 = load i32, i32* %nb_units101, align 8, !dbg !1469
  %91 = load i32, i32* %size_len, align 4, !dbg !1470
  %mul = mul nsw i32 %90, %91, !dbg !1471
  %add102 = add nsw i32 2, %mul, !dbg !1472
  %conv103 = sext i32 %add102 to i64, !dbg !1473
  %cmp104 = icmp eq i64 %sub100, %conv103, !dbg !1474
  br i1 %cmp104, label %if.end107, label %if.then106, !dbg !1475

if.then106:                                       ; preds = %do.body99
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 651), !dbg !1476
  call void @abort() #6, !dbg !1479
  unreachable, !dbg !1481

if.end107:                                        ; preds = %do.body99
  br label %do.end108, !dbg !1482

do.end108:                                        ; preds = %if.end107
  %92 = load i8*, i8** %data6, align 8, !dbg !1484
  %93 = load i64, i64* %pos, align 8, !dbg !1485
  %add.ptr109 = getelementptr inbounds i8, i8* %92, i64 %93, !dbg !1486
  %94 = load i64, i64* %size, align 8, !dbg !1487
  %95 = load i64, i64* %pos, align 8, !dbg !1488
  %sub110 = sub i64 %94, %95, !dbg !1489
  %conv111 = trunc i64 %sub110 to i32, !dbg !1487
  call void @init_put_bits(%struct.PutBitContext* %pbc, i8* %add.ptr109, i32 %conv111), !dbg !1490
  %96 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1491
  %call112 = call i32 @cbs_vp9_write_superframe_index(%struct.CodedBitstreamContext* %96, %struct.PutBitContext* %pbc, %struct.VP9RawSuperframeIndex* %sfi), !dbg !1492
  store i32 %call112, i32* %err, align 4, !dbg !1493
  %97 = load i32, i32* %err, align 4, !dbg !1494
  %cmp113 = icmp slt i32 %97, 0, !dbg !1496
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !1497

if.then115:                                       ; preds = %do.end108
  %98 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1498
  %log_ctx116 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %98, i32 0, i32 0, !dbg !1500
  %99 = load i8*, i8** %log_ctx116, align 8, !dbg !1500
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.97, i32 0, i32 0)), !dbg !1501
  call void @av_buffer_unref(%struct.AVBufferRef** %ref), !dbg !1502
  %100 = load i32, i32* %err, align 4, !dbg !1503
  store i32 %100, i32* %retval, align 4, !dbg !1504
  br label %return, !dbg !1504

if.end117:                                        ; preds = %do.end108
  br label %do.body118, !dbg !1505, !llvm.loop !1506

do.body118:                                       ; preds = %if.end117
  %call119 = call i32 @put_bits_left(%struct.PutBitContext* %pbc), !dbg !1507
  %cmp120 = icmp eq i32 %call119, 0, !dbg !1511
  br i1 %cmp120, label %if.end123, label %if.then122, !dbg !1512

if.then122:                                       ; preds = %do.body118
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 663), !dbg !1513
  call void @abort() #6, !dbg !1516
  unreachable, !dbg !1518

if.end123:                                        ; preds = %do.body118
  br label %do.end124, !dbg !1519

do.end124:                                        ; preds = %if.end123
  call void @flush_put_bits(%struct.PutBitContext* %pbc), !dbg !1521
  %101 = load %struct.AVBufferRef*, %struct.AVBufferRef** %ref, align 8, !dbg !1522
  %102 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1523
  %data_ref125 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %102, i32 0, i32 3, !dbg !1524
  store %struct.AVBufferRef* %101, %struct.AVBufferRef** %data_ref125, align 8, !dbg !1525
  %103 = load i8*, i8** %data6, align 8, !dbg !1526
  %104 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1527
  %data126 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %104, i32 0, i32 0, !dbg !1528
  store i8* %103, i8** %data126, align 8, !dbg !1529
  %105 = load i64, i64* %size, align 8, !dbg !1530
  %106 = load %struct.CodedBitstreamFragment*, %struct.CodedBitstreamFragment** %frag.addr, align 8, !dbg !1531
  %data_size127 = getelementptr inbounds %struct.CodedBitstreamFragment, %struct.CodedBitstreamFragment* %106, i32 0, i32 1, !dbg !1532
  store i64 %105, i64* %data_size127, align 8, !dbg !1533
  br label %if.end128

if.end128:                                        ; preds = %do.end124, %if.end
  store i32 0, i32* %retval, align 4, !dbg !1534
  br label %return, !dbg !1534

return:                                           ; preds = %if.end128, %if.then115, %if.then63, %if.then9, %if.then3
  %107 = load i32, i32* %retval, align 4, !dbg !1535
  ret i32 %107, !dbg !1535
}

; Function Attrs: nounwind uwtable
define internal void @cbs_vp9_close(%struct.CodedBitstreamContext* %ctx) #0 !dbg !1536 {
entry:
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %priv = alloca %struct.CodedBitstreamVP9Context*, align 8
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !1537, metadata !730), !dbg !1538
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %priv, metadata !1539, metadata !730), !dbg !1540
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1541
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !1542
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1542
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !1541
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1540
  %3 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %priv, align 8, !dbg !1543
  %write_buffer = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %3, i32 0, i32 11, !dbg !1544
  %4 = bitcast i8** %write_buffer to i8*, !dbg !1545
  call void @av_freep(i8* %4), !dbg !1546
  ret void, !dbg !1547
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #2 !dbg !1548 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !1551, metadata !730), !dbg !1552
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1553, metadata !730), !dbg !1554
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !1555, metadata !730), !dbg !1556
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !1557, metadata !730), !dbg !1558
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1559, metadata !730), !dbg !1560
  store i32 0, i32* %ret, align 4, !dbg !1560
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !1561
  %cmp = icmp sge i32 %0, 2147483135, !dbg !1563
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1564

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !1565
  %cmp1 = icmp slt i32 %1, 0, !dbg !1567
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !1568

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !1569
  %tobool = icmp ne i8* %2, null, !dbg !1569
  br i1 %tobool, label %if.end, label %if.then, !dbg !1571

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !1572
  store i8* null, i8** %buffer.addr, align 8, !dbg !1574
  store i32 -1094995529, i32* %ret, align 4, !dbg !1575
  br label %if.end, !dbg !1576

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !1577
  %add = add nsw i32 %3, 7, !dbg !1578
  %shr = ashr i32 %add, 3, !dbg !1579
  store i32 %shr, i32* %buffer_size, align 4, !dbg !1580
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !1581
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !1582
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !1583
  store i8* %4, i8** %buffer3, align 8, !dbg !1584
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !1585
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !1586
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !1587
  store i32 %6, i32* %size_in_bits, align 4, !dbg !1588
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !1589
  %add4 = add nsw i32 %8, 8, !dbg !1590
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !1591
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !1592
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !1593
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !1594
  %11 = load i32, i32* %buffer_size, align 4, !dbg !1595
  %idx.ext = sext i32 %11 to i64, !dbg !1596
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !1596
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !1597
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !1598
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !1599
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !1600
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !1601
  store i32 0, i32* %index, align 8, !dbg !1602
  %14 = load i32, i32* %ret, align 4, !dbg !1603
  ret i32 %14, !dbg !1604
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_superframe_index(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawSuperframeIndex* %current) #0 !dbg !1605 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawSuperframeIndex*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  %value17 = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %value43 = alloca i32, align 4
  %value55 = alloca i32, align 4
  %value67 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !1609, metadata !730), !dbg !1610
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !1611, metadata !730), !dbg !1612
  store %struct.VP9RawSuperframeIndex* %current, %struct.VP9RawSuperframeIndex** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawSuperframeIndex** %current.addr, metadata !1613, metadata !730), !dbg !1614
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1615, metadata !730), !dbg !1616
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1617, metadata !730), !dbg !1618
  br label %do.body, !dbg !1619, !llvm.loop !1620

do.body:                                          ; preds = %entry
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1621
  call void @ff_cbs_trace_header(%struct.CodedBitstreamContext* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0)), !dbg !1624
  br label %do.end, !dbg !1625

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !1626, !llvm.loop !1627

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1628, metadata !730), !dbg !1630
  store i32 0, i32* %value, align 4, !dbg !1631
  br label %do.body2, !dbg !1633, !llvm.loop !1634

do.body2:                                         ; preds = %do.body1
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1636
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1639
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %1, %struct.GetBitContext* %2, i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 7), !dbg !1640
  store i32 %call, i32* %err, align 4, !dbg !1641
  %3 = load i32, i32* %err, align 4, !dbg !1642
  %cmp = icmp slt i32 %3, 0, !dbg !1640
  br i1 %cmp, label %if.then, label %if.end, !dbg !1642

if.then:                                          ; preds = %do.body2
  %4 = load i32, i32* %err, align 4, !dbg !1643
  store i32 %4, i32* %retval, align 4, !dbg !1646
  br label %return, !dbg !1646

if.end:                                           ; preds = %do.body2
  br label %do.end3, !dbg !1647

do.end3:                                          ; preds = %if.end
  %5 = load i32, i32* %value, align 4, !dbg !1649
  %conv = trunc i32 %5 to i8, !dbg !1649
  %6 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1651
  %superframe_marker = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %6, i32 0, i32 0, !dbg !1652
  store i8 %conv, i8* %superframe_marker, align 4, !dbg !1653
  br label %do.end4, !dbg !1654

do.end4:                                          ; preds = %do.end3
  br label %do.body5, !dbg !1655, !llvm.loop !1656

do.body5:                                         ; preds = %do.end4
  call void @llvm.dbg.declare(metadata i32* %value6, metadata !1657, metadata !730), !dbg !1659
  store i32 0, i32* %value6, align 4, !dbg !1660
  br label %do.body7, !dbg !1662, !llvm.loop !1663

do.body7:                                         ; preds = %do.body5
  %7 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1665
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1668
  %call8 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %7, %struct.GetBitContext* %8, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32* null, i32* %value6, i32 0, i32 3), !dbg !1669
  store i32 %call8, i32* %err, align 4, !dbg !1670
  %9 = load i32, i32* %err, align 4, !dbg !1671
  %cmp9 = icmp slt i32 %9, 0, !dbg !1669
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !1671

if.then11:                                        ; preds = %do.body7
  %10 = load i32, i32* %err, align 4, !dbg !1672
  store i32 %10, i32* %retval, align 4, !dbg !1675
  br label %return, !dbg !1675

if.end12:                                         ; preds = %do.body7
  br label %do.end13, !dbg !1676

do.end13:                                         ; preds = %if.end12
  %11 = load i32, i32* %value6, align 4, !dbg !1678
  %conv14 = trunc i32 %11 to i8, !dbg !1678
  %12 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1680
  %bytes_per_framesize_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %12, i32 0, i32 1, !dbg !1681
  store i8 %conv14, i8* %bytes_per_framesize_minus_1, align 1, !dbg !1682
  br label %do.end15, !dbg !1683

do.end15:                                         ; preds = %do.end13
  br label %do.body16, !dbg !1684, !llvm.loop !1685

do.body16:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i32* %value17, metadata !1686, metadata !730), !dbg !1688
  store i32 0, i32* %value17, align 4, !dbg !1689
  br label %do.body18, !dbg !1691, !llvm.loop !1692

do.body18:                                        ; preds = %do.body16
  %13 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1694
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1697
  %call19 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %13, %struct.GetBitContext* %14, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0), i32* null, i32* %value17, i32 0, i32 7), !dbg !1698
  store i32 %call19, i32* %err, align 4, !dbg !1699
  %15 = load i32, i32* %err, align 4, !dbg !1700
  %cmp20 = icmp slt i32 %15, 0, !dbg !1698
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !1700

if.then22:                                        ; preds = %do.body18
  %16 = load i32, i32* %err, align 4, !dbg !1701
  store i32 %16, i32* %retval, align 4, !dbg !1704
  br label %return, !dbg !1704

if.end23:                                         ; preds = %do.body18
  br label %do.end24, !dbg !1705

do.end24:                                         ; preds = %if.end23
  %17 = load i32, i32* %value17, align 4, !dbg !1707
  %conv25 = trunc i32 %17 to i8, !dbg !1707
  %18 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1709
  %frames_in_superframe_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %18, i32 0, i32 2, !dbg !1710
  store i8 %conv25, i8* %frames_in_superframe_minus_1, align 2, !dbg !1711
  br label %do.end26, !dbg !1712

do.end26:                                         ; preds = %do.end24
  store i32 0, i32* %i, align 4, !dbg !1713
  br label %for.cond, !dbg !1715

for.cond:                                         ; preds = %for.inc, %do.end26
  %19 = load i32, i32* %i, align 4, !dbg !1716
  %20 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1719
  %frames_in_superframe_minus_127 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %20, i32 0, i32 2, !dbg !1720
  %21 = load i8, i8* %frames_in_superframe_minus_127, align 2, !dbg !1720
  %conv28 = zext i8 %21 to i32, !dbg !1719
  %cmp29 = icmp sle i32 %19, %conv28, !dbg !1721
  br i1 %cmp29, label %for.body, label %for.end, !dbg !1722

for.body:                                         ; preds = %for.cond
  br label %do.body31, !dbg !1723, !llvm.loop !1725

do.body31:                                        ; preds = %for.body
  br label %do.body32, !dbg !1726, !llvm.loop !1729

do.body32:                                        ; preds = %do.body31
  %22 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1731
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1734
  %24 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1735
  %bytes_per_framesize_minus_133 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %24, i32 0, i32 1, !dbg !1736
  %25 = load i8, i8* %bytes_per_framesize_minus_133, align 1, !dbg !1736
  %conv34 = zext i8 %25 to i32, !dbg !1735
  %add = add nsw i32 %conv34, 1, !dbg !1737
  %mul = mul nsw i32 8, %add, !dbg !1738
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !1739
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !1739
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !1739
  %26 = load i32, i32* %i, align 4, !dbg !1740
  store i32 %26, i32* %arrayinit.element, align 4, !dbg !1739
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !1741
  %27 = load i32, i32* %i, align 4, !dbg !1742
  %idxprom = sext i32 %27 to i64, !dbg !1743
  %28 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1743
  %frame_sizes = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %28, i32 0, i32 3, !dbg !1744
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes, i64 0, i64 %idxprom, !dbg !1743
  %call35 = call i32 @cbs_vp9_read_le(%struct.CodedBitstreamContext* %22, %struct.GetBitContext* %23, i32 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i32* %arraydecay, i32* %arrayidx), !dbg !1745
  store i32 %call35, i32* %err, align 4, !dbg !1746
  %29 = load i32, i32* %err, align 4, !dbg !1747
  %cmp36 = icmp slt i32 %29, 0, !dbg !1734
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !1747

if.then38:                                        ; preds = %do.body32
  %30 = load i32, i32* %err, align 4, !dbg !1748
  store i32 %30, i32* %retval, align 4, !dbg !1751
  br label %return, !dbg !1751

if.end39:                                         ; preds = %do.body32
  br label %do.end40, !dbg !1752

do.end40:                                         ; preds = %if.end39
  br label %do.end41, !dbg !1754

do.end41:                                         ; preds = %do.end40
  br label %for.inc, !dbg !1756

for.inc:                                          ; preds = %do.end41
  %31 = load i32, i32* %i, align 4, !dbg !1757
  %inc = add nsw i32 %31, 1, !dbg !1757
  store i32 %inc, i32* %i, align 4, !dbg !1757
  br label %for.cond, !dbg !1759, !llvm.loop !1760

for.end:                                          ; preds = %for.cond
  br label %do.body42, !dbg !1762, !llvm.loop !1763

do.body42:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %value43, metadata !1764, metadata !730), !dbg !1766
  store i32 0, i32* %value43, align 4, !dbg !1767
  br label %do.body44, !dbg !1769, !llvm.loop !1770

do.body44:                                        ; preds = %do.body42
  %32 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1772
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1775
  %call45 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %32, %struct.GetBitContext* %33, i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i32* null, i32* %value43, i32 0, i32 7), !dbg !1776
  store i32 %call45, i32* %err, align 4, !dbg !1777
  %34 = load i32, i32* %err, align 4, !dbg !1778
  %cmp46 = icmp slt i32 %34, 0, !dbg !1776
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !1778

if.then48:                                        ; preds = %do.body44
  %35 = load i32, i32* %err, align 4, !dbg !1779
  store i32 %35, i32* %retval, align 4, !dbg !1782
  br label %return, !dbg !1782

if.end49:                                         ; preds = %do.body44
  br label %do.end50, !dbg !1783

do.end50:                                         ; preds = %if.end49
  %36 = load i32, i32* %value43, align 4, !dbg !1785
  %conv51 = trunc i32 %36 to i8, !dbg !1785
  %37 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1787
  %superframe_marker52 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %37, i32 0, i32 0, !dbg !1788
  store i8 %conv51, i8* %superframe_marker52, align 4, !dbg !1789
  br label %do.end53, !dbg !1790

do.end53:                                         ; preds = %do.end50
  br label %do.body54, !dbg !1791, !llvm.loop !1792

do.body54:                                        ; preds = %do.end53
  call void @llvm.dbg.declare(metadata i32* %value55, metadata !1793, metadata !730), !dbg !1795
  store i32 0, i32* %value55, align 4, !dbg !1796
  br label %do.body56, !dbg !1798, !llvm.loop !1799

do.body56:                                        ; preds = %do.body54
  %38 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1801
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1804
  %call57 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %38, %struct.GetBitContext* %39, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32* null, i32* %value55, i32 0, i32 3), !dbg !1805
  store i32 %call57, i32* %err, align 4, !dbg !1806
  %40 = load i32, i32* %err, align 4, !dbg !1807
  %cmp58 = icmp slt i32 %40, 0, !dbg !1805
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !1807

if.then60:                                        ; preds = %do.body56
  %41 = load i32, i32* %err, align 4, !dbg !1808
  store i32 %41, i32* %retval, align 4, !dbg !1811
  br label %return, !dbg !1811

if.end61:                                         ; preds = %do.body56
  br label %do.end62, !dbg !1812

do.end62:                                         ; preds = %if.end61
  %42 = load i32, i32* %value55, align 4, !dbg !1814
  %conv63 = trunc i32 %42 to i8, !dbg !1814
  %43 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1816
  %bytes_per_framesize_minus_164 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %43, i32 0, i32 1, !dbg !1817
  store i8 %conv63, i8* %bytes_per_framesize_minus_164, align 1, !dbg !1818
  br label %do.end65, !dbg !1819

do.end65:                                         ; preds = %do.end62
  br label %do.body66, !dbg !1820, !llvm.loop !1821

do.body66:                                        ; preds = %do.end65
  call void @llvm.dbg.declare(metadata i32* %value67, metadata !1822, metadata !730), !dbg !1824
  store i32 0, i32* %value67, align 4, !dbg !1825
  br label %do.body68, !dbg !1827, !llvm.loop !1828

do.body68:                                        ; preds = %do.body66
  %44 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1830
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !1833
  %call69 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %44, %struct.GetBitContext* %45, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0), i32* null, i32* %value67, i32 0, i32 7), !dbg !1834
  store i32 %call69, i32* %err, align 4, !dbg !1835
  %46 = load i32, i32* %err, align 4, !dbg !1836
  %cmp70 = icmp slt i32 %46, 0, !dbg !1834
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !1836

if.then72:                                        ; preds = %do.body68
  %47 = load i32, i32* %err, align 4, !dbg !1837
  store i32 %47, i32* %retval, align 4, !dbg !1840
  br label %return, !dbg !1840

if.end73:                                         ; preds = %do.body68
  br label %do.end74, !dbg !1841

do.end74:                                         ; preds = %if.end73
  %48 = load i32, i32* %value67, align 4, !dbg !1843
  %conv75 = trunc i32 %48 to i8, !dbg !1843
  %49 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !1845
  %frames_in_superframe_minus_176 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %49, i32 0, i32 2, !dbg !1846
  store i8 %conv75, i8* %frames_in_superframe_minus_176, align 2, !dbg !1847
  br label %do.end77, !dbg !1848

do.end77:                                         ; preds = %do.end74
  store i32 0, i32* %retval, align 4, !dbg !1849
  br label %return, !dbg !1849

return:                                           ; preds = %do.end77, %if.then72, %if.then60, %if.then48, %if.then38, %if.then22, %if.then11, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !1850
  ret i32 %50, !dbg !1850
}

declare void @av_log(i8*, i32, i8*, ...) #3

declare i32 @ff_cbs_insert_unit_data(%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*, i32, i32, i8*, i64, %struct.AVBufferRef*) #3

declare void @ff_cbs_trace_header(%struct.CodedBitstreamContext*, i8*) #3

declare i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext*, %struct.GetBitContext*, i32, i8*, i32*, i32*, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_le(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %gbc, i32 %width, i8* %name, i32* %subscripts, i32* %write_to) #0 !dbg !1851 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %width.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %subscripts.addr = alloca i32*, align 8
  %write_to.addr = alloca i32*, align 8
  %value = alloca i32, align 4
  %position = alloca i32, align 4
  %b = alloca i32, align 4
  %bits = alloca [33 x i8], align 16
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !1859, metadata !730), !dbg !1860
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !1861, metadata !730), !dbg !1862
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !1863, metadata !730), !dbg !1864
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1865, metadata !730), !dbg !1866
  store i32* %subscripts, i32** %subscripts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %subscripts.addr, metadata !1867, metadata !730), !dbg !1868
  store i32* %write_to, i32** %write_to.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %write_to.addr, metadata !1869, metadata !730), !dbg !1870
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1871, metadata !730), !dbg !1872
  call void @llvm.dbg.declare(metadata i32* %position, metadata !1873, metadata !730), !dbg !1874
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1875, metadata !730), !dbg !1876
  br label %do.body, !dbg !1877, !llvm.loop !1878

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %width.addr, align 4, !dbg !1879
  %rem = srem i32 %0, 8, !dbg !1883
  %cmp = icmp eq i32 %rem, 0, !dbg !1884
  br i1 %cmp, label %if.end, label %if.then, !dbg !1885

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 179), !dbg !1886
  call void @abort() #6, !dbg !1889
  unreachable, !dbg !1891

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !1892

do.end:                                           ; preds = %if.end
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1894
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %1, i32 0, i32 5, !dbg !1896
  %2 = load i32, i32* %trace_enable, align 4, !dbg !1896
  %tobool = icmp ne i32 %2, 0, !dbg !1894
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !1897

if.then1:                                         ; preds = %do.end
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !1898
  %call = call i32 @get_bits_count(%struct.GetBitContext* %3), !dbg !1899
  store i32 %call, i32* %position, align 4, !dbg !1900
  br label %if.end2, !dbg !1901

if.end2:                                          ; preds = %if.then1, %do.end
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !1902
  %call3 = call i32 @get_bits_left(%struct.GetBitContext* %4), !dbg !1904
  %5 = load i32, i32* %width.addr, align 4, !dbg !1905
  %cmp4 = icmp slt i32 %call3, %5, !dbg !1906
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1907

if.then5:                                         ; preds = %if.end2
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1908
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %6, i32 0, i32 0, !dbg !1910
  %7 = load i8*, i8** %log_ctx, align 8, !dbg !1910
  %8 = load i8*, i8** %name.addr, align 8, !dbg !1911
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i8* %8), !dbg !1912
  store i32 -1094995529, i32* %retval, align 4, !dbg !1913
  br label %return, !dbg !1913

if.end6:                                          ; preds = %if.end2
  store i32 0, i32* %value, align 4, !dbg !1914
  store i32 0, i32* %b, align 4, !dbg !1915
  br label %for.cond, !dbg !1917

for.cond:                                         ; preds = %for.inc, %if.end6
  %9 = load i32, i32* %b, align 4, !dbg !1918
  %10 = load i32, i32* %width.addr, align 4, !dbg !1921
  %cmp7 = icmp slt i32 %9, %10, !dbg !1922
  br i1 %cmp7, label %for.body, label %for.end, !dbg !1923

for.body:                                         ; preds = %for.cond
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !1924
  %call8 = call i32 @get_bits(%struct.GetBitContext* %11, i32 8), !dbg !1925
  %12 = load i32, i32* %b, align 4, !dbg !1926
  %shl = shl i32 %call8, %12, !dbg !1927
  %13 = load i32, i32* %value, align 4, !dbg !1928
  %or = or i32 %13, %shl, !dbg !1928
  store i32 %or, i32* %value, align 4, !dbg !1928
  br label %for.inc, !dbg !1929

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %b, align 4, !dbg !1930
  %add = add nsw i32 %14, 8, !dbg !1930
  store i32 %add, i32* %b, align 4, !dbg !1930
  br label %for.cond, !dbg !1932, !llvm.loop !1933

for.end:                                          ; preds = %for.cond
  %15 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1935
  %trace_enable9 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %15, i32 0, i32 5, !dbg !1937
  %16 = load i32, i32* %trace_enable9, align 4, !dbg !1937
  %tobool10 = icmp ne i32 %16, 0, !dbg !1935
  br i1 %tobool10, label %if.then11, label %if.end29, !dbg !1938

if.then11:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata [33 x i8]* %bits, metadata !1939, metadata !730), !dbg !1944
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1945, metadata !730), !dbg !1946
  store i32 0, i32* %b, align 4, !dbg !1947
  br label %for.cond12, !dbg !1949

for.cond12:                                       ; preds = %for.inc23, %if.then11
  %17 = load i32, i32* %b, align 4, !dbg !1950
  %18 = load i32, i32* %width.addr, align 4, !dbg !1953
  %cmp13 = icmp slt i32 %17, %18, !dbg !1954
  br i1 %cmp13, label %for.body14, label %for.end25, !dbg !1955

for.body14:                                       ; preds = %for.cond12
  store i32 0, i32* %i, align 4, !dbg !1956
  br label %for.cond15, !dbg !1958

for.cond15:                                       ; preds = %for.inc21, %for.body14
  %19 = load i32, i32* %i, align 4, !dbg !1959
  %cmp16 = icmp slt i32 %19, 8, !dbg !1962
  br i1 %cmp16, label %for.body17, label %for.end22, !dbg !1963

for.body17:                                       ; preds = %for.cond15
  %20 = load i32, i32* %value, align 4, !dbg !1964
  %21 = load i32, i32* %b, align 4, !dbg !1965
  %22 = load i32, i32* %i, align 4, !dbg !1966
  %add18 = add nsw i32 %21, %22, !dbg !1967
  %shr = lshr i32 %20, %add18, !dbg !1968
  %and = and i32 %shr, 1, !dbg !1969
  %tobool19 = icmp ne i32 %and, 0, !dbg !1964
  %cond = select i1 %tobool19, i32 49, i32 48, !dbg !1964
  %conv = trunc i32 %cond to i8, !dbg !1964
  %23 = load i32, i32* %b, align 4, !dbg !1970
  %24 = load i32, i32* %i, align 4, !dbg !1971
  %add20 = add nsw i32 %23, %24, !dbg !1972
  %idxprom = sext i32 %add20 to i64, !dbg !1973
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom, !dbg !1973
  store i8 %conv, i8* %arrayidx, align 1, !dbg !1974
  br label %for.inc21, !dbg !1973

for.inc21:                                        ; preds = %for.body17
  %25 = load i32, i32* %i, align 4, !dbg !1975
  %inc = add nsw i32 %25, 1, !dbg !1975
  store i32 %inc, i32* %i, align 4, !dbg !1975
  br label %for.cond15, !dbg !1977, !llvm.loop !1978

for.end22:                                        ; preds = %for.cond15
  br label %for.inc23, !dbg !1980

for.inc23:                                        ; preds = %for.end22
  %26 = load i32, i32* %b, align 4, !dbg !1982
  %add24 = add nsw i32 %26, 8, !dbg !1982
  store i32 %add24, i32* %b, align 4, !dbg !1982
  br label %for.cond12, !dbg !1984, !llvm.loop !1985

for.end25:                                        ; preds = %for.cond12
  %27 = load i32, i32* %b, align 4, !dbg !1987
  %idxprom26 = sext i32 %27 to i64, !dbg !1988
  %arrayidx27 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom26, !dbg !1988
  store i8 0, i8* %arrayidx27, align 1, !dbg !1989
  %28 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !1990
  %29 = load i32, i32* %position, align 4, !dbg !1991
  %30 = load i8*, i8** %name.addr, align 8, !dbg !1992
  %31 = load i32*, i32** %subscripts.addr, align 8, !dbg !1993
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i32 0, i32 0, !dbg !1994
  %32 = load i32, i32* %value, align 4, !dbg !1995
  %conv28 = zext i32 %32 to i64, !dbg !1995
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %28, i32 %29, i8* %30, i32* %31, i8* %arraydecay, i64 %conv28), !dbg !1996
  br label %if.end29, !dbg !1997

if.end29:                                         ; preds = %for.end25, %for.end
  %33 = load i32, i32* %value, align 4, !dbg !1998
  %34 = load i32*, i32** %write_to.addr, align 8, !dbg !1999
  store i32 %33, i32* %34, align 4, !dbg !2000
  store i32 0, i32* %retval, align 4, !dbg !2001
  br label %return, !dbg !2001

return:                                           ; preds = %if.end29, %if.then5
  %35 = load i32, i32* %retval, align 4, !dbg !2002
  ret i32 %35, !dbg !2002
}

; Function Attrs: noreturn nounwind
declare void @abort() #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #2 !dbg !2003 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2008, metadata !730), !dbg !2009
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2010
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2011
  %1 = load i32, i32* %index, align 8, !dbg !2011
  ret i32 %1, !dbg !2012
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #2 !dbg !2013 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2016, metadata !730), !dbg !2017
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2018
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !2019
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !2019
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2020
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !2021
  %sub = sub nsw i32 %1, %call, !dbg !2022
  ret i32 %sub, !dbg !2023
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !2024 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2027, metadata !730), !dbg !2032
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2034, metadata !730), !dbg !2035
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2036, metadata !730), !dbg !2037
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2038, metadata !730), !dbg !2039
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2040, metadata !730), !dbg !2041
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2042
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2043
  %1 = load i32, i32* %index, align 8, !dbg !2043
  store i32 %1, i32* %re_index, align 4, !dbg !2041
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2044, metadata !730), !dbg !2045
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2046, metadata !730), !dbg !2047
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2048
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2049
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2049
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2047
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2050
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2051
  %5 = load i8*, i8** %buffer, align 8, !dbg !2051
  %6 = load i32, i32* %re_index, align 4, !dbg !2052
  %shr = lshr i32 %6, 3, !dbg !2053
  %idx.ext = zext i32 %shr to i64, !dbg !2054
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2054
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2055
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2055
  %8 = load i32, i32* %l, align 1, !dbg !2055
  store i32 %8, i32* %x.addr.i, align 4, !dbg !2056
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !2057
  %shl.i = shl i32 %9, 8, !dbg !2058
  %and.i = and i32 %shl.i, 65280, !dbg !2059
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !2060
  %shr.i = lshr i32 %10, 8, !dbg !2061
  %and1.i = and i32 %shr.i, 255, !dbg !2062
  %or.i = or i32 %and.i, %and1.i, !dbg !2063
  %shl2.i = shl i32 %or.i, 16, !dbg !2064
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !2065
  %shr3.i = lshr i32 %11, 16, !dbg !2066
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2067
  %and5.i = and i32 %shl4.i, 65280, !dbg !2068
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !2069
  %shr6.i = lshr i32 %12, 16, !dbg !2070
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2071
  %and8.i = and i32 %shr7.i, 255, !dbg !2072
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2073
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2074
  %13 = load i32, i32* %re_index, align 4, !dbg !2075
  %and = and i32 %13, 7, !dbg !2076
  %shl = shl i32 %or10.i, %and, !dbg !2077
  store i32 %shl, i32* %re_cache, align 4, !dbg !2078
  %14 = load i32, i32* %re_cache, align 4, !dbg !2079
  %15 = load i32, i32* %n.addr, align 4, !dbg !2080
  %conv = trunc i32 %15 to i8, !dbg !2080
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !2081
  store i32 %call4, i32* %tmp, align 4, !dbg !2082
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !2083
  %17 = load i32, i32* %re_index, align 4, !dbg !2084
  %18 = load i32, i32* %n.addr, align 4, !dbg !2085
  %add = add i32 %17, %18, !dbg !2086
  %cmp = icmp ugt i32 %16, %add, !dbg !2087
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2088

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !2089
  %20 = load i32, i32* %n.addr, align 4, !dbg !2091
  %add6 = add i32 %19, %20, !dbg !2092
  br label %cond.end, !dbg !2093

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !2094
  br label %cond.end, !dbg !2096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !2097
  store i32 %cond, i32* %re_index, align 4, !dbg !2099
  %22 = load i32, i32* %re_index, align 4, !dbg !2100
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2101
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !2102
  store i32 %22, i32* %index7, align 8, !dbg !2103
  %24 = load i32, i32* %tmp, align 4, !dbg !2104
  ret i32 %24, !dbg !2105
}

declare void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext*, i32, i8*, i32*, i8*, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #2 !dbg !2106 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !2110, metadata !730), !dbg !2111
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !2112, metadata !730), !dbg !2113
  %0 = load i32, i32* %a.addr, align 4, !dbg !2114
  %1 = load i8, i8* %s.addr, align 1, !dbg !2115
  %conv = sext i8 %1 to i32, !dbg !2115
  %sub = sub nsw i32 0, %conv, !dbg !2116
  %conv1 = trunc i32 %sub to i8, !dbg !2117
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !2114, !srcloc !2118
  store i32 %2, i32* %a.addr, align 4, !dbg !2114
  %3 = load i32, i32* %a.addr, align 4, !dbg !2119
  ret i32 %3, !dbg !2120
}

declare i32 @ff_cbs_alloc_unit_content(%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*, i64, void (i8*, i8*)*) #3

; Function Attrs: nounwind uwtable
define internal void @cbs_vp9_free_frame(i8* %unit, i8* %content) #0 !dbg !2121 {
entry:
  %unit.addr = alloca i8*, align 8
  %content.addr = alloca i8*, align 8
  %frame = alloca %struct.VP9RawFrame*, align 8
  store i8* %unit, i8** %unit.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unit.addr, metadata !2124, metadata !730), !dbg !2125
  store i8* %content, i8** %content.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %content.addr, metadata !2126, metadata !730), !dbg !2127
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrame** %frame, metadata !2128, metadata !730), !dbg !2129
  %0 = load i8*, i8** %content.addr, align 8, !dbg !2130
  %1 = bitcast i8* %0 to %struct.VP9RawFrame*, !dbg !2131
  store %struct.VP9RawFrame* %1, %struct.VP9RawFrame** %frame, align 8, !dbg !2129
  %2 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %frame, align 8, !dbg !2132
  %data_ref = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %2, i32 0, i32 3, !dbg !2133
  call void @av_buffer_unref(%struct.AVBufferRef** %data_ref), !dbg !2134
  %3 = bitcast %struct.VP9RawFrame** %frame to i8*, !dbg !2135
  call void @av_freep(i8* %3), !dbg !2136
  ret void, !dbg !2137
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_frame(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrame* %current) #0 !dbg !2138 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrame*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !2141, metadata !730), !dbg !2142
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !2143, metadata !730), !dbg !2144
  store %struct.VP9RawFrame* %current, %struct.VP9RawFrame** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrame** %current.addr, metadata !2145, metadata !730), !dbg !2146
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2147, metadata !730), !dbg !2148
  br label %do.body, !dbg !2149, !llvm.loop !2150

do.body:                                          ; preds = %entry
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2151
  call void @ff_cbs_trace_header(%struct.CodedBitstreamContext* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0)), !dbg !2154
  br label %do.end, !dbg !2155

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !2156, !llvm.loop !2157

do.body1:                                         ; preds = %do.end
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2158
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2161
  %3 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %current.addr, align 8, !dbg !2162
  %header = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %3, i32 0, i32 0, !dbg !2163
  %call = call i32 @cbs_vp9_read_uncompressed_header(%struct.CodedBitstreamContext* %1, %struct.GetBitContext* %2, %struct.VP9RawFrameHeader* %header), !dbg !2164
  store i32 %call, i32* %err, align 4, !dbg !2165
  %4 = load i32, i32* %err, align 4, !dbg !2166
  %cmp = icmp slt i32 %4, 0, !dbg !2167
  br i1 %cmp, label %if.then, label %if.end, !dbg !2166

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !2168
  store i32 %5, i32* %retval, align 4, !dbg !2171
  br label %return, !dbg !2171

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !2172

do.end2:                                          ; preds = %if.end
  br label %do.body3, !dbg !2174, !llvm.loop !2175

do.body3:                                         ; preds = %do.end2
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2176
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2179
  %call4 = call i32 @cbs_vp9_read_trailing_bits(%struct.CodedBitstreamContext* %6, %struct.GetBitContext* %7), !dbg !2180
  store i32 %call4, i32* %err, align 4, !dbg !2181
  %8 = load i32, i32* %err, align 4, !dbg !2182
  %cmp5 = icmp slt i32 %8, 0, !dbg !2183
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2182

if.then6:                                         ; preds = %do.body3
  %9 = load i32, i32* %err, align 4, !dbg !2184
  store i32 %9, i32* %retval, align 4, !dbg !2187
  br label %return, !dbg !2187

if.end7:                                          ; preds = %do.body3
  br label %do.end8, !dbg !2188

do.end8:                                          ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2190
  br label %return, !dbg !2190

return:                                           ; preds = %do.end8, %if.then6, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2191
  ret i32 %10, !dbg !2191
}

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) #3

declare void @av_buffer_unref(%struct.AVBufferRef**) #3

declare void @av_freep(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_uncompressed_header(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !2192 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %value4 = alloca i32, align 4
  %value15 = alloca i32, align 4
  %fixed_value = alloca i32, align 4
  %value44 = alloca i32, align 4
  %value57 = alloca i32, align 4
  %value75 = alloca i32, align 4
  %value86 = alloca i32, align 4
  %value97 = alloca i32, align 4
  %value150 = alloca i32, align 4
  %value171 = alloca i32, align 4
  %value223 = alloca i32, align 4
  %value250 = alloca i32, align 4
  %value264 = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %value275 = alloca i32, align 4
  %.compoundliteral277 = alloca [2 x i32], align 4
  %value301 = alloca i32, align 4
  %value326 = alloca i32, align 4
  %value337 = alloca i32, align 4
  %value356 = alloca i32, align 4
  %value395 = alloca i32, align 4
  %.compoundliteral417 = alloca %struct.VP9ReferenceFrameState, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !2193, metadata !730), !dbg !2194
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !2195, metadata !730), !dbg !2196
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !2197, metadata !730), !dbg !2198
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !2199, metadata !730), !dbg !2200
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2201
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !2202
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2202
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !2201
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2200
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2203, metadata !730), !dbg !2204
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2205, metadata !730), !dbg !2206
  br label %do.body, !dbg !2207, !llvm.loop !2208

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !2209, metadata !730), !dbg !2211
  store i32 0, i32* %value, align 4, !dbg !2212
  br label %do.body1, !dbg !2214, !llvm.loop !2215

do.body1:                                         ; preds = %do.body
  %3 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2217
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2220
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %3, %struct.GetBitContext* %4, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 3), !dbg !2221
  store i32 %call, i32* %err, align 4, !dbg !2222
  %5 = load i32, i32* %err, align 4, !dbg !2223
  %cmp = icmp slt i32 %5, 0, !dbg !2221
  br i1 %cmp, label %if.then, label %if.end, !dbg !2223

if.then:                                          ; preds = %do.body1
  %6 = load i32, i32* %err, align 4, !dbg !2224
  store i32 %6, i32* %retval, align 4, !dbg !2227
  br label %return, !dbg !2227

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !2228

do.end:                                           ; preds = %if.end
  %7 = load i32, i32* %value, align 4, !dbg !2230
  %conv = trunc i32 %7 to i8, !dbg !2230
  %8 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2232
  %frame_marker = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %8, i32 0, i32 0, !dbg !2233
  store i8 %conv, i8* %frame_marker, align 2, !dbg !2234
  br label %do.end2, !dbg !2235

do.end2:                                          ; preds = %do.end
  br label %do.body3, !dbg !2236, !llvm.loop !2237

do.body3:                                         ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i32* %value4, metadata !2238, metadata !730), !dbg !2240
  store i32 0, i32* %value4, align 4, !dbg !2241
  br label %do.body5, !dbg !2243, !llvm.loop !2244

do.body5:                                         ; preds = %do.body3
  %9 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2246
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2249
  %call6 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %9, %struct.GetBitContext* %10, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), i32* null, i32* %value4, i32 0, i32 1), !dbg !2250
  store i32 %call6, i32* %err, align 4, !dbg !2251
  %11 = load i32, i32* %err, align 4, !dbg !2252
  %cmp7 = icmp slt i32 %11, 0, !dbg !2250
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2252

if.then9:                                         ; preds = %do.body5
  %12 = load i32, i32* %err, align 4, !dbg !2253
  store i32 %12, i32* %retval, align 4, !dbg !2256
  br label %return, !dbg !2256

if.end10:                                         ; preds = %do.body5
  br label %do.end11, !dbg !2257

do.end11:                                         ; preds = %if.end10
  %13 = load i32, i32* %value4, align 4, !dbg !2259
  %conv12 = trunc i32 %13 to i8, !dbg !2259
  %14 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2261
  %profile_low_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %14, i32 0, i32 1, !dbg !2262
  store i8 %conv12, i8* %profile_low_bit, align 1, !dbg !2263
  br label %do.end13, !dbg !2264

do.end13:                                         ; preds = %do.end11
  br label %do.body14, !dbg !2265, !llvm.loop !2266

do.body14:                                        ; preds = %do.end13
  call void @llvm.dbg.declare(metadata i32* %value15, metadata !2267, metadata !730), !dbg !2269
  store i32 0, i32* %value15, align 4, !dbg !2270
  br label %do.body16, !dbg !2272, !llvm.loop !2273

do.body16:                                        ; preds = %do.body14
  %15 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2275
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2278
  %call17 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %15, %struct.GetBitContext* %16, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), i32* null, i32* %value15, i32 0, i32 1), !dbg !2279
  store i32 %call17, i32* %err, align 4, !dbg !2280
  %17 = load i32, i32* %err, align 4, !dbg !2281
  %cmp18 = icmp slt i32 %17, 0, !dbg !2279
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2281

if.then20:                                        ; preds = %do.body16
  %18 = load i32, i32* %err, align 4, !dbg !2282
  store i32 %18, i32* %retval, align 4, !dbg !2285
  br label %return, !dbg !2285

if.end21:                                         ; preds = %do.body16
  br label %do.end22, !dbg !2286

do.end22:                                         ; preds = %if.end21
  %19 = load i32, i32* %value15, align 4, !dbg !2288
  %conv23 = trunc i32 %19 to i8, !dbg !2288
  %20 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2290
  %profile_high_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %20, i32 0, i32 2, !dbg !2291
  store i8 %conv23, i8* %profile_high_bit, align 2, !dbg !2292
  br label %do.end24, !dbg !2293

do.end24:                                         ; preds = %do.end22
  %21 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2294
  %profile_high_bit25 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %21, i32 0, i32 2, !dbg !2295
  %22 = load i8, i8* %profile_high_bit25, align 2, !dbg !2295
  %conv26 = zext i8 %22 to i32, !dbg !2294
  %shl = shl i32 %conv26, 1, !dbg !2296
  %23 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2297
  %profile_low_bit27 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %23, i32 0, i32 1, !dbg !2298
  %24 = load i8, i8* %profile_low_bit27, align 1, !dbg !2298
  %conv28 = zext i8 %24 to i32, !dbg !2297
  %add = add nsw i32 %shl, %conv28, !dbg !2299
  %25 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2300
  %profile = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %25, i32 0, i32 0, !dbg !2301
  store i32 %add, i32* %profile, align 8, !dbg !2302
  %26 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2303
  %profile29 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %26, i32 0, i32 0, !dbg !2305
  %27 = load i32, i32* %profile29, align 8, !dbg !2305
  %cmp30 = icmp eq i32 %27, 3, !dbg !2306
  br i1 %cmp30, label %if.then32, label %if.end42, !dbg !2307

if.then32:                                        ; preds = %do.end24
  br label %do.body33, !dbg !2308, !llvm.loop !2309

do.body33:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata i32* %fixed_value, metadata !2310, metadata !730), !dbg !2312
  store i32 0, i32* %fixed_value, align 4, !dbg !2313
  br label %do.body34, !dbg !2315, !llvm.loop !2316

do.body34:                                        ; preds = %do.body33
  %28 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2318
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2321
  %call35 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %28, %struct.GetBitContext* %29, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32* %fixed_value, i32 0, i32 0), !dbg !2322
  store i32 %call35, i32* %err, align 4, !dbg !2323
  %30 = load i32, i32* %err, align 4, !dbg !2324
  %cmp36 = icmp slt i32 %30, 0, !dbg !2325
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2324

if.then38:                                        ; preds = %do.body34
  %31 = load i32, i32* %err, align 4, !dbg !2326
  store i32 %31, i32* %retval, align 4, !dbg !2329
  br label %return, !dbg !2329

if.end39:                                         ; preds = %do.body34
  br label %do.end40, !dbg !2330

do.end40:                                         ; preds = %if.end39
  br label %do.end41, !dbg !2332

do.end41:                                         ; preds = %do.end40
  br label %if.end42, !dbg !2334

if.end42:                                         ; preds = %do.end41, %do.end24
  br label %do.body43, !dbg !2336, !llvm.loop !2337

do.body43:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %value44, metadata !2338, metadata !730), !dbg !2340
  store i32 0, i32* %value44, align 4, !dbg !2341
  br label %do.body45, !dbg !2343, !llvm.loop !2344

do.body45:                                        ; preds = %do.body43
  %32 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2346
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2349
  %call46 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %32, %struct.GetBitContext* %33, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i32 0, i32 0), i32* null, i32* %value44, i32 0, i32 1), !dbg !2350
  store i32 %call46, i32* %err, align 4, !dbg !2351
  %34 = load i32, i32* %err, align 4, !dbg !2352
  %cmp47 = icmp slt i32 %34, 0, !dbg !2350
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2352

if.then49:                                        ; preds = %do.body45
  %35 = load i32, i32* %err, align 4, !dbg !2353
  store i32 %35, i32* %retval, align 4, !dbg !2356
  br label %return, !dbg !2356

if.end50:                                         ; preds = %do.body45
  br label %do.end51, !dbg !2357

do.end51:                                         ; preds = %if.end50
  %36 = load i32, i32* %value44, align 4, !dbg !2359
  %conv52 = trunc i32 %36 to i8, !dbg !2359
  %37 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2361
  %show_existing_frame = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %37, i32 0, i32 3, !dbg !2362
  store i8 %conv52, i8* %show_existing_frame, align 1, !dbg !2363
  br label %do.end53, !dbg !2364

do.end53:                                         ; preds = %do.end51
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2365
  %show_existing_frame54 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %38, i32 0, i32 3, !dbg !2367
  %39 = load i8, i8* %show_existing_frame54, align 1, !dbg !2367
  %tobool = icmp ne i8 %39, 0, !dbg !2365
  br i1 %tobool, label %if.then55, label %if.end73, !dbg !2368

if.then55:                                        ; preds = %do.end53
  br label %do.body56, !dbg !2369, !llvm.loop !2371

do.body56:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata i32* %value57, metadata !2372, metadata !730), !dbg !2374
  store i32 0, i32* %value57, align 4, !dbg !2375
  br label %do.body58, !dbg !2377, !llvm.loop !2378

do.body58:                                        ; preds = %do.body56
  %40 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2380
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2383
  %call59 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %40, %struct.GetBitContext* %41, i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0), i32* null, i32* %value57, i32 0, i32 7), !dbg !2384
  store i32 %call59, i32* %err, align 4, !dbg !2385
  %42 = load i32, i32* %err, align 4, !dbg !2386
  %cmp60 = icmp slt i32 %42, 0, !dbg !2384
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2386

if.then62:                                        ; preds = %do.body58
  %43 = load i32, i32* %err, align 4, !dbg !2387
  store i32 %43, i32* %retval, align 4, !dbg !2390
  br label %return, !dbg !2390

if.end63:                                         ; preds = %do.body58
  br label %do.end64, !dbg !2391

do.end64:                                         ; preds = %if.end63
  %44 = load i32, i32* %value57, align 4, !dbg !2393
  %conv65 = trunc i32 %44 to i8, !dbg !2393
  %45 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2395
  %frame_to_show_map_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %45, i32 0, i32 4, !dbg !2396
  store i8 %conv65, i8* %frame_to_show_map_idx, align 2, !dbg !2397
  br label %do.end66, !dbg !2398

do.end66:                                         ; preds = %do.end64
  br label %do.body67, !dbg !2399, !llvm.loop !2400

do.body67:                                        ; preds = %do.end66
  %46 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2401
  %header_size_in_bytes = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %46, i32 0, i32 54, !dbg !2404
  store i16 0, i16* %header_size_in_bytes, align 2, !dbg !2405
  br label %do.end68, !dbg !2406

do.end68:                                         ; preds = %do.body67
  br label %do.body69, !dbg !2407, !llvm.loop !2408

do.body69:                                        ; preds = %do.end68
  %47 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2409
  %refresh_frame_flags = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %47, i32 0, i32 13, !dbg !2412
  store i8 0, i8* %refresh_frame_flags, align 1, !dbg !2413
  br label %do.end70, !dbg !2414

do.end70:                                         ; preds = %do.body69
  br label %do.body71, !dbg !2415, !llvm.loop !2416

do.body71:                                        ; preds = %do.end70
  %48 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2417
  %loop_filter_level = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %48, i32 0, i32 30, !dbg !2420
  store i8 0, i8* %loop_filter_level, align 2, !dbg !2421
  br label %do.end72, !dbg !2422

do.end72:                                         ; preds = %do.body71
  store i32 0, i32* %retval, align 4, !dbg !2423
  br label %return, !dbg !2423

if.end73:                                         ; preds = %do.end53
  br label %do.body74, !dbg !2424, !llvm.loop !2425

do.body74:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata i32* %value75, metadata !2426, metadata !730), !dbg !2428
  store i32 0, i32* %value75, align 4, !dbg !2429
  br label %do.body76, !dbg !2431, !llvm.loop !2432

do.body76:                                        ; preds = %do.body74
  %49 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2434
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2437
  %call77 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %49, %struct.GetBitContext* %50, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i32* null, i32* %value75, i32 0, i32 1), !dbg !2438
  store i32 %call77, i32* %err, align 4, !dbg !2439
  %51 = load i32, i32* %err, align 4, !dbg !2440
  %cmp78 = icmp slt i32 %51, 0, !dbg !2438
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !2440

if.then80:                                        ; preds = %do.body76
  %52 = load i32, i32* %err, align 4, !dbg !2441
  store i32 %52, i32* %retval, align 4, !dbg !2444
  br label %return, !dbg !2444

if.end81:                                         ; preds = %do.body76
  br label %do.end82, !dbg !2445

do.end82:                                         ; preds = %if.end81
  %53 = load i32, i32* %value75, align 4, !dbg !2447
  %conv83 = trunc i32 %53 to i8, !dbg !2447
  %54 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2449
  %frame_type = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %54, i32 0, i32 5, !dbg !2450
  store i8 %conv83, i8* %frame_type, align 1, !dbg !2451
  br label %do.end84, !dbg !2452

do.end84:                                         ; preds = %do.end82
  br label %do.body85, !dbg !2453, !llvm.loop !2454

do.body85:                                        ; preds = %do.end84
  call void @llvm.dbg.declare(metadata i32* %value86, metadata !2455, metadata !730), !dbg !2457
  store i32 0, i32* %value86, align 4, !dbg !2458
  br label %do.body87, !dbg !2460, !llvm.loop !2461

do.body87:                                        ; preds = %do.body85
  %55 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2463
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2466
  %call88 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %55, %struct.GetBitContext* %56, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i32* null, i32* %value86, i32 0, i32 1), !dbg !2467
  store i32 %call88, i32* %err, align 4, !dbg !2468
  %57 = load i32, i32* %err, align 4, !dbg !2469
  %cmp89 = icmp slt i32 %57, 0, !dbg !2467
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !2469

if.then91:                                        ; preds = %do.body87
  %58 = load i32, i32* %err, align 4, !dbg !2470
  store i32 %58, i32* %retval, align 4, !dbg !2473
  br label %return, !dbg !2473

if.end92:                                         ; preds = %do.body87
  br label %do.end93, !dbg !2474

do.end93:                                         ; preds = %if.end92
  %59 = load i32, i32* %value86, align 4, !dbg !2476
  %conv94 = trunc i32 %59 to i8, !dbg !2476
  %60 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2478
  %show_frame = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %60, i32 0, i32 6, !dbg !2479
  store i8 %conv94, i8* %show_frame, align 2, !dbg !2480
  br label %do.end95, !dbg !2481

do.end95:                                         ; preds = %do.end93
  br label %do.body96, !dbg !2482, !llvm.loop !2483

do.body96:                                        ; preds = %do.end95
  call void @llvm.dbg.declare(metadata i32* %value97, metadata !2484, metadata !730), !dbg !2486
  store i32 0, i32* %value97, align 4, !dbg !2487
  br label %do.body98, !dbg !2489, !llvm.loop !2490

do.body98:                                        ; preds = %do.body96
  %61 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2492
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2495
  %call99 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %61, %struct.GetBitContext* %62, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i32 0, i32 0), i32* null, i32* %value97, i32 0, i32 1), !dbg !2496
  store i32 %call99, i32* %err, align 4, !dbg !2497
  %63 = load i32, i32* %err, align 4, !dbg !2498
  %cmp100 = icmp slt i32 %63, 0, !dbg !2496
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !2498

if.then102:                                       ; preds = %do.body98
  %64 = load i32, i32* %err, align 4, !dbg !2499
  store i32 %64, i32* %retval, align 4, !dbg !2502
  br label %return, !dbg !2502

if.end103:                                        ; preds = %do.body98
  br label %do.end104, !dbg !2503

do.end104:                                        ; preds = %if.end103
  %65 = load i32, i32* %value97, align 4, !dbg !2505
  %conv105 = trunc i32 %65 to i8, !dbg !2505
  %66 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2507
  %error_resilient_mode = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %66, i32 0, i32 7, !dbg !2508
  store i8 %conv105, i8* %error_resilient_mode, align 1, !dbg !2509
  br label %do.end106, !dbg !2510

do.end106:                                        ; preds = %do.end104
  %67 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2511
  %frame_type107 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %67, i32 0, i32 5, !dbg !2513
  %68 = load i8, i8* %frame_type107, align 1, !dbg !2513
  %conv108 = zext i8 %68 to i32, !dbg !2511
  %cmp109 = icmp eq i32 %conv108, 0, !dbg !2514
  br i1 %cmp109, label %if.then111, label %if.else, !dbg !2515

if.then111:                                       ; preds = %do.end106
  br label %do.body112, !dbg !2516, !llvm.loop !2518

do.body112:                                       ; preds = %if.then111
  %69 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2519
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2522
  %71 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2523
  %call113 = call i32 @cbs_vp9_read_frame_sync_code(%struct.CodedBitstreamContext* %69, %struct.GetBitContext* %70, %struct.VP9RawFrameHeader* %71), !dbg !2524
  store i32 %call113, i32* %err, align 4, !dbg !2525
  %72 = load i32, i32* %err, align 4, !dbg !2526
  %cmp114 = icmp slt i32 %72, 0, !dbg !2527
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !2526

if.then116:                                       ; preds = %do.body112
  %73 = load i32, i32* %err, align 4, !dbg !2528
  store i32 %73, i32* %retval, align 4, !dbg !2531
  br label %return, !dbg !2531

if.end117:                                        ; preds = %do.body112
  br label %do.end118, !dbg !2532

do.end118:                                        ; preds = %if.end117
  br label %do.body119, !dbg !2534, !llvm.loop !2535

do.body119:                                       ; preds = %do.end118
  %74 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2536
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2539
  %76 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2540
  %77 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2541
  %profile120 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %77, i32 0, i32 0, !dbg !2542
  %78 = load i32, i32* %profile120, align 8, !dbg !2542
  %call121 = call i32 @cbs_vp9_read_color_config(%struct.CodedBitstreamContext* %74, %struct.GetBitContext* %75, %struct.VP9RawFrameHeader* %76, i32 %78), !dbg !2543
  store i32 %call121, i32* %err, align 4, !dbg !2544
  %79 = load i32, i32* %err, align 4, !dbg !2545
  %cmp122 = icmp slt i32 %79, 0, !dbg !2546
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !2545

if.then124:                                       ; preds = %do.body119
  %80 = load i32, i32* %err, align 4, !dbg !2547
  store i32 %80, i32* %retval, align 4, !dbg !2550
  br label %return, !dbg !2550

if.end125:                                        ; preds = %do.body119
  br label %do.end126, !dbg !2551

do.end126:                                        ; preds = %if.end125
  br label %do.body127, !dbg !2553, !llvm.loop !2554

do.body127:                                       ; preds = %do.end126
  %81 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2555
  %82 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2558
  %83 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2559
  %call128 = call i32 @cbs_vp9_read_frame_size(%struct.CodedBitstreamContext* %81, %struct.GetBitContext* %82, %struct.VP9RawFrameHeader* %83), !dbg !2560
  store i32 %call128, i32* %err, align 4, !dbg !2561
  %84 = load i32, i32* %err, align 4, !dbg !2562
  %cmp129 = icmp slt i32 %84, 0, !dbg !2563
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !2562

if.then131:                                       ; preds = %do.body127
  %85 = load i32, i32* %err, align 4, !dbg !2564
  store i32 %85, i32* %retval, align 4, !dbg !2567
  br label %return, !dbg !2567

if.end132:                                        ; preds = %do.body127
  br label %do.end133, !dbg !2568

do.end133:                                        ; preds = %if.end132
  br label %do.body134, !dbg !2570, !llvm.loop !2571

do.body134:                                       ; preds = %do.end133
  %86 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2572
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2575
  %88 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2576
  %call135 = call i32 @cbs_vp9_read_render_size(%struct.CodedBitstreamContext* %86, %struct.GetBitContext* %87, %struct.VP9RawFrameHeader* %88), !dbg !2577
  store i32 %call135, i32* %err, align 4, !dbg !2578
  %89 = load i32, i32* %err, align 4, !dbg !2579
  %cmp136 = icmp slt i32 %89, 0, !dbg !2580
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !2579

if.then138:                                       ; preds = %do.body134
  %90 = load i32, i32* %err, align 4, !dbg !2581
  store i32 %90, i32* %retval, align 4, !dbg !2584
  br label %return, !dbg !2584

if.end139:                                        ; preds = %do.body134
  br label %do.end140, !dbg !2585

do.end140:                                        ; preds = %if.end139
  br label %do.body141, !dbg !2587, !llvm.loop !2588

do.body141:                                       ; preds = %do.end140
  %91 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2589
  %refresh_frame_flags142 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %91, i32 0, i32 13, !dbg !2592
  store i8 -1, i8* %refresh_frame_flags142, align 1, !dbg !2593
  br label %do.end143, !dbg !2594

do.end143:                                        ; preds = %do.body141
  br label %if.end319, !dbg !2595

if.else:                                          ; preds = %do.end106
  %92 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2596
  %show_frame144 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %92, i32 0, i32 6, !dbg !2599
  %93 = load i8, i8* %show_frame144, align 2, !dbg !2599
  %conv145 = zext i8 %93 to i32, !dbg !2596
  %cmp146 = icmp eq i32 %conv145, 0, !dbg !2600
  br i1 %cmp146, label %if.then148, label %if.else160, !dbg !2601

if.then148:                                       ; preds = %if.else
  br label %do.body149, !dbg !2602, !llvm.loop !2603

do.body149:                                       ; preds = %if.then148
  call void @llvm.dbg.declare(metadata i32* %value150, metadata !2604, metadata !730), !dbg !2606
  store i32 0, i32* %value150, align 4, !dbg !2607
  br label %do.body151, !dbg !2609, !llvm.loop !2610

do.body151:                                       ; preds = %do.body149
  %94 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2612
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2615
  %call152 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %94, %struct.GetBitContext* %95, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32* null, i32* %value150, i32 0, i32 1), !dbg !2616
  store i32 %call152, i32* %err, align 4, !dbg !2617
  %96 = load i32, i32* %err, align 4, !dbg !2618
  %cmp153 = icmp slt i32 %96, 0, !dbg !2616
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !2618

if.then155:                                       ; preds = %do.body151
  %97 = load i32, i32* %err, align 4, !dbg !2619
  store i32 %97, i32* %retval, align 4, !dbg !2622
  br label %return, !dbg !2622

if.end156:                                        ; preds = %do.body151
  br label %do.end157, !dbg !2623

do.end157:                                        ; preds = %if.end156
  %98 = load i32, i32* %value150, align 4, !dbg !2625
  %conv158 = trunc i32 %98 to i8, !dbg !2625
  %99 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2627
  %intra_only = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %99, i32 0, i32 14, !dbg !2628
  store i8 %conv158, i8* %intra_only, align 2, !dbg !2629
  br label %do.end159, !dbg !2630

do.end159:                                        ; preds = %do.end157
  br label %if.end164, !dbg !2631

if.else160:                                       ; preds = %if.else
  br label %do.body161, !dbg !2633, !llvm.loop !2634

do.body161:                                       ; preds = %if.else160
  %100 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2635
  %intra_only162 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %100, i32 0, i32 14, !dbg !2638
  store i8 0, i8* %intra_only162, align 2, !dbg !2639
  br label %do.end163, !dbg !2640

do.end163:                                        ; preds = %do.body161
  br label %if.end164

if.end164:                                        ; preds = %do.end163, %do.end159
  %101 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2641
  %error_resilient_mode165 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %101, i32 0, i32 7, !dbg !2643
  %102 = load i8, i8* %error_resilient_mode165, align 1, !dbg !2643
  %conv166 = zext i8 %102 to i32, !dbg !2641
  %cmp167 = icmp eq i32 %conv166, 0, !dbg !2644
  br i1 %cmp167, label %if.then169, label %if.else181, !dbg !2645

if.then169:                                       ; preds = %if.end164
  br label %do.body170, !dbg !2646, !llvm.loop !2647

do.body170:                                       ; preds = %if.then169
  call void @llvm.dbg.declare(metadata i32* %value171, metadata !2648, metadata !730), !dbg !2650
  store i32 0, i32* %value171, align 4, !dbg !2651
  br label %do.body172, !dbg !2653, !llvm.loop !2654

do.body172:                                       ; preds = %do.body170
  %103 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2656
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2659
  %call173 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %103, %struct.GetBitContext* %104, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i32* null, i32* %value171, i32 0, i32 3), !dbg !2660
  store i32 %call173, i32* %err, align 4, !dbg !2661
  %105 = load i32, i32* %err, align 4, !dbg !2662
  %cmp174 = icmp slt i32 %105, 0, !dbg !2660
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !2662

if.then176:                                       ; preds = %do.body172
  %106 = load i32, i32* %err, align 4, !dbg !2663
  store i32 %106, i32* %retval, align 4, !dbg !2666
  br label %return, !dbg !2666

if.end177:                                        ; preds = %do.body172
  br label %do.end178, !dbg !2667

do.end178:                                        ; preds = %if.end177
  %107 = load i32, i32* %value171, align 4, !dbg !2669
  %conv179 = trunc i32 %107 to i8, !dbg !2669
  %108 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2671
  %reset_frame_context = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %108, i32 0, i32 15, !dbg !2672
  store i8 %conv179, i8* %reset_frame_context, align 1, !dbg !2673
  br label %do.end180, !dbg !2674

do.end180:                                        ; preds = %do.end178
  br label %if.end185, !dbg !2675

if.else181:                                       ; preds = %if.end164
  br label %do.body182, !dbg !2677, !llvm.loop !2678

do.body182:                                       ; preds = %if.else181
  %109 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2679
  %reset_frame_context183 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %109, i32 0, i32 15, !dbg !2682
  store i8 0, i8* %reset_frame_context183, align 1, !dbg !2683
  br label %do.end184, !dbg !2684

do.end184:                                        ; preds = %do.body182
  br label %if.end185

if.end185:                                        ; preds = %do.end184, %do.end180
  %110 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2685
  %intra_only186 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %110, i32 0, i32 14, !dbg !2687
  %111 = load i8, i8* %intra_only186, align 2, !dbg !2687
  %conv187 = zext i8 %111 to i32, !dbg !2685
  %cmp188 = icmp eq i32 %conv187, 1, !dbg !2688
  br i1 %cmp188, label %if.then190, label %if.else248, !dbg !2689

if.then190:                                       ; preds = %if.end185
  br label %do.body191, !dbg !2690, !llvm.loop !2692

do.body191:                                       ; preds = %if.then190
  %112 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2693
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2696
  %114 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2697
  %call192 = call i32 @cbs_vp9_read_frame_sync_code(%struct.CodedBitstreamContext* %112, %struct.GetBitContext* %113, %struct.VP9RawFrameHeader* %114), !dbg !2698
  store i32 %call192, i32* %err, align 4, !dbg !2699
  %115 = load i32, i32* %err, align 4, !dbg !2700
  %cmp193 = icmp slt i32 %115, 0, !dbg !2701
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !2700

if.then195:                                       ; preds = %do.body191
  %116 = load i32, i32* %err, align 4, !dbg !2702
  store i32 %116, i32* %retval, align 4, !dbg !2705
  br label %return, !dbg !2705

if.end196:                                        ; preds = %do.body191
  br label %do.end197, !dbg !2706

do.end197:                                        ; preds = %if.end196
  %117 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2708
  %profile198 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %117, i32 0, i32 0, !dbg !2710
  %118 = load i32, i32* %profile198, align 8, !dbg !2710
  %cmp199 = icmp sgt i32 %118, 0, !dbg !2711
  br i1 %cmp199, label %if.then201, label %if.else210, !dbg !2712

if.then201:                                       ; preds = %do.end197
  br label %do.body202, !dbg !2713, !llvm.loop !2715

do.body202:                                       ; preds = %if.then201
  %119 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2716
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2719
  %121 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2720
  %122 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2721
  %profile203 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %122, i32 0, i32 0, !dbg !2722
  %123 = load i32, i32* %profile203, align 8, !dbg !2722
  %call204 = call i32 @cbs_vp9_read_color_config(%struct.CodedBitstreamContext* %119, %struct.GetBitContext* %120, %struct.VP9RawFrameHeader* %121, i32 %123), !dbg !2723
  store i32 %call204, i32* %err, align 4, !dbg !2724
  %124 = load i32, i32* %err, align 4, !dbg !2725
  %cmp205 = icmp slt i32 %124, 0, !dbg !2726
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !2725

if.then207:                                       ; preds = %do.body202
  %125 = load i32, i32* %err, align 4, !dbg !2727
  store i32 %125, i32* %retval, align 4, !dbg !2730
  br label %return, !dbg !2730

if.end208:                                        ; preds = %do.body202
  br label %do.end209, !dbg !2731

do.end209:                                        ; preds = %if.end208
  br label %if.end221, !dbg !2733

if.else210:                                       ; preds = %do.end197
  br label %do.body211, !dbg !2734, !llvm.loop !2736

do.body211:                                       ; preds = %if.else210
  %126 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2737
  %color_space = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %126, i32 0, i32 9, !dbg !2740
  store i8 1, i8* %color_space, align 1, !dbg !2741
  br label %do.end212, !dbg !2742

do.end212:                                        ; preds = %do.body211
  br label %do.body213, !dbg !2743, !llvm.loop !2744

do.body213:                                       ; preds = %do.end212
  %127 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2745
  %subsampling_x = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %127, i32 0, i32 11, !dbg !2748
  store i8 1, i8* %subsampling_x, align 1, !dbg !2749
  br label %do.end214, !dbg !2750

do.end214:                                        ; preds = %do.body213
  br label %do.body215, !dbg !2751, !llvm.loop !2752

do.body215:                                       ; preds = %do.end214
  %128 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2753
  %subsampling_y = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %128, i32 0, i32 12, !dbg !2756
  store i8 1, i8* %subsampling_y, align 2, !dbg !2757
  br label %do.end216, !dbg !2758

do.end216:                                        ; preds = %do.body215
  %129 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2759
  %bit_depth = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %129, i32 0, i32 9, !dbg !2760
  store i32 8, i32* %bit_depth, align 8, !dbg !2761
  %130 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2762
  %subsampling_x217 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %130, i32 0, i32 11, !dbg !2763
  %131 = load i8, i8* %subsampling_x217, align 1, !dbg !2763
  %132 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2764
  %subsampling_x218 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %132, i32 0, i32 7, !dbg !2765
  store i8 %131, i8* %subsampling_x218, align 4, !dbg !2766
  %133 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2767
  %subsampling_y219 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %133, i32 0, i32 12, !dbg !2768
  %134 = load i8, i8* %subsampling_y219, align 2, !dbg !2768
  %135 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !2769
  %subsampling_y220 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %135, i32 0, i32 8, !dbg !2770
  store i8 %134, i8* %subsampling_y220, align 1, !dbg !2771
  br label %if.end221

if.end221:                                        ; preds = %do.end216, %do.end209
  br label %do.body222, !dbg !2772, !llvm.loop !2773

do.body222:                                       ; preds = %if.end221
  call void @llvm.dbg.declare(metadata i32* %value223, metadata !2774, metadata !730), !dbg !2776
  store i32 0, i32* %value223, align 4, !dbg !2777
  br label %do.body224, !dbg !2779, !llvm.loop !2780

do.body224:                                       ; preds = %do.body222
  %136 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2782
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2785
  %call225 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %136, %struct.GetBitContext* %137, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32* null, i32* %value223, i32 0, i32 255), !dbg !2786
  store i32 %call225, i32* %err, align 4, !dbg !2787
  %138 = load i32, i32* %err, align 4, !dbg !2788
  %cmp226 = icmp slt i32 %138, 0, !dbg !2786
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !2788

if.then228:                                       ; preds = %do.body224
  %139 = load i32, i32* %err, align 4, !dbg !2789
  store i32 %139, i32* %retval, align 4, !dbg !2792
  br label %return, !dbg !2792

if.end229:                                        ; preds = %do.body224
  br label %do.end230, !dbg !2793

do.end230:                                        ; preds = %if.end229
  %140 = load i32, i32* %value223, align 4, !dbg !2795
  %conv231 = trunc i32 %140 to i8, !dbg !2795
  %141 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2797
  %refresh_frame_flags232 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %141, i32 0, i32 13, !dbg !2798
  store i8 %conv231, i8* %refresh_frame_flags232, align 1, !dbg !2799
  br label %do.end233, !dbg !2800

do.end233:                                        ; preds = %do.end230
  br label %do.body234, !dbg !2801, !llvm.loop !2802

do.body234:                                       ; preds = %do.end233
  %142 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2803
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2806
  %144 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2807
  %call235 = call i32 @cbs_vp9_read_frame_size(%struct.CodedBitstreamContext* %142, %struct.GetBitContext* %143, %struct.VP9RawFrameHeader* %144), !dbg !2808
  store i32 %call235, i32* %err, align 4, !dbg !2809
  %145 = load i32, i32* %err, align 4, !dbg !2810
  %cmp236 = icmp slt i32 %145, 0, !dbg !2811
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !2810

if.then238:                                       ; preds = %do.body234
  %146 = load i32, i32* %err, align 4, !dbg !2812
  store i32 %146, i32* %retval, align 4, !dbg !2815
  br label %return, !dbg !2815

if.end239:                                        ; preds = %do.body234
  br label %do.end240, !dbg !2816

do.end240:                                        ; preds = %if.end239
  br label %do.body241, !dbg !2818, !llvm.loop !2819

do.body241:                                       ; preds = %do.end240
  %147 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2820
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2823
  %149 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2824
  %call242 = call i32 @cbs_vp9_read_render_size(%struct.CodedBitstreamContext* %147, %struct.GetBitContext* %148, %struct.VP9RawFrameHeader* %149), !dbg !2825
  store i32 %call242, i32* %err, align 4, !dbg !2826
  %150 = load i32, i32* %err, align 4, !dbg !2827
  %cmp243 = icmp slt i32 %150, 0, !dbg !2828
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !2827

if.then245:                                       ; preds = %do.body241
  %151 = load i32, i32* %err, align 4, !dbg !2829
  store i32 %151, i32* %retval, align 4, !dbg !2832
  br label %return, !dbg !2832

if.end246:                                        ; preds = %do.body241
  br label %do.end247, !dbg !2833

do.end247:                                        ; preds = %if.end246
  br label %if.end318, !dbg !2835

if.else248:                                       ; preds = %if.end185
  br label %do.body249, !dbg !2836, !llvm.loop !2838

do.body249:                                       ; preds = %if.else248
  call void @llvm.dbg.declare(metadata i32* %value250, metadata !2839, metadata !730), !dbg !2841
  store i32 0, i32* %value250, align 4, !dbg !2842
  br label %do.body251, !dbg !2844, !llvm.loop !2845

do.body251:                                       ; preds = %do.body249
  %152 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2847
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2850
  %call252 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %152, %struct.GetBitContext* %153, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32* null, i32* %value250, i32 0, i32 255), !dbg !2851
  store i32 %call252, i32* %err, align 4, !dbg !2852
  %154 = load i32, i32* %err, align 4, !dbg !2853
  %cmp253 = icmp slt i32 %154, 0, !dbg !2851
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !2853

if.then255:                                       ; preds = %do.body251
  %155 = load i32, i32* %err, align 4, !dbg !2854
  store i32 %155, i32* %retval, align 4, !dbg !2857
  br label %return, !dbg !2857

if.end256:                                        ; preds = %do.body251
  br label %do.end257, !dbg !2858

do.end257:                                        ; preds = %if.end256
  %156 = load i32, i32* %value250, align 4, !dbg !2860
  %conv258 = trunc i32 %156 to i8, !dbg !2860
  %157 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2862
  %refresh_frame_flags259 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %157, i32 0, i32 13, !dbg !2863
  store i8 %conv258, i8* %refresh_frame_flags259, align 1, !dbg !2864
  br label %do.end260, !dbg !2865

do.end260:                                        ; preds = %do.end257
  store i32 0, i32* %i, align 4, !dbg !2866
  br label %for.cond, !dbg !2868

for.cond:                                         ; preds = %for.inc, %do.end260
  %158 = load i32, i32* %i, align 4, !dbg !2869
  %cmp261 = icmp slt i32 %158, 3, !dbg !2872
  br i1 %cmp261, label %for.body, label %for.end, !dbg !2873

for.body:                                         ; preds = %for.cond
  br label %do.body263, !dbg !2874, !llvm.loop !2876

do.body263:                                       ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %value264, metadata !2877, metadata !730), !dbg !2879
  store i32 0, i32* %value264, align 4, !dbg !2880
  br label %do.body265, !dbg !2882, !llvm.loop !2883

do.body265:                                       ; preds = %do.body263
  %159 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2885
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2888
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !2889
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !2889
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !2889
  %161 = load i32, i32* %i, align 4, !dbg !2890
  store i32 %161, i32* %arrayinit.element, align 4, !dbg !2889
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !2891
  %call266 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %159, %struct.GetBitContext* %160, i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i32* %arraydecay, i32* %value264, i32 0, i32 7), !dbg !2892
  store i32 %call266, i32* %err, align 4, !dbg !2893
  %162 = load i32, i32* %err, align 4, !dbg !2894
  %cmp267 = icmp slt i32 %162, 0, !dbg !2892
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !2894

if.then269:                                       ; preds = %do.body265
  %163 = load i32, i32* %err, align 4, !dbg !2895
  store i32 %163, i32* %retval, align 4, !dbg !2898
  br label %return, !dbg !2898

if.end270:                                        ; preds = %do.body265
  br label %do.end271, !dbg !2899

do.end271:                                        ; preds = %if.end270
  %164 = load i32, i32* %value264, align 4, !dbg !2901
  %conv272 = trunc i32 %164 to i8, !dbg !2901
  %165 = load i32, i32* %i, align 4, !dbg !2903
  %idxprom = sext i32 %165 to i64, !dbg !2904
  %166 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2904
  %ref_frame_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %166, i32 0, i32 16, !dbg !2905
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %ref_frame_idx, i64 0, i64 %idxprom, !dbg !2904
  store i8 %conv272, i8* %arrayidx, align 1, !dbg !2906
  br label %do.end273, !dbg !2907

do.end273:                                        ; preds = %do.end271
  br label %do.body274, !dbg !2908, !llvm.loop !2909

do.body274:                                       ; preds = %do.end273
  call void @llvm.dbg.declare(metadata i32* %value275, metadata !2910, metadata !730), !dbg !2912
  store i32 0, i32* %value275, align 4, !dbg !2913
  br label %do.body276, !dbg !2915, !llvm.loop !2916

do.body276:                                       ; preds = %do.body274
  %167 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2918
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2921
  %arrayinit.begin278 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral277, i64 0, i64 0, !dbg !2922
  store i32 1, i32* %arrayinit.begin278, align 4, !dbg !2922
  %arrayinit.element279 = getelementptr inbounds i32, i32* %arrayinit.begin278, i64 1, !dbg !2922
  %169 = load i32, i32* %i, align 4, !dbg !2923
  %add280 = add nsw i32 1, %169, !dbg !2924
  store i32 %add280, i32* %arrayinit.element279, align 4, !dbg !2922
  %arraydecay281 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral277, i32 0, i32 0, !dbg !2925
  %call282 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %167, %struct.GetBitContext* %168, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0), i32* %arraydecay281, i32* %value275, i32 0, i32 1), !dbg !2926
  store i32 %call282, i32* %err, align 4, !dbg !2927
  %170 = load i32, i32* %err, align 4, !dbg !2928
  %cmp283 = icmp slt i32 %170, 0, !dbg !2926
  br i1 %cmp283, label %if.then285, label %if.end286, !dbg !2928

if.then285:                                       ; preds = %do.body276
  %171 = load i32, i32* %err, align 4, !dbg !2929
  store i32 %171, i32* %retval, align 4, !dbg !2932
  br label %return, !dbg !2932

if.end286:                                        ; preds = %do.body276
  br label %do.end287, !dbg !2933

do.end287:                                        ; preds = %if.end286
  %172 = load i32, i32* %value275, align 4, !dbg !2935
  %conv288 = trunc i32 %172 to i8, !dbg !2935
  %173 = load i32, i32* %i, align 4, !dbg !2937
  %add289 = add nsw i32 1, %173, !dbg !2938
  %idxprom290 = sext i32 %add289 to i64, !dbg !2939
  %174 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2939
  %ref_frame_sign_bias = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %174, i32 0, i32 17, !dbg !2940
  %arrayidx291 = getelementptr inbounds [4 x i8], [4 x i8]* %ref_frame_sign_bias, i64 0, i64 %idxprom290, !dbg !2939
  store i8 %conv288, i8* %arrayidx291, align 1, !dbg !2941
  br label %do.end292, !dbg !2942

do.end292:                                        ; preds = %do.end287
  br label %for.inc, !dbg !2943

for.inc:                                          ; preds = %do.end292
  %175 = load i32, i32* %i, align 4, !dbg !2944
  %inc = add nsw i32 %175, 1, !dbg !2944
  store i32 %inc, i32* %i, align 4, !dbg !2944
  br label %for.cond, !dbg !2946, !llvm.loop !2947

for.end:                                          ; preds = %for.cond
  br label %do.body293, !dbg !2949, !llvm.loop !2950

do.body293:                                       ; preds = %for.end
  %176 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2951
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2954
  %178 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2955
  %call294 = call i32 @cbs_vp9_read_frame_size_with_refs(%struct.CodedBitstreamContext* %176, %struct.GetBitContext* %177, %struct.VP9RawFrameHeader* %178), !dbg !2956
  store i32 %call294, i32* %err, align 4, !dbg !2957
  %179 = load i32, i32* %err, align 4, !dbg !2958
  %cmp295 = icmp slt i32 %179, 0, !dbg !2959
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !2958

if.then297:                                       ; preds = %do.body293
  %180 = load i32, i32* %err, align 4, !dbg !2960
  store i32 %180, i32* %retval, align 4, !dbg !2963
  br label %return, !dbg !2963

if.end298:                                        ; preds = %do.body293
  br label %do.end299, !dbg !2964

do.end299:                                        ; preds = %if.end298
  br label %do.body300, !dbg !2966, !llvm.loop !2967

do.body300:                                       ; preds = %do.end299
  call void @llvm.dbg.declare(metadata i32* %value301, metadata !2968, metadata !730), !dbg !2970
  store i32 0, i32* %value301, align 4, !dbg !2971
  br label %do.body302, !dbg !2973, !llvm.loop !2974

do.body302:                                       ; preds = %do.body300
  %181 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2976
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !2979
  %call303 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %181, %struct.GetBitContext* %182, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32* null, i32* %value301, i32 0, i32 1), !dbg !2980
  store i32 %call303, i32* %err, align 4, !dbg !2981
  %183 = load i32, i32* %err, align 4, !dbg !2982
  %cmp304 = icmp slt i32 %183, 0, !dbg !2980
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !2982

if.then306:                                       ; preds = %do.body302
  %184 = load i32, i32* %err, align 4, !dbg !2983
  store i32 %184, i32* %retval, align 4, !dbg !2986
  br label %return, !dbg !2986

if.end307:                                        ; preds = %do.body302
  br label %do.end308, !dbg !2987

do.end308:                                        ; preds = %if.end307
  %185 = load i32, i32* %value301, align 4, !dbg !2989
  %conv309 = trunc i32 %185 to i8, !dbg !2989
  %186 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !2991
  %allow_high_precision_mv = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %186, i32 0, i32 18, !dbg !2992
  store i8 %conv309, i8* %allow_high_precision_mv, align 1, !dbg !2993
  br label %do.end310, !dbg !2994

do.end310:                                        ; preds = %do.end308
  br label %do.body311, !dbg !2995, !llvm.loop !2996

do.body311:                                       ; preds = %do.end310
  %187 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !2997
  %188 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3000
  %189 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3001
  %call312 = call i32 @cbs_vp9_read_interpolation_filter(%struct.CodedBitstreamContext* %187, %struct.GetBitContext* %188, %struct.VP9RawFrameHeader* %189), !dbg !3002
  store i32 %call312, i32* %err, align 4, !dbg !3003
  %190 = load i32, i32* %err, align 4, !dbg !3004
  %cmp313 = icmp slt i32 %190, 0, !dbg !3005
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !3004

if.then315:                                       ; preds = %do.body311
  %191 = load i32, i32* %err, align 4, !dbg !3006
  store i32 %191, i32* %retval, align 4, !dbg !3009
  br label %return, !dbg !3009

if.end316:                                        ; preds = %do.body311
  br label %do.end317, !dbg !3010

do.end317:                                        ; preds = %if.end316
  br label %if.end318

if.end318:                                        ; preds = %do.end317, %do.end247
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %do.end143
  %192 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3012
  %error_resilient_mode320 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %192, i32 0, i32 7, !dbg !3014
  %193 = load i8, i8* %error_resilient_mode320, align 1, !dbg !3014
  %conv321 = zext i8 %193 to i32, !dbg !3012
  %cmp322 = icmp eq i32 %conv321, 0, !dbg !3015
  br i1 %cmp322, label %if.then324, label %if.else347, !dbg !3016

if.then324:                                       ; preds = %if.end319
  br label %do.body325, !dbg !3017, !llvm.loop !3019

do.body325:                                       ; preds = %if.then324
  call void @llvm.dbg.declare(metadata i32* %value326, metadata !3020, metadata !730), !dbg !3022
  store i32 0, i32* %value326, align 4, !dbg !3023
  br label %do.body327, !dbg !3025, !llvm.loop !3026

do.body327:                                       ; preds = %do.body325
  %194 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3028
  %195 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3031
  %call328 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %194, %struct.GetBitContext* %195, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i32* null, i32* %value326, i32 0, i32 1), !dbg !3032
  store i32 %call328, i32* %err, align 4, !dbg !3033
  %196 = load i32, i32* %err, align 4, !dbg !3034
  %cmp329 = icmp slt i32 %196, 0, !dbg !3032
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !3034

if.then331:                                       ; preds = %do.body327
  %197 = load i32, i32* %err, align 4, !dbg !3035
  store i32 %197, i32* %retval, align 4, !dbg !3038
  br label %return, !dbg !3038

if.end332:                                        ; preds = %do.body327
  br label %do.end333, !dbg !3039

do.end333:                                        ; preds = %if.end332
  %198 = load i32, i32* %value326, align 4, !dbg !3041
  %conv334 = trunc i32 %198 to i8, !dbg !3041
  %199 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3043
  %refresh_frame_context = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %199, i32 0, i32 19, !dbg !3044
  store i8 %conv334, i8* %refresh_frame_context, align 2, !dbg !3045
  br label %do.end335, !dbg !3046

do.end335:                                        ; preds = %do.end333
  br label %do.body336, !dbg !3047, !llvm.loop !3048

do.body336:                                       ; preds = %do.end335
  call void @llvm.dbg.declare(metadata i32* %value337, metadata !3049, metadata !730), !dbg !3051
  store i32 0, i32* %value337, align 4, !dbg !3052
  br label %do.body338, !dbg !3054, !llvm.loop !3055

do.body338:                                       ; preds = %do.body336
  %200 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3057
  %201 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3060
  %call339 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %200, %struct.GetBitContext* %201, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i32* null, i32* %value337, i32 0, i32 1), !dbg !3061
  store i32 %call339, i32* %err, align 4, !dbg !3062
  %202 = load i32, i32* %err, align 4, !dbg !3063
  %cmp340 = icmp slt i32 %202, 0, !dbg !3061
  br i1 %cmp340, label %if.then342, label %if.end343, !dbg !3063

if.then342:                                       ; preds = %do.body338
  %203 = load i32, i32* %err, align 4, !dbg !3064
  store i32 %203, i32* %retval, align 4, !dbg !3067
  br label %return, !dbg !3067

if.end343:                                        ; preds = %do.body338
  br label %do.end344, !dbg !3068

do.end344:                                        ; preds = %if.end343
  %204 = load i32, i32* %value337, align 4, !dbg !3070
  %conv345 = trunc i32 %204 to i8, !dbg !3070
  %205 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3072
  %frame_parallel_decoding_mode = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %205, i32 0, i32 20, !dbg !3073
  store i8 %conv345, i8* %frame_parallel_decoding_mode, align 1, !dbg !3074
  br label %do.end346, !dbg !3075

do.end346:                                        ; preds = %do.end344
  br label %if.end354, !dbg !3076

if.else347:                                       ; preds = %if.end319
  br label %do.body348, !dbg !3077, !llvm.loop !3079

do.body348:                                       ; preds = %if.else347
  %206 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3080
  %refresh_frame_context349 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %206, i32 0, i32 19, !dbg !3083
  store i8 0, i8* %refresh_frame_context349, align 2, !dbg !3084
  br label %do.end350, !dbg !3085

do.end350:                                        ; preds = %do.body348
  br label %do.body351, !dbg !3086, !llvm.loop !3087

do.body351:                                       ; preds = %do.end350
  %207 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3088
  %frame_parallel_decoding_mode352 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %207, i32 0, i32 20, !dbg !3091
  store i8 1, i8* %frame_parallel_decoding_mode352, align 1, !dbg !3092
  br label %do.end353, !dbg !3093

do.end353:                                        ; preds = %do.body351
  br label %if.end354

if.end354:                                        ; preds = %do.end353, %do.end346
  br label %do.body355, !dbg !3094, !llvm.loop !3095

do.body355:                                       ; preds = %if.end354
  call void @llvm.dbg.declare(metadata i32* %value356, metadata !3096, metadata !730), !dbg !3098
  store i32 0, i32* %value356, align 4, !dbg !3099
  br label %do.body357, !dbg !3101, !llvm.loop !3102

do.body357:                                       ; preds = %do.body355
  %208 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3104
  %209 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3107
  %call358 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %208, %struct.GetBitContext* %209, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i32* null, i32* %value356, i32 0, i32 3), !dbg !3108
  store i32 %call358, i32* %err, align 4, !dbg !3109
  %210 = load i32, i32* %err, align 4, !dbg !3110
  %cmp359 = icmp slt i32 %210, 0, !dbg !3108
  br i1 %cmp359, label %if.then361, label %if.end362, !dbg !3110

if.then361:                                       ; preds = %do.body357
  %211 = load i32, i32* %err, align 4, !dbg !3111
  store i32 %211, i32* %retval, align 4, !dbg !3114
  br label %return, !dbg !3114

if.end362:                                        ; preds = %do.body357
  br label %do.end363, !dbg !3115

do.end363:                                        ; preds = %if.end362
  %212 = load i32, i32* %value356, align 4, !dbg !3117
  %conv364 = trunc i32 %212 to i8, !dbg !3117
  %213 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3119
  %frame_context_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %213, i32 0, i32 21, !dbg !3120
  store i8 %conv364, i8* %frame_context_idx, align 2, !dbg !3121
  br label %do.end365, !dbg !3122

do.end365:                                        ; preds = %do.end363
  br label %do.body366, !dbg !3123, !llvm.loop !3124

do.body366:                                       ; preds = %do.end365
  %214 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3125
  %215 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3128
  %216 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3129
  %call367 = call i32 @cbs_vp9_read_loop_filter_params(%struct.CodedBitstreamContext* %214, %struct.GetBitContext* %215, %struct.VP9RawFrameHeader* %216), !dbg !3130
  store i32 %call367, i32* %err, align 4, !dbg !3131
  %217 = load i32, i32* %err, align 4, !dbg !3132
  %cmp368 = icmp slt i32 %217, 0, !dbg !3133
  br i1 %cmp368, label %if.then370, label %if.end371, !dbg !3132

if.then370:                                       ; preds = %do.body366
  %218 = load i32, i32* %err, align 4, !dbg !3134
  store i32 %218, i32* %retval, align 4, !dbg !3137
  br label %return, !dbg !3137

if.end371:                                        ; preds = %do.body366
  br label %do.end372, !dbg !3138

do.end372:                                        ; preds = %if.end371
  br label %do.body373, !dbg !3140, !llvm.loop !3141

do.body373:                                       ; preds = %do.end372
  %219 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3142
  %220 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3145
  %221 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3146
  %call374 = call i32 @cbs_vp9_read_quantization_params(%struct.CodedBitstreamContext* %219, %struct.GetBitContext* %220, %struct.VP9RawFrameHeader* %221), !dbg !3147
  store i32 %call374, i32* %err, align 4, !dbg !3148
  %222 = load i32, i32* %err, align 4, !dbg !3149
  %cmp375 = icmp slt i32 %222, 0, !dbg !3150
  br i1 %cmp375, label %if.then377, label %if.end378, !dbg !3149

if.then377:                                       ; preds = %do.body373
  %223 = load i32, i32* %err, align 4, !dbg !3151
  store i32 %223, i32* %retval, align 4, !dbg !3154
  br label %return, !dbg !3154

if.end378:                                        ; preds = %do.body373
  br label %do.end379, !dbg !3155

do.end379:                                        ; preds = %if.end378
  br label %do.body380, !dbg !3157, !llvm.loop !3158

do.body380:                                       ; preds = %do.end379
  %224 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3159
  %225 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3162
  %226 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3163
  %call381 = call i32 @cbs_vp9_read_segmentation_params(%struct.CodedBitstreamContext* %224, %struct.GetBitContext* %225, %struct.VP9RawFrameHeader* %226), !dbg !3164
  store i32 %call381, i32* %err, align 4, !dbg !3165
  %227 = load i32, i32* %err, align 4, !dbg !3166
  %cmp382 = icmp slt i32 %227, 0, !dbg !3167
  br i1 %cmp382, label %if.then384, label %if.end385, !dbg !3166

if.then384:                                       ; preds = %do.body380
  %228 = load i32, i32* %err, align 4, !dbg !3168
  store i32 %228, i32* %retval, align 4, !dbg !3171
  br label %return, !dbg !3171

if.end385:                                        ; preds = %do.body380
  br label %do.end386, !dbg !3172

do.end386:                                        ; preds = %if.end385
  br label %do.body387, !dbg !3174, !llvm.loop !3175

do.body387:                                       ; preds = %do.end386
  %229 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3176
  %230 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3179
  %231 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3180
  %call388 = call i32 @cbs_vp9_read_tile_info(%struct.CodedBitstreamContext* %229, %struct.GetBitContext* %230, %struct.VP9RawFrameHeader* %231), !dbg !3181
  store i32 %call388, i32* %err, align 4, !dbg !3182
  %232 = load i32, i32* %err, align 4, !dbg !3183
  %cmp389 = icmp slt i32 %232, 0, !dbg !3184
  br i1 %cmp389, label %if.then391, label %if.end392, !dbg !3183

if.then391:                                       ; preds = %do.body387
  %233 = load i32, i32* %err, align 4, !dbg !3185
  store i32 %233, i32* %retval, align 4, !dbg !3188
  br label %return, !dbg !3188

if.end392:                                        ; preds = %do.body387
  br label %do.end393, !dbg !3189

do.end393:                                        ; preds = %if.end392
  br label %do.body394, !dbg !3191, !llvm.loop !3192

do.body394:                                       ; preds = %do.end393
  call void @llvm.dbg.declare(metadata i32* %value395, metadata !3193, metadata !730), !dbg !3195
  store i32 0, i32* %value395, align 4, !dbg !3196
  br label %do.body396, !dbg !3198, !llvm.loop !3199

do.body396:                                       ; preds = %do.body394
  %234 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3201
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3204
  %call397 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %234, %struct.GetBitContext* %235, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0), i32* null, i32* %value395, i32 0, i32 65535), !dbg !3205
  store i32 %call397, i32* %err, align 4, !dbg !3206
  %236 = load i32, i32* %err, align 4, !dbg !3206
  %cmp398 = icmp slt i32 %236, 0, !dbg !3207
  br i1 %cmp398, label %if.then400, label %if.end401, !dbg !3206

if.then400:                                       ; preds = %do.body396
  %237 = load i32, i32* %err, align 4, !dbg !3208
  store i32 %237, i32* %retval, align 4, !dbg !3211
  br label %return, !dbg !3211

if.end401:                                        ; preds = %do.body396
  br label %do.end402, !dbg !3212

do.end402:                                        ; preds = %if.end401
  %238 = load i32, i32* %value395, align 4, !dbg !3214
  %conv403 = trunc i32 %238 to i16, !dbg !3214
  %239 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3216
  %header_size_in_bytes404 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %239, i32 0, i32 54, !dbg !3217
  store i16 %conv403, i16* %header_size_in_bytes404, align 2, !dbg !3218
  br label %do.end405, !dbg !3219

do.end405:                                        ; preds = %do.end402
  store i32 0, i32* %i, align 4, !dbg !3220
  br label %for.cond406, !dbg !3222

for.cond406:                                      ; preds = %for.inc429, %do.end405
  %240 = load i32, i32* %i, align 4, !dbg !3223
  %cmp407 = icmp slt i32 %240, 8, !dbg !3226
  br i1 %cmp407, label %for.body409, label %for.end431, !dbg !3227

for.body409:                                      ; preds = %for.cond406
  %241 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3228
  %refresh_frame_flags410 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %241, i32 0, i32 13, !dbg !3231
  %242 = load i8, i8* %refresh_frame_flags410, align 1, !dbg !3231
  %conv411 = zext i8 %242 to i32, !dbg !3228
  %243 = load i32, i32* %i, align 4, !dbg !3232
  %shl412 = shl i32 1, %243, !dbg !3233
  %and = and i32 %conv411, %shl412, !dbg !3234
  %tobool413 = icmp ne i32 %and, 0, !dbg !3234
  br i1 %tobool413, label %if.then414, label %if.end428, !dbg !3235

if.then414:                                       ; preds = %for.body409
  %244 = load i32, i32* %i, align 4, !dbg !3236
  %idxprom415 = sext i32 %244 to i64, !dbg !3238
  %245 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3238
  %ref = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %245, i32 0, i32 10, !dbg !3239
  %arrayidx416 = getelementptr inbounds [8 x %struct.VP9ReferenceFrameState], [8 x %struct.VP9ReferenceFrameState]* %ref, i64 0, i64 %idxprom415, !dbg !3238
  %frame_width = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral417, i32 0, i32 0, !dbg !3240
  %246 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3241
  %frame_width418 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %246, i32 0, i32 5, !dbg !3242
  %247 = load i32, i32* %frame_width418, align 4, !dbg !3242
  store i32 %247, i32* %frame_width, align 4, !dbg !3240
  %frame_height = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral417, i32 0, i32 1, !dbg !3240
  %248 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3243
  %frame_height419 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %248, i32 0, i32 6, !dbg !3244
  %249 = load i32, i32* %frame_height419, align 8, !dbg !3244
  store i32 %249, i32* %frame_height, align 4, !dbg !3240
  %subsampling_x420 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral417, i32 0, i32 2, !dbg !3240
  %250 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3245
  %subsampling_x421 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %250, i32 0, i32 7, !dbg !3246
  %251 = load i8, i8* %subsampling_x421, align 4, !dbg !3246
  %conv422 = zext i8 %251 to i32, !dbg !3245
  store i32 %conv422, i32* %subsampling_x420, align 4, !dbg !3240
  %subsampling_y423 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral417, i32 0, i32 3, !dbg !3240
  %252 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3247
  %subsampling_y424 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %252, i32 0, i32 8, !dbg !3248
  %253 = load i8, i8* %subsampling_y424, align 1, !dbg !3248
  %conv425 = zext i8 %253 to i32, !dbg !3247
  store i32 %conv425, i32* %subsampling_y423, align 4, !dbg !3240
  %bit_depth426 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral417, i32 0, i32 4, !dbg !3240
  %254 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3249
  %bit_depth427 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %254, i32 0, i32 9, !dbg !3250
  %255 = load i32, i32* %bit_depth427, align 8, !dbg !3250
  store i32 %255, i32* %bit_depth426, align 4, !dbg !3240
  %256 = bitcast %struct.VP9ReferenceFrameState* %arrayidx416 to i8*, !dbg !3251
  %257 = bitcast %struct.VP9ReferenceFrameState* %.compoundliteral417 to i8*, !dbg !3251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %256, i8* %257, i64 20, i32 4, i1 false), !dbg !3251
  br label %if.end428, !dbg !3252

if.end428:                                        ; preds = %if.then414, %for.body409
  br label %for.inc429, !dbg !3253

for.inc429:                                       ; preds = %if.end428
  %258 = load i32, i32* %i, align 4, !dbg !3254
  %inc430 = add nsw i32 %258, 1, !dbg !3254
  store i32 %inc430, i32* %i, align 4, !dbg !3254
  br label %for.cond406, !dbg !3256, !llvm.loop !3257

for.end431:                                       ; preds = %for.cond406
  %259 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3259
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %259, i32 0, i32 0, !dbg !3260
  %260 = load i8*, i8** %log_ctx, align 8, !dbg !3260
  %261 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3261
  %frame_width432 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %261, i32 0, i32 5, !dbg !3262
  %262 = load i32, i32* %frame_width432, align 4, !dbg !3262
  %263 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3263
  %frame_height433 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %263, i32 0, i32 6, !dbg !3264
  %264 = load i32, i32* %frame_height433, align 8, !dbg !3264
  %265 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3265
  %subsampling_x434 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %265, i32 0, i32 7, !dbg !3266
  %266 = load i8, i8* %subsampling_x434, align 4, !dbg !3266
  %conv435 = zext i8 %266 to i32, !dbg !3265
  %267 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3267
  %subsampling_y436 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %267, i32 0, i32 8, !dbg !3268
  %268 = load i8, i8* %subsampling_y436, align 1, !dbg !3268
  %conv437 = zext i8 %268 to i32, !dbg !3267
  %269 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3269
  %bit_depth438 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %269, i32 0, i32 9, !dbg !3270
  %270 = load i32, i32* %bit_depth438, align 8, !dbg !3270
  %271 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3271
  %tile_cols_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %271, i32 0, i32 52, !dbg !3272
  %272 = load i8, i8* %tile_cols_log2, align 1, !dbg !3272
  %conv439 = zext i8 %272 to i32, !dbg !3271
  %shl440 = shl i32 1, %conv439, !dbg !3273
  %273 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3274
  %tile_rows_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %273, i32 0, i32 53, !dbg !3275
  %274 = load i8, i8* %tile_rows_log2, align 2, !dbg !3275
  %conv441 = zext i8 %274 to i32, !dbg !3274
  %shl442 = shl i32 1, %conv441, !dbg !3276
  call void (i8*, i32, i8*, ...) @av_log(i8* %260, i32 48, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.33, i32 0, i32 0), i32 %262, i32 %264, i32 %conv435, i32 %conv437, i32 %270, i32 %shl440, i32 %shl442), !dbg !3277
  store i32 0, i32* %retval, align 4, !dbg !3278
  br label %return, !dbg !3278

return:                                           ; preds = %for.end431, %if.then400, %if.then391, %if.then384, %if.then377, %if.then370, %if.then361, %if.then342, %if.then331, %if.then315, %if.then306, %if.then297, %if.then285, %if.then269, %if.then255, %if.then245, %if.then238, %if.then228, %if.then207, %if.then195, %if.then176, %if.then155, %if.then138, %if.then131, %if.then124, %if.then116, %if.then102, %if.then91, %if.then80, %do.end72, %if.then62, %if.then49, %if.then38, %if.then20, %if.then9, %if.then
  %275 = load i32, i32* %retval, align 4, !dbg !3279
  ret i32 %275, !dbg !3279
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_trailing_bits(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw) #0 !dbg !3280 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %err = alloca i32, align 4
  %zero = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3283, metadata !730), !dbg !3284
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3285, metadata !730), !dbg !3286
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3287, metadata !730), !dbg !3288
  call void @llvm.dbg.declare(metadata i32* %zero, metadata !3289, metadata !730), !dbg !3290
  store i32 0, i32* %zero, align 4, !dbg !3290
  br label %while.cond, !dbg !3291

while.cond:                                       ; preds = %do.end4, %entry
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3292
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3294
  %rem = srem i32 %call, 8, !dbg !3295
  %cmp = icmp ne i32 %rem, 0, !dbg !3296
  br i1 %cmp, label %while.body, label %while.end, !dbg !3297

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !3298, !llvm.loop !3299

do.body:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3300, metadata !730), !dbg !3302
  store i32 0, i32* %value, align 4, !dbg !3303
  br label %do.body1, !dbg !3305, !llvm.loop !3306

do.body1:                                         ; preds = %do.body
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3308
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3311
  %call2 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %1, %struct.GetBitContext* %2, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 1), !dbg !3312
  store i32 %call2, i32* %err, align 4, !dbg !3313
  %3 = load i32, i32* %err, align 4, !dbg !3314
  %cmp3 = icmp slt i32 %3, 0, !dbg !3312
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3314

if.then:                                          ; preds = %do.body1
  %4 = load i32, i32* %err, align 4, !dbg !3315
  store i32 %4, i32* %retval, align 4, !dbg !3318
  br label %return, !dbg !3318

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !3319

do.end:                                           ; preds = %if.end
  %5 = load i32, i32* %value, align 4, !dbg !3321
  store i32 %5, i32* %zero, align 4, !dbg !3323
  br label %do.end4, !dbg !3324

do.end4:                                          ; preds = %do.end
  br label %while.cond, !dbg !3325, !llvm.loop !3327

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !3329
  ret i32 %6, !dbg !3329
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_frame_sync_code(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !3330 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %frame_sync_byte_0 = alloca i8, align 1
  %frame_sync_byte_1 = alloca i8, align 1
  %frame_sync_byte_2 = alloca i8, align 1
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value4 = alloca i32, align 4
  %value15 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3331, metadata !730), !dbg !3332
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3333, metadata !730), !dbg !3334
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !3335, metadata !730), !dbg !3336
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_0, metadata !3337, metadata !730), !dbg !3338
  store i8 73, i8* %frame_sync_byte_0, align 1, !dbg !3338
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_1, metadata !3339, metadata !730), !dbg !3340
  store i8 -125, i8* %frame_sync_byte_1, align 1, !dbg !3340
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_2, metadata !3341, metadata !730), !dbg !3342
  store i8 66, i8* %frame_sync_byte_2, align 1, !dbg !3342
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3343, metadata !730), !dbg !3344
  br label %do.body, !dbg !3345, !llvm.loop !3346

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3347, metadata !730), !dbg !3349
  store i32 0, i32* %value, align 4, !dbg !3350
  br label %do.body1, !dbg !3352, !llvm.loop !3353

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3355
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3358
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 255), !dbg !3359
  store i32 %call, i32* %err, align 4, !dbg !3360
  %2 = load i32, i32* %err, align 4, !dbg !3361
  %cmp = icmp slt i32 %2, 0, !dbg !3359
  br i1 %cmp, label %if.then, label %if.end, !dbg !3361

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !3362
  store i32 %3, i32* %retval, align 4, !dbg !3365
  br label %return, !dbg !3365

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !3366

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !3368
  %conv = trunc i32 %4 to i8, !dbg !3368
  store i8 %conv, i8* %frame_sync_byte_0, align 1, !dbg !3370
  br label %do.end2, !dbg !3371

do.end2:                                          ; preds = %do.end
  br label %do.body3, !dbg !3372, !llvm.loop !3373

do.body3:                                         ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i32* %value4, metadata !3374, metadata !730), !dbg !3376
  store i32 0, i32* %value4, align 4, !dbg !3377
  br label %do.body5, !dbg !3379, !llvm.loop !3380

do.body5:                                         ; preds = %do.body3
  %5 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3382
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3385
  %call6 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %5, %struct.GetBitContext* %6, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i32 0, i32 0), i32* null, i32* %value4, i32 0, i32 255), !dbg !3386
  store i32 %call6, i32* %err, align 4, !dbg !3387
  %7 = load i32, i32* %err, align 4, !dbg !3388
  %cmp7 = icmp slt i32 %7, 0, !dbg !3386
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !3388

if.then9:                                         ; preds = %do.body5
  %8 = load i32, i32* %err, align 4, !dbg !3389
  store i32 %8, i32* %retval, align 4, !dbg !3392
  br label %return, !dbg !3392

if.end10:                                         ; preds = %do.body5
  br label %do.end11, !dbg !3393

do.end11:                                         ; preds = %if.end10
  %9 = load i32, i32* %value4, align 4, !dbg !3395
  %conv12 = trunc i32 %9 to i8, !dbg !3395
  store i8 %conv12, i8* %frame_sync_byte_1, align 1, !dbg !3397
  br label %do.end13, !dbg !3398

do.end13:                                         ; preds = %do.end11
  br label %do.body14, !dbg !3399, !llvm.loop !3400

do.body14:                                        ; preds = %do.end13
  call void @llvm.dbg.declare(metadata i32* %value15, metadata !3401, metadata !730), !dbg !3403
  store i32 0, i32* %value15, align 4, !dbg !3404
  br label %do.body16, !dbg !3406, !llvm.loop !3407

do.body16:                                        ; preds = %do.body14
  %10 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3409
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3412
  %call17 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %10, %struct.GetBitContext* %11, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i32* null, i32* %value15, i32 0, i32 255), !dbg !3413
  store i32 %call17, i32* %err, align 4, !dbg !3414
  %12 = load i32, i32* %err, align 4, !dbg !3415
  %cmp18 = icmp slt i32 %12, 0, !dbg !3413
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3415

if.then20:                                        ; preds = %do.body16
  %13 = load i32, i32* %err, align 4, !dbg !3416
  store i32 %13, i32* %retval, align 4, !dbg !3419
  br label %return, !dbg !3419

if.end21:                                         ; preds = %do.body16
  br label %do.end22, !dbg !3420

do.end22:                                         ; preds = %if.end21
  %14 = load i32, i32* %value15, align 4, !dbg !3422
  %conv23 = trunc i32 %14 to i8, !dbg !3422
  store i8 %conv23, i8* %frame_sync_byte_2, align 1, !dbg !3424
  br label %do.end24, !dbg !3425

do.end24:                                         ; preds = %do.end22
  %15 = load i8, i8* %frame_sync_byte_0, align 1, !dbg !3426
  %conv25 = zext i8 %15 to i32, !dbg !3426
  %cmp26 = icmp ne i32 %conv25, 73, !dbg !3428
  br i1 %cmp26, label %if.then35, label %lor.lhs.false, !dbg !3429

lor.lhs.false:                                    ; preds = %do.end24
  %16 = load i8, i8* %frame_sync_byte_1, align 1, !dbg !3430
  %conv28 = zext i8 %16 to i32, !dbg !3430
  %cmp29 = icmp ne i32 %conv28, 131, !dbg !3431
  br i1 %cmp29, label %if.then35, label %lor.lhs.false31, !dbg !3432

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %17 = load i8, i8* %frame_sync_byte_2, align 1, !dbg !3433
  %conv32 = zext i8 %17 to i32, !dbg !3433
  %cmp33 = icmp ne i32 %conv32, 66, !dbg !3434
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3435

if.then35:                                        ; preds = %lor.lhs.false31, %lor.lhs.false, %do.end24
  %18 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3437
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %18, i32 0, i32 0, !dbg !3439
  %19 = load i8*, i8** %log_ctx, align 8, !dbg !3439
  %20 = load i8, i8* %frame_sync_byte_0, align 1, !dbg !3440
  %conv36 = zext i8 %20 to i32, !dbg !3440
  %21 = load i8, i8* %frame_sync_byte_1, align 1, !dbg !3441
  %conv37 = zext i8 %21 to i32, !dbg !3441
  %22 = load i8, i8* %frame_sync_byte_2, align 1, !dbg !3442
  %conv38 = zext i8 %22 to i32, !dbg !3442
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37, i32 0, i32 0), i32 %conv36, i32 %conv37, i32 %conv38), !dbg !3443
  store i32 -1094995529, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

if.end39:                                         ; preds = %lor.lhs.false31
  store i32 0, i32* %retval, align 4, !dbg !3445
  br label %return, !dbg !3445

return:                                           ; preds = %if.end39, %if.then35, %if.then20, %if.then9, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !3446
  ret i32 %23, !dbg !3446
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_color_config(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current, i32 %profile) #0 !dbg !3447 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %profile.addr = alloca i32, align 4
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value10 = alloca i32, align 4
  %value26 = alloca i32, align 4
  %value42 = alloca i32, align 4
  %value53 = alloca i32, align 4
  %fixed_value = alloca i32, align 4
  %fixed_value97 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3450, metadata !730), !dbg !3451
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3452, metadata !730), !dbg !3453
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !3454, metadata !730), !dbg !3455
  store i32 %profile, i32* %profile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %profile.addr, metadata !3456, metadata !730), !dbg !3457
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !3458, metadata !730), !dbg !3459
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3460
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !3461
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3461
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !3460
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3459
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3462, metadata !730), !dbg !3463
  %3 = load i32, i32* %profile.addr, align 4, !dbg !3464
  %cmp = icmp sge i32 %3, 2, !dbg !3466
  br i1 %cmp, label %if.then, label %if.else, !dbg !3467

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3468, !llvm.loop !3470

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3471, metadata !730), !dbg !3473
  store i32 0, i32* %value, align 4, !dbg !3474
  br label %do.body1, !dbg !3476, !llvm.loop !3477

do.body1:                                         ; preds = %do.body
  %4 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3479
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3482
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %4, %struct.GetBitContext* %5, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 1), !dbg !3483
  store i32 %call, i32* %err, align 4, !dbg !3484
  %6 = load i32, i32* %err, align 4, !dbg !3485
  %cmp2 = icmp slt i32 %6, 0, !dbg !3483
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !3485

if.then3:                                         ; preds = %do.body1
  %7 = load i32, i32* %err, align 4, !dbg !3486
  store i32 %7, i32* %retval, align 4, !dbg !3489
  br label %return, !dbg !3489

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !3490

do.end:                                           ; preds = %if.end
  %8 = load i32, i32* %value, align 4, !dbg !3492
  %conv = trunc i32 %8 to i8, !dbg !3492
  %9 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3494
  %ten_or_twelve_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %9, i32 0, i32 8, !dbg !3495
  store i8 %conv, i8* %ten_or_twelve_bit, align 2, !dbg !3496
  br label %do.end4, !dbg !3497

do.end4:                                          ; preds = %do.end
  %10 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3498
  %ten_or_twelve_bit5 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %10, i32 0, i32 8, !dbg !3499
  %11 = load i8, i8* %ten_or_twelve_bit5, align 2, !dbg !3499
  %conv6 = zext i8 %11 to i32, !dbg !3498
  %tobool = icmp ne i32 %conv6, 0, !dbg !3498
  %cond = select i1 %tobool, i32 12, i32 10, !dbg !3498
  %12 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3500
  %bit_depth = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %12, i32 0, i32 9, !dbg !3501
  store i32 %cond, i32* %bit_depth, align 8, !dbg !3502
  br label %if.end8, !dbg !3503

if.else:                                          ; preds = %entry
  %13 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3504
  %bit_depth7 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %13, i32 0, i32 9, !dbg !3505
  store i32 8, i32* %bit_depth7, align 8, !dbg !3506
  br label %if.end8

if.end8:                                          ; preds = %if.else, %do.end4
  br label %do.body9, !dbg !3507, !llvm.loop !3508

do.body9:                                         ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %value10, metadata !3509, metadata !730), !dbg !3511
  store i32 0, i32* %value10, align 4, !dbg !3512
  br label %do.body11, !dbg !3514, !llvm.loop !3515

do.body11:                                        ; preds = %do.body9
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3517
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3520
  %call12 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %14, %struct.GetBitContext* %15, i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i32* null, i32* %value10, i32 0, i32 7), !dbg !3521
  store i32 %call12, i32* %err, align 4, !dbg !3522
  %16 = load i32, i32* %err, align 4, !dbg !3523
  %cmp13 = icmp slt i32 %16, 0, !dbg !3521
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3523

if.then15:                                        ; preds = %do.body11
  %17 = load i32, i32* %err, align 4, !dbg !3524
  store i32 %17, i32* %retval, align 4, !dbg !3527
  br label %return, !dbg !3527

if.end16:                                         ; preds = %do.body11
  br label %do.end17, !dbg !3528

do.end17:                                         ; preds = %if.end16
  %18 = load i32, i32* %value10, align 4, !dbg !3530
  %conv18 = trunc i32 %18 to i8, !dbg !3530
  %19 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3532
  %color_space = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %19, i32 0, i32 9, !dbg !3533
  store i8 %conv18, i8* %color_space, align 1, !dbg !3534
  br label %do.end19, !dbg !3535

do.end19:                                         ; preds = %do.end17
  %20 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3536
  %color_space20 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %20, i32 0, i32 9, !dbg !3538
  %21 = load i8, i8* %color_space20, align 1, !dbg !3538
  %conv21 = zext i8 %21 to i32, !dbg !3536
  %cmp22 = icmp ne i32 %conv21, 7, !dbg !3539
  br i1 %cmp22, label %if.then24, label %if.else80, !dbg !3540

if.then24:                                        ; preds = %do.end19
  br label %do.body25, !dbg !3541, !llvm.loop !3543

do.body25:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i32* %value26, metadata !3544, metadata !730), !dbg !3546
  store i32 0, i32* %value26, align 4, !dbg !3547
  br label %do.body27, !dbg !3549, !llvm.loop !3550

do.body27:                                        ; preds = %do.body25
  %22 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3552
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3555
  %call28 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %22, %struct.GetBitContext* %23, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i32* null, i32* %value26, i32 0, i32 1), !dbg !3556
  store i32 %call28, i32* %err, align 4, !dbg !3557
  %24 = load i32, i32* %err, align 4, !dbg !3558
  %cmp29 = icmp slt i32 %24, 0, !dbg !3556
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !3558

if.then31:                                        ; preds = %do.body27
  %25 = load i32, i32* %err, align 4, !dbg !3559
  store i32 %25, i32* %retval, align 4, !dbg !3562
  br label %return, !dbg !3562

if.end32:                                         ; preds = %do.body27
  br label %do.end33, !dbg !3563

do.end33:                                         ; preds = %if.end32
  %26 = load i32, i32* %value26, align 4, !dbg !3565
  %conv34 = trunc i32 %26 to i8, !dbg !3565
  %27 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3567
  %color_range = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %27, i32 0, i32 10, !dbg !3568
  store i8 %conv34, i8* %color_range, align 2, !dbg !3569
  br label %do.end35, !dbg !3570

do.end35:                                         ; preds = %do.end33
  %28 = load i32, i32* %profile.addr, align 4, !dbg !3571
  %cmp36 = icmp eq i32 %28, 1, !dbg !3573
  br i1 %cmp36, label %if.then40, label %lor.lhs.false, !dbg !3574

lor.lhs.false:                                    ; preds = %do.end35
  %29 = load i32, i32* %profile.addr, align 4, !dbg !3575
  %cmp38 = icmp eq i32 %29, 3, !dbg !3577
  br i1 %cmp38, label %if.then40, label %if.else72, !dbg !3578

if.then40:                                        ; preds = %lor.lhs.false, %do.end35
  br label %do.body41, !dbg !3579, !llvm.loop !3581

do.body41:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata i32* %value42, metadata !3582, metadata !730), !dbg !3584
  store i32 0, i32* %value42, align 4, !dbg !3585
  br label %do.body43, !dbg !3587, !llvm.loop !3588

do.body43:                                        ; preds = %do.body41
  %30 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3590
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3593
  %call44 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %30, %struct.GetBitContext* %31, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i32* null, i32* %value42, i32 0, i32 1), !dbg !3594
  store i32 %call44, i32* %err, align 4, !dbg !3595
  %32 = load i32, i32* %err, align 4, !dbg !3596
  %cmp45 = icmp slt i32 %32, 0, !dbg !3594
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !3596

if.then47:                                        ; preds = %do.body43
  %33 = load i32, i32* %err, align 4, !dbg !3597
  store i32 %33, i32* %retval, align 4, !dbg !3600
  br label %return, !dbg !3600

if.end48:                                         ; preds = %do.body43
  br label %do.end49, !dbg !3601

do.end49:                                         ; preds = %if.end48
  %34 = load i32, i32* %value42, align 4, !dbg !3603
  %conv50 = trunc i32 %34 to i8, !dbg !3603
  %35 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3605
  %subsampling_x = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %35, i32 0, i32 11, !dbg !3606
  store i8 %conv50, i8* %subsampling_x, align 1, !dbg !3607
  br label %do.end51, !dbg !3608

do.end51:                                         ; preds = %do.end49
  br label %do.body52, !dbg !3609, !llvm.loop !3610

do.body52:                                        ; preds = %do.end51
  call void @llvm.dbg.declare(metadata i32* %value53, metadata !3611, metadata !730), !dbg !3613
  store i32 0, i32* %value53, align 4, !dbg !3614
  br label %do.body54, !dbg !3616, !llvm.loop !3617

do.body54:                                        ; preds = %do.body52
  %36 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3619
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3622
  %call55 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %36, %struct.GetBitContext* %37, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i32* null, i32* %value53, i32 0, i32 1), !dbg !3623
  store i32 %call55, i32* %err, align 4, !dbg !3624
  %38 = load i32, i32* %err, align 4, !dbg !3625
  %cmp56 = icmp slt i32 %38, 0, !dbg !3623
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !3625

if.then58:                                        ; preds = %do.body54
  %39 = load i32, i32* %err, align 4, !dbg !3626
  store i32 %39, i32* %retval, align 4, !dbg !3629
  br label %return, !dbg !3629

if.end59:                                         ; preds = %do.body54
  br label %do.end60, !dbg !3630

do.end60:                                         ; preds = %if.end59
  %40 = load i32, i32* %value53, align 4, !dbg !3632
  %conv61 = trunc i32 %40 to i8, !dbg !3632
  %41 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3634
  %subsampling_y = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %41, i32 0, i32 12, !dbg !3635
  store i8 %conv61, i8* %subsampling_y, align 2, !dbg !3636
  br label %do.end62, !dbg !3637

do.end62:                                         ; preds = %do.end60
  br label %do.body63, !dbg !3638, !llvm.loop !3639

do.body63:                                        ; preds = %do.end62
  call void @llvm.dbg.declare(metadata i32* %fixed_value, metadata !3640, metadata !730), !dbg !3642
  store i32 0, i32* %fixed_value, align 4, !dbg !3643
  br label %do.body64, !dbg !3645, !llvm.loop !3646

do.body64:                                        ; preds = %do.body63
  %42 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3648
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3651
  %call65 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %42, %struct.GetBitContext* %43, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32* %fixed_value, i32 0, i32 0), !dbg !3652
  store i32 %call65, i32* %err, align 4, !dbg !3653
  %44 = load i32, i32* %err, align 4, !dbg !3654
  %cmp66 = icmp slt i32 %44, 0, !dbg !3655
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !3654

if.then68:                                        ; preds = %do.body64
  %45 = load i32, i32* %err, align 4, !dbg !3656
  store i32 %45, i32* %retval, align 4, !dbg !3659
  br label %return, !dbg !3659

if.end69:                                         ; preds = %do.body64
  br label %do.end70, !dbg !3660

do.end70:                                         ; preds = %if.end69
  br label %do.end71, !dbg !3662

do.end71:                                         ; preds = %do.end70
  br label %if.end79, !dbg !3664

if.else72:                                        ; preds = %lor.lhs.false
  br label %do.body73, !dbg !3665, !llvm.loop !3667

do.body73:                                        ; preds = %if.else72
  %46 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3668
  %subsampling_x74 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %46, i32 0, i32 11, !dbg !3671
  store i8 1, i8* %subsampling_x74, align 1, !dbg !3672
  br label %do.end75, !dbg !3673

do.end75:                                         ; preds = %do.body73
  br label %do.body76, !dbg !3674, !llvm.loop !3675

do.body76:                                        ; preds = %do.end75
  %47 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3676
  %subsampling_y77 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %47, i32 0, i32 12, !dbg !3679
  store i8 1, i8* %subsampling_y77, align 2, !dbg !3680
  br label %do.end78, !dbg !3681

do.end78:                                         ; preds = %do.body76
  br label %if.end79

if.end79:                                         ; preds = %do.end78, %do.end71
  br label %if.end107, !dbg !3682

if.else80:                                        ; preds = %do.end19
  br label %do.body81, !dbg !3683, !llvm.loop !3685

do.body81:                                        ; preds = %if.else80
  %48 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3686
  %color_range82 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %48, i32 0, i32 10, !dbg !3689
  store i8 1, i8* %color_range82, align 2, !dbg !3690
  br label %do.end83, !dbg !3691

do.end83:                                         ; preds = %do.body81
  %49 = load i32, i32* %profile.addr, align 4, !dbg !3692
  %cmp84 = icmp eq i32 %49, 1, !dbg !3694
  br i1 %cmp84, label %if.then89, label %lor.lhs.false86, !dbg !3695

lor.lhs.false86:                                  ; preds = %do.end83
  %50 = load i32, i32* %profile.addr, align 4, !dbg !3696
  %cmp87 = icmp eq i32 %50, 3, !dbg !3698
  br i1 %cmp87, label %if.then89, label %if.end106, !dbg !3699

if.then89:                                        ; preds = %lor.lhs.false86, %do.end83
  br label %do.body90, !dbg !3700, !llvm.loop !3702

do.body90:                                        ; preds = %if.then89
  %51 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3703
  %subsampling_x91 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %51, i32 0, i32 11, !dbg !3706
  store i8 0, i8* %subsampling_x91, align 1, !dbg !3707
  br label %do.end92, !dbg !3708

do.end92:                                         ; preds = %do.body90
  br label %do.body93, !dbg !3709, !llvm.loop !3710

do.body93:                                        ; preds = %do.end92
  %52 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3711
  %subsampling_y94 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %52, i32 0, i32 12, !dbg !3714
  store i8 0, i8* %subsampling_y94, align 2, !dbg !3715
  br label %do.end95, !dbg !3716

do.end95:                                         ; preds = %do.body93
  br label %do.body96, !dbg !3717, !llvm.loop !3718

do.body96:                                        ; preds = %do.end95
  call void @llvm.dbg.declare(metadata i32* %fixed_value97, metadata !3719, metadata !730), !dbg !3721
  store i32 0, i32* %fixed_value97, align 4, !dbg !3722
  br label %do.body98, !dbg !3724, !llvm.loop !3725

do.body98:                                        ; preds = %do.body96
  %53 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3727
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3730
  %call99 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %53, %struct.GetBitContext* %54, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32* %fixed_value97, i32 0, i32 0), !dbg !3731
  store i32 %call99, i32* %err, align 4, !dbg !3732
  %55 = load i32, i32* %err, align 4, !dbg !3733
  %cmp100 = icmp slt i32 %55, 0, !dbg !3734
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !3733

if.then102:                                       ; preds = %do.body98
  %56 = load i32, i32* %err, align 4, !dbg !3735
  store i32 %56, i32* %retval, align 4, !dbg !3738
  br label %return, !dbg !3738

if.end103:                                        ; preds = %do.body98
  br label %do.end104, !dbg !3739

do.end104:                                        ; preds = %if.end103
  br label %do.end105, !dbg !3741

do.end105:                                        ; preds = %do.end104
  br label %if.end106, !dbg !3743

if.end106:                                        ; preds = %do.end105, %lor.lhs.false86
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end79
  %57 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3744
  %subsampling_x108 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %57, i32 0, i32 11, !dbg !3745
  %58 = load i8, i8* %subsampling_x108, align 1, !dbg !3745
  %59 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3746
  %subsampling_x109 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %59, i32 0, i32 7, !dbg !3747
  store i8 %58, i8* %subsampling_x109, align 4, !dbg !3748
  %60 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3749
  %subsampling_y110 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %60, i32 0, i32 12, !dbg !3750
  %61 = load i8, i8* %subsampling_y110, align 2, !dbg !3750
  %62 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3751
  %subsampling_y111 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %62, i32 0, i32 8, !dbg !3752
  store i8 %61, i8* %subsampling_y111, align 1, !dbg !3753
  store i32 0, i32* %retval, align 4, !dbg !3754
  br label %return, !dbg !3754

return:                                           ; preds = %if.end107, %if.then102, %if.then68, %if.then58, %if.then47, %if.then31, %if.then15, %if.then3
  %63 = load i32, i32* %retval, align 4, !dbg !3755
  ret i32 %63, !dbg !3755
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_frame_size(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !3756 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value4 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3757, metadata !730), !dbg !3758
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3759, metadata !730), !dbg !3760
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !3761, metadata !730), !dbg !3762
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !3763, metadata !730), !dbg !3764
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3765
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !3766
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3766
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !3765
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3764
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3767, metadata !730), !dbg !3768
  br label %do.body, !dbg !3769, !llvm.loop !3770

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3771, metadata !730), !dbg !3773
  store i32 0, i32* %value, align 4, !dbg !3774
  br label %do.body1, !dbg !3776, !llvm.loop !3777

do.body1:                                         ; preds = %do.body
  %3 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3779
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3782
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %3, %struct.GetBitContext* %4, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 65535), !dbg !3783
  store i32 %call, i32* %err, align 4, !dbg !3784
  %5 = load i32, i32* %err, align 4, !dbg !3784
  %cmp = icmp slt i32 %5, 0, !dbg !3785
  br i1 %cmp, label %if.then, label %if.end, !dbg !3784

if.then:                                          ; preds = %do.body1
  %6 = load i32, i32* %err, align 4, !dbg !3786
  store i32 %6, i32* %retval, align 4, !dbg !3789
  br label %return, !dbg !3789

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !3790

do.end:                                           ; preds = %if.end
  %7 = load i32, i32* %value, align 4, !dbg !3792
  %conv = trunc i32 %7 to i16, !dbg !3792
  %8 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3794
  %frame_width_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %8, i32 0, i32 23, !dbg !3795
  store i16 %conv, i16* %frame_width_minus_1, align 2, !dbg !3796
  br label %do.end2, !dbg !3797

do.end2:                                          ; preds = %do.end
  br label %do.body3, !dbg !3798, !llvm.loop !3799

do.body3:                                         ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i32* %value4, metadata !3800, metadata !730), !dbg !3802
  store i32 0, i32* %value4, align 4, !dbg !3803
  br label %do.body5, !dbg !3805, !llvm.loop !3806

do.body5:                                         ; preds = %do.body3
  %9 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3808
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3811
  %call6 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %9, %struct.GetBitContext* %10, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i32 0, i32 0), i32* null, i32* %value4, i32 0, i32 65535), !dbg !3812
  store i32 %call6, i32* %err, align 4, !dbg !3813
  %11 = load i32, i32* %err, align 4, !dbg !3813
  %cmp7 = icmp slt i32 %11, 0, !dbg !3814
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !3813

if.then9:                                         ; preds = %do.body5
  %12 = load i32, i32* %err, align 4, !dbg !3815
  store i32 %12, i32* %retval, align 4, !dbg !3818
  br label %return, !dbg !3818

if.end10:                                         ; preds = %do.body5
  br label %do.end11, !dbg !3819

do.end11:                                         ; preds = %if.end10
  %13 = load i32, i32* %value4, align 4, !dbg !3821
  %conv12 = trunc i32 %13 to i16, !dbg !3821
  %14 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3823
  %frame_height_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %14, i32 0, i32 24, !dbg !3824
  store i16 %conv12, i16* %frame_height_minus_1, align 2, !dbg !3825
  br label %do.end13, !dbg !3826

do.end13:                                         ; preds = %do.end11
  %15 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3827
  %frame_width_minus_114 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %15, i32 0, i32 23, !dbg !3828
  %16 = load i16, i16* %frame_width_minus_114, align 2, !dbg !3828
  %conv15 = zext i16 %16 to i32, !dbg !3827
  %add = add nsw i32 %conv15, 1, !dbg !3829
  %17 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3830
  %frame_width = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %17, i32 0, i32 5, !dbg !3831
  store i32 %add, i32* %frame_width, align 4, !dbg !3832
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3833
  %frame_height_minus_116 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 24, !dbg !3834
  %19 = load i16, i16* %frame_height_minus_116, align 2, !dbg !3834
  %conv17 = zext i16 %19 to i32, !dbg !3833
  %add18 = add nsw i32 %conv17, 1, !dbg !3835
  %20 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3836
  %frame_height = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %20, i32 0, i32 6, !dbg !3837
  store i32 %add18, i32* %frame_height, align 8, !dbg !3838
  %21 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3839
  %frame_width19 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %21, i32 0, i32 5, !dbg !3840
  %22 = load i32, i32* %frame_width19, align 4, !dbg !3840
  %add20 = add nsw i32 %22, 7, !dbg !3841
  %shr = ashr i32 %add20, 3, !dbg !3842
  %conv21 = trunc i32 %shr to i16, !dbg !3843
  %23 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3844
  %mi_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %23, i32 0, i32 1, !dbg !3845
  store i16 %conv21, i16* %mi_cols, align 4, !dbg !3846
  %24 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3847
  %frame_height22 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %24, i32 0, i32 6, !dbg !3848
  %25 = load i32, i32* %frame_height22, align 8, !dbg !3848
  %add23 = add nsw i32 %25, 7, !dbg !3849
  %shr24 = ashr i32 %add23, 3, !dbg !3850
  %conv25 = trunc i32 %shr24 to i16, !dbg !3851
  %26 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3852
  %mi_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %26, i32 0, i32 2, !dbg !3853
  store i16 %conv25, i16* %mi_rows, align 2, !dbg !3854
  %27 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3855
  %mi_cols26 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %27, i32 0, i32 1, !dbg !3856
  %28 = load i16, i16* %mi_cols26, align 4, !dbg !3856
  %conv27 = zext i16 %28 to i32, !dbg !3855
  %add28 = add nsw i32 %conv27, 7, !dbg !3857
  %shr29 = ashr i32 %add28, 3, !dbg !3858
  %conv30 = trunc i32 %shr29 to i16, !dbg !3859
  %29 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3860
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %29, i32 0, i32 3, !dbg !3861
  store i16 %conv30, i16* %sb64_cols, align 8, !dbg !3862
  %30 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3863
  %mi_rows31 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %30, i32 0, i32 2, !dbg !3864
  %31 = load i16, i16* %mi_rows31, align 2, !dbg !3864
  %conv32 = zext i16 %31 to i32, !dbg !3863
  %add33 = add nsw i32 %conv32, 7, !dbg !3865
  %shr34 = ashr i32 %add33, 3, !dbg !3866
  %conv35 = trunc i32 %shr34 to i16, !dbg !3867
  %32 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3868
  %sb64_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %32, i32 0, i32 4, !dbg !3869
  store i16 %conv35, i16* %sb64_rows, align 2, !dbg !3870
  store i32 0, i32* %retval, align 4, !dbg !3871
  br label %return, !dbg !3871

return:                                           ; preds = %do.end13, %if.then9, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !3872
  ret i32 %33, !dbg !3872
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_render_size(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !3873 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  %value17 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3874, metadata !730), !dbg !3875
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3876, metadata !730), !dbg !3877
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !3878, metadata !730), !dbg !3879
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3880, metadata !730), !dbg !3881
  br label %do.body, !dbg !3882, !llvm.loop !3883

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3884, metadata !730), !dbg !3886
  store i32 0, i32* %value, align 4, !dbg !3887
  br label %do.body1, !dbg !3889, !llvm.loop !3890

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3892
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3895
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 1), !dbg !3896
  store i32 %call, i32* %err, align 4, !dbg !3897
  %2 = load i32, i32* %err, align 4, !dbg !3898
  %cmp = icmp slt i32 %2, 0, !dbg !3896
  br i1 %cmp, label %if.then, label %if.end, !dbg !3898

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !3899
  store i32 %3, i32* %retval, align 4, !dbg !3902
  br label %return, !dbg !3902

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !3903

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !3905
  %conv = trunc i32 %4 to i8, !dbg !3905
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3907
  %render_and_frame_size_different = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 25, !dbg !3908
  store i8 %conv, i8* %render_and_frame_size_different, align 2, !dbg !3909
  br label %do.end2, !dbg !3910

do.end2:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3911
  %render_and_frame_size_different3 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 25, !dbg !3913
  %7 = load i8, i8* %render_and_frame_size_different3, align 2, !dbg !3913
  %tobool = icmp ne i8 %7, 0, !dbg !3911
  br i1 %tobool, label %if.then4, label %if.end27, !dbg !3914

if.then4:                                         ; preds = %do.end2
  br label %do.body5, !dbg !3915, !llvm.loop !3917

do.body5:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %value6, metadata !3918, metadata !730), !dbg !3920
  store i32 0, i32* %value6, align 4, !dbg !3921
  br label %do.body7, !dbg !3923, !llvm.loop !3924

do.body7:                                         ; preds = %do.body5
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3926
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3929
  %call8 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %8, %struct.GetBitContext* %9, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i32 0, i32 0), i32* null, i32* %value6, i32 0, i32 65535), !dbg !3930
  store i32 %call8, i32* %err, align 4, !dbg !3931
  %10 = load i32, i32* %err, align 4, !dbg !3931
  %cmp9 = icmp slt i32 %10, 0, !dbg !3932
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !3931

if.then11:                                        ; preds = %do.body7
  %11 = load i32, i32* %err, align 4, !dbg !3933
  store i32 %11, i32* %retval, align 4, !dbg !3936
  br label %return, !dbg !3936

if.end12:                                         ; preds = %do.body7
  br label %do.end13, !dbg !3937

do.end13:                                         ; preds = %if.end12
  %12 = load i32, i32* %value6, align 4, !dbg !3939
  %conv14 = trunc i32 %12 to i16, !dbg !3939
  %13 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3941
  %render_width_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %13, i32 0, i32 26, !dbg !3942
  store i16 %conv14, i16* %render_width_minus_1, align 2, !dbg !3943
  br label %do.end15, !dbg !3944

do.end15:                                         ; preds = %do.end13
  br label %do.body16, !dbg !3945, !llvm.loop !3946

do.body16:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i32* %value17, metadata !3947, metadata !730), !dbg !3949
  store i32 0, i32* %value17, align 4, !dbg !3950
  br label %do.body18, !dbg !3952, !llvm.loop !3953

do.body18:                                        ; preds = %do.body16
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3955
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !3958
  %call19 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %14, %struct.GetBitContext* %15, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0), i32* null, i32* %value17, i32 0, i32 65535), !dbg !3959
  store i32 %call19, i32* %err, align 4, !dbg !3960
  %16 = load i32, i32* %err, align 4, !dbg !3960
  %cmp20 = icmp slt i32 %16, 0, !dbg !3961
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !3960

if.then22:                                        ; preds = %do.body18
  %17 = load i32, i32* %err, align 4, !dbg !3962
  store i32 %17, i32* %retval, align 4, !dbg !3965
  br label %return, !dbg !3965

if.end23:                                         ; preds = %do.body18
  br label %do.end24, !dbg !3966

do.end24:                                         ; preds = %if.end23
  %18 = load i32, i32* %value17, align 4, !dbg !3968
  %conv25 = trunc i32 %18 to i16, !dbg !3968
  %19 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !3970
  %render_height_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %19, i32 0, i32 27, !dbg !3971
  store i16 %conv25, i16* %render_height_minus_1, align 2, !dbg !3972
  br label %do.end26, !dbg !3973

do.end26:                                         ; preds = %do.end24
  br label %if.end27, !dbg !3974

if.end27:                                         ; preds = %do.end26, %do.end2
  store i32 0, i32* %retval, align 4, !dbg !3975
  br label %return, !dbg !3975

return:                                           ; preds = %if.end27, %if.then22, %if.then11, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !3976
  ret i32 %20, !dbg !3976
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_frame_size_with_refs(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !3977 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %ref = alloca %struct.VP9ReferenceFrameState*, align 8
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !3978, metadata !730), !dbg !3979
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !3980, metadata !730), !dbg !3981
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !3982, metadata !730), !dbg !3983
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !3984, metadata !730), !dbg !3985
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !3986
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !3987
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3987
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !3986
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !3985
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3988, metadata !730), !dbg !3989
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3990, metadata !730), !dbg !3991
  store i32 0, i32* %i, align 4, !dbg !3992
  br label %for.cond, !dbg !3994

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3995
  %cmp = icmp slt i32 %3, 3, !dbg !3998
  br i1 %cmp, label %for.body, label %for.end, !dbg !3999

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !4000, !llvm.loop !4002

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4003, metadata !730), !dbg !4005
  store i32 0, i32* %value, align 4, !dbg !4006
  br label %do.body1, !dbg !4008, !llvm.loop !4009

do.body1:                                         ; preds = %do.body
  %4 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4011
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4014
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !4015
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !4015
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4015
  %6 = load i32, i32* %i, align 4, !dbg !4016
  store i32 %6, i32* %arrayinit.element, align 4, !dbg !4015
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !4017
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %4, %struct.GetBitContext* %5, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i32* %arraydecay, i32* %value, i32 0, i32 1), !dbg !4018
  store i32 %call, i32* %err, align 4, !dbg !4019
  %7 = load i32, i32* %err, align 4, !dbg !4020
  %cmp2 = icmp slt i32 %7, 0, !dbg !4018
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4020

if.then:                                          ; preds = %do.body1
  %8 = load i32, i32* %err, align 4, !dbg !4021
  store i32 %8, i32* %retval, align 4, !dbg !4024
  br label %return, !dbg !4024

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !4025

do.end:                                           ; preds = %if.end
  %9 = load i32, i32* %value, align 4, !dbg !4027
  %conv = trunc i32 %9 to i8, !dbg !4027
  %10 = load i32, i32* %i, align 4, !dbg !4029
  %idxprom = sext i32 %10 to i64, !dbg !4030
  %11 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4030
  %found_ref = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %11, i32 0, i32 22, !dbg !4031
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %found_ref, i64 0, i64 %idxprom, !dbg !4030
  store i8 %conv, i8* %arrayidx, align 1, !dbg !4032
  br label %do.end3, !dbg !4033

do.end3:                                          ; preds = %do.end
  %12 = load i32, i32* %i, align 4, !dbg !4034
  %idxprom4 = sext i32 %12 to i64, !dbg !4036
  %13 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4036
  %found_ref5 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %13, i32 0, i32 22, !dbg !4037
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %found_ref5, i64 0, i64 %idxprom4, !dbg !4036
  %14 = load i8, i8* %arrayidx6, align 1, !dbg !4036
  %tobool = icmp ne i8 %14, 0, !dbg !4036
  br i1 %tobool, label %if.then7, label %if.end20, !dbg !4038

if.then7:                                         ; preds = %do.end3
  call void @llvm.dbg.declare(metadata %struct.VP9ReferenceFrameState** %ref, metadata !4039, metadata !730), !dbg !4042
  %15 = load i32, i32* %i, align 4, !dbg !4043
  %idxprom8 = sext i32 %15 to i64, !dbg !4044
  %16 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4044
  %ref_frame_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %16, i32 0, i32 16, !dbg !4045
  %arrayidx9 = getelementptr inbounds [3 x i8], [3 x i8]* %ref_frame_idx, i64 0, i64 %idxprom8, !dbg !4044
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !4044
  %idxprom10 = zext i8 %17 to i64, !dbg !4046
  %18 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4046
  %ref11 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %18, i32 0, i32 10, !dbg !4047
  %arrayidx12 = getelementptr inbounds [8 x %struct.VP9ReferenceFrameState], [8 x %struct.VP9ReferenceFrameState]* %ref11, i64 0, i64 %idxprom10, !dbg !4046
  store %struct.VP9ReferenceFrameState* %arrayidx12, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4042
  %19 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4048
  %frame_width = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %19, i32 0, i32 0, !dbg !4049
  %20 = load i32, i32* %frame_width, align 4, !dbg !4049
  %21 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4050
  %frame_width13 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %21, i32 0, i32 5, !dbg !4051
  store i32 %20, i32* %frame_width13, align 4, !dbg !4052
  %22 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4053
  %frame_height = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %22, i32 0, i32 1, !dbg !4054
  %23 = load i32, i32* %frame_height, align 4, !dbg !4054
  %24 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4055
  %frame_height14 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %24, i32 0, i32 6, !dbg !4056
  store i32 %23, i32* %frame_height14, align 8, !dbg !4057
  %25 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4058
  %subsampling_x = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %25, i32 0, i32 2, !dbg !4059
  %26 = load i32, i32* %subsampling_x, align 4, !dbg !4059
  %conv15 = trunc i32 %26 to i8, !dbg !4058
  %27 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4060
  %subsampling_x16 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %27, i32 0, i32 7, !dbg !4061
  store i8 %conv15, i8* %subsampling_x16, align 4, !dbg !4062
  %28 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4063
  %subsampling_y = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %28, i32 0, i32 3, !dbg !4064
  %29 = load i32, i32* %subsampling_y, align 4, !dbg !4064
  %conv17 = trunc i32 %29 to i8, !dbg !4063
  %30 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4065
  %subsampling_y18 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %30, i32 0, i32 8, !dbg !4066
  store i8 %conv17, i8* %subsampling_y18, align 1, !dbg !4067
  %31 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !4068
  %bit_depth = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %31, i32 0, i32 4, !dbg !4069
  %32 = load i32, i32* %bit_depth, align 4, !dbg !4069
  %33 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4070
  %bit_depth19 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %33, i32 0, i32 9, !dbg !4071
  store i32 %32, i32* %bit_depth19, align 8, !dbg !4072
  br label %for.end, !dbg !4073

if.end20:                                         ; preds = %do.end3
  br label %for.inc, !dbg !4074

for.inc:                                          ; preds = %if.end20
  %34 = load i32, i32* %i, align 4, !dbg !4075
  %inc = add nsw i32 %34, 1, !dbg !4075
  store i32 %inc, i32* %i, align 4, !dbg !4075
  br label %for.cond, !dbg !4077, !llvm.loop !4078

for.end:                                          ; preds = %if.then7, %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !4080
  %cmp21 = icmp sge i32 %35, 3, !dbg !4082
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !4083

if.then23:                                        ; preds = %for.end
  br label %do.body24, !dbg !4084, !llvm.loop !4085

do.body24:                                        ; preds = %if.then23
  %36 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4086
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4089
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4090
  %call25 = call i32 @cbs_vp9_read_frame_size(%struct.CodedBitstreamContext* %36, %struct.GetBitContext* %37, %struct.VP9RawFrameHeader* %38), !dbg !4091
  store i32 %call25, i32* %err, align 4, !dbg !4092
  %39 = load i32, i32* %err, align 4, !dbg !4093
  %cmp26 = icmp slt i32 %39, 0, !dbg !4094
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4093

if.then28:                                        ; preds = %do.body24
  %40 = load i32, i32* %err, align 4, !dbg !4095
  store i32 %40, i32* %retval, align 4, !dbg !4098
  br label %return, !dbg !4098

if.end29:                                         ; preds = %do.body24
  br label %do.end30, !dbg !4099

do.end30:                                         ; preds = %if.end29
  br label %if.end47, !dbg !4101

if.else:                                          ; preds = %for.end
  %41 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4103
  %frame_width31 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %41, i32 0, i32 5, !dbg !4105
  %42 = load i32, i32* %frame_width31, align 4, !dbg !4105
  %add = add nsw i32 %42, 7, !dbg !4106
  %shr = ashr i32 %add, 3, !dbg !4107
  %conv32 = trunc i32 %shr to i16, !dbg !4108
  %43 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4109
  %mi_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %43, i32 0, i32 1, !dbg !4110
  store i16 %conv32, i16* %mi_cols, align 4, !dbg !4111
  %44 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4112
  %frame_height33 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %44, i32 0, i32 6, !dbg !4113
  %45 = load i32, i32* %frame_height33, align 8, !dbg !4113
  %add34 = add nsw i32 %45, 7, !dbg !4114
  %shr35 = ashr i32 %add34, 3, !dbg !4115
  %conv36 = trunc i32 %shr35 to i16, !dbg !4116
  %46 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4117
  %mi_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %46, i32 0, i32 2, !dbg !4118
  store i16 %conv36, i16* %mi_rows, align 2, !dbg !4119
  %47 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4120
  %mi_cols37 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %47, i32 0, i32 1, !dbg !4121
  %48 = load i16, i16* %mi_cols37, align 4, !dbg !4121
  %conv38 = zext i16 %48 to i32, !dbg !4120
  %add39 = add nsw i32 %conv38, 7, !dbg !4122
  %shr40 = ashr i32 %add39, 3, !dbg !4123
  %conv41 = trunc i32 %shr40 to i16, !dbg !4124
  %49 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4125
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %49, i32 0, i32 3, !dbg !4126
  store i16 %conv41, i16* %sb64_cols, align 8, !dbg !4127
  %50 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4128
  %mi_rows42 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %50, i32 0, i32 2, !dbg !4129
  %51 = load i16, i16* %mi_rows42, align 2, !dbg !4129
  %conv43 = zext i16 %51 to i32, !dbg !4128
  %add44 = add nsw i32 %conv43, 7, !dbg !4130
  %shr45 = ashr i32 %add44, 3, !dbg !4131
  %conv46 = trunc i32 %shr45 to i16, !dbg !4132
  %52 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !4133
  %sb64_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %52, i32 0, i32 4, !dbg !4134
  store i16 %conv46, i16* %sb64_rows, align 2, !dbg !4135
  br label %if.end47

if.end47:                                         ; preds = %if.else, %do.end30
  br label %do.body48, !dbg !4136, !llvm.loop !4137

do.body48:                                        ; preds = %if.end47
  %53 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4138
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4141
  %55 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4142
  %call49 = call i32 @cbs_vp9_read_render_size(%struct.CodedBitstreamContext* %53, %struct.GetBitContext* %54, %struct.VP9RawFrameHeader* %55), !dbg !4143
  store i32 %call49, i32* %err, align 4, !dbg !4144
  %56 = load i32, i32* %err, align 4, !dbg !4145
  %cmp50 = icmp slt i32 %56, 0, !dbg !4146
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4145

if.then52:                                        ; preds = %do.body48
  %57 = load i32, i32* %err, align 4, !dbg !4147
  store i32 %57, i32* %retval, align 4, !dbg !4150
  br label %return, !dbg !4150

if.end53:                                         ; preds = %do.body48
  br label %do.end54, !dbg !4151

do.end54:                                         ; preds = %if.end53
  store i32 0, i32* %retval, align 4, !dbg !4153
  br label %return, !dbg !4153

return:                                           ; preds = %do.end54, %if.then52, %if.then28, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !4154
  ret i32 %58, !dbg !4154
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_interpolation_filter(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !4155 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !4156, metadata !730), !dbg !4157
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !4158, metadata !730), !dbg !4159
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !4160, metadata !730), !dbg !4161
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4162, metadata !730), !dbg !4163
  br label %do.body, !dbg !4164, !llvm.loop !4165

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4166, metadata !730), !dbg !4168
  store i32 0, i32* %value, align 4, !dbg !4169
  br label %do.body1, !dbg !4171, !llvm.loop !4172

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4174
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4177
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 1), !dbg !4178
  store i32 %call, i32* %err, align 4, !dbg !4179
  %2 = load i32, i32* %err, align 4, !dbg !4180
  %cmp = icmp slt i32 %2, 0, !dbg !4178
  br i1 %cmp, label %if.then, label %if.end, !dbg !4180

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !4181
  store i32 %3, i32* %retval, align 4, !dbg !4184
  br label %return, !dbg !4184

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !4185

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !4187
  %conv = trunc i32 %4 to i8, !dbg !4187
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4189
  %is_filter_switchable = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 28, !dbg !4190
  store i8 %conv, i8* %is_filter_switchable, align 2, !dbg !4191
  br label %do.end2, !dbg !4192

do.end2:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4193
  %is_filter_switchable3 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 28, !dbg !4195
  %7 = load i8, i8* %is_filter_switchable3, align 2, !dbg !4195
  %tobool = icmp ne i8 %7, 0, !dbg !4193
  br i1 %tobool, label %if.end16, label %if.then4, !dbg !4196

if.then4:                                         ; preds = %do.end2
  br label %do.body5, !dbg !4197, !llvm.loop !4198

do.body5:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %value6, metadata !4199, metadata !730), !dbg !4201
  store i32 0, i32* %value6, align 4, !dbg !4202
  br label %do.body7, !dbg !4204, !llvm.loop !4205

do.body7:                                         ; preds = %do.body5
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4207
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4210
  %call8 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %8, %struct.GetBitContext* %9, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0), i32* null, i32* %value6, i32 0, i32 3), !dbg !4211
  store i32 %call8, i32* %err, align 4, !dbg !4212
  %10 = load i32, i32* %err, align 4, !dbg !4213
  %cmp9 = icmp slt i32 %10, 0, !dbg !4211
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4213

if.then11:                                        ; preds = %do.body7
  %11 = load i32, i32* %err, align 4, !dbg !4214
  store i32 %11, i32* %retval, align 4, !dbg !4217
  br label %return, !dbg !4217

if.end12:                                         ; preds = %do.body7
  br label %do.end13, !dbg !4218

do.end13:                                         ; preds = %if.end12
  %12 = load i32, i32* %value6, align 4, !dbg !4220
  %conv14 = trunc i32 %12 to i8, !dbg !4220
  %13 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4222
  %raw_interpolation_filter_type = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %13, i32 0, i32 29, !dbg !4223
  store i8 %conv14, i8* %raw_interpolation_filter_type, align 1, !dbg !4224
  br label %do.end15, !dbg !4225

do.end15:                                         ; preds = %do.end13
  br label %if.end16, !dbg !4226

if.end16:                                         ; preds = %do.end15, %do.end2
  store i32 0, i32* %retval, align 4, !dbg !4228
  br label %return, !dbg !4228

return:                                           ; preds = %if.end16, %if.then11, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4229
  ret i32 %14, !dbg !4229
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_loop_filter_params(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !4230 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %value4 = alloca i32, align 4
  %value15 = alloca i32, align 4
  %value28 = alloca i32, align 4
  %value44 = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %value60 = alloca i32, align 4
  %.compoundliteral62 = alloca [2 x i32], align 4
  %value82 = alloca i32, align 4
  %.compoundliteral84 = alloca [2 x i32], align 4
  %value104 = alloca i32, align 4
  %.compoundliteral106 = alloca [2 x i32], align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !4231, metadata !730), !dbg !4232
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !4233, metadata !730), !dbg !4234
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !4235, metadata !730), !dbg !4236
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4237, metadata !730), !dbg !4238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4239, metadata !730), !dbg !4240
  br label %do.body, !dbg !4241, !llvm.loop !4242

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4243, metadata !730), !dbg !4245
  store i32 0, i32* %value, align 4, !dbg !4246
  br label %do.body1, !dbg !4248, !llvm.loop !4249

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4251
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4254
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 63), !dbg !4255
  store i32 %call, i32* %err, align 4, !dbg !4256
  %2 = load i32, i32* %err, align 4, !dbg !4257
  %cmp = icmp slt i32 %2, 0, !dbg !4255
  br i1 %cmp, label %if.then, label %if.end, !dbg !4257

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !4258
  store i32 %3, i32* %retval, align 4, !dbg !4261
  br label %return, !dbg !4261

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !4262

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !4264
  %conv = trunc i32 %4 to i8, !dbg !4264
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4266
  %loop_filter_level = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 30, !dbg !4267
  store i8 %conv, i8* %loop_filter_level, align 2, !dbg !4268
  br label %do.end2, !dbg !4269

do.end2:                                          ; preds = %do.end
  br label %do.body3, !dbg !4270, !llvm.loop !4271

do.body3:                                         ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i32* %value4, metadata !4272, metadata !730), !dbg !4274
  store i32 0, i32* %value4, align 4, !dbg !4275
  br label %do.body5, !dbg !4277, !llvm.loop !4278

do.body5:                                         ; preds = %do.body3
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4280
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4283
  %call6 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %6, %struct.GetBitContext* %7, i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i32 0, i32 0), i32* null, i32* %value4, i32 0, i32 7), !dbg !4284
  store i32 %call6, i32* %err, align 4, !dbg !4285
  %8 = load i32, i32* %err, align 4, !dbg !4286
  %cmp7 = icmp slt i32 %8, 0, !dbg !4284
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !4286

if.then9:                                         ; preds = %do.body5
  %9 = load i32, i32* %err, align 4, !dbg !4287
  store i32 %9, i32* %retval, align 4, !dbg !4290
  br label %return, !dbg !4290

if.end10:                                         ; preds = %do.body5
  br label %do.end11, !dbg !4291

do.end11:                                         ; preds = %if.end10
  %10 = load i32, i32* %value4, align 4, !dbg !4293
  %conv12 = trunc i32 %10 to i8, !dbg !4293
  %11 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4295
  %loop_filter_sharpness = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %11, i32 0, i32 31, !dbg !4296
  store i8 %conv12, i8* %loop_filter_sharpness, align 1, !dbg !4297
  br label %do.end13, !dbg !4298

do.end13:                                         ; preds = %do.end11
  br label %do.body14, !dbg !4299, !llvm.loop !4300

do.body14:                                        ; preds = %do.end13
  call void @llvm.dbg.declare(metadata i32* %value15, metadata !4301, metadata !730), !dbg !4303
  store i32 0, i32* %value15, align 4, !dbg !4304
  br label %do.body16, !dbg !4306, !llvm.loop !4307

do.body16:                                        ; preds = %do.body14
  %12 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4309
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4312
  %call17 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %12, %struct.GetBitContext* %13, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i32 0, i32 0), i32* null, i32* %value15, i32 0, i32 1), !dbg !4313
  store i32 %call17, i32* %err, align 4, !dbg !4314
  %14 = load i32, i32* %err, align 4, !dbg !4315
  %cmp18 = icmp slt i32 %14, 0, !dbg !4313
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4315

if.then20:                                        ; preds = %do.body16
  %15 = load i32, i32* %err, align 4, !dbg !4316
  store i32 %15, i32* %retval, align 4, !dbg !4319
  br label %return, !dbg !4319

if.end21:                                         ; preds = %do.body16
  br label %do.end22, !dbg !4320

do.end22:                                         ; preds = %if.end21
  %16 = load i32, i32* %value15, align 4, !dbg !4322
  %conv23 = trunc i32 %16 to i8, !dbg !4322
  %17 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4324
  %loop_filter_delta_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %17, i32 0, i32 32, !dbg !4325
  store i8 %conv23, i8* %loop_filter_delta_enabled, align 2, !dbg !4326
  br label %do.end24, !dbg !4327

do.end24:                                         ; preds = %do.end22
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4328
  %loop_filter_delta_enabled25 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 32, !dbg !4330
  %19 = load i8, i8* %loop_filter_delta_enabled25, align 2, !dbg !4330
  %tobool = icmp ne i8 %19, 0, !dbg !4328
  br i1 %tobool, label %if.then26, label %if.end125, !dbg !4331

if.then26:                                        ; preds = %do.end24
  br label %do.body27, !dbg !4332, !llvm.loop !4334

do.body27:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata i32* %value28, metadata !4335, metadata !730), !dbg !4337
  store i32 0, i32* %value28, align 4, !dbg !4338
  br label %do.body29, !dbg !4340, !llvm.loop !4341

do.body29:                                        ; preds = %do.body27
  %20 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4343
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4346
  %call30 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %20, %struct.GetBitContext* %21, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0), i32* null, i32* %value28, i32 0, i32 1), !dbg !4347
  store i32 %call30, i32* %err, align 4, !dbg !4348
  %22 = load i32, i32* %err, align 4, !dbg !4349
  %cmp31 = icmp slt i32 %22, 0, !dbg !4347
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4349

if.then33:                                        ; preds = %do.body29
  %23 = load i32, i32* %err, align 4, !dbg !4350
  store i32 %23, i32* %retval, align 4, !dbg !4353
  br label %return, !dbg !4353

if.end34:                                         ; preds = %do.body29
  br label %do.end35, !dbg !4354

do.end35:                                         ; preds = %if.end34
  %24 = load i32, i32* %value28, align 4, !dbg !4356
  %conv36 = trunc i32 %24 to i8, !dbg !4356
  %25 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4358
  %loop_filter_delta_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %25, i32 0, i32 33, !dbg !4359
  store i8 %conv36, i8* %loop_filter_delta_update, align 1, !dbg !4360
  br label %do.end37, !dbg !4361

do.end37:                                         ; preds = %do.end35
  %26 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4362
  %loop_filter_delta_update38 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %26, i32 0, i32 33, !dbg !4364
  %27 = load i8, i8* %loop_filter_delta_update38, align 1, !dbg !4364
  %tobool39 = icmp ne i8 %27, 0, !dbg !4362
  br i1 %tobool39, label %if.then40, label %if.end124, !dbg !4365

if.then40:                                        ; preds = %do.end37
  store i32 0, i32* %i, align 4, !dbg !4366
  br label %for.cond, !dbg !4369

for.cond:                                         ; preds = %for.inc, %if.then40
  %28 = load i32, i32* %i, align 4, !dbg !4370
  %cmp41 = icmp slt i32 %28, 4, !dbg !4373
  br i1 %cmp41, label %for.body, label %for.end, !dbg !4374

for.body:                                         ; preds = %for.cond
  br label %do.body43, !dbg !4375, !llvm.loop !4377

do.body43:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %value44, metadata !4378, metadata !730), !dbg !4380
  store i32 0, i32* %value44, align 4, !dbg !4381
  br label %do.body45, !dbg !4383, !llvm.loop !4384

do.body45:                                        ; preds = %do.body43
  %29 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4386
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4389
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !4390
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !4390
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4390
  %31 = load i32, i32* %i, align 4, !dbg !4391
  store i32 %31, i32* %arrayinit.element, align 4, !dbg !4390
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !4392
  %call46 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %29, %struct.GetBitContext* %30, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i32 0, i32 0), i32* %arraydecay, i32* %value44, i32 0, i32 1), !dbg !4393
  store i32 %call46, i32* %err, align 4, !dbg !4394
  %32 = load i32, i32* %err, align 4, !dbg !4395
  %cmp47 = icmp slt i32 %32, 0, !dbg !4393
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4395

if.then49:                                        ; preds = %do.body45
  %33 = load i32, i32* %err, align 4, !dbg !4396
  store i32 %33, i32* %retval, align 4, !dbg !4399
  br label %return, !dbg !4399

if.end50:                                         ; preds = %do.body45
  br label %do.end51, !dbg !4400

do.end51:                                         ; preds = %if.end50
  %34 = load i32, i32* %value44, align 4, !dbg !4402
  %conv52 = trunc i32 %34 to i8, !dbg !4402
  %35 = load i32, i32* %i, align 4, !dbg !4404
  %idxprom = sext i32 %35 to i64, !dbg !4405
  %36 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4405
  %update_ref_delta = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %36, i32 0, i32 34, !dbg !4406
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %update_ref_delta, i64 0, i64 %idxprom, !dbg !4405
  store i8 %conv52, i8* %arrayidx, align 1, !dbg !4407
  br label %do.end53, !dbg !4408

do.end53:                                         ; preds = %do.end51
  %37 = load i32, i32* %i, align 4, !dbg !4409
  %idxprom54 = sext i32 %37 to i64, !dbg !4411
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4411
  %update_ref_delta55 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %38, i32 0, i32 34, !dbg !4412
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %update_ref_delta55, i64 0, i64 %idxprom54, !dbg !4411
  %39 = load i8, i8* %arrayidx56, align 1, !dbg !4411
  %tobool57 = icmp ne i8 %39, 0, !dbg !4411
  br i1 %tobool57, label %if.then58, label %if.end76, !dbg !4413

if.then58:                                        ; preds = %do.end53
  br label %do.body59, !dbg !4414, !llvm.loop !4415

do.body59:                                        ; preds = %if.then58
  call void @llvm.dbg.declare(metadata i32* %value60, metadata !4416, metadata !730), !dbg !4418
  store i32 0, i32* %value60, align 4, !dbg !4419
  br label %do.body61, !dbg !4421, !llvm.loop !4422

do.body61:                                        ; preds = %do.body59
  %40 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4424
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4427
  %arrayinit.begin63 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral62, i64 0, i64 0, !dbg !4428
  store i32 1, i32* %arrayinit.begin63, align 4, !dbg !4428
  %arrayinit.element64 = getelementptr inbounds i32, i32* %arrayinit.begin63, i64 1, !dbg !4428
  %42 = load i32, i32* %i, align 4, !dbg !4429
  store i32 %42, i32* %arrayinit.element64, align 4, !dbg !4428
  %arraydecay65 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral62, i32 0, i32 0, !dbg !4430
  %call66 = call i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %40, %struct.GetBitContext* %41, i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0), i32* %arraydecay65, i32* %value60), !dbg !4431
  store i32 %call66, i32* %err, align 4, !dbg !4432
  %43 = load i32, i32* %err, align 4, !dbg !4433
  %cmp67 = icmp slt i32 %43, 0, !dbg !4434
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !4433

if.then69:                                        ; preds = %do.body61
  %44 = load i32, i32* %err, align 4, !dbg !4435
  store i32 %44, i32* %retval, align 4, !dbg !4438
  br label %return, !dbg !4438

if.end70:                                         ; preds = %do.body61
  br label %do.end71, !dbg !4439

do.end71:                                         ; preds = %if.end70
  %45 = load i32, i32* %value60, align 4, !dbg !4441
  %conv72 = trunc i32 %45 to i8, !dbg !4441
  %46 = load i32, i32* %i, align 4, !dbg !4443
  %idxprom73 = sext i32 %46 to i64, !dbg !4444
  %47 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4444
  %loop_filter_ref_deltas = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %47, i32 0, i32 35, !dbg !4445
  %arrayidx74 = getelementptr inbounds [4 x i8], [4 x i8]* %loop_filter_ref_deltas, i64 0, i64 %idxprom73, !dbg !4444
  store i8 %conv72, i8* %arrayidx74, align 1, !dbg !4446
  br label %do.end75, !dbg !4447

do.end75:                                         ; preds = %do.end71
  br label %if.end76, !dbg !4448

if.end76:                                         ; preds = %do.end75, %do.end53
  br label %for.inc, !dbg !4450

for.inc:                                          ; preds = %if.end76
  %48 = load i32, i32* %i, align 4, !dbg !4451
  %inc = add nsw i32 %48, 1, !dbg !4451
  store i32 %inc, i32* %i, align 4, !dbg !4451
  br label %for.cond, !dbg !4453, !llvm.loop !4454

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4456
  br label %for.cond77, !dbg !4458

for.cond77:                                       ; preds = %for.inc121, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4459
  %cmp78 = icmp slt i32 %49, 2, !dbg !4462
  br i1 %cmp78, label %for.body80, label %for.end123, !dbg !4463

for.body80:                                       ; preds = %for.cond77
  br label %do.body81, !dbg !4464, !llvm.loop !4466

do.body81:                                        ; preds = %for.body80
  call void @llvm.dbg.declare(metadata i32* %value82, metadata !4467, metadata !730), !dbg !4469
  store i32 0, i32* %value82, align 4, !dbg !4470
  br label %do.body83, !dbg !4472, !llvm.loop !4473

do.body83:                                        ; preds = %do.body81
  %50 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4475
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4478
  %arrayinit.begin85 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral84, i64 0, i64 0, !dbg !4479
  store i32 1, i32* %arrayinit.begin85, align 4, !dbg !4479
  %arrayinit.element86 = getelementptr inbounds i32, i32* %arrayinit.begin85, i64 1, !dbg !4479
  %52 = load i32, i32* %i, align 4, !dbg !4480
  store i32 %52, i32* %arrayinit.element86, align 4, !dbg !4479
  %arraydecay87 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral84, i32 0, i32 0, !dbg !4481
  %call88 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %50, %struct.GetBitContext* %51, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i32 0, i32 0), i32* %arraydecay87, i32* %value82, i32 0, i32 1), !dbg !4482
  store i32 %call88, i32* %err, align 4, !dbg !4483
  %53 = load i32, i32* %err, align 4, !dbg !4484
  %cmp89 = icmp slt i32 %53, 0, !dbg !4482
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4484

if.then91:                                        ; preds = %do.body83
  %54 = load i32, i32* %err, align 4, !dbg !4485
  store i32 %54, i32* %retval, align 4, !dbg !4488
  br label %return, !dbg !4488

if.end92:                                         ; preds = %do.body83
  br label %do.end93, !dbg !4489

do.end93:                                         ; preds = %if.end92
  %55 = load i32, i32* %value82, align 4, !dbg !4491
  %conv94 = trunc i32 %55 to i8, !dbg !4491
  %56 = load i32, i32* %i, align 4, !dbg !4493
  %idxprom95 = sext i32 %56 to i64, !dbg !4494
  %57 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4494
  %update_mode_delta = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %57, i32 0, i32 36, !dbg !4495
  %arrayidx96 = getelementptr inbounds [2 x i8], [2 x i8]* %update_mode_delta, i64 0, i64 %idxprom95, !dbg !4494
  store i8 %conv94, i8* %arrayidx96, align 1, !dbg !4496
  br label %do.end97, !dbg !4497

do.end97:                                         ; preds = %do.end93
  %58 = load i32, i32* %i, align 4, !dbg !4498
  %idxprom98 = sext i32 %58 to i64, !dbg !4500
  %59 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4500
  %update_mode_delta99 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %59, i32 0, i32 36, !dbg !4501
  %arrayidx100 = getelementptr inbounds [2 x i8], [2 x i8]* %update_mode_delta99, i64 0, i64 %idxprom98, !dbg !4500
  %60 = load i8, i8* %arrayidx100, align 1, !dbg !4500
  %tobool101 = icmp ne i8 %60, 0, !dbg !4500
  br i1 %tobool101, label %if.then102, label %if.end120, !dbg !4502

if.then102:                                       ; preds = %do.end97
  br label %do.body103, !dbg !4503, !llvm.loop !4504

do.body103:                                       ; preds = %if.then102
  call void @llvm.dbg.declare(metadata i32* %value104, metadata !4505, metadata !730), !dbg !4507
  store i32 0, i32* %value104, align 4, !dbg !4508
  br label %do.body105, !dbg !4510, !llvm.loop !4511

do.body105:                                       ; preds = %do.body103
  %61 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4513
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4516
  %arrayinit.begin107 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral106, i64 0, i64 0, !dbg !4517
  store i32 1, i32* %arrayinit.begin107, align 4, !dbg !4517
  %arrayinit.element108 = getelementptr inbounds i32, i32* %arrayinit.begin107, i64 1, !dbg !4517
  %63 = load i32, i32* %i, align 4, !dbg !4518
  store i32 %63, i32* %arrayinit.element108, align 4, !dbg !4517
  %arraydecay109 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral106, i32 0, i32 0, !dbg !4519
  %call110 = call i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %61, %struct.GetBitContext* %62, i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i32 0, i32 0), i32* %arraydecay109, i32* %value104), !dbg !4520
  store i32 %call110, i32* %err, align 4, !dbg !4521
  %64 = load i32, i32* %err, align 4, !dbg !4522
  %cmp111 = icmp slt i32 %64, 0, !dbg !4523
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !4522

if.then113:                                       ; preds = %do.body105
  %65 = load i32, i32* %err, align 4, !dbg !4524
  store i32 %65, i32* %retval, align 4, !dbg !4527
  br label %return, !dbg !4527

if.end114:                                        ; preds = %do.body105
  br label %do.end115, !dbg !4528

do.end115:                                        ; preds = %if.end114
  %66 = load i32, i32* %value104, align 4, !dbg !4530
  %conv116 = trunc i32 %66 to i8, !dbg !4530
  %67 = load i32, i32* %i, align 4, !dbg !4532
  %idxprom117 = sext i32 %67 to i64, !dbg !4533
  %68 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4533
  %loop_filter_mode_deltas = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %68, i32 0, i32 37, !dbg !4534
  %arrayidx118 = getelementptr inbounds [2 x i8], [2 x i8]* %loop_filter_mode_deltas, i64 0, i64 %idxprom117, !dbg !4533
  store i8 %conv116, i8* %arrayidx118, align 1, !dbg !4535
  br label %do.end119, !dbg !4536

do.end119:                                        ; preds = %do.end115
  br label %if.end120, !dbg !4537

if.end120:                                        ; preds = %do.end119, %do.end97
  br label %for.inc121, !dbg !4539

for.inc121:                                       ; preds = %if.end120
  %69 = load i32, i32* %i, align 4, !dbg !4540
  %inc122 = add nsw i32 %69, 1, !dbg !4540
  store i32 %inc122, i32* %i, align 4, !dbg !4540
  br label %for.cond77, !dbg !4542, !llvm.loop !4543

for.end123:                                       ; preds = %for.cond77
  br label %if.end124, !dbg !4545

if.end124:                                        ; preds = %for.end123, %do.end37
  br label %if.end125, !dbg !4546

if.end125:                                        ; preds = %if.end124, %do.end24
  store i32 0, i32* %retval, align 4, !dbg !4547
  br label %return, !dbg !4547

return:                                           ; preds = %if.end125, %if.then113, %if.then91, %if.then69, %if.then49, %if.then33, %if.then20, %if.then9, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !4548
  ret i32 %70, !dbg !4548
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_quantization_params(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !4549 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %delta_coded = alloca i8, align 1
  %delta_q = alloca i8, align 1
  %value5 = alloca i32, align 4
  %value17 = alloca i32, align 4
  %delta_coded30 = alloca i8, align 1
  %delta_q31 = alloca i8, align 1
  %value33 = alloca i32, align 4
  %value46 = alloca i32, align 4
  %delta_coded60 = alloca i8, align 1
  %delta_q61 = alloca i8, align 1
  %value63 = alloca i32, align 4
  %value76 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !4550, metadata !730), !dbg !4551
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !4552, metadata !730), !dbg !4553
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !4554, metadata !730), !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4556, metadata !730), !dbg !4557
  br label %do.body, !dbg !4558, !llvm.loop !4559

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4560, metadata !730), !dbg !4562
  store i32 0, i32* %value, align 4, !dbg !4563
  br label %do.body1, !dbg !4565, !llvm.loop !4566

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4568
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4571
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 255), !dbg !4572
  store i32 %call, i32* %err, align 4, !dbg !4573
  %2 = load i32, i32* %err, align 4, !dbg !4574
  %cmp = icmp slt i32 %2, 0, !dbg !4572
  br i1 %cmp, label %if.then, label %if.end, !dbg !4574

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !4575
  store i32 %3, i32* %retval, align 4, !dbg !4578
  br label %return, !dbg !4578

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !4579

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !4581
  %conv = trunc i32 %4 to i8, !dbg !4581
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4583
  %base_q_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 38, !dbg !4584
  store i8 %conv, i8* %base_q_idx, align 2, !dbg !4585
  br label %do.end2, !dbg !4586

do.end2:                                          ; preds = %do.end
  br label %do.body3, !dbg !4587, !llvm.loop !4588

do.body3:                                         ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i8* %delta_coded, metadata !4589, metadata !730), !dbg !4591
  call void @llvm.dbg.declare(metadata i8* %delta_q, metadata !4592, metadata !730), !dbg !4593
  br label %do.body4, !dbg !4594, !llvm.loop !4596

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i32* %value5, metadata !4598, metadata !730), !dbg !4600
  store i32 0, i32* %value5, align 4, !dbg !4601
  br label %do.body6, !dbg !4603, !llvm.loop !4604

do.body6:                                         ; preds = %do.body4
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4606
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4609
  %call7 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %6, %struct.GetBitContext* %7, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i32 0, i32 0), i32* null, i32* %value5, i32 0, i32 1), !dbg !4610
  store i32 %call7, i32* %err, align 4, !dbg !4611
  %8 = load i32, i32* %err, align 4, !dbg !4612
  %cmp8 = icmp slt i32 %8, 0, !dbg !4613
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4612

if.then10:                                        ; preds = %do.body6
  %9 = load i32, i32* %err, align 4, !dbg !4614
  store i32 %9, i32* %retval, align 4, !dbg !4617
  br label %return, !dbg !4617

if.end11:                                         ; preds = %do.body6
  br label %do.end12, !dbg !4618

do.end12:                                         ; preds = %if.end11
  %10 = load i32, i32* %value5, align 4, !dbg !4620
  %conv13 = trunc i32 %10 to i8, !dbg !4620
  store i8 %conv13, i8* %delta_coded, align 1, !dbg !4622
  br label %do.end14, !dbg !4623

do.end14:                                         ; preds = %do.end12
  %11 = load i8, i8* %delta_coded, align 1, !dbg !4624
  %tobool = icmp ne i8 %11, 0, !dbg !4624
  br i1 %tobool, label %if.then15, label %if.else, !dbg !4624

if.then15:                                        ; preds = %do.end14
  br label %do.body16, !dbg !4627, !llvm.loop !4629

do.body16:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata i32* %value17, metadata !4631, metadata !730), !dbg !4633
  store i32 0, i32* %value17, align 4, !dbg !4634
  br label %do.body18, !dbg !4636, !llvm.loop !4637

do.body18:                                        ; preds = %do.body16
  %12 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4639
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4642
  %call19 = call i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %12, %struct.GetBitContext* %13, i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i32* null, i32* %value17), !dbg !4643
  store i32 %call19, i32* %err, align 4, !dbg !4644
  %14 = load i32, i32* %err, align 4, !dbg !4645
  %cmp20 = icmp slt i32 %14, 0, !dbg !4646
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !4645

if.then22:                                        ; preds = %do.body18
  %15 = load i32, i32* %err, align 4, !dbg !4647
  store i32 %15, i32* %retval, align 4, !dbg !4650
  br label %return, !dbg !4650

if.end23:                                         ; preds = %do.body18
  br label %do.end24, !dbg !4651

do.end24:                                         ; preds = %if.end23
  %16 = load i32, i32* %value17, align 4, !dbg !4653
  %conv25 = trunc i32 %16 to i8, !dbg !4653
  store i8 %conv25, i8* %delta_q, align 1, !dbg !4655
  br label %do.end26, !dbg !4656

do.end26:                                         ; preds = %do.end24
  br label %if.end27, !dbg !4657

if.else:                                          ; preds = %do.end14
  store i8 0, i8* %delta_q, align 1, !dbg !4659
  br label %if.end27

if.end27:                                         ; preds = %if.else, %do.end26
  %17 = load i8, i8* %delta_q, align 1, !dbg !4661
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4663
  %delta_q_y_dc = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 39, !dbg !4664
  store i8 %17, i8* %delta_q_y_dc, align 1, !dbg !4665
  br label %do.end28, !dbg !4666

do.end28:                                         ; preds = %if.end27
  br label %do.body29, !dbg !4667, !llvm.loop !4668

do.body29:                                        ; preds = %do.end28
  call void @llvm.dbg.declare(metadata i8* %delta_coded30, metadata !4669, metadata !730), !dbg !4671
  call void @llvm.dbg.declare(metadata i8* %delta_q31, metadata !4672, metadata !730), !dbg !4673
  br label %do.body32, !dbg !4674, !llvm.loop !4676

do.body32:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i32* %value33, metadata !4678, metadata !730), !dbg !4680
  store i32 0, i32* %value33, align 4, !dbg !4681
  br label %do.body34, !dbg !4683, !llvm.loop !4684

do.body34:                                        ; preds = %do.body32
  %19 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4686
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4689
  %call35 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %19, %struct.GetBitContext* %20, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.63, i32 0, i32 0), i32* null, i32* %value33, i32 0, i32 1), !dbg !4690
  store i32 %call35, i32* %err, align 4, !dbg !4691
  %21 = load i32, i32* %err, align 4, !dbg !4692
  %cmp36 = icmp slt i32 %21, 0, !dbg !4693
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !4692

if.then38:                                        ; preds = %do.body34
  %22 = load i32, i32* %err, align 4, !dbg !4694
  store i32 %22, i32* %retval, align 4, !dbg !4697
  br label %return, !dbg !4697

if.end39:                                         ; preds = %do.body34
  br label %do.end40, !dbg !4698

do.end40:                                         ; preds = %if.end39
  %23 = load i32, i32* %value33, align 4, !dbg !4700
  %conv41 = trunc i32 %23 to i8, !dbg !4700
  store i8 %conv41, i8* %delta_coded30, align 1, !dbg !4702
  br label %do.end42, !dbg !4703

do.end42:                                         ; preds = %do.end40
  %24 = load i8, i8* %delta_coded30, align 1, !dbg !4704
  %tobool43 = icmp ne i8 %24, 0, !dbg !4704
  br i1 %tobool43, label %if.then44, label %if.else56, !dbg !4704

if.then44:                                        ; preds = %do.end42
  br label %do.body45, !dbg !4707, !llvm.loop !4709

do.body45:                                        ; preds = %if.then44
  call void @llvm.dbg.declare(metadata i32* %value46, metadata !4711, metadata !730), !dbg !4713
  store i32 0, i32* %value46, align 4, !dbg !4714
  br label %do.body47, !dbg !4716, !llvm.loop !4717

do.body47:                                        ; preds = %do.body45
  %25 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4719
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4722
  %call48 = call i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %25, %struct.GetBitContext* %26, i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0), i32* null, i32* %value46), !dbg !4723
  store i32 %call48, i32* %err, align 4, !dbg !4724
  %27 = load i32, i32* %err, align 4, !dbg !4725
  %cmp49 = icmp slt i32 %27, 0, !dbg !4726
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !4725

if.then51:                                        ; preds = %do.body47
  %28 = load i32, i32* %err, align 4, !dbg !4727
  store i32 %28, i32* %retval, align 4, !dbg !4730
  br label %return, !dbg !4730

if.end52:                                         ; preds = %do.body47
  br label %do.end53, !dbg !4731

do.end53:                                         ; preds = %if.end52
  %29 = load i32, i32* %value46, align 4, !dbg !4733
  %conv54 = trunc i32 %29 to i8, !dbg !4733
  store i8 %conv54, i8* %delta_q31, align 1, !dbg !4735
  br label %do.end55, !dbg !4736

do.end55:                                         ; preds = %do.end53
  br label %if.end57, !dbg !4737

if.else56:                                        ; preds = %do.end42
  store i8 0, i8* %delta_q31, align 1, !dbg !4739
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %do.end55
  %30 = load i8, i8* %delta_q31, align 1, !dbg !4741
  %31 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4743
  %delta_q_uv_dc = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %31, i32 0, i32 40, !dbg !4744
  store i8 %30, i8* %delta_q_uv_dc, align 2, !dbg !4745
  br label %do.end58, !dbg !4746

do.end58:                                         ; preds = %if.end57
  br label %do.body59, !dbg !4747, !llvm.loop !4748

do.body59:                                        ; preds = %do.end58
  call void @llvm.dbg.declare(metadata i8* %delta_coded60, metadata !4749, metadata !730), !dbg !4751
  call void @llvm.dbg.declare(metadata i8* %delta_q61, metadata !4752, metadata !730), !dbg !4753
  br label %do.body62, !dbg !4754, !llvm.loop !4756

do.body62:                                        ; preds = %do.body59
  call void @llvm.dbg.declare(metadata i32* %value63, metadata !4758, metadata !730), !dbg !4760
  store i32 0, i32* %value63, align 4, !dbg !4761
  br label %do.body64, !dbg !4763, !llvm.loop !4764

do.body64:                                        ; preds = %do.body62
  %32 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4766
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4769
  %call65 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %32, %struct.GetBitContext* %33, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i32 0, i32 0), i32* null, i32* %value63, i32 0, i32 1), !dbg !4770
  store i32 %call65, i32* %err, align 4, !dbg !4771
  %34 = load i32, i32* %err, align 4, !dbg !4772
  %cmp66 = icmp slt i32 %34, 0, !dbg !4773
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !4772

if.then68:                                        ; preds = %do.body64
  %35 = load i32, i32* %err, align 4, !dbg !4774
  store i32 %35, i32* %retval, align 4, !dbg !4777
  br label %return, !dbg !4777

if.end69:                                         ; preds = %do.body64
  br label %do.end70, !dbg !4778

do.end70:                                         ; preds = %if.end69
  %36 = load i32, i32* %value63, align 4, !dbg !4780
  %conv71 = trunc i32 %36 to i8, !dbg !4780
  store i8 %conv71, i8* %delta_coded60, align 1, !dbg !4782
  br label %do.end72, !dbg !4783

do.end72:                                         ; preds = %do.end70
  %37 = load i8, i8* %delta_coded60, align 1, !dbg !4784
  %tobool73 = icmp ne i8 %37, 0, !dbg !4784
  br i1 %tobool73, label %if.then74, label %if.else86, !dbg !4784

if.then74:                                        ; preds = %do.end72
  br label %do.body75, !dbg !4787, !llvm.loop !4789

do.body75:                                        ; preds = %if.then74
  call void @llvm.dbg.declare(metadata i32* %value76, metadata !4791, metadata !730), !dbg !4793
  store i32 0, i32* %value76, align 4, !dbg !4794
  br label %do.body77, !dbg !4796, !llvm.loop !4797

do.body77:                                        ; preds = %do.body75
  %38 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4799
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4802
  %call78 = call i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %38, %struct.GetBitContext* %39, i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i32 0, i32 0), i32* null, i32* %value76), !dbg !4803
  store i32 %call78, i32* %err, align 4, !dbg !4804
  %40 = load i32, i32* %err, align 4, !dbg !4805
  %cmp79 = icmp slt i32 %40, 0, !dbg !4806
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !4805

if.then81:                                        ; preds = %do.body77
  %41 = load i32, i32* %err, align 4, !dbg !4807
  store i32 %41, i32* %retval, align 4, !dbg !4810
  br label %return, !dbg !4810

if.end82:                                         ; preds = %do.body77
  br label %do.end83, !dbg !4811

do.end83:                                         ; preds = %if.end82
  %42 = load i32, i32* %value76, align 4, !dbg !4813
  %conv84 = trunc i32 %42 to i8, !dbg !4813
  store i8 %conv84, i8* %delta_q61, align 1, !dbg !4815
  br label %do.end85, !dbg !4816

do.end85:                                         ; preds = %do.end83
  br label %if.end87, !dbg !4817

if.else86:                                        ; preds = %do.end72
  store i8 0, i8* %delta_q61, align 1, !dbg !4819
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %do.end85
  %43 = load i8, i8* %delta_q61, align 1, !dbg !4821
  %44 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4823
  %delta_q_uv_ac = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %44, i32 0, i32 41, !dbg !4824
  store i8 %43, i8* %delta_q_uv_ac, align 1, !dbg !4825
  br label %do.end88, !dbg !4826

do.end88:                                         ; preds = %if.end87
  store i32 0, i32* %retval, align 4, !dbg !4827
  br label %return, !dbg !4827

return:                                           ; preds = %do.end88, %if.then81, %if.then68, %if.then51, %if.then38, %if.then22, %if.then10, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !4828
  ret i32 %45, !dbg !4828
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_segmentation_params(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !688 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  %prob_coded = alloca i8, align 1
  %prob = alloca i8, align 1
  %value23 = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %value36 = alloca i32, align 4
  %.compoundliteral38 = alloca [2 x i32], align 4
  %value53 = alloca i32, align 4
  %prob_coded71 = alloca i8, align 1
  %prob72 = alloca i8, align 1
  %value74 = alloca i32, align 4
  %.compoundliteral76 = alloca [2 x i32], align 4
  %value91 = alloca i32, align 4
  %.compoundliteral93 = alloca [2 x i32], align 4
  %value122 = alloca i32, align 4
  %value136 = alloca i32, align 4
  %value155 = alloca i32, align 4
  %.compoundliteral157 = alloca [3 x i32], align 4
  %value186 = alloca i32, align 4
  %.compoundliteral190 = alloca [3 x i32], align 4
  %value214 = alloca i32, align 4
  %.compoundliteral216 = alloca [3 x i32], align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !4829, metadata !730), !dbg !4830
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !4831, metadata !730), !dbg !4832
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !4833, metadata !730), !dbg !4834
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4835, metadata !730), !dbg !4836
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4837, metadata !730), !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4839, metadata !730), !dbg !4840
  br label %do.body, !dbg !4841, !llvm.loop !4842

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4843, metadata !730), !dbg !4845
  store i32 0, i32* %value, align 4, !dbg !4846
  br label %do.body1, !dbg !4848, !llvm.loop !4849

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4851
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4854
  %call = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %0, %struct.GetBitContext* %1, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i32 0, i32 0), i32* null, i32* %value, i32 0, i32 1), !dbg !4855
  store i32 %call, i32* %err, align 4, !dbg !4856
  %2 = load i32, i32* %err, align 4, !dbg !4857
  %cmp = icmp slt i32 %2, 0, !dbg !4855
  br i1 %cmp, label %if.then, label %if.end, !dbg !4857

if.then:                                          ; preds = %do.body1
  %3 = load i32, i32* %err, align 4, !dbg !4858
  store i32 %3, i32* %retval, align 4, !dbg !4861
  br label %return, !dbg !4861

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !4862

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value, align 4, !dbg !4864
  %conv = trunc i32 %4 to i8, !dbg !4864
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4866
  %segmentation_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 42, !dbg !4867
  store i8 %conv, i8* %segmentation_enabled, align 2, !dbg !4868
  br label %do.end2, !dbg !4869

do.end2:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4870
  %segmentation_enabled3 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 42, !dbg !4872
  %7 = load i8, i8* %segmentation_enabled3, align 2, !dbg !4872
  %tobool = icmp ne i8 %7, 0, !dbg !4870
  br i1 %tobool, label %if.then4, label %if.end265, !dbg !4873

if.then4:                                         ; preds = %do.end2
  br label %do.body5, !dbg !4874, !llvm.loop !4876

do.body5:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %value6, metadata !4877, metadata !730), !dbg !4879
  store i32 0, i32* %value6, align 4, !dbg !4880
  br label %do.body7, !dbg !4882, !llvm.loop !4883

do.body7:                                         ; preds = %do.body5
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4885
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4888
  %call8 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %8, %struct.GetBitContext* %9, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i32 0, i32 0), i32* null, i32* %value6, i32 0, i32 1), !dbg !4889
  store i32 %call8, i32* %err, align 4, !dbg !4890
  %10 = load i32, i32* %err, align 4, !dbg !4891
  %cmp9 = icmp slt i32 %10, 0, !dbg !4889
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4891

if.then11:                                        ; preds = %do.body7
  %11 = load i32, i32* %err, align 4, !dbg !4892
  store i32 %11, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

if.end12:                                         ; preds = %do.body7
  br label %do.end13, !dbg !4896

do.end13:                                         ; preds = %if.end12
  %12 = load i32, i32* %value6, align 4, !dbg !4898
  %conv14 = trunc i32 %12 to i8, !dbg !4898
  %13 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4900
  %segmentation_update_map = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %13, i32 0, i32 43, !dbg !4901
  store i8 %conv14, i8* %segmentation_update_map, align 1, !dbg !4902
  br label %do.end15, !dbg !4903

do.end15:                                         ; preds = %do.end13
  %14 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !4904
  %segmentation_update_map16 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %14, i32 0, i32 43, !dbg !4906
  %15 = load i8, i8* %segmentation_update_map16, align 1, !dbg !4906
  %tobool17 = icmp ne i8 %15, 0, !dbg !4904
  br i1 %tobool17, label %if.then18, label %if.end120, !dbg !4907

if.then18:                                        ; preds = %do.end15
  store i32 0, i32* %i, align 4, !dbg !4908
  br label %for.cond, !dbg !4911

for.cond:                                         ; preds = %for.inc, %if.then18
  %16 = load i32, i32* %i, align 4, !dbg !4912
  %cmp19 = icmp slt i32 %16, 7, !dbg !4915
  br i1 %cmp19, label %for.body, label %for.end, !dbg !4916

for.body:                                         ; preds = %for.cond
  br label %do.body21, !dbg !4917, !llvm.loop !4918

do.body21:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8* %prob_coded, metadata !4919, metadata !730), !dbg !4921
  call void @llvm.dbg.declare(metadata i8* %prob, metadata !4922, metadata !730), !dbg !4923
  br label %do.body22, !dbg !4924, !llvm.loop !4926

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i32* %value23, metadata !4928, metadata !730), !dbg !4930
  store i32 0, i32* %value23, align 4, !dbg !4931
  br label %do.body24, !dbg !4933, !llvm.loop !4934

do.body24:                                        ; preds = %do.body22
  %17 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4936
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4939
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !4940
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !4940
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4940
  %19 = load i32, i32* %i, align 4, !dbg !4941
  store i32 %19, i32* %arrayinit.element, align 4, !dbg !4940
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !4942
  %call25 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %17, %struct.GetBitContext* %18, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.69, i32 0, i32 0), i32* %arraydecay, i32* %value23, i32 0, i32 1), !dbg !4943
  store i32 %call25, i32* %err, align 4, !dbg !4944
  %20 = load i32, i32* %err, align 4, !dbg !4945
  %cmp26 = icmp slt i32 %20, 0, !dbg !4946
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4945

if.then28:                                        ; preds = %do.body24
  %21 = load i32, i32* %err, align 4, !dbg !4947
  store i32 %21, i32* %retval, align 4, !dbg !4950
  br label %return, !dbg !4950

if.end29:                                         ; preds = %do.body24
  br label %do.end30, !dbg !4951

do.end30:                                         ; preds = %if.end29
  %22 = load i32, i32* %value23, align 4, !dbg !4953
  %conv31 = trunc i32 %22 to i8, !dbg !4953
  store i8 %conv31, i8* %prob_coded, align 1, !dbg !4955
  br label %do.end32, !dbg !4956

do.end32:                                         ; preds = %do.end30
  %23 = load i8, i8* %prob_coded, align 1, !dbg !4957
  %tobool33 = icmp ne i8 %23, 0, !dbg !4957
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !4957

if.then34:                                        ; preds = %do.end32
  br label %do.body35, !dbg !4960, !llvm.loop !4962

do.body35:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i32* %value36, metadata !4964, metadata !730), !dbg !4966
  store i32 0, i32* %value36, align 4, !dbg !4967
  br label %do.body37, !dbg !4969, !llvm.loop !4970

do.body37:                                        ; preds = %do.body35
  %24 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !4972
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !4975
  %arrayinit.begin39 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral38, i64 0, i64 0, !dbg !4976
  store i32 1, i32* %arrayinit.begin39, align 4, !dbg !4976
  %arrayinit.element40 = getelementptr inbounds i32, i32* %arrayinit.begin39, i64 1, !dbg !4976
  %26 = load i32, i32* %i, align 4, !dbg !4977
  store i32 %26, i32* %arrayinit.element40, align 4, !dbg !4976
  %arraydecay41 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral38, i32 0, i32 0, !dbg !4978
  %call42 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %24, %struct.GetBitContext* %25, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i32 0, i32 0), i32* %arraydecay41, i32* %value36, i32 0, i32 255), !dbg !4979
  store i32 %call42, i32* %err, align 4, !dbg !4980
  %27 = load i32, i32* %err, align 4, !dbg !4981
  %cmp43 = icmp slt i32 %27, 0, !dbg !4982
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !4981

if.then45:                                        ; preds = %do.body37
  %28 = load i32, i32* %err, align 4, !dbg !4983
  store i32 %28, i32* %retval, align 4, !dbg !4986
  br label %return, !dbg !4986

if.end46:                                         ; preds = %do.body37
  br label %do.end47, !dbg !4987

do.end47:                                         ; preds = %if.end46
  %29 = load i32, i32* %value36, align 4, !dbg !4989
  %conv48 = trunc i32 %29 to i8, !dbg !4989
  store i8 %conv48, i8* %prob, align 1, !dbg !4991
  br label %do.end49, !dbg !4992

do.end49:                                         ; preds = %do.end47
  br label %if.end50, !dbg !4993

if.else:                                          ; preds = %do.end32
  store i8 -1, i8* %prob, align 1, !dbg !4995
  br label %if.end50

if.end50:                                         ; preds = %if.else, %do.end49
  %30 = load i8, i8* %prob, align 1, !dbg !4997
  %31 = load i32, i32* %i, align 4, !dbg !4999
  %idxprom = sext i32 %31 to i64, !dbg !5000
  %32 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5000
  %segmentation_tree_probs = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %32, i32 0, i32 44, !dbg !5001
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %segmentation_tree_probs, i64 0, i64 %idxprom, !dbg !5000
  store i8 %30, i8* %arrayidx, align 1, !dbg !5002
  br label %do.end51, !dbg !5003

do.end51:                                         ; preds = %if.end50
  br label %for.inc, !dbg !5004

for.inc:                                          ; preds = %do.end51
  %33 = load i32, i32* %i, align 4, !dbg !5006
  %inc = add nsw i32 %33, 1, !dbg !5006
  store i32 %inc, i32* %i, align 4, !dbg !5006
  br label %for.cond, !dbg !5008, !llvm.loop !5009

for.end:                                          ; preds = %for.cond
  br label %do.body52, !dbg !5011, !llvm.loop !5012

do.body52:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %value53, metadata !5013, metadata !730), !dbg !5015
  store i32 0, i32* %value53, align 4, !dbg !5016
  br label %do.body54, !dbg !5018, !llvm.loop !5019

do.body54:                                        ; preds = %do.body52
  %34 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5021
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5024
  %call55 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %34, %struct.GetBitContext* %35, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i32* null, i32* %value53, i32 0, i32 1), !dbg !5025
  store i32 %call55, i32* %err, align 4, !dbg !5026
  %36 = load i32, i32* %err, align 4, !dbg !5027
  %cmp56 = icmp slt i32 %36, 0, !dbg !5025
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !5027

if.then58:                                        ; preds = %do.body54
  %37 = load i32, i32* %err, align 4, !dbg !5028
  store i32 %37, i32* %retval, align 4, !dbg !5031
  br label %return, !dbg !5031

if.end59:                                         ; preds = %do.body54
  br label %do.end60, !dbg !5032

do.end60:                                         ; preds = %if.end59
  %38 = load i32, i32* %value53, align 4, !dbg !5034
  %conv61 = trunc i32 %38 to i8, !dbg !5034
  %39 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5036
  %segmentation_temporal_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %39, i32 0, i32 45, !dbg !5037
  store i8 %conv61, i8* %segmentation_temporal_update, align 1, !dbg !5038
  br label %do.end62, !dbg !5039

do.end62:                                         ; preds = %do.end60
  store i32 0, i32* %i, align 4, !dbg !5040
  br label %for.cond63, !dbg !5042

for.cond63:                                       ; preds = %for.inc117, %do.end62
  %40 = load i32, i32* %i, align 4, !dbg !5043
  %cmp64 = icmp slt i32 %40, 3, !dbg !5046
  br i1 %cmp64, label %for.body66, label %for.end119, !dbg !5047

for.body66:                                       ; preds = %for.cond63
  %41 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5048
  %segmentation_temporal_update67 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %41, i32 0, i32 45, !dbg !5051
  %42 = load i8, i8* %segmentation_temporal_update67, align 1, !dbg !5051
  %tobool68 = icmp ne i8 %42, 0, !dbg !5048
  br i1 %tobool68, label %if.then69, label %if.else110, !dbg !5052

if.then69:                                        ; preds = %for.body66
  br label %do.body70, !dbg !5053, !llvm.loop !5054

do.body70:                                        ; preds = %if.then69
  call void @llvm.dbg.declare(metadata i8* %prob_coded71, metadata !5055, metadata !730), !dbg !5057
  call void @llvm.dbg.declare(metadata i8* %prob72, metadata !5058, metadata !730), !dbg !5059
  br label %do.body73, !dbg !5060, !llvm.loop !5062

do.body73:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata i32* %value74, metadata !5064, metadata !730), !dbg !5066
  store i32 0, i32* %value74, align 4, !dbg !5067
  br label %do.body75, !dbg !5069, !llvm.loop !5070

do.body75:                                        ; preds = %do.body73
  %43 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5072
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5075
  %arrayinit.begin77 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral76, i64 0, i64 0, !dbg !5076
  store i32 1, i32* %arrayinit.begin77, align 4, !dbg !5076
  %arrayinit.element78 = getelementptr inbounds i32, i32* %arrayinit.begin77, i64 1, !dbg !5076
  %45 = load i32, i32* %i, align 4, !dbg !5077
  store i32 %45, i32* %arrayinit.element78, align 4, !dbg !5076
  %arraydecay79 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral76, i32 0, i32 0, !dbg !5078
  %call80 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %43, %struct.GetBitContext* %44, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i32 0, i32 0), i32* %arraydecay79, i32* %value74, i32 0, i32 1), !dbg !5079
  store i32 %call80, i32* %err, align 4, !dbg !5080
  %46 = load i32, i32* %err, align 4, !dbg !5081
  %cmp81 = icmp slt i32 %46, 0, !dbg !5082
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !5081

if.then83:                                        ; preds = %do.body75
  %47 = load i32, i32* %err, align 4, !dbg !5083
  store i32 %47, i32* %retval, align 4, !dbg !5086
  br label %return, !dbg !5086

if.end84:                                         ; preds = %do.body75
  br label %do.end85, !dbg !5087

do.end85:                                         ; preds = %if.end84
  %48 = load i32, i32* %value74, align 4, !dbg !5089
  %conv86 = trunc i32 %48 to i8, !dbg !5089
  store i8 %conv86, i8* %prob_coded71, align 1, !dbg !5091
  br label %do.end87, !dbg !5092

do.end87:                                         ; preds = %do.end85
  %49 = load i8, i8* %prob_coded71, align 1, !dbg !5093
  %tobool88 = icmp ne i8 %49, 0, !dbg !5093
  br i1 %tobool88, label %if.then89, label %if.else105, !dbg !5093

if.then89:                                        ; preds = %do.end87
  br label %do.body90, !dbg !5096, !llvm.loop !5098

do.body90:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata i32* %value91, metadata !5100, metadata !730), !dbg !5102
  store i32 0, i32* %value91, align 4, !dbg !5103
  br label %do.body92, !dbg !5105, !llvm.loop !5106

do.body92:                                        ; preds = %do.body90
  %50 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5108
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5111
  %arrayinit.begin94 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral93, i64 0, i64 0, !dbg !5112
  store i32 1, i32* %arrayinit.begin94, align 4, !dbg !5112
  %arrayinit.element95 = getelementptr inbounds i32, i32* %arrayinit.begin94, i64 1, !dbg !5112
  %52 = load i32, i32* %i, align 4, !dbg !5113
  store i32 %52, i32* %arrayinit.element95, align 4, !dbg !5112
  %arraydecay96 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral93, i32 0, i32 0, !dbg !5114
  %call97 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %50, %struct.GetBitContext* %51, i32 8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i32 0, i32 0), i32* %arraydecay96, i32* %value91, i32 0, i32 255), !dbg !5115
  store i32 %call97, i32* %err, align 4, !dbg !5116
  %53 = load i32, i32* %err, align 4, !dbg !5117
  %cmp98 = icmp slt i32 %53, 0, !dbg !5118
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !5117

if.then100:                                       ; preds = %do.body92
  %54 = load i32, i32* %err, align 4, !dbg !5119
  store i32 %54, i32* %retval, align 4, !dbg !5122
  br label %return, !dbg !5122

if.end101:                                        ; preds = %do.body92
  br label %do.end102, !dbg !5123

do.end102:                                        ; preds = %if.end101
  %55 = load i32, i32* %value91, align 4, !dbg !5125
  %conv103 = trunc i32 %55 to i8, !dbg !5125
  store i8 %conv103, i8* %prob72, align 1, !dbg !5127
  br label %do.end104, !dbg !5128

do.end104:                                        ; preds = %do.end102
  br label %if.end106, !dbg !5129

if.else105:                                       ; preds = %do.end87
  store i8 -1, i8* %prob72, align 1, !dbg !5131
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %do.end104
  %56 = load i8, i8* %prob72, align 1, !dbg !5133
  %57 = load i32, i32* %i, align 4, !dbg !5135
  %idxprom107 = sext i32 %57 to i64, !dbg !5136
  %58 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5136
  %segmentation_pred_prob = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %58, i32 0, i32 46, !dbg !5137
  %arrayidx108 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob, i64 0, i64 %idxprom107, !dbg !5136
  store i8 %56, i8* %arrayidx108, align 1, !dbg !5138
  br label %do.end109, !dbg !5139

do.end109:                                        ; preds = %if.end106
  br label %if.end116, !dbg !5140

if.else110:                                       ; preds = %for.body66
  br label %do.body111, !dbg !5142, !llvm.loop !5143

do.body111:                                       ; preds = %if.else110
  %59 = load i32, i32* %i, align 4, !dbg !5144
  %idxprom112 = sext i32 %59 to i64, !dbg !5147
  %60 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5147
  %segmentation_pred_prob113 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %60, i32 0, i32 46, !dbg !5148
  %arrayidx114 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob113, i64 0, i64 %idxprom112, !dbg !5147
  store i8 -1, i8* %arrayidx114, align 1, !dbg !5149
  br label %do.end115, !dbg !5150

do.end115:                                        ; preds = %do.body111
  br label %if.end116

if.end116:                                        ; preds = %do.end115, %do.end109
  br label %for.inc117, !dbg !5151

for.inc117:                                       ; preds = %if.end116
  %61 = load i32, i32* %i, align 4, !dbg !5152
  %inc118 = add nsw i32 %61, 1, !dbg !5152
  store i32 %inc118, i32* %i, align 4, !dbg !5152
  br label %for.cond63, !dbg !5154, !llvm.loop !5155

for.end119:                                       ; preds = %for.cond63
  br label %if.end120, !dbg !5157

if.end120:                                        ; preds = %for.end119, %do.end15
  br label %do.body121, !dbg !5158, !llvm.loop !5159

do.body121:                                       ; preds = %if.end120
  call void @llvm.dbg.declare(metadata i32* %value122, metadata !5160, metadata !730), !dbg !5162
  store i32 0, i32* %value122, align 4, !dbg !5163
  br label %do.body123, !dbg !5165, !llvm.loop !5166

do.body123:                                       ; preds = %do.body121
  %62 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5168
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5171
  %call124 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %62, %struct.GetBitContext* %63, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i32 0, i32 0), i32* null, i32* %value122, i32 0, i32 1), !dbg !5172
  store i32 %call124, i32* %err, align 4, !dbg !5173
  %64 = load i32, i32* %err, align 4, !dbg !5174
  %cmp125 = icmp slt i32 %64, 0, !dbg !5172
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !5174

if.then127:                                       ; preds = %do.body123
  %65 = load i32, i32* %err, align 4, !dbg !5175
  store i32 %65, i32* %retval, align 4, !dbg !5178
  br label %return, !dbg !5178

if.end128:                                        ; preds = %do.body123
  br label %do.end129, !dbg !5179

do.end129:                                        ; preds = %if.end128
  %66 = load i32, i32* %value122, align 4, !dbg !5181
  %conv130 = trunc i32 %66 to i8, !dbg !5181
  %67 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5183
  %segmentation_update_data = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %67, i32 0, i32 47, !dbg !5184
  store i8 %conv130, i8* %segmentation_update_data, align 1, !dbg !5185
  br label %do.end131, !dbg !5186

do.end131:                                        ; preds = %do.end129
  %68 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5187
  %segmentation_update_data132 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %68, i32 0, i32 47, !dbg !5189
  %69 = load i8, i8* %segmentation_update_data132, align 1, !dbg !5189
  %tobool133 = icmp ne i8 %69, 0, !dbg !5187
  br i1 %tobool133, label %if.then134, label %if.end264, !dbg !5190

if.then134:                                       ; preds = %do.end131
  br label %do.body135, !dbg !5191, !llvm.loop !5193

do.body135:                                       ; preds = %if.then134
  call void @llvm.dbg.declare(metadata i32* %value136, metadata !5194, metadata !730), !dbg !5196
  store i32 0, i32* %value136, align 4, !dbg !5197
  br label %do.body137, !dbg !5199, !llvm.loop !5200

do.body137:                                       ; preds = %do.body135
  %70 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5202
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5205
  %call138 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %70, %struct.GetBitContext* %71, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.75, i32 0, i32 0), i32* null, i32* %value136, i32 0, i32 1), !dbg !5206
  store i32 %call138, i32* %err, align 4, !dbg !5207
  %72 = load i32, i32* %err, align 4, !dbg !5208
  %cmp139 = icmp slt i32 %72, 0, !dbg !5206
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !5208

if.then141:                                       ; preds = %do.body137
  %73 = load i32, i32* %err, align 4, !dbg !5209
  store i32 %73, i32* %retval, align 4, !dbg !5212
  br label %return, !dbg !5212

if.end142:                                        ; preds = %do.body137
  br label %do.end143, !dbg !5213

do.end143:                                        ; preds = %if.end142
  %74 = load i32, i32* %value136, align 4, !dbg !5215
  %conv144 = trunc i32 %74 to i8, !dbg !5215
  %75 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5217
  %segmentation_abs_or_delta_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %75, i32 0, i32 48, !dbg !5218
  store i8 %conv144, i8* %segmentation_abs_or_delta_update, align 2, !dbg !5219
  br label %do.end145, !dbg !5220

do.end145:                                        ; preds = %do.end143
  store i32 0, i32* %i, align 4, !dbg !5221
  br label %for.cond146, !dbg !5223

for.cond146:                                      ; preds = %for.inc261, %do.end145
  %76 = load i32, i32* %i, align 4, !dbg !5224
  %cmp147 = icmp slt i32 %76, 8, !dbg !5227
  br i1 %cmp147, label %for.body149, label %for.end263, !dbg !5228

for.body149:                                      ; preds = %for.cond146
  store i32 0, i32* %j, align 4, !dbg !5229
  br label %for.cond150, !dbg !5232

for.cond150:                                      ; preds = %for.inc258, %for.body149
  %77 = load i32, i32* %j, align 4, !dbg !5233
  %cmp151 = icmp slt i32 %77, 4, !dbg !5236
  br i1 %cmp151, label %for.body153, label %for.end260, !dbg !5237

for.body153:                                      ; preds = %for.cond150
  br label %do.body154, !dbg !5238, !llvm.loop !5240

do.body154:                                       ; preds = %for.body153
  call void @llvm.dbg.declare(metadata i32* %value155, metadata !5241, metadata !730), !dbg !5243
  store i32 0, i32* %value155, align 4, !dbg !5244
  br label %do.body156, !dbg !5246, !llvm.loop !5247

do.body156:                                       ; preds = %do.body154
  %78 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5249
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5252
  %arrayinit.begin158 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral157, i64 0, i64 0, !dbg !5253
  store i32 2, i32* %arrayinit.begin158, align 4, !dbg !5253
  %arrayinit.element159 = getelementptr inbounds i32, i32* %arrayinit.begin158, i64 1, !dbg !5253
  %80 = load i32, i32* %i, align 4, !dbg !5254
  store i32 %80, i32* %arrayinit.element159, align 4, !dbg !5253
  %arrayinit.element160 = getelementptr inbounds i32, i32* %arrayinit.element159, i64 1, !dbg !5253
  %81 = load i32, i32* %j, align 4, !dbg !5255
  store i32 %81, i32* %arrayinit.element160, align 4, !dbg !5253
  %arraydecay161 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral157, i32 0, i32 0, !dbg !5256
  %call162 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %78, %struct.GetBitContext* %79, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i32 0, i32 0), i32* %arraydecay161, i32* %value155, i32 0, i32 1), !dbg !5257
  store i32 %call162, i32* %err, align 4, !dbg !5258
  %82 = load i32, i32* %err, align 4, !dbg !5259
  %cmp163 = icmp slt i32 %82, 0, !dbg !5257
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !5259

if.then165:                                       ; preds = %do.body156
  %83 = load i32, i32* %err, align 4, !dbg !5260
  store i32 %83, i32* %retval, align 4, !dbg !5263
  br label %return, !dbg !5263

if.end166:                                        ; preds = %do.body156
  br label %do.end167, !dbg !5264

do.end167:                                        ; preds = %if.end166
  %84 = load i32, i32* %value155, align 4, !dbg !5266
  %conv168 = trunc i32 %84 to i8, !dbg !5266
  %85 = load i32, i32* %j, align 4, !dbg !5268
  %idxprom169 = sext i32 %85 to i64, !dbg !5269
  %86 = load i32, i32* %i, align 4, !dbg !5270
  %idxprom170 = sext i32 %86 to i64, !dbg !5269
  %87 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5269
  %feature_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %87, i32 0, i32 49, !dbg !5271
  %arrayidx171 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_enabled, i64 0, i64 %idxprom170, !dbg !5269
  %arrayidx172 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx171, i64 0, i64 %idxprom169, !dbg !5269
  store i8 %conv168, i8* %arrayidx172, align 1, !dbg !5272
  br label %do.end173, !dbg !5273

do.end173:                                        ; preds = %do.end167
  %88 = load i32, i32* %j, align 4, !dbg !5274
  %idxprom174 = sext i32 %88 to i64, !dbg !5276
  %89 = load i32, i32* %i, align 4, !dbg !5277
  %idxprom175 = sext i32 %89 to i64, !dbg !5276
  %90 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5276
  %feature_enabled176 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %90, i32 0, i32 49, !dbg !5278
  %arrayidx177 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_enabled176, i64 0, i64 %idxprom175, !dbg !5276
  %arrayidx178 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx177, i64 0, i64 %idxprom174, !dbg !5276
  %91 = load i8, i8* %arrayidx178, align 1, !dbg !5276
  %conv179 = zext i8 %91 to i32, !dbg !5276
  %tobool180 = icmp ne i32 %conv179, 0, !dbg !5276
  br i1 %tobool180, label %land.lhs.true, label %if.else242, !dbg !5279

land.lhs.true:                                    ; preds = %do.end173
  %92 = load i32, i32* %j, align 4, !dbg !5280
  %idxprom181 = sext i32 %92 to i64, !dbg !5281
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom181, !dbg !5281
  %93 = load i32, i32* %arrayidx182, align 4, !dbg !5281
  %tobool183 = icmp ne i32 %93, 0, !dbg !5281
  br i1 %tobool183, label %if.then184, label %if.else242, !dbg !5282

if.then184:                                       ; preds = %land.lhs.true
  br label %do.body185, !dbg !5284, !llvm.loop !5286

do.body185:                                       ; preds = %if.then184
  call void @llvm.dbg.declare(metadata i32* %value186, metadata !5287, metadata !730), !dbg !5289
  store i32 0, i32* %value186, align 4, !dbg !5290
  br label %do.body187, !dbg !5292, !llvm.loop !5293

do.body187:                                       ; preds = %do.body185
  %94 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5295
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5298
  %96 = load i32, i32* %j, align 4, !dbg !5299
  %idxprom188 = sext i32 %96 to i64, !dbg !5300
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom188, !dbg !5300
  %97 = load i32, i32* %arrayidx189, align 4, !dbg !5300
  %arrayinit.begin191 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral190, i64 0, i64 0, !dbg !5301
  store i32 2, i32* %arrayinit.begin191, align 4, !dbg !5301
  %arrayinit.element192 = getelementptr inbounds i32, i32* %arrayinit.begin191, i64 1, !dbg !5301
  %98 = load i32, i32* %i, align 4, !dbg !5302
  store i32 %98, i32* %arrayinit.element192, align 4, !dbg !5301
  %arrayinit.element193 = getelementptr inbounds i32, i32* %arrayinit.element192, i64 1, !dbg !5301
  %99 = load i32, i32* %j, align 4, !dbg !5303
  store i32 %99, i32* %arrayinit.element193, align 4, !dbg !5301
  %arraydecay194 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral190, i32 0, i32 0, !dbg !5304
  %100 = load i32, i32* %j, align 4, !dbg !5305
  %idxprom195 = sext i32 %100 to i64, !dbg !5306
  %arrayidx196 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom195, !dbg !5306
  %101 = load i32, i32* %arrayidx196, align 4, !dbg !5306
  %shl = shl i32 1, %101, !dbg !5307
  %sub = sub nsw i32 %shl, 1, !dbg !5308
  %call197 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %94, %struct.GetBitContext* %95, i32 %97, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i32 0, i32 0), i32* %arraydecay194, i32* %value186, i32 0, i32 %sub), !dbg !5309
  store i32 %call197, i32* %err, align 4, !dbg !5310
  %102 = load i32, i32* %err, align 4, !dbg !5311
  %cmp198 = icmp slt i32 %102, 0, !dbg !5312
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !5311

if.then200:                                       ; preds = %do.body187
  %103 = load i32, i32* %err, align 4, !dbg !5313
  store i32 %103, i32* %retval, align 4, !dbg !5316
  br label %return, !dbg !5316

if.end201:                                        ; preds = %do.body187
  br label %do.end202, !dbg !5317

do.end202:                                        ; preds = %if.end201
  %104 = load i32, i32* %value186, align 4, !dbg !5319
  %conv203 = trunc i32 %104 to i8, !dbg !5319
  %105 = load i32, i32* %j, align 4, !dbg !5321
  %idxprom204 = sext i32 %105 to i64, !dbg !5322
  %106 = load i32, i32* %i, align 4, !dbg !5323
  %idxprom205 = sext i32 %106 to i64, !dbg !5322
  %107 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5322
  %feature_value = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %107, i32 0, i32 50, !dbg !5324
  %arrayidx206 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_value, i64 0, i64 %idxprom205, !dbg !5322
  %arrayidx207 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx206, i64 0, i64 %idxprom204, !dbg !5322
  store i8 %conv203, i8* %arrayidx207, align 1, !dbg !5325
  br label %do.end208, !dbg !5326

do.end208:                                        ; preds = %do.end202
  %108 = load i32, i32* %j, align 4, !dbg !5327
  %idxprom209 = sext i32 %108 to i64, !dbg !5329
  %arrayidx210 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_signed, i64 0, i64 %idxprom209, !dbg !5329
  %109 = load i32, i32* %arrayidx210, align 4, !dbg !5329
  %tobool211 = icmp ne i32 %109, 0, !dbg !5329
  br i1 %tobool211, label %if.then212, label %if.else233, !dbg !5330

if.then212:                                       ; preds = %do.end208
  br label %do.body213, !dbg !5331, !llvm.loop !5332

do.body213:                                       ; preds = %if.then212
  call void @llvm.dbg.declare(metadata i32* %value214, metadata !5333, metadata !730), !dbg !5335
  store i32 0, i32* %value214, align 4, !dbg !5336
  br label %do.body215, !dbg !5338, !llvm.loop !5339

do.body215:                                       ; preds = %do.body213
  %110 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5341
  %111 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5344
  %arrayinit.begin217 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral216, i64 0, i64 0, !dbg !5345
  store i32 2, i32* %arrayinit.begin217, align 4, !dbg !5345
  %arrayinit.element218 = getelementptr inbounds i32, i32* %arrayinit.begin217, i64 1, !dbg !5345
  %112 = load i32, i32* %i, align 4, !dbg !5346
  store i32 %112, i32* %arrayinit.element218, align 4, !dbg !5345
  %arrayinit.element219 = getelementptr inbounds i32, i32* %arrayinit.element218, i64 1, !dbg !5345
  %113 = load i32, i32* %j, align 4, !dbg !5347
  store i32 %113, i32* %arrayinit.element219, align 4, !dbg !5345
  %arraydecay220 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral216, i32 0, i32 0, !dbg !5348
  %call221 = call i32 @ff_cbs_read_unsigned(%struct.CodedBitstreamContext* %110, %struct.GetBitContext* %111, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i32* %arraydecay220, i32* %value214, i32 0, i32 1), !dbg !5349
  store i32 %call221, i32* %err, align 4, !dbg !5350
  %114 = load i32, i32* %err, align 4, !dbg !5351
  %cmp222 = icmp slt i32 %114, 0, !dbg !5349
  br i1 %cmp222, label %if.then224, label %if.end225, !dbg !5351

if.then224:                                       ; preds = %do.body215
  %115 = load i32, i32* %err, align 4, !dbg !5352
  store i32 %115, i32* %retval, align 4, !dbg !5355
  br label %return, !dbg !5355

if.end225:                                        ; preds = %do.body215
  br label %do.end226, !dbg !5356

do.end226:                                        ; preds = %if.end225
  %116 = load i32, i32* %value214, align 4, !dbg !5358
  %conv227 = trunc i32 %116 to i8, !dbg !5358
  %117 = load i32, i32* %j, align 4, !dbg !5360
  %idxprom228 = sext i32 %117 to i64, !dbg !5361
  %118 = load i32, i32* %i, align 4, !dbg !5362
  %idxprom229 = sext i32 %118 to i64, !dbg !5361
  %119 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5361
  %feature_sign = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %119, i32 0, i32 51, !dbg !5363
  %arrayidx230 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign, i64 0, i64 %idxprom229, !dbg !5361
  %arrayidx231 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx230, i64 0, i64 %idxprom228, !dbg !5361
  store i8 %conv227, i8* %arrayidx231, align 1, !dbg !5364
  br label %do.end232, !dbg !5365

do.end232:                                        ; preds = %do.end226
  br label %if.end241, !dbg !5366

if.else233:                                       ; preds = %do.end208
  br label %do.body234, !dbg !5368, !llvm.loop !5369

do.body234:                                       ; preds = %if.else233
  %120 = load i32, i32* %j, align 4, !dbg !5370
  %idxprom235 = sext i32 %120 to i64, !dbg !5373
  %121 = load i32, i32* %i, align 4, !dbg !5374
  %idxprom236 = sext i32 %121 to i64, !dbg !5373
  %122 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5373
  %feature_sign237 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %122, i32 0, i32 51, !dbg !5375
  %arrayidx238 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign237, i64 0, i64 %idxprom236, !dbg !5373
  %arrayidx239 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx238, i64 0, i64 %idxprom235, !dbg !5373
  store i8 0, i8* %arrayidx239, align 1, !dbg !5376
  br label %do.end240, !dbg !5377

do.end240:                                        ; preds = %do.body234
  br label %if.end241

if.end241:                                        ; preds = %do.end240, %do.end232
  br label %if.end257, !dbg !5378

if.else242:                                       ; preds = %land.lhs.true, %do.end173
  br label %do.body243, !dbg !5379, !llvm.loop !5381

do.body243:                                       ; preds = %if.else242
  %123 = load i32, i32* %j, align 4, !dbg !5382
  %idxprom244 = sext i32 %123 to i64, !dbg !5385
  %124 = load i32, i32* %i, align 4, !dbg !5386
  %idxprom245 = sext i32 %124 to i64, !dbg !5385
  %125 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5385
  %feature_value246 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %125, i32 0, i32 50, !dbg !5387
  %arrayidx247 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_value246, i64 0, i64 %idxprom245, !dbg !5385
  %arrayidx248 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx247, i64 0, i64 %idxprom244, !dbg !5385
  store i8 0, i8* %arrayidx248, align 1, !dbg !5388
  br label %do.end249, !dbg !5389

do.end249:                                        ; preds = %do.body243
  br label %do.body250, !dbg !5390, !llvm.loop !5391

do.body250:                                       ; preds = %do.end249
  %126 = load i32, i32* %j, align 4, !dbg !5392
  %idxprom251 = sext i32 %126 to i64, !dbg !5395
  %127 = load i32, i32* %i, align 4, !dbg !5396
  %idxprom252 = sext i32 %127 to i64, !dbg !5395
  %128 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5395
  %feature_sign253 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %128, i32 0, i32 51, !dbg !5397
  %arrayidx254 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign253, i64 0, i64 %idxprom252, !dbg !5395
  %arrayidx255 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx254, i64 0, i64 %idxprom251, !dbg !5395
  store i8 0, i8* %arrayidx255, align 1, !dbg !5398
  br label %do.end256, !dbg !5399

do.end256:                                        ; preds = %do.body250
  br label %if.end257

if.end257:                                        ; preds = %do.end256, %if.end241
  br label %for.inc258, !dbg !5400

for.inc258:                                       ; preds = %if.end257
  %129 = load i32, i32* %j, align 4, !dbg !5401
  %inc259 = add nsw i32 %129, 1, !dbg !5401
  store i32 %inc259, i32* %j, align 4, !dbg !5401
  br label %for.cond150, !dbg !5403, !llvm.loop !5404

for.end260:                                       ; preds = %for.cond150
  br label %for.inc261, !dbg !5406

for.inc261:                                       ; preds = %for.end260
  %130 = load i32, i32* %i, align 4, !dbg !5407
  %inc262 = add nsw i32 %130, 1, !dbg !5407
  store i32 %inc262, i32* %i, align 4, !dbg !5407
  br label %for.cond146, !dbg !5409, !llvm.loop !5410

for.end263:                                       ; preds = %for.cond146
  br label %if.end264, !dbg !5412

if.end264:                                        ; preds = %for.end263, %do.end131
  br label %if.end265, !dbg !5413

if.end265:                                        ; preds = %if.end264, %do.end2
  store i32 0, i32* %retval, align 4, !dbg !5414
  br label %return, !dbg !5414

return:                                           ; preds = %if.end265, %if.then224, %if.then200, %if.then165, %if.then141, %if.then127, %if.then100, %if.then83, %if.then58, %if.then45, %if.then28, %if.then11, %if.then
  %131 = load i32, i32* %retval, align 4, !dbg !5415
  ret i32 %131, !dbg !5415
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_tile_info(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !5416 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.GetBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %min_log2_tile_cols = alloca i32, align 4
  %max_log2_tile_cols = alloca i32, align 4
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  %value16 = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !5417, metadata !730), !dbg !5418
  store %struct.GetBitContext* %rw, %struct.GetBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %rw.addr, metadata !5419, metadata !730), !dbg !5420
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !5421, metadata !730), !dbg !5422
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !5423, metadata !730), !dbg !5424
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5425
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !5426
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5426
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !5425
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !5424
  call void @llvm.dbg.declare(metadata i32* %min_log2_tile_cols, metadata !5427, metadata !730), !dbg !5428
  call void @llvm.dbg.declare(metadata i32* %max_log2_tile_cols, metadata !5429, metadata !730), !dbg !5430
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5431, metadata !730), !dbg !5432
  store i32 0, i32* %min_log2_tile_cols, align 4, !dbg !5433
  br label %while.cond, !dbg !5434

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !5435
  %shl = shl i32 64, %3, !dbg !5437
  %4 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !5438
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %4, i32 0, i32 3, !dbg !5439
  %5 = load i16, i16* %sb64_cols, align 8, !dbg !5439
  %conv = zext i16 %5 to i32, !dbg !5438
  %cmp = icmp slt i32 %shl, %conv, !dbg !5440
  br i1 %cmp, label %while.body, label %while.end, !dbg !5441

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !5442
  %inc = add nsw i32 %6, 1, !dbg !5442
  store i32 %inc, i32* %min_log2_tile_cols, align 4, !dbg !5442
  br label %while.cond, !dbg !5443, !llvm.loop !5445

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %max_log2_tile_cols, align 4, !dbg !5446
  br label %while.cond2, !dbg !5447

while.cond2:                                      ; preds = %while.body7, %while.end
  %7 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !5448
  %sb64_cols3 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %7, i32 0, i32 3, !dbg !5449
  %8 = load i16, i16* %sb64_cols3, align 8, !dbg !5449
  %conv4 = zext i16 %8 to i32, !dbg !5448
  %9 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !5450
  %add = add nsw i32 %9, 1, !dbg !5451
  %shr = ashr i32 %conv4, %add, !dbg !5452
  %cmp5 = icmp sge i32 %shr, 4, !dbg !5453
  br i1 %cmp5, label %while.body7, label %while.end9, !dbg !5454

while.body7:                                      ; preds = %while.cond2
  %10 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !5455
  %inc8 = add nsw i32 %10, 1, !dbg !5455
  store i32 %inc8, i32* %max_log2_tile_cols, align 4, !dbg !5455
  br label %while.cond2, !dbg !5456, !llvm.loop !5457

while.end9:                                       ; preds = %while.cond2
  br label %do.body, !dbg !5458, !llvm.loop !5459

do.body:                                          ; preds = %while.end9
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5460, metadata !730), !dbg !5462
  store i32 0, i32* %value, align 4, !dbg !5463
  br label %do.body10, !dbg !5465, !llvm.loop !5466

do.body10:                                        ; preds = %do.body
  %11 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5468
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5471
  %13 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !5472
  %14 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !5473
  %call = call i32 @cbs_vp9_read_increment(%struct.CodedBitstreamContext* %11, %struct.GetBitContext* %12, i32 %13, i32 %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i32 0, i32 0), i32* %value), !dbg !5474
  store i32 %call, i32* %err, align 4, !dbg !5475
  %15 = load i32, i32* %err, align 4, !dbg !5476
  %cmp11 = icmp slt i32 %15, 0, !dbg !5477
  br i1 %cmp11, label %if.then, label %if.end, !dbg !5476

if.then:                                          ; preds = %do.body10
  %16 = load i32, i32* %err, align 4, !dbg !5478
  store i32 %16, i32* %retval, align 4, !dbg !5481
  br label %return, !dbg !5481

if.end:                                           ; preds = %do.body10
  br label %do.end, !dbg !5482

do.end:                                           ; preds = %if.end
  %17 = load i32, i32* %value, align 4, !dbg !5484
  %conv13 = trunc i32 %17 to i8, !dbg !5484
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5486
  %tile_cols_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 52, !dbg !5487
  store i8 %conv13, i8* %tile_cols_log2, align 1, !dbg !5488
  br label %do.end14, !dbg !5489

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !5490, !llvm.loop !5491

do.body15:                                        ; preds = %do.end14
  call void @llvm.dbg.declare(metadata i32* %value16, metadata !5492, metadata !730), !dbg !5494
  store i32 0, i32* %value16, align 4, !dbg !5495
  br label %do.body17, !dbg !5497, !llvm.loop !5498

do.body17:                                        ; preds = %do.body15
  %19 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5500
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %rw.addr, align 8, !dbg !5503
  %call18 = call i32 @cbs_vp9_read_increment(%struct.CodedBitstreamContext* %19, %struct.GetBitContext* %20, i32 0, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i32* %value16), !dbg !5504
  store i32 %call18, i32* %err, align 4, !dbg !5505
  %21 = load i32, i32* %err, align 4, !dbg !5506
  %cmp19 = icmp slt i32 %21, 0, !dbg !5507
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5506

if.then21:                                        ; preds = %do.body17
  %22 = load i32, i32* %err, align 4, !dbg !5508
  store i32 %22, i32* %retval, align 4, !dbg !5511
  br label %return, !dbg !5511

if.end22:                                         ; preds = %do.body17
  br label %do.end23, !dbg !5512

do.end23:                                         ; preds = %if.end22
  %23 = load i32, i32* %value16, align 4, !dbg !5514
  %conv24 = trunc i32 %23 to i8, !dbg !5514
  %24 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5516
  %tile_rows_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %24, i32 0, i32 53, !dbg !5517
  store i8 %conv24, i8* %tile_rows_log2, align 2, !dbg !5518
  br label %do.end25, !dbg !5519

do.end25:                                         ; preds = %do.end23
  store i32 0, i32* %retval, align 4, !dbg !5520
  br label %return, !dbg !5520

return:                                           ; preds = %do.end25, %if.then21, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !5521
  ret i32 %25, !dbg !5521
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_s(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %gbc, i32 %width, i8* %name, i32* %subscripts, i32* %write_to) #0 !dbg !5522 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %width.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %subscripts.addr = alloca i32*, align 8
  %write_to.addr = alloca i32*, align 8
  %magnitude = alloca i32, align 4
  %position = alloca i32, align 4
  %sign = alloca i32, align 4
  %value = alloca i32, align 4
  %bits = alloca [33 x i8], align 16
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !5526, metadata !730), !dbg !5527
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !5528, metadata !730), !dbg !5529
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5530, metadata !730), !dbg !5531
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5532, metadata !730), !dbg !5533
  store i32* %subscripts, i32** %subscripts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %subscripts.addr, metadata !5534, metadata !730), !dbg !5535
  store i32* %write_to, i32** %write_to.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %write_to.addr, metadata !5536, metadata !730), !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %magnitude, metadata !5538, metadata !730), !dbg !5539
  call void @llvm.dbg.declare(metadata i32* %position, metadata !5540, metadata !730), !dbg !5541
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !5542, metadata !730), !dbg !5543
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5544, metadata !730), !dbg !5545
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5546
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 5, !dbg !5548
  %1 = load i32, i32* %trace_enable, align 4, !dbg !5548
  %tobool = icmp ne i32 %1, 0, !dbg !5546
  br i1 %tobool, label %if.then, label %if.end, !dbg !5549

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5550
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !5551
  store i32 %call, i32* %position, align 4, !dbg !5552
  br label %if.end, !dbg !5553

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5554
  %call1 = call i32 @get_bits_left(%struct.GetBitContext* %3), !dbg !5556
  %4 = load i32, i32* %width.addr, align 4, !dbg !5557
  %add = add nsw i32 %4, 1, !dbg !5558
  %cmp = icmp slt i32 %call1, %add, !dbg !5559
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5560

if.then2:                                         ; preds = %if.end
  %5 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5561
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %5, i32 0, i32 0, !dbg !5563
  %6 = load i8*, i8** %log_ctx, align 8, !dbg !5563
  %7 = load i8*, i8** %name.addr, align 8, !dbg !5564
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.59, i32 0, i32 0), i8* %7), !dbg !5565
  store i32 -1094995529, i32* %retval, align 4, !dbg !5566
  br label %return, !dbg !5566

if.end3:                                          ; preds = %if.end
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5567
  %9 = load i32, i32* %width.addr, align 4, !dbg !5568
  %call4 = call i32 @get_bits(%struct.GetBitContext* %8, i32 %9), !dbg !5569
  store i32 %call4, i32* %magnitude, align 4, !dbg !5570
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5571
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !5572
  store i32 %call5, i32* %sign, align 4, !dbg !5573
  %11 = load i32, i32* %sign, align 4, !dbg !5574
  %tobool6 = icmp ne i32 %11, 0, !dbg !5574
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !5574

cond.true:                                        ; preds = %if.end3
  %12 = load i32, i32* %magnitude, align 4, !dbg !5575
  %sub = sub nsw i32 0, %12, !dbg !5577
  br label %cond.end, !dbg !5578

cond.false:                                       ; preds = %if.end3
  %13 = load i32, i32* %magnitude, align 4, !dbg !5579
  br label %cond.end, !dbg !5581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %13, %cond.false ], !dbg !5582
  store i32 %cond, i32* %value, align 4, !dbg !5584
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5585
  %trace_enable7 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %14, i32 0, i32 5, !dbg !5587
  %15 = load i32, i32* %trace_enable7, align 4, !dbg !5587
  %tobool8 = icmp ne i32 %15, 0, !dbg !5585
  br i1 %tobool8, label %if.then9, label %if.end24, !dbg !5588

if.then9:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [33 x i8]* %bits, metadata !5589, metadata !730), !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5592, metadata !730), !dbg !5593
  store i32 0, i32* %i, align 4, !dbg !5594
  br label %for.cond, !dbg !5596

for.cond:                                         ; preds = %for.inc, %if.then9
  %16 = load i32, i32* %i, align 4, !dbg !5597
  %17 = load i32, i32* %width.addr, align 4, !dbg !5600
  %cmp10 = icmp slt i32 %16, %17, !dbg !5601
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5602

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %magnitude, align 4, !dbg !5603
  %19 = load i32, i32* %width.addr, align 4, !dbg !5604
  %20 = load i32, i32* %i, align 4, !dbg !5605
  %sub11 = sub nsw i32 %19, %20, !dbg !5606
  %sub12 = sub nsw i32 %sub11, 1, !dbg !5607
  %shr = lshr i32 %18, %sub12, !dbg !5608
  %and = and i32 %shr, 1, !dbg !5609
  %tobool13 = icmp ne i32 %and, 0, !dbg !5603
  %cond14 = select i1 %tobool13, i32 49, i32 48, !dbg !5603
  %conv = trunc i32 %cond14 to i8, !dbg !5603
  %21 = load i32, i32* %i, align 4, !dbg !5610
  %idxprom = sext i32 %21 to i64, !dbg !5611
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom, !dbg !5611
  store i8 %conv, i8* %arrayidx, align 1, !dbg !5612
  br label %for.inc, !dbg !5611

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !5613
  %inc = add nsw i32 %22, 1, !dbg !5613
  store i32 %inc, i32* %i, align 4, !dbg !5613
  br label %for.cond, !dbg !5615, !llvm.loop !5616

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %sign, align 4, !dbg !5618
  %tobool15 = icmp ne i32 %23, 0, !dbg !5618
  %cond16 = select i1 %tobool15, i32 49, i32 48, !dbg !5618
  %conv17 = trunc i32 %cond16 to i8, !dbg !5618
  %24 = load i32, i32* %i, align 4, !dbg !5619
  %idxprom18 = sext i32 %24 to i64, !dbg !5620
  %arrayidx19 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom18, !dbg !5620
  store i8 %conv17, i8* %arrayidx19, align 1, !dbg !5621
  %25 = load i32, i32* %i, align 4, !dbg !5622
  %add20 = add nsw i32 %25, 1, !dbg !5623
  %idxprom21 = sext i32 %add20 to i64, !dbg !5624
  %arrayidx22 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom21, !dbg !5624
  store i8 0, i8* %arrayidx22, align 1, !dbg !5625
  %26 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5626
  %27 = load i32, i32* %position, align 4, !dbg !5627
  %28 = load i8*, i8** %name.addr, align 8, !dbg !5628
  %29 = load i32*, i32** %subscripts.addr, align 8, !dbg !5629
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i32 0, i32 0, !dbg !5630
  %30 = load i32, i32* %value, align 4, !dbg !5631
  %conv23 = sext i32 %30 to i64, !dbg !5631
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %26, i32 %27, i8* %28, i32* %29, i8* %arraydecay, i64 %conv23), !dbg !5632
  br label %if.end24, !dbg !5633

if.end24:                                         ; preds = %for.end, %cond.end
  %31 = load i32, i32* %value, align 4, !dbg !5634
  %32 = load i32*, i32** %write_to.addr, align 8, !dbg !5635
  store i32 %31, i32* %32, align 4, !dbg !5636
  store i32 0, i32* %retval, align 4, !dbg !5637
  br label %return, !dbg !5637

return:                                           ; preds = %if.end24, %if.then2
  %33 = load i32, i32* %retval, align 4, !dbg !5638
  ret i32 %33, !dbg !5638
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #2 !dbg !5639 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5642, metadata !730), !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5644, metadata !730), !dbg !5645
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5646
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5647
  %1 = load i32, i32* %index1, align 8, !dbg !5647
  store i32 %1, i32* %index, align 4, !dbg !5645
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5648, metadata !730), !dbg !5649
  %2 = load i32, i32* %index, align 4, !dbg !5650
  %shr = lshr i32 %2, 3, !dbg !5651
  %idxprom = zext i32 %shr to i64, !dbg !5652
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5652
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !5653
  %4 = load i8*, i8** %buffer, align 8, !dbg !5653
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5652
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5652
  store i8 %5, i8* %result, align 1, !dbg !5649
  %6 = load i32, i32* %index, align 4, !dbg !5654
  %and = and i32 %6, 7, !dbg !5655
  %7 = load i8, i8* %result, align 1, !dbg !5656
  %conv = zext i8 %7 to i32, !dbg !5656
  %shl = shl i32 %conv, %and, !dbg !5656
  %conv2 = trunc i32 %shl to i8, !dbg !5656
  store i8 %conv2, i8* %result, align 1, !dbg !5656
  %8 = load i8, i8* %result, align 1, !dbg !5657
  %conv3 = zext i8 %8 to i32, !dbg !5657
  %shr4 = ashr i32 %conv3, 7, !dbg !5657
  %conv5 = trunc i32 %shr4 to i8, !dbg !5657
  store i8 %conv5, i8* %result, align 1, !dbg !5657
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5658
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !5660
  %10 = load i32, i32* %index6, align 8, !dbg !5660
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5661
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !5662
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5662
  %cmp = icmp slt i32 %10, %12, !dbg !5663
  br i1 %cmp, label %if.then, label %if.end, !dbg !5664

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !5665
  %inc = add i32 %13, 1, !dbg !5665
  store i32 %inc, i32* %index, align 4, !dbg !5665
  br label %if.end, !dbg !5666

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !5667
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5668
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5669
  store i32 %14, i32* %index8, align 8, !dbg !5670
  %16 = load i8, i8* %result, align 1, !dbg !5671
  %conv9 = zext i8 %16 to i32, !dbg !5671
  ret i32 %conv9, !dbg !5672
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_read_increment(%struct.CodedBitstreamContext* %ctx, %struct.GetBitContext* %gbc, i32 %range_min, i32 %range_max, i8* %name, i32* %write_to) #0 !dbg !5673 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %range_min.addr = alloca i32, align 4
  %range_max.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %write_to.addr = alloca i32*, align 8
  %value = alloca i32, align 4
  %position = alloca i32, align 4
  %i = alloca i32, align 4
  %bits = alloca [8 x i8], align 1
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !5676, metadata !730), !dbg !5677
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !5678, metadata !730), !dbg !5679
  store i32 %range_min, i32* %range_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_min.addr, metadata !5680, metadata !730), !dbg !5681
  store i32 %range_max, i32* %range_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_max.addr, metadata !5682, metadata !730), !dbg !5683
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5684, metadata !730), !dbg !5685
  store i32* %write_to, i32** %write_to.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %write_to.addr, metadata !5686, metadata !730), !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5688, metadata !730), !dbg !5689
  call void @llvm.dbg.declare(metadata i32* %position, metadata !5690, metadata !730), !dbg !5691
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5692, metadata !730), !dbg !5693
  call void @llvm.dbg.declare(metadata [8 x i8]* %bits, metadata !5694, metadata !730), !dbg !5696
  br label %do.body, !dbg !5697, !llvm.loop !5698

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %range_min.addr, align 4, !dbg !5699
  %1 = load i32, i32* %range_max.addr, align 4, !dbg !5703
  %cmp = icmp ule i32 %0, %1, !dbg !5704
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !5705

land.lhs.true:                                    ; preds = %do.body
  %2 = load i32, i32* %range_max.addr, align 4, !dbg !5706
  %3 = load i32, i32* %range_min.addr, align 4, !dbg !5708
  %sub = sub i32 %2, %3, !dbg !5709
  %conv = zext i32 %sub to i64, !dbg !5706
  %cmp1 = icmp ult i64 %conv, 7, !dbg !5710
  br i1 %cmp1, label %if.end, label %if.then, !dbg !5711

if.then:                                          ; preds = %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 103), !dbg !5712
  call void @abort() #6, !dbg !5715
  unreachable, !dbg !5717

if.end:                                           ; preds = %land.lhs.true
  br label %do.end, !dbg !5718

do.end:                                           ; preds = %if.end
  %4 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5720
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %4, i32 0, i32 5, !dbg !5722
  %5 = load i32, i32* %trace_enable, align 4, !dbg !5722
  %tobool = icmp ne i32 %5, 0, !dbg !5720
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5723

if.then3:                                         ; preds = %do.end
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5724
  %call = call i32 @get_bits_count(%struct.GetBitContext* %6), !dbg !5725
  store i32 %call, i32* %position, align 4, !dbg !5726
  br label %if.end4, !dbg !5727

if.end4:                                          ; preds = %if.then3, %do.end
  store i32 0, i32* %i, align 4, !dbg !5728
  %7 = load i32, i32* %range_min.addr, align 4, !dbg !5730
  store i32 %7, i32* %value, align 4, !dbg !5731
  br label %for.cond, !dbg !5732

for.cond:                                         ; preds = %if.end19, %if.end4
  %8 = load i32, i32* %value, align 4, !dbg !5733
  %9 = load i32, i32* %range_max.addr, align 4, !dbg !5736
  %cmp5 = icmp ult i32 %8, %9, !dbg !5737
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5738

for.body:                                         ; preds = %for.cond
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5739
  %call7 = call i32 @get_bits_left(%struct.GetBitContext* %10), !dbg !5742
  %cmp8 = icmp slt i32 %call7, 1, !dbg !5743
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !5744

if.then10:                                        ; preds = %for.body
  %11 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5745
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %11, i32 0, i32 0, !dbg !5747
  %12 = load i8*, i8** %log_ctx, align 8, !dbg !5747
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5748
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.82, i32 0, i32 0), i8* %13), !dbg !5749
  store i32 -1094995529, i32* %retval, align 4, !dbg !5750
  br label %return, !dbg !5750

if.end11:                                         ; preds = %for.body
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !5751
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %14), !dbg !5753
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5753
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !5754

if.then14:                                        ; preds = %if.end11
  %15 = load i32, i32* %i, align 4, !dbg !5755
  %inc = add nsw i32 %15, 1, !dbg !5755
  store i32 %inc, i32* %i, align 4, !dbg !5755
  %idxprom = sext i32 %15 to i64, !dbg !5757
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom, !dbg !5757
  store i8 49, i8* %arrayidx, align 1, !dbg !5758
  %16 = load i32, i32* %value, align 4, !dbg !5759
  %inc15 = add i32 %16, 1, !dbg !5759
  store i32 %inc15, i32* %value, align 4, !dbg !5759
  br label %if.end19, !dbg !5760

if.else:                                          ; preds = %if.end11
  %17 = load i32, i32* %i, align 4, !dbg !5761
  %inc16 = add nsw i32 %17, 1, !dbg !5761
  store i32 %inc16, i32* %i, align 4, !dbg !5761
  %idxprom17 = sext i32 %17 to i64, !dbg !5763
  %arrayidx18 = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom17, !dbg !5763
  store i8 48, i8* %arrayidx18, align 1, !dbg !5764
  br label %for.end, !dbg !5765

if.end19:                                         ; preds = %if.then14
  br label %for.cond, !dbg !5766, !llvm.loop !5768

for.end:                                          ; preds = %if.else, %for.cond
  %18 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5770
  %trace_enable20 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %18, i32 0, i32 5, !dbg !5772
  %19 = load i32, i32* %trace_enable20, align 4, !dbg !5772
  %tobool21 = icmp ne i32 %19, 0, !dbg !5770
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !5773

if.then22:                                        ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !5774
  %idxprom23 = sext i32 %20 to i64, !dbg !5776
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom23, !dbg !5776
  store i8 0, i8* %arrayidx24, align 1, !dbg !5777
  %21 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5778
  %22 = load i32, i32* %position, align 4, !dbg !5779
  %23 = load i8*, i8** %name.addr, align 8, !dbg !5780
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i32 0, i32 0, !dbg !5781
  %24 = load i32, i32* %value, align 4, !dbg !5782
  %conv25 = zext i32 %24 to i64, !dbg !5782
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %21, i32 %22, i8* %23, i32* null, i8* %arraydecay, i64 %conv25), !dbg !5783
  br label %if.end26, !dbg !5784

if.end26:                                         ; preds = %if.then22, %for.end
  %25 = load i32, i32* %value, align 4, !dbg !5785
  %26 = load i32*, i32** %write_to.addr, align 8, !dbg !5786
  store i32 %25, i32* %26, align 4, !dbg !5787
  store i32 0, i32* %retval, align 4, !dbg !5788
  br label %return, !dbg !5788

return:                                           ; preds = %if.end26, %if.then10
  %27 = load i32, i32* %retval, align 4, !dbg !5789
  ret i32 %27, !dbg !5789
}

declare i32 @av_reallocp(i8*, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #2 !dbg !5790 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5793, metadata !730), !dbg !5794
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5795, metadata !730), !dbg !5796
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !5797, metadata !730), !dbg !5798
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !5799
  %cmp = icmp slt i32 %0, 0, !dbg !5801
  br i1 %cmp, label %if.then, label %if.end, !dbg !5802

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !5803
  store i8* null, i8** %buffer.addr, align 8, !dbg !5805
  br label %if.end, !dbg !5806

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !5807
  %mul = mul nsw i32 8, %1, !dbg !5808
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5809
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !5810
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !5811
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !5812
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5813
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !5814
  store i8* %3, i8** %buf, align 8, !dbg !5815
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5816
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !5817
  %6 = load i8*, i8** %buf1, align 8, !dbg !5817
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !5818
  %idx.ext = sext i32 %7 to i64, !dbg !5819
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !5819
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5820
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !5821
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !5822
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5823
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !5824
  %10 = load i8*, i8** %buf2, align 8, !dbg !5824
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5825
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !5826
  store i8* %10, i8** %buf_ptr, align 8, !dbg !5827
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5828
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !5829
  store i32 32, i32* %bit_left, align 4, !dbg !5830
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5831
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !5832
  store i32 0, i32* %bit_buf, align 8, !dbg !5833
  ret void, !dbg !5834
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_frame(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrame* %current) #0 !dbg !5835 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrame*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !5838, metadata !730), !dbg !5839
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !5840, metadata !730), !dbg !5841
  store %struct.VP9RawFrame* %current, %struct.VP9RawFrame** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrame** %current.addr, metadata !5842, metadata !730), !dbg !5843
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5844, metadata !730), !dbg !5845
  br label %do.body, !dbg !5846, !llvm.loop !5847

do.body:                                          ; preds = %entry
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5848
  call void @ff_cbs_trace_header(%struct.CodedBitstreamContext* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0)), !dbg !5851
  br label %do.end, !dbg !5852

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !5853, !llvm.loop !5854

do.body1:                                         ; preds = %do.end
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5855
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !5858
  %3 = load %struct.VP9RawFrame*, %struct.VP9RawFrame** %current.addr, align 8, !dbg !5859
  %header = getelementptr inbounds %struct.VP9RawFrame, %struct.VP9RawFrame* %3, i32 0, i32 0, !dbg !5860
  %call = call i32 @cbs_vp9_write_uncompressed_header(%struct.CodedBitstreamContext* %1, %struct.PutBitContext* %2, %struct.VP9RawFrameHeader* %header), !dbg !5861
  store i32 %call, i32* %err, align 4, !dbg !5862
  %4 = load i32, i32* %err, align 4, !dbg !5863
  %cmp = icmp slt i32 %4, 0, !dbg !5864
  br i1 %cmp, label %if.then, label %if.end, !dbg !5863

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !5865
  store i32 %5, i32* %retval, align 4, !dbg !5868
  br label %return, !dbg !5868

if.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !5869

do.end2:                                          ; preds = %if.end
  br label %do.body3, !dbg !5871, !llvm.loop !5872

do.body3:                                         ; preds = %do.end2
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5873
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !5876
  %call4 = call i32 @cbs_vp9_write_trailing_bits(%struct.CodedBitstreamContext* %6, %struct.PutBitContext* %7), !dbg !5877
  store i32 %call4, i32* %err, align 4, !dbg !5878
  %8 = load i32, i32* %err, align 4, !dbg !5879
  %cmp5 = icmp slt i32 %8, 0, !dbg !5880
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5879

if.then6:                                         ; preds = %do.body3
  %9 = load i32, i32* %err, align 4, !dbg !5881
  store i32 %9, i32* %retval, align 4, !dbg !5884
  br label %return, !dbg !5884

if.end7:                                          ; preds = %do.body3
  br label %do.end8, !dbg !5885

do.end8:                                          ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !5887
  br label %return, !dbg !5887

return:                                           ; preds = %do.end8, %if.then6, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5888
  ret i32 %10, !dbg !5888
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #2 !dbg !5889 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5892, metadata !730), !dbg !5893
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5894
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !5895
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !5895
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5896
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !5897
  %3 = load i8*, i8** %buf, align 8, !dbg !5897
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !5898
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !5898
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5898
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !5899
  %add = add nsw i64 %mul, 32, !dbg !5900
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5901
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !5902
  %5 = load i32, i32* %bit_left, align 4, !dbg !5902
  %conv = sext i32 %5 to i64, !dbg !5901
  %sub = sub nsw i64 %add, %conv, !dbg !5903
  %conv1 = trunc i64 %sub to i32, !dbg !5904
  ret i32 %conv1, !dbg !5905
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #2 !dbg !5906 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5909, metadata !730), !dbg !5910
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5911
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !5913
  %1 = load i32, i32* %bit_left, align 4, !dbg !5913
  %cmp = icmp slt i32 %1, 32, !dbg !5914
  br i1 %cmp, label %if.then, label %if.end, !dbg !5915

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5916
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5917
  %3 = load i32, i32* %bit_left1, align 4, !dbg !5917
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5918
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !5919
  %5 = load i32, i32* %bit_buf, align 8, !dbg !5920
  %shl = shl i32 %5, %3, !dbg !5920
  store i32 %shl, i32* %bit_buf, align 8, !dbg !5920
  br label %if.end, !dbg !5918

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !5921

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5922
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !5924
  %7 = load i32, i32* %bit_left2, align 4, !dbg !5924
  %cmp3 = icmp slt i32 %7, 32, !dbg !5925
  br i1 %cmp3, label %while.body, label %while.end, !dbg !5926

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !5927, !llvm.loop !5929

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5930
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !5934
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !5934
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5935
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !5936
  %11 = load i8*, i8** %buf_end, align 8, !dbg !5936
  %cmp4 = icmp ult i8* %9, %11, !dbg !5937
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !5938

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i32 0, i32 0), i32 108), !dbg !5939
  call void @abort() #6, !dbg !5942
  unreachable, !dbg !5944

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !5945

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5947
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !5948
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !5948
  %shr = lshr i32 %13, 24, !dbg !5949
  %conv = trunc i32 %shr to i8, !dbg !5947
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5950
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !5951
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !5952
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5952
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !5952
  store i8 %conv, i8* %15, align 1, !dbg !5953
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5954
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !5955
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !5956
  %shl10 = shl i32 %17, 8, !dbg !5956
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !5956
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5957
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !5958
  %19 = load i32, i32* %bit_left11, align 4, !dbg !5959
  %add = add nsw i32 %19, 8, !dbg !5959
  store i32 %add, i32* %bit_left11, align 4, !dbg !5959
  br label %while.cond, !dbg !5960, !llvm.loop !5962

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5963
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !5964
  store i32 32, i32* %bit_left12, align 4, !dbg !5965
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5966
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !5967
  store i32 0, i32* %bit_buf13, align 8, !dbg !5968
  ret void, !dbg !5969
}

declare i32 @ff_cbs_alloc_unit_data(%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_uncompressed_header(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !5970 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %.compoundliteral336 = alloca [2 x i32], align 4
  %.compoundliteral487 = alloca %struct.VP9ReferenceFrameState, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !5971, metadata !730), !dbg !5972
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !5973, metadata !730), !dbg !5974
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !5975, metadata !730), !dbg !5976
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !5977, metadata !730), !dbg !5978
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5979
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !5980
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5980
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !5979
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !5978
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5981, metadata !730), !dbg !5982
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5983, metadata !730), !dbg !5984
  br label %do.body, !dbg !5985, !llvm.loop !5986

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5987, !llvm.loop !5990

do.body1:                                         ; preds = %do.body
  %3 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !5992
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !5995
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !5996
  %frame_marker = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 0, !dbg !5997
  %6 = load i8, i8* %frame_marker, align 2, !dbg !5997
  %conv = zext i8 %6 to i32, !dbg !5996
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %3, %struct.PutBitContext* %4, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 3), !dbg !5998
  store i32 %call, i32* %err, align 4, !dbg !5999
  %7 = load i32, i32* %err, align 4, !dbg !6000
  %cmp = icmp slt i32 %7, 0, !dbg !6001
  br i1 %cmp, label %if.then, label %if.end, !dbg !6000

if.then:                                          ; preds = %do.body1
  %8 = load i32, i32* %err, align 4, !dbg !6002
  store i32 %8, i32* %retval, align 4, !dbg !6005
  br label %return, !dbg !6005

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !6006

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !6008

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !6010, !llvm.loop !6011

do.body4:                                         ; preds = %do.end3
  br label %do.body5, !dbg !6012, !llvm.loop !6015

do.body5:                                         ; preds = %do.body4
  %9 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6017
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6020
  %11 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6021
  %profile_low_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %11, i32 0, i32 1, !dbg !6022
  %12 = load i8, i8* %profile_low_bit, align 1, !dbg !6022
  %conv6 = zext i8 %12 to i32, !dbg !6021
  %call7 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %9, %struct.PutBitContext* %10, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), i32* null, i32 %conv6, i32 0, i32 1), !dbg !6023
  store i32 %call7, i32* %err, align 4, !dbg !6024
  %13 = load i32, i32* %err, align 4, !dbg !6025
  %cmp8 = icmp slt i32 %13, 0, !dbg !6026
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6025

if.then10:                                        ; preds = %do.body5
  %14 = load i32, i32* %err, align 4, !dbg !6027
  store i32 %14, i32* %retval, align 4, !dbg !6030
  br label %return, !dbg !6030

if.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !6031

do.end12:                                         ; preds = %if.end11
  br label %do.end13, !dbg !6033

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6035, !llvm.loop !6036

do.body14:                                        ; preds = %do.end13
  br label %do.body15, !dbg !6037, !llvm.loop !6040

do.body15:                                        ; preds = %do.body14
  %15 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6042
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6045
  %17 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6046
  %profile_high_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %17, i32 0, i32 2, !dbg !6047
  %18 = load i8, i8* %profile_high_bit, align 2, !dbg !6047
  %conv16 = zext i8 %18 to i32, !dbg !6046
  %call17 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %15, %struct.PutBitContext* %16, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), i32* null, i32 %conv16, i32 0, i32 1), !dbg !6048
  store i32 %call17, i32* %err, align 4, !dbg !6049
  %19 = load i32, i32* %err, align 4, !dbg !6050
  %cmp18 = icmp slt i32 %19, 0, !dbg !6051
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6050

if.then20:                                        ; preds = %do.body15
  %20 = load i32, i32* %err, align 4, !dbg !6052
  store i32 %20, i32* %retval, align 4, !dbg !6055
  br label %return, !dbg !6055

if.end21:                                         ; preds = %do.body15
  br label %do.end22, !dbg !6056

do.end22:                                         ; preds = %if.end21
  br label %do.end23, !dbg !6058

do.end23:                                         ; preds = %do.end22
  %21 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6060
  %profile_high_bit24 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %21, i32 0, i32 2, !dbg !6061
  %22 = load i8, i8* %profile_high_bit24, align 2, !dbg !6061
  %conv25 = zext i8 %22 to i32, !dbg !6060
  %shl = shl i32 %conv25, 1, !dbg !6062
  %23 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6063
  %profile_low_bit26 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %23, i32 0, i32 1, !dbg !6064
  %24 = load i8, i8* %profile_low_bit26, align 1, !dbg !6064
  %conv27 = zext i8 %24 to i32, !dbg !6063
  %add = add nsw i32 %shl, %conv27, !dbg !6065
  %25 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6066
  %profile = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %25, i32 0, i32 0, !dbg !6067
  store i32 %add, i32* %profile, align 8, !dbg !6068
  %26 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6069
  %profile28 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %26, i32 0, i32 0, !dbg !6071
  %27 = load i32, i32* %profile28, align 8, !dbg !6071
  %cmp29 = icmp eq i32 %27, 3, !dbg !6072
  br i1 %cmp29, label %if.then31, label %if.end41, !dbg !6073

if.then31:                                        ; preds = %do.end23
  br label %do.body32, !dbg !6074, !llvm.loop !6075

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !6076, !llvm.loop !6079

do.body33:                                        ; preds = %do.body32
  %28 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6081
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6084
  %call34 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %28, %struct.PutBitContext* %29, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32 0, i32 0, i32 0), !dbg !6085
  store i32 %call34, i32* %err, align 4, !dbg !6086
  %30 = load i32, i32* %err, align 4, !dbg !6087
  %cmp35 = icmp slt i32 %30, 0, !dbg !6088
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6087

if.then37:                                        ; preds = %do.body33
  %31 = load i32, i32* %err, align 4, !dbg !6089
  store i32 %31, i32* %retval, align 4, !dbg !6092
  br label %return, !dbg !6092

if.end38:                                         ; preds = %do.body33
  br label %do.end39, !dbg !6093

do.end39:                                         ; preds = %if.end38
  br label %do.end40, !dbg !6095

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !6097

if.end41:                                         ; preds = %do.end40, %do.end23
  br label %do.body42, !dbg !6099, !llvm.loop !6100

do.body42:                                        ; preds = %if.end41
  br label %do.body43, !dbg !6101, !llvm.loop !6104

do.body43:                                        ; preds = %do.body42
  %32 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6106
  %33 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6109
  %34 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6110
  %show_existing_frame = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %34, i32 0, i32 3, !dbg !6111
  %35 = load i8, i8* %show_existing_frame, align 1, !dbg !6111
  %conv44 = zext i8 %35 to i32, !dbg !6110
  %call45 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %32, %struct.PutBitContext* %33, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i32 0, i32 0), i32* null, i32 %conv44, i32 0, i32 1), !dbg !6112
  store i32 %call45, i32* %err, align 4, !dbg !6113
  %36 = load i32, i32* %err, align 4, !dbg !6114
  %cmp46 = icmp slt i32 %36, 0, !dbg !6115
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6114

if.then48:                                        ; preds = %do.body43
  %37 = load i32, i32* %err, align 4, !dbg !6116
  store i32 %37, i32* %retval, align 4, !dbg !6119
  br label %return, !dbg !6119

if.end49:                                         ; preds = %do.body43
  br label %do.end50, !dbg !6120

do.end50:                                         ; preds = %if.end49
  br label %do.end51, !dbg !6122

do.end51:                                         ; preds = %do.end50
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6124
  %show_existing_frame52 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %38, i32 0, i32 3, !dbg !6126
  %39 = load i8, i8* %show_existing_frame52, align 1, !dbg !6126
  %tobool = icmp ne i8 %39, 0, !dbg !6124
  br i1 %tobool, label %if.then53, label %if.end93, !dbg !6127

if.then53:                                        ; preds = %do.end51
  br label %do.body54, !dbg !6128, !llvm.loop !6130

do.body54:                                        ; preds = %if.then53
  br label %do.body55, !dbg !6131, !llvm.loop !6134

do.body55:                                        ; preds = %do.body54
  %40 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6136
  %41 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6139
  %42 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6140
  %frame_to_show_map_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %42, i32 0, i32 4, !dbg !6141
  %43 = load i8, i8* %frame_to_show_map_idx, align 2, !dbg !6141
  %conv56 = zext i8 %43 to i32, !dbg !6140
  %call57 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %40, %struct.PutBitContext* %41, i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0), i32* null, i32 %conv56, i32 0, i32 7), !dbg !6142
  store i32 %call57, i32* %err, align 4, !dbg !6143
  %44 = load i32, i32* %err, align 4, !dbg !6144
  %cmp58 = icmp slt i32 %44, 0, !dbg !6145
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !6144

if.then60:                                        ; preds = %do.body55
  %45 = load i32, i32* %err, align 4, !dbg !6146
  store i32 %45, i32* %retval, align 4, !dbg !6149
  br label %return, !dbg !6149

if.end61:                                         ; preds = %do.body55
  br label %do.end62, !dbg !6150

do.end62:                                         ; preds = %if.end61
  br label %do.end63, !dbg !6152

do.end63:                                         ; preds = %do.end62
  br label %do.body64, !dbg !6154, !llvm.loop !6155

do.body64:                                        ; preds = %do.end63
  %46 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6156
  %header_size_in_bytes = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %46, i32 0, i32 54, !dbg !6160
  %47 = load i16, i16* %header_size_in_bytes, align 2, !dbg !6160
  %conv65 = zext i16 %47 to i32, !dbg !6156
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !6161
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !6156

if.then68:                                        ; preds = %do.body64
  %48 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6162
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %48, i32 0, i32 0, !dbg !6165
  %49 = load i8*, i8** %log_ctx, align 8, !dbg !6165
  %50 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6166
  %header_size_in_bytes69 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %50, i32 0, i32 54, !dbg !6167
  %51 = load i16, i16* %header_size_in_bytes69, align 2, !dbg !6167
  %conv70 = zext i16 %51 to i64, !dbg !6168
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0), i64 %conv70, i64 0), !dbg !6169
  br label %if.end71, !dbg !6170

if.end71:                                         ; preds = %if.then68, %do.body64
  br label %do.end72, !dbg !6171

do.end72:                                         ; preds = %if.end71
  br label %do.body73, !dbg !6173, !llvm.loop !6174

do.body73:                                        ; preds = %do.end72
  %52 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6175
  %refresh_frame_flags = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %52, i32 0, i32 13, !dbg !6179
  %53 = load i8, i8* %refresh_frame_flags, align 1, !dbg !6179
  %conv74 = zext i8 %53 to i32, !dbg !6175
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !6180
  br i1 %cmp75, label %if.then77, label %if.end81, !dbg !6175

if.then77:                                        ; preds = %do.body73
  %54 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6181
  %log_ctx78 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %54, i32 0, i32 0, !dbg !6184
  %55 = load i8*, i8** %log_ctx78, align 8, !dbg !6184
  %56 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6185
  %refresh_frame_flags79 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %56, i32 0, i32 13, !dbg !6186
  %57 = load i8, i8* %refresh_frame_flags79, align 1, !dbg !6186
  %conv80 = zext i8 %57 to i64, !dbg !6187
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i64 %conv80, i64 0), !dbg !6188
  br label %if.end81, !dbg !6189

if.end81:                                         ; preds = %if.then77, %do.body73
  br label %do.end82, !dbg !6190

do.end82:                                         ; preds = %if.end81
  br label %do.body83, !dbg !6192, !llvm.loop !6193

do.body83:                                        ; preds = %do.end82
  %58 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6194
  %loop_filter_level = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %58, i32 0, i32 30, !dbg !6198
  %59 = load i8, i8* %loop_filter_level, align 2, !dbg !6198
  %conv84 = zext i8 %59 to i32, !dbg !6194
  %cmp85 = icmp ne i32 %conv84, 0, !dbg !6199
  br i1 %cmp85, label %if.then87, label %if.end91, !dbg !6194

if.then87:                                        ; preds = %do.body83
  %60 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6200
  %log_ctx88 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %60, i32 0, i32 0, !dbg !6203
  %61 = load i8*, i8** %log_ctx88, align 8, !dbg !6203
  %62 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6204
  %loop_filter_level89 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %62, i32 0, i32 30, !dbg !6205
  %63 = load i8, i8* %loop_filter_level89, align 2, !dbg !6205
  %conv90 = zext i8 %63 to i64, !dbg !6206
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i32 0, i32 0), i64 %conv90, i64 0), !dbg !6207
  br label %if.end91, !dbg !6208

if.end91:                                         ; preds = %if.then87, %do.body83
  br label %do.end92, !dbg !6209

do.end92:                                         ; preds = %if.end91
  store i32 0, i32* %retval, align 4, !dbg !6211
  br label %return, !dbg !6211

if.end93:                                         ; preds = %do.end51
  br label %do.body94, !dbg !6212, !llvm.loop !6213

do.body94:                                        ; preds = %if.end93
  br label %do.body95, !dbg !6214, !llvm.loop !6217

do.body95:                                        ; preds = %do.body94
  %64 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6219
  %65 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6222
  %66 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6223
  %frame_type = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %66, i32 0, i32 5, !dbg !6224
  %67 = load i8, i8* %frame_type, align 1, !dbg !6224
  %conv96 = zext i8 %67 to i32, !dbg !6223
  %call97 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %64, %struct.PutBitContext* %65, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i32* null, i32 %conv96, i32 0, i32 1), !dbg !6225
  store i32 %call97, i32* %err, align 4, !dbg !6226
  %68 = load i32, i32* %err, align 4, !dbg !6227
  %cmp98 = icmp slt i32 %68, 0, !dbg !6228
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !6227

if.then100:                                       ; preds = %do.body95
  %69 = load i32, i32* %err, align 4, !dbg !6229
  store i32 %69, i32* %retval, align 4, !dbg !6232
  br label %return, !dbg !6232

if.end101:                                        ; preds = %do.body95
  br label %do.end102, !dbg !6233

do.end102:                                        ; preds = %if.end101
  br label %do.end103, !dbg !6235

do.end103:                                        ; preds = %do.end102
  br label %do.body104, !dbg !6237, !llvm.loop !6238

do.body104:                                       ; preds = %do.end103
  br label %do.body105, !dbg !6239, !llvm.loop !6242

do.body105:                                       ; preds = %do.body104
  %70 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6244
  %71 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6247
  %72 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6248
  %show_frame = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %72, i32 0, i32 6, !dbg !6249
  %73 = load i8, i8* %show_frame, align 2, !dbg !6249
  %conv106 = zext i8 %73 to i32, !dbg !6248
  %call107 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %70, %struct.PutBitContext* %71, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i32* null, i32 %conv106, i32 0, i32 1), !dbg !6250
  store i32 %call107, i32* %err, align 4, !dbg !6251
  %74 = load i32, i32* %err, align 4, !dbg !6252
  %cmp108 = icmp slt i32 %74, 0, !dbg !6253
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6252

if.then110:                                       ; preds = %do.body105
  %75 = load i32, i32* %err, align 4, !dbg !6254
  store i32 %75, i32* %retval, align 4, !dbg !6257
  br label %return, !dbg !6257

if.end111:                                        ; preds = %do.body105
  br label %do.end112, !dbg !6258

do.end112:                                        ; preds = %if.end111
  br label %do.end113, !dbg !6260

do.end113:                                        ; preds = %do.end112
  br label %do.body114, !dbg !6262, !llvm.loop !6263

do.body114:                                       ; preds = %do.end113
  br label %do.body115, !dbg !6264, !llvm.loop !6267

do.body115:                                       ; preds = %do.body114
  %76 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6269
  %77 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6272
  %78 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6273
  %error_resilient_mode = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %78, i32 0, i32 7, !dbg !6274
  %79 = load i8, i8* %error_resilient_mode, align 1, !dbg !6274
  %conv116 = zext i8 %79 to i32, !dbg !6273
  %call117 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %76, %struct.PutBitContext* %77, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i32 0, i32 0), i32* null, i32 %conv116, i32 0, i32 1), !dbg !6275
  store i32 %call117, i32* %err, align 4, !dbg !6276
  %80 = load i32, i32* %err, align 4, !dbg !6277
  %cmp118 = icmp slt i32 %80, 0, !dbg !6278
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !6277

if.then120:                                       ; preds = %do.body115
  %81 = load i32, i32* %err, align 4, !dbg !6279
  store i32 %81, i32* %retval, align 4, !dbg !6282
  br label %return, !dbg !6282

if.end121:                                        ; preds = %do.body115
  br label %do.end122, !dbg !6283

do.end122:                                        ; preds = %if.end121
  br label %do.end123, !dbg !6285

do.end123:                                        ; preds = %do.end122
  %82 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6287
  %frame_type124 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %82, i32 0, i32 5, !dbg !6289
  %83 = load i8, i8* %frame_type124, align 1, !dbg !6289
  %conv125 = zext i8 %83 to i32, !dbg !6287
  %cmp126 = icmp eq i32 %conv125, 0, !dbg !6290
  br i1 %cmp126, label %if.then128, label %if.else, !dbg !6291

if.then128:                                       ; preds = %do.end123
  br label %do.body129, !dbg !6292, !llvm.loop !6294

do.body129:                                       ; preds = %if.then128
  %84 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6295
  %85 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6298
  %86 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6299
  %call130 = call i32 @cbs_vp9_write_frame_sync_code(%struct.CodedBitstreamContext* %84, %struct.PutBitContext* %85, %struct.VP9RawFrameHeader* %86), !dbg !6300
  store i32 %call130, i32* %err, align 4, !dbg !6301
  %87 = load i32, i32* %err, align 4, !dbg !6302
  %cmp131 = icmp slt i32 %87, 0, !dbg !6303
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !6302

if.then133:                                       ; preds = %do.body129
  %88 = load i32, i32* %err, align 4, !dbg !6304
  store i32 %88, i32* %retval, align 4, !dbg !6307
  br label %return, !dbg !6307

if.end134:                                        ; preds = %do.body129
  br label %do.end135, !dbg !6308

do.end135:                                        ; preds = %if.end134
  br label %do.body136, !dbg !6310, !llvm.loop !6311

do.body136:                                       ; preds = %do.end135
  %89 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6312
  %90 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6315
  %91 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6316
  %92 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6317
  %profile137 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %92, i32 0, i32 0, !dbg !6318
  %93 = load i32, i32* %profile137, align 8, !dbg !6318
  %call138 = call i32 @cbs_vp9_write_color_config(%struct.CodedBitstreamContext* %89, %struct.PutBitContext* %90, %struct.VP9RawFrameHeader* %91, i32 %93), !dbg !6319
  store i32 %call138, i32* %err, align 4, !dbg !6320
  %94 = load i32, i32* %err, align 4, !dbg !6321
  %cmp139 = icmp slt i32 %94, 0, !dbg !6322
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !6321

if.then141:                                       ; preds = %do.body136
  %95 = load i32, i32* %err, align 4, !dbg !6323
  store i32 %95, i32* %retval, align 4, !dbg !6326
  br label %return, !dbg !6326

if.end142:                                        ; preds = %do.body136
  br label %do.end143, !dbg !6327

do.end143:                                        ; preds = %if.end142
  br label %do.body144, !dbg !6329, !llvm.loop !6330

do.body144:                                       ; preds = %do.end143
  %96 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6331
  %97 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6334
  %98 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6335
  %call145 = call i32 @cbs_vp9_write_frame_size(%struct.CodedBitstreamContext* %96, %struct.PutBitContext* %97, %struct.VP9RawFrameHeader* %98), !dbg !6336
  store i32 %call145, i32* %err, align 4, !dbg !6337
  %99 = load i32, i32* %err, align 4, !dbg !6338
  %cmp146 = icmp slt i32 %99, 0, !dbg !6339
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !6338

if.then148:                                       ; preds = %do.body144
  %100 = load i32, i32* %err, align 4, !dbg !6340
  store i32 %100, i32* %retval, align 4, !dbg !6343
  br label %return, !dbg !6343

if.end149:                                        ; preds = %do.body144
  br label %do.end150, !dbg !6344

do.end150:                                        ; preds = %if.end149
  br label %do.body151, !dbg !6346, !llvm.loop !6347

do.body151:                                       ; preds = %do.end150
  %101 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6348
  %102 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6351
  %103 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6352
  %call152 = call i32 @cbs_vp9_write_render_size(%struct.CodedBitstreamContext* %101, %struct.PutBitContext* %102, %struct.VP9RawFrameHeader* %103), !dbg !6353
  store i32 %call152, i32* %err, align 4, !dbg !6354
  %104 = load i32, i32* %err, align 4, !dbg !6355
  %cmp153 = icmp slt i32 %104, 0, !dbg !6356
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !6355

if.then155:                                       ; preds = %do.body151
  %105 = load i32, i32* %err, align 4, !dbg !6357
  store i32 %105, i32* %retval, align 4, !dbg !6360
  br label %return, !dbg !6360

if.end156:                                        ; preds = %do.body151
  br label %do.end157, !dbg !6361

do.end157:                                        ; preds = %if.end156
  br label %do.body158, !dbg !6363, !llvm.loop !6364

do.body158:                                       ; preds = %do.end157
  %106 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6365
  %refresh_frame_flags159 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %106, i32 0, i32 13, !dbg !6369
  %107 = load i8, i8* %refresh_frame_flags159, align 1, !dbg !6369
  %conv160 = zext i8 %107 to i32, !dbg !6365
  %cmp161 = icmp ne i32 %conv160, 255, !dbg !6370
  br i1 %cmp161, label %if.then163, label %if.end167, !dbg !6365

if.then163:                                       ; preds = %do.body158
  %108 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6371
  %log_ctx164 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %108, i32 0, i32 0, !dbg !6374
  %109 = load i8*, i8** %log_ctx164, align 8, !dbg !6374
  %110 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6375
  %refresh_frame_flags165 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %110, i32 0, i32 13, !dbg !6376
  %111 = load i8, i8* %refresh_frame_flags165, align 1, !dbg !6376
  %conv166 = zext i8 %111 to i64, !dbg !6377
  call void (i8*, i32, i8*, ...) @av_log(i8* %109, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i64 %conv166, i64 255), !dbg !6378
  br label %if.end167, !dbg !6379

if.end167:                                        ; preds = %if.then163, %do.body158
  br label %do.end168, !dbg !6380

do.end168:                                        ; preds = %if.end167
  br label %if.end377, !dbg !6382

if.else:                                          ; preds = %do.end123
  %112 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6383
  %show_frame169 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %112, i32 0, i32 6, !dbg !6386
  %113 = load i8, i8* %show_frame169, align 2, !dbg !6386
  %conv170 = zext i8 %113 to i32, !dbg !6383
  %cmp171 = icmp eq i32 %conv170, 0, !dbg !6387
  br i1 %cmp171, label %if.then173, label %if.else184, !dbg !6388

if.then173:                                       ; preds = %if.else
  br label %do.body174, !dbg !6389, !llvm.loop !6390

do.body174:                                       ; preds = %if.then173
  br label %do.body175, !dbg !6391, !llvm.loop !6394

do.body175:                                       ; preds = %do.body174
  %114 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6396
  %115 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6399
  %116 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6400
  %intra_only = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %116, i32 0, i32 14, !dbg !6401
  %117 = load i8, i8* %intra_only, align 2, !dbg !6401
  %conv176 = zext i8 %117 to i32, !dbg !6400
  %call177 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %114, %struct.PutBitContext* %115, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32* null, i32 %conv176, i32 0, i32 1), !dbg !6402
  store i32 %call177, i32* %err, align 4, !dbg !6403
  %118 = load i32, i32* %err, align 4, !dbg !6404
  %cmp178 = icmp slt i32 %118, 0, !dbg !6405
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !6404

if.then180:                                       ; preds = %do.body175
  %119 = load i32, i32* %err, align 4, !dbg !6406
  store i32 %119, i32* %retval, align 4, !dbg !6409
  br label %return, !dbg !6409

if.end181:                                        ; preds = %do.body175
  br label %do.end182, !dbg !6410

do.end182:                                        ; preds = %if.end181
  br label %do.end183, !dbg !6412

do.end183:                                        ; preds = %do.end182
  br label %if.end196, !dbg !6414

if.else184:                                       ; preds = %if.else
  br label %do.body185, !dbg !6416, !llvm.loop !6417

do.body185:                                       ; preds = %if.else184
  %120 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6418
  %intra_only186 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %120, i32 0, i32 14, !dbg !6422
  %121 = load i8, i8* %intra_only186, align 2, !dbg !6422
  %conv187 = zext i8 %121 to i32, !dbg !6418
  %cmp188 = icmp ne i32 %conv187, 0, !dbg !6423
  br i1 %cmp188, label %if.then190, label %if.end194, !dbg !6418

if.then190:                                       ; preds = %do.body185
  %122 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6424
  %log_ctx191 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %122, i32 0, i32 0, !dbg !6427
  %123 = load i8*, i8** %log_ctx191, align 8, !dbg !6427
  %124 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6428
  %intra_only192 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %124, i32 0, i32 14, !dbg !6429
  %125 = load i8, i8* %intra_only192, align 2, !dbg !6429
  %conv193 = zext i8 %125 to i64, !dbg !6430
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i64 %conv193, i64 0), !dbg !6431
  br label %if.end194, !dbg !6432

if.end194:                                        ; preds = %if.then190, %do.body185
  br label %do.end195, !dbg !6433

do.end195:                                        ; preds = %if.end194
  br label %if.end196

if.end196:                                        ; preds = %do.end195, %do.end183
  %126 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6435
  %error_resilient_mode197 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %126, i32 0, i32 7, !dbg !6437
  %127 = load i8, i8* %error_resilient_mode197, align 1, !dbg !6437
  %conv198 = zext i8 %127 to i32, !dbg !6435
  %cmp199 = icmp eq i32 %conv198, 0, !dbg !6438
  br i1 %cmp199, label %if.then201, label %if.else212, !dbg !6439

if.then201:                                       ; preds = %if.end196
  br label %do.body202, !dbg !6440, !llvm.loop !6441

do.body202:                                       ; preds = %if.then201
  br label %do.body203, !dbg !6442, !llvm.loop !6445

do.body203:                                       ; preds = %do.body202
  %128 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6447
  %129 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6450
  %130 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6451
  %reset_frame_context = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %130, i32 0, i32 15, !dbg !6452
  %131 = load i8, i8* %reset_frame_context, align 1, !dbg !6452
  %conv204 = zext i8 %131 to i32, !dbg !6451
  %call205 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %128, %struct.PutBitContext* %129, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i32* null, i32 %conv204, i32 0, i32 3), !dbg !6453
  store i32 %call205, i32* %err, align 4, !dbg !6454
  %132 = load i32, i32* %err, align 4, !dbg !6455
  %cmp206 = icmp slt i32 %132, 0, !dbg !6456
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !6455

if.then208:                                       ; preds = %do.body203
  %133 = load i32, i32* %err, align 4, !dbg !6457
  store i32 %133, i32* %retval, align 4, !dbg !6460
  br label %return, !dbg !6460

if.end209:                                        ; preds = %do.body203
  br label %do.end210, !dbg !6461

do.end210:                                        ; preds = %if.end209
  br label %do.end211, !dbg !6463

do.end211:                                        ; preds = %do.end210
  br label %if.end224, !dbg !6465

if.else212:                                       ; preds = %if.end196
  br label %do.body213, !dbg !6467, !llvm.loop !6468

do.body213:                                       ; preds = %if.else212
  %134 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6469
  %reset_frame_context214 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %134, i32 0, i32 15, !dbg !6473
  %135 = load i8, i8* %reset_frame_context214, align 1, !dbg !6473
  %conv215 = zext i8 %135 to i32, !dbg !6469
  %cmp216 = icmp ne i32 %conv215, 0, !dbg !6474
  br i1 %cmp216, label %if.then218, label %if.end222, !dbg !6469

if.then218:                                       ; preds = %do.body213
  %136 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6475
  %log_ctx219 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %136, i32 0, i32 0, !dbg !6478
  %137 = load i8*, i8** %log_ctx219, align 8, !dbg !6478
  %138 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6479
  %reset_frame_context220 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %138, i32 0, i32 15, !dbg !6480
  %139 = load i8, i8* %reset_frame_context220, align 1, !dbg !6480
  %conv221 = zext i8 %139 to i64, !dbg !6481
  call void (i8*, i32, i8*, ...) @av_log(i8* %137, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i64 %conv221, i64 0), !dbg !6482
  br label %if.end222, !dbg !6483

if.end222:                                        ; preds = %if.then218, %do.body213
  br label %do.end223, !dbg !6484

do.end223:                                        ; preds = %if.end222
  br label %if.end224

if.end224:                                        ; preds = %do.end223, %do.end211
  %140 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6486
  %intra_only225 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %140, i32 0, i32 14, !dbg !6488
  %141 = load i8, i8* %intra_only225, align 2, !dbg !6488
  %conv226 = zext i8 %141 to i32, !dbg !6486
  %cmp227 = icmp eq i32 %conv226, 1, !dbg !6489
  br i1 %cmp227, label %if.then229, label %if.else310, !dbg !6490

if.then229:                                       ; preds = %if.end224
  br label %do.body230, !dbg !6491, !llvm.loop !6493

do.body230:                                       ; preds = %if.then229
  %142 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6494
  %143 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6497
  %144 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6498
  %call231 = call i32 @cbs_vp9_write_frame_sync_code(%struct.CodedBitstreamContext* %142, %struct.PutBitContext* %143, %struct.VP9RawFrameHeader* %144), !dbg !6499
  store i32 %call231, i32* %err, align 4, !dbg !6500
  %145 = load i32, i32* %err, align 4, !dbg !6501
  %cmp232 = icmp slt i32 %145, 0, !dbg !6502
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !6501

if.then234:                                       ; preds = %do.body230
  %146 = load i32, i32* %err, align 4, !dbg !6503
  store i32 %146, i32* %retval, align 4, !dbg !6506
  br label %return, !dbg !6506

if.end235:                                        ; preds = %do.body230
  br label %do.end236, !dbg !6507

do.end236:                                        ; preds = %if.end235
  %147 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6509
  %profile237 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %147, i32 0, i32 0, !dbg !6511
  %148 = load i32, i32* %profile237, align 8, !dbg !6511
  %cmp238 = icmp sgt i32 %148, 0, !dbg !6512
  br i1 %cmp238, label %if.then240, label %if.else249, !dbg !6513

if.then240:                                       ; preds = %do.end236
  br label %do.body241, !dbg !6514, !llvm.loop !6516

do.body241:                                       ; preds = %if.then240
  %149 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6517
  %150 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6520
  %151 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6521
  %152 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6522
  %profile242 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %152, i32 0, i32 0, !dbg !6523
  %153 = load i32, i32* %profile242, align 8, !dbg !6523
  %call243 = call i32 @cbs_vp9_write_color_config(%struct.CodedBitstreamContext* %149, %struct.PutBitContext* %150, %struct.VP9RawFrameHeader* %151, i32 %153), !dbg !6524
  store i32 %call243, i32* %err, align 4, !dbg !6525
  %154 = load i32, i32* %err, align 4, !dbg !6526
  %cmp244 = icmp slt i32 %154, 0, !dbg !6527
  br i1 %cmp244, label %if.then246, label %if.end247, !dbg !6526

if.then246:                                       ; preds = %do.body241
  %155 = load i32, i32* %err, align 4, !dbg !6528
  store i32 %155, i32* %retval, align 4, !dbg !6531
  br label %return, !dbg !6531

if.end247:                                        ; preds = %do.body241
  br label %do.end248, !dbg !6532

do.end248:                                        ; preds = %if.end247
  br label %if.end284, !dbg !6534

if.else249:                                       ; preds = %do.end236
  br label %do.body250, !dbg !6535, !llvm.loop !6537

do.body250:                                       ; preds = %if.else249
  %156 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6538
  %color_space = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %156, i32 0, i32 9, !dbg !6542
  %157 = load i8, i8* %color_space, align 1, !dbg !6542
  %conv251 = zext i8 %157 to i32, !dbg !6538
  %cmp252 = icmp ne i32 %conv251, 1, !dbg !6543
  br i1 %cmp252, label %if.then254, label %if.end258, !dbg !6538

if.then254:                                       ; preds = %do.body250
  %158 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6544
  %log_ctx255 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %158, i32 0, i32 0, !dbg !6547
  %159 = load i8*, i8** %log_ctx255, align 8, !dbg !6547
  %160 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6548
  %color_space256 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %160, i32 0, i32 9, !dbg !6549
  %161 = load i8, i8* %color_space256, align 1, !dbg !6549
  %conv257 = zext i8 %161 to i64, !dbg !6550
  call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i64 %conv257, i64 1), !dbg !6551
  br label %if.end258, !dbg !6552

if.end258:                                        ; preds = %if.then254, %do.body250
  br label %do.end259, !dbg !6553

do.end259:                                        ; preds = %if.end258
  br label %do.body260, !dbg !6555, !llvm.loop !6556

do.body260:                                       ; preds = %do.end259
  %162 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6557
  %subsampling_x = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %162, i32 0, i32 11, !dbg !6561
  %163 = load i8, i8* %subsampling_x, align 1, !dbg !6561
  %conv261 = zext i8 %163 to i32, !dbg !6557
  %cmp262 = icmp ne i32 %conv261, 1, !dbg !6562
  br i1 %cmp262, label %if.then264, label %if.end268, !dbg !6557

if.then264:                                       ; preds = %do.body260
  %164 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6563
  %log_ctx265 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %164, i32 0, i32 0, !dbg !6566
  %165 = load i8*, i8** %log_ctx265, align 8, !dbg !6566
  %166 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6567
  %subsampling_x266 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %166, i32 0, i32 11, !dbg !6568
  %167 = load i8, i8* %subsampling_x266, align 1, !dbg !6568
  %conv267 = zext i8 %167 to i64, !dbg !6569
  call void (i8*, i32, i8*, ...) @av_log(i8* %165, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i64 %conv267, i64 1), !dbg !6570
  br label %if.end268, !dbg !6571

if.end268:                                        ; preds = %if.then264, %do.body260
  br label %do.end269, !dbg !6572

do.end269:                                        ; preds = %if.end268
  br label %do.body270, !dbg !6574, !llvm.loop !6575

do.body270:                                       ; preds = %do.end269
  %168 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6576
  %subsampling_y = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %168, i32 0, i32 12, !dbg !6580
  %169 = load i8, i8* %subsampling_y, align 2, !dbg !6580
  %conv271 = zext i8 %169 to i32, !dbg !6576
  %cmp272 = icmp ne i32 %conv271, 1, !dbg !6581
  br i1 %cmp272, label %if.then274, label %if.end278, !dbg !6576

if.then274:                                       ; preds = %do.body270
  %170 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6582
  %log_ctx275 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %170, i32 0, i32 0, !dbg !6585
  %171 = load i8*, i8** %log_ctx275, align 8, !dbg !6585
  %172 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6586
  %subsampling_y276 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %172, i32 0, i32 12, !dbg !6587
  %173 = load i8, i8* %subsampling_y276, align 2, !dbg !6587
  %conv277 = zext i8 %173 to i64, !dbg !6588
  call void (i8*, i32, i8*, ...) @av_log(i8* %171, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i64 %conv277, i64 1), !dbg !6589
  br label %if.end278, !dbg !6590

if.end278:                                        ; preds = %if.then274, %do.body270
  br label %do.end279, !dbg !6591

do.end279:                                        ; preds = %if.end278
  %174 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6593
  %bit_depth = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %174, i32 0, i32 9, !dbg !6594
  store i32 8, i32* %bit_depth, align 8, !dbg !6595
  %175 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6596
  %subsampling_x280 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %175, i32 0, i32 11, !dbg !6597
  %176 = load i8, i8* %subsampling_x280, align 1, !dbg !6597
  %177 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6598
  %subsampling_x281 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %177, i32 0, i32 7, !dbg !6599
  store i8 %176, i8* %subsampling_x281, align 4, !dbg !6600
  %178 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6601
  %subsampling_y282 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %178, i32 0, i32 12, !dbg !6602
  %179 = load i8, i8* %subsampling_y282, align 2, !dbg !6602
  %180 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !6603
  %subsampling_y283 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %180, i32 0, i32 8, !dbg !6604
  store i8 %179, i8* %subsampling_y283, align 1, !dbg !6605
  br label %if.end284

if.end284:                                        ; preds = %do.end279, %do.end248
  br label %do.body285, !dbg !6606, !llvm.loop !6607

do.body285:                                       ; preds = %if.end284
  br label %do.body286, !dbg !6608, !llvm.loop !6611

do.body286:                                       ; preds = %do.body285
  %181 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6613
  %182 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6616
  %183 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6617
  %refresh_frame_flags287 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %183, i32 0, i32 13, !dbg !6618
  %184 = load i8, i8* %refresh_frame_flags287, align 1, !dbg !6618
  %conv288 = zext i8 %184 to i32, !dbg !6617
  %call289 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %181, %struct.PutBitContext* %182, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32* null, i32 %conv288, i32 0, i32 255), !dbg !6619
  store i32 %call289, i32* %err, align 4, !dbg !6620
  %185 = load i32, i32* %err, align 4, !dbg !6621
  %cmp290 = icmp slt i32 %185, 0, !dbg !6622
  br i1 %cmp290, label %if.then292, label %if.end293, !dbg !6621

if.then292:                                       ; preds = %do.body286
  %186 = load i32, i32* %err, align 4, !dbg !6623
  store i32 %186, i32* %retval, align 4, !dbg !6626
  br label %return, !dbg !6626

if.end293:                                        ; preds = %do.body286
  br label %do.end294, !dbg !6627

do.end294:                                        ; preds = %if.end293
  br label %do.end295, !dbg !6629

do.end295:                                        ; preds = %do.end294
  br label %do.body296, !dbg !6631, !llvm.loop !6632

do.body296:                                       ; preds = %do.end295
  %187 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6633
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6636
  %189 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6637
  %call297 = call i32 @cbs_vp9_write_frame_size(%struct.CodedBitstreamContext* %187, %struct.PutBitContext* %188, %struct.VP9RawFrameHeader* %189), !dbg !6638
  store i32 %call297, i32* %err, align 4, !dbg !6639
  %190 = load i32, i32* %err, align 4, !dbg !6640
  %cmp298 = icmp slt i32 %190, 0, !dbg !6641
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !6640

if.then300:                                       ; preds = %do.body296
  %191 = load i32, i32* %err, align 4, !dbg !6642
  store i32 %191, i32* %retval, align 4, !dbg !6645
  br label %return, !dbg !6645

if.end301:                                        ; preds = %do.body296
  br label %do.end302, !dbg !6646

do.end302:                                        ; preds = %if.end301
  br label %do.body303, !dbg !6648, !llvm.loop !6649

do.body303:                                       ; preds = %do.end302
  %192 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6650
  %193 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6653
  %194 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6654
  %call304 = call i32 @cbs_vp9_write_render_size(%struct.CodedBitstreamContext* %192, %struct.PutBitContext* %193, %struct.VP9RawFrameHeader* %194), !dbg !6655
  store i32 %call304, i32* %err, align 4, !dbg !6656
  %195 = load i32, i32* %err, align 4, !dbg !6657
  %cmp305 = icmp slt i32 %195, 0, !dbg !6658
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !6657

if.then307:                                       ; preds = %do.body303
  %196 = load i32, i32* %err, align 4, !dbg !6659
  store i32 %196, i32* %retval, align 4, !dbg !6662
  br label %return, !dbg !6662

if.end308:                                        ; preds = %do.body303
  br label %do.end309, !dbg !6663

do.end309:                                        ; preds = %if.end308
  br label %if.end376, !dbg !6665

if.else310:                                       ; preds = %if.end224
  br label %do.body311, !dbg !6666, !llvm.loop !6668

do.body311:                                       ; preds = %if.else310
  br label %do.body312, !dbg !6669, !llvm.loop !6672

do.body312:                                       ; preds = %do.body311
  %197 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6674
  %198 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6677
  %199 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6678
  %refresh_frame_flags313 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %199, i32 0, i32 13, !dbg !6679
  %200 = load i8, i8* %refresh_frame_flags313, align 1, !dbg !6679
  %conv314 = zext i8 %200 to i32, !dbg !6678
  %call315 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %197, %struct.PutBitContext* %198, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32* null, i32 %conv314, i32 0, i32 255), !dbg !6680
  store i32 %call315, i32* %err, align 4, !dbg !6681
  %201 = load i32, i32* %err, align 4, !dbg !6682
  %cmp316 = icmp slt i32 %201, 0, !dbg !6683
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !6682

if.then318:                                       ; preds = %do.body312
  %202 = load i32, i32* %err, align 4, !dbg !6684
  store i32 %202, i32* %retval, align 4, !dbg !6687
  br label %return, !dbg !6687

if.end319:                                        ; preds = %do.body312
  br label %do.end320, !dbg !6688

do.end320:                                        ; preds = %if.end319
  br label %do.end321, !dbg !6690

do.end321:                                        ; preds = %do.end320
  store i32 0, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6694

for.cond:                                         ; preds = %for.inc, %do.end321
  %203 = load i32, i32* %i, align 4, !dbg !6695
  %cmp322 = icmp slt i32 %203, 3, !dbg !6698
  br i1 %cmp322, label %for.body, label %for.end, !dbg !6699

for.body:                                         ; preds = %for.cond
  br label %do.body324, !dbg !6700, !llvm.loop !6702

do.body324:                                       ; preds = %for.body
  br label %do.body325, !dbg !6703, !llvm.loop !6706

do.body325:                                       ; preds = %do.body324
  %204 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6708
  %205 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6711
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !6712
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !6712
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !6712
  %206 = load i32, i32* %i, align 4, !dbg !6713
  store i32 %206, i32* %arrayinit.element, align 4, !dbg !6712
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !6714
  %207 = load i32, i32* %i, align 4, !dbg !6715
  %idxprom = sext i32 %207 to i64, !dbg !6716
  %208 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6716
  %ref_frame_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %208, i32 0, i32 16, !dbg !6717
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %ref_frame_idx, i64 0, i64 %idxprom, !dbg !6716
  %209 = load i8, i8* %arrayidx, align 1, !dbg !6716
  %conv326 = zext i8 %209 to i32, !dbg !6716
  %call327 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %204, %struct.PutBitContext* %205, i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i32* %arraydecay, i32 %conv326, i32 0, i32 7), !dbg !6718
  store i32 %call327, i32* %err, align 4, !dbg !6719
  %210 = load i32, i32* %err, align 4, !dbg !6720
  %cmp328 = icmp slt i32 %210, 0, !dbg !6721
  br i1 %cmp328, label %if.then330, label %if.end331, !dbg !6720

if.then330:                                       ; preds = %do.body325
  %211 = load i32, i32* %err, align 4, !dbg !6722
  store i32 %211, i32* %retval, align 4, !dbg !6725
  br label %return, !dbg !6725

if.end331:                                        ; preds = %do.body325
  br label %do.end332, !dbg !6726

do.end332:                                        ; preds = %if.end331
  br label %do.end333, !dbg !6728

do.end333:                                        ; preds = %do.end332
  br label %do.body334, !dbg !6730, !llvm.loop !6731

do.body334:                                       ; preds = %do.end333
  br label %do.body335, !dbg !6732, !llvm.loop !6735

do.body335:                                       ; preds = %do.body334
  %212 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6737
  %213 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6740
  %arrayinit.begin337 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral336, i64 0, i64 0, !dbg !6741
  store i32 1, i32* %arrayinit.begin337, align 4, !dbg !6741
  %arrayinit.element338 = getelementptr inbounds i32, i32* %arrayinit.begin337, i64 1, !dbg !6741
  %214 = load i32, i32* %i, align 4, !dbg !6742
  %add339 = add nsw i32 1, %214, !dbg !6743
  store i32 %add339, i32* %arrayinit.element338, align 4, !dbg !6741
  %arraydecay340 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral336, i32 0, i32 0, !dbg !6744
  %215 = load i32, i32* %i, align 4, !dbg !6745
  %add341 = add nsw i32 1, %215, !dbg !6746
  %idxprom342 = sext i32 %add341 to i64, !dbg !6747
  %216 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6747
  %ref_frame_sign_bias = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %216, i32 0, i32 17, !dbg !6748
  %arrayidx343 = getelementptr inbounds [4 x i8], [4 x i8]* %ref_frame_sign_bias, i64 0, i64 %idxprom342, !dbg !6747
  %217 = load i8, i8* %arrayidx343, align 1, !dbg !6747
  %conv344 = zext i8 %217 to i32, !dbg !6747
  %call345 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %212, %struct.PutBitContext* %213, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0), i32* %arraydecay340, i32 %conv344, i32 0, i32 1), !dbg !6749
  store i32 %call345, i32* %err, align 4, !dbg !6750
  %218 = load i32, i32* %err, align 4, !dbg !6751
  %cmp346 = icmp slt i32 %218, 0, !dbg !6752
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !6751

if.then348:                                       ; preds = %do.body335
  %219 = load i32, i32* %err, align 4, !dbg !6753
  store i32 %219, i32* %retval, align 4, !dbg !6756
  br label %return, !dbg !6756

if.end349:                                        ; preds = %do.body335
  br label %do.end350, !dbg !6757

do.end350:                                        ; preds = %if.end349
  br label %do.end351, !dbg !6759

do.end351:                                        ; preds = %do.end350
  br label %for.inc, !dbg !6761

for.inc:                                          ; preds = %do.end351
  %220 = load i32, i32* %i, align 4, !dbg !6762
  %inc = add nsw i32 %220, 1, !dbg !6762
  store i32 %inc, i32* %i, align 4, !dbg !6762
  br label %for.cond, !dbg !6764, !llvm.loop !6765

for.end:                                          ; preds = %for.cond
  br label %do.body352, !dbg !6767, !llvm.loop !6768

do.body352:                                       ; preds = %for.end
  %221 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6769
  %222 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6772
  %223 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6773
  %call353 = call i32 @cbs_vp9_write_frame_size_with_refs(%struct.CodedBitstreamContext* %221, %struct.PutBitContext* %222, %struct.VP9RawFrameHeader* %223), !dbg !6774
  store i32 %call353, i32* %err, align 4, !dbg !6775
  %224 = load i32, i32* %err, align 4, !dbg !6776
  %cmp354 = icmp slt i32 %224, 0, !dbg !6777
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !6776

if.then356:                                       ; preds = %do.body352
  %225 = load i32, i32* %err, align 4, !dbg !6778
  store i32 %225, i32* %retval, align 4, !dbg !6781
  br label %return, !dbg !6781

if.end357:                                        ; preds = %do.body352
  br label %do.end358, !dbg !6782

do.end358:                                        ; preds = %if.end357
  br label %do.body359, !dbg !6784, !llvm.loop !6785

do.body359:                                       ; preds = %do.end358
  br label %do.body360, !dbg !6786, !llvm.loop !6789

do.body360:                                       ; preds = %do.body359
  %226 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6791
  %227 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6794
  %228 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6795
  %allow_high_precision_mv = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %228, i32 0, i32 18, !dbg !6796
  %229 = load i8, i8* %allow_high_precision_mv, align 1, !dbg !6796
  %conv361 = zext i8 %229 to i32, !dbg !6795
  %call362 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %226, %struct.PutBitContext* %227, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32* null, i32 %conv361, i32 0, i32 1), !dbg !6797
  store i32 %call362, i32* %err, align 4, !dbg !6798
  %230 = load i32, i32* %err, align 4, !dbg !6799
  %cmp363 = icmp slt i32 %230, 0, !dbg !6800
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !6799

if.then365:                                       ; preds = %do.body360
  %231 = load i32, i32* %err, align 4, !dbg !6801
  store i32 %231, i32* %retval, align 4, !dbg !6804
  br label %return, !dbg !6804

if.end366:                                        ; preds = %do.body360
  br label %do.end367, !dbg !6805

do.end367:                                        ; preds = %if.end366
  br label %do.end368, !dbg !6807

do.end368:                                        ; preds = %do.end367
  br label %do.body369, !dbg !6809, !llvm.loop !6810

do.body369:                                       ; preds = %do.end368
  %232 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6811
  %233 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6814
  %234 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6815
  %call370 = call i32 @cbs_vp9_write_interpolation_filter(%struct.CodedBitstreamContext* %232, %struct.PutBitContext* %233, %struct.VP9RawFrameHeader* %234), !dbg !6816
  store i32 %call370, i32* %err, align 4, !dbg !6817
  %235 = load i32, i32* %err, align 4, !dbg !6818
  %cmp371 = icmp slt i32 %235, 0, !dbg !6819
  br i1 %cmp371, label %if.then373, label %if.end374, !dbg !6818

if.then373:                                       ; preds = %do.body369
  %236 = load i32, i32* %err, align 4, !dbg !6820
  store i32 %236, i32* %retval, align 4, !dbg !6823
  br label %return, !dbg !6823

if.end374:                                        ; preds = %do.body369
  br label %do.end375, !dbg !6824

do.end375:                                        ; preds = %if.end374
  br label %if.end376

if.end376:                                        ; preds = %do.end375, %do.end309
  br label %if.end377

if.end377:                                        ; preds = %if.end376, %do.end168
  %237 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6826
  %error_resilient_mode378 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %237, i32 0, i32 7, !dbg !6828
  %238 = load i8, i8* %error_resilient_mode378, align 1, !dbg !6828
  %conv379 = zext i8 %238 to i32, !dbg !6826
  %cmp380 = icmp eq i32 %conv379, 0, !dbg !6829
  br i1 %cmp380, label %if.then382, label %if.else403, !dbg !6830

if.then382:                                       ; preds = %if.end377
  br label %do.body383, !dbg !6831, !llvm.loop !6833

do.body383:                                       ; preds = %if.then382
  br label %do.body384, !dbg !6834, !llvm.loop !6837

do.body384:                                       ; preds = %do.body383
  %239 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6839
  %240 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6842
  %241 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6843
  %refresh_frame_context = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %241, i32 0, i32 19, !dbg !6844
  %242 = load i8, i8* %refresh_frame_context, align 2, !dbg !6844
  %conv385 = zext i8 %242 to i32, !dbg !6843
  %call386 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %239, %struct.PutBitContext* %240, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i32* null, i32 %conv385, i32 0, i32 1), !dbg !6845
  store i32 %call386, i32* %err, align 4, !dbg !6846
  %243 = load i32, i32* %err, align 4, !dbg !6847
  %cmp387 = icmp slt i32 %243, 0, !dbg !6848
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !6847

if.then389:                                       ; preds = %do.body384
  %244 = load i32, i32* %err, align 4, !dbg !6849
  store i32 %244, i32* %retval, align 4, !dbg !6852
  br label %return, !dbg !6852

if.end390:                                        ; preds = %do.body384
  br label %do.end391, !dbg !6853

do.end391:                                        ; preds = %if.end390
  br label %do.end392, !dbg !6855

do.end392:                                        ; preds = %do.end391
  br label %do.body393, !dbg !6857, !llvm.loop !6858

do.body393:                                       ; preds = %do.end392
  br label %do.body394, !dbg !6859, !llvm.loop !6862

do.body394:                                       ; preds = %do.body393
  %245 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6864
  %246 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6867
  %247 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6868
  %frame_parallel_decoding_mode = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %247, i32 0, i32 20, !dbg !6869
  %248 = load i8, i8* %frame_parallel_decoding_mode, align 1, !dbg !6869
  %conv395 = zext i8 %248 to i32, !dbg !6868
  %call396 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %245, %struct.PutBitContext* %246, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i32* null, i32 %conv395, i32 0, i32 1), !dbg !6870
  store i32 %call396, i32* %err, align 4, !dbg !6871
  %249 = load i32, i32* %err, align 4, !dbg !6872
  %cmp397 = icmp slt i32 %249, 0, !dbg !6873
  br i1 %cmp397, label %if.then399, label %if.end400, !dbg !6872

if.then399:                                       ; preds = %do.body394
  %250 = load i32, i32* %err, align 4, !dbg !6874
  store i32 %250, i32* %retval, align 4, !dbg !6877
  br label %return, !dbg !6877

if.end400:                                        ; preds = %do.body394
  br label %do.end401, !dbg !6878

do.end401:                                        ; preds = %if.end400
  br label %do.end402, !dbg !6880

do.end402:                                        ; preds = %do.end401
  br label %if.end426, !dbg !6882

if.else403:                                       ; preds = %if.end377
  br label %do.body404, !dbg !6883, !llvm.loop !6885

do.body404:                                       ; preds = %if.else403
  %251 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6886
  %refresh_frame_context405 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %251, i32 0, i32 19, !dbg !6890
  %252 = load i8, i8* %refresh_frame_context405, align 2, !dbg !6890
  %conv406 = zext i8 %252 to i32, !dbg !6886
  %cmp407 = icmp ne i32 %conv406, 0, !dbg !6891
  br i1 %cmp407, label %if.then409, label %if.end413, !dbg !6886

if.then409:                                       ; preds = %do.body404
  %253 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6892
  %log_ctx410 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %253, i32 0, i32 0, !dbg !6895
  %254 = load i8*, i8** %log_ctx410, align 8, !dbg !6895
  %255 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6896
  %refresh_frame_context411 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %255, i32 0, i32 19, !dbg !6897
  %256 = load i8, i8* %refresh_frame_context411, align 2, !dbg !6897
  %conv412 = zext i8 %256 to i64, !dbg !6898
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i64 %conv412, i64 0), !dbg !6899
  br label %if.end413, !dbg !6900

if.end413:                                        ; preds = %if.then409, %do.body404
  br label %do.end414, !dbg !6901

do.end414:                                        ; preds = %if.end413
  br label %do.body415, !dbg !6903, !llvm.loop !6904

do.body415:                                       ; preds = %do.end414
  %257 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6905
  %frame_parallel_decoding_mode416 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %257, i32 0, i32 20, !dbg !6909
  %258 = load i8, i8* %frame_parallel_decoding_mode416, align 1, !dbg !6909
  %conv417 = zext i8 %258 to i32, !dbg !6905
  %cmp418 = icmp ne i32 %conv417, 1, !dbg !6910
  br i1 %cmp418, label %if.then420, label %if.end424, !dbg !6905

if.then420:                                       ; preds = %do.body415
  %259 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6911
  %log_ctx421 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %259, i32 0, i32 0, !dbg !6914
  %260 = load i8*, i8** %log_ctx421, align 8, !dbg !6914
  %261 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6915
  %frame_parallel_decoding_mode422 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %261, i32 0, i32 20, !dbg !6916
  %262 = load i8, i8* %frame_parallel_decoding_mode422, align 1, !dbg !6916
  %conv423 = zext i8 %262 to i64, !dbg !6917
  call void (i8*, i32, i8*, ...) @av_log(i8* %260, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i64 %conv423, i64 1), !dbg !6918
  br label %if.end424, !dbg !6919

if.end424:                                        ; preds = %if.then420, %do.body415
  br label %do.end425, !dbg !6920

do.end425:                                        ; preds = %if.end424
  br label %if.end426

if.end426:                                        ; preds = %do.end425, %do.end402
  br label %do.body427, !dbg !6922, !llvm.loop !6923

do.body427:                                       ; preds = %if.end426
  br label %do.body428, !dbg !6924, !llvm.loop !6927

do.body428:                                       ; preds = %do.body427
  %263 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6929
  %264 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6932
  %265 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6933
  %frame_context_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %265, i32 0, i32 21, !dbg !6934
  %266 = load i8, i8* %frame_context_idx, align 2, !dbg !6934
  %conv429 = zext i8 %266 to i32, !dbg !6933
  %call430 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %263, %struct.PutBitContext* %264, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i32* null, i32 %conv429, i32 0, i32 3), !dbg !6935
  store i32 %call430, i32* %err, align 4, !dbg !6936
  %267 = load i32, i32* %err, align 4, !dbg !6937
  %cmp431 = icmp slt i32 %267, 0, !dbg !6938
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !6937

if.then433:                                       ; preds = %do.body428
  %268 = load i32, i32* %err, align 4, !dbg !6939
  store i32 %268, i32* %retval, align 4, !dbg !6942
  br label %return, !dbg !6942

if.end434:                                        ; preds = %do.body428
  br label %do.end435, !dbg !6943

do.end435:                                        ; preds = %if.end434
  br label %do.end436, !dbg !6945

do.end436:                                        ; preds = %do.end435
  br label %do.body437, !dbg !6947, !llvm.loop !6948

do.body437:                                       ; preds = %do.end436
  %269 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6949
  %270 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6952
  %271 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6953
  %call438 = call i32 @cbs_vp9_write_loop_filter_params(%struct.CodedBitstreamContext* %269, %struct.PutBitContext* %270, %struct.VP9RawFrameHeader* %271), !dbg !6954
  store i32 %call438, i32* %err, align 4, !dbg !6955
  %272 = load i32, i32* %err, align 4, !dbg !6956
  %cmp439 = icmp slt i32 %272, 0, !dbg !6957
  br i1 %cmp439, label %if.then441, label %if.end442, !dbg !6956

if.then441:                                       ; preds = %do.body437
  %273 = load i32, i32* %err, align 4, !dbg !6958
  store i32 %273, i32* %retval, align 4, !dbg !6961
  br label %return, !dbg !6961

if.end442:                                        ; preds = %do.body437
  br label %do.end443, !dbg !6962

do.end443:                                        ; preds = %if.end442
  br label %do.body444, !dbg !6964, !llvm.loop !6965

do.body444:                                       ; preds = %do.end443
  %274 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6966
  %275 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6969
  %276 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6970
  %call445 = call i32 @cbs_vp9_write_quantization_params(%struct.CodedBitstreamContext* %274, %struct.PutBitContext* %275, %struct.VP9RawFrameHeader* %276), !dbg !6971
  store i32 %call445, i32* %err, align 4, !dbg !6972
  %277 = load i32, i32* %err, align 4, !dbg !6973
  %cmp446 = icmp slt i32 %277, 0, !dbg !6974
  br i1 %cmp446, label %if.then448, label %if.end449, !dbg !6973

if.then448:                                       ; preds = %do.body444
  %278 = load i32, i32* %err, align 4, !dbg !6975
  store i32 %278, i32* %retval, align 4, !dbg !6978
  br label %return, !dbg !6978

if.end449:                                        ; preds = %do.body444
  br label %do.end450, !dbg !6979

do.end450:                                        ; preds = %if.end449
  br label %do.body451, !dbg !6981, !llvm.loop !6982

do.body451:                                       ; preds = %do.end450
  %279 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !6983
  %280 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !6986
  %281 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !6987
  %call452 = call i32 @cbs_vp9_write_segmentation_params(%struct.CodedBitstreamContext* %279, %struct.PutBitContext* %280, %struct.VP9RawFrameHeader* %281), !dbg !6988
  store i32 %call452, i32* %err, align 4, !dbg !6989
  %282 = load i32, i32* %err, align 4, !dbg !6990
  %cmp453 = icmp slt i32 %282, 0, !dbg !6991
  br i1 %cmp453, label %if.then455, label %if.end456, !dbg !6990

if.then455:                                       ; preds = %do.body451
  %283 = load i32, i32* %err, align 4, !dbg !6992
  store i32 %283, i32* %retval, align 4, !dbg !6995
  br label %return, !dbg !6995

if.end456:                                        ; preds = %do.body451
  br label %do.end457, !dbg !6996

do.end457:                                        ; preds = %if.end456
  br label %do.body458, !dbg !6998, !llvm.loop !6999

do.body458:                                       ; preds = %do.end457
  %284 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7000
  %285 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7003
  %286 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7004
  %call459 = call i32 @cbs_vp9_write_tile_info(%struct.CodedBitstreamContext* %284, %struct.PutBitContext* %285, %struct.VP9RawFrameHeader* %286), !dbg !7005
  store i32 %call459, i32* %err, align 4, !dbg !7006
  %287 = load i32, i32* %err, align 4, !dbg !7007
  %cmp460 = icmp slt i32 %287, 0, !dbg !7008
  br i1 %cmp460, label %if.then462, label %if.end463, !dbg !7007

if.then462:                                       ; preds = %do.body458
  %288 = load i32, i32* %err, align 4, !dbg !7009
  store i32 %288, i32* %retval, align 4, !dbg !7012
  br label %return, !dbg !7012

if.end463:                                        ; preds = %do.body458
  br label %do.end464, !dbg !7013

do.end464:                                        ; preds = %if.end463
  br label %do.body465, !dbg !7015, !llvm.loop !7016

do.body465:                                       ; preds = %do.end464
  br label %do.body466, !dbg !7017, !llvm.loop !7020

do.body466:                                       ; preds = %do.body465
  %289 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7022
  %290 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7025
  %291 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7026
  %header_size_in_bytes467 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %291, i32 0, i32 54, !dbg !7027
  %292 = load i16, i16* %header_size_in_bytes467, align 2, !dbg !7027
  %conv468 = zext i16 %292 to i32, !dbg !7026
  %call469 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %289, %struct.PutBitContext* %290, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0), i32* null, i32 %conv468, i32 0, i32 65535), !dbg !7028
  store i32 %call469, i32* %err, align 4, !dbg !7029
  %293 = load i32, i32* %err, align 4, !dbg !7030
  %cmp470 = icmp slt i32 %293, 0, !dbg !7031
  br i1 %cmp470, label %if.then472, label %if.end473, !dbg !7030

if.then472:                                       ; preds = %do.body466
  %294 = load i32, i32* %err, align 4, !dbg !7032
  store i32 %294, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

if.end473:                                        ; preds = %do.body466
  br label %do.end474, !dbg !7036

do.end474:                                        ; preds = %if.end473
  br label %do.end475, !dbg !7038

do.end475:                                        ; preds = %do.end474
  store i32 0, i32* %i, align 4, !dbg !7040
  br label %for.cond476, !dbg !7042

for.cond476:                                      ; preds = %for.inc499, %do.end475
  %295 = load i32, i32* %i, align 4, !dbg !7043
  %cmp477 = icmp slt i32 %295, 8, !dbg !7046
  br i1 %cmp477, label %for.body479, label %for.end501, !dbg !7047

for.body479:                                      ; preds = %for.cond476
  %296 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7048
  %refresh_frame_flags480 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %296, i32 0, i32 13, !dbg !7051
  %297 = load i8, i8* %refresh_frame_flags480, align 1, !dbg !7051
  %conv481 = zext i8 %297 to i32, !dbg !7048
  %298 = load i32, i32* %i, align 4, !dbg !7052
  %shl482 = shl i32 1, %298, !dbg !7053
  %and = and i32 %conv481, %shl482, !dbg !7054
  %tobool483 = icmp ne i32 %and, 0, !dbg !7054
  br i1 %tobool483, label %if.then484, label %if.end498, !dbg !7055

if.then484:                                       ; preds = %for.body479
  %299 = load i32, i32* %i, align 4, !dbg !7056
  %idxprom485 = sext i32 %299 to i64, !dbg !7058
  %300 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7058
  %ref = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %300, i32 0, i32 10, !dbg !7059
  %arrayidx486 = getelementptr inbounds [8 x %struct.VP9ReferenceFrameState], [8 x %struct.VP9ReferenceFrameState]* %ref, i64 0, i64 %idxprom485, !dbg !7058
  %frame_width = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral487, i32 0, i32 0, !dbg !7060
  %301 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7061
  %frame_width488 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %301, i32 0, i32 5, !dbg !7062
  %302 = load i32, i32* %frame_width488, align 4, !dbg !7062
  store i32 %302, i32* %frame_width, align 4, !dbg !7060
  %frame_height = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral487, i32 0, i32 1, !dbg !7060
  %303 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7063
  %frame_height489 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %303, i32 0, i32 6, !dbg !7064
  %304 = load i32, i32* %frame_height489, align 8, !dbg !7064
  store i32 %304, i32* %frame_height, align 4, !dbg !7060
  %subsampling_x490 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral487, i32 0, i32 2, !dbg !7060
  %305 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7065
  %subsampling_x491 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %305, i32 0, i32 7, !dbg !7066
  %306 = load i8, i8* %subsampling_x491, align 4, !dbg !7066
  %conv492 = zext i8 %306 to i32, !dbg !7065
  store i32 %conv492, i32* %subsampling_x490, align 4, !dbg !7060
  %subsampling_y493 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral487, i32 0, i32 3, !dbg !7060
  %307 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7067
  %subsampling_y494 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %307, i32 0, i32 8, !dbg !7068
  %308 = load i8, i8* %subsampling_y494, align 1, !dbg !7068
  %conv495 = zext i8 %308 to i32, !dbg !7067
  store i32 %conv495, i32* %subsampling_y493, align 4, !dbg !7060
  %bit_depth496 = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %.compoundliteral487, i32 0, i32 4, !dbg !7060
  %309 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7069
  %bit_depth497 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %309, i32 0, i32 9, !dbg !7070
  %310 = load i32, i32* %bit_depth497, align 8, !dbg !7070
  store i32 %310, i32* %bit_depth496, align 4, !dbg !7060
  %311 = bitcast %struct.VP9ReferenceFrameState* %arrayidx486 to i8*, !dbg !7071
  %312 = bitcast %struct.VP9ReferenceFrameState* %.compoundliteral487 to i8*, !dbg !7071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %311, i8* %312, i64 20, i32 4, i1 false), !dbg !7071
  br label %if.end498, !dbg !7072

if.end498:                                        ; preds = %if.then484, %for.body479
  br label %for.inc499, !dbg !7073

for.inc499:                                       ; preds = %if.end498
  %313 = load i32, i32* %i, align 4, !dbg !7074
  %inc500 = add nsw i32 %313, 1, !dbg !7074
  store i32 %inc500, i32* %i, align 4, !dbg !7074
  br label %for.cond476, !dbg !7076, !llvm.loop !7077

for.end501:                                       ; preds = %for.cond476
  %314 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7079
  %log_ctx502 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %314, i32 0, i32 0, !dbg !7080
  %315 = load i8*, i8** %log_ctx502, align 8, !dbg !7080
  %316 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7081
  %frame_width503 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %316, i32 0, i32 5, !dbg !7082
  %317 = load i32, i32* %frame_width503, align 4, !dbg !7082
  %318 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7083
  %frame_height504 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %318, i32 0, i32 6, !dbg !7084
  %319 = load i32, i32* %frame_height504, align 8, !dbg !7084
  %320 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7085
  %subsampling_x505 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %320, i32 0, i32 7, !dbg !7086
  %321 = load i8, i8* %subsampling_x505, align 4, !dbg !7086
  %conv506 = zext i8 %321 to i32, !dbg !7085
  %322 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7087
  %subsampling_y507 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %322, i32 0, i32 8, !dbg !7088
  %323 = load i8, i8* %subsampling_y507, align 1, !dbg !7088
  %conv508 = zext i8 %323 to i32, !dbg !7087
  %324 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7089
  %bit_depth509 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %324, i32 0, i32 9, !dbg !7090
  %325 = load i32, i32* %bit_depth509, align 8, !dbg !7090
  %326 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7091
  %tile_cols_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %326, i32 0, i32 52, !dbg !7092
  %327 = load i8, i8* %tile_cols_log2, align 1, !dbg !7092
  %conv510 = zext i8 %327 to i32, !dbg !7091
  %shl511 = shl i32 1, %conv510, !dbg !7093
  %328 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7094
  %tile_rows_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %328, i32 0, i32 53, !dbg !7095
  %329 = load i8, i8* %tile_rows_log2, align 2, !dbg !7095
  %conv512 = zext i8 %329 to i32, !dbg !7094
  %shl513 = shl i32 1, %conv512, !dbg !7096
  call void (i8*, i32, i8*, ...) @av_log(i8* %315, i32 48, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.33, i32 0, i32 0), i32 %317, i32 %319, i32 %conv506, i32 %conv508, i32 %325, i32 %shl511, i32 %shl513), !dbg !7097
  store i32 0, i32* %retval, align 4, !dbg !7098
  br label %return, !dbg !7098

return:                                           ; preds = %for.end501, %if.then472, %if.then462, %if.then455, %if.then448, %if.then441, %if.then433, %if.then399, %if.then389, %if.then373, %if.then365, %if.then356, %if.then348, %if.then330, %if.then318, %if.then307, %if.then300, %if.then292, %if.then246, %if.then234, %if.then208, %if.then180, %if.then155, %if.then148, %if.then141, %if.then133, %if.then120, %if.then110, %if.then100, %do.end92, %if.then60, %if.then48, %if.then37, %if.then20, %if.then10, %if.then
  %330 = load i32, i32* %retval, align 4, !dbg !7099
  ret i32 %330, !dbg !7099
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_trailing_bits(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw) #0 !dbg !7100 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %err = alloca i32, align 4
  %zero = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7103, metadata !730), !dbg !7104
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7105, metadata !730), !dbg !7106
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7107, metadata !730), !dbg !7108
  call void @llvm.dbg.declare(metadata i32* %zero, metadata !7109, metadata !730), !dbg !7110
  store i32 0, i32* %zero, align 4, !dbg !7110
  br label %while.cond, !dbg !7111

while.cond:                                       ; preds = %do.end4, %entry
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7112
  %call = call i32 @put_bits_count(%struct.PutBitContext* %0), !dbg !7114
  %rem = srem i32 %call, 8, !dbg !7115
  %cmp = icmp ne i32 %rem, 0, !dbg !7116
  br i1 %cmp, label %while.body, label %while.end, !dbg !7117

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !7118, !llvm.loop !7119

do.body:                                          ; preds = %while.body
  br label %do.body1, !dbg !7120, !llvm.loop !7123

do.body1:                                         ; preds = %do.body
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7125
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7128
  %3 = load i32, i32* %zero, align 4, !dbg !7129
  %call2 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %1, %struct.PutBitContext* %2, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i32* null, i32 %3, i32 0, i32 1), !dbg !7130
  store i32 %call2, i32* %err, align 4, !dbg !7131
  %4 = load i32, i32* %err, align 4, !dbg !7132
  %cmp3 = icmp slt i32 %4, 0, !dbg !7133
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7132

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !7134
  store i32 %5, i32* %retval, align 4, !dbg !7137
  br label %return, !dbg !7137

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7138

do.end:                                           ; preds = %if.end
  br label %do.end4, !dbg !7140

do.end4:                                          ; preds = %do.end
  br label %while.cond, !dbg !7142, !llvm.loop !7144

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !7145
  br label %return, !dbg !7145

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7146
  ret i32 %6, !dbg !7146
}

declare i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext*, %struct.PutBitContext*, i32, i8*, i32*, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_frame_sync_code(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !7147 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %frame_sync_byte_0 = alloca i8, align 1
  %frame_sync_byte_1 = alloca i8, align 1
  %frame_sync_byte_2 = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7148, metadata !730), !dbg !7149
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7150, metadata !730), !dbg !7151
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7152, metadata !730), !dbg !7153
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_0, metadata !7154, metadata !730), !dbg !7155
  store i8 73, i8* %frame_sync_byte_0, align 1, !dbg !7155
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_1, metadata !7156, metadata !730), !dbg !7157
  store i8 -125, i8* %frame_sync_byte_1, align 1, !dbg !7157
  call void @llvm.dbg.declare(metadata i8* %frame_sync_byte_2, metadata !7158, metadata !730), !dbg !7159
  store i8 66, i8* %frame_sync_byte_2, align 1, !dbg !7159
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7160, metadata !730), !dbg !7161
  br label %do.body, !dbg !7162, !llvm.loop !7163

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7164, !llvm.loop !7167

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7169
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7172
  %2 = load i8, i8* %frame_sync_byte_0, align 1, !dbg !7173
  %conv = zext i8 %2 to i32, !dbg !7173
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 255), !dbg !7174
  store i32 %call, i32* %err, align 4, !dbg !7175
  %3 = load i32, i32* %err, align 4, !dbg !7172
  %cmp = icmp slt i32 %3, 0, !dbg !7176
  br i1 %cmp, label %if.then, label %if.end, !dbg !7172

if.then:                                          ; preds = %do.body1
  %4 = load i32, i32* %err, align 4, !dbg !7177
  store i32 %4, i32* %retval, align 4, !dbg !7180
  br label %return, !dbg !7180

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7181

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !7183

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !7185, !llvm.loop !7186

do.body4:                                         ; preds = %do.end3
  br label %do.body5, !dbg !7187, !llvm.loop !7190

do.body5:                                         ; preds = %do.body4
  %5 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7192
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7195
  %7 = load i8, i8* %frame_sync_byte_1, align 1, !dbg !7196
  %conv6 = zext i8 %7 to i32, !dbg !7196
  %call7 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %5, %struct.PutBitContext* %6, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i32 0, i32 0), i32* null, i32 %conv6, i32 0, i32 255), !dbg !7197
  store i32 %call7, i32* %err, align 4, !dbg !7198
  %8 = load i32, i32* %err, align 4, !dbg !7195
  %cmp8 = icmp slt i32 %8, 0, !dbg !7199
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !7195

if.then10:                                        ; preds = %do.body5
  %9 = load i32, i32* %err, align 4, !dbg !7200
  store i32 %9, i32* %retval, align 4, !dbg !7203
  br label %return, !dbg !7203

if.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !7204

do.end12:                                         ; preds = %if.end11
  br label %do.end13, !dbg !7206

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !7208, !llvm.loop !7209

do.body14:                                        ; preds = %do.end13
  br label %do.body15, !dbg !7210, !llvm.loop !7213

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7215
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7218
  %12 = load i8, i8* %frame_sync_byte_2, align 1, !dbg !7219
  %conv16 = zext i8 %12 to i32, !dbg !7219
  %call17 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %10, %struct.PutBitContext* %11, i32 8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i32* null, i32 %conv16, i32 0, i32 255), !dbg !7220
  store i32 %call17, i32* %err, align 4, !dbg !7221
  %13 = load i32, i32* %err, align 4, !dbg !7218
  %cmp18 = icmp slt i32 %13, 0, !dbg !7222
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7218

if.then20:                                        ; preds = %do.body15
  %14 = load i32, i32* %err, align 4, !dbg !7223
  store i32 %14, i32* %retval, align 4, !dbg !7226
  br label %return, !dbg !7226

if.end21:                                         ; preds = %do.body15
  br label %do.end22, !dbg !7227

do.end22:                                         ; preds = %if.end21
  br label %do.end23, !dbg !7229

do.end23:                                         ; preds = %do.end22
  %15 = load i8, i8* %frame_sync_byte_0, align 1, !dbg !7231
  %conv24 = zext i8 %15 to i32, !dbg !7231
  %cmp25 = icmp ne i32 %conv24, 73, !dbg !7233
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !7234

lor.lhs.false:                                    ; preds = %do.end23
  %16 = load i8, i8* %frame_sync_byte_1, align 1, !dbg !7235
  %conv27 = zext i8 %16 to i32, !dbg !7235
  %cmp28 = icmp ne i32 %conv27, 131, !dbg !7236
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !7237

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %17 = load i8, i8* %frame_sync_byte_2, align 1, !dbg !7238
  %conv31 = zext i8 %17 to i32, !dbg !7238
  %cmp32 = icmp ne i32 %conv31, 66, !dbg !7239
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !7240

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %do.end23
  %18 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7242
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %18, i32 0, i32 0, !dbg !7244
  %19 = load i8*, i8** %log_ctx, align 8, !dbg !7244
  %20 = load i8, i8* %frame_sync_byte_0, align 1, !dbg !7245
  %conv35 = zext i8 %20 to i32, !dbg !7245
  %21 = load i8, i8* %frame_sync_byte_1, align 1, !dbg !7246
  %conv36 = zext i8 %21 to i32, !dbg !7246
  %22 = load i8, i8* %frame_sync_byte_2, align 1, !dbg !7247
  %conv37 = zext i8 %22 to i32, !dbg !7247
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37, i32 0, i32 0), i32 %conv35, i32 %conv36, i32 %conv37), !dbg !7248
  store i32 -1094995529, i32* %retval, align 4, !dbg !7249
  br label %return, !dbg !7249

if.end38:                                         ; preds = %lor.lhs.false30
  store i32 0, i32* %retval, align 4, !dbg !7250
  br label %return, !dbg !7250

return:                                           ; preds = %if.end38, %if.then34, %if.then20, %if.then10, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7251
  ret i32 %23, !dbg !7251
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_color_config(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current, i32 %profile) #0 !dbg !7252 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %profile.addr = alloca i32, align 4
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7255, metadata !730), !dbg !7256
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7257, metadata !730), !dbg !7258
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7259, metadata !730), !dbg !7260
  store i32 %profile, i32* %profile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %profile.addr, metadata !7261, metadata !730), !dbg !7262
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !7263, metadata !730), !dbg !7264
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7265
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !7266
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7266
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !7265
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7264
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7267, metadata !730), !dbg !7268
  %3 = load i32, i32* %profile.addr, align 4, !dbg !7269
  %cmp = icmp sge i32 %3, 2, !dbg !7271
  br i1 %cmp, label %if.then, label %if.else, !dbg !7272

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7273, !llvm.loop !7275

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !7276, !llvm.loop !7279

do.body1:                                         ; preds = %do.body
  %4 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7281
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7284
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7285
  %ten_or_twelve_bit = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 8, !dbg !7286
  %7 = load i8, i8* %ten_or_twelve_bit, align 2, !dbg !7286
  %conv = zext i8 %7 to i32, !dbg !7285
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %4, %struct.PutBitContext* %5, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 1), !dbg !7287
  store i32 %call, i32* %err, align 4, !dbg !7288
  %8 = load i32, i32* %err, align 4, !dbg !7289
  %cmp2 = icmp slt i32 %8, 0, !dbg !7290
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !7289

if.then4:                                         ; preds = %do.body1
  %9 = load i32, i32* %err, align 4, !dbg !7291
  store i32 %9, i32* %retval, align 4, !dbg !7294
  br label %return, !dbg !7294

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7295

do.end:                                           ; preds = %if.end
  br label %do.end5, !dbg !7297

do.end5:                                          ; preds = %do.end
  %10 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7299
  %ten_or_twelve_bit6 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %10, i32 0, i32 8, !dbg !7300
  %11 = load i8, i8* %ten_or_twelve_bit6, align 2, !dbg !7300
  %conv7 = zext i8 %11 to i32, !dbg !7299
  %tobool = icmp ne i32 %conv7, 0, !dbg !7299
  %cond = select i1 %tobool, i32 12, i32 10, !dbg !7299
  %12 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7301
  %bit_depth = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %12, i32 0, i32 9, !dbg !7302
  store i32 %cond, i32* %bit_depth, align 8, !dbg !7303
  br label %if.end9, !dbg !7304

if.else:                                          ; preds = %entry
  %13 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7305
  %bit_depth8 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %13, i32 0, i32 9, !dbg !7306
  store i32 8, i32* %bit_depth8, align 8, !dbg !7307
  br label %if.end9

if.end9:                                          ; preds = %if.else, %do.end5
  br label %do.body10, !dbg !7308, !llvm.loop !7309

do.body10:                                        ; preds = %if.end9
  br label %do.body11, !dbg !7310, !llvm.loop !7313

do.body11:                                        ; preds = %do.body10
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7315
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7318
  %16 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7319
  %color_space = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %16, i32 0, i32 9, !dbg !7320
  %17 = load i8, i8* %color_space, align 1, !dbg !7320
  %conv12 = zext i8 %17 to i32, !dbg !7319
  %call13 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %14, %struct.PutBitContext* %15, i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i32* null, i32 %conv12, i32 0, i32 7), !dbg !7321
  store i32 %call13, i32* %err, align 4, !dbg !7322
  %18 = load i32, i32* %err, align 4, !dbg !7323
  %cmp14 = icmp slt i32 %18, 0, !dbg !7324
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !7323

if.then16:                                        ; preds = %do.body11
  %19 = load i32, i32* %err, align 4, !dbg !7325
  store i32 %19, i32* %retval, align 4, !dbg !7328
  br label %return, !dbg !7328

if.end17:                                         ; preds = %do.body11
  br label %do.end18, !dbg !7329

do.end18:                                         ; preds = %if.end17
  br label %do.end19, !dbg !7331

do.end19:                                         ; preds = %do.end18
  %20 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7333
  %color_space20 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %20, i32 0, i32 9, !dbg !7335
  %21 = load i8, i8* %color_space20, align 1, !dbg !7335
  %conv21 = zext i8 %21 to i32, !dbg !7333
  %cmp22 = icmp ne i32 %conv21, 7, !dbg !7336
  br i1 %cmp22, label %if.then24, label %if.else92, !dbg !7337

if.then24:                                        ; preds = %do.end19
  br label %do.body25, !dbg !7338, !llvm.loop !7340

do.body25:                                        ; preds = %if.then24
  br label %do.body26, !dbg !7341, !llvm.loop !7344

do.body26:                                        ; preds = %do.body25
  %22 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7346
  %23 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7349
  %24 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7350
  %color_range = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %24, i32 0, i32 10, !dbg !7351
  %25 = load i8, i8* %color_range, align 2, !dbg !7351
  %conv27 = zext i8 %25 to i32, !dbg !7350
  %call28 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %22, %struct.PutBitContext* %23, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i32* null, i32 %conv27, i32 0, i32 1), !dbg !7352
  store i32 %call28, i32* %err, align 4, !dbg !7353
  %26 = load i32, i32* %err, align 4, !dbg !7354
  %cmp29 = icmp slt i32 %26, 0, !dbg !7355
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7354

if.then31:                                        ; preds = %do.body26
  %27 = load i32, i32* %err, align 4, !dbg !7356
  store i32 %27, i32* %retval, align 4, !dbg !7359
  br label %return, !dbg !7359

if.end32:                                         ; preds = %do.body26
  br label %do.end33, !dbg !7360

do.end33:                                         ; preds = %if.end32
  br label %do.end34, !dbg !7362

do.end34:                                         ; preds = %do.end33
  %28 = load i32, i32* %profile.addr, align 4, !dbg !7364
  %cmp35 = icmp eq i32 %28, 1, !dbg !7366
  br i1 %cmp35, label %if.then39, label %lor.lhs.false, !dbg !7367

lor.lhs.false:                                    ; preds = %do.end34
  %29 = load i32, i32* %profile.addr, align 4, !dbg !7368
  %cmp37 = icmp eq i32 %29, 3, !dbg !7370
  br i1 %cmp37, label %if.then39, label %if.else69, !dbg !7371

if.then39:                                        ; preds = %lor.lhs.false, %do.end34
  br label %do.body40, !dbg !7372, !llvm.loop !7374

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !7375, !llvm.loop !7378

do.body41:                                        ; preds = %do.body40
  %30 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7380
  %31 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7383
  %32 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7384
  %subsampling_x = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %32, i32 0, i32 11, !dbg !7385
  %33 = load i8, i8* %subsampling_x, align 1, !dbg !7385
  %conv42 = zext i8 %33 to i32, !dbg !7384
  %call43 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %30, %struct.PutBitContext* %31, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i32* null, i32 %conv42, i32 0, i32 1), !dbg !7386
  store i32 %call43, i32* %err, align 4, !dbg !7387
  %34 = load i32, i32* %err, align 4, !dbg !7388
  %cmp44 = icmp slt i32 %34, 0, !dbg !7389
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7388

if.then46:                                        ; preds = %do.body41
  %35 = load i32, i32* %err, align 4, !dbg !7390
  store i32 %35, i32* %retval, align 4, !dbg !7393
  br label %return, !dbg !7393

if.end47:                                         ; preds = %do.body41
  br label %do.end48, !dbg !7394

do.end48:                                         ; preds = %if.end47
  br label %do.end49, !dbg !7396

do.end49:                                         ; preds = %do.end48
  br label %do.body50, !dbg !7398, !llvm.loop !7399

do.body50:                                        ; preds = %do.end49
  br label %do.body51, !dbg !7400, !llvm.loop !7403

do.body51:                                        ; preds = %do.body50
  %36 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7405
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7408
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7409
  %subsampling_y = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %38, i32 0, i32 12, !dbg !7410
  %39 = load i8, i8* %subsampling_y, align 2, !dbg !7410
  %conv52 = zext i8 %39 to i32, !dbg !7409
  %call53 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %36, %struct.PutBitContext* %37, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i32* null, i32 %conv52, i32 0, i32 1), !dbg !7411
  store i32 %call53, i32* %err, align 4, !dbg !7412
  %40 = load i32, i32* %err, align 4, !dbg !7413
  %cmp54 = icmp slt i32 %40, 0, !dbg !7414
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7413

if.then56:                                        ; preds = %do.body51
  %41 = load i32, i32* %err, align 4, !dbg !7415
  store i32 %41, i32* %retval, align 4, !dbg !7418
  br label %return, !dbg !7418

if.end57:                                         ; preds = %do.body51
  br label %do.end58, !dbg !7419

do.end58:                                         ; preds = %if.end57
  br label %do.end59, !dbg !7421

do.end59:                                         ; preds = %do.end58
  br label %do.body60, !dbg !7423, !llvm.loop !7424

do.body60:                                        ; preds = %do.end59
  br label %do.body61, !dbg !7425, !llvm.loop !7428

do.body61:                                        ; preds = %do.body60
  %42 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7430
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7433
  %call62 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %42, %struct.PutBitContext* %43, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32 0, i32 0, i32 0), !dbg !7434
  store i32 %call62, i32* %err, align 4, !dbg !7435
  %44 = load i32, i32* %err, align 4, !dbg !7436
  %cmp63 = icmp slt i32 %44, 0, !dbg !7437
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7436

if.then65:                                        ; preds = %do.body61
  %45 = load i32, i32* %err, align 4, !dbg !7438
  store i32 %45, i32* %retval, align 4, !dbg !7441
  br label %return, !dbg !7441

if.end66:                                         ; preds = %do.body61
  br label %do.end67, !dbg !7442

do.end67:                                         ; preds = %if.end66
  br label %do.end68, !dbg !7444

do.end68:                                         ; preds = %do.end67
  br label %if.end91, !dbg !7446

if.else69:                                        ; preds = %lor.lhs.false
  br label %do.body70, !dbg !7447, !llvm.loop !7449

do.body70:                                        ; preds = %if.else69
  %46 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7450
  %subsampling_x71 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %46, i32 0, i32 11, !dbg !7454
  %47 = load i8, i8* %subsampling_x71, align 1, !dbg !7454
  %conv72 = zext i8 %47 to i32, !dbg !7450
  %cmp73 = icmp ne i32 %conv72, 1, !dbg !7455
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !7450

if.then75:                                        ; preds = %do.body70
  %48 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7456
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %48, i32 0, i32 0, !dbg !7459
  %49 = load i8*, i8** %log_ctx, align 8, !dbg !7459
  %50 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7460
  %subsampling_x76 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %50, i32 0, i32 11, !dbg !7461
  %51 = load i8, i8* %subsampling_x76, align 1, !dbg !7461
  %conv77 = zext i8 %51 to i64, !dbg !7462
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i64 %conv77, i64 1), !dbg !7463
  br label %if.end78, !dbg !7464

if.end78:                                         ; preds = %if.then75, %do.body70
  br label %do.end79, !dbg !7465

do.end79:                                         ; preds = %if.end78
  br label %do.body80, !dbg !7467, !llvm.loop !7468

do.body80:                                        ; preds = %do.end79
  %52 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7469
  %subsampling_y81 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %52, i32 0, i32 12, !dbg !7473
  %53 = load i8, i8* %subsampling_y81, align 2, !dbg !7473
  %conv82 = zext i8 %53 to i32, !dbg !7469
  %cmp83 = icmp ne i32 %conv82, 1, !dbg !7474
  br i1 %cmp83, label %if.then85, label %if.end89, !dbg !7469

if.then85:                                        ; preds = %do.body80
  %54 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7475
  %log_ctx86 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %54, i32 0, i32 0, !dbg !7478
  %55 = load i8*, i8** %log_ctx86, align 8, !dbg !7478
  %56 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7479
  %subsampling_y87 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %56, i32 0, i32 12, !dbg !7480
  %57 = load i8, i8* %subsampling_y87, align 2, !dbg !7480
  %conv88 = zext i8 %57 to i64, !dbg !7481
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i64 %conv88, i64 1), !dbg !7482
  br label %if.end89, !dbg !7483

if.end89:                                         ; preds = %if.then85, %do.body80
  br label %do.end90, !dbg !7484

do.end90:                                         ; preds = %if.end89
  br label %if.end91

if.end91:                                         ; preds = %do.end90, %do.end68
  br label %if.end142, !dbg !7486

if.else92:                                        ; preds = %do.end19
  br label %do.body93, !dbg !7487, !llvm.loop !7489

do.body93:                                        ; preds = %if.else92
  %58 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7490
  %color_range94 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %58, i32 0, i32 10, !dbg !7494
  %59 = load i8, i8* %color_range94, align 2, !dbg !7494
  %conv95 = zext i8 %59 to i32, !dbg !7490
  %cmp96 = icmp ne i32 %conv95, 1, !dbg !7495
  br i1 %cmp96, label %if.then98, label %if.end102, !dbg !7490

if.then98:                                        ; preds = %do.body93
  %60 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7496
  %log_ctx99 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %60, i32 0, i32 0, !dbg !7499
  %61 = load i8*, i8** %log_ctx99, align 8, !dbg !7499
  %62 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7500
  %color_range100 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %62, i32 0, i32 10, !dbg !7501
  %63 = load i8, i8* %color_range100, align 2, !dbg !7501
  %conv101 = zext i8 %63 to i64, !dbg !7502
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i64 %conv101, i64 1), !dbg !7503
  br label %if.end102, !dbg !7504

if.end102:                                        ; preds = %if.then98, %do.body93
  br label %do.end103, !dbg !7505

do.end103:                                        ; preds = %if.end102
  %64 = load i32, i32* %profile.addr, align 4, !dbg !7507
  %cmp104 = icmp eq i32 %64, 1, !dbg !7509
  br i1 %cmp104, label %if.then109, label %lor.lhs.false106, !dbg !7510

lor.lhs.false106:                                 ; preds = %do.end103
  %65 = load i32, i32* %profile.addr, align 4, !dbg !7511
  %cmp107 = icmp eq i32 %65, 3, !dbg !7513
  br i1 %cmp107, label %if.then109, label %if.end141, !dbg !7514

if.then109:                                       ; preds = %lor.lhs.false106, %do.end103
  br label %do.body110, !dbg !7515, !llvm.loop !7517

do.body110:                                       ; preds = %if.then109
  %66 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7518
  %subsampling_x111 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %66, i32 0, i32 11, !dbg !7522
  %67 = load i8, i8* %subsampling_x111, align 1, !dbg !7522
  %conv112 = zext i8 %67 to i32, !dbg !7518
  %cmp113 = icmp ne i32 %conv112, 0, !dbg !7523
  br i1 %cmp113, label %if.then115, label %if.end119, !dbg !7518

if.then115:                                       ; preds = %do.body110
  %68 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7524
  %log_ctx116 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %68, i32 0, i32 0, !dbg !7527
  %69 = load i8*, i8** %log_ctx116, align 8, !dbg !7527
  %70 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7528
  %subsampling_x117 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %70, i32 0, i32 11, !dbg !7529
  %71 = load i8, i8* %subsampling_x117, align 1, !dbg !7529
  %conv118 = zext i8 %71 to i64, !dbg !7530
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i64 %conv118, i64 0), !dbg !7531
  br label %if.end119, !dbg !7532

if.end119:                                        ; preds = %if.then115, %do.body110
  br label %do.end120, !dbg !7533

do.end120:                                        ; preds = %if.end119
  br label %do.body121, !dbg !7535, !llvm.loop !7536

do.body121:                                       ; preds = %do.end120
  %72 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7537
  %subsampling_y122 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %72, i32 0, i32 12, !dbg !7541
  %73 = load i8, i8* %subsampling_y122, align 2, !dbg !7541
  %conv123 = zext i8 %73 to i32, !dbg !7537
  %cmp124 = icmp ne i32 %conv123, 0, !dbg !7542
  br i1 %cmp124, label %if.then126, label %if.end130, !dbg !7537

if.then126:                                       ; preds = %do.body121
  %74 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7543
  %log_ctx127 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %74, i32 0, i32 0, !dbg !7546
  %75 = load i8*, i8** %log_ctx127, align 8, !dbg !7546
  %76 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7547
  %subsampling_y128 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %76, i32 0, i32 12, !dbg !7548
  %77 = load i8, i8* %subsampling_y128, align 2, !dbg !7548
  %conv129 = zext i8 %77 to i64, !dbg !7549
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i64 %conv129, i64 0), !dbg !7550
  br label %if.end130, !dbg !7551

if.end130:                                        ; preds = %if.then126, %do.body121
  br label %do.end131, !dbg !7552

do.end131:                                        ; preds = %if.end130
  br label %do.body132, !dbg !7554, !llvm.loop !7555

do.body132:                                       ; preds = %do.end131
  br label %do.body133, !dbg !7556, !llvm.loop !7559

do.body133:                                       ; preds = %do.body132
  %78 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7561
  %79 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7564
  %call134 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %78, %struct.PutBitContext* %79, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32* null, i32 0, i32 0, i32 0), !dbg !7565
  store i32 %call134, i32* %err, align 4, !dbg !7566
  %80 = load i32, i32* %err, align 4, !dbg !7567
  %cmp135 = icmp slt i32 %80, 0, !dbg !7568
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !7567

if.then137:                                       ; preds = %do.body133
  %81 = load i32, i32* %err, align 4, !dbg !7569
  store i32 %81, i32* %retval, align 4, !dbg !7572
  br label %return, !dbg !7572

if.end138:                                        ; preds = %do.body133
  br label %do.end139, !dbg !7573

do.end139:                                        ; preds = %if.end138
  br label %do.end140, !dbg !7575

do.end140:                                        ; preds = %do.end139
  br label %if.end141, !dbg !7577

if.end141:                                        ; preds = %do.end140, %lor.lhs.false106
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end91
  %82 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7578
  %subsampling_x143 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %82, i32 0, i32 11, !dbg !7579
  %83 = load i8, i8* %subsampling_x143, align 1, !dbg !7579
  %84 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7580
  %subsampling_x144 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %84, i32 0, i32 7, !dbg !7581
  store i8 %83, i8* %subsampling_x144, align 4, !dbg !7582
  %85 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7583
  %subsampling_y145 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %85, i32 0, i32 12, !dbg !7584
  %86 = load i8, i8* %subsampling_y145, align 2, !dbg !7584
  %87 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7585
  %subsampling_y146 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %87, i32 0, i32 8, !dbg !7586
  store i8 %86, i8* %subsampling_y146, align 1, !dbg !7587
  store i32 0, i32* %retval, align 4, !dbg !7588
  br label %return, !dbg !7588

return:                                           ; preds = %if.end142, %if.then137, %if.then65, %if.then56, %if.then46, %if.then31, %if.then16, %if.then4
  %88 = load i32, i32* %retval, align 4, !dbg !7589
  ret i32 %88, !dbg !7589
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_frame_size(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !7590 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7591, metadata !730), !dbg !7592
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7593, metadata !730), !dbg !7594
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7595, metadata !730), !dbg !7596
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !7597, metadata !730), !dbg !7598
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7599
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !7600
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7600
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !7599
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7598
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7601, metadata !730), !dbg !7602
  br label %do.body, !dbg !7603, !llvm.loop !7604

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7605, !llvm.loop !7608

do.body1:                                         ; preds = %do.body
  %3 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7610
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7613
  %5 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7614
  %frame_width_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %5, i32 0, i32 23, !dbg !7615
  %6 = load i16, i16* %frame_width_minus_1, align 2, !dbg !7615
  %conv = zext i16 %6 to i32, !dbg !7614
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %3, %struct.PutBitContext* %4, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 65535), !dbg !7616
  store i32 %call, i32* %err, align 4, !dbg !7617
  %7 = load i32, i32* %err, align 4, !dbg !7618
  %cmp = icmp slt i32 %7, 0, !dbg !7619
  br i1 %cmp, label %if.then, label %if.end, !dbg !7618

if.then:                                          ; preds = %do.body1
  %8 = load i32, i32* %err, align 4, !dbg !7620
  store i32 %8, i32* %retval, align 4, !dbg !7623
  br label %return, !dbg !7623

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7624

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !7626

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !7628, !llvm.loop !7629

do.body4:                                         ; preds = %do.end3
  br label %do.body5, !dbg !7630, !llvm.loop !7633

do.body5:                                         ; preds = %do.body4
  %9 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7635
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7638
  %11 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7639
  %frame_height_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %11, i32 0, i32 24, !dbg !7640
  %12 = load i16, i16* %frame_height_minus_1, align 2, !dbg !7640
  %conv6 = zext i16 %12 to i32, !dbg !7639
  %call7 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %9, %struct.PutBitContext* %10, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i32 0, i32 0), i32* null, i32 %conv6, i32 0, i32 65535), !dbg !7641
  store i32 %call7, i32* %err, align 4, !dbg !7642
  %13 = load i32, i32* %err, align 4, !dbg !7643
  %cmp8 = icmp slt i32 %13, 0, !dbg !7644
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !7643

if.then10:                                        ; preds = %do.body5
  %14 = load i32, i32* %err, align 4, !dbg !7645
  store i32 %14, i32* %retval, align 4, !dbg !7648
  br label %return, !dbg !7648

if.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !7649

do.end12:                                         ; preds = %if.end11
  br label %do.end13, !dbg !7651

do.end13:                                         ; preds = %do.end12
  %15 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7653
  %frame_width_minus_114 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %15, i32 0, i32 23, !dbg !7654
  %16 = load i16, i16* %frame_width_minus_114, align 2, !dbg !7654
  %conv15 = zext i16 %16 to i32, !dbg !7653
  %add = add nsw i32 %conv15, 1, !dbg !7655
  %17 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7656
  %frame_width = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %17, i32 0, i32 5, !dbg !7657
  store i32 %add, i32* %frame_width, align 4, !dbg !7658
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7659
  %frame_height_minus_116 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 24, !dbg !7660
  %19 = load i16, i16* %frame_height_minus_116, align 2, !dbg !7660
  %conv17 = zext i16 %19 to i32, !dbg !7659
  %add18 = add nsw i32 %conv17, 1, !dbg !7661
  %20 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7662
  %frame_height = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %20, i32 0, i32 6, !dbg !7663
  store i32 %add18, i32* %frame_height, align 8, !dbg !7664
  %21 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7665
  %frame_width19 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %21, i32 0, i32 5, !dbg !7666
  %22 = load i32, i32* %frame_width19, align 4, !dbg !7666
  %add20 = add nsw i32 %22, 7, !dbg !7667
  %shr = ashr i32 %add20, 3, !dbg !7668
  %conv21 = trunc i32 %shr to i16, !dbg !7669
  %23 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7670
  %mi_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %23, i32 0, i32 1, !dbg !7671
  store i16 %conv21, i16* %mi_cols, align 4, !dbg !7672
  %24 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7673
  %frame_height22 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %24, i32 0, i32 6, !dbg !7674
  %25 = load i32, i32* %frame_height22, align 8, !dbg !7674
  %add23 = add nsw i32 %25, 7, !dbg !7675
  %shr24 = ashr i32 %add23, 3, !dbg !7676
  %conv25 = trunc i32 %shr24 to i16, !dbg !7677
  %26 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7678
  %mi_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %26, i32 0, i32 2, !dbg !7679
  store i16 %conv25, i16* %mi_rows, align 2, !dbg !7680
  %27 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7681
  %mi_cols26 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %27, i32 0, i32 1, !dbg !7682
  %28 = load i16, i16* %mi_cols26, align 4, !dbg !7682
  %conv27 = zext i16 %28 to i32, !dbg !7681
  %add28 = add nsw i32 %conv27, 7, !dbg !7683
  %shr29 = ashr i32 %add28, 3, !dbg !7684
  %conv30 = trunc i32 %shr29 to i16, !dbg !7685
  %29 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7686
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %29, i32 0, i32 3, !dbg !7687
  store i16 %conv30, i16* %sb64_cols, align 8, !dbg !7688
  %30 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7689
  %mi_rows31 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %30, i32 0, i32 2, !dbg !7690
  %31 = load i16, i16* %mi_rows31, align 2, !dbg !7690
  %conv32 = zext i16 %31 to i32, !dbg !7689
  %add33 = add nsw i32 %conv32, 7, !dbg !7691
  %shr34 = ashr i32 %add33, 3, !dbg !7692
  %conv35 = trunc i32 %shr34 to i16, !dbg !7693
  %32 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7694
  %sb64_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %32, i32 0, i32 4, !dbg !7695
  store i16 %conv35, i16* %sb64_rows, align 2, !dbg !7696
  store i32 0, i32* %retval, align 4, !dbg !7697
  br label %return, !dbg !7697

return:                                           ; preds = %do.end13, %if.then10, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !7698
  ret i32 %33, !dbg !7698
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_render_size(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !7699 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7700, metadata !730), !dbg !7701
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7702, metadata !730), !dbg !7703
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7704, metadata !730), !dbg !7705
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7706, metadata !730), !dbg !7707
  br label %do.body, !dbg !7708, !llvm.loop !7709

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7710, !llvm.loop !7713

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7715
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7718
  %2 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7719
  %render_and_frame_size_different = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %2, i32 0, i32 25, !dbg !7720
  %3 = load i8, i8* %render_and_frame_size_different, align 2, !dbg !7720
  %conv = zext i8 %3 to i32, !dbg !7719
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 1), !dbg !7721
  store i32 %call, i32* %err, align 4, !dbg !7722
  %4 = load i32, i32* %err, align 4, !dbg !7723
  %cmp = icmp slt i32 %4, 0, !dbg !7724
  br i1 %cmp, label %if.then, label %if.end, !dbg !7723

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !7725
  store i32 %5, i32* %retval, align 4, !dbg !7728
  br label %return, !dbg !7728

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7729

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !7731

do.end3:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7733
  %render_and_frame_size_different4 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 25, !dbg !7735
  %7 = load i8, i8* %render_and_frame_size_different4, align 2, !dbg !7735
  %tobool = icmp ne i8 %7, 0, !dbg !7733
  br i1 %tobool, label %if.then5, label %if.end26, !dbg !7736

if.then5:                                         ; preds = %do.end3
  br label %do.body6, !dbg !7737, !llvm.loop !7739

do.body6:                                         ; preds = %if.then5
  br label %do.body7, !dbg !7740, !llvm.loop !7743

do.body7:                                         ; preds = %do.body6
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7745
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7748
  %10 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7749
  %render_width_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %10, i32 0, i32 26, !dbg !7750
  %11 = load i16, i16* %render_width_minus_1, align 2, !dbg !7750
  %conv8 = zext i16 %11 to i32, !dbg !7749
  %call9 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %8, %struct.PutBitContext* %9, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i32 0, i32 0), i32* null, i32 %conv8, i32 0, i32 65535), !dbg !7751
  store i32 %call9, i32* %err, align 4, !dbg !7752
  %12 = load i32, i32* %err, align 4, !dbg !7753
  %cmp10 = icmp slt i32 %12, 0, !dbg !7754
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !7753

if.then12:                                        ; preds = %do.body7
  %13 = load i32, i32* %err, align 4, !dbg !7755
  store i32 %13, i32* %retval, align 4, !dbg !7758
  br label %return, !dbg !7758

if.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !7759

do.end14:                                         ; preds = %if.end13
  br label %do.end15, !dbg !7761

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !7763, !llvm.loop !7764

do.body16:                                        ; preds = %do.end15
  br label %do.body17, !dbg !7765, !llvm.loop !7768

do.body17:                                        ; preds = %do.body16
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7770
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7773
  %16 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7774
  %render_height_minus_1 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %16, i32 0, i32 27, !dbg !7775
  %17 = load i16, i16* %render_height_minus_1, align 2, !dbg !7775
  %conv18 = zext i16 %17 to i32, !dbg !7774
  %call19 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %14, %struct.PutBitContext* %15, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0), i32* null, i32 %conv18, i32 0, i32 65535), !dbg !7776
  store i32 %call19, i32* %err, align 4, !dbg !7777
  %18 = load i32, i32* %err, align 4, !dbg !7778
  %cmp20 = icmp slt i32 %18, 0, !dbg !7779
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !7778

if.then22:                                        ; preds = %do.body17
  %19 = load i32, i32* %err, align 4, !dbg !7780
  store i32 %19, i32* %retval, align 4, !dbg !7783
  br label %return, !dbg !7783

if.end23:                                         ; preds = %do.body17
  br label %do.end24, !dbg !7784

do.end24:                                         ; preds = %if.end23
  br label %do.end25, !dbg !7786

do.end25:                                         ; preds = %do.end24
  br label %if.end26, !dbg !7788

if.end26:                                         ; preds = %do.end25, %do.end3
  store i32 0, i32* %retval, align 4, !dbg !7789
  br label %return, !dbg !7789

return:                                           ; preds = %if.end26, %if.then22, %if.then12, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7790
  ret i32 %20, !dbg !7790
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_frame_size_with_refs(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !7791 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %ref = alloca %struct.VP9ReferenceFrameState*, align 8
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7792, metadata !730), !dbg !7793
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7794, metadata !730), !dbg !7795
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7796, metadata !730), !dbg !7797
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !7798, metadata !730), !dbg !7799
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7800
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !7801
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7801
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !7800
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7799
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7802, metadata !730), !dbg !7803
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7804, metadata !730), !dbg !7805
  store i32 0, i32* %i, align 4, !dbg !7806
  br label %for.cond, !dbg !7808

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !7809
  %cmp = icmp slt i32 %3, 3, !dbg !7812
  br i1 %cmp, label %for.body, label %for.end, !dbg !7813

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !7814, !llvm.loop !7816

do.body:                                          ; preds = %for.body
  br label %do.body1, !dbg !7817, !llvm.loop !7820

do.body1:                                         ; preds = %do.body
  %4 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7822
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7825
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !7826
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !7826
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !7826
  %6 = load i32, i32* %i, align 4, !dbg !7827
  store i32 %6, i32* %arrayinit.element, align 4, !dbg !7826
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !7828
  %7 = load i32, i32* %i, align 4, !dbg !7829
  %idxprom = sext i32 %7 to i64, !dbg !7830
  %8 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7830
  %found_ref = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %8, i32 0, i32 22, !dbg !7831
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %found_ref, i64 0, i64 %idxprom, !dbg !7830
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7830
  %conv = zext i8 %9 to i32, !dbg !7830
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %4, %struct.PutBitContext* %5, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i32* %arraydecay, i32 %conv, i32 0, i32 1), !dbg !7832
  store i32 %call, i32* %err, align 4, !dbg !7833
  %10 = load i32, i32* %err, align 4, !dbg !7834
  %cmp2 = icmp slt i32 %10, 0, !dbg !7835
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7834

if.then:                                          ; preds = %do.body1
  %11 = load i32, i32* %err, align 4, !dbg !7836
  store i32 %11, i32* %retval, align 4, !dbg !7839
  br label %return, !dbg !7839

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7840

do.end:                                           ; preds = %if.end
  br label %do.end4, !dbg !7842

do.end4:                                          ; preds = %do.end
  %12 = load i32, i32* %i, align 4, !dbg !7844
  %idxprom5 = sext i32 %12 to i64, !dbg !7846
  %13 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7846
  %found_ref6 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %13, i32 0, i32 22, !dbg !7847
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %found_ref6, i64 0, i64 %idxprom5, !dbg !7846
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !7846
  %tobool = icmp ne i8 %14, 0, !dbg !7846
  br i1 %tobool, label %if.then8, label %if.end21, !dbg !7848

if.then8:                                         ; preds = %do.end4
  call void @llvm.dbg.declare(metadata %struct.VP9ReferenceFrameState** %ref, metadata !7849, metadata !730), !dbg !7851
  %15 = load i32, i32* %i, align 4, !dbg !7852
  %idxprom9 = sext i32 %15 to i64, !dbg !7853
  %16 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7853
  %ref_frame_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %16, i32 0, i32 16, !dbg !7854
  %arrayidx10 = getelementptr inbounds [3 x i8], [3 x i8]* %ref_frame_idx, i64 0, i64 %idxprom9, !dbg !7853
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !7853
  %idxprom11 = zext i8 %17 to i64, !dbg !7855
  %18 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7855
  %ref12 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %18, i32 0, i32 10, !dbg !7856
  %arrayidx13 = getelementptr inbounds [8 x %struct.VP9ReferenceFrameState], [8 x %struct.VP9ReferenceFrameState]* %ref12, i64 0, i64 %idxprom11, !dbg !7855
  store %struct.VP9ReferenceFrameState* %arrayidx13, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7851
  %19 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7857
  %frame_width = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %19, i32 0, i32 0, !dbg !7858
  %20 = load i32, i32* %frame_width, align 4, !dbg !7858
  %21 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7859
  %frame_width14 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %21, i32 0, i32 5, !dbg !7860
  store i32 %20, i32* %frame_width14, align 4, !dbg !7861
  %22 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7862
  %frame_height = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %22, i32 0, i32 1, !dbg !7863
  %23 = load i32, i32* %frame_height, align 4, !dbg !7863
  %24 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7864
  %frame_height15 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %24, i32 0, i32 6, !dbg !7865
  store i32 %23, i32* %frame_height15, align 8, !dbg !7866
  %25 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7867
  %subsampling_x = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %25, i32 0, i32 2, !dbg !7868
  %26 = load i32, i32* %subsampling_x, align 4, !dbg !7868
  %conv16 = trunc i32 %26 to i8, !dbg !7867
  %27 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7869
  %subsampling_x17 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %27, i32 0, i32 7, !dbg !7870
  store i8 %conv16, i8* %subsampling_x17, align 4, !dbg !7871
  %28 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7872
  %subsampling_y = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %28, i32 0, i32 3, !dbg !7873
  %29 = load i32, i32* %subsampling_y, align 4, !dbg !7873
  %conv18 = trunc i32 %29 to i8, !dbg !7872
  %30 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7874
  %subsampling_y19 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %30, i32 0, i32 8, !dbg !7875
  store i8 %conv18, i8* %subsampling_y19, align 1, !dbg !7876
  %31 = load %struct.VP9ReferenceFrameState*, %struct.VP9ReferenceFrameState** %ref, align 8, !dbg !7877
  %bit_depth = getelementptr inbounds %struct.VP9ReferenceFrameState, %struct.VP9ReferenceFrameState* %31, i32 0, i32 4, !dbg !7878
  %32 = load i32, i32* %bit_depth, align 4, !dbg !7878
  %33 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7879
  %bit_depth20 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %33, i32 0, i32 9, !dbg !7880
  store i32 %32, i32* %bit_depth20, align 8, !dbg !7881
  br label %for.end, !dbg !7882

if.end21:                                         ; preds = %do.end4
  br label %for.inc, !dbg !7883

for.inc:                                          ; preds = %if.end21
  %34 = load i32, i32* %i, align 4, !dbg !7884
  %inc = add nsw i32 %34, 1, !dbg !7884
  store i32 %inc, i32* %i, align 4, !dbg !7884
  br label %for.cond, !dbg !7886, !llvm.loop !7887

for.end:                                          ; preds = %if.then8, %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !7889
  %cmp22 = icmp sge i32 %35, 3, !dbg !7891
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !7892

if.then24:                                        ; preds = %for.end
  br label %do.body25, !dbg !7893, !llvm.loop !7894

do.body25:                                        ; preds = %if.then24
  %36 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7895
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7898
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7899
  %call26 = call i32 @cbs_vp9_write_frame_size(%struct.CodedBitstreamContext* %36, %struct.PutBitContext* %37, %struct.VP9RawFrameHeader* %38), !dbg !7900
  store i32 %call26, i32* %err, align 4, !dbg !7901
  %39 = load i32, i32* %err, align 4, !dbg !7902
  %cmp27 = icmp slt i32 %39, 0, !dbg !7903
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7902

if.then29:                                        ; preds = %do.body25
  %40 = load i32, i32* %err, align 4, !dbg !7904
  store i32 %40, i32* %retval, align 4, !dbg !7907
  br label %return, !dbg !7907

if.end30:                                         ; preds = %do.body25
  br label %do.end31, !dbg !7908

do.end31:                                         ; preds = %if.end30
  br label %if.end48, !dbg !7910

if.else:                                          ; preds = %for.end
  %41 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7912
  %frame_width32 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %41, i32 0, i32 5, !dbg !7914
  %42 = load i32, i32* %frame_width32, align 4, !dbg !7914
  %add = add nsw i32 %42, 7, !dbg !7915
  %shr = ashr i32 %add, 3, !dbg !7916
  %conv33 = trunc i32 %shr to i16, !dbg !7917
  %43 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7918
  %mi_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %43, i32 0, i32 1, !dbg !7919
  store i16 %conv33, i16* %mi_cols, align 4, !dbg !7920
  %44 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7921
  %frame_height34 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %44, i32 0, i32 6, !dbg !7922
  %45 = load i32, i32* %frame_height34, align 8, !dbg !7922
  %add35 = add nsw i32 %45, 7, !dbg !7923
  %shr36 = ashr i32 %add35, 3, !dbg !7924
  %conv37 = trunc i32 %shr36 to i16, !dbg !7925
  %46 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7926
  %mi_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %46, i32 0, i32 2, !dbg !7927
  store i16 %conv37, i16* %mi_rows, align 2, !dbg !7928
  %47 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7929
  %mi_cols38 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %47, i32 0, i32 1, !dbg !7930
  %48 = load i16, i16* %mi_cols38, align 4, !dbg !7930
  %conv39 = zext i16 %48 to i32, !dbg !7929
  %add40 = add nsw i32 %conv39, 7, !dbg !7931
  %shr41 = ashr i32 %add40, 3, !dbg !7932
  %conv42 = trunc i32 %shr41 to i16, !dbg !7933
  %49 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7934
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %49, i32 0, i32 3, !dbg !7935
  store i16 %conv42, i16* %sb64_cols, align 8, !dbg !7936
  %50 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7937
  %mi_rows43 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %50, i32 0, i32 2, !dbg !7938
  %51 = load i16, i16* %mi_rows43, align 2, !dbg !7938
  %conv44 = zext i16 %51 to i32, !dbg !7937
  %add45 = add nsw i32 %conv44, 7, !dbg !7939
  %shr46 = ashr i32 %add45, 3, !dbg !7940
  %conv47 = trunc i32 %shr46 to i16, !dbg !7941
  %52 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !7942
  %sb64_rows = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %52, i32 0, i32 4, !dbg !7943
  store i16 %conv47, i16* %sb64_rows, align 2, !dbg !7944
  br label %if.end48

if.end48:                                         ; preds = %if.else, %do.end31
  br label %do.body49, !dbg !7945, !llvm.loop !7946

do.body49:                                        ; preds = %if.end48
  %53 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7947
  %54 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7950
  %55 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7951
  %call50 = call i32 @cbs_vp9_write_render_size(%struct.CodedBitstreamContext* %53, %struct.PutBitContext* %54, %struct.VP9RawFrameHeader* %55), !dbg !7952
  store i32 %call50, i32* %err, align 4, !dbg !7953
  %56 = load i32, i32* %err, align 4, !dbg !7954
  %cmp51 = icmp slt i32 %56, 0, !dbg !7955
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !7954

if.then53:                                        ; preds = %do.body49
  %57 = load i32, i32* %err, align 4, !dbg !7956
  store i32 %57, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

if.end54:                                         ; preds = %do.body49
  br label %do.end55, !dbg !7960

do.end55:                                         ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !7962
  br label %return, !dbg !7962

return:                                           ; preds = %do.end55, %if.then53, %if.then29, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !7963
  ret i32 %58, !dbg !7963
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_interpolation_filter(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !7964 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !7965, metadata !730), !dbg !7966
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !7967, metadata !730), !dbg !7968
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !7969, metadata !730), !dbg !7970
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7971, metadata !730), !dbg !7972
  br label %do.body, !dbg !7973, !llvm.loop !7974

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7975, !llvm.loop !7978

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !7980
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !7983
  %2 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7984
  %is_filter_switchable = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %2, i32 0, i32 28, !dbg !7985
  %3 = load i8, i8* %is_filter_switchable, align 2, !dbg !7985
  %conv = zext i8 %3 to i32, !dbg !7984
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 1), !dbg !7986
  store i32 %call, i32* %err, align 4, !dbg !7987
  %4 = load i32, i32* %err, align 4, !dbg !7988
  %cmp = icmp slt i32 %4, 0, !dbg !7989
  br i1 %cmp, label %if.then, label %if.end, !dbg !7988

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !7990
  store i32 %5, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !7994

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !7996

do.end3:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !7998
  %is_filter_switchable4 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 28, !dbg !8000
  %7 = load i8, i8* %is_filter_switchable4, align 2, !dbg !8000
  %tobool = icmp ne i8 %7, 0, !dbg !7998
  br i1 %tobool, label %if.end16, label %if.then5, !dbg !8001

if.then5:                                         ; preds = %do.end3
  br label %do.body6, !dbg !8002, !llvm.loop !8003

do.body6:                                         ; preds = %if.then5
  br label %do.body7, !dbg !8004, !llvm.loop !8007

do.body7:                                         ; preds = %do.body6
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8009
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8012
  %10 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8013
  %raw_interpolation_filter_type = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %10, i32 0, i32 29, !dbg !8014
  %11 = load i8, i8* %raw_interpolation_filter_type, align 1, !dbg !8014
  %conv8 = zext i8 %11 to i32, !dbg !8013
  %call9 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %8, %struct.PutBitContext* %9, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0), i32* null, i32 %conv8, i32 0, i32 3), !dbg !8015
  store i32 %call9, i32* %err, align 4, !dbg !8016
  %12 = load i32, i32* %err, align 4, !dbg !8017
  %cmp10 = icmp slt i32 %12, 0, !dbg !8018
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8017

if.then12:                                        ; preds = %do.body7
  %13 = load i32, i32* %err, align 4, !dbg !8019
  store i32 %13, i32* %retval, align 4, !dbg !8022
  br label %return, !dbg !8022

if.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !8023

do.end14:                                         ; preds = %if.end13
  br label %do.end15, !dbg !8025

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !8027

if.end16:                                         ; preds = %do.end15, %do.end3
  store i32 0, i32* %retval, align 4, !dbg !8029
  br label %return, !dbg !8029

return:                                           ; preds = %if.end16, %if.then12, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8030
  ret i32 %14, !dbg !8030
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_loop_filter_params(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !8031 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %.compoundliteral58 = alloca [2 x i32], align 4
  %.compoundliteral79 = alloca [2 x i32], align 4
  %.compoundliteral100 = alloca [2 x i32], align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !8032, metadata !730), !dbg !8033
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !8034, metadata !730), !dbg !8035
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !8036, metadata !730), !dbg !8037
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8038, metadata !730), !dbg !8039
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8040, metadata !730), !dbg !8041
  br label %do.body, !dbg !8042, !llvm.loop !8043

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8044, !llvm.loop !8047

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8049
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8052
  %2 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8053
  %loop_filter_level = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %2, i32 0, i32 30, !dbg !8054
  %3 = load i8, i8* %loop_filter_level, align 2, !dbg !8054
  %conv = zext i8 %3 to i32, !dbg !8053
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 63), !dbg !8055
  store i32 %call, i32* %err, align 4, !dbg !8056
  %4 = load i32, i32* %err, align 4, !dbg !8057
  %cmp = icmp slt i32 %4, 0, !dbg !8058
  br i1 %cmp, label %if.then, label %if.end, !dbg !8057

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !8059
  store i32 %5, i32* %retval, align 4, !dbg !8062
  br label %return, !dbg !8062

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !8063

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !8065

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !8067, !llvm.loop !8068

do.body4:                                         ; preds = %do.end3
  br label %do.body5, !dbg !8069, !llvm.loop !8072

do.body5:                                         ; preds = %do.body4
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8074
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8077
  %8 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8078
  %loop_filter_sharpness = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %8, i32 0, i32 31, !dbg !8079
  %9 = load i8, i8* %loop_filter_sharpness, align 1, !dbg !8079
  %conv6 = zext i8 %9 to i32, !dbg !8078
  %call7 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %6, %struct.PutBitContext* %7, i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i32 0, i32 0), i32* null, i32 %conv6, i32 0, i32 7), !dbg !8080
  store i32 %call7, i32* %err, align 4, !dbg !8081
  %10 = load i32, i32* %err, align 4, !dbg !8082
  %cmp8 = icmp slt i32 %10, 0, !dbg !8083
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8082

if.then10:                                        ; preds = %do.body5
  %11 = load i32, i32* %err, align 4, !dbg !8084
  store i32 %11, i32* %retval, align 4, !dbg !8087
  br label %return, !dbg !8087

if.end11:                                         ; preds = %do.body5
  br label %do.end12, !dbg !8088

do.end12:                                         ; preds = %if.end11
  br label %do.end13, !dbg !8090

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !8092, !llvm.loop !8093

do.body14:                                        ; preds = %do.end13
  br label %do.body15, !dbg !8094, !llvm.loop !8097

do.body15:                                        ; preds = %do.body14
  %12 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8099
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8102
  %14 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8103
  %loop_filter_delta_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %14, i32 0, i32 32, !dbg !8104
  %15 = load i8, i8* %loop_filter_delta_enabled, align 2, !dbg !8104
  %conv16 = zext i8 %15 to i32, !dbg !8103
  %call17 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %12, %struct.PutBitContext* %13, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i32 0, i32 0), i32* null, i32 %conv16, i32 0, i32 1), !dbg !8105
  store i32 %call17, i32* %err, align 4, !dbg !8106
  %16 = load i32, i32* %err, align 4, !dbg !8107
  %cmp18 = icmp slt i32 %16, 0, !dbg !8108
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8107

if.then20:                                        ; preds = %do.body15
  %17 = load i32, i32* %err, align 4, !dbg !8109
  store i32 %17, i32* %retval, align 4, !dbg !8112
  br label %return, !dbg !8112

if.end21:                                         ; preds = %do.body15
  br label %do.end22, !dbg !8113

do.end22:                                         ; preds = %if.end21
  br label %do.end23, !dbg !8115

do.end23:                                         ; preds = %do.end22
  %18 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8117
  %loop_filter_delta_enabled24 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %18, i32 0, i32 32, !dbg !8119
  %19 = load i8, i8* %loop_filter_delta_enabled24, align 2, !dbg !8119
  %tobool = icmp ne i8 %19, 0, !dbg !8117
  br i1 %tobool, label %if.then25, label %if.end119, !dbg !8120

if.then25:                                        ; preds = %do.end23
  br label %do.body26, !dbg !8121, !llvm.loop !8123

do.body26:                                        ; preds = %if.then25
  br label %do.body27, !dbg !8124, !llvm.loop !8127

do.body27:                                        ; preds = %do.body26
  %20 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8129
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8132
  %22 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8133
  %loop_filter_delta_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %22, i32 0, i32 33, !dbg !8134
  %23 = load i8, i8* %loop_filter_delta_update, align 1, !dbg !8134
  %conv28 = zext i8 %23 to i32, !dbg !8133
  %call29 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %20, %struct.PutBitContext* %21, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0), i32* null, i32 %conv28, i32 0, i32 1), !dbg !8135
  store i32 %call29, i32* %err, align 4, !dbg !8136
  %24 = load i32, i32* %err, align 4, !dbg !8137
  %cmp30 = icmp slt i32 %24, 0, !dbg !8138
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8137

if.then32:                                        ; preds = %do.body27
  %25 = load i32, i32* %err, align 4, !dbg !8139
  store i32 %25, i32* %retval, align 4, !dbg !8142
  br label %return, !dbg !8142

if.end33:                                         ; preds = %do.body27
  br label %do.end34, !dbg !8143

do.end34:                                         ; preds = %if.end33
  br label %do.end35, !dbg !8145

do.end35:                                         ; preds = %do.end34
  %26 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8147
  %loop_filter_delta_update36 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %26, i32 0, i32 33, !dbg !8149
  %27 = load i8, i8* %loop_filter_delta_update36, align 1, !dbg !8149
  %tobool37 = icmp ne i8 %27, 0, !dbg !8147
  br i1 %tobool37, label %if.then38, label %if.end118, !dbg !8150

if.then38:                                        ; preds = %do.end35
  store i32 0, i32* %i, align 4, !dbg !8151
  br label %for.cond, !dbg !8154

for.cond:                                         ; preds = %for.inc, %if.then38
  %28 = load i32, i32* %i, align 4, !dbg !8155
  %cmp39 = icmp slt i32 %28, 4, !dbg !8158
  br i1 %cmp39, label %for.body, label %for.end, !dbg !8159

for.body:                                         ; preds = %for.cond
  br label %do.body41, !dbg !8160, !llvm.loop !8162

do.body41:                                        ; preds = %for.body
  br label %do.body42, !dbg !8163, !llvm.loop !8166

do.body42:                                        ; preds = %do.body41
  %29 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8168
  %30 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8171
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !8172
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !8172
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !8172
  %31 = load i32, i32* %i, align 4, !dbg !8173
  store i32 %31, i32* %arrayinit.element, align 4, !dbg !8172
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !8174
  %32 = load i32, i32* %i, align 4, !dbg !8175
  %idxprom = sext i32 %32 to i64, !dbg !8176
  %33 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8176
  %update_ref_delta = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %33, i32 0, i32 34, !dbg !8177
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %update_ref_delta, i64 0, i64 %idxprom, !dbg !8176
  %34 = load i8, i8* %arrayidx, align 1, !dbg !8176
  %conv43 = zext i8 %34 to i32, !dbg !8176
  %call44 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %29, %struct.PutBitContext* %30, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i32 0, i32 0), i32* %arraydecay, i32 %conv43, i32 0, i32 1), !dbg !8178
  store i32 %call44, i32* %err, align 4, !dbg !8179
  %35 = load i32, i32* %err, align 4, !dbg !8180
  %cmp45 = icmp slt i32 %35, 0, !dbg !8181
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !8180

if.then47:                                        ; preds = %do.body42
  %36 = load i32, i32* %err, align 4, !dbg !8182
  store i32 %36, i32* %retval, align 4, !dbg !8185
  br label %return, !dbg !8185

if.end48:                                         ; preds = %do.body42
  br label %do.end49, !dbg !8186

do.end49:                                         ; preds = %if.end48
  br label %do.end50, !dbg !8188

do.end50:                                         ; preds = %do.end49
  %37 = load i32, i32* %i, align 4, !dbg !8190
  %idxprom51 = sext i32 %37 to i64, !dbg !8192
  %38 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8192
  %update_ref_delta52 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %38, i32 0, i32 34, !dbg !8193
  %arrayidx53 = getelementptr inbounds [4 x i8], [4 x i8]* %update_ref_delta52, i64 0, i64 %idxprom51, !dbg !8192
  %39 = load i8, i8* %arrayidx53, align 1, !dbg !8192
  %tobool54 = icmp ne i8 %39, 0, !dbg !8192
  br i1 %tobool54, label %if.then55, label %if.end72, !dbg !8194

if.then55:                                        ; preds = %do.end50
  br label %do.body56, !dbg !8195, !llvm.loop !8196

do.body56:                                        ; preds = %if.then55
  br label %do.body57, !dbg !8197, !llvm.loop !8200

do.body57:                                        ; preds = %do.body56
  %40 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8202
  %41 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8205
  %arrayinit.begin59 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral58, i64 0, i64 0, !dbg !8206
  store i32 1, i32* %arrayinit.begin59, align 4, !dbg !8206
  %arrayinit.element60 = getelementptr inbounds i32, i32* %arrayinit.begin59, i64 1, !dbg !8206
  %42 = load i32, i32* %i, align 4, !dbg !8207
  store i32 %42, i32* %arrayinit.element60, align 4, !dbg !8206
  %arraydecay61 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral58, i32 0, i32 0, !dbg !8208
  %43 = load i32, i32* %i, align 4, !dbg !8209
  %idxprom62 = sext i32 %43 to i64, !dbg !8210
  %44 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8210
  %loop_filter_ref_deltas = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %44, i32 0, i32 35, !dbg !8211
  %arrayidx63 = getelementptr inbounds [4 x i8], [4 x i8]* %loop_filter_ref_deltas, i64 0, i64 %idxprom62, !dbg !8210
  %45 = load i8, i8* %arrayidx63, align 1, !dbg !8210
  %conv64 = sext i8 %45 to i32, !dbg !8210
  %call65 = call i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %40, %struct.PutBitContext* %41, i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0), i32* %arraydecay61, i32 %conv64), !dbg !8212
  store i32 %call65, i32* %err, align 4, !dbg !8213
  %46 = load i32, i32* %err, align 4, !dbg !8214
  %cmp66 = icmp slt i32 %46, 0, !dbg !8215
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !8214

if.then68:                                        ; preds = %do.body57
  %47 = load i32, i32* %err, align 4, !dbg !8216
  store i32 %47, i32* %retval, align 4, !dbg !8219
  br label %return, !dbg !8219

if.end69:                                         ; preds = %do.body57
  br label %do.end70, !dbg !8220

do.end70:                                         ; preds = %if.end69
  br label %do.end71, !dbg !8222

do.end71:                                         ; preds = %do.end70
  br label %if.end72, !dbg !8224

if.end72:                                         ; preds = %do.end71, %do.end50
  br label %for.inc, !dbg !8226

for.inc:                                          ; preds = %if.end72
  %48 = load i32, i32* %i, align 4, !dbg !8227
  %inc = add nsw i32 %48, 1, !dbg !8227
  store i32 %inc, i32* %i, align 4, !dbg !8227
  br label %for.cond, !dbg !8229, !llvm.loop !8230

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8232
  br label %for.cond73, !dbg !8234

for.cond73:                                       ; preds = %for.inc115, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !8235
  %cmp74 = icmp slt i32 %49, 2, !dbg !8238
  br i1 %cmp74, label %for.body76, label %for.end117, !dbg !8239

for.body76:                                       ; preds = %for.cond73
  br label %do.body77, !dbg !8240, !llvm.loop !8242

do.body77:                                        ; preds = %for.body76
  br label %do.body78, !dbg !8243, !llvm.loop !8246

do.body78:                                        ; preds = %do.body77
  %50 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8248
  %51 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8251
  %arrayinit.begin80 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral79, i64 0, i64 0, !dbg !8252
  store i32 1, i32* %arrayinit.begin80, align 4, !dbg !8252
  %arrayinit.element81 = getelementptr inbounds i32, i32* %arrayinit.begin80, i64 1, !dbg !8252
  %52 = load i32, i32* %i, align 4, !dbg !8253
  store i32 %52, i32* %arrayinit.element81, align 4, !dbg !8252
  %arraydecay82 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral79, i32 0, i32 0, !dbg !8254
  %53 = load i32, i32* %i, align 4, !dbg !8255
  %idxprom83 = sext i32 %53 to i64, !dbg !8256
  %54 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8256
  %update_mode_delta = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %54, i32 0, i32 36, !dbg !8257
  %arrayidx84 = getelementptr inbounds [2 x i8], [2 x i8]* %update_mode_delta, i64 0, i64 %idxprom83, !dbg !8256
  %55 = load i8, i8* %arrayidx84, align 1, !dbg !8256
  %conv85 = zext i8 %55 to i32, !dbg !8256
  %call86 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %50, %struct.PutBitContext* %51, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i32 0, i32 0), i32* %arraydecay82, i32 %conv85, i32 0, i32 1), !dbg !8258
  store i32 %call86, i32* %err, align 4, !dbg !8259
  %56 = load i32, i32* %err, align 4, !dbg !8260
  %cmp87 = icmp slt i32 %56, 0, !dbg !8261
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !8260

if.then89:                                        ; preds = %do.body78
  %57 = load i32, i32* %err, align 4, !dbg !8262
  store i32 %57, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.end90:                                         ; preds = %do.body78
  br label %do.end91, !dbg !8266

do.end91:                                         ; preds = %if.end90
  br label %do.end92, !dbg !8268

do.end92:                                         ; preds = %do.end91
  %58 = load i32, i32* %i, align 4, !dbg !8270
  %idxprom93 = sext i32 %58 to i64, !dbg !8272
  %59 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8272
  %update_mode_delta94 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %59, i32 0, i32 36, !dbg !8273
  %arrayidx95 = getelementptr inbounds [2 x i8], [2 x i8]* %update_mode_delta94, i64 0, i64 %idxprom93, !dbg !8272
  %60 = load i8, i8* %arrayidx95, align 1, !dbg !8272
  %tobool96 = icmp ne i8 %60, 0, !dbg !8272
  br i1 %tobool96, label %if.then97, label %if.end114, !dbg !8274

if.then97:                                        ; preds = %do.end92
  br label %do.body98, !dbg !8275, !llvm.loop !8276

do.body98:                                        ; preds = %if.then97
  br label %do.body99, !dbg !8277, !llvm.loop !8280

do.body99:                                        ; preds = %do.body98
  %61 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8282
  %62 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8285
  %arrayinit.begin101 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral100, i64 0, i64 0, !dbg !8286
  store i32 1, i32* %arrayinit.begin101, align 4, !dbg !8286
  %arrayinit.element102 = getelementptr inbounds i32, i32* %arrayinit.begin101, i64 1, !dbg !8286
  %63 = load i32, i32* %i, align 4, !dbg !8287
  store i32 %63, i32* %arrayinit.element102, align 4, !dbg !8286
  %arraydecay103 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral100, i32 0, i32 0, !dbg !8288
  %64 = load i32, i32* %i, align 4, !dbg !8289
  %idxprom104 = sext i32 %64 to i64, !dbg !8290
  %65 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8290
  %loop_filter_mode_deltas = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %65, i32 0, i32 37, !dbg !8291
  %arrayidx105 = getelementptr inbounds [2 x i8], [2 x i8]* %loop_filter_mode_deltas, i64 0, i64 %idxprom104, !dbg !8290
  %66 = load i8, i8* %arrayidx105, align 1, !dbg !8290
  %conv106 = sext i8 %66 to i32, !dbg !8290
  %call107 = call i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %61, %struct.PutBitContext* %62, i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i32 0, i32 0), i32* %arraydecay103, i32 %conv106), !dbg !8292
  store i32 %call107, i32* %err, align 4, !dbg !8293
  %67 = load i32, i32* %err, align 4, !dbg !8294
  %cmp108 = icmp slt i32 %67, 0, !dbg !8295
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !8294

if.then110:                                       ; preds = %do.body99
  %68 = load i32, i32* %err, align 4, !dbg !8296
  store i32 %68, i32* %retval, align 4, !dbg !8299
  br label %return, !dbg !8299

if.end111:                                        ; preds = %do.body99
  br label %do.end112, !dbg !8300

do.end112:                                        ; preds = %if.end111
  br label %do.end113, !dbg !8302

do.end113:                                        ; preds = %do.end112
  br label %if.end114, !dbg !8304

if.end114:                                        ; preds = %do.end113, %do.end92
  br label %for.inc115, !dbg !8306

for.inc115:                                       ; preds = %if.end114
  %69 = load i32, i32* %i, align 4, !dbg !8307
  %inc116 = add nsw i32 %69, 1, !dbg !8307
  store i32 %inc116, i32* %i, align 4, !dbg !8307
  br label %for.cond73, !dbg !8309, !llvm.loop !8310

for.end117:                                       ; preds = %for.cond73
  br label %if.end118, !dbg !8312

if.end118:                                        ; preds = %for.end117, %do.end35
  br label %if.end119, !dbg !8313

if.end119:                                        ; preds = %if.end118, %do.end23
  store i32 0, i32* %retval, align 4, !dbg !8314
  br label %return, !dbg !8314

return:                                           ; preds = %if.end119, %if.then110, %if.then89, %if.then68, %if.then47, %if.then32, %if.then20, %if.then10, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !8315
  ret i32 %70, !dbg !8315
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_quantization_params(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !8316 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !8317, metadata !730), !dbg !8318
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !8319, metadata !730), !dbg !8320
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !8321, metadata !730), !dbg !8322
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8323, metadata !730), !dbg !8324
  br label %do.body, !dbg !8325, !llvm.loop !8326

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8327, !llvm.loop !8330

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8332
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8335
  %2 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8336
  %base_q_idx = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %2, i32 0, i32 38, !dbg !8337
  %3 = load i8, i8* %base_q_idx, align 2, !dbg !8337
  %conv = zext i8 %3 to i32, !dbg !8336
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 255), !dbg !8338
  store i32 %call, i32* %err, align 4, !dbg !8339
  %4 = load i32, i32* %err, align 4, !dbg !8340
  %cmp = icmp slt i32 %4, 0, !dbg !8341
  br i1 %cmp, label %if.then, label %if.end, !dbg !8340

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !8342
  store i32 %5, i32* %retval, align 4, !dbg !8345
  br label %return, !dbg !8345

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !8346

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !8348

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !8350, !llvm.loop !8351

do.body4:                                         ; preds = %do.end3
  br label %do.body5, !dbg !8352, !llvm.loop !8355

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8357, !llvm.loop !8360

do.body6:                                         ; preds = %do.body5
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8362
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8365
  %8 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8366
  %delta_q_y_dc = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %8, i32 0, i32 39, !dbg !8367
  %9 = load i8, i8* %delta_q_y_dc, align 1, !dbg !8367
  %tobool = icmp ne i8 %9, 0, !dbg !8368
  %lnot = xor i1 %tobool, true, !dbg !8368
  %lnot7 = xor i1 %lnot, true, !dbg !8369
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !8369
  %call8 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %6, %struct.PutBitContext* %7, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i32 0, i32 0), i32* null, i32 %lnot.ext, i32 0, i32 1), !dbg !8370
  store i32 %call8, i32* %err, align 4, !dbg !8371
  %10 = load i32, i32* %err, align 4, !dbg !8372
  %cmp9 = icmp slt i32 %10, 0, !dbg !8373
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !8372

if.then11:                                        ; preds = %do.body6
  %11 = load i32, i32* %err, align 4, !dbg !8374
  store i32 %11, i32* %retval, align 4, !dbg !8377
  br label %return, !dbg !8377

if.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !8378

do.end13:                                         ; preds = %if.end12
  br label %do.end14, !dbg !8380

do.end14:                                         ; preds = %do.end13
  %12 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8382
  %delta_q_y_dc15 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %12, i32 0, i32 39, !dbg !8385
  %13 = load i8, i8* %delta_q_y_dc15, align 1, !dbg !8385
  %tobool16 = icmp ne i8 %13, 0, !dbg !8382
  br i1 %tobool16, label %if.then17, label %if.end29, !dbg !8382

if.then17:                                        ; preds = %do.end14
  br label %do.body18, !dbg !8386, !llvm.loop !8388

do.body18:                                        ; preds = %if.then17
  br label %do.body19, !dbg !8390, !llvm.loop !8393

do.body19:                                        ; preds = %do.body18
  %14 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8395
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8398
  %16 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8399
  %delta_q_y_dc20 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %16, i32 0, i32 39, !dbg !8400
  %17 = load i8, i8* %delta_q_y_dc20, align 1, !dbg !8400
  %conv21 = sext i8 %17 to i32, !dbg !8399
  %call22 = call i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %14, %struct.PutBitContext* %15, i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i32* null, i32 %conv21), !dbg !8401
  store i32 %call22, i32* %err, align 4, !dbg !8402
  %18 = load i32, i32* %err, align 4, !dbg !8403
  %cmp23 = icmp slt i32 %18, 0, !dbg !8404
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8403

if.then25:                                        ; preds = %do.body19
  %19 = load i32, i32* %err, align 4, !dbg !8405
  store i32 %19, i32* %retval, align 4, !dbg !8408
  br label %return, !dbg !8408

if.end26:                                         ; preds = %do.body19
  br label %do.end27, !dbg !8409

do.end27:                                         ; preds = %if.end26
  br label %do.end28, !dbg !8411

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !8413

if.end29:                                         ; preds = %do.end28, %do.end14
  br label %do.end30, !dbg !8415

do.end30:                                         ; preds = %if.end29
  br label %do.body31, !dbg !8417, !llvm.loop !8418

do.body31:                                        ; preds = %do.end30
  br label %do.body32, !dbg !8419, !llvm.loop !8422

do.body32:                                        ; preds = %do.body31
  br label %do.body33, !dbg !8424, !llvm.loop !8427

do.body33:                                        ; preds = %do.body32
  %20 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8429
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8432
  %22 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8433
  %delta_q_uv_dc = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %22, i32 0, i32 40, !dbg !8434
  %23 = load i8, i8* %delta_q_uv_dc, align 2, !dbg !8434
  %tobool34 = icmp ne i8 %23, 0, !dbg !8435
  %lnot35 = xor i1 %tobool34, true, !dbg !8435
  %lnot37 = xor i1 %lnot35, true, !dbg !8436
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !8436
  %call39 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %20, %struct.PutBitContext* %21, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.63, i32 0, i32 0), i32* null, i32 %lnot.ext38, i32 0, i32 1), !dbg !8437
  store i32 %call39, i32* %err, align 4, !dbg !8438
  %24 = load i32, i32* %err, align 4, !dbg !8439
  %cmp40 = icmp slt i32 %24, 0, !dbg !8440
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !8439

if.then42:                                        ; preds = %do.body33
  %25 = load i32, i32* %err, align 4, !dbg !8441
  store i32 %25, i32* %retval, align 4, !dbg !8444
  br label %return, !dbg !8444

if.end43:                                         ; preds = %do.body33
  br label %do.end44, !dbg !8445

do.end44:                                         ; preds = %if.end43
  br label %do.end45, !dbg !8447

do.end45:                                         ; preds = %do.end44
  %26 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8449
  %delta_q_uv_dc46 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %26, i32 0, i32 40, !dbg !8452
  %27 = load i8, i8* %delta_q_uv_dc46, align 2, !dbg !8452
  %tobool47 = icmp ne i8 %27, 0, !dbg !8449
  br i1 %tobool47, label %if.then48, label %if.end60, !dbg !8449

if.then48:                                        ; preds = %do.end45
  br label %do.body49, !dbg !8453, !llvm.loop !8455

do.body49:                                        ; preds = %if.then48
  br label %do.body50, !dbg !8457, !llvm.loop !8460

do.body50:                                        ; preds = %do.body49
  %28 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8462
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8465
  %30 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8466
  %delta_q_uv_dc51 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %30, i32 0, i32 40, !dbg !8467
  %31 = load i8, i8* %delta_q_uv_dc51, align 2, !dbg !8467
  %conv52 = sext i8 %31 to i32, !dbg !8466
  %call53 = call i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %28, %struct.PutBitContext* %29, i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0), i32* null, i32 %conv52), !dbg !8468
  store i32 %call53, i32* %err, align 4, !dbg !8469
  %32 = load i32, i32* %err, align 4, !dbg !8470
  %cmp54 = icmp slt i32 %32, 0, !dbg !8471
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8470

if.then56:                                        ; preds = %do.body50
  %33 = load i32, i32* %err, align 4, !dbg !8472
  store i32 %33, i32* %retval, align 4, !dbg !8475
  br label %return, !dbg !8475

if.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !8476

do.end58:                                         ; preds = %if.end57
  br label %do.end59, !dbg !8478

do.end59:                                         ; preds = %do.end58
  br label %if.end60, !dbg !8480

if.end60:                                         ; preds = %do.end59, %do.end45
  br label %do.end61, !dbg !8482

do.end61:                                         ; preds = %if.end60
  br label %do.body62, !dbg !8484, !llvm.loop !8485

do.body62:                                        ; preds = %do.end61
  br label %do.body63, !dbg !8486, !llvm.loop !8489

do.body63:                                        ; preds = %do.body62
  br label %do.body64, !dbg !8491, !llvm.loop !8494

do.body64:                                        ; preds = %do.body63
  %34 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8496
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8499
  %36 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8500
  %delta_q_uv_ac = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %36, i32 0, i32 41, !dbg !8501
  %37 = load i8, i8* %delta_q_uv_ac, align 1, !dbg !8501
  %tobool65 = icmp ne i8 %37, 0, !dbg !8502
  %lnot66 = xor i1 %tobool65, true, !dbg !8502
  %lnot68 = xor i1 %lnot66, true, !dbg !8503
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !8503
  %call70 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %34, %struct.PutBitContext* %35, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i32 0, i32 0), i32* null, i32 %lnot.ext69, i32 0, i32 1), !dbg !8504
  store i32 %call70, i32* %err, align 4, !dbg !8505
  %38 = load i32, i32* %err, align 4, !dbg !8506
  %cmp71 = icmp slt i32 %38, 0, !dbg !8507
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !8506

if.then73:                                        ; preds = %do.body64
  %39 = load i32, i32* %err, align 4, !dbg !8508
  store i32 %39, i32* %retval, align 4, !dbg !8511
  br label %return, !dbg !8511

if.end74:                                         ; preds = %do.body64
  br label %do.end75, !dbg !8512

do.end75:                                         ; preds = %if.end74
  br label %do.end76, !dbg !8514

do.end76:                                         ; preds = %do.end75
  %40 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8516
  %delta_q_uv_ac77 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %40, i32 0, i32 41, !dbg !8519
  %41 = load i8, i8* %delta_q_uv_ac77, align 1, !dbg !8519
  %tobool78 = icmp ne i8 %41, 0, !dbg !8516
  br i1 %tobool78, label %if.then79, label %if.end91, !dbg !8516

if.then79:                                        ; preds = %do.end76
  br label %do.body80, !dbg !8520, !llvm.loop !8522

do.body80:                                        ; preds = %if.then79
  br label %do.body81, !dbg !8524, !llvm.loop !8527

do.body81:                                        ; preds = %do.body80
  %42 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8529
  %43 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8532
  %44 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8533
  %delta_q_uv_ac82 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %44, i32 0, i32 41, !dbg !8534
  %45 = load i8, i8* %delta_q_uv_ac82, align 1, !dbg !8534
  %conv83 = sext i8 %45 to i32, !dbg !8533
  %call84 = call i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %42, %struct.PutBitContext* %43, i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i32 0, i32 0), i32* null, i32 %conv83), !dbg !8535
  store i32 %call84, i32* %err, align 4, !dbg !8536
  %46 = load i32, i32* %err, align 4, !dbg !8537
  %cmp85 = icmp slt i32 %46, 0, !dbg !8538
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !8537

if.then87:                                        ; preds = %do.body81
  %47 = load i32, i32* %err, align 4, !dbg !8539
  store i32 %47, i32* %retval, align 4, !dbg !8542
  br label %return, !dbg !8542

if.end88:                                         ; preds = %do.body81
  br label %do.end89, !dbg !8543

do.end89:                                         ; preds = %if.end88
  br label %do.end90, !dbg !8545

do.end90:                                         ; preds = %do.end89
  br label %if.end91, !dbg !8547

if.end91:                                         ; preds = %do.end90, %do.end76
  br label %do.end92, !dbg !8549

do.end92:                                         ; preds = %if.end91
  store i32 0, i32* %retval, align 4, !dbg !8551
  br label %return, !dbg !8551

return:                                           ; preds = %do.end92, %if.then87, %if.then73, %if.then56, %if.then42, %if.then25, %if.then11, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !8552
  ret i32 %48, !dbg !8552
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_segmentation_params(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !710 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  %.compoundliteral43 = alloca [2 x i32], align 4
  %.compoundliteral80 = alloca [2 x i32], align 4
  %.compoundliteral105 = alloca [2 x i32], align 4
  %.compoundliteral174 = alloca [3 x i32], align 4
  %.compoundliteral206 = alloca [3 x i32], align 4
  %.compoundliteral231 = alloca [3 x i32], align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !8553, metadata !730), !dbg !8554
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !8555, metadata !730), !dbg !8556
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !8557, metadata !730), !dbg !8558
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8559, metadata !730), !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8561, metadata !730), !dbg !8562
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8563, metadata !730), !dbg !8564
  br label %do.body, !dbg !8565, !llvm.loop !8566

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8567, !llvm.loop !8570

do.body1:                                         ; preds = %do.body
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8572
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8575
  %2 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8576
  %segmentation_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %2, i32 0, i32 42, !dbg !8577
  %3 = load i8, i8* %segmentation_enabled, align 2, !dbg !8577
  %conv = zext i8 %3 to i32, !dbg !8576
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %0, %struct.PutBitContext* %1, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 1), !dbg !8578
  store i32 %call, i32* %err, align 4, !dbg !8579
  %4 = load i32, i32* %err, align 4, !dbg !8580
  %cmp = icmp slt i32 %4, 0, !dbg !8581
  br i1 %cmp, label %if.then, label %if.end, !dbg !8580

if.then:                                          ; preds = %do.body1
  %5 = load i32, i32* %err, align 4, !dbg !8582
  store i32 %5, i32* %retval, align 4, !dbg !8585
  br label %return, !dbg !8585

if.end:                                           ; preds = %do.body1
  br label %do.end, !dbg !8586

do.end:                                           ; preds = %if.end
  br label %do.end3, !dbg !8588

do.end3:                                          ; preds = %do.end
  %6 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8590
  %segmentation_enabled4 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %6, i32 0, i32 42, !dbg !8592
  %7 = load i8, i8* %segmentation_enabled4, align 2, !dbg !8592
  %tobool = icmp ne i8 %7, 0, !dbg !8590
  br i1 %tobool, label %if.then5, label %if.end316, !dbg !8593

if.then5:                                         ; preds = %do.end3
  br label %do.body6, !dbg !8594, !llvm.loop !8596

do.body6:                                         ; preds = %if.then5
  br label %do.body7, !dbg !8597, !llvm.loop !8600

do.body7:                                         ; preds = %do.body6
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8602
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8605
  %10 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8606
  %segmentation_update_map = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %10, i32 0, i32 43, !dbg !8607
  %11 = load i8, i8* %segmentation_update_map, align 1, !dbg !8607
  %conv8 = zext i8 %11 to i32, !dbg !8606
  %call9 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %8, %struct.PutBitContext* %9, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i32 0, i32 0), i32* null, i32 %conv8, i32 0, i32 1), !dbg !8608
  store i32 %call9, i32* %err, align 4, !dbg !8609
  %12 = load i32, i32* %err, align 4, !dbg !8610
  %cmp10 = icmp slt i32 %12, 0, !dbg !8611
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8610

if.then12:                                        ; preds = %do.body7
  %13 = load i32, i32* %err, align 4, !dbg !8612
  store i32 %13, i32* %retval, align 4, !dbg !8615
  br label %return, !dbg !8615

if.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !8616

do.end14:                                         ; preds = %if.end13
  br label %do.end15, !dbg !8618

do.end15:                                         ; preds = %do.end14
  %14 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8620
  %segmentation_update_map16 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %14, i32 0, i32 43, !dbg !8622
  %15 = load i8, i8* %segmentation_update_map16, align 1, !dbg !8622
  %tobool17 = icmp ne i8 %15, 0, !dbg !8620
  br i1 %tobool17, label %if.then18, label %if.end140, !dbg !8623

if.then18:                                        ; preds = %do.end15
  store i32 0, i32* %i, align 4, !dbg !8624
  br label %for.cond, !dbg !8627

for.cond:                                         ; preds = %for.inc, %if.then18
  %16 = load i32, i32* %i, align 4, !dbg !8628
  %cmp19 = icmp slt i32 %16, 7, !dbg !8631
  br i1 %cmp19, label %for.body, label %for.end, !dbg !8632

for.body:                                         ; preds = %for.cond
  br label %do.body21, !dbg !8633, !llvm.loop !8634

do.body21:                                        ; preds = %for.body
  br label %do.body22, !dbg !8635, !llvm.loop !8638

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !8640, !llvm.loop !8643

do.body23:                                        ; preds = %do.body22
  %17 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8645
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8648
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !8649
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !8649
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !8649
  %19 = load i32, i32* %i, align 4, !dbg !8650
  store i32 %19, i32* %arrayinit.element, align 4, !dbg !8649
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !8651
  %20 = load i32, i32* %i, align 4, !dbg !8652
  %idxprom = sext i32 %20 to i64, !dbg !8653
  %21 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8653
  %segmentation_tree_probs = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %21, i32 0, i32 44, !dbg !8654
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %segmentation_tree_probs, i64 0, i64 %idxprom, !dbg !8653
  %22 = load i8, i8* %arrayidx, align 1, !dbg !8653
  %conv24 = zext i8 %22 to i32, !dbg !8653
  %cmp25 = icmp ne i32 %conv24, 255, !dbg !8655
  %conv26 = zext i1 %cmp25 to i32, !dbg !8655
  %call27 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %17, %struct.PutBitContext* %18, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.69, i32 0, i32 0), i32* %arraydecay, i32 %conv26, i32 0, i32 1), !dbg !8656
  store i32 %call27, i32* %err, align 4, !dbg !8657
  %23 = load i32, i32* %err, align 4, !dbg !8658
  %cmp28 = icmp slt i32 %23, 0, !dbg !8659
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8658

if.then30:                                        ; preds = %do.body23
  %24 = load i32, i32* %err, align 4, !dbg !8660
  store i32 %24, i32* %retval, align 4, !dbg !8663
  br label %return, !dbg !8663

if.end31:                                         ; preds = %do.body23
  br label %do.end32, !dbg !8664

do.end32:                                         ; preds = %if.end31
  br label %do.end33, !dbg !8666

do.end33:                                         ; preds = %do.end32
  %25 = load i32, i32* %i, align 4, !dbg !8668
  %idxprom34 = sext i32 %25 to i64, !dbg !8671
  %26 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8671
  %segmentation_tree_probs35 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %26, i32 0, i32 44, !dbg !8672
  %arrayidx36 = getelementptr inbounds [7 x i8], [7 x i8]* %segmentation_tree_probs35, i64 0, i64 %idxprom34, !dbg !8671
  %27 = load i8, i8* %arrayidx36, align 1, !dbg !8671
  %conv37 = zext i8 %27 to i32, !dbg !8671
  %cmp38 = icmp ne i32 %conv37, 255, !dbg !8673
  br i1 %cmp38, label %if.then40, label %if.end58, !dbg !8671

if.then40:                                        ; preds = %do.end33
  br label %do.body41, !dbg !8674, !llvm.loop !8676

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !8678, !llvm.loop !8681

do.body42:                                        ; preds = %do.body41
  %28 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8683
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8686
  %arrayinit.begin44 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral43, i64 0, i64 0, !dbg !8687
  store i32 1, i32* %arrayinit.begin44, align 4, !dbg !8687
  %arrayinit.element45 = getelementptr inbounds i32, i32* %arrayinit.begin44, i64 1, !dbg !8687
  %30 = load i32, i32* %i, align 4, !dbg !8688
  store i32 %30, i32* %arrayinit.element45, align 4, !dbg !8687
  %arraydecay46 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral43, i32 0, i32 0, !dbg !8689
  %31 = load i32, i32* %i, align 4, !dbg !8690
  %idxprom47 = sext i32 %31 to i64, !dbg !8691
  %32 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8691
  %segmentation_tree_probs48 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %32, i32 0, i32 44, !dbg !8692
  %arrayidx49 = getelementptr inbounds [7 x i8], [7 x i8]* %segmentation_tree_probs48, i64 0, i64 %idxprom47, !dbg !8691
  %33 = load i8, i8* %arrayidx49, align 1, !dbg !8691
  %conv50 = zext i8 %33 to i32, !dbg !8691
  %call51 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %28, %struct.PutBitContext* %29, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i32 0, i32 0), i32* %arraydecay46, i32 %conv50, i32 0, i32 255), !dbg !8693
  store i32 %call51, i32* %err, align 4, !dbg !8694
  %34 = load i32, i32* %err, align 4, !dbg !8695
  %cmp52 = icmp slt i32 %34, 0, !dbg !8696
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !8695

if.then54:                                        ; preds = %do.body42
  %35 = load i32, i32* %err, align 4, !dbg !8697
  store i32 %35, i32* %retval, align 4, !dbg !8700
  br label %return, !dbg !8700

if.end55:                                         ; preds = %do.body42
  br label %do.end56, !dbg !8701

do.end56:                                         ; preds = %if.end55
  br label %do.end57, !dbg !8703

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !8705

if.end58:                                         ; preds = %do.end57, %do.end33
  br label %do.end59, !dbg !8707

do.end59:                                         ; preds = %if.end58
  br label %for.inc, !dbg !8709

for.inc:                                          ; preds = %do.end59
  %36 = load i32, i32* %i, align 4, !dbg !8711
  %inc = add nsw i32 %36, 1, !dbg !8711
  store i32 %inc, i32* %i, align 4, !dbg !8711
  br label %for.cond, !dbg !8713, !llvm.loop !8714

for.end:                                          ; preds = %for.cond
  br label %do.body60, !dbg !8716, !llvm.loop !8717

do.body60:                                        ; preds = %for.end
  br label %do.body61, !dbg !8718, !llvm.loop !8721

do.body61:                                        ; preds = %do.body60
  %37 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8723
  %38 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8726
  %39 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8727
  %segmentation_temporal_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %39, i32 0, i32 45, !dbg !8728
  %40 = load i8, i8* %segmentation_temporal_update, align 1, !dbg !8728
  %conv62 = zext i8 %40 to i32, !dbg !8727
  %call63 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %37, %struct.PutBitContext* %38, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i32* null, i32 %conv62, i32 0, i32 1), !dbg !8729
  store i32 %call63, i32* %err, align 4, !dbg !8730
  %41 = load i32, i32* %err, align 4, !dbg !8731
  %cmp64 = icmp slt i32 %41, 0, !dbg !8732
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !8731

if.then66:                                        ; preds = %do.body61
  %42 = load i32, i32* %err, align 4, !dbg !8733
  store i32 %42, i32* %retval, align 4, !dbg !8736
  br label %return, !dbg !8736

if.end67:                                         ; preds = %do.body61
  br label %do.end68, !dbg !8737

do.end68:                                         ; preds = %if.end67
  br label %do.end69, !dbg !8739

do.end69:                                         ; preds = %do.end68
  store i32 0, i32* %i, align 4, !dbg !8741
  br label %for.cond70, !dbg !8743

for.cond70:                                       ; preds = %for.inc137, %do.end69
  %43 = load i32, i32* %i, align 4, !dbg !8744
  %cmp71 = icmp slt i32 %43, 3, !dbg !8747
  br i1 %cmp71, label %for.body73, label %for.end139, !dbg !8748

for.body73:                                       ; preds = %for.cond70
  %44 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8749
  %segmentation_temporal_update74 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %44, i32 0, i32 45, !dbg !8752
  %45 = load i8, i8* %segmentation_temporal_update74, align 1, !dbg !8752
  %tobool75 = icmp ne i8 %45, 0, !dbg !8749
  br i1 %tobool75, label %if.then76, label %if.else, !dbg !8753

if.then76:                                        ; preds = %for.body73
  br label %do.body77, !dbg !8754, !llvm.loop !8755

do.body77:                                        ; preds = %if.then76
  br label %do.body78, !dbg !8756, !llvm.loop !8759

do.body78:                                        ; preds = %do.body77
  br label %do.body79, !dbg !8761, !llvm.loop !8764

do.body79:                                        ; preds = %do.body78
  %46 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8766
  %47 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8769
  %arrayinit.begin81 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral80, i64 0, i64 0, !dbg !8770
  store i32 1, i32* %arrayinit.begin81, align 4, !dbg !8770
  %arrayinit.element82 = getelementptr inbounds i32, i32* %arrayinit.begin81, i64 1, !dbg !8770
  %48 = load i32, i32* %i, align 4, !dbg !8771
  store i32 %48, i32* %arrayinit.element82, align 4, !dbg !8770
  %arraydecay83 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral80, i32 0, i32 0, !dbg !8772
  %49 = load i32, i32* %i, align 4, !dbg !8773
  %idxprom84 = sext i32 %49 to i64, !dbg !8774
  %50 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8774
  %segmentation_pred_prob = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %50, i32 0, i32 46, !dbg !8775
  %arrayidx85 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob, i64 0, i64 %idxprom84, !dbg !8774
  %51 = load i8, i8* %arrayidx85, align 1, !dbg !8774
  %conv86 = zext i8 %51 to i32, !dbg !8774
  %cmp87 = icmp ne i32 %conv86, 255, !dbg !8776
  %conv88 = zext i1 %cmp87 to i32, !dbg !8776
  %call89 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %46, %struct.PutBitContext* %47, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i32 0, i32 0), i32* %arraydecay83, i32 %conv88, i32 0, i32 1), !dbg !8777
  store i32 %call89, i32* %err, align 4, !dbg !8778
  %52 = load i32, i32* %err, align 4, !dbg !8779
  %cmp90 = icmp slt i32 %52, 0, !dbg !8780
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !8779

if.then92:                                        ; preds = %do.body79
  %53 = load i32, i32* %err, align 4, !dbg !8781
  store i32 %53, i32* %retval, align 4, !dbg !8784
  br label %return, !dbg !8784

if.end93:                                         ; preds = %do.body79
  br label %do.end94, !dbg !8785

do.end94:                                         ; preds = %if.end93
  br label %do.end95, !dbg !8787

do.end95:                                         ; preds = %do.end94
  %54 = load i32, i32* %i, align 4, !dbg !8789
  %idxprom96 = sext i32 %54 to i64, !dbg !8792
  %55 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8792
  %segmentation_pred_prob97 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %55, i32 0, i32 46, !dbg !8793
  %arrayidx98 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob97, i64 0, i64 %idxprom96, !dbg !8792
  %56 = load i8, i8* %arrayidx98, align 1, !dbg !8792
  %conv99 = zext i8 %56 to i32, !dbg !8792
  %cmp100 = icmp ne i32 %conv99, 255, !dbg !8794
  br i1 %cmp100, label %if.then102, label %if.end120, !dbg !8792

if.then102:                                       ; preds = %do.end95
  br label %do.body103, !dbg !8795, !llvm.loop !8797

do.body103:                                       ; preds = %if.then102
  br label %do.body104, !dbg !8799, !llvm.loop !8802

do.body104:                                       ; preds = %do.body103
  %57 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8804
  %58 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8807
  %arrayinit.begin106 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral105, i64 0, i64 0, !dbg !8808
  store i32 1, i32* %arrayinit.begin106, align 4, !dbg !8808
  %arrayinit.element107 = getelementptr inbounds i32, i32* %arrayinit.begin106, i64 1, !dbg !8808
  %59 = load i32, i32* %i, align 4, !dbg !8809
  store i32 %59, i32* %arrayinit.element107, align 4, !dbg !8808
  %arraydecay108 = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral105, i32 0, i32 0, !dbg !8810
  %60 = load i32, i32* %i, align 4, !dbg !8811
  %idxprom109 = sext i32 %60 to i64, !dbg !8812
  %61 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8812
  %segmentation_pred_prob110 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %61, i32 0, i32 46, !dbg !8813
  %arrayidx111 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob110, i64 0, i64 %idxprom109, !dbg !8812
  %62 = load i8, i8* %arrayidx111, align 1, !dbg !8812
  %conv112 = zext i8 %62 to i32, !dbg !8812
  %call113 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %57, %struct.PutBitContext* %58, i32 8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i32 0, i32 0), i32* %arraydecay108, i32 %conv112, i32 0, i32 255), !dbg !8814
  store i32 %call113, i32* %err, align 4, !dbg !8815
  %63 = load i32, i32* %err, align 4, !dbg !8816
  %cmp114 = icmp slt i32 %63, 0, !dbg !8817
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !8816

if.then116:                                       ; preds = %do.body104
  %64 = load i32, i32* %err, align 4, !dbg !8818
  store i32 %64, i32* %retval, align 4, !dbg !8821
  br label %return, !dbg !8821

if.end117:                                        ; preds = %do.body104
  br label %do.end118, !dbg !8822

do.end118:                                        ; preds = %if.end117
  br label %do.end119, !dbg !8824

do.end119:                                        ; preds = %do.end118
  br label %if.end120, !dbg !8826

if.end120:                                        ; preds = %do.end119, %do.end95
  br label %do.end121, !dbg !8828

do.end121:                                        ; preds = %if.end120
  br label %if.end136, !dbg !8830

if.else:                                          ; preds = %for.body73
  br label %do.body122, !dbg !8832, !llvm.loop !8833

do.body122:                                       ; preds = %if.else
  %65 = load i32, i32* %i, align 4, !dbg !8834
  %idxprom123 = sext i32 %65 to i64, !dbg !8838
  %66 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8838
  %segmentation_pred_prob124 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %66, i32 0, i32 46, !dbg !8839
  %arrayidx125 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob124, i64 0, i64 %idxprom123, !dbg !8838
  %67 = load i8, i8* %arrayidx125, align 1, !dbg !8838
  %conv126 = zext i8 %67 to i32, !dbg !8838
  %cmp127 = icmp ne i32 %conv126, 255, !dbg !8840
  br i1 %cmp127, label %if.then129, label %if.end134, !dbg !8838

if.then129:                                       ; preds = %do.body122
  %68 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8841
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %68, i32 0, i32 0, !dbg !8844
  %69 = load i8*, i8** %log_ctx, align 8, !dbg !8844
  %70 = load i32, i32* %i, align 4, !dbg !8845
  %idxprom130 = sext i32 %70 to i64, !dbg !8846
  %71 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8846
  %segmentation_pred_prob131 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %71, i32 0, i32 46, !dbg !8847
  %arrayidx132 = getelementptr inbounds [3 x i8], [3 x i8]* %segmentation_pred_prob131, i64 0, i64 %idxprom130, !dbg !8846
  %72 = load i8, i8* %arrayidx132, align 1, !dbg !8846
  %conv133 = zext i8 %72 to i64, !dbg !8848
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i32 0, i32 0), i64 %conv133, i64 255), !dbg !8849
  br label %if.end134, !dbg !8850

if.end134:                                        ; preds = %if.then129, %do.body122
  br label %do.end135, !dbg !8851

do.end135:                                        ; preds = %if.end134
  br label %if.end136

if.end136:                                        ; preds = %do.end135, %do.end121
  br label %for.inc137, !dbg !8853

for.inc137:                                       ; preds = %if.end136
  %73 = load i32, i32* %i, align 4, !dbg !8854
  %inc138 = add nsw i32 %73, 1, !dbg !8854
  store i32 %inc138, i32* %i, align 4, !dbg !8854
  br label %for.cond70, !dbg !8856, !llvm.loop !8857

for.end139:                                       ; preds = %for.cond70
  br label %if.end140, !dbg !8859

if.end140:                                        ; preds = %for.end139, %do.end15
  br label %do.body141, !dbg !8860, !llvm.loop !8861

do.body141:                                       ; preds = %if.end140
  br label %do.body142, !dbg !8862, !llvm.loop !8865

do.body142:                                       ; preds = %do.body141
  %74 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8867
  %75 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8870
  %76 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8871
  %segmentation_update_data = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %76, i32 0, i32 47, !dbg !8872
  %77 = load i8, i8* %segmentation_update_data, align 1, !dbg !8872
  %conv143 = zext i8 %77 to i32, !dbg !8871
  %call144 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %74, %struct.PutBitContext* %75, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i32 0, i32 0), i32* null, i32 %conv143, i32 0, i32 1), !dbg !8873
  store i32 %call144, i32* %err, align 4, !dbg !8874
  %78 = load i32, i32* %err, align 4, !dbg !8875
  %cmp145 = icmp slt i32 %78, 0, !dbg !8876
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !8875

if.then147:                                       ; preds = %do.body142
  %79 = load i32, i32* %err, align 4, !dbg !8877
  store i32 %79, i32* %retval, align 4, !dbg !8880
  br label %return, !dbg !8880

if.end148:                                        ; preds = %do.body142
  br label %do.end149, !dbg !8881

do.end149:                                        ; preds = %if.end148
  br label %do.end150, !dbg !8883

do.end150:                                        ; preds = %do.end149
  %80 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8885
  %segmentation_update_data151 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %80, i32 0, i32 47, !dbg !8887
  %81 = load i8, i8* %segmentation_update_data151, align 1, !dbg !8887
  %tobool152 = icmp ne i8 %81, 0, !dbg !8885
  br i1 %tobool152, label %if.then153, label %if.end315, !dbg !8888

if.then153:                                       ; preds = %do.end150
  br label %do.body154, !dbg !8889, !llvm.loop !8891

do.body154:                                       ; preds = %if.then153
  br label %do.body155, !dbg !8892, !llvm.loop !8895

do.body155:                                       ; preds = %do.body154
  %82 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8897
  %83 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8900
  %84 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8901
  %segmentation_abs_or_delta_update = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %84, i32 0, i32 48, !dbg !8902
  %85 = load i8, i8* %segmentation_abs_or_delta_update, align 2, !dbg !8902
  %conv156 = zext i8 %85 to i32, !dbg !8901
  %call157 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %82, %struct.PutBitContext* %83, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.75, i32 0, i32 0), i32* null, i32 %conv156, i32 0, i32 1), !dbg !8903
  store i32 %call157, i32* %err, align 4, !dbg !8904
  %86 = load i32, i32* %err, align 4, !dbg !8905
  %cmp158 = icmp slt i32 %86, 0, !dbg !8906
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !8905

if.then160:                                       ; preds = %do.body155
  %87 = load i32, i32* %err, align 4, !dbg !8907
  store i32 %87, i32* %retval, align 4, !dbg !8910
  br label %return, !dbg !8910

if.end161:                                        ; preds = %do.body155
  br label %do.end162, !dbg !8911

do.end162:                                        ; preds = %if.end161
  br label %do.end163, !dbg !8913

do.end163:                                        ; preds = %do.end162
  store i32 0, i32* %i, align 4, !dbg !8915
  br label %for.cond164, !dbg !8917

for.cond164:                                      ; preds = %for.inc312, %do.end163
  %88 = load i32, i32* %i, align 4, !dbg !8918
  %cmp165 = icmp slt i32 %88, 8, !dbg !8921
  br i1 %cmp165, label %for.body167, label %for.end314, !dbg !8922

for.body167:                                      ; preds = %for.cond164
  store i32 0, i32* %j, align 4, !dbg !8923
  br label %for.cond168, !dbg !8926

for.cond168:                                      ; preds = %for.inc309, %for.body167
  %89 = load i32, i32* %j, align 4, !dbg !8927
  %cmp169 = icmp slt i32 %89, 4, !dbg !8930
  br i1 %cmp169, label %for.body171, label %for.end311, !dbg !8931

for.body171:                                      ; preds = %for.cond168
  br label %do.body172, !dbg !8932, !llvm.loop !8934

do.body172:                                       ; preds = %for.body171
  br label %do.body173, !dbg !8935, !llvm.loop !8938

do.body173:                                       ; preds = %do.body172
  %90 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8940
  %91 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8943
  %arrayinit.begin175 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral174, i64 0, i64 0, !dbg !8944
  store i32 2, i32* %arrayinit.begin175, align 4, !dbg !8944
  %arrayinit.element176 = getelementptr inbounds i32, i32* %arrayinit.begin175, i64 1, !dbg !8944
  %92 = load i32, i32* %i, align 4, !dbg !8945
  store i32 %92, i32* %arrayinit.element176, align 4, !dbg !8944
  %arrayinit.element177 = getelementptr inbounds i32, i32* %arrayinit.element176, i64 1, !dbg !8944
  %93 = load i32, i32* %j, align 4, !dbg !8946
  store i32 %93, i32* %arrayinit.element177, align 4, !dbg !8944
  %arraydecay178 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral174, i32 0, i32 0, !dbg !8947
  %94 = load i32, i32* %j, align 4, !dbg !8948
  %idxprom179 = sext i32 %94 to i64, !dbg !8949
  %95 = load i32, i32* %i, align 4, !dbg !8950
  %idxprom180 = sext i32 %95 to i64, !dbg !8949
  %96 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8949
  %feature_enabled = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %96, i32 0, i32 49, !dbg !8951
  %arrayidx181 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_enabled, i64 0, i64 %idxprom180, !dbg !8949
  %arrayidx182 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx181, i64 0, i64 %idxprom179, !dbg !8949
  %97 = load i8, i8* %arrayidx182, align 1, !dbg !8949
  %conv183 = zext i8 %97 to i32, !dbg !8949
  %call184 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %90, %struct.PutBitContext* %91, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i32 0, i32 0), i32* %arraydecay178, i32 %conv183, i32 0, i32 1), !dbg !8952
  store i32 %call184, i32* %err, align 4, !dbg !8953
  %98 = load i32, i32* %err, align 4, !dbg !8954
  %cmp185 = icmp slt i32 %98, 0, !dbg !8955
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !8954

if.then187:                                       ; preds = %do.body173
  %99 = load i32, i32* %err, align 4, !dbg !8956
  store i32 %99, i32* %retval, align 4, !dbg !8959
  br label %return, !dbg !8959

if.end188:                                        ; preds = %do.body173
  br label %do.end189, !dbg !8960

do.end189:                                        ; preds = %if.end188
  br label %do.end190, !dbg !8962

do.end190:                                        ; preds = %do.end189
  %100 = load i32, i32* %j, align 4, !dbg !8964
  %idxprom191 = sext i32 %100 to i64, !dbg !8966
  %101 = load i32, i32* %i, align 4, !dbg !8967
  %idxprom192 = sext i32 %101 to i64, !dbg !8966
  %102 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8966
  %feature_enabled193 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %102, i32 0, i32 49, !dbg !8968
  %arrayidx194 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_enabled193, i64 0, i64 %idxprom192, !dbg !8966
  %arrayidx195 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx194, i64 0, i64 %idxprom191, !dbg !8966
  %103 = load i8, i8* %arrayidx195, align 1, !dbg !8966
  %conv196 = zext i8 %103 to i32, !dbg !8966
  %tobool197 = icmp ne i32 %conv196, 0, !dbg !8966
  br i1 %tobool197, label %land.lhs.true, label %if.else269, !dbg !8969

land.lhs.true:                                    ; preds = %do.end190
  %104 = load i32, i32* %j, align 4, !dbg !8970
  %idxprom198 = sext i32 %104 to i64, !dbg !8971
  %arrayidx199 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom198, !dbg !8971
  %105 = load i32, i32* %arrayidx199, align 4, !dbg !8971
  %tobool200 = icmp ne i32 %105, 0, !dbg !8971
  br i1 %tobool200, label %if.then201, label %if.else269, !dbg !8972

if.then201:                                       ; preds = %land.lhs.true
  br label %do.body202, !dbg !8974, !llvm.loop !8976

do.body202:                                       ; preds = %if.then201
  br label %do.body203, !dbg !8977, !llvm.loop !8980

do.body203:                                       ; preds = %do.body202
  %106 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !8982
  %107 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !8985
  %108 = load i32, i32* %j, align 4, !dbg !8986
  %idxprom204 = sext i32 %108 to i64, !dbg !8987
  %arrayidx205 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom204, !dbg !8987
  %109 = load i32, i32* %arrayidx205, align 4, !dbg !8987
  %arrayinit.begin207 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral206, i64 0, i64 0, !dbg !8988
  store i32 2, i32* %arrayinit.begin207, align 4, !dbg !8988
  %arrayinit.element208 = getelementptr inbounds i32, i32* %arrayinit.begin207, i64 1, !dbg !8988
  %110 = load i32, i32* %i, align 4, !dbg !8989
  store i32 %110, i32* %arrayinit.element208, align 4, !dbg !8988
  %arrayinit.element209 = getelementptr inbounds i32, i32* %arrayinit.element208, i64 1, !dbg !8988
  %111 = load i32, i32* %j, align 4, !dbg !8990
  store i32 %111, i32* %arrayinit.element209, align 4, !dbg !8988
  %arraydecay210 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral206, i32 0, i32 0, !dbg !8991
  %112 = load i32, i32* %j, align 4, !dbg !8992
  %idxprom211 = sext i32 %112 to i64, !dbg !8993
  %113 = load i32, i32* %i, align 4, !dbg !8994
  %idxprom212 = sext i32 %113 to i64, !dbg !8993
  %114 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !8993
  %feature_value = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %114, i32 0, i32 50, !dbg !8995
  %arrayidx213 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_value, i64 0, i64 %idxprom212, !dbg !8993
  %arrayidx214 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx213, i64 0, i64 %idxprom211, !dbg !8993
  %115 = load i8, i8* %arrayidx214, align 1, !dbg !8993
  %conv215 = zext i8 %115 to i32, !dbg !8993
  %116 = load i32, i32* %j, align 4, !dbg !8996
  %idxprom216 = sext i32 %116 to i64, !dbg !8997
  %arrayidx217 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_bits, i64 0, i64 %idxprom216, !dbg !8997
  %117 = load i32, i32* %arrayidx217, align 4, !dbg !8997
  %shl = shl i32 1, %117, !dbg !8998
  %sub = sub nsw i32 %shl, 1, !dbg !8999
  %call218 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %106, %struct.PutBitContext* %107, i32 %109, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i32 0, i32 0), i32* %arraydecay210, i32 %conv215, i32 0, i32 %sub), !dbg !9000
  store i32 %call218, i32* %err, align 4, !dbg !9001
  %118 = load i32, i32* %err, align 4, !dbg !9002
  %cmp219 = icmp slt i32 %118, 0, !dbg !9003
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !9002

if.then221:                                       ; preds = %do.body203
  %119 = load i32, i32* %err, align 4, !dbg !9004
  store i32 %119, i32* %retval, align 4, !dbg !9007
  br label %return, !dbg !9007

if.end222:                                        ; preds = %do.body203
  br label %do.end223, !dbg !9008

do.end223:                                        ; preds = %if.end222
  br label %do.end224, !dbg !9010

do.end224:                                        ; preds = %do.end223
  %120 = load i32, i32* %j, align 4, !dbg !9012
  %idxprom225 = sext i32 %120 to i64, !dbg !9014
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_signed, i64 0, i64 %idxprom225, !dbg !9014
  %121 = load i32, i32* %arrayidx226, align 4, !dbg !9014
  %tobool227 = icmp ne i32 %121, 0, !dbg !9014
  br i1 %tobool227, label %if.then228, label %if.else248, !dbg !9015

if.then228:                                       ; preds = %do.end224
  br label %do.body229, !dbg !9016, !llvm.loop !9017

do.body229:                                       ; preds = %if.then228
  br label %do.body230, !dbg !9018, !llvm.loop !9021

do.body230:                                       ; preds = %do.body229
  %122 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9023
  %123 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9026
  %arrayinit.begin232 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral231, i64 0, i64 0, !dbg !9027
  store i32 2, i32* %arrayinit.begin232, align 4, !dbg !9027
  %arrayinit.element233 = getelementptr inbounds i32, i32* %arrayinit.begin232, i64 1, !dbg !9027
  %124 = load i32, i32* %i, align 4, !dbg !9028
  store i32 %124, i32* %arrayinit.element233, align 4, !dbg !9027
  %arrayinit.element234 = getelementptr inbounds i32, i32* %arrayinit.element233, i64 1, !dbg !9027
  %125 = load i32, i32* %j, align 4, !dbg !9029
  store i32 %125, i32* %arrayinit.element234, align 4, !dbg !9027
  %arraydecay235 = getelementptr inbounds [3 x i32], [3 x i32]* %.compoundliteral231, i32 0, i32 0, !dbg !9030
  %126 = load i32, i32* %j, align 4, !dbg !9031
  %idxprom236 = sext i32 %126 to i64, !dbg !9032
  %127 = load i32, i32* %i, align 4, !dbg !9033
  %idxprom237 = sext i32 %127 to i64, !dbg !9032
  %128 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9032
  %feature_sign = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %128, i32 0, i32 51, !dbg !9034
  %arrayidx238 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign, i64 0, i64 %idxprom237, !dbg !9032
  %arrayidx239 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx238, i64 0, i64 %idxprom236, !dbg !9032
  %129 = load i8, i8* %arrayidx239, align 1, !dbg !9032
  %conv240 = zext i8 %129 to i32, !dbg !9032
  %call241 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %122, %struct.PutBitContext* %123, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i32* %arraydecay235, i32 %conv240, i32 0, i32 1), !dbg !9035
  store i32 %call241, i32* %err, align 4, !dbg !9036
  %130 = load i32, i32* %err, align 4, !dbg !9037
  %cmp242 = icmp slt i32 %130, 0, !dbg !9038
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !9037

if.then244:                                       ; preds = %do.body230
  %131 = load i32, i32* %err, align 4, !dbg !9039
  store i32 %131, i32* %retval, align 4, !dbg !9042
  br label %return, !dbg !9042

if.end245:                                        ; preds = %do.body230
  br label %do.end246, !dbg !9043

do.end246:                                        ; preds = %if.end245
  br label %do.end247, !dbg !9045

do.end247:                                        ; preds = %do.end246
  br label %if.end268, !dbg !9047

if.else248:                                       ; preds = %do.end224
  br label %do.body249, !dbg !9049, !llvm.loop !9050

do.body249:                                       ; preds = %if.else248
  %132 = load i32, i32* %j, align 4, !dbg !9051
  %idxprom250 = sext i32 %132 to i64, !dbg !9055
  %133 = load i32, i32* %i, align 4, !dbg !9056
  %idxprom251 = sext i32 %133 to i64, !dbg !9055
  %134 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9055
  %feature_sign252 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %134, i32 0, i32 51, !dbg !9057
  %arrayidx253 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign252, i64 0, i64 %idxprom251, !dbg !9055
  %arrayidx254 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx253, i64 0, i64 %idxprom250, !dbg !9055
  %135 = load i8, i8* %arrayidx254, align 1, !dbg !9055
  %conv255 = zext i8 %135 to i32, !dbg !9055
  %cmp256 = icmp ne i32 %conv255, 0, !dbg !9058
  br i1 %cmp256, label %if.then258, label %if.end266, !dbg !9055

if.then258:                                       ; preds = %do.body249
  %136 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9059
  %log_ctx259 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %136, i32 0, i32 0, !dbg !9062
  %137 = load i8*, i8** %log_ctx259, align 8, !dbg !9062
  %138 = load i32, i32* %j, align 4, !dbg !9063
  %idxprom260 = sext i32 %138 to i64, !dbg !9064
  %139 = load i32, i32* %i, align 4, !dbg !9062
  %idxprom261 = sext i32 %139 to i64, !dbg !9064
  %140 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9064
  %feature_sign262 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %140, i32 0, i32 51, !dbg !9065
  %arrayidx263 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign262, i64 0, i64 %idxprom261, !dbg !9064
  %arrayidx264 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx263, i64 0, i64 %idxprom260, !dbg !9064
  %141 = load i8, i8* %arrayidx264, align 1, !dbg !9064
  %conv265 = zext i8 %141 to i64, !dbg !9066
  call void (i8*, i32, i8*, ...) @av_log(i8* %137, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i64 %conv265, i64 0), !dbg !9067
  br label %if.end266, !dbg !9068

if.end266:                                        ; preds = %if.then258, %do.body249
  br label %do.end267, !dbg !9069

do.end267:                                        ; preds = %if.end266
  br label %if.end268

if.end268:                                        ; preds = %do.end267, %do.end247
  br label %if.end308, !dbg !9071

if.else269:                                       ; preds = %land.lhs.true, %do.end190
  br label %do.body270, !dbg !9072, !llvm.loop !9074

do.body270:                                       ; preds = %if.else269
  %142 = load i32, i32* %j, align 4, !dbg !9075
  %idxprom271 = sext i32 %142 to i64, !dbg !9079
  %143 = load i32, i32* %i, align 4, !dbg !9080
  %idxprom272 = sext i32 %143 to i64, !dbg !9079
  %144 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9079
  %feature_value273 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %144, i32 0, i32 50, !dbg !9081
  %arrayidx274 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_value273, i64 0, i64 %idxprom272, !dbg !9079
  %arrayidx275 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx274, i64 0, i64 %idxprom271, !dbg !9079
  %145 = load i8, i8* %arrayidx275, align 1, !dbg !9079
  %conv276 = zext i8 %145 to i32, !dbg !9079
  %cmp277 = icmp ne i32 %conv276, 0, !dbg !9082
  br i1 %cmp277, label %if.then279, label %if.end287, !dbg !9079

if.then279:                                       ; preds = %do.body270
  %146 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9083
  %log_ctx280 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %146, i32 0, i32 0, !dbg !9086
  %147 = load i8*, i8** %log_ctx280, align 8, !dbg !9086
  %148 = load i32, i32* %j, align 4, !dbg !9087
  %idxprom281 = sext i32 %148 to i64, !dbg !9088
  %149 = load i32, i32* %i, align 4, !dbg !9089
  %idxprom282 = sext i32 %149 to i64, !dbg !9088
  %150 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9088
  %feature_value283 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %150, i32 0, i32 50, !dbg !9090
  %arrayidx284 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_value283, i64 0, i64 %idxprom282, !dbg !9088
  %arrayidx285 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx284, i64 0, i64 %idxprom281, !dbg !9088
  %151 = load i8, i8* %arrayidx285, align 1, !dbg !9088
  %conv286 = zext i8 %151 to i64, !dbg !9091
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i32 0, i32 0), i64 %conv286, i64 0), !dbg !9092
  br label %if.end287, !dbg !9093

if.end287:                                        ; preds = %if.then279, %do.body270
  br label %do.end288, !dbg !9094

do.end288:                                        ; preds = %if.end287
  br label %do.body289, !dbg !9096, !llvm.loop !9097

do.body289:                                       ; preds = %do.end288
  %152 = load i32, i32* %j, align 4, !dbg !9098
  %idxprom290 = sext i32 %152 to i64, !dbg !9102
  %153 = load i32, i32* %i, align 4, !dbg !9103
  %idxprom291 = sext i32 %153 to i64, !dbg !9102
  %154 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9102
  %feature_sign292 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %154, i32 0, i32 51, !dbg !9104
  %arrayidx293 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign292, i64 0, i64 %idxprom291, !dbg !9102
  %arrayidx294 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx293, i64 0, i64 %idxprom290, !dbg !9102
  %155 = load i8, i8* %arrayidx294, align 1, !dbg !9102
  %conv295 = zext i8 %155 to i32, !dbg !9102
  %cmp296 = icmp ne i32 %conv295, 0, !dbg !9105
  br i1 %cmp296, label %if.then298, label %if.end306, !dbg !9102

if.then298:                                       ; preds = %do.body289
  %156 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9106
  %log_ctx299 = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %156, i32 0, i32 0, !dbg !9109
  %157 = load i8*, i8** %log_ctx299, align 8, !dbg !9109
  %158 = load i32, i32* %j, align 4, !dbg !9110
  %idxprom300 = sext i32 %158 to i64, !dbg !9111
  %159 = load i32, i32* %i, align 4, !dbg !9109
  %idxprom301 = sext i32 %159 to i64, !dbg !9111
  %160 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9111
  %feature_sign302 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %160, i32 0, i32 51, !dbg !9112
  %arrayidx303 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %feature_sign302, i64 0, i64 %idxprom301, !dbg !9111
  %arrayidx304 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx303, i64 0, i64 %idxprom300, !dbg !9111
  %161 = load i8, i8* %arrayidx304, align 1, !dbg !9111
  %conv305 = zext i8 %161 to i64, !dbg !9113
  call void (i8*, i32, i8*, ...) @av_log(i8* %157, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i64 %conv305, i64 0), !dbg !9114
  br label %if.end306, !dbg !9115

if.end306:                                        ; preds = %if.then298, %do.body289
  br label %do.end307, !dbg !9116

do.end307:                                        ; preds = %if.end306
  br label %if.end308

if.end308:                                        ; preds = %do.end307, %if.end268
  br label %for.inc309, !dbg !9118

for.inc309:                                       ; preds = %if.end308
  %162 = load i32, i32* %j, align 4, !dbg !9119
  %inc310 = add nsw i32 %162, 1, !dbg !9119
  store i32 %inc310, i32* %j, align 4, !dbg !9119
  br label %for.cond168, !dbg !9121, !llvm.loop !9122

for.end311:                                       ; preds = %for.cond168
  br label %for.inc312, !dbg !9124

for.inc312:                                       ; preds = %for.end311
  %163 = load i32, i32* %i, align 4, !dbg !9125
  %inc313 = add nsw i32 %163, 1, !dbg !9125
  store i32 %inc313, i32* %i, align 4, !dbg !9125
  br label %for.cond164, !dbg !9127, !llvm.loop !9128

for.end314:                                       ; preds = %for.cond164
  br label %if.end315, !dbg !9130

if.end315:                                        ; preds = %for.end314, %do.end150
  br label %if.end316, !dbg !9131

if.end316:                                        ; preds = %if.end315, %do.end3
  store i32 0, i32* %retval, align 4, !dbg !9132
  br label %return, !dbg !9132

return:                                           ; preds = %if.end316, %if.then244, %if.then221, %if.then187, %if.then160, %if.then147, %if.then116, %if.then92, %if.then66, %if.then54, %if.then30, %if.then12, %if.then
  %164 = load i32, i32* %retval, align 4, !dbg !9133
  ret i32 %164, !dbg !9133
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_tile_info(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawFrameHeader* %current) #0 !dbg !9134 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawFrameHeader*, align 8
  %vp9 = alloca %struct.CodedBitstreamVP9Context*, align 8
  %min_log2_tile_cols = alloca i32, align 4
  %max_log2_tile_cols = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !9135, metadata !730), !dbg !9136
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !9137, metadata !730), !dbg !9138
  store %struct.VP9RawFrameHeader* %current, %struct.VP9RawFrameHeader** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawFrameHeader** %current.addr, metadata !9139, metadata !730), !dbg !9140
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamVP9Context** %vp9, metadata !9141, metadata !730), !dbg !9142
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9143
  %priv_data = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %0, i32 0, i32 2, !dbg !9144
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9144
  %2 = bitcast i8* %1 to %struct.CodedBitstreamVP9Context*, !dbg !9143
  store %struct.CodedBitstreamVP9Context* %2, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !9142
  call void @llvm.dbg.declare(metadata i32* %min_log2_tile_cols, metadata !9145, metadata !730), !dbg !9146
  call void @llvm.dbg.declare(metadata i32* %max_log2_tile_cols, metadata !9147, metadata !730), !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9149, metadata !730), !dbg !9150
  store i32 0, i32* %min_log2_tile_cols, align 4, !dbg !9151
  br label %while.cond, !dbg !9152

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !9153
  %shl = shl i32 64, %3, !dbg !9155
  %4 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !9156
  %sb64_cols = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %4, i32 0, i32 3, !dbg !9157
  %5 = load i16, i16* %sb64_cols, align 8, !dbg !9157
  %conv = zext i16 %5 to i32, !dbg !9156
  %cmp = icmp slt i32 %shl, %conv, !dbg !9158
  br i1 %cmp, label %while.body, label %while.end, !dbg !9159

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !9160
  %inc = add nsw i32 %6, 1, !dbg !9160
  store i32 %inc, i32* %min_log2_tile_cols, align 4, !dbg !9160
  br label %while.cond, !dbg !9161, !llvm.loop !9163

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %max_log2_tile_cols, align 4, !dbg !9164
  br label %while.cond2, !dbg !9165

while.cond2:                                      ; preds = %while.body7, %while.end
  %7 = load %struct.CodedBitstreamVP9Context*, %struct.CodedBitstreamVP9Context** %vp9, align 8, !dbg !9166
  %sb64_cols3 = getelementptr inbounds %struct.CodedBitstreamVP9Context, %struct.CodedBitstreamVP9Context* %7, i32 0, i32 3, !dbg !9167
  %8 = load i16, i16* %sb64_cols3, align 8, !dbg !9167
  %conv4 = zext i16 %8 to i32, !dbg !9166
  %9 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !9168
  %add = add nsw i32 %9, 1, !dbg !9169
  %shr = ashr i32 %conv4, %add, !dbg !9170
  %cmp5 = icmp sge i32 %shr, 4, !dbg !9171
  br i1 %cmp5, label %while.body7, label %while.end9, !dbg !9172

while.body7:                                      ; preds = %while.cond2
  %10 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !9173
  %inc8 = add nsw i32 %10, 1, !dbg !9173
  store i32 %inc8, i32* %max_log2_tile_cols, align 4, !dbg !9173
  br label %while.cond2, !dbg !9174, !llvm.loop !9175

while.end9:                                       ; preds = %while.cond2
  br label %do.body, !dbg !9176, !llvm.loop !9177

do.body:                                          ; preds = %while.end9
  br label %do.body10, !dbg !9178, !llvm.loop !9181

do.body10:                                        ; preds = %do.body
  %11 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9183
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9186
  %13 = load i32, i32* %min_log2_tile_cols, align 4, !dbg !9187
  %14 = load i32, i32* %max_log2_tile_cols, align 4, !dbg !9188
  %15 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9189
  %tile_cols_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %15, i32 0, i32 52, !dbg !9190
  %16 = load i8, i8* %tile_cols_log2, align 1, !dbg !9190
  %conv11 = zext i8 %16 to i32, !dbg !9189
  %call = call i32 @cbs_vp9_write_increment(%struct.CodedBitstreamContext* %11, %struct.PutBitContext* %12, i32 %13, i32 %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i32 0, i32 0), i32 %conv11), !dbg !9191
  store i32 %call, i32* %err, align 4, !dbg !9192
  %17 = load i32, i32* %err, align 4, !dbg !9193
  %cmp12 = icmp slt i32 %17, 0, !dbg !9194
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9193

if.then:                                          ; preds = %do.body10
  %18 = load i32, i32* %err, align 4, !dbg !9195
  store i32 %18, i32* %retval, align 4, !dbg !9198
  br label %return, !dbg !9198

if.end:                                           ; preds = %do.body10
  br label %do.end, !dbg !9199

do.end:                                           ; preds = %if.end
  br label %do.end14, !dbg !9201

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !9203, !llvm.loop !9204

do.body15:                                        ; preds = %do.end14
  br label %do.body16, !dbg !9205, !llvm.loop !9208

do.body16:                                        ; preds = %do.body15
  %19 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9210
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9213
  %21 = load %struct.VP9RawFrameHeader*, %struct.VP9RawFrameHeader** %current.addr, align 8, !dbg !9214
  %tile_rows_log2 = getelementptr inbounds %struct.VP9RawFrameHeader, %struct.VP9RawFrameHeader* %21, i32 0, i32 53, !dbg !9215
  %22 = load i8, i8* %tile_rows_log2, align 2, !dbg !9215
  %conv17 = zext i8 %22 to i32, !dbg !9214
  %call18 = call i32 @cbs_vp9_write_increment(%struct.CodedBitstreamContext* %19, %struct.PutBitContext* %20, i32 0, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i32 %conv17), !dbg !9216
  store i32 %call18, i32* %err, align 4, !dbg !9217
  %23 = load i32, i32* %err, align 4, !dbg !9218
  %cmp19 = icmp slt i32 %23, 0, !dbg !9219
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !9218

if.then21:                                        ; preds = %do.body16
  %24 = load i32, i32* %err, align 4, !dbg !9220
  store i32 %24, i32* %retval, align 4, !dbg !9223
  br label %return, !dbg !9223

if.end22:                                         ; preds = %do.body16
  br label %do.end23, !dbg !9224

do.end23:                                         ; preds = %if.end22
  br label %do.end24, !dbg !9226

do.end24:                                         ; preds = %do.end23
  store i32 0, i32* %retval, align 4, !dbg !9228
  br label %return, !dbg !9228

return:                                           ; preds = %do.end24, %if.then21, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9229
  ret i32 %25, !dbg !9229
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_s(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %pbc, i32 %width, i8* %name, i32* %subscripts, i32 %value) #0 !dbg !9230 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %pbc.addr = alloca %struct.PutBitContext*, align 8
  %width.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %subscripts.addr = alloca i32*, align 8
  %value.addr = alloca i32, align 4
  %magnitude = alloca i32, align 4
  %sign = alloca i32, align 4
  %bits = alloca [33 x i8], align 16
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !9233, metadata !730), !dbg !9234
  store %struct.PutBitContext* %pbc, %struct.PutBitContext** %pbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pbc.addr, metadata !9235, metadata !730), !dbg !9236
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9237, metadata !730), !dbg !9238
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9239, metadata !730), !dbg !9240
  store i32* %subscripts, i32** %subscripts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %subscripts.addr, metadata !9241, metadata !730), !dbg !9242
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9243, metadata !730), !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %magnitude, metadata !9245, metadata !730), !dbg !9246
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !9247, metadata !730), !dbg !9248
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9249
  %call = call i32 @put_bits_left(%struct.PutBitContext* %0), !dbg !9251
  %1 = load i32, i32* %width.addr, align 4, !dbg !9252
  %add = add nsw i32 %1, 1, !dbg !9253
  %cmp = icmp slt i32 %call, %add, !dbg !9254
  br i1 %cmp, label %if.then, label %if.end, !dbg !9255

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval, align 4, !dbg !9256
  br label %return, !dbg !9256

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !9257
  %cmp1 = icmp slt i32 %2, 0, !dbg !9258
  %conv = zext i1 %cmp1 to i32, !dbg !9258
  store i32 %conv, i32* %sign, align 4, !dbg !9259
  %3 = load i32, i32* %sign, align 4, !dbg !9260
  %tobool = icmp ne i32 %3, 0, !dbg !9260
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9260

cond.true:                                        ; preds = %if.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !9261
  %sub = sub nsw i32 0, %4, !dbg !9263
  br label %cond.end, !dbg !9264

cond.false:                                       ; preds = %if.end
  %5 = load i32, i32* %value.addr, align 4, !dbg !9265
  br label %cond.end, !dbg !9267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ], !dbg !9268
  store i32 %cond, i32* %magnitude, align 4, !dbg !9270
  %6 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9271
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %6, i32 0, i32 5, !dbg !9273
  %7 = load i32, i32* %trace_enable, align 4, !dbg !9273
  %tobool2 = icmp ne i32 %7, 0, !dbg !9271
  br i1 %tobool2, label %if.then3, label %if.end21, !dbg !9274

if.then3:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [33 x i8]* %bits, metadata !9275, metadata !730), !dbg !9277
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9278, metadata !730), !dbg !9279
  store i32 0, i32* %i, align 4, !dbg !9280
  br label %for.cond, !dbg !9282

for.cond:                                         ; preds = %for.inc, %if.then3
  %8 = load i32, i32* %i, align 4, !dbg !9283
  %9 = load i32, i32* %width.addr, align 4, !dbg !9286
  %cmp4 = icmp slt i32 %8, %9, !dbg !9287
  br i1 %cmp4, label %for.body, label %for.end, !dbg !9288

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %magnitude, align 4, !dbg !9289
  %11 = load i32, i32* %width.addr, align 4, !dbg !9290
  %12 = load i32, i32* %i, align 4, !dbg !9291
  %sub6 = sub nsw i32 %11, %12, !dbg !9292
  %sub7 = sub nsw i32 %sub6, 1, !dbg !9293
  %shr = lshr i32 %10, %sub7, !dbg !9294
  %and = and i32 %shr, 1, !dbg !9295
  %tobool8 = icmp ne i32 %and, 0, !dbg !9289
  %cond9 = select i1 %tobool8, i32 49, i32 48, !dbg !9289
  %conv10 = trunc i32 %cond9 to i8, !dbg !9289
  %13 = load i32, i32* %i, align 4, !dbg !9296
  %idxprom = sext i32 %13 to i64, !dbg !9297
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom, !dbg !9297
  store i8 %conv10, i8* %arrayidx, align 1, !dbg !9298
  br label %for.inc, !dbg !9297

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !9299
  %inc = add nsw i32 %14, 1, !dbg !9299
  store i32 %inc, i32* %i, align 4, !dbg !9299
  br label %for.cond, !dbg !9301, !llvm.loop !9302

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %sign, align 4, !dbg !9304
  %tobool11 = icmp ne i32 %15, 0, !dbg !9304
  %cond12 = select i1 %tobool11, i32 49, i32 48, !dbg !9304
  %conv13 = trunc i32 %cond12 to i8, !dbg !9304
  %16 = load i32, i32* %i, align 4, !dbg !9305
  %idxprom14 = sext i32 %16 to i64, !dbg !9306
  %arrayidx15 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom14, !dbg !9306
  store i8 %conv13, i8* %arrayidx15, align 1, !dbg !9307
  %17 = load i32, i32* %i, align 4, !dbg !9308
  %add16 = add nsw i32 %17, 1, !dbg !9309
  %idxprom17 = sext i32 %add16 to i64, !dbg !9310
  %arrayidx18 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom17, !dbg !9310
  store i8 0, i8* %arrayidx18, align 1, !dbg !9311
  %18 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9312
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9313
  %call19 = call i32 @put_bits_count(%struct.PutBitContext* %19), !dbg !9314
  %20 = load i8*, i8** %name.addr, align 8, !dbg !9315
  %21 = load i32*, i32** %subscripts.addr, align 8, !dbg !9316
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i32 0, i32 0, !dbg !9317
  %22 = load i32, i32* %value.addr, align 4, !dbg !9318
  %conv20 = sext i32 %22 to i64, !dbg !9318
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %18, i32 %call19, i8* %20, i32* %21, i8* %arraydecay, i64 %conv20), !dbg !9319
  br label %if.end21, !dbg !9321

if.end21:                                         ; preds = %for.end, %cond.end
  %23 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9322
  %24 = load i32, i32* %width.addr, align 4, !dbg !9323
  %25 = load i32, i32* %magnitude, align 4, !dbg !9324
  call void @put_bits(%struct.PutBitContext* %23, i32 %24, i32 %25), !dbg !9325
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9326
  %27 = load i32, i32* %sign, align 4, !dbg !9327
  call void @put_bits(%struct.PutBitContext* %26, i32 1, i32 %27), !dbg !9328
  store i32 0, i32* %retval, align 4, !dbg !9329
  br label %return, !dbg !9329

return:                                           ; preds = %if.end21, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !9330
  ret i32 %28, !dbg !9330
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_left(%struct.PutBitContext* %s) #2 !dbg !9331 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9332, metadata !730), !dbg !9333
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9334
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 4, !dbg !9335
  %1 = load i8*, i8** %buf_end, align 8, !dbg !9335
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9336
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 3, !dbg !9337
  %3 = load i8*, i8** %buf_ptr, align 8, !dbg !9337
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !9338
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !9338
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9338
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !9339
  %sub = sub nsw i64 %mul, 32, !dbg !9340
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9341
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !9342
  %5 = load i32, i32* %bit_left, align 4, !dbg !9342
  %conv = sext i32 %5 to i64, !dbg !9341
  %add = add nsw i64 %sub, %conv, !dbg !9343
  %conv1 = trunc i64 %add to i32, !dbg !9344
  ret i32 %conv1, !dbg !9345
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #2 !dbg !9346 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2027, metadata !730), !dbg !9349
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !9355, metadata !730), !dbg !9356
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9357, metadata !730), !dbg !9358
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9359, metadata !730), !dbg !9360
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !9361, metadata !730), !dbg !9362
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !9363, metadata !730), !dbg !9364
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9365
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !9366
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !9366
  store i32 %1, i32* %bit_buf, align 4, !dbg !9367
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9368
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !9369
  %3 = load i32, i32* %bit_left2, align 4, !dbg !9369
  store i32 %3, i32* %bit_left, align 4, !dbg !9370
  %4 = load i32, i32* %n.addr, align 4, !dbg !9371
  %5 = load i32, i32* %bit_left, align 4, !dbg !9372
  %cmp = icmp slt i32 %4, %5, !dbg !9373
  br i1 %cmp, label %if.then, label %if.else, !dbg !9374

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !9375
  %7 = load i32, i32* %n.addr, align 4, !dbg !9377
  %shl = shl i32 %6, %7, !dbg !9378
  %8 = load i32, i32* %value.addr, align 4, !dbg !9379
  %or = or i32 %shl, %8, !dbg !9380
  store i32 %or, i32* %bit_buf, align 4, !dbg !9381
  %9 = load i32, i32* %n.addr, align 4, !dbg !9382
  %10 = load i32, i32* %bit_left, align 4, !dbg !9383
  %sub = sub nsw i32 %10, %9, !dbg !9383
  store i32 %sub, i32* %bit_left, align 4, !dbg !9383
  br label %if.end12, !dbg !9384

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !9385
  %12 = load i32, i32* %bit_buf, align 4, !dbg !9386
  %shl3 = shl i32 %12, %11, !dbg !9386
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !9386
  %13 = load i32, i32* %value.addr, align 4, !dbg !9387
  %14 = load i32, i32* %n.addr, align 4, !dbg !9388
  %15 = load i32, i32* %bit_left, align 4, !dbg !9389
  %sub4 = sub nsw i32 %14, %15, !dbg !9390
  %shr = lshr i32 %13, %sub4, !dbg !9391
  %16 = load i32, i32* %bit_buf, align 4, !dbg !9392
  %or5 = or i32 %16, %shr, !dbg !9392
  store i32 %or5, i32* %bit_buf, align 4, !dbg !9392
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9393
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !9394
  %18 = load i8*, i8** %buf_end, align 8, !dbg !9394
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9395
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !9396
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !9396
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9397
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !9397
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9397
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !9398
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !9399

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !9400
  store i32 %21, i32* %x.addr.i, align 4, !dbg !9401
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !9402
  %shl.i = shl i32 %22, 8, !dbg !9403
  %and.i = and i32 %shl.i, 65280, !dbg !9404
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !9405
  %shr.i = lshr i32 %23, 8, !dbg !9406
  %and1.i = and i32 %shr.i, 255, !dbg !9407
  %or.i = or i32 %and.i, %and1.i, !dbg !9408
  %shl2.i = shl i32 %or.i, 16, !dbg !9409
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !9410
  %shr3.i = lshr i32 %24, 16, !dbg !9411
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9412
  %and5.i = and i32 %shl4.i, 65280, !dbg !9413
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !9414
  %shr6.i = lshr i32 %25, 16, !dbg !9415
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9416
  %and8.i = and i32 %shr7.i, 255, !dbg !9417
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9418
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9419
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9420
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !9421
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !9421
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !9422
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !9422
  store i32 %or10.i, i32* %l, align 1, !dbg !9423
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9424
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !9425
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !9426
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !9426
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !9426
  br label %if.end, !dbg !9427

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.87, i32 0, i32 0)), !dbg !9428
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !9430
  %sub11 = sub nsw i32 32, %31, !dbg !9431
  %32 = load i32, i32* %bit_left, align 4, !dbg !9432
  %add = add nsw i32 %32, %sub11, !dbg !9432
  store i32 %add, i32* %bit_left, align 4, !dbg !9432
  %33 = load i32, i32* %value.addr, align 4, !dbg !9433
  store i32 %33, i32* %bit_buf, align 4, !dbg !9434
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !9435
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9436
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !9437
  store i32 %34, i32* %bit_buf13, align 8, !dbg !9438
  %36 = load i32, i32* %bit_left, align 4, !dbg !9439
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !9440
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !9441
  store i32 %36, i32* %bit_left14, align 4, !dbg !9442
  ret void, !dbg !9443
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_increment(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %pbc, i32 %range_min, i32 %range_max, i8* %name, i32 %value) #0 !dbg !9444 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %pbc.addr = alloca %struct.PutBitContext*, align 8
  %range_min.addr = alloca i32, align 4
  %range_max.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %bits = alloca [8 x i8], align 1
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !9447, metadata !730), !dbg !9448
  store %struct.PutBitContext* %pbc, %struct.PutBitContext** %pbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pbc.addr, metadata !9449, metadata !730), !dbg !9450
  store i32 %range_min, i32* %range_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_min.addr, metadata !9451, metadata !730), !dbg !9452
  store i32 %range_max, i32* %range_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_max.addr, metadata !9453, metadata !730), !dbg !9454
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9455, metadata !730), !dbg !9456
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9457, metadata !730), !dbg !9458
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9459, metadata !730), !dbg !9460
  br label %do.body, !dbg !9461, !llvm.loop !9462

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %range_min.addr, align 4, !dbg !9463
  %1 = load i32, i32* %range_max.addr, align 4, !dbg !9467
  %cmp = icmp ule i32 %0, %1, !dbg !9468
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !9469

land.lhs.true:                                    ; preds = %do.body
  %2 = load i32, i32* %range_max.addr, align 4, !dbg !9470
  %3 = load i32, i32* %range_min.addr, align 4, !dbg !9472
  %sub = sub i32 %2, %3, !dbg !9473
  %cmp1 = icmp ult i32 %sub, 8, !dbg !9474
  br i1 %cmp1, label %if.end, label %if.then, !dbg !9475

if.then:                                          ; preds = %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 137), !dbg !9476
  call void @abort() #6, !dbg !9479
  unreachable, !dbg !9481

if.end:                                           ; preds = %land.lhs.true
  br label %do.end, !dbg !9482

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !9484
  %5 = load i32, i32* %range_min.addr, align 4, !dbg !9486
  %cmp2 = icmp ult i32 %4, %5, !dbg !9487
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !9488

lor.lhs.false:                                    ; preds = %do.end
  %6 = load i32, i32* %value.addr, align 4, !dbg !9489
  %7 = load i32, i32* %range_max.addr, align 4, !dbg !9491
  %cmp3 = icmp ugt i32 %6, %7, !dbg !9492
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9493

if.then4:                                         ; preds = %lor.lhs.false, %do.end
  %8 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9494
  %log_ctx = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %8, i32 0, i32 0, !dbg !9496
  %9 = load i8*, i8** %log_ctx, align 8, !dbg !9496
  %10 = load i8*, i8** %name.addr, align 8, !dbg !9497
  %11 = load i32, i32* %value.addr, align 4, !dbg !9498
  %12 = load i32, i32* %range_min.addr, align 4, !dbg !9499
  %13 = load i32, i32* %range_max.addr, align 4, !dbg !9500
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.90, i32 0, i32 0), i8* %10, i32 %11, i32 %12, i32 %13), !dbg !9501
  store i32 -1094995529, i32* %retval, align 4, !dbg !9502
  br label %return, !dbg !9502

if.end5:                                          ; preds = %lor.lhs.false
  %14 = load i32, i32* %value.addr, align 4, !dbg !9503
  %15 = load i32, i32* %range_max.addr, align 4, !dbg !9505
  %cmp6 = icmp eq i32 %14, %15, !dbg !9506
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !9507

if.then7:                                         ; preds = %if.end5
  %16 = load i32, i32* %range_max.addr, align 4, !dbg !9508
  %17 = load i32, i32* %range_min.addr, align 4, !dbg !9509
  %sub8 = sub i32 %16, %17, !dbg !9510
  store i32 %sub8, i32* %len, align 4, !dbg !9511
  br label %if.end10, !dbg !9512

if.else:                                          ; preds = %if.end5
  %18 = load i32, i32* %value.addr, align 4, !dbg !9513
  %19 = load i32, i32* %range_min.addr, align 4, !dbg !9514
  %sub9 = sub i32 %18, %19, !dbg !9515
  %add = add i32 %sub9, 1, !dbg !9516
  store i32 %add, i32* %len, align 4, !dbg !9517
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9518
  %call = call i32 @put_bits_left(%struct.PutBitContext* %20), !dbg !9520
  %21 = load i32, i32* %len, align 4, !dbg !9521
  %cmp11 = icmp slt i32 %call, %21, !dbg !9522
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9523

if.then12:                                        ; preds = %if.end10
  store i32 -28, i32* %retval, align 4, !dbg !9524
  br label %return, !dbg !9524

if.end13:                                         ; preds = %if.end10
  %22 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9525
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %22, i32 0, i32 5, !dbg !9527
  %23 = load i32, i32* %trace_enable, align 4, !dbg !9527
  %tobool = icmp ne i32 %23, 0, !dbg !9525
  br i1 %tobool, label %if.then14, label %if.end26, !dbg !9528

if.then14:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata [8 x i8]* %bits, metadata !9529, metadata !730), !dbg !9531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9532, metadata !730), !dbg !9533
  store i32 0, i32* %i, align 4, !dbg !9534
  br label %for.cond, !dbg !9536

for.cond:                                         ; preds = %for.inc, %if.then14
  %24 = load i32, i32* %i, align 4, !dbg !9537
  %25 = load i32, i32* %len, align 4, !dbg !9540
  %cmp15 = icmp slt i32 %24, %25, !dbg !9541
  br i1 %cmp15, label %for.body, label %for.end, !dbg !9542

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %range_min.addr, align 4, !dbg !9543
  %27 = load i32, i32* %i, align 4, !dbg !9546
  %add16 = add i32 %26, %27, !dbg !9547
  %28 = load i32, i32* %value.addr, align 4, !dbg !9548
  %cmp17 = icmp eq i32 %add16, %28, !dbg !9549
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !9550

if.then18:                                        ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !9551
  %idxprom = sext i32 %29 to i64, !dbg !9552
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom, !dbg !9552
  store i8 48, i8* %arrayidx, align 1, !dbg !9553
  br label %if.end22, !dbg !9552

if.else19:                                        ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !9554
  %idxprom20 = sext i32 %30 to i64, !dbg !9555
  %arrayidx21 = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom20, !dbg !9555
  store i8 49, i8* %arrayidx21, align 1, !dbg !9556
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  br label %for.inc, !dbg !9557

for.inc:                                          ; preds = %if.end22
  %31 = load i32, i32* %i, align 4, !dbg !9558
  %inc = add nsw i32 %31, 1, !dbg !9558
  store i32 %inc, i32* %i, align 4, !dbg !9558
  br label %for.cond, !dbg !9560, !llvm.loop !9561

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !9563
  %idxprom23 = sext i32 %32 to i64, !dbg !9564
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i64 0, i64 %idxprom23, !dbg !9564
  store i8 0, i8* %arrayidx24, align 1, !dbg !9565
  %33 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9566
  %34 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9567
  %call25 = call i32 @put_bits_count(%struct.PutBitContext* %34), !dbg !9568
  %35 = load i8*, i8** %name.addr, align 8, !dbg !9569
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %bits, i32 0, i32 0, !dbg !9570
  %36 = load i32, i32* %value.addr, align 4, !dbg !9571
  %conv = zext i32 %36 to i64, !dbg !9571
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %33, i32 %call25, i8* %35, i32* null, i8* %arraydecay, i64 %conv), !dbg !9572
  br label %if.end26, !dbg !9574

if.end26:                                         ; preds = %for.end, %if.end13
  %37 = load i32, i32* %len, align 4, !dbg !9575
  %cmp27 = icmp sgt i32 %37, 0, !dbg !9577
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !9578

if.then29:                                        ; preds = %if.end26
  %38 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9579
  %39 = load i32, i32* %len, align 4, !dbg !9580
  %40 = load i32, i32* %len, align 4, !dbg !9581
  %shl = shl i32 1, %40, !dbg !9582
  %sub30 = sub nsw i32 %shl, 1, !dbg !9583
  %41 = load i32, i32* %value.addr, align 4, !dbg !9584
  %42 = load i32, i32* %range_max.addr, align 4, !dbg !9585
  %cmp31 = icmp ne i32 %41, %42, !dbg !9586
  %conv32 = zext i1 %cmp31 to i32, !dbg !9586
  %sub33 = sub nsw i32 %sub30, %conv32, !dbg !9587
  call void @put_bits(%struct.PutBitContext* %38, i32 %39, i32 %sub33), !dbg !9588
  br label %if.end34, !dbg !9588

if.end34:                                         ; preds = %if.then29, %if.end26
  store i32 0, i32* %retval, align 4, !dbg !9589
  br label %return, !dbg !9589

return:                                           ; preds = %if.end34, %if.then12, %if.then4
  %43 = load i32, i32* %retval, align 4, !dbg !9590
  ret i32 %43, !dbg !9590
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare %struct.AVBufferRef* @av_buffer_alloc(i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_superframe_index(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %rw, %struct.VP9RawSuperframeIndex* %current) #0 !dbg !9591 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %rw.addr = alloca %struct.PutBitContext*, align 8
  %current.addr = alloca %struct.VP9RawSuperframeIndex*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca [2 x i32], align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !9594, metadata !730), !dbg !9595
  store %struct.PutBitContext* %rw, %struct.PutBitContext** %rw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %rw.addr, metadata !9596, metadata !730), !dbg !9597
  store %struct.VP9RawSuperframeIndex* %current, %struct.VP9RawSuperframeIndex** %current.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VP9RawSuperframeIndex** %current.addr, metadata !9598, metadata !730), !dbg !9599
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9600, metadata !730), !dbg !9601
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9602, metadata !730), !dbg !9603
  br label %do.body, !dbg !9604, !llvm.loop !9605

do.body:                                          ; preds = %entry
  %0 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9606
  call void @ff_cbs_trace_header(%struct.CodedBitstreamContext* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0)), !dbg !9609
  br label %do.end, !dbg !9610

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !9611, !llvm.loop !9612

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !9613, !llvm.loop !9616

do.body2:                                         ; preds = %do.body1
  %1 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9618
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9621
  %3 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9622
  %superframe_marker = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %3, i32 0, i32 0, !dbg !9623
  %4 = load i8, i8* %superframe_marker, align 4, !dbg !9623
  %conv = zext i8 %4 to i32, !dbg !9622
  %call = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %1, %struct.PutBitContext* %2, i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i32* null, i32 %conv, i32 0, i32 7), !dbg !9624
  store i32 %call, i32* %err, align 4, !dbg !9625
  %5 = load i32, i32* %err, align 4, !dbg !9626
  %cmp = icmp slt i32 %5, 0, !dbg !9627
  br i1 %cmp, label %if.then, label %if.end, !dbg !9626

if.then:                                          ; preds = %do.body2
  %6 = load i32, i32* %err, align 4, !dbg !9628
  store i32 %6, i32* %retval, align 4, !dbg !9631
  br label %return, !dbg !9631

if.end:                                           ; preds = %do.body2
  br label %do.end4, !dbg !9632

do.end4:                                          ; preds = %if.end
  br label %do.end5, !dbg !9634

do.end5:                                          ; preds = %do.end4
  br label %do.body6, !dbg !9636, !llvm.loop !9637

do.body6:                                         ; preds = %do.end5
  br label %do.body7, !dbg !9638, !llvm.loop !9641

do.body7:                                         ; preds = %do.body6
  %7 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9643
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9646
  %9 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9647
  %bytes_per_framesize_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %9, i32 0, i32 1, !dbg !9648
  %10 = load i8, i8* %bytes_per_framesize_minus_1, align 1, !dbg !9648
  %conv8 = zext i8 %10 to i32, !dbg !9647
  %call9 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %7, %struct.PutBitContext* %8, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32* null, i32 %conv8, i32 0, i32 3), !dbg !9649
  store i32 %call9, i32* %err, align 4, !dbg !9650
  %11 = load i32, i32* %err, align 4, !dbg !9651
  %cmp10 = icmp slt i32 %11, 0, !dbg !9652
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9651

if.then12:                                        ; preds = %do.body7
  %12 = load i32, i32* %err, align 4, !dbg !9653
  store i32 %12, i32* %retval, align 4, !dbg !9656
  br label %return, !dbg !9656

if.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !9657

do.end14:                                         ; preds = %if.end13
  br label %do.end15, !dbg !9659

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !9661, !llvm.loop !9662

do.body16:                                        ; preds = %do.end15
  br label %do.body17, !dbg !9663, !llvm.loop !9666

do.body17:                                        ; preds = %do.body16
  %13 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9668
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9671
  %15 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9672
  %frames_in_superframe_minus_1 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %15, i32 0, i32 2, !dbg !9673
  %16 = load i8, i8* %frames_in_superframe_minus_1, align 2, !dbg !9673
  %conv18 = zext i8 %16 to i32, !dbg !9672
  %call19 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %13, %struct.PutBitContext* %14, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0), i32* null, i32 %conv18, i32 0, i32 7), !dbg !9674
  store i32 %call19, i32* %err, align 4, !dbg !9675
  %17 = load i32, i32* %err, align 4, !dbg !9676
  %cmp20 = icmp slt i32 %17, 0, !dbg !9677
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !9676

if.then22:                                        ; preds = %do.body17
  %18 = load i32, i32* %err, align 4, !dbg !9678
  store i32 %18, i32* %retval, align 4, !dbg !9681
  br label %return, !dbg !9681

if.end23:                                         ; preds = %do.body17
  br label %do.end24, !dbg !9682

do.end24:                                         ; preds = %if.end23
  br label %do.end25, !dbg !9684

do.end25:                                         ; preds = %do.end24
  store i32 0, i32* %i, align 4, !dbg !9686
  br label %for.cond, !dbg !9688

for.cond:                                         ; preds = %for.inc, %do.end25
  %19 = load i32, i32* %i, align 4, !dbg !9689
  %20 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9692
  %frames_in_superframe_minus_126 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %20, i32 0, i32 2, !dbg !9693
  %21 = load i8, i8* %frames_in_superframe_minus_126, align 2, !dbg !9693
  %conv27 = zext i8 %21 to i32, !dbg !9692
  %cmp28 = icmp sle i32 %19, %conv27, !dbg !9694
  br i1 %cmp28, label %for.body, label %for.end, !dbg !9695

for.body:                                         ; preds = %for.cond
  br label %do.body30, !dbg !9696, !llvm.loop !9698

do.body30:                                        ; preds = %for.body
  br label %do.body31, !dbg !9699, !llvm.loop !9702

do.body31:                                        ; preds = %do.body30
  %22 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9704
  %23 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9707
  %24 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9708
  %bytes_per_framesize_minus_132 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %24, i32 0, i32 1, !dbg !9709
  %25 = load i8, i8* %bytes_per_framesize_minus_132, align 1, !dbg !9709
  %conv33 = zext i8 %25 to i32, !dbg !9708
  %add = add nsw i32 %conv33, 1, !dbg !9710
  %mul = mul nsw i32 8, %add, !dbg !9711
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i64 0, i64 0, !dbg !9712
  store i32 1, i32* %arrayinit.begin, align 4, !dbg !9712
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !9712
  %26 = load i32, i32* %i, align 4, !dbg !9713
  store i32 %26, i32* %arrayinit.element, align 4, !dbg !9712
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %.compoundliteral, i32 0, i32 0, !dbg !9714
  %27 = load i32, i32* %i, align 4, !dbg !9715
  %idxprom = sext i32 %27 to i64, !dbg !9716
  %28 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9716
  %frame_sizes = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %28, i32 0, i32 3, !dbg !9717
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %frame_sizes, i64 0, i64 %idxprom, !dbg !9716
  %29 = load i32, i32* %arrayidx, align 4, !dbg !9716
  %call34 = call i32 @cbs_vp9_write_le(%struct.CodedBitstreamContext* %22, %struct.PutBitContext* %23, i32 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i32* %arraydecay, i32 %29), !dbg !9718
  store i32 %call34, i32* %err, align 4, !dbg !9719
  %30 = load i32, i32* %err, align 4, !dbg !9720
  %cmp35 = icmp slt i32 %30, 0, !dbg !9721
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9720

if.then37:                                        ; preds = %do.body31
  %31 = load i32, i32* %err, align 4, !dbg !9722
  store i32 %31, i32* %retval, align 4, !dbg !9725
  br label %return, !dbg !9725

if.end38:                                         ; preds = %do.body31
  br label %do.end39, !dbg !9726

do.end39:                                         ; preds = %if.end38
  br label %do.end40, !dbg !9728

do.end40:                                         ; preds = %do.end39
  br label %for.inc, !dbg !9730

for.inc:                                          ; preds = %do.end40
  %32 = load i32, i32* %i, align 4, !dbg !9731
  %inc = add nsw i32 %32, 1, !dbg !9731
  store i32 %inc, i32* %i, align 4, !dbg !9731
  br label %for.cond, !dbg !9733, !llvm.loop !9734

for.end:                                          ; preds = %for.cond
  br label %do.body41, !dbg !9736, !llvm.loop !9737

do.body41:                                        ; preds = %for.end
  br label %do.body42, !dbg !9738, !llvm.loop !9741

do.body42:                                        ; preds = %do.body41
  %33 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9743
  %34 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9746
  %35 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9747
  %superframe_marker43 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %35, i32 0, i32 0, !dbg !9748
  %36 = load i8, i8* %superframe_marker43, align 4, !dbg !9748
  %conv44 = zext i8 %36 to i32, !dbg !9747
  %call45 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %33, %struct.PutBitContext* %34, i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i32* null, i32 %conv44, i32 0, i32 7), !dbg !9749
  store i32 %call45, i32* %err, align 4, !dbg !9750
  %37 = load i32, i32* %err, align 4, !dbg !9751
  %cmp46 = icmp slt i32 %37, 0, !dbg !9752
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !9751

if.then48:                                        ; preds = %do.body42
  %38 = load i32, i32* %err, align 4, !dbg !9753
  store i32 %38, i32* %retval, align 4, !dbg !9756
  br label %return, !dbg !9756

if.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !9757

do.end50:                                         ; preds = %if.end49
  br label %do.end51, !dbg !9759

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !9761, !llvm.loop !9762

do.body52:                                        ; preds = %do.end51
  br label %do.body53, !dbg !9763, !llvm.loop !9766

do.body53:                                        ; preds = %do.body52
  %39 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9768
  %40 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9771
  %41 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9772
  %bytes_per_framesize_minus_154 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %41, i32 0, i32 1, !dbg !9773
  %42 = load i8, i8* %bytes_per_framesize_minus_154, align 1, !dbg !9773
  %conv55 = zext i8 %42 to i32, !dbg !9772
  %call56 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %39, %struct.PutBitContext* %40, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32* null, i32 %conv55, i32 0, i32 3), !dbg !9774
  store i32 %call56, i32* %err, align 4, !dbg !9775
  %43 = load i32, i32* %err, align 4, !dbg !9776
  %cmp57 = icmp slt i32 %43, 0, !dbg !9777
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !9776

if.then59:                                        ; preds = %do.body53
  %44 = load i32, i32* %err, align 4, !dbg !9778
  store i32 %44, i32* %retval, align 4, !dbg !9781
  br label %return, !dbg !9781

if.end60:                                         ; preds = %do.body53
  br label %do.end61, !dbg !9782

do.end61:                                         ; preds = %if.end60
  br label %do.end62, !dbg !9784

do.end62:                                         ; preds = %do.end61
  br label %do.body63, !dbg !9786, !llvm.loop !9787

do.body63:                                        ; preds = %do.end62
  br label %do.body64, !dbg !9788, !llvm.loop !9791

do.body64:                                        ; preds = %do.body63
  %45 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9793
  %46 = load %struct.PutBitContext*, %struct.PutBitContext** %rw.addr, align 8, !dbg !9796
  %47 = load %struct.VP9RawSuperframeIndex*, %struct.VP9RawSuperframeIndex** %current.addr, align 8, !dbg !9797
  %frames_in_superframe_minus_165 = getelementptr inbounds %struct.VP9RawSuperframeIndex, %struct.VP9RawSuperframeIndex* %47, i32 0, i32 2, !dbg !9798
  %48 = load i8, i8* %frames_in_superframe_minus_165, align 2, !dbg !9798
  %conv66 = zext i8 %48 to i32, !dbg !9797
  %call67 = call i32 @ff_cbs_write_unsigned(%struct.CodedBitstreamContext* %45, %struct.PutBitContext* %46, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0), i32* null, i32 %conv66, i32 0, i32 7), !dbg !9799
  store i32 %call67, i32* %err, align 4, !dbg !9800
  %49 = load i32, i32* %err, align 4, !dbg !9801
  %cmp68 = icmp slt i32 %49, 0, !dbg !9802
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !9801

if.then70:                                        ; preds = %do.body64
  %50 = load i32, i32* %err, align 4, !dbg !9803
  store i32 %50, i32* %retval, align 4, !dbg !9806
  br label %return, !dbg !9806

if.end71:                                         ; preds = %do.body64
  br label %do.end72, !dbg !9807

do.end72:                                         ; preds = %if.end71
  br label %do.end73, !dbg !9809

do.end73:                                         ; preds = %do.end72
  store i32 0, i32* %retval, align 4, !dbg !9811
  br label %return, !dbg !9811

return:                                           ; preds = %do.end73, %if.then70, %if.then59, %if.then48, %if.then37, %if.then22, %if.then12, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !9812
  ret i32 %51, !dbg !9812
}

; Function Attrs: nounwind uwtable
define internal i32 @cbs_vp9_write_le(%struct.CodedBitstreamContext* %ctx, %struct.PutBitContext* %pbc, i32 %width, i8* %name, i32* %subscripts, i32 %value) #0 !dbg !9813 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.CodedBitstreamContext*, align 8
  %pbc.addr = alloca %struct.PutBitContext*, align 8
  %width.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %subscripts.addr = alloca i32*, align 8
  %value.addr = alloca i32, align 4
  %b = alloca i32, align 4
  %bits = alloca [33 x i8], align 16
  %i = alloca i32, align 4
  store %struct.CodedBitstreamContext* %ctx, %struct.CodedBitstreamContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CodedBitstreamContext** %ctx.addr, metadata !9816, metadata !730), !dbg !9817
  store %struct.PutBitContext* %pbc, %struct.PutBitContext** %pbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pbc.addr, metadata !9818, metadata !730), !dbg !9819
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9820, metadata !730), !dbg !9821
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9822, metadata !730), !dbg !9823
  store i32* %subscripts, i32** %subscripts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %subscripts.addr, metadata !9824, metadata !730), !dbg !9825
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9826, metadata !730), !dbg !9827
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9828, metadata !730), !dbg !9829
  br label %do.body, !dbg !9830, !llvm.loop !9831

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %width.addr, align 4, !dbg !9832
  %rem = srem i32 %0, 8, !dbg !9836
  %cmp = icmp eq i32 %rem, 0, !dbg !9837
  br i1 %cmp, label %if.end, label %if.then, !dbg !9838

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 216), !dbg !9839
  call void @abort() #6, !dbg !9842
  unreachable, !dbg !9844

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !9845

do.end:                                           ; preds = %if.end
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9847
  %call = call i32 @put_bits_left(%struct.PutBitContext* %1), !dbg !9849
  %2 = load i32, i32* %width.addr, align 4, !dbg !9850
  %cmp1 = icmp slt i32 %call, %2, !dbg !9851
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9852

if.then2:                                         ; preds = %do.end
  store i32 -28, i32* %retval, align 4, !dbg !9853
  br label %return, !dbg !9853

if.end3:                                          ; preds = %do.end
  %3 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9854
  %trace_enable = getelementptr inbounds %struct.CodedBitstreamContext, %struct.CodedBitstreamContext* %3, i32 0, i32 5, !dbg !9856
  %4 = load i32, i32* %trace_enable, align 4, !dbg !9856
  %tobool = icmp ne i32 %4, 0, !dbg !9854
  br i1 %tobool, label %if.then4, label %if.end18, !dbg !9857

if.then4:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata [33 x i8]* %bits, metadata !9858, metadata !730), !dbg !9860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9861, metadata !730), !dbg !9862
  store i32 0, i32* %b, align 4, !dbg !9863
  br label %for.cond, !dbg !9865

for.cond:                                         ; preds = %for.inc11, %if.then4
  %5 = load i32, i32* %b, align 4, !dbg !9866
  %6 = load i32, i32* %width.addr, align 4, !dbg !9869
  %cmp5 = icmp slt i32 %5, %6, !dbg !9870
  br i1 %cmp5, label %for.body, label %for.end13, !dbg !9871

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9872
  br label %for.cond6, !dbg !9874

for.cond6:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !9875
  %cmp7 = icmp slt i32 %7, 8, !dbg !9878
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !9879

for.body8:                                        ; preds = %for.cond6
  %8 = load i32, i32* %value.addr, align 4, !dbg !9880
  %9 = load i32, i32* %b, align 4, !dbg !9881
  %10 = load i32, i32* %i, align 4, !dbg !9882
  %add = add nsw i32 %9, %10, !dbg !9883
  %shr = lshr i32 %8, %add, !dbg !9884
  %and = and i32 %shr, 1, !dbg !9885
  %tobool9 = icmp ne i32 %and, 0, !dbg !9880
  %cond = select i1 %tobool9, i32 49, i32 48, !dbg !9880
  %conv = trunc i32 %cond to i8, !dbg !9880
  %11 = load i32, i32* %b, align 4, !dbg !9886
  %12 = load i32, i32* %i, align 4, !dbg !9887
  %add10 = add nsw i32 %11, %12, !dbg !9888
  %idxprom = sext i32 %add10 to i64, !dbg !9889
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom, !dbg !9889
  store i8 %conv, i8* %arrayidx, align 1, !dbg !9890
  br label %for.inc, !dbg !9889

for.inc:                                          ; preds = %for.body8
  %13 = load i32, i32* %i, align 4, !dbg !9891
  %inc = add nsw i32 %13, 1, !dbg !9891
  store i32 %inc, i32* %i, align 4, !dbg !9891
  br label %for.cond6, !dbg !9893, !llvm.loop !9894

for.end:                                          ; preds = %for.cond6
  br label %for.inc11, !dbg !9896

for.inc11:                                        ; preds = %for.end
  %14 = load i32, i32* %b, align 4, !dbg !9898
  %add12 = add nsw i32 %14, 8, !dbg !9898
  store i32 %add12, i32* %b, align 4, !dbg !9898
  br label %for.cond, !dbg !9900, !llvm.loop !9901

for.end13:                                        ; preds = %for.cond
  %15 = load i32, i32* %b, align 4, !dbg !9903
  %idxprom14 = sext i32 %15 to i64, !dbg !9904
  %arrayidx15 = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i64 0, i64 %idxprom14, !dbg !9904
  store i8 0, i8* %arrayidx15, align 1, !dbg !9905
  %16 = load %struct.CodedBitstreamContext*, %struct.CodedBitstreamContext** %ctx.addr, align 8, !dbg !9906
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9907
  %call16 = call i32 @put_bits_count(%struct.PutBitContext* %17), !dbg !9908
  %18 = load i8*, i8** %name.addr, align 8, !dbg !9909
  %19 = load i32*, i32** %subscripts.addr, align 8, !dbg !9910
  %arraydecay = getelementptr inbounds [33 x i8], [33 x i8]* %bits, i32 0, i32 0, !dbg !9911
  %20 = load i32, i32* %value.addr, align 4, !dbg !9912
  %conv17 = zext i32 %20 to i64, !dbg !9912
  call void @ff_cbs_trace_syntax_element(%struct.CodedBitstreamContext* %16, i32 %call16, i8* %18, i32* %19, i8* %arraydecay, i64 %conv17), !dbg !9913
  br label %if.end18, !dbg !9915

if.end18:                                         ; preds = %for.end13, %if.end3
  store i32 0, i32* %b, align 4, !dbg !9916
  br label %for.cond19, !dbg !9918

for.cond19:                                       ; preds = %for.inc25, %if.end18
  %21 = load i32, i32* %b, align 4, !dbg !9919
  %22 = load i32, i32* %width.addr, align 4, !dbg !9922
  %cmp20 = icmp slt i32 %21, %22, !dbg !9923
  br i1 %cmp20, label %for.body22, label %for.end27, !dbg !9924

for.body22:                                       ; preds = %for.cond19
  %23 = load %struct.PutBitContext*, %struct.PutBitContext** %pbc.addr, align 8, !dbg !9925
  %24 = load i32, i32* %value.addr, align 4, !dbg !9926
  %25 = load i32, i32* %b, align 4, !dbg !9927
  %shr23 = lshr i32 %24, %25, !dbg !9928
  %and24 = and i32 %shr23, 255, !dbg !9929
  call void @put_bits(%struct.PutBitContext* %23, i32 8, i32 %and24), !dbg !9930
  br label %for.inc25, !dbg !9930

for.inc25:                                        ; preds = %for.body22
  %26 = load i32, i32* %b, align 4, !dbg !9931
  %add26 = add nsw i32 %26, 8, !dbg !9931
  store i32 %add26, i32* %b, align 4, !dbg !9931
  br label %for.cond19, !dbg !9933, !llvm.loop !9934

for.end27:                                        ; preds = %for.cond19
  store i32 0, i32* %retval, align 4, !dbg !9936
  br label %return, !dbg !9936

return:                                           ; preds = %for.end27, %if.then2
  %27 = load i32, i32* %retval, align 4, !dbg !9937
  ret i32 %27, !dbg !9937
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!725, !726}
!llvm.ident = !{!727}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !502, globals: !623)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--cbs_vp9.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !463, !468, !477, !483, !488, !498}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 43, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "libavcodec/cbs_vp9.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!465 = !{!466, !467}
!466 = !DIEnumerator(name: "VP9_KEY_FRAME", value: 0)
!467 = !DIEnumerator(name: "VP9_NON_KEY_FRAME", value: 1)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 29, size: 32, align: 32, elements: !469)
!469 = !{!470, !471, !472, !473, !474, !475, !476}
!470 = !DIEnumerator(name: "VP9_REFS_PER_FRAME", value: 3)
!471 = !DIEnumerator(name: "VP9_MIN_TILE_WIDTH_B64", value: 4)
!472 = !DIEnumerator(name: "VP9_MAX_TILE_WIDTH_B64", value: 64)
!473 = !DIEnumerator(name: "VP9_NUM_REF_FRAMES", value: 8)
!474 = !DIEnumerator(name: "VP9_MAX_REF_FRAMES", value: 4)
!475 = !DIEnumerator(name: "VP9_MAX_SEGMENTS", value: 8)
!476 = !DIEnumerator(name: "VP9_SEG_LVL_MAX", value: 4)
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 68, size: 32, align: 32, elements: !478)
!478 = !{!479, !480, !481, !482}
!479 = !DIEnumerator(name: "VP9_INTRA_FRAME", value: 0)
!480 = !DIEnumerator(name: "VP9_LAST_FRAME", value: 1)
!481 = !DIEnumerator(name: "VP9_GOLDEN_FRAME", value: 2)
!482 = !DIEnumerator(name: "VP9_ALTREF_FRAME", value: 3)
!483 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 49, size: 32, align: 32, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIEnumerator(name: "VP9_FRAME_SYNC_0", value: 73)
!486 = !DIEnumerator(name: "VP9_FRAME_SYNC_1", value: 131)
!487 = !DIEnumerator(name: "VP9_FRAME_SYNC_2", value: 66)
!488 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 56, size: 32, align: 32, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497}
!490 = !DIEnumerator(name: "VP9_CS_UNKNOWN", value: 0)
!491 = !DIEnumerator(name: "VP9_CS_BT_601", value: 1)
!492 = !DIEnumerator(name: "VP9_CS_BT_709", value: 2)
!493 = !DIEnumerator(name: "VP9_CS_SMPTE_170", value: 3)
!494 = !DIEnumerator(name: "VP9_CS_SMPTE_240", value: 4)
!495 = !DIEnumerator(name: "VP9_CS_BT_2020", value: 5)
!496 = !DIEnumerator(name: "VP9_CS_RESERVED", value: 6)
!497 = !DIEnumerator(name: "VP9_CS_RGB", value: 7)
!498 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 76, size: 32, align: 32, elements: !499)
!499 = !{!500, !501}
!500 = !DIEnumerator(name: "VP9_MAX_FRAMES_IN_SUPERFRAME", value: 8)
!501 = !DIEnumerator(name: "VP9_SUPERFRAME_MARKER", value: 6)
!502 = !{!503, !504, !505, !506, !514, !516, !619, !620, !622}
!503 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!504 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64, align: 64)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !509, line: 221, size: 32, align: 8, elements: !510)
!509 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!510 = !{!511}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !508, file: !509, line: 221, baseType: !512, size: 32, align: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !513, line: 51, baseType: !504)
!513 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !513, line: 48, baseType: !515)
!515 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64, align: 64)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "VP9RawFrame", file: !464, line: 170, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VP9RawFrame", file: !464, line: 164, size: 1664, align: 64, elements: !519)
!519 = !{!520, !601, !603, !607}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !518, file: !464, line: 165, baseType: !521, size: 1424, align: 16)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "VP9RawFrameHeader", file: !464, line: 162, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VP9RawFrameHeader", file: !464, line: 83, size: 1424, align: 16, elements: !523)
!523 = !{!524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !544, !548, !549, !550, !551, !552, !553, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !572, !576, !578, !579, !580, !581, !582, !583, !584, !588, !589, !590, !591, !592, !596, !597, !598, !599, !600}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "frame_marker", scope: !522, file: !464, line: 84, baseType: !514, size: 8, align: 8)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "profile_low_bit", scope: !522, file: !464, line: 85, baseType: !514, size: 8, align: 8, offset: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "profile_high_bit", scope: !522, file: !464, line: 86, baseType: !514, size: 8, align: 8, offset: 16)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "show_existing_frame", scope: !522, file: !464, line: 88, baseType: !514, size: 8, align: 8, offset: 24)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "frame_to_show_map_idx", scope: !522, file: !464, line: 89, baseType: !514, size: 8, align: 8, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !522, file: !464, line: 91, baseType: !514, size: 8, align: 8, offset: 40)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "show_frame", scope: !522, file: !464, line: 92, baseType: !514, size: 8, align: 8, offset: 48)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "error_resilient_mode", scope: !522, file: !464, line: 93, baseType: !514, size: 8, align: 8, offset: 56)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ten_or_twelve_bit", scope: !522, file: !464, line: 96, baseType: !514, size: 8, align: 8, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !522, file: !464, line: 97, baseType: !514, size: 8, align: 8, offset: 72)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !522, file: !464, line: 98, baseType: !514, size: 8, align: 8, offset: 80)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_x", scope: !522, file: !464, line: 99, baseType: !514, size: 8, align: 8, offset: 88)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_y", scope: !522, file: !464, line: 100, baseType: !514, size: 8, align: 8, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_frame_flags", scope: !522, file: !464, line: 102, baseType: !514, size: 8, align: 8, offset: 104)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !522, file: !464, line: 104, baseType: !514, size: 8, align: 8, offset: 112)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "reset_frame_context", scope: !522, file: !464, line: 105, baseType: !514, size: 8, align: 8, offset: 120)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ref_frame_idx", scope: !522, file: !464, line: 107, baseType: !541, size: 24, align: 8, offset: 128)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 24, align: 8, elements: !542)
!542 = !{!543}
!543 = !DISubrange(count: 3)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ref_frame_sign_bias", scope: !522, file: !464, line: 108, baseType: !545, size: 32, align: 8, offset: 152)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 32, align: 8, elements: !546)
!546 = !{!547}
!547 = !DISubrange(count: 4)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "allow_high_precision_mv", scope: !522, file: !464, line: 110, baseType: !514, size: 8, align: 8, offset: 184)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_frame_context", scope: !522, file: !464, line: 112, baseType: !514, size: 8, align: 8, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "frame_parallel_decoding_mode", scope: !522, file: !464, line: 113, baseType: !514, size: 8, align: 8, offset: 200)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "frame_context_idx", scope: !522, file: !464, line: 115, baseType: !514, size: 8, align: 8, offset: 208)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "found_ref", scope: !522, file: !464, line: 118, baseType: !541, size: 24, align: 8, offset: 216)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width_minus_1", scope: !522, file: !464, line: 119, baseType: !554, size: 16, align: 16, offset: 240)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !513, line: 49, baseType: !555)
!555 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height_minus_1", scope: !522, file: !464, line: 120, baseType: !554, size: 16, align: 16, offset: 256)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "render_and_frame_size_different", scope: !522, file: !464, line: 121, baseType: !514, size: 8, align: 8, offset: 272)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "render_width_minus_1", scope: !522, file: !464, line: 122, baseType: !554, size: 16, align: 16, offset: 288)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "render_height_minus_1", scope: !522, file: !464, line: 123, baseType: !554, size: 16, align: 16, offset: 304)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "is_filter_switchable", scope: !522, file: !464, line: 126, baseType: !514, size: 8, align: 8, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "raw_interpolation_filter_type", scope: !522, file: !464, line: 127, baseType: !514, size: 8, align: 8, offset: 328)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_level", scope: !522, file: !464, line: 130, baseType: !514, size: 8, align: 8, offset: 336)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_sharpness", scope: !522, file: !464, line: 131, baseType: !514, size: 8, align: 8, offset: 344)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_delta_enabled", scope: !522, file: !464, line: 132, baseType: !514, size: 8, align: 8, offset: 352)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_delta_update", scope: !522, file: !464, line: 133, baseType: !514, size: 8, align: 8, offset: 360)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "update_ref_delta", scope: !522, file: !464, line: 134, baseType: !545, size: 32, align: 8, offset: 368)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_ref_deltas", scope: !522, file: !464, line: 135, baseType: !568, size: 32, align: 8, offset: 400)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 32, align: 8, elements: !546)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !570, line: 194, baseType: !571)
!570 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!571 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "update_mode_delta", scope: !522, file: !464, line: 136, baseType: !573, size: 16, align: 8, offset: 432)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 16, align: 8, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 2)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_mode_deltas", scope: !522, file: !464, line: 137, baseType: !577, size: 16, align: 8, offset: 448)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 16, align: 8, elements: !574)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "base_q_idx", scope: !522, file: !464, line: 140, baseType: !514, size: 8, align: 8, offset: 464)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "delta_q_y_dc", scope: !522, file: !464, line: 141, baseType: !569, size: 8, align: 8, offset: 472)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "delta_q_uv_dc", scope: !522, file: !464, line: 142, baseType: !569, size: 8, align: 8, offset: 480)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "delta_q_uv_ac", scope: !522, file: !464, line: 143, baseType: !569, size: 8, align: 8, offset: 488)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_enabled", scope: !522, file: !464, line: 146, baseType: !514, size: 8, align: 8, offset: 496)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_update_map", scope: !522, file: !464, line: 147, baseType: !514, size: 8, align: 8, offset: 504)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_tree_probs", scope: !522, file: !464, line: 148, baseType: !585, size: 56, align: 8, offset: 512)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 56, align: 8, elements: !586)
!586 = !{!587}
!587 = !DISubrange(count: 7)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_temporal_update", scope: !522, file: !464, line: 149, baseType: !514, size: 8, align: 8, offset: 568)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_pred_prob", scope: !522, file: !464, line: 150, baseType: !541, size: 24, align: 8, offset: 576)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_update_data", scope: !522, file: !464, line: 151, baseType: !514, size: 8, align: 8, offset: 600)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "segmentation_abs_or_delta_update", scope: !522, file: !464, line: 152, baseType: !514, size: 8, align: 8, offset: 608)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "feature_enabled", scope: !522, file: !464, line: 153, baseType: !593, size: 256, align: 8, offset: 616)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, align: 8, elements: !594)
!594 = !{!595, !547}
!595 = !DISubrange(count: 8)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "feature_value", scope: !522, file: !464, line: 154, baseType: !593, size: 256, align: 8, offset: 872)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "feature_sign", scope: !522, file: !464, line: 155, baseType: !593, size: 256, align: 8, offset: 1128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "tile_cols_log2", scope: !522, file: !464, line: 158, baseType: !514, size: 8, align: 8, offset: 1384)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "tile_rows_log2", scope: !522, file: !464, line: 159, baseType: !514, size: 8, align: 8, offset: 1392)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "header_size_in_bytes", scope: !522, file: !464, line: 161, baseType: !554, size: 16, align: 16, offset: 1408)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !518, file: !464, line: 167, baseType: !602, size: 64, align: 64, offset: 1472)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64, align: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !518, file: !464, line: 168, baseType: !604, size: 64, align: 64, offset: 1536)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !605, line: 216, baseType: !606)
!605 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!606 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "data_ref", scope: !518, file: !464, line: 169, baseType: !608, size: 64, align: 64, offset: 1600)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64, align: 64)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !610, line: 94, baseType: !611)
!610 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !610, line: 81, size: 192, align: 64, elements: !612)
!612 = !{!613, !617, !618}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !611, file: !610, line: 82, baseType: !614, size: 64, align: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64, align: 64)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !610, line: 73, baseType: !616)
!616 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !610, line: 73, flags: DIFlagFwdDecl)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !611, file: !610, line: 89, baseType: !602, size: 64, align: 64, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !611, file: !610, line: 93, baseType: !503, size: 32, align: 32, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !570, line: 196, baseType: !503)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !570, line: 197, baseType: !621)
!621 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64, align: 64)
!623 = !{!624, !687, !708, !709, !724}
!624 = distinct !DIGlobalVariable(name: "ff_cbs_type_vp9", scope: !0, file: !625, line: 681, type: !626, isLocal: false, isDefinition: true, variable: { i32, i64, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*, i32)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamUnit*)*, i32 (%struct.CodedBitstreamContext*, %struct.CodedBitstreamFragment*)*, void (%struct.CodedBitstreamContext*)* }* @ff_cbs_type_vp9)
!625 = !DIFile(filename: "libavcodec/cbs_vp9.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamType", file: !628, line: 58, baseType: !629)
!628 = !DIFile(filename: "libavcodec/cbs_internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodedBitstreamType", file: !628, line: 28, size: 448, align: 64, elements: !630)
!630 = !{!631, !632, !633, !674, !678, !679, !683}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !629, file: !628, line: 29, baseType: !3, size: 32, align: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !629, file: !628, line: 31, baseType: !604, size: 64, align: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "split_fragment", scope: !629, file: !628, line: 38, baseType: !634, size: 64, align: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64, align: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{!503, !637, !653, !503}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64, align: 64)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamContext", file: !639, line: 204, baseType: !640)
!639 = !DIFile(filename: "libavcodec/cbs.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodedBitstreamContext", file: !639, line: 159, size: 384, align: 64, elements: !641)
!641 = !{!642, !643, !646, !647, !650, !651, !652}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "log_ctx", scope: !640, file: !639, line: 164, baseType: !505, size: 64, align: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !640, file: !639, line: 169, baseType: !644, size: 64, align: 64, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64, align: 64)
!645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !629)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !640, file: !639, line: 180, baseType: !505, size: 64, align: 64, offset: 128)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "decompose_unit_types", scope: !640, file: !639, line: 188, baseType: !648, size: 64, align: 64, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64, align: 64)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamUnitType", file: !639, line: 53, baseType: !512)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decompose_unit_types", scope: !640, file: !639, line: 192, baseType: !503, size: 32, align: 32, offset: 256)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "trace_enable", scope: !640, file: !639, line: 197, baseType: !503, size: 32, align: 32, offset: 288)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "trace_level", scope: !640, file: !639, line: 203, baseType: !503, size: 32, align: 32, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64, align: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamFragment", file: !639, line: 154, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodedBitstreamFragment", file: !639, line: 116, size: 384, align: 64, elements: !656)
!656 = !{!657, !658, !659, !660, !661, !662}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !655, file: !639, line: 122, baseType: !602, size: 64, align: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !655, file: !639, line: 129, baseType: !604, size: 64, align: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_padding", scope: !655, file: !639, line: 133, baseType: !604, size: 64, align: 64, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "data_ref", scope: !655, file: !639, line: 139, baseType: !608, size: 64, align: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "nb_units", scope: !655, file: !639, line: 147, baseType: !503, size: 32, align: 32, offset: 256)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !655, file: !639, line: 153, baseType: !663, size: 64, align: 64, offset: 320)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64, align: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamUnit", file: !639, line: 107, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodedBitstreamUnit", file: !639, line: 64, size: 448, align: 64, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672, !673}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !665, file: !639, line: 68, baseType: !649, size: 32, align: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !665, file: !639, line: 75, baseType: !602, size: 64, align: 64, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !665, file: !639, line: 80, baseType: !604, size: 64, align: 64, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_padding", scope: !665, file: !639, line: 86, baseType: !604, size: 64, align: 64, offset: 192)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "data_ref", scope: !665, file: !639, line: 92, baseType: !608, size: 64, align: 64, offset: 256)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !665, file: !639, line: 101, baseType: !505, size: 64, align: 64, offset: 320)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "content_ref", scope: !665, file: !639, line: 106, baseType: !608, size: 64, align: 64, offset: 384)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "read_unit", scope: !629, file: !628, line: 44, baseType: !675, size: 64, align: 64, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64, align: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!503, !637, !663}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "write_unit", scope: !629, file: !628, line: 48, baseType: !675, size: 64, align: 64, offset: 256)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "assemble_fragment", scope: !629, file: !628, line: 53, baseType: !680, size: 64, align: 64, offset: 320)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64, align: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!503, !637, !653}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !629, file: !628, line: 57, baseType: !684, size: 64, align: 64, offset: 384)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64, align: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !637}
!687 = distinct !DIGlobalVariable(name: "segmentation_feature_bits", scope: !688, file: !689, line: 209, type: !706, isLocal: true, isDefinition: true, variable: [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_bits)
!688 = distinct !DISubprogram(name: "cbs_vp9_read_segmentation_params", scope: !689, file: !689, line: 206, type: !690, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!689 = !DIFile(filename: "libavcodec/cbs_vp9_syntax_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!690 = !DISubroutineType(types: !691)
!691 = !{!503, !637, !692, !704}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64, align: 64)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !694, line: 70, baseType: !695)
!694 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !694, line: 61, size: 256, align: 64, elements: !696)
!696 = !{!697, !700, !701, !702, !703}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !695, file: !694, line: 62, baseType: !698, size: 64, align: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64, align: 64)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !695, file: !694, line: 62, baseType: !698, size: 64, align: 64, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !695, file: !694, line: 67, baseType: !503, size: 32, align: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !695, file: !694, line: 68, baseType: !503, size: 32, align: 32, offset: 160)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !695, file: !694, line: 69, baseType: !503, size: 32, align: 32, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64, align: 64)
!705 = !{}
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 128, align: 32, elements: !546)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!708 = distinct !DIGlobalVariable(name: "segmentation_feature_signed", scope: !688, file: !689, line: 210, type: !706, isLocal: true, isDefinition: true, variable: [4 x i32]* @cbs_vp9_read_segmentation_params.segmentation_feature_signed)
!709 = distinct !DIGlobalVariable(name: "segmentation_feature_bits", scope: !710, file: !689, line: 209, type: !706, isLocal: true, isDefinition: true, variable: [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_bits)
!710 = distinct !DISubprogram(name: "cbs_vp9_write_segmentation_params", scope: !689, file: !689, line: 206, type: !711, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!711 = !DISubroutineType(types: !712)
!712 = !{!503, !637, !713, !704}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64, align: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !715, line: 40, baseType: !716)
!715 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !715, line: 35, size: 320, align: 64, elements: !717)
!717 = !{!718, !719, !720, !721, !722, !723}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !716, file: !715, line: 36, baseType: !512, size: 32, align: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !716, file: !715, line: 37, baseType: !503, size: 32, align: 32, offset: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !716, file: !715, line: 38, baseType: !602, size: 64, align: 64, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !716, file: !715, line: 38, baseType: !602, size: 64, align: 64, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !716, file: !715, line: 38, baseType: !602, size: 64, align: 64, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !716, file: !715, line: 39, baseType: !503, size: 32, align: 32, offset: 256)
!724 = distinct !DIGlobalVariable(name: "segmentation_feature_signed", scope: !710, file: !689, line: 210, type: !706, isLocal: true, isDefinition: true, variable: [4 x i32]* @cbs_vp9_write_segmentation_params.segmentation_feature_signed)
!725 = !{i32 2, !"Dwarf Version", i32 4}
!726 = !{i32 2, !"Debug Info Version", i32 3}
!727 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!728 = distinct !DISubprogram(name: "cbs_vp9_split_fragment", scope: !625, file: !625, line: 412, type: !635, isLocal: true, isDefinition: true, scopeLine: 415, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!729 = !DILocalVariable(name: "ctx", arg: 1, scope: !728, file: !625, line: 412, type: !637)
!730 = !DIExpression()
!731 = !DILocation(line: 412, column: 58, scope: !728)
!732 = !DILocalVariable(name: "frag", arg: 2, scope: !728, file: !625, line: 413, type: !653)
!733 = !DILocation(line: 413, column: 59, scope: !728)
!734 = !DILocalVariable(name: "header", arg: 3, scope: !728, file: !625, line: 414, type: !503)
!735 = !DILocation(line: 414, column: 39, scope: !728)
!736 = !DILocalVariable(name: "superframe_header", scope: !728, file: !625, line: 416, type: !514)
!737 = !DILocation(line: 416, column: 13, scope: !728)
!738 = !DILocalVariable(name: "err", scope: !728, file: !625, line: 417, type: !503)
!739 = !DILocation(line: 417, column: 9, scope: !728)
!740 = !DILocation(line: 420, column: 36, scope: !728)
!741 = !DILocation(line: 420, column: 42, scope: !728)
!742 = !DILocation(line: 420, column: 52, scope: !728)
!743 = !DILocation(line: 420, column: 25, scope: !728)
!744 = !DILocation(line: 420, column: 31, scope: !728)
!745 = !DILocation(line: 420, column: 23, scope: !728)
!746 = !DILocation(line: 422, column: 10, scope: !747)
!747 = distinct !DILexicalBlock(scope: !728, file: !625, line: 422, column: 9)
!748 = !DILocation(line: 422, column: 28, scope: !747)
!749 = !DILocation(line: 422, column: 36, scope: !747)
!750 = !DILocation(line: 422, column: 9, scope: !728)
!751 = !DILocalVariable(name: "sfi", scope: !752, file: !625, line: 423, type: !753)
!752 = distinct !DILexicalBlock(scope: !747, file: !625, line: 422, column: 45)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VP9RawSuperframeIndex", file: !464, line: 177, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VP9RawSuperframeIndex", file: !464, line: 172, size: 288, align: 32, elements: !755)
!755 = !{!756, !757, !758, !759}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "superframe_marker", scope: !754, file: !464, line: 173, baseType: !514, size: 8, align: 8)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_per_framesize_minus_1", scope: !754, file: !464, line: 174, baseType: !514, size: 8, align: 8, offset: 8)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "frames_in_superframe_minus_1", scope: !754, file: !464, line: 175, baseType: !514, size: 8, align: 8, offset: 16)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sizes", scope: !754, file: !464, line: 176, baseType: !760, size: 256, align: 32, offset: 32)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 256, align: 32, elements: !761)
!761 = !{!595}
!762 = !DILocation(line: 423, column: 31, scope: !752)
!763 = !DILocalVariable(name: "gbc", scope: !752, file: !625, line: 424, type: !693)
!764 = !DILocation(line: 424, column: 23, scope: !752)
!765 = !DILocalVariable(name: "index_size", scope: !752, file: !625, line: 425, type: !604)
!766 = !DILocation(line: 425, column: 16, scope: !752)
!767 = !DILocalVariable(name: "pos", scope: !752, file: !625, line: 425, type: !604)
!768 = !DILocation(line: 425, column: 28, scope: !752)
!769 = !DILocalVariable(name: "i", scope: !752, file: !625, line: 426, type: !503)
!770 = !DILocation(line: 426, column: 13, scope: !752)
!771 = !DILocation(line: 428, column: 29, scope: !752)
!772 = !DILocation(line: 428, column: 47, scope: !752)
!773 = !DILocation(line: 428, column: 55, scope: !752)
!774 = !DILocation(line: 428, column: 61, scope: !752)
!775 = !DILocation(line: 429, column: 29, scope: !752)
!776 = !DILocation(line: 429, column: 47, scope: !752)
!777 = !DILocation(line: 429, column: 55, scope: !752)
!778 = !DILocation(line: 428, column: 66, scope: !752)
!779 = !DILocation(line: 428, column: 24, scope: !752)
!780 = !DILocation(line: 428, column: 22, scope: !752)
!781 = !DILocation(line: 428, column: 20, scope: !752)
!782 = !DILocation(line: 431, column: 35, scope: !752)
!783 = !DILocation(line: 431, column: 41, scope: !752)
!784 = !DILocation(line: 431, column: 48, scope: !752)
!785 = !DILocation(line: 431, column: 54, scope: !752)
!786 = !DILocation(line: 431, column: 46, scope: !752)
!787 = !DILocation(line: 431, column: 66, scope: !752)
!788 = !DILocation(line: 431, column: 64, scope: !752)
!789 = !DILocation(line: 432, column: 33, scope: !752)
!790 = !DILocation(line: 432, column: 31, scope: !752)
!791 = !DILocation(line: 432, column: 29, scope: !752)
!792 = !DILocation(line: 431, column: 15, scope: !752)
!793 = !DILocation(line: 431, column: 13, scope: !752)
!794 = !DILocation(line: 433, column: 13, scope: !795)
!795 = distinct !DILexicalBlock(scope: !752, file: !625, line: 433, column: 13)
!796 = !DILocation(line: 433, column: 17, scope: !795)
!797 = !DILocation(line: 433, column: 13, scope: !752)
!798 = !DILocation(line: 434, column: 20, scope: !795)
!799 = !DILocation(line: 434, column: 13, scope: !795)
!800 = !DILocation(line: 436, column: 45, scope: !752)
!801 = !DILocation(line: 436, column: 15, scope: !752)
!802 = !DILocation(line: 436, column: 13, scope: !752)
!803 = !DILocation(line: 437, column: 13, scope: !804)
!804 = distinct !DILexicalBlock(scope: !752, file: !625, line: 437, column: 13)
!805 = !DILocation(line: 437, column: 17, scope: !804)
!806 = !DILocation(line: 437, column: 13, scope: !752)
!807 = !DILocation(line: 438, column: 20, scope: !804)
!808 = !DILocation(line: 438, column: 13, scope: !804)
!809 = !DILocation(line: 440, column: 13, scope: !752)
!810 = !DILocation(line: 441, column: 16, scope: !811)
!811 = distinct !DILexicalBlock(scope: !752, file: !625, line: 441, column: 9)
!812 = !DILocation(line: 441, column: 14, scope: !811)
!813 = !DILocation(line: 441, column: 21, scope: !814)
!814 = !DILexicalBlockFile(scope: !815, file: !625, discriminator: 1)
!815 = distinct !DILexicalBlock(scope: !811, file: !625, line: 441, column: 9)
!816 = !DILocation(line: 441, column: 30, scope: !814)
!817 = !DILocation(line: 441, column: 26, scope: !814)
!818 = !DILocation(line: 441, column: 23, scope: !814)
!819 = !DILocation(line: 441, column: 9, scope: !814)
!820 = !DILocation(line: 442, column: 17, scope: !821)
!821 = distinct !DILexicalBlock(scope: !822, file: !625, line: 442, column: 17)
!822 = distinct !DILexicalBlock(scope: !815, file: !625, line: 441, column: 65)
!823 = !DILocation(line: 442, column: 39, scope: !821)
!824 = !DILocation(line: 442, column: 23, scope: !821)
!825 = !DILocation(line: 442, column: 27, scope: !821)
!826 = !DILocation(line: 442, column: 21, scope: !821)
!827 = !DILocation(line: 442, column: 44, scope: !821)
!828 = !DILocation(line: 442, column: 42, scope: !821)
!829 = !DILocation(line: 442, column: 57, scope: !821)
!830 = !DILocation(line: 442, column: 63, scope: !821)
!831 = !DILocation(line: 442, column: 55, scope: !821)
!832 = !DILocation(line: 442, column: 17, scope: !822)
!833 = !DILocation(line: 443, column: 24, scope: !834)
!834 = distinct !DILexicalBlock(scope: !821, file: !625, line: 442, column: 74)
!835 = !DILocation(line: 443, column: 29, scope: !834)
!836 = !DILocation(line: 445, column: 24, scope: !834)
!837 = !DILocation(line: 445, column: 43, scope: !834)
!838 = !DILocation(line: 445, column: 27, scope: !834)
!839 = !DILocation(line: 445, column: 31, scope: !834)
!840 = !DILocation(line: 443, column: 17, scope: !834)
!841 = !DILocation(line: 446, column: 17, scope: !834)
!842 = !DILocation(line: 449, column: 43, scope: !822)
!843 = !DILocation(line: 449, column: 48, scope: !822)
!844 = !DILocation(line: 450, column: 43, scope: !822)
!845 = !DILocation(line: 450, column: 49, scope: !822)
!846 = !DILocation(line: 450, column: 56, scope: !822)
!847 = !DILocation(line: 450, column: 54, scope: !822)
!848 = !DILocation(line: 451, column: 59, scope: !822)
!849 = !DILocation(line: 451, column: 43, scope: !822)
!850 = !DILocation(line: 451, column: 47, scope: !822)
!851 = !DILocation(line: 452, column: 43, scope: !822)
!852 = !DILocation(line: 452, column: 49, scope: !822)
!853 = !DILocation(line: 449, column: 19, scope: !822)
!854 = !DILocation(line: 449, column: 17, scope: !822)
!855 = !DILocation(line: 453, column: 17, scope: !856)
!856 = distinct !DILexicalBlock(scope: !822, file: !625, line: 453, column: 17)
!857 = !DILocation(line: 453, column: 21, scope: !856)
!858 = !DILocation(line: 453, column: 17, scope: !822)
!859 = !DILocation(line: 454, column: 24, scope: !856)
!860 = !DILocation(line: 454, column: 17, scope: !856)
!861 = !DILocation(line: 456, column: 36, scope: !822)
!862 = !DILocation(line: 456, column: 20, scope: !822)
!863 = !DILocation(line: 456, column: 24, scope: !822)
!864 = !DILocation(line: 456, column: 17, scope: !822)
!865 = !DILocation(line: 457, column: 9, scope: !822)
!866 = !DILocation(line: 441, column: 61, scope: !867)
!867 = !DILexicalBlockFile(scope: !815, file: !625, discriminator: 2)
!868 = !DILocation(line: 441, column: 9, scope: !867)
!869 = distinct !{!869, !870}
!870 = !DILocation(line: 441, column: 9, scope: !752)
!871 = !DILocation(line: 458, column: 13, scope: !872)
!872 = distinct !DILexicalBlock(scope: !752, file: !625, line: 458, column: 13)
!873 = !DILocation(line: 458, column: 19, scope: !872)
!874 = !DILocation(line: 458, column: 17, scope: !872)
!875 = !DILocation(line: 458, column: 33, scope: !872)
!876 = !DILocation(line: 458, column: 39, scope: !872)
!877 = !DILocation(line: 458, column: 30, scope: !872)
!878 = !DILocation(line: 458, column: 13, scope: !752)
!879 = !DILocation(line: 459, column: 20, scope: !880)
!880 = distinct !DILexicalBlock(scope: !872, file: !625, line: 458, column: 50)
!881 = !DILocation(line: 459, column: 25, scope: !880)
!882 = !DILocation(line: 461, column: 20, scope: !880)
!883 = !DILocation(line: 461, column: 26, scope: !880)
!884 = !DILocation(line: 461, column: 39, scope: !880)
!885 = !DILocation(line: 461, column: 45, scope: !880)
!886 = !DILocation(line: 461, column: 43, scope: !880)
!887 = !DILocation(line: 461, column: 36, scope: !880)
!888 = !DILocation(line: 459, column: 13, scope: !880)
!889 = !DILocation(line: 462, column: 9, scope: !880)
!890 = !DILocation(line: 464, column: 9, scope: !752)
!891 = !DILocation(line: 467, column: 39, scope: !892)
!892 = distinct !DILexicalBlock(scope: !747, file: !625, line: 466, column: 12)
!893 = !DILocation(line: 467, column: 44, scope: !892)
!894 = !DILocation(line: 468, column: 39, scope: !892)
!895 = !DILocation(line: 468, column: 45, scope: !892)
!896 = !DILocation(line: 468, column: 51, scope: !892)
!897 = !DILocation(line: 468, column: 57, scope: !892)
!898 = !DILocation(line: 469, column: 39, scope: !892)
!899 = !DILocation(line: 469, column: 45, scope: !892)
!900 = !DILocation(line: 467, column: 15, scope: !892)
!901 = !DILocation(line: 467, column: 13, scope: !892)
!902 = !DILocation(line: 470, column: 13, scope: !903)
!903 = distinct !DILexicalBlock(scope: !892, file: !625, line: 470, column: 13)
!904 = !DILocation(line: 470, column: 17, scope: !903)
!905 = !DILocation(line: 470, column: 13, scope: !892)
!906 = !DILocation(line: 471, column: 20, scope: !903)
!907 = !DILocation(line: 471, column: 13, scope: !903)
!908 = !DILocation(line: 474, column: 5, scope: !728)
!909 = !DILocation(line: 475, column: 1, scope: !728)
!910 = distinct !DISubprogram(name: "cbs_vp9_read_unit", scope: !625, file: !625, line: 484, type: !676, isLocal: true, isDefinition: true, scopeLine: 486, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!911 = !DILocalVariable(name: "ctx", arg: 1, scope: !910, file: !625, line: 484, type: !637)
!912 = !DILocation(line: 484, column: 53, scope: !910)
!913 = !DILocalVariable(name: "unit", arg: 2, scope: !910, file: !625, line: 485, type: !663)
!914 = !DILocation(line: 485, column: 50, scope: !910)
!915 = !DILocalVariable(name: "frame", scope: !910, file: !625, line: 487, type: !516)
!916 = !DILocation(line: 487, column: 18, scope: !910)
!917 = !DILocalVariable(name: "gbc", scope: !910, file: !625, line: 488, type: !693)
!918 = !DILocation(line: 488, column: 19, scope: !910)
!919 = !DILocalVariable(name: "err", scope: !910, file: !625, line: 489, type: !503)
!920 = !DILocation(line: 489, column: 9, scope: !910)
!921 = !DILocalVariable(name: "pos", scope: !910, file: !625, line: 489, type: !503)
!922 = !DILocation(line: 489, column: 14, scope: !910)
!923 = !DILocation(line: 491, column: 31, scope: !910)
!924 = !DILocation(line: 491, column: 37, scope: !910)
!925 = !DILocation(line: 491, column: 47, scope: !910)
!926 = !DILocation(line: 491, column: 53, scope: !910)
!927 = !DILocation(line: 491, column: 45, scope: !910)
!928 = !DILocation(line: 491, column: 43, scope: !910)
!929 = !DILocation(line: 491, column: 11, scope: !910)
!930 = !DILocation(line: 491, column: 9, scope: !910)
!931 = !DILocation(line: 492, column: 9, scope: !932)
!932 = distinct !DILexicalBlock(scope: !910, file: !625, line: 492, column: 9)
!933 = !DILocation(line: 492, column: 13, scope: !932)
!934 = !DILocation(line: 492, column: 9, scope: !910)
!935 = !DILocation(line: 493, column: 16, scope: !932)
!936 = !DILocation(line: 493, column: 9, scope: !932)
!937 = !DILocation(line: 495, column: 37, scope: !910)
!938 = !DILocation(line: 495, column: 42, scope: !910)
!939 = !DILocation(line: 495, column: 11, scope: !910)
!940 = !DILocation(line: 495, column: 9, scope: !910)
!941 = !DILocation(line: 497, column: 9, scope: !942)
!942 = distinct !DILexicalBlock(scope: !910, file: !625, line: 497, column: 9)
!943 = !DILocation(line: 497, column: 13, scope: !942)
!944 = !DILocation(line: 497, column: 9, scope: !910)
!945 = !DILocation(line: 498, column: 16, scope: !942)
!946 = !DILocation(line: 498, column: 9, scope: !942)
!947 = !DILocation(line: 499, column: 13, scope: !910)
!948 = !DILocation(line: 499, column: 19, scope: !910)
!949 = !DILocation(line: 499, column: 11, scope: !910)
!950 = !DILocation(line: 501, column: 30, scope: !910)
!951 = !DILocation(line: 501, column: 41, scope: !910)
!952 = !DILocation(line: 501, column: 11, scope: !910)
!953 = !DILocation(line: 501, column: 9, scope: !910)
!954 = !DILocation(line: 502, column: 9, scope: !955)
!955 = distinct !DILexicalBlock(scope: !910, file: !625, line: 502, column: 9)
!956 = !DILocation(line: 502, column: 13, scope: !955)
!957 = !DILocation(line: 502, column: 9, scope: !910)
!958 = !DILocation(line: 503, column: 16, scope: !955)
!959 = !DILocation(line: 503, column: 9, scope: !955)
!960 = !DILocation(line: 505, column: 11, scope: !910)
!961 = !DILocation(line: 505, column: 9, scope: !910)
!962 = !DILocation(line: 506, column: 5, scope: !910)
!963 = distinct !{!963, !962}
!964 = !DILocation(line: 506, column: 16, scope: !965)
!965 = !DILexicalBlockFile(scope: !966, file: !625, discriminator: 1)
!966 = distinct !DILexicalBlock(scope: !967, file: !625, line: 506, column: 14)
!967 = distinct !DILexicalBlock(scope: !910, file: !625, line: 506, column: 8)
!968 = !DILocation(line: 506, column: 20, scope: !965)
!969 = !DILocation(line: 506, column: 24, scope: !965)
!970 = !DILocation(line: 506, column: 14, scope: !965)
!971 = !DILocation(line: 506, column: 33, scope: !972)
!972 = !DILexicalBlockFile(scope: !973, file: !625, discriminator: 2)
!973 = distinct !DILexicalBlock(scope: !966, file: !625, line: 506, column: 31)
!974 = !DILocation(line: 506, column: 89, scope: !975)
!975 = !DILexicalBlockFile(scope: !972, file: !625, discriminator: 4)
!976 = !DILocation(line: 506, column: 89, scope: !972)
!977 = !DILocation(line: 506, column: 100, scope: !978)
!978 = !DILexicalBlockFile(scope: !967, file: !625, discriminator: 3)
!979 = !DILocation(line: 507, column: 9, scope: !910)
!980 = !DILocation(line: 508, column: 5, scope: !910)
!981 = distinct !{!981, !980}
!982 = !DILocation(line: 508, column: 16, scope: !983)
!983 = !DILexicalBlockFile(scope: !984, file: !625, discriminator: 1)
!984 = distinct !DILexicalBlock(scope: !985, file: !625, line: 508, column: 14)
!985 = distinct !DILexicalBlock(scope: !910, file: !625, line: 508, column: 8)
!986 = !DILocation(line: 508, column: 23, scope: !983)
!987 = !DILocation(line: 508, column: 29, scope: !983)
!988 = !DILocation(line: 508, column: 20, scope: !983)
!989 = !DILocation(line: 508, column: 14, scope: !983)
!990 = !DILocation(line: 508, column: 43, scope: !991)
!991 = !DILexicalBlockFile(scope: !992, file: !625, discriminator: 2)
!992 = distinct !DILexicalBlock(scope: !984, file: !625, line: 508, column: 41)
!993 = !DILocation(line: 508, column: 99, scope: !994)
!994 = !DILexicalBlockFile(scope: !991, file: !625, discriminator: 4)
!995 = !DILocation(line: 508, column: 99, scope: !991)
!996 = !DILocation(line: 508, column: 110, scope: !997)
!997 = !DILexicalBlockFile(scope: !985, file: !625, discriminator: 3)
!998 = !DILocation(line: 510, column: 9, scope: !999)
!999 = distinct !DILexicalBlock(scope: !910, file: !625, line: 510, column: 9)
!1000 = !DILocation(line: 510, column: 16, scope: !999)
!1001 = !DILocation(line: 510, column: 22, scope: !999)
!1002 = !DILocation(line: 510, column: 13, scope: !999)
!1003 = !DILocation(line: 510, column: 9, scope: !910)
!1004 = !DILocation(line: 512, column: 5, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !999, file: !625, line: 510, column: 33)
!1006 = !DILocation(line: 513, column: 41, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !999, file: !625, line: 512, column: 12)
!1008 = !DILocation(line: 513, column: 47, scope: !1007)
!1009 = !DILocation(line: 513, column: 27, scope: !1007)
!1010 = !DILocation(line: 513, column: 9, scope: !1007)
!1011 = !DILocation(line: 513, column: 16, scope: !1007)
!1012 = !DILocation(line: 513, column: 25, scope: !1007)
!1013 = !DILocation(line: 514, column: 14, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !1007, file: !625, line: 514, column: 13)
!1015 = !DILocation(line: 514, column: 21, scope: !1014)
!1016 = !DILocation(line: 514, column: 13, scope: !1007)
!1017 = !DILocation(line: 515, column: 13, scope: !1014)
!1018 = !DILocation(line: 517, column: 23, scope: !1007)
!1019 = !DILocation(line: 517, column: 29, scope: !1007)
!1020 = !DILocation(line: 517, column: 36, scope: !1007)
!1021 = !DILocation(line: 517, column: 34, scope: !1007)
!1022 = !DILocation(line: 517, column: 9, scope: !1007)
!1023 = !DILocation(line: 517, column: 16, scope: !1007)
!1024 = !DILocation(line: 517, column: 21, scope: !1007)
!1025 = !DILocation(line: 518, column: 28, scope: !1007)
!1026 = !DILocation(line: 518, column: 34, scope: !1007)
!1027 = !DILocation(line: 518, column: 46, scope: !1007)
!1028 = !DILocation(line: 518, column: 44, scope: !1007)
!1029 = !DILocation(line: 518, column: 9, scope: !1007)
!1030 = !DILocation(line: 518, column: 16, scope: !1007)
!1031 = !DILocation(line: 518, column: 26, scope: !1007)
!1032 = !DILocation(line: 521, column: 5, scope: !910)
!1033 = !DILocation(line: 522, column: 1, scope: !910)
!1034 = distinct !DISubprogram(name: "cbs_vp9_write_unit", scope: !625, file: !625, line: 524, type: !676, isLocal: true, isDefinition: true, scopeLine: 526, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1035 = !DILocalVariable(name: "ctx", arg: 1, scope: !1034, file: !625, line: 524, type: !637)
!1036 = !DILocation(line: 524, column: 54, scope: !1034)
!1037 = !DILocalVariable(name: "unit", arg: 2, scope: !1034, file: !625, line: 525, type: !663)
!1038 = !DILocation(line: 525, column: 51, scope: !1034)
!1039 = !DILocalVariable(name: "priv", scope: !1034, file: !625, line: 527, type: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodedBitstreamVP9Context", file: !464, line: 214, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodedBitstreamVP9Context", file: !464, line: 192, size: 1664, align: 64, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1064, !1065}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1042, file: !464, line: 193, baseType: !503, size: 32, align: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "mi_cols", scope: !1042, file: !464, line: 196, baseType: !554, size: 16, align: 16, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "mi_rows", scope: !1042, file: !464, line: 197, baseType: !554, size: 16, align: 16, offset: 48)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "sb64_cols", scope: !1042, file: !464, line: 199, baseType: !554, size: 16, align: 16, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "sb64_rows", scope: !1042, file: !464, line: 200, baseType: !554, size: 16, align: 16, offset: 80)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !1042, file: !464, line: 202, baseType: !503, size: 32, align: 32, offset: 96)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !1042, file: !464, line: 203, baseType: !503, size: 32, align: 32, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_x", scope: !1042, file: !464, line: 205, baseType: !514, size: 8, align: 8, offset: 160)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_y", scope: !1042, file: !464, line: 206, baseType: !514, size: 8, align: 8, offset: 168)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !1042, file: !464, line: 207, baseType: !503, size: 32, align: 32, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1042, file: !464, line: 209, baseType: !1055, size: 1280, align: 32, offset: 224)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 1280, align: 32, elements: !761)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "VP9ReferenceFrameState", file: !464, line: 190, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VP9ReferenceFrameState", file: !464, line: 184, size: 160, align: 32, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1063}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !1057, file: !464, line: 185, baseType: !503, size: 32, align: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !1057, file: !464, line: 186, baseType: !503, size: 32, align: 32, offset: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_x", scope: !1057, file: !464, line: 187, baseType: !503, size: 32, align: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "subsampling_y", scope: !1057, file: !464, line: 188, baseType: !503, size: 32, align: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !1057, file: !464, line: 189, baseType: !503, size: 32, align: 32, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "write_buffer", scope: !1042, file: !464, line: 212, baseType: !602, size: 64, align: 64, offset: 1536)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "write_buffer_size", scope: !1042, file: !464, line: 213, baseType: !604, size: 64, align: 64, offset: 1600)
!1066 = !DILocation(line: 527, column: 31, scope: !1034)
!1067 = !DILocation(line: 527, column: 38, scope: !1034)
!1068 = !DILocation(line: 527, column: 43, scope: !1034)
!1069 = !DILocalVariable(name: "frame", scope: !1034, file: !625, line: 528, type: !516)
!1070 = !DILocation(line: 528, column: 18, scope: !1034)
!1071 = !DILocation(line: 528, column: 26, scope: !1034)
!1072 = !DILocation(line: 528, column: 32, scope: !1034)
!1073 = !DILocalVariable(name: "pbc", scope: !1034, file: !625, line: 529, type: !714)
!1074 = !DILocation(line: 529, column: 19, scope: !1034)
!1075 = !DILocalVariable(name: "err", scope: !1034, file: !625, line: 530, type: !503)
!1076 = !DILocation(line: 530, column: 9, scope: !1034)
!1077 = !DILocation(line: 532, column: 10, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 532, column: 9)
!1079 = !DILocation(line: 532, column: 16, scope: !1078)
!1080 = !DILocation(line: 532, column: 9, scope: !1034)
!1081 = !DILocation(line: 534, column: 9, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1078, file: !625, line: 532, column: 30)
!1083 = !DILocation(line: 534, column: 15, scope: !1082)
!1084 = !DILocation(line: 534, column: 33, scope: !1082)
!1085 = !DILocation(line: 537, column: 28, scope: !1082)
!1086 = !DILocation(line: 537, column: 34, scope: !1082)
!1087 = !DILocation(line: 537, column: 27, scope: !1082)
!1088 = !DILocation(line: 537, column: 48, scope: !1082)
!1089 = !DILocation(line: 537, column: 54, scope: !1082)
!1090 = !DILocation(line: 537, column: 15, scope: !1082)
!1091 = !DILocation(line: 537, column: 13, scope: !1082)
!1092 = !DILocation(line: 538, column: 13, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1082, file: !625, line: 538, column: 13)
!1094 = !DILocation(line: 538, column: 17, scope: !1093)
!1095 = !DILocation(line: 538, column: 13, scope: !1082)
!1096 = !DILocation(line: 539, column: 20, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1093, file: !625, line: 538, column: 22)
!1098 = !DILocation(line: 539, column: 25, scope: !1097)
!1099 = !DILocation(line: 541, column: 41, scope: !1097)
!1100 = !DILocation(line: 541, column: 47, scope: !1097)
!1101 = !DILocation(line: 539, column: 13, scope: !1097)
!1102 = !DILocation(line: 542, column: 20, scope: !1097)
!1103 = !DILocation(line: 542, column: 13, scope: !1097)
!1104 = !DILocation(line: 544, column: 5, scope: !1082)
!1105 = !DILocation(line: 546, column: 25, scope: !1034)
!1106 = !DILocation(line: 546, column: 31, scope: !1034)
!1107 = !DILocation(line: 546, column: 45, scope: !1034)
!1108 = !DILocation(line: 546, column: 51, scope: !1034)
!1109 = !DILocation(line: 546, column: 5, scope: !1034)
!1110 = !DILocation(line: 548, column: 31, scope: !1034)
!1111 = !DILocation(line: 548, column: 42, scope: !1034)
!1112 = !DILocation(line: 548, column: 11, scope: !1034)
!1113 = !DILocation(line: 548, column: 9, scope: !1034)
!1114 = !DILocation(line: 549, column: 9, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 549, column: 9)
!1116 = !DILocation(line: 549, column: 13, scope: !1115)
!1117 = !DILocation(line: 549, column: 9, scope: !1034)
!1118 = !DILocation(line: 550, column: 9, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1115, file: !625, line: 549, column: 19)
!1120 = !DILocation(line: 550, column: 15, scope: !1119)
!1121 = !DILocation(line: 550, column: 33, scope: !1119)
!1122 = !DILocation(line: 551, column: 9, scope: !1119)
!1123 = !DILocation(line: 553, column: 9, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 553, column: 9)
!1125 = !DILocation(line: 553, column: 13, scope: !1124)
!1126 = !DILocation(line: 553, column: 9, scope: !1034)
!1127 = !DILocation(line: 554, column: 16, scope: !1124)
!1128 = !DILocation(line: 554, column: 9, scope: !1124)
!1129 = !DILocation(line: 557, column: 5, scope: !1034)
!1130 = distinct !{!1130, !1129}
!1131 = !DILocation(line: 557, column: 16, scope: !1132)
!1132 = !DILexicalBlockFile(scope: !1133, file: !625, discriminator: 1)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !625, line: 557, column: 14)
!1134 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 557, column: 8)
!1135 = !DILocation(line: 557, column: 37, scope: !1132)
!1136 = !DILocation(line: 557, column: 41, scope: !1132)
!1137 = !DILocation(line: 557, column: 14, scope: !1132)
!1138 = !DILocation(line: 557, column: 50, scope: !1139)
!1139 = !DILexicalBlockFile(scope: !1140, file: !625, discriminator: 2)
!1140 = distinct !DILexicalBlock(scope: !1133, file: !625, line: 557, column: 48)
!1141 = !DILocation(line: 557, column: 106, scope: !1142)
!1142 = !DILexicalBlockFile(scope: !1139, file: !625, discriminator: 4)
!1143 = !DILocation(line: 557, column: 106, scope: !1139)
!1144 = !DILocation(line: 557, column: 117, scope: !1145)
!1145 = !DILexicalBlockFile(scope: !1134, file: !625, discriminator: 3)
!1146 = !DILocation(line: 559, column: 23, scope: !1034)
!1147 = !DILocation(line: 559, column: 44, scope: !1034)
!1148 = !DILocation(line: 559, column: 5, scope: !1034)
!1149 = !DILocation(line: 559, column: 11, scope: !1034)
!1150 = !DILocation(line: 559, column: 21, scope: !1034)
!1151 = !DILocation(line: 560, column: 5, scope: !1034)
!1152 = !DILocation(line: 560, column: 11, scope: !1034)
!1153 = !DILocation(line: 560, column: 28, scope: !1034)
!1154 = !DILocation(line: 561, column: 5, scope: !1034)
!1155 = !DILocation(line: 563, column: 9, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 563, column: 9)
!1157 = !DILocation(line: 563, column: 16, scope: !1156)
!1158 = !DILocation(line: 563, column: 9, scope: !1034)
!1159 = !DILocation(line: 564, column: 13, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1161, file: !625, line: 564, column: 13)
!1161 = distinct !DILexicalBlock(scope: !1156, file: !625, line: 563, column: 22)
!1162 = !DILocation(line: 564, column: 19, scope: !1160)
!1163 = !DILocation(line: 564, column: 31, scope: !1160)
!1164 = !DILocation(line: 564, column: 38, scope: !1160)
!1165 = !DILocation(line: 564, column: 29, scope: !1160)
!1166 = !DILocation(line: 565, column: 13, scope: !1160)
!1167 = !DILocation(line: 565, column: 19, scope: !1160)
!1168 = !DILocation(line: 564, column: 48, scope: !1160)
!1169 = !DILocation(line: 564, column: 13, scope: !1161)
!1170 = !DILocation(line: 566, column: 13, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1160, file: !625, line: 565, column: 38)
!1172 = !DILocation(line: 566, column: 19, scope: !1171)
!1173 = !DILocation(line: 566, column: 37, scope: !1171)
!1174 = !DILocation(line: 567, column: 13, scope: !1171)
!1175 = !DILocation(line: 570, column: 16, scope: !1161)
!1176 = !DILocation(line: 570, column: 22, scope: !1161)
!1177 = !DILocation(line: 570, column: 37, scope: !1161)
!1178 = !DILocation(line: 570, column: 43, scope: !1161)
!1179 = !DILocation(line: 570, column: 35, scope: !1161)
!1180 = !DILocation(line: 571, column: 16, scope: !1161)
!1181 = !DILocation(line: 571, column: 23, scope: !1161)
!1182 = !DILocation(line: 571, column: 29, scope: !1161)
!1183 = !DILocation(line: 571, column: 36, scope: !1161)
!1184 = !DILocation(line: 570, column: 9, scope: !1161)
!1185 = !DILocation(line: 572, column: 28, scope: !1161)
!1186 = !DILocation(line: 572, column: 35, scope: !1161)
!1187 = !DILocation(line: 572, column: 9, scope: !1161)
!1188 = !DILocation(line: 572, column: 15, scope: !1161)
!1189 = !DILocation(line: 572, column: 25, scope: !1161)
!1190 = !DILocation(line: 573, column: 5, scope: !1161)
!1191 = !DILocation(line: 575, column: 34, scope: !1034)
!1192 = !DILocation(line: 575, column: 39, scope: !1034)
!1193 = !DILocation(line: 575, column: 45, scope: !1034)
!1194 = !DILocation(line: 575, column: 51, scope: !1034)
!1195 = !DILocation(line: 575, column: 11, scope: !1034)
!1196 = !DILocation(line: 575, column: 9, scope: !1034)
!1197 = !DILocation(line: 576, column: 9, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1034, file: !625, line: 576, column: 9)
!1199 = !DILocation(line: 576, column: 13, scope: !1198)
!1200 = !DILocation(line: 576, column: 9, scope: !1034)
!1201 = !DILocation(line: 577, column: 16, scope: !1198)
!1202 = !DILocation(line: 577, column: 9, scope: !1198)
!1203 = !DILocation(line: 579, column: 12, scope: !1034)
!1204 = !DILocation(line: 579, column: 18, scope: !1034)
!1205 = !DILocation(line: 579, column: 24, scope: !1034)
!1206 = !DILocation(line: 579, column: 30, scope: !1034)
!1207 = !DILocation(line: 579, column: 44, scope: !1034)
!1208 = !DILocation(line: 579, column: 50, scope: !1034)
!1209 = !DILocation(line: 579, column: 5, scope: !1034)
!1210 = !DILocation(line: 581, column: 5, scope: !1034)
!1211 = !DILocation(line: 582, column: 1, scope: !1034)
!1212 = distinct !DISubprogram(name: "cbs_vp9_assemble_fragment", scope: !625, file: !625, line: 584, type: !681, isLocal: true, isDefinition: true, scopeLine: 586, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1213 = !DILocalVariable(name: "ctx", arg: 1, scope: !1212, file: !625, line: 584, type: !637)
!1214 = !DILocation(line: 584, column: 61, scope: !1212)
!1215 = !DILocalVariable(name: "frag", arg: 2, scope: !1212, file: !625, line: 585, type: !653)
!1216 = !DILocation(line: 585, column: 62, scope: !1212)
!1217 = !DILocalVariable(name: "err", scope: !1212, file: !625, line: 587, type: !503)
!1218 = !DILocation(line: 587, column: 9, scope: !1212)
!1219 = !DILocation(line: 589, column: 9, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1212, file: !625, line: 589, column: 9)
!1221 = !DILocation(line: 589, column: 15, scope: !1220)
!1222 = !DILocation(line: 589, column: 24, scope: !1220)
!1223 = !DILocation(line: 589, column: 9, scope: !1212)
!1224 = !DILocalVariable(name: "frame", scope: !1225, file: !625, line: 592, type: !663)
!1225 = distinct !DILexicalBlock(scope: !1220, file: !625, line: 589, column: 30)
!1226 = !DILocation(line: 592, column: 29, scope: !1225)
!1227 = !DILocation(line: 592, column: 38, scope: !1225)
!1228 = !DILocation(line: 592, column: 44, scope: !1225)
!1229 = !DILocation(line: 594, column: 40, scope: !1225)
!1230 = !DILocation(line: 594, column: 47, scope: !1225)
!1231 = !DILocation(line: 594, column: 26, scope: !1225)
!1232 = !DILocation(line: 594, column: 9, scope: !1225)
!1233 = !DILocation(line: 594, column: 15, scope: !1225)
!1234 = !DILocation(line: 594, column: 24, scope: !1225)
!1235 = !DILocation(line: 595, column: 14, scope: !1236)
!1236 = distinct !DILexicalBlock(scope: !1225, file: !625, line: 595, column: 13)
!1237 = !DILocation(line: 595, column: 20, scope: !1236)
!1238 = !DILocation(line: 595, column: 13, scope: !1225)
!1239 = !DILocation(line: 596, column: 13, scope: !1236)
!1240 = !DILocation(line: 598, column: 22, scope: !1225)
!1241 = !DILocation(line: 598, column: 29, scope: !1225)
!1242 = !DILocation(line: 598, column: 9, scope: !1225)
!1243 = !DILocation(line: 598, column: 15, scope: !1225)
!1244 = !DILocation(line: 598, column: 20, scope: !1225)
!1245 = !DILocation(line: 599, column: 27, scope: !1225)
!1246 = !DILocation(line: 599, column: 34, scope: !1225)
!1247 = !DILocation(line: 599, column: 9, scope: !1225)
!1248 = !DILocation(line: 599, column: 15, scope: !1225)
!1249 = !DILocation(line: 599, column: 25, scope: !1225)
!1250 = !DILocation(line: 601, column: 5, scope: !1225)
!1251 = !DILocalVariable(name: "sfi", scope: !1252, file: !625, line: 604, type: !753)
!1252 = distinct !DILexicalBlock(scope: !1220, file: !625, line: 601, column: 12)
!1253 = !DILocation(line: 604, column: 31, scope: !1252)
!1254 = !DILocalVariable(name: "pbc", scope: !1252, file: !625, line: 605, type: !714)
!1255 = !DILocation(line: 605, column: 23, scope: !1252)
!1256 = !DILocalVariable(name: "ref", scope: !1252, file: !625, line: 606, type: !608)
!1257 = !DILocation(line: 606, column: 22, scope: !1252)
!1258 = !DILocalVariable(name: "data", scope: !1252, file: !625, line: 607, type: !602)
!1259 = !DILocation(line: 607, column: 18, scope: !1252)
!1260 = !DILocalVariable(name: "size", scope: !1252, file: !625, line: 608, type: !604)
!1261 = !DILocation(line: 608, column: 16, scope: !1252)
!1262 = !DILocalVariable(name: "max", scope: !1252, file: !625, line: 608, type: !604)
!1263 = !DILocation(line: 608, column: 22, scope: !1252)
!1264 = !DILocalVariable(name: "pos", scope: !1252, file: !625, line: 608, type: !604)
!1265 = !DILocation(line: 608, column: 27, scope: !1252)
!1266 = !DILocalVariable(name: "i", scope: !1252, file: !625, line: 609, type: !503)
!1267 = !DILocation(line: 609, column: 13, scope: !1252)
!1268 = !DILocalVariable(name: "size_len", scope: !1252, file: !625, line: 609, type: !503)
!1269 = !DILocation(line: 609, column: 16, scope: !1252)
!1270 = !DILocation(line: 611, column: 13, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 611, column: 13)
!1272 = !DILocation(line: 611, column: 19, scope: !1271)
!1273 = !DILocation(line: 611, column: 28, scope: !1271)
!1274 = !DILocation(line: 611, column: 13, scope: !1252)
!1275 = !DILocation(line: 612, column: 20, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1271, file: !625, line: 611, column: 33)
!1277 = !DILocation(line: 612, column: 25, scope: !1276)
!1278 = !DILocation(line: 613, column: 46, scope: !1276)
!1279 = !DILocation(line: 613, column: 52, scope: !1276)
!1280 = !DILocation(line: 612, column: 13, scope: !1276)
!1281 = !DILocation(line: 614, column: 13, scope: !1276)
!1282 = !DILocation(line: 617, column: 13, scope: !1252)
!1283 = !DILocation(line: 618, column: 16, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 618, column: 9)
!1285 = !DILocation(line: 618, column: 14, scope: !1284)
!1286 = !DILocation(line: 618, column: 21, scope: !1287)
!1287 = !DILexicalBlockFile(scope: !1288, file: !625, discriminator: 1)
!1288 = distinct !DILexicalBlock(scope: !1284, file: !625, line: 618, column: 9)
!1289 = !DILocation(line: 618, column: 25, scope: !1287)
!1290 = !DILocation(line: 618, column: 31, scope: !1287)
!1291 = !DILocation(line: 618, column: 23, scope: !1287)
!1292 = !DILocation(line: 618, column: 9, scope: !1287)
!1293 = !DILocation(line: 619, column: 17, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1288, file: !625, line: 619, column: 17)
!1295 = !DILocation(line: 619, column: 35, scope: !1294)
!1296 = !DILocation(line: 619, column: 23, scope: !1294)
!1297 = !DILocation(line: 619, column: 29, scope: !1294)
!1298 = !DILocation(line: 619, column: 38, scope: !1294)
!1299 = !DILocation(line: 619, column: 21, scope: !1294)
!1300 = !DILocation(line: 619, column: 17, scope: !1288)
!1301 = !DILocation(line: 620, column: 35, scope: !1294)
!1302 = !DILocation(line: 620, column: 23, scope: !1294)
!1303 = !DILocation(line: 620, column: 29, scope: !1294)
!1304 = !DILocation(line: 620, column: 38, scope: !1294)
!1305 = !DILocation(line: 620, column: 21, scope: !1294)
!1306 = !DILocation(line: 620, column: 17, scope: !1294)
!1307 = !DILocation(line: 619, column: 38, scope: !1308)
!1308 = !DILexicalBlockFile(scope: !1294, file: !625, discriminator: 1)
!1309 = !DILocation(line: 618, column: 42, scope: !1310)
!1310 = !DILexicalBlockFile(scope: !1288, file: !625, discriminator: 2)
!1311 = !DILocation(line: 618, column: 9, scope: !1310)
!1312 = distinct !{!1312, !1313}
!1313 = !DILocation(line: 618, column: 9, scope: !1252)
!1314 = !DILocation(line: 622, column: 13, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 622, column: 13)
!1316 = !DILocation(line: 622, column: 17, scope: !1315)
!1317 = !DILocation(line: 622, column: 13, scope: !1252)
!1318 = !DILocation(line: 623, column: 22, scope: !1315)
!1319 = !DILocation(line: 623, column: 13, scope: !1315)
!1320 = !DILocation(line: 625, column: 45, scope: !1315)
!1321 = !DILocation(line: 625, column: 49, scope: !1315)
!1322 = !DILocation(line: 625, column: 44, scope: !1315)
!1323 = !DILocation(line: 625, column: 30, scope: !1315)
!1324 = !DILocation(line: 625, column: 28, scope: !1315)
!1325 = !DILocation(line: 625, column: 54, scope: !1315)
!1326 = !DILocation(line: 625, column: 58, scope: !1315)
!1327 = !DILocation(line: 625, column: 22, scope: !1315)
!1328 = !DILocation(line: 626, column: 9, scope: !1252)
!1329 = distinct !{!1329, !1328}
!1330 = !DILocation(line: 626, column: 20, scope: !1331)
!1331 = !DILexicalBlockFile(scope: !1332, file: !625, discriminator: 1)
!1332 = distinct !DILexicalBlock(scope: !1333, file: !625, line: 626, column: 18)
!1333 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 626, column: 12)
!1334 = !DILocation(line: 626, column: 29, scope: !1331)
!1335 = !DILocation(line: 626, column: 18, scope: !1331)
!1336 = !DILocation(line: 626, column: 38, scope: !1337)
!1337 = !DILexicalBlockFile(scope: !1338, file: !625, discriminator: 2)
!1338 = distinct !DILexicalBlock(scope: !1332, file: !625, line: 626, column: 36)
!1339 = !DILocation(line: 626, column: 94, scope: !1340)
!1340 = !DILexicalBlockFile(scope: !1337, file: !625, discriminator: 4)
!1341 = !DILocation(line: 626, column: 94, scope: !1337)
!1342 = !DILocation(line: 626, column: 105, scope: !1343)
!1343 = !DILexicalBlockFile(scope: !1333, file: !625, discriminator: 3)
!1344 = !DILocation(line: 628, column: 13, scope: !1252)
!1345 = !DILocation(line: 628, column: 31, scope: !1252)
!1346 = !DILocation(line: 629, column: 43, scope: !1252)
!1347 = !DILocation(line: 629, column: 52, scope: !1252)
!1348 = !DILocation(line: 629, column: 13, scope: !1252)
!1349 = !DILocation(line: 629, column: 41, scope: !1252)
!1350 = !DILocation(line: 630, column: 44, scope: !1252)
!1351 = !DILocation(line: 630, column: 50, scope: !1252)
!1352 = !DILocation(line: 630, column: 59, scope: !1252)
!1353 = !DILocation(line: 630, column: 13, scope: !1252)
!1354 = !DILocation(line: 630, column: 42, scope: !1252)
!1355 = !DILocation(line: 632, column: 14, scope: !1252)
!1356 = !DILocation(line: 633, column: 16, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 633, column: 9)
!1358 = !DILocation(line: 633, column: 14, scope: !1357)
!1359 = !DILocation(line: 633, column: 21, scope: !1360)
!1360 = !DILexicalBlockFile(scope: !1361, file: !625, discriminator: 1)
!1361 = distinct !DILexicalBlock(scope: !1357, file: !625, line: 633, column: 9)
!1362 = !DILocation(line: 633, column: 25, scope: !1360)
!1363 = !DILocation(line: 633, column: 31, scope: !1360)
!1364 = !DILocation(line: 633, column: 23, scope: !1360)
!1365 = !DILocation(line: 633, column: 9, scope: !1360)
!1366 = !DILocation(line: 634, column: 21, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1361, file: !625, line: 633, column: 46)
!1368 = !DILocation(line: 634, column: 44, scope: !1367)
!1369 = !DILocation(line: 634, column: 32, scope: !1367)
!1370 = !DILocation(line: 634, column: 38, scope: !1367)
!1371 = !DILocation(line: 634, column: 47, scope: !1367)
!1372 = !DILocation(line: 634, column: 30, scope: !1367)
!1373 = !DILocation(line: 634, column: 18, scope: !1367)
!1374 = !DILocation(line: 635, column: 46, scope: !1367)
!1375 = !DILocation(line: 635, column: 34, scope: !1367)
!1376 = !DILocation(line: 635, column: 40, scope: !1367)
!1377 = !DILocation(line: 635, column: 49, scope: !1367)
!1378 = !DILocation(line: 635, column: 29, scope: !1367)
!1379 = !DILocation(line: 635, column: 13, scope: !1367)
!1380 = !DILocation(line: 635, column: 17, scope: !1367)
!1381 = !DILocation(line: 635, column: 32, scope: !1367)
!1382 = !DILocation(line: 636, column: 9, scope: !1367)
!1383 = !DILocation(line: 633, column: 42, scope: !1384)
!1384 = !DILexicalBlockFile(scope: !1361, file: !625, discriminator: 2)
!1385 = !DILocation(line: 633, column: 9, scope: !1384)
!1386 = distinct !{!1386, !1387}
!1387 = !DILocation(line: 633, column: 9, scope: !1252)
!1388 = !DILocation(line: 638, column: 31, scope: !1252)
!1389 = !DILocation(line: 638, column: 36, scope: !1252)
!1390 = !DILocation(line: 638, column: 15, scope: !1252)
!1391 = !DILocation(line: 638, column: 13, scope: !1252)
!1392 = !DILocation(line: 639, column: 14, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 639, column: 13)
!1394 = !DILocation(line: 639, column: 13, scope: !1252)
!1395 = !DILocation(line: 640, column: 13, scope: !1393)
!1396 = !DILocation(line: 641, column: 16, scope: !1252)
!1397 = !DILocation(line: 641, column: 21, scope: !1252)
!1398 = !DILocation(line: 641, column: 14, scope: !1252)
!1399 = !DILocation(line: 642, column: 16, scope: !1252)
!1400 = !DILocation(line: 642, column: 23, scope: !1252)
!1401 = !DILocation(line: 642, column: 21, scope: !1252)
!1402 = !DILocation(line: 642, column: 9, scope: !1252)
!1403 = !DILocation(line: 644, column: 13, scope: !1252)
!1404 = !DILocation(line: 645, column: 16, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 645, column: 9)
!1406 = !DILocation(line: 645, column: 14, scope: !1405)
!1407 = !DILocation(line: 645, column: 21, scope: !1408)
!1408 = !DILexicalBlockFile(scope: !1409, file: !625, discriminator: 1)
!1409 = distinct !DILexicalBlock(scope: !1405, file: !625, line: 645, column: 9)
!1410 = !DILocation(line: 645, column: 25, scope: !1408)
!1411 = !DILocation(line: 645, column: 31, scope: !1408)
!1412 = !DILocation(line: 645, column: 23, scope: !1408)
!1413 = !DILocation(line: 645, column: 9, scope: !1408)
!1414 = !DILocation(line: 646, column: 13, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1409, file: !625, line: 645, column: 46)
!1416 = distinct !{!1416, !1414}
!1417 = !DILocation(line: 646, column: 24, scope: !1418)
!1418 = !DILexicalBlockFile(scope: !1419, file: !625, discriminator: 1)
!1419 = distinct !DILexicalBlock(scope: !1420, file: !625, line: 646, column: 22)
!1420 = distinct !DILexicalBlock(scope: !1415, file: !625, line: 646, column: 16)
!1421 = !DILocation(line: 646, column: 31, scope: !1418)
!1422 = !DILocation(line: 646, column: 29, scope: !1418)
!1423 = !DILocation(line: 646, column: 49, scope: !1418)
!1424 = !DILocation(line: 646, column: 37, scope: !1418)
!1425 = !DILocation(line: 646, column: 43, scope: !1418)
!1426 = !DILocation(line: 646, column: 52, scope: !1418)
!1427 = !DILocation(line: 646, column: 35, scope: !1418)
!1428 = !DILocation(line: 646, column: 22, scope: !1418)
!1429 = !DILocation(line: 646, column: 66, scope: !1430)
!1430 = !DILexicalBlockFile(scope: !1431, file: !625, discriminator: 2)
!1431 = distinct !DILexicalBlock(scope: !1419, file: !625, line: 646, column: 64)
!1432 = !DILocation(line: 646, column: 122, scope: !1433)
!1433 = !DILexicalBlockFile(scope: !1430, file: !625, discriminator: 4)
!1434 = !DILocation(line: 646, column: 122, scope: !1430)
!1435 = !DILocation(line: 646, column: 133, scope: !1436)
!1436 = !DILexicalBlockFile(scope: !1420, file: !625, discriminator: 3)
!1437 = !DILocation(line: 647, column: 20, scope: !1415)
!1438 = !DILocation(line: 647, column: 27, scope: !1415)
!1439 = !DILocation(line: 647, column: 25, scope: !1415)
!1440 = !DILocation(line: 647, column: 44, scope: !1415)
!1441 = !DILocation(line: 647, column: 32, scope: !1415)
!1442 = !DILocation(line: 647, column: 38, scope: !1415)
!1443 = !DILocation(line: 647, column: 47, scope: !1415)
!1444 = !DILocation(line: 648, column: 32, scope: !1415)
!1445 = !DILocation(line: 648, column: 20, scope: !1415)
!1446 = !DILocation(line: 648, column: 26, scope: !1415)
!1447 = !DILocation(line: 648, column: 35, scope: !1415)
!1448 = !DILocation(line: 647, column: 13, scope: !1415)
!1449 = !DILocation(line: 649, column: 32, scope: !1415)
!1450 = !DILocation(line: 649, column: 20, scope: !1415)
!1451 = !DILocation(line: 649, column: 26, scope: !1415)
!1452 = !DILocation(line: 649, column: 35, scope: !1415)
!1453 = !DILocation(line: 649, column: 17, scope: !1415)
!1454 = !DILocation(line: 650, column: 9, scope: !1415)
!1455 = !DILocation(line: 645, column: 42, scope: !1456)
!1456 = !DILexicalBlockFile(scope: !1409, file: !625, discriminator: 2)
!1457 = !DILocation(line: 645, column: 9, scope: !1456)
!1458 = distinct !{!1458, !1459}
!1459 = !DILocation(line: 645, column: 9, scope: !1252)
!1460 = !DILocation(line: 651, column: 9, scope: !1252)
!1461 = distinct !{!1461, !1460}
!1462 = !DILocation(line: 651, column: 20, scope: !1463)
!1463 = !DILexicalBlockFile(scope: !1464, file: !625, discriminator: 1)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !625, line: 651, column: 18)
!1465 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 651, column: 12)
!1466 = !DILocation(line: 651, column: 27, scope: !1463)
!1467 = !DILocation(line: 651, column: 25, scope: !1463)
!1468 = !DILocation(line: 651, column: 38, scope: !1463)
!1469 = !DILocation(line: 651, column: 44, scope: !1463)
!1470 = !DILocation(line: 651, column: 55, scope: !1463)
!1471 = !DILocation(line: 651, column: 53, scope: !1463)
!1472 = !DILocation(line: 651, column: 36, scope: !1463)
!1473 = !DILocation(line: 651, column: 34, scope: !1463)
!1474 = !DILocation(line: 651, column: 31, scope: !1463)
!1475 = !DILocation(line: 651, column: 18, scope: !1463)
!1476 = !DILocation(line: 651, column: 68, scope: !1477)
!1477 = !DILexicalBlockFile(scope: !1478, file: !625, discriminator: 2)
!1478 = distinct !DILexicalBlock(scope: !1464, file: !625, line: 651, column: 66)
!1479 = !DILocation(line: 651, column: 124, scope: !1480)
!1480 = !DILexicalBlockFile(scope: !1477, file: !625, discriminator: 4)
!1481 = !DILocation(line: 651, column: 124, scope: !1477)
!1482 = !DILocation(line: 651, column: 135, scope: !1483)
!1483 = !DILexicalBlockFile(scope: !1465, file: !625, discriminator: 3)
!1484 = !DILocation(line: 653, column: 29, scope: !1252)
!1485 = !DILocation(line: 653, column: 36, scope: !1252)
!1486 = !DILocation(line: 653, column: 34, scope: !1252)
!1487 = !DILocation(line: 653, column: 41, scope: !1252)
!1488 = !DILocation(line: 653, column: 48, scope: !1252)
!1489 = !DILocation(line: 653, column: 46, scope: !1252)
!1490 = !DILocation(line: 653, column: 9, scope: !1252)
!1491 = !DILocation(line: 655, column: 46, scope: !1252)
!1492 = !DILocation(line: 655, column: 15, scope: !1252)
!1493 = !DILocation(line: 655, column: 13, scope: !1252)
!1494 = !DILocation(line: 656, column: 13, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 656, column: 13)
!1496 = !DILocation(line: 656, column: 17, scope: !1495)
!1497 = !DILocation(line: 656, column: 13, scope: !1252)
!1498 = !DILocation(line: 657, column: 20, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1495, file: !625, line: 656, column: 22)
!1500 = !DILocation(line: 657, column: 25, scope: !1499)
!1501 = !DILocation(line: 657, column: 13, scope: !1499)
!1502 = !DILocation(line: 659, column: 13, scope: !1499)
!1503 = !DILocation(line: 660, column: 20, scope: !1499)
!1504 = !DILocation(line: 660, column: 13, scope: !1499)
!1505 = !DILocation(line: 663, column: 9, scope: !1252)
!1506 = distinct !{!1506, !1505}
!1507 = !DILocation(line: 663, column: 20, scope: !1508)
!1508 = !DILexicalBlockFile(scope: !1509, file: !625, discriminator: 1)
!1509 = distinct !DILexicalBlock(scope: !1510, file: !625, line: 663, column: 18)
!1510 = distinct !DILexicalBlock(scope: !1252, file: !625, line: 663, column: 12)
!1511 = !DILocation(line: 663, column: 40, scope: !1508)
!1512 = !DILocation(line: 663, column: 18, scope: !1508)
!1513 = !DILocation(line: 663, column: 49, scope: !1514)
!1514 = !DILexicalBlockFile(scope: !1515, file: !625, discriminator: 2)
!1515 = distinct !DILexicalBlock(scope: !1509, file: !625, line: 663, column: 47)
!1516 = !DILocation(line: 663, column: 105, scope: !1517)
!1517 = !DILexicalBlockFile(scope: !1514, file: !625, discriminator: 4)
!1518 = !DILocation(line: 663, column: 105, scope: !1514)
!1519 = !DILocation(line: 663, column: 116, scope: !1520)
!1520 = !DILexicalBlockFile(scope: !1510, file: !625, discriminator: 3)
!1521 = !DILocation(line: 664, column: 9, scope: !1252)
!1522 = !DILocation(line: 666, column: 26, scope: !1252)
!1523 = !DILocation(line: 666, column: 9, scope: !1252)
!1524 = !DILocation(line: 666, column: 15, scope: !1252)
!1525 = !DILocation(line: 666, column: 24, scope: !1252)
!1526 = !DILocation(line: 667, column: 22, scope: !1252)
!1527 = !DILocation(line: 667, column: 9, scope: !1252)
!1528 = !DILocation(line: 667, column: 15, scope: !1252)
!1529 = !DILocation(line: 667, column: 20, scope: !1252)
!1530 = !DILocation(line: 668, column: 27, scope: !1252)
!1531 = !DILocation(line: 668, column: 9, scope: !1252)
!1532 = !DILocation(line: 668, column: 15, scope: !1252)
!1533 = !DILocation(line: 668, column: 25, scope: !1252)
!1534 = !DILocation(line: 671, column: 5, scope: !1212)
!1535 = !DILocation(line: 672, column: 1, scope: !1212)
!1536 = distinct !DISubprogram(name: "cbs_vp9_close", scope: !625, file: !625, line: 674, type: !685, isLocal: true, isDefinition: true, scopeLine: 675, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1537 = !DILocalVariable(name: "ctx", arg: 1, scope: !1536, file: !625, line: 674, type: !637)
!1538 = !DILocation(line: 674, column: 50, scope: !1536)
!1539 = !DILocalVariable(name: "priv", scope: !1536, file: !625, line: 676, type: !1040)
!1540 = !DILocation(line: 676, column: 31, scope: !1536)
!1541 = !DILocation(line: 676, column: 38, scope: !1536)
!1542 = !DILocation(line: 676, column: 43, scope: !1536)
!1543 = !DILocation(line: 678, column: 15, scope: !1536)
!1544 = !DILocation(line: 678, column: 21, scope: !1536)
!1545 = !DILocation(line: 678, column: 14, scope: !1536)
!1546 = !DILocation(line: 678, column: 5, scope: !1536)
!1547 = !DILocation(line: 679, column: 1, scope: !1536)
!1548 = distinct !DISubprogram(name: "init_get_bits", scope: !694, file: !694, line: 615, type: !1549, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!503, !692, !698, !503}
!1551 = !DILocalVariable(name: "s", arg: 1, scope: !1548, file: !694, line: 615, type: !692)
!1552 = !DILocation(line: 615, column: 48, scope: !1548)
!1553 = !DILocalVariable(name: "buffer", arg: 2, scope: !1548, file: !694, line: 615, type: !698)
!1554 = !DILocation(line: 615, column: 66, scope: !1548)
!1555 = !DILocalVariable(name: "bit_size", arg: 3, scope: !1548, file: !694, line: 616, type: !503)
!1556 = !DILocation(line: 616, column: 37, scope: !1548)
!1557 = !DILocalVariable(name: "buffer_size", scope: !1548, file: !694, line: 618, type: !503)
!1558 = !DILocation(line: 618, column: 9, scope: !1548)
!1559 = !DILocalVariable(name: "ret", scope: !1548, file: !694, line: 619, type: !503)
!1560 = !DILocation(line: 619, column: 9, scope: !1548)
!1561 = !DILocation(line: 621, column: 9, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1548, file: !694, line: 621, column: 9)
!1563 = !DILocation(line: 621, column: 18, scope: !1562)
!1564 = !DILocation(line: 621, column: 64, scope: !1562)
!1565 = !DILocation(line: 621, column: 67, scope: !1566)
!1566 = !DILexicalBlockFile(scope: !1562, file: !694, discriminator: 1)
!1567 = !DILocation(line: 621, column: 76, scope: !1566)
!1568 = !DILocation(line: 621, column: 80, scope: !1566)
!1569 = !DILocation(line: 621, column: 84, scope: !1570)
!1570 = !DILexicalBlockFile(scope: !1562, file: !694, discriminator: 2)
!1571 = !DILocation(line: 621, column: 9, scope: !1570)
!1572 = !DILocation(line: 622, column: 18, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1562, file: !694, line: 621, column: 92)
!1574 = !DILocation(line: 623, column: 16, scope: !1573)
!1575 = !DILocation(line: 624, column: 13, scope: !1573)
!1576 = !DILocation(line: 625, column: 5, scope: !1573)
!1577 = !DILocation(line: 627, column: 20, scope: !1548)
!1578 = !DILocation(line: 627, column: 29, scope: !1548)
!1579 = !DILocation(line: 627, column: 34, scope: !1548)
!1580 = !DILocation(line: 627, column: 17, scope: !1548)
!1581 = !DILocation(line: 629, column: 17, scope: !1548)
!1582 = !DILocation(line: 629, column: 5, scope: !1548)
!1583 = !DILocation(line: 629, column: 8, scope: !1548)
!1584 = !DILocation(line: 629, column: 15, scope: !1548)
!1585 = !DILocation(line: 630, column: 23, scope: !1548)
!1586 = !DILocation(line: 630, column: 5, scope: !1548)
!1587 = !DILocation(line: 630, column: 8, scope: !1548)
!1588 = !DILocation(line: 630, column: 21, scope: !1548)
!1589 = !DILocation(line: 631, column: 29, scope: !1548)
!1590 = !DILocation(line: 631, column: 38, scope: !1548)
!1591 = !DILocation(line: 631, column: 5, scope: !1548)
!1592 = !DILocation(line: 631, column: 8, scope: !1548)
!1593 = !DILocation(line: 631, column: 27, scope: !1548)
!1594 = !DILocation(line: 632, column: 21, scope: !1548)
!1595 = !DILocation(line: 632, column: 30, scope: !1548)
!1596 = !DILocation(line: 632, column: 28, scope: !1548)
!1597 = !DILocation(line: 632, column: 5, scope: !1548)
!1598 = !DILocation(line: 632, column: 8, scope: !1548)
!1599 = !DILocation(line: 632, column: 19, scope: !1548)
!1600 = !DILocation(line: 633, column: 5, scope: !1548)
!1601 = !DILocation(line: 633, column: 8, scope: !1548)
!1602 = !DILocation(line: 633, column: 14, scope: !1548)
!1603 = !DILocation(line: 639, column: 12, scope: !1548)
!1604 = !DILocation(line: 639, column: 5, scope: !1548)
!1605 = distinct !DISubprogram(name: "cbs_vp9_read_superframe_index", scope: !689, file: !689, line: 420, type: !1606, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!503, !637, !692, !1608}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64, align: 64)
!1609 = !DILocalVariable(name: "ctx", arg: 1, scope: !1605, file: !689, line: 420, type: !637)
!1610 = !DILocation(line: 420, column: 65, scope: !1605)
!1611 = !DILocalVariable(name: "rw", arg: 2, scope: !1605, file: !689, line: 420, type: !692)
!1612 = !DILocation(line: 420, column: 85, scope: !1605)
!1613 = !DILocalVariable(name: "current", arg: 3, scope: !1605, file: !689, line: 421, type: !1608)
!1614 = !DILocation(line: 421, column: 58, scope: !1605)
!1615 = !DILocalVariable(name: "err", scope: !1605, file: !689, line: 423, type: !503)
!1616 = !DILocation(line: 423, column: 9, scope: !1605)
!1617 = !DILocalVariable(name: "i", scope: !1605, file: !689, line: 423, type: !503)
!1618 = !DILocation(line: 423, column: 14, scope: !1605)
!1619 = !DILocation(line: 425, column: 5, scope: !1605)
!1620 = distinct !{!1620, !1619}
!1621 = !DILocation(line: 425, column: 30, scope: !1622)
!1622 = !DILexicalBlockFile(scope: !1623, file: !689, discriminator: 1)
!1623 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 425, column: 8)
!1624 = !DILocation(line: 425, column: 10, scope: !1622)
!1625 = !DILocation(line: 425, column: 56, scope: !1622)
!1626 = !DILocation(line: 427, column: 5, scope: !1605)
!1627 = distinct !{!1627, !1626}
!1628 = !DILocalVariable(name: "value", scope: !1629, file: !689, line: 427, type: !512)
!1629 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 427, column: 8)
!1630 = !DILocation(line: 427, column: 19, scope: !1629)
!1631 = !DILocation(line: 427, column: 19, scope: !1632)
!1632 = !DILexicalBlockFile(scope: !1629, file: !689, discriminator: 1)
!1633 = !DILocation(line: 427, column: 30, scope: !1632)
!1634 = distinct !{!1634, !1635}
!1635 = !DILocation(line: 427, column: 30, scope: !1629)
!1636 = !DILocation(line: 427, column: 63, scope: !1637)
!1637 = !DILexicalBlockFile(scope: !1638, file: !689, discriminator: 2)
!1638 = distinct !DILexicalBlock(scope: !1629, file: !689, line: 427, column: 33)
!1639 = !DILocation(line: 427, column: 68, scope: !1637)
!1640 = !DILocation(line: 427, column: 42, scope: !1637)
!1641 = !DILocation(line: 427, column: 39, scope: !1637)
!1642 = !DILocation(line: 427, column: 38, scope: !1637)
!1643 = !DILocation(line: 427, column: 54, scope: !1644)
!1644 = !DILexicalBlockFile(scope: !1645, file: !689, discriminator: 3)
!1645 = distinct !DILexicalBlock(scope: !1638, file: !689, line: 427, column: 38)
!1646 = !DILocation(line: 427, column: 47, scope: !1644)
!1647 = !DILocation(line: 427, column: 59, scope: !1648)
!1648 = !DILexicalBlockFile(scope: !1638, file: !689, discriminator: 4)
!1649 = !DILocation(line: 427, column: 101, scope: !1650)
!1650 = !DILexicalBlockFile(scope: !1629, file: !689, discriminator: 5)
!1651 = !DILocation(line: 427, column: 72, scope: !1650)
!1652 = !DILocation(line: 427, column: 81, scope: !1650)
!1653 = !DILocation(line: 427, column: 99, scope: !1650)
!1654 = !DILocation(line: 427, column: 108, scope: !1650)
!1655 = !DILocation(line: 428, column: 5, scope: !1605)
!1656 = distinct !{!1656, !1655}
!1657 = !DILocalVariable(name: "value", scope: !1658, file: !689, line: 428, type: !512)
!1658 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 428, column: 8)
!1659 = !DILocation(line: 428, column: 19, scope: !1658)
!1660 = !DILocation(line: 428, column: 19, scope: !1661)
!1661 = !DILexicalBlockFile(scope: !1658, file: !689, discriminator: 1)
!1662 = !DILocation(line: 428, column: 30, scope: !1661)
!1663 = distinct !{!1663, !1664}
!1664 = !DILocation(line: 428, column: 30, scope: !1658)
!1665 = !DILocation(line: 428, column: 63, scope: !1666)
!1666 = !DILexicalBlockFile(scope: !1667, file: !689, discriminator: 2)
!1667 = distinct !DILexicalBlock(scope: !1658, file: !689, line: 428, column: 33)
!1668 = !DILocation(line: 428, column: 68, scope: !1666)
!1669 = !DILocation(line: 428, column: 42, scope: !1666)
!1670 = !DILocation(line: 428, column: 39, scope: !1666)
!1671 = !DILocation(line: 428, column: 38, scope: !1666)
!1672 = !DILocation(line: 428, column: 54, scope: !1673)
!1673 = !DILexicalBlockFile(scope: !1674, file: !689, discriminator: 3)
!1674 = distinct !DILexicalBlock(scope: !1667, file: !689, line: 428, column: 38)
!1675 = !DILocation(line: 428, column: 47, scope: !1673)
!1676 = !DILocation(line: 428, column: 59, scope: !1677)
!1677 = !DILexicalBlockFile(scope: !1667, file: !689, discriminator: 4)
!1678 = !DILocation(line: 428, column: 111, scope: !1679)
!1679 = !DILexicalBlockFile(scope: !1658, file: !689, discriminator: 5)
!1680 = !DILocation(line: 428, column: 72, scope: !1679)
!1681 = !DILocation(line: 428, column: 81, scope: !1679)
!1682 = !DILocation(line: 428, column: 109, scope: !1679)
!1683 = !DILocation(line: 428, column: 118, scope: !1679)
!1684 = !DILocation(line: 429, column: 5, scope: !1605)
!1685 = distinct !{!1685, !1684}
!1686 = !DILocalVariable(name: "value", scope: !1687, file: !689, line: 429, type: !512)
!1687 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 429, column: 8)
!1688 = !DILocation(line: 429, column: 19, scope: !1687)
!1689 = !DILocation(line: 429, column: 19, scope: !1690)
!1690 = !DILexicalBlockFile(scope: !1687, file: !689, discriminator: 1)
!1691 = !DILocation(line: 429, column: 30, scope: !1690)
!1692 = distinct !{!1692, !1693}
!1693 = !DILocation(line: 429, column: 30, scope: !1687)
!1694 = !DILocation(line: 429, column: 63, scope: !1695)
!1695 = !DILexicalBlockFile(scope: !1696, file: !689, discriminator: 2)
!1696 = distinct !DILexicalBlock(scope: !1687, file: !689, line: 429, column: 33)
!1697 = !DILocation(line: 429, column: 68, scope: !1695)
!1698 = !DILocation(line: 429, column: 42, scope: !1695)
!1699 = !DILocation(line: 429, column: 39, scope: !1695)
!1700 = !DILocation(line: 429, column: 38, scope: !1695)
!1701 = !DILocation(line: 429, column: 54, scope: !1702)
!1702 = !DILexicalBlockFile(scope: !1703, file: !689, discriminator: 3)
!1703 = distinct !DILexicalBlock(scope: !1696, file: !689, line: 429, column: 38)
!1704 = !DILocation(line: 429, column: 47, scope: !1702)
!1705 = !DILocation(line: 429, column: 59, scope: !1706)
!1706 = !DILexicalBlockFile(scope: !1696, file: !689, discriminator: 4)
!1707 = !DILocation(line: 429, column: 112, scope: !1708)
!1708 = !DILexicalBlockFile(scope: !1687, file: !689, discriminator: 5)
!1709 = !DILocation(line: 429, column: 72, scope: !1708)
!1710 = !DILocation(line: 429, column: 81, scope: !1708)
!1711 = !DILocation(line: 429, column: 110, scope: !1708)
!1712 = !DILocation(line: 429, column: 119, scope: !1708)
!1713 = !DILocation(line: 431, column: 12, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 431, column: 5)
!1715 = !DILocation(line: 431, column: 10, scope: !1714)
!1716 = !DILocation(line: 431, column: 17, scope: !1717)
!1717 = !DILexicalBlockFile(scope: !1718, file: !689, discriminator: 1)
!1718 = distinct !DILexicalBlock(scope: !1714, file: !689, line: 431, column: 5)
!1719 = !DILocation(line: 431, column: 22, scope: !1717)
!1720 = !DILocation(line: 431, column: 31, scope: !1717)
!1721 = !DILocation(line: 431, column: 19, scope: !1717)
!1722 = !DILocation(line: 431, column: 5, scope: !1717)
!1723 = !DILocation(line: 433, column: 9, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1718, file: !689, line: 431, column: 66)
!1725 = distinct !{!1725, !1723}
!1726 = !DILocation(line: 433, column: 14, scope: !1727)
!1727 = !DILexicalBlockFile(scope: !1728, file: !689, discriminator: 1)
!1728 = distinct !DILexicalBlock(scope: !1724, file: !689, line: 433, column: 12)
!1729 = distinct !{!1729, !1730}
!1730 = !DILocation(line: 433, column: 14, scope: !1728)
!1731 = !DILocation(line: 433, column: 42, scope: !1732)
!1732 = !DILexicalBlockFile(scope: !1733, file: !689, discriminator: 2)
!1733 = distinct !DILexicalBlock(scope: !1728, file: !689, line: 433, column: 17)
!1734 = !DILocation(line: 433, column: 47, scope: !1732)
!1735 = !DILocation(line: 433, column: 56, scope: !1732)
!1736 = !DILocation(line: 433, column: 65, scope: !1732)
!1737 = !DILocation(line: 433, column: 93, scope: !1732)
!1738 = !DILocation(line: 433, column: 53, scope: !1732)
!1739 = !DILocation(line: 433, column: 139, scope: !1732)
!1740 = !DILocation(line: 433, column: 144, scope: !1732)
!1741 = !DILocation(line: 433, column: 126, scope: !1732)
!1742 = !DILocation(line: 433, column: 33, scope: !1732)
!1743 = !DILocation(line: 433, column: 12, scope: !1732)
!1744 = !DILocation(line: 433, column: 21, scope: !1732)
!1745 = !DILocation(line: 433, column: 26, scope: !1732)
!1746 = !DILocation(line: 433, column: 23, scope: !1732)
!1747 = !DILocation(line: 433, column: 43, scope: !1732)
!1748 = !DILocation(line: 433, column: 59, scope: !1749)
!1749 = !DILexicalBlockFile(scope: !1750, file: !689, discriminator: 3)
!1750 = distinct !DILexicalBlock(scope: !1733, file: !689, line: 433, column: 43)
!1751 = !DILocation(line: 433, column: 52, scope: !1749)
!1752 = !DILocation(line: 433, column: 64, scope: !1753)
!1753 = !DILexicalBlockFile(scope: !1733, file: !689, discriminator: 4)
!1754 = !DILocation(line: 433, column: 77, scope: !1755)
!1755 = !DILexicalBlockFile(scope: !1728, file: !689, discriminator: 5)
!1756 = !DILocation(line: 435, column: 5, scope: !1724)
!1757 = !DILocation(line: 431, column: 62, scope: !1758)
!1758 = !DILexicalBlockFile(scope: !1718, file: !689, discriminator: 2)
!1759 = !DILocation(line: 431, column: 5, scope: !1758)
!1760 = distinct !{!1760, !1761}
!1761 = !DILocation(line: 431, column: 5, scope: !1605)
!1762 = !DILocation(line: 437, column: 5, scope: !1605)
!1763 = distinct !{!1763, !1762}
!1764 = !DILocalVariable(name: "value", scope: !1765, file: !689, line: 437, type: !512)
!1765 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 437, column: 8)
!1766 = !DILocation(line: 437, column: 19, scope: !1765)
!1767 = !DILocation(line: 437, column: 19, scope: !1768)
!1768 = !DILexicalBlockFile(scope: !1765, file: !689, discriminator: 1)
!1769 = !DILocation(line: 437, column: 30, scope: !1768)
!1770 = distinct !{!1770, !1771}
!1771 = !DILocation(line: 437, column: 30, scope: !1765)
!1772 = !DILocation(line: 437, column: 63, scope: !1773)
!1773 = !DILexicalBlockFile(scope: !1774, file: !689, discriminator: 2)
!1774 = distinct !DILexicalBlock(scope: !1765, file: !689, line: 437, column: 33)
!1775 = !DILocation(line: 437, column: 68, scope: !1773)
!1776 = !DILocation(line: 437, column: 42, scope: !1773)
!1777 = !DILocation(line: 437, column: 39, scope: !1773)
!1778 = !DILocation(line: 437, column: 38, scope: !1773)
!1779 = !DILocation(line: 437, column: 54, scope: !1780)
!1780 = !DILexicalBlockFile(scope: !1781, file: !689, discriminator: 3)
!1781 = distinct !DILexicalBlock(scope: !1774, file: !689, line: 437, column: 38)
!1782 = !DILocation(line: 437, column: 47, scope: !1780)
!1783 = !DILocation(line: 437, column: 59, scope: !1784)
!1784 = !DILexicalBlockFile(scope: !1774, file: !689, discriminator: 4)
!1785 = !DILocation(line: 437, column: 101, scope: !1786)
!1786 = !DILexicalBlockFile(scope: !1765, file: !689, discriminator: 5)
!1787 = !DILocation(line: 437, column: 72, scope: !1786)
!1788 = !DILocation(line: 437, column: 81, scope: !1786)
!1789 = !DILocation(line: 437, column: 99, scope: !1786)
!1790 = !DILocation(line: 437, column: 108, scope: !1786)
!1791 = !DILocation(line: 438, column: 5, scope: !1605)
!1792 = distinct !{!1792, !1791}
!1793 = !DILocalVariable(name: "value", scope: !1794, file: !689, line: 438, type: !512)
!1794 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 438, column: 8)
!1795 = !DILocation(line: 438, column: 19, scope: !1794)
!1796 = !DILocation(line: 438, column: 19, scope: !1797)
!1797 = !DILexicalBlockFile(scope: !1794, file: !689, discriminator: 1)
!1798 = !DILocation(line: 438, column: 30, scope: !1797)
!1799 = distinct !{!1799, !1800}
!1800 = !DILocation(line: 438, column: 30, scope: !1794)
!1801 = !DILocation(line: 438, column: 63, scope: !1802)
!1802 = !DILexicalBlockFile(scope: !1803, file: !689, discriminator: 2)
!1803 = distinct !DILexicalBlock(scope: !1794, file: !689, line: 438, column: 33)
!1804 = !DILocation(line: 438, column: 68, scope: !1802)
!1805 = !DILocation(line: 438, column: 42, scope: !1802)
!1806 = !DILocation(line: 438, column: 39, scope: !1802)
!1807 = !DILocation(line: 438, column: 38, scope: !1802)
!1808 = !DILocation(line: 438, column: 54, scope: !1809)
!1809 = !DILexicalBlockFile(scope: !1810, file: !689, discriminator: 3)
!1810 = distinct !DILexicalBlock(scope: !1803, file: !689, line: 438, column: 38)
!1811 = !DILocation(line: 438, column: 47, scope: !1809)
!1812 = !DILocation(line: 438, column: 59, scope: !1813)
!1813 = !DILexicalBlockFile(scope: !1803, file: !689, discriminator: 4)
!1814 = !DILocation(line: 438, column: 111, scope: !1815)
!1815 = !DILexicalBlockFile(scope: !1794, file: !689, discriminator: 5)
!1816 = !DILocation(line: 438, column: 72, scope: !1815)
!1817 = !DILocation(line: 438, column: 81, scope: !1815)
!1818 = !DILocation(line: 438, column: 109, scope: !1815)
!1819 = !DILocation(line: 438, column: 118, scope: !1815)
!1820 = !DILocation(line: 439, column: 5, scope: !1605)
!1821 = distinct !{!1821, !1820}
!1822 = !DILocalVariable(name: "value", scope: !1823, file: !689, line: 439, type: !512)
!1823 = distinct !DILexicalBlock(scope: !1605, file: !689, line: 439, column: 8)
!1824 = !DILocation(line: 439, column: 19, scope: !1823)
!1825 = !DILocation(line: 439, column: 19, scope: !1826)
!1826 = !DILexicalBlockFile(scope: !1823, file: !689, discriminator: 1)
!1827 = !DILocation(line: 439, column: 30, scope: !1826)
!1828 = distinct !{!1828, !1829}
!1829 = !DILocation(line: 439, column: 30, scope: !1823)
!1830 = !DILocation(line: 439, column: 63, scope: !1831)
!1831 = !DILexicalBlockFile(scope: !1832, file: !689, discriminator: 2)
!1832 = distinct !DILexicalBlock(scope: !1823, file: !689, line: 439, column: 33)
!1833 = !DILocation(line: 439, column: 68, scope: !1831)
!1834 = !DILocation(line: 439, column: 42, scope: !1831)
!1835 = !DILocation(line: 439, column: 39, scope: !1831)
!1836 = !DILocation(line: 439, column: 38, scope: !1831)
!1837 = !DILocation(line: 439, column: 54, scope: !1838)
!1838 = !DILexicalBlockFile(scope: !1839, file: !689, discriminator: 3)
!1839 = distinct !DILexicalBlock(scope: !1832, file: !689, line: 439, column: 38)
!1840 = !DILocation(line: 439, column: 47, scope: !1838)
!1841 = !DILocation(line: 439, column: 59, scope: !1842)
!1842 = !DILexicalBlockFile(scope: !1832, file: !689, discriminator: 4)
!1843 = !DILocation(line: 439, column: 112, scope: !1844)
!1844 = !DILexicalBlockFile(scope: !1823, file: !689, discriminator: 5)
!1845 = !DILocation(line: 439, column: 72, scope: !1844)
!1846 = !DILocation(line: 439, column: 81, scope: !1844)
!1847 = !DILocation(line: 439, column: 110, scope: !1844)
!1848 = !DILocation(line: 439, column: 119, scope: !1844)
!1849 = !DILocation(line: 441, column: 5, scope: !1605)
!1850 = !DILocation(line: 442, column: 1, scope: !1605)
!1851 = distinct !DISubprogram(name: "cbs_vp9_read_le", scope: !625, file: !625, line: 172, type: !1852, isLocal: true, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!503, !637, !692, !503, !1854, !1857, !1858}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64, align: 64)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!1856 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64, align: 64)
!1859 = !DILocalVariable(name: "ctx", arg: 1, scope: !1851, file: !625, line: 172, type: !637)
!1860 = !DILocation(line: 172, column: 51, scope: !1851)
!1861 = !DILocalVariable(name: "gbc", arg: 2, scope: !1851, file: !625, line: 172, type: !692)
!1862 = !DILocation(line: 172, column: 71, scope: !1851)
!1863 = !DILocalVariable(name: "width", arg: 3, scope: !1851, file: !625, line: 173, type: !503)
!1864 = !DILocation(line: 173, column: 32, scope: !1851)
!1865 = !DILocalVariable(name: "name", arg: 4, scope: !1851, file: !625, line: 173, type: !1854)
!1866 = !DILocation(line: 173, column: 51, scope: !1851)
!1867 = !DILocalVariable(name: "subscripts", arg: 5, scope: !1851, file: !625, line: 174, type: !1857)
!1868 = !DILocation(line: 174, column: 39, scope: !1851)
!1869 = !DILocalVariable(name: "write_to", arg: 6, scope: !1851, file: !625, line: 174, type: !1858)
!1870 = !DILocation(line: 174, column: 61, scope: !1851)
!1871 = !DILocalVariable(name: "value", scope: !1851, file: !625, line: 176, type: !512)
!1872 = !DILocation(line: 176, column: 14, scope: !1851)
!1873 = !DILocalVariable(name: "position", scope: !1851, file: !625, line: 177, type: !503)
!1874 = !DILocation(line: 177, column: 9, scope: !1851)
!1875 = !DILocalVariable(name: "b", scope: !1851, file: !625, line: 177, type: !503)
!1876 = !DILocation(line: 177, column: 19, scope: !1851)
!1877 = !DILocation(line: 179, column: 5, scope: !1851)
!1878 = distinct !{!1878, !1877}
!1879 = !DILocation(line: 179, column: 16, scope: !1880)
!1880 = !DILexicalBlockFile(scope: !1881, file: !625, discriminator: 1)
!1881 = distinct !DILexicalBlock(scope: !1882, file: !625, line: 179, column: 14)
!1882 = distinct !DILexicalBlock(scope: !1851, file: !625, line: 179, column: 8)
!1883 = !DILocation(line: 179, column: 22, scope: !1880)
!1884 = !DILocation(line: 179, column: 26, scope: !1880)
!1885 = !DILocation(line: 179, column: 14, scope: !1880)
!1886 = !DILocation(line: 179, column: 35, scope: !1887)
!1887 = !DILexicalBlockFile(scope: !1888, file: !625, discriminator: 2)
!1888 = distinct !DILexicalBlock(scope: !1881, file: !625, line: 179, column: 33)
!1889 = !DILocation(line: 179, column: 91, scope: !1890)
!1890 = !DILexicalBlockFile(scope: !1887, file: !625, discriminator: 4)
!1891 = !DILocation(line: 179, column: 91, scope: !1887)
!1892 = !DILocation(line: 179, column: 102, scope: !1893)
!1893 = !DILexicalBlockFile(scope: !1882, file: !625, discriminator: 3)
!1894 = !DILocation(line: 181, column: 9, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1851, file: !625, line: 181, column: 9)
!1896 = !DILocation(line: 181, column: 14, scope: !1895)
!1897 = !DILocation(line: 181, column: 9, scope: !1851)
!1898 = !DILocation(line: 182, column: 35, scope: !1895)
!1899 = !DILocation(line: 182, column: 20, scope: !1895)
!1900 = !DILocation(line: 182, column: 18, scope: !1895)
!1901 = !DILocation(line: 182, column: 9, scope: !1895)
!1902 = !DILocation(line: 184, column: 23, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1851, file: !625, line: 184, column: 9)
!1904 = !DILocation(line: 184, column: 9, scope: !1903)
!1905 = !DILocation(line: 184, column: 30, scope: !1903)
!1906 = !DILocation(line: 184, column: 28, scope: !1903)
!1907 = !DILocation(line: 184, column: 9, scope: !1851)
!1908 = !DILocation(line: 185, column: 16, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1903, file: !625, line: 184, column: 37)
!1910 = !DILocation(line: 185, column: 21, scope: !1909)
!1911 = !DILocation(line: 186, column: 42, scope: !1909)
!1912 = !DILocation(line: 185, column: 9, scope: !1909)
!1913 = !DILocation(line: 187, column: 9, scope: !1909)
!1914 = !DILocation(line: 190, column: 11, scope: !1851)
!1915 = !DILocation(line: 191, column: 12, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1851, file: !625, line: 191, column: 5)
!1917 = !DILocation(line: 191, column: 10, scope: !1916)
!1918 = !DILocation(line: 191, column: 17, scope: !1919)
!1919 = !DILexicalBlockFile(scope: !1920, file: !625, discriminator: 1)
!1920 = distinct !DILexicalBlock(scope: !1916, file: !625, line: 191, column: 5)
!1921 = !DILocation(line: 191, column: 21, scope: !1919)
!1922 = !DILocation(line: 191, column: 19, scope: !1919)
!1923 = !DILocation(line: 191, column: 5, scope: !1919)
!1924 = !DILocation(line: 192, column: 27, scope: !1920)
!1925 = !DILocation(line: 192, column: 18, scope: !1920)
!1926 = !DILocation(line: 192, column: 38, scope: !1920)
!1927 = !DILocation(line: 192, column: 35, scope: !1920)
!1928 = !DILocation(line: 192, column: 15, scope: !1920)
!1929 = !DILocation(line: 192, column: 9, scope: !1920)
!1930 = !DILocation(line: 191, column: 30, scope: !1931)
!1931 = !DILexicalBlockFile(scope: !1920, file: !625, discriminator: 2)
!1932 = !DILocation(line: 191, column: 5, scope: !1931)
!1933 = distinct !{!1933, !1934}
!1934 = !DILocation(line: 191, column: 5, scope: !1851)
!1935 = !DILocation(line: 194, column: 9, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1851, file: !625, line: 194, column: 9)
!1937 = !DILocation(line: 194, column: 14, scope: !1936)
!1938 = !DILocation(line: 194, column: 9, scope: !1851)
!1939 = !DILocalVariable(name: "bits", scope: !1940, file: !625, line: 195, type: !1941)
!1940 = distinct !DILexicalBlock(scope: !1936, file: !625, line: 194, column: 28)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 264, align: 8, elements: !1942)
!1942 = !{!1943}
!1943 = !DISubrange(count: 33)
!1944 = !DILocation(line: 195, column: 14, scope: !1940)
!1945 = !DILocalVariable(name: "i", scope: !1940, file: !625, line: 196, type: !503)
!1946 = !DILocation(line: 196, column: 13, scope: !1940)
!1947 = !DILocation(line: 197, column: 16, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1940, file: !625, line: 197, column: 9)
!1949 = !DILocation(line: 197, column: 14, scope: !1948)
!1950 = !DILocation(line: 197, column: 21, scope: !1951)
!1951 = !DILexicalBlockFile(scope: !1952, file: !625, discriminator: 1)
!1952 = distinct !DILexicalBlock(scope: !1948, file: !625, line: 197, column: 9)
!1953 = !DILocation(line: 197, column: 25, scope: !1951)
!1954 = !DILocation(line: 197, column: 23, scope: !1951)
!1955 = !DILocation(line: 197, column: 9, scope: !1951)
!1956 = !DILocation(line: 198, column: 20, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1952, file: !625, line: 198, column: 13)
!1958 = !DILocation(line: 198, column: 18, scope: !1957)
!1959 = !DILocation(line: 198, column: 25, scope: !1960)
!1960 = !DILexicalBlockFile(scope: !1961, file: !625, discriminator: 1)
!1961 = distinct !DILexicalBlock(scope: !1957, file: !625, line: 198, column: 13)
!1962 = !DILocation(line: 198, column: 27, scope: !1960)
!1963 = !DILocation(line: 198, column: 13, scope: !1960)
!1964 = !DILocation(line: 199, column: 31, scope: !1961)
!1965 = !DILocation(line: 199, column: 41, scope: !1961)
!1966 = !DILocation(line: 199, column: 45, scope: !1961)
!1967 = !DILocation(line: 199, column: 43, scope: !1961)
!1968 = !DILocation(line: 199, column: 37, scope: !1961)
!1969 = !DILocation(line: 199, column: 48, scope: !1961)
!1970 = !DILocation(line: 199, column: 22, scope: !1961)
!1971 = !DILocation(line: 199, column: 26, scope: !1961)
!1972 = !DILocation(line: 199, column: 24, scope: !1961)
!1973 = !DILocation(line: 199, column: 17, scope: !1961)
!1974 = !DILocation(line: 199, column: 29, scope: !1961)
!1975 = !DILocation(line: 198, column: 33, scope: !1976)
!1976 = !DILexicalBlockFile(scope: !1961, file: !625, discriminator: 2)
!1977 = !DILocation(line: 198, column: 13, scope: !1976)
!1978 = distinct !{!1978, !1979}
!1979 = !DILocation(line: 198, column: 13, scope: !1952)
!1980 = !DILocation(line: 199, column: 60, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !1957, file: !625, discriminator: 1)
!1982 = !DILocation(line: 197, column: 34, scope: !1983)
!1983 = !DILexicalBlockFile(scope: !1952, file: !625, discriminator: 2)
!1984 = !DILocation(line: 197, column: 9, scope: !1983)
!1985 = distinct !{!1985, !1986}
!1986 = !DILocation(line: 197, column: 9, scope: !1940)
!1987 = !DILocation(line: 200, column: 14, scope: !1940)
!1988 = !DILocation(line: 200, column: 9, scope: !1940)
!1989 = !DILocation(line: 200, column: 17, scope: !1940)
!1990 = !DILocation(line: 202, column: 37, scope: !1940)
!1991 = !DILocation(line: 202, column: 42, scope: !1940)
!1992 = !DILocation(line: 202, column: 52, scope: !1940)
!1993 = !DILocation(line: 202, column: 58, scope: !1940)
!1994 = !DILocation(line: 203, column: 37, scope: !1940)
!1995 = !DILocation(line: 203, column: 43, scope: !1940)
!1996 = !DILocation(line: 202, column: 9, scope: !1940)
!1997 = !DILocation(line: 204, column: 5, scope: !1940)
!1998 = !DILocation(line: 206, column: 17, scope: !1851)
!1999 = !DILocation(line: 206, column: 6, scope: !1851)
!2000 = !DILocation(line: 206, column: 15, scope: !1851)
!2001 = !DILocation(line: 207, column: 5, scope: !1851)
!2002 = !DILocation(line: 208, column: 1, scope: !1851)
!2003 = distinct !DISubprogram(name: "get_bits_count", scope: !694, file: !694, line: 219, type: !2004, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!503, !2006}
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!2008 = !DILocalVariable(name: "s", arg: 1, scope: !2003, file: !694, line: 219, type: !2006)
!2009 = !DILocation(line: 219, column: 55, scope: !2003)
!2010 = !DILocation(line: 224, column: 12, scope: !2003)
!2011 = !DILocation(line: 224, column: 15, scope: !2003)
!2012 = !DILocation(line: 224, column: 5, scope: !2003)
!2013 = distinct !DISubprogram(name: "get_bits_left", scope: !694, file: !694, line: 814, type: !2014, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!503, !692}
!2016 = !DILocalVariable(name: "gb", arg: 1, scope: !2013, file: !694, line: 814, type: !692)
!2017 = !DILocation(line: 814, column: 48, scope: !2013)
!2018 = !DILocation(line: 816, column: 12, scope: !2013)
!2019 = !DILocation(line: 816, column: 16, scope: !2013)
!2020 = !DILocation(line: 816, column: 46, scope: !2013)
!2021 = !DILocation(line: 816, column: 31, scope: !2013)
!2022 = !DILocation(line: 816, column: 29, scope: !2013)
!2023 = !DILocation(line: 816, column: 5, scope: !2013)
!2024 = distinct !DISubprogram(name: "get_bits", scope: !694, file: !694, line: 381, type: !2025, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!504, !692, !503}
!2027 = !DILocalVariable(name: "x", arg: 1, scope: !2028, file: !2029, line: 66, type: !512)
!2028 = distinct !DISubprogram(name: "av_bswap32", scope: !2029, file: !2029, line: 66, type: !2030, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2029 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!512, !512}
!2032 = !DILocation(line: 66, column: 98, scope: !2028, inlinedAt: !2033)
!2033 = distinct !DILocation(line: 401, column: 16, scope: !2024)
!2034 = !DILocalVariable(name: "s", arg: 1, scope: !2024, file: !694, line: 381, type: !692)
!2035 = !DILocation(line: 381, column: 52, scope: !2024)
!2036 = !DILocalVariable(name: "n", arg: 2, scope: !2024, file: !694, line: 381, type: !503)
!2037 = !DILocation(line: 381, column: 59, scope: !2024)
!2038 = !DILocalVariable(name: "tmp", scope: !2024, file: !694, line: 383, type: !503)
!2039 = !DILocation(line: 383, column: 18, scope: !2024)
!2040 = !DILocalVariable(name: "re_index", scope: !2024, file: !694, line: 399, type: !504)
!2041 = !DILocation(line: 399, column: 18, scope: !2024)
!2042 = !DILocation(line: 399, column: 30, scope: !2024)
!2043 = !DILocation(line: 399, column: 34, scope: !2024)
!2044 = !DILocalVariable(name: "re_cache", scope: !2024, file: !694, line: 399, type: !504)
!2045 = !DILocation(line: 399, column: 78, scope: !2024)
!2046 = !DILocalVariable(name: "re_size_plus8", scope: !2024, file: !694, line: 399, type: !504)
!2047 = !DILocation(line: 399, column: 101, scope: !2024)
!2048 = !DILocation(line: 399, column: 118, scope: !2024)
!2049 = !DILocation(line: 399, column: 122, scope: !2024)
!2050 = !DILocation(line: 401, column: 60, scope: !2024)
!2051 = !DILocation(line: 401, column: 64, scope: !2024)
!2052 = !DILocation(line: 401, column: 74, scope: !2024)
!2053 = !DILocation(line: 401, column: 83, scope: !2024)
!2054 = !DILocation(line: 401, column: 71, scope: !2024)
!2055 = !DILocation(line: 401, column: 92, scope: !2024)
!2056 = !DILocation(line: 401, column: 16, scope: !2024)
!2057 = !DILocation(line: 68, column: 16, scope: !2028, inlinedAt: !2033)
!2058 = !DILocation(line: 68, column: 19, scope: !2028, inlinedAt: !2033)
!2059 = !DILocation(line: 68, column: 24, scope: !2028, inlinedAt: !2033)
!2060 = !DILocation(line: 68, column: 38, scope: !2028, inlinedAt: !2033)
!2061 = !DILocation(line: 68, column: 41, scope: !2028, inlinedAt: !2033)
!2062 = !DILocation(line: 68, column: 46, scope: !2028, inlinedAt: !2033)
!2063 = !DILocation(line: 68, column: 34, scope: !2028, inlinedAt: !2033)
!2064 = !DILocation(line: 68, column: 57, scope: !2028, inlinedAt: !2033)
!2065 = !DILocation(line: 68, column: 69, scope: !2028, inlinedAt: !2033)
!2066 = !DILocation(line: 68, column: 72, scope: !2028, inlinedAt: !2033)
!2067 = !DILocation(line: 68, column: 79, scope: !2028, inlinedAt: !2033)
!2068 = !DILocation(line: 68, column: 84, scope: !2028, inlinedAt: !2033)
!2069 = !DILocation(line: 68, column: 99, scope: !2028, inlinedAt: !2033)
!2070 = !DILocation(line: 68, column: 102, scope: !2028, inlinedAt: !2033)
!2071 = !DILocation(line: 68, column: 109, scope: !2028, inlinedAt: !2033)
!2072 = !DILocation(line: 68, column: 114, scope: !2028, inlinedAt: !2033)
!2073 = !DILocation(line: 68, column: 94, scope: !2028, inlinedAt: !2033)
!2074 = !DILocation(line: 68, column: 63, scope: !2028, inlinedAt: !2033)
!2075 = !DILocation(line: 401, column: 100, scope: !2024)
!2076 = !DILocation(line: 401, column: 109, scope: !2024)
!2077 = !DILocation(line: 401, column: 96, scope: !2024)
!2078 = !DILocation(line: 401, column: 14, scope: !2024)
!2079 = !DILocation(line: 402, column: 21, scope: !2024)
!2080 = !DILocation(line: 402, column: 31, scope: !2024)
!2081 = !DILocation(line: 402, column: 11, scope: !2024)
!2082 = !DILocation(line: 402, column: 9, scope: !2024)
!2083 = !DILocation(line: 403, column: 18, scope: !2024)
!2084 = !DILocation(line: 403, column: 36, scope: !2024)
!2085 = !DILocation(line: 403, column: 48, scope: !2024)
!2086 = !DILocation(line: 403, column: 45, scope: !2024)
!2087 = !DILocation(line: 403, column: 33, scope: !2024)
!2088 = !DILocation(line: 403, column: 17, scope: !2024)
!2089 = !DILocation(line: 403, column: 55, scope: !2090)
!2090 = !DILexicalBlockFile(scope: !2024, file: !694, discriminator: 1)
!2091 = !DILocation(line: 403, column: 67, scope: !2090)
!2092 = !DILocation(line: 403, column: 64, scope: !2090)
!2093 = !DILocation(line: 403, column: 17, scope: !2090)
!2094 = !DILocation(line: 403, column: 74, scope: !2095)
!2095 = !DILexicalBlockFile(scope: !2024, file: !694, discriminator: 2)
!2096 = !DILocation(line: 403, column: 17, scope: !2095)
!2097 = !DILocation(line: 403, column: 17, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !2024, file: !694, discriminator: 3)
!2099 = !DILocation(line: 403, column: 14, scope: !2098)
!2100 = !DILocation(line: 404, column: 18, scope: !2024)
!2101 = !DILocation(line: 404, column: 6, scope: !2024)
!2102 = !DILocation(line: 404, column: 10, scope: !2024)
!2103 = !DILocation(line: 404, column: 16, scope: !2024)
!2104 = !DILocation(line: 406, column: 12, scope: !2024)
!2105 = !DILocation(line: 406, column: 5, scope: !2024)
!2106 = distinct !DISubprogram(name: "NEG_USR32", scope: !2107, file: !2107, line: 124, type: !2108, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2107 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!512, !512, !569}
!2110 = !DILocalVariable(name: "a", arg: 1, scope: !2106, file: !2107, line: 124, type: !512)
!2111 = !DILocation(line: 124, column: 43, scope: !2106)
!2112 = !DILocalVariable(name: "s", arg: 2, scope: !2106, file: !2107, line: 124, type: !569)
!2113 = !DILocation(line: 124, column: 53, scope: !2106)
!2114 = !DILocation(line: 125, column: 5, scope: !2106)
!2115 = !DILocation(line: 127, column: 29, scope: !2106)
!2116 = !DILocation(line: 127, column: 28, scope: !2106)
!2117 = !DILocation(line: 127, column: 18, scope: !2106)
!2118 = !{i32 182611, i32 182625}
!2119 = !DILocation(line: 129, column: 12, scope: !2106)
!2120 = !DILocation(line: 129, column: 5, scope: !2106)
!2121 = distinct !DISubprogram(name: "cbs_vp9_free_frame", scope: !625, file: !625, line: 477, type: !2122, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !505, !602}
!2124 = !DILocalVariable(name: "unit", arg: 1, scope: !2121, file: !625, line: 477, type: !505)
!2125 = !DILocation(line: 477, column: 38, scope: !2121)
!2126 = !DILocalVariable(name: "content", arg: 2, scope: !2121, file: !625, line: 477, type: !602)
!2127 = !DILocation(line: 477, column: 53, scope: !2121)
!2128 = !DILocalVariable(name: "frame", scope: !2121, file: !625, line: 479, type: !516)
!2129 = !DILocation(line: 479, column: 18, scope: !2121)
!2130 = !DILocation(line: 479, column: 40, scope: !2121)
!2131 = !DILocation(line: 479, column: 26, scope: !2121)
!2132 = !DILocation(line: 480, column: 22, scope: !2121)
!2133 = !DILocation(line: 480, column: 29, scope: !2121)
!2134 = !DILocation(line: 480, column: 5, scope: !2121)
!2135 = !DILocation(line: 481, column: 14, scope: !2121)
!2136 = !DILocation(line: 481, column: 5, scope: !2121)
!2137 = !DILocation(line: 482, column: 1, scope: !2121)
!2138 = distinct !DISubprogram(name: "cbs_vp9_read_frame", scope: !689, file: !689, line: 406, type: !2139, isLocal: true, isDefinition: true, scopeLine: 408, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!503, !637, !692, !516}
!2141 = !DILocalVariable(name: "ctx", arg: 1, scope: !2138, file: !689, line: 406, type: !637)
!2142 = !DILocation(line: 406, column: 54, scope: !2138)
!2143 = !DILocalVariable(name: "rw", arg: 2, scope: !2138, file: !689, line: 406, type: !692)
!2144 = !DILocation(line: 406, column: 74, scope: !2138)
!2145 = !DILocalVariable(name: "current", arg: 3, scope: !2138, file: !689, line: 407, type: !516)
!2146 = !DILocation(line: 407, column: 37, scope: !2138)
!2147 = !DILocalVariable(name: "err", scope: !2138, file: !689, line: 409, type: !503)
!2148 = !DILocation(line: 409, column: 9, scope: !2138)
!2149 = !DILocation(line: 411, column: 5, scope: !2138)
!2150 = distinct !{!2150, !2149}
!2151 = !DILocation(line: 411, column: 30, scope: !2152)
!2152 = !DILexicalBlockFile(scope: !2153, file: !689, discriminator: 1)
!2153 = distinct !DILexicalBlock(scope: !2138, file: !689, line: 411, column: 8)
!2154 = !DILocation(line: 411, column: 10, scope: !2152)
!2155 = !DILocation(line: 411, column: 45, scope: !2152)
!2156 = !DILocation(line: 413, column: 5, scope: !2138)
!2157 = distinct !{!2157, !2156}
!2158 = !DILocation(line: 413, column: 50, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !2160, file: !689, discriminator: 1)
!2160 = distinct !DILexicalBlock(scope: !2138, file: !689, line: 413, column: 8)
!2161 = !DILocation(line: 413, column: 55, scope: !2159)
!2162 = !DILocation(line: 413, column: 60, scope: !2159)
!2163 = !DILocation(line: 413, column: 69, scope: !2159)
!2164 = !DILocation(line: 413, column: 17, scope: !2159)
!2165 = !DILocation(line: 413, column: 14, scope: !2159)
!2166 = !DILocation(line: 413, column: 83, scope: !2159)
!2167 = !DILocation(line: 413, column: 87, scope: !2159)
!2168 = !DILocation(line: 413, column: 99, scope: !2169)
!2169 = !DILexicalBlockFile(scope: !2170, file: !689, discriminator: 2)
!2170 = distinct !DILexicalBlock(scope: !2160, file: !689, line: 413, column: 83)
!2171 = !DILocation(line: 413, column: 92, scope: !2169)
!2172 = !DILocation(line: 413, column: 104, scope: !2173)
!2173 = !DILexicalBlockFile(scope: !2160, file: !689, discriminator: 3)
!2174 = !DILocation(line: 415, column: 5, scope: !2138)
!2175 = distinct !{!2175, !2174}
!2176 = !DILocation(line: 415, column: 44, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !2178, file: !689, discriminator: 1)
!2178 = distinct !DILexicalBlock(scope: !2138, file: !689, line: 415, column: 8)
!2179 = !DILocation(line: 415, column: 49, scope: !2177)
!2180 = !DILocation(line: 415, column: 17, scope: !2177)
!2181 = !DILocation(line: 415, column: 14, scope: !2177)
!2182 = !DILocation(line: 415, column: 59, scope: !2177)
!2183 = !DILocation(line: 415, column: 63, scope: !2177)
!2184 = !DILocation(line: 415, column: 75, scope: !2185)
!2185 = !DILexicalBlockFile(scope: !2186, file: !689, discriminator: 2)
!2186 = distinct !DILexicalBlock(scope: !2178, file: !689, line: 415, column: 59)
!2187 = !DILocation(line: 415, column: 68, scope: !2185)
!2188 = !DILocation(line: 415, column: 80, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !2178, file: !689, discriminator: 3)
!2190 = !DILocation(line: 417, column: 5, scope: !2138)
!2191 = !DILocation(line: 418, column: 1, scope: !2138)
!2192 = distinct !DISubprogram(name: "cbs_vp9_read_uncompressed_header", scope: !689, file: !689, line: 277, type: !690, isLocal: true, isDefinition: true, scopeLine: 279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!2193 = !DILocalVariable(name: "ctx", arg: 1, scope: !2192, file: !689, line: 277, type: !637)
!2194 = !DILocation(line: 277, column: 68, scope: !2192)
!2195 = !DILocalVariable(name: "rw", arg: 2, scope: !2192, file: !689, line: 277, type: !692)
!2196 = !DILocation(line: 277, column: 88, scope: !2192)
!2197 = !DILocalVariable(name: "current", arg: 3, scope: !2192, file: !689, line: 278, type: !704)
!2198 = !DILocation(line: 278, column: 57, scope: !2192)
!2199 = !DILocalVariable(name: "vp9", scope: !2192, file: !689, line: 280, type: !1040)
!2200 = !DILocation(line: 280, column: 31, scope: !2192)
!2201 = !DILocation(line: 280, column: 37, scope: !2192)
!2202 = !DILocation(line: 280, column: 42, scope: !2192)
!2203 = !DILocalVariable(name: "err", scope: !2192, file: !689, line: 281, type: !503)
!2204 = !DILocation(line: 281, column: 9, scope: !2192)
!2205 = !DILocalVariable(name: "i", scope: !2192, file: !689, line: 281, type: !503)
!2206 = !DILocation(line: 281, column: 14, scope: !2192)
!2207 = !DILocation(line: 283, column: 5, scope: !2192)
!2208 = distinct !{!2208, !2207}
!2209 = !DILocalVariable(name: "value", scope: !2210, file: !689, line: 283, type: !512)
!2210 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 283, column: 8)
!2211 = !DILocation(line: 283, column: 19, scope: !2210)
!2212 = !DILocation(line: 283, column: 19, scope: !2213)
!2213 = !DILexicalBlockFile(scope: !2210, file: !689, discriminator: 1)
!2214 = !DILocation(line: 283, column: 30, scope: !2213)
!2215 = distinct !{!2215, !2216}
!2216 = !DILocation(line: 283, column: 30, scope: !2210)
!2217 = !DILocation(line: 283, column: 63, scope: !2218)
!2218 = !DILexicalBlockFile(scope: !2219, file: !689, discriminator: 2)
!2219 = distinct !DILexicalBlock(scope: !2210, file: !689, line: 283, column: 33)
!2220 = !DILocation(line: 283, column: 68, scope: !2218)
!2221 = !DILocation(line: 283, column: 42, scope: !2218)
!2222 = !DILocation(line: 283, column: 39, scope: !2218)
!2223 = !DILocation(line: 283, column: 38, scope: !2218)
!2224 = !DILocation(line: 283, column: 54, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !2226, file: !689, discriminator: 3)
!2226 = distinct !DILexicalBlock(scope: !2219, file: !689, line: 283, column: 38)
!2227 = !DILocation(line: 283, column: 47, scope: !2225)
!2228 = !DILocation(line: 283, column: 59, scope: !2229)
!2229 = !DILexicalBlockFile(scope: !2219, file: !689, discriminator: 4)
!2230 = !DILocation(line: 283, column: 96, scope: !2231)
!2231 = !DILexicalBlockFile(scope: !2210, file: !689, discriminator: 5)
!2232 = !DILocation(line: 283, column: 72, scope: !2231)
!2233 = !DILocation(line: 283, column: 81, scope: !2231)
!2234 = !DILocation(line: 283, column: 94, scope: !2231)
!2235 = !DILocation(line: 283, column: 103, scope: !2231)
!2236 = !DILocation(line: 285, column: 5, scope: !2192)
!2237 = distinct !{!2237, !2236}
!2238 = !DILocalVariable(name: "value", scope: !2239, file: !689, line: 285, type: !512)
!2239 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 285, column: 8)
!2240 = !DILocation(line: 285, column: 19, scope: !2239)
!2241 = !DILocation(line: 285, column: 19, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !2239, file: !689, discriminator: 1)
!2243 = !DILocation(line: 285, column: 30, scope: !2242)
!2244 = distinct !{!2244, !2245}
!2245 = !DILocation(line: 285, column: 30, scope: !2239)
!2246 = !DILocation(line: 285, column: 63, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !2248, file: !689, discriminator: 2)
!2248 = distinct !DILexicalBlock(scope: !2239, file: !689, line: 285, column: 33)
!2249 = !DILocation(line: 285, column: 68, scope: !2247)
!2250 = !DILocation(line: 285, column: 42, scope: !2247)
!2251 = !DILocation(line: 285, column: 39, scope: !2247)
!2252 = !DILocation(line: 285, column: 38, scope: !2247)
!2253 = !DILocation(line: 285, column: 54, scope: !2254)
!2254 = !DILexicalBlockFile(scope: !2255, file: !689, discriminator: 3)
!2255 = distinct !DILexicalBlock(scope: !2248, file: !689, line: 285, column: 38)
!2256 = !DILocation(line: 285, column: 47, scope: !2254)
!2257 = !DILocation(line: 285, column: 59, scope: !2258)
!2258 = !DILexicalBlockFile(scope: !2248, file: !689, discriminator: 4)
!2259 = !DILocation(line: 285, column: 99, scope: !2260)
!2260 = !DILexicalBlockFile(scope: !2239, file: !689, discriminator: 5)
!2261 = !DILocation(line: 285, column: 72, scope: !2260)
!2262 = !DILocation(line: 285, column: 81, scope: !2260)
!2263 = !DILocation(line: 285, column: 97, scope: !2260)
!2264 = !DILocation(line: 285, column: 106, scope: !2260)
!2265 = !DILocation(line: 286, column: 5, scope: !2192)
!2266 = distinct !{!2266, !2265}
!2267 = !DILocalVariable(name: "value", scope: !2268, file: !689, line: 286, type: !512)
!2268 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 286, column: 8)
!2269 = !DILocation(line: 286, column: 19, scope: !2268)
!2270 = !DILocation(line: 286, column: 19, scope: !2271)
!2271 = !DILexicalBlockFile(scope: !2268, file: !689, discriminator: 1)
!2272 = !DILocation(line: 286, column: 30, scope: !2271)
!2273 = distinct !{!2273, !2274}
!2274 = !DILocation(line: 286, column: 30, scope: !2268)
!2275 = !DILocation(line: 286, column: 63, scope: !2276)
!2276 = !DILexicalBlockFile(scope: !2277, file: !689, discriminator: 2)
!2277 = distinct !DILexicalBlock(scope: !2268, file: !689, line: 286, column: 33)
!2278 = !DILocation(line: 286, column: 68, scope: !2276)
!2279 = !DILocation(line: 286, column: 42, scope: !2276)
!2280 = !DILocation(line: 286, column: 39, scope: !2276)
!2281 = !DILocation(line: 286, column: 38, scope: !2276)
!2282 = !DILocation(line: 286, column: 54, scope: !2283)
!2283 = !DILexicalBlockFile(scope: !2284, file: !689, discriminator: 3)
!2284 = distinct !DILexicalBlock(scope: !2277, file: !689, line: 286, column: 38)
!2285 = !DILocation(line: 286, column: 47, scope: !2283)
!2286 = !DILocation(line: 286, column: 59, scope: !2287)
!2287 = !DILexicalBlockFile(scope: !2277, file: !689, discriminator: 4)
!2288 = !DILocation(line: 286, column: 100, scope: !2289)
!2289 = !DILexicalBlockFile(scope: !2268, file: !689, discriminator: 5)
!2290 = !DILocation(line: 286, column: 72, scope: !2289)
!2291 = !DILocation(line: 286, column: 81, scope: !2289)
!2292 = !DILocation(line: 286, column: 98, scope: !2289)
!2293 = !DILocation(line: 286, column: 107, scope: !2289)
!2294 = !DILocation(line: 287, column: 21, scope: !2192)
!2295 = !DILocation(line: 287, column: 30, scope: !2192)
!2296 = !DILocation(line: 287, column: 47, scope: !2192)
!2297 = !DILocation(line: 287, column: 55, scope: !2192)
!2298 = !DILocation(line: 287, column: 64, scope: !2192)
!2299 = !DILocation(line: 287, column: 53, scope: !2192)
!2300 = !DILocation(line: 287, column: 5, scope: !2192)
!2301 = !DILocation(line: 287, column: 10, scope: !2192)
!2302 = !DILocation(line: 287, column: 18, scope: !2192)
!2303 = !DILocation(line: 288, column: 9, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 288, column: 9)
!2305 = !DILocation(line: 288, column: 14, scope: !2304)
!2306 = !DILocation(line: 288, column: 22, scope: !2304)
!2307 = !DILocation(line: 288, column: 9, scope: !2192)
!2308 = !DILocation(line: 289, column: 9, scope: !2304)
!2309 = distinct !{!2309, !2308}
!2310 = !DILocalVariable(name: "fixed_value", scope: !2311, file: !689, line: 289, type: !512)
!2311 = distinct !DILexicalBlock(scope: !2304, file: !689, line: 289, column: 12)
!2312 = !DILocation(line: 289, column: 47, scope: !2311)
!2313 = !DILocation(line: 289, column: 47, scope: !2314)
!2314 = !DILexicalBlockFile(scope: !2311, file: !689, discriminator: 1)
!2315 = !DILocation(line: 289, column: 64, scope: !2314)
!2316 = distinct !{!2316, !2317}
!2317 = !DILocation(line: 289, column: 64, scope: !2311)
!2318 = !DILocation(line: 289, column: 97, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !2320, file: !689, discriminator: 2)
!2320 = distinct !DILexicalBlock(scope: !2311, file: !689, line: 289, column: 67)
!2321 = !DILocation(line: 289, column: 102, scope: !2319)
!2322 = !DILocation(line: 289, column: 76, scope: !2319)
!2323 = !DILocation(line: 289, column: 73, scope: !2319)
!2324 = !DILocation(line: 289, column: 155, scope: !2319)
!2325 = !DILocation(line: 289, column: 159, scope: !2319)
!2326 = !DILocation(line: 289, column: 171, scope: !2327)
!2327 = !DILexicalBlockFile(scope: !2328, file: !689, discriminator: 3)
!2328 = distinct !DILexicalBlock(scope: !2320, file: !689, line: 289, column: 155)
!2329 = !DILocation(line: 289, column: 164, scope: !2327)
!2330 = !DILocation(line: 289, column: 176, scope: !2331)
!2331 = !DILexicalBlockFile(scope: !2320, file: !689, discriminator: 4)
!2332 = !DILocation(line: 289, column: 189, scope: !2333)
!2333 = !DILexicalBlockFile(scope: !2311, file: !689, discriminator: 5)
!2334 = !DILocation(line: 289, column: 189, scope: !2335)
!2335 = !DILexicalBlockFile(scope: !2311, file: !689, discriminator: 6)
!2336 = !DILocation(line: 291, column: 5, scope: !2192)
!2337 = distinct !{!2337, !2336}
!2338 = !DILocalVariable(name: "value", scope: !2339, file: !689, line: 291, type: !512)
!2339 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 291, column: 8)
!2340 = !DILocation(line: 291, column: 19, scope: !2339)
!2341 = !DILocation(line: 291, column: 19, scope: !2342)
!2342 = !DILexicalBlockFile(scope: !2339, file: !689, discriminator: 1)
!2343 = !DILocation(line: 291, column: 30, scope: !2342)
!2344 = distinct !{!2344, !2345}
!2345 = !DILocation(line: 291, column: 30, scope: !2339)
!2346 = !DILocation(line: 291, column: 63, scope: !2347)
!2347 = !DILexicalBlockFile(scope: !2348, file: !689, discriminator: 2)
!2348 = distinct !DILexicalBlock(scope: !2339, file: !689, line: 291, column: 33)
!2349 = !DILocation(line: 291, column: 68, scope: !2347)
!2350 = !DILocation(line: 291, column: 42, scope: !2347)
!2351 = !DILocation(line: 291, column: 39, scope: !2347)
!2352 = !DILocation(line: 291, column: 38, scope: !2347)
!2353 = !DILocation(line: 291, column: 54, scope: !2354)
!2354 = !DILexicalBlockFile(scope: !2355, file: !689, discriminator: 3)
!2355 = distinct !DILexicalBlock(scope: !2348, file: !689, line: 291, column: 38)
!2356 = !DILocation(line: 291, column: 47, scope: !2354)
!2357 = !DILocation(line: 291, column: 59, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2348, file: !689, discriminator: 4)
!2359 = !DILocation(line: 291, column: 103, scope: !2360)
!2360 = !DILexicalBlockFile(scope: !2339, file: !689, discriminator: 5)
!2361 = !DILocation(line: 291, column: 72, scope: !2360)
!2362 = !DILocation(line: 291, column: 81, scope: !2360)
!2363 = !DILocation(line: 291, column: 101, scope: !2360)
!2364 = !DILocation(line: 291, column: 110, scope: !2360)
!2365 = !DILocation(line: 292, column: 9, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 292, column: 9)
!2367 = !DILocation(line: 292, column: 18, scope: !2366)
!2368 = !DILocation(line: 292, column: 9, scope: !2192)
!2369 = !DILocation(line: 293, column: 9, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2366, file: !689, line: 292, column: 39)
!2371 = distinct !{!2371, !2369}
!2372 = !DILocalVariable(name: "value", scope: !2373, file: !689, line: 293, type: !512)
!2373 = distinct !DILexicalBlock(scope: !2370, file: !689, line: 293, column: 12)
!2374 = !DILocation(line: 293, column: 23, scope: !2373)
!2375 = !DILocation(line: 293, column: 23, scope: !2376)
!2376 = !DILexicalBlockFile(scope: !2373, file: !689, discriminator: 1)
!2377 = !DILocation(line: 293, column: 34, scope: !2376)
!2378 = distinct !{!2378, !2379}
!2379 = !DILocation(line: 293, column: 34, scope: !2373)
!2380 = !DILocation(line: 293, column: 67, scope: !2381)
!2381 = !DILexicalBlockFile(scope: !2382, file: !689, discriminator: 2)
!2382 = distinct !DILexicalBlock(scope: !2373, file: !689, line: 293, column: 37)
!2383 = !DILocation(line: 293, column: 72, scope: !2381)
!2384 = !DILocation(line: 293, column: 46, scope: !2381)
!2385 = !DILocation(line: 293, column: 43, scope: !2381)
!2386 = !DILocation(line: 293, column: 42, scope: !2381)
!2387 = !DILocation(line: 293, column: 58, scope: !2388)
!2388 = !DILexicalBlockFile(scope: !2389, file: !689, discriminator: 3)
!2389 = distinct !DILexicalBlock(scope: !2382, file: !689, line: 293, column: 42)
!2390 = !DILocation(line: 293, column: 51, scope: !2388)
!2391 = !DILocation(line: 293, column: 63, scope: !2392)
!2392 = !DILexicalBlockFile(scope: !2382, file: !689, discriminator: 4)
!2393 = !DILocation(line: 293, column: 109, scope: !2394)
!2394 = !DILexicalBlockFile(scope: !2373, file: !689, discriminator: 5)
!2395 = !DILocation(line: 293, column: 76, scope: !2394)
!2396 = !DILocation(line: 293, column: 85, scope: !2394)
!2397 = !DILocation(line: 293, column: 107, scope: !2394)
!2398 = !DILocation(line: 293, column: 116, scope: !2394)
!2399 = !DILocation(line: 294, column: 9, scope: !2370)
!2400 = distinct !{!2400, !2399}
!2401 = !DILocation(line: 294, column: 14, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !2403, file: !689, discriminator: 1)
!2403 = distinct !DILexicalBlock(scope: !2370, file: !689, line: 294, column: 12)
!2404 = !DILocation(line: 294, column: 23, scope: !2402)
!2405 = !DILocation(line: 294, column: 44, scope: !2402)
!2406 = !DILocation(line: 294, column: 49, scope: !2402)
!2407 = !DILocation(line: 295, column: 9, scope: !2370)
!2408 = distinct !{!2408, !2407}
!2409 = !DILocation(line: 295, column: 14, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !2411, file: !689, discriminator: 1)
!2411 = distinct !DILexicalBlock(scope: !2370, file: !689, line: 295, column: 12)
!2412 = !DILocation(line: 295, column: 23, scope: !2410)
!2413 = !DILocation(line: 295, column: 43, scope: !2410)
!2414 = !DILocation(line: 295, column: 51, scope: !2410)
!2415 = !DILocation(line: 296, column: 9, scope: !2370)
!2416 = distinct !{!2416, !2415}
!2417 = !DILocation(line: 296, column: 14, scope: !2418)
!2418 = !DILexicalBlockFile(scope: !2419, file: !689, discriminator: 1)
!2419 = distinct !DILexicalBlock(scope: !2370, file: !689, line: 296, column: 12)
!2420 = !DILocation(line: 296, column: 23, scope: !2418)
!2421 = !DILocation(line: 296, column: 41, scope: !2418)
!2422 = !DILocation(line: 296, column: 46, scope: !2418)
!2423 = !DILocation(line: 297, column: 9, scope: !2370)
!2424 = !DILocation(line: 300, column: 5, scope: !2192)
!2425 = distinct !{!2425, !2424}
!2426 = !DILocalVariable(name: "value", scope: !2427, file: !689, line: 300, type: !512)
!2427 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 300, column: 8)
!2428 = !DILocation(line: 300, column: 19, scope: !2427)
!2429 = !DILocation(line: 300, column: 19, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2427, file: !689, discriminator: 1)
!2431 = !DILocation(line: 300, column: 30, scope: !2430)
!2432 = distinct !{!2432, !2433}
!2433 = !DILocation(line: 300, column: 30, scope: !2427)
!2434 = !DILocation(line: 300, column: 63, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !2436, file: !689, discriminator: 2)
!2436 = distinct !DILexicalBlock(scope: !2427, file: !689, line: 300, column: 33)
!2437 = !DILocation(line: 300, column: 68, scope: !2435)
!2438 = !DILocation(line: 300, column: 42, scope: !2435)
!2439 = !DILocation(line: 300, column: 39, scope: !2435)
!2440 = !DILocation(line: 300, column: 38, scope: !2435)
!2441 = !DILocation(line: 300, column: 54, scope: !2442)
!2442 = !DILexicalBlockFile(scope: !2443, file: !689, discriminator: 3)
!2443 = distinct !DILexicalBlock(scope: !2436, file: !689, line: 300, column: 38)
!2444 = !DILocation(line: 300, column: 47, scope: !2442)
!2445 = !DILocation(line: 300, column: 59, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !2436, file: !689, discriminator: 4)
!2447 = !DILocation(line: 300, column: 94, scope: !2448)
!2448 = !DILexicalBlockFile(scope: !2427, file: !689, discriminator: 5)
!2449 = !DILocation(line: 300, column: 72, scope: !2448)
!2450 = !DILocation(line: 300, column: 81, scope: !2448)
!2451 = !DILocation(line: 300, column: 92, scope: !2448)
!2452 = !DILocation(line: 300, column: 101, scope: !2448)
!2453 = !DILocation(line: 301, column: 5, scope: !2192)
!2454 = distinct !{!2454, !2453}
!2455 = !DILocalVariable(name: "value", scope: !2456, file: !689, line: 301, type: !512)
!2456 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 301, column: 8)
!2457 = !DILocation(line: 301, column: 19, scope: !2456)
!2458 = !DILocation(line: 301, column: 19, scope: !2459)
!2459 = !DILexicalBlockFile(scope: !2456, file: !689, discriminator: 1)
!2460 = !DILocation(line: 301, column: 30, scope: !2459)
!2461 = distinct !{!2461, !2462}
!2462 = !DILocation(line: 301, column: 30, scope: !2456)
!2463 = !DILocation(line: 301, column: 63, scope: !2464)
!2464 = !DILexicalBlockFile(scope: !2465, file: !689, discriminator: 2)
!2465 = distinct !DILexicalBlock(scope: !2456, file: !689, line: 301, column: 33)
!2466 = !DILocation(line: 301, column: 68, scope: !2464)
!2467 = !DILocation(line: 301, column: 42, scope: !2464)
!2468 = !DILocation(line: 301, column: 39, scope: !2464)
!2469 = !DILocation(line: 301, column: 38, scope: !2464)
!2470 = !DILocation(line: 301, column: 54, scope: !2471)
!2471 = !DILexicalBlockFile(scope: !2472, file: !689, discriminator: 3)
!2472 = distinct !DILexicalBlock(scope: !2465, file: !689, line: 301, column: 38)
!2473 = !DILocation(line: 301, column: 47, scope: !2471)
!2474 = !DILocation(line: 301, column: 59, scope: !2475)
!2475 = !DILexicalBlockFile(scope: !2465, file: !689, discriminator: 4)
!2476 = !DILocation(line: 301, column: 94, scope: !2477)
!2477 = !DILexicalBlockFile(scope: !2456, file: !689, discriminator: 5)
!2478 = !DILocation(line: 301, column: 72, scope: !2477)
!2479 = !DILocation(line: 301, column: 81, scope: !2477)
!2480 = !DILocation(line: 301, column: 92, scope: !2477)
!2481 = !DILocation(line: 301, column: 101, scope: !2477)
!2482 = !DILocation(line: 302, column: 5, scope: !2192)
!2483 = distinct !{!2483, !2482}
!2484 = !DILocalVariable(name: "value", scope: !2485, file: !689, line: 302, type: !512)
!2485 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 302, column: 8)
!2486 = !DILocation(line: 302, column: 19, scope: !2485)
!2487 = !DILocation(line: 302, column: 19, scope: !2488)
!2488 = !DILexicalBlockFile(scope: !2485, file: !689, discriminator: 1)
!2489 = !DILocation(line: 302, column: 30, scope: !2488)
!2490 = distinct !{!2490, !2491}
!2491 = !DILocation(line: 302, column: 30, scope: !2485)
!2492 = !DILocation(line: 302, column: 63, scope: !2493)
!2493 = !DILexicalBlockFile(scope: !2494, file: !689, discriminator: 2)
!2494 = distinct !DILexicalBlock(scope: !2485, file: !689, line: 302, column: 33)
!2495 = !DILocation(line: 302, column: 68, scope: !2493)
!2496 = !DILocation(line: 302, column: 42, scope: !2493)
!2497 = !DILocation(line: 302, column: 39, scope: !2493)
!2498 = !DILocation(line: 302, column: 38, scope: !2493)
!2499 = !DILocation(line: 302, column: 54, scope: !2500)
!2500 = !DILexicalBlockFile(scope: !2501, file: !689, discriminator: 3)
!2501 = distinct !DILexicalBlock(scope: !2494, file: !689, line: 302, column: 38)
!2502 = !DILocation(line: 302, column: 47, scope: !2500)
!2503 = !DILocation(line: 302, column: 59, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !2494, file: !689, discriminator: 4)
!2505 = !DILocation(line: 302, column: 104, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2485, file: !689, discriminator: 5)
!2507 = !DILocation(line: 302, column: 72, scope: !2506)
!2508 = !DILocation(line: 302, column: 81, scope: !2506)
!2509 = !DILocation(line: 302, column: 102, scope: !2506)
!2510 = !DILocation(line: 302, column: 111, scope: !2506)
!2511 = !DILocation(line: 304, column: 9, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 304, column: 9)
!2513 = !DILocation(line: 304, column: 18, scope: !2512)
!2514 = !DILocation(line: 304, column: 29, scope: !2512)
!2515 = !DILocation(line: 304, column: 9, scope: !2192)
!2516 = !DILocation(line: 305, column: 9, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2512, file: !689, line: 304, column: 47)
!2518 = distinct !{!2518, !2516}
!2519 = !DILocation(line: 305, column: 50, scope: !2520)
!2520 = !DILexicalBlockFile(scope: !2521, file: !689, discriminator: 1)
!2521 = distinct !DILexicalBlock(scope: !2517, file: !689, line: 305, column: 12)
!2522 = !DILocation(line: 305, column: 55, scope: !2520)
!2523 = !DILocation(line: 305, column: 59, scope: !2520)
!2524 = !DILocation(line: 305, column: 21, scope: !2520)
!2525 = !DILocation(line: 305, column: 18, scope: !2520)
!2526 = !DILocation(line: 305, column: 74, scope: !2520)
!2527 = !DILocation(line: 305, column: 78, scope: !2520)
!2528 = !DILocation(line: 305, column: 90, scope: !2529)
!2529 = !DILexicalBlockFile(scope: !2530, file: !689, discriminator: 2)
!2530 = distinct !DILexicalBlock(scope: !2521, file: !689, line: 305, column: 74)
!2531 = !DILocation(line: 305, column: 83, scope: !2529)
!2532 = !DILocation(line: 305, column: 95, scope: !2533)
!2533 = !DILexicalBlockFile(scope: !2521, file: !689, discriminator: 3)
!2534 = !DILocation(line: 306, column: 9, scope: !2517)
!2535 = distinct !{!2535, !2534}
!2536 = !DILocation(line: 306, column: 47, scope: !2537)
!2537 = !DILexicalBlockFile(scope: !2538, file: !689, discriminator: 1)
!2538 = distinct !DILexicalBlock(scope: !2517, file: !689, line: 306, column: 12)
!2539 = !DILocation(line: 306, column: 52, scope: !2537)
!2540 = !DILocation(line: 306, column: 56, scope: !2537)
!2541 = !DILocation(line: 306, column: 65, scope: !2537)
!2542 = !DILocation(line: 306, column: 70, scope: !2537)
!2543 = !DILocation(line: 306, column: 21, scope: !2537)
!2544 = !DILocation(line: 306, column: 18, scope: !2537)
!2545 = !DILocation(line: 306, column: 85, scope: !2537)
!2546 = !DILocation(line: 306, column: 89, scope: !2537)
!2547 = !DILocation(line: 306, column: 101, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2549, file: !689, discriminator: 2)
!2549 = distinct !DILexicalBlock(scope: !2538, file: !689, line: 306, column: 85)
!2550 = !DILocation(line: 306, column: 94, scope: !2548)
!2551 = !DILocation(line: 306, column: 106, scope: !2552)
!2552 = !DILexicalBlockFile(scope: !2538, file: !689, discriminator: 3)
!2553 = !DILocation(line: 307, column: 9, scope: !2517)
!2554 = distinct !{!2554, !2553}
!2555 = !DILocation(line: 307, column: 45, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !2557, file: !689, discriminator: 1)
!2557 = distinct !DILexicalBlock(scope: !2517, file: !689, line: 307, column: 12)
!2558 = !DILocation(line: 307, column: 50, scope: !2556)
!2559 = !DILocation(line: 307, column: 54, scope: !2556)
!2560 = !DILocation(line: 307, column: 21, scope: !2556)
!2561 = !DILocation(line: 307, column: 18, scope: !2556)
!2562 = !DILocation(line: 307, column: 69, scope: !2556)
!2563 = !DILocation(line: 307, column: 73, scope: !2556)
!2564 = !DILocation(line: 307, column: 85, scope: !2565)
!2565 = !DILexicalBlockFile(scope: !2566, file: !689, discriminator: 2)
!2566 = distinct !DILexicalBlock(scope: !2557, file: !689, line: 307, column: 69)
!2567 = !DILocation(line: 307, column: 78, scope: !2565)
!2568 = !DILocation(line: 307, column: 90, scope: !2569)
!2569 = !DILexicalBlockFile(scope: !2557, file: !689, discriminator: 3)
!2570 = !DILocation(line: 308, column: 9, scope: !2517)
!2571 = distinct !{!2571, !2570}
!2572 = !DILocation(line: 308, column: 46, scope: !2573)
!2573 = !DILexicalBlockFile(scope: !2574, file: !689, discriminator: 1)
!2574 = distinct !DILexicalBlock(scope: !2517, file: !689, line: 308, column: 12)
!2575 = !DILocation(line: 308, column: 51, scope: !2573)
!2576 = !DILocation(line: 308, column: 55, scope: !2573)
!2577 = !DILocation(line: 308, column: 21, scope: !2573)
!2578 = !DILocation(line: 308, column: 18, scope: !2573)
!2579 = !DILocation(line: 308, column: 70, scope: !2573)
!2580 = !DILocation(line: 308, column: 74, scope: !2573)
!2581 = !DILocation(line: 308, column: 86, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2583, file: !689, discriminator: 2)
!2583 = distinct !DILexicalBlock(scope: !2574, file: !689, line: 308, column: 70)
!2584 = !DILocation(line: 308, column: 79, scope: !2582)
!2585 = !DILocation(line: 308, column: 91, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !2574, file: !689, discriminator: 3)
!2587 = !DILocation(line: 310, column: 9, scope: !2517)
!2588 = distinct !{!2588, !2587}
!2589 = !DILocation(line: 310, column: 14, scope: !2590)
!2590 = !DILexicalBlockFile(scope: !2591, file: !689, discriminator: 1)
!2591 = distinct !DILexicalBlock(scope: !2517, file: !689, line: 310, column: 12)
!2592 = !DILocation(line: 310, column: 23, scope: !2590)
!2593 = !DILocation(line: 310, column: 43, scope: !2590)
!2594 = !DILocation(line: 310, column: 51, scope: !2590)
!2595 = !DILocation(line: 312, column: 5, scope: !2517)
!2596 = !DILocation(line: 313, column: 14, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !689, line: 313, column: 14)
!2598 = distinct !DILexicalBlock(scope: !2512, file: !689, line: 312, column: 12)
!2599 = !DILocation(line: 313, column: 23, scope: !2597)
!2600 = !DILocation(line: 313, column: 34, scope: !2597)
!2601 = !DILocation(line: 313, column: 14, scope: !2598)
!2602 = !DILocation(line: 314, column: 14, scope: !2597)
!2603 = distinct !{!2603, !2602}
!2604 = !DILocalVariable(name: "value", scope: !2605, file: !689, line: 314, type: !512)
!2605 = distinct !DILexicalBlock(scope: !2597, file: !689, line: 314, column: 17)
!2606 = !DILocation(line: 314, column: 28, scope: !2605)
!2607 = !DILocation(line: 314, column: 28, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !2605, file: !689, discriminator: 1)
!2609 = !DILocation(line: 314, column: 39, scope: !2608)
!2610 = distinct !{!2610, !2611}
!2611 = !DILocation(line: 314, column: 39, scope: !2605)
!2612 = !DILocation(line: 314, column: 72, scope: !2613)
!2613 = !DILexicalBlockFile(scope: !2614, file: !689, discriminator: 2)
!2614 = distinct !DILexicalBlock(scope: !2605, file: !689, line: 314, column: 42)
!2615 = !DILocation(line: 314, column: 77, scope: !2613)
!2616 = !DILocation(line: 314, column: 51, scope: !2613)
!2617 = !DILocation(line: 314, column: 48, scope: !2613)
!2618 = !DILocation(line: 314, column: 47, scope: !2613)
!2619 = !DILocation(line: 314, column: 63, scope: !2620)
!2620 = !DILexicalBlockFile(scope: !2621, file: !689, discriminator: 3)
!2621 = distinct !DILexicalBlock(scope: !2614, file: !689, line: 314, column: 47)
!2622 = !DILocation(line: 314, column: 56, scope: !2620)
!2623 = !DILocation(line: 314, column: 68, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2614, file: !689, discriminator: 4)
!2625 = !DILocation(line: 314, column: 103, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2605, file: !689, discriminator: 5)
!2627 = !DILocation(line: 314, column: 81, scope: !2626)
!2628 = !DILocation(line: 314, column: 90, scope: !2626)
!2629 = !DILocation(line: 314, column: 101, scope: !2626)
!2630 = !DILocation(line: 314, column: 110, scope: !2626)
!2631 = !DILocation(line: 314, column: 110, scope: !2632)
!2632 = !DILexicalBlockFile(scope: !2605, file: !689, discriminator: 6)
!2633 = !DILocation(line: 316, column: 14, scope: !2597)
!2634 = distinct !{!2634, !2633}
!2635 = !DILocation(line: 316, column: 19, scope: !2636)
!2636 = !DILexicalBlockFile(scope: !2637, file: !689, discriminator: 1)
!2637 = distinct !DILexicalBlock(scope: !2597, file: !689, line: 316, column: 17)
!2638 = !DILocation(line: 316, column: 28, scope: !2636)
!2639 = !DILocation(line: 316, column: 39, scope: !2636)
!2640 = !DILocation(line: 316, column: 44, scope: !2636)
!2641 = !DILocation(line: 318, column: 14, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2598, file: !689, line: 318, column: 14)
!2643 = !DILocation(line: 318, column: 23, scope: !2642)
!2644 = !DILocation(line: 318, column: 44, scope: !2642)
!2645 = !DILocation(line: 318, column: 14, scope: !2598)
!2646 = !DILocation(line: 319, column: 14, scope: !2642)
!2647 = distinct !{!2647, !2646}
!2648 = !DILocalVariable(name: "value", scope: !2649, file: !689, line: 319, type: !512)
!2649 = distinct !DILexicalBlock(scope: !2642, file: !689, line: 319, column: 17)
!2650 = !DILocation(line: 319, column: 28, scope: !2649)
!2651 = !DILocation(line: 319, column: 28, scope: !2652)
!2652 = !DILexicalBlockFile(scope: !2649, file: !689, discriminator: 1)
!2653 = !DILocation(line: 319, column: 39, scope: !2652)
!2654 = distinct !{!2654, !2655}
!2655 = !DILocation(line: 319, column: 39, scope: !2649)
!2656 = !DILocation(line: 319, column: 72, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2658, file: !689, discriminator: 2)
!2658 = distinct !DILexicalBlock(scope: !2649, file: !689, line: 319, column: 42)
!2659 = !DILocation(line: 319, column: 77, scope: !2657)
!2660 = !DILocation(line: 319, column: 51, scope: !2657)
!2661 = !DILocation(line: 319, column: 48, scope: !2657)
!2662 = !DILocation(line: 319, column: 47, scope: !2657)
!2663 = !DILocation(line: 319, column: 63, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2665, file: !689, discriminator: 3)
!2665 = distinct !DILexicalBlock(scope: !2658, file: !689, line: 319, column: 47)
!2666 = !DILocation(line: 319, column: 56, scope: !2664)
!2667 = !DILocation(line: 319, column: 68, scope: !2668)
!2668 = !DILexicalBlockFile(scope: !2658, file: !689, discriminator: 4)
!2669 = !DILocation(line: 319, column: 112, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !2649, file: !689, discriminator: 5)
!2671 = !DILocation(line: 319, column: 81, scope: !2670)
!2672 = !DILocation(line: 319, column: 90, scope: !2670)
!2673 = !DILocation(line: 319, column: 110, scope: !2670)
!2674 = !DILocation(line: 319, column: 119, scope: !2670)
!2675 = !DILocation(line: 319, column: 119, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2649, file: !689, discriminator: 6)
!2677 = !DILocation(line: 321, column: 14, scope: !2642)
!2678 = distinct !{!2678, !2677}
!2679 = !DILocation(line: 321, column: 19, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2681, file: !689, discriminator: 1)
!2681 = distinct !DILexicalBlock(scope: !2642, file: !689, line: 321, column: 17)
!2682 = !DILocation(line: 321, column: 28, scope: !2680)
!2683 = !DILocation(line: 321, column: 48, scope: !2680)
!2684 = !DILocation(line: 321, column: 53, scope: !2680)
!2685 = !DILocation(line: 323, column: 14, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2598, file: !689, line: 323, column: 14)
!2687 = !DILocation(line: 323, column: 23, scope: !2686)
!2688 = !DILocation(line: 323, column: 34, scope: !2686)
!2689 = !DILocation(line: 323, column: 14, scope: !2598)
!2690 = !DILocation(line: 324, column: 14, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2686, file: !689, line: 323, column: 40)
!2692 = distinct !{!2692, !2690}
!2693 = !DILocation(line: 324, column: 55, scope: !2694)
!2694 = !DILexicalBlockFile(scope: !2695, file: !689, discriminator: 1)
!2695 = distinct !DILexicalBlock(scope: !2691, file: !689, line: 324, column: 17)
!2696 = !DILocation(line: 324, column: 60, scope: !2694)
!2697 = !DILocation(line: 324, column: 64, scope: !2694)
!2698 = !DILocation(line: 324, column: 26, scope: !2694)
!2699 = !DILocation(line: 324, column: 23, scope: !2694)
!2700 = !DILocation(line: 324, column: 79, scope: !2694)
!2701 = !DILocation(line: 324, column: 83, scope: !2694)
!2702 = !DILocation(line: 324, column: 95, scope: !2703)
!2703 = !DILexicalBlockFile(scope: !2704, file: !689, discriminator: 2)
!2704 = distinct !DILexicalBlock(scope: !2695, file: !689, line: 324, column: 79)
!2705 = !DILocation(line: 324, column: 88, scope: !2703)
!2706 = !DILocation(line: 324, column: 100, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !2695, file: !689, discriminator: 3)
!2708 = !DILocation(line: 326, column: 18, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2691, file: !689, line: 326, column: 18)
!2710 = !DILocation(line: 326, column: 23, scope: !2709)
!2711 = !DILocation(line: 326, column: 31, scope: !2709)
!2712 = !DILocation(line: 326, column: 18, scope: !2691)
!2713 = !DILocation(line: 327, column: 18, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2709, file: !689, line: 326, column: 36)
!2715 = distinct !{!2715, !2713}
!2716 = !DILocation(line: 327, column: 56, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2718, file: !689, discriminator: 1)
!2718 = distinct !DILexicalBlock(scope: !2714, file: !689, line: 327, column: 21)
!2719 = !DILocation(line: 327, column: 61, scope: !2717)
!2720 = !DILocation(line: 327, column: 65, scope: !2717)
!2721 = !DILocation(line: 327, column: 74, scope: !2717)
!2722 = !DILocation(line: 327, column: 79, scope: !2717)
!2723 = !DILocation(line: 327, column: 30, scope: !2717)
!2724 = !DILocation(line: 327, column: 27, scope: !2717)
!2725 = !DILocation(line: 327, column: 94, scope: !2717)
!2726 = !DILocation(line: 327, column: 98, scope: !2717)
!2727 = !DILocation(line: 327, column: 110, scope: !2728)
!2728 = !DILexicalBlockFile(scope: !2729, file: !689, discriminator: 2)
!2729 = distinct !DILexicalBlock(scope: !2718, file: !689, line: 327, column: 94)
!2730 = !DILocation(line: 327, column: 103, scope: !2728)
!2731 = !DILocation(line: 327, column: 115, scope: !2732)
!2732 = !DILexicalBlockFile(scope: !2718, file: !689, discriminator: 3)
!2733 = !DILocation(line: 328, column: 14, scope: !2714)
!2734 = !DILocation(line: 329, column: 18, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2709, file: !689, line: 328, column: 21)
!2736 = distinct !{!2736, !2734}
!2737 = !DILocation(line: 329, column: 23, scope: !2738)
!2738 = !DILexicalBlockFile(scope: !2739, file: !689, discriminator: 1)
!2739 = distinct !DILexicalBlock(scope: !2735, file: !689, line: 329, column: 21)
!2740 = !DILocation(line: 329, column: 32, scope: !2738)
!2741 = !DILocation(line: 329, column: 44, scope: !2738)
!2742 = !DILocation(line: 329, column: 49, scope: !2738)
!2743 = !DILocation(line: 330, column: 18, scope: !2735)
!2744 = distinct !{!2744, !2743}
!2745 = !DILocation(line: 330, column: 23, scope: !2746)
!2746 = !DILexicalBlockFile(scope: !2747, file: !689, discriminator: 1)
!2747 = distinct !DILexicalBlock(scope: !2735, file: !689, line: 330, column: 21)
!2748 = !DILocation(line: 330, column: 32, scope: !2746)
!2749 = !DILocation(line: 330, column: 46, scope: !2746)
!2750 = !DILocation(line: 330, column: 51, scope: !2746)
!2751 = !DILocation(line: 331, column: 18, scope: !2735)
!2752 = distinct !{!2752, !2751}
!2753 = !DILocation(line: 331, column: 23, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2755, file: !689, discriminator: 1)
!2755 = distinct !DILexicalBlock(scope: !2735, file: !689, line: 331, column: 21)
!2756 = !DILocation(line: 331, column: 32, scope: !2754)
!2757 = !DILocation(line: 331, column: 46, scope: !2754)
!2758 = !DILocation(line: 331, column: 51, scope: !2754)
!2759 = !DILocation(line: 332, column: 18, scope: !2735)
!2760 = !DILocation(line: 332, column: 23, scope: !2735)
!2761 = !DILocation(line: 332, column: 33, scope: !2735)
!2762 = !DILocation(line: 334, column: 39, scope: !2735)
!2763 = !DILocation(line: 334, column: 48, scope: !2735)
!2764 = !DILocation(line: 334, column: 18, scope: !2735)
!2765 = !DILocation(line: 334, column: 23, scope: !2735)
!2766 = !DILocation(line: 334, column: 37, scope: !2735)
!2767 = !DILocation(line: 335, column: 39, scope: !2735)
!2768 = !DILocation(line: 335, column: 48, scope: !2735)
!2769 = !DILocation(line: 335, column: 18, scope: !2735)
!2770 = !DILocation(line: 335, column: 23, scope: !2735)
!2771 = !DILocation(line: 335, column: 37, scope: !2735)
!2772 = !DILocation(line: 338, column: 14, scope: !2691)
!2773 = distinct !{!2773, !2772}
!2774 = !DILocalVariable(name: "value", scope: !2775, file: !689, line: 338, type: !512)
!2775 = distinct !DILexicalBlock(scope: !2691, file: !689, line: 338, column: 17)
!2776 = !DILocation(line: 338, column: 28, scope: !2775)
!2777 = !DILocation(line: 338, column: 28, scope: !2778)
!2778 = !DILexicalBlockFile(scope: !2775, file: !689, discriminator: 1)
!2779 = !DILocation(line: 338, column: 39, scope: !2778)
!2780 = distinct !{!2780, !2781}
!2781 = !DILocation(line: 338, column: 39, scope: !2775)
!2782 = !DILocation(line: 338, column: 72, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2784, file: !689, discriminator: 2)
!2784 = distinct !DILexicalBlock(scope: !2775, file: !689, line: 338, column: 42)
!2785 = !DILocation(line: 338, column: 77, scope: !2783)
!2786 = !DILocation(line: 338, column: 51, scope: !2783)
!2787 = !DILocation(line: 338, column: 48, scope: !2783)
!2788 = !DILocation(line: 338, column: 47, scope: !2783)
!2789 = !DILocation(line: 338, column: 63, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2791, file: !689, discriminator: 3)
!2791 = distinct !DILexicalBlock(scope: !2784, file: !689, line: 338, column: 47)
!2792 = !DILocation(line: 338, column: 56, scope: !2790)
!2793 = !DILocation(line: 338, column: 68, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2784, file: !689, discriminator: 4)
!2795 = !DILocation(line: 338, column: 112, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !2775, file: !689, discriminator: 5)
!2797 = !DILocation(line: 338, column: 81, scope: !2796)
!2798 = !DILocation(line: 338, column: 90, scope: !2796)
!2799 = !DILocation(line: 338, column: 110, scope: !2796)
!2800 = !DILocation(line: 338, column: 119, scope: !2796)
!2801 = !DILocation(line: 340, column: 14, scope: !2691)
!2802 = distinct !{!2802, !2801}
!2803 = !DILocation(line: 340, column: 50, scope: !2804)
!2804 = !DILexicalBlockFile(scope: !2805, file: !689, discriminator: 1)
!2805 = distinct !DILexicalBlock(scope: !2691, file: !689, line: 340, column: 17)
!2806 = !DILocation(line: 340, column: 55, scope: !2804)
!2807 = !DILocation(line: 340, column: 59, scope: !2804)
!2808 = !DILocation(line: 340, column: 26, scope: !2804)
!2809 = !DILocation(line: 340, column: 23, scope: !2804)
!2810 = !DILocation(line: 340, column: 74, scope: !2804)
!2811 = !DILocation(line: 340, column: 78, scope: !2804)
!2812 = !DILocation(line: 340, column: 90, scope: !2813)
!2813 = !DILexicalBlockFile(scope: !2814, file: !689, discriminator: 2)
!2814 = distinct !DILexicalBlock(scope: !2805, file: !689, line: 340, column: 74)
!2815 = !DILocation(line: 340, column: 83, scope: !2813)
!2816 = !DILocation(line: 340, column: 95, scope: !2817)
!2817 = !DILexicalBlockFile(scope: !2805, file: !689, discriminator: 3)
!2818 = !DILocation(line: 341, column: 14, scope: !2691)
!2819 = distinct !{!2819, !2818}
!2820 = !DILocation(line: 341, column: 51, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2822, file: !689, discriminator: 1)
!2822 = distinct !DILexicalBlock(scope: !2691, file: !689, line: 341, column: 17)
!2823 = !DILocation(line: 341, column: 56, scope: !2821)
!2824 = !DILocation(line: 341, column: 60, scope: !2821)
!2825 = !DILocation(line: 341, column: 26, scope: !2821)
!2826 = !DILocation(line: 341, column: 23, scope: !2821)
!2827 = !DILocation(line: 341, column: 75, scope: !2821)
!2828 = !DILocation(line: 341, column: 79, scope: !2821)
!2829 = !DILocation(line: 341, column: 91, scope: !2830)
!2830 = !DILexicalBlockFile(scope: !2831, file: !689, discriminator: 2)
!2831 = distinct !DILexicalBlock(scope: !2822, file: !689, line: 341, column: 75)
!2832 = !DILocation(line: 341, column: 84, scope: !2830)
!2833 = !DILocation(line: 341, column: 96, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !2822, file: !689, discriminator: 3)
!2835 = !DILocation(line: 342, column: 10, scope: !2691)
!2836 = !DILocation(line: 343, column: 14, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2686, file: !689, line: 342, column: 17)
!2838 = distinct !{!2838, !2836}
!2839 = !DILocalVariable(name: "value", scope: !2840, file: !689, line: 343, type: !512)
!2840 = distinct !DILexicalBlock(scope: !2837, file: !689, line: 343, column: 17)
!2841 = !DILocation(line: 343, column: 28, scope: !2840)
!2842 = !DILocation(line: 343, column: 28, scope: !2843)
!2843 = !DILexicalBlockFile(scope: !2840, file: !689, discriminator: 1)
!2844 = !DILocation(line: 343, column: 39, scope: !2843)
!2845 = distinct !{!2845, !2846}
!2846 = !DILocation(line: 343, column: 39, scope: !2840)
!2847 = !DILocation(line: 343, column: 72, scope: !2848)
!2848 = !DILexicalBlockFile(scope: !2849, file: !689, discriminator: 2)
!2849 = distinct !DILexicalBlock(scope: !2840, file: !689, line: 343, column: 42)
!2850 = !DILocation(line: 343, column: 77, scope: !2848)
!2851 = !DILocation(line: 343, column: 51, scope: !2848)
!2852 = !DILocation(line: 343, column: 48, scope: !2848)
!2853 = !DILocation(line: 343, column: 47, scope: !2848)
!2854 = !DILocation(line: 343, column: 63, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !2856, file: !689, discriminator: 3)
!2856 = distinct !DILexicalBlock(scope: !2849, file: !689, line: 343, column: 47)
!2857 = !DILocation(line: 343, column: 56, scope: !2855)
!2858 = !DILocation(line: 343, column: 68, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !2849, file: !689, discriminator: 4)
!2860 = !DILocation(line: 343, column: 112, scope: !2861)
!2861 = !DILexicalBlockFile(scope: !2840, file: !689, discriminator: 5)
!2862 = !DILocation(line: 343, column: 81, scope: !2861)
!2863 = !DILocation(line: 343, column: 90, scope: !2861)
!2864 = !DILocation(line: 343, column: 110, scope: !2861)
!2865 = !DILocation(line: 343, column: 119, scope: !2861)
!2866 = !DILocation(line: 345, column: 21, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2837, file: !689, line: 345, column: 14)
!2868 = !DILocation(line: 345, column: 19, scope: !2867)
!2869 = !DILocation(line: 345, column: 26, scope: !2870)
!2870 = !DILexicalBlockFile(scope: !2871, file: !689, discriminator: 1)
!2871 = distinct !DILexicalBlock(scope: !2867, file: !689, line: 345, column: 14)
!2872 = !DILocation(line: 345, column: 28, scope: !2870)
!2873 = !DILocation(line: 345, column: 14, scope: !2870)
!2874 = !DILocation(line: 346, column: 18, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2871, file: !689, line: 345, column: 55)
!2876 = distinct !{!2876, !2874}
!2877 = !DILocalVariable(name: "value", scope: !2878, file: !689, line: 346, type: !512)
!2878 = distinct !DILexicalBlock(scope: !2875, file: !689, line: 346, column: 21)
!2879 = !DILocation(line: 346, column: 32, scope: !2878)
!2880 = !DILocation(line: 346, column: 32, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2878, file: !689, discriminator: 1)
!2882 = !DILocation(line: 346, column: 43, scope: !2881)
!2883 = distinct !{!2883, !2884}
!2884 = !DILocation(line: 346, column: 43, scope: !2878)
!2885 = !DILocation(line: 346, column: 76, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2887, file: !689, discriminator: 2)
!2887 = distinct !DILexicalBlock(scope: !2878, file: !689, line: 346, column: 46)
!2888 = !DILocation(line: 346, column: 81, scope: !2886)
!2889 = !DILocation(line: 346, column: 130, scope: !2886)
!2890 = !DILocation(line: 346, column: 135, scope: !2886)
!2891 = !DILocation(line: 346, column: 117, scope: !2886)
!2892 = !DILocation(line: 346, column: 55, scope: !2886)
!2893 = !DILocation(line: 346, column: 52, scope: !2886)
!2894 = !DILocation(line: 346, column: 51, scope: !2886)
!2895 = !DILocation(line: 346, column: 67, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2897, file: !689, discriminator: 3)
!2897 = distinct !DILexicalBlock(scope: !2887, file: !689, line: 346, column: 51)
!2898 = !DILocation(line: 346, column: 60, scope: !2896)
!2899 = !DILocation(line: 346, column: 72, scope: !2900)
!2900 = !DILexicalBlockFile(scope: !2887, file: !689, discriminator: 4)
!2901 = !DILocation(line: 346, column: 113, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2878, file: !689, discriminator: 5)
!2903 = !DILocation(line: 346, column: 108, scope: !2902)
!2904 = !DILocation(line: 346, column: 85, scope: !2902)
!2905 = !DILocation(line: 346, column: 94, scope: !2902)
!2906 = !DILocation(line: 346, column: 111, scope: !2902)
!2907 = !DILocation(line: 346, column: 120, scope: !2902)
!2908 = !DILocation(line: 347, column: 18, scope: !2875)
!2909 = distinct !{!2909, !2908}
!2910 = !DILocalVariable(name: "value", scope: !2911, file: !689, line: 347, type: !512)
!2911 = distinct !DILexicalBlock(scope: !2875, file: !689, line: 347, column: 21)
!2912 = !DILocation(line: 347, column: 32, scope: !2911)
!2913 = !DILocation(line: 347, column: 32, scope: !2914)
!2914 = !DILexicalBlockFile(scope: !2911, file: !689, discriminator: 1)
!2915 = !DILocation(line: 347, column: 43, scope: !2914)
!2916 = distinct !{!2916, !2917}
!2917 = !DILocation(line: 347, column: 43, scope: !2911)
!2918 = !DILocation(line: 347, column: 76, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2920, file: !689, discriminator: 2)
!2920 = distinct !DILexicalBlock(scope: !2911, file: !689, line: 347, column: 46)
!2921 = !DILocation(line: 347, column: 81, scope: !2919)
!2922 = !DILocation(line: 347, column: 153, scope: !2919)
!2923 = !DILocation(line: 347, column: 175, scope: !2919)
!2924 = !DILocation(line: 347, column: 173, scope: !2919)
!2925 = !DILocation(line: 347, column: 140, scope: !2919)
!2926 = !DILocation(line: 347, column: 55, scope: !2919)
!2927 = !DILocation(line: 347, column: 52, scope: !2919)
!2928 = !DILocation(line: 347, column: 51, scope: !2919)
!2929 = !DILocation(line: 347, column: 67, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2931, file: !689, discriminator: 3)
!2931 = distinct !DILexicalBlock(scope: !2920, file: !689, line: 347, column: 51)
!2932 = !DILocation(line: 347, column: 60, scope: !2930)
!2933 = !DILocation(line: 347, column: 72, scope: !2934)
!2934 = !DILexicalBlockFile(scope: !2920, file: !689, discriminator: 4)
!2935 = !DILocation(line: 347, column: 136, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2911, file: !689, discriminator: 5)
!2937 = !DILocation(line: 347, column: 131, scope: !2936)
!2938 = !DILocation(line: 347, column: 129, scope: !2936)
!2939 = !DILocation(line: 347, column: 85, scope: !2936)
!2940 = !DILocation(line: 347, column: 94, scope: !2936)
!2941 = !DILocation(line: 347, column: 134, scope: !2936)
!2942 = !DILocation(line: 347, column: 143, scope: !2936)
!2943 = !DILocation(line: 349, column: 14, scope: !2875)
!2944 = !DILocation(line: 345, column: 51, scope: !2945)
!2945 = !DILexicalBlockFile(scope: !2871, file: !689, discriminator: 2)
!2946 = !DILocation(line: 345, column: 14, scope: !2945)
!2947 = distinct !{!2947, !2948}
!2948 = !DILocation(line: 345, column: 14, scope: !2837)
!2949 = !DILocation(line: 351, column: 14, scope: !2837)
!2950 = distinct !{!2950, !2949}
!2951 = !DILocation(line: 351, column: 60, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2953, file: !689, discriminator: 1)
!2953 = distinct !DILexicalBlock(scope: !2837, file: !689, line: 351, column: 17)
!2954 = !DILocation(line: 351, column: 65, scope: !2952)
!2955 = !DILocation(line: 351, column: 69, scope: !2952)
!2956 = !DILocation(line: 351, column: 26, scope: !2952)
!2957 = !DILocation(line: 351, column: 23, scope: !2952)
!2958 = !DILocation(line: 351, column: 84, scope: !2952)
!2959 = !DILocation(line: 351, column: 88, scope: !2952)
!2960 = !DILocation(line: 351, column: 100, scope: !2961)
!2961 = !DILexicalBlockFile(scope: !2962, file: !689, discriminator: 2)
!2962 = distinct !DILexicalBlock(scope: !2953, file: !689, line: 351, column: 84)
!2963 = !DILocation(line: 351, column: 93, scope: !2961)
!2964 = !DILocation(line: 351, column: 105, scope: !2965)
!2965 = !DILexicalBlockFile(scope: !2953, file: !689, discriminator: 3)
!2966 = !DILocation(line: 352, column: 14, scope: !2837)
!2967 = distinct !{!2967, !2966}
!2968 = !DILocalVariable(name: "value", scope: !2969, file: !689, line: 352, type: !512)
!2969 = distinct !DILexicalBlock(scope: !2837, file: !689, line: 352, column: 17)
!2970 = !DILocation(line: 352, column: 28, scope: !2969)
!2971 = !DILocation(line: 352, column: 28, scope: !2972)
!2972 = !DILexicalBlockFile(scope: !2969, file: !689, discriminator: 1)
!2973 = !DILocation(line: 352, column: 39, scope: !2972)
!2974 = distinct !{!2974, !2975}
!2975 = !DILocation(line: 352, column: 39, scope: !2969)
!2976 = !DILocation(line: 352, column: 72, scope: !2977)
!2977 = !DILexicalBlockFile(scope: !2978, file: !689, discriminator: 2)
!2978 = distinct !DILexicalBlock(scope: !2969, file: !689, line: 352, column: 42)
!2979 = !DILocation(line: 352, column: 77, scope: !2977)
!2980 = !DILocation(line: 352, column: 51, scope: !2977)
!2981 = !DILocation(line: 352, column: 48, scope: !2977)
!2982 = !DILocation(line: 352, column: 47, scope: !2977)
!2983 = !DILocation(line: 352, column: 63, scope: !2984)
!2984 = !DILexicalBlockFile(scope: !2985, file: !689, discriminator: 3)
!2985 = distinct !DILexicalBlock(scope: !2978, file: !689, line: 352, column: 47)
!2986 = !DILocation(line: 352, column: 56, scope: !2984)
!2987 = !DILocation(line: 352, column: 68, scope: !2988)
!2988 = !DILexicalBlockFile(scope: !2978, file: !689, discriminator: 4)
!2989 = !DILocation(line: 352, column: 116, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2969, file: !689, discriminator: 5)
!2991 = !DILocation(line: 352, column: 81, scope: !2990)
!2992 = !DILocation(line: 352, column: 90, scope: !2990)
!2993 = !DILocation(line: 352, column: 114, scope: !2990)
!2994 = !DILocation(line: 352, column: 123, scope: !2990)
!2995 = !DILocation(line: 353, column: 14, scope: !2837)
!2996 = distinct !{!2996, !2995}
!2997 = !DILocation(line: 353, column: 60, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !2999, file: !689, discriminator: 1)
!2999 = distinct !DILexicalBlock(scope: !2837, file: !689, line: 353, column: 17)
!3000 = !DILocation(line: 353, column: 65, scope: !2998)
!3001 = !DILocation(line: 353, column: 69, scope: !2998)
!3002 = !DILocation(line: 353, column: 26, scope: !2998)
!3003 = !DILocation(line: 353, column: 23, scope: !2998)
!3004 = !DILocation(line: 353, column: 84, scope: !2998)
!3005 = !DILocation(line: 353, column: 88, scope: !2998)
!3006 = !DILocation(line: 353, column: 100, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !3008, file: !689, discriminator: 2)
!3008 = distinct !DILexicalBlock(scope: !2999, file: !689, line: 353, column: 84)
!3009 = !DILocation(line: 353, column: 93, scope: !3007)
!3010 = !DILocation(line: 353, column: 105, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !2999, file: !689, discriminator: 3)
!3012 = !DILocation(line: 357, column: 9, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 357, column: 9)
!3014 = !DILocation(line: 357, column: 18, scope: !3013)
!3015 = !DILocation(line: 357, column: 39, scope: !3013)
!3016 = !DILocation(line: 357, column: 9, scope: !2192)
!3017 = !DILocation(line: 358, column: 9, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3013, file: !689, line: 357, column: 45)
!3019 = distinct !{!3019, !3017}
!3020 = !DILocalVariable(name: "value", scope: !3021, file: !689, line: 358, type: !512)
!3021 = distinct !DILexicalBlock(scope: !3018, file: !689, line: 358, column: 12)
!3022 = !DILocation(line: 358, column: 23, scope: !3021)
!3023 = !DILocation(line: 358, column: 23, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3021, file: !689, discriminator: 1)
!3025 = !DILocation(line: 358, column: 34, scope: !3024)
!3026 = distinct !{!3026, !3027}
!3027 = !DILocation(line: 358, column: 34, scope: !3021)
!3028 = !DILocation(line: 358, column: 67, scope: !3029)
!3029 = !DILexicalBlockFile(scope: !3030, file: !689, discriminator: 2)
!3030 = distinct !DILexicalBlock(scope: !3021, file: !689, line: 358, column: 37)
!3031 = !DILocation(line: 358, column: 72, scope: !3029)
!3032 = !DILocation(line: 358, column: 46, scope: !3029)
!3033 = !DILocation(line: 358, column: 43, scope: !3029)
!3034 = !DILocation(line: 358, column: 42, scope: !3029)
!3035 = !DILocation(line: 358, column: 58, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3037, file: !689, discriminator: 3)
!3037 = distinct !DILexicalBlock(scope: !3030, file: !689, line: 358, column: 42)
!3038 = !DILocation(line: 358, column: 51, scope: !3036)
!3039 = !DILocation(line: 358, column: 63, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3030, file: !689, discriminator: 4)
!3041 = !DILocation(line: 358, column: 109, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !3021, file: !689, discriminator: 5)
!3043 = !DILocation(line: 358, column: 76, scope: !3042)
!3044 = !DILocation(line: 358, column: 85, scope: !3042)
!3045 = !DILocation(line: 358, column: 107, scope: !3042)
!3046 = !DILocation(line: 358, column: 116, scope: !3042)
!3047 = !DILocation(line: 359, column: 9, scope: !3018)
!3048 = distinct !{!3048, !3047}
!3049 = !DILocalVariable(name: "value", scope: !3050, file: !689, line: 359, type: !512)
!3050 = distinct !DILexicalBlock(scope: !3018, file: !689, line: 359, column: 12)
!3051 = !DILocation(line: 359, column: 23, scope: !3050)
!3052 = !DILocation(line: 359, column: 23, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3050, file: !689, discriminator: 1)
!3054 = !DILocation(line: 359, column: 34, scope: !3053)
!3055 = distinct !{!3055, !3056}
!3056 = !DILocation(line: 359, column: 34, scope: !3050)
!3057 = !DILocation(line: 359, column: 67, scope: !3058)
!3058 = !DILexicalBlockFile(scope: !3059, file: !689, discriminator: 2)
!3059 = distinct !DILexicalBlock(scope: !3050, file: !689, line: 359, column: 37)
!3060 = !DILocation(line: 359, column: 72, scope: !3058)
!3061 = !DILocation(line: 359, column: 46, scope: !3058)
!3062 = !DILocation(line: 359, column: 43, scope: !3058)
!3063 = !DILocation(line: 359, column: 42, scope: !3058)
!3064 = !DILocation(line: 359, column: 58, scope: !3065)
!3065 = !DILexicalBlockFile(scope: !3066, file: !689, discriminator: 3)
!3066 = distinct !DILexicalBlock(scope: !3059, file: !689, line: 359, column: 42)
!3067 = !DILocation(line: 359, column: 51, scope: !3065)
!3068 = !DILocation(line: 359, column: 63, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !3059, file: !689, discriminator: 4)
!3070 = !DILocation(line: 359, column: 116, scope: !3071)
!3071 = !DILexicalBlockFile(scope: !3050, file: !689, discriminator: 5)
!3072 = !DILocation(line: 359, column: 76, scope: !3071)
!3073 = !DILocation(line: 359, column: 85, scope: !3071)
!3074 = !DILocation(line: 359, column: 114, scope: !3071)
!3075 = !DILocation(line: 359, column: 123, scope: !3071)
!3076 = !DILocation(line: 360, column: 5, scope: !3018)
!3077 = !DILocation(line: 361, column: 9, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3013, file: !689, line: 360, column: 12)
!3079 = distinct !{!3079, !3077}
!3080 = !DILocation(line: 361, column: 14, scope: !3081)
!3081 = !DILexicalBlockFile(scope: !3082, file: !689, discriminator: 1)
!3082 = distinct !DILexicalBlock(scope: !3078, file: !689, line: 361, column: 12)
!3083 = !DILocation(line: 361, column: 23, scope: !3081)
!3084 = !DILocation(line: 361, column: 45, scope: !3081)
!3085 = !DILocation(line: 361, column: 50, scope: !3081)
!3086 = !DILocation(line: 362, column: 9, scope: !3078)
!3087 = distinct !{!3087, !3086}
!3088 = !DILocation(line: 362, column: 14, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3090, file: !689, discriminator: 1)
!3090 = distinct !DILexicalBlock(scope: !3078, file: !689, line: 362, column: 12)
!3091 = !DILocation(line: 362, column: 23, scope: !3089)
!3092 = !DILocation(line: 362, column: 52, scope: !3089)
!3093 = !DILocation(line: 362, column: 57, scope: !3089)
!3094 = !DILocation(line: 365, column: 5, scope: !2192)
!3095 = distinct !{!3095, !3094}
!3096 = !DILocalVariable(name: "value", scope: !3097, file: !689, line: 365, type: !512)
!3097 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 365, column: 8)
!3098 = !DILocation(line: 365, column: 19, scope: !3097)
!3099 = !DILocation(line: 365, column: 19, scope: !3100)
!3100 = !DILexicalBlockFile(scope: !3097, file: !689, discriminator: 1)
!3101 = !DILocation(line: 365, column: 30, scope: !3100)
!3102 = distinct !{!3102, !3103}
!3103 = !DILocation(line: 365, column: 30, scope: !3097)
!3104 = !DILocation(line: 365, column: 63, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !3106, file: !689, discriminator: 2)
!3106 = distinct !DILexicalBlock(scope: !3097, file: !689, line: 365, column: 33)
!3107 = !DILocation(line: 365, column: 68, scope: !3105)
!3108 = !DILocation(line: 365, column: 42, scope: !3105)
!3109 = !DILocation(line: 365, column: 39, scope: !3105)
!3110 = !DILocation(line: 365, column: 38, scope: !3105)
!3111 = !DILocation(line: 365, column: 54, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !3113, file: !689, discriminator: 3)
!3113 = distinct !DILexicalBlock(scope: !3106, file: !689, line: 365, column: 38)
!3114 = !DILocation(line: 365, column: 47, scope: !3112)
!3115 = !DILocation(line: 365, column: 59, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3106, file: !689, discriminator: 4)
!3117 = !DILocation(line: 365, column: 101, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3097, file: !689, discriminator: 5)
!3119 = !DILocation(line: 365, column: 72, scope: !3118)
!3120 = !DILocation(line: 365, column: 81, scope: !3118)
!3121 = !DILocation(line: 365, column: 99, scope: !3118)
!3122 = !DILocation(line: 365, column: 108, scope: !3118)
!3123 = !DILocation(line: 367, column: 5, scope: !2192)
!3124 = distinct !{!3124, !3123}
!3125 = !DILocation(line: 367, column: 49, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !3127, file: !689, discriminator: 1)
!3127 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 367, column: 8)
!3128 = !DILocation(line: 367, column: 54, scope: !3126)
!3129 = !DILocation(line: 367, column: 58, scope: !3126)
!3130 = !DILocation(line: 367, column: 17, scope: !3126)
!3131 = !DILocation(line: 367, column: 14, scope: !3126)
!3132 = !DILocation(line: 367, column: 73, scope: !3126)
!3133 = !DILocation(line: 367, column: 77, scope: !3126)
!3134 = !DILocation(line: 367, column: 89, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !3136, file: !689, discriminator: 2)
!3136 = distinct !DILexicalBlock(scope: !3127, file: !689, line: 367, column: 73)
!3137 = !DILocation(line: 367, column: 82, scope: !3135)
!3138 = !DILocation(line: 367, column: 94, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3127, file: !689, discriminator: 3)
!3140 = !DILocation(line: 368, column: 5, scope: !2192)
!3141 = distinct !{!3141, !3140}
!3142 = !DILocation(line: 368, column: 50, scope: !3143)
!3143 = !DILexicalBlockFile(scope: !3144, file: !689, discriminator: 1)
!3144 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 368, column: 8)
!3145 = !DILocation(line: 368, column: 55, scope: !3143)
!3146 = !DILocation(line: 368, column: 59, scope: !3143)
!3147 = !DILocation(line: 368, column: 17, scope: !3143)
!3148 = !DILocation(line: 368, column: 14, scope: !3143)
!3149 = !DILocation(line: 368, column: 74, scope: !3143)
!3150 = !DILocation(line: 368, column: 78, scope: !3143)
!3151 = !DILocation(line: 368, column: 90, scope: !3152)
!3152 = !DILexicalBlockFile(scope: !3153, file: !689, discriminator: 2)
!3153 = distinct !DILexicalBlock(scope: !3144, file: !689, line: 368, column: 74)
!3154 = !DILocation(line: 368, column: 83, scope: !3152)
!3155 = !DILocation(line: 368, column: 95, scope: !3156)
!3156 = !DILexicalBlockFile(scope: !3144, file: !689, discriminator: 3)
!3157 = !DILocation(line: 369, column: 5, scope: !2192)
!3158 = distinct !{!3158, !3157}
!3159 = !DILocation(line: 369, column: 50, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !3161, file: !689, discriminator: 1)
!3161 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 369, column: 8)
!3162 = !DILocation(line: 369, column: 55, scope: !3160)
!3163 = !DILocation(line: 369, column: 59, scope: !3160)
!3164 = !DILocation(line: 369, column: 17, scope: !3160)
!3165 = !DILocation(line: 369, column: 14, scope: !3160)
!3166 = !DILocation(line: 369, column: 74, scope: !3160)
!3167 = !DILocation(line: 369, column: 78, scope: !3160)
!3168 = !DILocation(line: 369, column: 90, scope: !3169)
!3169 = !DILexicalBlockFile(scope: !3170, file: !689, discriminator: 2)
!3170 = distinct !DILexicalBlock(scope: !3161, file: !689, line: 369, column: 74)
!3171 = !DILocation(line: 369, column: 83, scope: !3169)
!3172 = !DILocation(line: 369, column: 95, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3161, file: !689, discriminator: 3)
!3174 = !DILocation(line: 370, column: 5, scope: !2192)
!3175 = distinct !{!3175, !3174}
!3176 = !DILocation(line: 370, column: 40, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3178, file: !689, discriminator: 1)
!3178 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 370, column: 8)
!3179 = !DILocation(line: 370, column: 45, scope: !3177)
!3180 = !DILocation(line: 370, column: 49, scope: !3177)
!3181 = !DILocation(line: 370, column: 17, scope: !3177)
!3182 = !DILocation(line: 370, column: 14, scope: !3177)
!3183 = !DILocation(line: 370, column: 64, scope: !3177)
!3184 = !DILocation(line: 370, column: 68, scope: !3177)
!3185 = !DILocation(line: 370, column: 80, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !3187, file: !689, discriminator: 2)
!3187 = distinct !DILexicalBlock(scope: !3178, file: !689, line: 370, column: 64)
!3188 = !DILocation(line: 370, column: 73, scope: !3186)
!3189 = !DILocation(line: 370, column: 85, scope: !3190)
!3190 = !DILexicalBlockFile(scope: !3178, file: !689, discriminator: 3)
!3191 = !DILocation(line: 372, column: 5, scope: !2192)
!3192 = distinct !{!3192, !3191}
!3193 = !DILocalVariable(name: "value", scope: !3194, file: !689, line: 372, type: !512)
!3194 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 372, column: 8)
!3195 = !DILocation(line: 372, column: 19, scope: !3194)
!3196 = !DILocation(line: 372, column: 19, scope: !3197)
!3197 = !DILexicalBlockFile(scope: !3194, file: !689, discriminator: 1)
!3198 = !DILocation(line: 372, column: 30, scope: !3197)
!3199 = distinct !{!3199, !3200}
!3200 = !DILocation(line: 372, column: 30, scope: !3194)
!3201 = !DILocation(line: 372, column: 63, scope: !3202)
!3202 = !DILexicalBlockFile(scope: !3203, file: !689, discriminator: 2)
!3203 = distinct !DILexicalBlock(scope: !3194, file: !689, line: 372, column: 33)
!3204 = !DILocation(line: 372, column: 68, scope: !3202)
!3205 = !DILocation(line: 372, column: 42, scope: !3202)
!3206 = !DILocation(line: 372, column: 39, scope: !3202)
!3207 = !DILocation(line: 372, column: 43, scope: !3202)
!3208 = !DILocation(line: 372, column: 55, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !3210, file: !689, discriminator: 3)
!3210 = distinct !DILexicalBlock(scope: !3203, file: !689, line: 372, column: 39)
!3211 = !DILocation(line: 372, column: 48, scope: !3209)
!3212 = !DILocation(line: 372, column: 60, scope: !3213)
!3213 = !DILexicalBlockFile(scope: !3203, file: !689, discriminator: 4)
!3214 = !DILocation(line: 372, column: 105, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3194, file: !689, discriminator: 5)
!3216 = !DILocation(line: 372, column: 73, scope: !3215)
!3217 = !DILocation(line: 372, column: 82, scope: !3215)
!3218 = !DILocation(line: 372, column: 103, scope: !3215)
!3219 = !DILocation(line: 372, column: 112, scope: !3215)
!3220 = !DILocation(line: 374, column: 12, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !2192, file: !689, line: 374, column: 5)
!3222 = !DILocation(line: 374, column: 10, scope: !3221)
!3223 = !DILocation(line: 374, column: 17, scope: !3224)
!3224 = !DILexicalBlockFile(scope: !3225, file: !689, discriminator: 1)
!3225 = distinct !DILexicalBlock(scope: !3221, file: !689, line: 374, column: 5)
!3226 = !DILocation(line: 374, column: 19, scope: !3224)
!3227 = !DILocation(line: 374, column: 5, scope: !3224)
!3228 = !DILocation(line: 375, column: 13, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !689, line: 375, column: 13)
!3230 = distinct !DILexicalBlock(scope: !3225, file: !689, line: 374, column: 46)
!3231 = !DILocation(line: 375, column: 22, scope: !3229)
!3232 = !DILocation(line: 375, column: 50, scope: !3229)
!3233 = !DILocation(line: 375, column: 47, scope: !3229)
!3234 = !DILocation(line: 375, column: 42, scope: !3229)
!3235 = !DILocation(line: 375, column: 13, scope: !3230)
!3236 = !DILocation(line: 376, column: 22, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3229, file: !689, line: 375, column: 54)
!3238 = !DILocation(line: 376, column: 13, scope: !3237)
!3239 = !DILocation(line: 376, column: 18, scope: !3237)
!3240 = !DILocation(line: 376, column: 52, scope: !3237)
!3241 = !DILocation(line: 377, column: 32, scope: !3237)
!3242 = !DILocation(line: 377, column: 37, scope: !3237)
!3243 = !DILocation(line: 378, column: 33, scope: !3237)
!3244 = !DILocation(line: 378, column: 38, scope: !3237)
!3245 = !DILocation(line: 379, column: 34, scope: !3237)
!3246 = !DILocation(line: 379, column: 39, scope: !3237)
!3247 = !DILocation(line: 380, column: 34, scope: !3237)
!3248 = !DILocation(line: 380, column: 39, scope: !3237)
!3249 = !DILocation(line: 381, column: 30, scope: !3237)
!3250 = !DILocation(line: 381, column: 35, scope: !3237)
!3251 = !DILocation(line: 376, column: 27, scope: !3237)
!3252 = !DILocation(line: 383, column: 9, scope: !3237)
!3253 = !DILocation(line: 384, column: 5, scope: !3230)
!3254 = !DILocation(line: 374, column: 42, scope: !3255)
!3255 = !DILexicalBlockFile(scope: !3225, file: !689, discriminator: 2)
!3256 = !DILocation(line: 374, column: 5, scope: !3255)
!3257 = distinct !{!3257, !3258}
!3258 = !DILocation(line: 374, column: 5, scope: !2192)
!3259 = !DILocation(line: 386, column: 12, scope: !2192)
!3260 = !DILocation(line: 386, column: 17, scope: !2192)
!3261 = !DILocation(line: 388, column: 12, scope: !2192)
!3262 = !DILocation(line: 388, column: 17, scope: !2192)
!3263 = !DILocation(line: 388, column: 30, scope: !2192)
!3264 = !DILocation(line: 388, column: 35, scope: !2192)
!3265 = !DILocation(line: 389, column: 12, scope: !2192)
!3266 = !DILocation(line: 389, column: 17, scope: !2192)
!3267 = !DILocation(line: 389, column: 32, scope: !2192)
!3268 = !DILocation(line: 389, column: 37, scope: !2192)
!3269 = !DILocation(line: 390, column: 12, scope: !2192)
!3270 = !DILocation(line: 390, column: 17, scope: !2192)
!3271 = !DILocation(line: 390, column: 33, scope: !2192)
!3272 = !DILocation(line: 390, column: 42, scope: !2192)
!3273 = !DILocation(line: 390, column: 30, scope: !2192)
!3274 = !DILocation(line: 391, column: 17, scope: !2192)
!3275 = !DILocation(line: 391, column: 26, scope: !2192)
!3276 = !DILocation(line: 391, column: 14, scope: !2192)
!3277 = !DILocation(line: 386, column: 5, scope: !2192)
!3278 = !DILocation(line: 393, column: 5, scope: !2192)
!3279 = !DILocation(line: 394, column: 1, scope: !2192)
!3280 = distinct !DISubprogram(name: "cbs_vp9_read_trailing_bits", scope: !689, file: !689, line: 396, type: !3281, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!503, !637, !692}
!3283 = !DILocalVariable(name: "ctx", arg: 1, scope: !3280, file: !689, line: 396, type: !637)
!3284 = !DILocation(line: 396, column: 62, scope: !3280)
!3285 = !DILocalVariable(name: "rw", arg: 2, scope: !3280, file: !689, line: 396, type: !692)
!3286 = !DILocation(line: 396, column: 82, scope: !3280)
!3287 = !DILocalVariable(name: "err", scope: !3280, file: !689, line: 398, type: !503)
!3288 = !DILocation(line: 398, column: 9, scope: !3280)
!3289 = !DILocalVariable(name: "zero", scope: !3280, file: !689, line: 399, type: !503)
!3290 = !DILocation(line: 399, column: 33, scope: !3280)
!3291 = !DILocation(line: 400, column: 5, scope: !3280)
!3292 = !DILocation(line: 400, column: 28, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3280, file: !689, discriminator: 1)
!3294 = !DILocation(line: 400, column: 13, scope: !3293)
!3295 = !DILocation(line: 400, column: 32, scope: !3293)
!3296 = !DILocation(line: 400, column: 37, scope: !3293)
!3297 = !DILocation(line: 400, column: 5, scope: !3293)
!3298 = !DILocation(line: 401, column: 9, scope: !3280)
!3299 = distinct !{!3299, !3298}
!3300 = !DILocalVariable(name: "value", scope: !3301, file: !689, line: 401, type: !512)
!3301 = distinct !DILexicalBlock(scope: !3280, file: !689, line: 401, column: 12)
!3302 = !DILocation(line: 401, column: 23, scope: !3301)
!3303 = !DILocation(line: 401, column: 23, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !3301, file: !689, discriminator: 1)
!3305 = !DILocation(line: 401, column: 34, scope: !3304)
!3306 = distinct !{!3306, !3307}
!3307 = !DILocation(line: 401, column: 34, scope: !3301)
!3308 = !DILocation(line: 401, column: 67, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !3310, file: !689, discriminator: 2)
!3310 = distinct !DILexicalBlock(scope: !3301, file: !689, line: 401, column: 37)
!3311 = !DILocation(line: 401, column: 72, scope: !3309)
!3312 = !DILocation(line: 401, column: 46, scope: !3309)
!3313 = !DILocation(line: 401, column: 43, scope: !3309)
!3314 = !DILocation(line: 401, column: 42, scope: !3309)
!3315 = !DILocation(line: 401, column: 58, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3317, file: !689, discriminator: 3)
!3317 = distinct !DILexicalBlock(scope: !3310, file: !689, line: 401, column: 42)
!3318 = !DILocation(line: 401, column: 51, scope: !3316)
!3319 = !DILocation(line: 401, column: 63, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3310, file: !689, discriminator: 4)
!3321 = !DILocation(line: 401, column: 83, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3301, file: !689, discriminator: 5)
!3323 = !DILocation(line: 401, column: 81, scope: !3322)
!3324 = !DILocation(line: 401, column: 90, scope: !3322)
!3325 = !DILocation(line: 400, column: 5, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3280, file: !689, discriminator: 2)
!3327 = distinct !{!3327, !3291}
!3328 = !DILocation(line: 403, column: 5, scope: !3280)
!3329 = !DILocation(line: 404, column: 1, scope: !3280)
!3330 = distinct !DISubprogram(name: "cbs_vp9_read_frame_sync_code", scope: !689, file: !689, line: 19, type: !690, isLocal: true, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3331 = !DILocalVariable(name: "ctx", arg: 1, scope: !3330, file: !689, line: 19, type: !637)
!3332 = !DILocation(line: 19, column: 64, scope: !3330)
!3333 = !DILocalVariable(name: "rw", arg: 2, scope: !3330, file: !689, line: 19, type: !692)
!3334 = !DILocation(line: 19, column: 84, scope: !3330)
!3335 = !DILocalVariable(name: "current", arg: 3, scope: !3330, file: !689, line: 20, type: !704)
!3336 = !DILocation(line: 20, column: 53, scope: !3330)
!3337 = !DILocalVariable(name: "frame_sync_byte_0", scope: !3330, file: !689, line: 22, type: !514)
!3338 = !DILocation(line: 22, column: 13, scope: !3330)
!3339 = !DILocalVariable(name: "frame_sync_byte_1", scope: !3330, file: !689, line: 23, type: !514)
!3340 = !DILocation(line: 23, column: 13, scope: !3330)
!3341 = !DILocalVariable(name: "frame_sync_byte_2", scope: !3330, file: !689, line: 24, type: !514)
!3342 = !DILocation(line: 24, column: 13, scope: !3330)
!3343 = !DILocalVariable(name: "err", scope: !3330, file: !689, line: 25, type: !503)
!3344 = !DILocation(line: 25, column: 9, scope: !3330)
!3345 = !DILocation(line: 27, column: 5, scope: !3330)
!3346 = distinct !{!3346, !3345}
!3347 = !DILocalVariable(name: "value", scope: !3348, file: !689, line: 27, type: !512)
!3348 = distinct !DILexicalBlock(scope: !3330, file: !689, line: 27, column: 8)
!3349 = !DILocation(line: 27, column: 19, scope: !3348)
!3350 = !DILocation(line: 27, column: 19, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !3348, file: !689, discriminator: 1)
!3352 = !DILocation(line: 27, column: 30, scope: !3351)
!3353 = distinct !{!3353, !3354}
!3354 = !DILocation(line: 27, column: 30, scope: !3348)
!3355 = !DILocation(line: 27, column: 63, scope: !3356)
!3356 = !DILexicalBlockFile(scope: !3357, file: !689, discriminator: 2)
!3357 = distinct !DILexicalBlock(scope: !3348, file: !689, line: 27, column: 33)
!3358 = !DILocation(line: 27, column: 68, scope: !3356)
!3359 = !DILocation(line: 27, column: 42, scope: !3356)
!3360 = !DILocation(line: 27, column: 39, scope: !3356)
!3361 = !DILocation(line: 27, column: 38, scope: !3356)
!3362 = !DILocation(line: 27, column: 54, scope: !3363)
!3363 = !DILexicalBlockFile(scope: !3364, file: !689, discriminator: 3)
!3364 = distinct !DILexicalBlock(scope: !3357, file: !689, line: 27, column: 38)
!3365 = !DILocation(line: 27, column: 47, scope: !3363)
!3366 = !DILocation(line: 27, column: 59, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3357, file: !689, discriminator: 4)
!3368 = !DILocation(line: 27, column: 92, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3348, file: !689, discriminator: 5)
!3370 = !DILocation(line: 27, column: 90, scope: !3369)
!3371 = !DILocation(line: 27, column: 99, scope: !3369)
!3372 = !DILocation(line: 28, column: 5, scope: !3330)
!3373 = distinct !{!3373, !3372}
!3374 = !DILocalVariable(name: "value", scope: !3375, file: !689, line: 28, type: !512)
!3375 = distinct !DILexicalBlock(scope: !3330, file: !689, line: 28, column: 8)
!3376 = !DILocation(line: 28, column: 19, scope: !3375)
!3377 = !DILocation(line: 28, column: 19, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !3375, file: !689, discriminator: 1)
!3379 = !DILocation(line: 28, column: 30, scope: !3378)
!3380 = distinct !{!3380, !3381}
!3381 = !DILocation(line: 28, column: 30, scope: !3375)
!3382 = !DILocation(line: 28, column: 63, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3384, file: !689, discriminator: 2)
!3384 = distinct !DILexicalBlock(scope: !3375, file: !689, line: 28, column: 33)
!3385 = !DILocation(line: 28, column: 68, scope: !3383)
!3386 = !DILocation(line: 28, column: 42, scope: !3383)
!3387 = !DILocation(line: 28, column: 39, scope: !3383)
!3388 = !DILocation(line: 28, column: 38, scope: !3383)
!3389 = !DILocation(line: 28, column: 54, scope: !3390)
!3390 = !DILexicalBlockFile(scope: !3391, file: !689, discriminator: 3)
!3391 = distinct !DILexicalBlock(scope: !3384, file: !689, line: 28, column: 38)
!3392 = !DILocation(line: 28, column: 47, scope: !3390)
!3393 = !DILocation(line: 28, column: 59, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3384, file: !689, discriminator: 4)
!3395 = !DILocation(line: 28, column: 92, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3375, file: !689, discriminator: 5)
!3397 = !DILocation(line: 28, column: 90, scope: !3396)
!3398 = !DILocation(line: 28, column: 99, scope: !3396)
!3399 = !DILocation(line: 29, column: 5, scope: !3330)
!3400 = distinct !{!3400, !3399}
!3401 = !DILocalVariable(name: "value", scope: !3402, file: !689, line: 29, type: !512)
!3402 = distinct !DILexicalBlock(scope: !3330, file: !689, line: 29, column: 8)
!3403 = !DILocation(line: 29, column: 19, scope: !3402)
!3404 = !DILocation(line: 29, column: 19, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !3402, file: !689, discriminator: 1)
!3406 = !DILocation(line: 29, column: 30, scope: !3405)
!3407 = distinct !{!3407, !3408}
!3408 = !DILocation(line: 29, column: 30, scope: !3402)
!3409 = !DILocation(line: 29, column: 63, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3411, file: !689, discriminator: 2)
!3411 = distinct !DILexicalBlock(scope: !3402, file: !689, line: 29, column: 33)
!3412 = !DILocation(line: 29, column: 68, scope: !3410)
!3413 = !DILocation(line: 29, column: 42, scope: !3410)
!3414 = !DILocation(line: 29, column: 39, scope: !3410)
!3415 = !DILocation(line: 29, column: 38, scope: !3410)
!3416 = !DILocation(line: 29, column: 54, scope: !3417)
!3417 = !DILexicalBlockFile(scope: !3418, file: !689, discriminator: 3)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !689, line: 29, column: 38)
!3419 = !DILocation(line: 29, column: 47, scope: !3417)
!3420 = !DILocation(line: 29, column: 59, scope: !3421)
!3421 = !DILexicalBlockFile(scope: !3411, file: !689, discriminator: 4)
!3422 = !DILocation(line: 29, column: 92, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3402, file: !689, discriminator: 5)
!3424 = !DILocation(line: 29, column: 90, scope: !3423)
!3425 = !DILocation(line: 29, column: 99, scope: !3423)
!3426 = !DILocation(line: 31, column: 9, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3330, file: !689, line: 31, column: 9)
!3428 = !DILocation(line: 31, column: 27, scope: !3427)
!3429 = !DILocation(line: 31, column: 47, scope: !3427)
!3430 = !DILocation(line: 32, column: 9, scope: !3427)
!3431 = !DILocation(line: 32, column: 27, scope: !3427)
!3432 = !DILocation(line: 32, column: 47, scope: !3427)
!3433 = !DILocation(line: 33, column: 9, scope: !3427)
!3434 = !DILocation(line: 33, column: 27, scope: !3427)
!3435 = !DILocation(line: 31, column: 9, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3330, file: !689, discriminator: 1)
!3437 = !DILocation(line: 34, column: 16, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3427, file: !689, line: 33, column: 48)
!3439 = !DILocation(line: 34, column: 21, scope: !3438)
!3440 = !DILocation(line: 35, column: 37, scope: !3438)
!3441 = !DILocation(line: 36, column: 16, scope: !3438)
!3442 = !DILocation(line: 36, column: 35, scope: !3438)
!3443 = !DILocation(line: 34, column: 9, scope: !3438)
!3444 = !DILocation(line: 37, column: 9, scope: !3438)
!3445 = !DILocation(line: 40, column: 5, scope: !3330)
!3446 = !DILocation(line: 41, column: 1, scope: !3330)
!3447 = distinct !DISubprogram(name: "cbs_vp9_read_color_config", scope: !689, file: !689, line: 43, type: !3448, isLocal: true, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!503, !637, !692, !704, !503}
!3450 = !DILocalVariable(name: "ctx", arg: 1, scope: !3447, file: !689, line: 43, type: !637)
!3451 = !DILocation(line: 43, column: 61, scope: !3447)
!3452 = !DILocalVariable(name: "rw", arg: 2, scope: !3447, file: !689, line: 43, type: !692)
!3453 = !DILocation(line: 43, column: 81, scope: !3447)
!3454 = !DILocalVariable(name: "current", arg: 3, scope: !3447, file: !689, line: 44, type: !704)
!3455 = !DILocation(line: 44, column: 50, scope: !3447)
!3456 = !DILocalVariable(name: "profile", arg: 4, scope: !3447, file: !689, line: 44, type: !503)
!3457 = !DILocation(line: 44, column: 63, scope: !3447)
!3458 = !DILocalVariable(name: "vp9", scope: !3447, file: !689, line: 46, type: !1040)
!3459 = !DILocation(line: 46, column: 31, scope: !3447)
!3460 = !DILocation(line: 46, column: 37, scope: !3447)
!3461 = !DILocation(line: 46, column: 42, scope: !3447)
!3462 = !DILocalVariable(name: "err", scope: !3447, file: !689, line: 47, type: !503)
!3463 = !DILocation(line: 47, column: 9, scope: !3447)
!3464 = !DILocation(line: 49, column: 9, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3447, file: !689, line: 49, column: 9)
!3466 = !DILocation(line: 49, column: 17, scope: !3465)
!3467 = !DILocation(line: 49, column: 9, scope: !3447)
!3468 = !DILocation(line: 50, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3465, file: !689, line: 49, column: 23)
!3470 = distinct !{!3470, !3468}
!3471 = !DILocalVariable(name: "value", scope: !3472, file: !689, line: 50, type: !512)
!3472 = distinct !DILexicalBlock(scope: !3469, file: !689, line: 50, column: 12)
!3473 = !DILocation(line: 50, column: 23, scope: !3472)
!3474 = !DILocation(line: 50, column: 23, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3472, file: !689, discriminator: 1)
!3476 = !DILocation(line: 50, column: 34, scope: !3475)
!3477 = distinct !{!3477, !3478}
!3478 = !DILocation(line: 50, column: 34, scope: !3472)
!3479 = !DILocation(line: 50, column: 67, scope: !3480)
!3480 = !DILexicalBlockFile(scope: !3481, file: !689, discriminator: 2)
!3481 = distinct !DILexicalBlock(scope: !3472, file: !689, line: 50, column: 37)
!3482 = !DILocation(line: 50, column: 72, scope: !3480)
!3483 = !DILocation(line: 50, column: 46, scope: !3480)
!3484 = !DILocation(line: 50, column: 43, scope: !3480)
!3485 = !DILocation(line: 50, column: 42, scope: !3480)
!3486 = !DILocation(line: 50, column: 58, scope: !3487)
!3487 = !DILexicalBlockFile(scope: !3488, file: !689, discriminator: 3)
!3488 = distinct !DILexicalBlock(scope: !3481, file: !689, line: 50, column: 42)
!3489 = !DILocation(line: 50, column: 51, scope: !3487)
!3490 = !DILocation(line: 50, column: 63, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !3481, file: !689, discriminator: 4)
!3492 = !DILocation(line: 50, column: 105, scope: !3493)
!3493 = !DILexicalBlockFile(scope: !3472, file: !689, discriminator: 5)
!3494 = !DILocation(line: 50, column: 76, scope: !3493)
!3495 = !DILocation(line: 50, column: 85, scope: !3493)
!3496 = !DILocation(line: 50, column: 103, scope: !3493)
!3497 = !DILocation(line: 50, column: 112, scope: !3493)
!3498 = !DILocation(line: 51, column: 26, scope: !3469)
!3499 = !DILocation(line: 51, column: 35, scope: !3469)
!3500 = !DILocation(line: 51, column: 9, scope: !3469)
!3501 = !DILocation(line: 51, column: 14, scope: !3469)
!3502 = !DILocation(line: 51, column: 24, scope: !3469)
!3503 = !DILocation(line: 52, column: 5, scope: !3469)
!3504 = !DILocation(line: 53, column: 9, scope: !3465)
!3505 = !DILocation(line: 53, column: 14, scope: !3465)
!3506 = !DILocation(line: 53, column: 24, scope: !3465)
!3507 = !DILocation(line: 55, column: 5, scope: !3447)
!3508 = distinct !{!3508, !3507}
!3509 = !DILocalVariable(name: "value", scope: !3510, file: !689, line: 55, type: !512)
!3510 = distinct !DILexicalBlock(scope: !3447, file: !689, line: 55, column: 8)
!3511 = !DILocation(line: 55, column: 19, scope: !3510)
!3512 = !DILocation(line: 55, column: 19, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3510, file: !689, discriminator: 1)
!3514 = !DILocation(line: 55, column: 30, scope: !3513)
!3515 = distinct !{!3515, !3516}
!3516 = !DILocation(line: 55, column: 30, scope: !3510)
!3517 = !DILocation(line: 55, column: 63, scope: !3518)
!3518 = !DILexicalBlockFile(scope: !3519, file: !689, discriminator: 2)
!3519 = distinct !DILexicalBlock(scope: !3510, file: !689, line: 55, column: 33)
!3520 = !DILocation(line: 55, column: 68, scope: !3518)
!3521 = !DILocation(line: 55, column: 42, scope: !3518)
!3522 = !DILocation(line: 55, column: 39, scope: !3518)
!3523 = !DILocation(line: 55, column: 38, scope: !3518)
!3524 = !DILocation(line: 55, column: 54, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3526, file: !689, discriminator: 3)
!3526 = distinct !DILexicalBlock(scope: !3519, file: !689, line: 55, column: 38)
!3527 = !DILocation(line: 55, column: 47, scope: !3525)
!3528 = !DILocation(line: 55, column: 59, scope: !3529)
!3529 = !DILexicalBlockFile(scope: !3519, file: !689, discriminator: 4)
!3530 = !DILocation(line: 55, column: 95, scope: !3531)
!3531 = !DILexicalBlockFile(scope: !3510, file: !689, discriminator: 5)
!3532 = !DILocation(line: 55, column: 72, scope: !3531)
!3533 = !DILocation(line: 55, column: 81, scope: !3531)
!3534 = !DILocation(line: 55, column: 93, scope: !3531)
!3535 = !DILocation(line: 55, column: 102, scope: !3531)
!3536 = !DILocation(line: 57, column: 9, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3447, file: !689, line: 57, column: 9)
!3538 = !DILocation(line: 57, column: 18, scope: !3537)
!3539 = !DILocation(line: 57, column: 30, scope: !3537)
!3540 = !DILocation(line: 57, column: 9, scope: !3447)
!3541 = !DILocation(line: 58, column: 9, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3537, file: !689, line: 57, column: 45)
!3543 = distinct !{!3543, !3541}
!3544 = !DILocalVariable(name: "value", scope: !3545, file: !689, line: 58, type: !512)
!3545 = distinct !DILexicalBlock(scope: !3542, file: !689, line: 58, column: 12)
!3546 = !DILocation(line: 58, column: 23, scope: !3545)
!3547 = !DILocation(line: 58, column: 23, scope: !3548)
!3548 = !DILexicalBlockFile(scope: !3545, file: !689, discriminator: 1)
!3549 = !DILocation(line: 58, column: 34, scope: !3548)
!3550 = distinct !{!3550, !3551}
!3551 = !DILocation(line: 58, column: 34, scope: !3545)
!3552 = !DILocation(line: 58, column: 67, scope: !3553)
!3553 = !DILexicalBlockFile(scope: !3554, file: !689, discriminator: 2)
!3554 = distinct !DILexicalBlock(scope: !3545, file: !689, line: 58, column: 37)
!3555 = !DILocation(line: 58, column: 72, scope: !3553)
!3556 = !DILocation(line: 58, column: 46, scope: !3553)
!3557 = !DILocation(line: 58, column: 43, scope: !3553)
!3558 = !DILocation(line: 58, column: 42, scope: !3553)
!3559 = !DILocation(line: 58, column: 58, scope: !3560)
!3560 = !DILexicalBlockFile(scope: !3561, file: !689, discriminator: 3)
!3561 = distinct !DILexicalBlock(scope: !3554, file: !689, line: 58, column: 42)
!3562 = !DILocation(line: 58, column: 51, scope: !3560)
!3563 = !DILocation(line: 58, column: 63, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3554, file: !689, discriminator: 4)
!3565 = !DILocation(line: 58, column: 99, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3545, file: !689, discriminator: 5)
!3567 = !DILocation(line: 58, column: 76, scope: !3566)
!3568 = !DILocation(line: 58, column: 85, scope: !3566)
!3569 = !DILocation(line: 58, column: 97, scope: !3566)
!3570 = !DILocation(line: 58, column: 106, scope: !3566)
!3571 = !DILocation(line: 59, column: 13, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3542, file: !689, line: 59, column: 13)
!3573 = !DILocation(line: 59, column: 21, scope: !3572)
!3574 = !DILocation(line: 59, column: 26, scope: !3572)
!3575 = !DILocation(line: 59, column: 29, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3572, file: !689, discriminator: 1)
!3577 = !DILocation(line: 59, column: 37, scope: !3576)
!3578 = !DILocation(line: 59, column: 13, scope: !3576)
!3579 = !DILocation(line: 60, column: 13, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3572, file: !689, line: 59, column: 43)
!3581 = distinct !{!3581, !3579}
!3582 = !DILocalVariable(name: "value", scope: !3583, file: !689, line: 60, type: !512)
!3583 = distinct !DILexicalBlock(scope: !3580, file: !689, line: 60, column: 16)
!3584 = !DILocation(line: 60, column: 27, scope: !3583)
!3585 = !DILocation(line: 60, column: 27, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3583, file: !689, discriminator: 1)
!3587 = !DILocation(line: 60, column: 38, scope: !3586)
!3588 = distinct !{!3588, !3589}
!3589 = !DILocation(line: 60, column: 38, scope: !3583)
!3590 = !DILocation(line: 60, column: 71, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3592, file: !689, discriminator: 2)
!3592 = distinct !DILexicalBlock(scope: !3583, file: !689, line: 60, column: 41)
!3593 = !DILocation(line: 60, column: 76, scope: !3591)
!3594 = !DILocation(line: 60, column: 50, scope: !3591)
!3595 = !DILocation(line: 60, column: 47, scope: !3591)
!3596 = !DILocation(line: 60, column: 46, scope: !3591)
!3597 = !DILocation(line: 60, column: 62, scope: !3598)
!3598 = !DILexicalBlockFile(scope: !3599, file: !689, discriminator: 3)
!3599 = distinct !DILexicalBlock(scope: !3592, file: !689, line: 60, column: 46)
!3600 = !DILocation(line: 60, column: 55, scope: !3598)
!3601 = !DILocation(line: 60, column: 67, scope: !3602)
!3602 = !DILexicalBlockFile(scope: !3592, file: !689, discriminator: 4)
!3603 = !DILocation(line: 60, column: 105, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3583, file: !689, discriminator: 5)
!3605 = !DILocation(line: 60, column: 80, scope: !3604)
!3606 = !DILocation(line: 60, column: 89, scope: !3604)
!3607 = !DILocation(line: 60, column: 103, scope: !3604)
!3608 = !DILocation(line: 60, column: 112, scope: !3604)
!3609 = !DILocation(line: 61, column: 13, scope: !3580)
!3610 = distinct !{!3610, !3609}
!3611 = !DILocalVariable(name: "value", scope: !3612, file: !689, line: 61, type: !512)
!3612 = distinct !DILexicalBlock(scope: !3580, file: !689, line: 61, column: 16)
!3613 = !DILocation(line: 61, column: 27, scope: !3612)
!3614 = !DILocation(line: 61, column: 27, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3612, file: !689, discriminator: 1)
!3616 = !DILocation(line: 61, column: 38, scope: !3615)
!3617 = distinct !{!3617, !3618}
!3618 = !DILocation(line: 61, column: 38, scope: !3612)
!3619 = !DILocation(line: 61, column: 71, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !3621, file: !689, discriminator: 2)
!3621 = distinct !DILexicalBlock(scope: !3612, file: !689, line: 61, column: 41)
!3622 = !DILocation(line: 61, column: 76, scope: !3620)
!3623 = !DILocation(line: 61, column: 50, scope: !3620)
!3624 = !DILocation(line: 61, column: 47, scope: !3620)
!3625 = !DILocation(line: 61, column: 46, scope: !3620)
!3626 = !DILocation(line: 61, column: 62, scope: !3627)
!3627 = !DILexicalBlockFile(scope: !3628, file: !689, discriminator: 3)
!3628 = distinct !DILexicalBlock(scope: !3621, file: !689, line: 61, column: 46)
!3629 = !DILocation(line: 61, column: 55, scope: !3627)
!3630 = !DILocation(line: 61, column: 67, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3621, file: !689, discriminator: 4)
!3632 = !DILocation(line: 61, column: 105, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3612, file: !689, discriminator: 5)
!3634 = !DILocation(line: 61, column: 80, scope: !3633)
!3635 = !DILocation(line: 61, column: 89, scope: !3633)
!3636 = !DILocation(line: 61, column: 103, scope: !3633)
!3637 = !DILocation(line: 61, column: 112, scope: !3633)
!3638 = !DILocation(line: 62, column: 13, scope: !3580)
!3639 = distinct !{!3639, !3638}
!3640 = !DILocalVariable(name: "fixed_value", scope: !3641, file: !689, line: 62, type: !512)
!3641 = distinct !DILexicalBlock(scope: !3580, file: !689, line: 62, column: 16)
!3642 = !DILocation(line: 62, column: 51, scope: !3641)
!3643 = !DILocation(line: 62, column: 51, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3641, file: !689, discriminator: 1)
!3645 = !DILocation(line: 62, column: 68, scope: !3644)
!3646 = distinct !{!3646, !3647}
!3647 = !DILocation(line: 62, column: 68, scope: !3641)
!3648 = !DILocation(line: 62, column: 101, scope: !3649)
!3649 = !DILexicalBlockFile(scope: !3650, file: !689, discriminator: 2)
!3650 = distinct !DILexicalBlock(scope: !3641, file: !689, line: 62, column: 71)
!3651 = !DILocation(line: 62, column: 106, scope: !3649)
!3652 = !DILocation(line: 62, column: 80, scope: !3649)
!3653 = !DILocation(line: 62, column: 77, scope: !3649)
!3654 = !DILocation(line: 62, column: 159, scope: !3649)
!3655 = !DILocation(line: 62, column: 163, scope: !3649)
!3656 = !DILocation(line: 62, column: 175, scope: !3657)
!3657 = !DILexicalBlockFile(scope: !3658, file: !689, discriminator: 3)
!3658 = distinct !DILexicalBlock(scope: !3650, file: !689, line: 62, column: 159)
!3659 = !DILocation(line: 62, column: 168, scope: !3657)
!3660 = !DILocation(line: 62, column: 180, scope: !3661)
!3661 = !DILexicalBlockFile(scope: !3650, file: !689, discriminator: 4)
!3662 = !DILocation(line: 62, column: 193, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3641, file: !689, discriminator: 5)
!3664 = !DILocation(line: 63, column: 9, scope: !3580)
!3665 = !DILocation(line: 64, column: 13, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3572, file: !689, line: 63, column: 16)
!3667 = distinct !{!3667, !3665}
!3668 = !DILocation(line: 64, column: 18, scope: !3669)
!3669 = !DILexicalBlockFile(scope: !3670, file: !689, discriminator: 1)
!3670 = distinct !DILexicalBlock(scope: !3666, file: !689, line: 64, column: 16)
!3671 = !DILocation(line: 64, column: 27, scope: !3669)
!3672 = !DILocation(line: 64, column: 41, scope: !3669)
!3673 = !DILocation(line: 64, column: 46, scope: !3669)
!3674 = !DILocation(line: 65, column: 13, scope: !3666)
!3675 = distinct !{!3675, !3674}
!3676 = !DILocation(line: 65, column: 18, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3678, file: !689, discriminator: 1)
!3678 = distinct !DILexicalBlock(scope: !3666, file: !689, line: 65, column: 16)
!3679 = !DILocation(line: 65, column: 27, scope: !3677)
!3680 = !DILocation(line: 65, column: 41, scope: !3677)
!3681 = !DILocation(line: 65, column: 46, scope: !3677)
!3682 = !DILocation(line: 67, column: 5, scope: !3542)
!3683 = !DILocation(line: 68, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3537, file: !689, line: 67, column: 12)
!3685 = distinct !{!3685, !3683}
!3686 = !DILocation(line: 68, column: 14, scope: !3687)
!3687 = !DILexicalBlockFile(scope: !3688, file: !689, discriminator: 1)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !689, line: 68, column: 12)
!3689 = !DILocation(line: 68, column: 23, scope: !3687)
!3690 = !DILocation(line: 68, column: 35, scope: !3687)
!3691 = !DILocation(line: 68, column: 40, scope: !3687)
!3692 = !DILocation(line: 69, column: 13, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3684, file: !689, line: 69, column: 13)
!3694 = !DILocation(line: 69, column: 21, scope: !3693)
!3695 = !DILocation(line: 69, column: 26, scope: !3693)
!3696 = !DILocation(line: 69, column: 29, scope: !3697)
!3697 = !DILexicalBlockFile(scope: !3693, file: !689, discriminator: 1)
!3698 = !DILocation(line: 69, column: 37, scope: !3697)
!3699 = !DILocation(line: 69, column: 13, scope: !3697)
!3700 = !DILocation(line: 70, column: 13, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3693, file: !689, line: 69, column: 43)
!3702 = distinct !{!3702, !3700}
!3703 = !DILocation(line: 70, column: 18, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !3705, file: !689, discriminator: 1)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !689, line: 70, column: 16)
!3706 = !DILocation(line: 70, column: 27, scope: !3704)
!3707 = !DILocation(line: 70, column: 41, scope: !3704)
!3708 = !DILocation(line: 70, column: 46, scope: !3704)
!3709 = !DILocation(line: 71, column: 13, scope: !3701)
!3710 = distinct !{!3710, !3709}
!3711 = !DILocation(line: 71, column: 18, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3713, file: !689, discriminator: 1)
!3713 = distinct !DILexicalBlock(scope: !3701, file: !689, line: 71, column: 16)
!3714 = !DILocation(line: 71, column: 27, scope: !3712)
!3715 = !DILocation(line: 71, column: 41, scope: !3712)
!3716 = !DILocation(line: 71, column: 46, scope: !3712)
!3717 = !DILocation(line: 72, column: 13, scope: !3701)
!3718 = distinct !{!3718, !3717}
!3719 = !DILocalVariable(name: "fixed_value", scope: !3720, file: !689, line: 72, type: !512)
!3720 = distinct !DILexicalBlock(scope: !3701, file: !689, line: 72, column: 16)
!3721 = !DILocation(line: 72, column: 51, scope: !3720)
!3722 = !DILocation(line: 72, column: 51, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3720, file: !689, discriminator: 1)
!3724 = !DILocation(line: 72, column: 68, scope: !3723)
!3725 = distinct !{!3725, !3726}
!3726 = !DILocation(line: 72, column: 68, scope: !3720)
!3727 = !DILocation(line: 72, column: 101, scope: !3728)
!3728 = !DILexicalBlockFile(scope: !3729, file: !689, discriminator: 2)
!3729 = distinct !DILexicalBlock(scope: !3720, file: !689, line: 72, column: 71)
!3730 = !DILocation(line: 72, column: 106, scope: !3728)
!3731 = !DILocation(line: 72, column: 80, scope: !3728)
!3732 = !DILocation(line: 72, column: 77, scope: !3728)
!3733 = !DILocation(line: 72, column: 159, scope: !3728)
!3734 = !DILocation(line: 72, column: 163, scope: !3728)
!3735 = !DILocation(line: 72, column: 175, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3737, file: !689, discriminator: 3)
!3737 = distinct !DILexicalBlock(scope: !3729, file: !689, line: 72, column: 159)
!3738 = !DILocation(line: 72, column: 168, scope: !3736)
!3739 = !DILocation(line: 72, column: 180, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !3729, file: !689, discriminator: 4)
!3741 = !DILocation(line: 72, column: 193, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3720, file: !689, discriminator: 5)
!3743 = !DILocation(line: 73, column: 9, scope: !3701)
!3744 = !DILocation(line: 76, column: 26, scope: !3447)
!3745 = !DILocation(line: 76, column: 35, scope: !3447)
!3746 = !DILocation(line: 76, column: 5, scope: !3447)
!3747 = !DILocation(line: 76, column: 10, scope: !3447)
!3748 = !DILocation(line: 76, column: 24, scope: !3447)
!3749 = !DILocation(line: 77, column: 26, scope: !3447)
!3750 = !DILocation(line: 77, column: 35, scope: !3447)
!3751 = !DILocation(line: 77, column: 5, scope: !3447)
!3752 = !DILocation(line: 77, column: 10, scope: !3447)
!3753 = !DILocation(line: 77, column: 24, scope: !3447)
!3754 = !DILocation(line: 79, column: 5, scope: !3447)
!3755 = !DILocation(line: 80, column: 1, scope: !3447)
!3756 = distinct !DISubprogram(name: "cbs_vp9_read_frame_size", scope: !689, file: !689, line: 82, type: !690, isLocal: true, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3757 = !DILocalVariable(name: "ctx", arg: 1, scope: !3756, file: !689, line: 82, type: !637)
!3758 = !DILocation(line: 82, column: 59, scope: !3756)
!3759 = !DILocalVariable(name: "rw", arg: 2, scope: !3756, file: !689, line: 82, type: !692)
!3760 = !DILocation(line: 82, column: 79, scope: !3756)
!3761 = !DILocalVariable(name: "current", arg: 3, scope: !3756, file: !689, line: 83, type: !704)
!3762 = !DILocation(line: 83, column: 48, scope: !3756)
!3763 = !DILocalVariable(name: "vp9", scope: !3756, file: !689, line: 85, type: !1040)
!3764 = !DILocation(line: 85, column: 31, scope: !3756)
!3765 = !DILocation(line: 85, column: 37, scope: !3756)
!3766 = !DILocation(line: 85, column: 42, scope: !3756)
!3767 = !DILocalVariable(name: "err", scope: !3756, file: !689, line: 86, type: !503)
!3768 = !DILocation(line: 86, column: 9, scope: !3756)
!3769 = !DILocation(line: 88, column: 5, scope: !3756)
!3770 = distinct !{!3770, !3769}
!3771 = !DILocalVariable(name: "value", scope: !3772, file: !689, line: 88, type: !512)
!3772 = distinct !DILexicalBlock(scope: !3756, file: !689, line: 88, column: 8)
!3773 = !DILocation(line: 88, column: 19, scope: !3772)
!3774 = !DILocation(line: 88, column: 19, scope: !3775)
!3775 = !DILexicalBlockFile(scope: !3772, file: !689, discriminator: 1)
!3776 = !DILocation(line: 88, column: 30, scope: !3775)
!3777 = distinct !{!3777, !3778}
!3778 = !DILocation(line: 88, column: 30, scope: !3772)
!3779 = !DILocation(line: 88, column: 63, scope: !3780)
!3780 = !DILexicalBlockFile(scope: !3781, file: !689, discriminator: 2)
!3781 = distinct !DILexicalBlock(scope: !3772, file: !689, line: 88, column: 33)
!3782 = !DILocation(line: 88, column: 68, scope: !3780)
!3783 = !DILocation(line: 88, column: 42, scope: !3780)
!3784 = !DILocation(line: 88, column: 39, scope: !3780)
!3785 = !DILocation(line: 88, column: 43, scope: !3780)
!3786 = !DILocation(line: 88, column: 55, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3788, file: !689, discriminator: 3)
!3788 = distinct !DILexicalBlock(scope: !3781, file: !689, line: 88, column: 39)
!3789 = !DILocation(line: 88, column: 48, scope: !3787)
!3790 = !DILocation(line: 88, column: 60, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3781, file: !689, discriminator: 4)
!3792 = !DILocation(line: 88, column: 104, scope: !3793)
!3793 = !DILexicalBlockFile(scope: !3772, file: !689, discriminator: 5)
!3794 = !DILocation(line: 88, column: 73, scope: !3793)
!3795 = !DILocation(line: 88, column: 82, scope: !3793)
!3796 = !DILocation(line: 88, column: 102, scope: !3793)
!3797 = !DILocation(line: 88, column: 111, scope: !3793)
!3798 = !DILocation(line: 89, column: 5, scope: !3756)
!3799 = distinct !{!3799, !3798}
!3800 = !DILocalVariable(name: "value", scope: !3801, file: !689, line: 89, type: !512)
!3801 = distinct !DILexicalBlock(scope: !3756, file: !689, line: 89, column: 8)
!3802 = !DILocation(line: 89, column: 19, scope: !3801)
!3803 = !DILocation(line: 89, column: 19, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3801, file: !689, discriminator: 1)
!3805 = !DILocation(line: 89, column: 30, scope: !3804)
!3806 = distinct !{!3806, !3807}
!3807 = !DILocation(line: 89, column: 30, scope: !3801)
!3808 = !DILocation(line: 89, column: 63, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3810, file: !689, discriminator: 2)
!3810 = distinct !DILexicalBlock(scope: !3801, file: !689, line: 89, column: 33)
!3811 = !DILocation(line: 89, column: 68, scope: !3809)
!3812 = !DILocation(line: 89, column: 42, scope: !3809)
!3813 = !DILocation(line: 89, column: 39, scope: !3809)
!3814 = !DILocation(line: 89, column: 43, scope: !3809)
!3815 = !DILocation(line: 89, column: 55, scope: !3816)
!3816 = !DILexicalBlockFile(scope: !3817, file: !689, discriminator: 3)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !689, line: 89, column: 39)
!3818 = !DILocation(line: 89, column: 48, scope: !3816)
!3819 = !DILocation(line: 89, column: 60, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3810, file: !689, discriminator: 4)
!3821 = !DILocation(line: 89, column: 105, scope: !3822)
!3822 = !DILexicalBlockFile(scope: !3801, file: !689, discriminator: 5)
!3823 = !DILocation(line: 89, column: 73, scope: !3822)
!3824 = !DILocation(line: 89, column: 82, scope: !3822)
!3825 = !DILocation(line: 89, column: 103, scope: !3822)
!3826 = !DILocation(line: 89, column: 112, scope: !3822)
!3827 = !DILocation(line: 91, column: 24, scope: !3756)
!3828 = !DILocation(line: 91, column: 33, scope: !3756)
!3829 = !DILocation(line: 91, column: 53, scope: !3756)
!3830 = !DILocation(line: 91, column: 5, scope: !3756)
!3831 = !DILocation(line: 91, column: 10, scope: !3756)
!3832 = !DILocation(line: 91, column: 22, scope: !3756)
!3833 = !DILocation(line: 92, column: 25, scope: !3756)
!3834 = !DILocation(line: 92, column: 34, scope: !3756)
!3835 = !DILocation(line: 92, column: 55, scope: !3756)
!3836 = !DILocation(line: 92, column: 5, scope: !3756)
!3837 = !DILocation(line: 92, column: 10, scope: !3756)
!3838 = !DILocation(line: 92, column: 23, scope: !3756)
!3839 = !DILocation(line: 94, column: 21, scope: !3756)
!3840 = !DILocation(line: 94, column: 26, scope: !3756)
!3841 = !DILocation(line: 94, column: 38, scope: !3756)
!3842 = !DILocation(line: 94, column: 43, scope: !3756)
!3843 = !DILocation(line: 94, column: 20, scope: !3756)
!3844 = !DILocation(line: 94, column: 5, scope: !3756)
!3845 = !DILocation(line: 94, column: 10, scope: !3756)
!3846 = !DILocation(line: 94, column: 18, scope: !3756)
!3847 = !DILocation(line: 95, column: 21, scope: !3756)
!3848 = !DILocation(line: 95, column: 26, scope: !3756)
!3849 = !DILocation(line: 95, column: 39, scope: !3756)
!3850 = !DILocation(line: 95, column: 44, scope: !3756)
!3851 = !DILocation(line: 95, column: 20, scope: !3756)
!3852 = !DILocation(line: 95, column: 5, scope: !3756)
!3853 = !DILocation(line: 95, column: 10, scope: !3756)
!3854 = !DILocation(line: 95, column: 18, scope: !3756)
!3855 = !DILocation(line: 96, column: 23, scope: !3756)
!3856 = !DILocation(line: 96, column: 28, scope: !3756)
!3857 = !DILocation(line: 96, column: 36, scope: !3756)
!3858 = !DILocation(line: 96, column: 41, scope: !3756)
!3859 = !DILocation(line: 96, column: 22, scope: !3756)
!3860 = !DILocation(line: 96, column: 5, scope: !3756)
!3861 = !DILocation(line: 96, column: 10, scope: !3756)
!3862 = !DILocation(line: 96, column: 20, scope: !3756)
!3863 = !DILocation(line: 97, column: 23, scope: !3756)
!3864 = !DILocation(line: 97, column: 28, scope: !3756)
!3865 = !DILocation(line: 97, column: 36, scope: !3756)
!3866 = !DILocation(line: 97, column: 41, scope: !3756)
!3867 = !DILocation(line: 97, column: 22, scope: !3756)
!3868 = !DILocation(line: 97, column: 5, scope: !3756)
!3869 = !DILocation(line: 97, column: 10, scope: !3756)
!3870 = !DILocation(line: 97, column: 20, scope: !3756)
!3871 = !DILocation(line: 99, column: 5, scope: !3756)
!3872 = !DILocation(line: 100, column: 1, scope: !3756)
!3873 = distinct !DISubprogram(name: "cbs_vp9_read_render_size", scope: !689, file: !689, line: 102, type: !690, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3874 = !DILocalVariable(name: "ctx", arg: 1, scope: !3873, file: !689, line: 102, type: !637)
!3875 = !DILocation(line: 102, column: 60, scope: !3873)
!3876 = !DILocalVariable(name: "rw", arg: 2, scope: !3873, file: !689, line: 102, type: !692)
!3877 = !DILocation(line: 102, column: 80, scope: !3873)
!3878 = !DILocalVariable(name: "current", arg: 3, scope: !3873, file: !689, line: 103, type: !704)
!3879 = !DILocation(line: 103, column: 49, scope: !3873)
!3880 = !DILocalVariable(name: "err", scope: !3873, file: !689, line: 105, type: !503)
!3881 = !DILocation(line: 105, column: 9, scope: !3873)
!3882 = !DILocation(line: 107, column: 5, scope: !3873)
!3883 = distinct !{!3883, !3882}
!3884 = !DILocalVariable(name: "value", scope: !3885, file: !689, line: 107, type: !512)
!3885 = distinct !DILexicalBlock(scope: !3873, file: !689, line: 107, column: 8)
!3886 = !DILocation(line: 107, column: 19, scope: !3885)
!3887 = !DILocation(line: 107, column: 19, scope: !3888)
!3888 = !DILexicalBlockFile(scope: !3885, file: !689, discriminator: 1)
!3889 = !DILocation(line: 107, column: 30, scope: !3888)
!3890 = distinct !{!3890, !3891}
!3891 = !DILocation(line: 107, column: 30, scope: !3885)
!3892 = !DILocation(line: 107, column: 63, scope: !3893)
!3893 = !DILexicalBlockFile(scope: !3894, file: !689, discriminator: 2)
!3894 = distinct !DILexicalBlock(scope: !3885, file: !689, line: 107, column: 33)
!3895 = !DILocation(line: 107, column: 68, scope: !3893)
!3896 = !DILocation(line: 107, column: 42, scope: !3893)
!3897 = !DILocation(line: 107, column: 39, scope: !3893)
!3898 = !DILocation(line: 107, column: 38, scope: !3893)
!3899 = !DILocation(line: 107, column: 54, scope: !3900)
!3900 = !DILexicalBlockFile(scope: !3901, file: !689, discriminator: 3)
!3901 = distinct !DILexicalBlock(scope: !3894, file: !689, line: 107, column: 38)
!3902 = !DILocation(line: 107, column: 47, scope: !3900)
!3903 = !DILocation(line: 107, column: 59, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3894, file: !689, discriminator: 4)
!3905 = !DILocation(line: 107, column: 115, scope: !3906)
!3906 = !DILexicalBlockFile(scope: !3885, file: !689, discriminator: 5)
!3907 = !DILocation(line: 107, column: 72, scope: !3906)
!3908 = !DILocation(line: 107, column: 81, scope: !3906)
!3909 = !DILocation(line: 107, column: 113, scope: !3906)
!3910 = !DILocation(line: 107, column: 122, scope: !3906)
!3911 = !DILocation(line: 109, column: 9, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3873, file: !689, line: 109, column: 9)
!3913 = !DILocation(line: 109, column: 18, scope: !3912)
!3914 = !DILocation(line: 109, column: 9, scope: !3873)
!3915 = !DILocation(line: 110, column: 9, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !689, line: 109, column: 51)
!3917 = distinct !{!3917, !3915}
!3918 = !DILocalVariable(name: "value", scope: !3919, file: !689, line: 110, type: !512)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !689, line: 110, column: 12)
!3920 = !DILocation(line: 110, column: 23, scope: !3919)
!3921 = !DILocation(line: 110, column: 23, scope: !3922)
!3922 = !DILexicalBlockFile(scope: !3919, file: !689, discriminator: 1)
!3923 = !DILocation(line: 110, column: 34, scope: !3922)
!3924 = distinct !{!3924, !3925}
!3925 = !DILocation(line: 110, column: 34, scope: !3919)
!3926 = !DILocation(line: 110, column: 67, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3928, file: !689, discriminator: 2)
!3928 = distinct !DILexicalBlock(scope: !3919, file: !689, line: 110, column: 37)
!3929 = !DILocation(line: 110, column: 72, scope: !3927)
!3930 = !DILocation(line: 110, column: 46, scope: !3927)
!3931 = !DILocation(line: 110, column: 43, scope: !3927)
!3932 = !DILocation(line: 110, column: 47, scope: !3927)
!3933 = !DILocation(line: 110, column: 59, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3935, file: !689, discriminator: 3)
!3935 = distinct !DILexicalBlock(scope: !3928, file: !689, line: 110, column: 43)
!3936 = !DILocation(line: 110, column: 52, scope: !3934)
!3937 = !DILocation(line: 110, column: 64, scope: !3938)
!3938 = !DILexicalBlockFile(scope: !3928, file: !689, discriminator: 4)
!3939 = !DILocation(line: 110, column: 109, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !3919, file: !689, discriminator: 5)
!3941 = !DILocation(line: 110, column: 77, scope: !3940)
!3942 = !DILocation(line: 110, column: 86, scope: !3940)
!3943 = !DILocation(line: 110, column: 107, scope: !3940)
!3944 = !DILocation(line: 110, column: 116, scope: !3940)
!3945 = !DILocation(line: 111, column: 9, scope: !3916)
!3946 = distinct !{!3946, !3945}
!3947 = !DILocalVariable(name: "value", scope: !3948, file: !689, line: 111, type: !512)
!3948 = distinct !DILexicalBlock(scope: !3916, file: !689, line: 111, column: 12)
!3949 = !DILocation(line: 111, column: 23, scope: !3948)
!3950 = !DILocation(line: 111, column: 23, scope: !3951)
!3951 = !DILexicalBlockFile(scope: !3948, file: !689, discriminator: 1)
!3952 = !DILocation(line: 111, column: 34, scope: !3951)
!3953 = distinct !{!3953, !3954}
!3954 = !DILocation(line: 111, column: 34, scope: !3948)
!3955 = !DILocation(line: 111, column: 67, scope: !3956)
!3956 = !DILexicalBlockFile(scope: !3957, file: !689, discriminator: 2)
!3957 = distinct !DILexicalBlock(scope: !3948, file: !689, line: 111, column: 37)
!3958 = !DILocation(line: 111, column: 72, scope: !3956)
!3959 = !DILocation(line: 111, column: 46, scope: !3956)
!3960 = !DILocation(line: 111, column: 43, scope: !3956)
!3961 = !DILocation(line: 111, column: 47, scope: !3956)
!3962 = !DILocation(line: 111, column: 59, scope: !3963)
!3963 = !DILexicalBlockFile(scope: !3964, file: !689, discriminator: 3)
!3964 = distinct !DILexicalBlock(scope: !3957, file: !689, line: 111, column: 43)
!3965 = !DILocation(line: 111, column: 52, scope: !3963)
!3966 = !DILocation(line: 111, column: 64, scope: !3967)
!3967 = !DILexicalBlockFile(scope: !3957, file: !689, discriminator: 4)
!3968 = !DILocation(line: 111, column: 110, scope: !3969)
!3969 = !DILexicalBlockFile(scope: !3948, file: !689, discriminator: 5)
!3970 = !DILocation(line: 111, column: 77, scope: !3969)
!3971 = !DILocation(line: 111, column: 86, scope: !3969)
!3972 = !DILocation(line: 111, column: 108, scope: !3969)
!3973 = !DILocation(line: 111, column: 117, scope: !3969)
!3974 = !DILocation(line: 112, column: 5, scope: !3916)
!3975 = !DILocation(line: 114, column: 5, scope: !3873)
!3976 = !DILocation(line: 115, column: 1, scope: !3873)
!3977 = distinct !DISubprogram(name: "cbs_vp9_read_frame_size_with_refs", scope: !689, file: !689, line: 117, type: !690, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!3978 = !DILocalVariable(name: "ctx", arg: 1, scope: !3977, file: !689, line: 117, type: !637)
!3979 = !DILocation(line: 117, column: 69, scope: !3977)
!3980 = !DILocalVariable(name: "rw", arg: 2, scope: !3977, file: !689, line: 117, type: !692)
!3981 = !DILocation(line: 117, column: 89, scope: !3977)
!3982 = !DILocalVariable(name: "current", arg: 3, scope: !3977, file: !689, line: 118, type: !704)
!3983 = !DILocation(line: 118, column: 58, scope: !3977)
!3984 = !DILocalVariable(name: "vp9", scope: !3977, file: !689, line: 120, type: !1040)
!3985 = !DILocation(line: 120, column: 31, scope: !3977)
!3986 = !DILocation(line: 120, column: 37, scope: !3977)
!3987 = !DILocation(line: 120, column: 42, scope: !3977)
!3988 = !DILocalVariable(name: "err", scope: !3977, file: !689, line: 121, type: !503)
!3989 = !DILocation(line: 121, column: 9, scope: !3977)
!3990 = !DILocalVariable(name: "i", scope: !3977, file: !689, line: 121, type: !503)
!3991 = !DILocation(line: 121, column: 14, scope: !3977)
!3992 = !DILocation(line: 123, column: 12, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3977, file: !689, line: 123, column: 5)
!3994 = !DILocation(line: 123, column: 10, scope: !3993)
!3995 = !DILocation(line: 123, column: 17, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3997, file: !689, discriminator: 1)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !689, line: 123, column: 5)
!3998 = !DILocation(line: 123, column: 19, scope: !3996)
!3999 = !DILocation(line: 123, column: 5, scope: !3996)
!4000 = !DILocation(line: 124, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3997, file: !689, line: 123, column: 46)
!4002 = distinct !{!4002, !4000}
!4003 = !DILocalVariable(name: "value", scope: !4004, file: !689, line: 124, type: !512)
!4004 = distinct !DILexicalBlock(scope: !4001, file: !689, line: 124, column: 12)
!4005 = !DILocation(line: 124, column: 23, scope: !4004)
!4006 = !DILocation(line: 124, column: 23, scope: !4007)
!4007 = !DILexicalBlockFile(scope: !4004, file: !689, discriminator: 1)
!4008 = !DILocation(line: 124, column: 34, scope: !4007)
!4009 = distinct !{!4009, !4010}
!4010 = !DILocation(line: 124, column: 34, scope: !4004)
!4011 = !DILocation(line: 124, column: 67, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !4013, file: !689, discriminator: 2)
!4013 = distinct !DILexicalBlock(scope: !4004, file: !689, line: 124, column: 37)
!4014 = !DILocation(line: 124, column: 72, scope: !4012)
!4015 = !DILocation(line: 124, column: 117, scope: !4012)
!4016 = !DILocation(line: 124, column: 122, scope: !4012)
!4017 = !DILocation(line: 124, column: 104, scope: !4012)
!4018 = !DILocation(line: 124, column: 46, scope: !4012)
!4019 = !DILocation(line: 124, column: 43, scope: !4012)
!4020 = !DILocation(line: 124, column: 42, scope: !4012)
!4021 = !DILocation(line: 124, column: 58, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !4023, file: !689, discriminator: 3)
!4023 = distinct !DILexicalBlock(scope: !4013, file: !689, line: 124, column: 42)
!4024 = !DILocation(line: 124, column: 51, scope: !4022)
!4025 = !DILocation(line: 124, column: 63, scope: !4026)
!4026 = !DILexicalBlockFile(scope: !4013, file: !689, discriminator: 4)
!4027 = !DILocation(line: 124, column: 100, scope: !4028)
!4028 = !DILexicalBlockFile(scope: !4004, file: !689, discriminator: 5)
!4029 = !DILocation(line: 124, column: 95, scope: !4028)
!4030 = !DILocation(line: 124, column: 76, scope: !4028)
!4031 = !DILocation(line: 124, column: 85, scope: !4028)
!4032 = !DILocation(line: 124, column: 98, scope: !4028)
!4033 = !DILocation(line: 124, column: 107, scope: !4028)
!4034 = !DILocation(line: 125, column: 32, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4001, file: !689, line: 125, column: 13)
!4036 = !DILocation(line: 125, column: 13, scope: !4035)
!4037 = !DILocation(line: 125, column: 22, scope: !4035)
!4038 = !DILocation(line: 125, column: 13, scope: !4001)
!4039 = !DILocalVariable(name: "ref", scope: !4040, file: !689, line: 126, type: !4041)
!4040 = distinct !DILexicalBlock(scope: !4035, file: !689, line: 125, column: 36)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!4042 = !DILocation(line: 126, column: 37, scope: !4040)
!4043 = !DILocation(line: 127, column: 50, scope: !4040)
!4044 = !DILocation(line: 127, column: 27, scope: !4040)
!4045 = !DILocation(line: 127, column: 36, scope: !4040)
!4046 = !DILocation(line: 127, column: 18, scope: !4040)
!4047 = !DILocation(line: 127, column: 23, scope: !4040)
!4048 = !DILocation(line: 129, column: 32, scope: !4040)
!4049 = !DILocation(line: 129, column: 37, scope: !4040)
!4050 = !DILocation(line: 129, column: 13, scope: !4040)
!4051 = !DILocation(line: 129, column: 18, scope: !4040)
!4052 = !DILocation(line: 129, column: 30, scope: !4040)
!4053 = !DILocation(line: 130, column: 33, scope: !4040)
!4054 = !DILocation(line: 130, column: 38, scope: !4040)
!4055 = !DILocation(line: 130, column: 13, scope: !4040)
!4056 = !DILocation(line: 130, column: 18, scope: !4040)
!4057 = !DILocation(line: 130, column: 31, scope: !4040)
!4058 = !DILocation(line: 132, column: 34, scope: !4040)
!4059 = !DILocation(line: 132, column: 39, scope: !4040)
!4060 = !DILocation(line: 132, column: 13, scope: !4040)
!4061 = !DILocation(line: 132, column: 18, scope: !4040)
!4062 = !DILocation(line: 132, column: 32, scope: !4040)
!4063 = !DILocation(line: 133, column: 34, scope: !4040)
!4064 = !DILocation(line: 133, column: 39, scope: !4040)
!4065 = !DILocation(line: 133, column: 13, scope: !4040)
!4066 = !DILocation(line: 133, column: 18, scope: !4040)
!4067 = !DILocation(line: 133, column: 32, scope: !4040)
!4068 = !DILocation(line: 134, column: 30, scope: !4040)
!4069 = !DILocation(line: 134, column: 35, scope: !4040)
!4070 = !DILocation(line: 134, column: 13, scope: !4040)
!4071 = !DILocation(line: 134, column: 18, scope: !4040)
!4072 = !DILocation(line: 134, column: 28, scope: !4040)
!4073 = !DILocation(line: 136, column: 13, scope: !4040)
!4074 = !DILocation(line: 138, column: 5, scope: !4001)
!4075 = !DILocation(line: 123, column: 42, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !3997, file: !689, discriminator: 2)
!4077 = !DILocation(line: 123, column: 5, scope: !4076)
!4078 = distinct !{!4078, !4079}
!4079 = !DILocation(line: 123, column: 5, scope: !3977)
!4080 = !DILocation(line: 139, column: 9, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3977, file: !689, line: 139, column: 9)
!4082 = !DILocation(line: 139, column: 11, scope: !4081)
!4083 = !DILocation(line: 139, column: 9, scope: !3977)
!4084 = !DILocation(line: 140, column: 9, scope: !4081)
!4085 = distinct !{!4085, !4084}
!4086 = !DILocation(line: 140, column: 45, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4088, file: !689, discriminator: 1)
!4088 = distinct !DILexicalBlock(scope: !4081, file: !689, line: 140, column: 12)
!4089 = !DILocation(line: 140, column: 50, scope: !4087)
!4090 = !DILocation(line: 140, column: 54, scope: !4087)
!4091 = !DILocation(line: 140, column: 21, scope: !4087)
!4092 = !DILocation(line: 140, column: 18, scope: !4087)
!4093 = !DILocation(line: 140, column: 69, scope: !4087)
!4094 = !DILocation(line: 140, column: 73, scope: !4087)
!4095 = !DILocation(line: 140, column: 85, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4097, file: !689, discriminator: 2)
!4097 = distinct !DILexicalBlock(scope: !4088, file: !689, line: 140, column: 69)
!4098 = !DILocation(line: 140, column: 78, scope: !4096)
!4099 = !DILocation(line: 140, column: 90, scope: !4100)
!4100 = !DILexicalBlockFile(scope: !4088, file: !689, discriminator: 3)
!4101 = !DILocation(line: 140, column: 90, scope: !4102)
!4102 = !DILexicalBlockFile(scope: !4088, file: !689, discriminator: 4)
!4103 = !DILocation(line: 142, column: 25, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4081, file: !689, line: 141, column: 10)
!4105 = !DILocation(line: 142, column: 30, scope: !4104)
!4106 = !DILocation(line: 142, column: 42, scope: !4104)
!4107 = !DILocation(line: 142, column: 47, scope: !4104)
!4108 = !DILocation(line: 142, column: 24, scope: !4104)
!4109 = !DILocation(line: 142, column: 9, scope: !4104)
!4110 = !DILocation(line: 142, column: 14, scope: !4104)
!4111 = !DILocation(line: 142, column: 22, scope: !4104)
!4112 = !DILocation(line: 143, column: 25, scope: !4104)
!4113 = !DILocation(line: 143, column: 30, scope: !4104)
!4114 = !DILocation(line: 143, column: 43, scope: !4104)
!4115 = !DILocation(line: 143, column: 48, scope: !4104)
!4116 = !DILocation(line: 143, column: 24, scope: !4104)
!4117 = !DILocation(line: 143, column: 9, scope: !4104)
!4118 = !DILocation(line: 143, column: 14, scope: !4104)
!4119 = !DILocation(line: 143, column: 22, scope: !4104)
!4120 = !DILocation(line: 144, column: 27, scope: !4104)
!4121 = !DILocation(line: 144, column: 32, scope: !4104)
!4122 = !DILocation(line: 144, column: 40, scope: !4104)
!4123 = !DILocation(line: 144, column: 45, scope: !4104)
!4124 = !DILocation(line: 144, column: 26, scope: !4104)
!4125 = !DILocation(line: 144, column: 9, scope: !4104)
!4126 = !DILocation(line: 144, column: 14, scope: !4104)
!4127 = !DILocation(line: 144, column: 24, scope: !4104)
!4128 = !DILocation(line: 145, column: 27, scope: !4104)
!4129 = !DILocation(line: 145, column: 32, scope: !4104)
!4130 = !DILocation(line: 145, column: 40, scope: !4104)
!4131 = !DILocation(line: 145, column: 45, scope: !4104)
!4132 = !DILocation(line: 145, column: 26, scope: !4104)
!4133 = !DILocation(line: 145, column: 9, scope: !4104)
!4134 = !DILocation(line: 145, column: 14, scope: !4104)
!4135 = !DILocation(line: 145, column: 24, scope: !4104)
!4136 = !DILocation(line: 147, column: 5, scope: !3977)
!4137 = distinct !{!4137, !4136}
!4138 = !DILocation(line: 147, column: 42, scope: !4139)
!4139 = !DILexicalBlockFile(scope: !4140, file: !689, discriminator: 1)
!4140 = distinct !DILexicalBlock(scope: !3977, file: !689, line: 147, column: 8)
!4141 = !DILocation(line: 147, column: 47, scope: !4139)
!4142 = !DILocation(line: 147, column: 51, scope: !4139)
!4143 = !DILocation(line: 147, column: 17, scope: !4139)
!4144 = !DILocation(line: 147, column: 14, scope: !4139)
!4145 = !DILocation(line: 147, column: 66, scope: !4139)
!4146 = !DILocation(line: 147, column: 70, scope: !4139)
!4147 = !DILocation(line: 147, column: 82, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4149, file: !689, discriminator: 2)
!4149 = distinct !DILexicalBlock(scope: !4140, file: !689, line: 147, column: 66)
!4150 = !DILocation(line: 147, column: 75, scope: !4148)
!4151 = !DILocation(line: 147, column: 87, scope: !4152)
!4152 = !DILexicalBlockFile(scope: !4140, file: !689, discriminator: 3)
!4153 = !DILocation(line: 149, column: 5, scope: !3977)
!4154 = !DILocation(line: 150, column: 1, scope: !3977)
!4155 = distinct !DISubprogram(name: "cbs_vp9_read_interpolation_filter", scope: !689, file: !689, line: 152, type: !690, isLocal: true, isDefinition: true, scopeLine: 154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!4156 = !DILocalVariable(name: "ctx", arg: 1, scope: !4155, file: !689, line: 152, type: !637)
!4157 = !DILocation(line: 152, column: 69, scope: !4155)
!4158 = !DILocalVariable(name: "rw", arg: 2, scope: !4155, file: !689, line: 152, type: !692)
!4159 = !DILocation(line: 152, column: 89, scope: !4155)
!4160 = !DILocalVariable(name: "current", arg: 3, scope: !4155, file: !689, line: 153, type: !704)
!4161 = !DILocation(line: 153, column: 58, scope: !4155)
!4162 = !DILocalVariable(name: "err", scope: !4155, file: !689, line: 155, type: !503)
!4163 = !DILocation(line: 155, column: 9, scope: !4155)
!4164 = !DILocation(line: 157, column: 5, scope: !4155)
!4165 = distinct !{!4165, !4164}
!4166 = !DILocalVariable(name: "value", scope: !4167, file: !689, line: 157, type: !512)
!4167 = distinct !DILexicalBlock(scope: !4155, file: !689, line: 157, column: 8)
!4168 = !DILocation(line: 157, column: 19, scope: !4167)
!4169 = !DILocation(line: 157, column: 19, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4167, file: !689, discriminator: 1)
!4171 = !DILocation(line: 157, column: 30, scope: !4170)
!4172 = distinct !{!4172, !4173}
!4173 = !DILocation(line: 157, column: 30, scope: !4167)
!4174 = !DILocation(line: 157, column: 63, scope: !4175)
!4175 = !DILexicalBlockFile(scope: !4176, file: !689, discriminator: 2)
!4176 = distinct !DILexicalBlock(scope: !4167, file: !689, line: 157, column: 33)
!4177 = !DILocation(line: 157, column: 68, scope: !4175)
!4178 = !DILocation(line: 157, column: 42, scope: !4175)
!4179 = !DILocation(line: 157, column: 39, scope: !4175)
!4180 = !DILocation(line: 157, column: 38, scope: !4175)
!4181 = !DILocation(line: 157, column: 54, scope: !4182)
!4182 = !DILexicalBlockFile(scope: !4183, file: !689, discriminator: 3)
!4183 = distinct !DILexicalBlock(scope: !4176, file: !689, line: 157, column: 38)
!4184 = !DILocation(line: 157, column: 47, scope: !4182)
!4185 = !DILocation(line: 157, column: 59, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4176, file: !689, discriminator: 4)
!4187 = !DILocation(line: 157, column: 104, scope: !4188)
!4188 = !DILexicalBlockFile(scope: !4167, file: !689, discriminator: 5)
!4189 = !DILocation(line: 157, column: 72, scope: !4188)
!4190 = !DILocation(line: 157, column: 81, scope: !4188)
!4191 = !DILocation(line: 157, column: 102, scope: !4188)
!4192 = !DILocation(line: 157, column: 111, scope: !4188)
!4193 = !DILocation(line: 158, column: 10, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4155, file: !689, line: 158, column: 9)
!4195 = !DILocation(line: 158, column: 19, scope: !4194)
!4196 = !DILocation(line: 158, column: 9, scope: !4155)
!4197 = !DILocation(line: 159, column: 9, scope: !4194)
!4198 = distinct !{!4198, !4197}
!4199 = !DILocalVariable(name: "value", scope: !4200, file: !689, line: 159, type: !512)
!4200 = distinct !DILexicalBlock(scope: !4194, file: !689, line: 159, column: 12)
!4201 = !DILocation(line: 159, column: 23, scope: !4200)
!4202 = !DILocation(line: 159, column: 23, scope: !4203)
!4203 = !DILexicalBlockFile(scope: !4200, file: !689, discriminator: 1)
!4204 = !DILocation(line: 159, column: 34, scope: !4203)
!4205 = distinct !{!4205, !4206}
!4206 = !DILocation(line: 159, column: 34, scope: !4200)
!4207 = !DILocation(line: 159, column: 67, scope: !4208)
!4208 = !DILexicalBlockFile(scope: !4209, file: !689, discriminator: 2)
!4209 = distinct !DILexicalBlock(scope: !4200, file: !689, line: 159, column: 37)
!4210 = !DILocation(line: 159, column: 72, scope: !4208)
!4211 = !DILocation(line: 159, column: 46, scope: !4208)
!4212 = !DILocation(line: 159, column: 43, scope: !4208)
!4213 = !DILocation(line: 159, column: 42, scope: !4208)
!4214 = !DILocation(line: 159, column: 58, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !4216, file: !689, discriminator: 3)
!4216 = distinct !DILexicalBlock(scope: !4209, file: !689, line: 159, column: 42)
!4217 = !DILocation(line: 159, column: 51, scope: !4215)
!4218 = !DILocation(line: 159, column: 63, scope: !4219)
!4219 = !DILexicalBlockFile(scope: !4209, file: !689, discriminator: 4)
!4220 = !DILocation(line: 159, column: 117, scope: !4221)
!4221 = !DILexicalBlockFile(scope: !4200, file: !689, discriminator: 5)
!4222 = !DILocation(line: 159, column: 76, scope: !4221)
!4223 = !DILocation(line: 159, column: 85, scope: !4221)
!4224 = !DILocation(line: 159, column: 115, scope: !4221)
!4225 = !DILocation(line: 159, column: 124, scope: !4221)
!4226 = !DILocation(line: 159, column: 124, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4200, file: !689, discriminator: 6)
!4228 = !DILocation(line: 161, column: 5, scope: !4155)
!4229 = !DILocation(line: 162, column: 1, scope: !4155)
!4230 = distinct !DISubprogram(name: "cbs_vp9_read_loop_filter_params", scope: !689, file: !689, line: 164, type: !690, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!4231 = !DILocalVariable(name: "ctx", arg: 1, scope: !4230, file: !689, line: 164, type: !637)
!4232 = !DILocation(line: 164, column: 67, scope: !4230)
!4233 = !DILocalVariable(name: "rw", arg: 2, scope: !4230, file: !689, line: 164, type: !692)
!4234 = !DILocation(line: 164, column: 87, scope: !4230)
!4235 = !DILocalVariable(name: "current", arg: 3, scope: !4230, file: !689, line: 165, type: !704)
!4236 = !DILocation(line: 165, column: 56, scope: !4230)
!4237 = !DILocalVariable(name: "err", scope: !4230, file: !689, line: 167, type: !503)
!4238 = !DILocation(line: 167, column: 9, scope: !4230)
!4239 = !DILocalVariable(name: "i", scope: !4230, file: !689, line: 167, type: !503)
!4240 = !DILocation(line: 167, column: 14, scope: !4230)
!4241 = !DILocation(line: 169, column: 5, scope: !4230)
!4242 = distinct !{!4242, !4241}
!4243 = !DILocalVariable(name: "value", scope: !4244, file: !689, line: 169, type: !512)
!4244 = distinct !DILexicalBlock(scope: !4230, file: !689, line: 169, column: 8)
!4245 = !DILocation(line: 169, column: 19, scope: !4244)
!4246 = !DILocation(line: 169, column: 19, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !4244, file: !689, discriminator: 1)
!4248 = !DILocation(line: 169, column: 30, scope: !4247)
!4249 = distinct !{!4249, !4250}
!4250 = !DILocation(line: 169, column: 30, scope: !4244)
!4251 = !DILocation(line: 169, column: 63, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !4253, file: !689, discriminator: 2)
!4253 = distinct !DILexicalBlock(scope: !4244, file: !689, line: 169, column: 33)
!4254 = !DILocation(line: 169, column: 68, scope: !4252)
!4255 = !DILocation(line: 169, column: 42, scope: !4252)
!4256 = !DILocation(line: 169, column: 39, scope: !4252)
!4257 = !DILocation(line: 169, column: 38, scope: !4252)
!4258 = !DILocation(line: 169, column: 54, scope: !4259)
!4259 = !DILexicalBlockFile(scope: !4260, file: !689, discriminator: 3)
!4260 = distinct !DILexicalBlock(scope: !4253, file: !689, line: 169, column: 38)
!4261 = !DILocation(line: 169, column: 47, scope: !4259)
!4262 = !DILocation(line: 169, column: 59, scope: !4263)
!4263 = !DILexicalBlockFile(scope: !4253, file: !689, discriminator: 4)
!4264 = !DILocation(line: 169, column: 101, scope: !4265)
!4265 = !DILexicalBlockFile(scope: !4244, file: !689, discriminator: 5)
!4266 = !DILocation(line: 169, column: 72, scope: !4265)
!4267 = !DILocation(line: 169, column: 81, scope: !4265)
!4268 = !DILocation(line: 169, column: 99, scope: !4265)
!4269 = !DILocation(line: 169, column: 108, scope: !4265)
!4270 = !DILocation(line: 170, column: 5, scope: !4230)
!4271 = distinct !{!4271, !4270}
!4272 = !DILocalVariable(name: "value", scope: !4273, file: !689, line: 170, type: !512)
!4273 = distinct !DILexicalBlock(scope: !4230, file: !689, line: 170, column: 8)
!4274 = !DILocation(line: 170, column: 19, scope: !4273)
!4275 = !DILocation(line: 170, column: 19, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !4273, file: !689, discriminator: 1)
!4277 = !DILocation(line: 170, column: 30, scope: !4276)
!4278 = distinct !{!4278, !4279}
!4279 = !DILocation(line: 170, column: 30, scope: !4273)
!4280 = !DILocation(line: 170, column: 63, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4282, file: !689, discriminator: 2)
!4282 = distinct !DILexicalBlock(scope: !4273, file: !689, line: 170, column: 33)
!4283 = !DILocation(line: 170, column: 68, scope: !4281)
!4284 = !DILocation(line: 170, column: 42, scope: !4281)
!4285 = !DILocation(line: 170, column: 39, scope: !4281)
!4286 = !DILocation(line: 170, column: 38, scope: !4281)
!4287 = !DILocation(line: 170, column: 54, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !4289, file: !689, discriminator: 3)
!4289 = distinct !DILexicalBlock(scope: !4282, file: !689, line: 170, column: 38)
!4290 = !DILocation(line: 170, column: 47, scope: !4288)
!4291 = !DILocation(line: 170, column: 59, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !4282, file: !689, discriminator: 4)
!4293 = !DILocation(line: 170, column: 105, scope: !4294)
!4294 = !DILexicalBlockFile(scope: !4273, file: !689, discriminator: 5)
!4295 = !DILocation(line: 170, column: 72, scope: !4294)
!4296 = !DILocation(line: 170, column: 81, scope: !4294)
!4297 = !DILocation(line: 170, column: 103, scope: !4294)
!4298 = !DILocation(line: 170, column: 112, scope: !4294)
!4299 = !DILocation(line: 172, column: 5, scope: !4230)
!4300 = distinct !{!4300, !4299}
!4301 = !DILocalVariable(name: "value", scope: !4302, file: !689, line: 172, type: !512)
!4302 = distinct !DILexicalBlock(scope: !4230, file: !689, line: 172, column: 8)
!4303 = !DILocation(line: 172, column: 19, scope: !4302)
!4304 = !DILocation(line: 172, column: 19, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !4302, file: !689, discriminator: 1)
!4306 = !DILocation(line: 172, column: 30, scope: !4305)
!4307 = distinct !{!4307, !4308}
!4308 = !DILocation(line: 172, column: 30, scope: !4302)
!4309 = !DILocation(line: 172, column: 63, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4311, file: !689, discriminator: 2)
!4311 = distinct !DILexicalBlock(scope: !4302, file: !689, line: 172, column: 33)
!4312 = !DILocation(line: 172, column: 68, scope: !4310)
!4313 = !DILocation(line: 172, column: 42, scope: !4310)
!4314 = !DILocation(line: 172, column: 39, scope: !4310)
!4315 = !DILocation(line: 172, column: 38, scope: !4310)
!4316 = !DILocation(line: 172, column: 54, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4318, file: !689, discriminator: 3)
!4318 = distinct !DILexicalBlock(scope: !4311, file: !689, line: 172, column: 38)
!4319 = !DILocation(line: 172, column: 47, scope: !4317)
!4320 = !DILocation(line: 172, column: 59, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4311, file: !689, discriminator: 4)
!4322 = !DILocation(line: 172, column: 109, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4302, file: !689, discriminator: 5)
!4324 = !DILocation(line: 172, column: 72, scope: !4323)
!4325 = !DILocation(line: 172, column: 81, scope: !4323)
!4326 = !DILocation(line: 172, column: 107, scope: !4323)
!4327 = !DILocation(line: 172, column: 116, scope: !4323)
!4328 = !DILocation(line: 173, column: 9, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4230, file: !689, line: 173, column: 9)
!4330 = !DILocation(line: 173, column: 18, scope: !4329)
!4331 = !DILocation(line: 173, column: 9, scope: !4230)
!4332 = !DILocation(line: 174, column: 9, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4329, file: !689, line: 173, column: 45)
!4334 = distinct !{!4334, !4332}
!4335 = !DILocalVariable(name: "value", scope: !4336, file: !689, line: 174, type: !512)
!4336 = distinct !DILexicalBlock(scope: !4333, file: !689, line: 174, column: 12)
!4337 = !DILocation(line: 174, column: 23, scope: !4336)
!4338 = !DILocation(line: 174, column: 23, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4336, file: !689, discriminator: 1)
!4340 = !DILocation(line: 174, column: 34, scope: !4339)
!4341 = distinct !{!4341, !4342}
!4342 = !DILocation(line: 174, column: 34, scope: !4336)
!4343 = !DILocation(line: 174, column: 67, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4345, file: !689, discriminator: 2)
!4345 = distinct !DILexicalBlock(scope: !4336, file: !689, line: 174, column: 37)
!4346 = !DILocation(line: 174, column: 72, scope: !4344)
!4347 = !DILocation(line: 174, column: 46, scope: !4344)
!4348 = !DILocation(line: 174, column: 43, scope: !4344)
!4349 = !DILocation(line: 174, column: 42, scope: !4344)
!4350 = !DILocation(line: 174, column: 58, scope: !4351)
!4351 = !DILexicalBlockFile(scope: !4352, file: !689, discriminator: 3)
!4352 = distinct !DILexicalBlock(scope: !4345, file: !689, line: 174, column: 42)
!4353 = !DILocation(line: 174, column: 51, scope: !4351)
!4354 = !DILocation(line: 174, column: 63, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4345, file: !689, discriminator: 4)
!4356 = !DILocation(line: 174, column: 112, scope: !4357)
!4357 = !DILexicalBlockFile(scope: !4336, file: !689, discriminator: 5)
!4358 = !DILocation(line: 174, column: 76, scope: !4357)
!4359 = !DILocation(line: 174, column: 85, scope: !4357)
!4360 = !DILocation(line: 174, column: 110, scope: !4357)
!4361 = !DILocation(line: 174, column: 119, scope: !4357)
!4362 = !DILocation(line: 175, column: 13, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4333, file: !689, line: 175, column: 13)
!4364 = !DILocation(line: 175, column: 22, scope: !4363)
!4365 = !DILocation(line: 175, column: 13, scope: !4333)
!4366 = !DILocation(line: 176, column: 20, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !689, line: 176, column: 13)
!4368 = distinct !DILexicalBlock(scope: !4363, file: !689, line: 175, column: 48)
!4369 = !DILocation(line: 176, column: 18, scope: !4367)
!4370 = !DILocation(line: 176, column: 25, scope: !4371)
!4371 = !DILexicalBlockFile(scope: !4372, file: !689, discriminator: 1)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !689, line: 176, column: 13)
!4373 = !DILocation(line: 176, column: 27, scope: !4371)
!4374 = !DILocation(line: 176, column: 13, scope: !4371)
!4375 = !DILocation(line: 177, column: 17, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4372, file: !689, line: 176, column: 54)
!4377 = distinct !{!4377, !4375}
!4378 = !DILocalVariable(name: "value", scope: !4379, file: !689, line: 177, type: !512)
!4379 = distinct !DILexicalBlock(scope: !4376, file: !689, line: 177, column: 20)
!4380 = !DILocation(line: 177, column: 31, scope: !4379)
!4381 = !DILocation(line: 177, column: 31, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4379, file: !689, discriminator: 1)
!4383 = !DILocation(line: 177, column: 42, scope: !4382)
!4384 = distinct !{!4384, !4385}
!4385 = !DILocation(line: 177, column: 42, scope: !4379)
!4386 = !DILocation(line: 177, column: 75, scope: !4387)
!4387 = !DILexicalBlockFile(scope: !4388, file: !689, discriminator: 2)
!4388 = distinct !DILexicalBlock(scope: !4379, file: !689, line: 177, column: 45)
!4389 = !DILocation(line: 177, column: 80, scope: !4387)
!4390 = !DILocation(line: 177, column: 132, scope: !4387)
!4391 = !DILocation(line: 177, column: 137, scope: !4387)
!4392 = !DILocation(line: 177, column: 119, scope: !4387)
!4393 = !DILocation(line: 177, column: 54, scope: !4387)
!4394 = !DILocation(line: 177, column: 51, scope: !4387)
!4395 = !DILocation(line: 177, column: 50, scope: !4387)
!4396 = !DILocation(line: 177, column: 66, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !4398, file: !689, discriminator: 3)
!4398 = distinct !DILexicalBlock(scope: !4388, file: !689, line: 177, column: 50)
!4399 = !DILocation(line: 177, column: 59, scope: !4397)
!4400 = !DILocation(line: 177, column: 71, scope: !4401)
!4401 = !DILexicalBlockFile(scope: !4388, file: !689, discriminator: 4)
!4402 = !DILocation(line: 177, column: 115, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4379, file: !689, discriminator: 5)
!4404 = !DILocation(line: 177, column: 110, scope: !4403)
!4405 = !DILocation(line: 177, column: 84, scope: !4403)
!4406 = !DILocation(line: 177, column: 93, scope: !4403)
!4407 = !DILocation(line: 177, column: 113, scope: !4403)
!4408 = !DILocation(line: 177, column: 122, scope: !4403)
!4409 = !DILocation(line: 178, column: 47, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4376, file: !689, line: 178, column: 21)
!4411 = !DILocation(line: 178, column: 21, scope: !4410)
!4412 = !DILocation(line: 178, column: 30, scope: !4410)
!4413 = !DILocation(line: 178, column: 21, scope: !4376)
!4414 = !DILocation(line: 179, column: 21, scope: !4410)
!4415 = distinct !{!4415, !4414}
!4416 = !DILocalVariable(name: "value", scope: !4417, file: !689, line: 179, type: !619)
!4417 = distinct !DILexicalBlock(scope: !4410, file: !689, line: 179, column: 24)
!4418 = !DILocation(line: 179, column: 34, scope: !4417)
!4419 = !DILocation(line: 179, column: 34, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !4417, file: !689, discriminator: 1)
!4421 = !DILocation(line: 179, column: 45, scope: !4420)
!4422 = distinct !{!4422, !4423}
!4423 = !DILocation(line: 179, column: 45, scope: !4417)
!4424 = !DILocation(line: 179, column: 72, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !4426, file: !689, discriminator: 2)
!4426 = distinct !DILexicalBlock(scope: !4417, file: !689, line: 179, column: 48)
!4427 = !DILocation(line: 179, column: 77, scope: !4425)
!4428 = !DILocation(line: 179, column: 135, scope: !4425)
!4429 = !DILocation(line: 179, column: 140, scope: !4425)
!4430 = !DILocation(line: 179, column: 122, scope: !4425)
!4431 = !DILocation(line: 179, column: 57, scope: !4425)
!4432 = !DILocation(line: 179, column: 54, scope: !4425)
!4433 = !DILocation(line: 179, column: 37, scope: !4425)
!4434 = !DILocation(line: 179, column: 41, scope: !4425)
!4435 = !DILocation(line: 179, column: 53, scope: !4436)
!4436 = !DILexicalBlockFile(scope: !4437, file: !689, discriminator: 3)
!4437 = distinct !DILexicalBlock(scope: !4426, file: !689, line: 179, column: 37)
!4438 = !DILocation(line: 179, column: 46, scope: !4436)
!4439 = !DILocation(line: 179, column: 58, scope: !4440)
!4440 = !DILexicalBlockFile(scope: !4426, file: !689, discriminator: 4)
!4441 = !DILocation(line: 179, column: 108, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !4417, file: !689, discriminator: 5)
!4443 = !DILocation(line: 179, column: 103, scope: !4442)
!4444 = !DILocation(line: 179, column: 71, scope: !4442)
!4445 = !DILocation(line: 179, column: 80, scope: !4442)
!4446 = !DILocation(line: 179, column: 106, scope: !4442)
!4447 = !DILocation(line: 179, column: 115, scope: !4442)
!4448 = !DILocation(line: 179, column: 115, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4417, file: !689, discriminator: 6)
!4450 = !DILocation(line: 180, column: 13, scope: !4376)
!4451 = !DILocation(line: 176, column: 50, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !4372, file: !689, discriminator: 2)
!4453 = !DILocation(line: 176, column: 13, scope: !4452)
!4454 = distinct !{!4454, !4455}
!4455 = !DILocation(line: 176, column: 13, scope: !4368)
!4456 = !DILocation(line: 181, column: 20, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4368, file: !689, line: 181, column: 13)
!4458 = !DILocation(line: 181, column: 18, scope: !4457)
!4459 = !DILocation(line: 181, column: 25, scope: !4460)
!4460 = !DILexicalBlockFile(scope: !4461, file: !689, discriminator: 1)
!4461 = distinct !DILexicalBlock(scope: !4457, file: !689, line: 181, column: 13)
!4462 = !DILocation(line: 181, column: 27, scope: !4460)
!4463 = !DILocation(line: 181, column: 13, scope: !4460)
!4464 = !DILocation(line: 182, column: 17, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4461, file: !689, line: 181, column: 37)
!4466 = distinct !{!4466, !4464}
!4467 = !DILocalVariable(name: "value", scope: !4468, file: !689, line: 182, type: !512)
!4468 = distinct !DILexicalBlock(scope: !4465, file: !689, line: 182, column: 20)
!4469 = !DILocation(line: 182, column: 31, scope: !4468)
!4470 = !DILocation(line: 182, column: 31, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !4468, file: !689, discriminator: 1)
!4472 = !DILocation(line: 182, column: 42, scope: !4471)
!4473 = distinct !{!4473, !4474}
!4474 = !DILocation(line: 182, column: 42, scope: !4468)
!4475 = !DILocation(line: 182, column: 75, scope: !4476)
!4476 = !DILexicalBlockFile(scope: !4477, file: !689, discriminator: 2)
!4477 = distinct !DILexicalBlock(scope: !4468, file: !689, line: 182, column: 45)
!4478 = !DILocation(line: 182, column: 80, scope: !4476)
!4479 = !DILocation(line: 182, column: 133, scope: !4476)
!4480 = !DILocation(line: 182, column: 138, scope: !4476)
!4481 = !DILocation(line: 182, column: 120, scope: !4476)
!4482 = !DILocation(line: 182, column: 54, scope: !4476)
!4483 = !DILocation(line: 182, column: 51, scope: !4476)
!4484 = !DILocation(line: 182, column: 50, scope: !4476)
!4485 = !DILocation(line: 182, column: 66, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !4487, file: !689, discriminator: 3)
!4487 = distinct !DILexicalBlock(scope: !4477, file: !689, line: 182, column: 50)
!4488 = !DILocation(line: 182, column: 59, scope: !4486)
!4489 = !DILocation(line: 182, column: 71, scope: !4490)
!4490 = !DILexicalBlockFile(scope: !4477, file: !689, discriminator: 4)
!4491 = !DILocation(line: 182, column: 116, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !4468, file: !689, discriminator: 5)
!4493 = !DILocation(line: 182, column: 111, scope: !4492)
!4494 = !DILocation(line: 182, column: 84, scope: !4492)
!4495 = !DILocation(line: 182, column: 93, scope: !4492)
!4496 = !DILocation(line: 182, column: 114, scope: !4492)
!4497 = !DILocation(line: 182, column: 123, scope: !4492)
!4498 = !DILocation(line: 183, column: 48, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4465, file: !689, line: 183, column: 21)
!4500 = !DILocation(line: 183, column: 21, scope: !4499)
!4501 = !DILocation(line: 183, column: 30, scope: !4499)
!4502 = !DILocation(line: 183, column: 21, scope: !4465)
!4503 = !DILocation(line: 184, column: 21, scope: !4499)
!4504 = distinct !{!4504, !4503}
!4505 = !DILocalVariable(name: "value", scope: !4506, file: !689, line: 184, type: !619)
!4506 = distinct !DILexicalBlock(scope: !4499, file: !689, line: 184, column: 24)
!4507 = !DILocation(line: 184, column: 34, scope: !4506)
!4508 = !DILocation(line: 184, column: 34, scope: !4509)
!4509 = !DILexicalBlockFile(scope: !4506, file: !689, discriminator: 1)
!4510 = !DILocation(line: 184, column: 45, scope: !4509)
!4511 = distinct !{!4511, !4512}
!4512 = !DILocation(line: 184, column: 45, scope: !4506)
!4513 = !DILocation(line: 184, column: 72, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !4515, file: !689, discriminator: 2)
!4515 = distinct !DILexicalBlock(scope: !4506, file: !689, line: 184, column: 48)
!4516 = !DILocation(line: 184, column: 77, scope: !4514)
!4517 = !DILocation(line: 184, column: 136, scope: !4514)
!4518 = !DILocation(line: 184, column: 141, scope: !4514)
!4519 = !DILocation(line: 184, column: 123, scope: !4514)
!4520 = !DILocation(line: 184, column: 57, scope: !4514)
!4521 = !DILocation(line: 184, column: 54, scope: !4514)
!4522 = !DILocation(line: 184, column: 37, scope: !4514)
!4523 = !DILocation(line: 184, column: 41, scope: !4514)
!4524 = !DILocation(line: 184, column: 53, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !4526, file: !689, discriminator: 3)
!4526 = distinct !DILexicalBlock(scope: !4515, file: !689, line: 184, column: 37)
!4527 = !DILocation(line: 184, column: 46, scope: !4525)
!4528 = !DILocation(line: 184, column: 58, scope: !4529)
!4529 = !DILexicalBlockFile(scope: !4515, file: !689, discriminator: 4)
!4530 = !DILocation(line: 184, column: 109, scope: !4531)
!4531 = !DILexicalBlockFile(scope: !4506, file: !689, discriminator: 5)
!4532 = !DILocation(line: 184, column: 104, scope: !4531)
!4533 = !DILocation(line: 184, column: 71, scope: !4531)
!4534 = !DILocation(line: 184, column: 80, scope: !4531)
!4535 = !DILocation(line: 184, column: 107, scope: !4531)
!4536 = !DILocation(line: 184, column: 116, scope: !4531)
!4537 = !DILocation(line: 184, column: 116, scope: !4538)
!4538 = !DILexicalBlockFile(scope: !4506, file: !689, discriminator: 6)
!4539 = !DILocation(line: 185, column: 13, scope: !4465)
!4540 = !DILocation(line: 181, column: 33, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !4461, file: !689, discriminator: 2)
!4542 = !DILocation(line: 181, column: 13, scope: !4541)
!4543 = distinct !{!4543, !4544}
!4544 = !DILocation(line: 181, column: 13, scope: !4368)
!4545 = !DILocation(line: 186, column: 9, scope: !4368)
!4546 = !DILocation(line: 187, column: 5, scope: !4333)
!4547 = !DILocation(line: 189, column: 5, scope: !4230)
!4548 = !DILocation(line: 190, column: 1, scope: !4230)
!4549 = distinct !DISubprogram(name: "cbs_vp9_read_quantization_params", scope: !689, file: !689, line: 192, type: !690, isLocal: true, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!4550 = !DILocalVariable(name: "ctx", arg: 1, scope: !4549, file: !689, line: 192, type: !637)
!4551 = !DILocation(line: 192, column: 68, scope: !4549)
!4552 = !DILocalVariable(name: "rw", arg: 2, scope: !4549, file: !689, line: 192, type: !692)
!4553 = !DILocation(line: 192, column: 88, scope: !4549)
!4554 = !DILocalVariable(name: "current", arg: 3, scope: !4549, file: !689, line: 193, type: !704)
!4555 = !DILocation(line: 193, column: 57, scope: !4549)
!4556 = !DILocalVariable(name: "err", scope: !4549, file: !689, line: 195, type: !503)
!4557 = !DILocation(line: 195, column: 9, scope: !4549)
!4558 = !DILocation(line: 197, column: 5, scope: !4549)
!4559 = distinct !{!4559, !4558}
!4560 = !DILocalVariable(name: "value", scope: !4561, file: !689, line: 197, type: !512)
!4561 = distinct !DILexicalBlock(scope: !4549, file: !689, line: 197, column: 8)
!4562 = !DILocation(line: 197, column: 19, scope: !4561)
!4563 = !DILocation(line: 197, column: 19, scope: !4564)
!4564 = !DILexicalBlockFile(scope: !4561, file: !689, discriminator: 1)
!4565 = !DILocation(line: 197, column: 30, scope: !4564)
!4566 = distinct !{!4566, !4567}
!4567 = !DILocation(line: 197, column: 30, scope: !4561)
!4568 = !DILocation(line: 197, column: 63, scope: !4569)
!4569 = !DILexicalBlockFile(scope: !4570, file: !689, discriminator: 2)
!4570 = distinct !DILexicalBlock(scope: !4561, file: !689, line: 197, column: 33)
!4571 = !DILocation(line: 197, column: 68, scope: !4569)
!4572 = !DILocation(line: 197, column: 42, scope: !4569)
!4573 = !DILocation(line: 197, column: 39, scope: !4569)
!4574 = !DILocation(line: 197, column: 38, scope: !4569)
!4575 = !DILocation(line: 197, column: 54, scope: !4576)
!4576 = !DILexicalBlockFile(scope: !4577, file: !689, discriminator: 3)
!4577 = distinct !DILexicalBlock(scope: !4570, file: !689, line: 197, column: 38)
!4578 = !DILocation(line: 197, column: 47, scope: !4576)
!4579 = !DILocation(line: 197, column: 59, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !4570, file: !689, discriminator: 4)
!4581 = !DILocation(line: 197, column: 94, scope: !4582)
!4582 = !DILexicalBlockFile(scope: !4561, file: !689, discriminator: 5)
!4583 = !DILocation(line: 197, column: 72, scope: !4582)
!4584 = !DILocation(line: 197, column: 81, scope: !4582)
!4585 = !DILocation(line: 197, column: 92, scope: !4582)
!4586 = !DILocation(line: 197, column: 101, scope: !4582)
!4587 = !DILocation(line: 199, column: 5, scope: !4549)
!4588 = distinct !{!4588, !4587}
!4589 = !DILocalVariable(name: "delta_coded", scope: !4590, file: !689, line: 199, type: !514)
!4590 = distinct !DILexicalBlock(scope: !4549, file: !689, line: 199, column: 8)
!4591 = !DILocation(line: 199, column: 18, scope: !4590)
!4592 = !DILocalVariable(name: "delta_q", scope: !4590, file: !689, line: 199, type: !569)
!4593 = !DILocation(line: 199, column: 38, scope: !4590)
!4594 = !DILocation(line: 199, column: 47, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !4590, file: !689, discriminator: 1)
!4596 = distinct !{!4596, !4597}
!4597 = !DILocation(line: 199, column: 47, scope: !4590)
!4598 = !DILocalVariable(name: "value", scope: !4599, file: !689, line: 199, type: !512)
!4599 = distinct !DILexicalBlock(scope: !4590, file: !689, line: 199, column: 50)
!4600 = !DILocation(line: 199, column: 61, scope: !4599)
!4601 = !DILocation(line: 199, column: 61, scope: !4602)
!4602 = !DILexicalBlockFile(scope: !4599, file: !689, discriminator: 2)
!4603 = !DILocation(line: 199, column: 72, scope: !4602)
!4604 = distinct !{!4604, !4605}
!4605 = !DILocation(line: 199, column: 72, scope: !4599)
!4606 = !DILocation(line: 199, column: 105, scope: !4607)
!4607 = !DILexicalBlockFile(scope: !4608, file: !689, discriminator: 3)
!4608 = distinct !DILexicalBlock(scope: !4599, file: !689, line: 199, column: 75)
!4609 = !DILocation(line: 199, column: 110, scope: !4607)
!4610 = !DILocation(line: 199, column: 84, scope: !4607)
!4611 = !DILocation(line: 199, column: 81, scope: !4607)
!4612 = !DILocation(line: 199, column: 38, scope: !4607)
!4613 = !DILocation(line: 199, column: 42, scope: !4607)
!4614 = !DILocation(line: 199, column: 54, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !4616, file: !689, discriminator: 4)
!4616 = distinct !DILexicalBlock(scope: !4608, file: !689, line: 199, column: 38)
!4617 = !DILocation(line: 199, column: 47, scope: !4615)
!4618 = !DILocation(line: 199, column: 59, scope: !4619)
!4619 = !DILexicalBlockFile(scope: !4608, file: !689, discriminator: 5)
!4620 = !DILocation(line: 199, column: 86, scope: !4621)
!4621 = !DILexicalBlockFile(scope: !4599, file: !689, discriminator: 6)
!4622 = !DILocation(line: 199, column: 84, scope: !4621)
!4623 = !DILocation(line: 199, column: 93, scope: !4621)
!4624 = !DILocation(line: 199, column: 110, scope: !4625)
!4625 = !DILexicalBlockFile(scope: !4626, file: !689, discriminator: 7)
!4626 = distinct !DILexicalBlock(scope: !4590, file: !689, line: 199, column: 110)
!4627 = !DILocation(line: 199, column: 123, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4626, file: !689, discriminator: 8)
!4629 = distinct !{!4629, !4630}
!4630 = !DILocation(line: 199, column: 123, scope: !4626)
!4631 = !DILocalVariable(name: "value", scope: !4632, file: !689, line: 199, type: !619)
!4632 = distinct !DILexicalBlock(scope: !4626, file: !689, line: 199, column: 126)
!4633 = !DILocation(line: 199, column: 136, scope: !4632)
!4634 = !DILocation(line: 199, column: 136, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !4632, file: !689, discriminator: 9)
!4636 = !DILocation(line: 199, column: 147, scope: !4635)
!4637 = distinct !{!4637, !4638}
!4638 = !DILocation(line: 199, column: 147, scope: !4632)
!4639 = !DILocation(line: 199, column: 174, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4641, file: !689, discriminator: 10)
!4641 = distinct !DILexicalBlock(scope: !4632, file: !689, line: 199, column: 150)
!4642 = !DILocation(line: 199, column: 179, scope: !4640)
!4643 = !DILocation(line: 199, column: 159, scope: !4640)
!4644 = !DILocation(line: 199, column: 156, scope: !4640)
!4645 = !DILocation(line: 199, column: 21, scope: !4640)
!4646 = !DILocation(line: 199, column: 25, scope: !4640)
!4647 = !DILocation(line: 199, column: 37, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !4649, file: !689, discriminator: 11)
!4649 = distinct !DILexicalBlock(scope: !4641, file: !689, line: 199, column: 21)
!4650 = !DILocation(line: 199, column: 30, scope: !4648)
!4651 = !DILocation(line: 199, column: 42, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !4641, file: !689, discriminator: 12)
!4653 = !DILocation(line: 199, column: 65, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !4632, file: !689, discriminator: 13)
!4655 = !DILocation(line: 199, column: 63, scope: !4654)
!4656 = !DILocation(line: 199, column: 72, scope: !4654)
!4657 = !DILocation(line: 199, column: 72, scope: !4658)
!4658 = !DILexicalBlockFile(scope: !4632, file: !689, discriminator: 14)
!4659 = !DILocation(line: 199, column: 98, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !4626, file: !689, discriminator: 15)
!4661 = !DILocation(line: 199, column: 127, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4590, file: !689, discriminator: 16)
!4663 = !DILocation(line: 199, column: 103, scope: !4662)
!4664 = !DILocation(line: 199, column: 112, scope: !4662)
!4665 = !DILocation(line: 199, column: 125, scope: !4662)
!4666 = !DILocation(line: 199, column: 136, scope: !4662)
!4667 = !DILocation(line: 200, column: 5, scope: !4549)
!4668 = distinct !{!4668, !4667}
!4669 = !DILocalVariable(name: "delta_coded", scope: !4670, file: !689, line: 200, type: !514)
!4670 = distinct !DILexicalBlock(scope: !4549, file: !689, line: 200, column: 8)
!4671 = !DILocation(line: 200, column: 18, scope: !4670)
!4672 = !DILocalVariable(name: "delta_q", scope: !4670, file: !689, line: 200, type: !569)
!4673 = !DILocation(line: 200, column: 38, scope: !4670)
!4674 = !DILocation(line: 200, column: 47, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !4670, file: !689, discriminator: 1)
!4676 = distinct !{!4676, !4677}
!4677 = !DILocation(line: 200, column: 47, scope: !4670)
!4678 = !DILocalVariable(name: "value", scope: !4679, file: !689, line: 200, type: !512)
!4679 = distinct !DILexicalBlock(scope: !4670, file: !689, line: 200, column: 50)
!4680 = !DILocation(line: 200, column: 61, scope: !4679)
!4681 = !DILocation(line: 200, column: 61, scope: !4682)
!4682 = !DILexicalBlockFile(scope: !4679, file: !689, discriminator: 2)
!4683 = !DILocation(line: 200, column: 72, scope: !4682)
!4684 = distinct !{!4684, !4685}
!4685 = !DILocation(line: 200, column: 72, scope: !4679)
!4686 = !DILocation(line: 200, column: 105, scope: !4687)
!4687 = !DILexicalBlockFile(scope: !4688, file: !689, discriminator: 3)
!4688 = distinct !DILexicalBlock(scope: !4679, file: !689, line: 200, column: 75)
!4689 = !DILocation(line: 200, column: 110, scope: !4687)
!4690 = !DILocation(line: 200, column: 84, scope: !4687)
!4691 = !DILocation(line: 200, column: 81, scope: !4687)
!4692 = !DILocation(line: 200, column: 38, scope: !4687)
!4693 = !DILocation(line: 200, column: 42, scope: !4687)
!4694 = !DILocation(line: 200, column: 54, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4696, file: !689, discriminator: 4)
!4696 = distinct !DILexicalBlock(scope: !4688, file: !689, line: 200, column: 38)
!4697 = !DILocation(line: 200, column: 47, scope: !4695)
!4698 = !DILocation(line: 200, column: 59, scope: !4699)
!4699 = !DILexicalBlockFile(scope: !4688, file: !689, discriminator: 5)
!4700 = !DILocation(line: 200, column: 86, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4679, file: !689, discriminator: 6)
!4702 = !DILocation(line: 200, column: 84, scope: !4701)
!4703 = !DILocation(line: 200, column: 93, scope: !4701)
!4704 = !DILocation(line: 200, column: 110, scope: !4705)
!4705 = !DILexicalBlockFile(scope: !4706, file: !689, discriminator: 7)
!4706 = distinct !DILexicalBlock(scope: !4670, file: !689, line: 200, column: 110)
!4707 = !DILocation(line: 200, column: 123, scope: !4708)
!4708 = !DILexicalBlockFile(scope: !4706, file: !689, discriminator: 8)
!4709 = distinct !{!4709, !4710}
!4710 = !DILocation(line: 200, column: 123, scope: !4706)
!4711 = !DILocalVariable(name: "value", scope: !4712, file: !689, line: 200, type: !619)
!4712 = distinct !DILexicalBlock(scope: !4706, file: !689, line: 200, column: 126)
!4713 = !DILocation(line: 200, column: 136, scope: !4712)
!4714 = !DILocation(line: 200, column: 136, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4712, file: !689, discriminator: 9)
!4716 = !DILocation(line: 200, column: 147, scope: !4715)
!4717 = distinct !{!4717, !4718}
!4718 = !DILocation(line: 200, column: 147, scope: !4712)
!4719 = !DILocation(line: 200, column: 174, scope: !4720)
!4720 = !DILexicalBlockFile(scope: !4721, file: !689, discriminator: 10)
!4721 = distinct !DILexicalBlock(scope: !4712, file: !689, line: 200, column: 150)
!4722 = !DILocation(line: 200, column: 179, scope: !4720)
!4723 = !DILocation(line: 200, column: 159, scope: !4720)
!4724 = !DILocation(line: 200, column: 156, scope: !4720)
!4725 = !DILocation(line: 200, column: 21, scope: !4720)
!4726 = !DILocation(line: 200, column: 25, scope: !4720)
!4727 = !DILocation(line: 200, column: 37, scope: !4728)
!4728 = !DILexicalBlockFile(scope: !4729, file: !689, discriminator: 11)
!4729 = distinct !DILexicalBlock(scope: !4721, file: !689, line: 200, column: 21)
!4730 = !DILocation(line: 200, column: 30, scope: !4728)
!4731 = !DILocation(line: 200, column: 42, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !4721, file: !689, discriminator: 12)
!4733 = !DILocation(line: 200, column: 65, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4712, file: !689, discriminator: 13)
!4735 = !DILocation(line: 200, column: 63, scope: !4734)
!4736 = !DILocation(line: 200, column: 72, scope: !4734)
!4737 = !DILocation(line: 200, column: 72, scope: !4738)
!4738 = !DILexicalBlockFile(scope: !4712, file: !689, discriminator: 14)
!4739 = !DILocation(line: 200, column: 98, scope: !4740)
!4740 = !DILexicalBlockFile(scope: !4706, file: !689, discriminator: 15)
!4741 = !DILocation(line: 200, column: 128, scope: !4742)
!4742 = !DILexicalBlockFile(scope: !4670, file: !689, discriminator: 16)
!4743 = !DILocation(line: 200, column: 103, scope: !4742)
!4744 = !DILocation(line: 200, column: 112, scope: !4742)
!4745 = !DILocation(line: 200, column: 126, scope: !4742)
!4746 = !DILocation(line: 200, column: 137, scope: !4742)
!4747 = !DILocation(line: 201, column: 5, scope: !4549)
!4748 = distinct !{!4748, !4747}
!4749 = !DILocalVariable(name: "delta_coded", scope: !4750, file: !689, line: 201, type: !514)
!4750 = distinct !DILexicalBlock(scope: !4549, file: !689, line: 201, column: 8)
!4751 = !DILocation(line: 201, column: 18, scope: !4750)
!4752 = !DILocalVariable(name: "delta_q", scope: !4750, file: !689, line: 201, type: !569)
!4753 = !DILocation(line: 201, column: 38, scope: !4750)
!4754 = !DILocation(line: 201, column: 47, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4750, file: !689, discriminator: 1)
!4756 = distinct !{!4756, !4757}
!4757 = !DILocation(line: 201, column: 47, scope: !4750)
!4758 = !DILocalVariable(name: "value", scope: !4759, file: !689, line: 201, type: !512)
!4759 = distinct !DILexicalBlock(scope: !4750, file: !689, line: 201, column: 50)
!4760 = !DILocation(line: 201, column: 61, scope: !4759)
!4761 = !DILocation(line: 201, column: 61, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4759, file: !689, discriminator: 2)
!4763 = !DILocation(line: 201, column: 72, scope: !4762)
!4764 = distinct !{!4764, !4765}
!4765 = !DILocation(line: 201, column: 72, scope: !4759)
!4766 = !DILocation(line: 201, column: 105, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !4768, file: !689, discriminator: 3)
!4768 = distinct !DILexicalBlock(scope: !4759, file: !689, line: 201, column: 75)
!4769 = !DILocation(line: 201, column: 110, scope: !4767)
!4770 = !DILocation(line: 201, column: 84, scope: !4767)
!4771 = !DILocation(line: 201, column: 81, scope: !4767)
!4772 = !DILocation(line: 201, column: 38, scope: !4767)
!4773 = !DILocation(line: 201, column: 42, scope: !4767)
!4774 = !DILocation(line: 201, column: 54, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4776, file: !689, discriminator: 4)
!4776 = distinct !DILexicalBlock(scope: !4768, file: !689, line: 201, column: 38)
!4777 = !DILocation(line: 201, column: 47, scope: !4775)
!4778 = !DILocation(line: 201, column: 59, scope: !4779)
!4779 = !DILexicalBlockFile(scope: !4768, file: !689, discriminator: 5)
!4780 = !DILocation(line: 201, column: 86, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !4759, file: !689, discriminator: 6)
!4782 = !DILocation(line: 201, column: 84, scope: !4781)
!4783 = !DILocation(line: 201, column: 93, scope: !4781)
!4784 = !DILocation(line: 201, column: 110, scope: !4785)
!4785 = !DILexicalBlockFile(scope: !4786, file: !689, discriminator: 7)
!4786 = distinct !DILexicalBlock(scope: !4750, file: !689, line: 201, column: 110)
!4787 = !DILocation(line: 201, column: 123, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !4786, file: !689, discriminator: 8)
!4789 = distinct !{!4789, !4790}
!4790 = !DILocation(line: 201, column: 123, scope: !4786)
!4791 = !DILocalVariable(name: "value", scope: !4792, file: !689, line: 201, type: !619)
!4792 = distinct !DILexicalBlock(scope: !4786, file: !689, line: 201, column: 126)
!4793 = !DILocation(line: 201, column: 136, scope: !4792)
!4794 = !DILocation(line: 201, column: 136, scope: !4795)
!4795 = !DILexicalBlockFile(scope: !4792, file: !689, discriminator: 9)
!4796 = !DILocation(line: 201, column: 147, scope: !4795)
!4797 = distinct !{!4797, !4798}
!4798 = !DILocation(line: 201, column: 147, scope: !4792)
!4799 = !DILocation(line: 201, column: 174, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4801, file: !689, discriminator: 10)
!4801 = distinct !DILexicalBlock(scope: !4792, file: !689, line: 201, column: 150)
!4802 = !DILocation(line: 201, column: 179, scope: !4800)
!4803 = !DILocation(line: 201, column: 159, scope: !4800)
!4804 = !DILocation(line: 201, column: 156, scope: !4800)
!4805 = !DILocation(line: 201, column: 21, scope: !4800)
!4806 = !DILocation(line: 201, column: 25, scope: !4800)
!4807 = !DILocation(line: 201, column: 37, scope: !4808)
!4808 = !DILexicalBlockFile(scope: !4809, file: !689, discriminator: 11)
!4809 = distinct !DILexicalBlock(scope: !4801, file: !689, line: 201, column: 21)
!4810 = !DILocation(line: 201, column: 30, scope: !4808)
!4811 = !DILocation(line: 201, column: 42, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4801, file: !689, discriminator: 12)
!4813 = !DILocation(line: 201, column: 65, scope: !4814)
!4814 = !DILexicalBlockFile(scope: !4792, file: !689, discriminator: 13)
!4815 = !DILocation(line: 201, column: 63, scope: !4814)
!4816 = !DILocation(line: 201, column: 72, scope: !4814)
!4817 = !DILocation(line: 201, column: 72, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4792, file: !689, discriminator: 14)
!4819 = !DILocation(line: 201, column: 98, scope: !4820)
!4820 = !DILexicalBlockFile(scope: !4786, file: !689, discriminator: 15)
!4821 = !DILocation(line: 201, column: 128, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4750, file: !689, discriminator: 16)
!4823 = !DILocation(line: 201, column: 103, scope: !4822)
!4824 = !DILocation(line: 201, column: 112, scope: !4822)
!4825 = !DILocation(line: 201, column: 126, scope: !4822)
!4826 = !DILocation(line: 201, column: 137, scope: !4822)
!4827 = !DILocation(line: 203, column: 5, scope: !4549)
!4828 = !DILocation(line: 204, column: 1, scope: !4549)
!4829 = !DILocalVariable(name: "ctx", arg: 1, scope: !688, file: !689, line: 206, type: !637)
!4830 = !DILocation(line: 206, column: 68, scope: !688)
!4831 = !DILocalVariable(name: "rw", arg: 2, scope: !688, file: !689, line: 206, type: !692)
!4832 = !DILocation(line: 206, column: 88, scope: !688)
!4833 = !DILocalVariable(name: "current", arg: 3, scope: !688, file: !689, line: 207, type: !704)
!4834 = !DILocation(line: 207, column: 57, scope: !688)
!4835 = !DILocalVariable(name: "err", scope: !688, file: !689, line: 212, type: !503)
!4836 = !DILocation(line: 212, column: 9, scope: !688)
!4837 = !DILocalVariable(name: "i", scope: !688, file: !689, line: 212, type: !503)
!4838 = !DILocation(line: 212, column: 14, scope: !688)
!4839 = !DILocalVariable(name: "j", scope: !688, file: !689, line: 212, type: !503)
!4840 = !DILocation(line: 212, column: 17, scope: !688)
!4841 = !DILocation(line: 214, column: 5, scope: !688)
!4842 = distinct !{!4842, !4841}
!4843 = !DILocalVariable(name: "value", scope: !4844, file: !689, line: 214, type: !512)
!4844 = distinct !DILexicalBlock(scope: !688, file: !689, line: 214, column: 8)
!4845 = !DILocation(line: 214, column: 19, scope: !4844)
!4846 = !DILocation(line: 214, column: 19, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4844, file: !689, discriminator: 1)
!4848 = !DILocation(line: 214, column: 30, scope: !4847)
!4849 = distinct !{!4849, !4850}
!4850 = !DILocation(line: 214, column: 30, scope: !4844)
!4851 = !DILocation(line: 214, column: 63, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4853, file: !689, discriminator: 2)
!4853 = distinct !DILexicalBlock(scope: !4844, file: !689, line: 214, column: 33)
!4854 = !DILocation(line: 214, column: 68, scope: !4852)
!4855 = !DILocation(line: 214, column: 42, scope: !4852)
!4856 = !DILocation(line: 214, column: 39, scope: !4852)
!4857 = !DILocation(line: 214, column: 38, scope: !4852)
!4858 = !DILocation(line: 214, column: 54, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4860, file: !689, discriminator: 3)
!4860 = distinct !DILexicalBlock(scope: !4853, file: !689, line: 214, column: 38)
!4861 = !DILocation(line: 214, column: 47, scope: !4859)
!4862 = !DILocation(line: 214, column: 59, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4853, file: !689, discriminator: 4)
!4864 = !DILocation(line: 214, column: 104, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4844, file: !689, discriminator: 5)
!4866 = !DILocation(line: 214, column: 72, scope: !4865)
!4867 = !DILocation(line: 214, column: 81, scope: !4865)
!4868 = !DILocation(line: 214, column: 102, scope: !4865)
!4869 = !DILocation(line: 214, column: 111, scope: !4865)
!4870 = !DILocation(line: 216, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !688, file: !689, line: 216, column: 9)
!4872 = !DILocation(line: 216, column: 18, scope: !4871)
!4873 = !DILocation(line: 216, column: 9, scope: !688)
!4874 = !DILocation(line: 217, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !689, line: 216, column: 40)
!4876 = distinct !{!4876, !4874}
!4877 = !DILocalVariable(name: "value", scope: !4878, file: !689, line: 217, type: !512)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !689, line: 217, column: 12)
!4879 = !DILocation(line: 217, column: 23, scope: !4878)
!4880 = !DILocation(line: 217, column: 23, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4878, file: !689, discriminator: 1)
!4882 = !DILocation(line: 217, column: 34, scope: !4881)
!4883 = distinct !{!4883, !4884}
!4884 = !DILocation(line: 217, column: 34, scope: !4878)
!4885 = !DILocation(line: 217, column: 67, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4887, file: !689, discriminator: 2)
!4887 = distinct !DILexicalBlock(scope: !4878, file: !689, line: 217, column: 37)
!4888 = !DILocation(line: 217, column: 72, scope: !4886)
!4889 = !DILocation(line: 217, column: 46, scope: !4886)
!4890 = !DILocation(line: 217, column: 43, scope: !4886)
!4891 = !DILocation(line: 217, column: 42, scope: !4886)
!4892 = !DILocation(line: 217, column: 58, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4894, file: !689, discriminator: 3)
!4894 = distinct !DILexicalBlock(scope: !4887, file: !689, line: 217, column: 42)
!4895 = !DILocation(line: 217, column: 51, scope: !4893)
!4896 = !DILocation(line: 217, column: 63, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4887, file: !689, discriminator: 4)
!4898 = !DILocation(line: 217, column: 111, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !4878, file: !689, discriminator: 5)
!4900 = !DILocation(line: 217, column: 76, scope: !4899)
!4901 = !DILocation(line: 217, column: 85, scope: !4899)
!4902 = !DILocation(line: 217, column: 109, scope: !4899)
!4903 = !DILocation(line: 217, column: 118, scope: !4899)
!4904 = !DILocation(line: 218, column: 13, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4875, file: !689, line: 218, column: 13)
!4906 = !DILocation(line: 218, column: 22, scope: !4905)
!4907 = !DILocation(line: 218, column: 13, scope: !4875)
!4908 = !DILocation(line: 219, column: 20, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !689, line: 219, column: 13)
!4910 = distinct !DILexicalBlock(scope: !4905, file: !689, line: 218, column: 47)
!4911 = !DILocation(line: 219, column: 18, scope: !4909)
!4912 = !DILocation(line: 219, column: 25, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4914, file: !689, discriminator: 1)
!4914 = distinct !DILexicalBlock(scope: !4909, file: !689, line: 219, column: 13)
!4915 = !DILocation(line: 219, column: 27, scope: !4913)
!4916 = !DILocation(line: 219, column: 13, scope: !4913)
!4917 = !DILocation(line: 220, column: 17, scope: !4914)
!4918 = distinct !{!4918, !4917}
!4919 = !DILocalVariable(name: "prob_coded", scope: !4920, file: !689, line: 220, type: !514)
!4920 = distinct !DILexicalBlock(scope: !4914, file: !689, line: 220, column: 20)
!4921 = !DILocation(line: 220, column: 30, scope: !4920)
!4922 = !DILocalVariable(name: "prob", scope: !4920, file: !689, line: 220, type: !514)
!4923 = !DILocation(line: 220, column: 50, scope: !4920)
!4924 = !DILocation(line: 220, column: 56, scope: !4925)
!4925 = !DILexicalBlockFile(scope: !4920, file: !689, discriminator: 1)
!4926 = distinct !{!4926, !4927}
!4927 = !DILocation(line: 220, column: 56, scope: !4920)
!4928 = !DILocalVariable(name: "value", scope: !4929, file: !689, line: 220, type: !512)
!4929 = distinct !DILexicalBlock(scope: !4920, file: !689, line: 220, column: 59)
!4930 = !DILocation(line: 220, column: 70, scope: !4929)
!4931 = !DILocation(line: 220, column: 70, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !4929, file: !689, discriminator: 2)
!4933 = !DILocation(line: 220, column: 81, scope: !4932)
!4934 = distinct !{!4934, !4935}
!4935 = !DILocation(line: 220, column: 81, scope: !4929)
!4936 = !DILocation(line: 220, column: 114, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !4938, file: !689, discriminator: 3)
!4938 = distinct !DILexicalBlock(scope: !4929, file: !689, line: 220, column: 84)
!4939 = !DILocation(line: 220, column: 119, scope: !4937)
!4940 = !DILocation(line: 220, column: 189, scope: !4937)
!4941 = !DILocation(line: 220, column: 194, scope: !4937)
!4942 = !DILocation(line: 220, column: 176, scope: !4937)
!4943 = !DILocation(line: 220, column: 93, scope: !4937)
!4944 = !DILocation(line: 220, column: 90, scope: !4937)
!4945 = !DILocation(line: 220, column: 50, scope: !4937)
!4946 = !DILocation(line: 220, column: 54, scope: !4937)
!4947 = !DILocation(line: 220, column: 66, scope: !4948)
!4948 = !DILexicalBlockFile(scope: !4949, file: !689, discriminator: 4)
!4949 = distinct !DILexicalBlock(scope: !4938, file: !689, line: 220, column: 50)
!4950 = !DILocation(line: 220, column: 59, scope: !4948)
!4951 = !DILocation(line: 220, column: 71, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4938, file: !689, discriminator: 5)
!4953 = !DILocation(line: 220, column: 97, scope: !4954)
!4954 = !DILexicalBlockFile(scope: !4929, file: !689, discriminator: 6)
!4955 = !DILocation(line: 220, column: 95, scope: !4954)
!4956 = !DILocation(line: 220, column: 104, scope: !4954)
!4957 = !DILocation(line: 220, column: 121, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !4959, file: !689, discriminator: 7)
!4959 = distinct !DILexicalBlock(scope: !4920, file: !689, line: 220, column: 121)
!4960 = !DILocation(line: 220, column: 133, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !4959, file: !689, discriminator: 8)
!4962 = distinct !{!4962, !4963}
!4963 = !DILocation(line: 220, column: 133, scope: !4959)
!4964 = !DILocalVariable(name: "value", scope: !4965, file: !689, line: 220, type: !512)
!4965 = distinct !DILexicalBlock(scope: !4959, file: !689, line: 220, column: 136)
!4966 = !DILocation(line: 220, column: 147, scope: !4965)
!4967 = !DILocation(line: 220, column: 147, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !4965, file: !689, discriminator: 9)
!4969 = !DILocation(line: 220, column: 158, scope: !4968)
!4970 = distinct !{!4970, !4971}
!4971 = !DILocation(line: 220, column: 158, scope: !4965)
!4972 = !DILocation(line: 220, column: 191, scope: !4973)
!4973 = !DILexicalBlockFile(scope: !4974, file: !689, discriminator: 10)
!4974 = distinct !DILexicalBlock(scope: !4965, file: !689, line: 220, column: 161)
!4975 = !DILocation(line: 220, column: 196, scope: !4973)
!4976 = !DILocation(line: 220, column: 260, scope: !4973)
!4977 = !DILocation(line: 220, column: 265, scope: !4973)
!4978 = !DILocation(line: 220, column: 247, scope: !4973)
!4979 = !DILocation(line: 220, column: 170, scope: !4973)
!4980 = !DILocation(line: 220, column: 167, scope: !4973)
!4981 = !DILocation(line: 220, column: 50, scope: !4973)
!4982 = !DILocation(line: 220, column: 54, scope: !4973)
!4983 = !DILocation(line: 220, column: 66, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4985, file: !689, discriminator: 11)
!4985 = distinct !DILexicalBlock(scope: !4974, file: !689, line: 220, column: 50)
!4986 = !DILocation(line: 220, column: 59, scope: !4984)
!4987 = !DILocation(line: 220, column: 71, scope: !4988)
!4988 = !DILexicalBlockFile(scope: !4974, file: !689, discriminator: 12)
!4989 = !DILocation(line: 220, column: 91, scope: !4990)
!4990 = !DILexicalBlockFile(scope: !4965, file: !689, discriminator: 13)
!4991 = !DILocation(line: 220, column: 89, scope: !4990)
!4992 = !DILocation(line: 220, column: 98, scope: !4990)
!4993 = !DILocation(line: 220, column: 98, scope: !4994)
!4994 = !DILexicalBlockFile(scope: !4965, file: !689, discriminator: 14)
!4995 = !DILocation(line: 220, column: 121, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !4959, file: !689, discriminator: 15)
!4997 = !DILocation(line: 220, column: 166, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !4920, file: !689, discriminator: 16)
!4999 = !DILocation(line: 220, column: 161, scope: !4998)
!5000 = !DILocation(line: 220, column: 128, scope: !4998)
!5001 = !DILocation(line: 220, column: 137, scope: !4998)
!5002 = !DILocation(line: 220, column: 164, scope: !4998)
!5003 = !DILocation(line: 220, column: 172, scope: !4998)
!5004 = !DILocation(line: 220, column: 172, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !4920, file: !689, discriminator: 17)
!5006 = !DILocation(line: 219, column: 33, scope: !5007)
!5007 = !DILexicalBlockFile(scope: !4914, file: !689, discriminator: 2)
!5008 = !DILocation(line: 219, column: 13, scope: !5007)
!5009 = distinct !{!5009, !5010}
!5010 = !DILocation(line: 219, column: 13, scope: !4910)
!5011 = !DILocation(line: 221, column: 13, scope: !4910)
!5012 = distinct !{!5012, !5011}
!5013 = !DILocalVariable(name: "value", scope: !5014, file: !689, line: 221, type: !512)
!5014 = distinct !DILexicalBlock(scope: !4910, file: !689, line: 221, column: 16)
!5015 = !DILocation(line: 221, column: 27, scope: !5014)
!5016 = !DILocation(line: 221, column: 27, scope: !5017)
!5017 = !DILexicalBlockFile(scope: !5014, file: !689, discriminator: 1)
!5018 = !DILocation(line: 221, column: 38, scope: !5017)
!5019 = distinct !{!5019, !5020}
!5020 = !DILocation(line: 221, column: 38, scope: !5014)
!5021 = !DILocation(line: 221, column: 71, scope: !5022)
!5022 = !DILexicalBlockFile(scope: !5023, file: !689, discriminator: 2)
!5023 = distinct !DILexicalBlock(scope: !5014, file: !689, line: 221, column: 41)
!5024 = !DILocation(line: 221, column: 76, scope: !5022)
!5025 = !DILocation(line: 221, column: 50, scope: !5022)
!5026 = !DILocation(line: 221, column: 47, scope: !5022)
!5027 = !DILocation(line: 221, column: 46, scope: !5022)
!5028 = !DILocation(line: 221, column: 62, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !5030, file: !689, discriminator: 3)
!5030 = distinct !DILexicalBlock(scope: !5023, file: !689, line: 221, column: 46)
!5031 = !DILocation(line: 221, column: 55, scope: !5029)
!5032 = !DILocation(line: 221, column: 67, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !5023, file: !689, discriminator: 4)
!5034 = !DILocation(line: 221, column: 120, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !5014, file: !689, discriminator: 5)
!5036 = !DILocation(line: 221, column: 80, scope: !5035)
!5037 = !DILocation(line: 221, column: 89, scope: !5035)
!5038 = !DILocation(line: 221, column: 118, scope: !5035)
!5039 = !DILocation(line: 221, column: 127, scope: !5035)
!5040 = !DILocation(line: 222, column: 20, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !4910, file: !689, line: 222, column: 13)
!5042 = !DILocation(line: 222, column: 18, scope: !5041)
!5043 = !DILocation(line: 222, column: 25, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5045, file: !689, discriminator: 1)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !689, line: 222, column: 13)
!5046 = !DILocation(line: 222, column: 27, scope: !5044)
!5047 = !DILocation(line: 222, column: 13, scope: !5044)
!5048 = !DILocation(line: 223, column: 21, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !689, line: 223, column: 21)
!5050 = distinct !DILexicalBlock(scope: !5045, file: !689, line: 222, column: 37)
!5051 = !DILocation(line: 223, column: 30, scope: !5049)
!5052 = !DILocation(line: 223, column: 21, scope: !5050)
!5053 = !DILocation(line: 224, column: 21, scope: !5049)
!5054 = distinct !{!5054, !5053}
!5055 = !DILocalVariable(name: "prob_coded", scope: !5056, file: !689, line: 224, type: !514)
!5056 = distinct !DILexicalBlock(scope: !5049, file: !689, line: 224, column: 24)
!5057 = !DILocation(line: 224, column: 34, scope: !5056)
!5058 = !DILocalVariable(name: "prob", scope: !5056, file: !689, line: 224, type: !514)
!5059 = !DILocation(line: 224, column: 54, scope: !5056)
!5060 = !DILocation(line: 224, column: 60, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5056, file: !689, discriminator: 1)
!5062 = distinct !{!5062, !5063}
!5063 = !DILocation(line: 224, column: 60, scope: !5056)
!5064 = !DILocalVariable(name: "value", scope: !5065, file: !689, line: 224, type: !512)
!5065 = distinct !DILexicalBlock(scope: !5056, file: !689, line: 224, column: 63)
!5066 = !DILocation(line: 224, column: 74, scope: !5065)
!5067 = !DILocation(line: 224, column: 74, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5065, file: !689, discriminator: 2)
!5069 = !DILocation(line: 224, column: 85, scope: !5068)
!5070 = distinct !{!5070, !5071}
!5071 = !DILocation(line: 224, column: 85, scope: !5065)
!5072 = !DILocation(line: 224, column: 118, scope: !5073)
!5073 = !DILexicalBlockFile(scope: !5074, file: !689, discriminator: 3)
!5074 = distinct !DILexicalBlock(scope: !5065, file: !689, line: 224, column: 88)
!5075 = !DILocation(line: 224, column: 123, scope: !5073)
!5076 = !DILocation(line: 224, column: 192, scope: !5073)
!5077 = !DILocation(line: 224, column: 197, scope: !5073)
!5078 = !DILocation(line: 224, column: 179, scope: !5073)
!5079 = !DILocation(line: 224, column: 97, scope: !5073)
!5080 = !DILocation(line: 224, column: 94, scope: !5073)
!5081 = !DILocation(line: 224, column: 54, scope: !5073)
!5082 = !DILocation(line: 224, column: 58, scope: !5073)
!5083 = !DILocation(line: 224, column: 70, scope: !5084)
!5084 = !DILexicalBlockFile(scope: !5085, file: !689, discriminator: 4)
!5085 = distinct !DILexicalBlock(scope: !5074, file: !689, line: 224, column: 54)
!5086 = !DILocation(line: 224, column: 63, scope: !5084)
!5087 = !DILocation(line: 224, column: 75, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !5074, file: !689, discriminator: 5)
!5089 = !DILocation(line: 224, column: 101, scope: !5090)
!5090 = !DILexicalBlockFile(scope: !5065, file: !689, discriminator: 6)
!5091 = !DILocation(line: 224, column: 99, scope: !5090)
!5092 = !DILocation(line: 224, column: 108, scope: !5090)
!5093 = !DILocation(line: 224, column: 125, scope: !5094)
!5094 = !DILexicalBlockFile(scope: !5095, file: !689, discriminator: 7)
!5095 = distinct !DILexicalBlock(scope: !5056, file: !689, line: 224, column: 125)
!5096 = !DILocation(line: 224, column: 137, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !5095, file: !689, discriminator: 8)
!5098 = distinct !{!5098, !5099}
!5099 = !DILocation(line: 224, column: 137, scope: !5095)
!5100 = !DILocalVariable(name: "value", scope: !5101, file: !689, line: 224, type: !512)
!5101 = distinct !DILexicalBlock(scope: !5095, file: !689, line: 224, column: 140)
!5102 = !DILocation(line: 224, column: 151, scope: !5101)
!5103 = !DILocation(line: 224, column: 151, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !5101, file: !689, discriminator: 9)
!5105 = !DILocation(line: 224, column: 162, scope: !5104)
!5106 = distinct !{!5106, !5107}
!5107 = !DILocation(line: 224, column: 162, scope: !5101)
!5108 = !DILocation(line: 224, column: 195, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !5110, file: !689, discriminator: 10)
!5110 = distinct !DILexicalBlock(scope: !5101, file: !689, line: 224, column: 165)
!5111 = !DILocation(line: 224, column: 200, scope: !5109)
!5112 = !DILocation(line: 224, column: 263, scope: !5109)
!5113 = !DILocation(line: 224, column: 268, scope: !5109)
!5114 = !DILocation(line: 224, column: 250, scope: !5109)
!5115 = !DILocation(line: 224, column: 174, scope: !5109)
!5116 = !DILocation(line: 224, column: 171, scope: !5109)
!5117 = !DILocation(line: 224, column: 54, scope: !5109)
!5118 = !DILocation(line: 224, column: 58, scope: !5109)
!5119 = !DILocation(line: 224, column: 70, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !5121, file: !689, discriminator: 11)
!5121 = distinct !DILexicalBlock(scope: !5110, file: !689, line: 224, column: 54)
!5122 = !DILocation(line: 224, column: 63, scope: !5120)
!5123 = !DILocation(line: 224, column: 75, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !5110, file: !689, discriminator: 12)
!5125 = !DILocation(line: 224, column: 95, scope: !5126)
!5126 = !DILexicalBlockFile(scope: !5101, file: !689, discriminator: 13)
!5127 = !DILocation(line: 224, column: 93, scope: !5126)
!5128 = !DILocation(line: 224, column: 102, scope: !5126)
!5129 = !DILocation(line: 224, column: 102, scope: !5130)
!5130 = !DILexicalBlockFile(scope: !5101, file: !689, discriminator: 14)
!5131 = !DILocation(line: 224, column: 125, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5095, file: !689, discriminator: 15)
!5133 = !DILocation(line: 224, column: 169, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !5056, file: !689, discriminator: 16)
!5135 = !DILocation(line: 224, column: 164, scope: !5134)
!5136 = !DILocation(line: 224, column: 132, scope: !5134)
!5137 = !DILocation(line: 224, column: 141, scope: !5134)
!5138 = !DILocation(line: 224, column: 167, scope: !5134)
!5139 = !DILocation(line: 224, column: 175, scope: !5134)
!5140 = !DILocation(line: 224, column: 175, scope: !5141)
!5141 = !DILexicalBlockFile(scope: !5056, file: !689, discriminator: 17)
!5142 = !DILocation(line: 226, column: 21, scope: !5049)
!5143 = distinct !{!5143, !5142}
!5144 = !DILocation(line: 226, column: 58, scope: !5145)
!5145 = !DILexicalBlockFile(scope: !5146, file: !689, discriminator: 1)
!5146 = distinct !DILexicalBlock(scope: !5049, file: !689, line: 226, column: 24)
!5147 = !DILocation(line: 226, column: 26, scope: !5145)
!5148 = !DILocation(line: 226, column: 35, scope: !5145)
!5149 = !DILocation(line: 226, column: 61, scope: !5145)
!5150 = !DILocation(line: 226, column: 68, scope: !5145)
!5151 = !DILocation(line: 227, column: 13, scope: !5050)
!5152 = !DILocation(line: 222, column: 33, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !5045, file: !689, discriminator: 2)
!5154 = !DILocation(line: 222, column: 13, scope: !5153)
!5155 = distinct !{!5155, !5156}
!5156 = !DILocation(line: 222, column: 13, scope: !4910)
!5157 = !DILocation(line: 228, column: 9, scope: !4910)
!5158 = !DILocation(line: 230, column: 9, scope: !4875)
!5159 = distinct !{!5159, !5158}
!5160 = !DILocalVariable(name: "value", scope: !5161, file: !689, line: 230, type: !512)
!5161 = distinct !DILexicalBlock(scope: !4875, file: !689, line: 230, column: 12)
!5162 = !DILocation(line: 230, column: 23, scope: !5161)
!5163 = !DILocation(line: 230, column: 23, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5161, file: !689, discriminator: 1)
!5165 = !DILocation(line: 230, column: 34, scope: !5164)
!5166 = distinct !{!5166, !5167}
!5167 = !DILocation(line: 230, column: 34, scope: !5161)
!5168 = !DILocation(line: 230, column: 67, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5170, file: !689, discriminator: 2)
!5170 = distinct !DILexicalBlock(scope: !5161, file: !689, line: 230, column: 37)
!5171 = !DILocation(line: 230, column: 72, scope: !5169)
!5172 = !DILocation(line: 230, column: 46, scope: !5169)
!5173 = !DILocation(line: 230, column: 43, scope: !5169)
!5174 = !DILocation(line: 230, column: 42, scope: !5169)
!5175 = !DILocation(line: 230, column: 58, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !5177, file: !689, discriminator: 3)
!5177 = distinct !DILexicalBlock(scope: !5170, file: !689, line: 230, column: 42)
!5178 = !DILocation(line: 230, column: 51, scope: !5176)
!5179 = !DILocation(line: 230, column: 63, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5170, file: !689, discriminator: 4)
!5181 = !DILocation(line: 230, column: 112, scope: !5182)
!5182 = !DILexicalBlockFile(scope: !5161, file: !689, discriminator: 5)
!5183 = !DILocation(line: 230, column: 76, scope: !5182)
!5184 = !DILocation(line: 230, column: 85, scope: !5182)
!5185 = !DILocation(line: 230, column: 110, scope: !5182)
!5186 = !DILocation(line: 230, column: 119, scope: !5182)
!5187 = !DILocation(line: 231, column: 13, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !4875, file: !689, line: 231, column: 13)
!5189 = !DILocation(line: 231, column: 22, scope: !5188)
!5190 = !DILocation(line: 231, column: 13, scope: !4875)
!5191 = !DILocation(line: 232, column: 13, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !689, line: 231, column: 48)
!5193 = distinct !{!5193, !5191}
!5194 = !DILocalVariable(name: "value", scope: !5195, file: !689, line: 232, type: !512)
!5195 = distinct !DILexicalBlock(scope: !5192, file: !689, line: 232, column: 16)
!5196 = !DILocation(line: 232, column: 27, scope: !5195)
!5197 = !DILocation(line: 232, column: 27, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !5195, file: !689, discriminator: 1)
!5199 = !DILocation(line: 232, column: 38, scope: !5198)
!5200 = distinct !{!5200, !5201}
!5201 = !DILocation(line: 232, column: 38, scope: !5195)
!5202 = !DILocation(line: 232, column: 71, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5204, file: !689, discriminator: 2)
!5204 = distinct !DILexicalBlock(scope: !5195, file: !689, line: 232, column: 41)
!5205 = !DILocation(line: 232, column: 76, scope: !5203)
!5206 = !DILocation(line: 232, column: 50, scope: !5203)
!5207 = !DILocation(line: 232, column: 47, scope: !5203)
!5208 = !DILocation(line: 232, column: 46, scope: !5203)
!5209 = !DILocation(line: 232, column: 62, scope: !5210)
!5210 = !DILexicalBlockFile(scope: !5211, file: !689, discriminator: 3)
!5211 = distinct !DILexicalBlock(scope: !5204, file: !689, line: 232, column: 46)
!5212 = !DILocation(line: 232, column: 55, scope: !5210)
!5213 = !DILocation(line: 232, column: 67, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5204, file: !689, discriminator: 4)
!5215 = !DILocation(line: 232, column: 124, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5195, file: !689, discriminator: 5)
!5217 = !DILocation(line: 232, column: 80, scope: !5216)
!5218 = !DILocation(line: 232, column: 89, scope: !5216)
!5219 = !DILocation(line: 232, column: 122, scope: !5216)
!5220 = !DILocation(line: 232, column: 131, scope: !5216)
!5221 = !DILocation(line: 233, column: 20, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5192, file: !689, line: 233, column: 13)
!5223 = !DILocation(line: 233, column: 18, scope: !5222)
!5224 = !DILocation(line: 233, column: 25, scope: !5225)
!5225 = !DILexicalBlockFile(scope: !5226, file: !689, discriminator: 1)
!5226 = distinct !DILexicalBlock(scope: !5222, file: !689, line: 233, column: 13)
!5227 = !DILocation(line: 233, column: 27, scope: !5225)
!5228 = !DILocation(line: 233, column: 13, scope: !5225)
!5229 = !DILocation(line: 234, column: 24, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !689, line: 234, column: 17)
!5231 = distinct !DILexicalBlock(scope: !5226, file: !689, line: 233, column: 52)
!5232 = !DILocation(line: 234, column: 22, scope: !5230)
!5233 = !DILocation(line: 234, column: 29, scope: !5234)
!5234 = !DILexicalBlockFile(scope: !5235, file: !689, discriminator: 1)
!5235 = distinct !DILexicalBlock(scope: !5230, file: !689, line: 234, column: 17)
!5236 = !DILocation(line: 234, column: 31, scope: !5234)
!5237 = !DILocation(line: 234, column: 17, scope: !5234)
!5238 = !DILocation(line: 235, column: 21, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !689, line: 234, column: 55)
!5240 = distinct !{!5240, !5238}
!5241 = !DILocalVariable(name: "value", scope: !5242, file: !689, line: 235, type: !512)
!5242 = distinct !DILexicalBlock(scope: !5239, file: !689, line: 235, column: 24)
!5243 = !DILocation(line: 235, column: 35, scope: !5242)
!5244 = !DILocation(line: 235, column: 35, scope: !5245)
!5245 = !DILexicalBlockFile(scope: !5242, file: !689, discriminator: 1)
!5246 = !DILocation(line: 235, column: 46, scope: !5245)
!5247 = distinct !{!5247, !5248}
!5248 = !DILocation(line: 235, column: 46, scope: !5242)
!5249 = !DILocation(line: 235, column: 79, scope: !5250)
!5250 = !DILexicalBlockFile(scope: !5251, file: !689, discriminator: 2)
!5251 = distinct !DILexicalBlock(scope: !5242, file: !689, line: 235, column: 49)
!5252 = !DILocation(line: 235, column: 84, scope: !5250)
!5253 = !DILocation(line: 235, column: 138, scope: !5250)
!5254 = !DILocation(line: 235, column: 143, scope: !5250)
!5255 = !DILocation(line: 235, column: 146, scope: !5250)
!5256 = !DILocation(line: 235, column: 125, scope: !5250)
!5257 = !DILocation(line: 235, column: 58, scope: !5250)
!5258 = !DILocation(line: 235, column: 55, scope: !5250)
!5259 = !DILocation(line: 235, column: 54, scope: !5250)
!5260 = !DILocation(line: 235, column: 70, scope: !5261)
!5261 = !DILexicalBlockFile(scope: !5262, file: !689, discriminator: 3)
!5262 = distinct !DILexicalBlock(scope: !5251, file: !689, line: 235, column: 54)
!5263 = !DILocation(line: 235, column: 63, scope: !5261)
!5264 = !DILocation(line: 235, column: 75, scope: !5265)
!5265 = !DILexicalBlockFile(scope: !5251, file: !689, discriminator: 4)
!5266 = !DILocation(line: 235, column: 121, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5242, file: !689, discriminator: 5)
!5268 = !DILocation(line: 235, column: 116, scope: !5267)
!5269 = !DILocation(line: 235, column: 88, scope: !5267)
!5270 = !DILocation(line: 235, column: 113, scope: !5267)
!5271 = !DILocation(line: 235, column: 97, scope: !5267)
!5272 = !DILocation(line: 235, column: 119, scope: !5267)
!5273 = !DILocation(line: 235, column: 128, scope: !5267)
!5274 = !DILocation(line: 236, column: 53, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5239, file: !689, line: 236, column: 25)
!5276 = !DILocation(line: 236, column: 25, scope: !5275)
!5277 = !DILocation(line: 236, column: 50, scope: !5275)
!5278 = !DILocation(line: 236, column: 34, scope: !5275)
!5279 = !DILocation(line: 236, column: 56, scope: !5275)
!5280 = !DILocation(line: 237, column: 51, scope: !5275)
!5281 = !DILocation(line: 237, column: 25, scope: !5275)
!5282 = !DILocation(line: 236, column: 25, scope: !5283)
!5283 = !DILexicalBlockFile(scope: !5239, file: !689, discriminator: 1)
!5284 = !DILocation(line: 238, column: 25, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !689, line: 237, column: 55)
!5286 = distinct !{!5286, !5284}
!5287 = !DILocalVariable(name: "value", scope: !5288, file: !689, line: 238, type: !512)
!5288 = distinct !DILexicalBlock(scope: !5285, file: !689, line: 238, column: 28)
!5289 = !DILocation(line: 238, column: 39, scope: !5288)
!5290 = !DILocation(line: 238, column: 39, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5288, file: !689, discriminator: 1)
!5292 = !DILocation(line: 238, column: 50, scope: !5291)
!5293 = distinct !{!5293, !5294}
!5294 = !DILocation(line: 238, column: 50, scope: !5288)
!5295 = !DILocation(line: 238, column: 83, scope: !5296)
!5296 = !DILexicalBlockFile(scope: !5297, file: !689, discriminator: 2)
!5297 = distinct !DILexicalBlock(scope: !5288, file: !689, line: 238, column: 53)
!5298 = !DILocation(line: 238, column: 88, scope: !5296)
!5299 = !DILocation(line: 238, column: 118, scope: !5296)
!5300 = !DILocation(line: 238, column: 92, scope: !5296)
!5301 = !DILocation(line: 238, column: 167, scope: !5296)
!5302 = !DILocation(line: 238, column: 172, scope: !5296)
!5303 = !DILocation(line: 238, column: 175, scope: !5296)
!5304 = !DILocation(line: 238, column: 154, scope: !5296)
!5305 = !DILocation(line: 238, column: 70, scope: !5296)
!5306 = !DILocation(line: 238, column: 44, scope: !5296)
!5307 = !DILocation(line: 238, column: 41, scope: !5296)
!5308 = !DILocation(line: 238, column: 74, scope: !5296)
!5309 = !DILocation(line: 238, column: 62, scope: !5296)
!5310 = !DILocation(line: 238, column: 59, scope: !5296)
!5311 = !DILocation(line: 238, column: 85, scope: !5296)
!5312 = !DILocation(line: 238, column: 89, scope: !5296)
!5313 = !DILocation(line: 238, column: 101, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5315, file: !689, discriminator: 3)
!5315 = distinct !DILexicalBlock(scope: !5297, file: !689, line: 238, column: 85)
!5316 = !DILocation(line: 238, column: 94, scope: !5314)
!5317 = !DILocation(line: 238, column: 106, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !5297, file: !689, discriminator: 4)
!5319 = !DILocation(line: 238, column: 150, scope: !5320)
!5320 = !DILexicalBlockFile(scope: !5288, file: !689, discriminator: 5)
!5321 = !DILocation(line: 238, column: 145, scope: !5320)
!5322 = !DILocation(line: 238, column: 119, scope: !5320)
!5323 = !DILocation(line: 238, column: 142, scope: !5320)
!5324 = !DILocation(line: 238, column: 128, scope: !5320)
!5325 = !DILocation(line: 238, column: 148, scope: !5320)
!5326 = !DILocation(line: 238, column: 157, scope: !5320)
!5327 = !DILocation(line: 240, column: 57, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5285, file: !689, line: 240, column: 29)
!5329 = !DILocation(line: 240, column: 29, scope: !5328)
!5330 = !DILocation(line: 240, column: 29, scope: !5285)
!5331 = !DILocation(line: 241, column: 29, scope: !5328)
!5332 = distinct !{!5332, !5331}
!5333 = !DILocalVariable(name: "value", scope: !5334, file: !689, line: 241, type: !512)
!5334 = distinct !DILexicalBlock(scope: !5328, file: !689, line: 241, column: 32)
!5335 = !DILocation(line: 241, column: 43, scope: !5334)
!5336 = !DILocation(line: 241, column: 43, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !5334, file: !689, discriminator: 1)
!5338 = !DILocation(line: 241, column: 54, scope: !5337)
!5339 = distinct !{!5339, !5340}
!5340 = !DILocation(line: 241, column: 54, scope: !5334)
!5341 = !DILocation(line: 241, column: 87, scope: !5342)
!5342 = !DILexicalBlockFile(scope: !5343, file: !689, discriminator: 2)
!5343 = distinct !DILexicalBlock(scope: !5334, file: !689, line: 241, column: 57)
!5344 = !DILocation(line: 241, column: 92, scope: !5342)
!5345 = !DILocation(line: 241, column: 143, scope: !5342)
!5346 = !DILocation(line: 241, column: 148, scope: !5342)
!5347 = !DILocation(line: 241, column: 151, scope: !5342)
!5348 = !DILocation(line: 241, column: 130, scope: !5342)
!5349 = !DILocation(line: 241, column: 66, scope: !5342)
!5350 = !DILocation(line: 241, column: 63, scope: !5342)
!5351 = !DILocation(line: 241, column: 62, scope: !5342)
!5352 = !DILocation(line: 241, column: 78, scope: !5353)
!5353 = !DILexicalBlockFile(scope: !5354, file: !689, discriminator: 3)
!5354 = distinct !DILexicalBlock(scope: !5343, file: !689, line: 241, column: 62)
!5355 = !DILocation(line: 241, column: 71, scope: !5353)
!5356 = !DILocation(line: 241, column: 83, scope: !5357)
!5357 = !DILexicalBlockFile(scope: !5343, file: !689, discriminator: 4)
!5358 = !DILocation(line: 241, column: 126, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5334, file: !689, discriminator: 5)
!5360 = !DILocation(line: 241, column: 121, scope: !5359)
!5361 = !DILocation(line: 241, column: 96, scope: !5359)
!5362 = !DILocation(line: 241, column: 118, scope: !5359)
!5363 = !DILocation(line: 241, column: 105, scope: !5359)
!5364 = !DILocation(line: 241, column: 124, scope: !5359)
!5365 = !DILocation(line: 241, column: 133, scope: !5359)
!5366 = !DILocation(line: 241, column: 133, scope: !5367)
!5367 = !DILexicalBlockFile(scope: !5334, file: !689, discriminator: 6)
!5368 = !DILocation(line: 243, column: 29, scope: !5328)
!5369 = distinct !{!5369, !5368}
!5370 = !DILocation(line: 243, column: 59, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !5372, file: !689, discriminator: 1)
!5372 = distinct !DILexicalBlock(scope: !5328, file: !689, line: 243, column: 32)
!5373 = !DILocation(line: 243, column: 34, scope: !5371)
!5374 = !DILocation(line: 243, column: 56, scope: !5371)
!5375 = !DILocation(line: 243, column: 43, scope: !5371)
!5376 = !DILocation(line: 243, column: 62, scope: !5371)
!5377 = !DILocation(line: 243, column: 67, scope: !5371)
!5378 = !DILocation(line: 244, column: 21, scope: !5285)
!5379 = !DILocation(line: 245, column: 25, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5275, file: !689, line: 244, column: 28)
!5381 = distinct !{!5381, !5379}
!5382 = !DILocation(line: 245, column: 56, scope: !5383)
!5383 = !DILexicalBlockFile(scope: !5384, file: !689, discriminator: 1)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !689, line: 245, column: 28)
!5385 = !DILocation(line: 245, column: 30, scope: !5383)
!5386 = !DILocation(line: 245, column: 53, scope: !5383)
!5387 = !DILocation(line: 245, column: 39, scope: !5383)
!5388 = !DILocation(line: 245, column: 59, scope: !5383)
!5389 = !DILocation(line: 245, column: 64, scope: !5383)
!5390 = !DILocation(line: 246, column: 25, scope: !5380)
!5391 = distinct !{!5391, !5390}
!5392 = !DILocation(line: 246, column: 55, scope: !5393)
!5393 = !DILexicalBlockFile(scope: !5394, file: !689, discriminator: 1)
!5394 = distinct !DILexicalBlock(scope: !5380, file: !689, line: 246, column: 28)
!5395 = !DILocation(line: 246, column: 30, scope: !5393)
!5396 = !DILocation(line: 246, column: 52, scope: !5393)
!5397 = !DILocation(line: 246, column: 39, scope: !5393)
!5398 = !DILocation(line: 246, column: 58, scope: !5393)
!5399 = !DILocation(line: 246, column: 63, scope: !5393)
!5400 = !DILocation(line: 248, column: 17, scope: !5239)
!5401 = !DILocation(line: 234, column: 51, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !5235, file: !689, discriminator: 2)
!5403 = !DILocation(line: 234, column: 17, scope: !5402)
!5404 = distinct !{!5404, !5405}
!5405 = !DILocation(line: 234, column: 17, scope: !5231)
!5406 = !DILocation(line: 249, column: 13, scope: !5231)
!5407 = !DILocation(line: 233, column: 48, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5226, file: !689, discriminator: 2)
!5409 = !DILocation(line: 233, column: 13, scope: !5408)
!5410 = distinct !{!5410, !5411}
!5411 = !DILocation(line: 233, column: 13, scope: !5192)
!5412 = !DILocation(line: 250, column: 9, scope: !5192)
!5413 = !DILocation(line: 251, column: 5, scope: !4875)
!5414 = !DILocation(line: 253, column: 5, scope: !688)
!5415 = !DILocation(line: 254, column: 1, scope: !688)
!5416 = distinct !DISubprogram(name: "cbs_vp9_read_tile_info", scope: !689, file: !689, line: 256, type: !690, isLocal: true, isDefinition: true, scopeLine: 258, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5417 = !DILocalVariable(name: "ctx", arg: 1, scope: !5416, file: !689, line: 256, type: !637)
!5418 = !DILocation(line: 256, column: 58, scope: !5416)
!5419 = !DILocalVariable(name: "rw", arg: 2, scope: !5416, file: !689, line: 256, type: !692)
!5420 = !DILocation(line: 256, column: 78, scope: !5416)
!5421 = !DILocalVariable(name: "current", arg: 3, scope: !5416, file: !689, line: 257, type: !704)
!5422 = !DILocation(line: 257, column: 47, scope: !5416)
!5423 = !DILocalVariable(name: "vp9", scope: !5416, file: !689, line: 259, type: !1040)
!5424 = !DILocation(line: 259, column: 31, scope: !5416)
!5425 = !DILocation(line: 259, column: 37, scope: !5416)
!5426 = !DILocation(line: 259, column: 42, scope: !5416)
!5427 = !DILocalVariable(name: "min_log2_tile_cols", scope: !5416, file: !689, line: 260, type: !503)
!5428 = !DILocation(line: 260, column: 9, scope: !5416)
!5429 = !DILocalVariable(name: "max_log2_tile_cols", scope: !5416, file: !689, line: 260, type: !503)
!5430 = !DILocation(line: 260, column: 29, scope: !5416)
!5431 = !DILocalVariable(name: "err", scope: !5416, file: !689, line: 261, type: !503)
!5432 = !DILocation(line: 261, column: 9, scope: !5416)
!5433 = !DILocation(line: 263, column: 24, scope: !5416)
!5434 = !DILocation(line: 264, column: 5, scope: !5416)
!5435 = !DILocation(line: 264, column: 39, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5416, file: !689, discriminator: 1)
!5437 = !DILocation(line: 264, column: 36, scope: !5436)
!5438 = !DILocation(line: 264, column: 61, scope: !5436)
!5439 = !DILocation(line: 264, column: 66, scope: !5436)
!5440 = !DILocation(line: 264, column: 59, scope: !5436)
!5441 = !DILocation(line: 264, column: 5, scope: !5436)
!5442 = !DILocation(line: 265, column: 9, scope: !5416)
!5443 = !DILocation(line: 264, column: 5, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5416, file: !689, discriminator: 2)
!5445 = distinct !{!5445, !5434}
!5446 = !DILocation(line: 266, column: 24, scope: !5416)
!5447 = !DILocation(line: 267, column: 5, scope: !5416)
!5448 = !DILocation(line: 267, column: 13, scope: !5436)
!5449 = !DILocation(line: 267, column: 18, scope: !5436)
!5450 = !DILocation(line: 267, column: 32, scope: !5436)
!5451 = !DILocation(line: 267, column: 51, scope: !5436)
!5452 = !DILocation(line: 267, column: 28, scope: !5436)
!5453 = !DILocation(line: 267, column: 57, scope: !5436)
!5454 = !DILocation(line: 267, column: 5, scope: !5436)
!5455 = !DILocation(line: 268, column: 9, scope: !5416)
!5456 = !DILocation(line: 267, column: 5, scope: !5444)
!5457 = distinct !{!5457, !5447}
!5458 = !DILocation(line: 270, column: 5, scope: !5416)
!5459 = distinct !{!5459, !5458}
!5460 = !DILocalVariable(name: "value", scope: !5461, file: !689, line: 270, type: !512)
!5461 = distinct !DILexicalBlock(scope: !5416, file: !689, line: 270, column: 8)
!5462 = !DILocation(line: 270, column: 19, scope: !5461)
!5463 = !DILocation(line: 270, column: 19, scope: !5464)
!5464 = !DILexicalBlockFile(scope: !5461, file: !689, discriminator: 1)
!5465 = !DILocation(line: 270, column: 30, scope: !5464)
!5466 = distinct !{!5466, !5467}
!5467 = !DILocation(line: 270, column: 30, scope: !5461)
!5468 = !DILocation(line: 270, column: 65, scope: !5469)
!5469 = !DILexicalBlockFile(scope: !5470, file: !689, discriminator: 2)
!5470 = distinct !DILexicalBlock(scope: !5461, file: !689, line: 270, column: 33)
!5471 = !DILocation(line: 270, column: 70, scope: !5469)
!5472 = !DILocation(line: 270, column: 74, scope: !5469)
!5473 = !DILocation(line: 270, column: 94, scope: !5469)
!5474 = !DILocation(line: 270, column: 42, scope: !5469)
!5475 = !DILocation(line: 270, column: 39, scope: !5469)
!5476 = !DILocation(line: 270, column: 146, scope: !5469)
!5477 = !DILocation(line: 270, column: 150, scope: !5469)
!5478 = !DILocation(line: 270, column: 162, scope: !5479)
!5479 = !DILexicalBlockFile(scope: !5480, file: !689, discriminator: 3)
!5480 = distinct !DILexicalBlock(scope: !5470, file: !689, line: 270, column: 146)
!5481 = !DILocation(line: 270, column: 155, scope: !5479)
!5482 = !DILocation(line: 270, column: 167, scope: !5483)
!5483 = !DILexicalBlockFile(scope: !5470, file: !689, discriminator: 4)
!5484 = !DILocation(line: 270, column: 206, scope: !5485)
!5485 = !DILexicalBlockFile(scope: !5461, file: !689, discriminator: 5)
!5486 = !DILocation(line: 270, column: 180, scope: !5485)
!5487 = !DILocation(line: 270, column: 189, scope: !5485)
!5488 = !DILocation(line: 270, column: 204, scope: !5485)
!5489 = !DILocation(line: 270, column: 213, scope: !5485)
!5490 = !DILocation(line: 272, column: 5, scope: !5416)
!5491 = distinct !{!5491, !5490}
!5492 = !DILocalVariable(name: "value", scope: !5493, file: !689, line: 272, type: !512)
!5493 = distinct !DILexicalBlock(scope: !5416, file: !689, line: 272, column: 8)
!5494 = !DILocation(line: 272, column: 19, scope: !5493)
!5495 = !DILocation(line: 272, column: 19, scope: !5496)
!5496 = !DILexicalBlockFile(scope: !5493, file: !689, discriminator: 1)
!5497 = !DILocation(line: 272, column: 30, scope: !5496)
!5498 = distinct !{!5498, !5499}
!5499 = !DILocation(line: 272, column: 30, scope: !5493)
!5500 = !DILocation(line: 272, column: 65, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5502, file: !689, discriminator: 2)
!5502 = distinct !DILexicalBlock(scope: !5493, file: !689, line: 272, column: 33)
!5503 = !DILocation(line: 272, column: 70, scope: !5501)
!5504 = !DILocation(line: 272, column: 42, scope: !5501)
!5505 = !DILocation(line: 272, column: 39, scope: !5501)
!5506 = !DILocation(line: 272, column: 112, scope: !5501)
!5507 = !DILocation(line: 272, column: 116, scope: !5501)
!5508 = !DILocation(line: 272, column: 128, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5510, file: !689, discriminator: 3)
!5510 = distinct !DILexicalBlock(scope: !5502, file: !689, line: 272, column: 112)
!5511 = !DILocation(line: 272, column: 121, scope: !5509)
!5512 = !DILocation(line: 272, column: 133, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5502, file: !689, discriminator: 4)
!5514 = !DILocation(line: 272, column: 172, scope: !5515)
!5515 = !DILexicalBlockFile(scope: !5493, file: !689, discriminator: 5)
!5516 = !DILocation(line: 272, column: 146, scope: !5515)
!5517 = !DILocation(line: 272, column: 155, scope: !5515)
!5518 = !DILocation(line: 272, column: 170, scope: !5515)
!5519 = !DILocation(line: 272, column: 179, scope: !5515)
!5520 = !DILocation(line: 274, column: 5, scope: !5416)
!5521 = !DILocation(line: 275, column: 1, scope: !5416)
!5522 = distinct !DISubprogram(name: "cbs_vp9_read_s", scope: !625, file: !625, line: 27, type: !5523, isLocal: true, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!503, !637, !692, !503, !1854, !1857, !5525}
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64, align: 64)
!5526 = !DILocalVariable(name: "ctx", arg: 1, scope: !5522, file: !625, line: 27, type: !637)
!5527 = !DILocation(line: 27, column: 50, scope: !5522)
!5528 = !DILocalVariable(name: "gbc", arg: 2, scope: !5522, file: !625, line: 27, type: !692)
!5529 = !DILocation(line: 27, column: 70, scope: !5522)
!5530 = !DILocalVariable(name: "width", arg: 3, scope: !5522, file: !625, line: 28, type: !503)
!5531 = !DILocation(line: 28, column: 31, scope: !5522)
!5532 = !DILocalVariable(name: "name", arg: 4, scope: !5522, file: !625, line: 28, type: !1854)
!5533 = !DILocation(line: 28, column: 50, scope: !5522)
!5534 = !DILocalVariable(name: "subscripts", arg: 5, scope: !5522, file: !625, line: 29, type: !1857)
!5535 = !DILocation(line: 29, column: 38, scope: !5522)
!5536 = !DILocalVariable(name: "write_to", arg: 6, scope: !5522, file: !625, line: 29, type: !5525)
!5537 = !DILocation(line: 29, column: 59, scope: !5522)
!5538 = !DILocalVariable(name: "magnitude", scope: !5522, file: !625, line: 31, type: !512)
!5539 = !DILocation(line: 31, column: 14, scope: !5522)
!5540 = !DILocalVariable(name: "position", scope: !5522, file: !625, line: 32, type: !503)
!5541 = !DILocation(line: 32, column: 9, scope: !5522)
!5542 = !DILocalVariable(name: "sign", scope: !5522, file: !625, line: 32, type: !503)
!5543 = !DILocation(line: 32, column: 19, scope: !5522)
!5544 = !DILocalVariable(name: "value", scope: !5522, file: !625, line: 33, type: !619)
!5545 = !DILocation(line: 33, column: 13, scope: !5522)
!5546 = !DILocation(line: 35, column: 9, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5522, file: !625, line: 35, column: 9)
!5548 = !DILocation(line: 35, column: 14, scope: !5547)
!5549 = !DILocation(line: 35, column: 9, scope: !5522)
!5550 = !DILocation(line: 36, column: 35, scope: !5547)
!5551 = !DILocation(line: 36, column: 20, scope: !5547)
!5552 = !DILocation(line: 36, column: 18, scope: !5547)
!5553 = !DILocation(line: 36, column: 9, scope: !5547)
!5554 = !DILocation(line: 38, column: 23, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5522, file: !625, line: 38, column: 9)
!5556 = !DILocation(line: 38, column: 9, scope: !5555)
!5557 = !DILocation(line: 38, column: 30, scope: !5555)
!5558 = !DILocation(line: 38, column: 36, scope: !5555)
!5559 = !DILocation(line: 38, column: 28, scope: !5555)
!5560 = !DILocation(line: 38, column: 9, scope: !5522)
!5561 = !DILocation(line: 39, column: 16, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5555, file: !625, line: 38, column: 41)
!5563 = !DILocation(line: 39, column: 21, scope: !5562)
!5564 = !DILocation(line: 40, column: 42, scope: !5562)
!5565 = !DILocation(line: 39, column: 9, scope: !5562)
!5566 = !DILocation(line: 41, column: 9, scope: !5562)
!5567 = !DILocation(line: 44, column: 26, scope: !5522)
!5568 = !DILocation(line: 44, column: 31, scope: !5522)
!5569 = !DILocation(line: 44, column: 17, scope: !5522)
!5570 = !DILocation(line: 44, column: 15, scope: !5522)
!5571 = !DILocation(line: 45, column: 22, scope: !5522)
!5572 = !DILocation(line: 45, column: 12, scope: !5522)
!5573 = !DILocation(line: 45, column: 10, scope: !5522)
!5574 = !DILocation(line: 46, column: 13, scope: !5522)
!5575 = !DILocation(line: 46, column: 30, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !5522, file: !625, discriminator: 1)
!5577 = !DILocation(line: 46, column: 20, scope: !5576)
!5578 = !DILocation(line: 46, column: 13, scope: !5576)
!5579 = !DILocation(line: 46, column: 42, scope: !5580)
!5580 = !DILexicalBlockFile(scope: !5522, file: !625, discriminator: 2)
!5581 = !DILocation(line: 46, column: 13, scope: !5580)
!5582 = !DILocation(line: 46, column: 13, scope: !5583)
!5583 = !DILexicalBlockFile(scope: !5522, file: !625, discriminator: 3)
!5584 = !DILocation(line: 46, column: 11, scope: !5583)
!5585 = !DILocation(line: 48, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5522, file: !625, line: 48, column: 9)
!5587 = !DILocation(line: 48, column: 14, scope: !5586)
!5588 = !DILocation(line: 48, column: 9, scope: !5522)
!5589 = !DILocalVariable(name: "bits", scope: !5590, file: !625, line: 49, type: !1941)
!5590 = distinct !DILexicalBlock(scope: !5586, file: !625, line: 48, column: 28)
!5591 = !DILocation(line: 49, column: 14, scope: !5590)
!5592 = !DILocalVariable(name: "i", scope: !5590, file: !625, line: 50, type: !503)
!5593 = !DILocation(line: 50, column: 13, scope: !5590)
!5594 = !DILocation(line: 51, column: 16, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5590, file: !625, line: 51, column: 9)
!5596 = !DILocation(line: 51, column: 14, scope: !5595)
!5597 = !DILocation(line: 51, column: 21, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5599, file: !625, discriminator: 1)
!5599 = distinct !DILexicalBlock(scope: !5595, file: !625, line: 51, column: 9)
!5600 = !DILocation(line: 51, column: 25, scope: !5598)
!5601 = !DILocation(line: 51, column: 23, scope: !5598)
!5602 = !DILocation(line: 51, column: 9, scope: !5598)
!5603 = !DILocation(line: 52, column: 23, scope: !5599)
!5604 = !DILocation(line: 52, column: 37, scope: !5599)
!5605 = !DILocation(line: 52, column: 45, scope: !5599)
!5606 = !DILocation(line: 52, column: 43, scope: !5599)
!5607 = !DILocation(line: 52, column: 47, scope: !5599)
!5608 = !DILocation(line: 52, column: 33, scope: !5599)
!5609 = !DILocation(line: 52, column: 52, scope: !5599)
!5610 = !DILocation(line: 52, column: 18, scope: !5599)
!5611 = !DILocation(line: 52, column: 13, scope: !5599)
!5612 = !DILocation(line: 52, column: 21, scope: !5599)
!5613 = !DILocation(line: 51, column: 33, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5599, file: !625, discriminator: 2)
!5615 = !DILocation(line: 51, column: 9, scope: !5614)
!5616 = distinct !{!5616, !5617}
!5617 = !DILocation(line: 51, column: 9, scope: !5590)
!5618 = !DILocation(line: 53, column: 19, scope: !5590)
!5619 = !DILocation(line: 53, column: 14, scope: !5590)
!5620 = !DILocation(line: 53, column: 9, scope: !5590)
!5621 = !DILocation(line: 53, column: 17, scope: !5590)
!5622 = !DILocation(line: 54, column: 14, scope: !5590)
!5623 = !DILocation(line: 54, column: 16, scope: !5590)
!5624 = !DILocation(line: 54, column: 9, scope: !5590)
!5625 = !DILocation(line: 54, column: 21, scope: !5590)
!5626 = !DILocation(line: 56, column: 37, scope: !5590)
!5627 = !DILocation(line: 56, column: 42, scope: !5590)
!5628 = !DILocation(line: 56, column: 52, scope: !5590)
!5629 = !DILocation(line: 56, column: 58, scope: !5590)
!5630 = !DILocation(line: 57, column: 37, scope: !5590)
!5631 = !DILocation(line: 57, column: 43, scope: !5590)
!5632 = !DILocation(line: 56, column: 9, scope: !5590)
!5633 = !DILocation(line: 58, column: 5, scope: !5590)
!5634 = !DILocation(line: 60, column: 17, scope: !5522)
!5635 = !DILocation(line: 60, column: 6, scope: !5522)
!5636 = !DILocation(line: 60, column: 15, scope: !5522)
!5637 = !DILocation(line: 61, column: 5, scope: !5522)
!5638 = !DILocation(line: 62, column: 1, scope: !5522)
!5639 = distinct !DISubprogram(name: "get_bits1", scope: !694, file: !694, line: 487, type: !5640, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!504, !692}
!5642 = !DILocalVariable(name: "s", arg: 1, scope: !5639, file: !694, line: 487, type: !692)
!5643 = !DILocation(line: 487, column: 53, scope: !5639)
!5644 = !DILocalVariable(name: "index", scope: !5639, file: !694, line: 499, type: !504)
!5645 = !DILocation(line: 499, column: 18, scope: !5639)
!5646 = !DILocation(line: 499, column: 26, scope: !5639)
!5647 = !DILocation(line: 499, column: 29, scope: !5639)
!5648 = !DILocalVariable(name: "result", scope: !5639, file: !694, line: 500, type: !514)
!5649 = !DILocation(line: 500, column: 13, scope: !5639)
!5650 = !DILocation(line: 500, column: 32, scope: !5639)
!5651 = !DILocation(line: 500, column: 38, scope: !5639)
!5652 = !DILocation(line: 500, column: 22, scope: !5639)
!5653 = !DILocation(line: 500, column: 25, scope: !5639)
!5654 = !DILocation(line: 505, column: 16, scope: !5639)
!5655 = !DILocation(line: 505, column: 22, scope: !5639)
!5656 = !DILocation(line: 505, column: 12, scope: !5639)
!5657 = !DILocation(line: 506, column: 12, scope: !5639)
!5658 = !DILocation(line: 509, column: 9, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5639, file: !694, line: 509, column: 9)
!5660 = !DILocation(line: 509, column: 12, scope: !5659)
!5661 = !DILocation(line: 509, column: 20, scope: !5659)
!5662 = !DILocation(line: 509, column: 23, scope: !5659)
!5663 = !DILocation(line: 509, column: 18, scope: !5659)
!5664 = !DILocation(line: 509, column: 9, scope: !5639)
!5665 = !DILocation(line: 511, column: 14, scope: !5659)
!5666 = !DILocation(line: 511, column: 9, scope: !5659)
!5667 = !DILocation(line: 512, column: 16, scope: !5639)
!5668 = !DILocation(line: 512, column: 5, scope: !5639)
!5669 = !DILocation(line: 512, column: 8, scope: !5639)
!5670 = !DILocation(line: 512, column: 14, scope: !5639)
!5671 = !DILocation(line: 514, column: 12, scope: !5639)
!5672 = !DILocation(line: 514, column: 5, scope: !5639)
!5673 = distinct !DISubprogram(name: "cbs_vp9_read_increment", scope: !625, file: !625, line: 95, type: !5674, isLocal: true, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!503, !637, !692, !512, !512, !1854, !1858}
!5676 = !DILocalVariable(name: "ctx", arg: 1, scope: !5673, file: !625, line: 95, type: !637)
!5677 = !DILocation(line: 95, column: 58, scope: !5673)
!5678 = !DILocalVariable(name: "gbc", arg: 2, scope: !5673, file: !625, line: 95, type: !692)
!5679 = !DILocation(line: 95, column: 78, scope: !5673)
!5680 = !DILocalVariable(name: "range_min", arg: 3, scope: !5673, file: !625, line: 96, type: !512)
!5681 = !DILocation(line: 96, column: 44, scope: !5673)
!5682 = !DILocalVariable(name: "range_max", arg: 4, scope: !5673, file: !625, line: 96, type: !512)
!5683 = !DILocation(line: 96, column: 64, scope: !5673)
!5684 = !DILocalVariable(name: "name", arg: 5, scope: !5673, file: !625, line: 97, type: !1854)
!5685 = !DILocation(line: 97, column: 47, scope: !5673)
!5686 = !DILocalVariable(name: "write_to", arg: 6, scope: !5673, file: !625, line: 97, type: !1858)
!5687 = !DILocation(line: 97, column: 63, scope: !5673)
!5688 = !DILocalVariable(name: "value", scope: !5673, file: !625, line: 99, type: !512)
!5689 = !DILocation(line: 99, column: 14, scope: !5673)
!5690 = !DILocalVariable(name: "position", scope: !5673, file: !625, line: 100, type: !503)
!5691 = !DILocation(line: 100, column: 9, scope: !5673)
!5692 = !DILocalVariable(name: "i", scope: !5673, file: !625, line: 100, type: !503)
!5693 = !DILocation(line: 100, column: 19, scope: !5673)
!5694 = !DILocalVariable(name: "bits", scope: !5673, file: !625, line: 101, type: !5695)
!5695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 64, align: 8, elements: !761)
!5696 = !DILocation(line: 101, column: 10, scope: !5673)
!5697 = !DILocation(line: 103, column: 5, scope: !5673)
!5698 = distinct !{!5698, !5697}
!5699 = !DILocation(line: 103, column: 16, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !5701, file: !625, discriminator: 1)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !625, line: 103, column: 14)
!5702 = distinct !DILexicalBlock(scope: !5673, file: !625, line: 103, column: 8)
!5703 = !DILocation(line: 103, column: 29, scope: !5700)
!5704 = !DILocation(line: 103, column: 26, scope: !5700)
!5705 = !DILocation(line: 103, column: 39, scope: !5700)
!5706 = !DILocation(line: 103, column: 42, scope: !5707)
!5707 = !DILexicalBlockFile(scope: !5701, file: !625, discriminator: 2)
!5708 = !DILocation(line: 103, column: 54, scope: !5707)
!5709 = !DILocation(line: 103, column: 52, scope: !5707)
!5710 = !DILocation(line: 103, column: 64, scope: !5707)
!5711 = !DILocation(line: 103, column: 14, scope: !5707)
!5712 = !DILocation(line: 103, column: 87, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !5714, file: !625, discriminator: 3)
!5714 = distinct !DILexicalBlock(scope: !5701, file: !625, line: 103, column: 85)
!5715 = !DILocation(line: 103, column: 143, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5713, file: !625, discriminator: 5)
!5717 = !DILocation(line: 103, column: 143, scope: !5713)
!5718 = !DILocation(line: 103, column: 154, scope: !5719)
!5719 = !DILexicalBlockFile(scope: !5702, file: !625, discriminator: 4)
!5720 = !DILocation(line: 104, column: 9, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5673, file: !625, line: 104, column: 9)
!5722 = !DILocation(line: 104, column: 14, scope: !5721)
!5723 = !DILocation(line: 104, column: 9, scope: !5673)
!5724 = !DILocation(line: 105, column: 35, scope: !5721)
!5725 = !DILocation(line: 105, column: 20, scope: !5721)
!5726 = !DILocation(line: 105, column: 18, scope: !5721)
!5727 = !DILocation(line: 105, column: 9, scope: !5721)
!5728 = !DILocation(line: 107, column: 12, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5673, file: !625, line: 107, column: 5)
!5730 = !DILocation(line: 107, column: 25, scope: !5729)
!5731 = !DILocation(line: 107, column: 23, scope: !5729)
!5732 = !DILocation(line: 107, column: 10, scope: !5729)
!5733 = !DILocation(line: 107, column: 36, scope: !5734)
!5734 = !DILexicalBlockFile(scope: !5735, file: !625, discriminator: 1)
!5735 = distinct !DILexicalBlock(scope: !5729, file: !625, line: 107, column: 5)
!5736 = !DILocation(line: 107, column: 44, scope: !5734)
!5737 = !DILocation(line: 107, column: 42, scope: !5734)
!5738 = !DILocation(line: 107, column: 5, scope: !5734)
!5739 = !DILocation(line: 108, column: 27, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !625, line: 108, column: 13)
!5741 = distinct !DILexicalBlock(scope: !5735, file: !625, line: 107, column: 56)
!5742 = !DILocation(line: 108, column: 13, scope: !5740)
!5743 = !DILocation(line: 108, column: 32, scope: !5740)
!5744 = !DILocation(line: 108, column: 13, scope: !5741)
!5745 = !DILocation(line: 109, column: 20, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5740, file: !625, line: 108, column: 37)
!5747 = !DILocation(line: 109, column: 25, scope: !5746)
!5748 = !DILocation(line: 110, column: 46, scope: !5746)
!5749 = !DILocation(line: 109, column: 13, scope: !5746)
!5750 = !DILocation(line: 111, column: 13, scope: !5746)
!5751 = !DILocation(line: 113, column: 23, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5741, file: !625, line: 113, column: 13)
!5753 = !DILocation(line: 113, column: 13, scope: !5752)
!5754 = !DILocation(line: 113, column: 13, scope: !5741)
!5755 = !DILocation(line: 114, column: 19, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !625, line: 113, column: 29)
!5757 = !DILocation(line: 114, column: 13, scope: !5756)
!5758 = !DILocation(line: 114, column: 23, scope: !5756)
!5759 = !DILocation(line: 115, column: 13, scope: !5756)
!5760 = !DILocation(line: 116, column: 9, scope: !5756)
!5761 = !DILocation(line: 117, column: 19, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5752, file: !625, line: 116, column: 16)
!5763 = !DILocation(line: 117, column: 13, scope: !5762)
!5764 = !DILocation(line: 117, column: 23, scope: !5762)
!5765 = !DILocation(line: 118, column: 13, scope: !5762)
!5766 = !DILocation(line: 107, column: 5, scope: !5767)
!5767 = !DILexicalBlockFile(scope: !5735, file: !625, discriminator: 2)
!5768 = distinct !{!5768, !5769}
!5769 = !DILocation(line: 107, column: 5, scope: !5673)
!5770 = !DILocation(line: 122, column: 9, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5673, file: !625, line: 122, column: 9)
!5772 = !DILocation(line: 122, column: 14, scope: !5771)
!5773 = !DILocation(line: 122, column: 9, scope: !5673)
!5774 = !DILocation(line: 123, column: 14, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5771, file: !625, line: 122, column: 28)
!5776 = !DILocation(line: 123, column: 9, scope: !5775)
!5777 = !DILocation(line: 123, column: 17, scope: !5775)
!5778 = !DILocation(line: 124, column: 37, scope: !5775)
!5779 = !DILocation(line: 124, column: 42, scope: !5775)
!5780 = !DILocation(line: 124, column: 52, scope: !5775)
!5781 = !DILocation(line: 124, column: 63, scope: !5775)
!5782 = !DILocation(line: 124, column: 69, scope: !5775)
!5783 = !DILocation(line: 124, column: 9, scope: !5775)
!5784 = !DILocation(line: 125, column: 5, scope: !5775)
!5785 = !DILocation(line: 127, column: 17, scope: !5673)
!5786 = !DILocation(line: 127, column: 6, scope: !5673)
!5787 = !DILocation(line: 127, column: 15, scope: !5673)
!5788 = !DILocation(line: 128, column: 5, scope: !5673)
!5789 = !DILocation(line: 129, column: 1, scope: !5673)
!5790 = distinct !DISubprogram(name: "init_put_bits", scope: !715, file: !715, line: 48, type: !5791, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{null, !713, !602, !503}
!5793 = !DILocalVariable(name: "s", arg: 1, scope: !5790, file: !715, line: 48, type: !713)
!5794 = !DILocation(line: 48, column: 49, scope: !5790)
!5795 = !DILocalVariable(name: "buffer", arg: 2, scope: !5790, file: !715, line: 48, type: !602)
!5796 = !DILocation(line: 48, column: 61, scope: !5790)
!5797 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !5790, file: !715, line: 49, type: !503)
!5798 = !DILocation(line: 49, column: 38, scope: !5790)
!5799 = !DILocation(line: 51, column: 9, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5790, file: !715, line: 51, column: 9)
!5801 = !DILocation(line: 51, column: 21, scope: !5800)
!5802 = !DILocation(line: 51, column: 9, scope: !5790)
!5803 = !DILocation(line: 52, column: 21, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !715, line: 51, column: 26)
!5805 = !DILocation(line: 53, column: 16, scope: !5804)
!5806 = !DILocation(line: 54, column: 5, scope: !5804)
!5807 = !DILocation(line: 56, column: 27, scope: !5790)
!5808 = !DILocation(line: 56, column: 25, scope: !5790)
!5809 = !DILocation(line: 56, column: 5, scope: !5790)
!5810 = !DILocation(line: 56, column: 8, scope: !5790)
!5811 = !DILocation(line: 56, column: 21, scope: !5790)
!5812 = !DILocation(line: 57, column: 14, scope: !5790)
!5813 = !DILocation(line: 57, column: 5, scope: !5790)
!5814 = !DILocation(line: 57, column: 8, scope: !5790)
!5815 = !DILocation(line: 57, column: 12, scope: !5790)
!5816 = !DILocation(line: 58, column: 18, scope: !5790)
!5817 = !DILocation(line: 58, column: 21, scope: !5790)
!5818 = !DILocation(line: 58, column: 27, scope: !5790)
!5819 = !DILocation(line: 58, column: 25, scope: !5790)
!5820 = !DILocation(line: 58, column: 5, scope: !5790)
!5821 = !DILocation(line: 58, column: 8, scope: !5790)
!5822 = !DILocation(line: 58, column: 16, scope: !5790)
!5823 = !DILocation(line: 59, column: 18, scope: !5790)
!5824 = !DILocation(line: 59, column: 21, scope: !5790)
!5825 = !DILocation(line: 59, column: 5, scope: !5790)
!5826 = !DILocation(line: 59, column: 8, scope: !5790)
!5827 = !DILocation(line: 59, column: 16, scope: !5790)
!5828 = !DILocation(line: 60, column: 5, scope: !5790)
!5829 = !DILocation(line: 60, column: 8, scope: !5790)
!5830 = !DILocation(line: 60, column: 17, scope: !5790)
!5831 = !DILocation(line: 61, column: 5, scope: !5790)
!5832 = !DILocation(line: 61, column: 8, scope: !5790)
!5833 = !DILocation(line: 61, column: 16, scope: !5790)
!5834 = !DILocation(line: 62, column: 1, scope: !5790)
!5835 = distinct !DISubprogram(name: "cbs_vp9_write_frame", scope: !689, file: !689, line: 406, type: !5836, isLocal: true, isDefinition: true, scopeLine: 408, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!503, !637, !713, !516}
!5838 = !DILocalVariable(name: "ctx", arg: 1, scope: !5835, file: !689, line: 406, type: !637)
!5839 = !DILocation(line: 406, column: 55, scope: !5835)
!5840 = !DILocalVariable(name: "rw", arg: 2, scope: !5835, file: !689, line: 406, type: !713)
!5841 = !DILocation(line: 406, column: 75, scope: !5835)
!5842 = !DILocalVariable(name: "current", arg: 3, scope: !5835, file: !689, line: 407, type: !516)
!5843 = !DILocation(line: 407, column: 37, scope: !5835)
!5844 = !DILocalVariable(name: "err", scope: !5835, file: !689, line: 409, type: !503)
!5845 = !DILocation(line: 409, column: 9, scope: !5835)
!5846 = !DILocation(line: 411, column: 5, scope: !5835)
!5847 = distinct !{!5847, !5846}
!5848 = !DILocation(line: 411, column: 30, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !5850, file: !689, discriminator: 1)
!5850 = distinct !DILexicalBlock(scope: !5835, file: !689, line: 411, column: 8)
!5851 = !DILocation(line: 411, column: 10, scope: !5849)
!5852 = !DILocation(line: 411, column: 45, scope: !5849)
!5853 = !DILocation(line: 413, column: 5, scope: !5835)
!5854 = distinct !{!5854, !5853}
!5855 = !DILocation(line: 413, column: 51, scope: !5856)
!5856 = !DILexicalBlockFile(scope: !5857, file: !689, discriminator: 1)
!5857 = distinct !DILexicalBlock(scope: !5835, file: !689, line: 413, column: 8)
!5858 = !DILocation(line: 413, column: 56, scope: !5856)
!5859 = !DILocation(line: 413, column: 61, scope: !5856)
!5860 = !DILocation(line: 413, column: 70, scope: !5856)
!5861 = !DILocation(line: 413, column: 17, scope: !5856)
!5862 = !DILocation(line: 413, column: 14, scope: !5856)
!5863 = !DILocation(line: 413, column: 84, scope: !5856)
!5864 = !DILocation(line: 413, column: 88, scope: !5856)
!5865 = !DILocation(line: 413, column: 100, scope: !5866)
!5866 = !DILexicalBlockFile(scope: !5867, file: !689, discriminator: 2)
!5867 = distinct !DILexicalBlock(scope: !5857, file: !689, line: 413, column: 84)
!5868 = !DILocation(line: 413, column: 93, scope: !5866)
!5869 = !DILocation(line: 413, column: 105, scope: !5870)
!5870 = !DILexicalBlockFile(scope: !5857, file: !689, discriminator: 3)
!5871 = !DILocation(line: 415, column: 5, scope: !5835)
!5872 = distinct !{!5872, !5871}
!5873 = !DILocation(line: 415, column: 45, scope: !5874)
!5874 = !DILexicalBlockFile(scope: !5875, file: !689, discriminator: 1)
!5875 = distinct !DILexicalBlock(scope: !5835, file: !689, line: 415, column: 8)
!5876 = !DILocation(line: 415, column: 50, scope: !5874)
!5877 = !DILocation(line: 415, column: 17, scope: !5874)
!5878 = !DILocation(line: 415, column: 14, scope: !5874)
!5879 = !DILocation(line: 415, column: 60, scope: !5874)
!5880 = !DILocation(line: 415, column: 64, scope: !5874)
!5881 = !DILocation(line: 415, column: 76, scope: !5882)
!5882 = !DILexicalBlockFile(scope: !5883, file: !689, discriminator: 2)
!5883 = distinct !DILexicalBlock(scope: !5875, file: !689, line: 415, column: 60)
!5884 = !DILocation(line: 415, column: 69, scope: !5882)
!5885 = !DILocation(line: 415, column: 81, scope: !5886)
!5886 = !DILexicalBlockFile(scope: !5875, file: !689, discriminator: 3)
!5887 = !DILocation(line: 417, column: 5, scope: !5835)
!5888 = !DILocation(line: 418, column: 1, scope: !5835)
!5889 = distinct !DISubprogram(name: "put_bits_count", scope: !715, file: !715, line: 85, type: !5890, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!503, !713}
!5892 = !DILocalVariable(name: "s", arg: 1, scope: !5889, file: !715, line: 85, type: !713)
!5893 = !DILocation(line: 85, column: 49, scope: !5889)
!5894 = !DILocation(line: 87, column: 13, scope: !5889)
!5895 = !DILocation(line: 87, column: 16, scope: !5889)
!5896 = !DILocation(line: 87, column: 26, scope: !5889)
!5897 = !DILocation(line: 87, column: 29, scope: !5889)
!5898 = !DILocation(line: 87, column: 24, scope: !5889)
!5899 = !DILocation(line: 87, column: 34, scope: !5889)
!5900 = !DILocation(line: 87, column: 38, scope: !5889)
!5901 = !DILocation(line: 87, column: 45, scope: !5889)
!5902 = !DILocation(line: 87, column: 48, scope: !5889)
!5903 = !DILocation(line: 87, column: 43, scope: !5889)
!5904 = !DILocation(line: 87, column: 12, scope: !5889)
!5905 = !DILocation(line: 87, column: 5, scope: !5889)
!5906 = distinct !DISubprogram(name: "flush_put_bits", scope: !715, file: !715, line: 101, type: !5907, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{null, !713}
!5909 = !DILocalVariable(name: "s", arg: 1, scope: !5906, file: !715, line: 101, type: !713)
!5910 = !DILocation(line: 101, column: 50, scope: !5906)
!5911 = !DILocation(line: 104, column: 9, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5906, file: !715, line: 104, column: 9)
!5913 = !DILocation(line: 104, column: 12, scope: !5912)
!5914 = !DILocation(line: 104, column: 21, scope: !5912)
!5915 = !DILocation(line: 104, column: 9, scope: !5906)
!5916 = !DILocation(line: 105, column: 24, scope: !5912)
!5917 = !DILocation(line: 105, column: 27, scope: !5912)
!5918 = !DILocation(line: 105, column: 9, scope: !5912)
!5919 = !DILocation(line: 105, column: 12, scope: !5912)
!5920 = !DILocation(line: 105, column: 20, scope: !5912)
!5921 = !DILocation(line: 107, column: 5, scope: !5906)
!5922 = !DILocation(line: 107, column: 12, scope: !5923)
!5923 = !DILexicalBlockFile(scope: !5906, file: !715, discriminator: 1)
!5924 = !DILocation(line: 107, column: 15, scope: !5923)
!5925 = !DILocation(line: 107, column: 24, scope: !5923)
!5926 = !DILocation(line: 107, column: 5, scope: !5923)
!5927 = !DILocation(line: 108, column: 9, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5906, file: !715, line: 107, column: 30)
!5929 = distinct !{!5929, !5927}
!5930 = !DILocation(line: 108, column: 20, scope: !5931)
!5931 = !DILexicalBlockFile(scope: !5932, file: !715, discriminator: 1)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !715, line: 108, column: 18)
!5933 = distinct !DILexicalBlock(scope: !5928, file: !715, line: 108, column: 12)
!5934 = !DILocation(line: 108, column: 23, scope: !5931)
!5935 = !DILocation(line: 108, column: 33, scope: !5931)
!5936 = !DILocation(line: 108, column: 36, scope: !5931)
!5937 = !DILocation(line: 108, column: 31, scope: !5931)
!5938 = !DILocation(line: 108, column: 18, scope: !5931)
!5939 = !DILocation(line: 108, column: 48, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5941, file: !715, discriminator: 2)
!5941 = distinct !DILexicalBlock(scope: !5932, file: !715, line: 108, column: 46)
!5942 = !DILocation(line: 108, column: 105, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5940, file: !715, discriminator: 4)
!5944 = !DILocation(line: 108, column: 105, scope: !5940)
!5945 = !DILocation(line: 108, column: 116, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !5933, file: !715, discriminator: 3)
!5947 = !DILocation(line: 113, column: 25, scope: !5928)
!5948 = !DILocation(line: 113, column: 28, scope: !5928)
!5949 = !DILocation(line: 113, column: 36, scope: !5928)
!5950 = !DILocation(line: 113, column: 10, scope: !5928)
!5951 = !DILocation(line: 113, column: 13, scope: !5928)
!5952 = !DILocation(line: 113, column: 20, scope: !5928)
!5953 = !DILocation(line: 113, column: 23, scope: !5928)
!5954 = !DILocation(line: 114, column: 9, scope: !5928)
!5955 = !DILocation(line: 114, column: 12, scope: !5928)
!5956 = !DILocation(line: 114, column: 20, scope: !5928)
!5957 = !DILocation(line: 116, column: 9, scope: !5928)
!5958 = !DILocation(line: 116, column: 12, scope: !5928)
!5959 = !DILocation(line: 116, column: 21, scope: !5928)
!5960 = !DILocation(line: 107, column: 5, scope: !5961)
!5961 = !DILexicalBlockFile(scope: !5906, file: !715, discriminator: 2)
!5962 = distinct !{!5962, !5921}
!5963 = !DILocation(line: 118, column: 5, scope: !5906)
!5964 = !DILocation(line: 118, column: 8, scope: !5906)
!5965 = !DILocation(line: 118, column: 17, scope: !5906)
!5966 = !DILocation(line: 119, column: 5, scope: !5906)
!5967 = !DILocation(line: 119, column: 8, scope: !5906)
!5968 = !DILocation(line: 119, column: 16, scope: !5906)
!5969 = !DILocation(line: 120, column: 1, scope: !5906)
!5970 = distinct !DISubprogram(name: "cbs_vp9_write_uncompressed_header", scope: !689, file: !689, line: 277, type: !711, isLocal: true, isDefinition: true, scopeLine: 279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!5971 = !DILocalVariable(name: "ctx", arg: 1, scope: !5970, file: !689, line: 277, type: !637)
!5972 = !DILocation(line: 277, column: 69, scope: !5970)
!5973 = !DILocalVariable(name: "rw", arg: 2, scope: !5970, file: !689, line: 277, type: !713)
!5974 = !DILocation(line: 277, column: 89, scope: !5970)
!5975 = !DILocalVariable(name: "current", arg: 3, scope: !5970, file: !689, line: 278, type: !704)
!5976 = !DILocation(line: 278, column: 57, scope: !5970)
!5977 = !DILocalVariable(name: "vp9", scope: !5970, file: !689, line: 280, type: !1040)
!5978 = !DILocation(line: 280, column: 31, scope: !5970)
!5979 = !DILocation(line: 280, column: 37, scope: !5970)
!5980 = !DILocation(line: 280, column: 42, scope: !5970)
!5981 = !DILocalVariable(name: "err", scope: !5970, file: !689, line: 281, type: !503)
!5982 = !DILocation(line: 281, column: 9, scope: !5970)
!5983 = !DILocalVariable(name: "i", scope: !5970, file: !689, line: 281, type: !503)
!5984 = !DILocation(line: 281, column: 14, scope: !5970)
!5985 = !DILocation(line: 283, column: 5, scope: !5970)
!5986 = distinct !{!5986, !5985}
!5987 = !DILocation(line: 283, column: 10, scope: !5988)
!5988 = !DILexicalBlockFile(scope: !5989, file: !689, discriminator: 1)
!5989 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 283, column: 8)
!5990 = distinct !{!5990, !5991}
!5991 = !DILocation(line: 283, column: 10, scope: !5989)
!5992 = !DILocation(line: 283, column: 44, scope: !5993)
!5993 = !DILexicalBlockFile(scope: !5994, file: !689, discriminator: 2)
!5994 = distinct !DILexicalBlock(scope: !5989, file: !689, line: 283, column: 13)
!5995 = !DILocation(line: 283, column: 49, scope: !5993)
!5996 = !DILocation(line: 283, column: 7, scope: !5993)
!5997 = !DILocation(line: 283, column: 16, scope: !5993)
!5998 = !DILocation(line: 283, column: 22, scope: !5993)
!5999 = !DILocation(line: 283, column: 19, scope: !5993)
!6000 = !DILocation(line: 283, column: 53, scope: !5993)
!6001 = !DILocation(line: 283, column: 57, scope: !5993)
!6002 = !DILocation(line: 283, column: 69, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !6004, file: !689, discriminator: 3)
!6004 = distinct !DILexicalBlock(scope: !5994, file: !689, line: 283, column: 53)
!6005 = !DILocation(line: 283, column: 62, scope: !6003)
!6006 = !DILocation(line: 283, column: 74, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !5994, file: !689, discriminator: 4)
!6008 = !DILocation(line: 283, column: 87, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !5989, file: !689, discriminator: 5)
!6010 = !DILocation(line: 285, column: 5, scope: !5970)
!6011 = distinct !{!6011, !6010}
!6012 = !DILocation(line: 285, column: 10, scope: !6013)
!6013 = !DILexicalBlockFile(scope: !6014, file: !689, discriminator: 1)
!6014 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 285, column: 8)
!6015 = distinct !{!6015, !6016}
!6016 = !DILocation(line: 285, column: 10, scope: !6014)
!6017 = !DILocation(line: 285, column: 44, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !6019, file: !689, discriminator: 2)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !689, line: 285, column: 13)
!6020 = !DILocation(line: 285, column: 49, scope: !6018)
!6021 = !DILocation(line: 285, column: 7, scope: !6018)
!6022 = !DILocation(line: 285, column: 16, scope: !6018)
!6023 = !DILocation(line: 285, column: 22, scope: !6018)
!6024 = !DILocation(line: 285, column: 19, scope: !6018)
!6025 = !DILocation(line: 285, column: 56, scope: !6018)
!6026 = !DILocation(line: 285, column: 60, scope: !6018)
!6027 = !DILocation(line: 285, column: 72, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !6029, file: !689, discriminator: 3)
!6029 = distinct !DILexicalBlock(scope: !6019, file: !689, line: 285, column: 56)
!6030 = !DILocation(line: 285, column: 65, scope: !6028)
!6031 = !DILocation(line: 285, column: 77, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6019, file: !689, discriminator: 4)
!6033 = !DILocation(line: 285, column: 90, scope: !6034)
!6034 = !DILexicalBlockFile(scope: !6014, file: !689, discriminator: 5)
!6035 = !DILocation(line: 286, column: 5, scope: !5970)
!6036 = distinct !{!6036, !6035}
!6037 = !DILocation(line: 286, column: 10, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6039, file: !689, discriminator: 1)
!6039 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 286, column: 8)
!6040 = distinct !{!6040, !6041}
!6041 = !DILocation(line: 286, column: 10, scope: !6039)
!6042 = !DILocation(line: 286, column: 44, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !6044, file: !689, discriminator: 2)
!6044 = distinct !DILexicalBlock(scope: !6039, file: !689, line: 286, column: 13)
!6045 = !DILocation(line: 286, column: 49, scope: !6043)
!6046 = !DILocation(line: 286, column: 7, scope: !6043)
!6047 = !DILocation(line: 286, column: 16, scope: !6043)
!6048 = !DILocation(line: 286, column: 22, scope: !6043)
!6049 = !DILocation(line: 286, column: 19, scope: !6043)
!6050 = !DILocation(line: 286, column: 57, scope: !6043)
!6051 = !DILocation(line: 286, column: 61, scope: !6043)
!6052 = !DILocation(line: 286, column: 73, scope: !6053)
!6053 = !DILexicalBlockFile(scope: !6054, file: !689, discriminator: 3)
!6054 = distinct !DILexicalBlock(scope: !6044, file: !689, line: 286, column: 57)
!6055 = !DILocation(line: 286, column: 66, scope: !6053)
!6056 = !DILocation(line: 286, column: 78, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !6044, file: !689, discriminator: 4)
!6058 = !DILocation(line: 286, column: 91, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !6039, file: !689, discriminator: 5)
!6060 = !DILocation(line: 287, column: 21, scope: !5970)
!6061 = !DILocation(line: 287, column: 30, scope: !5970)
!6062 = !DILocation(line: 287, column: 47, scope: !5970)
!6063 = !DILocation(line: 287, column: 55, scope: !5970)
!6064 = !DILocation(line: 287, column: 64, scope: !5970)
!6065 = !DILocation(line: 287, column: 53, scope: !5970)
!6066 = !DILocation(line: 287, column: 5, scope: !5970)
!6067 = !DILocation(line: 287, column: 10, scope: !5970)
!6068 = !DILocation(line: 287, column: 18, scope: !5970)
!6069 = !DILocation(line: 288, column: 9, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 288, column: 9)
!6071 = !DILocation(line: 288, column: 14, scope: !6070)
!6072 = !DILocation(line: 288, column: 22, scope: !6070)
!6073 = !DILocation(line: 288, column: 9, scope: !5970)
!6074 = !DILocation(line: 289, column: 9, scope: !6070)
!6075 = distinct !{!6075, !6074}
!6076 = !DILocation(line: 289, column: 14, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !6078, file: !689, discriminator: 1)
!6078 = distinct !DILexicalBlock(scope: !6070, file: !689, line: 289, column: 12)
!6079 = distinct !{!6079, !6080}
!6080 = !DILocation(line: 289, column: 14, scope: !6078)
!6081 = !DILocation(line: 289, column: 48, scope: !6082)
!6082 = !DILexicalBlockFile(scope: !6083, file: !689, discriminator: 2)
!6083 = distinct !DILexicalBlock(scope: !6078, file: !689, line: 289, column: 17)
!6084 = !DILocation(line: 289, column: 53, scope: !6082)
!6085 = !DILocation(line: 289, column: 26, scope: !6082)
!6086 = !DILocation(line: 289, column: 23, scope: !6082)
!6087 = !DILocation(line: 289, column: 95, scope: !6082)
!6088 = !DILocation(line: 289, column: 99, scope: !6082)
!6089 = !DILocation(line: 289, column: 111, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !6091, file: !689, discriminator: 3)
!6091 = distinct !DILexicalBlock(scope: !6083, file: !689, line: 289, column: 95)
!6092 = !DILocation(line: 289, column: 104, scope: !6090)
!6093 = !DILocation(line: 289, column: 116, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !6083, file: !689, discriminator: 4)
!6095 = !DILocation(line: 289, column: 129, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6078, file: !689, discriminator: 5)
!6097 = !DILocation(line: 289, column: 129, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !6078, file: !689, discriminator: 6)
!6099 = !DILocation(line: 291, column: 5, scope: !5970)
!6100 = distinct !{!6100, !6099}
!6101 = !DILocation(line: 291, column: 10, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !6103, file: !689, discriminator: 1)
!6103 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 291, column: 8)
!6104 = distinct !{!6104, !6105}
!6105 = !DILocation(line: 291, column: 10, scope: !6103)
!6106 = !DILocation(line: 291, column: 44, scope: !6107)
!6107 = !DILexicalBlockFile(scope: !6108, file: !689, discriminator: 2)
!6108 = distinct !DILexicalBlock(scope: !6103, file: !689, line: 291, column: 13)
!6109 = !DILocation(line: 291, column: 49, scope: !6107)
!6110 = !DILocation(line: 291, column: 7, scope: !6107)
!6111 = !DILocation(line: 291, column: 16, scope: !6107)
!6112 = !DILocation(line: 291, column: 22, scope: !6107)
!6113 = !DILocation(line: 291, column: 19, scope: !6107)
!6114 = !DILocation(line: 291, column: 60, scope: !6107)
!6115 = !DILocation(line: 291, column: 64, scope: !6107)
!6116 = !DILocation(line: 291, column: 76, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !6118, file: !689, discriminator: 3)
!6118 = distinct !DILexicalBlock(scope: !6108, file: !689, line: 291, column: 60)
!6119 = !DILocation(line: 291, column: 69, scope: !6117)
!6120 = !DILocation(line: 291, column: 81, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !6108, file: !689, discriminator: 4)
!6122 = !DILocation(line: 291, column: 94, scope: !6123)
!6123 = !DILexicalBlockFile(scope: !6103, file: !689, discriminator: 5)
!6124 = !DILocation(line: 292, column: 9, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 292, column: 9)
!6126 = !DILocation(line: 292, column: 18, scope: !6125)
!6127 = !DILocation(line: 292, column: 9, scope: !5970)
!6128 = !DILocation(line: 293, column: 9, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6125, file: !689, line: 292, column: 39)
!6130 = distinct !{!6130, !6128}
!6131 = !DILocation(line: 293, column: 14, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6133, file: !689, discriminator: 1)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !689, line: 293, column: 12)
!6134 = distinct !{!6134, !6135}
!6135 = !DILocation(line: 293, column: 14, scope: !6133)
!6136 = !DILocation(line: 293, column: 48, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !6138, file: !689, discriminator: 2)
!6138 = distinct !DILexicalBlock(scope: !6133, file: !689, line: 293, column: 17)
!6139 = !DILocation(line: 293, column: 53, scope: !6137)
!6140 = !DILocation(line: 293, column: 11, scope: !6137)
!6141 = !DILocation(line: 293, column: 20, scope: !6137)
!6142 = !DILocation(line: 293, column: 26, scope: !6137)
!6143 = !DILocation(line: 293, column: 23, scope: !6137)
!6144 = !DILocation(line: 293, column: 66, scope: !6137)
!6145 = !DILocation(line: 293, column: 70, scope: !6137)
!6146 = !DILocation(line: 293, column: 82, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !6148, file: !689, discriminator: 3)
!6148 = distinct !DILexicalBlock(scope: !6138, file: !689, line: 293, column: 66)
!6149 = !DILocation(line: 293, column: 75, scope: !6147)
!6150 = !DILocation(line: 293, column: 87, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !6138, file: !689, discriminator: 4)
!6152 = !DILocation(line: 293, column: 100, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6133, file: !689, discriminator: 5)
!6154 = !DILocation(line: 294, column: 9, scope: !6129)
!6155 = distinct !{!6155, !6154}
!6156 = !DILocation(line: 294, column: 18, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !6158, file: !689, discriminator: 1)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !689, line: 294, column: 18)
!6159 = distinct !DILexicalBlock(scope: !6129, file: !689, line: 294, column: 12)
!6160 = !DILocation(line: 294, column: 27, scope: !6157)
!6161 = !DILocation(line: 294, column: 48, scope: !6157)
!6162 = !DILocation(line: 294, column: 65, scope: !6163)
!6163 = !DILexicalBlockFile(scope: !6164, file: !689, discriminator: 2)
!6164 = distinct !DILexicalBlock(scope: !6158, file: !689, line: 294, column: 56)
!6165 = !DILocation(line: 294, column: 70, scope: !6163)
!6166 = !DILocation(line: 294, column: 48, scope: !6163)
!6167 = !DILocation(line: 294, column: 57, scope: !6163)
!6168 = !DILocation(line: 294, column: 39, scope: !6163)
!6169 = !DILocation(line: 294, column: 58, scope: !6163)
!6170 = !DILocation(line: 294, column: 94, scope: !6163)
!6171 = !DILocation(line: 294, column: 96, scope: !6172)
!6172 = !DILexicalBlockFile(scope: !6159, file: !689, discriminator: 3)
!6173 = !DILocation(line: 295, column: 9, scope: !6129)
!6174 = distinct !{!6174, !6173}
!6175 = !DILocation(line: 295, column: 18, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !6177, file: !689, discriminator: 1)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !689, line: 295, column: 18)
!6178 = distinct !DILexicalBlock(scope: !6129, file: !689, line: 295, column: 12)
!6179 = !DILocation(line: 295, column: 27, scope: !6176)
!6180 = !DILocation(line: 295, column: 47, scope: !6176)
!6181 = !DILocation(line: 295, column: 67, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6183, file: !689, discriminator: 2)
!6183 = distinct !DILexicalBlock(scope: !6177, file: !689, line: 295, column: 58)
!6184 = !DILocation(line: 295, column: 72, scope: !6182)
!6185 = !DILocation(line: 295, column: 47, scope: !6182)
!6186 = !DILocation(line: 295, column: 56, scope: !6182)
!6187 = !DILocation(line: 295, column: 38, scope: !6182)
!6188 = !DILocation(line: 295, column: 60, scope: !6182)
!6189 = !DILocation(line: 295, column: 95, scope: !6182)
!6190 = !DILocation(line: 295, column: 97, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !6178, file: !689, discriminator: 3)
!6192 = !DILocation(line: 296, column: 9, scope: !6129)
!6193 = distinct !{!6193, !6192}
!6194 = !DILocation(line: 296, column: 18, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !6196, file: !689, discriminator: 1)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !689, line: 296, column: 18)
!6197 = distinct !DILexicalBlock(scope: !6129, file: !689, line: 296, column: 12)
!6198 = !DILocation(line: 296, column: 27, scope: !6195)
!6199 = !DILocation(line: 296, column: 45, scope: !6195)
!6200 = !DILocation(line: 296, column: 62, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !6202, file: !689, discriminator: 2)
!6202 = distinct !DILexicalBlock(scope: !6196, file: !689, line: 296, column: 53)
!6203 = !DILocation(line: 296, column: 67, scope: !6201)
!6204 = !DILocation(line: 296, column: 45, scope: !6201)
!6205 = !DILocation(line: 296, column: 54, scope: !6201)
!6206 = !DILocation(line: 296, column: 36, scope: !6201)
!6207 = !DILocation(line: 296, column: 55, scope: !6201)
!6208 = !DILocation(line: 296, column: 88, scope: !6201)
!6209 = !DILocation(line: 296, column: 90, scope: !6210)
!6210 = !DILexicalBlockFile(scope: !6197, file: !689, discriminator: 3)
!6211 = !DILocation(line: 297, column: 9, scope: !6129)
!6212 = !DILocation(line: 300, column: 5, scope: !5970)
!6213 = distinct !{!6213, !6212}
!6214 = !DILocation(line: 300, column: 10, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !6216, file: !689, discriminator: 1)
!6216 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 300, column: 8)
!6217 = distinct !{!6217, !6218}
!6218 = !DILocation(line: 300, column: 10, scope: !6216)
!6219 = !DILocation(line: 300, column: 44, scope: !6220)
!6220 = !DILexicalBlockFile(scope: !6221, file: !689, discriminator: 2)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !689, line: 300, column: 13)
!6222 = !DILocation(line: 300, column: 49, scope: !6220)
!6223 = !DILocation(line: 300, column: 7, scope: !6220)
!6224 = !DILocation(line: 300, column: 16, scope: !6220)
!6225 = !DILocation(line: 300, column: 22, scope: !6220)
!6226 = !DILocation(line: 300, column: 19, scope: !6220)
!6227 = !DILocation(line: 300, column: 51, scope: !6220)
!6228 = !DILocation(line: 300, column: 55, scope: !6220)
!6229 = !DILocation(line: 300, column: 67, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6231, file: !689, discriminator: 3)
!6231 = distinct !DILexicalBlock(scope: !6221, file: !689, line: 300, column: 51)
!6232 = !DILocation(line: 300, column: 60, scope: !6230)
!6233 = !DILocation(line: 300, column: 72, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6221, file: !689, discriminator: 4)
!6235 = !DILocation(line: 300, column: 85, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !6216, file: !689, discriminator: 5)
!6237 = !DILocation(line: 301, column: 5, scope: !5970)
!6238 = distinct !{!6238, !6237}
!6239 = !DILocation(line: 301, column: 10, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !6241, file: !689, discriminator: 1)
!6241 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 301, column: 8)
!6242 = distinct !{!6242, !6243}
!6243 = !DILocation(line: 301, column: 10, scope: !6241)
!6244 = !DILocation(line: 301, column: 44, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6246, file: !689, discriminator: 2)
!6246 = distinct !DILexicalBlock(scope: !6241, file: !689, line: 301, column: 13)
!6247 = !DILocation(line: 301, column: 49, scope: !6245)
!6248 = !DILocation(line: 301, column: 7, scope: !6245)
!6249 = !DILocation(line: 301, column: 16, scope: !6245)
!6250 = !DILocation(line: 301, column: 22, scope: !6245)
!6251 = !DILocation(line: 301, column: 19, scope: !6245)
!6252 = !DILocation(line: 301, column: 51, scope: !6245)
!6253 = !DILocation(line: 301, column: 55, scope: !6245)
!6254 = !DILocation(line: 301, column: 67, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6256, file: !689, discriminator: 3)
!6256 = distinct !DILexicalBlock(scope: !6246, file: !689, line: 301, column: 51)
!6257 = !DILocation(line: 301, column: 60, scope: !6255)
!6258 = !DILocation(line: 301, column: 72, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !6246, file: !689, discriminator: 4)
!6260 = !DILocation(line: 301, column: 85, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6241, file: !689, discriminator: 5)
!6262 = !DILocation(line: 302, column: 5, scope: !5970)
!6263 = distinct !{!6263, !6262}
!6264 = !DILocation(line: 302, column: 10, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6266, file: !689, discriminator: 1)
!6266 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 302, column: 8)
!6267 = distinct !{!6267, !6268}
!6268 = !DILocation(line: 302, column: 10, scope: !6266)
!6269 = !DILocation(line: 302, column: 44, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6271, file: !689, discriminator: 2)
!6271 = distinct !DILexicalBlock(scope: !6266, file: !689, line: 302, column: 13)
!6272 = !DILocation(line: 302, column: 49, scope: !6270)
!6273 = !DILocation(line: 302, column: 7, scope: !6270)
!6274 = !DILocation(line: 302, column: 16, scope: !6270)
!6275 = !DILocation(line: 302, column: 22, scope: !6270)
!6276 = !DILocation(line: 302, column: 19, scope: !6270)
!6277 = !DILocation(line: 302, column: 61, scope: !6270)
!6278 = !DILocation(line: 302, column: 65, scope: !6270)
!6279 = !DILocation(line: 302, column: 77, scope: !6280)
!6280 = !DILexicalBlockFile(scope: !6281, file: !689, discriminator: 3)
!6281 = distinct !DILexicalBlock(scope: !6271, file: !689, line: 302, column: 61)
!6282 = !DILocation(line: 302, column: 70, scope: !6280)
!6283 = !DILocation(line: 302, column: 82, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6271, file: !689, discriminator: 4)
!6285 = !DILocation(line: 302, column: 95, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6266, file: !689, discriminator: 5)
!6287 = !DILocation(line: 304, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 304, column: 9)
!6289 = !DILocation(line: 304, column: 18, scope: !6288)
!6290 = !DILocation(line: 304, column: 29, scope: !6288)
!6291 = !DILocation(line: 304, column: 9, scope: !5970)
!6292 = !DILocation(line: 305, column: 9, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !689, line: 304, column: 47)
!6294 = distinct !{!6294, !6292}
!6295 = !DILocation(line: 305, column: 51, scope: !6296)
!6296 = !DILexicalBlockFile(scope: !6297, file: !689, discriminator: 1)
!6297 = distinct !DILexicalBlock(scope: !6293, file: !689, line: 305, column: 12)
!6298 = !DILocation(line: 305, column: 56, scope: !6296)
!6299 = !DILocation(line: 305, column: 60, scope: !6296)
!6300 = !DILocation(line: 305, column: 21, scope: !6296)
!6301 = !DILocation(line: 305, column: 18, scope: !6296)
!6302 = !DILocation(line: 305, column: 75, scope: !6296)
!6303 = !DILocation(line: 305, column: 79, scope: !6296)
!6304 = !DILocation(line: 305, column: 91, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6306, file: !689, discriminator: 2)
!6306 = distinct !DILexicalBlock(scope: !6297, file: !689, line: 305, column: 75)
!6307 = !DILocation(line: 305, column: 84, scope: !6305)
!6308 = !DILocation(line: 305, column: 96, scope: !6309)
!6309 = !DILexicalBlockFile(scope: !6297, file: !689, discriminator: 3)
!6310 = !DILocation(line: 306, column: 9, scope: !6293)
!6311 = distinct !{!6311, !6310}
!6312 = !DILocation(line: 306, column: 48, scope: !6313)
!6313 = !DILexicalBlockFile(scope: !6314, file: !689, discriminator: 1)
!6314 = distinct !DILexicalBlock(scope: !6293, file: !689, line: 306, column: 12)
!6315 = !DILocation(line: 306, column: 53, scope: !6313)
!6316 = !DILocation(line: 306, column: 57, scope: !6313)
!6317 = !DILocation(line: 306, column: 66, scope: !6313)
!6318 = !DILocation(line: 306, column: 71, scope: !6313)
!6319 = !DILocation(line: 306, column: 21, scope: !6313)
!6320 = !DILocation(line: 306, column: 18, scope: !6313)
!6321 = !DILocation(line: 306, column: 86, scope: !6313)
!6322 = !DILocation(line: 306, column: 90, scope: !6313)
!6323 = !DILocation(line: 306, column: 102, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !6325, file: !689, discriminator: 2)
!6325 = distinct !DILexicalBlock(scope: !6314, file: !689, line: 306, column: 86)
!6326 = !DILocation(line: 306, column: 95, scope: !6324)
!6327 = !DILocation(line: 306, column: 107, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6314, file: !689, discriminator: 3)
!6329 = !DILocation(line: 307, column: 9, scope: !6293)
!6330 = distinct !{!6330, !6329}
!6331 = !DILocation(line: 307, column: 46, scope: !6332)
!6332 = !DILexicalBlockFile(scope: !6333, file: !689, discriminator: 1)
!6333 = distinct !DILexicalBlock(scope: !6293, file: !689, line: 307, column: 12)
!6334 = !DILocation(line: 307, column: 51, scope: !6332)
!6335 = !DILocation(line: 307, column: 55, scope: !6332)
!6336 = !DILocation(line: 307, column: 21, scope: !6332)
!6337 = !DILocation(line: 307, column: 18, scope: !6332)
!6338 = !DILocation(line: 307, column: 70, scope: !6332)
!6339 = !DILocation(line: 307, column: 74, scope: !6332)
!6340 = !DILocation(line: 307, column: 86, scope: !6341)
!6341 = !DILexicalBlockFile(scope: !6342, file: !689, discriminator: 2)
!6342 = distinct !DILexicalBlock(scope: !6333, file: !689, line: 307, column: 70)
!6343 = !DILocation(line: 307, column: 79, scope: !6341)
!6344 = !DILocation(line: 307, column: 91, scope: !6345)
!6345 = !DILexicalBlockFile(scope: !6333, file: !689, discriminator: 3)
!6346 = !DILocation(line: 308, column: 9, scope: !6293)
!6347 = distinct !{!6347, !6346}
!6348 = !DILocation(line: 308, column: 47, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !6350, file: !689, discriminator: 1)
!6350 = distinct !DILexicalBlock(scope: !6293, file: !689, line: 308, column: 12)
!6351 = !DILocation(line: 308, column: 52, scope: !6349)
!6352 = !DILocation(line: 308, column: 56, scope: !6349)
!6353 = !DILocation(line: 308, column: 21, scope: !6349)
!6354 = !DILocation(line: 308, column: 18, scope: !6349)
!6355 = !DILocation(line: 308, column: 71, scope: !6349)
!6356 = !DILocation(line: 308, column: 75, scope: !6349)
!6357 = !DILocation(line: 308, column: 87, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6359, file: !689, discriminator: 2)
!6359 = distinct !DILexicalBlock(scope: !6350, file: !689, line: 308, column: 71)
!6360 = !DILocation(line: 308, column: 80, scope: !6358)
!6361 = !DILocation(line: 308, column: 92, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !6350, file: !689, discriminator: 3)
!6363 = !DILocation(line: 310, column: 9, scope: !6293)
!6364 = distinct !{!6364, !6363}
!6365 = !DILocation(line: 310, column: 18, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !6367, file: !689, discriminator: 1)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !689, line: 310, column: 18)
!6368 = distinct !DILexicalBlock(scope: !6293, file: !689, line: 310, column: 12)
!6369 = !DILocation(line: 310, column: 27, scope: !6366)
!6370 = !DILocation(line: 310, column: 47, scope: !6366)
!6371 = !DILocation(line: 310, column: 67, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !6373, file: !689, discriminator: 2)
!6373 = distinct !DILexicalBlock(scope: !6367, file: !689, line: 310, column: 58)
!6374 = !DILocation(line: 310, column: 72, scope: !6372)
!6375 = !DILocation(line: 310, column: 47, scope: !6372)
!6376 = !DILocation(line: 310, column: 56, scope: !6372)
!6377 = !DILocation(line: 310, column: 38, scope: !6372)
!6378 = !DILocation(line: 310, column: 60, scope: !6372)
!6379 = !DILocation(line: 310, column: 95, scope: !6372)
!6380 = !DILocation(line: 310, column: 97, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6368, file: !689, discriminator: 3)
!6382 = !DILocation(line: 312, column: 5, scope: !6293)
!6383 = !DILocation(line: 313, column: 14, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !689, line: 313, column: 14)
!6385 = distinct !DILexicalBlock(scope: !6288, file: !689, line: 312, column: 12)
!6386 = !DILocation(line: 313, column: 23, scope: !6384)
!6387 = !DILocation(line: 313, column: 34, scope: !6384)
!6388 = !DILocation(line: 313, column: 14, scope: !6385)
!6389 = !DILocation(line: 314, column: 14, scope: !6384)
!6390 = distinct !{!6390, !6389}
!6391 = !DILocation(line: 314, column: 19, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6393, file: !689, discriminator: 1)
!6393 = distinct !DILexicalBlock(scope: !6384, file: !689, line: 314, column: 17)
!6394 = distinct !{!6394, !6395}
!6395 = !DILocation(line: 314, column: 19, scope: !6393)
!6396 = !DILocation(line: 314, column: 53, scope: !6397)
!6397 = !DILexicalBlockFile(scope: !6398, file: !689, discriminator: 2)
!6398 = distinct !DILexicalBlock(scope: !6393, file: !689, line: 314, column: 22)
!6399 = !DILocation(line: 314, column: 58, scope: !6397)
!6400 = !DILocation(line: 314, column: 16, scope: !6397)
!6401 = !DILocation(line: 314, column: 25, scope: !6397)
!6402 = !DILocation(line: 314, column: 31, scope: !6397)
!6403 = !DILocation(line: 314, column: 28, scope: !6397)
!6404 = !DILocation(line: 314, column: 60, scope: !6397)
!6405 = !DILocation(line: 314, column: 64, scope: !6397)
!6406 = !DILocation(line: 314, column: 76, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6408, file: !689, discriminator: 3)
!6408 = distinct !DILexicalBlock(scope: !6398, file: !689, line: 314, column: 60)
!6409 = !DILocation(line: 314, column: 69, scope: !6407)
!6410 = !DILocation(line: 314, column: 81, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !6398, file: !689, discriminator: 4)
!6412 = !DILocation(line: 314, column: 94, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !6393, file: !689, discriminator: 5)
!6414 = !DILocation(line: 314, column: 94, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6393, file: !689, discriminator: 6)
!6416 = !DILocation(line: 316, column: 14, scope: !6384)
!6417 = distinct !{!6417, !6416}
!6418 = !DILocation(line: 316, column: 23, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !6420, file: !689, discriminator: 1)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !689, line: 316, column: 23)
!6421 = distinct !DILexicalBlock(scope: !6384, file: !689, line: 316, column: 17)
!6422 = !DILocation(line: 316, column: 32, scope: !6419)
!6423 = !DILocation(line: 316, column: 43, scope: !6419)
!6424 = !DILocation(line: 316, column: 60, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6426, file: !689, discriminator: 2)
!6426 = distinct !DILexicalBlock(scope: !6420, file: !689, line: 316, column: 51)
!6427 = !DILocation(line: 316, column: 65, scope: !6425)
!6428 = !DILocation(line: 316, column: 43, scope: !6425)
!6429 = !DILocation(line: 316, column: 52, scope: !6425)
!6430 = !DILocation(line: 316, column: 34, scope: !6425)
!6431 = !DILocation(line: 316, column: 53, scope: !6425)
!6432 = !DILocation(line: 316, column: 79, scope: !6425)
!6433 = !DILocation(line: 316, column: 81, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6421, file: !689, discriminator: 3)
!6435 = !DILocation(line: 318, column: 14, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6385, file: !689, line: 318, column: 14)
!6437 = !DILocation(line: 318, column: 23, scope: !6436)
!6438 = !DILocation(line: 318, column: 44, scope: !6436)
!6439 = !DILocation(line: 318, column: 14, scope: !6385)
!6440 = !DILocation(line: 319, column: 14, scope: !6436)
!6441 = distinct !{!6441, !6440}
!6442 = !DILocation(line: 319, column: 19, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !6444, file: !689, discriminator: 1)
!6444 = distinct !DILexicalBlock(scope: !6436, file: !689, line: 319, column: 17)
!6445 = distinct !{!6445, !6446}
!6446 = !DILocation(line: 319, column: 19, scope: !6444)
!6447 = !DILocation(line: 319, column: 53, scope: !6448)
!6448 = !DILexicalBlockFile(scope: !6449, file: !689, discriminator: 2)
!6449 = distinct !DILexicalBlock(scope: !6444, file: !689, line: 319, column: 22)
!6450 = !DILocation(line: 319, column: 58, scope: !6448)
!6451 = !DILocation(line: 319, column: 16, scope: !6448)
!6452 = !DILocation(line: 319, column: 25, scope: !6448)
!6453 = !DILocation(line: 319, column: 31, scope: !6448)
!6454 = !DILocation(line: 319, column: 28, scope: !6448)
!6455 = !DILocation(line: 319, column: 69, scope: !6448)
!6456 = !DILocation(line: 319, column: 73, scope: !6448)
!6457 = !DILocation(line: 319, column: 85, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !6459, file: !689, discriminator: 3)
!6459 = distinct !DILexicalBlock(scope: !6449, file: !689, line: 319, column: 69)
!6460 = !DILocation(line: 319, column: 78, scope: !6458)
!6461 = !DILocation(line: 319, column: 90, scope: !6462)
!6462 = !DILexicalBlockFile(scope: !6449, file: !689, discriminator: 4)
!6463 = !DILocation(line: 319, column: 103, scope: !6464)
!6464 = !DILexicalBlockFile(scope: !6444, file: !689, discriminator: 5)
!6465 = !DILocation(line: 319, column: 103, scope: !6466)
!6466 = !DILexicalBlockFile(scope: !6444, file: !689, discriminator: 6)
!6467 = !DILocation(line: 321, column: 14, scope: !6436)
!6468 = distinct !{!6468, !6467}
!6469 = !DILocation(line: 321, column: 23, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !6471, file: !689, discriminator: 1)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !689, line: 321, column: 23)
!6472 = distinct !DILexicalBlock(scope: !6436, file: !689, line: 321, column: 17)
!6473 = !DILocation(line: 321, column: 32, scope: !6470)
!6474 = !DILocation(line: 321, column: 52, scope: !6470)
!6475 = !DILocation(line: 321, column: 69, scope: !6476)
!6476 = !DILexicalBlockFile(scope: !6477, file: !689, discriminator: 2)
!6477 = distinct !DILexicalBlock(scope: !6471, file: !689, line: 321, column: 60)
!6478 = !DILocation(line: 321, column: 74, scope: !6476)
!6479 = !DILocation(line: 321, column: 52, scope: !6476)
!6480 = !DILocation(line: 321, column: 61, scope: !6476)
!6481 = !DILocation(line: 321, column: 43, scope: !6476)
!6482 = !DILocation(line: 321, column: 62, scope: !6476)
!6483 = !DILocation(line: 321, column: 97, scope: !6476)
!6484 = !DILocation(line: 321, column: 99, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6472, file: !689, discriminator: 3)
!6486 = !DILocation(line: 323, column: 14, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6385, file: !689, line: 323, column: 14)
!6488 = !DILocation(line: 323, column: 23, scope: !6487)
!6489 = !DILocation(line: 323, column: 34, scope: !6487)
!6490 = !DILocation(line: 323, column: 14, scope: !6385)
!6491 = !DILocation(line: 324, column: 14, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6487, file: !689, line: 323, column: 40)
!6493 = distinct !{!6493, !6491}
!6494 = !DILocation(line: 324, column: 56, scope: !6495)
!6495 = !DILexicalBlockFile(scope: !6496, file: !689, discriminator: 1)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !689, line: 324, column: 17)
!6497 = !DILocation(line: 324, column: 61, scope: !6495)
!6498 = !DILocation(line: 324, column: 65, scope: !6495)
!6499 = !DILocation(line: 324, column: 26, scope: !6495)
!6500 = !DILocation(line: 324, column: 23, scope: !6495)
!6501 = !DILocation(line: 324, column: 80, scope: !6495)
!6502 = !DILocation(line: 324, column: 84, scope: !6495)
!6503 = !DILocation(line: 324, column: 96, scope: !6504)
!6504 = !DILexicalBlockFile(scope: !6505, file: !689, discriminator: 2)
!6505 = distinct !DILexicalBlock(scope: !6496, file: !689, line: 324, column: 80)
!6506 = !DILocation(line: 324, column: 89, scope: !6504)
!6507 = !DILocation(line: 324, column: 101, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6496, file: !689, discriminator: 3)
!6509 = !DILocation(line: 326, column: 18, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6492, file: !689, line: 326, column: 18)
!6511 = !DILocation(line: 326, column: 23, scope: !6510)
!6512 = !DILocation(line: 326, column: 31, scope: !6510)
!6513 = !DILocation(line: 326, column: 18, scope: !6492)
!6514 = !DILocation(line: 327, column: 18, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6510, file: !689, line: 326, column: 36)
!6516 = distinct !{!6516, !6514}
!6517 = !DILocation(line: 327, column: 57, scope: !6518)
!6518 = !DILexicalBlockFile(scope: !6519, file: !689, discriminator: 1)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !689, line: 327, column: 21)
!6520 = !DILocation(line: 327, column: 62, scope: !6518)
!6521 = !DILocation(line: 327, column: 66, scope: !6518)
!6522 = !DILocation(line: 327, column: 75, scope: !6518)
!6523 = !DILocation(line: 327, column: 80, scope: !6518)
!6524 = !DILocation(line: 327, column: 30, scope: !6518)
!6525 = !DILocation(line: 327, column: 27, scope: !6518)
!6526 = !DILocation(line: 327, column: 95, scope: !6518)
!6527 = !DILocation(line: 327, column: 99, scope: !6518)
!6528 = !DILocation(line: 327, column: 111, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !6530, file: !689, discriminator: 2)
!6530 = distinct !DILexicalBlock(scope: !6519, file: !689, line: 327, column: 95)
!6531 = !DILocation(line: 327, column: 104, scope: !6529)
!6532 = !DILocation(line: 327, column: 116, scope: !6533)
!6533 = !DILexicalBlockFile(scope: !6519, file: !689, discriminator: 3)
!6534 = !DILocation(line: 328, column: 14, scope: !6515)
!6535 = !DILocation(line: 329, column: 18, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6510, file: !689, line: 328, column: 21)
!6537 = distinct !{!6537, !6535}
!6538 = !DILocation(line: 329, column: 27, scope: !6539)
!6539 = !DILexicalBlockFile(scope: !6540, file: !689, discriminator: 1)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !689, line: 329, column: 27)
!6541 = distinct !DILexicalBlock(scope: !6536, file: !689, line: 329, column: 21)
!6542 = !DILocation(line: 329, column: 36, scope: !6539)
!6543 = !DILocation(line: 329, column: 48, scope: !6539)
!6544 = !DILocation(line: 329, column: 65, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6546, file: !689, discriminator: 2)
!6546 = distinct !DILexicalBlock(scope: !6540, file: !689, line: 329, column: 56)
!6547 = !DILocation(line: 329, column: 70, scope: !6545)
!6548 = !DILocation(line: 329, column: 48, scope: !6545)
!6549 = !DILocation(line: 329, column: 57, scope: !6545)
!6550 = !DILocation(line: 329, column: 39, scope: !6545)
!6551 = !DILocation(line: 329, column: 58, scope: !6545)
!6552 = !DILocation(line: 329, column: 85, scope: !6545)
!6553 = !DILocation(line: 329, column: 87, scope: !6554)
!6554 = !DILexicalBlockFile(scope: !6541, file: !689, discriminator: 3)
!6555 = !DILocation(line: 330, column: 18, scope: !6536)
!6556 = distinct !{!6556, !6555}
!6557 = !DILocation(line: 330, column: 27, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6559, file: !689, discriminator: 1)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !689, line: 330, column: 27)
!6560 = distinct !DILexicalBlock(scope: !6536, file: !689, line: 330, column: 21)
!6561 = !DILocation(line: 330, column: 36, scope: !6558)
!6562 = !DILocation(line: 330, column: 50, scope: !6558)
!6563 = !DILocation(line: 330, column: 67, scope: !6564)
!6564 = !DILexicalBlockFile(scope: !6565, file: !689, discriminator: 2)
!6565 = distinct !DILexicalBlock(scope: !6559, file: !689, line: 330, column: 58)
!6566 = !DILocation(line: 330, column: 72, scope: !6564)
!6567 = !DILocation(line: 330, column: 50, scope: !6564)
!6568 = !DILocation(line: 330, column: 59, scope: !6564)
!6569 = !DILocation(line: 330, column: 41, scope: !6564)
!6570 = !DILocation(line: 330, column: 60, scope: !6564)
!6571 = !DILocation(line: 330, column: 89, scope: !6564)
!6572 = !DILocation(line: 330, column: 91, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6560, file: !689, discriminator: 3)
!6574 = !DILocation(line: 331, column: 18, scope: !6536)
!6575 = distinct !{!6575, !6574}
!6576 = !DILocation(line: 331, column: 27, scope: !6577)
!6577 = !DILexicalBlockFile(scope: !6578, file: !689, discriminator: 1)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !689, line: 331, column: 27)
!6579 = distinct !DILexicalBlock(scope: !6536, file: !689, line: 331, column: 21)
!6580 = !DILocation(line: 331, column: 36, scope: !6577)
!6581 = !DILocation(line: 331, column: 50, scope: !6577)
!6582 = !DILocation(line: 331, column: 67, scope: !6583)
!6583 = !DILexicalBlockFile(scope: !6584, file: !689, discriminator: 2)
!6584 = distinct !DILexicalBlock(scope: !6578, file: !689, line: 331, column: 58)
!6585 = !DILocation(line: 331, column: 72, scope: !6583)
!6586 = !DILocation(line: 331, column: 50, scope: !6583)
!6587 = !DILocation(line: 331, column: 59, scope: !6583)
!6588 = !DILocation(line: 331, column: 41, scope: !6583)
!6589 = !DILocation(line: 331, column: 60, scope: !6583)
!6590 = !DILocation(line: 331, column: 89, scope: !6583)
!6591 = !DILocation(line: 331, column: 91, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6579, file: !689, discriminator: 3)
!6593 = !DILocation(line: 332, column: 18, scope: !6536)
!6594 = !DILocation(line: 332, column: 23, scope: !6536)
!6595 = !DILocation(line: 332, column: 33, scope: !6536)
!6596 = !DILocation(line: 334, column: 39, scope: !6536)
!6597 = !DILocation(line: 334, column: 48, scope: !6536)
!6598 = !DILocation(line: 334, column: 18, scope: !6536)
!6599 = !DILocation(line: 334, column: 23, scope: !6536)
!6600 = !DILocation(line: 334, column: 37, scope: !6536)
!6601 = !DILocation(line: 335, column: 39, scope: !6536)
!6602 = !DILocation(line: 335, column: 48, scope: !6536)
!6603 = !DILocation(line: 335, column: 18, scope: !6536)
!6604 = !DILocation(line: 335, column: 23, scope: !6536)
!6605 = !DILocation(line: 335, column: 37, scope: !6536)
!6606 = !DILocation(line: 338, column: 14, scope: !6492)
!6607 = distinct !{!6607, !6606}
!6608 = !DILocation(line: 338, column: 19, scope: !6609)
!6609 = !DILexicalBlockFile(scope: !6610, file: !689, discriminator: 1)
!6610 = distinct !DILexicalBlock(scope: !6492, file: !689, line: 338, column: 17)
!6611 = distinct !{!6611, !6612}
!6612 = !DILocation(line: 338, column: 19, scope: !6610)
!6613 = !DILocation(line: 338, column: 53, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !6615, file: !689, discriminator: 2)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !689, line: 338, column: 22)
!6616 = !DILocation(line: 338, column: 58, scope: !6614)
!6617 = !DILocation(line: 338, column: 16, scope: !6614)
!6618 = !DILocation(line: 338, column: 25, scope: !6614)
!6619 = !DILocation(line: 338, column: 31, scope: !6614)
!6620 = !DILocation(line: 338, column: 28, scope: !6614)
!6621 = !DILocation(line: 338, column: 69, scope: !6614)
!6622 = !DILocation(line: 338, column: 73, scope: !6614)
!6623 = !DILocation(line: 338, column: 85, scope: !6624)
!6624 = !DILexicalBlockFile(scope: !6625, file: !689, discriminator: 3)
!6625 = distinct !DILexicalBlock(scope: !6615, file: !689, line: 338, column: 69)
!6626 = !DILocation(line: 338, column: 78, scope: !6624)
!6627 = !DILocation(line: 338, column: 90, scope: !6628)
!6628 = !DILexicalBlockFile(scope: !6615, file: !689, discriminator: 4)
!6629 = !DILocation(line: 338, column: 103, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6610, file: !689, discriminator: 5)
!6631 = !DILocation(line: 340, column: 14, scope: !6492)
!6632 = distinct !{!6632, !6631}
!6633 = !DILocation(line: 340, column: 51, scope: !6634)
!6634 = !DILexicalBlockFile(scope: !6635, file: !689, discriminator: 1)
!6635 = distinct !DILexicalBlock(scope: !6492, file: !689, line: 340, column: 17)
!6636 = !DILocation(line: 340, column: 56, scope: !6634)
!6637 = !DILocation(line: 340, column: 60, scope: !6634)
!6638 = !DILocation(line: 340, column: 26, scope: !6634)
!6639 = !DILocation(line: 340, column: 23, scope: !6634)
!6640 = !DILocation(line: 340, column: 75, scope: !6634)
!6641 = !DILocation(line: 340, column: 79, scope: !6634)
!6642 = !DILocation(line: 340, column: 91, scope: !6643)
!6643 = !DILexicalBlockFile(scope: !6644, file: !689, discriminator: 2)
!6644 = distinct !DILexicalBlock(scope: !6635, file: !689, line: 340, column: 75)
!6645 = !DILocation(line: 340, column: 84, scope: !6643)
!6646 = !DILocation(line: 340, column: 96, scope: !6647)
!6647 = !DILexicalBlockFile(scope: !6635, file: !689, discriminator: 3)
!6648 = !DILocation(line: 341, column: 14, scope: !6492)
!6649 = distinct !{!6649, !6648}
!6650 = !DILocation(line: 341, column: 52, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6652, file: !689, discriminator: 1)
!6652 = distinct !DILexicalBlock(scope: !6492, file: !689, line: 341, column: 17)
!6653 = !DILocation(line: 341, column: 57, scope: !6651)
!6654 = !DILocation(line: 341, column: 61, scope: !6651)
!6655 = !DILocation(line: 341, column: 26, scope: !6651)
!6656 = !DILocation(line: 341, column: 23, scope: !6651)
!6657 = !DILocation(line: 341, column: 76, scope: !6651)
!6658 = !DILocation(line: 341, column: 80, scope: !6651)
!6659 = !DILocation(line: 341, column: 92, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6661, file: !689, discriminator: 2)
!6661 = distinct !DILexicalBlock(scope: !6652, file: !689, line: 341, column: 76)
!6662 = !DILocation(line: 341, column: 85, scope: !6660)
!6663 = !DILocation(line: 341, column: 97, scope: !6664)
!6664 = !DILexicalBlockFile(scope: !6652, file: !689, discriminator: 3)
!6665 = !DILocation(line: 342, column: 10, scope: !6492)
!6666 = !DILocation(line: 343, column: 14, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6487, file: !689, line: 342, column: 17)
!6668 = distinct !{!6668, !6666}
!6669 = !DILocation(line: 343, column: 19, scope: !6670)
!6670 = !DILexicalBlockFile(scope: !6671, file: !689, discriminator: 1)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !689, line: 343, column: 17)
!6672 = distinct !{!6672, !6673}
!6673 = !DILocation(line: 343, column: 19, scope: !6671)
!6674 = !DILocation(line: 343, column: 53, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !6676, file: !689, discriminator: 2)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !689, line: 343, column: 22)
!6677 = !DILocation(line: 343, column: 58, scope: !6675)
!6678 = !DILocation(line: 343, column: 16, scope: !6675)
!6679 = !DILocation(line: 343, column: 25, scope: !6675)
!6680 = !DILocation(line: 343, column: 31, scope: !6675)
!6681 = !DILocation(line: 343, column: 28, scope: !6675)
!6682 = !DILocation(line: 343, column: 69, scope: !6675)
!6683 = !DILocation(line: 343, column: 73, scope: !6675)
!6684 = !DILocation(line: 343, column: 85, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6686, file: !689, discriminator: 3)
!6686 = distinct !DILexicalBlock(scope: !6676, file: !689, line: 343, column: 69)
!6687 = !DILocation(line: 343, column: 78, scope: !6685)
!6688 = !DILocation(line: 343, column: 90, scope: !6689)
!6689 = !DILexicalBlockFile(scope: !6676, file: !689, discriminator: 4)
!6690 = !DILocation(line: 343, column: 103, scope: !6691)
!6691 = !DILexicalBlockFile(scope: !6671, file: !689, discriminator: 5)
!6692 = !DILocation(line: 345, column: 21, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6667, file: !689, line: 345, column: 14)
!6694 = !DILocation(line: 345, column: 19, scope: !6693)
!6695 = !DILocation(line: 345, column: 26, scope: !6696)
!6696 = !DILexicalBlockFile(scope: !6697, file: !689, discriminator: 1)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !689, line: 345, column: 14)
!6698 = !DILocation(line: 345, column: 28, scope: !6696)
!6699 = !DILocation(line: 345, column: 14, scope: !6696)
!6700 = !DILocation(line: 346, column: 18, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !689, line: 345, column: 55)
!6702 = distinct !{!6702, !6700}
!6703 = !DILocation(line: 346, column: 23, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !6705, file: !689, discriminator: 1)
!6705 = distinct !DILexicalBlock(scope: !6701, file: !689, line: 346, column: 21)
!6706 = distinct !{!6706, !6707}
!6707 = !DILocation(line: 346, column: 23, scope: !6705)
!6708 = !DILocation(line: 346, column: 57, scope: !6709)
!6709 = !DILexicalBlockFile(scope: !6710, file: !689, discriminator: 2)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !689, line: 346, column: 26)
!6711 = !DILocation(line: 346, column: 62, scope: !6709)
!6712 = !DILocation(line: 346, column: 111, scope: !6709)
!6713 = !DILocation(line: 346, column: 116, scope: !6709)
!6714 = !DILocation(line: 346, column: 98, scope: !6709)
!6715 = !DILocation(line: 346, column: 43, scope: !6709)
!6716 = !DILocation(line: 346, column: 20, scope: !6709)
!6717 = !DILocation(line: 346, column: 29, scope: !6709)
!6718 = !DILocation(line: 346, column: 35, scope: !6709)
!6719 = !DILocation(line: 346, column: 32, scope: !6709)
!6720 = !DILocation(line: 346, column: 70, scope: !6709)
!6721 = !DILocation(line: 346, column: 74, scope: !6709)
!6722 = !DILocation(line: 346, column: 86, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6724, file: !689, discriminator: 3)
!6724 = distinct !DILexicalBlock(scope: !6710, file: !689, line: 346, column: 70)
!6725 = !DILocation(line: 346, column: 79, scope: !6723)
!6726 = !DILocation(line: 346, column: 91, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !6710, file: !689, discriminator: 4)
!6728 = !DILocation(line: 346, column: 104, scope: !6729)
!6729 = !DILexicalBlockFile(scope: !6705, file: !689, discriminator: 5)
!6730 = !DILocation(line: 347, column: 18, scope: !6701)
!6731 = distinct !{!6731, !6730}
!6732 = !DILocation(line: 347, column: 23, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6734, file: !689, discriminator: 1)
!6734 = distinct !DILexicalBlock(scope: !6701, file: !689, line: 347, column: 21)
!6735 = distinct !{!6735, !6736}
!6736 = !DILocation(line: 347, column: 23, scope: !6734)
!6737 = !DILocation(line: 347, column: 57, scope: !6738)
!6738 = !DILexicalBlockFile(scope: !6739, file: !689, discriminator: 2)
!6739 = distinct !DILexicalBlock(scope: !6734, file: !689, line: 347, column: 26)
!6740 = !DILocation(line: 347, column: 62, scope: !6738)
!6741 = !DILocation(line: 347, column: 134, scope: !6738)
!6742 = !DILocation(line: 347, column: 156, scope: !6738)
!6743 = !DILocation(line: 347, column: 154, scope: !6738)
!6744 = !DILocation(line: 347, column: 121, scope: !6738)
!6745 = !DILocation(line: 347, column: 66, scope: !6738)
!6746 = !DILocation(line: 347, column: 64, scope: !6738)
!6747 = !DILocation(line: 347, column: 20, scope: !6738)
!6748 = !DILocation(line: 347, column: 29, scope: !6738)
!6749 = !DILocation(line: 347, column: 35, scope: !6738)
!6750 = !DILocation(line: 347, column: 32, scope: !6738)
!6751 = !DILocation(line: 347, column: 93, scope: !6738)
!6752 = !DILocation(line: 347, column: 97, scope: !6738)
!6753 = !DILocation(line: 347, column: 109, scope: !6754)
!6754 = !DILexicalBlockFile(scope: !6755, file: !689, discriminator: 3)
!6755 = distinct !DILexicalBlock(scope: !6739, file: !689, line: 347, column: 93)
!6756 = !DILocation(line: 347, column: 102, scope: !6754)
!6757 = !DILocation(line: 347, column: 114, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !6739, file: !689, discriminator: 4)
!6759 = !DILocation(line: 347, column: 127, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !6734, file: !689, discriminator: 5)
!6761 = !DILocation(line: 349, column: 14, scope: !6701)
!6762 = !DILocation(line: 345, column: 51, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6697, file: !689, discriminator: 2)
!6764 = !DILocation(line: 345, column: 14, scope: !6763)
!6765 = distinct !{!6765, !6766}
!6766 = !DILocation(line: 345, column: 14, scope: !6667)
!6767 = !DILocation(line: 351, column: 14, scope: !6667)
!6768 = distinct !{!6768, !6767}
!6769 = !DILocation(line: 351, column: 61, scope: !6770)
!6770 = !DILexicalBlockFile(scope: !6771, file: !689, discriminator: 1)
!6771 = distinct !DILexicalBlock(scope: !6667, file: !689, line: 351, column: 17)
!6772 = !DILocation(line: 351, column: 66, scope: !6770)
!6773 = !DILocation(line: 351, column: 70, scope: !6770)
!6774 = !DILocation(line: 351, column: 26, scope: !6770)
!6775 = !DILocation(line: 351, column: 23, scope: !6770)
!6776 = !DILocation(line: 351, column: 85, scope: !6770)
!6777 = !DILocation(line: 351, column: 89, scope: !6770)
!6778 = !DILocation(line: 351, column: 101, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !6780, file: !689, discriminator: 2)
!6780 = distinct !DILexicalBlock(scope: !6771, file: !689, line: 351, column: 85)
!6781 = !DILocation(line: 351, column: 94, scope: !6779)
!6782 = !DILocation(line: 351, column: 106, scope: !6783)
!6783 = !DILexicalBlockFile(scope: !6771, file: !689, discriminator: 3)
!6784 = !DILocation(line: 352, column: 14, scope: !6667)
!6785 = distinct !{!6785, !6784}
!6786 = !DILocation(line: 352, column: 19, scope: !6787)
!6787 = !DILexicalBlockFile(scope: !6788, file: !689, discriminator: 1)
!6788 = distinct !DILexicalBlock(scope: !6667, file: !689, line: 352, column: 17)
!6789 = distinct !{!6789, !6790}
!6790 = !DILocation(line: 352, column: 19, scope: !6788)
!6791 = !DILocation(line: 352, column: 53, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6793, file: !689, discriminator: 2)
!6793 = distinct !DILexicalBlock(scope: !6788, file: !689, line: 352, column: 22)
!6794 = !DILocation(line: 352, column: 58, scope: !6792)
!6795 = !DILocation(line: 352, column: 16, scope: !6792)
!6796 = !DILocation(line: 352, column: 25, scope: !6792)
!6797 = !DILocation(line: 352, column: 31, scope: !6792)
!6798 = !DILocation(line: 352, column: 28, scope: !6792)
!6799 = !DILocation(line: 352, column: 73, scope: !6792)
!6800 = !DILocation(line: 352, column: 77, scope: !6792)
!6801 = !DILocation(line: 352, column: 89, scope: !6802)
!6802 = !DILexicalBlockFile(scope: !6803, file: !689, discriminator: 3)
!6803 = distinct !DILexicalBlock(scope: !6793, file: !689, line: 352, column: 73)
!6804 = !DILocation(line: 352, column: 82, scope: !6802)
!6805 = !DILocation(line: 352, column: 94, scope: !6806)
!6806 = !DILexicalBlockFile(scope: !6793, file: !689, discriminator: 4)
!6807 = !DILocation(line: 352, column: 107, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6788, file: !689, discriminator: 5)
!6809 = !DILocation(line: 353, column: 14, scope: !6667)
!6810 = distinct !{!6810, !6809}
!6811 = !DILocation(line: 353, column: 61, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6813, file: !689, discriminator: 1)
!6813 = distinct !DILexicalBlock(scope: !6667, file: !689, line: 353, column: 17)
!6814 = !DILocation(line: 353, column: 66, scope: !6812)
!6815 = !DILocation(line: 353, column: 70, scope: !6812)
!6816 = !DILocation(line: 353, column: 26, scope: !6812)
!6817 = !DILocation(line: 353, column: 23, scope: !6812)
!6818 = !DILocation(line: 353, column: 85, scope: !6812)
!6819 = !DILocation(line: 353, column: 89, scope: !6812)
!6820 = !DILocation(line: 353, column: 101, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6822, file: !689, discriminator: 2)
!6822 = distinct !DILexicalBlock(scope: !6813, file: !689, line: 353, column: 85)
!6823 = !DILocation(line: 353, column: 94, scope: !6821)
!6824 = !DILocation(line: 353, column: 106, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !6813, file: !689, discriminator: 3)
!6826 = !DILocation(line: 357, column: 9, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 357, column: 9)
!6828 = !DILocation(line: 357, column: 18, scope: !6827)
!6829 = !DILocation(line: 357, column: 39, scope: !6827)
!6830 = !DILocation(line: 357, column: 9, scope: !5970)
!6831 = !DILocation(line: 358, column: 9, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6827, file: !689, line: 357, column: 45)
!6833 = distinct !{!6833, !6831}
!6834 = !DILocation(line: 358, column: 14, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6836, file: !689, discriminator: 1)
!6836 = distinct !DILexicalBlock(scope: !6832, file: !689, line: 358, column: 12)
!6837 = distinct !{!6837, !6838}
!6838 = !DILocation(line: 358, column: 14, scope: !6836)
!6839 = !DILocation(line: 358, column: 48, scope: !6840)
!6840 = !DILexicalBlockFile(scope: !6841, file: !689, discriminator: 2)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !689, line: 358, column: 17)
!6842 = !DILocation(line: 358, column: 53, scope: !6840)
!6843 = !DILocation(line: 358, column: 11, scope: !6840)
!6844 = !DILocation(line: 358, column: 20, scope: !6840)
!6845 = !DILocation(line: 358, column: 26, scope: !6840)
!6846 = !DILocation(line: 358, column: 23, scope: !6840)
!6847 = !DILocation(line: 358, column: 66, scope: !6840)
!6848 = !DILocation(line: 358, column: 70, scope: !6840)
!6849 = !DILocation(line: 358, column: 82, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6851, file: !689, discriminator: 3)
!6851 = distinct !DILexicalBlock(scope: !6841, file: !689, line: 358, column: 66)
!6852 = !DILocation(line: 358, column: 75, scope: !6850)
!6853 = !DILocation(line: 358, column: 87, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !6841, file: !689, discriminator: 4)
!6855 = !DILocation(line: 358, column: 100, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6836, file: !689, discriminator: 5)
!6857 = !DILocation(line: 359, column: 9, scope: !6832)
!6858 = distinct !{!6858, !6857}
!6859 = !DILocation(line: 359, column: 14, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6861, file: !689, discriminator: 1)
!6861 = distinct !DILexicalBlock(scope: !6832, file: !689, line: 359, column: 12)
!6862 = distinct !{!6862, !6863}
!6863 = !DILocation(line: 359, column: 14, scope: !6861)
!6864 = !DILocation(line: 359, column: 48, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !6866, file: !689, discriminator: 2)
!6866 = distinct !DILexicalBlock(scope: !6861, file: !689, line: 359, column: 17)
!6867 = !DILocation(line: 359, column: 53, scope: !6865)
!6868 = !DILocation(line: 359, column: 11, scope: !6865)
!6869 = !DILocation(line: 359, column: 20, scope: !6865)
!6870 = !DILocation(line: 359, column: 26, scope: !6865)
!6871 = !DILocation(line: 359, column: 23, scope: !6865)
!6872 = !DILocation(line: 359, column: 73, scope: !6865)
!6873 = !DILocation(line: 359, column: 77, scope: !6865)
!6874 = !DILocation(line: 359, column: 89, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6876, file: !689, discriminator: 3)
!6876 = distinct !DILexicalBlock(scope: !6866, file: !689, line: 359, column: 73)
!6877 = !DILocation(line: 359, column: 82, scope: !6875)
!6878 = !DILocation(line: 359, column: 94, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !6866, file: !689, discriminator: 4)
!6880 = !DILocation(line: 359, column: 107, scope: !6881)
!6881 = !DILexicalBlockFile(scope: !6861, file: !689, discriminator: 5)
!6882 = !DILocation(line: 360, column: 5, scope: !6832)
!6883 = !DILocation(line: 361, column: 9, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6827, file: !689, line: 360, column: 12)
!6885 = distinct !{!6885, !6883}
!6886 = !DILocation(line: 361, column: 18, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !6888, file: !689, discriminator: 1)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !689, line: 361, column: 18)
!6889 = distinct !DILexicalBlock(scope: !6884, file: !689, line: 361, column: 12)
!6890 = !DILocation(line: 361, column: 27, scope: !6887)
!6891 = !DILocation(line: 361, column: 49, scope: !6887)
!6892 = !DILocation(line: 361, column: 66, scope: !6893)
!6893 = !DILexicalBlockFile(scope: !6894, file: !689, discriminator: 2)
!6894 = distinct !DILexicalBlock(scope: !6888, file: !689, line: 361, column: 57)
!6895 = !DILocation(line: 361, column: 71, scope: !6893)
!6896 = !DILocation(line: 361, column: 49, scope: !6893)
!6897 = !DILocation(line: 361, column: 58, scope: !6893)
!6898 = !DILocation(line: 361, column: 40, scope: !6893)
!6899 = !DILocation(line: 361, column: 59, scope: !6893)
!6900 = !DILocation(line: 361, column: 96, scope: !6893)
!6901 = !DILocation(line: 361, column: 98, scope: !6902)
!6902 = !DILexicalBlockFile(scope: !6889, file: !689, discriminator: 3)
!6903 = !DILocation(line: 362, column: 9, scope: !6884)
!6904 = distinct !{!6904, !6903}
!6905 = !DILocation(line: 362, column: 18, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !6907, file: !689, discriminator: 1)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !689, line: 362, column: 18)
!6908 = distinct !DILexicalBlock(scope: !6884, file: !689, line: 362, column: 12)
!6909 = !DILocation(line: 362, column: 27, scope: !6906)
!6910 = !DILocation(line: 362, column: 56, scope: !6906)
!6911 = !DILocation(line: 362, column: 73, scope: !6912)
!6912 = !DILexicalBlockFile(scope: !6913, file: !689, discriminator: 2)
!6913 = distinct !DILexicalBlock(scope: !6907, file: !689, line: 362, column: 64)
!6914 = !DILocation(line: 362, column: 78, scope: !6912)
!6915 = !DILocation(line: 362, column: 56, scope: !6912)
!6916 = !DILocation(line: 362, column: 65, scope: !6912)
!6917 = !DILocation(line: 362, column: 47, scope: !6912)
!6918 = !DILocation(line: 362, column: 66, scope: !6912)
!6919 = !DILocation(line: 362, column: 110, scope: !6912)
!6920 = !DILocation(line: 362, column: 112, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6908, file: !689, discriminator: 3)
!6922 = !DILocation(line: 365, column: 5, scope: !5970)
!6923 = distinct !{!6923, !6922}
!6924 = !DILocation(line: 365, column: 10, scope: !6925)
!6925 = !DILexicalBlockFile(scope: !6926, file: !689, discriminator: 1)
!6926 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 365, column: 8)
!6927 = distinct !{!6927, !6928}
!6928 = !DILocation(line: 365, column: 10, scope: !6926)
!6929 = !DILocation(line: 365, column: 44, scope: !6930)
!6930 = !DILexicalBlockFile(scope: !6931, file: !689, discriminator: 2)
!6931 = distinct !DILexicalBlock(scope: !6926, file: !689, line: 365, column: 13)
!6932 = !DILocation(line: 365, column: 49, scope: !6930)
!6933 = !DILocation(line: 365, column: 7, scope: !6930)
!6934 = !DILocation(line: 365, column: 16, scope: !6930)
!6935 = !DILocation(line: 365, column: 22, scope: !6930)
!6936 = !DILocation(line: 365, column: 19, scope: !6930)
!6937 = !DILocation(line: 365, column: 58, scope: !6930)
!6938 = !DILocation(line: 365, column: 62, scope: !6930)
!6939 = !DILocation(line: 365, column: 74, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6941, file: !689, discriminator: 3)
!6941 = distinct !DILexicalBlock(scope: !6931, file: !689, line: 365, column: 58)
!6942 = !DILocation(line: 365, column: 67, scope: !6940)
!6943 = !DILocation(line: 365, column: 79, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6931, file: !689, discriminator: 4)
!6945 = !DILocation(line: 365, column: 92, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6926, file: !689, discriminator: 5)
!6947 = !DILocation(line: 367, column: 5, scope: !5970)
!6948 = distinct !{!6948, !6947}
!6949 = !DILocation(line: 367, column: 50, scope: !6950)
!6950 = !DILexicalBlockFile(scope: !6951, file: !689, discriminator: 1)
!6951 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 367, column: 8)
!6952 = !DILocation(line: 367, column: 55, scope: !6950)
!6953 = !DILocation(line: 367, column: 59, scope: !6950)
!6954 = !DILocation(line: 367, column: 17, scope: !6950)
!6955 = !DILocation(line: 367, column: 14, scope: !6950)
!6956 = !DILocation(line: 367, column: 74, scope: !6950)
!6957 = !DILocation(line: 367, column: 78, scope: !6950)
!6958 = !DILocation(line: 367, column: 90, scope: !6959)
!6959 = !DILexicalBlockFile(scope: !6960, file: !689, discriminator: 2)
!6960 = distinct !DILexicalBlock(scope: !6951, file: !689, line: 367, column: 74)
!6961 = !DILocation(line: 367, column: 83, scope: !6959)
!6962 = !DILocation(line: 367, column: 95, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !6951, file: !689, discriminator: 3)
!6964 = !DILocation(line: 368, column: 5, scope: !5970)
!6965 = distinct !{!6965, !6964}
!6966 = !DILocation(line: 368, column: 51, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !6968, file: !689, discriminator: 1)
!6968 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 368, column: 8)
!6969 = !DILocation(line: 368, column: 56, scope: !6967)
!6970 = !DILocation(line: 368, column: 60, scope: !6967)
!6971 = !DILocation(line: 368, column: 17, scope: !6967)
!6972 = !DILocation(line: 368, column: 14, scope: !6967)
!6973 = !DILocation(line: 368, column: 75, scope: !6967)
!6974 = !DILocation(line: 368, column: 79, scope: !6967)
!6975 = !DILocation(line: 368, column: 91, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6977, file: !689, discriminator: 2)
!6977 = distinct !DILexicalBlock(scope: !6968, file: !689, line: 368, column: 75)
!6978 = !DILocation(line: 368, column: 84, scope: !6976)
!6979 = !DILocation(line: 368, column: 96, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !6968, file: !689, discriminator: 3)
!6981 = !DILocation(line: 369, column: 5, scope: !5970)
!6982 = distinct !{!6982, !6981}
!6983 = !DILocation(line: 369, column: 51, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !6985, file: !689, discriminator: 1)
!6985 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 369, column: 8)
!6986 = !DILocation(line: 369, column: 56, scope: !6984)
!6987 = !DILocation(line: 369, column: 60, scope: !6984)
!6988 = !DILocation(line: 369, column: 17, scope: !6984)
!6989 = !DILocation(line: 369, column: 14, scope: !6984)
!6990 = !DILocation(line: 369, column: 75, scope: !6984)
!6991 = !DILocation(line: 369, column: 79, scope: !6984)
!6992 = !DILocation(line: 369, column: 91, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !6994, file: !689, discriminator: 2)
!6994 = distinct !DILexicalBlock(scope: !6985, file: !689, line: 369, column: 75)
!6995 = !DILocation(line: 369, column: 84, scope: !6993)
!6996 = !DILocation(line: 369, column: 96, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6985, file: !689, discriminator: 3)
!6998 = !DILocation(line: 370, column: 5, scope: !5970)
!6999 = distinct !{!6999, !6998}
!7000 = !DILocation(line: 370, column: 41, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !7002, file: !689, discriminator: 1)
!7002 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 370, column: 8)
!7003 = !DILocation(line: 370, column: 46, scope: !7001)
!7004 = !DILocation(line: 370, column: 50, scope: !7001)
!7005 = !DILocation(line: 370, column: 17, scope: !7001)
!7006 = !DILocation(line: 370, column: 14, scope: !7001)
!7007 = !DILocation(line: 370, column: 65, scope: !7001)
!7008 = !DILocation(line: 370, column: 69, scope: !7001)
!7009 = !DILocation(line: 370, column: 81, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !7011, file: !689, discriminator: 2)
!7011 = distinct !DILexicalBlock(scope: !7002, file: !689, line: 370, column: 65)
!7012 = !DILocation(line: 370, column: 74, scope: !7010)
!7013 = !DILocation(line: 370, column: 86, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !7002, file: !689, discriminator: 3)
!7015 = !DILocation(line: 372, column: 5, scope: !5970)
!7016 = distinct !{!7016, !7015}
!7017 = !DILocation(line: 372, column: 10, scope: !7018)
!7018 = !DILexicalBlockFile(scope: !7019, file: !689, discriminator: 1)
!7019 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 372, column: 8)
!7020 = distinct !{!7020, !7021}
!7021 = !DILocation(line: 372, column: 10, scope: !7019)
!7022 = !DILocation(line: 372, column: 44, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !7024, file: !689, discriminator: 2)
!7024 = distinct !DILexicalBlock(scope: !7019, file: !689, line: 372, column: 13)
!7025 = !DILocation(line: 372, column: 49, scope: !7023)
!7026 = !DILocation(line: 372, column: 7, scope: !7023)
!7027 = !DILocation(line: 372, column: 16, scope: !7023)
!7028 = !DILocation(line: 372, column: 22, scope: !7023)
!7029 = !DILocation(line: 372, column: 19, scope: !7023)
!7030 = !DILocation(line: 372, column: 62, scope: !7023)
!7031 = !DILocation(line: 372, column: 66, scope: !7023)
!7032 = !DILocation(line: 372, column: 78, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7034, file: !689, discriminator: 3)
!7034 = distinct !DILexicalBlock(scope: !7024, file: !689, line: 372, column: 62)
!7035 = !DILocation(line: 372, column: 71, scope: !7033)
!7036 = !DILocation(line: 372, column: 83, scope: !7037)
!7037 = !DILexicalBlockFile(scope: !7024, file: !689, discriminator: 4)
!7038 = !DILocation(line: 372, column: 96, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !7019, file: !689, discriminator: 5)
!7040 = !DILocation(line: 374, column: 12, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !5970, file: !689, line: 374, column: 5)
!7042 = !DILocation(line: 374, column: 10, scope: !7041)
!7043 = !DILocation(line: 374, column: 17, scope: !7044)
!7044 = !DILexicalBlockFile(scope: !7045, file: !689, discriminator: 1)
!7045 = distinct !DILexicalBlock(scope: !7041, file: !689, line: 374, column: 5)
!7046 = !DILocation(line: 374, column: 19, scope: !7044)
!7047 = !DILocation(line: 374, column: 5, scope: !7044)
!7048 = !DILocation(line: 375, column: 13, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !689, line: 375, column: 13)
!7050 = distinct !DILexicalBlock(scope: !7045, file: !689, line: 374, column: 46)
!7051 = !DILocation(line: 375, column: 22, scope: !7049)
!7052 = !DILocation(line: 375, column: 50, scope: !7049)
!7053 = !DILocation(line: 375, column: 47, scope: !7049)
!7054 = !DILocation(line: 375, column: 42, scope: !7049)
!7055 = !DILocation(line: 375, column: 13, scope: !7050)
!7056 = !DILocation(line: 376, column: 22, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7049, file: !689, line: 375, column: 54)
!7058 = !DILocation(line: 376, column: 13, scope: !7057)
!7059 = !DILocation(line: 376, column: 18, scope: !7057)
!7060 = !DILocation(line: 376, column: 52, scope: !7057)
!7061 = !DILocation(line: 377, column: 32, scope: !7057)
!7062 = !DILocation(line: 377, column: 37, scope: !7057)
!7063 = !DILocation(line: 378, column: 33, scope: !7057)
!7064 = !DILocation(line: 378, column: 38, scope: !7057)
!7065 = !DILocation(line: 379, column: 34, scope: !7057)
!7066 = !DILocation(line: 379, column: 39, scope: !7057)
!7067 = !DILocation(line: 380, column: 34, scope: !7057)
!7068 = !DILocation(line: 380, column: 39, scope: !7057)
!7069 = !DILocation(line: 381, column: 30, scope: !7057)
!7070 = !DILocation(line: 381, column: 35, scope: !7057)
!7071 = !DILocation(line: 376, column: 27, scope: !7057)
!7072 = !DILocation(line: 383, column: 9, scope: !7057)
!7073 = !DILocation(line: 384, column: 5, scope: !7050)
!7074 = !DILocation(line: 374, column: 42, scope: !7075)
!7075 = !DILexicalBlockFile(scope: !7045, file: !689, discriminator: 2)
!7076 = !DILocation(line: 374, column: 5, scope: !7075)
!7077 = distinct !{!7077, !7078}
!7078 = !DILocation(line: 374, column: 5, scope: !5970)
!7079 = !DILocation(line: 386, column: 12, scope: !5970)
!7080 = !DILocation(line: 386, column: 17, scope: !5970)
!7081 = !DILocation(line: 388, column: 12, scope: !5970)
!7082 = !DILocation(line: 388, column: 17, scope: !5970)
!7083 = !DILocation(line: 388, column: 30, scope: !5970)
!7084 = !DILocation(line: 388, column: 35, scope: !5970)
!7085 = !DILocation(line: 389, column: 12, scope: !5970)
!7086 = !DILocation(line: 389, column: 17, scope: !5970)
!7087 = !DILocation(line: 389, column: 32, scope: !5970)
!7088 = !DILocation(line: 389, column: 37, scope: !5970)
!7089 = !DILocation(line: 390, column: 12, scope: !5970)
!7090 = !DILocation(line: 390, column: 17, scope: !5970)
!7091 = !DILocation(line: 390, column: 33, scope: !5970)
!7092 = !DILocation(line: 390, column: 42, scope: !5970)
!7093 = !DILocation(line: 390, column: 30, scope: !5970)
!7094 = !DILocation(line: 391, column: 17, scope: !5970)
!7095 = !DILocation(line: 391, column: 26, scope: !5970)
!7096 = !DILocation(line: 391, column: 14, scope: !5970)
!7097 = !DILocation(line: 386, column: 5, scope: !5970)
!7098 = !DILocation(line: 393, column: 5, scope: !5970)
!7099 = !DILocation(line: 394, column: 1, scope: !5970)
!7100 = distinct !DISubprogram(name: "cbs_vp9_write_trailing_bits", scope: !689, file: !689, line: 396, type: !7101, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!503, !637, !713}
!7103 = !DILocalVariable(name: "ctx", arg: 1, scope: !7100, file: !689, line: 396, type: !637)
!7104 = !DILocation(line: 396, column: 63, scope: !7100)
!7105 = !DILocalVariable(name: "rw", arg: 2, scope: !7100, file: !689, line: 396, type: !713)
!7106 = !DILocation(line: 396, column: 83, scope: !7100)
!7107 = !DILocalVariable(name: "err", scope: !7100, file: !689, line: 398, type: !503)
!7108 = !DILocation(line: 398, column: 9, scope: !7100)
!7109 = !DILocalVariable(name: "zero", scope: !7100, file: !689, line: 399, type: !503)
!7110 = !DILocation(line: 399, column: 33, scope: !7100)
!7111 = !DILocation(line: 400, column: 5, scope: !7100)
!7112 = !DILocation(line: 400, column: 28, scope: !7113)
!7113 = !DILexicalBlockFile(scope: !7100, file: !689, discriminator: 1)
!7114 = !DILocation(line: 400, column: 13, scope: !7113)
!7115 = !DILocation(line: 400, column: 32, scope: !7113)
!7116 = !DILocation(line: 400, column: 37, scope: !7113)
!7117 = !DILocation(line: 400, column: 5, scope: !7113)
!7118 = !DILocation(line: 401, column: 9, scope: !7100)
!7119 = distinct !{!7119, !7118}
!7120 = !DILocation(line: 401, column: 14, scope: !7121)
!7121 = !DILexicalBlockFile(scope: !7122, file: !689, discriminator: 1)
!7122 = distinct !DILexicalBlock(scope: !7100, file: !689, line: 401, column: 12)
!7123 = distinct !{!7123, !7124}
!7124 = !DILocation(line: 401, column: 14, scope: !7122)
!7125 = !DILocation(line: 401, column: 48, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7127, file: !689, discriminator: 2)
!7127 = distinct !DILexicalBlock(scope: !7122, file: !689, line: 401, column: 17)
!7128 = !DILocation(line: 401, column: 53, scope: !7126)
!7129 = !DILocation(line: 401, column: 11, scope: !7126)
!7130 = !DILocation(line: 401, column: 26, scope: !7126)
!7131 = !DILocation(line: 401, column: 23, scope: !7126)
!7132 = !DILocation(line: 401, column: 40, scope: !7126)
!7133 = !DILocation(line: 401, column: 44, scope: !7126)
!7134 = !DILocation(line: 401, column: 56, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !7136, file: !689, discriminator: 3)
!7136 = distinct !DILexicalBlock(scope: !7127, file: !689, line: 401, column: 40)
!7137 = !DILocation(line: 401, column: 49, scope: !7135)
!7138 = !DILocation(line: 401, column: 61, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7127, file: !689, discriminator: 4)
!7140 = !DILocation(line: 401, column: 74, scope: !7141)
!7141 = !DILexicalBlockFile(scope: !7122, file: !689, discriminator: 5)
!7142 = !DILocation(line: 400, column: 5, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !7100, file: !689, discriminator: 2)
!7144 = distinct !{!7144, !7111}
!7145 = !DILocation(line: 403, column: 5, scope: !7100)
!7146 = !DILocation(line: 404, column: 1, scope: !7100)
!7147 = distinct !DISubprogram(name: "cbs_vp9_write_frame_sync_code", scope: !689, file: !689, line: 19, type: !711, isLocal: true, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7148 = !DILocalVariable(name: "ctx", arg: 1, scope: !7147, file: !689, line: 19, type: !637)
!7149 = !DILocation(line: 19, column: 65, scope: !7147)
!7150 = !DILocalVariable(name: "rw", arg: 2, scope: !7147, file: !689, line: 19, type: !713)
!7151 = !DILocation(line: 19, column: 85, scope: !7147)
!7152 = !DILocalVariable(name: "current", arg: 3, scope: !7147, file: !689, line: 20, type: !704)
!7153 = !DILocation(line: 20, column: 53, scope: !7147)
!7154 = !DILocalVariable(name: "frame_sync_byte_0", scope: !7147, file: !689, line: 22, type: !514)
!7155 = !DILocation(line: 22, column: 13, scope: !7147)
!7156 = !DILocalVariable(name: "frame_sync_byte_1", scope: !7147, file: !689, line: 23, type: !514)
!7157 = !DILocation(line: 23, column: 13, scope: !7147)
!7158 = !DILocalVariable(name: "frame_sync_byte_2", scope: !7147, file: !689, line: 24, type: !514)
!7159 = !DILocation(line: 24, column: 13, scope: !7147)
!7160 = !DILocalVariable(name: "err", scope: !7147, file: !689, line: 25, type: !503)
!7161 = !DILocation(line: 25, column: 9, scope: !7147)
!7162 = !DILocation(line: 27, column: 5, scope: !7147)
!7163 = distinct !{!7163, !7162}
!7164 = !DILocation(line: 27, column: 10, scope: !7165)
!7165 = !DILexicalBlockFile(scope: !7166, file: !689, discriminator: 1)
!7166 = distinct !DILexicalBlock(scope: !7147, file: !689, line: 27, column: 8)
!7167 = distinct !{!7167, !7168}
!7168 = !DILocation(line: 27, column: 10, scope: !7166)
!7169 = !DILocation(line: 27, column: 44, scope: !7170)
!7170 = !DILexicalBlockFile(scope: !7171, file: !689, discriminator: 2)
!7171 = distinct !DILexicalBlock(scope: !7166, file: !689, line: 27, column: 13)
!7172 = !DILocation(line: 27, column: 49, scope: !7170)
!7173 = !DILocation(line: 27, column: 7, scope: !7170)
!7174 = !DILocation(line: 27, column: 22, scope: !7170)
!7175 = !DILocation(line: 27, column: 19, scope: !7170)
!7176 = !DILocation(line: 27, column: 53, scope: !7170)
!7177 = !DILocation(line: 27, column: 65, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !7179, file: !689, discriminator: 3)
!7179 = distinct !DILexicalBlock(scope: !7171, file: !689, line: 27, column: 49)
!7180 = !DILocation(line: 27, column: 58, scope: !7178)
!7181 = !DILocation(line: 27, column: 70, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !7171, file: !689, discriminator: 4)
!7183 = !DILocation(line: 27, column: 83, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7166, file: !689, discriminator: 5)
!7185 = !DILocation(line: 28, column: 5, scope: !7147)
!7186 = distinct !{!7186, !7185}
!7187 = !DILocation(line: 28, column: 10, scope: !7188)
!7188 = !DILexicalBlockFile(scope: !7189, file: !689, discriminator: 1)
!7189 = distinct !DILexicalBlock(scope: !7147, file: !689, line: 28, column: 8)
!7190 = distinct !{!7190, !7191}
!7191 = !DILocation(line: 28, column: 10, scope: !7189)
!7192 = !DILocation(line: 28, column: 44, scope: !7193)
!7193 = !DILexicalBlockFile(scope: !7194, file: !689, discriminator: 2)
!7194 = distinct !DILexicalBlock(scope: !7189, file: !689, line: 28, column: 13)
!7195 = !DILocation(line: 28, column: 49, scope: !7193)
!7196 = !DILocation(line: 28, column: 7, scope: !7193)
!7197 = !DILocation(line: 28, column: 22, scope: !7193)
!7198 = !DILocation(line: 28, column: 19, scope: !7193)
!7199 = !DILocation(line: 28, column: 53, scope: !7193)
!7200 = !DILocation(line: 28, column: 65, scope: !7201)
!7201 = !DILexicalBlockFile(scope: !7202, file: !689, discriminator: 3)
!7202 = distinct !DILexicalBlock(scope: !7194, file: !689, line: 28, column: 49)
!7203 = !DILocation(line: 28, column: 58, scope: !7201)
!7204 = !DILocation(line: 28, column: 70, scope: !7205)
!7205 = !DILexicalBlockFile(scope: !7194, file: !689, discriminator: 4)
!7206 = !DILocation(line: 28, column: 83, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7189, file: !689, discriminator: 5)
!7208 = !DILocation(line: 29, column: 5, scope: !7147)
!7209 = distinct !{!7209, !7208}
!7210 = !DILocation(line: 29, column: 10, scope: !7211)
!7211 = !DILexicalBlockFile(scope: !7212, file: !689, discriminator: 1)
!7212 = distinct !DILexicalBlock(scope: !7147, file: !689, line: 29, column: 8)
!7213 = distinct !{!7213, !7214}
!7214 = !DILocation(line: 29, column: 10, scope: !7212)
!7215 = !DILocation(line: 29, column: 44, scope: !7216)
!7216 = !DILexicalBlockFile(scope: !7217, file: !689, discriminator: 2)
!7217 = distinct !DILexicalBlock(scope: !7212, file: !689, line: 29, column: 13)
!7218 = !DILocation(line: 29, column: 49, scope: !7216)
!7219 = !DILocation(line: 29, column: 7, scope: !7216)
!7220 = !DILocation(line: 29, column: 22, scope: !7216)
!7221 = !DILocation(line: 29, column: 19, scope: !7216)
!7222 = !DILocation(line: 29, column: 53, scope: !7216)
!7223 = !DILocation(line: 29, column: 65, scope: !7224)
!7224 = !DILexicalBlockFile(scope: !7225, file: !689, discriminator: 3)
!7225 = distinct !DILexicalBlock(scope: !7217, file: !689, line: 29, column: 49)
!7226 = !DILocation(line: 29, column: 58, scope: !7224)
!7227 = !DILocation(line: 29, column: 70, scope: !7228)
!7228 = !DILexicalBlockFile(scope: !7217, file: !689, discriminator: 4)
!7229 = !DILocation(line: 29, column: 83, scope: !7230)
!7230 = !DILexicalBlockFile(scope: !7212, file: !689, discriminator: 5)
!7231 = !DILocation(line: 31, column: 9, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7147, file: !689, line: 31, column: 9)
!7233 = !DILocation(line: 31, column: 27, scope: !7232)
!7234 = !DILocation(line: 31, column: 47, scope: !7232)
!7235 = !DILocation(line: 32, column: 9, scope: !7232)
!7236 = !DILocation(line: 32, column: 27, scope: !7232)
!7237 = !DILocation(line: 32, column: 47, scope: !7232)
!7238 = !DILocation(line: 33, column: 9, scope: !7232)
!7239 = !DILocation(line: 33, column: 27, scope: !7232)
!7240 = !DILocation(line: 31, column: 9, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !7147, file: !689, discriminator: 1)
!7242 = !DILocation(line: 34, column: 16, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7232, file: !689, line: 33, column: 48)
!7244 = !DILocation(line: 34, column: 21, scope: !7243)
!7245 = !DILocation(line: 35, column: 37, scope: !7243)
!7246 = !DILocation(line: 36, column: 16, scope: !7243)
!7247 = !DILocation(line: 36, column: 35, scope: !7243)
!7248 = !DILocation(line: 34, column: 9, scope: !7243)
!7249 = !DILocation(line: 37, column: 9, scope: !7243)
!7250 = !DILocation(line: 40, column: 5, scope: !7147)
!7251 = !DILocation(line: 41, column: 1, scope: !7147)
!7252 = distinct !DISubprogram(name: "cbs_vp9_write_color_config", scope: !689, file: !689, line: 43, type: !7253, isLocal: true, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!503, !637, !713, !704, !503}
!7255 = !DILocalVariable(name: "ctx", arg: 1, scope: !7252, file: !689, line: 43, type: !637)
!7256 = !DILocation(line: 43, column: 62, scope: !7252)
!7257 = !DILocalVariable(name: "rw", arg: 2, scope: !7252, file: !689, line: 43, type: !713)
!7258 = !DILocation(line: 43, column: 82, scope: !7252)
!7259 = !DILocalVariable(name: "current", arg: 3, scope: !7252, file: !689, line: 44, type: !704)
!7260 = !DILocation(line: 44, column: 50, scope: !7252)
!7261 = !DILocalVariable(name: "profile", arg: 4, scope: !7252, file: !689, line: 44, type: !503)
!7262 = !DILocation(line: 44, column: 63, scope: !7252)
!7263 = !DILocalVariable(name: "vp9", scope: !7252, file: !689, line: 46, type: !1040)
!7264 = !DILocation(line: 46, column: 31, scope: !7252)
!7265 = !DILocation(line: 46, column: 37, scope: !7252)
!7266 = !DILocation(line: 46, column: 42, scope: !7252)
!7267 = !DILocalVariable(name: "err", scope: !7252, file: !689, line: 47, type: !503)
!7268 = !DILocation(line: 47, column: 9, scope: !7252)
!7269 = !DILocation(line: 49, column: 9, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7252, file: !689, line: 49, column: 9)
!7271 = !DILocation(line: 49, column: 17, scope: !7270)
!7272 = !DILocation(line: 49, column: 9, scope: !7252)
!7273 = !DILocation(line: 50, column: 9, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7270, file: !689, line: 49, column: 23)
!7275 = distinct !{!7275, !7273}
!7276 = !DILocation(line: 50, column: 14, scope: !7277)
!7277 = !DILexicalBlockFile(scope: !7278, file: !689, discriminator: 1)
!7278 = distinct !DILexicalBlock(scope: !7274, file: !689, line: 50, column: 12)
!7279 = distinct !{!7279, !7280}
!7280 = !DILocation(line: 50, column: 14, scope: !7278)
!7281 = !DILocation(line: 50, column: 48, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !7283, file: !689, discriminator: 2)
!7283 = distinct !DILexicalBlock(scope: !7278, file: !689, line: 50, column: 17)
!7284 = !DILocation(line: 50, column: 53, scope: !7282)
!7285 = !DILocation(line: 50, column: 11, scope: !7282)
!7286 = !DILocation(line: 50, column: 20, scope: !7282)
!7287 = !DILocation(line: 50, column: 26, scope: !7282)
!7288 = !DILocation(line: 50, column: 23, scope: !7282)
!7289 = !DILocation(line: 50, column: 62, scope: !7282)
!7290 = !DILocation(line: 50, column: 66, scope: !7282)
!7291 = !DILocation(line: 50, column: 78, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7293, file: !689, discriminator: 3)
!7293 = distinct !DILexicalBlock(scope: !7283, file: !689, line: 50, column: 62)
!7294 = !DILocation(line: 50, column: 71, scope: !7292)
!7295 = !DILocation(line: 50, column: 83, scope: !7296)
!7296 = !DILexicalBlockFile(scope: !7283, file: !689, discriminator: 4)
!7297 = !DILocation(line: 50, column: 96, scope: !7298)
!7298 = !DILexicalBlockFile(scope: !7278, file: !689, discriminator: 5)
!7299 = !DILocation(line: 51, column: 26, scope: !7274)
!7300 = !DILocation(line: 51, column: 35, scope: !7274)
!7301 = !DILocation(line: 51, column: 9, scope: !7274)
!7302 = !DILocation(line: 51, column: 14, scope: !7274)
!7303 = !DILocation(line: 51, column: 24, scope: !7274)
!7304 = !DILocation(line: 52, column: 5, scope: !7274)
!7305 = !DILocation(line: 53, column: 9, scope: !7270)
!7306 = !DILocation(line: 53, column: 14, scope: !7270)
!7307 = !DILocation(line: 53, column: 24, scope: !7270)
!7308 = !DILocation(line: 55, column: 5, scope: !7252)
!7309 = distinct !{!7309, !7308}
!7310 = !DILocation(line: 55, column: 10, scope: !7311)
!7311 = !DILexicalBlockFile(scope: !7312, file: !689, discriminator: 1)
!7312 = distinct !DILexicalBlock(scope: !7252, file: !689, line: 55, column: 8)
!7313 = distinct !{!7313, !7314}
!7314 = !DILocation(line: 55, column: 10, scope: !7312)
!7315 = !DILocation(line: 55, column: 44, scope: !7316)
!7316 = !DILexicalBlockFile(scope: !7317, file: !689, discriminator: 2)
!7317 = distinct !DILexicalBlock(scope: !7312, file: !689, line: 55, column: 13)
!7318 = !DILocation(line: 55, column: 49, scope: !7316)
!7319 = !DILocation(line: 55, column: 7, scope: !7316)
!7320 = !DILocation(line: 55, column: 16, scope: !7316)
!7321 = !DILocation(line: 55, column: 22, scope: !7316)
!7322 = !DILocation(line: 55, column: 19, scope: !7316)
!7323 = !DILocation(line: 55, column: 52, scope: !7316)
!7324 = !DILocation(line: 55, column: 56, scope: !7316)
!7325 = !DILocation(line: 55, column: 68, scope: !7326)
!7326 = !DILexicalBlockFile(scope: !7327, file: !689, discriminator: 3)
!7327 = distinct !DILexicalBlock(scope: !7317, file: !689, line: 55, column: 52)
!7328 = !DILocation(line: 55, column: 61, scope: !7326)
!7329 = !DILocation(line: 55, column: 73, scope: !7330)
!7330 = !DILexicalBlockFile(scope: !7317, file: !689, discriminator: 4)
!7331 = !DILocation(line: 55, column: 86, scope: !7332)
!7332 = !DILexicalBlockFile(scope: !7312, file: !689, discriminator: 5)
!7333 = !DILocation(line: 57, column: 9, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7252, file: !689, line: 57, column: 9)
!7335 = !DILocation(line: 57, column: 18, scope: !7334)
!7336 = !DILocation(line: 57, column: 30, scope: !7334)
!7337 = !DILocation(line: 57, column: 9, scope: !7252)
!7338 = !DILocation(line: 58, column: 9, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7334, file: !689, line: 57, column: 45)
!7340 = distinct !{!7340, !7338}
!7341 = !DILocation(line: 58, column: 14, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !7343, file: !689, discriminator: 1)
!7343 = distinct !DILexicalBlock(scope: !7339, file: !689, line: 58, column: 12)
!7344 = distinct !{!7344, !7345}
!7345 = !DILocation(line: 58, column: 14, scope: !7343)
!7346 = !DILocation(line: 58, column: 48, scope: !7347)
!7347 = !DILexicalBlockFile(scope: !7348, file: !689, discriminator: 2)
!7348 = distinct !DILexicalBlock(scope: !7343, file: !689, line: 58, column: 17)
!7349 = !DILocation(line: 58, column: 53, scope: !7347)
!7350 = !DILocation(line: 58, column: 11, scope: !7347)
!7351 = !DILocation(line: 58, column: 20, scope: !7347)
!7352 = !DILocation(line: 58, column: 26, scope: !7347)
!7353 = !DILocation(line: 58, column: 23, scope: !7347)
!7354 = !DILocation(line: 58, column: 56, scope: !7347)
!7355 = !DILocation(line: 58, column: 60, scope: !7347)
!7356 = !DILocation(line: 58, column: 72, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7358, file: !689, discriminator: 3)
!7358 = distinct !DILexicalBlock(scope: !7348, file: !689, line: 58, column: 56)
!7359 = !DILocation(line: 58, column: 65, scope: !7357)
!7360 = !DILocation(line: 58, column: 77, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7348, file: !689, discriminator: 4)
!7362 = !DILocation(line: 58, column: 90, scope: !7363)
!7363 = !DILexicalBlockFile(scope: !7343, file: !689, discriminator: 5)
!7364 = !DILocation(line: 59, column: 13, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7339, file: !689, line: 59, column: 13)
!7366 = !DILocation(line: 59, column: 21, scope: !7365)
!7367 = !DILocation(line: 59, column: 26, scope: !7365)
!7368 = !DILocation(line: 59, column: 29, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7365, file: !689, discriminator: 1)
!7370 = !DILocation(line: 59, column: 37, scope: !7369)
!7371 = !DILocation(line: 59, column: 13, scope: !7369)
!7372 = !DILocation(line: 60, column: 13, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7365, file: !689, line: 59, column: 43)
!7374 = distinct !{!7374, !7372}
!7375 = !DILocation(line: 60, column: 18, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !7377, file: !689, discriminator: 1)
!7377 = distinct !DILexicalBlock(scope: !7373, file: !689, line: 60, column: 16)
!7378 = distinct !{!7378, !7379}
!7379 = !DILocation(line: 60, column: 18, scope: !7377)
!7380 = !DILocation(line: 60, column: 52, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !7382, file: !689, discriminator: 2)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !689, line: 60, column: 21)
!7383 = !DILocation(line: 60, column: 57, scope: !7381)
!7384 = !DILocation(line: 60, column: 15, scope: !7381)
!7385 = !DILocation(line: 60, column: 24, scope: !7381)
!7386 = !DILocation(line: 60, column: 30, scope: !7381)
!7387 = !DILocation(line: 60, column: 27, scope: !7381)
!7388 = !DILocation(line: 60, column: 62, scope: !7381)
!7389 = !DILocation(line: 60, column: 66, scope: !7381)
!7390 = !DILocation(line: 60, column: 78, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !7392, file: !689, discriminator: 3)
!7392 = distinct !DILexicalBlock(scope: !7382, file: !689, line: 60, column: 62)
!7393 = !DILocation(line: 60, column: 71, scope: !7391)
!7394 = !DILocation(line: 60, column: 83, scope: !7395)
!7395 = !DILexicalBlockFile(scope: !7382, file: !689, discriminator: 4)
!7396 = !DILocation(line: 60, column: 96, scope: !7397)
!7397 = !DILexicalBlockFile(scope: !7377, file: !689, discriminator: 5)
!7398 = !DILocation(line: 61, column: 13, scope: !7373)
!7399 = distinct !{!7399, !7398}
!7400 = !DILocation(line: 61, column: 18, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !7402, file: !689, discriminator: 1)
!7402 = distinct !DILexicalBlock(scope: !7373, file: !689, line: 61, column: 16)
!7403 = distinct !{!7403, !7404}
!7404 = !DILocation(line: 61, column: 18, scope: !7402)
!7405 = !DILocation(line: 61, column: 52, scope: !7406)
!7406 = !DILexicalBlockFile(scope: !7407, file: !689, discriminator: 2)
!7407 = distinct !DILexicalBlock(scope: !7402, file: !689, line: 61, column: 21)
!7408 = !DILocation(line: 61, column: 57, scope: !7406)
!7409 = !DILocation(line: 61, column: 15, scope: !7406)
!7410 = !DILocation(line: 61, column: 24, scope: !7406)
!7411 = !DILocation(line: 61, column: 30, scope: !7406)
!7412 = !DILocation(line: 61, column: 27, scope: !7406)
!7413 = !DILocation(line: 61, column: 62, scope: !7406)
!7414 = !DILocation(line: 61, column: 66, scope: !7406)
!7415 = !DILocation(line: 61, column: 78, scope: !7416)
!7416 = !DILexicalBlockFile(scope: !7417, file: !689, discriminator: 3)
!7417 = distinct !DILexicalBlock(scope: !7407, file: !689, line: 61, column: 62)
!7418 = !DILocation(line: 61, column: 71, scope: !7416)
!7419 = !DILocation(line: 61, column: 83, scope: !7420)
!7420 = !DILexicalBlockFile(scope: !7407, file: !689, discriminator: 4)
!7421 = !DILocation(line: 61, column: 96, scope: !7422)
!7422 = !DILexicalBlockFile(scope: !7402, file: !689, discriminator: 5)
!7423 = !DILocation(line: 62, column: 13, scope: !7373)
!7424 = distinct !{!7424, !7423}
!7425 = !DILocation(line: 62, column: 18, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7427, file: !689, discriminator: 1)
!7427 = distinct !DILexicalBlock(scope: !7373, file: !689, line: 62, column: 16)
!7428 = distinct !{!7428, !7429}
!7429 = !DILocation(line: 62, column: 18, scope: !7427)
!7430 = !DILocation(line: 62, column: 52, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7432, file: !689, discriminator: 2)
!7432 = distinct !DILexicalBlock(scope: !7427, file: !689, line: 62, column: 21)
!7433 = !DILocation(line: 62, column: 57, scope: !7431)
!7434 = !DILocation(line: 62, column: 30, scope: !7431)
!7435 = !DILocation(line: 62, column: 27, scope: !7431)
!7436 = !DILocation(line: 62, column: 99, scope: !7431)
!7437 = !DILocation(line: 62, column: 103, scope: !7431)
!7438 = !DILocation(line: 62, column: 115, scope: !7439)
!7439 = !DILexicalBlockFile(scope: !7440, file: !689, discriminator: 3)
!7440 = distinct !DILexicalBlock(scope: !7432, file: !689, line: 62, column: 99)
!7441 = !DILocation(line: 62, column: 108, scope: !7439)
!7442 = !DILocation(line: 62, column: 120, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7432, file: !689, discriminator: 4)
!7444 = !DILocation(line: 62, column: 133, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7427, file: !689, discriminator: 5)
!7446 = !DILocation(line: 63, column: 9, scope: !7373)
!7447 = !DILocation(line: 64, column: 13, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7365, file: !689, line: 63, column: 16)
!7449 = distinct !{!7449, !7447}
!7450 = !DILocation(line: 64, column: 22, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !7452, file: !689, discriminator: 1)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !689, line: 64, column: 22)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !689, line: 64, column: 16)
!7454 = !DILocation(line: 64, column: 31, scope: !7451)
!7455 = !DILocation(line: 64, column: 45, scope: !7451)
!7456 = !DILocation(line: 64, column: 62, scope: !7457)
!7457 = !DILexicalBlockFile(scope: !7458, file: !689, discriminator: 2)
!7458 = distinct !DILexicalBlock(scope: !7452, file: !689, line: 64, column: 53)
!7459 = !DILocation(line: 64, column: 67, scope: !7457)
!7460 = !DILocation(line: 64, column: 45, scope: !7457)
!7461 = !DILocation(line: 64, column: 54, scope: !7457)
!7462 = !DILocation(line: 64, column: 36, scope: !7457)
!7463 = !DILocation(line: 64, column: 55, scope: !7457)
!7464 = !DILocation(line: 64, column: 84, scope: !7457)
!7465 = !DILocation(line: 64, column: 86, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7453, file: !689, discriminator: 3)
!7467 = !DILocation(line: 65, column: 13, scope: !7448)
!7468 = distinct !{!7468, !7467}
!7469 = !DILocation(line: 65, column: 22, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7471, file: !689, discriminator: 1)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !689, line: 65, column: 22)
!7472 = distinct !DILexicalBlock(scope: !7448, file: !689, line: 65, column: 16)
!7473 = !DILocation(line: 65, column: 31, scope: !7470)
!7474 = !DILocation(line: 65, column: 45, scope: !7470)
!7475 = !DILocation(line: 65, column: 62, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7477, file: !689, discriminator: 2)
!7477 = distinct !DILexicalBlock(scope: !7471, file: !689, line: 65, column: 53)
!7478 = !DILocation(line: 65, column: 67, scope: !7476)
!7479 = !DILocation(line: 65, column: 45, scope: !7476)
!7480 = !DILocation(line: 65, column: 54, scope: !7476)
!7481 = !DILocation(line: 65, column: 36, scope: !7476)
!7482 = !DILocation(line: 65, column: 55, scope: !7476)
!7483 = !DILocation(line: 65, column: 84, scope: !7476)
!7484 = !DILocation(line: 65, column: 86, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !7472, file: !689, discriminator: 3)
!7486 = !DILocation(line: 67, column: 5, scope: !7339)
!7487 = !DILocation(line: 68, column: 9, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7334, file: !689, line: 67, column: 12)
!7489 = distinct !{!7489, !7487}
!7490 = !DILocation(line: 68, column: 18, scope: !7491)
!7491 = !DILexicalBlockFile(scope: !7492, file: !689, discriminator: 1)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !689, line: 68, column: 18)
!7493 = distinct !DILexicalBlock(scope: !7488, file: !689, line: 68, column: 12)
!7494 = !DILocation(line: 68, column: 27, scope: !7491)
!7495 = !DILocation(line: 68, column: 39, scope: !7491)
!7496 = !DILocation(line: 68, column: 56, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7498, file: !689, discriminator: 2)
!7498 = distinct !DILexicalBlock(scope: !7492, file: !689, line: 68, column: 47)
!7499 = !DILocation(line: 68, column: 61, scope: !7497)
!7500 = !DILocation(line: 68, column: 39, scope: !7497)
!7501 = !DILocation(line: 68, column: 48, scope: !7497)
!7502 = !DILocation(line: 68, column: 30, scope: !7497)
!7503 = !DILocation(line: 68, column: 49, scope: !7497)
!7504 = !DILocation(line: 68, column: 76, scope: !7497)
!7505 = !DILocation(line: 68, column: 78, scope: !7506)
!7506 = !DILexicalBlockFile(scope: !7493, file: !689, discriminator: 3)
!7507 = !DILocation(line: 69, column: 13, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7488, file: !689, line: 69, column: 13)
!7509 = !DILocation(line: 69, column: 21, scope: !7508)
!7510 = !DILocation(line: 69, column: 26, scope: !7508)
!7511 = !DILocation(line: 69, column: 29, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !7508, file: !689, discriminator: 1)
!7513 = !DILocation(line: 69, column: 37, scope: !7512)
!7514 = !DILocation(line: 69, column: 13, scope: !7512)
!7515 = !DILocation(line: 70, column: 13, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7508, file: !689, line: 69, column: 43)
!7517 = distinct !{!7517, !7515}
!7518 = !DILocation(line: 70, column: 22, scope: !7519)
!7519 = !DILexicalBlockFile(scope: !7520, file: !689, discriminator: 1)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !689, line: 70, column: 22)
!7521 = distinct !DILexicalBlock(scope: !7516, file: !689, line: 70, column: 16)
!7522 = !DILocation(line: 70, column: 31, scope: !7519)
!7523 = !DILocation(line: 70, column: 45, scope: !7519)
!7524 = !DILocation(line: 70, column: 62, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !7526, file: !689, discriminator: 2)
!7526 = distinct !DILexicalBlock(scope: !7520, file: !689, line: 70, column: 53)
!7527 = !DILocation(line: 70, column: 67, scope: !7525)
!7528 = !DILocation(line: 70, column: 45, scope: !7525)
!7529 = !DILocation(line: 70, column: 54, scope: !7525)
!7530 = !DILocation(line: 70, column: 36, scope: !7525)
!7531 = !DILocation(line: 70, column: 55, scope: !7525)
!7532 = !DILocation(line: 70, column: 84, scope: !7525)
!7533 = !DILocation(line: 70, column: 86, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !7521, file: !689, discriminator: 3)
!7535 = !DILocation(line: 71, column: 13, scope: !7516)
!7536 = distinct !{!7536, !7535}
!7537 = !DILocation(line: 71, column: 22, scope: !7538)
!7538 = !DILexicalBlockFile(scope: !7539, file: !689, discriminator: 1)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !689, line: 71, column: 22)
!7540 = distinct !DILexicalBlock(scope: !7516, file: !689, line: 71, column: 16)
!7541 = !DILocation(line: 71, column: 31, scope: !7538)
!7542 = !DILocation(line: 71, column: 45, scope: !7538)
!7543 = !DILocation(line: 71, column: 62, scope: !7544)
!7544 = !DILexicalBlockFile(scope: !7545, file: !689, discriminator: 2)
!7545 = distinct !DILexicalBlock(scope: !7539, file: !689, line: 71, column: 53)
!7546 = !DILocation(line: 71, column: 67, scope: !7544)
!7547 = !DILocation(line: 71, column: 45, scope: !7544)
!7548 = !DILocation(line: 71, column: 54, scope: !7544)
!7549 = !DILocation(line: 71, column: 36, scope: !7544)
!7550 = !DILocation(line: 71, column: 55, scope: !7544)
!7551 = !DILocation(line: 71, column: 84, scope: !7544)
!7552 = !DILocation(line: 71, column: 86, scope: !7553)
!7553 = !DILexicalBlockFile(scope: !7540, file: !689, discriminator: 3)
!7554 = !DILocation(line: 72, column: 13, scope: !7516)
!7555 = distinct !{!7555, !7554}
!7556 = !DILocation(line: 72, column: 18, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !7558, file: !689, discriminator: 1)
!7558 = distinct !DILexicalBlock(scope: !7516, file: !689, line: 72, column: 16)
!7559 = distinct !{!7559, !7560}
!7560 = !DILocation(line: 72, column: 18, scope: !7558)
!7561 = !DILocation(line: 72, column: 52, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7563, file: !689, discriminator: 2)
!7563 = distinct !DILexicalBlock(scope: !7558, file: !689, line: 72, column: 21)
!7564 = !DILocation(line: 72, column: 57, scope: !7562)
!7565 = !DILocation(line: 72, column: 30, scope: !7562)
!7566 = !DILocation(line: 72, column: 27, scope: !7562)
!7567 = !DILocation(line: 72, column: 99, scope: !7562)
!7568 = !DILocation(line: 72, column: 103, scope: !7562)
!7569 = !DILocation(line: 72, column: 115, scope: !7570)
!7570 = !DILexicalBlockFile(scope: !7571, file: !689, discriminator: 3)
!7571 = distinct !DILexicalBlock(scope: !7563, file: !689, line: 72, column: 99)
!7572 = !DILocation(line: 72, column: 108, scope: !7570)
!7573 = !DILocation(line: 72, column: 120, scope: !7574)
!7574 = !DILexicalBlockFile(scope: !7563, file: !689, discriminator: 4)
!7575 = !DILocation(line: 72, column: 133, scope: !7576)
!7576 = !DILexicalBlockFile(scope: !7558, file: !689, discriminator: 5)
!7577 = !DILocation(line: 73, column: 9, scope: !7516)
!7578 = !DILocation(line: 76, column: 26, scope: !7252)
!7579 = !DILocation(line: 76, column: 35, scope: !7252)
!7580 = !DILocation(line: 76, column: 5, scope: !7252)
!7581 = !DILocation(line: 76, column: 10, scope: !7252)
!7582 = !DILocation(line: 76, column: 24, scope: !7252)
!7583 = !DILocation(line: 77, column: 26, scope: !7252)
!7584 = !DILocation(line: 77, column: 35, scope: !7252)
!7585 = !DILocation(line: 77, column: 5, scope: !7252)
!7586 = !DILocation(line: 77, column: 10, scope: !7252)
!7587 = !DILocation(line: 77, column: 24, scope: !7252)
!7588 = !DILocation(line: 79, column: 5, scope: !7252)
!7589 = !DILocation(line: 80, column: 1, scope: !7252)
!7590 = distinct !DISubprogram(name: "cbs_vp9_write_frame_size", scope: !689, file: !689, line: 82, type: !711, isLocal: true, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7591 = !DILocalVariable(name: "ctx", arg: 1, scope: !7590, file: !689, line: 82, type: !637)
!7592 = !DILocation(line: 82, column: 60, scope: !7590)
!7593 = !DILocalVariable(name: "rw", arg: 2, scope: !7590, file: !689, line: 82, type: !713)
!7594 = !DILocation(line: 82, column: 80, scope: !7590)
!7595 = !DILocalVariable(name: "current", arg: 3, scope: !7590, file: !689, line: 83, type: !704)
!7596 = !DILocation(line: 83, column: 48, scope: !7590)
!7597 = !DILocalVariable(name: "vp9", scope: !7590, file: !689, line: 85, type: !1040)
!7598 = !DILocation(line: 85, column: 31, scope: !7590)
!7599 = !DILocation(line: 85, column: 37, scope: !7590)
!7600 = !DILocation(line: 85, column: 42, scope: !7590)
!7601 = !DILocalVariable(name: "err", scope: !7590, file: !689, line: 86, type: !503)
!7602 = !DILocation(line: 86, column: 9, scope: !7590)
!7603 = !DILocation(line: 88, column: 5, scope: !7590)
!7604 = distinct !{!7604, !7603}
!7605 = !DILocation(line: 88, column: 10, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7607, file: !689, discriminator: 1)
!7607 = distinct !DILexicalBlock(scope: !7590, file: !689, line: 88, column: 8)
!7608 = distinct !{!7608, !7609}
!7609 = !DILocation(line: 88, column: 10, scope: !7607)
!7610 = !DILocation(line: 88, column: 44, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !7612, file: !689, discriminator: 2)
!7612 = distinct !DILexicalBlock(scope: !7607, file: !689, line: 88, column: 13)
!7613 = !DILocation(line: 88, column: 49, scope: !7611)
!7614 = !DILocation(line: 88, column: 7, scope: !7611)
!7615 = !DILocation(line: 88, column: 16, scope: !7611)
!7616 = !DILocation(line: 88, column: 22, scope: !7611)
!7617 = !DILocation(line: 88, column: 19, scope: !7611)
!7618 = !DILocation(line: 88, column: 61, scope: !7611)
!7619 = !DILocation(line: 88, column: 65, scope: !7611)
!7620 = !DILocation(line: 88, column: 77, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !7622, file: !689, discriminator: 3)
!7622 = distinct !DILexicalBlock(scope: !7612, file: !689, line: 88, column: 61)
!7623 = !DILocation(line: 88, column: 70, scope: !7621)
!7624 = !DILocation(line: 88, column: 82, scope: !7625)
!7625 = !DILexicalBlockFile(scope: !7612, file: !689, discriminator: 4)
!7626 = !DILocation(line: 88, column: 95, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7607, file: !689, discriminator: 5)
!7628 = !DILocation(line: 89, column: 5, scope: !7590)
!7629 = distinct !{!7629, !7628}
!7630 = !DILocation(line: 89, column: 10, scope: !7631)
!7631 = !DILexicalBlockFile(scope: !7632, file: !689, discriminator: 1)
!7632 = distinct !DILexicalBlock(scope: !7590, file: !689, line: 89, column: 8)
!7633 = distinct !{!7633, !7634}
!7634 = !DILocation(line: 89, column: 10, scope: !7632)
!7635 = !DILocation(line: 89, column: 44, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7637, file: !689, discriminator: 2)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !689, line: 89, column: 13)
!7638 = !DILocation(line: 89, column: 49, scope: !7636)
!7639 = !DILocation(line: 89, column: 7, scope: !7636)
!7640 = !DILocation(line: 89, column: 16, scope: !7636)
!7641 = !DILocation(line: 89, column: 22, scope: !7636)
!7642 = !DILocation(line: 89, column: 19, scope: !7636)
!7643 = !DILocation(line: 89, column: 62, scope: !7636)
!7644 = !DILocation(line: 89, column: 66, scope: !7636)
!7645 = !DILocation(line: 89, column: 78, scope: !7646)
!7646 = !DILexicalBlockFile(scope: !7647, file: !689, discriminator: 3)
!7647 = distinct !DILexicalBlock(scope: !7637, file: !689, line: 89, column: 62)
!7648 = !DILocation(line: 89, column: 71, scope: !7646)
!7649 = !DILocation(line: 89, column: 83, scope: !7650)
!7650 = !DILexicalBlockFile(scope: !7637, file: !689, discriminator: 4)
!7651 = !DILocation(line: 89, column: 96, scope: !7652)
!7652 = !DILexicalBlockFile(scope: !7632, file: !689, discriminator: 5)
!7653 = !DILocation(line: 91, column: 24, scope: !7590)
!7654 = !DILocation(line: 91, column: 33, scope: !7590)
!7655 = !DILocation(line: 91, column: 53, scope: !7590)
!7656 = !DILocation(line: 91, column: 5, scope: !7590)
!7657 = !DILocation(line: 91, column: 10, scope: !7590)
!7658 = !DILocation(line: 91, column: 22, scope: !7590)
!7659 = !DILocation(line: 92, column: 25, scope: !7590)
!7660 = !DILocation(line: 92, column: 34, scope: !7590)
!7661 = !DILocation(line: 92, column: 55, scope: !7590)
!7662 = !DILocation(line: 92, column: 5, scope: !7590)
!7663 = !DILocation(line: 92, column: 10, scope: !7590)
!7664 = !DILocation(line: 92, column: 23, scope: !7590)
!7665 = !DILocation(line: 94, column: 21, scope: !7590)
!7666 = !DILocation(line: 94, column: 26, scope: !7590)
!7667 = !DILocation(line: 94, column: 38, scope: !7590)
!7668 = !DILocation(line: 94, column: 43, scope: !7590)
!7669 = !DILocation(line: 94, column: 20, scope: !7590)
!7670 = !DILocation(line: 94, column: 5, scope: !7590)
!7671 = !DILocation(line: 94, column: 10, scope: !7590)
!7672 = !DILocation(line: 94, column: 18, scope: !7590)
!7673 = !DILocation(line: 95, column: 21, scope: !7590)
!7674 = !DILocation(line: 95, column: 26, scope: !7590)
!7675 = !DILocation(line: 95, column: 39, scope: !7590)
!7676 = !DILocation(line: 95, column: 44, scope: !7590)
!7677 = !DILocation(line: 95, column: 20, scope: !7590)
!7678 = !DILocation(line: 95, column: 5, scope: !7590)
!7679 = !DILocation(line: 95, column: 10, scope: !7590)
!7680 = !DILocation(line: 95, column: 18, scope: !7590)
!7681 = !DILocation(line: 96, column: 23, scope: !7590)
!7682 = !DILocation(line: 96, column: 28, scope: !7590)
!7683 = !DILocation(line: 96, column: 36, scope: !7590)
!7684 = !DILocation(line: 96, column: 41, scope: !7590)
!7685 = !DILocation(line: 96, column: 22, scope: !7590)
!7686 = !DILocation(line: 96, column: 5, scope: !7590)
!7687 = !DILocation(line: 96, column: 10, scope: !7590)
!7688 = !DILocation(line: 96, column: 20, scope: !7590)
!7689 = !DILocation(line: 97, column: 23, scope: !7590)
!7690 = !DILocation(line: 97, column: 28, scope: !7590)
!7691 = !DILocation(line: 97, column: 36, scope: !7590)
!7692 = !DILocation(line: 97, column: 41, scope: !7590)
!7693 = !DILocation(line: 97, column: 22, scope: !7590)
!7694 = !DILocation(line: 97, column: 5, scope: !7590)
!7695 = !DILocation(line: 97, column: 10, scope: !7590)
!7696 = !DILocation(line: 97, column: 20, scope: !7590)
!7697 = !DILocation(line: 99, column: 5, scope: !7590)
!7698 = !DILocation(line: 100, column: 1, scope: !7590)
!7699 = distinct !DISubprogram(name: "cbs_vp9_write_render_size", scope: !689, file: !689, line: 102, type: !711, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7700 = !DILocalVariable(name: "ctx", arg: 1, scope: !7699, file: !689, line: 102, type: !637)
!7701 = !DILocation(line: 102, column: 61, scope: !7699)
!7702 = !DILocalVariable(name: "rw", arg: 2, scope: !7699, file: !689, line: 102, type: !713)
!7703 = !DILocation(line: 102, column: 81, scope: !7699)
!7704 = !DILocalVariable(name: "current", arg: 3, scope: !7699, file: !689, line: 103, type: !704)
!7705 = !DILocation(line: 103, column: 49, scope: !7699)
!7706 = !DILocalVariable(name: "err", scope: !7699, file: !689, line: 105, type: !503)
!7707 = !DILocation(line: 105, column: 9, scope: !7699)
!7708 = !DILocation(line: 107, column: 5, scope: !7699)
!7709 = distinct !{!7709, !7708}
!7710 = !DILocation(line: 107, column: 10, scope: !7711)
!7711 = !DILexicalBlockFile(scope: !7712, file: !689, discriminator: 1)
!7712 = distinct !DILexicalBlock(scope: !7699, file: !689, line: 107, column: 8)
!7713 = distinct !{!7713, !7714}
!7714 = !DILocation(line: 107, column: 10, scope: !7712)
!7715 = !DILocation(line: 107, column: 44, scope: !7716)
!7716 = !DILexicalBlockFile(scope: !7717, file: !689, discriminator: 2)
!7717 = distinct !DILexicalBlock(scope: !7712, file: !689, line: 107, column: 13)
!7718 = !DILocation(line: 107, column: 49, scope: !7716)
!7719 = !DILocation(line: 107, column: 7, scope: !7716)
!7720 = !DILocation(line: 107, column: 16, scope: !7716)
!7721 = !DILocation(line: 107, column: 22, scope: !7716)
!7722 = !DILocation(line: 107, column: 19, scope: !7716)
!7723 = !DILocation(line: 107, column: 72, scope: !7716)
!7724 = !DILocation(line: 107, column: 76, scope: !7716)
!7725 = !DILocation(line: 107, column: 88, scope: !7726)
!7726 = !DILexicalBlockFile(scope: !7727, file: !689, discriminator: 3)
!7727 = distinct !DILexicalBlock(scope: !7717, file: !689, line: 107, column: 72)
!7728 = !DILocation(line: 107, column: 81, scope: !7726)
!7729 = !DILocation(line: 107, column: 93, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7717, file: !689, discriminator: 4)
!7731 = !DILocation(line: 107, column: 106, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7712, file: !689, discriminator: 5)
!7733 = !DILocation(line: 109, column: 9, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7699, file: !689, line: 109, column: 9)
!7735 = !DILocation(line: 109, column: 18, scope: !7734)
!7736 = !DILocation(line: 109, column: 9, scope: !7699)
!7737 = !DILocation(line: 110, column: 9, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !689, line: 109, column: 51)
!7739 = distinct !{!7739, !7737}
!7740 = !DILocation(line: 110, column: 14, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !7742, file: !689, discriminator: 1)
!7742 = distinct !DILexicalBlock(scope: !7738, file: !689, line: 110, column: 12)
!7743 = distinct !{!7743, !7744}
!7744 = !DILocation(line: 110, column: 14, scope: !7742)
!7745 = !DILocation(line: 110, column: 48, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7747, file: !689, discriminator: 2)
!7747 = distinct !DILexicalBlock(scope: !7742, file: !689, line: 110, column: 17)
!7748 = !DILocation(line: 110, column: 53, scope: !7746)
!7749 = !DILocation(line: 110, column: 11, scope: !7746)
!7750 = !DILocation(line: 110, column: 20, scope: !7746)
!7751 = !DILocation(line: 110, column: 26, scope: !7746)
!7752 = !DILocation(line: 110, column: 23, scope: !7746)
!7753 = !DILocation(line: 110, column: 66, scope: !7746)
!7754 = !DILocation(line: 110, column: 70, scope: !7746)
!7755 = !DILocation(line: 110, column: 82, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !7757, file: !689, discriminator: 3)
!7757 = distinct !DILexicalBlock(scope: !7747, file: !689, line: 110, column: 66)
!7758 = !DILocation(line: 110, column: 75, scope: !7756)
!7759 = !DILocation(line: 110, column: 87, scope: !7760)
!7760 = !DILexicalBlockFile(scope: !7747, file: !689, discriminator: 4)
!7761 = !DILocation(line: 110, column: 100, scope: !7762)
!7762 = !DILexicalBlockFile(scope: !7742, file: !689, discriminator: 5)
!7763 = !DILocation(line: 111, column: 9, scope: !7738)
!7764 = distinct !{!7764, !7763}
!7765 = !DILocation(line: 111, column: 14, scope: !7766)
!7766 = !DILexicalBlockFile(scope: !7767, file: !689, discriminator: 1)
!7767 = distinct !DILexicalBlock(scope: !7738, file: !689, line: 111, column: 12)
!7768 = distinct !{!7768, !7769}
!7769 = !DILocation(line: 111, column: 14, scope: !7767)
!7770 = !DILocation(line: 111, column: 48, scope: !7771)
!7771 = !DILexicalBlockFile(scope: !7772, file: !689, discriminator: 2)
!7772 = distinct !DILexicalBlock(scope: !7767, file: !689, line: 111, column: 17)
!7773 = !DILocation(line: 111, column: 53, scope: !7771)
!7774 = !DILocation(line: 111, column: 11, scope: !7771)
!7775 = !DILocation(line: 111, column: 20, scope: !7771)
!7776 = !DILocation(line: 111, column: 26, scope: !7771)
!7777 = !DILocation(line: 111, column: 23, scope: !7771)
!7778 = !DILocation(line: 111, column: 67, scope: !7771)
!7779 = !DILocation(line: 111, column: 71, scope: !7771)
!7780 = !DILocation(line: 111, column: 83, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !7782, file: !689, discriminator: 3)
!7782 = distinct !DILexicalBlock(scope: !7772, file: !689, line: 111, column: 67)
!7783 = !DILocation(line: 111, column: 76, scope: !7781)
!7784 = !DILocation(line: 111, column: 88, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !7772, file: !689, discriminator: 4)
!7786 = !DILocation(line: 111, column: 101, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !7767, file: !689, discriminator: 5)
!7788 = !DILocation(line: 112, column: 5, scope: !7738)
!7789 = !DILocation(line: 114, column: 5, scope: !7699)
!7790 = !DILocation(line: 115, column: 1, scope: !7699)
!7791 = distinct !DISubprogram(name: "cbs_vp9_write_frame_size_with_refs", scope: !689, file: !689, line: 117, type: !711, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7792 = !DILocalVariable(name: "ctx", arg: 1, scope: !7791, file: !689, line: 117, type: !637)
!7793 = !DILocation(line: 117, column: 70, scope: !7791)
!7794 = !DILocalVariable(name: "rw", arg: 2, scope: !7791, file: !689, line: 117, type: !713)
!7795 = !DILocation(line: 117, column: 90, scope: !7791)
!7796 = !DILocalVariable(name: "current", arg: 3, scope: !7791, file: !689, line: 118, type: !704)
!7797 = !DILocation(line: 118, column: 58, scope: !7791)
!7798 = !DILocalVariable(name: "vp9", scope: !7791, file: !689, line: 120, type: !1040)
!7799 = !DILocation(line: 120, column: 31, scope: !7791)
!7800 = !DILocation(line: 120, column: 37, scope: !7791)
!7801 = !DILocation(line: 120, column: 42, scope: !7791)
!7802 = !DILocalVariable(name: "err", scope: !7791, file: !689, line: 121, type: !503)
!7803 = !DILocation(line: 121, column: 9, scope: !7791)
!7804 = !DILocalVariable(name: "i", scope: !7791, file: !689, line: 121, type: !503)
!7805 = !DILocation(line: 121, column: 14, scope: !7791)
!7806 = !DILocation(line: 123, column: 12, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7791, file: !689, line: 123, column: 5)
!7808 = !DILocation(line: 123, column: 10, scope: !7807)
!7809 = !DILocation(line: 123, column: 17, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !7811, file: !689, discriminator: 1)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !689, line: 123, column: 5)
!7812 = !DILocation(line: 123, column: 19, scope: !7810)
!7813 = !DILocation(line: 123, column: 5, scope: !7810)
!7814 = !DILocation(line: 124, column: 9, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7811, file: !689, line: 123, column: 46)
!7816 = distinct !{!7816, !7814}
!7817 = !DILocation(line: 124, column: 14, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7819, file: !689, discriminator: 1)
!7819 = distinct !DILexicalBlock(scope: !7815, file: !689, line: 124, column: 12)
!7820 = distinct !{!7820, !7821}
!7821 = !DILocation(line: 124, column: 14, scope: !7819)
!7822 = !DILocation(line: 124, column: 48, scope: !7823)
!7823 = !DILexicalBlockFile(scope: !7824, file: !689, discriminator: 2)
!7824 = distinct !DILexicalBlock(scope: !7819, file: !689, line: 124, column: 17)
!7825 = !DILocation(line: 124, column: 53, scope: !7823)
!7826 = !DILocation(line: 124, column: 98, scope: !7823)
!7827 = !DILocation(line: 124, column: 103, scope: !7823)
!7828 = !DILocation(line: 124, column: 85, scope: !7823)
!7829 = !DILocation(line: 124, column: 30, scope: !7823)
!7830 = !DILocation(line: 124, column: 11, scope: !7823)
!7831 = !DILocation(line: 124, column: 20, scope: !7823)
!7832 = !DILocation(line: 124, column: 26, scope: !7823)
!7833 = !DILocation(line: 124, column: 23, scope: !7823)
!7834 = !DILocation(line: 124, column: 57, scope: !7823)
!7835 = !DILocation(line: 124, column: 61, scope: !7823)
!7836 = !DILocation(line: 124, column: 73, scope: !7837)
!7837 = !DILexicalBlockFile(scope: !7838, file: !689, discriminator: 3)
!7838 = distinct !DILexicalBlock(scope: !7824, file: !689, line: 124, column: 57)
!7839 = !DILocation(line: 124, column: 66, scope: !7837)
!7840 = !DILocation(line: 124, column: 78, scope: !7841)
!7841 = !DILexicalBlockFile(scope: !7824, file: !689, discriminator: 4)
!7842 = !DILocation(line: 124, column: 91, scope: !7843)
!7843 = !DILexicalBlockFile(scope: !7819, file: !689, discriminator: 5)
!7844 = !DILocation(line: 125, column: 32, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7815, file: !689, line: 125, column: 13)
!7846 = !DILocation(line: 125, column: 13, scope: !7845)
!7847 = !DILocation(line: 125, column: 22, scope: !7845)
!7848 = !DILocation(line: 125, column: 13, scope: !7815)
!7849 = !DILocalVariable(name: "ref", scope: !7850, file: !689, line: 126, type: !4041)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !689, line: 125, column: 36)
!7851 = !DILocation(line: 126, column: 37, scope: !7850)
!7852 = !DILocation(line: 127, column: 50, scope: !7850)
!7853 = !DILocation(line: 127, column: 27, scope: !7850)
!7854 = !DILocation(line: 127, column: 36, scope: !7850)
!7855 = !DILocation(line: 127, column: 18, scope: !7850)
!7856 = !DILocation(line: 127, column: 23, scope: !7850)
!7857 = !DILocation(line: 129, column: 32, scope: !7850)
!7858 = !DILocation(line: 129, column: 37, scope: !7850)
!7859 = !DILocation(line: 129, column: 13, scope: !7850)
!7860 = !DILocation(line: 129, column: 18, scope: !7850)
!7861 = !DILocation(line: 129, column: 30, scope: !7850)
!7862 = !DILocation(line: 130, column: 33, scope: !7850)
!7863 = !DILocation(line: 130, column: 38, scope: !7850)
!7864 = !DILocation(line: 130, column: 13, scope: !7850)
!7865 = !DILocation(line: 130, column: 18, scope: !7850)
!7866 = !DILocation(line: 130, column: 31, scope: !7850)
!7867 = !DILocation(line: 132, column: 34, scope: !7850)
!7868 = !DILocation(line: 132, column: 39, scope: !7850)
!7869 = !DILocation(line: 132, column: 13, scope: !7850)
!7870 = !DILocation(line: 132, column: 18, scope: !7850)
!7871 = !DILocation(line: 132, column: 32, scope: !7850)
!7872 = !DILocation(line: 133, column: 34, scope: !7850)
!7873 = !DILocation(line: 133, column: 39, scope: !7850)
!7874 = !DILocation(line: 133, column: 13, scope: !7850)
!7875 = !DILocation(line: 133, column: 18, scope: !7850)
!7876 = !DILocation(line: 133, column: 32, scope: !7850)
!7877 = !DILocation(line: 134, column: 30, scope: !7850)
!7878 = !DILocation(line: 134, column: 35, scope: !7850)
!7879 = !DILocation(line: 134, column: 13, scope: !7850)
!7880 = !DILocation(line: 134, column: 18, scope: !7850)
!7881 = !DILocation(line: 134, column: 28, scope: !7850)
!7882 = !DILocation(line: 136, column: 13, scope: !7850)
!7883 = !DILocation(line: 138, column: 5, scope: !7815)
!7884 = !DILocation(line: 123, column: 42, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !7811, file: !689, discriminator: 2)
!7886 = !DILocation(line: 123, column: 5, scope: !7885)
!7887 = distinct !{!7887, !7888}
!7888 = !DILocation(line: 123, column: 5, scope: !7791)
!7889 = !DILocation(line: 139, column: 9, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7791, file: !689, line: 139, column: 9)
!7891 = !DILocation(line: 139, column: 11, scope: !7890)
!7892 = !DILocation(line: 139, column: 9, scope: !7791)
!7893 = !DILocation(line: 140, column: 9, scope: !7890)
!7894 = distinct !{!7894, !7893}
!7895 = !DILocation(line: 140, column: 46, scope: !7896)
!7896 = !DILexicalBlockFile(scope: !7897, file: !689, discriminator: 1)
!7897 = distinct !DILexicalBlock(scope: !7890, file: !689, line: 140, column: 12)
!7898 = !DILocation(line: 140, column: 51, scope: !7896)
!7899 = !DILocation(line: 140, column: 55, scope: !7896)
!7900 = !DILocation(line: 140, column: 21, scope: !7896)
!7901 = !DILocation(line: 140, column: 18, scope: !7896)
!7902 = !DILocation(line: 140, column: 70, scope: !7896)
!7903 = !DILocation(line: 140, column: 74, scope: !7896)
!7904 = !DILocation(line: 140, column: 86, scope: !7905)
!7905 = !DILexicalBlockFile(scope: !7906, file: !689, discriminator: 2)
!7906 = distinct !DILexicalBlock(scope: !7897, file: !689, line: 140, column: 70)
!7907 = !DILocation(line: 140, column: 79, scope: !7905)
!7908 = !DILocation(line: 140, column: 91, scope: !7909)
!7909 = !DILexicalBlockFile(scope: !7897, file: !689, discriminator: 3)
!7910 = !DILocation(line: 140, column: 91, scope: !7911)
!7911 = !DILexicalBlockFile(scope: !7897, file: !689, discriminator: 4)
!7912 = !DILocation(line: 142, column: 25, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7890, file: !689, line: 141, column: 10)
!7914 = !DILocation(line: 142, column: 30, scope: !7913)
!7915 = !DILocation(line: 142, column: 42, scope: !7913)
!7916 = !DILocation(line: 142, column: 47, scope: !7913)
!7917 = !DILocation(line: 142, column: 24, scope: !7913)
!7918 = !DILocation(line: 142, column: 9, scope: !7913)
!7919 = !DILocation(line: 142, column: 14, scope: !7913)
!7920 = !DILocation(line: 142, column: 22, scope: !7913)
!7921 = !DILocation(line: 143, column: 25, scope: !7913)
!7922 = !DILocation(line: 143, column: 30, scope: !7913)
!7923 = !DILocation(line: 143, column: 43, scope: !7913)
!7924 = !DILocation(line: 143, column: 48, scope: !7913)
!7925 = !DILocation(line: 143, column: 24, scope: !7913)
!7926 = !DILocation(line: 143, column: 9, scope: !7913)
!7927 = !DILocation(line: 143, column: 14, scope: !7913)
!7928 = !DILocation(line: 143, column: 22, scope: !7913)
!7929 = !DILocation(line: 144, column: 27, scope: !7913)
!7930 = !DILocation(line: 144, column: 32, scope: !7913)
!7931 = !DILocation(line: 144, column: 40, scope: !7913)
!7932 = !DILocation(line: 144, column: 45, scope: !7913)
!7933 = !DILocation(line: 144, column: 26, scope: !7913)
!7934 = !DILocation(line: 144, column: 9, scope: !7913)
!7935 = !DILocation(line: 144, column: 14, scope: !7913)
!7936 = !DILocation(line: 144, column: 24, scope: !7913)
!7937 = !DILocation(line: 145, column: 27, scope: !7913)
!7938 = !DILocation(line: 145, column: 32, scope: !7913)
!7939 = !DILocation(line: 145, column: 40, scope: !7913)
!7940 = !DILocation(line: 145, column: 45, scope: !7913)
!7941 = !DILocation(line: 145, column: 26, scope: !7913)
!7942 = !DILocation(line: 145, column: 9, scope: !7913)
!7943 = !DILocation(line: 145, column: 14, scope: !7913)
!7944 = !DILocation(line: 145, column: 24, scope: !7913)
!7945 = !DILocation(line: 147, column: 5, scope: !7791)
!7946 = distinct !{!7946, !7945}
!7947 = !DILocation(line: 147, column: 43, scope: !7948)
!7948 = !DILexicalBlockFile(scope: !7949, file: !689, discriminator: 1)
!7949 = distinct !DILexicalBlock(scope: !7791, file: !689, line: 147, column: 8)
!7950 = !DILocation(line: 147, column: 48, scope: !7948)
!7951 = !DILocation(line: 147, column: 52, scope: !7948)
!7952 = !DILocation(line: 147, column: 17, scope: !7948)
!7953 = !DILocation(line: 147, column: 14, scope: !7948)
!7954 = !DILocation(line: 147, column: 67, scope: !7948)
!7955 = !DILocation(line: 147, column: 71, scope: !7948)
!7956 = !DILocation(line: 147, column: 83, scope: !7957)
!7957 = !DILexicalBlockFile(scope: !7958, file: !689, discriminator: 2)
!7958 = distinct !DILexicalBlock(scope: !7949, file: !689, line: 147, column: 67)
!7959 = !DILocation(line: 147, column: 76, scope: !7957)
!7960 = !DILocation(line: 147, column: 88, scope: !7961)
!7961 = !DILexicalBlockFile(scope: !7949, file: !689, discriminator: 3)
!7962 = !DILocation(line: 149, column: 5, scope: !7791)
!7963 = !DILocation(line: 150, column: 1, scope: !7791)
!7964 = distinct !DISubprogram(name: "cbs_vp9_write_interpolation_filter", scope: !689, file: !689, line: 152, type: !711, isLocal: true, isDefinition: true, scopeLine: 154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!7965 = !DILocalVariable(name: "ctx", arg: 1, scope: !7964, file: !689, line: 152, type: !637)
!7966 = !DILocation(line: 152, column: 70, scope: !7964)
!7967 = !DILocalVariable(name: "rw", arg: 2, scope: !7964, file: !689, line: 152, type: !713)
!7968 = !DILocation(line: 152, column: 90, scope: !7964)
!7969 = !DILocalVariable(name: "current", arg: 3, scope: !7964, file: !689, line: 153, type: !704)
!7970 = !DILocation(line: 153, column: 58, scope: !7964)
!7971 = !DILocalVariable(name: "err", scope: !7964, file: !689, line: 155, type: !503)
!7972 = !DILocation(line: 155, column: 9, scope: !7964)
!7973 = !DILocation(line: 157, column: 5, scope: !7964)
!7974 = distinct !{!7974, !7973}
!7975 = !DILocation(line: 157, column: 10, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7977, file: !689, discriminator: 1)
!7977 = distinct !DILexicalBlock(scope: !7964, file: !689, line: 157, column: 8)
!7978 = distinct !{!7978, !7979}
!7979 = !DILocation(line: 157, column: 10, scope: !7977)
!7980 = !DILocation(line: 157, column: 44, scope: !7981)
!7981 = !DILexicalBlockFile(scope: !7982, file: !689, discriminator: 2)
!7982 = distinct !DILexicalBlock(scope: !7977, file: !689, line: 157, column: 13)
!7983 = !DILocation(line: 157, column: 49, scope: !7981)
!7984 = !DILocation(line: 157, column: 7, scope: !7981)
!7985 = !DILocation(line: 157, column: 16, scope: !7981)
!7986 = !DILocation(line: 157, column: 22, scope: !7981)
!7987 = !DILocation(line: 157, column: 19, scope: !7981)
!7988 = !DILocation(line: 157, column: 61, scope: !7981)
!7989 = !DILocation(line: 157, column: 65, scope: !7981)
!7990 = !DILocation(line: 157, column: 77, scope: !7991)
!7991 = !DILexicalBlockFile(scope: !7992, file: !689, discriminator: 3)
!7992 = distinct !DILexicalBlock(scope: !7982, file: !689, line: 157, column: 61)
!7993 = !DILocation(line: 157, column: 70, scope: !7991)
!7994 = !DILocation(line: 157, column: 82, scope: !7995)
!7995 = !DILexicalBlockFile(scope: !7982, file: !689, discriminator: 4)
!7996 = !DILocation(line: 157, column: 95, scope: !7997)
!7997 = !DILexicalBlockFile(scope: !7977, file: !689, discriminator: 5)
!7998 = !DILocation(line: 158, column: 10, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7964, file: !689, line: 158, column: 9)
!8000 = !DILocation(line: 158, column: 19, scope: !7999)
!8001 = !DILocation(line: 158, column: 9, scope: !7964)
!8002 = !DILocation(line: 159, column: 9, scope: !7999)
!8003 = distinct !{!8003, !8002}
!8004 = !DILocation(line: 159, column: 14, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !8006, file: !689, discriminator: 1)
!8006 = distinct !DILexicalBlock(scope: !7999, file: !689, line: 159, column: 12)
!8007 = distinct !{!8007, !8008}
!8008 = !DILocation(line: 159, column: 14, scope: !8006)
!8009 = !DILocation(line: 159, column: 48, scope: !8010)
!8010 = !DILexicalBlockFile(scope: !8011, file: !689, discriminator: 2)
!8011 = distinct !DILexicalBlock(scope: !8006, file: !689, line: 159, column: 17)
!8012 = !DILocation(line: 159, column: 53, scope: !8010)
!8013 = !DILocation(line: 159, column: 11, scope: !8010)
!8014 = !DILocation(line: 159, column: 20, scope: !8010)
!8015 = !DILocation(line: 159, column: 26, scope: !8010)
!8016 = !DILocation(line: 159, column: 23, scope: !8010)
!8017 = !DILocation(line: 159, column: 74, scope: !8010)
!8018 = !DILocation(line: 159, column: 78, scope: !8010)
!8019 = !DILocation(line: 159, column: 90, scope: !8020)
!8020 = !DILexicalBlockFile(scope: !8021, file: !689, discriminator: 3)
!8021 = distinct !DILexicalBlock(scope: !8011, file: !689, line: 159, column: 74)
!8022 = !DILocation(line: 159, column: 83, scope: !8020)
!8023 = !DILocation(line: 159, column: 95, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8011, file: !689, discriminator: 4)
!8025 = !DILocation(line: 159, column: 108, scope: !8026)
!8026 = !DILexicalBlockFile(scope: !8006, file: !689, discriminator: 5)
!8027 = !DILocation(line: 159, column: 108, scope: !8028)
!8028 = !DILexicalBlockFile(scope: !8006, file: !689, discriminator: 6)
!8029 = !DILocation(line: 161, column: 5, scope: !7964)
!8030 = !DILocation(line: 162, column: 1, scope: !7964)
!8031 = distinct !DISubprogram(name: "cbs_vp9_write_loop_filter_params", scope: !689, file: !689, line: 164, type: !711, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!8032 = !DILocalVariable(name: "ctx", arg: 1, scope: !8031, file: !689, line: 164, type: !637)
!8033 = !DILocation(line: 164, column: 68, scope: !8031)
!8034 = !DILocalVariable(name: "rw", arg: 2, scope: !8031, file: !689, line: 164, type: !713)
!8035 = !DILocation(line: 164, column: 88, scope: !8031)
!8036 = !DILocalVariable(name: "current", arg: 3, scope: !8031, file: !689, line: 165, type: !704)
!8037 = !DILocation(line: 165, column: 56, scope: !8031)
!8038 = !DILocalVariable(name: "err", scope: !8031, file: !689, line: 167, type: !503)
!8039 = !DILocation(line: 167, column: 9, scope: !8031)
!8040 = !DILocalVariable(name: "i", scope: !8031, file: !689, line: 167, type: !503)
!8041 = !DILocation(line: 167, column: 14, scope: !8031)
!8042 = !DILocation(line: 169, column: 5, scope: !8031)
!8043 = distinct !{!8043, !8042}
!8044 = !DILocation(line: 169, column: 10, scope: !8045)
!8045 = !DILexicalBlockFile(scope: !8046, file: !689, discriminator: 1)
!8046 = distinct !DILexicalBlock(scope: !8031, file: !689, line: 169, column: 8)
!8047 = distinct !{!8047, !8048}
!8048 = !DILocation(line: 169, column: 10, scope: !8046)
!8049 = !DILocation(line: 169, column: 44, scope: !8050)
!8050 = !DILexicalBlockFile(scope: !8051, file: !689, discriminator: 2)
!8051 = distinct !DILexicalBlock(scope: !8046, file: !689, line: 169, column: 13)
!8052 = !DILocation(line: 169, column: 49, scope: !8050)
!8053 = !DILocation(line: 169, column: 7, scope: !8050)
!8054 = !DILocation(line: 169, column: 16, scope: !8050)
!8055 = !DILocation(line: 169, column: 22, scope: !8050)
!8056 = !DILocation(line: 169, column: 19, scope: !8050)
!8057 = !DILocation(line: 169, column: 58, scope: !8050)
!8058 = !DILocation(line: 169, column: 62, scope: !8050)
!8059 = !DILocation(line: 169, column: 74, scope: !8060)
!8060 = !DILexicalBlockFile(scope: !8061, file: !689, discriminator: 3)
!8061 = distinct !DILexicalBlock(scope: !8051, file: !689, line: 169, column: 58)
!8062 = !DILocation(line: 169, column: 67, scope: !8060)
!8063 = !DILocation(line: 169, column: 79, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8051, file: !689, discriminator: 4)
!8065 = !DILocation(line: 169, column: 92, scope: !8066)
!8066 = !DILexicalBlockFile(scope: !8046, file: !689, discriminator: 5)
!8067 = !DILocation(line: 170, column: 5, scope: !8031)
!8068 = distinct !{!8068, !8067}
!8069 = !DILocation(line: 170, column: 10, scope: !8070)
!8070 = !DILexicalBlockFile(scope: !8071, file: !689, discriminator: 1)
!8071 = distinct !DILexicalBlock(scope: !8031, file: !689, line: 170, column: 8)
!8072 = distinct !{!8072, !8073}
!8073 = !DILocation(line: 170, column: 10, scope: !8071)
!8074 = !DILocation(line: 170, column: 44, scope: !8075)
!8075 = !DILexicalBlockFile(scope: !8076, file: !689, discriminator: 2)
!8076 = distinct !DILexicalBlock(scope: !8071, file: !689, line: 170, column: 13)
!8077 = !DILocation(line: 170, column: 49, scope: !8075)
!8078 = !DILocation(line: 170, column: 7, scope: !8075)
!8079 = !DILocation(line: 170, column: 16, scope: !8075)
!8080 = !DILocation(line: 170, column: 22, scope: !8075)
!8081 = !DILocation(line: 170, column: 19, scope: !8075)
!8082 = !DILocation(line: 170, column: 62, scope: !8075)
!8083 = !DILocation(line: 170, column: 66, scope: !8075)
!8084 = !DILocation(line: 170, column: 78, scope: !8085)
!8085 = !DILexicalBlockFile(scope: !8086, file: !689, discriminator: 3)
!8086 = distinct !DILexicalBlock(scope: !8076, file: !689, line: 170, column: 62)
!8087 = !DILocation(line: 170, column: 71, scope: !8085)
!8088 = !DILocation(line: 170, column: 83, scope: !8089)
!8089 = !DILexicalBlockFile(scope: !8076, file: !689, discriminator: 4)
!8090 = !DILocation(line: 170, column: 96, scope: !8091)
!8091 = !DILexicalBlockFile(scope: !8071, file: !689, discriminator: 5)
!8092 = !DILocation(line: 172, column: 5, scope: !8031)
!8093 = distinct !{!8093, !8092}
!8094 = !DILocation(line: 172, column: 10, scope: !8095)
!8095 = !DILexicalBlockFile(scope: !8096, file: !689, discriminator: 1)
!8096 = distinct !DILexicalBlock(scope: !8031, file: !689, line: 172, column: 8)
!8097 = distinct !{!8097, !8098}
!8098 = !DILocation(line: 172, column: 10, scope: !8096)
!8099 = !DILocation(line: 172, column: 44, scope: !8100)
!8100 = !DILexicalBlockFile(scope: !8101, file: !689, discriminator: 2)
!8101 = distinct !DILexicalBlock(scope: !8096, file: !689, line: 172, column: 13)
!8102 = !DILocation(line: 172, column: 49, scope: !8100)
!8103 = !DILocation(line: 172, column: 7, scope: !8100)
!8104 = !DILocation(line: 172, column: 16, scope: !8100)
!8105 = !DILocation(line: 172, column: 22, scope: !8100)
!8106 = !DILocation(line: 172, column: 19, scope: !8100)
!8107 = !DILocation(line: 172, column: 66, scope: !8100)
!8108 = !DILocation(line: 172, column: 70, scope: !8100)
!8109 = !DILocation(line: 172, column: 82, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !8111, file: !689, discriminator: 3)
!8111 = distinct !DILexicalBlock(scope: !8101, file: !689, line: 172, column: 66)
!8112 = !DILocation(line: 172, column: 75, scope: !8110)
!8113 = !DILocation(line: 172, column: 87, scope: !8114)
!8114 = !DILexicalBlockFile(scope: !8101, file: !689, discriminator: 4)
!8115 = !DILocation(line: 172, column: 100, scope: !8116)
!8116 = !DILexicalBlockFile(scope: !8096, file: !689, discriminator: 5)
!8117 = !DILocation(line: 173, column: 9, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8031, file: !689, line: 173, column: 9)
!8119 = !DILocation(line: 173, column: 18, scope: !8118)
!8120 = !DILocation(line: 173, column: 9, scope: !8031)
!8121 = !DILocation(line: 174, column: 9, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8118, file: !689, line: 173, column: 45)
!8123 = distinct !{!8123, !8121}
!8124 = !DILocation(line: 174, column: 14, scope: !8125)
!8125 = !DILexicalBlockFile(scope: !8126, file: !689, discriminator: 1)
!8126 = distinct !DILexicalBlock(scope: !8122, file: !689, line: 174, column: 12)
!8127 = distinct !{!8127, !8128}
!8128 = !DILocation(line: 174, column: 14, scope: !8126)
!8129 = !DILocation(line: 174, column: 48, scope: !8130)
!8130 = !DILexicalBlockFile(scope: !8131, file: !689, discriminator: 2)
!8131 = distinct !DILexicalBlock(scope: !8126, file: !689, line: 174, column: 17)
!8132 = !DILocation(line: 174, column: 53, scope: !8130)
!8133 = !DILocation(line: 174, column: 11, scope: !8130)
!8134 = !DILocation(line: 174, column: 20, scope: !8130)
!8135 = !DILocation(line: 174, column: 26, scope: !8130)
!8136 = !DILocation(line: 174, column: 23, scope: !8130)
!8137 = !DILocation(line: 174, column: 69, scope: !8130)
!8138 = !DILocation(line: 174, column: 73, scope: !8130)
!8139 = !DILocation(line: 174, column: 85, scope: !8140)
!8140 = !DILexicalBlockFile(scope: !8141, file: !689, discriminator: 3)
!8141 = distinct !DILexicalBlock(scope: !8131, file: !689, line: 174, column: 69)
!8142 = !DILocation(line: 174, column: 78, scope: !8140)
!8143 = !DILocation(line: 174, column: 90, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8131, file: !689, discriminator: 4)
!8145 = !DILocation(line: 174, column: 103, scope: !8146)
!8146 = !DILexicalBlockFile(scope: !8126, file: !689, discriminator: 5)
!8147 = !DILocation(line: 175, column: 13, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8122, file: !689, line: 175, column: 13)
!8149 = !DILocation(line: 175, column: 22, scope: !8148)
!8150 = !DILocation(line: 175, column: 13, scope: !8122)
!8151 = !DILocation(line: 176, column: 20, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !689, line: 176, column: 13)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !689, line: 175, column: 48)
!8154 = !DILocation(line: 176, column: 18, scope: !8152)
!8155 = !DILocation(line: 176, column: 25, scope: !8156)
!8156 = !DILexicalBlockFile(scope: !8157, file: !689, discriminator: 1)
!8157 = distinct !DILexicalBlock(scope: !8152, file: !689, line: 176, column: 13)
!8158 = !DILocation(line: 176, column: 27, scope: !8156)
!8159 = !DILocation(line: 176, column: 13, scope: !8156)
!8160 = !DILocation(line: 177, column: 17, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8157, file: !689, line: 176, column: 54)
!8162 = distinct !{!8162, !8160}
!8163 = !DILocation(line: 177, column: 22, scope: !8164)
!8164 = !DILexicalBlockFile(scope: !8165, file: !689, discriminator: 1)
!8165 = distinct !DILexicalBlock(scope: !8161, file: !689, line: 177, column: 20)
!8166 = distinct !{!8166, !8167}
!8167 = !DILocation(line: 177, column: 22, scope: !8165)
!8168 = !DILocation(line: 177, column: 56, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8170, file: !689, discriminator: 2)
!8170 = distinct !DILexicalBlock(scope: !8165, file: !689, line: 177, column: 25)
!8171 = !DILocation(line: 177, column: 61, scope: !8169)
!8172 = !DILocation(line: 177, column: 113, scope: !8169)
!8173 = !DILocation(line: 177, column: 118, scope: !8169)
!8174 = !DILocation(line: 177, column: 100, scope: !8169)
!8175 = !DILocation(line: 177, column: 45, scope: !8169)
!8176 = !DILocation(line: 177, column: 19, scope: !8169)
!8177 = !DILocation(line: 177, column: 28, scope: !8169)
!8178 = !DILocation(line: 177, column: 34, scope: !8169)
!8179 = !DILocation(line: 177, column: 31, scope: !8169)
!8180 = !DILocation(line: 177, column: 72, scope: !8169)
!8181 = !DILocation(line: 177, column: 76, scope: !8169)
!8182 = !DILocation(line: 177, column: 88, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !8184, file: !689, discriminator: 3)
!8184 = distinct !DILexicalBlock(scope: !8170, file: !689, line: 177, column: 72)
!8185 = !DILocation(line: 177, column: 81, scope: !8183)
!8186 = !DILocation(line: 177, column: 93, scope: !8187)
!8187 = !DILexicalBlockFile(scope: !8170, file: !689, discriminator: 4)
!8188 = !DILocation(line: 177, column: 106, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8165, file: !689, discriminator: 5)
!8190 = !DILocation(line: 178, column: 47, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8161, file: !689, line: 178, column: 21)
!8192 = !DILocation(line: 178, column: 21, scope: !8191)
!8193 = !DILocation(line: 178, column: 30, scope: !8191)
!8194 = !DILocation(line: 178, column: 21, scope: !8161)
!8195 = !DILocation(line: 179, column: 21, scope: !8191)
!8196 = distinct !{!8196, !8195}
!8197 = !DILocation(line: 179, column: 26, scope: !8198)
!8198 = !DILexicalBlockFile(scope: !8199, file: !689, discriminator: 1)
!8199 = distinct !DILexicalBlock(scope: !8191, file: !689, line: 179, column: 24)
!8200 = distinct !{!8200, !8201}
!8201 = !DILocation(line: 179, column: 26, scope: !8199)
!8202 = !DILocation(line: 179, column: 54, scope: !8203)
!8203 = !DILexicalBlockFile(scope: !8204, file: !689, discriminator: 2)
!8204 = distinct !DILexicalBlock(scope: !8199, file: !689, line: 179, column: 29)
!8205 = !DILocation(line: 179, column: 59, scope: !8203)
!8206 = !DILocation(line: 179, column: 117, scope: !8203)
!8207 = !DILocation(line: 179, column: 122, scope: !8203)
!8208 = !DILocation(line: 179, column: 104, scope: !8203)
!8209 = !DILocation(line: 179, column: 55, scope: !8203)
!8210 = !DILocation(line: 179, column: 23, scope: !8203)
!8211 = !DILocation(line: 179, column: 32, scope: !8203)
!8212 = !DILocation(line: 179, column: 38, scope: !8203)
!8213 = !DILocation(line: 179, column: 35, scope: !8203)
!8214 = !DILocation(line: 179, column: 65, scope: !8203)
!8215 = !DILocation(line: 179, column: 69, scope: !8203)
!8216 = !DILocation(line: 179, column: 81, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !8218, file: !689, discriminator: 3)
!8218 = distinct !DILexicalBlock(scope: !8204, file: !689, line: 179, column: 65)
!8219 = !DILocation(line: 179, column: 74, scope: !8217)
!8220 = !DILocation(line: 179, column: 86, scope: !8221)
!8221 = !DILexicalBlockFile(scope: !8204, file: !689, discriminator: 4)
!8222 = !DILocation(line: 179, column: 99, scope: !8223)
!8223 = !DILexicalBlockFile(scope: !8199, file: !689, discriminator: 5)
!8224 = !DILocation(line: 179, column: 99, scope: !8225)
!8225 = !DILexicalBlockFile(scope: !8199, file: !689, discriminator: 6)
!8226 = !DILocation(line: 180, column: 13, scope: !8161)
!8227 = !DILocation(line: 176, column: 50, scope: !8228)
!8228 = !DILexicalBlockFile(scope: !8157, file: !689, discriminator: 2)
!8229 = !DILocation(line: 176, column: 13, scope: !8228)
!8230 = distinct !{!8230, !8231}
!8231 = !DILocation(line: 176, column: 13, scope: !8153)
!8232 = !DILocation(line: 181, column: 20, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8153, file: !689, line: 181, column: 13)
!8234 = !DILocation(line: 181, column: 18, scope: !8233)
!8235 = !DILocation(line: 181, column: 25, scope: !8236)
!8236 = !DILexicalBlockFile(scope: !8237, file: !689, discriminator: 1)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !689, line: 181, column: 13)
!8238 = !DILocation(line: 181, column: 27, scope: !8236)
!8239 = !DILocation(line: 181, column: 13, scope: !8236)
!8240 = !DILocation(line: 182, column: 17, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8237, file: !689, line: 181, column: 37)
!8242 = distinct !{!8242, !8240}
!8243 = !DILocation(line: 182, column: 22, scope: !8244)
!8244 = !DILexicalBlockFile(scope: !8245, file: !689, discriminator: 1)
!8245 = distinct !DILexicalBlock(scope: !8241, file: !689, line: 182, column: 20)
!8246 = distinct !{!8246, !8247}
!8247 = !DILocation(line: 182, column: 22, scope: !8245)
!8248 = !DILocation(line: 182, column: 56, scope: !8249)
!8249 = !DILexicalBlockFile(scope: !8250, file: !689, discriminator: 2)
!8250 = distinct !DILexicalBlock(scope: !8245, file: !689, line: 182, column: 25)
!8251 = !DILocation(line: 182, column: 61, scope: !8249)
!8252 = !DILocation(line: 182, column: 114, scope: !8249)
!8253 = !DILocation(line: 182, column: 119, scope: !8249)
!8254 = !DILocation(line: 182, column: 101, scope: !8249)
!8255 = !DILocation(line: 182, column: 46, scope: !8249)
!8256 = !DILocation(line: 182, column: 19, scope: !8249)
!8257 = !DILocation(line: 182, column: 28, scope: !8249)
!8258 = !DILocation(line: 182, column: 34, scope: !8249)
!8259 = !DILocation(line: 182, column: 31, scope: !8249)
!8260 = !DILocation(line: 182, column: 73, scope: !8249)
!8261 = !DILocation(line: 182, column: 77, scope: !8249)
!8262 = !DILocation(line: 182, column: 89, scope: !8263)
!8263 = !DILexicalBlockFile(scope: !8264, file: !689, discriminator: 3)
!8264 = distinct !DILexicalBlock(scope: !8250, file: !689, line: 182, column: 73)
!8265 = !DILocation(line: 182, column: 82, scope: !8263)
!8266 = !DILocation(line: 182, column: 94, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !8250, file: !689, discriminator: 4)
!8268 = !DILocation(line: 182, column: 107, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !8245, file: !689, discriminator: 5)
!8270 = !DILocation(line: 183, column: 48, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8241, file: !689, line: 183, column: 21)
!8272 = !DILocation(line: 183, column: 21, scope: !8271)
!8273 = !DILocation(line: 183, column: 30, scope: !8271)
!8274 = !DILocation(line: 183, column: 21, scope: !8241)
!8275 = !DILocation(line: 184, column: 21, scope: !8271)
!8276 = distinct !{!8276, !8275}
!8277 = !DILocation(line: 184, column: 26, scope: !8278)
!8278 = !DILexicalBlockFile(scope: !8279, file: !689, discriminator: 1)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !689, line: 184, column: 24)
!8280 = distinct !{!8280, !8281}
!8281 = !DILocation(line: 184, column: 26, scope: !8279)
!8282 = !DILocation(line: 184, column: 54, scope: !8283)
!8283 = !DILexicalBlockFile(scope: !8284, file: !689, discriminator: 2)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !689, line: 184, column: 29)
!8285 = !DILocation(line: 184, column: 59, scope: !8283)
!8286 = !DILocation(line: 184, column: 118, scope: !8283)
!8287 = !DILocation(line: 184, column: 123, scope: !8283)
!8288 = !DILocation(line: 184, column: 105, scope: !8283)
!8289 = !DILocation(line: 184, column: 56, scope: !8283)
!8290 = !DILocation(line: 184, column: 23, scope: !8283)
!8291 = !DILocation(line: 184, column: 32, scope: !8283)
!8292 = !DILocation(line: 184, column: 38, scope: !8283)
!8293 = !DILocation(line: 184, column: 35, scope: !8283)
!8294 = !DILocation(line: 184, column: 66, scope: !8283)
!8295 = !DILocation(line: 184, column: 70, scope: !8283)
!8296 = !DILocation(line: 184, column: 82, scope: !8297)
!8297 = !DILexicalBlockFile(scope: !8298, file: !689, discriminator: 3)
!8298 = distinct !DILexicalBlock(scope: !8284, file: !689, line: 184, column: 66)
!8299 = !DILocation(line: 184, column: 75, scope: !8297)
!8300 = !DILocation(line: 184, column: 87, scope: !8301)
!8301 = !DILexicalBlockFile(scope: !8284, file: !689, discriminator: 4)
!8302 = !DILocation(line: 184, column: 100, scope: !8303)
!8303 = !DILexicalBlockFile(scope: !8279, file: !689, discriminator: 5)
!8304 = !DILocation(line: 184, column: 100, scope: !8305)
!8305 = !DILexicalBlockFile(scope: !8279, file: !689, discriminator: 6)
!8306 = !DILocation(line: 185, column: 13, scope: !8241)
!8307 = !DILocation(line: 181, column: 33, scope: !8308)
!8308 = !DILexicalBlockFile(scope: !8237, file: !689, discriminator: 2)
!8309 = !DILocation(line: 181, column: 13, scope: !8308)
!8310 = distinct !{!8310, !8311}
!8311 = !DILocation(line: 181, column: 13, scope: !8153)
!8312 = !DILocation(line: 186, column: 9, scope: !8153)
!8313 = !DILocation(line: 187, column: 5, scope: !8122)
!8314 = !DILocation(line: 189, column: 5, scope: !8031)
!8315 = !DILocation(line: 190, column: 1, scope: !8031)
!8316 = distinct !DISubprogram(name: "cbs_vp9_write_quantization_params", scope: !689, file: !689, line: 192, type: !711, isLocal: true, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!8317 = !DILocalVariable(name: "ctx", arg: 1, scope: !8316, file: !689, line: 192, type: !637)
!8318 = !DILocation(line: 192, column: 69, scope: !8316)
!8319 = !DILocalVariable(name: "rw", arg: 2, scope: !8316, file: !689, line: 192, type: !713)
!8320 = !DILocation(line: 192, column: 89, scope: !8316)
!8321 = !DILocalVariable(name: "current", arg: 3, scope: !8316, file: !689, line: 193, type: !704)
!8322 = !DILocation(line: 193, column: 57, scope: !8316)
!8323 = !DILocalVariable(name: "err", scope: !8316, file: !689, line: 195, type: !503)
!8324 = !DILocation(line: 195, column: 9, scope: !8316)
!8325 = !DILocation(line: 197, column: 5, scope: !8316)
!8326 = distinct !{!8326, !8325}
!8327 = !DILocation(line: 197, column: 10, scope: !8328)
!8328 = !DILexicalBlockFile(scope: !8329, file: !689, discriminator: 1)
!8329 = distinct !DILexicalBlock(scope: !8316, file: !689, line: 197, column: 8)
!8330 = distinct !{!8330, !8331}
!8331 = !DILocation(line: 197, column: 10, scope: !8329)
!8332 = !DILocation(line: 197, column: 44, scope: !8333)
!8333 = !DILexicalBlockFile(scope: !8334, file: !689, discriminator: 2)
!8334 = distinct !DILexicalBlock(scope: !8329, file: !689, line: 197, column: 13)
!8335 = !DILocation(line: 197, column: 49, scope: !8333)
!8336 = !DILocation(line: 197, column: 7, scope: !8333)
!8337 = !DILocation(line: 197, column: 16, scope: !8333)
!8338 = !DILocation(line: 197, column: 22, scope: !8333)
!8339 = !DILocation(line: 197, column: 19, scope: !8333)
!8340 = !DILocation(line: 197, column: 51, scope: !8333)
!8341 = !DILocation(line: 197, column: 55, scope: !8333)
!8342 = !DILocation(line: 197, column: 67, scope: !8343)
!8343 = !DILexicalBlockFile(scope: !8344, file: !689, discriminator: 3)
!8344 = distinct !DILexicalBlock(scope: !8334, file: !689, line: 197, column: 51)
!8345 = !DILocation(line: 197, column: 60, scope: !8343)
!8346 = !DILocation(line: 197, column: 72, scope: !8347)
!8347 = !DILexicalBlockFile(scope: !8334, file: !689, discriminator: 4)
!8348 = !DILocation(line: 197, column: 85, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !8329, file: !689, discriminator: 5)
!8350 = !DILocation(line: 199, column: 5, scope: !8316)
!8351 = distinct !{!8351, !8350}
!8352 = !DILocation(line: 199, column: 10, scope: !8353)
!8353 = !DILexicalBlockFile(scope: !8354, file: !689, discriminator: 1)
!8354 = distinct !DILexicalBlock(scope: !8316, file: !689, line: 199, column: 8)
!8355 = distinct !{!8355, !8356}
!8356 = !DILocation(line: 199, column: 10, scope: !8354)
!8357 = !DILocation(line: 199, column: 15, scope: !8358)
!8358 = !DILexicalBlockFile(scope: !8359, file: !689, discriminator: 2)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !689, line: 199, column: 13)
!8360 = distinct !{!8360, !8361}
!8361 = !DILocation(line: 199, column: 15, scope: !8359)
!8362 = !DILocation(line: 199, column: 49, scope: !8363)
!8363 = !DILexicalBlockFile(scope: !8364, file: !689, discriminator: 3)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !689, line: 199, column: 18)
!8365 = !DILocation(line: 199, column: 54, scope: !8363)
!8366 = !DILocation(line: 199, column: 9, scope: !8363)
!8367 = !DILocation(line: 199, column: 18, scope: !8363)
!8368 = !DILocation(line: 199, column: 8, scope: !8363)
!8369 = !DILocation(line: 199, column: 7, scope: !8363)
!8370 = !DILocation(line: 199, column: 27, scope: !8363)
!8371 = !DILocation(line: 199, column: 24, scope: !8363)
!8372 = !DILocation(line: 199, column: 55, scope: !8363)
!8373 = !DILocation(line: 199, column: 59, scope: !8363)
!8374 = !DILocation(line: 199, column: 71, scope: !8375)
!8375 = !DILexicalBlockFile(scope: !8376, file: !689, discriminator: 4)
!8376 = distinct !DILexicalBlock(scope: !8364, file: !689, line: 199, column: 55)
!8377 = !DILocation(line: 199, column: 64, scope: !8375)
!8378 = !DILocation(line: 199, column: 76, scope: !8379)
!8379 = !DILexicalBlockFile(scope: !8364, file: !689, discriminator: 5)
!8380 = !DILocation(line: 199, column: 89, scope: !8381)
!8381 = !DILexicalBlockFile(scope: !8359, file: !689, discriminator: 6)
!8382 = !DILocation(line: 199, column: 106, scope: !8383)
!8383 = !DILexicalBlockFile(scope: !8384, file: !689, discriminator: 7)
!8384 = distinct !DILexicalBlock(scope: !8354, file: !689, line: 199, column: 106)
!8385 = !DILocation(line: 199, column: 115, scope: !8383)
!8386 = !DILocation(line: 199, column: 129, scope: !8387)
!8387 = !DILexicalBlockFile(scope: !8384, file: !689, discriminator: 8)
!8388 = distinct !{!8388, !8389}
!8389 = !DILocation(line: 199, column: 129, scope: !8384)
!8390 = !DILocation(line: 199, column: 134, scope: !8391)
!8391 = !DILexicalBlockFile(scope: !8392, file: !689, discriminator: 9)
!8392 = distinct !DILexicalBlock(scope: !8384, file: !689, line: 199, column: 132)
!8393 = distinct !{!8393, !8394}
!8394 = !DILocation(line: 199, column: 134, scope: !8392)
!8395 = !DILocation(line: 199, column: 162, scope: !8396)
!8396 = !DILexicalBlockFile(scope: !8397, file: !689, discriminator: 10)
!8397 = distinct !DILexicalBlock(scope: !8392, file: !689, line: 199, column: 137)
!8398 = !DILocation(line: 199, column: 167, scope: !8396)
!8399 = !DILocation(line: 199, column: 7, scope: !8396)
!8400 = !DILocation(line: 199, column: 16, scope: !8396)
!8401 = !DILocation(line: 199, column: 146, scope: !8396)
!8402 = !DILocation(line: 199, column: 143, scope: !8396)
!8403 = !DILocation(line: 199, column: 36, scope: !8396)
!8404 = !DILocation(line: 199, column: 40, scope: !8396)
!8405 = !DILocation(line: 199, column: 52, scope: !8406)
!8406 = !DILexicalBlockFile(scope: !8407, file: !689, discriminator: 11)
!8407 = distinct !DILexicalBlock(scope: !8397, file: !689, line: 199, column: 36)
!8408 = !DILocation(line: 199, column: 45, scope: !8406)
!8409 = !DILocation(line: 199, column: 57, scope: !8410)
!8410 = !DILexicalBlockFile(scope: !8397, file: !689, discriminator: 12)
!8411 = !DILocation(line: 199, column: 70, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !8392, file: !689, discriminator: 13)
!8413 = !DILocation(line: 199, column: 70, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !8392, file: !689, discriminator: 14)
!8415 = !DILocation(line: 199, column: 83, scope: !8416)
!8416 = !DILexicalBlockFile(scope: !8354, file: !689, discriminator: 15)
!8417 = !DILocation(line: 200, column: 5, scope: !8316)
!8418 = distinct !{!8418, !8417}
!8419 = !DILocation(line: 200, column: 10, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !8421, file: !689, discriminator: 1)
!8421 = distinct !DILexicalBlock(scope: !8316, file: !689, line: 200, column: 8)
!8422 = distinct !{!8422, !8423}
!8423 = !DILocation(line: 200, column: 10, scope: !8421)
!8424 = !DILocation(line: 200, column: 15, scope: !8425)
!8425 = !DILexicalBlockFile(scope: !8426, file: !689, discriminator: 2)
!8426 = distinct !DILexicalBlock(scope: !8421, file: !689, line: 200, column: 13)
!8427 = distinct !{!8427, !8428}
!8428 = !DILocation(line: 200, column: 15, scope: !8426)
!8429 = !DILocation(line: 200, column: 49, scope: !8430)
!8430 = !DILexicalBlockFile(scope: !8431, file: !689, discriminator: 3)
!8431 = distinct !DILexicalBlock(scope: !8426, file: !689, line: 200, column: 18)
!8432 = !DILocation(line: 200, column: 54, scope: !8430)
!8433 = !DILocation(line: 200, column: 9, scope: !8430)
!8434 = !DILocation(line: 200, column: 18, scope: !8430)
!8435 = !DILocation(line: 200, column: 8, scope: !8430)
!8436 = !DILocation(line: 200, column: 7, scope: !8430)
!8437 = !DILocation(line: 200, column: 27, scope: !8430)
!8438 = !DILocation(line: 200, column: 24, scope: !8430)
!8439 = !DILocation(line: 200, column: 56, scope: !8430)
!8440 = !DILocation(line: 200, column: 60, scope: !8430)
!8441 = !DILocation(line: 200, column: 72, scope: !8442)
!8442 = !DILexicalBlockFile(scope: !8443, file: !689, discriminator: 4)
!8443 = distinct !DILexicalBlock(scope: !8431, file: !689, line: 200, column: 56)
!8444 = !DILocation(line: 200, column: 65, scope: !8442)
!8445 = !DILocation(line: 200, column: 77, scope: !8446)
!8446 = !DILexicalBlockFile(scope: !8431, file: !689, discriminator: 5)
!8447 = !DILocation(line: 200, column: 90, scope: !8448)
!8448 = !DILexicalBlockFile(scope: !8426, file: !689, discriminator: 6)
!8449 = !DILocation(line: 200, column: 107, scope: !8450)
!8450 = !DILexicalBlockFile(scope: !8451, file: !689, discriminator: 7)
!8451 = distinct !DILexicalBlock(scope: !8421, file: !689, line: 200, column: 107)
!8452 = !DILocation(line: 200, column: 116, scope: !8450)
!8453 = !DILocation(line: 200, column: 131, scope: !8454)
!8454 = !DILexicalBlockFile(scope: !8451, file: !689, discriminator: 8)
!8455 = distinct !{!8455, !8456}
!8456 = !DILocation(line: 200, column: 131, scope: !8451)
!8457 = !DILocation(line: 200, column: 136, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !8459, file: !689, discriminator: 9)
!8459 = distinct !DILexicalBlock(scope: !8451, file: !689, line: 200, column: 134)
!8460 = distinct !{!8460, !8461}
!8461 = !DILocation(line: 200, column: 136, scope: !8459)
!8462 = !DILocation(line: 200, column: 164, scope: !8463)
!8463 = !DILexicalBlockFile(scope: !8464, file: !689, discriminator: 10)
!8464 = distinct !DILexicalBlock(scope: !8459, file: !689, line: 200, column: 139)
!8465 = !DILocation(line: 200, column: 169, scope: !8463)
!8466 = !DILocation(line: 200, column: 7, scope: !8463)
!8467 = !DILocation(line: 200, column: 16, scope: !8463)
!8468 = !DILocation(line: 200, column: 148, scope: !8463)
!8469 = !DILocation(line: 200, column: 145, scope: !8463)
!8470 = !DILocation(line: 200, column: 37, scope: !8463)
!8471 = !DILocation(line: 200, column: 41, scope: !8463)
!8472 = !DILocation(line: 200, column: 53, scope: !8473)
!8473 = !DILexicalBlockFile(scope: !8474, file: !689, discriminator: 11)
!8474 = distinct !DILexicalBlock(scope: !8464, file: !689, line: 200, column: 37)
!8475 = !DILocation(line: 200, column: 46, scope: !8473)
!8476 = !DILocation(line: 200, column: 58, scope: !8477)
!8477 = !DILexicalBlockFile(scope: !8464, file: !689, discriminator: 12)
!8478 = !DILocation(line: 200, column: 71, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8459, file: !689, discriminator: 13)
!8480 = !DILocation(line: 200, column: 71, scope: !8481)
!8481 = !DILexicalBlockFile(scope: !8459, file: !689, discriminator: 14)
!8482 = !DILocation(line: 200, column: 84, scope: !8483)
!8483 = !DILexicalBlockFile(scope: !8421, file: !689, discriminator: 15)
!8484 = !DILocation(line: 201, column: 5, scope: !8316)
!8485 = distinct !{!8485, !8484}
!8486 = !DILocation(line: 201, column: 10, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8488, file: !689, discriminator: 1)
!8488 = distinct !DILexicalBlock(scope: !8316, file: !689, line: 201, column: 8)
!8489 = distinct !{!8489, !8490}
!8490 = !DILocation(line: 201, column: 10, scope: !8488)
!8491 = !DILocation(line: 201, column: 15, scope: !8492)
!8492 = !DILexicalBlockFile(scope: !8493, file: !689, discriminator: 2)
!8493 = distinct !DILexicalBlock(scope: !8488, file: !689, line: 201, column: 13)
!8494 = distinct !{!8494, !8495}
!8495 = !DILocation(line: 201, column: 15, scope: !8493)
!8496 = !DILocation(line: 201, column: 49, scope: !8497)
!8497 = !DILexicalBlockFile(scope: !8498, file: !689, discriminator: 3)
!8498 = distinct !DILexicalBlock(scope: !8493, file: !689, line: 201, column: 18)
!8499 = !DILocation(line: 201, column: 54, scope: !8497)
!8500 = !DILocation(line: 201, column: 9, scope: !8497)
!8501 = !DILocation(line: 201, column: 18, scope: !8497)
!8502 = !DILocation(line: 201, column: 8, scope: !8497)
!8503 = !DILocation(line: 201, column: 7, scope: !8497)
!8504 = !DILocation(line: 201, column: 27, scope: !8497)
!8505 = !DILocation(line: 201, column: 24, scope: !8497)
!8506 = !DILocation(line: 201, column: 56, scope: !8497)
!8507 = !DILocation(line: 201, column: 60, scope: !8497)
!8508 = !DILocation(line: 201, column: 72, scope: !8509)
!8509 = !DILexicalBlockFile(scope: !8510, file: !689, discriminator: 4)
!8510 = distinct !DILexicalBlock(scope: !8498, file: !689, line: 201, column: 56)
!8511 = !DILocation(line: 201, column: 65, scope: !8509)
!8512 = !DILocation(line: 201, column: 77, scope: !8513)
!8513 = !DILexicalBlockFile(scope: !8498, file: !689, discriminator: 5)
!8514 = !DILocation(line: 201, column: 90, scope: !8515)
!8515 = !DILexicalBlockFile(scope: !8493, file: !689, discriminator: 6)
!8516 = !DILocation(line: 201, column: 107, scope: !8517)
!8517 = !DILexicalBlockFile(scope: !8518, file: !689, discriminator: 7)
!8518 = distinct !DILexicalBlock(scope: !8488, file: !689, line: 201, column: 107)
!8519 = !DILocation(line: 201, column: 116, scope: !8517)
!8520 = !DILocation(line: 201, column: 131, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !8518, file: !689, discriminator: 8)
!8522 = distinct !{!8522, !8523}
!8523 = !DILocation(line: 201, column: 131, scope: !8518)
!8524 = !DILocation(line: 201, column: 136, scope: !8525)
!8525 = !DILexicalBlockFile(scope: !8526, file: !689, discriminator: 9)
!8526 = distinct !DILexicalBlock(scope: !8518, file: !689, line: 201, column: 134)
!8527 = distinct !{!8527, !8528}
!8528 = !DILocation(line: 201, column: 136, scope: !8526)
!8529 = !DILocation(line: 201, column: 164, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !8531, file: !689, discriminator: 10)
!8531 = distinct !DILexicalBlock(scope: !8526, file: !689, line: 201, column: 139)
!8532 = !DILocation(line: 201, column: 169, scope: !8530)
!8533 = !DILocation(line: 201, column: 7, scope: !8530)
!8534 = !DILocation(line: 201, column: 16, scope: !8530)
!8535 = !DILocation(line: 201, column: 148, scope: !8530)
!8536 = !DILocation(line: 201, column: 145, scope: !8530)
!8537 = !DILocation(line: 201, column: 37, scope: !8530)
!8538 = !DILocation(line: 201, column: 41, scope: !8530)
!8539 = !DILocation(line: 201, column: 53, scope: !8540)
!8540 = !DILexicalBlockFile(scope: !8541, file: !689, discriminator: 11)
!8541 = distinct !DILexicalBlock(scope: !8531, file: !689, line: 201, column: 37)
!8542 = !DILocation(line: 201, column: 46, scope: !8540)
!8543 = !DILocation(line: 201, column: 58, scope: !8544)
!8544 = !DILexicalBlockFile(scope: !8531, file: !689, discriminator: 12)
!8545 = !DILocation(line: 201, column: 71, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !8526, file: !689, discriminator: 13)
!8547 = !DILocation(line: 201, column: 71, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !8526, file: !689, discriminator: 14)
!8549 = !DILocation(line: 201, column: 84, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !8488, file: !689, discriminator: 15)
!8551 = !DILocation(line: 203, column: 5, scope: !8316)
!8552 = !DILocation(line: 204, column: 1, scope: !8316)
!8553 = !DILocalVariable(name: "ctx", arg: 1, scope: !710, file: !689, line: 206, type: !637)
!8554 = !DILocation(line: 206, column: 69, scope: !710)
!8555 = !DILocalVariable(name: "rw", arg: 2, scope: !710, file: !689, line: 206, type: !713)
!8556 = !DILocation(line: 206, column: 89, scope: !710)
!8557 = !DILocalVariable(name: "current", arg: 3, scope: !710, file: !689, line: 207, type: !704)
!8558 = !DILocation(line: 207, column: 57, scope: !710)
!8559 = !DILocalVariable(name: "err", scope: !710, file: !689, line: 212, type: !503)
!8560 = !DILocation(line: 212, column: 9, scope: !710)
!8561 = !DILocalVariable(name: "i", scope: !710, file: !689, line: 212, type: !503)
!8562 = !DILocation(line: 212, column: 14, scope: !710)
!8563 = !DILocalVariable(name: "j", scope: !710, file: !689, line: 212, type: !503)
!8564 = !DILocation(line: 212, column: 17, scope: !710)
!8565 = !DILocation(line: 214, column: 5, scope: !710)
!8566 = distinct !{!8566, !8565}
!8567 = !DILocation(line: 214, column: 10, scope: !8568)
!8568 = !DILexicalBlockFile(scope: !8569, file: !689, discriminator: 1)
!8569 = distinct !DILexicalBlock(scope: !710, file: !689, line: 214, column: 8)
!8570 = distinct !{!8570, !8571}
!8571 = !DILocation(line: 214, column: 10, scope: !8569)
!8572 = !DILocation(line: 214, column: 44, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8574, file: !689, discriminator: 2)
!8574 = distinct !DILexicalBlock(scope: !8569, file: !689, line: 214, column: 13)
!8575 = !DILocation(line: 214, column: 49, scope: !8573)
!8576 = !DILocation(line: 214, column: 7, scope: !8573)
!8577 = !DILocation(line: 214, column: 16, scope: !8573)
!8578 = !DILocation(line: 214, column: 22, scope: !8573)
!8579 = !DILocation(line: 214, column: 19, scope: !8573)
!8580 = !DILocation(line: 214, column: 61, scope: !8573)
!8581 = !DILocation(line: 214, column: 65, scope: !8573)
!8582 = !DILocation(line: 214, column: 77, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !8584, file: !689, discriminator: 3)
!8584 = distinct !DILexicalBlock(scope: !8574, file: !689, line: 214, column: 61)
!8585 = !DILocation(line: 214, column: 70, scope: !8583)
!8586 = !DILocation(line: 214, column: 82, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !8574, file: !689, discriminator: 4)
!8588 = !DILocation(line: 214, column: 95, scope: !8589)
!8589 = !DILexicalBlockFile(scope: !8569, file: !689, discriminator: 5)
!8590 = !DILocation(line: 216, column: 9, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !710, file: !689, line: 216, column: 9)
!8592 = !DILocation(line: 216, column: 18, scope: !8591)
!8593 = !DILocation(line: 216, column: 9, scope: !710)
!8594 = !DILocation(line: 217, column: 9, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8591, file: !689, line: 216, column: 40)
!8596 = distinct !{!8596, !8594}
!8597 = !DILocation(line: 217, column: 14, scope: !8598)
!8598 = !DILexicalBlockFile(scope: !8599, file: !689, discriminator: 1)
!8599 = distinct !DILexicalBlock(scope: !8595, file: !689, line: 217, column: 12)
!8600 = distinct !{!8600, !8601}
!8601 = !DILocation(line: 217, column: 14, scope: !8599)
!8602 = !DILocation(line: 217, column: 48, scope: !8603)
!8603 = !DILexicalBlockFile(scope: !8604, file: !689, discriminator: 2)
!8604 = distinct !DILexicalBlock(scope: !8599, file: !689, line: 217, column: 17)
!8605 = !DILocation(line: 217, column: 53, scope: !8603)
!8606 = !DILocation(line: 217, column: 11, scope: !8603)
!8607 = !DILocation(line: 217, column: 20, scope: !8603)
!8608 = !DILocation(line: 217, column: 26, scope: !8603)
!8609 = !DILocation(line: 217, column: 23, scope: !8603)
!8610 = !DILocation(line: 217, column: 68, scope: !8603)
!8611 = !DILocation(line: 217, column: 72, scope: !8603)
!8612 = !DILocation(line: 217, column: 84, scope: !8613)
!8613 = !DILexicalBlockFile(scope: !8614, file: !689, discriminator: 3)
!8614 = distinct !DILexicalBlock(scope: !8604, file: !689, line: 217, column: 68)
!8615 = !DILocation(line: 217, column: 77, scope: !8613)
!8616 = !DILocation(line: 217, column: 89, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8604, file: !689, discriminator: 4)
!8618 = !DILocation(line: 217, column: 102, scope: !8619)
!8619 = !DILexicalBlockFile(scope: !8599, file: !689, discriminator: 5)
!8620 = !DILocation(line: 218, column: 13, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8595, file: !689, line: 218, column: 13)
!8622 = !DILocation(line: 218, column: 22, scope: !8621)
!8623 = !DILocation(line: 218, column: 13, scope: !8595)
!8624 = !DILocation(line: 219, column: 20, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !689, line: 219, column: 13)
!8626 = distinct !DILexicalBlock(scope: !8621, file: !689, line: 218, column: 47)
!8627 = !DILocation(line: 219, column: 18, scope: !8625)
!8628 = !DILocation(line: 219, column: 25, scope: !8629)
!8629 = !DILexicalBlockFile(scope: !8630, file: !689, discriminator: 1)
!8630 = distinct !DILexicalBlock(scope: !8625, file: !689, line: 219, column: 13)
!8631 = !DILocation(line: 219, column: 27, scope: !8629)
!8632 = !DILocation(line: 219, column: 13, scope: !8629)
!8633 = !DILocation(line: 220, column: 17, scope: !8630)
!8634 = distinct !{!8634, !8633}
!8635 = !DILocation(line: 220, column: 22, scope: !8636)
!8636 = !DILexicalBlockFile(scope: !8637, file: !689, discriminator: 1)
!8637 = distinct !DILexicalBlock(scope: !8630, file: !689, line: 220, column: 20)
!8638 = distinct !{!8638, !8639}
!8639 = !DILocation(line: 220, column: 22, scope: !8637)
!8640 = !DILocation(line: 220, column: 27, scope: !8641)
!8641 = !DILexicalBlockFile(scope: !8642, file: !689, discriminator: 2)
!8642 = distinct !DILexicalBlock(scope: !8637, file: !689, line: 220, column: 25)
!8643 = distinct !{!8643, !8644}
!8644 = !DILocation(line: 220, column: 27, scope: !8642)
!8645 = !DILocation(line: 220, column: 61, scope: !8646)
!8646 = !DILexicalBlockFile(scope: !8647, file: !689, discriminator: 3)
!8647 = distinct !DILexicalBlock(scope: !8642, file: !689, line: 220, column: 30)
!8648 = !DILocation(line: 220, column: 66, scope: !8646)
!8649 = !DILocation(line: 220, column: 136, scope: !8646)
!8650 = !DILocation(line: 220, column: 141, scope: !8646)
!8651 = !DILocation(line: 220, column: 123, scope: !8646)
!8652 = !DILocation(line: 220, column: 52, scope: !8646)
!8653 = !DILocation(line: 220, column: 19, scope: !8646)
!8654 = !DILocation(line: 220, column: 28, scope: !8646)
!8655 = !DILocation(line: 220, column: 55, scope: !8646)
!8656 = !DILocation(line: 220, column: 39, scope: !8646)
!8657 = !DILocation(line: 220, column: 36, scope: !8646)
!8658 = !DILocation(line: 220, column: 86, scope: !8646)
!8659 = !DILocation(line: 220, column: 90, scope: !8646)
!8660 = !DILocation(line: 220, column: 102, scope: !8661)
!8661 = !DILexicalBlockFile(scope: !8662, file: !689, discriminator: 4)
!8662 = distinct !DILexicalBlock(scope: !8647, file: !689, line: 220, column: 86)
!8663 = !DILocation(line: 220, column: 95, scope: !8661)
!8664 = !DILocation(line: 220, column: 107, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !8647, file: !689, discriminator: 5)
!8666 = !DILocation(line: 220, column: 120, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !8642, file: !689, discriminator: 6)
!8668 = !DILocation(line: 220, column: 170, scope: !8669)
!8669 = !DILexicalBlockFile(scope: !8670, file: !689, discriminator: 7)
!8670 = distinct !DILexicalBlock(scope: !8637, file: !689, line: 220, column: 137)
!8671 = !DILocation(line: 220, column: 137, scope: !8669)
!8672 = !DILocation(line: 220, column: 146, scope: !8669)
!8673 = !DILocation(line: 220, column: 173, scope: !8669)
!8674 = !DILocation(line: 220, column: 181, scope: !8675)
!8675 = !DILexicalBlockFile(scope: !8670, file: !689, discriminator: 8)
!8676 = distinct !{!8676, !8677}
!8677 = !DILocation(line: 220, column: 181, scope: !8670)
!8678 = !DILocation(line: 220, column: 186, scope: !8679)
!8679 = !DILexicalBlockFile(scope: !8680, file: !689, discriminator: 9)
!8680 = distinct !DILexicalBlock(scope: !8670, file: !689, line: 220, column: 184)
!8681 = distinct !{!8681, !8682}
!8682 = !DILocation(line: 220, column: 186, scope: !8680)
!8683 = !DILocation(line: 220, column: 220, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8685, file: !689, discriminator: 10)
!8685 = distinct !DILexicalBlock(scope: !8680, file: !689, line: 220, column: 189)
!8686 = !DILocation(line: 220, column: 225, scope: !8684)
!8687 = !DILocation(line: 220, column: 289, scope: !8684)
!8688 = !DILocation(line: 220, column: 294, scope: !8684)
!8689 = !DILocation(line: 220, column: 276, scope: !8684)
!8690 = !DILocation(line: 220, column: 52, scope: !8684)
!8691 = !DILocation(line: 220, column: 19, scope: !8684)
!8692 = !DILocation(line: 220, column: 28, scope: !8684)
!8693 = !DILocation(line: 220, column: 198, scope: !8684)
!8694 = !DILocation(line: 220, column: 195, scope: !8684)
!8695 = !DILocation(line: 220, column: 79, scope: !8684)
!8696 = !DILocation(line: 220, column: 83, scope: !8684)
!8697 = !DILocation(line: 220, column: 95, scope: !8698)
!8698 = !DILexicalBlockFile(scope: !8699, file: !689, discriminator: 11)
!8699 = distinct !DILexicalBlock(scope: !8685, file: !689, line: 220, column: 79)
!8700 = !DILocation(line: 220, column: 88, scope: !8698)
!8701 = !DILocation(line: 220, column: 100, scope: !8702)
!8702 = !DILexicalBlockFile(scope: !8685, file: !689, discriminator: 12)
!8703 = !DILocation(line: 220, column: 113, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !8680, file: !689, discriminator: 13)
!8705 = !DILocation(line: 220, column: 113, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8680, file: !689, discriminator: 14)
!8707 = !DILocation(line: 220, column: 126, scope: !8708)
!8708 = !DILexicalBlockFile(scope: !8637, file: !689, discriminator: 15)
!8709 = !DILocation(line: 220, column: 126, scope: !8710)
!8710 = !DILexicalBlockFile(scope: !8637, file: !689, discriminator: 16)
!8711 = !DILocation(line: 219, column: 33, scope: !8712)
!8712 = !DILexicalBlockFile(scope: !8630, file: !689, discriminator: 2)
!8713 = !DILocation(line: 219, column: 13, scope: !8712)
!8714 = distinct !{!8714, !8715}
!8715 = !DILocation(line: 219, column: 13, scope: !8626)
!8716 = !DILocation(line: 221, column: 13, scope: !8626)
!8717 = distinct !{!8717, !8716}
!8718 = !DILocation(line: 221, column: 18, scope: !8719)
!8719 = !DILexicalBlockFile(scope: !8720, file: !689, discriminator: 1)
!8720 = distinct !DILexicalBlock(scope: !8626, file: !689, line: 221, column: 16)
!8721 = distinct !{!8721, !8722}
!8722 = !DILocation(line: 221, column: 18, scope: !8720)
!8723 = !DILocation(line: 221, column: 52, scope: !8724)
!8724 = !DILexicalBlockFile(scope: !8725, file: !689, discriminator: 2)
!8725 = distinct !DILexicalBlock(scope: !8720, file: !689, line: 221, column: 21)
!8726 = !DILocation(line: 221, column: 57, scope: !8724)
!8727 = !DILocation(line: 221, column: 15, scope: !8724)
!8728 = !DILocation(line: 221, column: 24, scope: !8724)
!8729 = !DILocation(line: 221, column: 30, scope: !8724)
!8730 = !DILocation(line: 221, column: 27, scope: !8724)
!8731 = !DILocation(line: 221, column: 77, scope: !8724)
!8732 = !DILocation(line: 221, column: 81, scope: !8724)
!8733 = !DILocation(line: 221, column: 93, scope: !8734)
!8734 = !DILexicalBlockFile(scope: !8735, file: !689, discriminator: 3)
!8735 = distinct !DILexicalBlock(scope: !8725, file: !689, line: 221, column: 77)
!8736 = !DILocation(line: 221, column: 86, scope: !8734)
!8737 = !DILocation(line: 221, column: 98, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8725, file: !689, discriminator: 4)
!8739 = !DILocation(line: 221, column: 111, scope: !8740)
!8740 = !DILexicalBlockFile(scope: !8720, file: !689, discriminator: 5)
!8741 = !DILocation(line: 222, column: 20, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8626, file: !689, line: 222, column: 13)
!8743 = !DILocation(line: 222, column: 18, scope: !8742)
!8744 = !DILocation(line: 222, column: 25, scope: !8745)
!8745 = !DILexicalBlockFile(scope: !8746, file: !689, discriminator: 1)
!8746 = distinct !DILexicalBlock(scope: !8742, file: !689, line: 222, column: 13)
!8747 = !DILocation(line: 222, column: 27, scope: !8745)
!8748 = !DILocation(line: 222, column: 13, scope: !8745)
!8749 = !DILocation(line: 223, column: 21, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !689, line: 223, column: 21)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !689, line: 222, column: 37)
!8752 = !DILocation(line: 223, column: 30, scope: !8750)
!8753 = !DILocation(line: 223, column: 21, scope: !8751)
!8754 = !DILocation(line: 224, column: 21, scope: !8750)
!8755 = distinct !{!8755, !8754}
!8756 = !DILocation(line: 224, column: 26, scope: !8757)
!8757 = !DILexicalBlockFile(scope: !8758, file: !689, discriminator: 1)
!8758 = distinct !DILexicalBlock(scope: !8750, file: !689, line: 224, column: 24)
!8759 = distinct !{!8759, !8760}
!8760 = !DILocation(line: 224, column: 26, scope: !8758)
!8761 = !DILocation(line: 224, column: 31, scope: !8762)
!8762 = !DILexicalBlockFile(scope: !8763, file: !689, discriminator: 2)
!8763 = distinct !DILexicalBlock(scope: !8758, file: !689, line: 224, column: 29)
!8764 = distinct !{!8764, !8765}
!8765 = !DILocation(line: 224, column: 31, scope: !8763)
!8766 = !DILocation(line: 224, column: 65, scope: !8767)
!8767 = !DILexicalBlockFile(scope: !8768, file: !689, discriminator: 3)
!8768 = distinct !DILexicalBlock(scope: !8763, file: !689, line: 224, column: 34)
!8769 = !DILocation(line: 224, column: 70, scope: !8767)
!8770 = !DILocation(line: 224, column: 139, scope: !8767)
!8771 = !DILocation(line: 224, column: 144, scope: !8767)
!8772 = !DILocation(line: 224, column: 126, scope: !8767)
!8773 = !DILocation(line: 224, column: 55, scope: !8767)
!8774 = !DILocation(line: 224, column: 23, scope: !8767)
!8775 = !DILocation(line: 224, column: 32, scope: !8767)
!8776 = !DILocation(line: 224, column: 58, scope: !8767)
!8777 = !DILocation(line: 224, column: 43, scope: !8767)
!8778 = !DILocation(line: 224, column: 40, scope: !8767)
!8779 = !DILocation(line: 224, column: 89, scope: !8767)
!8780 = !DILocation(line: 224, column: 93, scope: !8767)
!8781 = !DILocation(line: 224, column: 105, scope: !8782)
!8782 = !DILexicalBlockFile(scope: !8783, file: !689, discriminator: 4)
!8783 = distinct !DILexicalBlock(scope: !8768, file: !689, line: 224, column: 89)
!8784 = !DILocation(line: 224, column: 98, scope: !8782)
!8785 = !DILocation(line: 224, column: 110, scope: !8786)
!8786 = !DILexicalBlockFile(scope: !8768, file: !689, discriminator: 5)
!8787 = !DILocation(line: 224, column: 123, scope: !8788)
!8788 = !DILexicalBlockFile(scope: !8763, file: !689, discriminator: 6)
!8789 = !DILocation(line: 224, column: 172, scope: !8790)
!8790 = !DILexicalBlockFile(scope: !8791, file: !689, discriminator: 7)
!8791 = distinct !DILexicalBlock(scope: !8758, file: !689, line: 224, column: 140)
!8792 = !DILocation(line: 224, column: 140, scope: !8790)
!8793 = !DILocation(line: 224, column: 149, scope: !8790)
!8794 = !DILocation(line: 224, column: 175, scope: !8790)
!8795 = !DILocation(line: 224, column: 183, scope: !8796)
!8796 = !DILexicalBlockFile(scope: !8791, file: !689, discriminator: 8)
!8797 = distinct !{!8797, !8798}
!8798 = !DILocation(line: 224, column: 183, scope: !8791)
!8799 = !DILocation(line: 224, column: 188, scope: !8800)
!8800 = !DILexicalBlockFile(scope: !8801, file: !689, discriminator: 9)
!8801 = distinct !DILexicalBlock(scope: !8791, file: !689, line: 224, column: 186)
!8802 = distinct !{!8802, !8803}
!8803 = !DILocation(line: 224, column: 188, scope: !8801)
!8804 = !DILocation(line: 224, column: 222, scope: !8805)
!8805 = !DILexicalBlockFile(scope: !8806, file: !689, discriminator: 10)
!8806 = distinct !DILexicalBlock(scope: !8801, file: !689, line: 224, column: 191)
!8807 = !DILocation(line: 224, column: 227, scope: !8805)
!8808 = !DILocation(line: 224, column: 290, scope: !8805)
!8809 = !DILocation(line: 224, column: 295, scope: !8805)
!8810 = !DILocation(line: 224, column: 277, scope: !8805)
!8811 = !DILocation(line: 224, column: 55, scope: !8805)
!8812 = !DILocation(line: 224, column: 23, scope: !8805)
!8813 = !DILocation(line: 224, column: 32, scope: !8805)
!8814 = !DILocation(line: 224, column: 200, scope: !8805)
!8815 = !DILocation(line: 224, column: 197, scope: !8805)
!8816 = !DILocation(line: 224, column: 82, scope: !8805)
!8817 = !DILocation(line: 224, column: 86, scope: !8805)
!8818 = !DILocation(line: 224, column: 98, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !8820, file: !689, discriminator: 11)
!8820 = distinct !DILexicalBlock(scope: !8806, file: !689, line: 224, column: 82)
!8821 = !DILocation(line: 224, column: 91, scope: !8819)
!8822 = !DILocation(line: 224, column: 103, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !8806, file: !689, discriminator: 12)
!8824 = !DILocation(line: 224, column: 116, scope: !8825)
!8825 = !DILexicalBlockFile(scope: !8801, file: !689, discriminator: 13)
!8826 = !DILocation(line: 224, column: 116, scope: !8827)
!8827 = !DILexicalBlockFile(scope: !8801, file: !689, discriminator: 14)
!8828 = !DILocation(line: 224, column: 129, scope: !8829)
!8829 = !DILexicalBlockFile(scope: !8758, file: !689, discriminator: 15)
!8830 = !DILocation(line: 224, column: 129, scope: !8831)
!8831 = !DILexicalBlockFile(scope: !8758, file: !689, discriminator: 16)
!8832 = !DILocation(line: 226, column: 21, scope: !8750)
!8833 = distinct !{!8833, !8832}
!8834 = !DILocation(line: 226, column: 62, scope: !8835)
!8835 = !DILexicalBlockFile(scope: !8836, file: !689, discriminator: 1)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !689, line: 226, column: 30)
!8837 = distinct !DILexicalBlock(scope: !8750, file: !689, line: 226, column: 24)
!8838 = !DILocation(line: 226, column: 30, scope: !8835)
!8839 = !DILocation(line: 226, column: 39, scope: !8835)
!8840 = !DILocation(line: 226, column: 65, scope: !8835)
!8841 = !DILocation(line: 226, column: 84, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8843, file: !689, discriminator: 2)
!8843 = distinct !DILexicalBlock(scope: !8836, file: !689, line: 226, column: 75)
!8844 = !DILocation(line: 226, column: 89, scope: !8842)
!8845 = !DILocation(line: 226, column: 97, scope: !8842)
!8846 = !DILocation(line: 226, column: 65, scope: !8842)
!8847 = !DILocation(line: 226, column: 74, scope: !8842)
!8848 = !DILocation(line: 226, column: 56, scope: !8842)
!8849 = !DILocation(line: 226, column: 77, scope: !8842)
!8850 = !DILocation(line: 226, column: 118, scope: !8842)
!8851 = !DILocation(line: 226, column: 120, scope: !8852)
!8852 = !DILexicalBlockFile(scope: !8837, file: !689, discriminator: 3)
!8853 = !DILocation(line: 227, column: 13, scope: !8751)
!8854 = !DILocation(line: 222, column: 33, scope: !8855)
!8855 = !DILexicalBlockFile(scope: !8746, file: !689, discriminator: 2)
!8856 = !DILocation(line: 222, column: 13, scope: !8855)
!8857 = distinct !{!8857, !8858}
!8858 = !DILocation(line: 222, column: 13, scope: !8626)
!8859 = !DILocation(line: 228, column: 9, scope: !8626)
!8860 = !DILocation(line: 230, column: 9, scope: !8595)
!8861 = distinct !{!8861, !8860}
!8862 = !DILocation(line: 230, column: 14, scope: !8863)
!8863 = !DILexicalBlockFile(scope: !8864, file: !689, discriminator: 1)
!8864 = distinct !DILexicalBlock(scope: !8595, file: !689, line: 230, column: 12)
!8865 = distinct !{!8865, !8866}
!8866 = !DILocation(line: 230, column: 14, scope: !8864)
!8867 = !DILocation(line: 230, column: 48, scope: !8868)
!8868 = !DILexicalBlockFile(scope: !8869, file: !689, discriminator: 2)
!8869 = distinct !DILexicalBlock(scope: !8864, file: !689, line: 230, column: 17)
!8870 = !DILocation(line: 230, column: 53, scope: !8868)
!8871 = !DILocation(line: 230, column: 11, scope: !8868)
!8872 = !DILocation(line: 230, column: 20, scope: !8868)
!8873 = !DILocation(line: 230, column: 26, scope: !8868)
!8874 = !DILocation(line: 230, column: 23, scope: !8868)
!8875 = !DILocation(line: 230, column: 69, scope: !8868)
!8876 = !DILocation(line: 230, column: 73, scope: !8868)
!8877 = !DILocation(line: 230, column: 85, scope: !8878)
!8878 = !DILexicalBlockFile(scope: !8879, file: !689, discriminator: 3)
!8879 = distinct !DILexicalBlock(scope: !8869, file: !689, line: 230, column: 69)
!8880 = !DILocation(line: 230, column: 78, scope: !8878)
!8881 = !DILocation(line: 230, column: 90, scope: !8882)
!8882 = !DILexicalBlockFile(scope: !8869, file: !689, discriminator: 4)
!8883 = !DILocation(line: 230, column: 103, scope: !8884)
!8884 = !DILexicalBlockFile(scope: !8864, file: !689, discriminator: 5)
!8885 = !DILocation(line: 231, column: 13, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8595, file: !689, line: 231, column: 13)
!8887 = !DILocation(line: 231, column: 22, scope: !8886)
!8888 = !DILocation(line: 231, column: 13, scope: !8595)
!8889 = !DILocation(line: 232, column: 13, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8886, file: !689, line: 231, column: 48)
!8891 = distinct !{!8891, !8889}
!8892 = !DILocation(line: 232, column: 18, scope: !8893)
!8893 = !DILexicalBlockFile(scope: !8894, file: !689, discriminator: 1)
!8894 = distinct !DILexicalBlock(scope: !8890, file: !689, line: 232, column: 16)
!8895 = distinct !{!8895, !8896}
!8896 = !DILocation(line: 232, column: 18, scope: !8894)
!8897 = !DILocation(line: 232, column: 52, scope: !8898)
!8898 = !DILexicalBlockFile(scope: !8899, file: !689, discriminator: 2)
!8899 = distinct !DILexicalBlock(scope: !8894, file: !689, line: 232, column: 21)
!8900 = !DILocation(line: 232, column: 57, scope: !8898)
!8901 = !DILocation(line: 232, column: 15, scope: !8898)
!8902 = !DILocation(line: 232, column: 24, scope: !8898)
!8903 = !DILocation(line: 232, column: 30, scope: !8898)
!8904 = !DILocation(line: 232, column: 27, scope: !8898)
!8905 = !DILocation(line: 232, column: 81, scope: !8898)
!8906 = !DILocation(line: 232, column: 85, scope: !8898)
!8907 = !DILocation(line: 232, column: 97, scope: !8908)
!8908 = !DILexicalBlockFile(scope: !8909, file: !689, discriminator: 3)
!8909 = distinct !DILexicalBlock(scope: !8899, file: !689, line: 232, column: 81)
!8910 = !DILocation(line: 232, column: 90, scope: !8908)
!8911 = !DILocation(line: 232, column: 102, scope: !8912)
!8912 = !DILexicalBlockFile(scope: !8899, file: !689, discriminator: 4)
!8913 = !DILocation(line: 232, column: 115, scope: !8914)
!8914 = !DILexicalBlockFile(scope: !8894, file: !689, discriminator: 5)
!8915 = !DILocation(line: 233, column: 20, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8890, file: !689, line: 233, column: 13)
!8917 = !DILocation(line: 233, column: 18, scope: !8916)
!8918 = !DILocation(line: 233, column: 25, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !8920, file: !689, discriminator: 1)
!8920 = distinct !DILexicalBlock(scope: !8916, file: !689, line: 233, column: 13)
!8921 = !DILocation(line: 233, column: 27, scope: !8919)
!8922 = !DILocation(line: 233, column: 13, scope: !8919)
!8923 = !DILocation(line: 234, column: 24, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !689, line: 234, column: 17)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !689, line: 233, column: 52)
!8926 = !DILocation(line: 234, column: 22, scope: !8924)
!8927 = !DILocation(line: 234, column: 29, scope: !8928)
!8928 = !DILexicalBlockFile(scope: !8929, file: !689, discriminator: 1)
!8929 = distinct !DILexicalBlock(scope: !8924, file: !689, line: 234, column: 17)
!8930 = !DILocation(line: 234, column: 31, scope: !8928)
!8931 = !DILocation(line: 234, column: 17, scope: !8928)
!8932 = !DILocation(line: 235, column: 21, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !689, line: 234, column: 55)
!8934 = distinct !{!8934, !8932}
!8935 = !DILocation(line: 235, column: 26, scope: !8936)
!8936 = !DILexicalBlockFile(scope: !8937, file: !689, discriminator: 1)
!8937 = distinct !DILexicalBlock(scope: !8933, file: !689, line: 235, column: 24)
!8938 = distinct !{!8938, !8939}
!8939 = !DILocation(line: 235, column: 26, scope: !8937)
!8940 = !DILocation(line: 235, column: 60, scope: !8941)
!8941 = !DILexicalBlockFile(scope: !8942, file: !689, discriminator: 2)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !689, line: 235, column: 29)
!8943 = !DILocation(line: 235, column: 65, scope: !8941)
!8944 = !DILocation(line: 235, column: 119, scope: !8941)
!8945 = !DILocation(line: 235, column: 124, scope: !8941)
!8946 = !DILocation(line: 235, column: 127, scope: !8941)
!8947 = !DILocation(line: 235, column: 106, scope: !8941)
!8948 = !DILocation(line: 235, column: 51, scope: !8941)
!8949 = !DILocation(line: 235, column: 23, scope: !8941)
!8950 = !DILocation(line: 235, column: 48, scope: !8941)
!8951 = !DILocation(line: 235, column: 32, scope: !8941)
!8952 = !DILocation(line: 235, column: 38, scope: !8941)
!8953 = !DILocation(line: 235, column: 35, scope: !8941)
!8954 = !DILocation(line: 235, column: 78, scope: !8941)
!8955 = !DILocation(line: 235, column: 82, scope: !8941)
!8956 = !DILocation(line: 235, column: 94, scope: !8957)
!8957 = !DILexicalBlockFile(scope: !8958, file: !689, discriminator: 3)
!8958 = distinct !DILexicalBlock(scope: !8942, file: !689, line: 235, column: 78)
!8959 = !DILocation(line: 235, column: 87, scope: !8957)
!8960 = !DILocation(line: 235, column: 99, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !8942, file: !689, discriminator: 4)
!8962 = !DILocation(line: 235, column: 112, scope: !8963)
!8963 = !DILexicalBlockFile(scope: !8937, file: !689, discriminator: 5)
!8964 = !DILocation(line: 236, column: 53, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8933, file: !689, line: 236, column: 25)
!8966 = !DILocation(line: 236, column: 25, scope: !8965)
!8967 = !DILocation(line: 236, column: 50, scope: !8965)
!8968 = !DILocation(line: 236, column: 34, scope: !8965)
!8969 = !DILocation(line: 236, column: 56, scope: !8965)
!8970 = !DILocation(line: 237, column: 51, scope: !8965)
!8971 = !DILocation(line: 237, column: 25, scope: !8965)
!8972 = !DILocation(line: 236, column: 25, scope: !8973)
!8973 = !DILexicalBlockFile(scope: !8933, file: !689, discriminator: 1)
!8974 = !DILocation(line: 238, column: 25, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8965, file: !689, line: 237, column: 55)
!8976 = distinct !{!8976, !8974}
!8977 = !DILocation(line: 238, column: 30, scope: !8978)
!8978 = !DILexicalBlockFile(scope: !8979, file: !689, discriminator: 1)
!8979 = distinct !DILexicalBlock(scope: !8975, file: !689, line: 238, column: 28)
!8980 = distinct !{!8980, !8981}
!8981 = !DILocation(line: 238, column: 30, scope: !8979)
!8982 = !DILocation(line: 238, column: 64, scope: !8983)
!8983 = !DILexicalBlockFile(scope: !8984, file: !689, discriminator: 2)
!8984 = distinct !DILexicalBlock(scope: !8979, file: !689, line: 238, column: 33)
!8985 = !DILocation(line: 238, column: 69, scope: !8983)
!8986 = !DILocation(line: 238, column: 99, scope: !8983)
!8987 = !DILocation(line: 238, column: 73, scope: !8983)
!8988 = !DILocation(line: 238, column: 148, scope: !8983)
!8989 = !DILocation(line: 238, column: 153, scope: !8983)
!8990 = !DILocation(line: 238, column: 156, scope: !8983)
!8991 = !DILocation(line: 238, column: 135, scope: !8983)
!8992 = !DILocation(line: 238, column: 53, scope: !8983)
!8993 = !DILocation(line: 238, column: 27, scope: !8983)
!8994 = !DILocation(line: 238, column: 50, scope: !8983)
!8995 = !DILocation(line: 238, column: 36, scope: !8983)
!8996 = !DILocation(line: 238, column: 92, scope: !8983)
!8997 = !DILocation(line: 238, column: 66, scope: !8983)
!8998 = !DILocation(line: 238, column: 63, scope: !8983)
!8999 = !DILocation(line: 238, column: 96, scope: !8983)
!9000 = !DILocation(line: 238, column: 42, scope: !8983)
!9001 = !DILocation(line: 238, column: 39, scope: !8983)
!9002 = !DILocation(line: 238, column: 107, scope: !8983)
!9003 = !DILocation(line: 238, column: 111, scope: !8983)
!9004 = !DILocation(line: 238, column: 123, scope: !9005)
!9005 = !DILexicalBlockFile(scope: !9006, file: !689, discriminator: 3)
!9006 = distinct !DILexicalBlock(scope: !8984, file: !689, line: 238, column: 107)
!9007 = !DILocation(line: 238, column: 116, scope: !9005)
!9008 = !DILocation(line: 238, column: 128, scope: !9009)
!9009 = !DILexicalBlockFile(scope: !8984, file: !689, discriminator: 4)
!9010 = !DILocation(line: 238, column: 141, scope: !9011)
!9011 = !DILexicalBlockFile(scope: !8979, file: !689, discriminator: 5)
!9012 = !DILocation(line: 240, column: 57, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8975, file: !689, line: 240, column: 29)
!9014 = !DILocation(line: 240, column: 29, scope: !9013)
!9015 = !DILocation(line: 240, column: 29, scope: !8975)
!9016 = !DILocation(line: 241, column: 29, scope: !9013)
!9017 = distinct !{!9017, !9016}
!9018 = !DILocation(line: 241, column: 34, scope: !9019)
!9019 = !DILexicalBlockFile(scope: !9020, file: !689, discriminator: 1)
!9020 = distinct !DILexicalBlock(scope: !9013, file: !689, line: 241, column: 32)
!9021 = distinct !{!9021, !9022}
!9022 = !DILocation(line: 241, column: 34, scope: !9020)
!9023 = !DILocation(line: 241, column: 68, scope: !9024)
!9024 = !DILexicalBlockFile(scope: !9025, file: !689, discriminator: 2)
!9025 = distinct !DILexicalBlock(scope: !9020, file: !689, line: 241, column: 37)
!9026 = !DILocation(line: 241, column: 73, scope: !9024)
!9027 = !DILocation(line: 241, column: 124, scope: !9024)
!9028 = !DILocation(line: 241, column: 129, scope: !9024)
!9029 = !DILocation(line: 241, column: 132, scope: !9024)
!9030 = !DILocation(line: 241, column: 111, scope: !9024)
!9031 = !DILocation(line: 241, column: 56, scope: !9024)
!9032 = !DILocation(line: 241, column: 31, scope: !9024)
!9033 = !DILocation(line: 241, column: 53, scope: !9024)
!9034 = !DILocation(line: 241, column: 40, scope: !9024)
!9035 = !DILocation(line: 241, column: 46, scope: !9024)
!9036 = !DILocation(line: 241, column: 43, scope: !9024)
!9037 = !DILocation(line: 241, column: 83, scope: !9024)
!9038 = !DILocation(line: 241, column: 87, scope: !9024)
!9039 = !DILocation(line: 241, column: 99, scope: !9040)
!9040 = !DILexicalBlockFile(scope: !9041, file: !689, discriminator: 3)
!9041 = distinct !DILexicalBlock(scope: !9025, file: !689, line: 241, column: 83)
!9042 = !DILocation(line: 241, column: 92, scope: !9040)
!9043 = !DILocation(line: 241, column: 104, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !9025, file: !689, discriminator: 4)
!9045 = !DILocation(line: 241, column: 117, scope: !9046)
!9046 = !DILexicalBlockFile(scope: !9020, file: !689, discriminator: 5)
!9047 = !DILocation(line: 241, column: 117, scope: !9048)
!9048 = !DILexicalBlockFile(scope: !9020, file: !689, discriminator: 6)
!9049 = !DILocation(line: 243, column: 29, scope: !9013)
!9050 = distinct !{!9050, !9049}
!9051 = !DILocation(line: 243, column: 63, scope: !9052)
!9052 = !DILexicalBlockFile(scope: !9053, file: !689, discriminator: 1)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !689, line: 243, column: 38)
!9054 = distinct !DILexicalBlock(scope: !9013, file: !689, line: 243, column: 32)
!9055 = !DILocation(line: 243, column: 38, scope: !9052)
!9056 = !DILocation(line: 243, column: 60, scope: !9052)
!9057 = !DILocation(line: 243, column: 47, scope: !9052)
!9058 = !DILocation(line: 243, column: 66, scope: !9052)
!9059 = !DILocation(line: 243, column: 83, scope: !9060)
!9060 = !DILexicalBlockFile(scope: !9061, file: !689, discriminator: 2)
!9061 = distinct !DILexicalBlock(scope: !9053, file: !689, line: 243, column: 74)
!9062 = !DILocation(line: 243, column: 88, scope: !9060)
!9063 = !DILocation(line: 243, column: 91, scope: !9060)
!9064 = !DILocation(line: 243, column: 66, scope: !9060)
!9065 = !DILocation(line: 243, column: 75, scope: !9060)
!9066 = !DILocation(line: 243, column: 57, scope: !9060)
!9067 = !DILocation(line: 243, column: 76, scope: !9060)
!9068 = !DILocation(line: 243, column: 110, scope: !9060)
!9069 = !DILocation(line: 243, column: 112, scope: !9070)
!9070 = !DILexicalBlockFile(scope: !9054, file: !689, discriminator: 3)
!9071 = !DILocation(line: 244, column: 21, scope: !8975)
!9072 = !DILocation(line: 245, column: 25, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !8965, file: !689, line: 244, column: 28)
!9074 = distinct !{!9074, !9072}
!9075 = !DILocation(line: 245, column: 60, scope: !9076)
!9076 = !DILexicalBlockFile(scope: !9077, file: !689, discriminator: 1)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !689, line: 245, column: 34)
!9078 = distinct !DILexicalBlock(scope: !9073, file: !689, line: 245, column: 28)
!9079 = !DILocation(line: 245, column: 34, scope: !9076)
!9080 = !DILocation(line: 245, column: 57, scope: !9076)
!9081 = !DILocation(line: 245, column: 43, scope: !9076)
!9082 = !DILocation(line: 245, column: 63, scope: !9076)
!9083 = !DILocation(line: 245, column: 80, scope: !9084)
!9084 = !DILexicalBlockFile(scope: !9085, file: !689, discriminator: 2)
!9085 = distinct !DILexicalBlock(scope: !9077, file: !689, line: 245, column: 71)
!9086 = !DILocation(line: 245, column: 85, scope: !9084)
!9087 = !DILocation(line: 245, column: 89, scope: !9084)
!9088 = !DILocation(line: 245, column: 63, scope: !9084)
!9089 = !DILocation(line: 245, column: 86, scope: !9084)
!9090 = !DILocation(line: 245, column: 72, scope: !9084)
!9091 = !DILocation(line: 245, column: 54, scope: !9084)
!9092 = !DILocation(line: 245, column: 73, scope: !9084)
!9093 = !DILocation(line: 245, column: 108, scope: !9084)
!9094 = !DILocation(line: 245, column: 110, scope: !9095)
!9095 = !DILexicalBlockFile(scope: !9078, file: !689, discriminator: 3)
!9096 = !DILocation(line: 246, column: 25, scope: !9073)
!9097 = distinct !{!9097, !9096}
!9098 = !DILocation(line: 246, column: 59, scope: !9099)
!9099 = !DILexicalBlockFile(scope: !9100, file: !689, discriminator: 1)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !689, line: 246, column: 34)
!9101 = distinct !DILexicalBlock(scope: !9073, file: !689, line: 246, column: 28)
!9102 = !DILocation(line: 246, column: 34, scope: !9099)
!9103 = !DILocation(line: 246, column: 56, scope: !9099)
!9104 = !DILocation(line: 246, column: 43, scope: !9099)
!9105 = !DILocation(line: 246, column: 62, scope: !9099)
!9106 = !DILocation(line: 246, column: 79, scope: !9107)
!9107 = !DILexicalBlockFile(scope: !9108, file: !689, discriminator: 2)
!9108 = distinct !DILexicalBlock(scope: !9100, file: !689, line: 246, column: 70)
!9109 = !DILocation(line: 246, column: 84, scope: !9107)
!9110 = !DILocation(line: 246, column: 87, scope: !9107)
!9111 = !DILocation(line: 246, column: 62, scope: !9107)
!9112 = !DILocation(line: 246, column: 71, scope: !9107)
!9113 = !DILocation(line: 246, column: 53, scope: !9107)
!9114 = !DILocation(line: 246, column: 72, scope: !9107)
!9115 = !DILocation(line: 246, column: 106, scope: !9107)
!9116 = !DILocation(line: 246, column: 108, scope: !9117)
!9117 = !DILexicalBlockFile(scope: !9101, file: !689, discriminator: 3)
!9118 = !DILocation(line: 248, column: 17, scope: !8933)
!9119 = !DILocation(line: 234, column: 51, scope: !9120)
!9120 = !DILexicalBlockFile(scope: !8929, file: !689, discriminator: 2)
!9121 = !DILocation(line: 234, column: 17, scope: !9120)
!9122 = distinct !{!9122, !9123}
!9123 = !DILocation(line: 234, column: 17, scope: !8925)
!9124 = !DILocation(line: 249, column: 13, scope: !8925)
!9125 = !DILocation(line: 233, column: 48, scope: !9126)
!9126 = !DILexicalBlockFile(scope: !8920, file: !689, discriminator: 2)
!9127 = !DILocation(line: 233, column: 13, scope: !9126)
!9128 = distinct !{!9128, !9129}
!9129 = !DILocation(line: 233, column: 13, scope: !8890)
!9130 = !DILocation(line: 250, column: 9, scope: !8890)
!9131 = !DILocation(line: 251, column: 5, scope: !8595)
!9132 = !DILocation(line: 253, column: 5, scope: !710)
!9133 = !DILocation(line: 254, column: 1, scope: !710)
!9134 = distinct !DISubprogram(name: "cbs_vp9_write_tile_info", scope: !689, file: !689, line: 256, type: !711, isLocal: true, isDefinition: true, scopeLine: 258, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9135 = !DILocalVariable(name: "ctx", arg: 1, scope: !9134, file: !689, line: 256, type: !637)
!9136 = !DILocation(line: 256, column: 59, scope: !9134)
!9137 = !DILocalVariable(name: "rw", arg: 2, scope: !9134, file: !689, line: 256, type: !713)
!9138 = !DILocation(line: 256, column: 79, scope: !9134)
!9139 = !DILocalVariable(name: "current", arg: 3, scope: !9134, file: !689, line: 257, type: !704)
!9140 = !DILocation(line: 257, column: 47, scope: !9134)
!9141 = !DILocalVariable(name: "vp9", scope: !9134, file: !689, line: 259, type: !1040)
!9142 = !DILocation(line: 259, column: 31, scope: !9134)
!9143 = !DILocation(line: 259, column: 37, scope: !9134)
!9144 = !DILocation(line: 259, column: 42, scope: !9134)
!9145 = !DILocalVariable(name: "min_log2_tile_cols", scope: !9134, file: !689, line: 260, type: !503)
!9146 = !DILocation(line: 260, column: 9, scope: !9134)
!9147 = !DILocalVariable(name: "max_log2_tile_cols", scope: !9134, file: !689, line: 260, type: !503)
!9148 = !DILocation(line: 260, column: 29, scope: !9134)
!9149 = !DILocalVariable(name: "err", scope: !9134, file: !689, line: 261, type: !503)
!9150 = !DILocation(line: 261, column: 9, scope: !9134)
!9151 = !DILocation(line: 263, column: 24, scope: !9134)
!9152 = !DILocation(line: 264, column: 5, scope: !9134)
!9153 = !DILocation(line: 264, column: 39, scope: !9154)
!9154 = !DILexicalBlockFile(scope: !9134, file: !689, discriminator: 1)
!9155 = !DILocation(line: 264, column: 36, scope: !9154)
!9156 = !DILocation(line: 264, column: 61, scope: !9154)
!9157 = !DILocation(line: 264, column: 66, scope: !9154)
!9158 = !DILocation(line: 264, column: 59, scope: !9154)
!9159 = !DILocation(line: 264, column: 5, scope: !9154)
!9160 = !DILocation(line: 265, column: 9, scope: !9134)
!9161 = !DILocation(line: 264, column: 5, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !9134, file: !689, discriminator: 2)
!9163 = distinct !{!9163, !9152}
!9164 = !DILocation(line: 266, column: 24, scope: !9134)
!9165 = !DILocation(line: 267, column: 5, scope: !9134)
!9166 = !DILocation(line: 267, column: 13, scope: !9154)
!9167 = !DILocation(line: 267, column: 18, scope: !9154)
!9168 = !DILocation(line: 267, column: 32, scope: !9154)
!9169 = !DILocation(line: 267, column: 51, scope: !9154)
!9170 = !DILocation(line: 267, column: 28, scope: !9154)
!9171 = !DILocation(line: 267, column: 57, scope: !9154)
!9172 = !DILocation(line: 267, column: 5, scope: !9154)
!9173 = !DILocation(line: 268, column: 9, scope: !9134)
!9174 = !DILocation(line: 267, column: 5, scope: !9162)
!9175 = distinct !{!9175, !9165}
!9176 = !DILocation(line: 270, column: 5, scope: !9134)
!9177 = distinct !{!9177, !9176}
!9178 = !DILocation(line: 270, column: 10, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !9180, file: !689, discriminator: 1)
!9180 = distinct !DILexicalBlock(scope: !9134, file: !689, line: 270, column: 8)
!9181 = distinct !{!9181, !9182}
!9182 = !DILocation(line: 270, column: 10, scope: !9180)
!9183 = !DILocation(line: 270, column: 46, scope: !9184)
!9184 = !DILexicalBlockFile(scope: !9185, file: !689, discriminator: 2)
!9185 = distinct !DILexicalBlock(scope: !9180, file: !689, line: 270, column: 13)
!9186 = !DILocation(line: 270, column: 51, scope: !9184)
!9187 = !DILocation(line: 270, column: 55, scope: !9184)
!9188 = !DILocation(line: 270, column: 75, scope: !9184)
!9189 = !DILocation(line: 270, column: 113, scope: !9184)
!9190 = !DILocation(line: 270, column: 122, scope: !9184)
!9191 = !DILocation(line: 270, column: 22, scope: !9184)
!9192 = !DILocation(line: 270, column: 19, scope: !9184)
!9193 = !DILocation(line: 270, column: 144, scope: !9184)
!9194 = !DILocation(line: 270, column: 148, scope: !9184)
!9195 = !DILocation(line: 270, column: 160, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !9197, file: !689, discriminator: 3)
!9197 = distinct !DILexicalBlock(scope: !9185, file: !689, line: 270, column: 144)
!9198 = !DILocation(line: 270, column: 153, scope: !9196)
!9199 = !DILocation(line: 270, column: 165, scope: !9200)
!9200 = !DILexicalBlockFile(scope: !9185, file: !689, discriminator: 4)
!9201 = !DILocation(line: 270, column: 178, scope: !9202)
!9202 = !DILexicalBlockFile(scope: !9180, file: !689, discriminator: 5)
!9203 = !DILocation(line: 272, column: 5, scope: !9134)
!9204 = distinct !{!9204, !9203}
!9205 = !DILocation(line: 272, column: 10, scope: !9206)
!9206 = !DILexicalBlockFile(scope: !9207, file: !689, discriminator: 1)
!9207 = distinct !DILexicalBlock(scope: !9134, file: !689, line: 272, column: 8)
!9208 = distinct !{!9208, !9209}
!9209 = !DILocation(line: 272, column: 10, scope: !9207)
!9210 = !DILocation(line: 272, column: 46, scope: !9211)
!9211 = !DILexicalBlockFile(scope: !9212, file: !689, discriminator: 2)
!9212 = distinct !DILexicalBlock(scope: !9207, file: !689, line: 272, column: 13)
!9213 = !DILocation(line: 272, column: 51, scope: !9211)
!9214 = !DILocation(line: 272, column: 79, scope: !9211)
!9215 = !DILocation(line: 272, column: 88, scope: !9211)
!9216 = !DILocation(line: 272, column: 22, scope: !9211)
!9217 = !DILocation(line: 272, column: 19, scope: !9211)
!9218 = !DILocation(line: 272, column: 110, scope: !9211)
!9219 = !DILocation(line: 272, column: 114, scope: !9211)
!9220 = !DILocation(line: 272, column: 126, scope: !9221)
!9221 = !DILexicalBlockFile(scope: !9222, file: !689, discriminator: 3)
!9222 = distinct !DILexicalBlock(scope: !9212, file: !689, line: 272, column: 110)
!9223 = !DILocation(line: 272, column: 119, scope: !9221)
!9224 = !DILocation(line: 272, column: 131, scope: !9225)
!9225 = !DILexicalBlockFile(scope: !9212, file: !689, discriminator: 4)
!9226 = !DILocation(line: 272, column: 144, scope: !9227)
!9227 = !DILexicalBlockFile(scope: !9207, file: !689, discriminator: 5)
!9228 = !DILocation(line: 274, column: 5, scope: !9134)
!9229 = !DILocation(line: 275, column: 1, scope: !9134)
!9230 = distinct !DISubprogram(name: "cbs_vp9_write_s", scope: !625, file: !625, line: 64, type: !9231, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9231 = !DISubroutineType(types: !9232)
!9232 = !{!503, !637, !713, !503, !1854, !1857, !619}
!9233 = !DILocalVariable(name: "ctx", arg: 1, scope: !9230, file: !625, line: 64, type: !637)
!9234 = !DILocation(line: 64, column: 51, scope: !9230)
!9235 = !DILocalVariable(name: "pbc", arg: 2, scope: !9230, file: !625, line: 64, type: !713)
!9236 = !DILocation(line: 64, column: 71, scope: !9230)
!9237 = !DILocalVariable(name: "width", arg: 3, scope: !9230, file: !625, line: 65, type: !503)
!9238 = !DILocation(line: 65, column: 32, scope: !9230)
!9239 = !DILocalVariable(name: "name", arg: 4, scope: !9230, file: !625, line: 65, type: !1854)
!9240 = !DILocation(line: 65, column: 51, scope: !9230)
!9241 = !DILocalVariable(name: "subscripts", arg: 5, scope: !9230, file: !625, line: 66, type: !1857)
!9242 = !DILocation(line: 66, column: 39, scope: !9230)
!9243 = !DILocalVariable(name: "value", arg: 6, scope: !9230, file: !625, line: 66, type: !619)
!9244 = !DILocation(line: 66, column: 59, scope: !9230)
!9245 = !DILocalVariable(name: "magnitude", scope: !9230, file: !625, line: 68, type: !512)
!9246 = !DILocation(line: 68, column: 14, scope: !9230)
!9247 = !DILocalVariable(name: "sign", scope: !9230, file: !625, line: 69, type: !503)
!9248 = !DILocation(line: 69, column: 9, scope: !9230)
!9249 = !DILocation(line: 71, column: 23, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9230, file: !625, line: 71, column: 9)
!9251 = !DILocation(line: 71, column: 9, scope: !9250)
!9252 = !DILocation(line: 71, column: 30, scope: !9250)
!9253 = !DILocation(line: 71, column: 36, scope: !9250)
!9254 = !DILocation(line: 71, column: 28, scope: !9250)
!9255 = !DILocation(line: 71, column: 9, scope: !9230)
!9256 = !DILocation(line: 72, column: 9, scope: !9250)
!9257 = !DILocation(line: 74, column: 12, scope: !9230)
!9258 = !DILocation(line: 74, column: 18, scope: !9230)
!9259 = !DILocation(line: 74, column: 10, scope: !9230)
!9260 = !DILocation(line: 75, column: 17, scope: !9230)
!9261 = !DILocation(line: 75, column: 25, scope: !9262)
!9262 = !DILexicalBlockFile(scope: !9230, file: !625, discriminator: 1)
!9263 = !DILocation(line: 75, column: 24, scope: !9262)
!9264 = !DILocation(line: 75, column: 17, scope: !9262)
!9265 = !DILocation(line: 75, column: 33, scope: !9266)
!9266 = !DILexicalBlockFile(scope: !9230, file: !625, discriminator: 2)
!9267 = !DILocation(line: 75, column: 17, scope: !9266)
!9268 = !DILocation(line: 75, column: 17, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !9230, file: !625, discriminator: 3)
!9270 = !DILocation(line: 75, column: 15, scope: !9269)
!9271 = !DILocation(line: 77, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9230, file: !625, line: 77, column: 9)
!9273 = !DILocation(line: 77, column: 14, scope: !9272)
!9274 = !DILocation(line: 77, column: 9, scope: !9230)
!9275 = !DILocalVariable(name: "bits", scope: !9276, file: !625, line: 78, type: !1941)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !625, line: 77, column: 28)
!9277 = !DILocation(line: 78, column: 14, scope: !9276)
!9278 = !DILocalVariable(name: "i", scope: !9276, file: !625, line: 79, type: !503)
!9279 = !DILocation(line: 79, column: 13, scope: !9276)
!9280 = !DILocation(line: 80, column: 16, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9276, file: !625, line: 80, column: 9)
!9282 = !DILocation(line: 80, column: 14, scope: !9281)
!9283 = !DILocation(line: 80, column: 21, scope: !9284)
!9284 = !DILexicalBlockFile(scope: !9285, file: !625, discriminator: 1)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !625, line: 80, column: 9)
!9286 = !DILocation(line: 80, column: 25, scope: !9284)
!9287 = !DILocation(line: 80, column: 23, scope: !9284)
!9288 = !DILocation(line: 80, column: 9, scope: !9284)
!9289 = !DILocation(line: 81, column: 23, scope: !9285)
!9290 = !DILocation(line: 81, column: 37, scope: !9285)
!9291 = !DILocation(line: 81, column: 45, scope: !9285)
!9292 = !DILocation(line: 81, column: 43, scope: !9285)
!9293 = !DILocation(line: 81, column: 47, scope: !9285)
!9294 = !DILocation(line: 81, column: 33, scope: !9285)
!9295 = !DILocation(line: 81, column: 52, scope: !9285)
!9296 = !DILocation(line: 81, column: 18, scope: !9285)
!9297 = !DILocation(line: 81, column: 13, scope: !9285)
!9298 = !DILocation(line: 81, column: 21, scope: !9285)
!9299 = !DILocation(line: 80, column: 33, scope: !9300)
!9300 = !DILexicalBlockFile(scope: !9285, file: !625, discriminator: 2)
!9301 = !DILocation(line: 80, column: 9, scope: !9300)
!9302 = distinct !{!9302, !9303}
!9303 = !DILocation(line: 80, column: 9, scope: !9276)
!9304 = !DILocation(line: 82, column: 19, scope: !9276)
!9305 = !DILocation(line: 82, column: 14, scope: !9276)
!9306 = !DILocation(line: 82, column: 9, scope: !9276)
!9307 = !DILocation(line: 82, column: 17, scope: !9276)
!9308 = !DILocation(line: 83, column: 14, scope: !9276)
!9309 = !DILocation(line: 83, column: 16, scope: !9276)
!9310 = !DILocation(line: 83, column: 9, scope: !9276)
!9311 = !DILocation(line: 83, column: 21, scope: !9276)
!9312 = !DILocation(line: 85, column: 37, scope: !9276)
!9313 = !DILocation(line: 85, column: 57, scope: !9276)
!9314 = !DILocation(line: 85, column: 42, scope: !9276)
!9315 = !DILocation(line: 86, column: 37, scope: !9276)
!9316 = !DILocation(line: 86, column: 43, scope: !9276)
!9317 = !DILocation(line: 86, column: 55, scope: !9276)
!9318 = !DILocation(line: 86, column: 61, scope: !9276)
!9319 = !DILocation(line: 85, column: 9, scope: !9320)
!9320 = !DILexicalBlockFile(scope: !9276, file: !625, discriminator: 1)
!9321 = !DILocation(line: 87, column: 5, scope: !9276)
!9322 = !DILocation(line: 89, column: 14, scope: !9230)
!9323 = !DILocation(line: 89, column: 19, scope: !9230)
!9324 = !DILocation(line: 89, column: 26, scope: !9230)
!9325 = !DILocation(line: 89, column: 5, scope: !9230)
!9326 = !DILocation(line: 90, column: 14, scope: !9230)
!9327 = !DILocation(line: 90, column: 22, scope: !9230)
!9328 = !DILocation(line: 90, column: 5, scope: !9230)
!9329 = !DILocation(line: 92, column: 5, scope: !9230)
!9330 = !DILocation(line: 93, column: 1, scope: !9230)
!9331 = distinct !DISubprogram(name: "put_bits_left", scope: !715, file: !715, line: 93, type: !5890, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9332 = !DILocalVariable(name: "s", arg: 1, scope: !9331, file: !715, line: 93, type: !713)
!9333 = !DILocation(line: 93, column: 48, scope: !9331)
!9334 = !DILocation(line: 95, column: 13, scope: !9331)
!9335 = !DILocation(line: 95, column: 16, scope: !9331)
!9336 = !DILocation(line: 95, column: 26, scope: !9331)
!9337 = !DILocation(line: 95, column: 29, scope: !9331)
!9338 = !DILocation(line: 95, column: 24, scope: !9331)
!9339 = !DILocation(line: 95, column: 38, scope: !9331)
!9340 = !DILocation(line: 95, column: 42, scope: !9331)
!9341 = !DILocation(line: 95, column: 49, scope: !9331)
!9342 = !DILocation(line: 95, column: 52, scope: !9331)
!9343 = !DILocation(line: 95, column: 47, scope: !9331)
!9344 = !DILocation(line: 95, column: 12, scope: !9331)
!9345 = !DILocation(line: 95, column: 5, scope: !9331)
!9346 = distinct !DISubprogram(name: "put_bits", scope: !715, file: !715, line: 164, type: !9347, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9347 = !DISubroutineType(types: !9348)
!9348 = !{null, !713, !503, !504}
!9349 = !DILocation(line: 66, column: 98, scope: !2028, inlinedAt: !9350)
!9350 = distinct !DILocation(line: 197, column: 60, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !715, line: 196, column: 42)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !715, line: 196, column: 13)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !715, line: 193, column: 12)
!9354 = distinct !DILexicalBlock(scope: !9346, file: !715, line: 190, column: 9)
!9355 = !DILocalVariable(name: "s", arg: 1, scope: !9346, file: !715, line: 164, type: !713)
!9356 = !DILocation(line: 164, column: 44, scope: !9346)
!9357 = !DILocalVariable(name: "n", arg: 2, scope: !9346, file: !715, line: 164, type: !503)
!9358 = !DILocation(line: 164, column: 51, scope: !9346)
!9359 = !DILocalVariable(name: "value", arg: 3, scope: !9346, file: !715, line: 164, type: !504)
!9360 = !DILocation(line: 164, column: 67, scope: !9346)
!9361 = !DILocalVariable(name: "bit_buf", scope: !9346, file: !715, line: 166, type: !504)
!9362 = !DILocation(line: 166, column: 18, scope: !9346)
!9363 = !DILocalVariable(name: "bit_left", scope: !9346, file: !715, line: 167, type: !503)
!9364 = !DILocation(line: 167, column: 9, scope: !9346)
!9365 = !DILocation(line: 171, column: 15, scope: !9346)
!9366 = !DILocation(line: 171, column: 18, scope: !9346)
!9367 = !DILocation(line: 171, column: 13, scope: !9346)
!9368 = !DILocation(line: 172, column: 16, scope: !9346)
!9369 = !DILocation(line: 172, column: 19, scope: !9346)
!9370 = !DILocation(line: 172, column: 14, scope: !9346)
!9371 = !DILocation(line: 190, column: 9, scope: !9354)
!9372 = !DILocation(line: 190, column: 13, scope: !9354)
!9373 = !DILocation(line: 190, column: 11, scope: !9354)
!9374 = !DILocation(line: 190, column: 9, scope: !9346)
!9375 = !DILocation(line: 191, column: 20, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9354, file: !715, line: 190, column: 23)
!9377 = !DILocation(line: 191, column: 31, scope: !9376)
!9378 = !DILocation(line: 191, column: 28, scope: !9376)
!9379 = !DILocation(line: 191, column: 36, scope: !9376)
!9380 = !DILocation(line: 191, column: 34, scope: !9376)
!9381 = !DILocation(line: 191, column: 17, scope: !9376)
!9382 = !DILocation(line: 192, column: 21, scope: !9376)
!9383 = !DILocation(line: 192, column: 18, scope: !9376)
!9384 = !DILocation(line: 193, column: 5, scope: !9376)
!9385 = !DILocation(line: 194, column: 21, scope: !9353)
!9386 = !DILocation(line: 194, column: 17, scope: !9353)
!9387 = !DILocation(line: 195, column: 20, scope: !9353)
!9388 = !DILocation(line: 195, column: 30, scope: !9353)
!9389 = !DILocation(line: 195, column: 34, scope: !9353)
!9390 = !DILocation(line: 195, column: 32, scope: !9353)
!9391 = !DILocation(line: 195, column: 26, scope: !9353)
!9392 = !DILocation(line: 195, column: 17, scope: !9353)
!9393 = !DILocation(line: 196, column: 17, scope: !9352)
!9394 = !DILocation(line: 196, column: 20, scope: !9352)
!9395 = !DILocation(line: 196, column: 30, scope: !9352)
!9396 = !DILocation(line: 196, column: 33, scope: !9352)
!9397 = !DILocation(line: 196, column: 28, scope: !9352)
!9398 = !DILocation(line: 196, column: 15, scope: !9352)
!9399 = !DILocation(line: 196, column: 13, scope: !9353)
!9400 = !DILocation(line: 197, column: 71, scope: !9351)
!9401 = !DILocation(line: 197, column: 60, scope: !9351)
!9402 = !DILocation(line: 68, column: 16, scope: !2028, inlinedAt: !9350)
!9403 = !DILocation(line: 68, column: 19, scope: !2028, inlinedAt: !9350)
!9404 = !DILocation(line: 68, column: 24, scope: !2028, inlinedAt: !9350)
!9405 = !DILocation(line: 68, column: 38, scope: !2028, inlinedAt: !9350)
!9406 = !DILocation(line: 68, column: 41, scope: !2028, inlinedAt: !9350)
!9407 = !DILocation(line: 68, column: 46, scope: !2028, inlinedAt: !9350)
!9408 = !DILocation(line: 68, column: 34, scope: !2028, inlinedAt: !9350)
!9409 = !DILocation(line: 68, column: 57, scope: !2028, inlinedAt: !9350)
!9410 = !DILocation(line: 68, column: 69, scope: !2028, inlinedAt: !9350)
!9411 = !DILocation(line: 68, column: 72, scope: !2028, inlinedAt: !9350)
!9412 = !DILocation(line: 68, column: 79, scope: !2028, inlinedAt: !9350)
!9413 = !DILocation(line: 68, column: 84, scope: !2028, inlinedAt: !9350)
!9414 = !DILocation(line: 68, column: 99, scope: !2028, inlinedAt: !9350)
!9415 = !DILocation(line: 68, column: 102, scope: !2028, inlinedAt: !9350)
!9416 = !DILocation(line: 68, column: 109, scope: !2028, inlinedAt: !9350)
!9417 = !DILocation(line: 68, column: 114, scope: !2028, inlinedAt: !9350)
!9418 = !DILocation(line: 68, column: 94, scope: !2028, inlinedAt: !9350)
!9419 = !DILocation(line: 68, column: 63, scope: !2028, inlinedAt: !9350)
!9420 = !DILocation(line: 197, column: 40, scope: !9351)
!9421 = !DILocation(line: 197, column: 43, scope: !9351)
!9422 = !DILocation(line: 197, column: 54, scope: !9351)
!9423 = !DILocation(line: 197, column: 57, scope: !9351)
!9424 = !DILocation(line: 198, column: 13, scope: !9351)
!9425 = !DILocation(line: 198, column: 16, scope: !9351)
!9426 = !DILocation(line: 198, column: 24, scope: !9351)
!9427 = !DILocation(line: 199, column: 9, scope: !9351)
!9428 = !DILocation(line: 200, column: 13, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9352, file: !715, line: 199, column: 16)
!9430 = !DILocation(line: 203, column: 26, scope: !9353)
!9431 = !DILocation(line: 203, column: 24, scope: !9353)
!9432 = !DILocation(line: 203, column: 18, scope: !9353)
!9433 = !DILocation(line: 204, column: 19, scope: !9353)
!9434 = !DILocation(line: 204, column: 17, scope: !9353)
!9435 = !DILocation(line: 208, column: 18, scope: !9346)
!9436 = !DILocation(line: 208, column: 5, scope: !9346)
!9437 = !DILocation(line: 208, column: 8, scope: !9346)
!9438 = !DILocation(line: 208, column: 16, scope: !9346)
!9439 = !DILocation(line: 209, column: 19, scope: !9346)
!9440 = !DILocation(line: 209, column: 5, scope: !9346)
!9441 = !DILocation(line: 209, column: 8, scope: !9346)
!9442 = !DILocation(line: 209, column: 17, scope: !9346)
!9443 = !DILocation(line: 210, column: 1, scope: !9346)
!9444 = distinct !DISubprogram(name: "cbs_vp9_write_increment", scope: !625, file: !625, line: 131, type: !9445, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{!503, !637, !713, !512, !512, !1854, !512}
!9447 = !DILocalVariable(name: "ctx", arg: 1, scope: !9444, file: !625, line: 131, type: !637)
!9448 = !DILocation(line: 131, column: 59, scope: !9444)
!9449 = !DILocalVariable(name: "pbc", arg: 2, scope: !9444, file: !625, line: 131, type: !713)
!9450 = !DILocation(line: 131, column: 79, scope: !9444)
!9451 = !DILocalVariable(name: "range_min", arg: 3, scope: !9444, file: !625, line: 132, type: !512)
!9452 = !DILocation(line: 132, column: 45, scope: !9444)
!9453 = !DILocalVariable(name: "range_max", arg: 4, scope: !9444, file: !625, line: 132, type: !512)
!9454 = !DILocation(line: 132, column: 65, scope: !9444)
!9455 = !DILocalVariable(name: "name", arg: 5, scope: !9444, file: !625, line: 133, type: !1854)
!9456 = !DILocation(line: 133, column: 48, scope: !9444)
!9457 = !DILocalVariable(name: "value", arg: 6, scope: !9444, file: !625, line: 133, type: !512)
!9458 = !DILocation(line: 133, column: 63, scope: !9444)
!9459 = !DILocalVariable(name: "len", scope: !9444, file: !625, line: 135, type: !503)
!9460 = !DILocation(line: 135, column: 9, scope: !9444)
!9461 = !DILocation(line: 137, column: 5, scope: !9444)
!9462 = distinct !{!9462, !9461}
!9463 = !DILocation(line: 137, column: 16, scope: !9464)
!9464 = !DILexicalBlockFile(scope: !9465, file: !625, discriminator: 1)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !625, line: 137, column: 14)
!9466 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 137, column: 8)
!9467 = !DILocation(line: 137, column: 29, scope: !9464)
!9468 = !DILocation(line: 137, column: 26, scope: !9464)
!9469 = !DILocation(line: 137, column: 39, scope: !9464)
!9470 = !DILocation(line: 137, column: 42, scope: !9471)
!9471 = !DILexicalBlockFile(scope: !9465, file: !625, discriminator: 2)
!9472 = !DILocation(line: 137, column: 54, scope: !9471)
!9473 = !DILocation(line: 137, column: 52, scope: !9471)
!9474 = !DILocation(line: 137, column: 64, scope: !9471)
!9475 = !DILocation(line: 137, column: 14, scope: !9471)
!9476 = !DILocation(line: 137, column: 72, scope: !9477)
!9477 = !DILexicalBlockFile(scope: !9478, file: !625, discriminator: 3)
!9478 = distinct !DILexicalBlock(scope: !9465, file: !625, line: 137, column: 70)
!9479 = !DILocation(line: 137, column: 128, scope: !9480)
!9480 = !DILexicalBlockFile(scope: !9477, file: !625, discriminator: 5)
!9481 = !DILocation(line: 137, column: 128, scope: !9477)
!9482 = !DILocation(line: 137, column: 139, scope: !9483)
!9483 = !DILexicalBlockFile(scope: !9466, file: !625, discriminator: 4)
!9484 = !DILocation(line: 138, column: 9, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 138, column: 9)
!9486 = !DILocation(line: 138, column: 17, scope: !9485)
!9487 = !DILocation(line: 138, column: 15, scope: !9485)
!9488 = !DILocation(line: 138, column: 27, scope: !9485)
!9489 = !DILocation(line: 138, column: 30, scope: !9490)
!9490 = !DILexicalBlockFile(scope: !9485, file: !625, discriminator: 1)
!9491 = !DILocation(line: 138, column: 38, scope: !9490)
!9492 = !DILocation(line: 138, column: 36, scope: !9490)
!9493 = !DILocation(line: 138, column: 9, scope: !9490)
!9494 = !DILocation(line: 139, column: 16, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9485, file: !625, line: 138, column: 49)
!9496 = !DILocation(line: 139, column: 21, scope: !9495)
!9497 = !DILocation(line: 141, column: 16, scope: !9495)
!9498 = !DILocation(line: 141, column: 22, scope: !9495)
!9499 = !DILocation(line: 141, column: 29, scope: !9495)
!9500 = !DILocation(line: 141, column: 40, scope: !9495)
!9501 = !DILocation(line: 139, column: 9, scope: !9495)
!9502 = !DILocation(line: 142, column: 9, scope: !9495)
!9503 = !DILocation(line: 145, column: 9, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 145, column: 9)
!9505 = !DILocation(line: 145, column: 18, scope: !9504)
!9506 = !DILocation(line: 145, column: 15, scope: !9504)
!9507 = !DILocation(line: 145, column: 9, scope: !9444)
!9508 = !DILocation(line: 146, column: 15, scope: !9504)
!9509 = !DILocation(line: 146, column: 27, scope: !9504)
!9510 = !DILocation(line: 146, column: 25, scope: !9504)
!9511 = !DILocation(line: 146, column: 13, scope: !9504)
!9512 = !DILocation(line: 146, column: 9, scope: !9504)
!9513 = !DILocation(line: 148, column: 15, scope: !9504)
!9514 = !DILocation(line: 148, column: 23, scope: !9504)
!9515 = !DILocation(line: 148, column: 21, scope: !9504)
!9516 = !DILocation(line: 148, column: 33, scope: !9504)
!9517 = !DILocation(line: 148, column: 13, scope: !9504)
!9518 = !DILocation(line: 149, column: 23, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 149, column: 9)
!9520 = !DILocation(line: 149, column: 9, scope: !9519)
!9521 = !DILocation(line: 149, column: 30, scope: !9519)
!9522 = !DILocation(line: 149, column: 28, scope: !9519)
!9523 = !DILocation(line: 149, column: 9, scope: !9444)
!9524 = !DILocation(line: 150, column: 9, scope: !9519)
!9525 = !DILocation(line: 152, column: 9, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 152, column: 9)
!9527 = !DILocation(line: 152, column: 14, scope: !9526)
!9528 = !DILocation(line: 152, column: 9, scope: !9444)
!9529 = !DILocalVariable(name: "bits", scope: !9530, file: !625, line: 153, type: !5695)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !625, line: 152, column: 28)
!9531 = !DILocation(line: 153, column: 14, scope: !9530)
!9532 = !DILocalVariable(name: "i", scope: !9530, file: !625, line: 154, type: !503)
!9533 = !DILocation(line: 154, column: 13, scope: !9530)
!9534 = !DILocation(line: 155, column: 16, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9530, file: !625, line: 155, column: 9)
!9536 = !DILocation(line: 155, column: 14, scope: !9535)
!9537 = !DILocation(line: 155, column: 21, scope: !9538)
!9538 = !DILexicalBlockFile(scope: !9539, file: !625, discriminator: 1)
!9539 = distinct !DILexicalBlock(scope: !9535, file: !625, line: 155, column: 9)
!9540 = !DILocation(line: 155, column: 25, scope: !9538)
!9541 = !DILocation(line: 155, column: 23, scope: !9538)
!9542 = !DILocation(line: 155, column: 9, scope: !9538)
!9543 = !DILocation(line: 156, column: 17, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !625, line: 156, column: 17)
!9545 = distinct !DILexicalBlock(scope: !9539, file: !625, line: 155, column: 35)
!9546 = !DILocation(line: 156, column: 29, scope: !9544)
!9547 = !DILocation(line: 156, column: 27, scope: !9544)
!9548 = !DILocation(line: 156, column: 34, scope: !9544)
!9549 = !DILocation(line: 156, column: 31, scope: !9544)
!9550 = !DILocation(line: 156, column: 17, scope: !9545)
!9551 = !DILocation(line: 157, column: 22, scope: !9544)
!9552 = !DILocation(line: 157, column: 17, scope: !9544)
!9553 = !DILocation(line: 157, column: 25, scope: !9544)
!9554 = !DILocation(line: 159, column: 22, scope: !9544)
!9555 = !DILocation(line: 159, column: 17, scope: !9544)
!9556 = !DILocation(line: 159, column: 25, scope: !9544)
!9557 = !DILocation(line: 160, column: 9, scope: !9545)
!9558 = !DILocation(line: 155, column: 31, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !9539, file: !625, discriminator: 2)
!9560 = !DILocation(line: 155, column: 9, scope: !9559)
!9561 = distinct !{!9561, !9562}
!9562 = !DILocation(line: 155, column: 9, scope: !9530)
!9563 = !DILocation(line: 161, column: 14, scope: !9530)
!9564 = !DILocation(line: 161, column: 9, scope: !9530)
!9565 = !DILocation(line: 161, column: 17, scope: !9530)
!9566 = !DILocation(line: 162, column: 37, scope: !9530)
!9567 = !DILocation(line: 162, column: 57, scope: !9530)
!9568 = !DILocation(line: 162, column: 42, scope: !9530)
!9569 = !DILocation(line: 163, column: 37, scope: !9530)
!9570 = !DILocation(line: 163, column: 48, scope: !9530)
!9571 = !DILocation(line: 163, column: 54, scope: !9530)
!9572 = !DILocation(line: 162, column: 9, scope: !9573)
!9573 = !DILexicalBlockFile(scope: !9530, file: !625, discriminator: 1)
!9574 = !DILocation(line: 164, column: 5, scope: !9530)
!9575 = !DILocation(line: 166, column: 9, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9444, file: !625, line: 166, column: 9)
!9577 = !DILocation(line: 166, column: 13, scope: !9576)
!9578 = !DILocation(line: 166, column: 9, scope: !9444)
!9579 = !DILocation(line: 167, column: 18, scope: !9576)
!9580 = !DILocation(line: 167, column: 23, scope: !9576)
!9581 = !DILocation(line: 167, column: 34, scope: !9576)
!9582 = !DILocation(line: 167, column: 31, scope: !9576)
!9583 = !DILocation(line: 167, column: 39, scope: !9576)
!9584 = !DILocation(line: 167, column: 46, scope: !9576)
!9585 = !DILocation(line: 167, column: 55, scope: !9576)
!9586 = !DILocation(line: 167, column: 52, scope: !9576)
!9587 = !DILocation(line: 167, column: 43, scope: !9576)
!9588 = !DILocation(line: 167, column: 9, scope: !9576)
!9589 = !DILocation(line: 169, column: 5, scope: !9444)
!9590 = !DILocation(line: 170, column: 1, scope: !9444)
!9591 = distinct !DISubprogram(name: "cbs_vp9_write_superframe_index", scope: !689, file: !689, line: 420, type: !9592, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9592 = !DISubroutineType(types: !9593)
!9593 = !{!503, !637, !713, !1608}
!9594 = !DILocalVariable(name: "ctx", arg: 1, scope: !9591, file: !689, line: 420, type: !637)
!9595 = !DILocation(line: 420, column: 66, scope: !9591)
!9596 = !DILocalVariable(name: "rw", arg: 2, scope: !9591, file: !689, line: 420, type: !713)
!9597 = !DILocation(line: 420, column: 86, scope: !9591)
!9598 = !DILocalVariable(name: "current", arg: 3, scope: !9591, file: !689, line: 421, type: !1608)
!9599 = !DILocation(line: 421, column: 58, scope: !9591)
!9600 = !DILocalVariable(name: "err", scope: !9591, file: !689, line: 423, type: !503)
!9601 = !DILocation(line: 423, column: 9, scope: !9591)
!9602 = !DILocalVariable(name: "i", scope: !9591, file: !689, line: 423, type: !503)
!9603 = !DILocation(line: 423, column: 14, scope: !9591)
!9604 = !DILocation(line: 425, column: 5, scope: !9591)
!9605 = distinct !{!9605, !9604}
!9606 = !DILocation(line: 425, column: 30, scope: !9607)
!9607 = !DILexicalBlockFile(scope: !9608, file: !689, discriminator: 1)
!9608 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 425, column: 8)
!9609 = !DILocation(line: 425, column: 10, scope: !9607)
!9610 = !DILocation(line: 425, column: 56, scope: !9607)
!9611 = !DILocation(line: 427, column: 5, scope: !9591)
!9612 = distinct !{!9612, !9611}
!9613 = !DILocation(line: 427, column: 10, scope: !9614)
!9614 = !DILexicalBlockFile(scope: !9615, file: !689, discriminator: 1)
!9615 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 427, column: 8)
!9616 = distinct !{!9616, !9617}
!9617 = !DILocation(line: 427, column: 10, scope: !9615)
!9618 = !DILocation(line: 427, column: 44, scope: !9619)
!9619 = !DILexicalBlockFile(scope: !9620, file: !689, discriminator: 2)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !689, line: 427, column: 13)
!9621 = !DILocation(line: 427, column: 49, scope: !9619)
!9622 = !DILocation(line: 427, column: 7, scope: !9619)
!9623 = !DILocation(line: 427, column: 16, scope: !9619)
!9624 = !DILocation(line: 427, column: 22, scope: !9619)
!9625 = !DILocation(line: 427, column: 19, scope: !9619)
!9626 = !DILocation(line: 427, column: 58, scope: !9619)
!9627 = !DILocation(line: 427, column: 62, scope: !9619)
!9628 = !DILocation(line: 427, column: 74, scope: !9629)
!9629 = !DILexicalBlockFile(scope: !9630, file: !689, discriminator: 3)
!9630 = distinct !DILexicalBlock(scope: !9620, file: !689, line: 427, column: 58)
!9631 = !DILocation(line: 427, column: 67, scope: !9629)
!9632 = !DILocation(line: 427, column: 79, scope: !9633)
!9633 = !DILexicalBlockFile(scope: !9620, file: !689, discriminator: 4)
!9634 = !DILocation(line: 427, column: 92, scope: !9635)
!9635 = !DILexicalBlockFile(scope: !9615, file: !689, discriminator: 5)
!9636 = !DILocation(line: 428, column: 5, scope: !9591)
!9637 = distinct !{!9637, !9636}
!9638 = !DILocation(line: 428, column: 10, scope: !9639)
!9639 = !DILexicalBlockFile(scope: !9640, file: !689, discriminator: 1)
!9640 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 428, column: 8)
!9641 = distinct !{!9641, !9642}
!9642 = !DILocation(line: 428, column: 10, scope: !9640)
!9643 = !DILocation(line: 428, column: 44, scope: !9644)
!9644 = !DILexicalBlockFile(scope: !9645, file: !689, discriminator: 2)
!9645 = distinct !DILexicalBlock(scope: !9640, file: !689, line: 428, column: 13)
!9646 = !DILocation(line: 428, column: 49, scope: !9644)
!9647 = !DILocation(line: 428, column: 7, scope: !9644)
!9648 = !DILocation(line: 428, column: 16, scope: !9644)
!9649 = !DILocation(line: 428, column: 22, scope: !9644)
!9650 = !DILocation(line: 428, column: 19, scope: !9644)
!9651 = !DILocation(line: 428, column: 68, scope: !9644)
!9652 = !DILocation(line: 428, column: 72, scope: !9644)
!9653 = !DILocation(line: 428, column: 84, scope: !9654)
!9654 = !DILexicalBlockFile(scope: !9655, file: !689, discriminator: 3)
!9655 = distinct !DILexicalBlock(scope: !9645, file: !689, line: 428, column: 68)
!9656 = !DILocation(line: 428, column: 77, scope: !9654)
!9657 = !DILocation(line: 428, column: 89, scope: !9658)
!9658 = !DILexicalBlockFile(scope: !9645, file: !689, discriminator: 4)
!9659 = !DILocation(line: 428, column: 102, scope: !9660)
!9660 = !DILexicalBlockFile(scope: !9640, file: !689, discriminator: 5)
!9661 = !DILocation(line: 429, column: 5, scope: !9591)
!9662 = distinct !{!9662, !9661}
!9663 = !DILocation(line: 429, column: 10, scope: !9664)
!9664 = !DILexicalBlockFile(scope: !9665, file: !689, discriminator: 1)
!9665 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 429, column: 8)
!9666 = distinct !{!9666, !9667}
!9667 = !DILocation(line: 429, column: 10, scope: !9665)
!9668 = !DILocation(line: 429, column: 44, scope: !9669)
!9669 = !DILexicalBlockFile(scope: !9670, file: !689, discriminator: 2)
!9670 = distinct !DILexicalBlock(scope: !9665, file: !689, line: 429, column: 13)
!9671 = !DILocation(line: 429, column: 49, scope: !9669)
!9672 = !DILocation(line: 429, column: 7, scope: !9669)
!9673 = !DILocation(line: 429, column: 16, scope: !9669)
!9674 = !DILocation(line: 429, column: 22, scope: !9669)
!9675 = !DILocation(line: 429, column: 19, scope: !9669)
!9676 = !DILocation(line: 429, column: 69, scope: !9669)
!9677 = !DILocation(line: 429, column: 73, scope: !9669)
!9678 = !DILocation(line: 429, column: 85, scope: !9679)
!9679 = !DILexicalBlockFile(scope: !9680, file: !689, discriminator: 3)
!9680 = distinct !DILexicalBlock(scope: !9670, file: !689, line: 429, column: 69)
!9681 = !DILocation(line: 429, column: 78, scope: !9679)
!9682 = !DILocation(line: 429, column: 90, scope: !9683)
!9683 = !DILexicalBlockFile(scope: !9670, file: !689, discriminator: 4)
!9684 = !DILocation(line: 429, column: 103, scope: !9685)
!9685 = !DILexicalBlockFile(scope: !9665, file: !689, discriminator: 5)
!9686 = !DILocation(line: 431, column: 12, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 431, column: 5)
!9688 = !DILocation(line: 431, column: 10, scope: !9687)
!9689 = !DILocation(line: 431, column: 17, scope: !9690)
!9690 = !DILexicalBlockFile(scope: !9691, file: !689, discriminator: 1)
!9691 = distinct !DILexicalBlock(scope: !9687, file: !689, line: 431, column: 5)
!9692 = !DILocation(line: 431, column: 22, scope: !9690)
!9693 = !DILocation(line: 431, column: 31, scope: !9690)
!9694 = !DILocation(line: 431, column: 19, scope: !9690)
!9695 = !DILocation(line: 431, column: 5, scope: !9690)
!9696 = !DILocation(line: 433, column: 9, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9691, file: !689, line: 431, column: 66)
!9698 = distinct !{!9698, !9696}
!9699 = !DILocation(line: 433, column: 14, scope: !9700)
!9700 = !DILexicalBlockFile(scope: !9701, file: !689, discriminator: 1)
!9701 = distinct !DILexicalBlock(scope: !9697, file: !689, line: 433, column: 12)
!9702 = distinct !{!9702, !9703}
!9703 = !DILocation(line: 433, column: 14, scope: !9701)
!9704 = !DILocation(line: 433, column: 43, scope: !9705)
!9705 = !DILexicalBlockFile(scope: !9706, file: !689, discriminator: 2)
!9706 = distinct !DILexicalBlock(scope: !9701, file: !689, line: 433, column: 17)
!9707 = !DILocation(line: 433, column: 48, scope: !9705)
!9708 = !DILocation(line: 433, column: 57, scope: !9705)
!9709 = !DILocation(line: 433, column: 66, scope: !9705)
!9710 = !DILocation(line: 433, column: 94, scope: !9705)
!9711 = !DILocation(line: 433, column: 54, scope: !9705)
!9712 = !DILocation(line: 433, column: 140, scope: !9705)
!9713 = !DILocation(line: 433, column: 145, scope: !9705)
!9714 = !DILocation(line: 433, column: 127, scope: !9705)
!9715 = !DILocation(line: 433, column: 32, scope: !9705)
!9716 = !DILocation(line: 433, column: 11, scope: !9705)
!9717 = !DILocation(line: 433, column: 20, scope: !9705)
!9718 = !DILocation(line: 433, column: 26, scope: !9705)
!9719 = !DILocation(line: 433, column: 23, scope: !9705)
!9720 = !DILocation(line: 433, column: 42, scope: !9705)
!9721 = !DILocation(line: 433, column: 46, scope: !9705)
!9722 = !DILocation(line: 433, column: 58, scope: !9723)
!9723 = !DILexicalBlockFile(scope: !9724, file: !689, discriminator: 3)
!9724 = distinct !DILexicalBlock(scope: !9706, file: !689, line: 433, column: 42)
!9725 = !DILocation(line: 433, column: 51, scope: !9723)
!9726 = !DILocation(line: 433, column: 63, scope: !9727)
!9727 = !DILexicalBlockFile(scope: !9706, file: !689, discriminator: 4)
!9728 = !DILocation(line: 433, column: 76, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9701, file: !689, discriminator: 5)
!9730 = !DILocation(line: 435, column: 5, scope: !9697)
!9731 = !DILocation(line: 431, column: 62, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !9691, file: !689, discriminator: 2)
!9733 = !DILocation(line: 431, column: 5, scope: !9732)
!9734 = distinct !{!9734, !9735}
!9735 = !DILocation(line: 431, column: 5, scope: !9591)
!9736 = !DILocation(line: 437, column: 5, scope: !9591)
!9737 = distinct !{!9737, !9736}
!9738 = !DILocation(line: 437, column: 10, scope: !9739)
!9739 = !DILexicalBlockFile(scope: !9740, file: !689, discriminator: 1)
!9740 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 437, column: 8)
!9741 = distinct !{!9741, !9742}
!9742 = !DILocation(line: 437, column: 10, scope: !9740)
!9743 = !DILocation(line: 437, column: 44, scope: !9744)
!9744 = !DILexicalBlockFile(scope: !9745, file: !689, discriminator: 2)
!9745 = distinct !DILexicalBlock(scope: !9740, file: !689, line: 437, column: 13)
!9746 = !DILocation(line: 437, column: 49, scope: !9744)
!9747 = !DILocation(line: 437, column: 7, scope: !9744)
!9748 = !DILocation(line: 437, column: 16, scope: !9744)
!9749 = !DILocation(line: 437, column: 22, scope: !9744)
!9750 = !DILocation(line: 437, column: 19, scope: !9744)
!9751 = !DILocation(line: 437, column: 58, scope: !9744)
!9752 = !DILocation(line: 437, column: 62, scope: !9744)
!9753 = !DILocation(line: 437, column: 74, scope: !9754)
!9754 = !DILexicalBlockFile(scope: !9755, file: !689, discriminator: 3)
!9755 = distinct !DILexicalBlock(scope: !9745, file: !689, line: 437, column: 58)
!9756 = !DILocation(line: 437, column: 67, scope: !9754)
!9757 = !DILocation(line: 437, column: 79, scope: !9758)
!9758 = !DILexicalBlockFile(scope: !9745, file: !689, discriminator: 4)
!9759 = !DILocation(line: 437, column: 92, scope: !9760)
!9760 = !DILexicalBlockFile(scope: !9740, file: !689, discriminator: 5)
!9761 = !DILocation(line: 438, column: 5, scope: !9591)
!9762 = distinct !{!9762, !9761}
!9763 = !DILocation(line: 438, column: 10, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9765, file: !689, discriminator: 1)
!9765 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 438, column: 8)
!9766 = distinct !{!9766, !9767}
!9767 = !DILocation(line: 438, column: 10, scope: !9765)
!9768 = !DILocation(line: 438, column: 44, scope: !9769)
!9769 = !DILexicalBlockFile(scope: !9770, file: !689, discriminator: 2)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !689, line: 438, column: 13)
!9771 = !DILocation(line: 438, column: 49, scope: !9769)
!9772 = !DILocation(line: 438, column: 7, scope: !9769)
!9773 = !DILocation(line: 438, column: 16, scope: !9769)
!9774 = !DILocation(line: 438, column: 22, scope: !9769)
!9775 = !DILocation(line: 438, column: 19, scope: !9769)
!9776 = !DILocation(line: 438, column: 68, scope: !9769)
!9777 = !DILocation(line: 438, column: 72, scope: !9769)
!9778 = !DILocation(line: 438, column: 84, scope: !9779)
!9779 = !DILexicalBlockFile(scope: !9780, file: !689, discriminator: 3)
!9780 = distinct !DILexicalBlock(scope: !9770, file: !689, line: 438, column: 68)
!9781 = !DILocation(line: 438, column: 77, scope: !9779)
!9782 = !DILocation(line: 438, column: 89, scope: !9783)
!9783 = !DILexicalBlockFile(scope: !9770, file: !689, discriminator: 4)
!9784 = !DILocation(line: 438, column: 102, scope: !9785)
!9785 = !DILexicalBlockFile(scope: !9765, file: !689, discriminator: 5)
!9786 = !DILocation(line: 439, column: 5, scope: !9591)
!9787 = distinct !{!9787, !9786}
!9788 = !DILocation(line: 439, column: 10, scope: !9789)
!9789 = !DILexicalBlockFile(scope: !9790, file: !689, discriminator: 1)
!9790 = distinct !DILexicalBlock(scope: !9591, file: !689, line: 439, column: 8)
!9791 = distinct !{!9791, !9792}
!9792 = !DILocation(line: 439, column: 10, scope: !9790)
!9793 = !DILocation(line: 439, column: 44, scope: !9794)
!9794 = !DILexicalBlockFile(scope: !9795, file: !689, discriminator: 2)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !689, line: 439, column: 13)
!9796 = !DILocation(line: 439, column: 49, scope: !9794)
!9797 = !DILocation(line: 439, column: 7, scope: !9794)
!9798 = !DILocation(line: 439, column: 16, scope: !9794)
!9799 = !DILocation(line: 439, column: 22, scope: !9794)
!9800 = !DILocation(line: 439, column: 19, scope: !9794)
!9801 = !DILocation(line: 439, column: 69, scope: !9794)
!9802 = !DILocation(line: 439, column: 73, scope: !9794)
!9803 = !DILocation(line: 439, column: 85, scope: !9804)
!9804 = !DILexicalBlockFile(scope: !9805, file: !689, discriminator: 3)
!9805 = distinct !DILexicalBlock(scope: !9795, file: !689, line: 439, column: 69)
!9806 = !DILocation(line: 439, column: 78, scope: !9804)
!9807 = !DILocation(line: 439, column: 90, scope: !9808)
!9808 = !DILexicalBlockFile(scope: !9795, file: !689, discriminator: 4)
!9809 = !DILocation(line: 439, column: 103, scope: !9810)
!9810 = !DILexicalBlockFile(scope: !9790, file: !689, discriminator: 5)
!9811 = !DILocation(line: 441, column: 5, scope: !9591)
!9812 = !DILocation(line: 442, column: 1, scope: !9591)
!9813 = distinct !DISubprogram(name: "cbs_vp9_write_le", scope: !625, file: !625, line: 210, type: !9814, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !705)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{!503, !637, !713, !503, !1854, !1857, !512}
!9816 = !DILocalVariable(name: "ctx", arg: 1, scope: !9813, file: !625, line: 210, type: !637)
!9817 = !DILocation(line: 210, column: 52, scope: !9813)
!9818 = !DILocalVariable(name: "pbc", arg: 2, scope: !9813, file: !625, line: 210, type: !713)
!9819 = !DILocation(line: 210, column: 72, scope: !9813)
!9820 = !DILocalVariable(name: "width", arg: 3, scope: !9813, file: !625, line: 211, type: !503)
!9821 = !DILocation(line: 211, column: 33, scope: !9813)
!9822 = !DILocalVariable(name: "name", arg: 4, scope: !9813, file: !625, line: 211, type: !1854)
!9823 = !DILocation(line: 211, column: 52, scope: !9813)
!9824 = !DILocalVariable(name: "subscripts", arg: 5, scope: !9813, file: !625, line: 212, type: !1857)
!9825 = !DILocation(line: 212, column: 40, scope: !9813)
!9826 = !DILocalVariable(name: "value", arg: 6, scope: !9813, file: !625, line: 212, type: !512)
!9827 = !DILocation(line: 212, column: 61, scope: !9813)
!9828 = !DILocalVariable(name: "b", scope: !9813, file: !625, line: 214, type: !503)
!9829 = !DILocation(line: 214, column: 9, scope: !9813)
!9830 = !DILocation(line: 216, column: 5, scope: !9813)
!9831 = distinct !{!9831, !9830}
!9832 = !DILocation(line: 216, column: 16, scope: !9833)
!9833 = !DILexicalBlockFile(scope: !9834, file: !625, discriminator: 1)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !625, line: 216, column: 14)
!9835 = distinct !DILexicalBlock(scope: !9813, file: !625, line: 216, column: 8)
!9836 = !DILocation(line: 216, column: 22, scope: !9833)
!9837 = !DILocation(line: 216, column: 26, scope: !9833)
!9838 = !DILocation(line: 216, column: 14, scope: !9833)
!9839 = !DILocation(line: 216, column: 35, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !9841, file: !625, discriminator: 2)
!9841 = distinct !DILexicalBlock(scope: !9834, file: !625, line: 216, column: 33)
!9842 = !DILocation(line: 216, column: 91, scope: !9843)
!9843 = !DILexicalBlockFile(scope: !9840, file: !625, discriminator: 4)
!9844 = !DILocation(line: 216, column: 91, scope: !9840)
!9845 = !DILocation(line: 216, column: 102, scope: !9846)
!9846 = !DILexicalBlockFile(scope: !9835, file: !625, discriminator: 3)
!9847 = !DILocation(line: 218, column: 23, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9813, file: !625, line: 218, column: 9)
!9849 = !DILocation(line: 218, column: 9, scope: !9848)
!9850 = !DILocation(line: 218, column: 30, scope: !9848)
!9851 = !DILocation(line: 218, column: 28, scope: !9848)
!9852 = !DILocation(line: 218, column: 9, scope: !9813)
!9853 = !DILocation(line: 219, column: 9, scope: !9848)
!9854 = !DILocation(line: 221, column: 9, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9813, file: !625, line: 221, column: 9)
!9856 = !DILocation(line: 221, column: 14, scope: !9855)
!9857 = !DILocation(line: 221, column: 9, scope: !9813)
!9858 = !DILocalVariable(name: "bits", scope: !9859, file: !625, line: 222, type: !1941)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !625, line: 221, column: 28)
!9860 = !DILocation(line: 222, column: 14, scope: !9859)
!9861 = !DILocalVariable(name: "i", scope: !9859, file: !625, line: 223, type: !503)
!9862 = !DILocation(line: 223, column: 13, scope: !9859)
!9863 = !DILocation(line: 224, column: 16, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9859, file: !625, line: 224, column: 9)
!9865 = !DILocation(line: 224, column: 14, scope: !9864)
!9866 = !DILocation(line: 224, column: 21, scope: !9867)
!9867 = !DILexicalBlockFile(scope: !9868, file: !625, discriminator: 1)
!9868 = distinct !DILexicalBlock(scope: !9864, file: !625, line: 224, column: 9)
!9869 = !DILocation(line: 224, column: 25, scope: !9867)
!9870 = !DILocation(line: 224, column: 23, scope: !9867)
!9871 = !DILocation(line: 224, column: 9, scope: !9867)
!9872 = !DILocation(line: 225, column: 20, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9868, file: !625, line: 225, column: 13)
!9874 = !DILocation(line: 225, column: 18, scope: !9873)
!9875 = !DILocation(line: 225, column: 25, scope: !9876)
!9876 = !DILexicalBlockFile(scope: !9877, file: !625, discriminator: 1)
!9877 = distinct !DILexicalBlock(scope: !9873, file: !625, line: 225, column: 13)
!9878 = !DILocation(line: 225, column: 27, scope: !9876)
!9879 = !DILocation(line: 225, column: 13, scope: !9876)
!9880 = !DILocation(line: 226, column: 31, scope: !9877)
!9881 = !DILocation(line: 226, column: 41, scope: !9877)
!9882 = !DILocation(line: 226, column: 45, scope: !9877)
!9883 = !DILocation(line: 226, column: 43, scope: !9877)
!9884 = !DILocation(line: 226, column: 37, scope: !9877)
!9885 = !DILocation(line: 226, column: 48, scope: !9877)
!9886 = !DILocation(line: 226, column: 22, scope: !9877)
!9887 = !DILocation(line: 226, column: 26, scope: !9877)
!9888 = !DILocation(line: 226, column: 24, scope: !9877)
!9889 = !DILocation(line: 226, column: 17, scope: !9877)
!9890 = !DILocation(line: 226, column: 29, scope: !9877)
!9891 = !DILocation(line: 225, column: 33, scope: !9892)
!9892 = !DILexicalBlockFile(scope: !9877, file: !625, discriminator: 2)
!9893 = !DILocation(line: 225, column: 13, scope: !9892)
!9894 = distinct !{!9894, !9895}
!9895 = !DILocation(line: 225, column: 13, scope: !9868)
!9896 = !DILocation(line: 226, column: 60, scope: !9897)
!9897 = !DILexicalBlockFile(scope: !9873, file: !625, discriminator: 1)
!9898 = !DILocation(line: 224, column: 34, scope: !9899)
!9899 = !DILexicalBlockFile(scope: !9868, file: !625, discriminator: 2)
!9900 = !DILocation(line: 224, column: 9, scope: !9899)
!9901 = distinct !{!9901, !9902}
!9902 = !DILocation(line: 224, column: 9, scope: !9859)
!9903 = !DILocation(line: 227, column: 14, scope: !9859)
!9904 = !DILocation(line: 227, column: 9, scope: !9859)
!9905 = !DILocation(line: 227, column: 17, scope: !9859)
!9906 = !DILocation(line: 229, column: 37, scope: !9859)
!9907 = !DILocation(line: 229, column: 57, scope: !9859)
!9908 = !DILocation(line: 229, column: 42, scope: !9859)
!9909 = !DILocation(line: 230, column: 37, scope: !9859)
!9910 = !DILocation(line: 230, column: 43, scope: !9859)
!9911 = !DILocation(line: 230, column: 55, scope: !9859)
!9912 = !DILocation(line: 230, column: 61, scope: !9859)
!9913 = !DILocation(line: 229, column: 9, scope: !9914)
!9914 = !DILexicalBlockFile(scope: !9859, file: !625, discriminator: 1)
!9915 = !DILocation(line: 231, column: 5, scope: !9859)
!9916 = !DILocation(line: 233, column: 12, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9813, file: !625, line: 233, column: 5)
!9918 = !DILocation(line: 233, column: 10, scope: !9917)
!9919 = !DILocation(line: 233, column: 17, scope: !9920)
!9920 = !DILexicalBlockFile(scope: !9921, file: !625, discriminator: 1)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !625, line: 233, column: 5)
!9922 = !DILocation(line: 233, column: 21, scope: !9920)
!9923 = !DILocation(line: 233, column: 19, scope: !9920)
!9924 = !DILocation(line: 233, column: 5, scope: !9920)
!9925 = !DILocation(line: 234, column: 18, scope: !9921)
!9926 = !DILocation(line: 234, column: 26, scope: !9921)
!9927 = !DILocation(line: 234, column: 35, scope: !9921)
!9928 = !DILocation(line: 234, column: 32, scope: !9921)
!9929 = !DILocation(line: 234, column: 37, scope: !9921)
!9930 = !DILocation(line: 234, column: 9, scope: !9921)
!9931 = !DILocation(line: 233, column: 30, scope: !9932)
!9932 = !DILexicalBlockFile(scope: !9921, file: !625, discriminator: 2)
!9933 = !DILocation(line: 233, column: 5, scope: !9932)
!9934 = distinct !{!9934, !9935}
!9935 = !DILocation(line: 233, column: 5, scope: !9813)
!9936 = !DILocation(line: 236, column: 5, scope: !9813)
!9937 = !DILocation(line: 237, column: 1, scope: !9813)
