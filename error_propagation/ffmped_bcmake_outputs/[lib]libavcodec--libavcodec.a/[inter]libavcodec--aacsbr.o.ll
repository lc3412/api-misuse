; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon = type { i8*, i8*, i32, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x float], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.AVFloatDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [16 x i8], [128 x float], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x float], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x float], [1024 x float], [1536 x float], [2048 x float], [3072 x float], [1024 x float], [1024 x float], [672 x %struct.PredictorState], float*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, float, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x float]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { float, float, float, float, float, float, float, float }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x float]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x float]]], [64 x [40 x [2 x float]]], [2 x [2 x [38 x [64 x float]]]], [64 x [2 x float]], [64 x [2 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x i8]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [16 x i8], [5 x [64 x float]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x float], [1312 x float], i32, [2 x i32], [5 x float], [2 x [32 x [32 x [2 x float]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x float]]]], [42 x [48 x float]], [42 x [48 x float]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x float]], [3 x [5 x i8]], [3 x [5 x float]], [8 x i8], i8, [3 x i8], i32, i32, [16 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x float]]], [91 x [46 x [2 x float]]], [50 x [3 x [37 x [2 x float]]]], [34 x float], [8 x i8], [34 x float], [8 x i8], [34 x float], [8 x i8], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [91 x [32 x [2 x float]]], [91 x [32 x [2 x float]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (float*, [2 x float]*, i32)*, void ([2 x float]*, [2 x float]*, float*, i32)*, void ([2 x float]*, [2 x float]*, [8 x [2 x float]]*, i64, i32)*, void ([32 x [2 x float]]*, [38 x [64 x float]]*, i32, i32)*, void ([38 x [64 x float]]*, [32 x [2 x float]]*, i32, i32)*, void ([2 x float]*, [2 x float]*, [37 x [2 x float]]*, float*, [2 x float]*, float*, float, i32)*, [2 x void ([2 x float]*, [2 x float]*, [4 x float]*, [4 x float]*, i32)*] }
%struct.SBRDSPContext = type { void (float*)*, float ([2 x float]*, i32)*, void (float*)*, void (float*)*, void ([2 x float]*, float*)*, void (float*, float*)*, void (float*, float*, float*)*, void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.av_intfloat32 = type { i32 }
%union.unaligned_32 = type { i32 }

@ff_sbr_noise_table = constant [520 x [2 x float]] [[2 x float] [float 0xBFEFFBC0C0000000, float 0xBFE308E1A0000000], [2 x float] [float 0x3FEF1388C0000000, float 0xBFE59BEFA0000000], [2 x float] [float 0x3FC21622A0000000, float 0xBFEE6DDA80000000], [2 x float] [float 0xBFDE156160000000, float 0xBFD7E5E020000000], [2 x float] [float 0x3FE9D35BE0000000, float 0x3FD2FA7500000000], [2 x float] [float 0xBFD8F2B9C0000000, float 0x3FECA9C9C0000000], [2 x float] [float 0xBF859103A0000000, float 0xBFE56D4940000000], [2 x float] [float 0xBFED348A80000000, float 0xBFBD7FAC40000000], [2 x float] [float 0x3FE18C8700000000, float 0x3FE8122260000000], [2 x float] [float 0x3FD99B1DC0000000, float 0xBFEFA84BE0000000], [2 x float] [float 0xBFEFF52F40000000, float 0xBFEC350200000000], [2 x float] [float 0xBFEE91E7E0000000, float 0x3FED173EE0000000], [2 x float] [float 0xBFDD43BCA0000000, float 0xBFE2263380000000], [2 x float] [float 0xBFE7566620000000, float 0xBFEF5CD680000000], [2 x float] [float 0x3FE8330520000000, float 0x3FCAD10100000000], [2 x float] [float 0x3FB21907A0000000, float 0xBFE90A1160000000], [2 x float] [float 0x3FE7D6BBA0000000, float 0xBFED2C90A0000000], [2 x float] [float 0xBFEEDC6140000000, float 0xBFEE511820000000], [2 x float] [float 0x3FD378C580000000, float 0xBFDFA3F740000000], [2 x float] [float 0x3FE54D01E0000000, float 0x3FE4B05E60000000], [2 x float] [float 0x3FED57D1A0000000, float 0x3FC66B0500000000], [2 x float] [float 0xBFE6A5E1A0000000, float 0x3FE0D0C920000000], [2 x float] [float 0xBFE66A9CA0000000, float 0xBFDD0482A0000000], [2 x float] [float 0xBFEFD6C120000000, float 0xBFECD2B0E0000000], [2 x float] [float 0x3FEF69A2A0000000, float 0xBFE8C9C820000000], [2 x float] [float 0xBFE17EB220000000, float 0xBF9A5388E0000000], [2 x float] [float 0xBF914D42E0000000, float 0x3F678D7280000000], [2 x float] [float 0xBFEB8E28E0000000, float 0x3FDB3B2900000000], [2 x float] [float 0xBFEFA55020000000, float 0xBFEC1F38E0000000], [2 x float] [float 0x3FE08FE720000000, float 0x3FE56AA460000000], [2 x float] [float 0xBFEFE21A00000000, float 0xBFE2982F60000000], [2 x float] [float 0xBFEFFD7DA0000000, float 0x3FEF7A7840000000], [2 x float] [float 0x3FE1AF6980000000, float 0x3FE3061120000000], [2 x float] [float 0x3FD621C7C0000000, float 0x3FEE5C85A0000000], [2 x float] [float 0x3FE40D73C0000000, float 0xBFE7CF1760000000], [2 x float] [float 0xBFE8B01A80000000, float 0xBFD5AF7FA0000000], [2 x float] [float 0xBFED4F3CA0000000, float 0x3FA2E1CE60000000], [2 x float] [float 0xBFE8694EC0000000, float 0xBFED3D2F00000000], [2 x float] [float 0x3FE98842C0000000, float 0xBFEDD162A0000000], [2 x float] [float 0x3FE16E6F40000000, float 0xBFBE835F00000000], [2 x float] [float 0xBFEB6791E0000000, float 0x3FDB27B520000000], [2 x float] [float 0xBFEDB8ED20000000, float 0x3FD1D68460000000], [2 x float] [float 0xBFBDF932C0000000, float 0xBFEFEFAF60000000], [2 x float] [float 0x3FCB562E00000000, float 0xBFED077AA0000000], [2 x float] [float 0xBFE8619FA0000000, float 0x3FEFED0120000000], [2 x float] [float 0x3FEF6541C0000000, float 0xBFEEAC65C0000000], [2 x float] [float 0xBFEB7E03E0000000, float 0x3FEEA53280000000], [2 x float] [float 0xBFEDDBBAC0000000, float 0x3FDFA2E640000000], [2 x float] [float 0x3FD382C940000000, float 0xBFE692A3C0000000], [2 x float] [float 0x3FEB4AEDA0000000, float 0x3FDDEE29C0000000], [2 x float] [float 0x3FED3998C0000000, float 0xBFEFF2DC20000000], [2 x float] [float 0xBFAE286720000000, float 0x3FE6A32BA0000000], [2 x float] [float 0x3FD22CD740000000, float 0x3FD62A5CA0000000], [2 x float] [float 0x3FEE7B8C80000000, float 0xBFE190DE60000000], [2 x float] [float 0xBFE9242740000000, float 0xBFE82E9320000000], [2 x float] [float 0xBFEEA71360000000, float 0xBFCA2445C0000000], [2 x float] [float 0x3FEA5F1F40000000, float 0x3FEEEDF240000000], [2 x float] [float 0xBFE4DBFDE0000000, float 0xBFEC652BA0000000], [2 x float] [float 0xBFEDF748C0000000, float 0x3FEFF56A40000000], [2 x float] [float 0x3FED41B680000000, float 0xBFEF73F540000000], [2 x float] [float 0xBFE686D080000000, float 0x3FE2D0A240000000], [2 x float] [float 0x3F771793E0000000, float 0x3FE3C40D00000000], [2 x float] [float 0x3FEC803580000000, float 0x3FE0E40320000000], [2 x float] [float 0xBFE5FA91C0000000, float 0x3FE9DBB480000000], [2 x float] [float 0x3FE717C8E0000000, float 0xBFE629C480000000], [2 x float] [float 0xBFE4231500000000, float 0x3FC1714EC0000000], [2 x float] [float 0x3FD3291D00000000, float 0xBFDD790CC0000000], [2 x float] [float 0xBFED5EC720000000, float 0xBFE7AF1F20000000], [2 x float] [float 0x3FEFC68D00000000, float 0x3FDA1F64C0000000], [2 x float] [float 0x3FEA5B9C60000000, float 0xBFE7B10880000000], [2 x float] [float 0xBFEF862BE0000000, float 0xBFEFFDBBC0000000], [2 x float] [float 0xBFEEB16320000000, float 0xBFEFC18F80000000], [2 x float] [float 0xBFCB67FF80000000, float 0xBFEDE55C80000000], [2 x float] [float 0xBFE605DB00000000, float 0xBFD1360920000000], [2 x float] [float 0x3FED648400000000, float 0x3FB7F50240000000], [2 x float] [float 0xBFEEBD7640000000, float 0x3FD71A79C0000000], [2 x float] [float 0x3FE086DB00000000, float 0xBFE6D6E740000000], [2 x float] [float 0x3FE38FD420000000, float 0x3FDE0C4FA0000000], [2 x float] [float 0x3FDE4B8D20000000, float 0xBFD17E44A0000000], [2 x float] [float 0x3FED1E94E0000000, float 0x3FEEF2F280000000], [2 x float] [float 0x3FDCB35F40000000, float 0x3FEFBF6980000000], [2 x float] [float 0x3FE5511780000000, float 0x3FEEE8AAC0000000], [2 x float] [float 0x3FE7F9A140000000, float 0xBFECC2F540000000], [2 x float] [float 0xBFEFDCE780000000, float 0x3FE0E430A0000000], [2 x float] [float 0x3FEF2B18C0000000, float 0xBFC59354E0000000], [2 x float] [float 0x3FE74240A0000000, float 0xBFDEC24700000000], [2 x float] [float 0x3FEE89CE20000000, float 0x3FE60828E0000000], [2 x float] [float 0xBFE7591060000000, float 0xBFE883C380000000], [2 x float] [float 0xBFEB50A600000000, float 0x3FEC656D60000000], [2 x float] [float 0xBFEA0D4E60000000, float 0xBFEF319FE0000000], [2 x float] [float 0xBFEC234A00000000, float 0x3FE7EB61A0000000], [2 x float] [float 0xBFE6E74980000000, float 0xBFEF8AE780000000], [2 x float] [float 0x3FEABA4F80000000, float 0x3FEAC8E960000000], [2 x float] [float 0xBFDEC66BC0000000, float 0xBFEFA1AB60000000], [2 x float] [float 0x3FEF15A320000000, float 0x3FE9A14500000000], [2 x float] [float 0x3FE0A340A0000000, float 0x3FE9ADE2C0000000], [2 x float] [float 0xBF81610FE0000000, float 0xBFE888D120000000], [2 x float] [float 0xBFE67E83E0000000, float 0x3FE1B71580000000], [2 x float] [float 0xBFEEAFABE0000000, float 0xBFDBB09EC0000000], [2 x float] [float 0x3FEF10BB80000000, float 0x3FB7DFCB40000000], [2 x float] [float 0xBFED91C280000000, float 0x3FEB5CCA80000000], [2 x float] [float 0xBFE63DF860000000, float 0x3FEF900CA0000000], [2 x float] [float 0x3FD0FF75C0000000, float 0x3FE775E880000000], [2 x float] [float 0x3FD1F1D180000000, float 0x3FC29BC8A0000000], [2 x float] [float 0xBFE7B96520000000, float 0x3FEFC780C0000000], [2 x float] [float 0xBF91F2D980000000, float 0xBFEA6FF460000000], [2 x float] [float 0xBFE1A3FC40000000, float 0xBFEFA5C4C0000000], [2 x float] [float 0x3FEF58F500000000, float 0xBFEE163CA0000000], [2 x float] [float 0xBFEFBE2960000000, float 0x3FE57232A0000000], [2 x float] [float 0xBFE5A8BFE0000000, float 0x3FC02B1660000000], [2 x float] [float 0x3FB7660420000000, float 0xBFCA49CDC0000000], [2 x float] [float 0xBFE6EE4D60000000, float 0xBFEF4ACF40000000], [2 x float] [float 0x3FE9ECB820000000, float 0x3FE130F5A0000000], [2 x float] [float 0x3FD9FEB020000000, float 0xBFD0F0AEA0000000], [2 x float] [float 0xBFE5A85C60000000, float 0x3FEE3D9BA0000000], [2 x float] [float 0x3FEBCABBC0000000, float 0xBFC7778DC0000000], [2 x float] [float 0xBFEFD71240000000, float 0xBF9AF93160000000], [2 x float] [float 0x3FEAFC3F40000000, float 0x3FBAA44DC0000000], [2 x float] [float 0xBFB797C700000000, float 0x3FE640B7C0000000], [2 x float] [float 0x3FEFFC68E0000000, float 0xBFBFA34B40000000], [2 x float] [float 0xBFE983B5A0000000, float 0xBFED4E70C0000000], [2 x float] [float 0x3FEED4FD60000000, float 0x3FEEECC940000000], [2 x float] [float 0xBFE994E9A0000000, float 0x3FE4956A00000000], [2 x float] [float 0xBFBD9BEB80000000, float 0x3FD24BD520000000], [2 x float] [float 0xBFD98CFA20000000, float 0x3FEE1F18E0000000], [2 x float] [float 0x3FEFB56320000000, float 0xBFED75C540000000], [2 x float] [float 0x3FD252F320000000, float 0xBFED219740000000], [2 x float] [float 0xBFEAA828C0000000, float 0xBFE58BB500000000], [2 x float] [float 0x3FEE878840000000, float 0x3FDF76D3E0000000], [2 x float] [float 0xBFB082FB80000000, float 0x3FA0A49340000000], [2 x float] [float 0xBFEFDD3040000000, float 0x3FDB212460000000], [2 x float] [float 0xBFE4F5DA80000000, float 0x3FEA6A2D80000000], [2 x float] [float 0xBFEA005D20000000, float 0xBFE0854DA0000000], [2 x float] [float 0xBFEFE307E0000000, float 0x3FEB0976E0000000], [2 x float] [float 0x3F67947480000000, float 0x3FE4B9D0E0000000], [2 x float] [float 0x3FE674E620000000, float 0xBFCA2E0C60000000], [2 x float] [float 0x3FEED5F720000000, float 0x3FDA0D6E00000000], [2 x float] [float 0xBFE60AF520000000, float 0x3FED3A7CC0000000], [2 x float] [float 0xBFD6520420000000, float 0x3FE6DF02A0000000], [2 x float] [float 0x3FED6F0220000000, float 0x3FE5484A60000000], [2 x float] [float 0xBFEFAED240000000, float 0x3FEB7A4EE0000000], [2 x float] [float 0x3FE6097C60000000, float 0x3FE1CFB180000000], [2 x float] [float 0xBFEFD5C320000000, float 0xBFC9AAD2A0000000], [2 x float] [float 0x3FEE260D80000000, float 0xBFEFE721A0000000], [2 x float] [float 0xBFE5929B40000000, float 0x3FDFB5FB00000000], [2 x float] [float 0xBFDE4C1460000000, float 0xBFEB7D4860000000], [2 x float] [float 0x3FC2559300000000, float 0xBFEE206840000000], [2 x float] [float 0xBFD2BB5140000000, float 0x3FAD7CBB40000000], [2 x float] [float 0x3FDC072FA0000000, float 0xBFE93FE520000000], [2 x float] [float 0xBFD742C920000000, float 0x3FE4C28380000000], [2 x float] [float 0xBFB666CBE0000000, float 0x3FEF4283C0000000], [2 x float] [float 0xBFEEE0E480000000, float 0xBFE1446DA0000000], [2 x float] [float 0x3FE1C4C460000000, float 0x3FE93ECB20000000], [2 x float] [float 0x3FE7884020000000, float 0x3FEEDD5AA0000000], [2 x float] [float 0xBFD3C4FB00000000, float 0xBFE9D006E0000000], [2 x float] [float 0x3FA24DD180000000, float 0xBFEF24EA20000000], [2 x float] [float 0x3FEF9732E0000000, float 0x3FDEFB5A40000000], [2 x float] [float 0xBFEA23FCC0000000, float 0xBFED109B00000000], [2 x float] [float 0x3FE5B7A740000000, float 0x3FEA02D3A0000000], [2 x float] [float 0xBFC43C2700000000, float 0x3FEB4A19E0000000], [2 x float] [float 0x3FE9D4DC40000000, float 0xBFCFA36760000000], [2 x float] [float 0x3FDE95B5C0000000, float 0xBFDDA73920000000], [2 x float] [float 0x3FEED66E20000000, float 0x3FD8A1AB40000000], [2 x float] [float 0xBFEFB9DDC0000000, float 0xBFCFEE1180000000], [2 x float] [float 0x3FEA961140000000, float 0xBFEE547280000000], [2 x float] [float 0xBFE2CD0FC0000000, float 0x3F8A6F5D60000000], [2 x float] [float 0x3FEE927B60000000, float 0xBFEB60D560000000], [2 x float] [float 0xBFEEE08940000000, float 0xBFE47C9920000000], [2 x float] [float 0xBFEF250940000000, float 0x3FBFB02140000000], [2 x float] [float 0x3FED3F84A0000000, float 0x3FE28D1AE0000000], [2 x float] [float 0xBFEFF9ECC0000000, float 0x3FE6BF4540000000], [2 x float] [float 0xBFEBCCDFC0000000, float 0xBFC9F92F20000000], [2 x float] [float 0xBFD0CB2AE0000000, float 0xBFE5D83B80000000], [2 x float] [float 0xBFCF9208E0000000, float 0xBFEC0BA7A0000000], [2 x float] [float 0x3F98BE1F40000000, float 0x3FD1674980000000], [2 x float] [float 0x3FEA430FC0000000, float 0xBFEB3A6440000000], [2 x float] [float 0x3FEC55CD00000000, float 0xBFECAF0C00000000], [2 x float] [float 0xBFC742F440000000, float 0xBFD0BCC480000000], [2 x float] [float 0x3FB7F33480000000, float 0x3FE18CE9A0000000], [2 x float] [float 0xBFE17E6FC0000000, float 0x3FEEB6BEC0000000], [2 x float] [float 0x3FD7B66F20000000, float 0xBFE32BD6C0000000], [2 x float] [float 0xBFE6850140000000, float 0x3FED315EE0000000], [2 x float] [float 0xBFD624FE20000000, float 0xBFEFD23DE0000000], [2 x float] [float 0xBFE6020160000000, float 0xBFD35A54C0000000], [2 x float] [float 0xBFD12E0140000000, float 0x3FEA98D5E0000000], [2 x float] [float 0x3FDF6802E0000000, float 0xBFDD07BC20000000], [2 x float] [float 0x3FD8F1D3A0000000, float 0x3FEE909E40000000], [2 x float] [float 0xBFEF484380000000, float 0x3FAB2A8AC0000000], [2 x float] [float 0xBFC62D3CC0000000, float 0xBFEDAFC600000000], [2 x float] [float 0x3FEFFBBE40000000, float 0x3FE2A6C080000000], [2 x float] [float 0xBFE4C86580000000, float 0x3FE5F770A0000000], [2 x float] [float 0xBFBEC368C0000000, float 0xBFE2498240000000], [2 x float] [float 0xBFE2DCF9C0000000, float 0xBFD64D5AA0000000], [2 x float] [float 0xBFDAC2FE20000000, float 0x3FC4D57540000000], [2 x float] [float 0x3FEFF6A1E0000000, float 0x3FBC8226C0000000], [2 x float] [float 0xBFE220BC80000000, float 0xBFECF556E0000000], [2 x float] [float 0x3FEE1FC960000000, float 0x3FD69496E0000000], [2 x float] [float 0xBFE83B6600000000, float 0x3FE12B0DA0000000], [2 x float] [float 0x3FCA4B31A0000000, float 0xBFEE382080000000], [2 x float] [float 0x3FEFFE6460000000, float 0x3FE98C2880000000], [2 x float] [float 0x3FD29C2F60000000, float 0x3FD6A6EAA0000000], [2 x float] [float 0xBFE41D6400000000, float 0x3FD8CF5F00000000], [2 x float] [float 0x3FDBCD5BA0000000, float 0xBFEF88EA60000000], [2 x float] [float 0xBFEF749EC0000000, float 0x3FCAE85540000000], [2 x float] [float 0x3FC8FA0780000000, float 0xBFEE282080000000], [2 x float] [float 0xBFEE8D72C0000000, float 0x3FEF7A0640000000], [2 x float] [float 0x3FEDE1A8E0000000, float 0xBFE6AEA720000000], [2 x float] [float 0xBFEB467C20000000, float 0xBFB55B3DC0000000], [2 x float] [float 0xBFEBA7F1A0000000, float 0xBFDD4F0EA0000000], [2 x float] [float 0x3FD8E21020000000, float 0x3FEF20B8A0000000], [2 x float] [float 0x3FED745620000000, float 0xBFE3FA90A0000000], [2 x float] [float 0x3FEC8831E0000000, float 0x3FE1959520000000], [2 x float] [float 0xBFD792F020000000, float 0x3FEEDDDD20000000], [2 x float] [float 0x3FEE0B9D00000000, float 0xBFECCA3520000000], [2 x float] [float 0x3FEFC401A0000000, float 0xBFA33C6B80000000], [2 x float] [float 0xBFEE19AE00000000, float 0x3FDA73E3E0000000], [2 x float] [float 0x3FEFEAB820000000, float 0xBFC58B0440000000], [2 x float] [float 0xBFD6F9C280000000, float 0xBFDDD86340000000], [2 x float] [float 0x3FAAD08D40000000, float 0xBFD068EAC0000000], [2 x float] [float 0x3FD77D83E0000000, float 0xBFD8BCF380000000], [2 x float] [float 0x3FED543A80000000, float 0xBFD3937A20000000], [2 x float] [float 0x3FE6148BC0000000, float 0x3FED1ACD40000000], [2 x float] [float 0xBFD8BDD980000000, float 0x3FEFD72B40000000], [2 x float] [float 0xBFD2B87420000000, float 0x3FD7F6FCE0000000], [2 x float] [float 0xBFE3422040000000, float 0x3FEBC4FD20000000], [2 x float] [float 0xBFEF2C87E0000000, float 0x3FEEDEB3A0000000], [2 x float] [float 0x3FEC4EC5A0000000, float 0x3FE26716A0000000], [2 x float] [float 0x3FAA9E5880000000, float 0x3FCB39A480000000], [2 x float] [float 0xBFE11EB060000000, float 0x3FEF1E0740000000], [2 x float] [float 0xBFDFA28A00000000, float 0x3FEF6B38E0000000], [2 x float] [float 0xBFEFA8C460000000, float 0xBFD9C26C20000000], [2 x float] [float 0xBFEF62D3A0000000, float 0xBFE7506FE0000000], [2 x float] [float 0xBFD17F1520000000, float 0x3FEFFBFAC0000000], [2 x float] [float 0x3FB027D900000000, float 0xBFE173E200000000], [2 x float] [float 0xBFCA30E1E0000000, float 0xBFC2305360000000], [2 x float] [float 0x3FE5310EA0000000, float 0x3FE7358AA0000000], [2 x float] [float 0xBFEB1FE520000000, float 0x3F984AE2E0000000], [2 x float] [float 0xBFEC7E2540000000, float 0x3FEC6FF340000000], [2 x float] [float 0x3FEEB06620000000, float 0x3FE88EF1C0000000], [2 x float] [float 0x3FE7857540000000, float 0xBFA32F88C0000000], [2 x float] [float 0xBFD4510220000000, float 0xBFD792E6A0000000], [2 x float] [float 0xBFD5D4B7C0000000, float 0x3FD9BC34E0000000], [2 x float] [float 0x3FDE983040000000, float 0xBFD93B19A0000000], [2 x float] [float 0x3FEF74AB80000000, float 0x3F94601E60000000], [2 x float] [float 0xBFD3D0FD60000000, float 0xBFC7236140000000], [2 x float] [float 0x3FEFFF64A0000000, float 0xBFD0D205A0000000], [2 x float] [float 0xBFEDCED380000000, float 0xBFEF75D080000000], [2 x float] [float 0x3FEFF9BB20000000, float 0xBFE9A55060000000], [2 x float] [float 0xBFD0A7CCC0000000, float 0xBFE851E680000000], [2 x float] [float 0xBFD6DB2360000000, float 0x3FC8B3E260000000], [2 x float] [float 0xBFEFF7BBA0000000, float 0x3FE7E2EE60000000], [2 x float] [float 0x3FEBB2C380000000, float 0x3FE1CA3FE0000000], [2 x float] [float 0x3FD56192E0000000, float 0x3FEB945A80000000], [2 x float] [float 0x3FEFAEF5A0000000, float 0x3FA7907460000000], [2 x float] [float 0xBFE5579840000000, float 0xBFED5371E0000000], [2 x float] [float 0x3FE47C4160000000, float 0x3FC40809C0000000], [2 x float] [float 0x3FEFDCD180000000, float 0x3FDD572D40000000], [2 x float] [float 0xBFE44C4E40000000, float 0x3FCAFB3480000000], [2 x float] [float 0xBFB3BAC260000000, float 0xBFECAA82E0000000], [2 x float] [float 0x3FEF8C8000000000, float 0x3FEC3CC300000000], [2 x float] [float 0x3FE9A1BCC0000000, float 0xBFD795D0A0000000], [2 x float] [float 0x3FE913EAE0000000, float 0x3FDD1FDDE0000000], [2 x float] [float 0x3FB64ABF80000000, float 0x3FE9E685C0000000], [2 x float] [float 0xBFEBC7A120000000, float 0x3FD92EA9C0000000], [2 x float] [float 0xBFD9423240000000, float 0xBFE5610760000000], [2 x float] [float 0x3FEF51F260000000, float 0xBFE73090C0000000], [2 x float] [float 0xBFEE698F20000000, float 0x3FECA904E0000000], [2 x float] [float 0x3FC5C446E0000000, float 0x3FE17FA2C0000000], [2 x float] [float 0xBFE89C8840000000, float 0xBFEECAE260000000], [2 x float] [float 0x3FEFEAF840000000, float 0x3FDB5380A0000000], [2 x float] [float 0x3FEE8A3B00000000, float 0x3FEF0A6E20000000], [2 x float] [float 0x3FEFDD8100000000, float 0xBFE1506E60000000], [2 x float] [float 0x3FD1F510C0000000, float 0xBFEB50CEC0000000], [2 x float] [float 0x3FEB4836E0000000, float 0xBFE4A960E0000000], [2 x float] [float 0xBFE031DA00000000, float 0xBFE5121B00000000], [2 x float] [float 0xBFEF1B80E0000000, float 0xBFCD8FD6E0000000], [2 x float] [float 0x3FEE892360000000, float 0xBFEFC1C0C0000000], [2 x float] [float 0xBFEF043980000000, float 0x3FE79BB3A0000000], [2 x float] [float 0x3FD3C21860000000, float 0x3FDA91CFA0000000], [2 x float] [float 0xBFCF63F8C0000000, float 0x3FE439E320000000], [2 x float] [float 0xBFD5A3F720000000, float 0xBFD8BE5880000000], [2 x float] [float 0xBFADD55720000000, float 0xBFB1C4B4A0000000], [2 x float] [float 0xBFCD4F5E20000000, float 0x3FEF0EBBC0000000], [2 x float] [float 0xBFC7B15440000000, float 0x3FDE712CC0000000], [2 x float] [float 0xBFBAD99260000000, float 0xBFEC161D40000000], [2 x float] [float 0xBFE700F300000000, float 0x3FE8F84C40000000], [2 x float] [float 0x3FEFEF1D40000000, float 0x3FECD02F20000000], [2 x float] [float 0x3FE26B9600000000, float 0xBFED218860000000], [2 x float] [float 0x3FD2808E80000000, float 0x3FEED188A0000000], [2 x float] [float 0x3FDB003EE0000000, float 0x3FDED0ACC0000000], [2 x float] [float 0x3FEDDE01E0000000, float 0xBFDBDD1B20000000], [2 x float] [float 0xBFEF1165E0000000, float 0x3FEBB94200000000], [2 x float] [float 0x3FD780ACE0000000, float 0x3FE4E4B140000000], [2 x float] [float 0xBFE9F32400000000, float 0x3FB678FE20000000], [2 x float] [float 0xBFD0CB42A0000000, float 0xBFEDB00DC0000000], [2 x float] [float 0x3FEAE0FE40000000, float 0x3FE1DE6680000000], [2 x float] [float 0xBFEFF89880000000, float 0xBFEEBA5600000000], [2 x float] [float 0x3FE7E348C0000000, float 0x3FBF174700000000], [2 x float] [float 0xBFE7ED88E0000000, float 0xBFD136FA80000000], [2 x float] [float 0x3FEEA66F20000000, float 0xBFE94B9B20000000], [2 x float] [float 0x3FEE8D1760000000, float 0xBFB5FCBD80000000], [2 x float] [float 0x3FDF2C5F80000000, float 0x3FEFFFEBE0000000], [2 x float] [float 0x3FDDA70A80000000, float 0x3FBC117320000000], [2 x float] [float 0xBFE87AA280000000, float 0x3FEC8C28C0000000], [2 x float] [float 0x3FE25DFE80000000, float 0x3FD695DD80000000], [2 x float] [float 0x3FE81EAA00000000, float 0x3FEEF21760000000], [2 x float] [float 0xBFE2EF9120000000, float 0xBFEC9C1680000000], [2 x float] [float 0x3FE8073380000000, float 0xBFD2F3BD80000000], [2 x float] [float 0xBFEF8DF4A0000000, float 0x3FD005B840000000], [2 x float] [float 0xBFDA164AA0000000, float 0xBFECD08880000000], [2 x float] [float 0x3FE56AD880000000, float 0x3FEF8FBA60000000], [2 x float] [float 0xBFEF3039E0000000, float 0xBF5F2A8B20000000], [2 x float] [float 0x3FECD8B860000000, float 0x3FEFEE1760000000], [2 x float] [float 0xBFEBEC47E0000000, float 0x3FEFC13720000000], [2 x float] [float 0xBFED4A17E0000000, float 0xBFC4182700000000], [2 x float] [float 0xBFA0ECE5E0000000, float 0xBFD7CFB5E0000000], [2 x float] [float 0x3FB27DB2E0000000, float 0xBFEC6AE7E0000000], [2 x float] [float 0x3FEFD6E080000000, float 0x3FEF11F840000000], [2 x float] [float 0xBFE7F83660000000, float 0x3FEFFECFA0000000], [2 x float] [float 0x3FA779F360000000, float 0x3FEFF0A060000000], [2 x float] [float 0xBFEC7F61C0000000, float 0xBFD458C980000000], [2 x float] [float 0xBFEACF6EE0000000, float 0x3FEF3E79A0000000], [2 x float] [float 0x3FD5693C40000000, float 0xBFEB981600000000], [2 x float] [float 0xBFEFE80B80000000, float 0x3FEDD60E60000000], [2 x float] [float 0xBFCD381FE0000000, float 0x3FC828E1A0000000], [2 x float] [float 0x3FE584F5C0000000, float 0xBFA2AB2980000000], [2 x float] [float 0xBFAA59ABA0000000, float 0xBFEDA1C480000000], [2 x float] [float 0x3FEFFBAEC0000000, float 0x3FEDF5C760000000], [2 x float] [float 0x3FE56CA2E0000000, float 0x3FEFA65D80000000], [2 x float] [float 0xBFEFDF7960000000, float 0xBFDC943A80000000], [2 x float] [float 0x3FEA4608A0000000, float 0x3FEFDA60A0000000], [2 x float] [float 0x3FEFBD5BE0000000, float 0x3FE70C1FC0000000], [2 x float] [float 0xBFE4E41D20000000, float 0x3FE0B322E0000000], [2 x float] [float 0x3FEE0B1880000000, float 0xBFE7F76C80000000], [2 x float] [float 0x3FEEF48D40000000, float 0x3FED15DB80000000], [2 x float] [float 0xBFCC730160000000, float 0x3FE24799C0000000], [2 x float] [float 0xBFDC3EB720000000, float 0xBFEDA911E0000000], [2 x float] [float 0xBFEB6C21E0000000, float 0x3FEC6E24E0000000], [2 x float] [float 0x3FED5EDDE0000000, float 0xBFDDAB1D00000000], [2 x float] [float 0x3FE737DE00000000, float 0xBFEFF7C580000000], [2 x float] [float 0xBFEFE85F60000000, float 0x3FE2A0B0E0000000], [2 x float] [float 0x3FE8D82F60000000, float 0x3FEE2ED840000000], [2 x float] [float 0x3FB3C1A020000000, float 0x3FE2C3A860000000], [2 x float] [float 0xBFE1EF9A20000000, float 0x3FEA683A20000000], [2 x float] [float 0x3FEF7CD660000000, float 0x3FD9425860000000], [2 x float] [float 0x3FDE6E1780000000, float 0x3FE5F4C7E0000000], [2 x float] [float 0x3FE5041A80000000, float 0x3FC776E920000000], [2 x float] [float 0x3FA0C27A80000000, float 0xBFE7FA8540000000], [2 x float] [float 0xBFD8C202A0000000, float 0x3FE06D8E40000000], [2 x float] [float 0xBFEF269B40000000, float 0xBFEEE552E0000000], [2 x float] [float 0xBFE10CDFC0000000, float 0xBFED4164E0000000], [2 x float] [float 0x3FEFF108C0000000, float 0x3FE3901000000000], [2 x float] [float 0xBFE014D940000000, float 0xBFEC6CE640000000], [2 x float] [float 0x3F94700FE0000000, float 0x3FEB4582A0000000], [2 x float] [float 0x3FEFFA4C00000000, float 0x3FEE43E740000000], [2 x float] [float 0x3FEA87CDE0000000, float 0xBFB03021A0000000], [2 x float] [float 0xBFE2C57C40000000, float 0x3FEEFD3240000000], [2 x float] [float 0xBFC67E8FE0000000, float 0xBFDED3AB20000000], [2 x float] [float 0x3FEAB2EFE0000000, float 0xBFC0AB8640000000], [2 x float] [float 0x3FAE722F60000000, float 0x3FCA410F60000000], [2 x float] [float 0x3FEA14EDE0000000, float 0xBFEE4CAC40000000], [2 x float] [float 0xBFDCC8EE20000000, float 0x3FDA2C2AC0000000], [2 x float] [float 0xBFECB80800000000, float 0x3FEFF36E80000000], [2 x float] [float 0x3FD964B8C0000000, float 0xBFE7F41820000000], [2 x float] [float 0xBFB36D7E40000000, float 0x3FE7B5F640000000], [2 x float] [float 0x3FE86E08E0000000, float 0x3FDAB7C480000000], [2 x float] [float 0xBFE7D63AC0000000, float 0x3FEE4FF260000000], [2 x float] [float 0x3FE4C2FAC0000000, float 0x3FDA749940000000], [2 x float] [float 0x3FE3F13760000000, float 0xBFEDCA9D20000000], [2 x float] [float 0x3FDB04A3C0000000, float 0xBFB3BEA700000000], [2 x float] [float 0x3F9BB1D380000000, float 0xBFABBCD960000000], [2 x float] [float 0x3FE999BEC0000000, float 0x3FED4B2300000000], [2 x float] [float 0xBFE9648080000000, float 0xBFD72C7740000000], [2 x float] [float 0x3FE4706C80000000, float 0x3FB4CEEE80000000], [2 x float] [float 0x3FE0ECCAA0000000, float 0x3FE3373420000000], [2 x float] [float 0x3FE7C19F40000000, float 0x3FA6FFA4A0000000], [2 x float] [float 0x3FEFB5F480000000, float 0xBFC8E5C380000000], [2 x float] [float 0xBFE9BB60C0000000, float 0xBFEC530D40000000], [2 x float] [float 0xBFE4AD10C0000000, float 0x3FE71A8400000000], [2 x float] [float 0x3FBDD80960000000, float 0xBFEAC5A8C0000000], [2 x float] [float 0xBFEE6AC1C0000000, float 0xBFEF055120000000], [2 x float] [float 0xBFE3E9CA00000000, float 0x3FEA7C4B40000000], [2 x float] [float 0x3F9EC40DA0000000, float 0xBFEFEA9C40000000], [2 x float] [float 0xBFEF5B1CE0000000, float 0x3FD76070E0000000], [2 x float] [float 0xBFEFFEEF00000000, float 0xBFD70DC7E0000000], [2 x float] [float 0x3FEC83F1C0000000, float 0xBFEF537F40000000], [2 x float] [float 0x3FBAA4F600000000, float 0x3FE8C12680000000], [2 x float] [float 0x3FEEB56E60000000, float 0xBFD6ADCE00000000], [2 x float] [float 0x3FE04513E0000000, float 0x3FEEC12460000000], [2 x float] [float 0x3FC5C4A2C0000000, float 0xBFE897E1C0000000], [2 x float] [float 0x3FD08EFAA0000000, float 0x3FEFF74260000000], [2 x float] [float 0xBF86DB0C20000000, float 0x3FEF84CB40000000], [2 x float] [float 0xBFE978B9C0000000, float 0x3FEF159420000000], [2 x float] [float 0xBFEFC3C3E0000000, float 0xBFEFDA8C40000000], [2 x float] [float 0xBFEFF20BC0000000, float 0x3F9338CE80000000], [2 x float] [float 0xBFE6A804E0000000, float 0x3FD58E3E60000000], [2 x float] [float 0xBFE68CA940000000, float 0x3FEDD8E7E0000000], [2 x float] [float 0x3FEFF362E0000000, float 0xBFEF979D00000000], [2 x float] [float 0xBFE446DBC0000000, float 0xBFC5161140000000], [2 x float] [float 0xBFC4CF7E20000000, float 0xBFEEB35540000000], [2 x float] [float 0xBFDBEEE4E0000000, float 0xBFEE566DA0000000], [2 x float] [float 0xBFEFF39640000000, float 0x3FEECC6780000000], [2 x float] [float 0xBFC57FDD20000000, float 0xBFEFAD0EA0000000], [2 x float] [float 0xBFEC274220000000, float 0xBFE6F3C580000000], [2 x float] [float 0x3FDC46F580000000, float 0xBFEDF12BA0000000], [2 x float] [float 0x3FEDDBF840000000, float 0xBFEFF8E600000000], [2 x float] [float 0xBFEE0FB920000000, float 0xBFE20D0E60000000], [2 x float] [float 0xBFEC594B00000000, float 0x3FDE7AD080000000], [2 x float] [float 0x3FEFFDA980000000, float 0xBFEAD843E0000000], [2 x float] [float 0xBFE81ED560000000, float 0x3F80AF13E0000000], [2 x float] [float 0x3FEE0B4780000000, float 0xBFBCE36DA0000000], [2 x float] [float 0x3FEB3D8EC0000000, float 0x3FE0C07360000000], [2 x float] [float 0x3FD968AE40000000, float 0x3FEA2B6340000000], [2 x float] [float 0xBFD7B216A0000000, float 0xBFEBDCE900000000], [2 x float] [float 0xBFD70E4EC0000000, float 0x3FD62DFEE0000000], [2 x float] [float 0xBFEDE26960000000, float 0xBFEB085180000000], [2 x float] [float 0xBFE4E54720000000, float 0xBFC79A47C0000000], [2 x float] [float 0x3FBE9E5080000000, float 0x3FEFF7C120000000], [2 x float] [float 0x3FEE2C7260000000, float 0x3FEA9CC980000000], [2 x float] [float 0x3FE806A5C0000000, float 0xBFD6BDC360000000], [2 x float] [float 0x3FE226AA20000000, float 0xBFCED17F60000000], [2 x float] [float 0x3FDDFD2D20000000, float 0xBFD34A2D00000000], [2 x float] [float 0x3FEF23D320000000, float 0xBFEFDAFCE0000000], [2 x float] [float 0xBFD8831180000000, float 0x3FEF868160000000], [2 x float] [float 0x3FDA41AAC0000000, float 0x3F95ACE620000000], [2 x float] [float 0x3FB8AC6680000000, float 0x3FA696E040000000], [2 x float] [float 0xBFEB4A6760000000, float 0x3FED45ADA0000000], [2 x float] [float 0x3FEC6FF800000000, float 0xBFEFEA5020000000], [2 x float] [float 0xBFDED97C60000000, float 0xBFEEFA50C0000000], [2 x float] [float 0x3FD1A57DE0000000, float 0x3FE2C35BE0000000], [2 x float] [float 0xBFE515A340000000, float 0x3FE2D3D0A0000000], [2 x float] [float 0x3FEFA0D0E0000000, float 0x3FEFFF8980000000], [2 x float] [float 0xBFCA6F08C0000000, float 0x3FE1784320000000], [2 x float] [float 0xBFE3E16560000000, float 0xBFE32A7D80000000], [2 x float] [float 0x3FCA027E00000000, float 0xBFEBCD2480000000], [2 x float] [float 0xBFEF4B0080000000, float 0x3FEED024A0000000], [2 x float] [float 0x3FBC72B600000000, float 0x3FCB8020A0000000], [2 x float] [float 0xBFDA79C9E0000000, float 0x3FD20F0C00000000], [2 x float] [float 0x3FCEE3EA00000000, float 0x3FE06A08C0000000], [2 x float] [float 0xBFE53EF2C0000000, float 0xBFB51E82A0000000], [2 x float] [float 0xBFE12EED20000000, float 0xBFEF3F7AE0000000], [2 x float] [float 0xBFEF1CA680000000, float 0x3FCC439C80000000], [2 x float] [float 0x3FEBF73120000000, float 0xBFC0610CE0000000], [2 x float] [float 0x3FC8626C20000000, float 0x3F90692900000000], [2 x float] [float 0xBFDDAA8C40000000, float 0xBFEE7ACD20000000], [2 x float] [float 0xBFB21586C0000000, float 0xBFEE3BC920000000], [2 x float] [float 0xBFED950500000000, float 0xBFBAC57C80000000], [2 x float] [float 0xBFEAD2BF40000000, float 0xBF915B7440000000], [2 x float] [float 0x3FE8119640000000, float 0xBFEFFC5EA0000000], [2 x float] [float 0xBFDAF227C0000000, float 0x3FEFE923C0000000], [2 x float] [float 0xBFE7120140000000, float 0xBFD667DE40000000], [2 x float] [float 0x3FE93AD820000000, float 0x3FE0E99620000000], [2 x float] [float 0x3FEF2A84C0000000, float 0xBFD115DD00000000], [2 x float] [float 0x3FEFBEFE60000000, float 0xBFE23E44E0000000], [2 x float] [float 0x3FE8929AE0000000, float 0xBFE87C7740000000], [2 x float] [float 0xBFEA3DA360000000, float 0xBFE78797A0000000], [2 x float] [float 0x3FEA374BA0000000, float 0x3FEFE74B80000000], [2 x float] [float 0xBFD119C7C0000000, float 0x3FE60C9060000000], [2 x float] [float 0xBFDBB81DE0000000, float 0x3FEB4D9020000000], [2 x float] [float 0x3FEFBE0D80000000, float 0x3FED6680A0000000], [2 x float] [float 0xBFE9D249E0000000, float 0xBFD4E1B240000000], [2 x float] [float 0x3FDB923A60000000, float 0xBFCC0E7300000000], [2 x float] [float 0x3FE5AAC300000000, float 0xBFEE8D9060000000], [2 x float] [float 0x3FE1F7F400000000, float 0xBFE69F3CA0000000], [2 x float] [float 0x3FBBBAC500000000, float 0xBFB616FEA0000000], [2 x float] [float 0x3FED318380000000, float 0xBFE51DAF00000000], [2 x float] [float 0xBFDF57B800000000, float 0x3FE2033700000000], [2 x float] [float 0xBFEC7DA320000000, float 0xBFE6EE1B20000000], [2 x float] [float 0x3FE4E2DF80000000, float 0x3FE517D6E0000000], [2 x float] [float 0x3FE594A460000000, float 0xBFEA2395A0000000], [2 x float] [float 0xBFDE92C5E0000000, float 0xBFC57D9A00000000], [2 x float] [float 0xBFEFE8BBA0000000, float 0xBFEDF0E8C0000000], [2 x float] [float 0xBFED15ACE0000000, float 0x3FE3D9DBA0000000], [2 x float] [float 0xBFB0F194A0000000, float 0xBFCE7AC980000000], [2 x float] [float 0x3FEFD153E0000000, float 0x3FC8147F80000000], [2 x float] [float 0x3FEF427860000000, float 0xBFD25865C0000000], [2 x float] [float 0x3FEE572260000000, float 0xBFEF33BE80000000], [2 x float] [float 0xBFEE89FE80000000, float 0xBFE9797C60000000], [2 x float] [float 0xBFDF6D53E0000000, float 0x3FD50D8D40000000], [2 x float] [float 0x3FEFF64400000000, float 0x3FEC7A6320000000], [2 x float] [float 0x3FE024CBC0000000, float 0xBFEB84B760000000], [2 x float] [float 0x3FDE2F2B00000000, float 0xBFC7E92120000000], [2 x float] [float 0xBFE3DDB920000000, float 0x3FE8000E20000000], [2 x float] [float 0xBFDC132C00000000, float 0x3FEFFFD780000000], [2 x float] [float 0x3FEF8FD0E0000000, float 0xBFE1252F00000000], [2 x float] [float 0xBFE3AEEDC0000000, float 0xBFECA51200000000], [2 x float] [float 0xBFA3AB2760000000, float 0xBFE65D4AC0000000], [2 x float] [float 0xBFD343F000000000, float 0xBFB3A12CE0000000], [2 x float] [float 0x3FDACDD460000000, float 0x3F9667F860000000], [2 x float] [float 0xBFEB903760000000, float 0x3FEFA9C720000000], [2 x float] [float 0x3FE5833980000000, float 0xBFC145D760000000], [2 x float] [float 0xBFE6A2CEC0000000, float 0xBFE87EC240000000], [2 x float] [float 0x3FEE182980000000, float 0x3FB71B6940000000], [2 x float] [float 0xBFEA5D1700000000, float 0x3FB6D8EFC0000000], [2 x float] [float 0xBFD4867540000000, float 0x3FE00BBFC0000000], [2 x float] [float 0x3FE26E0820000000, float 0xBFEFAB5460000000], [2 x float] [float 0xBFD73FA7A0000000, float 0x3FB30C09A0000000], [2 x float] [float 0x3FEFFE4880000000, float 0xBFC2163660000000], [2 x float] [float 0xBFED8E9FE0000000, float 0xBFEF5A76C0000000], [2 x float] [float 0xBFDC8C70A0000000, float 0xBFE15AC9C0000000], [2 x float] [float 0x3FDC4E1E80000000, float 0x3FE6D31680000000], [2 x float] [float 0x3FA2CCD7A0000000, float 0x3FE45AA2A0000000], [2 x float] [float 0x3FE0B23600000000, float 0xBFEB53B540000000], [2 x float] [float 0xBFEE4DEAE0000000, float 0xBF92B3A980000000], [2 x float] [float 0xBFEF9A6320000000, float 0x3FEA551760000000], [2 x float] [float 0x3FEBFAA880000000, float 0x3FEC9B9B40000000], [2 x float] [float 0xBFEDE45080000000, float 0x3FDA7AB980000000], [2 x float] [float 0x3FEEBD8EE0000000, float 0x3FEDCC1EE0000000], [2 x float] [float 0x3FEF360180000000, float 0x3FEB917C00000000], [2 x float] [float 0x3FEFE2B600000000, float 0x3FE675F7E0000000], [2 x float] [float 0xBFEE4E3DA0000000, float 0xBFD2EE64E0000000], [2 x float] [float 0x3FED4FDB20000000, float 0xBFEF684540000000], [2 x float] [float 0xBFEFFBC0C0000000, float 0xBFE308E1A0000000], [2 x float] [float 0x3FEF1388C0000000, float 0xBFE59BEFA0000000], [2 x float] [float 0x3FC21622A0000000, float 0xBFEE6DDA80000000], [2 x float] [float 0xBFDE156160000000, float 0xBFD7E5E020000000], [2 x float] [float 0x3FE9D35BE0000000, float 0x3FD2FA7500000000], [2 x float] [float 0xBFD8F2B9C0000000, float 0x3FECA9C9C0000000], [2 x float] [float 0xBF859103A0000000, float 0xBFE56D4940000000], [2 x float] [float 0xBFED348A80000000, float 0xBFBD7FAC40000000]], align 16
@ff_aac_sbr_init.sbr_tmp = internal constant [10 x %struct.anon] [%struct.anon { i8* bitcast ([121 x i32]* @t_huffman_env_1_5dB_codes to i8*), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @t_huffman_env_1_5dB_bits, i32 0, i32 0), i32 484, i32 4 }, %struct.anon { i8* bitcast ([121 x i32]* @f_huffman_env_1_5dB_codes to i8*), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @f_huffman_env_1_5dB_bits, i32 0, i32 0), i32 484, i32 4 }, %struct.anon { i8* bitcast ([49 x i32]* @t_huffman_env_bal_1_5dB_codes to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @t_huffman_env_bal_1_5dB_bits, i32 0, i32 0), i32 196, i32 4 }, %struct.anon { i8* bitcast ([49 x i32]* @f_huffman_env_bal_1_5dB_codes to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @f_huffman_env_bal_1_5dB_bits, i32 0, i32 0), i32 196, i32 4 }, %struct.anon { i8* bitcast ([63 x i32]* @t_huffman_env_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @t_huffman_env_3_0dB_bits, i32 0, i32 0), i32 252, i32 4 }, %struct.anon { i8* bitcast ([63 x i32]* @f_huffman_env_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @f_huffman_env_3_0dB_bits, i32 0, i32 0), i32 252, i32 4 }, %struct.anon { i8* bitcast ([25 x i16]* @t_huffman_env_bal_3_0dB_codes to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_env_bal_3_0dB_bits, i32 0, i32 0), i32 50, i32 2 }, %struct.anon { i8* bitcast ([25 x i16]* @f_huffman_env_bal_3_0dB_codes to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @f_huffman_env_bal_3_0dB_bits, i32 0, i32 0), i32 50, i32 2 }, %struct.anon { i8* bitcast ([63 x i16]* @t_huffman_noise_3_0dB_codes to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @t_huffman_noise_3_0dB_bits, i32 0, i32 0), i32 126, i32 2 }, %struct.anon { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_noise_bal_3_0dB_codes, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @t_huffman_noise_bal_3_0dB_bits, i32 0, i32 0), i32 25, i32 1 }], align 16
@t_huffman_env_1_5dB_codes = internal constant [121 x i32] [i32 262102, i32 262103, i32 262104, i32 262105, i32 262106, i32 262107, i32 524216, i32 524217, i32 524218, i32 524219, i32 524220, i32 524221, i32 524222, i32 524223, i32 524224, i32 524225, i32 524226, i32 524227, i32 524228, i32 524229, i32 524230, i32 524231, i32 524232, i32 524233, i32 524234, i32 524235, i32 524236, i32 524237, i32 524238, i32 524239, i32 524240, i32 524241, i32 524242, i32 524243, i32 131046, i32 262100, i32 65520, i32 131049, i32 262101, i32 131047, i32 65521, i32 65516, i32 65517, i32 65518, i32 32756, i32 16377, i32 16375, i32 8186, i32 8185, i32 4091, i32 2044, i32 1020, i32 509, i32 253, i32 125, i32 61, i32 29, i32 13, i32 5, i32 1, i32 0, i32 4, i32 12, i32 28, i32 60, i32 124, i32 252, i32 508, i32 1021, i32 4090, i32 8184, i32 16374, i32 16376, i32 32757, i32 65519, i32 131048, i32 65522, i32 524244, i32 524245, i32 524246, i32 524247, i32 524248, i32 524249, i32 524250, i32 524251, i32 524252, i32 524253, i32 524254, i32 524255, i32 524256, i32 524257, i32 524258, i32 524259, i32 524260, i32 524261, i32 524262, i32 524263, i32 524264, i32 524265, i32 524266, i32 524267, i32 524268, i32 524269, i32 524270, i32 524271, i32 524272, i32 524273, i32 524274, i32 524275, i32 524276, i32 524277, i32 524278, i32 524279, i32 524280, i32 524281, i32 524282, i32 524283, i32 524284, i32 524285, i32 524286, i32 524287], align 16
@t_huffman_env_1_5dB_bits = internal constant [121 x i8] c"\12\12\12\12\12\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\11\12\10\11\12\11\10\10\10\10\0F\0E\0E\0D\0D\0C\0B\0A\09\08\07\06\05\04\03\02\02\03\04\05\06\07\08\09\0A\0C\0D\0E\0E\0F\10\11\10\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@f_huffman_env_1_5dB_codes = internal constant [121 x i32] [i32 524263, i32 524264, i32 1048530, i32 1048531, i32 1048532, i32 1048533, i32 1048534, i32 1048535, i32 1048536, i32 524250, i32 1048537, i32 1048538, i32 1048539, i32 1048540, i32 524251, i32 1048541, i32 524252, i32 524253, i32 1048542, i32 262116, i32 1048543, i32 1048544, i32 1048545, i32 524254, i32 1048546, i32 1048547, i32 1048548, i32 524255, i32 1048549, i32 524256, i32 262120, i32 524257, i32 262112, i32 262121, i32 131055, i32 262117, i32 131052, i32 131053, i32 131054, i32 65524, i32 65523, i32 65520, i32 32759, i32 32758, i32 16378, i32 8186, i32 8185, i32 4090, i32 4088, i32 2041, i32 1019, i32 508, i32 506, i32 251, i32 124, i32 60, i32 28, i32 12, i32 5, i32 1, i32 0, i32 4, i32 13, i32 29, i32 61, i32 250, i32 252, i32 507, i32 1018, i32 2040, i32 2042, i32 2043, i32 4089, i32 4091, i32 8184, i32 8187, i32 16376, i32 16377, i32 65521, i32 65522, i32 131050, i32 131051, i32 262113, i32 262114, i32 262122, i32 262115, i32 262118, i32 262119, i32 262123, i32 1048550, i32 524258, i32 1048551, i32 1048552, i32 1048553, i32 1048554, i32 1048555, i32 1048556, i32 524259, i32 1048557, i32 1048558, i32 1048559, i32 1048560, i32 524260, i32 1048561, i32 262124, i32 1048562, i32 1048563, i32 524261, i32 524262, i32 1048564, i32 1048565, i32 1048566, i32 1048567, i32 1048568, i32 1048569, i32 1048570, i32 1048571, i32 1048572, i32 1048573, i32 1048574, i32 1048575], align 16
@f_huffman_env_1_5dB_bits = internal constant [121 x i8] c"\13\13\14\14\14\14\14\14\14\13\14\14\14\14\13\14\13\13\14\12\14\14\14\13\14\14\14\13\14\13\12\13\12\12\11\12\11\11\11\10\10\10\0F\0F\0E\0D\0D\0C\0C\0B\0A\09\09\08\07\06\05\04\03\02\02\03\04\05\06\08\08\09\0A\0B\0B\0B\0C\0C\0D\0D\0E\0E\10\10\11\11\12\12\12\12\12\12\12\14\13\14\14\14\14\14\14\13\14\14\14\14\13\14\12\14\14\13\13\14\14\14\14\14\14\14\14\14\14\14\14", align 16
@t_huffman_env_bal_1_5dB_codes = internal constant [49 x i32] [i32 65508, i32 65509, i32 65510, i32 65511, i32 65512, i32 65513, i32 65514, i32 65515, i32 65516, i32 65517, i32 65518, i32 65519, i32 65520, i32 65521, i32 65522, i32 65523, i32 65524, i32 65506, i32 4092, i32 2044, i32 510, i32 126, i32 30, i32 6, i32 0, i32 2, i32 14, i32 62, i32 254, i32 2045, i32 4093, i32 32752, i32 65507, i32 65525, i32 65526, i32 65527, i32 65528, i32 65529, i32 65530, i32 131062, i32 131063, i32 131064, i32 131065, i32 131066, i32 131067, i32 131068, i32 131069, i32 131070, i32 131071], align 16
@t_huffman_env_bal_1_5dB_bits = internal constant [49 x i8] c"\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\0C\0B\09\07\05\03\01\02\04\06\08\0B\0C\0F\10\10\10\10\10\10\10\11\11\11\11\11\11\11\11\11\11", align 16
@f_huffman_env_bal_1_5dB_codes = internal constant [49 x i32] [i32 262114, i32 262115, i32 262116, i32 262117, i32 262118, i32 262119, i32 262120, i32 262121, i32 262122, i32 262123, i32 262124, i32 262125, i32 262126, i32 262127, i32 262128, i32 65527, i32 131056, i32 16380, i32 2046, i32 2044, i32 254, i32 126, i32 14, i32 2, i32 0, i32 6, i32 30, i32 62, i32 510, i32 2045, i32 4094, i32 32762, i32 65526, i32 262129, i32 262130, i32 262131, i32 262132, i32 262133, i32 262134, i32 262135, i32 262136, i32 262137, i32 262138, i32 262139, i32 262140, i32 262141, i32 262142, i32 524286, i32 524287], align 16
@f_huffman_env_bal_1_5dB_bits = internal constant [49 x i8] c"\12\12\12\12\12\12\12\12\12\12\12\12\12\12\12\10\11\0E\0B\0B\08\07\04\02\01\03\05\06\09\0B\0C\0F\10\12\12\12\12\12\12\12\12\12\12\12\12\12\12\13\13", align 16
@t_huffman_env_3_0dB_codes = internal constant [63 x i32] [i32 262125, i32 262126, i32 524254, i32 524255, i32 524256, i32 524257, i32 524258, i32 524259, i32 524260, i32 524261, i32 524262, i32 524263, i32 524264, i32 524265, i32 524266, i32 524267, i32 524268, i32 131060, i32 65527, i32 65529, i32 65528, i32 16379, i32 16378, i32 16376, i32 8186, i32 4092, i32 2044, i32 254, i32 62, i32 14, i32 2, i32 0, i32 6, i32 30, i32 126, i32 510, i32 2045, i32 8187, i32 16377, i32 16380, i32 32762, i32 65526, i32 131061, i32 262124, i32 524269, i32 524270, i32 524271, i32 524272, i32 524273, i32 524274, i32 524275, i32 524276, i32 524277, i32 524278, i32 524279, i32 524280, i32 524281, i32 524282, i32 524283, i32 524284, i32 524285, i32 524286, i32 524287], align 16
@t_huffman_env_3_0dB_bits = internal constant [63 x i8] c"\12\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\11\10\10\10\0E\0E\0E\0D\0C\0B\08\06\04\02\01\03\05\07\09\0B\0D\0E\0E\0F\10\11\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@f_huffman_env_3_0dB_codes = internal constant [63 x i32] [i32 1048560, i32 1048561, i32 1048562, i32 1048563, i32 1048564, i32 1048565, i32 1048566, i32 262131, i32 524277, i32 524270, i32 524271, i32 524278, i32 262132, i32 262130, i32 1048567, i32 524272, i32 131061, i32 262128, i32 131060, i32 65527, i32 65526, i32 32760, i32 16379, i32 4093, i32 2045, i32 1021, i32 509, i32 253, i32 62, i32 14, i32 2, i32 0, i32 6, i32 30, i32 252, i32 508, i32 1020, i32 2044, i32 4092, i32 8188, i32 16378, i32 32761, i32 32762, i32 65528, i32 65529, i32 131062, i32 131063, i32 262133, i32 262134, i32 262129, i32 1048568, i32 524273, i32 524274, i32 524275, i32 1048569, i32 524279, i32 524276, i32 1048570, i32 1048571, i32 1048572, i32 1048573, i32 1048574, i32 1048575], align 16
@f_huffman_env_3_0dB_bits = internal constant [63 x i8] c"\14\14\14\14\14\14\14\12\13\13\13\13\12\12\14\13\11\12\11\10\10\0F\0E\0C\0B\0A\09\08\06\04\02\01\03\05\08\09\0A\0B\0C\0D\0E\0F\0F\10\10\11\11\12\12\12\14\13\13\13\14\13\13\14\14\14\14\14\14", align 16
@t_huffman_env_bal_3_0dB_codes = internal constant [25 x i16] [i16 8178, i16 8179, i16 8180, i16 8181, i16 8182, i16 8183, i16 8184, i16 4088, i16 254, i16 126, i16 14, i16 6, i16 0, i16 2, i16 30, i16 62, i16 510, i16 8185, i16 8186, i16 8187, i16 8188, i16 8189, i16 8190, i16 16382, i16 16383], align 16
@t_huffman_env_bal_3_0dB_bits = internal constant [25 x i8] c"\0D\0D\0D\0D\0D\0D\0D\0C\08\07\04\03\01\02\05\06\09\0D\0D\0D\0D\0D\0D\0E\0E", align 16
@f_huffman_env_bal_3_0dB_codes = internal constant [25 x i16] [i16 8183, i16 8184, i16 8185, i16 8186, i16 8187, i16 16376, i16 16377, i16 2044, i16 254, i16 126, i16 14, i16 2, i16 0, i16 6, i16 30, i16 62, i16 510, i16 4090, i16 8182, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16383], align 16
@f_huffman_env_bal_3_0dB_bits = internal constant [25 x i8] c"\0D\0D\0D\0D\0D\0E\0E\0B\08\07\04\02\01\03\05\06\09\0C\0D\0E\0E\0E\0E\0E\0E", align 16
@t_huffman_noise_3_0dB_codes = internal constant [63 x i16] [i16 8142, i16 8143, i16 8144, i16 8145, i16 8146, i16 8147, i16 8148, i16 8149, i16 8150, i16 8151, i16 8152, i16 8153, i16 8154, i16 8155, i16 8156, i16 8157, i16 8158, i16 8159, i16 8160, i16 8161, i16 8162, i16 8163, i16 8164, i16 8165, i16 8166, i16 8167, i16 2034, i16 253, i16 62, i16 14, i16 6, i16 0, i16 2, i16 30, i16 252, i16 1016, i16 8140, i16 8168, i16 8169, i16 8170, i16 8171, i16 8172, i16 8141, i16 8173, i16 8174, i16 8175, i16 8176, i16 8177, i16 8178, i16 8179, i16 8180, i16 8181, i16 8182, i16 8183, i16 8184, i16 8185, i16 8186, i16 8187, i16 8188, i16 8189, i16 8190, i16 16382, i16 16383], align 16
@t_huffman_noise_3_0dB_bits = internal constant [63 x i8] c"\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0B\08\06\04\03\01\02\05\08\0A\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E", align 16
@t_huffman_noise_bal_3_0dB_codes = internal constant [25 x i8] c"\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\1C\02\00\06:\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@t_huffman_noise_bal_3_0dB_bits = internal constant [25 x i8] c"\08\08\08\08\08\08\08\08\08\08\05\02\01\03\06\08\08\08\08\08\08\08\08\08\08", align 16
@ff_aac_sbr_init.table = internal global [1098 x [2 x i16]] zeroinitializer, align 16
@vlc_sbr = internal global [10 x %struct.VLC] zeroinitializer, align 16
@ff_aac_sbr_init.table.1 = internal global [1092 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.2 = internal global [768 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.3 = internal global [1026 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.4 = internal global [1058 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.5 = internal global [1052 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.6 = internal global [544 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.7 = internal global [544 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.8 = internal global [592 x [2 x i16]] zeroinitializer, align 16
@ff_aac_sbr_init.table.9 = internal global [512 x [2 x i16]] zeroinitializer, align 16
@.str = private unnamed_addr constant [49 x i8] c"Expected to read %d SBR bytes actually read %d.\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"element type mismatch %d != %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"No quantized data read for sbr_dequant.\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"sbr->data[ch].bs_num_env > 0\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"libavcodec/aacsbr_template.c\00", align 1
@sbr_qmf_window_us = internal global [640 x float] [float 0.000000e+00, float 0xBF421AF220000000, float 0xBF42687620000000, float 0xBF40364760000000, float 0xBF3FF34600000000, float 0xBF400935A0000000, float 0xBF40847520000000, float 0xBF41205C20000000, float 0xBF41E9AFE0000000, float 0xBF429AE2C0000000, float 0xBF433CE4A0000000, float 0xBF44188560000000, float 0xBF44AF4D80000000, float 0xBF456E6DE0000000, float 0xBF463589E0000000, float 0xBF46BF0C40000000, float 0xBF47745820000000, float 0xBF47C5F8A0000000, float 0xBF4861E9E0000000, float 0xBF488B91A0000000, float 0xBF492B99E0000000, float 0xBF49501280000000, float 0xBF49ABEA00000000, float 0xBF497E3A20000000, float 0xBF49923020000000, float 0xBF49905460000000, float 0xBF496BDCE0000000, float 0xBF49012C60000000, float 0xBF48AC9F60000000, float 0xBF47FBEC00000000, float 0xBF47A4B560000000, float 0xBF46AB2FA0000000, float 0xBF45CAC5C0000000, float 0xBF44C7B700000000, float 0xBF437BF720000000, float 0xBF423BE7A0000000, float 0xBF40DC6B20000000, float 0xBF3E302180000000, float 0xBF3AD67920000000, float 0xBF36F1FF40000000, float 0xBF32FC53E0000000, float 0xBF2B80D9C0000000, float 0xBF22F53F00000000, float 0xBF102EDBC0000000, float 0x3EEC4D04E0000000, float 0x3F1CB047A0000000, float 0x3F2AC73A40000000, float 0x3F33547DE0000000, float 0x3F3A6369C0000000, float 0x3F40BC6340000000, float 0x3F4471F7C0000000, float 0x3F48703EA0000000, float 0x3F4C354900000000, float 0x3F50327BE0000000, float 0x3F526EA840000000, float 0x3F549B8C00000000, float 0x3F56C720E0000000, float 0x3F594D5B00000000, float 0x3F5BA2FCA0000000, float 0x3F5E0FD200000000, float 0x3F6040FD20000000, float 0x3F6194D200000000, float 0x3F62DB1160000000, float 0x3F642C5DC0000000, float 0x3F6576E820000000, float 0x3F66D4DC20000000, float 0x3F682430E0000000, float 0x3F697F7940000000, float 0x3F6AD1FEA0000000, float 0x3F6C322940000000, float 0x3F6D7F7B20000000, float 0x3F6ECE1D40000000, float 0x3F700F3280000000, float 0x3F70B842E0000000, float 0x3F714FBAE0000000, float 0x3F71E97F80000000, float 0x3F728498C0000000, float 0x3F73170AA0000000, float 0x3F73A217E0000000, float 0x3F74207380000000, float 0x3F74A41760000000, float 0x3F750E73A0000000, float 0x3F757CF3C0000000, float 0x3F75E6E980000000, float 0x3F7632F1A0000000, float 0x3F767A2B80000000, float 0x3F76B90CE0000000, float 0x3F76E986E0000000, float 0x3F77072960000000, float 0x3F771FC1A0000000, float 0x3F7718D600000000, float 0x3F770BEE00000000, float 0x3F76E75600000000, float 0x3F76B19180000000, float 0x3F766D59A0000000, float 0x3F760D6D00000000, float 0x3F7597A5E0000000, float 0x3F750BD280000000, float 0x3F746A11E0000000, float 0x3F73B4A4C0000000, float 0x3F72DB9840000000, float 0x3F71F0F540000000, float 0x3F70E58C60000000, float 0x3F6F80E4A0000000, float 0x3F6D002DE0000000, float 0x3F6A4A2800000000, float 0x3F674DB7A0000000, float 0x3F6413D040000000, float 0x3F609BCD80000000, float 0x3F59DC9360000000, float 0x3F51DCC4A0000000, float 0x3F431C7520000000, float 0x3EFCF206C0000000, float 0xBF41E7C540000000, float 0xBF52F40700000000, float 0xBF5D8E4D80000000, float 0xBF64568A80000000, float 0xBF6A28FFA0000000, float 0xBF702381E0000000, float 0xBF7357A5E0000000, float 0xBF76AA8700000000, float 0xBF7A211B60000000, float 0xBF7DBE5200000000, float 0xBF80C09540000000, float 0xBF82B413E0000000, float 0xBF84B72F40000000, float 0xBF86CC2400000000, float 0xBF88F47300000000, float 0x3F8B2E41C0000000, float 0x3F8D78BFC0000000, float 0x3F8FD3BA00000000, float 0x3F91225120000000, float 0x3F925FBD00000000, float 0x3F93A5D220000000, float 0x3F94F1ADA0000000, float 0x3F9644C800000000, float 0x3F979F2460000000, float 0x3F990088A0000000, float 0x3F9A680F80000000, float 0x3F9BD6A1C0000000, float 0x3F9D4B35E0000000, float 0x3F9EC57F40000000, float 0x3FA020FFC0000000, float 0x3FA0E22720000000, float 0x3FA1A50400000000, float 0x3FA26AA0C0000000, float 0x3FA330BF40000000, float 0x3FA3F88300000000, float 0x3FA4C0FE20000000, float 0x3FA5898820000000, float 0x3FA6540480000000, float 0x3FA71DBFC0000000, float 0x3FA7E70140000000, float 0x3FA8AFD7A0000000, float 0x3FA97755A0000000, float 0x3FAA3E2D20000000, float 0x3FAB03C300000000, float 0x3FABC60980000000, float 0x3FAC86FC80000000, float 0x3FAD444A80000000, float 0x3FADFFB6C0000000, float 0x3FAEB630A0000000, float 0x3FAF68AE00000000, float 0x3FB00C2CE0000000, float 0x3FB0607120000000, float 0x3FB0B29100000000, float 0x3FB101FFC0000000, float 0x3FB14EBB40000000, float 0x3FB1969C40000000, float 0x3FB1DBFD60000000, float 0x3FB21D8400000000, float 0x3FB25AF2E0000000, float 0x3FB293D560000000, float 0x3FB2C7DA80000000, float 0x3FB2F83DE0000000, float 0x3FB3228140000000, float 0x3FB347C2C0000000, float 0x3FB367AF00000000, float 0x3FB381CB40000000, float 0x3FB39573E0000000, float 0x3FB3A33960000000, float 0x3FB3AA4E20000000, float 0x3FB3AAAC20000000, float 0x3FB3A3F440000000, float 0x3FB395D620000000, float 0x3FB38031A0000000, float 0x3FB3631440000000, float 0x3FB33D87C0000000, float 0x3FB3103B80000000, float 0x3FB2DA1C40000000, float 0x3FB29AFD80000000, float 0x3FB2533D60000000, float 0x3FB202ACA0000000, float 0x3FB1A7C840000000, float 0x3FB1449140000000, float 0x3FB0D63DE0000000, float 0x3FB05EAA60000000, float 0x3FAFB941E0000000, float 0x3FAEA04A00000000, float 0x3FAD72A420000000, float 0x3FAC2EFD60000000, float 0x3FAAD56700000000, float 0x3FA964E440000000, float 0x3FA7DFEE40000000, float 0x3FA6429A00000000, float 0x3FA48DFE80000000, float 0x3FA2C2B720000000, float 0x3FA0DFEC20000000, float 0x3F9DC7C6E0000000, float 0x3F99A1A9A0000000, float 0x3F954C84C0000000, float 0x3F90C35480000000, float 0x3F8816E060000000, float 0x3F7C85F440000000, float 0x3F603125A0000000, float 0xBF6A491C20000000, float 0xBF818DC3A0000000, float 0xBF8CEF9A80000000, float 0xBF945C5140000000, float 0xBF9A714600000000, float 0xBFA05C2900000000, float 0xBFA3992100000000, float 0xBFA6ED7E60000000, float 0xBFAA5BA420000000, float 0xBFADE2BE20000000, float 0xBFB0C0BD80000000, float 0xBFB29C1880000000, float 0xBFB483E0A0000000, float 0xBFB6771880000000, float 0xBFB8762F00000000, float 0xBFBA8122C0000000, float 0xBFBC973CA0000000, float 0xBFBEB8D4C0000000, float 0xBFC072B280000000, float 0xBFC18E4D00000000, float 0xBFC2AF5CE0000000, float 0xBFC3D5C0A0000000, float 0xBFC5011800000000, float 0xBFC63157C0000000, float 0xBFC7668E40000000, float 0xBFC8A07440000000, float 0xBFC9DF3B80000000, float 0xBFCB21F360000000, float 0xBFCC695BA0000000, float 0xBFCDB470A0000000, float 0xBFCF03BDE0000000, float 0xBFD02B62A0000000, float 0xBFD0D6B7C0000000, float 0xBFD183B380000000, float 0xBFD2325280000000, float 0xBFD2E27440000000, float 0xBFD3940700000000, float 0xBFD446E880000000, float 0xBFD4FADC80000000, float 0xBFD5B01560000000, float 0xBFD6664260000000, float 0x3FD71D3AA0000000, float 0x3FD7D51100000000, float 0x3FD88D79E0000000, float 0x3FD9466380000000, float 0x3FD9FFB380000000, float 0x3FDAB97640000000, float 0x3FDB734B40000000, float 0x3FDC2D24E0000000, float 0x3FDCE70240000000, float 0x3FDDA0A880000000, float 0x3FDE5A0900000000, float 0x3FDF12D8C0000000, float 0x3FDFCB17E0000000, float 0x3FE0416300000000, float 0x3FE09CA8E0000000, float 0x3FE0F79880000000, float 0x3FE151F6C0000000, float 0x3FE1ABAA20000000, float 0x3FE204BE20000000, float 0x3FE25CFFC0000000, float 0x3FE2B48DE0000000, float 0x3FE30B2900000000, float 0x3FE360E5E0000000, float 0x3FE3B58B00000000, float 0x3FE40935C0000000, float 0x3FE45BBBE0000000, float 0x3FE4AD1280000000, float 0x3FE4FD2560000000, float 0x3FE54BE400000000, float 0x3FE5995300000000, float 0x3FE5E54180000000, float 0x3FE62FBEC0000000, float 0x3FE678BDA0000000, float 0x3FE6C00760000000, float 0x3FE705B420000000, float 0x3FE749AFA0000000, float 0x3FE78BD8E0000000, float 0x3FE7CC3FE0000000, float 0x3FE80AC320000000, float 0x3FE8475620000000, float 0x3FE881FC80000000, float 0x3FE8BA9920000000, float 0x3FE8F114A0000000, float 0x3FE9259020000000, float 0x3FE957D900000000, float 0x3FE987F5A0000000, float 0x3FE9B5D9C0000000, float 0x3FE9E170A0000000, float 0x3FEA0ACE60000000, float 0x3FEA31C9A0000000, float 0x3FEA565C20000000, float 0x3FEA78A5E0000000, float 0x3FEA986720000000, float 0x3FEAB5CFA0000000, float 0x3FEAD0AA20000000, float 0x3FEAE918A0000000, float 0x3FEAFEF760000000, float 0x3FEB124880000000, float 0x3FEB231320000000, float 0x3FEB3166E0000000, float 0x3FEB3D01C0000000, float 0x3FEB461480000000, float 0x3FEB4C9CC0000000, float 0x3FEB507660000000, float 0x3FEB51D380000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 32
@sbr_qmf_window_ds = internal global [320 x float] zeroinitializer, align 32
@sbr_make_f_tablelim.bands_warped = internal constant [3 x float] [float 0x3FF53C0380000000, float 0x3FF2F623E0000000, float 0x3FF1EAFE80000000], align 4
@.str.15 = private unnamed_addr constant [58 x i8] c"SBR reset failed. Switching SBR to pure upsampling mode.\0A\00", align 1
@sbr_offset = internal constant [6 x [16 x i8]] [[16 x i8] c"\F8\F9\FA\FB\FC\FD\FE\FF\00\01\02\03\04\05\06\07", [16 x i8] c"\FB\FC\FD\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D", [16 x i8] c"\FB\FD\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10", [16 x i8] c"\FA\FC\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10", [16 x i8] c"\FC\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10\14", [16 x i8] c"\FE\FF\00\01\02\03\04\05\06\07\09\0B\0D\10\14\18"], align 16
@.str.16 = private unnamed_addr constant [37 x i8] c"Unsupported sample rate for SBR: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"Invalid bs_stop_freq: %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"Invalid bitstream, too many QMF subbands: %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Invalid num_bands_0: %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Invalid vDk0[%d]: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"Invalid vDk1[%d]: %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"Invalid n_master: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [65 x i8] c"Invalid bitstream, crossover band index beyond array bounds: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"Stop frequency border too high: %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"Start frequency border too high: %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Too many noise floor scale factors: %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"patch construction failed\0A\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Too many patches: %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [57 x i8] c"Invalid bitstream - cannot apply SBR to element type %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"SBR Extension over read.\0A\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\0A\00", align 1
@ceil_log2 = internal constant [6 x i8] c"\00\01\02\02\03\03", align 1
@.str.33 = private unnamed_addr constant [72 x i8] c"Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"bs_pointer >= 0\00", align 1
@.str.35 = private unnamed_addr constant [98 x i8] c"Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [36 x i8] c"Not strictly monotone time borders\0A\00", align 1
@vlc_sbr_lav = internal constant [10 x i8] c"<<\18\18\1F\1F\0C\0C\1F\0C", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"env_facs_q %d is invalid\0A\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"noise_facs_q %d is invalid\0A\00", align 1
@.str.39 = private unnamed_addr constant [78 x i8] c"Parametric Stereo signaled to be not-present but was found in the bitstream.\0A\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Reserved SBR extensions\00", align 1
@sbr_dequant.exp2_tab = internal constant [2 x double] [double 1.000000e+00, double 0x3FF6A09E667F3BCD], align 16
@.str.41 = private unnamed_addr constant [42 x i8] c"envelope scalefactor overflow in dequant\0A\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"temp1 <= 1E20\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"libavcodec/aacsbr.c\00", align 1
@sbr_chirp.bw_tab = internal constant [4 x float] [float 0.000000e+00, float 7.500000e-01, float 0x3FECCCCCC0000000, float 0x3FEF5C2900000000], align 16
@.str.44 = private unnamed_addr constant [43 x i8] c"ERROR : no subband found for frequency %d\0A\00", align 1
@.str.45 = private unnamed_addr constant [76 x i8] c"kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\0A\00", align 1
@sbr_gain_calc.limgain = internal constant [4 x float] [float 0x3FE6A786C0000000, float 1.000000e+00, float 0x3FF699C380000000, float 1.000000e+10], align 16
@sbr_hf_assemble.h_smooth = internal constant [5 x float] [float 0x3FD5555560000000, float 0x3FD34BD280000000, float 0x3FCBECFA60000000, float 0x3FBD7B6080000000, float 0x3FA04C1660000000], align 16

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_init() #0 !dbg !1000 {
entry:
  br label %do.body, !dbg !2598, !llvm.loop !2599

do.body:                                          ; preds = %entry
  store [2 x i16]* getelementptr inbounds ([1098 x [2 x i16]], [1098 x [2 x i16]]* @ff_aac_sbr_init.table, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 1), align 8, !dbg !2600
  store i32 1098, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 3), align 4, !dbg !2603
  %0 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 2), align 16, !dbg !2604
  %1 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2605
  %div = udiv i32 %0, %1, !dbg !2606
  %2 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 1), align 8, !dbg !2607
  %3 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 0), align 16, !dbg !2608
  %4 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2609
  %5 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 0, i32 3), align 4, !dbg !2610
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0), i32 9, i32 %div, i8* %2, i32 1, i32 1, i8* %3, i32 %4, i32 %5, i8* null, i32 0, i32 0, i32 4), !dbg !2611
  br label %do.end, !dbg !2612

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !2613, !llvm.loop !2614

do.body1:                                         ; preds = %do.end
  store [2 x i16]* getelementptr inbounds ([1092 x [2 x i16]], [1092 x [2 x i16]]* @ff_aac_sbr_init.table.1, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 1), align 8, !dbg !2615
  store i32 1092, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 3), align 4, !dbg !2618
  %6 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 2), align 8, !dbg !2619
  %7 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2620
  %div2 = udiv i32 %6, %7, !dbg !2621
  %8 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 1), align 8, !dbg !2622
  %9 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 0), align 8, !dbg !2623
  %10 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2624
  %11 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 1, i32 3), align 4, !dbg !2625
  %call3 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1), i32 9, i32 %div2, i8* %8, i32 1, i32 1, i8* %9, i32 %10, i32 %11, i8* null, i32 0, i32 0, i32 4), !dbg !2626
  br label %do.end4, !dbg !2627

do.end4:                                          ; preds = %do.body1
  br label %do.body5, !dbg !2628, !llvm.loop !2629

do.body5:                                         ; preds = %do.end4
  store [2 x i16]* getelementptr inbounds ([768 x [2 x i16]], [768 x [2 x i16]]* @ff_aac_sbr_init.table.2, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 1), align 8, !dbg !2630
  store i32 768, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 3), align 4, !dbg !2633
  %12 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 2), align 16, !dbg !2634
  %13 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2635
  %div6 = udiv i32 %12, %13, !dbg !2636
  %14 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 1), align 8, !dbg !2637
  %15 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 0), align 16, !dbg !2638
  %16 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2639
  %17 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 2, i32 3), align 4, !dbg !2640
  %call7 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2), i32 9, i32 %div6, i8* %14, i32 1, i32 1, i8* %15, i32 %16, i32 %17, i8* null, i32 0, i32 0, i32 4), !dbg !2641
  br label %do.end8, !dbg !2642

do.end8:                                          ; preds = %do.body5
  br label %do.body9, !dbg !2643, !llvm.loop !2644

do.body9:                                         ; preds = %do.end8
  store [2 x i16]* getelementptr inbounds ([1026 x [2 x i16]], [1026 x [2 x i16]]* @ff_aac_sbr_init.table.3, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 1), align 8, !dbg !2645
  store i32 1026, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 3), align 4, !dbg !2648
  %18 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 2), align 8, !dbg !2649
  %19 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2650
  %div10 = udiv i32 %18, %19, !dbg !2651
  %20 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 1), align 8, !dbg !2652
  %21 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 0), align 8, !dbg !2653
  %22 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2654
  %23 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 3, i32 3), align 4, !dbg !2655
  %call11 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3), i32 9, i32 %div10, i8* %20, i32 1, i32 1, i8* %21, i32 %22, i32 %23, i8* null, i32 0, i32 0, i32 4), !dbg !2656
  br label %do.end12, !dbg !2657

do.end12:                                         ; preds = %do.body9
  br label %do.body13, !dbg !2658, !llvm.loop !2659

do.body13:                                        ; preds = %do.end12
  store [2 x i16]* getelementptr inbounds ([1058 x [2 x i16]], [1058 x [2 x i16]]* @ff_aac_sbr_init.table.4, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 1), align 8, !dbg !2660
  store i32 1058, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 3), align 4, !dbg !2663
  %24 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 2), align 16, !dbg !2664
  %25 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2665
  %div14 = udiv i32 %24, %25, !dbg !2666
  %26 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 1), align 8, !dbg !2667
  %27 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 0), align 16, !dbg !2668
  %28 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2669
  %29 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 4, i32 3), align 4, !dbg !2670
  %call15 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4), i32 9, i32 %div14, i8* %26, i32 1, i32 1, i8* %27, i32 %28, i32 %29, i8* null, i32 0, i32 0, i32 4), !dbg !2671
  br label %do.end16, !dbg !2672

do.end16:                                         ; preds = %do.body13
  br label %do.body17, !dbg !2673, !llvm.loop !2674

do.body17:                                        ; preds = %do.end16
  store [2 x i16]* getelementptr inbounds ([1052 x [2 x i16]], [1052 x [2 x i16]]* @ff_aac_sbr_init.table.5, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !2675
  store i32 1052, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 3), align 4, !dbg !2678
  %30 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 2), align 8, !dbg !2679
  %31 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2680
  %div18 = udiv i32 %30, %31, !dbg !2681
  %32 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 1), align 8, !dbg !2682
  %33 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 0), align 8, !dbg !2683
  %34 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2684
  %35 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 5, i32 3), align 4, !dbg !2685
  %call19 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5), i32 9, i32 %div18, i8* %32, i32 1, i32 1, i8* %33, i32 %34, i32 %35, i8* null, i32 0, i32 0, i32 4), !dbg !2686
  br label %do.end20, !dbg !2687

do.end20:                                         ; preds = %do.body17
  br label %do.body21, !dbg !2688, !llvm.loop !2689

do.body21:                                        ; preds = %do.end20
  store [2 x i16]* getelementptr inbounds ([544 x [2 x i16]], [544 x [2 x i16]]* @ff_aac_sbr_init.table.6, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 1), align 8, !dbg !2690
  store i32 544, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 3), align 4, !dbg !2693
  %36 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 2), align 16, !dbg !2694
  %37 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2695
  %div22 = udiv i32 %36, %37, !dbg !2696
  %38 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 1), align 8, !dbg !2697
  %39 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 0), align 16, !dbg !2698
  %40 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2699
  %41 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 6, i32 3), align 4, !dbg !2700
  %call23 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6), i32 9, i32 %div22, i8* %38, i32 1, i32 1, i8* %39, i32 %40, i32 %41, i8* null, i32 0, i32 0, i32 4), !dbg !2701
  br label %do.end24, !dbg !2702

do.end24:                                         ; preds = %do.body21
  br label %do.body25, !dbg !2703, !llvm.loop !2704

do.body25:                                        ; preds = %do.end24
  store [2 x i16]* getelementptr inbounds ([544 x [2 x i16]], [544 x [2 x i16]]* @ff_aac_sbr_init.table.7, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !2705
  store i32 544, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 3), align 4, !dbg !2708
  %42 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 2), align 8, !dbg !2709
  %43 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2710
  %div26 = udiv i32 %42, %43, !dbg !2711
  %44 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 1), align 8, !dbg !2712
  %45 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 0), align 8, !dbg !2713
  %46 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2714
  %47 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 7, i32 3), align 4, !dbg !2715
  %call27 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7), i32 9, i32 %div26, i8* %44, i32 1, i32 1, i8* %45, i32 %46, i32 %47, i8* null, i32 0, i32 0, i32 4), !dbg !2716
  br label %do.end28, !dbg !2717

do.end28:                                         ; preds = %do.body25
  br label %do.body29, !dbg !2718, !llvm.loop !2719

do.body29:                                        ; preds = %do.end28
  store [2 x i16]* getelementptr inbounds ([592 x [2 x i16]], [592 x [2 x i16]]* @ff_aac_sbr_init.table.8, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 1), align 8, !dbg !2720
  store i32 592, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 3), align 4, !dbg !2723
  %48 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 2), align 16, !dbg !2724
  %49 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2725
  %div30 = udiv i32 %48, %49, !dbg !2726
  %50 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 1), align 8, !dbg !2727
  %51 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 0), align 16, !dbg !2728
  %52 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2729
  %53 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 8, i32 3), align 4, !dbg !2730
  %call31 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8), i32 9, i32 %div30, i8* %50, i32 1, i32 1, i8* %51, i32 %52, i32 %53, i8* null, i32 0, i32 0, i32 4), !dbg !2731
  br label %do.end32, !dbg !2732

do.end32:                                         ; preds = %do.body29
  br label %do.body33, !dbg !2733, !llvm.loop !2734

do.body33:                                        ; preds = %do.end32
  store [2 x i16]* getelementptr inbounds ([512 x [2 x i16]], [512 x [2 x i16]]* @ff_aac_sbr_init.table.9, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 1), align 8, !dbg !2735
  store i32 512, i32* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 3), align 4, !dbg !2738
  %54 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 2), align 8, !dbg !2739
  %55 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2740
  %div34 = udiv i32 %54, %55, !dbg !2741
  %56 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 1), align 8, !dbg !2742
  %57 = load i8*, i8** getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 0), align 8, !dbg !2743
  %58 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2744
  %59 = load i32, i32* getelementptr inbounds ([10 x %struct.anon], [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp, i64 0, i64 9, i32 3), align 4, !dbg !2745
  %call35 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9), i32 9, i32 %div34, i8* %56, i32 1, i32 1, i8* %57, i32 %58, i32 %59, i8* null, i32 0, i32 0, i32 4), !dbg !2746
  br label %do.end36, !dbg !2747

do.end36:                                         ; preds = %do.body33
  call void @aacsbr_tableinit(), !dbg !2748
  call void @ff_ps_init(), !dbg !2749
  ret void, !dbg !2750
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #1

; Function Attrs: cold nounwind optsize uwtable
define internal void @aacsbr_tableinit() #0 !dbg !2751 {
entry:
  %n = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2752, metadata !2753), !dbg !2754
  store i32 1, i32* %n, align 4, !dbg !2755
  br label %for.cond, !dbg !2757

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4, !dbg !2758
  %cmp = icmp slt i32 %0, 320, !dbg !2761
  br i1 %cmp, label %for.body, label %for.end, !dbg !2762

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %n, align 4, !dbg !2763
  %sub = sub nsw i32 320, %1, !dbg !2764
  %idxprom = sext i32 %sub to i64, !dbg !2765
  %arrayidx = getelementptr inbounds [640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 %idxprom, !dbg !2765
  %2 = load float, float* %arrayidx, align 4, !dbg !2765
  %3 = load i32, i32* %n, align 4, !dbg !2766
  %add = add nsw i32 320, %3, !dbg !2767
  %idxprom1 = sext i32 %add to i64, !dbg !2768
  %arrayidx2 = getelementptr inbounds [640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 %idxprom1, !dbg !2768
  store float %2, float* %arrayidx2, align 4, !dbg !2769
  br label %for.inc, !dbg !2768

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %n, align 4, !dbg !2770
  %inc = add nsw i32 %4, 1, !dbg !2770
  store i32 %inc, i32* %n, align 4, !dbg !2770
  br label %for.cond, !dbg !2772, !llvm.loop !2773

for.end:                                          ; preds = %for.cond
  %5 = load float, float* getelementptr inbounds ([640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 384), align 32, !dbg !2775
  %sub3 = fsub float -0.000000e+00, %5, !dbg !2776
  store float %sub3, float* getelementptr inbounds ([640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 384), align 32, !dbg !2777
  %6 = load float, float* getelementptr inbounds ([640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 512), align 32, !dbg !2778
  %sub4 = fsub float -0.000000e+00, %6, !dbg !2779
  store float %sub4, float* getelementptr inbounds ([640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 512), align 32, !dbg !2780
  store i32 0, i32* %n, align 4, !dbg !2781
  br label %for.cond5, !dbg !2783

for.cond5:                                        ; preds = %for.inc12, %for.end
  %7 = load i32, i32* %n, align 4, !dbg !2784
  %cmp6 = icmp slt i32 %7, 320, !dbg !2787
  br i1 %cmp6, label %for.body7, label %for.end14, !dbg !2788

for.body7:                                        ; preds = %for.cond5
  %8 = load i32, i32* %n, align 4, !dbg !2789
  %mul = mul nsw i32 2, %8, !dbg !2790
  %idxprom8 = sext i32 %mul to i64, !dbg !2791
  %arrayidx9 = getelementptr inbounds [640 x float], [640 x float]* @sbr_qmf_window_us, i64 0, i64 %idxprom8, !dbg !2791
  %9 = load float, float* %arrayidx9, align 4, !dbg !2791
  %10 = load i32, i32* %n, align 4, !dbg !2792
  %idxprom10 = sext i32 %10 to i64, !dbg !2793
  %arrayidx11 = getelementptr inbounds [320 x float], [320 x float]* @sbr_qmf_window_ds, i64 0, i64 %idxprom10, !dbg !2793
  store float %9, float* %arrayidx11, align 4, !dbg !2794
  br label %for.inc12, !dbg !2793

for.inc12:                                        ; preds = %for.body7
  %11 = load i32, i32* %n, align 4, !dbg !2795
  %inc13 = add nsw i32 %11, 1, !dbg !2795
  store i32 %inc13, i32* %n, align 4, !dbg !2795
  br label %for.cond5, !dbg !2797, !llvm.loop !2798

for.end14:                                        ; preds = %for.cond5
  ret void, !dbg !2800
}

declare void @ff_ps_init() #1

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_ctx_init(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, i32 %id_aac) #0 !dbg !2801 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !2804, metadata !2753), !dbg !2805
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2806, metadata !2753), !dbg !2807
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !2808, metadata !2753), !dbg !2809
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2810
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 45, !dbg !2812
  %mdct_bits = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 5, !dbg !2813
  %1 = load i32, i32* %mdct_bits, align 4, !dbg !2813
  %tobool = icmp ne i32 %1, 0, !dbg !2810
  br i1 %tobool, label %if.then, label %if.end, !dbg !2814

if.then:                                          ; preds = %entry
  br label %return, !dbg !2815

if.end:                                           ; preds = %entry
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2816
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !2817
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2816
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2816
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2818
  %kx1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 13, !dbg !2819
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %kx1, i64 0, i64 0, !dbg !2818
  store i32 %3, i32* %arrayidx2, align 8, !dbg !2820
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !2821
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2822
  %id_aac3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 3, !dbg !2823
  store i32 %5, i32* %id_aac3, align 4, !dbg !2824
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2825
  call void @sbr_turnoff(%struct.SpectralBandReplication* %7), !dbg !2826
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2827
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !2828
  %arrayidx4 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !2827
  %synthesis_filterbank_samples_offset = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx4, i32 0, i32 12, !dbg !2829
  store i32 1152, i32* %synthesis_filterbank_samples_offset, align 32, !dbg !2830
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2831
  %data5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 17, !dbg !2832
  %arrayidx6 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data5, i64 0, i64 1, !dbg !2831
  %synthesis_filterbank_samples_offset7 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx6, i32 0, i32 12, !dbg !2833
  store i32 1152, i32* %synthesis_filterbank_samples_offset7, align 32, !dbg !2834
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2835
  %mdct8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 45, !dbg !2836
  %call = call i32 @ff_mdct_init(%struct.FFTContext* %mdct8, i32 7, i32 1, double 0x3EA0000000000000), !dbg !2837
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2838
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 44, !dbg !2839
  %call9 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_ana, i32 7, i32 1, double -6.553600e+04), !dbg !2840
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2841
  %ps = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 18, !dbg !2842
  call void @ff_ps_ctx_init(%struct.PSContext* %ps), !dbg !2843
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2844
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 46, !dbg !2845
  call void @ff_sbrdsp_init(%struct.SBRDSPContext* %dsp), !dbg !2846
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2847
  %c = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 47, !dbg !2848
  call void @aacsbr_func_ptr_init(%struct.AACSBRContext* %c), !dbg !2849
  br label %return, !dbg !2850

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2851
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind uwtable
define internal void @sbr_turnoff(%struct.SpectralBandReplication* %sbr) #3 !dbg !2853 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2854, metadata !2753), !dbg !2855
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2856
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 1, !dbg !2857
  store i32 0, i32* %start, align 4, !dbg !2858
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2859
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 2, !dbg !2860
  store i32 0, i32* %ready_for_dequant, align 8, !dbg !2861
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2862
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !2863
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2862
  store i32 32, i32* %arrayidx, align 4, !dbg !2864
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2865
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 14, !dbg !2866
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !2865
  store i32 0, i32* %arrayidx1, align 4, !dbg !2867
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2868
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 17, !dbg !2869
  %arrayidx2 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 1, !dbg !2868
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx2, i32 0, i32 13, !dbg !2870
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !2868
  store i32 -1, i32* %arrayidx3, align 4, !dbg !2871
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2872
  %data4 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 17, !dbg !2873
  %arrayidx5 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data4, i64 0, i64 0, !dbg !2872
  %e_a6 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx5, i32 0, i32 13, !dbg !2874
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a6, i64 0, i64 1, !dbg !2872
  store i32 -1, i32* %arrayidx7, align 4, !dbg !2875
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2876
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 5, !dbg !2877
  %7 = bitcast %struct.SpectrumParameters* %spectrum_params to i8*, !dbg !2878
  call void @llvm.memset.p0i8.i64(i8* %7, i8 -1, i64 6, i32 4, i1 false), !dbg !2878
  ret void, !dbg !2879
}

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #1

declare void @ff_ps_ctx_init(%struct.PSContext*) #1

declare void @ff_sbrdsp_init(%struct.SBRDSPContext*) #1

; Function Attrs: nounwind uwtable
define internal void @aacsbr_func_ptr_init(%struct.AACSBRContext* %c) #3 !dbg !2880 {
entry:
  %c.addr = alloca %struct.AACSBRContext*, align 8
  store %struct.AACSBRContext* %c, %struct.AACSBRContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACSBRContext** %c.addr, metadata !2884, metadata !2753), !dbg !2885
  %0 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2886
  %sbr_lf_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %0, i32 0, i32 0, !dbg !2887
  store i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)* @sbr_lf_gen, i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)** %sbr_lf_gen, align 8, !dbg !2888
  %1 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2889
  %sbr_hf_assemble = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %1, i32 0, i32 1, !dbg !2890
  store void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)* @sbr_hf_assemble, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)** %sbr_hf_assemble, align 8, !dbg !2891
  %2 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2892
  %sbr_x_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %2, i32 0, i32 2, !dbg !2893
  store i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)* @sbr_x_gen, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)** %sbr_x_gen, align 8, !dbg !2894
  %3 = load %struct.AACSBRContext*, %struct.AACSBRContext** %c.addr, align 8, !dbg !2895
  %sbr_hf_inverse_filter = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %3, i32 0, i32 3, !dbg !2896
  store void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* @sbr_hf_inverse_filter, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)** %sbr_hf_inverse_filter, align 8, !dbg !2897
  ret void, !dbg !2898
}

; Function Attrs: cold nounwind optsize uwtable
define void @ff_aac_sbr_ctx_close(%struct.SpectralBandReplication* %sbr) #0 !dbg !2899 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2900, metadata !2753), !dbg !2901
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2902
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 45, !dbg !2903
  call void @ff_mdct_end(%struct.FFTContext* %mdct), !dbg !2904
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2905
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 44, !dbg !2906
  call void @ff_mdct_end(%struct.FFTContext* %mdct_ana), !dbg !2907
  ret void, !dbg !2908
}

declare void @ff_mdct_end(%struct.FFTContext*) #1

; Function Attrs: nounwind uwtable
define i32 @ff_decode_sbr_extension(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb_host, i32 %crc, i32 %cnt, i32 %id_aac) #3 !dbg !2909 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb_host.addr = alloca %struct.GetBitContext*, align 8
  %crc.addr = alloca i32, align 4
  %cnt.addr = alloca i32, align 4
  %id_aac.addr = alloca i32, align 4
  %num_sbr_bits = alloca i32, align 4
  %num_align_bits = alloca i32, align 4
  %bytes_read = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !2922, metadata !2753), !dbg !2923
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !2924, metadata !2753), !dbg !2925
  store %struct.GetBitContext* %gb_host, %struct.GetBitContext** %gb_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb_host.addr, metadata !2926, metadata !2753), !dbg !2927
  store i32 %crc, i32* %crc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crc.addr, metadata !2928, metadata !2753), !dbg !2929
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !2930, metadata !2753), !dbg !2931
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !2932, metadata !2753), !dbg !2933
  call void @llvm.dbg.declare(metadata i32* %num_sbr_bits, metadata !2934, metadata !2753), !dbg !2935
  store i32 0, i32* %num_sbr_bits, align 4, !dbg !2935
  call void @llvm.dbg.declare(metadata i32* %num_align_bits, metadata !2936, metadata !2753), !dbg !2937
  call void @llvm.dbg.declare(metadata i32* %bytes_read, metadata !2938, metadata !2753), !dbg !2939
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbc, metadata !2940, metadata !2753), !dbg !2941
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb_host.addr, align 8, !dbg !2942
  %1 = bitcast %struct.GetBitContext* %gbc to i8*, !dbg !2943
  %2 = bitcast %struct.GetBitContext* %0 to i8*, !dbg !2943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 32, i32 8, i1 false), !dbg !2943
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !2944, metadata !2753), !dbg !2945
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gb, align 8, !dbg !2945
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb_host.addr, align 8, !dbg !2946
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !2947
  %mul = mul nsw i32 %4, 8, !dbg !2948
  %sub = sub nsw i32 %mul, 4, !dbg !2949
  call void @skip_bits_long(%struct.GetBitContext* %3, i32 %sub), !dbg !2950
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2951
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 4, !dbg !2952
  store i32 0, i32* %reset, align 16, !dbg !2953
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2954
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 0, !dbg !2956
  %7 = load i32, i32* %sample_rate, align 32, !dbg !2956
  %tobool = icmp ne i32 %7, 0, !dbg !2954
  br i1 %tobool, label %if.end, label %if.then, !dbg !2957

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2958
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 24, !dbg !2959
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !2958
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !2960
  %sample_rate1 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !2961
  %9 = load i32, i32* %sample_rate1, align 8, !dbg !2961
  %mul2 = mul nsw i32 2, %9, !dbg !2962
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2963
  %sample_rate3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 0, !dbg !2964
  store i32 %mul2, i32* %sample_rate3, align 32, !dbg !2965
  br label %if.end, !dbg !2963

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2966
  %oc4 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %11, i32 0, i32 24, !dbg !2968
  %arrayidx5 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc4, i64 0, i64 1, !dbg !2966
  %m4ac6 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx5, i32 0, i32 0, !dbg !2969
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac6, i32 0, i32 7, !dbg !2970
  %12 = load i32, i32* %ext_sample_rate, align 4, !dbg !2970
  %tobool7 = icmp ne i32 %12, 0, !dbg !2966
  br i1 %tobool7, label %if.end18, label %if.then8, !dbg !2971

if.then8:                                         ; preds = %if.end
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2972
  %oc9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %13, i32 0, i32 24, !dbg !2973
  %arrayidx10 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc9, i64 0, i64 1, !dbg !2972
  %m4ac11 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx10, i32 0, i32 0, !dbg !2974
  %sample_rate12 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac11, i32 0, i32 2, !dbg !2975
  %14 = load i32, i32* %sample_rate12, align 8, !dbg !2975
  %mul13 = mul nsw i32 2, %14, !dbg !2976
  %15 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !2977
  %oc14 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %15, i32 0, i32 24, !dbg !2978
  %arrayidx15 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc14, i64 0, i64 1, !dbg !2977
  %m4ac16 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx15, i32 0, i32 0, !dbg !2979
  %ext_sample_rate17 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac16, i32 0, i32 7, !dbg !2980
  store i32 %mul13, i32* %ext_sample_rate17, align 4, !dbg !2981
  br label %if.end18, !dbg !2977

if.end18:                                         ; preds = %if.then8, %if.end
  %16 = load i32, i32* %crc.addr, align 4, !dbg !2982
  %tobool19 = icmp ne i32 %16, 0, !dbg !2982
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2984

if.then20:                                        ; preds = %if.end18
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2985
  call void @skip_bits(%struct.GetBitContext* %17, i32 10), !dbg !2987
  %18 = load i32, i32* %num_sbr_bits, align 4, !dbg !2988
  %add = add i32 %18, 10, !dbg !2988
  store i32 %add, i32* %num_sbr_bits, align 4, !dbg !2988
  br label %if.end21, !dbg !2989

if.end21:                                         ; preds = %if.then20, %if.end18
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2990
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 13, !dbg !2991
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !2990
  %20 = load i32, i32* %arrayidx22, align 4, !dbg !2990
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2992
  %kx23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 13, !dbg !2993
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %kx23, i64 0, i64 0, !dbg !2992
  store i32 %20, i32* %arrayidx24, align 8, !dbg !2994
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2995
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 14, !dbg !2996
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !2995
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !2995
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !2997
  %m26 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %24, i32 0, i32 14, !dbg !2998
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %m26, i64 0, i64 0, !dbg !2997
  store i32 %23, i32* %arrayidx27, align 16, !dbg !2999
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3000
  %kx_and_m_pushed = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 15, !dbg !3001
  store i32 1, i32* %kx_and_m_pushed, align 8, !dbg !3002
  %26 = load i32, i32* %num_sbr_bits, align 4, !dbg !3003
  %inc = add i32 %26, 1, !dbg !3003
  store i32 %inc, i32* %num_sbr_bits, align 4, !dbg !3003
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3004
  %call = call i32 @get_bits1(%struct.GetBitContext* %27), !dbg !3006
  %tobool28 = icmp ne i32 %call, 0, !dbg !3006
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !3007

if.then29:                                        ; preds = %if.end21
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3008
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3009
  %call30 = call i32 @read_sbr_header(%struct.SpectralBandReplication* %28, %struct.GetBitContext* %29), !dbg !3010
  %30 = load i32, i32* %num_sbr_bits, align 4, !dbg !3011
  %add31 = add i32 %30, %call30, !dbg !3011
  store i32 %add31, i32* %num_sbr_bits, align 4, !dbg !3011
  br label %if.end32, !dbg !3012

if.end32:                                         ; preds = %if.then29, %if.end21
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3013
  %reset33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 4, !dbg !3015
  %32 = load i32, i32* %reset33, align 16, !dbg !3015
  %tobool34 = icmp ne i32 %32, 0, !dbg !3013
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !3016

if.then35:                                        ; preds = %if.end32
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3017
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3018
  call void @sbr_reset(%struct.AACContext* %33, %struct.SpectralBandReplication* %34), !dbg !3019
  br label %if.end36, !dbg !3019

if.end36:                                         ; preds = %if.then35, %if.end32
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3020
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 1, !dbg !3022
  %36 = load i32, i32* %start, align 4, !dbg !3022
  %tobool37 = icmp ne i32 %36, 0, !dbg !3020
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !3023

if.then38:                                        ; preds = %if.end36
  %37 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3024
  %38 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3025
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3026
  %40 = load i32, i32* %id_aac.addr, align 4, !dbg !3027
  %call39 = call i32 @read_sbr_data(%struct.AACContext* %37, %struct.SpectralBandReplication* %38, %struct.GetBitContext* %39, i32 %40), !dbg !3028
  %41 = load i32, i32* %num_sbr_bits, align 4, !dbg !3029
  %add40 = add i32 %41, %call39, !dbg !3029
  store i32 %add40, i32* %num_sbr_bits, align 4, !dbg !3029
  br label %if.end41, !dbg !3030

if.end41:                                         ; preds = %if.then38, %if.end36
  %42 = load i32, i32* %cnt.addr, align 4, !dbg !3031
  %shl = shl i32 %42, 3, !dbg !3032
  %sub42 = sub nsw i32 %shl, 4, !dbg !3033
  %43 = load i32, i32* %num_sbr_bits, align 4, !dbg !3034
  %sub43 = sub i32 %sub42, %43, !dbg !3035
  %and = and i32 %sub43, 7, !dbg !3036
  store i32 %and, i32* %num_align_bits, align 4, !dbg !3037
  %44 = load i32, i32* %num_sbr_bits, align 4, !dbg !3038
  %45 = load i32, i32* %num_align_bits, align 4, !dbg !3039
  %add44 = add i32 %44, %45, !dbg !3040
  %add45 = add i32 %add44, 4, !dbg !3041
  %shr = lshr i32 %add45, 3, !dbg !3042
  store i32 %shr, i32* %bytes_read, align 4, !dbg !3043
  %46 = load i32, i32* %bytes_read, align 4, !dbg !3044
  %47 = load i32, i32* %cnt.addr, align 4, !dbg !3046
  %cmp = icmp ugt i32 %46, %47, !dbg !3047
  br i1 %cmp, label %if.then46, label %if.end47, !dbg !3048

if.then46:                                        ; preds = %if.end41
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3049
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 1, !dbg !3051
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3051
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !3049
  %51 = load i32, i32* %cnt.addr, align 4, !dbg !3052
  %52 = load i32, i32* %bytes_read, align 4, !dbg !3053
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 %51, i32 %52), !dbg !3054
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3055
  call void @sbr_turnoff(%struct.SpectralBandReplication* %53), !dbg !3056
  br label %if.end47, !dbg !3057

if.end47:                                         ; preds = %if.then46, %if.end41
  %54 = load i32, i32* %cnt.addr, align 4, !dbg !3058
  ret i32 %54, !dbg !3059
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3060 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3063, metadata !2753), !dbg !3068
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !3070, metadata !2753), !dbg !3071
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !3072, metadata !2753), !dbg !3073
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3074, metadata !2753), !dbg !3075
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3076, metadata !2753), !dbg !3077
  %0 = load i32, i32* %n.addr, align 4, !dbg !3078
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3079
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !3080
  %2 = load i32, i32* %index, align 8, !dbg !3080
  %sub = sub nsw i32 0, %2, !dbg !3081
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3082
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !3083
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3083
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3084
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !3085
  %6 = load i32, i32* %index1, align 8, !dbg !3085
  %sub2 = sub nsw i32 %4, %6, !dbg !3086
  store i32 %0, i32* %a.addr.i, align 4, !dbg !3087
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !3087
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !3087
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !3088
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !3090
  %cmp.i = icmp slt i32 %7, %8, !dbg !3091
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3092

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !3093
  store i32 %9, i32* %retval.i, align 4, !dbg !3095
  br label %av_clip_c.exit, !dbg !3095

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !3096
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !3098
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !3099
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3100

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !3101
  store i32 %12, i32* %retval.i, align 4, !dbg !3103
  br label %av_clip_c.exit, !dbg !3103

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !3104
  store i32 %13, i32* %retval.i, align 4, !dbg !3105
  br label %av_clip_c.exit, !dbg !3105

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !3106
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3107
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3108
  %16 = load i32, i32* %index3, align 8, !dbg !3109
  %add = add nsw i32 %16, %14, !dbg !3109
  store i32 %add, i32* %index3, align 8, !dbg !3109
  ret void, !dbg !3110
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3111 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3112, metadata !2753), !dbg !3113
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3114, metadata !2753), !dbg !3115
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3116, metadata !2753), !dbg !3117
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3118
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3119
  %1 = load i32, i32* %index, align 8, !dbg !3119
  store i32 %1, i32* %re_index, align 4, !dbg !3117
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3120, metadata !2753), !dbg !3121
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3122, metadata !2753), !dbg !3123
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3124
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3125
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3125
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3123
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !3126
  %5 = load i32, i32* %re_index, align 4, !dbg !3127
  %6 = load i32, i32* %n.addr, align 4, !dbg !3128
  %add = add i32 %5, %6, !dbg !3129
  %cmp = icmp ugt i32 %4, %add, !dbg !3130
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3131

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !3132
  %8 = load i32, i32* %n.addr, align 4, !dbg !3134
  %add1 = add i32 %7, %8, !dbg !3135
  br label %cond.end, !dbg !3136

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !3137
  br label %cond.end, !dbg !3139

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !3140
  store i32 %cond, i32* %re_index, align 4, !dbg !3142
  %10 = load i32, i32* %re_index, align 4, !dbg !3143
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3144
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !3145
  store i32 %10, i32* %index2, align 8, !dbg !3146
  ret void, !dbg !3147
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !3148 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3151, metadata !2753), !dbg !3152
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3153, metadata !2753), !dbg !3154
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3155
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3156
  %1 = load i32, i32* %index1, align 8, !dbg !3156
  store i32 %1, i32* %index, align 4, !dbg !3154
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3157, metadata !2753), !dbg !3158
  %2 = load i32, i32* %index, align 4, !dbg !3159
  %shr = lshr i32 %2, 3, !dbg !3160
  %idxprom = zext i32 %shr to i64, !dbg !3161
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3161
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3162
  %4 = load i8*, i8** %buffer, align 8, !dbg !3162
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3161
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3161
  store i8 %5, i8* %result, align 1, !dbg !3158
  %6 = load i32, i32* %index, align 4, !dbg !3163
  %and = and i32 %6, 7, !dbg !3164
  %7 = load i8, i8* %result, align 1, !dbg !3165
  %conv = zext i8 %7 to i32, !dbg !3165
  %shl = shl i32 %conv, %and, !dbg !3165
  %conv2 = trunc i32 %shl to i8, !dbg !3165
  store i8 %conv2, i8* %result, align 1, !dbg !3165
  %8 = load i8, i8* %result, align 1, !dbg !3166
  %conv3 = zext i8 %8 to i32, !dbg !3166
  %shr4 = ashr i32 %conv3, 7, !dbg !3166
  %conv5 = trunc i32 %shr4 to i8, !dbg !3166
  store i8 %conv5, i8* %result, align 1, !dbg !3166
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3167
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3169
  %10 = load i32, i32* %index6, align 8, !dbg !3169
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3170
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3171
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3171
  %cmp = icmp slt i32 %10, %12, !dbg !3172
  br i1 %cmp, label %if.then, label %if.end, !dbg !3173

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3174
  %inc = add i32 %13, 1, !dbg !3174
  store i32 %inc, i32* %index, align 4, !dbg !3174
  br label %if.end, !dbg !3175

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3176
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3177
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3178
  store i32 %14, i32* %index8, align 8, !dbg !3179
  %16 = load i8, i8* %result, align 1, !dbg !3180
  %conv9 = zext i8 %16 to i32, !dbg !3180
  ret i32 %conv9, !dbg !3181
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_header(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !3182 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %cnt = alloca i32, align 4
  %bs_header_extra_1 = alloca i8, align 1
  %bs_header_extra_2 = alloca i8, align 1
  %old_bs_limiter_bands = alloca i32, align 4
  %old_spectrum_params = alloca %struct.SpectrumParameters, align 1
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3185, metadata !2753), !dbg !3186
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3187, metadata !2753), !dbg !3188
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !3189, metadata !2753), !dbg !3190
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3191
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3192
  store i32 %call, i32* %cnt, align 4, !dbg !3190
  call void @llvm.dbg.declare(metadata i8* %bs_header_extra_1, metadata !3193, metadata !2753), !dbg !3194
  call void @llvm.dbg.declare(metadata i8* %bs_header_extra_2, metadata !3195, metadata !2753), !dbg !3196
  call void @llvm.dbg.declare(metadata i32* %old_bs_limiter_bands, metadata !3197, metadata !2753), !dbg !3198
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3199
  %bs_limiter_bands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 7, !dbg !3200
  %2 = load i32, i32* %bs_limiter_bands, align 32, !dbg !3200
  store i32 %2, i32* %old_bs_limiter_bands, align 4, !dbg !3198
  call void @llvm.dbg.declare(metadata %struct.SpectrumParameters* %old_spectrum_params, metadata !3201, metadata !2753), !dbg !3202
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3203
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 1, !dbg !3204
  store i32 1, i32* %start, align 4, !dbg !3205
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3206
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 2, !dbg !3207
  store i32 0, i32* %ready_for_dequant, align 8, !dbg !3208
  %5 = bitcast %struct.SpectrumParameters* %old_spectrum_params to i8*, !dbg !3209
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3210
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 5, !dbg !3211
  %7 = bitcast %struct.SpectrumParameters* %spectrum_params to i8*, !dbg !3209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 6, i32 1, i1 false), !dbg !3209
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3212
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !3213
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3214
  %bs_amp_res_header = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 6, !dbg !3215
  store i32 %call1, i32* %bs_amp_res_header, align 4, !dbg !3216
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3217
  %call2 = call i32 @get_bits(%struct.GetBitContext* %10, i32 4), !dbg !3218
  %conv = trunc i32 %call2 to i8, !dbg !3218
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3219
  %spectrum_params3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 5, !dbg !3220
  %bs_start_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params3, i32 0, i32 0, !dbg !3221
  store i8 %conv, i8* %bs_start_freq, align 4, !dbg !3222
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3223
  %call4 = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !3224
  %conv5 = trunc i32 %call4 to i8, !dbg !3224
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3225
  %spectrum_params6 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 5, !dbg !3226
  %bs_stop_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params6, i32 0, i32 1, !dbg !3227
  store i8 %conv5, i8* %bs_stop_freq, align 1, !dbg !3228
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3229
  %call7 = call i32 @get_bits(%struct.GetBitContext* %14, i32 3), !dbg !3230
  %conv8 = trunc i32 %call7 to i8, !dbg !3230
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3231
  %spectrum_params9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 5, !dbg !3232
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params9, i32 0, i32 2, !dbg !3233
  store i8 %conv8, i8* %bs_xover_band, align 2, !dbg !3234
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3235
  call void @skip_bits(%struct.GetBitContext* %16, i32 2), !dbg !3236
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3237
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %17), !dbg !3238
  %conv11 = trunc i32 %call10 to i8, !dbg !3238
  store i8 %conv11, i8* %bs_header_extra_1, align 1, !dbg !3239
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3240
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %18), !dbg !3241
  %conv13 = trunc i32 %call12 to i8, !dbg !3241
  store i8 %conv13, i8* %bs_header_extra_2, align 1, !dbg !3242
  %19 = load i8, i8* %bs_header_extra_1, align 1, !dbg !3243
  %tobool = icmp ne i8 %19, 0, !dbg !3243
  br i1 %tobool, label %if.then, label %if.else, !dbg !3245

if.then:                                          ; preds = %entry
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3246
  %call14 = call i32 @get_bits(%struct.GetBitContext* %20, i32 2), !dbg !3248
  %conv15 = trunc i32 %call14 to i8, !dbg !3248
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3249
  %spectrum_params16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 5, !dbg !3250
  %bs_freq_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params16, i32 0, i32 3, !dbg !3251
  store i8 %conv15, i8* %bs_freq_scale, align 1, !dbg !3252
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3253
  %call17 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !3254
  %conv18 = trunc i32 %call17 to i8, !dbg !3254
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3255
  %spectrum_params19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 5, !dbg !3256
  %bs_alter_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params19, i32 0, i32 4, !dbg !3257
  store i8 %conv18, i8* %bs_alter_scale, align 4, !dbg !3258
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3259
  %call20 = call i32 @get_bits(%struct.GetBitContext* %24, i32 2), !dbg !3260
  %conv21 = trunc i32 %call20 to i8, !dbg !3260
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3261
  %spectrum_params22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 5, !dbg !3262
  %bs_noise_bands = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params22, i32 0, i32 5, !dbg !3263
  store i8 %conv21, i8* %bs_noise_bands, align 1, !dbg !3264
  br label %if.end, !dbg !3265

if.else:                                          ; preds = %entry
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3266
  %spectrum_params23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 5, !dbg !3268
  %bs_freq_scale24 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params23, i32 0, i32 3, !dbg !3269
  store i8 2, i8* %bs_freq_scale24, align 1, !dbg !3270
  %27 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3271
  %spectrum_params25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %27, i32 0, i32 5, !dbg !3272
  %bs_alter_scale26 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params25, i32 0, i32 4, !dbg !3273
  store i8 1, i8* %bs_alter_scale26, align 4, !dbg !3274
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3275
  %spectrum_params27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 5, !dbg !3276
  %bs_noise_bands28 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params27, i32 0, i32 5, !dbg !3277
  store i8 2, i8* %bs_noise_bands28, align 1, !dbg !3278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = bitcast %struct.SpectrumParameters* %old_spectrum_params to i8*, !dbg !3279
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3281
  %spectrum_params29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 5, !dbg !3282
  %31 = bitcast %struct.SpectrumParameters* %spectrum_params29 to i8*, !dbg !3283
  %call30 = call i32 @memcmp(i8* %29, i8* %31, i64 6) #9, !dbg !3284
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3284
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !3285

if.then32:                                        ; preds = %if.end
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3286
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 4, !dbg !3287
  store i32 1, i32* %reset, align 16, !dbg !3288
  br label %if.end33, !dbg !3286

if.end33:                                         ; preds = %if.then32, %if.end
  %33 = load i8, i8* %bs_header_extra_2, align 1, !dbg !3289
  %tobool34 = icmp ne i8 %33, 0, !dbg !3289
  br i1 %tobool34, label %if.then35, label %if.else41, !dbg !3291

if.then35:                                        ; preds = %if.end33
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3292
  %call36 = call i32 @get_bits(%struct.GetBitContext* %34, i32 2), !dbg !3294
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3295
  %bs_limiter_bands37 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 7, !dbg !3296
  store i32 %call36, i32* %bs_limiter_bands37, align 32, !dbg !3297
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3298
  %call38 = call i32 @get_bits(%struct.GetBitContext* %36, i32 2), !dbg !3299
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3300
  %bs_limiter_gains = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 8, !dbg !3301
  store i32 %call38, i32* %bs_limiter_gains, align 4, !dbg !3302
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3303
  %call39 = call i32 @get_bits1(%struct.GetBitContext* %38), !dbg !3304
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3305
  %bs_interpol_freq = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %39, i32 0, i32 9, !dbg !3306
  store i32 %call39, i32* %bs_interpol_freq, align 8, !dbg !3307
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3308
  %call40 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !3309
  %41 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3310
  %bs_smoothing_mode = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %41, i32 0, i32 10, !dbg !3311
  store i32 %call40, i32* %bs_smoothing_mode, align 4, !dbg !3312
  br label %if.end46, !dbg !3313

if.else41:                                        ; preds = %if.end33
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3314
  %bs_limiter_bands42 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 7, !dbg !3316
  store i32 2, i32* %bs_limiter_bands42, align 32, !dbg !3317
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3318
  %bs_limiter_gains43 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 8, !dbg !3319
  store i32 2, i32* %bs_limiter_gains43, align 4, !dbg !3320
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3321
  %bs_interpol_freq44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %44, i32 0, i32 9, !dbg !3322
  store i32 1, i32* %bs_interpol_freq44, align 8, !dbg !3323
  %45 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3324
  %bs_smoothing_mode45 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %45, i32 0, i32 10, !dbg !3325
  store i32 1, i32* %bs_smoothing_mode45, align 4, !dbg !3326
  br label %if.end46

if.end46:                                         ; preds = %if.else41, %if.then35
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3327
  %bs_limiter_bands47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 7, !dbg !3329
  %47 = load i32, i32* %bs_limiter_bands47, align 32, !dbg !3329
  %48 = load i32, i32* %old_bs_limiter_bands, align 4, !dbg !3330
  %cmp = icmp ne i32 %47, %48, !dbg !3331
  br i1 %cmp, label %land.lhs.true, label %if.end52, !dbg !3332

land.lhs.true:                                    ; preds = %if.end46
  %49 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3333
  %reset49 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %49, i32 0, i32 4, !dbg !3335
  %50 = load i32, i32* %reset49, align 16, !dbg !3335
  %tobool50 = icmp ne i32 %50, 0, !dbg !3333
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !3336

if.then51:                                        ; preds = %land.lhs.true
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3337
  call void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %51), !dbg !3338
  br label %if.end52, !dbg !3338

if.end52:                                         ; preds = %if.then51, %land.lhs.true, %if.end46
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3339
  %call53 = call i32 @get_bits_count(%struct.GetBitContext* %52), !dbg !3340
  %53 = load i32, i32* %cnt, align 4, !dbg !3341
  %sub = sub i32 %call53, %53, !dbg !3342
  ret i32 %sub, !dbg !3343
}

; Function Attrs: nounwind uwtable
define internal void @sbr_reset(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !3344 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %err = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3347, metadata !2753), !dbg !3348
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3349, metadata !2753), !dbg !3350
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3351, metadata !2753), !dbg !3352
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3353
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3354
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3355
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 5, !dbg !3356
  %call = call i32 @sbr_make_f_master(%struct.AACContext* %0, %struct.SpectralBandReplication* %1, %struct.SpectrumParameters* %spectrum_params), !dbg !3357
  store i32 %call, i32* %err, align 4, !dbg !3358
  %3 = load i32, i32* %err, align 4, !dbg !3359
  %cmp = icmp sge i32 %3, 0, !dbg !3361
  br i1 %cmp, label %if.then, label %if.end, !dbg !3362

if.then:                                          ; preds = %entry
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3363
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3364
  %call1 = call i32 @sbr_make_f_derived(%struct.AACContext* %4, %struct.SpectralBandReplication* %5), !dbg !3365
  store i32 %call1, i32* %err, align 4, !dbg !3366
  br label %if.end, !dbg !3367

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %err, align 4, !dbg !3368
  %cmp2 = icmp slt i32 %6, 0, !dbg !3370
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3371

if.then3:                                         ; preds = %if.end
  %7 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3372
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %7, i32 0, i32 1, !dbg !3374
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3374
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !3372
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i32 0, i32 0)), !dbg !3375
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3376
  call void @sbr_turnoff(%struct.SpectralBandReplication* %10), !dbg !3377
  br label %if.end4, !dbg !3378

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !3379
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_data(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, i32 %id_aac) #3 !dbg !3380 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %id_aac.addr = alloca i32, align 4
  %cnt = alloca i32, align 4
  %num_bits_left = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3383, metadata !2753), !dbg !3384
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3385, metadata !2753), !dbg !3386
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3387, metadata !2753), !dbg !3388
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !3389, metadata !2753), !dbg !3390
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !3391, metadata !2753), !dbg !3392
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3393
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3394
  store i32 %call, i32* %cnt, align 4, !dbg !3392
  %1 = load i32, i32* %id_aac.addr, align 4, !dbg !3395
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3396
  %id_aac1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 3, !dbg !3397
  store i32 %1, i32* %id_aac1, align 4, !dbg !3398
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3399
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 2, !dbg !3400
  store i32 1, i32* %ready_for_dequant, align 8, !dbg !3401
  %4 = load i32, i32* %id_aac.addr, align 4, !dbg !3402
  %cmp = icmp eq i32 %4, 0, !dbg !3404
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3405

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !3406
  %cmp2 = icmp eq i32 %5, 2, !dbg !3408
  br i1 %cmp2, label %if.then, label %if.else, !dbg !3409

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3410
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3413
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3414
  %call3 = call i32 @read_sbr_single_channel_element(%struct.AACContext* %6, %struct.SpectralBandReplication* %7, %struct.GetBitContext* %8), !dbg !3415
  %tobool = icmp ne i32 %call3, 0, !dbg !3415
  br i1 %tobool, label %if.then4, label %if.end, !dbg !3416

if.then4:                                         ; preds = %if.then
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3417
  call void @sbr_turnoff(%struct.SpectralBandReplication* %9), !dbg !3419
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3420
  %call5 = call i32 @get_bits_count(%struct.GetBitContext* %10), !dbg !3421
  %11 = load i32, i32* %cnt, align 4, !dbg !3422
  %sub = sub i32 %call5, %11, !dbg !3423
  store i32 %sub, i32* %retval, align 4, !dbg !3424
  br label %return, !dbg !3424

if.end:                                           ; preds = %if.then
  br label %if.end18, !dbg !3425

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %id_aac.addr, align 4, !dbg !3426
  %cmp6 = icmp eq i32 %12, 1, !dbg !3429
  br i1 %cmp6, label %if.then7, label %if.else14, !dbg !3426

if.then7:                                         ; preds = %if.else
  %13 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3430
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3433
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3434
  %call8 = call i32 @read_sbr_channel_pair_element(%struct.AACContext* %13, %struct.SpectralBandReplication* %14, %struct.GetBitContext* %15), !dbg !3435
  %tobool9 = icmp ne i32 %call8, 0, !dbg !3435
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !3436

if.then10:                                        ; preds = %if.then7
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3437
  call void @sbr_turnoff(%struct.SpectralBandReplication* %16), !dbg !3439
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3440
  %call11 = call i32 @get_bits_count(%struct.GetBitContext* %17), !dbg !3441
  %18 = load i32, i32* %cnt, align 4, !dbg !3442
  %sub12 = sub i32 %call11, %18, !dbg !3443
  store i32 %sub12, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

if.end13:                                         ; preds = %if.then7
  br label %if.end17, !dbg !3445

if.else14:                                        ; preds = %if.else
  %19 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3446
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %19, i32 0, i32 1, !dbg !3448
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3448
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !3446
  %22 = load i32, i32* %id_aac.addr, align 4, !dbg !3449
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i32 0, i32 0), i32 %22), !dbg !3450
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3451
  call void @sbr_turnoff(%struct.SpectralBandReplication* %23), !dbg !3452
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3453
  %call15 = call i32 @get_bits_count(%struct.GetBitContext* %24), !dbg !3454
  %25 = load i32, i32* %cnt, align 4, !dbg !3455
  %sub16 = sub i32 %call15, %25, !dbg !3456
  store i32 %sub16, i32* %retval, align 4, !dbg !3457
  br label %return, !dbg !3457

if.end17:                                         ; preds = %if.end13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3458
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %26), !dbg !3460
  %tobool20 = icmp ne i32 %call19, 0, !dbg !3460
  br i1 %tobool20, label %if.then21, label %if.end37, !dbg !3461

if.then21:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %num_bits_left, metadata !3462, metadata !2753), !dbg !3464
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3465
  %call22 = call i32 @get_bits(%struct.GetBitContext* %27, i32 4), !dbg !3466
  store i32 %call22, i32* %num_bits_left, align 4, !dbg !3464
  %28 = load i32, i32* %num_bits_left, align 4, !dbg !3467
  %cmp23 = icmp eq i32 %28, 15, !dbg !3469
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !3470

if.then24:                                        ; preds = %if.then21
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3471
  %call25 = call i32 @get_bits(%struct.GetBitContext* %29, i32 8), !dbg !3472
  %30 = load i32, i32* %num_bits_left, align 4, !dbg !3473
  %add = add i32 %30, %call25, !dbg !3473
  store i32 %add, i32* %num_bits_left, align 4, !dbg !3473
  br label %if.end26, !dbg !3474

if.end26:                                         ; preds = %if.then24, %if.then21
  %31 = load i32, i32* %num_bits_left, align 4, !dbg !3475
  %shl = shl i32 %31, 3, !dbg !3475
  store i32 %shl, i32* %num_bits_left, align 4, !dbg !3475
  br label %while.cond, !dbg !3476

while.cond:                                       ; preds = %while.body, %if.end26
  %32 = load i32, i32* %num_bits_left, align 4, !dbg !3477
  %cmp27 = icmp sgt i32 %32, 7, !dbg !3479
  br i1 %cmp27, label %while.body, label %while.end, !dbg !3480

while.body:                                       ; preds = %while.cond
  %33 = load i32, i32* %num_bits_left, align 4, !dbg !3481
  %sub28 = sub nsw i32 %33, 2, !dbg !3481
  store i32 %sub28, i32* %num_bits_left, align 4, !dbg !3481
  %34 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3483
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3484
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3485
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3486
  %call29 = call i32 @get_bits(%struct.GetBitContext* %37, i32 2), !dbg !3487
  call void @read_sbr_extension(%struct.AACContext* %34, %struct.SpectralBandReplication* %35, %struct.GetBitContext* %36, i32 %call29, i32* %num_bits_left), !dbg !3488
  br label %while.cond, !dbg !3490, !llvm.loop !3492

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %num_bits_left, align 4, !dbg !3493
  %cmp30 = icmp slt i32 %38, 0, !dbg !3495
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !3496

if.then31:                                        ; preds = %while.end
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3497
  %avctx32 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 1, !dbg !3499
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx32, align 8, !dbg !3499
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !3497
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0)), !dbg !3500
  br label %if.end33, !dbg !3501

if.end33:                                         ; preds = %if.then31, %while.end
  %42 = load i32, i32* %num_bits_left, align 4, !dbg !3502
  %cmp34 = icmp sgt i32 %42, 0, !dbg !3504
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !3505

if.then35:                                        ; preds = %if.end33
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3506
  %44 = load i32, i32* %num_bits_left, align 4, !dbg !3507
  call void @skip_bits(%struct.GetBitContext* %43, i32 %44), !dbg !3508
  br label %if.end36, !dbg !3508

if.end36:                                         ; preds = %if.then35, %if.end33
  br label %if.end37, !dbg !3509

if.end37:                                         ; preds = %if.end36, %if.end18
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3510
  %call38 = call i32 @get_bits_count(%struct.GetBitContext* %45), !dbg !3511
  %46 = load i32, i32* %cnt, align 4, !dbg !3512
  %sub39 = sub i32 %call38, %46, !dbg !3513
  store i32 %sub39, i32* %retval, align 4, !dbg !3514
  br label %return, !dbg !3514

return:                                           ; preds = %if.end37, %if.else14, %if.then10, %if.then4
  %47 = load i32, i32* %retval, align 4, !dbg !3515
  ret i32 %47, !dbg !3515
}

declare void @av_log(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @ff_sbr_apply(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, i32 %id_aac, float* %L, float* %R) #3 !dbg !3516 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  %L.addr = alloca float*, align 8
  %R.addr = alloca float*, align 8
  %downsampled = alloca i32, align 4
  %ch = alloca i32, align 4
  %nch = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !3519, metadata !2753), !dbg !3520
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !3521, metadata !2753), !dbg !3522
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !3523, metadata !2753), !dbg !3524
  store float* %L, float** %L.addr, align 8
  call void @llvm.dbg.declare(metadata float** %L.addr, metadata !3525, metadata !2753), !dbg !3526
  store float* %R, float** %R.addr, align 8
  call void @llvm.dbg.declare(metadata float** %R.addr, metadata !3527, metadata !2753), !dbg !3528
  call void @llvm.dbg.declare(metadata i32* %downsampled, metadata !3529, metadata !2753), !dbg !3530
  %0 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3531
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %0, i32 0, i32 24, !dbg !3532
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !3531
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !3533
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 7, !dbg !3534
  %1 = load i32, i32* %ext_sample_rate, align 4, !dbg !3534
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3535
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 0, !dbg !3536
  %3 = load i32, i32* %sample_rate, align 32, !dbg !3536
  %cmp = icmp slt i32 %1, %3, !dbg !3537
  %conv = zext i1 %cmp to i32, !dbg !3537
  store i32 %conv, i32* %downsampled, align 4, !dbg !3530
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3538, metadata !2753), !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %nch, metadata !3540, metadata !2753), !dbg !3541
  %4 = load i32, i32* %id_aac.addr, align 4, !dbg !3542
  %cmp1 = icmp eq i32 %4, 1, !dbg !3543
  %cond = select i1 %cmp1, i32 2, i32 1, !dbg !3544
  store i32 %cond, i32* %nch, align 4, !dbg !3541
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3545, metadata !2753), !dbg !3546
  %5 = load i32, i32* %id_aac.addr, align 4, !dbg !3547
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3549
  %id_aac3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 3, !dbg !3550
  %7 = load i32, i32* %id_aac3, align 4, !dbg !3550
  %cmp4 = icmp ne i32 %5, %7, !dbg !3551
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3552

if.then:                                          ; preds = %entry
  %8 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3553
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %8, i32 0, i32 1, !dbg !3555
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3555
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !3553
  %11 = load i32, i32* %id_aac.addr, align 4, !dbg !3556
  %cmp6 = icmp eq i32 %11, 3, !dbg !3557
  %cond8 = select i1 %cmp6, i32 40, i32 24, !dbg !3556
  %12 = load i32, i32* %id_aac.addr, align 4, !dbg !3558
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3559
  %id_aac9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 3, !dbg !3560
  %14 = load i32, i32* %id_aac9, align 4, !dbg !3560
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 %cond8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0), i32 %12, i32 %14), !dbg !3561
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3562
  call void @sbr_turnoff(%struct.SpectralBandReplication* %15), !dbg !3563
  br label %if.end, !dbg !3564

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3565
  %start = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %16, i32 0, i32 1, !dbg !3567
  %17 = load i32, i32* %start, align 4, !dbg !3567
  %tobool = icmp ne i32 %17, 0, !dbg !3565
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !3568

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3569
  %ready_for_dequant = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 2, !dbg !3571
  %19 = load i32, i32* %ready_for_dequant, align 8, !dbg !3571
  %tobool10 = icmp ne i32 %19, 0, !dbg !3569
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !3572

if.then11:                                        ; preds = %land.lhs.true
  %20 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3573
  %avctx12 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %20, i32 0, i32 1, !dbg !3575
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !3575
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !3573
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i32 0, i32 0)), !dbg !3576
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3577
  call void @sbr_turnoff(%struct.SpectralBandReplication* %23), !dbg !3578
  br label %if.end13, !dbg !3579

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3580
  %kx_and_m_pushed = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %24, i32 0, i32 15, !dbg !3582
  %25 = load i32, i32* %kx_and_m_pushed, align 8, !dbg !3582
  %tobool14 = icmp ne i32 %25, 0, !dbg !3580
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !3583

if.then15:                                        ; preds = %if.end13
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3584
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !3586
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !3584
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !3584
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3587
  %kx17 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 13, !dbg !3588
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %kx17, i64 0, i64 0, !dbg !3587
  store i32 %27, i32* %arrayidx18, align 8, !dbg !3589
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3590
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %29, i32 0, i32 14, !dbg !3591
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !3590
  %30 = load i32, i32* %arrayidx19, align 4, !dbg !3590
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3592
  %m20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 14, !dbg !3593
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %m20, i64 0, i64 0, !dbg !3592
  store i32 %30, i32* %arrayidx21, align 16, !dbg !3594
  br label %if.end23, !dbg !3595

if.else:                                          ; preds = %if.end13
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3596
  %kx_and_m_pushed22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 15, !dbg !3598
  store i32 0, i32* %kx_and_m_pushed22, align 8, !dbg !3599
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then15
  %33 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3600
  %start24 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %33, i32 0, i32 1, !dbg !3602
  %34 = load i32, i32* %start24, align 4, !dbg !3602
  %tobool25 = icmp ne i32 %34, 0, !dbg !3600
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !3603

if.then26:                                        ; preds = %if.end23
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3604
  %36 = load i32, i32* %id_aac.addr, align 4, !dbg !3606
  call void @sbr_dequant(%struct.SpectralBandReplication* %35, i32 %36), !dbg !3607
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3608
  %ready_for_dequant27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 2, !dbg !3609
  store i32 0, i32* %ready_for_dequant27, align 8, !dbg !3610
  br label %if.end28, !dbg !3611

if.end28:                                         ; preds = %if.then26, %if.end23
  store i32 0, i32* %ch, align 4, !dbg !3612
  br label %for.cond, !dbg !3614

for.cond:                                         ; preds = %for.inc, %if.end28
  %38 = load i32, i32* %ch, align 4, !dbg !3615
  %39 = load i32, i32* %nch, align 4, !dbg !3618
  %cmp29 = icmp slt i32 %38, %39, !dbg !3619
  br i1 %cmp29, label %for.body, label %for.end, !dbg !3620

for.body:                                         ; preds = %for.cond
  %40 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3621
  %fdsp = getelementptr inbounds %struct.AACContext, %struct.AACContext* %40, i32 0, i32 17, !dbg !3623
  %41 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !3623
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3624
  %mdct_ana = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 44, !dbg !3625
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3626
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 46, !dbg !3627
  %44 = load i32, i32* %ch, align 4, !dbg !3628
  %tobool31 = icmp ne i32 %44, 0, !dbg !3628
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !3628

cond.true:                                        ; preds = %for.body
  %45 = load float*, float** %R.addr, align 8, !dbg !3629
  br label %cond.end, !dbg !3631

cond.false:                                       ; preds = %for.body
  %46 = load float*, float** %L.addr, align 8, !dbg !3632
  br label %cond.end, !dbg !3634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond32 = phi float* [ %45, %cond.true ], [ %46, %cond.false ], !dbg !3635
  %47 = load i32, i32* %ch, align 4, !dbg !3637
  %idxprom = sext i32 %47 to i64, !dbg !3638
  %48 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3638
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %48, i32 0, i32 17, !dbg !3639
  %arrayidx33 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 %idxprom, !dbg !3638
  %analysis_filterbank_samples = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx33, i32 0, i32 11, !dbg !3640
  %arraydecay = getelementptr inbounds [1312 x float], [1312 x float]* %analysis_filterbank_samples, i32 0, i32 0, !dbg !3638
  %49 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3641
  %qmf_filter_scratch = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %49, i32 0, i32 43, !dbg !3642
  %arraydecay34 = getelementptr inbounds [5 x [64 x float]], [5 x [64 x float]]* %qmf_filter_scratch, i32 0, i32 0, !dbg !3641
  %50 = bitcast [64 x float]* %arraydecay34 to float*, !dbg !3643
  %51 = load i32, i32* %ch, align 4, !dbg !3644
  %idxprom35 = sext i32 %51 to i64, !dbg !3645
  %52 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3645
  %data36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %52, i32 0, i32 17, !dbg !3646
  %arrayidx37 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data36, i64 0, i64 %idxprom35, !dbg !3645
  %W = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx37, i32 0, i32 15, !dbg !3647
  %arraydecay38 = getelementptr inbounds [2 x [32 x [32 x [2 x float]]]], [2 x [32 x [32 x [2 x float]]]]* %W, i32 0, i32 0, !dbg !3645
  %53 = load i32, i32* %ch, align 4, !dbg !3648
  %idxprom39 = sext i32 %53 to i64, !dbg !3649
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3649
  %data40 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %54, i32 0, i32 17, !dbg !3650
  %arrayidx41 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data40, i64 0, i64 %idxprom39, !dbg !3649
  %Ypos = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx41, i32 0, i32 16, !dbg !3651
  %55 = load i32, i32* %Ypos, align 32, !dbg !3651
  call void @sbr_qmf_analysis(%struct.AVFloatDSPContext* %41, %struct.FFTContext* %mdct_ana, %struct.SBRDSPContext* %dsp, float* %cond32, float* %arraydecay, float* %50, [32 x [32 x [2 x float]]]* %arraydecay38, i32 %55), !dbg !3652
  %56 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3653
  %c = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %56, i32 0, i32 47, !dbg !3654
  %sbr_lf_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c, i32 0, i32 0, !dbg !3655
  %57 = load i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)** %sbr_lf_gen, align 16, !dbg !3655
  %58 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3656
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3657
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3658
  %X_low = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %60, i32 0, i32 30, !dbg !3659
  %arraydecay42 = getelementptr inbounds [32 x [40 x [2 x float]]], [32 x [40 x [2 x float]]]* %X_low, i32 0, i32 0, !dbg !3658
  %61 = load i32, i32* %ch, align 4, !dbg !3660
  %idxprom43 = sext i32 %61 to i64, !dbg !3661
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3661
  %data44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 17, !dbg !3662
  %arrayidx45 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data44, i64 0, i64 %idxprom43, !dbg !3661
  %W46 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx45, i32 0, i32 15, !dbg !3663
  %arraydecay47 = getelementptr inbounds [2 x [32 x [32 x [2 x float]]]], [2 x [32 x [32 x [2 x float]]]]* %W46, i32 0, i32 0, !dbg !3661
  %63 = load i32, i32* %ch, align 4, !dbg !3664
  %idxprom48 = sext i32 %63 to i64, !dbg !3665
  %64 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3665
  %data49 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %64, i32 0, i32 17, !dbg !3666
  %arrayidx50 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data49, i64 0, i64 %idxprom48, !dbg !3665
  %Ypos51 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx50, i32 0, i32 16, !dbg !3667
  %65 = load i32, i32* %Ypos51, align 32, !dbg !3667
  %call = call i32 %57(%struct.AACContext* %58, %struct.SpectralBandReplication* %59, [40 x [2 x float]]* %arraydecay42, [32 x [32 x [2 x float]]]* %arraydecay47, i32 %65), !dbg !3653
  %66 = load i32, i32* %ch, align 4, !dbg !3668
  %idxprom52 = sext i32 %66 to i64, !dbg !3669
  %67 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3669
  %data53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %67, i32 0, i32 17, !dbg !3670
  %arrayidx54 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data53, i64 0, i64 %idxprom52, !dbg !3669
  %Ypos55 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx54, i32 0, i32 16, !dbg !3671
  %68 = load i32, i32* %Ypos55, align 32, !dbg !3672
  %xor = xor i32 %68, 1, !dbg !3672
  store i32 %xor, i32* %Ypos55, align 32, !dbg !3672
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3673
  %start56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 1, !dbg !3675
  %70 = load i32, i32* %start56, align 4, !dbg !3675
  %tobool57 = icmp ne i32 %70, 0, !dbg !3673
  br i1 %tobool57, label %if.then58, label %if.end142, !dbg !3676

if.then58:                                        ; preds = %cond.end
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3677
  %c59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 47, !dbg !3679
  %sbr_hf_inverse_filter = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c59, i32 0, i32 3, !dbg !3680
  %72 = load void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)** %sbr_hf_inverse_filter, align 8, !dbg !3680
  %73 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3681
  %dsp60 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %73, i32 0, i32 46, !dbg !3682
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3683
  %alpha0 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 33, !dbg !3684
  %arraydecay61 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %alpha0, i32 0, i32 0, !dbg !3683
  %75 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3685
  %alpha1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %75, i32 0, i32 34, !dbg !3686
  %arraydecay62 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %alpha1, i32 0, i32 0, !dbg !3685
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3687
  %X_low63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 30, !dbg !3688
  %arraydecay64 = getelementptr inbounds [32 x [40 x [2 x float]]], [32 x [40 x [2 x float]]]* %X_low63, i32 0, i32 0, !dbg !3687
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3689
  %k = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 12, !dbg !3690
  %arrayidx65 = getelementptr inbounds [5 x i32], [5 x i32]* %k, i64 0, i64 0, !dbg !3689
  %78 = load i32, i32* %arrayidx65, align 4, !dbg !3689
  call void %72(%struct.SBRDSPContext* %dsp60, [2 x float]* %arraydecay61, [2 x float]* %arraydecay62, [40 x [2 x float]]* %arraydecay64, i32 %78), !dbg !3677
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3691
  %80 = load i32, i32* %ch, align 4, !dbg !3692
  %idxprom66 = sext i32 %80 to i64, !dbg !3693
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3693
  %data67 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 17, !dbg !3694
  %arrayidx68 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data67, i64 0, i64 %idxprom66, !dbg !3693
  call void @sbr_chirp(%struct.SpectralBandReplication* %79, %struct.SBRData* %arrayidx68), !dbg !3695
  br label %do.body, !dbg !3696, !llvm.loop !3697

do.body:                                          ; preds = %if.then58
  %82 = load i32, i32* %ch, align 4, !dbg !3698
  %idxprom69 = sext i32 %82 to i64, !dbg !3702
  %83 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3702
  %data70 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %83, i32 0, i32 17, !dbg !3703
  %arrayidx71 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data70, i64 0, i64 %idxprom69, !dbg !3702
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx71, i32 0, i32 2, !dbg !3704
  %84 = load i32, i32* %bs_num_env, align 8, !dbg !3704
  %cmp72 = icmp ugt i32 %84, 0, !dbg !3705
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !3706

if.then74:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 1523), !dbg !3707
  call void @abort() #10, !dbg !3710
  unreachable, !dbg !3712

if.end75:                                         ; preds = %do.body
  br label %do.end, !dbg !3713

do.end:                                           ; preds = %if.end75
  %85 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3715
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3716
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3717
  %X_high = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 31, !dbg !3718
  %arraydecay76 = getelementptr inbounds [64 x [40 x [2 x float]]], [64 x [40 x [2 x float]]]* %X_high, i32 0, i32 0, !dbg !3717
  %88 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3719
  %X_low77 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %88, i32 0, i32 30, !dbg !3720
  %arraydecay78 = getelementptr inbounds [32 x [40 x [2 x float]]], [32 x [40 x [2 x float]]]* %X_low77, i32 0, i32 0, !dbg !3719
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3721
  %alpha079 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 33, !dbg !3722
  %arraydecay80 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %alpha079, i32 0, i32 0, !dbg !3721
  %90 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3723
  %alpha181 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %90, i32 0, i32 34, !dbg !3724
  %arraydecay82 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %alpha181, i32 0, i32 0, !dbg !3723
  %91 = load i32, i32* %ch, align 4, !dbg !3725
  %idxprom83 = sext i32 %91 to i64, !dbg !3726
  %92 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3726
  %data84 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %92, i32 0, i32 17, !dbg !3727
  %arrayidx85 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data84, i64 0, i64 %idxprom83, !dbg !3726
  %bw_array = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx85, i32 0, i32 14, !dbg !3728
  %arraydecay86 = getelementptr inbounds [5 x float], [5 x float]* %bw_array, i32 0, i32 0, !dbg !3726
  %93 = load i32, i32* %ch, align 4, !dbg !3729
  %idxprom87 = sext i32 %93 to i64, !dbg !3730
  %94 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3730
  %data88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %94, i32 0, i32 17, !dbg !3731
  %arrayidx89 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data88, i64 0, i64 %idxprom87, !dbg !3730
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx89, i32 0, i32 26, !dbg !3732
  %arraydecay90 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i32 0, i32 0, !dbg !3730
  %95 = load i32, i32* %ch, align 4, !dbg !3733
  %idxprom91 = sext i32 %95 to i64, !dbg !3734
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3734
  %data92 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 17, !dbg !3735
  %arrayidx93 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data92, i64 0, i64 %idxprom91, !dbg !3734
  %bs_num_env94 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx93, i32 0, i32 2, !dbg !3736
  %97 = load i32, i32* %bs_num_env94, align 8, !dbg !3736
  %call95 = call i32 @sbr_hf_gen(%struct.AACContext* %85, %struct.SpectralBandReplication* %86, [40 x [2 x float]]* %arraydecay76, [40 x [2 x float]]* %arraydecay78, [2 x float]* %arraydecay80, [2 x float]* %arraydecay82, float* %arraydecay86, i8* %arraydecay90, i32 %97), !dbg !3737
  %98 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3738
  %99 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3739
  %100 = load i32, i32* %ch, align 4, !dbg !3740
  %idxprom96 = sext i32 %100 to i64, !dbg !3741
  %101 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3741
  %data97 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %101, i32 0, i32 17, !dbg !3742
  %arrayidx98 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data97, i64 0, i64 %idxprom96, !dbg !3741
  %102 = load i32, i32* %ch, align 4, !dbg !3743
  %idxprom99 = sext i32 %102 to i64, !dbg !3744
  %103 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3744
  %data100 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %103, i32 0, i32 17, !dbg !3745
  %arrayidx101 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data100, i64 0, i64 %idxprom99, !dbg !3744
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx101, i32 0, i32 13, !dbg !3746
  %arraydecay102 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i32 0, i32 0, !dbg !3744
  %call103 = call i32 @sbr_mapping(%struct.AACContext* %98, %struct.SpectralBandReplication* %99, %struct.SBRData* %arrayidx98, i32* %arraydecay102), !dbg !3747
  store i32 %call103, i32* %err, align 4, !dbg !3748
  %104 = load i32, i32* %err, align 4, !dbg !3749
  %tobool104 = icmp ne i32 %104, 0, !dbg !3749
  br i1 %tobool104, label %if.end141, label %if.then105, !dbg !3751

if.then105:                                       ; preds = %do.end
  %105 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3752
  %e_curr = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %105, i32 0, i32 38, !dbg !3754
  %arraydecay106 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_curr, i32 0, i32 0, !dbg !3752
  %106 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3755
  %X_high107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %106, i32 0, i32 31, !dbg !3756
  %arraydecay108 = getelementptr inbounds [64 x [40 x [2 x float]]], [64 x [40 x [2 x float]]]* %X_high107, i32 0, i32 0, !dbg !3755
  %107 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3757
  %108 = load i32, i32* %ch, align 4, !dbg !3758
  %idxprom109 = sext i32 %108 to i64, !dbg !3759
  %109 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3759
  %data110 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %109, i32 0, i32 17, !dbg !3760
  %arrayidx111 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data110, i64 0, i64 %idxprom109, !dbg !3759
  call void @sbr_env_estimate([48 x float]* %arraydecay106, [40 x [2 x float]]* %arraydecay108, %struct.SpectralBandReplication* %107, %struct.SBRData* %arrayidx111), !dbg !3761
  %110 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3762
  %111 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3763
  %112 = load i32, i32* %ch, align 4, !dbg !3764
  %idxprom112 = sext i32 %112 to i64, !dbg !3765
  %113 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3765
  %data113 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %113, i32 0, i32 17, !dbg !3766
  %arrayidx114 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data113, i64 0, i64 %idxprom112, !dbg !3765
  %114 = load i32, i32* %ch, align 4, !dbg !3767
  %idxprom115 = sext i32 %114 to i64, !dbg !3768
  %115 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3768
  %data116 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %115, i32 0, i32 17, !dbg !3769
  %arrayidx117 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data116, i64 0, i64 %idxprom115, !dbg !3768
  %e_a118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx117, i32 0, i32 13, !dbg !3770
  %arraydecay119 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a118, i32 0, i32 0, !dbg !3768
  call void @sbr_gain_calc(%struct.AACContext* %110, %struct.SpectralBandReplication* %111, %struct.SBRData* %arrayidx114, i32* %arraydecay119), !dbg !3771
  %116 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3772
  %c120 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %116, i32 0, i32 47, !dbg !3773
  %sbr_hf_assemble = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c120, i32 0, i32 1, !dbg !3774
  %117 = load void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)** %sbr_hf_assemble, align 8, !dbg !3774
  %118 = load i32, i32* %ch, align 4, !dbg !3775
  %idxprom121 = sext i32 %118 to i64, !dbg !3776
  %119 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3776
  %data122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %119, i32 0, i32 17, !dbg !3777
  %arrayidx123 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data122, i64 0, i64 %idxprom121, !dbg !3776
  %Ypos124 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx123, i32 0, i32 16, !dbg !3778
  %120 = load i32, i32* %Ypos124, align 32, !dbg !3778
  %idxprom125 = sext i32 %120 to i64, !dbg !3779
  %121 = load i32, i32* %ch, align 4, !dbg !3780
  %idxprom126 = sext i32 %121 to i64, !dbg !3779
  %122 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3779
  %data127 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %122, i32 0, i32 17, !dbg !3781
  %arrayidx128 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data127, i64 0, i64 %idxprom126, !dbg !3779
  %Y = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx128, i32 0, i32 18, !dbg !3782
  %arrayidx129 = getelementptr inbounds [2 x [38 x [64 x [2 x float]]]], [2 x [38 x [64 x [2 x float]]]]* %Y, i64 0, i64 %idxprom125, !dbg !3779
  %arraydecay130 = getelementptr inbounds [38 x [64 x [2 x float]]], [38 x [64 x [2 x float]]]* %arrayidx129, i32 0, i32 0, !dbg !3779
  %123 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3783
  %X_high131 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %123, i32 0, i32 31, !dbg !3784
  %arraydecay132 = getelementptr inbounds [64 x [40 x [2 x float]]], [64 x [40 x [2 x float]]]* %X_high131, i32 0, i32 0, !dbg !3783
  %124 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3785
  %125 = load i32, i32* %ch, align 4, !dbg !3786
  %idxprom133 = sext i32 %125 to i64, !dbg !3787
  %126 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3787
  %data134 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %126, i32 0, i32 17, !dbg !3788
  %arrayidx135 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data134, i64 0, i64 %idxprom133, !dbg !3787
  %127 = load i32, i32* %ch, align 4, !dbg !3789
  %idxprom136 = sext i32 %127 to i64, !dbg !3790
  %128 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3790
  %data137 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %128, i32 0, i32 17, !dbg !3791
  %arrayidx138 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data137, i64 0, i64 %idxprom136, !dbg !3790
  %e_a139 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx138, i32 0, i32 13, !dbg !3792
  %arraydecay140 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a139, i32 0, i32 0, !dbg !3790
  call void %117([64 x [2 x float]]* %arraydecay130, [40 x [2 x float]]* %arraydecay132, %struct.SpectralBandReplication* %124, %struct.SBRData* %arrayidx135, i32* %arraydecay140), !dbg !3772
  br label %if.end141, !dbg !3793

if.end141:                                        ; preds = %if.then105, %do.end
  br label %if.end142, !dbg !3794

if.end142:                                        ; preds = %if.end141, %cond.end
  %129 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3795
  %c143 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %129, i32 0, i32 47, !dbg !3796
  %sbr_x_gen = getelementptr inbounds %struct.AACSBRContext, %struct.AACSBRContext* %c143, i32 0, i32 2, !dbg !3797
  %130 = load i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)** %sbr_x_gen, align 16, !dbg !3797
  %131 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3798
  %132 = load i32, i32* %ch, align 4, !dbg !3799
  %idxprom144 = sext i32 %132 to i64, !dbg !3800
  %133 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3800
  %X = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %133, i32 0, i32 32, !dbg !3801
  %arrayidx145 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X, i64 0, i64 %idxprom144, !dbg !3800
  %arraydecay146 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx145, i32 0, i32 0, !dbg !3800
  %134 = load i32, i32* %ch, align 4, !dbg !3802
  %idxprom147 = sext i32 %134 to i64, !dbg !3803
  %135 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3803
  %data148 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %135, i32 0, i32 17, !dbg !3804
  %arrayidx149 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data148, i64 0, i64 %idxprom147, !dbg !3803
  %Ypos150 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx149, i32 0, i32 16, !dbg !3805
  %136 = load i32, i32* %Ypos150, align 32, !dbg !3805
  %sub = sub nsw i32 1, %136, !dbg !3806
  %idxprom151 = sext i32 %sub to i64, !dbg !3807
  %137 = load i32, i32* %ch, align 4, !dbg !3808
  %idxprom152 = sext i32 %137 to i64, !dbg !3807
  %138 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3807
  %data153 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %138, i32 0, i32 17, !dbg !3809
  %arrayidx154 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data153, i64 0, i64 %idxprom152, !dbg !3807
  %Y155 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx154, i32 0, i32 18, !dbg !3810
  %arrayidx156 = getelementptr inbounds [2 x [38 x [64 x [2 x float]]]], [2 x [38 x [64 x [2 x float]]]]* %Y155, i64 0, i64 %idxprom151, !dbg !3807
  %arraydecay157 = getelementptr inbounds [38 x [64 x [2 x float]]], [38 x [64 x [2 x float]]]* %arrayidx156, i32 0, i32 0, !dbg !3807
  %139 = load i32, i32* %ch, align 4, !dbg !3811
  %idxprom158 = sext i32 %139 to i64, !dbg !3812
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3812
  %data159 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 17, !dbg !3813
  %arrayidx160 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data159, i64 0, i64 %idxprom158, !dbg !3812
  %Ypos161 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx160, i32 0, i32 16, !dbg !3814
  %141 = load i32, i32* %Ypos161, align 32, !dbg !3814
  %idxprom162 = sext i32 %141 to i64, !dbg !3815
  %142 = load i32, i32* %ch, align 4, !dbg !3816
  %idxprom163 = sext i32 %142 to i64, !dbg !3815
  %143 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3815
  %data164 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %143, i32 0, i32 17, !dbg !3817
  %arrayidx165 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data164, i64 0, i64 %idxprom163, !dbg !3815
  %Y166 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx165, i32 0, i32 18, !dbg !3818
  %arrayidx167 = getelementptr inbounds [2 x [38 x [64 x [2 x float]]]], [2 x [38 x [64 x [2 x float]]]]* %Y166, i64 0, i64 %idxprom162, !dbg !3815
  %arraydecay168 = getelementptr inbounds [38 x [64 x [2 x float]]], [38 x [64 x [2 x float]]]* %arrayidx167, i32 0, i32 0, !dbg !3815
  %144 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3819
  %X_low169 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %144, i32 0, i32 30, !dbg !3820
  %arraydecay170 = getelementptr inbounds [32 x [40 x [2 x float]]], [32 x [40 x [2 x float]]]* %X_low169, i32 0, i32 0, !dbg !3819
  %145 = load i32, i32* %ch, align 4, !dbg !3821
  %call171 = call i32 %130(%struct.SpectralBandReplication* %131, [38 x [64 x float]]* %arraydecay146, [64 x [2 x float]]* %arraydecay157, [64 x [2 x float]]* %arraydecay168, [40 x [2 x float]]* %arraydecay170, i32 %145), !dbg !3795
  br label %for.inc, !dbg !3822

for.inc:                                          ; preds = %if.end142
  %146 = load i32, i32* %ch, align 4, !dbg !3823
  %inc = add nsw i32 %146, 1, !dbg !3823
  store i32 %inc, i32* %ch, align 4, !dbg !3823
  br label %for.cond, !dbg !3825, !llvm.loop !3826

for.end:                                          ; preds = %for.cond
  %147 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3828
  %oc172 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %147, i32 0, i32 24, !dbg !3830
  %arrayidx173 = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc172, i64 0, i64 1, !dbg !3828
  %m4ac174 = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx173, i32 0, i32 0, !dbg !3831
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac174, i32 0, i32 10, !dbg !3832
  %148 = load i32, i32* %ps, align 8, !dbg !3832
  %cmp175 = icmp eq i32 %148, 1, !dbg !3833
  br i1 %cmp175, label %if.then177, label %if.end203, !dbg !3834

if.then177:                                       ; preds = %for.end
  %149 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3835
  %ps178 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %149, i32 0, i32 18, !dbg !3838
  %start179 = getelementptr inbounds %struct.PSContext, %struct.PSContext* %ps178, i32 0, i32 0, !dbg !3839
  %150 = load i32, i32* %start179, align 32, !dbg !3839
  %tobool180 = icmp ne i32 %150, 0, !dbg !3835
  br i1 %tobool180, label %if.then181, label %if.else195, !dbg !3840

if.then181:                                       ; preds = %if.then177
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3841
  %avctx182 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 1, !dbg !3843
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx182, align 8, !dbg !3843
  %153 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3844
  %ps183 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %153, i32 0, i32 18, !dbg !3845
  %154 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3846
  %X184 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %154, i32 0, i32 32, !dbg !3847
  %arrayidx185 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X184, i64 0, i64 0, !dbg !3846
  %arraydecay186 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx185, i32 0, i32 0, !dbg !3846
  %155 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3848
  %X187 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %155, i32 0, i32 32, !dbg !3849
  %arrayidx188 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X187, i64 0, i64 1, !dbg !3848
  %arraydecay189 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx188, i32 0, i32 0, !dbg !3848
  %156 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3850
  %kx190 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %156, i32 0, i32 13, !dbg !3851
  %arrayidx191 = getelementptr inbounds [2 x i32], [2 x i32]* %kx190, i64 0, i64 1, !dbg !3850
  %157 = load i32, i32* %arrayidx191, align 4, !dbg !3850
  %158 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3852
  %m192 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %158, i32 0, i32 14, !dbg !3853
  %arrayidx193 = getelementptr inbounds [2 x i32], [2 x i32]* %m192, i64 0, i64 1, !dbg !3852
  %159 = load i32, i32* %arrayidx193, align 4, !dbg !3852
  %add = add i32 %157, %159, !dbg !3854
  %call194 = call i32 @ff_ps_apply(%struct.AVCodecContext* %152, %struct.PSContext* %ps183, [38 x [64 x float]]* %arraydecay186, [38 x [64 x float]]* %arraydecay189, i32 %add), !dbg !3855
  br label %if.end202, !dbg !3856

if.else195:                                       ; preds = %if.then177
  %160 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3857
  %X196 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %160, i32 0, i32 32, !dbg !3859
  %arrayidx197 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X196, i64 0, i64 1, !dbg !3857
  %arraydecay198 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx197, i32 0, i32 0, !dbg !3860
  %161 = bitcast [38 x [64 x float]]* %arraydecay198 to i8*, !dbg !3860
  %162 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3861
  %X199 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %162, i32 0, i32 32, !dbg !3862
  %arrayidx200 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X199, i64 0, i64 0, !dbg !3861
  %arraydecay201 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx200, i32 0, i32 0, !dbg !3860
  %163 = bitcast [38 x [64 x float]]* %arraydecay201 to i8*, !dbg !3860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %163, i64 19456, i32 32, i1 false), !dbg !3860
  br label %if.end202

if.end202:                                        ; preds = %if.else195, %if.then181
  store i32 2, i32* %nch, align 4, !dbg !3863
  br label %if.end203, !dbg !3864

if.end203:                                        ; preds = %if.end202, %for.end
  %164 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3865
  %mdct = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %164, i32 0, i32 45, !dbg !3866
  %165 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3867
  %dsp204 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %165, i32 0, i32 46, !dbg !3868
  %166 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3869
  %fdsp205 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %166, i32 0, i32 17, !dbg !3870
  %167 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp205, align 8, !dbg !3870
  %168 = load float*, float** %L.addr, align 8, !dbg !3871
  %169 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3872
  %X206 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %169, i32 0, i32 32, !dbg !3873
  %arrayidx207 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X206, i64 0, i64 0, !dbg !3872
  %arraydecay208 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx207, i32 0, i32 0, !dbg !3872
  %170 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3874
  %qmf_filter_scratch209 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %170, i32 0, i32 43, !dbg !3875
  %arraydecay210 = getelementptr inbounds [5 x [64 x float]], [5 x [64 x float]]* %qmf_filter_scratch209, i32 0, i32 0, !dbg !3874
  %171 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3876
  %data211 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %171, i32 0, i32 17, !dbg !3877
  %arrayidx212 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data211, i64 0, i64 0, !dbg !3876
  %synthesis_filterbank_samples = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx212, i32 0, i32 10, !dbg !3878
  %arraydecay213 = getelementptr inbounds [2304 x float], [2304 x float]* %synthesis_filterbank_samples, i32 0, i32 0, !dbg !3876
  %172 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3879
  %data214 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %172, i32 0, i32 17, !dbg !3880
  %arrayidx215 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data214, i64 0, i64 0, !dbg !3879
  %synthesis_filterbank_samples_offset = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx215, i32 0, i32 12, !dbg !3881
  %173 = load i32, i32* %downsampled, align 4, !dbg !3882
  call void @sbr_qmf_synthesis(%struct.FFTContext* %mdct, %struct.SBRDSPContext* %dsp204, %struct.AVFloatDSPContext* %167, float* %168, [38 x [64 x float]]* %arraydecay208, [64 x float]* %arraydecay210, float* %arraydecay213, i32* %synthesis_filterbank_samples_offset, i32 %173), !dbg !3883
  %174 = load i32, i32* %nch, align 4, !dbg !3884
  %cmp216 = icmp eq i32 %174, 2, !dbg !3886
  br i1 %cmp216, label %if.then218, label %if.end234, !dbg !3887

if.then218:                                       ; preds = %if.end203
  %175 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3888
  %mdct219 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %175, i32 0, i32 45, !dbg !3889
  %176 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3890
  %dsp220 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %176, i32 0, i32 46, !dbg !3891
  %177 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !3892
  %fdsp221 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %177, i32 0, i32 17, !dbg !3893
  %178 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp221, align 8, !dbg !3893
  %179 = load float*, float** %R.addr, align 8, !dbg !3894
  %180 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3895
  %X222 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %180, i32 0, i32 32, !dbg !3896
  %arrayidx223 = getelementptr inbounds [2 x [2 x [38 x [64 x float]]]], [2 x [2 x [38 x [64 x float]]]]* %X222, i64 0, i64 1, !dbg !3895
  %arraydecay224 = getelementptr inbounds [2 x [38 x [64 x float]]], [2 x [38 x [64 x float]]]* %arrayidx223, i32 0, i32 0, !dbg !3895
  %181 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3897
  %qmf_filter_scratch225 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %181, i32 0, i32 43, !dbg !3898
  %arraydecay226 = getelementptr inbounds [5 x [64 x float]], [5 x [64 x float]]* %qmf_filter_scratch225, i32 0, i32 0, !dbg !3897
  %182 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3899
  %data227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %182, i32 0, i32 17, !dbg !3900
  %arrayidx228 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data227, i64 0, i64 1, !dbg !3899
  %synthesis_filterbank_samples229 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx228, i32 0, i32 10, !dbg !3901
  %arraydecay230 = getelementptr inbounds [2304 x float], [2304 x float]* %synthesis_filterbank_samples229, i32 0, i32 0, !dbg !3899
  %183 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !3902
  %data231 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %183, i32 0, i32 17, !dbg !3903
  %arrayidx232 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data231, i64 0, i64 1, !dbg !3902
  %synthesis_filterbank_samples_offset233 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx232, i32 0, i32 12, !dbg !3904
  %184 = load i32, i32* %downsampled, align 4, !dbg !3905
  call void @sbr_qmf_synthesis(%struct.FFTContext* %mdct219, %struct.SBRDSPContext* %dsp220, %struct.AVFloatDSPContext* %178, float* %179, [38 x [64 x float]]* %arraydecay224, [64 x float]* %arraydecay226, float* %arraydecay230, i32* %synthesis_filterbank_samples_offset233, i32 %184), !dbg !3906
  br label %if.end234, !dbg !3906

if.end234:                                        ; preds = %if.then218, %if.end203
  ret void, !dbg !3907
}

; Function Attrs: nounwind uwtable
define internal void @sbr_dequant(%struct.SpectralBandReplication* %sbr, i32 %id_aac) #3 !dbg !2573 {
entry:
  %i.addr.i11.i506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i506, metadata !3908, metadata !2753), !dbg !3913
  %v.i12.i507 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i507, metadata !3932, metadata !2753), !dbg !3937
  %i.addr.i.i508 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i508, metadata !3908, metadata !2753), !dbg !3938
  %v.i.i509 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i509, metadata !3932, metadata !2753), !dbg !3940
  %retval.i510 = alloca float, align 4
  %x.addr.i511 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i511, metadata !3941, metadata !2753), !dbg !3942
  %i.addr.i11.i480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i480, metadata !3908, metadata !2753), !dbg !3943
  %v.i12.i481 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i481, metadata !3932, metadata !2753), !dbg !3947
  %i.addr.i.i482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i482, metadata !3908, metadata !2753), !dbg !3948
  %v.i.i483 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i483, metadata !3932, metadata !2753), !dbg !3950
  %retval.i484 = alloca float, align 4
  %x.addr.i485 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i485, metadata !3941, metadata !2753), !dbg !3951
  %i.addr.i11.i454 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i454, metadata !3908, metadata !2753), !dbg !3952
  %v.i12.i455 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i455, metadata !3932, metadata !2753), !dbg !3955
  %i.addr.i.i456 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i456, metadata !3908, metadata !2753), !dbg !3956
  %v.i.i457 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i457, metadata !3932, metadata !2753), !dbg !3958
  %retval.i458 = alloca float, align 4
  %x.addr.i459 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i459, metadata !3941, metadata !2753), !dbg !3959
  %i.addr.i11.i428 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i428, metadata !3908, metadata !2753), !dbg !3960
  %v.i12.i429 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i429, metadata !3932, metadata !2753), !dbg !3969
  %i.addr.i.i430 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i430, metadata !3908, metadata !2753), !dbg !3970
  %v.i.i431 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i431, metadata !3932, metadata !2753), !dbg !3972
  %retval.i432 = alloca float, align 4
  %x.addr.i433 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i433, metadata !3941, metadata !2753), !dbg !3973
  %i.addr.i11.i402 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i402, metadata !3908, metadata !2753), !dbg !3974
  %v.i12.i403 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i403, metadata !3932, metadata !2753), !dbg !3977
  %i.addr.i.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i404, metadata !3908, metadata !2753), !dbg !3978
  %v.i.i405 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i405, metadata !3932, metadata !2753), !dbg !3980
  %retval.i406 = alloca float, align 4
  %x.addr.i407 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i407, metadata !3941, metadata !2753), !dbg !3981
  %i.addr.i11.i376 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i376, metadata !3908, metadata !2753), !dbg !3982
  %v.i12.i377 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i377, metadata !3932, metadata !2753), !dbg !3995
  %i.addr.i.i378 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i378, metadata !3908, metadata !2753), !dbg !3996
  %v.i.i379 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i379, metadata !3932, metadata !2753), !dbg !3998
  %retval.i380 = alloca float, align 4
  %x.addr.i381 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i381, metadata !3941, metadata !2753), !dbg !3999
  %i.addr.i11.i350 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i350, metadata !3908, metadata !2753), !dbg !4000
  %v.i12.i351 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i351, metadata !3932, metadata !2753), !dbg !4003
  %i.addr.i.i352 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i352, metadata !3908, metadata !2753), !dbg !4004
  %v.i.i353 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i353, metadata !3932, metadata !2753), !dbg !4006
  %retval.i354 = alloca float, align 4
  %x.addr.i355 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i355, metadata !3941, metadata !2753), !dbg !4007
  %i.addr.i11.i324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i324, metadata !3908, metadata !2753), !dbg !4008
  %v.i12.i325 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i325, metadata !3932, metadata !2753), !dbg !4015
  %i.addr.i.i326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i326, metadata !3908, metadata !2753), !dbg !4016
  %v.i.i327 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i327, metadata !3932, metadata !2753), !dbg !4018
  %retval.i328 = alloca float, align 4
  %x.addr.i329 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i329, metadata !3941, metadata !2753), !dbg !4019
  %i.addr.i11.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11.i, metadata !3908, metadata !2753), !dbg !4020
  %v.i12.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i12.i, metadata !3932, metadata !2753), !dbg !4023
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !3908, metadata !2753), !dbg !4024
  %v.i.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i.i, metadata !3932, metadata !2753), !dbg !4026
  %retval.i = alloca float, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3941, metadata !2753), !dbg !4027
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %id_aac.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %e = alloca i32, align 4
  %ch = alloca i32, align 4
  %pan_offset = alloca i32, align 4
  %temp1 = alloca float, align 4
  %temp2 = alloca float, align 4
  %fac = alloca float, align 4
  %temp1114 = alloca float, align 4
  %temp2125 = alloca float, align 4
  %fac136 = alloca float, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4028, metadata !2753), !dbg !4029
  store i32 %id_aac, i32* %id_aac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_aac.addr, metadata !4030, metadata !2753), !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4032, metadata !2753), !dbg !4033
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4034, metadata !2753), !dbg !4035
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4036, metadata !2753), !dbg !4037
  %0 = load i32, i32* %id_aac.addr, align 4, !dbg !4038
  %cmp = icmp eq i32 %0, 1, !dbg !4039
  br i1 %cmp, label %land.lhs.true, label %if.else164, !dbg !4040

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4041
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !4043
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !4043
  %tobool = icmp ne i32 %2, 0, !dbg !4041
  br i1 %tobool, label %if.then, label %if.else164, !dbg !4044

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %pan_offset, metadata !4045, metadata !2753), !dbg !4046
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4047
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 17, !dbg !4048
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !4047
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx, i32 0, i32 9, !dbg !4049
  %4 = load i32, i32* %bs_amp_res, align 4, !dbg !4049
  %tobool1 = icmp ne i32 %4, 0, !dbg !4047
  %cond = select i1 %tobool1, i32 12, i32 24, !dbg !4047
  store i32 %cond, i32* %pan_offset, align 4, !dbg !4046
  store i32 1, i32* %e, align 4, !dbg !4050
  br label %for.cond, !dbg !4051

for.cond:                                         ; preds = %for.inc101, %if.then
  %5 = load i32, i32* %e, align 4, !dbg !4052
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4054
  %data2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 17, !dbg !4055
  %arrayidx3 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data2, i64 0, i64 0, !dbg !4054
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx3, i32 0, i32 2, !dbg !4056
  %7 = load i32, i32* %bs_num_env, align 8, !dbg !4056
  %cmp4 = icmp ule i32 %5, %7, !dbg !4057
  br i1 %cmp4, label %for.body, label %for.end103, !dbg !4058

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !4059
  br label %for.cond5, !dbg !4060

for.cond5:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %k, align 4, !dbg !4061
  %9 = load i32, i32* %e, align 4, !dbg !4063
  %idxprom = sext i32 %9 to i64, !dbg !4064
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4064
  %data6 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 17, !dbg !4065
  %arrayidx7 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data6, i64 0, i64 0, !dbg !4064
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx7, i32 0, i32 3, !dbg !4066
  %arrayidx8 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !4064
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !4064
  %idxprom9 = zext i8 %11 to i64, !dbg !4067
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4067
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 19, !dbg !4068
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom9, !dbg !4067
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !4067
  %cmp11 = icmp ult i32 %8, %13, !dbg !4069
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !4070

for.body12:                                       ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata float* %temp1, metadata !4071, metadata !2753), !dbg !4072
  call void @llvm.dbg.declare(metadata float* %temp2, metadata !4073, metadata !2753), !dbg !4074
  call void @llvm.dbg.declare(metadata float* %fac, metadata !4075, metadata !2753), !dbg !4076
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4077
  %data13 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 17, !dbg !4078
  %arrayidx14 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data13, i64 0, i64 0, !dbg !4077
  %bs_amp_res15 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx14, i32 0, i32 9, !dbg !4079
  %15 = load i32, i32* %bs_amp_res15, align 4, !dbg !4079
  %tobool16 = icmp ne i32 %15, 0, !dbg !4077
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4080

if.then17:                                        ; preds = %for.body12
  %16 = load i32, i32* %k, align 4, !dbg !4081
  %idxprom18 = sext i32 %16 to i64, !dbg !4082
  %17 = load i32, i32* %e, align 4, !dbg !4083
  %idxprom19 = sext i32 %17 to i64, !dbg !4082
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4082
  %data20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 17, !dbg !4084
  %arrayidx21 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data20, i64 0, i64 0, !dbg !4082
  %env_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx21, i32 0, i32 22, !dbg !4085
  %arrayidx22 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q, i64 0, i64 %idxprom19, !dbg !4082
  %arrayidx23 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx22, i64 0, i64 %idxprom18, !dbg !4082
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !4082
  %conv = zext i8 %19 to i32, !dbg !4082
  %add = add nsw i32 %conv, 7, !dbg !4086
  store i32 %add, i32* %x.addr.i, align 4, !dbg !4087
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !4088
  %cmp.i = icmp sle i32 -126, %20, !dbg !4089
  br i1 %cmp.i, label %land.lhs.true.i, label %if.else.i, !dbg !4090

land.lhs.true.i:                                  ; preds = %if.then17
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !4091
  %cmp1.i = icmp sle i32 %21, 128, !dbg !4093
  br i1 %cmp1.i, label %if.then.i, label %if.else.i, !dbg !4094

if.then.i:                                        ; preds = %land.lhs.true.i
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !4095
  %add.i = add nsw i32 %22, 127, !dbg !4096
  %shl.i = shl i32 %add.i, 23, !dbg !4097
  store i32 %shl.i, i32* %i.addr.i.i, align 4, !dbg !4098
  %23 = load i32, i32* %i.addr.i.i, align 4, !dbg !4099
  %i1.i.i = bitcast %union.av_intfloat32* %v.i.i to i32*, !dbg !4100
  store i32 %23, i32* %i1.i.i, align 4, !dbg !4101
  %f.i.i = bitcast %union.av_intfloat32* %v.i.i to float*, !dbg !4102
  %24 = load float, float* %f.i.i, align 4, !dbg !4102
  store float %24, float* %retval.i, align 4, !dbg !4103
  br label %ff_exp2fi.exit, !dbg !4103

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then17
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !4104
  %cmp2.i = icmp sgt i32 %25, 128, !dbg !4105
  br i1 %cmp2.i, label %if.then3.i, label %if.else4.i, !dbg !4106

if.then3.i:                                       ; preds = %if.else.i
  store float 0x7FF0000000000000, float* %retval.i, align 4, !dbg !4107
  br label %ff_exp2fi.exit, !dbg !4107

if.else4.i:                                       ; preds = %if.else.i
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !4108
  %cmp5.i = icmp sgt i32 %26, -150, !dbg !4109
  br i1 %cmp5.i, label %if.then6.i, label %if.else10.i, !dbg !4110

if.then6.i:                                       ; preds = %if.else4.i
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !4111
  %add7.i = add nsw i32 %27, 149, !dbg !4112
  %shl8.i = shl i32 1, %add7.i, !dbg !4113
  store i32 %shl8.i, i32* %i.addr.i11.i, align 4, !dbg !4114
  %28 = load i32, i32* %i.addr.i11.i, align 4, !dbg !4115
  %i1.i13.i = bitcast %union.av_intfloat32* %v.i12.i to i32*, !dbg !4116
  store i32 %28, i32* %i1.i13.i, align 4, !dbg !4117
  %f.i14.i = bitcast %union.av_intfloat32* %v.i12.i to float*, !dbg !4118
  %29 = load float, float* %f.i14.i, align 4, !dbg !4118
  store float %29, float* %retval.i, align 4, !dbg !4119
  br label %ff_exp2fi.exit, !dbg !4119

if.else10.i:                                      ; preds = %if.else4.i
  store float 0.000000e+00, float* %retval.i, align 4, !dbg !4120
  br label %ff_exp2fi.exit, !dbg !4120

ff_exp2fi.exit:                                   ; preds = %if.then.i, %if.then3.i, %if.then6.i, %if.else10.i
  %30 = load float, float* %retval.i, align 4, !dbg !4121
  store float %30, float* %temp1, align 4, !dbg !4122
  %31 = load i32, i32* %pan_offset, align 4, !dbg !4123
  %32 = load i32, i32* %k, align 4, !dbg !4124
  %idxprom24 = sext i32 %32 to i64, !dbg !4125
  %33 = load i32, i32* %e, align 4, !dbg !4126
  %idxprom25 = sext i32 %33 to i64, !dbg !4125
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4125
  %data26 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %34, i32 0, i32 17, !dbg !4127
  %arrayidx27 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data26, i64 0, i64 1, !dbg !4125
  %env_facs_q28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx27, i32 0, i32 22, !dbg !4128
  %arrayidx29 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q28, i64 0, i64 %idxprom25, !dbg !4125
  %arrayidx30 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx29, i64 0, i64 %idxprom24, !dbg !4125
  %35 = load i8, i8* %arrayidx30, align 1, !dbg !4125
  %conv31 = zext i8 %35 to i32, !dbg !4125
  %sub = sub nsw i32 %31, %conv31, !dbg !4129
  store i32 %sub, i32* %x.addr.i511, align 4, !dbg !4130
  %36 = load i32, i32* %x.addr.i511, align 4, !dbg !4131
  %cmp.i512 = icmp sle i32 -126, %36, !dbg !4132
  br i1 %cmp.i512, label %land.lhs.true.i514, label %if.else.i521, !dbg !4133

land.lhs.true.i514:                               ; preds = %ff_exp2fi.exit
  %37 = load i32, i32* %x.addr.i511, align 4, !dbg !4134
  %cmp1.i513 = icmp sle i32 %37, 128, !dbg !4135
  br i1 %cmp1.i513, label %if.then.i519, label %if.else.i521, !dbg !4136

if.then.i519:                                     ; preds = %land.lhs.true.i514
  %38 = load i32, i32* %x.addr.i511, align 4, !dbg !4137
  %add.i515 = add nsw i32 %38, 127, !dbg !4138
  %shl.i516 = shl i32 %add.i515, 23, !dbg !4139
  store i32 %shl.i516, i32* %i.addr.i.i508, align 4, !dbg !4140
  %39 = load i32, i32* %i.addr.i.i508, align 4, !dbg !4141
  %i1.i.i517 = bitcast %union.av_intfloat32* %v.i.i509 to i32*, !dbg !4142
  store i32 %39, i32* %i1.i.i517, align 4, !dbg !4143
  %f.i.i518 = bitcast %union.av_intfloat32* %v.i.i509 to float*, !dbg !4144
  %40 = load float, float* %f.i.i518, align 4, !dbg !4144
  store float %40, float* %retval.i510, align 4, !dbg !4145
  br label %ff_exp2fi.exit531, !dbg !4145

if.else.i521:                                     ; preds = %land.lhs.true.i514, %ff_exp2fi.exit
  %41 = load i32, i32* %x.addr.i511, align 4, !dbg !4146
  %cmp2.i520 = icmp sgt i32 %41, 128, !dbg !4147
  br i1 %cmp2.i520, label %if.then3.i522, label %if.else4.i524, !dbg !4148

if.then3.i522:                                    ; preds = %if.else.i521
  store float 0x7FF0000000000000, float* %retval.i510, align 4, !dbg !4149
  br label %ff_exp2fi.exit531, !dbg !4149

if.else4.i524:                                    ; preds = %if.else.i521
  %42 = load i32, i32* %x.addr.i511, align 4, !dbg !4150
  %cmp5.i523 = icmp sgt i32 %42, -150, !dbg !4151
  br i1 %cmp5.i523, label %if.then6.i529, label %if.else10.i530, !dbg !4152

if.then6.i529:                                    ; preds = %if.else4.i524
  %43 = load i32, i32* %x.addr.i511, align 4, !dbg !4153
  %add7.i525 = add nsw i32 %43, 149, !dbg !4154
  %shl8.i526 = shl i32 1, %add7.i525, !dbg !4155
  store i32 %shl8.i526, i32* %i.addr.i11.i506, align 4, !dbg !4156
  %44 = load i32, i32* %i.addr.i11.i506, align 4, !dbg !4157
  %i1.i13.i527 = bitcast %union.av_intfloat32* %v.i12.i507 to i32*, !dbg !4158
  store i32 %44, i32* %i1.i13.i527, align 4, !dbg !4159
  %f.i14.i528 = bitcast %union.av_intfloat32* %v.i12.i507 to float*, !dbg !4160
  %45 = load float, float* %f.i14.i528, align 4, !dbg !4160
  store float %45, float* %retval.i510, align 4, !dbg !4161
  br label %ff_exp2fi.exit531, !dbg !4161

if.else10.i530:                                   ; preds = %if.else4.i524
  store float 0.000000e+00, float* %retval.i510, align 4, !dbg !4162
  br label %ff_exp2fi.exit531, !dbg !4162

ff_exp2fi.exit531:                                ; preds = %if.then.i519, %if.then3.i522, %if.then6.i529, %if.else10.i530
  %46 = load float, float* %retval.i510, align 4, !dbg !4163
  store float %46, float* %temp2, align 4, !dbg !4164
  br label %if.end, !dbg !4165

if.else:                                          ; preds = %for.body12
  %47 = load i32, i32* %k, align 4, !dbg !4166
  %idxprom33 = sext i32 %47 to i64, !dbg !4167
  %48 = load i32, i32* %e, align 4, !dbg !4168
  %idxprom34 = sext i32 %48 to i64, !dbg !4167
  %49 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4167
  %data35 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %49, i32 0, i32 17, !dbg !4169
  %arrayidx36 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data35, i64 0, i64 0, !dbg !4167
  %env_facs_q37 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx36, i32 0, i32 22, !dbg !4170
  %arrayidx38 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q37, i64 0, i64 %idxprom34, !dbg !4167
  %arrayidx39 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx38, i64 0, i64 %idxprom33, !dbg !4167
  %50 = load i8, i8* %arrayidx39, align 1, !dbg !4167
  %conv40 = zext i8 %50 to i32, !dbg !4167
  %shr = ashr i32 %conv40, 1, !dbg !4171
  %add41 = add nsw i32 %shr, 7, !dbg !4172
  store i32 %add41, i32* %x.addr.i485, align 4, !dbg !4173
  %51 = load i32, i32* %x.addr.i485, align 4, !dbg !4174
  %cmp.i486 = icmp sle i32 -126, %51, !dbg !4175
  br i1 %cmp.i486, label %land.lhs.true.i488, label %if.else.i495, !dbg !4176

land.lhs.true.i488:                               ; preds = %if.else
  %52 = load i32, i32* %x.addr.i485, align 4, !dbg !4177
  %cmp1.i487 = icmp sle i32 %52, 128, !dbg !4178
  br i1 %cmp1.i487, label %if.then.i493, label %if.else.i495, !dbg !4179

if.then.i493:                                     ; preds = %land.lhs.true.i488
  %53 = load i32, i32* %x.addr.i485, align 4, !dbg !4180
  %add.i489 = add nsw i32 %53, 127, !dbg !4181
  %shl.i490 = shl i32 %add.i489, 23, !dbg !4182
  store i32 %shl.i490, i32* %i.addr.i.i482, align 4, !dbg !4183
  %54 = load i32, i32* %i.addr.i.i482, align 4, !dbg !4184
  %i1.i.i491 = bitcast %union.av_intfloat32* %v.i.i483 to i32*, !dbg !4185
  store i32 %54, i32* %i1.i.i491, align 4, !dbg !4186
  %f.i.i492 = bitcast %union.av_intfloat32* %v.i.i483 to float*, !dbg !4187
  %55 = load float, float* %f.i.i492, align 4, !dbg !4187
  store float %55, float* %retval.i484, align 4, !dbg !4188
  br label %ff_exp2fi.exit505, !dbg !4188

if.else.i495:                                     ; preds = %land.lhs.true.i488, %if.else
  %56 = load i32, i32* %x.addr.i485, align 4, !dbg !4189
  %cmp2.i494 = icmp sgt i32 %56, 128, !dbg !4190
  br i1 %cmp2.i494, label %if.then3.i496, label %if.else4.i498, !dbg !4191

if.then3.i496:                                    ; preds = %if.else.i495
  store float 0x7FF0000000000000, float* %retval.i484, align 4, !dbg !4192
  br label %ff_exp2fi.exit505, !dbg !4192

if.else4.i498:                                    ; preds = %if.else.i495
  %57 = load i32, i32* %x.addr.i485, align 4, !dbg !4193
  %cmp5.i497 = icmp sgt i32 %57, -150, !dbg !4194
  br i1 %cmp5.i497, label %if.then6.i503, label %if.else10.i504, !dbg !4195

if.then6.i503:                                    ; preds = %if.else4.i498
  %58 = load i32, i32* %x.addr.i485, align 4, !dbg !4196
  %add7.i499 = add nsw i32 %58, 149, !dbg !4197
  %shl8.i500 = shl i32 1, %add7.i499, !dbg !4198
  store i32 %shl8.i500, i32* %i.addr.i11.i480, align 4, !dbg !4199
  %59 = load i32, i32* %i.addr.i11.i480, align 4, !dbg !4200
  %i1.i13.i501 = bitcast %union.av_intfloat32* %v.i12.i481 to i32*, !dbg !4201
  store i32 %59, i32* %i1.i13.i501, align 4, !dbg !4202
  %f.i14.i502 = bitcast %union.av_intfloat32* %v.i12.i481 to float*, !dbg !4203
  %60 = load float, float* %f.i14.i502, align 4, !dbg !4203
  store float %60, float* %retval.i484, align 4, !dbg !4204
  br label %ff_exp2fi.exit505, !dbg !4204

if.else10.i504:                                   ; preds = %if.else4.i498
  store float 0.000000e+00, float* %retval.i484, align 4, !dbg !4205
  br label %ff_exp2fi.exit505, !dbg !4205

ff_exp2fi.exit505:                                ; preds = %if.then.i493, %if.then3.i496, %if.then6.i503, %if.else10.i504
  %61 = load float, float* %retval.i484, align 4, !dbg !4206
  %conv43 = fpext float %61 to double, !dbg !4173
  %62 = load i32, i32* %k, align 4, !dbg !4207
  %idxprom44 = sext i32 %62 to i64, !dbg !4208
  %63 = load i32, i32* %e, align 4, !dbg !4209
  %idxprom45 = sext i32 %63 to i64, !dbg !4208
  %64 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4208
  %data46 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %64, i32 0, i32 17, !dbg !4210
  %arrayidx47 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data46, i64 0, i64 0, !dbg !4208
  %env_facs_q48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx47, i32 0, i32 22, !dbg !4211
  %arrayidx49 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q48, i64 0, i64 %idxprom45, !dbg !4208
  %arrayidx50 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx49, i64 0, i64 %idxprom44, !dbg !4208
  %65 = load i8, i8* %arrayidx50, align 1, !dbg !4208
  %conv51 = zext i8 %65 to i32, !dbg !4208
  %and = and i32 %conv51, 1, !dbg !4212
  %idxprom52 = sext i32 %and to i64, !dbg !4213
  %arrayidx53 = getelementptr inbounds [2 x double], [2 x double]* @sbr_dequant.exp2_tab, i64 0, i64 %idxprom52, !dbg !4213
  %66 = load double, double* %arrayidx53, align 8, !dbg !4213
  %mul = fmul double %conv43, %66, !dbg !4214
  %conv54 = fptrunc double %mul to float, !dbg !4173
  store float %conv54, float* %temp1, align 4, !dbg !4215
  %67 = load i32, i32* %pan_offset, align 4, !dbg !4216
  %68 = load i32, i32* %k, align 4, !dbg !4217
  %idxprom55 = sext i32 %68 to i64, !dbg !4218
  %69 = load i32, i32* %e, align 4, !dbg !4219
  %idxprom56 = sext i32 %69 to i64, !dbg !4218
  %70 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4218
  %data57 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %70, i32 0, i32 17, !dbg !4220
  %arrayidx58 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data57, i64 0, i64 1, !dbg !4218
  %env_facs_q59 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx58, i32 0, i32 22, !dbg !4221
  %arrayidx60 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q59, i64 0, i64 %idxprom56, !dbg !4218
  %arrayidx61 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx60, i64 0, i64 %idxprom55, !dbg !4218
  %71 = load i8, i8* %arrayidx61, align 1, !dbg !4218
  %conv62 = zext i8 %71 to i32, !dbg !4218
  %sub63 = sub nsw i32 %67, %conv62, !dbg !4222
  %shr64 = ashr i32 %sub63, 1, !dbg !4223
  store i32 %shr64, i32* %x.addr.i459, align 4, !dbg !4224
  %72 = load i32, i32* %x.addr.i459, align 4, !dbg !4225
  %cmp.i460 = icmp sle i32 -126, %72, !dbg !4226
  br i1 %cmp.i460, label %land.lhs.true.i462, label %if.else.i469, !dbg !4227

land.lhs.true.i462:                               ; preds = %ff_exp2fi.exit505
  %73 = load i32, i32* %x.addr.i459, align 4, !dbg !4228
  %cmp1.i461 = icmp sle i32 %73, 128, !dbg !4229
  br i1 %cmp1.i461, label %if.then.i467, label %if.else.i469, !dbg !4230

if.then.i467:                                     ; preds = %land.lhs.true.i462
  %74 = load i32, i32* %x.addr.i459, align 4, !dbg !4231
  %add.i463 = add nsw i32 %74, 127, !dbg !4232
  %shl.i464 = shl i32 %add.i463, 23, !dbg !4233
  store i32 %shl.i464, i32* %i.addr.i.i456, align 4, !dbg !4234
  %75 = load i32, i32* %i.addr.i.i456, align 4, !dbg !4235
  %i1.i.i465 = bitcast %union.av_intfloat32* %v.i.i457 to i32*, !dbg !4236
  store i32 %75, i32* %i1.i.i465, align 4, !dbg !4237
  %f.i.i466 = bitcast %union.av_intfloat32* %v.i.i457 to float*, !dbg !4238
  %76 = load float, float* %f.i.i466, align 4, !dbg !4238
  store float %76, float* %retval.i458, align 4, !dbg !4239
  br label %ff_exp2fi.exit479, !dbg !4239

if.else.i469:                                     ; preds = %land.lhs.true.i462, %ff_exp2fi.exit505
  %77 = load i32, i32* %x.addr.i459, align 4, !dbg !4240
  %cmp2.i468 = icmp sgt i32 %77, 128, !dbg !4241
  br i1 %cmp2.i468, label %if.then3.i470, label %if.else4.i472, !dbg !4242

if.then3.i470:                                    ; preds = %if.else.i469
  store float 0x7FF0000000000000, float* %retval.i458, align 4, !dbg !4243
  br label %ff_exp2fi.exit479, !dbg !4243

if.else4.i472:                                    ; preds = %if.else.i469
  %78 = load i32, i32* %x.addr.i459, align 4, !dbg !4244
  %cmp5.i471 = icmp sgt i32 %78, -150, !dbg !4245
  br i1 %cmp5.i471, label %if.then6.i477, label %if.else10.i478, !dbg !4246

if.then6.i477:                                    ; preds = %if.else4.i472
  %79 = load i32, i32* %x.addr.i459, align 4, !dbg !4247
  %add7.i473 = add nsw i32 %79, 149, !dbg !4248
  %shl8.i474 = shl i32 1, %add7.i473, !dbg !4249
  store i32 %shl8.i474, i32* %i.addr.i11.i454, align 4, !dbg !4250
  %80 = load i32, i32* %i.addr.i11.i454, align 4, !dbg !4251
  %i1.i13.i475 = bitcast %union.av_intfloat32* %v.i12.i455 to i32*, !dbg !4252
  store i32 %80, i32* %i1.i13.i475, align 4, !dbg !4253
  %f.i14.i476 = bitcast %union.av_intfloat32* %v.i12.i455 to float*, !dbg !4254
  %81 = load float, float* %f.i14.i476, align 4, !dbg !4254
  store float %81, float* %retval.i458, align 4, !dbg !4255
  br label %ff_exp2fi.exit479, !dbg !4255

if.else10.i478:                                   ; preds = %if.else4.i472
  store float 0.000000e+00, float* %retval.i458, align 4, !dbg !4256
  br label %ff_exp2fi.exit479, !dbg !4256

ff_exp2fi.exit479:                                ; preds = %if.then.i467, %if.then3.i470, %if.then6.i477, %if.else10.i478
  %82 = load float, float* %retval.i458, align 4, !dbg !4257
  %conv66 = fpext float %82 to double, !dbg !4224
  %83 = load i32, i32* %pan_offset, align 4, !dbg !4258
  %84 = load i32, i32* %k, align 4, !dbg !4259
  %idxprom67 = sext i32 %84 to i64, !dbg !4260
  %85 = load i32, i32* %e, align 4, !dbg !4261
  %idxprom68 = sext i32 %85 to i64, !dbg !4260
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4260
  %data69 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %86, i32 0, i32 17, !dbg !4262
  %arrayidx70 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data69, i64 0, i64 1, !dbg !4260
  %env_facs_q71 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx70, i32 0, i32 22, !dbg !4263
  %arrayidx72 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q71, i64 0, i64 %idxprom68, !dbg !4260
  %arrayidx73 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx72, i64 0, i64 %idxprom67, !dbg !4260
  %87 = load i8, i8* %arrayidx73, align 1, !dbg !4260
  %conv74 = zext i8 %87 to i32, !dbg !4260
  %sub75 = sub nsw i32 %83, %conv74, !dbg !4264
  %and76 = and i32 %sub75, 1, !dbg !4265
  %idxprom77 = sext i32 %and76 to i64, !dbg !4266
  %arrayidx78 = getelementptr inbounds [2 x double], [2 x double]* @sbr_dequant.exp2_tab, i64 0, i64 %idxprom77, !dbg !4266
  %88 = load double, double* %arrayidx78, align 8, !dbg !4266
  %mul79 = fmul double %conv66, %88, !dbg !4267
  %conv80 = fptrunc double %mul79 to float, !dbg !4224
  store float %conv80, float* %temp2, align 4, !dbg !4268
  br label %if.end

if.end:                                           ; preds = %ff_exp2fi.exit479, %ff_exp2fi.exit531
  %89 = load float, float* %temp1, align 4, !dbg !4269
  %conv81 = fpext float %89 to double, !dbg !4269
  %cmp82 = fcmp ogt double %conv81, 1.000000e+20, !dbg !4271
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !4272

if.then84:                                        ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i32 0, i32 0)), !dbg !4273
  store float 1.000000e+00, float* %temp1, align 4, !dbg !4275
  br label %if.end85, !dbg !4276

if.end85:                                         ; preds = %if.then84, %if.end
  %90 = load float, float* %temp1, align 4, !dbg !4277
  %91 = load float, float* %temp2, align 4, !dbg !4278
  %add86 = fadd float 1.000000e+00, %91, !dbg !4279
  %div = fdiv float %90, %add86, !dbg !4280
  store float %div, float* %fac, align 4, !dbg !4281
  %92 = load float, float* %fac, align 4, !dbg !4282
  %93 = load i32, i32* %k, align 4, !dbg !4283
  %idxprom87 = sext i32 %93 to i64, !dbg !4284
  %94 = load i32, i32* %e, align 4, !dbg !4285
  %idxprom88 = sext i32 %94 to i64, !dbg !4284
  %95 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4284
  %data89 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %95, i32 0, i32 17, !dbg !4286
  %arrayidx90 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data89, i64 0, i64 0, !dbg !4284
  %env_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx90, i32 0, i32 23, !dbg !4287
  %arrayidx91 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs, i64 0, i64 %idxprom88, !dbg !4284
  %arrayidx92 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx91, i64 0, i64 %idxprom87, !dbg !4284
  store float %92, float* %arrayidx92, align 4, !dbg !4288
  %96 = load float, float* %fac, align 4, !dbg !4289
  %97 = load float, float* %temp2, align 4, !dbg !4290
  %mul93 = fmul float %96, %97, !dbg !4291
  %98 = load i32, i32* %k, align 4, !dbg !4292
  %idxprom94 = sext i32 %98 to i64, !dbg !4293
  %99 = load i32, i32* %e, align 4, !dbg !4294
  %idxprom95 = sext i32 %99 to i64, !dbg !4293
  %100 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4293
  %data96 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %100, i32 0, i32 17, !dbg !4295
  %arrayidx97 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data96, i64 0, i64 1, !dbg !4293
  %env_facs98 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx97, i32 0, i32 23, !dbg !4296
  %arrayidx99 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs98, i64 0, i64 %idxprom95, !dbg !4293
  %arrayidx100 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx99, i64 0, i64 %idxprom94, !dbg !4293
  store float %mul93, float* %arrayidx100, align 4, !dbg !4297
  br label %for.inc, !dbg !4298

for.inc:                                          ; preds = %if.end85
  %101 = load i32, i32* %k, align 4, !dbg !4299
  %inc = add nsw i32 %101, 1, !dbg !4299
  store i32 %inc, i32* %k, align 4, !dbg !4299
  br label %for.cond5, !dbg !4301, !llvm.loop !4302

for.end:                                          ; preds = %for.cond5
  br label %for.inc101, !dbg !4304

for.inc101:                                       ; preds = %for.end
  %102 = load i32, i32* %e, align 4, !dbg !4305
  %inc102 = add nsw i32 %102, 1, !dbg !4305
  store i32 %inc102, i32* %e, align 4, !dbg !4305
  br label %for.cond, !dbg !4307, !llvm.loop !4308

for.end103:                                       ; preds = %for.cond
  store i32 1, i32* %e, align 4, !dbg !4310
  br label %for.cond104, !dbg !4311

for.cond104:                                      ; preds = %for.inc161, %for.end103
  %103 = load i32, i32* %e, align 4, !dbg !4312
  %104 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4314
  %data105 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %104, i32 0, i32 17, !dbg !4315
  %arrayidx106 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data105, i64 0, i64 0, !dbg !4314
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx106, i32 0, i32 4, !dbg !4316
  %105 = load i32, i32* %bs_num_noise, align 4, !dbg !4316
  %cmp107 = icmp ule i32 %103, %105, !dbg !4317
  br i1 %cmp107, label %for.body109, label %for.end163, !dbg !4318

for.body109:                                      ; preds = %for.cond104
  store i32 0, i32* %k, align 4, !dbg !4319
  br label %for.cond110, !dbg !4320

for.cond110:                                      ; preds = %for.inc158, %for.body109
  %106 = load i32, i32* %k, align 4, !dbg !4321
  %107 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4323
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %107, i32 0, i32 20, !dbg !4324
  %108 = load i32, i32* %n_q, align 8, !dbg !4324
  %cmp111 = icmp ult i32 %106, %108, !dbg !4325
  br i1 %cmp111, label %for.body113, label %for.end160, !dbg !4326

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata float* %temp1114, metadata !4327, metadata !2753), !dbg !4328
  %109 = load i32, i32* %k, align 4, !dbg !4329
  %idxprom115 = sext i32 %109 to i64, !dbg !4330
  %110 = load i32, i32* %e, align 4, !dbg !4331
  %idxprom116 = sext i32 %110 to i64, !dbg !4330
  %111 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4330
  %data117 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %111, i32 0, i32 17, !dbg !4332
  %arrayidx118 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data117, i64 0, i64 0, !dbg !4330
  %noise_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx118, i32 0, i32 24, !dbg !4333
  %arrayidx119 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q, i64 0, i64 %idxprom116, !dbg !4330
  %arrayidx120 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx119, i64 0, i64 %idxprom115, !dbg !4330
  %112 = load i8, i8* %arrayidx120, align 1, !dbg !4330
  %conv121 = zext i8 %112 to i32, !dbg !4330
  %sub122 = sub nsw i32 6, %conv121, !dbg !4334
  %add123 = add nsw i32 %sub122, 1, !dbg !4335
  store i32 %add123, i32* %x.addr.i433, align 4, !dbg !4336
  %113 = load i32, i32* %x.addr.i433, align 4, !dbg !4337
  %cmp.i434 = icmp sle i32 -126, %113, !dbg !4338
  br i1 %cmp.i434, label %land.lhs.true.i436, label %if.else.i443, !dbg !4339

land.lhs.true.i436:                               ; preds = %for.body113
  %114 = load i32, i32* %x.addr.i433, align 4, !dbg !4340
  %cmp1.i435 = icmp sle i32 %114, 128, !dbg !4341
  br i1 %cmp1.i435, label %if.then.i441, label %if.else.i443, !dbg !4342

if.then.i441:                                     ; preds = %land.lhs.true.i436
  %115 = load i32, i32* %x.addr.i433, align 4, !dbg !4343
  %add.i437 = add nsw i32 %115, 127, !dbg !4344
  %shl.i438 = shl i32 %add.i437, 23, !dbg !4345
  store i32 %shl.i438, i32* %i.addr.i.i430, align 4, !dbg !4346
  %116 = load i32, i32* %i.addr.i.i430, align 4, !dbg !4347
  %i1.i.i439 = bitcast %union.av_intfloat32* %v.i.i431 to i32*, !dbg !4348
  store i32 %116, i32* %i1.i.i439, align 4, !dbg !4349
  %f.i.i440 = bitcast %union.av_intfloat32* %v.i.i431 to float*, !dbg !4350
  %117 = load float, float* %f.i.i440, align 4, !dbg !4350
  store float %117, float* %retval.i432, align 4, !dbg !4351
  br label %ff_exp2fi.exit453, !dbg !4351

if.else.i443:                                     ; preds = %land.lhs.true.i436, %for.body113
  %118 = load i32, i32* %x.addr.i433, align 4, !dbg !4352
  %cmp2.i442 = icmp sgt i32 %118, 128, !dbg !4353
  br i1 %cmp2.i442, label %if.then3.i444, label %if.else4.i446, !dbg !4354

if.then3.i444:                                    ; preds = %if.else.i443
  store float 0x7FF0000000000000, float* %retval.i432, align 4, !dbg !4355
  br label %ff_exp2fi.exit453, !dbg !4355

if.else4.i446:                                    ; preds = %if.else.i443
  %119 = load i32, i32* %x.addr.i433, align 4, !dbg !4356
  %cmp5.i445 = icmp sgt i32 %119, -150, !dbg !4357
  br i1 %cmp5.i445, label %if.then6.i451, label %if.else10.i452, !dbg !4358

if.then6.i451:                                    ; preds = %if.else4.i446
  %120 = load i32, i32* %x.addr.i433, align 4, !dbg !4359
  %add7.i447 = add nsw i32 %120, 149, !dbg !4360
  %shl8.i448 = shl i32 1, %add7.i447, !dbg !4361
  store i32 %shl8.i448, i32* %i.addr.i11.i428, align 4, !dbg !4362
  %121 = load i32, i32* %i.addr.i11.i428, align 4, !dbg !4363
  %i1.i13.i449 = bitcast %union.av_intfloat32* %v.i12.i429 to i32*, !dbg !4364
  store i32 %121, i32* %i1.i13.i449, align 4, !dbg !4365
  %f.i14.i450 = bitcast %union.av_intfloat32* %v.i12.i429 to float*, !dbg !4366
  %122 = load float, float* %f.i14.i450, align 4, !dbg !4366
  store float %122, float* %retval.i432, align 4, !dbg !4367
  br label %ff_exp2fi.exit453, !dbg !4367

if.else10.i452:                                   ; preds = %if.else4.i446
  store float 0.000000e+00, float* %retval.i432, align 4, !dbg !4368
  br label %ff_exp2fi.exit453, !dbg !4368

ff_exp2fi.exit453:                                ; preds = %if.then.i441, %if.then3.i444, %if.then6.i451, %if.else10.i452
  %123 = load float, float* %retval.i432, align 4, !dbg !4369
  store float %123, float* %temp1114, align 4, !dbg !4328
  call void @llvm.dbg.declare(metadata float* %temp2125, metadata !4370, metadata !2753), !dbg !4371
  %124 = load i32, i32* %k, align 4, !dbg !4372
  %idxprom126 = sext i32 %124 to i64, !dbg !4373
  %125 = load i32, i32* %e, align 4, !dbg !4374
  %idxprom127 = sext i32 %125 to i64, !dbg !4373
  %126 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4373
  %data128 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %126, i32 0, i32 17, !dbg !4375
  %arrayidx129 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data128, i64 0, i64 1, !dbg !4373
  %noise_facs_q130 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx129, i32 0, i32 24, !dbg !4376
  %arrayidx131 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q130, i64 0, i64 %idxprom127, !dbg !4373
  %arrayidx132 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx131, i64 0, i64 %idxprom126, !dbg !4373
  %127 = load i8, i8* %arrayidx132, align 1, !dbg !4373
  %conv133 = zext i8 %127 to i32, !dbg !4373
  %sub134 = sub nsw i32 12, %conv133, !dbg !4377
  store i32 %sub134, i32* %x.addr.i407, align 4, !dbg !4378
  %128 = load i32, i32* %x.addr.i407, align 4, !dbg !4379
  %cmp.i408 = icmp sle i32 -126, %128, !dbg !4380
  br i1 %cmp.i408, label %land.lhs.true.i410, label %if.else.i417, !dbg !4381

land.lhs.true.i410:                               ; preds = %ff_exp2fi.exit453
  %129 = load i32, i32* %x.addr.i407, align 4, !dbg !4382
  %cmp1.i409 = icmp sle i32 %129, 128, !dbg !4383
  br i1 %cmp1.i409, label %if.then.i415, label %if.else.i417, !dbg !4384

if.then.i415:                                     ; preds = %land.lhs.true.i410
  %130 = load i32, i32* %x.addr.i407, align 4, !dbg !4385
  %add.i411 = add nsw i32 %130, 127, !dbg !4386
  %shl.i412 = shl i32 %add.i411, 23, !dbg !4387
  store i32 %shl.i412, i32* %i.addr.i.i404, align 4, !dbg !4388
  %131 = load i32, i32* %i.addr.i.i404, align 4, !dbg !4389
  %i1.i.i413 = bitcast %union.av_intfloat32* %v.i.i405 to i32*, !dbg !4390
  store i32 %131, i32* %i1.i.i413, align 4, !dbg !4391
  %f.i.i414 = bitcast %union.av_intfloat32* %v.i.i405 to float*, !dbg !4392
  %132 = load float, float* %f.i.i414, align 4, !dbg !4392
  store float %132, float* %retval.i406, align 4, !dbg !4393
  br label %ff_exp2fi.exit427, !dbg !4393

if.else.i417:                                     ; preds = %land.lhs.true.i410, %ff_exp2fi.exit453
  %133 = load i32, i32* %x.addr.i407, align 4, !dbg !4394
  %cmp2.i416 = icmp sgt i32 %133, 128, !dbg !4395
  br i1 %cmp2.i416, label %if.then3.i418, label %if.else4.i420, !dbg !4396

if.then3.i418:                                    ; preds = %if.else.i417
  store float 0x7FF0000000000000, float* %retval.i406, align 4, !dbg !4397
  br label %ff_exp2fi.exit427, !dbg !4397

if.else4.i420:                                    ; preds = %if.else.i417
  %134 = load i32, i32* %x.addr.i407, align 4, !dbg !4398
  %cmp5.i419 = icmp sgt i32 %134, -150, !dbg !4399
  br i1 %cmp5.i419, label %if.then6.i425, label %if.else10.i426, !dbg !4400

if.then6.i425:                                    ; preds = %if.else4.i420
  %135 = load i32, i32* %x.addr.i407, align 4, !dbg !4401
  %add7.i421 = add nsw i32 %135, 149, !dbg !4402
  %shl8.i422 = shl i32 1, %add7.i421, !dbg !4403
  store i32 %shl8.i422, i32* %i.addr.i11.i402, align 4, !dbg !4404
  %136 = load i32, i32* %i.addr.i11.i402, align 4, !dbg !4405
  %i1.i13.i423 = bitcast %union.av_intfloat32* %v.i12.i403 to i32*, !dbg !4406
  store i32 %136, i32* %i1.i13.i423, align 4, !dbg !4407
  %f.i14.i424 = bitcast %union.av_intfloat32* %v.i12.i403 to float*, !dbg !4408
  %137 = load float, float* %f.i14.i424, align 4, !dbg !4408
  store float %137, float* %retval.i406, align 4, !dbg !4409
  br label %ff_exp2fi.exit427, !dbg !4409

if.else10.i426:                                   ; preds = %if.else4.i420
  store float 0.000000e+00, float* %retval.i406, align 4, !dbg !4410
  br label %ff_exp2fi.exit427, !dbg !4410

ff_exp2fi.exit427:                                ; preds = %if.then.i415, %if.then3.i418, %if.then6.i425, %if.else10.i426
  %138 = load float, float* %retval.i406, align 4, !dbg !4411
  store float %138, float* %temp2125, align 4, !dbg !4371
  call void @llvm.dbg.declare(metadata float* %fac136, metadata !4412, metadata !2753), !dbg !4413
  br label %do.body, !dbg !4414, !llvm.loop !4415

do.body:                                          ; preds = %ff_exp2fi.exit427
  %139 = load float, float* %temp1114, align 4, !dbg !4416
  %conv137 = fpext float %139 to double, !dbg !4416
  %cmp138 = fcmp ole double %conv137, 1.000000e+20, !dbg !4420
  br i1 %cmp138, label %if.end141, label %if.then140, !dbg !4421

if.then140:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32 107), !dbg !4422
  call void @abort() #10, !dbg !4425
  unreachable, !dbg !4427

if.end141:                                        ; preds = %do.body
  br label %do.end, !dbg !4428

do.end:                                           ; preds = %if.end141
  %140 = load float, float* %temp1114, align 4, !dbg !4430
  %141 = load float, float* %temp2125, align 4, !dbg !4431
  %add142 = fadd float 1.000000e+00, %141, !dbg !4432
  %div143 = fdiv float %140, %add142, !dbg !4433
  store float %div143, float* %fac136, align 4, !dbg !4434
  %142 = load float, float* %fac136, align 4, !dbg !4435
  %143 = load i32, i32* %k, align 4, !dbg !4436
  %idxprom144 = sext i32 %143 to i64, !dbg !4437
  %144 = load i32, i32* %e, align 4, !dbg !4438
  %idxprom145 = sext i32 %144 to i64, !dbg !4437
  %145 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4437
  %data146 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %145, i32 0, i32 17, !dbg !4439
  %arrayidx147 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data146, i64 0, i64 0, !dbg !4437
  %noise_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx147, i32 0, i32 25, !dbg !4440
  %arrayidx148 = getelementptr inbounds [3 x [5 x float]], [3 x [5 x float]]* %noise_facs, i64 0, i64 %idxprom145, !dbg !4437
  %arrayidx149 = getelementptr inbounds [5 x float], [5 x float]* %arrayidx148, i64 0, i64 %idxprom144, !dbg !4437
  store float %142, float* %arrayidx149, align 4, !dbg !4441
  %146 = load float, float* %fac136, align 4, !dbg !4442
  %147 = load float, float* %temp2125, align 4, !dbg !4443
  %mul150 = fmul float %146, %147, !dbg !4444
  %148 = load i32, i32* %k, align 4, !dbg !4445
  %idxprom151 = sext i32 %148 to i64, !dbg !4446
  %149 = load i32, i32* %e, align 4, !dbg !4447
  %idxprom152 = sext i32 %149 to i64, !dbg !4446
  %150 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4446
  %data153 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %150, i32 0, i32 17, !dbg !4448
  %arrayidx154 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data153, i64 0, i64 1, !dbg !4446
  %noise_facs155 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx154, i32 0, i32 25, !dbg !4449
  %arrayidx156 = getelementptr inbounds [3 x [5 x float]], [3 x [5 x float]]* %noise_facs155, i64 0, i64 %idxprom152, !dbg !4446
  %arrayidx157 = getelementptr inbounds [5 x float], [5 x float]* %arrayidx156, i64 0, i64 %idxprom151, !dbg !4446
  store float %mul150, float* %arrayidx157, align 4, !dbg !4450
  br label %for.inc158, !dbg !4451

for.inc158:                                       ; preds = %do.end
  %151 = load i32, i32* %k, align 4, !dbg !4452
  %inc159 = add nsw i32 %151, 1, !dbg !4452
  store i32 %inc159, i32* %k, align 4, !dbg !4452
  br label %for.cond110, !dbg !4454, !llvm.loop !4455

for.end160:                                       ; preds = %for.cond110
  br label %for.inc161, !dbg !4457

for.inc161:                                       ; preds = %for.end160
  %152 = load i32, i32* %e, align 4, !dbg !4458
  %inc162 = add nsw i32 %152, 1, !dbg !4458
  store i32 %inc162, i32* %e, align 4, !dbg !4458
  br label %for.cond104, !dbg !4460, !llvm.loop !4461

for.end163:                                       ; preds = %for.cond104
  br label %if.end323, !dbg !4463

if.else164:                                       ; preds = %land.lhs.true, %entry
  store i32 0, i32* %ch, align 4, !dbg !4464
  br label %for.cond165, !dbg !4465

for.cond165:                                      ; preds = %for.inc320, %if.else164
  %153 = load i32, i32* %ch, align 4, !dbg !4466
  %154 = load i32, i32* %id_aac.addr, align 4, !dbg !4468
  %cmp166 = icmp eq i32 %154, 1, !dbg !4469
  %conv167 = zext i1 %cmp166 to i32, !dbg !4469
  %add168 = add nsw i32 %conv167, 1, !dbg !4470
  %cmp169 = icmp slt i32 %153, %add168, !dbg !4471
  br i1 %cmp169, label %for.body171, label %for.end322, !dbg !4472

for.body171:                                      ; preds = %for.cond165
  store i32 1, i32* %e, align 4, !dbg !4473
  br label %for.cond172, !dbg !4474

for.cond172:                                      ; preds = %for.inc279, %for.body171
  %155 = load i32, i32* %e, align 4, !dbg !4475
  %156 = load i32, i32* %ch, align 4, !dbg !4477
  %idxprom173 = sext i32 %156 to i64, !dbg !4478
  %157 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4478
  %data174 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %157, i32 0, i32 17, !dbg !4479
  %arrayidx175 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data174, i64 0, i64 %idxprom173, !dbg !4478
  %bs_num_env176 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx175, i32 0, i32 2, !dbg !4480
  %158 = load i32, i32* %bs_num_env176, align 8, !dbg !4480
  %cmp177 = icmp ule i32 %155, %158, !dbg !4481
  br i1 %cmp177, label %for.body179, label %for.end281, !dbg !4482

for.body179:                                      ; preds = %for.cond172
  store i32 0, i32* %k, align 4, !dbg !4483
  br label %for.cond180, !dbg !4484

for.cond180:                                      ; preds = %for.inc276, %for.body179
  %159 = load i32, i32* %k, align 4, !dbg !4485
  %160 = load i32, i32* %e, align 4, !dbg !4487
  %idxprom181 = sext i32 %160 to i64, !dbg !4488
  %161 = load i32, i32* %ch, align 4, !dbg !4489
  %idxprom182 = sext i32 %161 to i64, !dbg !4488
  %162 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4488
  %data183 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %162, i32 0, i32 17, !dbg !4490
  %arrayidx184 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data183, i64 0, i64 %idxprom182, !dbg !4488
  %bs_freq_res185 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx184, i32 0, i32 3, !dbg !4491
  %arrayidx186 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res185, i64 0, i64 %idxprom181, !dbg !4488
  %163 = load i8, i8* %arrayidx186, align 1, !dbg !4488
  %idxprom187 = zext i8 %163 to i64, !dbg !4492
  %164 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4492
  %n188 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %164, i32 0, i32 19, !dbg !4493
  %arrayidx189 = getelementptr inbounds [2 x i32], [2 x i32]* %n188, i64 0, i64 %idxprom187, !dbg !4492
  %165 = load i32, i32* %arrayidx189, align 4, !dbg !4492
  %cmp190 = icmp ult i32 %159, %165, !dbg !4494
  br i1 %cmp190, label %for.body192, label %for.end278, !dbg !4495

for.body192:                                      ; preds = %for.cond180
  %166 = load i32, i32* %ch, align 4, !dbg !4496
  %idxprom193 = sext i32 %166 to i64, !dbg !4497
  %167 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4497
  %data194 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %167, i32 0, i32 17, !dbg !4498
  %arrayidx195 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data194, i64 0, i64 %idxprom193, !dbg !4497
  %bs_amp_res196 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx195, i32 0, i32 9, !dbg !4499
  %168 = load i32, i32* %bs_amp_res196, align 4, !dbg !4499
  %tobool197 = icmp ne i32 %168, 0, !dbg !4497
  br i1 %tobool197, label %if.then198, label %if.else218, !dbg !4500

if.then198:                                       ; preds = %for.body192
  %169 = load i32, i32* %k, align 4, !dbg !4501
  %idxprom199 = sext i32 %169 to i64, !dbg !4502
  %170 = load i32, i32* %e, align 4, !dbg !4503
  %idxprom200 = sext i32 %170 to i64, !dbg !4502
  %171 = load i32, i32* %ch, align 4, !dbg !4504
  %idxprom201 = sext i32 %171 to i64, !dbg !4502
  %172 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4502
  %data202 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %172, i32 0, i32 17, !dbg !4505
  %arrayidx203 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data202, i64 0, i64 %idxprom201, !dbg !4502
  %env_facs_q204 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx203, i32 0, i32 22, !dbg !4506
  %arrayidx205 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q204, i64 0, i64 %idxprom200, !dbg !4502
  %arrayidx206 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx205, i64 0, i64 %idxprom199, !dbg !4502
  %173 = load i8, i8* %arrayidx206, align 1, !dbg !4502
  %conv207 = zext i8 %173 to i32, !dbg !4502
  %add208 = add nsw i32 %conv207, 6, !dbg !4507
  store i32 %add208, i32* %x.addr.i381, align 4, !dbg !4508
  %174 = load i32, i32* %x.addr.i381, align 4, !dbg !4509
  %cmp.i382 = icmp sle i32 -126, %174, !dbg !4510
  br i1 %cmp.i382, label %land.lhs.true.i384, label %if.else.i391, !dbg !4511

land.lhs.true.i384:                               ; preds = %if.then198
  %175 = load i32, i32* %x.addr.i381, align 4, !dbg !4512
  %cmp1.i383 = icmp sle i32 %175, 128, !dbg !4513
  br i1 %cmp1.i383, label %if.then.i389, label %if.else.i391, !dbg !4514

if.then.i389:                                     ; preds = %land.lhs.true.i384
  %176 = load i32, i32* %x.addr.i381, align 4, !dbg !4515
  %add.i385 = add nsw i32 %176, 127, !dbg !4516
  %shl.i386 = shl i32 %add.i385, 23, !dbg !4517
  store i32 %shl.i386, i32* %i.addr.i.i378, align 4, !dbg !4518
  %177 = load i32, i32* %i.addr.i.i378, align 4, !dbg !4519
  %i1.i.i387 = bitcast %union.av_intfloat32* %v.i.i379 to i32*, !dbg !4520
  store i32 %177, i32* %i1.i.i387, align 4, !dbg !4521
  %f.i.i388 = bitcast %union.av_intfloat32* %v.i.i379 to float*, !dbg !4522
  %178 = load float, float* %f.i.i388, align 4, !dbg !4522
  store float %178, float* %retval.i380, align 4, !dbg !4523
  br label %ff_exp2fi.exit401, !dbg !4523

if.else.i391:                                     ; preds = %land.lhs.true.i384, %if.then198
  %179 = load i32, i32* %x.addr.i381, align 4, !dbg !4524
  %cmp2.i390 = icmp sgt i32 %179, 128, !dbg !4525
  br i1 %cmp2.i390, label %if.then3.i392, label %if.else4.i394, !dbg !4526

if.then3.i392:                                    ; preds = %if.else.i391
  store float 0x7FF0000000000000, float* %retval.i380, align 4, !dbg !4527
  br label %ff_exp2fi.exit401, !dbg !4527

if.else4.i394:                                    ; preds = %if.else.i391
  %180 = load i32, i32* %x.addr.i381, align 4, !dbg !4528
  %cmp5.i393 = icmp sgt i32 %180, -150, !dbg !4529
  br i1 %cmp5.i393, label %if.then6.i399, label %if.else10.i400, !dbg !4530

if.then6.i399:                                    ; preds = %if.else4.i394
  %181 = load i32, i32* %x.addr.i381, align 4, !dbg !4531
  %add7.i395 = add nsw i32 %181, 149, !dbg !4532
  %shl8.i396 = shl i32 1, %add7.i395, !dbg !4533
  store i32 %shl8.i396, i32* %i.addr.i11.i376, align 4, !dbg !4534
  %182 = load i32, i32* %i.addr.i11.i376, align 4, !dbg !4535
  %i1.i13.i397 = bitcast %union.av_intfloat32* %v.i12.i377 to i32*, !dbg !4536
  store i32 %182, i32* %i1.i13.i397, align 4, !dbg !4537
  %f.i14.i398 = bitcast %union.av_intfloat32* %v.i12.i377 to float*, !dbg !4538
  %183 = load float, float* %f.i14.i398, align 4, !dbg !4538
  store float %183, float* %retval.i380, align 4, !dbg !4539
  br label %ff_exp2fi.exit401, !dbg !4539

if.else10.i400:                                   ; preds = %if.else4.i394
  store float 0.000000e+00, float* %retval.i380, align 4, !dbg !4540
  br label %ff_exp2fi.exit401, !dbg !4540

ff_exp2fi.exit401:                                ; preds = %if.then.i389, %if.then3.i392, %if.then6.i399, %if.else10.i400
  %184 = load float, float* %retval.i380, align 4, !dbg !4541
  %185 = load i32, i32* %k, align 4, !dbg !4542
  %idxprom210 = sext i32 %185 to i64, !dbg !4543
  %186 = load i32, i32* %e, align 4, !dbg !4544
  %idxprom211 = sext i32 %186 to i64, !dbg !4543
  %187 = load i32, i32* %ch, align 4, !dbg !4545
  %idxprom212 = sext i32 %187 to i64, !dbg !4543
  %188 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4543
  %data213 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %188, i32 0, i32 17, !dbg !4546
  %arrayidx214 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data213, i64 0, i64 %idxprom212, !dbg !4543
  %env_facs215 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx214, i32 0, i32 23, !dbg !4547
  %arrayidx216 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs215, i64 0, i64 %idxprom211, !dbg !4543
  %arrayidx217 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx216, i64 0, i64 %idxprom210, !dbg !4543
  store float %184, float* %arrayidx217, align 4, !dbg !4548
  br label %if.end254, !dbg !4543

if.else218:                                       ; preds = %for.body192
  %189 = load i32, i32* %k, align 4, !dbg !4549
  %idxprom219 = sext i32 %189 to i64, !dbg !4550
  %190 = load i32, i32* %e, align 4, !dbg !4551
  %idxprom220 = sext i32 %190 to i64, !dbg !4550
  %191 = load i32, i32* %ch, align 4, !dbg !4552
  %idxprom221 = sext i32 %191 to i64, !dbg !4550
  %192 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4550
  %data222 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %192, i32 0, i32 17, !dbg !4553
  %arrayidx223 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data222, i64 0, i64 %idxprom221, !dbg !4550
  %env_facs_q224 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx223, i32 0, i32 22, !dbg !4554
  %arrayidx225 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q224, i64 0, i64 %idxprom220, !dbg !4550
  %arrayidx226 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx225, i64 0, i64 %idxprom219, !dbg !4550
  %193 = load i8, i8* %arrayidx226, align 1, !dbg !4550
  %conv227 = zext i8 %193 to i32, !dbg !4550
  %shr228 = ashr i32 %conv227, 1, !dbg !4555
  %add229 = add nsw i32 %shr228, 6, !dbg !4556
  store i32 %add229, i32* %x.addr.i355, align 4, !dbg !4557
  %194 = load i32, i32* %x.addr.i355, align 4, !dbg !4558
  %cmp.i356 = icmp sle i32 -126, %194, !dbg !4559
  br i1 %cmp.i356, label %land.lhs.true.i358, label %if.else.i365, !dbg !4560

land.lhs.true.i358:                               ; preds = %if.else218
  %195 = load i32, i32* %x.addr.i355, align 4, !dbg !4561
  %cmp1.i357 = icmp sle i32 %195, 128, !dbg !4562
  br i1 %cmp1.i357, label %if.then.i363, label %if.else.i365, !dbg !4563

if.then.i363:                                     ; preds = %land.lhs.true.i358
  %196 = load i32, i32* %x.addr.i355, align 4, !dbg !4564
  %add.i359 = add nsw i32 %196, 127, !dbg !4565
  %shl.i360 = shl i32 %add.i359, 23, !dbg !4566
  store i32 %shl.i360, i32* %i.addr.i.i352, align 4, !dbg !4567
  %197 = load i32, i32* %i.addr.i.i352, align 4, !dbg !4568
  %i1.i.i361 = bitcast %union.av_intfloat32* %v.i.i353 to i32*, !dbg !4569
  store i32 %197, i32* %i1.i.i361, align 4, !dbg !4570
  %f.i.i362 = bitcast %union.av_intfloat32* %v.i.i353 to float*, !dbg !4571
  %198 = load float, float* %f.i.i362, align 4, !dbg !4571
  store float %198, float* %retval.i354, align 4, !dbg !4572
  br label %ff_exp2fi.exit375, !dbg !4572

if.else.i365:                                     ; preds = %land.lhs.true.i358, %if.else218
  %199 = load i32, i32* %x.addr.i355, align 4, !dbg !4573
  %cmp2.i364 = icmp sgt i32 %199, 128, !dbg !4574
  br i1 %cmp2.i364, label %if.then3.i366, label %if.else4.i368, !dbg !4575

if.then3.i366:                                    ; preds = %if.else.i365
  store float 0x7FF0000000000000, float* %retval.i354, align 4, !dbg !4576
  br label %ff_exp2fi.exit375, !dbg !4576

if.else4.i368:                                    ; preds = %if.else.i365
  %200 = load i32, i32* %x.addr.i355, align 4, !dbg !4577
  %cmp5.i367 = icmp sgt i32 %200, -150, !dbg !4578
  br i1 %cmp5.i367, label %if.then6.i373, label %if.else10.i374, !dbg !4579

if.then6.i373:                                    ; preds = %if.else4.i368
  %201 = load i32, i32* %x.addr.i355, align 4, !dbg !4580
  %add7.i369 = add nsw i32 %201, 149, !dbg !4581
  %shl8.i370 = shl i32 1, %add7.i369, !dbg !4582
  store i32 %shl8.i370, i32* %i.addr.i11.i350, align 4, !dbg !4583
  %202 = load i32, i32* %i.addr.i11.i350, align 4, !dbg !4584
  %i1.i13.i371 = bitcast %union.av_intfloat32* %v.i12.i351 to i32*, !dbg !4585
  store i32 %202, i32* %i1.i13.i371, align 4, !dbg !4586
  %f.i14.i372 = bitcast %union.av_intfloat32* %v.i12.i351 to float*, !dbg !4587
  %203 = load float, float* %f.i14.i372, align 4, !dbg !4587
  store float %203, float* %retval.i354, align 4, !dbg !4588
  br label %ff_exp2fi.exit375, !dbg !4588

if.else10.i374:                                   ; preds = %if.else4.i368
  store float 0.000000e+00, float* %retval.i354, align 4, !dbg !4589
  br label %ff_exp2fi.exit375, !dbg !4589

ff_exp2fi.exit375:                                ; preds = %if.then.i363, %if.then3.i366, %if.then6.i373, %if.else10.i374
  %204 = load float, float* %retval.i354, align 4, !dbg !4590
  %conv231 = fpext float %204 to double, !dbg !4557
  %205 = load i32, i32* %k, align 4, !dbg !4591
  %idxprom232 = sext i32 %205 to i64, !dbg !4592
  %206 = load i32, i32* %e, align 4, !dbg !4593
  %idxprom233 = sext i32 %206 to i64, !dbg !4592
  %207 = load i32, i32* %ch, align 4, !dbg !4594
  %idxprom234 = sext i32 %207 to i64, !dbg !4592
  %208 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4592
  %data235 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %208, i32 0, i32 17, !dbg !4595
  %arrayidx236 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data235, i64 0, i64 %idxprom234, !dbg !4592
  %env_facs_q237 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx236, i32 0, i32 22, !dbg !4596
  %arrayidx238 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q237, i64 0, i64 %idxprom233, !dbg !4592
  %arrayidx239 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx238, i64 0, i64 %idxprom232, !dbg !4592
  %209 = load i8, i8* %arrayidx239, align 1, !dbg !4592
  %conv240 = zext i8 %209 to i32, !dbg !4592
  %and241 = and i32 %conv240, 1, !dbg !4597
  %idxprom242 = sext i32 %and241 to i64, !dbg !4598
  %arrayidx243 = getelementptr inbounds [2 x double], [2 x double]* @sbr_dequant.exp2_tab, i64 0, i64 %idxprom242, !dbg !4598
  %210 = load double, double* %arrayidx243, align 8, !dbg !4598
  %mul244 = fmul double %conv231, %210, !dbg !4599
  %conv245 = fptrunc double %mul244 to float, !dbg !4557
  %211 = load i32, i32* %k, align 4, !dbg !4600
  %idxprom246 = sext i32 %211 to i64, !dbg !4601
  %212 = load i32, i32* %e, align 4, !dbg !4602
  %idxprom247 = sext i32 %212 to i64, !dbg !4601
  %213 = load i32, i32* %ch, align 4, !dbg !4603
  %idxprom248 = sext i32 %213 to i64, !dbg !4601
  %214 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4601
  %data249 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %214, i32 0, i32 17, !dbg !4604
  %arrayidx250 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data249, i64 0, i64 %idxprom248, !dbg !4601
  %env_facs251 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx250, i32 0, i32 23, !dbg !4605
  %arrayidx252 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs251, i64 0, i64 %idxprom247, !dbg !4601
  %arrayidx253 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx252, i64 0, i64 %idxprom246, !dbg !4601
  store float %conv245, float* %arrayidx253, align 4, !dbg !4606
  br label %if.end254

if.end254:                                        ; preds = %ff_exp2fi.exit375, %ff_exp2fi.exit401
  %215 = load i32, i32* %k, align 4, !dbg !4607
  %idxprom255 = sext i32 %215 to i64, !dbg !4609
  %216 = load i32, i32* %e, align 4, !dbg !4610
  %idxprom256 = sext i32 %216 to i64, !dbg !4609
  %217 = load i32, i32* %ch, align 4, !dbg !4611
  %idxprom257 = sext i32 %217 to i64, !dbg !4609
  %218 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4609
  %data258 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %218, i32 0, i32 17, !dbg !4612
  %arrayidx259 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data258, i64 0, i64 %idxprom257, !dbg !4609
  %env_facs260 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx259, i32 0, i32 23, !dbg !4613
  %arrayidx261 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs260, i64 0, i64 %idxprom256, !dbg !4609
  %arrayidx262 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx261, i64 0, i64 %idxprom255, !dbg !4609
  %219 = load float, float* %arrayidx262, align 4, !dbg !4609
  %conv263 = fpext float %219 to double, !dbg !4609
  %cmp264 = fcmp ogt double %conv263, 1.000000e+20, !dbg !4614
  br i1 %cmp264, label %if.then266, label %if.end275, !dbg !4615

if.then266:                                       ; preds = %if.end254
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i32 0, i32 0)), !dbg !4616
  %220 = load i32, i32* %k, align 4, !dbg !4618
  %idxprom267 = sext i32 %220 to i64, !dbg !4619
  %221 = load i32, i32* %e, align 4, !dbg !4620
  %idxprom268 = sext i32 %221 to i64, !dbg !4619
  %222 = load i32, i32* %ch, align 4, !dbg !4621
  %idxprom269 = sext i32 %222 to i64, !dbg !4619
  %223 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4619
  %data270 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %223, i32 0, i32 17, !dbg !4622
  %arrayidx271 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data270, i64 0, i64 %idxprom269, !dbg !4619
  %env_facs272 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx271, i32 0, i32 23, !dbg !4623
  %arrayidx273 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs272, i64 0, i64 %idxprom268, !dbg !4619
  %arrayidx274 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx273, i64 0, i64 %idxprom267, !dbg !4619
  store float 1.000000e+00, float* %arrayidx274, align 4, !dbg !4624
  br label %if.end275, !dbg !4625

if.end275:                                        ; preds = %if.then266, %if.end254
  br label %for.inc276, !dbg !4626

for.inc276:                                       ; preds = %if.end275
  %224 = load i32, i32* %k, align 4, !dbg !4627
  %inc277 = add nsw i32 %224, 1, !dbg !4627
  store i32 %inc277, i32* %k, align 4, !dbg !4627
  br label %for.cond180, !dbg !4629, !llvm.loop !4630

for.end278:                                       ; preds = %for.cond180
  br label %for.inc279, !dbg !4632

for.inc279:                                       ; preds = %for.end278
  %225 = load i32, i32* %e, align 4, !dbg !4634
  %inc280 = add nsw i32 %225, 1, !dbg !4634
  store i32 %inc280, i32* %e, align 4, !dbg !4634
  br label %for.cond172, !dbg !4636, !llvm.loop !4637

for.end281:                                       ; preds = %for.cond172
  store i32 1, i32* %e, align 4, !dbg !4639
  br label %for.cond282, !dbg !4640

for.cond282:                                      ; preds = %for.inc317, %for.end281
  %226 = load i32, i32* %e, align 4, !dbg !4641
  %227 = load i32, i32* %ch, align 4, !dbg !4643
  %idxprom283 = sext i32 %227 to i64, !dbg !4644
  %228 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4644
  %data284 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %228, i32 0, i32 17, !dbg !4645
  %arrayidx285 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data284, i64 0, i64 %idxprom283, !dbg !4644
  %bs_num_noise286 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx285, i32 0, i32 4, !dbg !4646
  %229 = load i32, i32* %bs_num_noise286, align 4, !dbg !4646
  %cmp287 = icmp ule i32 %226, %229, !dbg !4647
  br i1 %cmp287, label %for.body289, label %for.end319, !dbg !4648

for.body289:                                      ; preds = %for.cond282
  store i32 0, i32* %k, align 4, !dbg !4649
  br label %for.cond290, !dbg !4650

for.cond290:                                      ; preds = %for.inc314, %for.body289
  %230 = load i32, i32* %k, align 4, !dbg !4651
  %231 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4653
  %n_q291 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %231, i32 0, i32 20, !dbg !4654
  %232 = load i32, i32* %n_q291, align 8, !dbg !4654
  %cmp292 = icmp ult i32 %230, %232, !dbg !4655
  br i1 %cmp292, label %for.body294, label %for.end316, !dbg !4656

for.body294:                                      ; preds = %for.cond290
  %233 = load i32, i32* %k, align 4, !dbg !4657
  %idxprom295 = sext i32 %233 to i64, !dbg !4658
  %234 = load i32, i32* %e, align 4, !dbg !4659
  %idxprom296 = sext i32 %234 to i64, !dbg !4658
  %235 = load i32, i32* %ch, align 4, !dbg !4660
  %idxprom297 = sext i32 %235 to i64, !dbg !4658
  %236 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4658
  %data298 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %236, i32 0, i32 17, !dbg !4661
  %arrayidx299 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data298, i64 0, i64 %idxprom297, !dbg !4658
  %noise_facs_q300 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx299, i32 0, i32 24, !dbg !4662
  %arrayidx301 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q300, i64 0, i64 %idxprom296, !dbg !4658
  %arrayidx302 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx301, i64 0, i64 %idxprom295, !dbg !4658
  %237 = load i8, i8* %arrayidx302, align 1, !dbg !4658
  %conv303 = zext i8 %237 to i32, !dbg !4658
  %sub304 = sub nsw i32 6, %conv303, !dbg !4663
  store i32 %sub304, i32* %x.addr.i329, align 4, !dbg !4664
  %238 = load i32, i32* %x.addr.i329, align 4, !dbg !4665
  %cmp.i330 = icmp sle i32 -126, %238, !dbg !4666
  br i1 %cmp.i330, label %land.lhs.true.i332, label %if.else.i339, !dbg !4667

land.lhs.true.i332:                               ; preds = %for.body294
  %239 = load i32, i32* %x.addr.i329, align 4, !dbg !4668
  %cmp1.i331 = icmp sle i32 %239, 128, !dbg !4669
  br i1 %cmp1.i331, label %if.then.i337, label %if.else.i339, !dbg !4670

if.then.i337:                                     ; preds = %land.lhs.true.i332
  %240 = load i32, i32* %x.addr.i329, align 4, !dbg !4671
  %add.i333 = add nsw i32 %240, 127, !dbg !4672
  %shl.i334 = shl i32 %add.i333, 23, !dbg !4673
  store i32 %shl.i334, i32* %i.addr.i.i326, align 4, !dbg !4674
  %241 = load i32, i32* %i.addr.i.i326, align 4, !dbg !4675
  %i1.i.i335 = bitcast %union.av_intfloat32* %v.i.i327 to i32*, !dbg !4676
  store i32 %241, i32* %i1.i.i335, align 4, !dbg !4677
  %f.i.i336 = bitcast %union.av_intfloat32* %v.i.i327 to float*, !dbg !4678
  %242 = load float, float* %f.i.i336, align 4, !dbg !4678
  store float %242, float* %retval.i328, align 4, !dbg !4679
  br label %ff_exp2fi.exit349, !dbg !4679

if.else.i339:                                     ; preds = %land.lhs.true.i332, %for.body294
  %243 = load i32, i32* %x.addr.i329, align 4, !dbg !4680
  %cmp2.i338 = icmp sgt i32 %243, 128, !dbg !4681
  br i1 %cmp2.i338, label %if.then3.i340, label %if.else4.i342, !dbg !4682

if.then3.i340:                                    ; preds = %if.else.i339
  store float 0x7FF0000000000000, float* %retval.i328, align 4, !dbg !4683
  br label %ff_exp2fi.exit349, !dbg !4683

if.else4.i342:                                    ; preds = %if.else.i339
  %244 = load i32, i32* %x.addr.i329, align 4, !dbg !4684
  %cmp5.i341 = icmp sgt i32 %244, -150, !dbg !4685
  br i1 %cmp5.i341, label %if.then6.i347, label %if.else10.i348, !dbg !4686

if.then6.i347:                                    ; preds = %if.else4.i342
  %245 = load i32, i32* %x.addr.i329, align 4, !dbg !4687
  %add7.i343 = add nsw i32 %245, 149, !dbg !4688
  %shl8.i344 = shl i32 1, %add7.i343, !dbg !4689
  store i32 %shl8.i344, i32* %i.addr.i11.i324, align 4, !dbg !4690
  %246 = load i32, i32* %i.addr.i11.i324, align 4, !dbg !4691
  %i1.i13.i345 = bitcast %union.av_intfloat32* %v.i12.i325 to i32*, !dbg !4692
  store i32 %246, i32* %i1.i13.i345, align 4, !dbg !4693
  %f.i14.i346 = bitcast %union.av_intfloat32* %v.i12.i325 to float*, !dbg !4694
  %247 = load float, float* %f.i14.i346, align 4, !dbg !4694
  store float %247, float* %retval.i328, align 4, !dbg !4695
  br label %ff_exp2fi.exit349, !dbg !4695

if.else10.i348:                                   ; preds = %if.else4.i342
  store float 0.000000e+00, float* %retval.i328, align 4, !dbg !4696
  br label %ff_exp2fi.exit349, !dbg !4696

ff_exp2fi.exit349:                                ; preds = %if.then.i337, %if.then3.i340, %if.then6.i347, %if.else10.i348
  %248 = load float, float* %retval.i328, align 4, !dbg !4697
  %249 = load i32, i32* %k, align 4, !dbg !4698
  %idxprom306 = sext i32 %249 to i64, !dbg !4699
  %250 = load i32, i32* %e, align 4, !dbg !4700
  %idxprom307 = sext i32 %250 to i64, !dbg !4699
  %251 = load i32, i32* %ch, align 4, !dbg !4701
  %idxprom308 = sext i32 %251 to i64, !dbg !4699
  %252 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4699
  %data309 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %252, i32 0, i32 17, !dbg !4702
  %arrayidx310 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data309, i64 0, i64 %idxprom308, !dbg !4699
  %noise_facs311 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx310, i32 0, i32 25, !dbg !4703
  %arrayidx312 = getelementptr inbounds [3 x [5 x float]], [3 x [5 x float]]* %noise_facs311, i64 0, i64 %idxprom307, !dbg !4699
  %arrayidx313 = getelementptr inbounds [5 x float], [5 x float]* %arrayidx312, i64 0, i64 %idxprom306, !dbg !4699
  store float %248, float* %arrayidx313, align 4, !dbg !4704
  br label %for.inc314, !dbg !4699

for.inc314:                                       ; preds = %ff_exp2fi.exit349
  %253 = load i32, i32* %k, align 4, !dbg !4705
  %inc315 = add nsw i32 %253, 1, !dbg !4705
  store i32 %inc315, i32* %k, align 4, !dbg !4705
  br label %for.cond290, !dbg !4707, !llvm.loop !4708

for.end316:                                       ; preds = %for.cond290
  br label %for.inc317, !dbg !4710

for.inc317:                                       ; preds = %for.end316
  %254 = load i32, i32* %e, align 4, !dbg !4712
  %inc318 = add nsw i32 %254, 1, !dbg !4712
  store i32 %inc318, i32* %e, align 4, !dbg !4712
  br label %for.cond282, !dbg !4714, !llvm.loop !4715

for.end319:                                       ; preds = %for.cond282
  br label %for.inc320, !dbg !4717

for.inc320:                                       ; preds = %for.end319
  %255 = load i32, i32* %ch, align 4, !dbg !4718
  %inc321 = add nsw i32 %255, 1, !dbg !4718
  store i32 %inc321, i32* %ch, align 4, !dbg !4718
  br label %for.cond165, !dbg !4720, !llvm.loop !4721

for.end322:                                       ; preds = %for.cond165
  br label %if.end323

if.end323:                                        ; preds = %for.end322, %for.end163
  ret void, !dbg !4723
}

; Function Attrs: nounwind uwtable
define internal void @sbr_qmf_analysis(%struct.AVFloatDSPContext* %dsp, %struct.FFTContext* %mdct, %struct.SBRDSPContext* %sbrdsp, float* %in, float* %x, float* %z, [32 x [32 x [2 x float]]]* %W, i32 %buf_idx) #3 !dbg !4724 {
entry:
  %dsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %mdct.addr = alloca %struct.FFTContext*, align 8
  %sbrdsp.addr = alloca %struct.SBRDSPContext*, align 8
  %in.addr = alloca float*, align 8
  %x.addr = alloca float*, align 8
  %z.addr = alloca float*, align 8
  %W.addr = alloca [32 x [32 x [2 x float]]]*, align 8
  %buf_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVFloatDSPContext* %dsp, %struct.AVFloatDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %dsp.addr, metadata !4730, metadata !2753), !dbg !4731
  store %struct.FFTContext* %mdct, %struct.FFTContext** %mdct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct.addr, metadata !4732, metadata !2753), !dbg !4733
  store %struct.SBRDSPContext* %sbrdsp, %struct.SBRDSPContext** %sbrdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %sbrdsp.addr, metadata !4734, metadata !2753), !dbg !4735
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4736, metadata !2753), !dbg !4737
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !4738, metadata !2753), !dbg !4739
  store float* %z, float** %z.addr, align 8
  call void @llvm.dbg.declare(metadata float** %z.addr, metadata !4740, metadata !2753), !dbg !4741
  store [32 x [32 x [2 x float]]]* %W, [32 x [32 x [2 x float]]]** %W.addr, align 8
  call void @llvm.dbg.declare(metadata [32 x [32 x [2 x float]]]** %W.addr, metadata !4742, metadata !2753), !dbg !4743
  store i32 %buf_idx, i32* %buf_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_idx.addr, metadata !4744, metadata !2753), !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4746, metadata !2753), !dbg !4747
  %0 = load float*, float** %x.addr, align 8, !dbg !4748
  %1 = bitcast float* %0 to i8*, !dbg !4749
  %2 = load float*, float** %x.addr, align 8, !dbg !4750
  %add.ptr = getelementptr inbounds float, float* %2, i64 1024, !dbg !4751
  %3 = bitcast float* %add.ptr to i8*, !dbg !4749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 1152, i32 4, i1 false), !dbg !4749
  %4 = load float*, float** %x.addr, align 8, !dbg !4752
  %add.ptr1 = getelementptr inbounds float, float* %4, i64 288, !dbg !4753
  %5 = bitcast float* %add.ptr1 to i8*, !dbg !4754
  %6 = load float*, float** %in.addr, align 8, !dbg !4755
  %7 = bitcast float* %6 to i8*, !dbg !4754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 4096, i32 4, i1 false), !dbg !4754
  store i32 0, i32* %i, align 4, !dbg !4756
  br label %for.cond, !dbg !4758

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !4759
  %cmp = icmp slt i32 %8, 32, !dbg !4762
  br i1 %cmp, label %for.body, label %for.end, !dbg !4763

for.body:                                         ; preds = %for.cond
  %9 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !4764
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %9, i32 0, i32 7, !dbg !4766
  %10 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !4766
  %11 = load float*, float** %z.addr, align 8, !dbg !4767
  %12 = load float*, float** %x.addr, align 8, !dbg !4768
  call void %10(float* %11, float* getelementptr inbounds ([320 x float], [320 x float]* @sbr_qmf_window_ds, i32 0, i32 0), float* %12, i32 320), !dbg !4764
  %13 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4769
  %sum64x5 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %13, i32 0, i32 0, !dbg !4770
  %14 = load void (float*)*, void (float*)** %sum64x5, align 8, !dbg !4770
  %15 = load float*, float** %z.addr, align 8, !dbg !4771
  call void %14(float* %15), !dbg !4769
  %16 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4772
  %qmf_pre_shuffle = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %16, i32 0, i32 3, !dbg !4773
  %17 = load void (float*)*, void (float*)** %qmf_pre_shuffle, align 8, !dbg !4773
  %18 = load float*, float** %z.addr, align 8, !dbg !4774
  call void %17(float* %18), !dbg !4772
  %19 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !4775
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %19, i32 0, i32 11, !dbg !4776
  %20 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !4776
  %21 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !4777
  %22 = load float*, float** %z.addr, align 8, !dbg !4778
  %23 = load float*, float** %z.addr, align 8, !dbg !4779
  %add.ptr2 = getelementptr inbounds float, float* %23, i64 64, !dbg !4780
  call void %20(%struct.FFTContext* %21, float* %22, float* %add.ptr2), !dbg !4775
  %24 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !4781
  %qmf_post_shuffle = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %24, i32 0, i32 4, !dbg !4782
  %25 = load void ([2 x float]*, float*)*, void ([2 x float]*, float*)** %qmf_post_shuffle, align 8, !dbg !4782
  %26 = load i32, i32* %i, align 4, !dbg !4783
  %idxprom = sext i32 %26 to i64, !dbg !4784
  %27 = load i32, i32* %buf_idx.addr, align 4, !dbg !4785
  %idxprom3 = sext i32 %27 to i64, !dbg !4784
  %28 = load [32 x [32 x [2 x float]]]*, [32 x [32 x [2 x float]]]** %W.addr, align 8, !dbg !4784
  %arrayidx = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %28, i64 %idxprom3, !dbg !4784
  %arrayidx4 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %arrayidx, i64 0, i64 %idxprom, !dbg !4784
  %arraydecay = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %arrayidx4, i32 0, i32 0, !dbg !4784
  %29 = load float*, float** %z.addr, align 8, !dbg !4786
  call void %25([2 x float]* %arraydecay, float* %29), !dbg !4781
  %30 = load float*, float** %x.addr, align 8, !dbg !4787
  %add.ptr5 = getelementptr inbounds float, float* %30, i64 32, !dbg !4787
  store float* %add.ptr5, float** %x.addr, align 8, !dbg !4787
  br label %for.inc, !dbg !4788

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !4789
  %inc = add nsw i32 %31, 1, !dbg !4789
  store i32 %inc, i32* %i, align 4, !dbg !4789
  br label %for.cond, !dbg !4791, !llvm.loop !4792

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4794
}

; Function Attrs: nounwind uwtable
define internal void @sbr_chirp(%struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data) #3 !dbg !2578 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  %new_bw = alloca float, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4795, metadata !2753), !dbg !4796
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !4797, metadata !2753), !dbg !4798
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4799, metadata !2753), !dbg !4800
  call void @llvm.dbg.declare(metadata float* %new_bw, metadata !4801, metadata !2753), !dbg !4802
  store i32 0, i32* %i, align 4, !dbg !4803
  br label %for.cond, !dbg !4805

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4806
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4809
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 20, !dbg !4810
  %2 = load i32, i32* %n_q, align 8, !dbg !4810
  %cmp = icmp ult i32 %0, %2, !dbg !4811
  br i1 %cmp, label %for.body, label %for.end, !dbg !4812

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4813
  %idxprom = sext i32 %3 to i64, !dbg !4816
  %4 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4816
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 7, !dbg !4817
  %arrayidx = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 0, !dbg !4816
  %arrayidx1 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !4816
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !4816
  %conv = zext i8 %5 to i32, !dbg !4816
  %6 = load i32, i32* %i, align 4, !dbg !4818
  %idxprom2 = sext i32 %6 to i64, !dbg !4819
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4819
  %bs_invf_mode3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 7, !dbg !4820
  %arrayidx4 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode3, i64 0, i64 1, !dbg !4819
  %arrayidx5 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx4, i64 0, i64 %idxprom2, !dbg !4819
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4819
  %conv6 = zext i8 %8 to i32, !dbg !4819
  %add = add nsw i32 %conv, %conv6, !dbg !4821
  %cmp7 = icmp eq i32 %add, 1, !dbg !4822
  br i1 %cmp7, label %if.then, label %if.else, !dbg !4823

if.then:                                          ; preds = %for.body
  store float 0x3FE3333340000000, float* %new_bw, align 4, !dbg !4824
  br label %if.end, !dbg !4826

if.else:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !4827
  %idxprom9 = sext i32 %9 to i64, !dbg !4828
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4828
  %bs_invf_mode10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 7, !dbg !4829
  %arrayidx11 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode10, i64 0, i64 0, !dbg !4828
  %arrayidx12 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !4828
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !4828
  %idxprom13 = zext i8 %11 to i64, !dbg !4830
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* @sbr_chirp.bw_tab, i64 0, i64 %idxprom13, !dbg !4830
  %12 = load float, float* %arrayidx14, align 4, !dbg !4830
  store float %12, float* %new_bw, align 4, !dbg !4831
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load float, float* %new_bw, align 4, !dbg !4832
  %14 = load i32, i32* %i, align 4, !dbg !4834
  %idxprom15 = sext i32 %14 to i64, !dbg !4835
  %15 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4835
  %bw_array = getelementptr inbounds %struct.SBRData, %struct.SBRData* %15, i32 0, i32 14, !dbg !4836
  %arrayidx16 = getelementptr inbounds [5 x float], [5 x float]* %bw_array, i64 0, i64 %idxprom15, !dbg !4835
  %16 = load float, float* %arrayidx16, align 4, !dbg !4835
  %cmp17 = fcmp olt float %13, %16, !dbg !4837
  br i1 %cmp17, label %if.then19, label %if.else25, !dbg !4838

if.then19:                                        ; preds = %if.end
  %17 = load float, float* %new_bw, align 4, !dbg !4839
  %mul = fmul float 7.500000e-01, %17, !dbg !4841
  %18 = load i32, i32* %i, align 4, !dbg !4842
  %idxprom20 = sext i32 %18 to i64, !dbg !4843
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4843
  %bw_array21 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 14, !dbg !4844
  %arrayidx22 = getelementptr inbounds [5 x float], [5 x float]* %bw_array21, i64 0, i64 %idxprom20, !dbg !4843
  %20 = load float, float* %arrayidx22, align 4, !dbg !4843
  %mul23 = fmul float 2.500000e-01, %20, !dbg !4845
  %add24 = fadd float %mul, %mul23, !dbg !4846
  store float %add24, float* %new_bw, align 4, !dbg !4847
  br label %if.end32, !dbg !4848

if.else25:                                        ; preds = %if.end
  %21 = load float, float* %new_bw, align 4, !dbg !4849
  %mul26 = fmul float 9.062500e-01, %21, !dbg !4850
  %22 = load i32, i32* %i, align 4, !dbg !4851
  %idxprom27 = sext i32 %22 to i64, !dbg !4852
  %23 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4852
  %bw_array28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %23, i32 0, i32 14, !dbg !4853
  %arrayidx29 = getelementptr inbounds [5 x float], [5 x float]* %bw_array28, i64 0, i64 %idxprom27, !dbg !4852
  %24 = load float, float* %arrayidx29, align 4, !dbg !4852
  %mul30 = fmul float 9.375000e-02, %24, !dbg !4854
  %add31 = fadd float %mul26, %mul30, !dbg !4855
  store float %add31, float* %new_bw, align 4, !dbg !4856
  br label %if.end32

if.end32:                                         ; preds = %if.else25, %if.then19
  %25 = load float, float* %new_bw, align 4, !dbg !4857
  %cmp33 = fcmp olt float %25, 1.562500e-02, !dbg !4858
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !4857

cond.true:                                        ; preds = %if.end32
  br label %cond.end, !dbg !4859

cond.false:                                       ; preds = %if.end32
  %26 = load float, float* %new_bw, align 4, !dbg !4861
  br label %cond.end, !dbg !4863

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %26, %cond.false ], !dbg !4864
  %27 = load i32, i32* %i, align 4, !dbg !4866
  %idxprom35 = sext i32 %27 to i64, !dbg !4867
  %28 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !4867
  %bw_array36 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %28, i32 0, i32 14, !dbg !4868
  %arrayidx37 = getelementptr inbounds [5 x float], [5 x float]* %bw_array36, i64 0, i64 %idxprom35, !dbg !4867
  store float %cond, float* %arrayidx37, align 4, !dbg !4869
  br label %for.inc, !dbg !4870

for.inc:                                          ; preds = %cond.end
  %29 = load i32, i32* %i, align 4, !dbg !4871
  %inc = add nsw i32 %29, 1, !dbg !4871
  store i32 %inc, i32* %i, align 4, !dbg !4871
  br label %for.cond, !dbg !4873, !llvm.loop !4874

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4876
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind uwtable
define internal i32 @sbr_hf_gen(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, [40 x [2 x float]]* %X_high, [40 x [2 x float]]* %X_low, [2 x float]* %alpha0, [2 x float]* %alpha1, float* %bw_array, i8* %t_env, i32 %bs_num_env) #3 !dbg !4877 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X_high.addr = alloca [40 x [2 x float]]*, align 8
  %X_low.addr = alloca [40 x [2 x float]]*, align 8
  %alpha0.addr = alloca [2 x float]*, align 8
  %alpha1.addr = alloca [2 x float]*, align 8
  %bw_array.addr = alloca float*, align 8
  %t_env.addr = alloca i8*, align 8
  %bs_num_env.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %g = alloca i32, align 4
  %k = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !4880, metadata !2753), !dbg !4881
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !4882, metadata !2753), !dbg !4883
  store [40 x [2 x float]]* %X_high, [40 x [2 x float]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_high.addr, metadata !4884, metadata !2753), !dbg !4885
  store [40 x [2 x float]]* %X_low, [40 x [2 x float]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_low.addr, metadata !4886, metadata !2753), !dbg !4887
  store [2 x float]* %alpha0, [2 x float]** %alpha0.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %alpha0.addr, metadata !4888, metadata !2753), !dbg !4889
  store [2 x float]* %alpha1, [2 x float]** %alpha1.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %alpha1.addr, metadata !4890, metadata !2753), !dbg !4891
  store float* %bw_array, float** %bw_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bw_array.addr, metadata !4892, metadata !2753), !dbg !4893
  store i8* %t_env, i8** %t_env.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %t_env.addr, metadata !4894, metadata !2753), !dbg !4895
  store i32 %bs_num_env, i32* %bs_num_env.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_num_env.addr, metadata !4896, metadata !2753), !dbg !4897
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4898, metadata !2753), !dbg !4899
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4900, metadata !2753), !dbg !4901
  call void @llvm.dbg.declare(metadata i32* %g, metadata !4902, metadata !2753), !dbg !4903
  store i32 0, i32* %g, align 4, !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4904, metadata !2753), !dbg !4905
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4906
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 13, !dbg !4907
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !4906
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4906
  store i32 %1, i32* %k, align 4, !dbg !4905
  store i32 0, i32* %j, align 4, !dbg !4908
  br label %for.cond, !dbg !4910

for.cond:                                         ; preds = %for.inc40, %entry
  %2 = load i32, i32* %j, align 4, !dbg !4911
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4914
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 27, !dbg !4915
  %4 = load i32, i32* %num_patches, align 16, !dbg !4915
  %cmp = icmp ult i32 %2, %4, !dbg !4916
  br i1 %cmp, label %for.body, label %for.end42, !dbg !4917

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !4918
  br label %for.cond1, !dbg !4921

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %x, align 4, !dbg !4922
  %6 = load i32, i32* %j, align 4, !dbg !4925
  %idxprom = sext i32 %6 to i64, !dbg !4926
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4926
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 28, !dbg !4927
  %arrayidx2 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom, !dbg !4926
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !4926
  %conv = zext i8 %8 to i32, !dbg !4926
  %cmp3 = icmp slt i32 %5, %conv, !dbg !4928
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !4929

for.body5:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %p, metadata !4930, metadata !2753), !dbg !4932
  %9 = load i32, i32* %j, align 4, !dbg !4933
  %idxprom6 = sext i32 %9 to i64, !dbg !4934
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4934
  %patch_start_subband = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 29, !dbg !4935
  %arrayidx7 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_start_subband, i64 0, i64 %idxprom6, !dbg !4934
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !4934
  %conv8 = zext i8 %11 to i32, !dbg !4934
  %12 = load i32, i32* %x, align 4, !dbg !4936
  %add = add nsw i32 %conv8, %12, !dbg !4937
  store i32 %add, i32* %p, align 4, !dbg !4932
  br label %while.cond, !dbg !4938

while.cond:                                       ; preds = %while.body, %for.body5
  %13 = load i32, i32* %g, align 4, !dbg !4939
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4941
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 20, !dbg !4942
  %15 = load i32, i32* %n_q, align 8, !dbg !4942
  %cmp9 = icmp ule i32 %13, %15, !dbg !4943
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !4944

land.rhs:                                         ; preds = %while.cond
  %16 = load i32, i32* %k, align 4, !dbg !4945
  %17 = load i32, i32* %g, align 4, !dbg !4947
  %idxprom11 = sext i32 %17 to i64, !dbg !4948
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4948
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 25, !dbg !4949
  %arrayidx12 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 %idxprom11, !dbg !4948
  %19 = load i16, i16* %arrayidx12, align 2, !dbg !4948
  %conv13 = zext i16 %19 to i32, !dbg !4948
  %cmp14 = icmp sge i32 %16, %conv13, !dbg !4950
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp14, %land.rhs ]
  br i1 %20, label %while.body, label %while.end, !dbg !4951

while.body:                                       ; preds = %land.end
  %21 = load i32, i32* %g, align 4, !dbg !4953
  %inc = add nsw i32 %21, 1, !dbg !4953
  store i32 %inc, i32* %g, align 4, !dbg !4953
  br label %while.cond, !dbg !4954, !llvm.loop !4956

while.end:                                        ; preds = %land.end
  %22 = load i32, i32* %g, align 4, !dbg !4957
  %dec = add nsw i32 %22, -1, !dbg !4957
  store i32 %dec, i32* %g, align 4, !dbg !4957
  %23 = load i32, i32* %g, align 4, !dbg !4958
  %cmp16 = icmp slt i32 %23, 0, !dbg !4960
  br i1 %cmp16, label %if.then, label %if.end, !dbg !4961

if.then:                                          ; preds = %while.end
  %24 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !4962
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %24, i32 0, i32 1, !dbg !4964
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4964
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !4962
  %27 = load i32, i32* %k, align 4, !dbg !4965
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.44, i32 0, i32 0), i32 %27), !dbg !4966
  store i32 -1, i32* %retval, align 4, !dbg !4967
  br label %return, !dbg !4967

if.end:                                           ; preds = %while.end
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !4968
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 46, !dbg !4969
  %hf_gen = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 8, !dbg !4970
  %29 = load void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)** %hf_gen, align 32, !dbg !4970
  %30 = load i32, i32* %k, align 4, !dbg !4971
  %idxprom18 = sext i32 %30 to i64, !dbg !4972
  %31 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_high.addr, align 8, !dbg !4972
  %arrayidx19 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %31, i64 %idxprom18, !dbg !4972
  %arraydecay = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx19, i32 0, i32 0, !dbg !4972
  %add.ptr = getelementptr inbounds [2 x float], [2 x float]* %arraydecay, i64 2, !dbg !4973
  %32 = load i32, i32* %p, align 4, !dbg !4974
  %idxprom20 = sext i32 %32 to i64, !dbg !4975
  %33 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !4975
  %arrayidx21 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %33, i64 %idxprom20, !dbg !4975
  %arraydecay22 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx21, i32 0, i32 0, !dbg !4975
  %add.ptr23 = getelementptr inbounds [2 x float], [2 x float]* %arraydecay22, i64 2, !dbg !4976
  %34 = load i32, i32* %p, align 4, !dbg !4977
  %idxprom24 = sext i32 %34 to i64, !dbg !4978
  %35 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !4978
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %35, i64 %idxprom24, !dbg !4978
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i32 0, i32 0, !dbg !4978
  %36 = load i32, i32* %p, align 4, !dbg !4979
  %idxprom27 = sext i32 %36 to i64, !dbg !4980
  %37 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !4980
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %37, i64 %idxprom27, !dbg !4980
  %arraydecay29 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx28, i32 0, i32 0, !dbg !4980
  %38 = load i32, i32* %g, align 4, !dbg !4981
  %idxprom30 = sext i32 %38 to i64, !dbg !4982
  %39 = load float*, float** %bw_array.addr, align 8, !dbg !4982
  %arrayidx31 = getelementptr inbounds float, float* %39, i64 %idxprom30, !dbg !4982
  %40 = load float, float* %arrayidx31, align 4, !dbg !4982
  %41 = load i8*, i8** %t_env.addr, align 8, !dbg !4983
  %arrayidx32 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !4983
  %42 = load i8, i8* %arrayidx32, align 1, !dbg !4983
  %conv33 = zext i8 %42 to i32, !dbg !4983
  %mul = mul nsw i32 2, %conv33, !dbg !4984
  %43 = load i32, i32* %bs_num_env.addr, align 4, !dbg !4985
  %idxprom34 = sext i32 %43 to i64, !dbg !4986
  %44 = load i8*, i8** %t_env.addr, align 8, !dbg !4986
  %arrayidx35 = getelementptr inbounds i8, i8* %44, i64 %idxprom34, !dbg !4986
  %45 = load i8, i8* %arrayidx35, align 1, !dbg !4986
  %conv36 = zext i8 %45 to i32, !dbg !4986
  %mul37 = mul nsw i32 2, %conv36, !dbg !4987
  call void %29([2 x float]* %add.ptr, [2 x float]* %add.ptr23, float* %arraydecay26, float* %arraydecay29, float %40, i32 %mul, i32 %mul37), !dbg !4968
  br label %for.inc, !dbg !4988

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %x, align 4, !dbg !4989
  %inc38 = add nsw i32 %46, 1, !dbg !4989
  store i32 %inc38, i32* %x, align 4, !dbg !4989
  %47 = load i32, i32* %k, align 4, !dbg !4991
  %inc39 = add nsw i32 %47, 1, !dbg !4991
  store i32 %inc39, i32* %k, align 4, !dbg !4991
  br label %for.cond1, !dbg !4992, !llvm.loop !4993

for.end:                                          ; preds = %for.cond1
  br label %for.inc40, !dbg !4995

for.inc40:                                        ; preds = %for.end
  %48 = load i32, i32* %j, align 4, !dbg !4996
  %inc41 = add nsw i32 %48, 1, !dbg !4996
  store i32 %inc41, i32* %j, align 4, !dbg !4996
  br label %for.cond, !dbg !4998, !llvm.loop !4999

for.end42:                                        ; preds = %for.cond
  %49 = load i32, i32* %k, align 4, !dbg !5001
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5003
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 14, !dbg !5004
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !5003
  %51 = load i32, i32* %arrayidx43, align 4, !dbg !5003
  %52 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5005
  %kx44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %52, i32 0, i32 13, !dbg !5006
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %kx44, i64 0, i64 1, !dbg !5005
  %53 = load i32, i32* %arrayidx45, align 4, !dbg !5005
  %add46 = add i32 %51, %53, !dbg !5007
  %cmp47 = icmp ult i32 %49, %add46, !dbg !5008
  br i1 %cmp47, label %if.then49, label %if.end58, !dbg !5009

if.then49:                                        ; preds = %for.end42
  %54 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_high.addr, align 8, !dbg !5010
  %55 = load i32, i32* %k, align 4, !dbg !5011
  %idx.ext = sext i32 %55 to i64, !dbg !5012
  %add.ptr50 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %54, i64 %idx.ext, !dbg !5012
  %56 = bitcast [40 x [2 x float]]* %add.ptr50 to i8*, !dbg !5013
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5014
  %m51 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 14, !dbg !5015
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %m51, i64 0, i64 1, !dbg !5014
  %58 = load i32, i32* %arrayidx52, align 4, !dbg !5014
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5016
  %kx53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 13, !dbg !5017
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %kx53, i64 0, i64 1, !dbg !5016
  %60 = load i32, i32* %arrayidx54, align 4, !dbg !5016
  %add55 = add i32 %58, %60, !dbg !5018
  %61 = load i32, i32* %k, align 4, !dbg !5019
  %sub = sub i32 %add55, %61, !dbg !5020
  %conv56 = zext i32 %sub to i64, !dbg !5021
  %mul57 = mul i64 %conv56, 320, !dbg !5022
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 %mul57, i32 4, i1 false), !dbg !5013
  br label %if.end58, !dbg !5013

if.end58:                                         ; preds = %if.then49, %for.end42
  store i32 0, i32* %retval, align 4, !dbg !5023
  br label %return, !dbg !5023

return:                                           ; preds = %if.end58, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !5024
  ret i32 %62, !dbg !5024
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_mapping(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !5025 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %ilim = alloca i32, align 4
  %table = alloca i16*, align 8
  %k = alloca i32, align 4
  %m_midpoint = alloca i32, align 4
  %additional_sinusoid_present = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5028, metadata !2753), !dbg !5029
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !5030, metadata !2753), !dbg !5031
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !5032, metadata !2753), !dbg !5033
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !5034, metadata !2753), !dbg !5035
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5036, metadata !2753), !dbg !5037
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5038, metadata !2753), !dbg !5039
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5040, metadata !2753), !dbg !5041
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5042
  %s_indexmapped = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 21, !dbg !5043
  %arrayidx = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped, i64 0, i64 1, !dbg !5042
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx, i32 0, i32 0, !dbg !5044
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 336, i32 16, i1 false), !dbg !5044
  store i32 0, i32* %e, align 4, !dbg !5045
  br label %for.cond, !dbg !5047

for.cond:                                         ; preds = %for.inc188, %entry
  %1 = load i32, i32* %e, align 4, !dbg !5048
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5051
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !5052
  %3 = load i32, i32* %bs_num_env, align 8, !dbg !5052
  %cmp = icmp ult i32 %1, %3, !dbg !5053
  br i1 %cmp, label %for.body, label %for.end190, !dbg !5054

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ilim, metadata !5055, metadata !2753), !dbg !5057
  %4 = load i32, i32* %e, align 4, !dbg !5058
  %add = add nsw i32 %4, 1, !dbg !5059
  %idxprom = sext i32 %add to i64, !dbg !5060
  %5 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5060
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 3, !dbg !5061
  %arrayidx1 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !5060
  %6 = load i8, i8* %arrayidx1, align 1, !dbg !5060
  %idxprom2 = zext i8 %6 to i64, !dbg !5062
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5062
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 19, !dbg !5063
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom2, !dbg !5062
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !5062
  store i32 %8, i32* %ilim, align 4, !dbg !5057
  call void @llvm.dbg.declare(metadata i16** %table, metadata !5064, metadata !2753), !dbg !5065
  %9 = load i32, i32* %e, align 4, !dbg !5066
  %add4 = add nsw i32 %9, 1, !dbg !5067
  %idxprom5 = sext i32 %add4 to i64, !dbg !5068
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5068
  %bs_freq_res6 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 3, !dbg !5069
  %arrayidx7 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res6, i64 0, i64 %idxprom5, !dbg !5068
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !5068
  %conv = zext i8 %11 to i32, !dbg !5068
  %tobool = icmp ne i32 %conv, 0, !dbg !5068
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5068

cond.true:                                        ; preds = %for.body
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5070
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 24, !dbg !5072
  %arraydecay8 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !5070
  br label %cond.end, !dbg !5073

cond.false:                                       ; preds = %for.body
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5074
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 23, !dbg !5076
  %arraydecay9 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !5074
  br label %cond.end, !dbg !5077

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay8, %cond.true ], [ %arraydecay9, %cond.false ], !dbg !5078
  store i16* %cond, i16** %table, align 8, !dbg !5080
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5081, metadata !2753), !dbg !5082
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5083
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 13, !dbg !5085
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !5083
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !5083
  %16 = load i16*, i16** %table, align 8, !dbg !5086
  %arrayidx11 = getelementptr inbounds i16, i16* %16, i64 0, !dbg !5086
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !5086
  %conv12 = zext i16 %17 to i32, !dbg !5086
  %cmp13 = icmp ne i32 %15, %conv12, !dbg !5087
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5088

if.then:                                          ; preds = %cond.end
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !5089
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 1, !dbg !5091
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5091
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !5089
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.45, i32 0, i32 0)), !dbg !5092
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5093
  call void @sbr_turnoff(%struct.SpectralBandReplication* %21), !dbg !5094
  store i32 -558323010, i32* %retval, align 4, !dbg !5095
  br label %return, !dbg !5095

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !5096
  br label %for.cond15, !dbg !5098

for.cond15:                                       ; preds = %for.inc41, %if.end
  %22 = load i32, i32* %i, align 4, !dbg !5099
  %23 = load i32, i32* %ilim, align 4, !dbg !5102
  %cmp16 = icmp ult i32 %22, %23, !dbg !5103
  br i1 %cmp16, label %for.body18, label %for.end43, !dbg !5104

for.body18:                                       ; preds = %for.cond15
  %24 = load i32, i32* %i, align 4, !dbg !5105
  %idxprom19 = sext i32 %24 to i64, !dbg !5107
  %25 = load i16*, i16** %table, align 8, !dbg !5107
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !5107
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !5107
  %conv21 = zext i16 %26 to i32, !dbg !5107
  store i32 %conv21, i32* %m, align 4, !dbg !5108
  br label %for.cond22, !dbg !5109

for.cond22:                                       ; preds = %for.inc, %for.body18
  %27 = load i32, i32* %m, align 4, !dbg !5110
  %28 = load i32, i32* %i, align 4, !dbg !5113
  %add23 = add nsw i32 %28, 1, !dbg !5114
  %idxprom24 = sext i32 %add23 to i64, !dbg !5115
  %29 = load i16*, i16** %table, align 8, !dbg !5115
  %arrayidx25 = getelementptr inbounds i16, i16* %29, i64 %idxprom24, !dbg !5115
  %30 = load i16, i16* %arrayidx25, align 2, !dbg !5115
  %conv26 = zext i16 %30 to i32, !dbg !5115
  %cmp27 = icmp slt i32 %27, %conv26, !dbg !5116
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !5117

for.body29:                                       ; preds = %for.cond22
  %31 = load i32, i32* %i, align 4, !dbg !5118
  %idxprom30 = sext i32 %31 to i64, !dbg !5119
  %32 = load i32, i32* %e, align 4, !dbg !5120
  %add31 = add nsw i32 %32, 1, !dbg !5121
  %idxprom32 = sext i32 %add31 to i64, !dbg !5119
  %33 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5119
  %env_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %33, i32 0, i32 23, !dbg !5122
  %arrayidx33 = getelementptr inbounds [6 x [48 x float]], [6 x [48 x float]]* %env_facs, i64 0, i64 %idxprom32, !dbg !5119
  %arrayidx34 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !5119
  %34 = load float, float* %arrayidx34, align 4, !dbg !5119
  %35 = load i32, i32* %m, align 4, !dbg !5123
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5124
  %kx35 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 13, !dbg !5125
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %kx35, i64 0, i64 1, !dbg !5124
  %37 = load i32, i32* %arrayidx36, align 4, !dbg !5124
  %sub = sub i32 %35, %37, !dbg !5126
  %idxprom37 = zext i32 %sub to i64, !dbg !5127
  %38 = load i32, i32* %e, align 4, !dbg !5128
  %idxprom38 = sext i32 %38 to i64, !dbg !5127
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5127
  %e_origmapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %39, i32 0, i32 35, !dbg !5129
  %arrayidx39 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped, i64 0, i64 %idxprom38, !dbg !5127
  %arrayidx40 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx39, i64 0, i64 %idxprom37, !dbg !5127
  store float %34, float* %arrayidx40, align 4, !dbg !5130
  br label %for.inc, !dbg !5127

for.inc:                                          ; preds = %for.body29
  %40 = load i32, i32* %m, align 4, !dbg !5131
  %inc = add nsw i32 %40, 1, !dbg !5131
  store i32 %inc, i32* %m, align 4, !dbg !5131
  br label %for.cond22, !dbg !5133, !llvm.loop !5134

for.end:                                          ; preds = %for.cond22
  br label %for.inc41, !dbg !5136

for.inc41:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !5138
  %inc42 = add nsw i32 %41, 1, !dbg !5138
  store i32 %inc42, i32* %i, align 4, !dbg !5138
  br label %for.cond15, !dbg !5140, !llvm.loop !5141

for.end43:                                        ; preds = %for.cond15
  %42 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5143
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %42, i32 0, i32 4, !dbg !5144
  %43 = load i32, i32* %bs_num_noise, align 4, !dbg !5144
  %cmp44 = icmp ugt i32 %43, 1, !dbg !5145
  br i1 %cmp44, label %land.rhs, label %land.end, !dbg !5146

land.rhs:                                         ; preds = %for.end43
  %44 = load i32, i32* %e, align 4, !dbg !5147
  %idxprom46 = sext i32 %44 to i64, !dbg !5148
  %45 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5148
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %45, i32 0, i32 26, !dbg !5149
  %arrayidx47 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom46, !dbg !5148
  %46 = load i8, i8* %arrayidx47, align 1, !dbg !5148
  %conv48 = zext i8 %46 to i32, !dbg !5148
  %47 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5150
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %47, i32 0, i32 28, !dbg !5151
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i64 0, i64 1, !dbg !5150
  %48 = load i8, i8* %arrayidx49, align 1, !dbg !5150
  %conv50 = zext i8 %48 to i32, !dbg !5150
  %cmp51 = icmp sge i32 %conv48, %conv50, !dbg !5152
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end43
  %49 = phi i1 [ false, %for.end43 ], [ %cmp51, %land.rhs ]
  %land.ext = zext i1 %49 to i32, !dbg !5153
  store i32 %land.ext, i32* %k, align 4, !dbg !5154
  store i32 0, i32* %i, align 4, !dbg !5155
  br label %for.cond53, !dbg !5157

for.cond53:                                       ; preds = %for.inc84, %land.end
  %50 = load i32, i32* %i, align 4, !dbg !5158
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5161
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %51, i32 0, i32 20, !dbg !5162
  %52 = load i32, i32* %n_q, align 8, !dbg !5162
  %cmp54 = icmp ult i32 %50, %52, !dbg !5163
  br i1 %cmp54, label %for.body56, label %for.end86, !dbg !5164

for.body56:                                       ; preds = %for.cond53
  %53 = load i32, i32* %i, align 4, !dbg !5165
  %idxprom57 = sext i32 %53 to i64, !dbg !5167
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5167
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %54, i32 0, i32 25, !dbg !5168
  %arrayidx58 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 %idxprom57, !dbg !5167
  %55 = load i16, i16* %arrayidx58, align 2, !dbg !5167
  %conv59 = zext i16 %55 to i32, !dbg !5167
  store i32 %conv59, i32* %m, align 4, !dbg !5169
  br label %for.cond60, !dbg !5170

for.cond60:                                       ; preds = %for.inc81, %for.body56
  %56 = load i32, i32* %m, align 4, !dbg !5171
  %57 = load i32, i32* %i, align 4, !dbg !5174
  %add61 = add nsw i32 %57, 1, !dbg !5175
  %idxprom62 = sext i32 %add61 to i64, !dbg !5176
  %58 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5176
  %f_tablenoise63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %58, i32 0, i32 25, !dbg !5177
  %arrayidx64 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise63, i64 0, i64 %idxprom62, !dbg !5176
  %59 = load i16, i16* %arrayidx64, align 2, !dbg !5176
  %conv65 = zext i16 %59 to i32, !dbg !5176
  %cmp66 = icmp slt i32 %56, %conv65, !dbg !5178
  br i1 %cmp66, label %for.body68, label %for.end83, !dbg !5179

for.body68:                                       ; preds = %for.cond60
  %60 = load i32, i32* %i, align 4, !dbg !5180
  %idxprom69 = sext i32 %60 to i64, !dbg !5181
  %61 = load i32, i32* %k, align 4, !dbg !5182
  %add70 = add nsw i32 %61, 1, !dbg !5183
  %idxprom71 = sext i32 %add70 to i64, !dbg !5181
  %62 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5181
  %noise_facs = getelementptr inbounds %struct.SBRData, %struct.SBRData* %62, i32 0, i32 25, !dbg !5184
  %arrayidx72 = getelementptr inbounds [3 x [5 x float]], [3 x [5 x float]]* %noise_facs, i64 0, i64 %idxprom71, !dbg !5181
  %arrayidx73 = getelementptr inbounds [5 x float], [5 x float]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !5181
  %63 = load float, float* %arrayidx73, align 4, !dbg !5181
  %64 = load i32, i32* %m, align 4, !dbg !5185
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5186
  %kx74 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 13, !dbg !5187
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %kx74, i64 0, i64 1, !dbg !5186
  %66 = load i32, i32* %arrayidx75, align 4, !dbg !5186
  %sub76 = sub i32 %64, %66, !dbg !5188
  %idxprom77 = zext i32 %sub76 to i64, !dbg !5189
  %67 = load i32, i32* %e, align 4, !dbg !5190
  %idxprom78 = sext i32 %67 to i64, !dbg !5189
  %68 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5189
  %q_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %68, i32 0, i32 36, !dbg !5191
  %arrayidx79 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped, i64 0, i64 %idxprom78, !dbg !5189
  %arrayidx80 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx79, i64 0, i64 %idxprom77, !dbg !5189
  store float %63, float* %arrayidx80, align 4, !dbg !5192
  br label %for.inc81, !dbg !5189

for.inc81:                                        ; preds = %for.body68
  %69 = load i32, i32* %m, align 4, !dbg !5193
  %inc82 = add nsw i32 %69, 1, !dbg !5193
  store i32 %inc82, i32* %m, align 4, !dbg !5193
  br label %for.cond60, !dbg !5195, !llvm.loop !5196

for.end83:                                        ; preds = %for.cond60
  br label %for.inc84, !dbg !5198

for.inc84:                                        ; preds = %for.end83
  %70 = load i32, i32* %i, align 4, !dbg !5200
  %inc85 = add nsw i32 %70, 1, !dbg !5200
  store i32 %inc85, i32* %i, align 4, !dbg !5200
  br label %for.cond53, !dbg !5202, !llvm.loop !5203

for.end86:                                        ; preds = %for.cond53
  store i32 0, i32* %i, align 4, !dbg !5205
  br label %for.cond87, !dbg !5207

for.cond87:                                       ; preds = %for.inc132, %for.end86
  %71 = load i32, i32* %i, align 4, !dbg !5208
  %72 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5211
  %n88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %72, i32 0, i32 19, !dbg !5212
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %n88, i64 0, i64 1, !dbg !5211
  %73 = load i32, i32* %arrayidx89, align 4, !dbg !5211
  %cmp90 = icmp ult i32 %71, %73, !dbg !5213
  br i1 %cmp90, label %for.body92, label %for.end134, !dbg !5214

for.body92:                                       ; preds = %for.cond87
  %74 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5215
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %74, i32 0, i32 1, !dbg !5218
  %75 = load i32, i32* %bs_add_harmonic_flag, align 4, !dbg !5218
  %tobool93 = icmp ne i32 %75, 0, !dbg !5215
  br i1 %tobool93, label %if.then94, label %if.end131, !dbg !5219

if.then94:                                        ; preds = %for.body92
  call void @llvm.dbg.declare(metadata i32* %m_midpoint, metadata !5220, metadata !2753), !dbg !5222
  %76 = load i32, i32* %i, align 4, !dbg !5223
  %idxprom95 = sext i32 %76 to i64, !dbg !5224
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5224
  %f_tablehigh96 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 24, !dbg !5225
  %arrayidx97 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh96, i64 0, i64 %idxprom95, !dbg !5224
  %78 = load i16, i16* %arrayidx97, align 2, !dbg !5224
  %conv98 = zext i16 %78 to i32, !dbg !5224
  %79 = load i32, i32* %i, align 4, !dbg !5226
  %add99 = add nsw i32 %79, 1, !dbg !5227
  %idxprom100 = sext i32 %add99 to i64, !dbg !5228
  %80 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5228
  %f_tablehigh101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %80, i32 0, i32 24, !dbg !5229
  %arrayidx102 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh101, i64 0, i64 %idxprom100, !dbg !5228
  %81 = load i16, i16* %arrayidx102, align 2, !dbg !5228
  %conv103 = zext i16 %81 to i32, !dbg !5228
  %add104 = add nsw i32 %conv98, %conv103, !dbg !5230
  %shr = ashr i32 %add104, 1, !dbg !5231
  store i32 %shr, i32* %m_midpoint, align 4, !dbg !5222
  %82 = load i32, i32* %i, align 4, !dbg !5232
  %idxprom105 = sext i32 %82 to i64, !dbg !5233
  %83 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5233
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %83, i32 0, i32 8, !dbg !5234
  %arrayidx106 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i64 0, i64 %idxprom105, !dbg !5233
  %84 = load i8, i8* %arrayidx106, align 1, !dbg !5233
  %conv107 = zext i8 %84 to i32, !dbg !5233
  %85 = load i32, i32* %e, align 4, !dbg !5235
  %86 = load i32*, i32** %e_a.addr, align 8, !dbg !5236
  %arrayidx108 = getelementptr inbounds i32, i32* %86, i64 1, !dbg !5236
  %87 = load i32, i32* %arrayidx108, align 4, !dbg !5236
  %cmp109 = icmp sge i32 %85, %87, !dbg !5237
  br i1 %cmp109, label %lor.end, label %lor.rhs, !dbg !5238

lor.rhs:                                          ; preds = %if.then94
  %88 = load i32, i32* %m_midpoint, align 4, !dbg !5239
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5241
  %kx111 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 13, !dbg !5242
  %arrayidx112 = getelementptr inbounds [2 x i32], [2 x i32]* %kx111, i64 0, i64 1, !dbg !5241
  %90 = load i32, i32* %arrayidx112, align 4, !dbg !5241
  %sub113 = sub i32 %88, %90, !dbg !5243
  %idxprom114 = zext i32 %sub113 to i64, !dbg !5244
  %91 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5244
  %s_indexmapped115 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %91, i32 0, i32 21, !dbg !5245
  %arrayidx116 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped115, i64 0, i64 0, !dbg !5244
  %arrayidx117 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx116, i64 0, i64 %idxprom114, !dbg !5244
  %92 = load i8, i8* %arrayidx117, align 1, !dbg !5244
  %conv118 = zext i8 %92 to i32, !dbg !5244
  %cmp119 = icmp eq i32 %conv118, 1, !dbg !5246
  br label %lor.end, !dbg !5247

lor.end:                                          ; preds = %lor.rhs, %if.then94
  %93 = phi i1 [ true, %if.then94 ], [ %cmp119, %lor.rhs ]
  %lor.ext = zext i1 %93 to i32, !dbg !5248
  %mul = mul nsw i32 %conv107, %lor.ext, !dbg !5250
  %conv121 = trunc i32 %mul to i8, !dbg !5251
  %94 = load i32, i32* %m_midpoint, align 4, !dbg !5252
  %95 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5253
  %kx122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %95, i32 0, i32 13, !dbg !5254
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %kx122, i64 0, i64 1, !dbg !5253
  %96 = load i32, i32* %arrayidx123, align 4, !dbg !5253
  %sub124 = sub i32 %94, %96, !dbg !5255
  %idxprom125 = zext i32 %sub124 to i64, !dbg !5256
  %97 = load i32, i32* %e, align 4, !dbg !5257
  %add126 = add nsw i32 %97, 1, !dbg !5258
  %idxprom127 = sext i32 %add126 to i64, !dbg !5256
  %98 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5256
  %s_indexmapped128 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %98, i32 0, i32 21, !dbg !5259
  %arrayidx129 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped128, i64 0, i64 %idxprom127, !dbg !5256
  %arrayidx130 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx129, i64 0, i64 %idxprom125, !dbg !5256
  store i8 %conv121, i8* %arrayidx130, align 1, !dbg !5260
  br label %if.end131, !dbg !5261

if.end131:                                        ; preds = %lor.end, %for.body92
  br label %for.inc132, !dbg !5262

for.inc132:                                       ; preds = %if.end131
  %99 = load i32, i32* %i, align 4, !dbg !5263
  %inc133 = add nsw i32 %99, 1, !dbg !5263
  store i32 %inc133, i32* %i, align 4, !dbg !5263
  br label %for.cond87, !dbg !5265, !llvm.loop !5266

for.end134:                                       ; preds = %for.cond87
  store i32 0, i32* %i, align 4, !dbg !5268
  br label %for.cond135, !dbg !5270

for.cond135:                                      ; preds = %for.inc185, %for.end134
  %100 = load i32, i32* %i, align 4, !dbg !5271
  %101 = load i32, i32* %ilim, align 4, !dbg !5274
  %cmp136 = icmp ult i32 %100, %101, !dbg !5275
  br i1 %cmp136, label %for.body138, label %for.end187, !dbg !5276

for.body138:                                      ; preds = %for.cond135
  call void @llvm.dbg.declare(metadata i32* %additional_sinusoid_present, metadata !5277, metadata !2753), !dbg !5279
  store i32 0, i32* %additional_sinusoid_present, align 4, !dbg !5279
  %102 = load i32, i32* %i, align 4, !dbg !5280
  %idxprom139 = sext i32 %102 to i64, !dbg !5282
  %103 = load i16*, i16** %table, align 8, !dbg !5282
  %arrayidx140 = getelementptr inbounds i16, i16* %103, i64 %idxprom139, !dbg !5282
  %104 = load i16, i16* %arrayidx140, align 2, !dbg !5282
  %conv141 = zext i16 %104 to i32, !dbg !5282
  store i32 %conv141, i32* %m, align 4, !dbg !5283
  br label %for.cond142, !dbg !5284

for.cond142:                                      ; preds = %for.inc162, %for.body138
  %105 = load i32, i32* %m, align 4, !dbg !5285
  %106 = load i32, i32* %i, align 4, !dbg !5288
  %add143 = add nsw i32 %106, 1, !dbg !5289
  %idxprom144 = sext i32 %add143 to i64, !dbg !5290
  %107 = load i16*, i16** %table, align 8, !dbg !5290
  %arrayidx145 = getelementptr inbounds i16, i16* %107, i64 %idxprom144, !dbg !5290
  %108 = load i16, i16* %arrayidx145, align 2, !dbg !5290
  %conv146 = zext i16 %108 to i32, !dbg !5290
  %cmp147 = icmp slt i32 %105, %conv146, !dbg !5291
  br i1 %cmp147, label %for.body149, label %for.end164, !dbg !5292

for.body149:                                      ; preds = %for.cond142
  %109 = load i32, i32* %m, align 4, !dbg !5293
  %110 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5296
  %kx150 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %110, i32 0, i32 13, !dbg !5297
  %arrayidx151 = getelementptr inbounds [2 x i32], [2 x i32]* %kx150, i64 0, i64 1, !dbg !5296
  %111 = load i32, i32* %arrayidx151, align 4, !dbg !5296
  %sub152 = sub i32 %109, %111, !dbg !5298
  %idxprom153 = zext i32 %sub152 to i64, !dbg !5299
  %112 = load i32, i32* %e, align 4, !dbg !5300
  %add154 = add nsw i32 %112, 1, !dbg !5301
  %idxprom155 = sext i32 %add154 to i64, !dbg !5299
  %113 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5299
  %s_indexmapped156 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %113, i32 0, i32 21, !dbg !5302
  %arrayidx157 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped156, i64 0, i64 %idxprom155, !dbg !5299
  %arrayidx158 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx157, i64 0, i64 %idxprom153, !dbg !5299
  %114 = load i8, i8* %arrayidx158, align 1, !dbg !5299
  %tobool159 = icmp ne i8 %114, 0, !dbg !5299
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !5303

if.then160:                                       ; preds = %for.body149
  store i32 1, i32* %additional_sinusoid_present, align 4, !dbg !5304
  br label %for.end164, !dbg !5306

if.end161:                                        ; preds = %for.body149
  br label %for.inc162, !dbg !5307

for.inc162:                                       ; preds = %if.end161
  %115 = load i32, i32* %m, align 4, !dbg !5308
  %inc163 = add nsw i32 %115, 1, !dbg !5308
  store i32 %inc163, i32* %m, align 4, !dbg !5308
  br label %for.cond142, !dbg !5310, !llvm.loop !5311

for.end164:                                       ; preds = %if.then160, %for.cond142
  %116 = load i32, i32* %i, align 4, !dbg !5313
  %idxprom165 = sext i32 %116 to i64, !dbg !5314
  %117 = load i16*, i16** %table, align 8, !dbg !5314
  %arrayidx166 = getelementptr inbounds i16, i16* %117, i64 %idxprom165, !dbg !5314
  %118 = load i16, i16* %arrayidx166, align 2, !dbg !5314
  %conv167 = zext i16 %118 to i32, !dbg !5314
  %119 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5315
  %kx168 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %119, i32 0, i32 13, !dbg !5316
  %arrayidx169 = getelementptr inbounds [2 x i32], [2 x i32]* %kx168, i64 0, i64 1, !dbg !5315
  %120 = load i32, i32* %arrayidx169, align 4, !dbg !5315
  %sub170 = sub i32 %conv167, %120, !dbg !5317
  %idxprom171 = zext i32 %sub170 to i64, !dbg !5318
  %121 = load i32, i32* %e, align 4, !dbg !5319
  %idxprom172 = sext i32 %121 to i64, !dbg !5318
  %122 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5318
  %s_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %122, i32 0, i32 37, !dbg !5320
  %arrayidx173 = getelementptr inbounds [7 x [48 x i8]], [7 x [48 x i8]]* %s_mapped, i64 0, i64 %idxprom172, !dbg !5318
  %arrayidx174 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx173, i64 0, i64 %idxprom171, !dbg !5318
  %123 = load i32, i32* %additional_sinusoid_present, align 4, !dbg !5321
  %124 = trunc i32 %123 to i8, !dbg !5322
  %125 = load i32, i32* %i, align 4, !dbg !5323
  %add175 = add nsw i32 %125, 1, !dbg !5324
  %idxprom176 = sext i32 %add175 to i64, !dbg !5325
  %126 = load i16*, i16** %table, align 8, !dbg !5325
  %arrayidx177 = getelementptr inbounds i16, i16* %126, i64 %idxprom176, !dbg !5325
  %127 = load i16, i16* %arrayidx177, align 2, !dbg !5325
  %conv178 = zext i16 %127 to i32, !dbg !5325
  %128 = load i32, i32* %i, align 4, !dbg !5326
  %idxprom179 = sext i32 %128 to i64, !dbg !5327
  %129 = load i16*, i16** %table, align 8, !dbg !5327
  %arrayidx180 = getelementptr inbounds i16, i16* %129, i64 %idxprom179, !dbg !5327
  %130 = load i16, i16* %arrayidx180, align 2, !dbg !5327
  %conv181 = zext i16 %130 to i32, !dbg !5327
  %sub182 = sub nsw i32 %conv178, %conv181, !dbg !5328
  %conv183 = sext i32 %sub182 to i64, !dbg !5329
  %mul184 = mul i64 %conv183, 1, !dbg !5330
  call void @llvm.memset.p0i8.i64(i8* %arrayidx174, i8 %124, i64 %mul184, i32 1, i1 false), !dbg !5322
  br label %for.inc185, !dbg !5331

for.inc185:                                       ; preds = %for.end164
  %131 = load i32, i32* %i, align 4, !dbg !5332
  %inc186 = add nsw i32 %131, 1, !dbg !5332
  store i32 %inc186, i32* %i, align 4, !dbg !5332
  br label %for.cond135, !dbg !5334, !llvm.loop !5335

for.end187:                                       ; preds = %for.cond135
  br label %for.inc188, !dbg !5337

for.inc188:                                       ; preds = %for.end187
  %132 = load i32, i32* %e, align 4, !dbg !5338
  %inc189 = add nsw i32 %132, 1, !dbg !5338
  store i32 %inc189, i32* %e, align 4, !dbg !5338
  br label %for.cond, !dbg !5340, !llvm.loop !5341

for.end190:                                       ; preds = %for.cond
  %133 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5343
  %s_indexmapped191 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %133, i32 0, i32 21, !dbg !5344
  %arrayidx192 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped191, i64 0, i64 0, !dbg !5343
  %arraydecay193 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx192, i32 0, i32 0, !dbg !5345
  %134 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5346
  %bs_num_env194 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %134, i32 0, i32 2, !dbg !5347
  %135 = load i32, i32* %bs_num_env194, align 8, !dbg !5347
  %idxprom195 = zext i32 %135 to i64, !dbg !5348
  %136 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5348
  %s_indexmapped196 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %136, i32 0, i32 21, !dbg !5349
  %arrayidx197 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped196, i64 0, i64 %idxprom195, !dbg !5348
  %arraydecay198 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx197, i32 0, i32 0, !dbg !5345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay193, i8* %arraydecay198, i64 48, i32 16, i1 false), !dbg !5345
  store i32 0, i32* %retval, align 4, !dbg !5350
  br label %return, !dbg !5350

return:                                           ; preds = %for.end190, %if.then
  %137 = load i32, i32* %retval, align 4, !dbg !5351
  ret i32 %137, !dbg !5351
}

; Function Attrs: nounwind uwtable
define internal void @sbr_env_estimate([48 x float]* %e_curr, [40 x [2 x float]]* %X_high, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data) #3 !dbg !5352 {
entry:
  %e_curr.addr = alloca [48 x float]*, align 8
  %X_high.addr = alloca [40 x [2 x float]]*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %kx1 = alloca i32, align 4
  %recip_env_size = alloca float, align 4
  %ilb = alloca i32, align 4
  %iub = alloca i32, align 4
  %sum = alloca float, align 4
  %k = alloca i32, align 4
  %p = alloca i32, align 4
  %env_size = alloca i32, align 4
  %ilb53 = alloca i32, align 4
  %iub60 = alloca i32, align 4
  %table = alloca i16*, align 8
  %sum85 = alloca float, align 4
  %den = alloca i32, align 4
  store [48 x float]* %e_curr, [48 x float]** %e_curr.addr, align 8
  call void @llvm.dbg.declare(metadata [48 x float]** %e_curr.addr, metadata !5357, metadata !2753), !dbg !5358
  store [40 x [2 x float]]* %X_high, [40 x [2 x float]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_high.addr, metadata !5359, metadata !2753), !dbg !5360
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !5361, metadata !2753), !dbg !5362
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !5363, metadata !2753), !dbg !5364
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5365, metadata !2753), !dbg !5366
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5367, metadata !2753), !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %kx1, metadata !5369, metadata !2753), !dbg !5370
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5371
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 13, !dbg !5372
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !5371
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5371
  store i32 %1, i32* %kx1, align 4, !dbg !5370
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5373
  %bs_interpol_freq = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 9, !dbg !5375
  %3 = load i32, i32* %bs_interpol_freq, align 8, !dbg !5375
  %tobool = icmp ne i32 %3, 0, !dbg !5373
  br i1 %tobool, label %if.then, label %if.else, !dbg !5376

if.then:                                          ; preds = %entry
  store i32 0, i32* %e, align 4, !dbg !5377
  br label %for.cond, !dbg !5380

for.cond:                                         ; preds = %for.inc34, %if.then
  %4 = load i32, i32* %e, align 4, !dbg !5381
  %5 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5384
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 2, !dbg !5385
  %6 = load i32, i32* %bs_num_env, align 8, !dbg !5385
  %cmp = icmp ult i32 %4, %6, !dbg !5386
  br i1 %cmp, label %for.body, label %for.end36, !dbg !5387

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %recip_env_size, metadata !5388, metadata !2753), !dbg !5390
  %7 = load i32, i32* %e, align 4, !dbg !5391
  %add = add nsw i32 %7, 1, !dbg !5392
  %idxprom = sext i32 %add to i64, !dbg !5393
  %8 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5393
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %8, i32 0, i32 26, !dbg !5394
  %arrayidx1 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom, !dbg !5393
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !5393
  %conv = zext i8 %9 to i32, !dbg !5393
  %10 = load i32, i32* %e, align 4, !dbg !5395
  %idxprom2 = sext i32 %10 to i64, !dbg !5396
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5396
  %t_env3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 26, !dbg !5397
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env3, i64 0, i64 %idxprom2, !dbg !5396
  %12 = load i8, i8* %arrayidx4, align 1, !dbg !5396
  %conv5 = zext i8 %12 to i32, !dbg !5396
  %sub = sub nsw i32 %conv, %conv5, !dbg !5398
  %conv6 = sitofp i32 %sub to float, !dbg !5399
  %div = fdiv float 5.000000e-01, %conv6, !dbg !5400
  store float %div, float* %recip_env_size, align 4, !dbg !5390
  call void @llvm.dbg.declare(metadata i32* %ilb, metadata !5401, metadata !2753), !dbg !5402
  %13 = load i32, i32* %e, align 4, !dbg !5403
  %idxprom7 = sext i32 %13 to i64, !dbg !5404
  %14 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5404
  %t_env8 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %14, i32 0, i32 26, !dbg !5405
  %arrayidx9 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env8, i64 0, i64 %idxprom7, !dbg !5404
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !5404
  %conv10 = zext i8 %15 to i32, !dbg !5404
  %mul = mul nsw i32 %conv10, 2, !dbg !5406
  %add11 = add nsw i32 %mul, 2, !dbg !5407
  store i32 %add11, i32* %ilb, align 4, !dbg !5402
  call void @llvm.dbg.declare(metadata i32* %iub, metadata !5408, metadata !2753), !dbg !5409
  %16 = load i32, i32* %e, align 4, !dbg !5410
  %add12 = add nsw i32 %16, 1, !dbg !5411
  %idxprom13 = sext i32 %add12 to i64, !dbg !5412
  %17 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5412
  %t_env14 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %17, i32 0, i32 26, !dbg !5413
  %arrayidx15 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env14, i64 0, i64 %idxprom13, !dbg !5412
  %18 = load i8, i8* %arrayidx15, align 1, !dbg !5412
  %conv16 = zext i8 %18 to i32, !dbg !5412
  %mul17 = mul nsw i32 %conv16, 2, !dbg !5414
  %add18 = add nsw i32 %mul17, 2, !dbg !5415
  store i32 %add18, i32* %iub, align 4, !dbg !5409
  store i32 0, i32* %m, align 4, !dbg !5416
  br label %for.cond19, !dbg !5418

for.cond19:                                       ; preds = %for.inc, %for.body
  %19 = load i32, i32* %m, align 4, !dbg !5419
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5422
  %m20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 14, !dbg !5423
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %m20, i64 0, i64 1, !dbg !5422
  %21 = load i32, i32* %arrayidx21, align 4, !dbg !5422
  %cmp22 = icmp ult i32 %19, %21, !dbg !5424
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !5425

for.body24:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata float* %sum, metadata !5426, metadata !2753), !dbg !5428
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5429
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 46, !dbg !5430
  %sum_square = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 1, !dbg !5431
  %23 = load float ([2 x float]*, i32)*, float ([2 x float]*, i32)** %sum_square, align 8, !dbg !5431
  %24 = load i32, i32* %m, align 4, !dbg !5432
  %25 = load i32, i32* %kx1, align 4, !dbg !5433
  %add25 = add nsw i32 %24, %25, !dbg !5434
  %idxprom26 = sext i32 %add25 to i64, !dbg !5435
  %26 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_high.addr, align 8, !dbg !5435
  %arrayidx27 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %26, i64 %idxprom26, !dbg !5435
  %arraydecay = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx27, i32 0, i32 0, !dbg !5435
  %27 = load i32, i32* %ilb, align 4, !dbg !5436
  %idx.ext = sext i32 %27 to i64, !dbg !5437
  %add.ptr = getelementptr inbounds [2 x float], [2 x float]* %arraydecay, i64 %idx.ext, !dbg !5437
  %28 = load i32, i32* %iub, align 4, !dbg !5438
  %29 = load i32, i32* %ilb, align 4, !dbg !5439
  %sub28 = sub nsw i32 %28, %29, !dbg !5440
  %call = call float %23([2 x float]* %add.ptr, i32 %sub28), !dbg !5429
  store float %call, float* %sum, align 4, !dbg !5428
  %30 = load float, float* %sum, align 4, !dbg !5441
  %31 = load float, float* %recip_env_size, align 4, !dbg !5442
  %mul29 = fmul float %30, %31, !dbg !5443
  %32 = load i32, i32* %m, align 4, !dbg !5444
  %idxprom30 = sext i32 %32 to i64, !dbg !5445
  %33 = load i32, i32* %e, align 4, !dbg !5446
  %idxprom31 = sext i32 %33 to i64, !dbg !5445
  %34 = load [48 x float]*, [48 x float]** %e_curr.addr, align 8, !dbg !5445
  %arrayidx32 = getelementptr inbounds [48 x float], [48 x float]* %34, i64 %idxprom31, !dbg !5445
  %arrayidx33 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx32, i64 0, i64 %idxprom30, !dbg !5445
  store float %mul29, float* %arrayidx33, align 4, !dbg !5447
  br label %for.inc, !dbg !5448

for.inc:                                          ; preds = %for.body24
  %35 = load i32, i32* %m, align 4, !dbg !5449
  %inc = add nsw i32 %35, 1, !dbg !5449
  store i32 %inc, i32* %m, align 4, !dbg !5449
  br label %for.cond19, !dbg !5451, !llvm.loop !5452

for.end:                                          ; preds = %for.cond19
  br label %for.inc34, !dbg !5454

for.inc34:                                        ; preds = %for.end
  %36 = load i32, i32* %e, align 4, !dbg !5455
  %inc35 = add nsw i32 %36, 1, !dbg !5455
  store i32 %inc35, i32* %e, align 4, !dbg !5455
  br label %for.cond, !dbg !5457, !llvm.loop !5458

for.end36:                                        ; preds = %for.cond
  br label %if.end, !dbg !5460

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5461, metadata !2753), !dbg !5463
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5464, metadata !2753), !dbg !5465
  store i32 0, i32* %e, align 4, !dbg !5466
  br label %for.cond37, !dbg !5468

for.cond37:                                       ; preds = %for.inc143, %if.else
  %37 = load i32, i32* %e, align 4, !dbg !5469
  %38 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5472
  %bs_num_env38 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %38, i32 0, i32 2, !dbg !5473
  %39 = load i32, i32* %bs_num_env38, align 8, !dbg !5473
  %cmp39 = icmp ult i32 %37, %39, !dbg !5474
  br i1 %cmp39, label %for.body41, label %for.end145, !dbg !5475

for.body41:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32* %env_size, metadata !5476, metadata !2753), !dbg !5478
  %40 = load i32, i32* %e, align 4, !dbg !5479
  %add42 = add nsw i32 %40, 1, !dbg !5480
  %idxprom43 = sext i32 %add42 to i64, !dbg !5481
  %41 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5481
  %t_env44 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %41, i32 0, i32 26, !dbg !5482
  %arrayidx45 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env44, i64 0, i64 %idxprom43, !dbg !5481
  %42 = load i8, i8* %arrayidx45, align 1, !dbg !5481
  %conv46 = zext i8 %42 to i32, !dbg !5481
  %43 = load i32, i32* %e, align 4, !dbg !5483
  %idxprom47 = sext i32 %43 to i64, !dbg !5484
  %44 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5484
  %t_env48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %44, i32 0, i32 26, !dbg !5485
  %arrayidx49 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env48, i64 0, i64 %idxprom47, !dbg !5484
  %45 = load i8, i8* %arrayidx49, align 1, !dbg !5484
  %conv50 = zext i8 %45 to i32, !dbg !5484
  %sub51 = sub nsw i32 %conv46, %conv50, !dbg !5486
  %mul52 = mul nsw i32 2, %sub51, !dbg !5487
  store i32 %mul52, i32* %env_size, align 4, !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %ilb53, metadata !5488, metadata !2753), !dbg !5489
  %46 = load i32, i32* %e, align 4, !dbg !5490
  %idxprom54 = sext i32 %46 to i64, !dbg !5491
  %47 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5491
  %t_env55 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %47, i32 0, i32 26, !dbg !5492
  %arrayidx56 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env55, i64 0, i64 %idxprom54, !dbg !5491
  %48 = load i8, i8* %arrayidx56, align 1, !dbg !5491
  %conv57 = zext i8 %48 to i32, !dbg !5491
  %mul58 = mul nsw i32 %conv57, 2, !dbg !5493
  %add59 = add nsw i32 %mul58, 2, !dbg !5494
  store i32 %add59, i32* %ilb53, align 4, !dbg !5489
  call void @llvm.dbg.declare(metadata i32* %iub60, metadata !5495, metadata !2753), !dbg !5496
  %49 = load i32, i32* %e, align 4, !dbg !5497
  %add61 = add nsw i32 %49, 1, !dbg !5498
  %idxprom62 = sext i32 %add61 to i64, !dbg !5499
  %50 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5499
  %t_env63 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %50, i32 0, i32 26, !dbg !5500
  %arrayidx64 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env63, i64 0, i64 %idxprom62, !dbg !5499
  %51 = load i8, i8* %arrayidx64, align 1, !dbg !5499
  %conv65 = zext i8 %51 to i32, !dbg !5499
  %mul66 = mul nsw i32 %conv65, 2, !dbg !5501
  %add67 = add nsw i32 %mul66, 2, !dbg !5502
  store i32 %add67, i32* %iub60, align 4, !dbg !5496
  call void @llvm.dbg.declare(metadata i16** %table, metadata !5503, metadata !2753), !dbg !5504
  %52 = load i32, i32* %e, align 4, !dbg !5505
  %add68 = add nsw i32 %52, 1, !dbg !5506
  %idxprom69 = sext i32 %add68 to i64, !dbg !5507
  %53 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5507
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %53, i32 0, i32 3, !dbg !5508
  %arrayidx70 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom69, !dbg !5507
  %54 = load i8, i8* %arrayidx70, align 1, !dbg !5507
  %conv71 = zext i8 %54 to i32, !dbg !5507
  %tobool72 = icmp ne i32 %conv71, 0, !dbg !5507
  br i1 %tobool72, label %cond.true, label %cond.false, !dbg !5507

cond.true:                                        ; preds = %for.body41
  %55 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5509
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %55, i32 0, i32 24, !dbg !5511
  %arraydecay73 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !5509
  br label %cond.end, !dbg !5512

cond.false:                                       ; preds = %for.body41
  %56 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5513
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %56, i32 0, i32 23, !dbg !5515
  %arraydecay74 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !5513
  br label %cond.end, !dbg !5516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay73, %cond.true ], [ %arraydecay74, %cond.false ], !dbg !5517
  store i16* %cond, i16** %table, align 8, !dbg !5519
  store i32 0, i32* %p, align 4, !dbg !5520
  br label %for.cond75, !dbg !5522

for.cond75:                                       ; preds = %for.inc140, %cond.end
  %57 = load i32, i32* %p, align 4, !dbg !5523
  %58 = load i32, i32* %e, align 4, !dbg !5526
  %add76 = add nsw i32 %58, 1, !dbg !5527
  %idxprom77 = sext i32 %add76 to i64, !dbg !5528
  %59 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5528
  %bs_freq_res78 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %59, i32 0, i32 3, !dbg !5529
  %arrayidx79 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res78, i64 0, i64 %idxprom77, !dbg !5528
  %60 = load i8, i8* %arrayidx79, align 1, !dbg !5528
  %idxprom80 = zext i8 %60 to i64, !dbg !5530
  %61 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5530
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %61, i32 0, i32 19, !dbg !5531
  %arrayidx81 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 %idxprom80, !dbg !5530
  %62 = load i32, i32* %arrayidx81, align 4, !dbg !5530
  %cmp82 = icmp ult i32 %57, %62, !dbg !5532
  br i1 %cmp82, label %for.body84, label %for.end142, !dbg !5533

for.body84:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata float* %sum85, metadata !5534, metadata !2753), !dbg !5536
  store float 0.000000e+00, float* %sum85, align 4, !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %den, metadata !5537, metadata !2753), !dbg !5538
  %63 = load i32, i32* %env_size, align 4, !dbg !5539
  %64 = load i32, i32* %p, align 4, !dbg !5540
  %add86 = add nsw i32 %64, 1, !dbg !5541
  %idxprom87 = sext i32 %add86 to i64, !dbg !5542
  %65 = load i16*, i16** %table, align 8, !dbg !5542
  %arrayidx88 = getelementptr inbounds i16, i16* %65, i64 %idxprom87, !dbg !5542
  %66 = load i16, i16* %arrayidx88, align 2, !dbg !5542
  %conv89 = zext i16 %66 to i32, !dbg !5542
  %67 = load i32, i32* %p, align 4, !dbg !5543
  %idxprom90 = sext i32 %67 to i64, !dbg !5544
  %68 = load i16*, i16** %table, align 8, !dbg !5544
  %arrayidx91 = getelementptr inbounds i16, i16* %68, i64 %idxprom90, !dbg !5544
  %69 = load i16, i16* %arrayidx91, align 2, !dbg !5544
  %conv92 = zext i16 %69 to i32, !dbg !5544
  %sub93 = sub nsw i32 %conv89, %conv92, !dbg !5545
  %mul94 = mul nsw i32 %63, %sub93, !dbg !5546
  store i32 %mul94, i32* %den, align 4, !dbg !5538
  %70 = load i32, i32* %p, align 4, !dbg !5547
  %idxprom95 = sext i32 %70 to i64, !dbg !5549
  %71 = load i16*, i16** %table, align 8, !dbg !5549
  %arrayidx96 = getelementptr inbounds i16, i16* %71, i64 %idxprom95, !dbg !5549
  %72 = load i16, i16* %arrayidx96, align 2, !dbg !5549
  %conv97 = zext i16 %72 to i32, !dbg !5549
  store i32 %conv97, i32* %k, align 4, !dbg !5550
  br label %for.cond98, !dbg !5551

for.cond98:                                       ; preds = %for.inc116, %for.body84
  %73 = load i32, i32* %k, align 4, !dbg !5552
  %74 = load i32, i32* %p, align 4, !dbg !5555
  %add99 = add nsw i32 %74, 1, !dbg !5556
  %idxprom100 = sext i32 %add99 to i64, !dbg !5557
  %75 = load i16*, i16** %table, align 8, !dbg !5557
  %arrayidx101 = getelementptr inbounds i16, i16* %75, i64 %idxprom100, !dbg !5557
  %76 = load i16, i16* %arrayidx101, align 2, !dbg !5557
  %conv102 = zext i16 %76 to i32, !dbg !5557
  %cmp103 = icmp slt i32 %73, %conv102, !dbg !5558
  br i1 %cmp103, label %for.body105, label %for.end118, !dbg !5559

for.body105:                                      ; preds = %for.cond98
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5560
  %dsp106 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 46, !dbg !5562
  %sum_square107 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp106, i32 0, i32 1, !dbg !5563
  %78 = load float ([2 x float]*, i32)*, float ([2 x float]*, i32)** %sum_square107, align 8, !dbg !5563
  %79 = load i32, i32* %k, align 4, !dbg !5564
  %idxprom108 = sext i32 %79 to i64, !dbg !5565
  %80 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_high.addr, align 8, !dbg !5565
  %arrayidx109 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %80, i64 %idxprom108, !dbg !5565
  %arraydecay110 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx109, i32 0, i32 0, !dbg !5565
  %81 = load i32, i32* %ilb53, align 4, !dbg !5566
  %idx.ext111 = sext i32 %81 to i64, !dbg !5567
  %add.ptr112 = getelementptr inbounds [2 x float], [2 x float]* %arraydecay110, i64 %idx.ext111, !dbg !5567
  %82 = load i32, i32* %iub60, align 4, !dbg !5568
  %83 = load i32, i32* %ilb53, align 4, !dbg !5569
  %sub113 = sub nsw i32 %82, %83, !dbg !5570
  %call114 = call float %78([2 x float]* %add.ptr112, i32 %sub113), !dbg !5560
  %84 = load float, float* %sum85, align 4, !dbg !5571
  %add115 = fadd float %84, %call114, !dbg !5571
  store float %add115, float* %sum85, align 4, !dbg !5571
  br label %for.inc116, !dbg !5572

for.inc116:                                       ; preds = %for.body105
  %85 = load i32, i32* %k, align 4, !dbg !5573
  %inc117 = add nsw i32 %85, 1, !dbg !5573
  store i32 %inc117, i32* %k, align 4, !dbg !5573
  br label %for.cond98, !dbg !5575, !llvm.loop !5576

for.end118:                                       ; preds = %for.cond98
  %86 = load i32, i32* %den, align 4, !dbg !5578
  %conv119 = sitofp i32 %86 to float, !dbg !5578
  %87 = load float, float* %sum85, align 4, !dbg !5579
  %div120 = fdiv float %87, %conv119, !dbg !5579
  store float %div120, float* %sum85, align 4, !dbg !5579
  %88 = load i32, i32* %p, align 4, !dbg !5580
  %idxprom121 = sext i32 %88 to i64, !dbg !5582
  %89 = load i16*, i16** %table, align 8, !dbg !5582
  %arrayidx122 = getelementptr inbounds i16, i16* %89, i64 %idxprom121, !dbg !5582
  %90 = load i16, i16* %arrayidx122, align 2, !dbg !5582
  %conv123 = zext i16 %90 to i32, !dbg !5582
  store i32 %conv123, i32* %k, align 4, !dbg !5583
  br label %for.cond124, !dbg !5584

for.cond124:                                      ; preds = %for.inc137, %for.end118
  %91 = load i32, i32* %k, align 4, !dbg !5585
  %92 = load i32, i32* %p, align 4, !dbg !5588
  %add125 = add nsw i32 %92, 1, !dbg !5589
  %idxprom126 = sext i32 %add125 to i64, !dbg !5590
  %93 = load i16*, i16** %table, align 8, !dbg !5590
  %arrayidx127 = getelementptr inbounds i16, i16* %93, i64 %idxprom126, !dbg !5590
  %94 = load i16, i16* %arrayidx127, align 2, !dbg !5590
  %conv128 = zext i16 %94 to i32, !dbg !5590
  %cmp129 = icmp slt i32 %91, %conv128, !dbg !5591
  br i1 %cmp129, label %for.body131, label %for.end139, !dbg !5592

for.body131:                                      ; preds = %for.cond124
  %95 = load float, float* %sum85, align 4, !dbg !5593
  %96 = load i32, i32* %k, align 4, !dbg !5595
  %97 = load i32, i32* %kx1, align 4, !dbg !5596
  %sub132 = sub nsw i32 %96, %97, !dbg !5597
  %idxprom133 = sext i32 %sub132 to i64, !dbg !5598
  %98 = load i32, i32* %e, align 4, !dbg !5599
  %idxprom134 = sext i32 %98 to i64, !dbg !5598
  %99 = load [48 x float]*, [48 x float]** %e_curr.addr, align 8, !dbg !5598
  %arrayidx135 = getelementptr inbounds [48 x float], [48 x float]* %99, i64 %idxprom134, !dbg !5598
  %arrayidx136 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx135, i64 0, i64 %idxprom133, !dbg !5598
  store float %95, float* %arrayidx136, align 4, !dbg !5600
  br label %for.inc137, !dbg !5601

for.inc137:                                       ; preds = %for.body131
  %100 = load i32, i32* %k, align 4, !dbg !5602
  %inc138 = add nsw i32 %100, 1, !dbg !5602
  store i32 %inc138, i32* %k, align 4, !dbg !5602
  br label %for.cond124, !dbg !5604, !llvm.loop !5605

for.end139:                                       ; preds = %for.cond124
  br label %for.inc140, !dbg !5607

for.inc140:                                       ; preds = %for.end139
  %101 = load i32, i32* %p, align 4, !dbg !5608
  %inc141 = add nsw i32 %101, 1, !dbg !5608
  store i32 %inc141, i32* %p, align 4, !dbg !5608
  br label %for.cond75, !dbg !5610, !llvm.loop !5611

for.end142:                                       ; preds = %for.cond75
  br label %for.inc143, !dbg !5613

for.inc143:                                       ; preds = %for.end142
  %102 = load i32, i32* %e, align 4, !dbg !5614
  %inc144 = add nsw i32 %102, 1, !dbg !5614
  store i32 %inc144, i32* %e, align 4, !dbg !5614
  br label %for.cond37, !dbg !5616, !llvm.loop !5617

for.end145:                                       ; preds = %for.cond37
  br label %if.end

if.end:                                           ; preds = %for.end145, %for.end36
  ret void, !dbg !5619
}

; Function Attrs: nounwind uwtable
define internal void @sbr_gain_calc(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !2583 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %delta = alloca i32, align 4
  %gain_boost = alloca float, align 4
  %gain_max = alloca float, align 4
  %sum = alloca [2 x float], align 4
  %temp = alloca float, align 4
  %q_m_max = alloca float, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !5620, metadata !2753), !dbg !5621
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !5622, metadata !2753), !dbg !5623
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !5624, metadata !2753), !dbg !5625
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !5626, metadata !2753), !dbg !5627
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5628, metadata !2753), !dbg !5629
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5630, metadata !2753), !dbg !5631
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5632, metadata !2753), !dbg !5633
  store i32 0, i32* %e, align 4, !dbg !5634
  br label %for.cond, !dbg !5636

for.cond:                                         ; preds = %for.inc380, %entry
  %0 = load i32, i32* %e, align 4, !dbg !5637
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5640
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 2, !dbg !5641
  %2 = load i32, i32* %bs_num_env, align 8, !dbg !5641
  %cmp = icmp ult i32 %0, %2, !dbg !5642
  br i1 %cmp, label %for.body, label %for.end382, !dbg !5643

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !5644, metadata !2753), !dbg !5646
  %3 = load i32, i32* %e, align 4, !dbg !5647
  %4 = load i32*, i32** %e_a.addr, align 8, !dbg !5648
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 1, !dbg !5648
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5648
  %cmp1 = icmp eq i32 %3, %5, !dbg !5649
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !5650

lor.rhs:                                          ; preds = %for.body
  %6 = load i32, i32* %e, align 4, !dbg !5651
  %7 = load i32*, i32** %e_a.addr, align 8, !dbg !5653
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !5653
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !5653
  %cmp3 = icmp eq i32 %6, %8, !dbg !5654
  br label %lor.end, !dbg !5655

lor.end:                                          ; preds = %lor.rhs, %for.body
  %9 = phi i1 [ true, %for.body ], [ %cmp3, %lor.rhs ]
  %lnot = xor i1 %9, true, !dbg !5656
  %lnot.ext = zext i1 %lnot to i32, !dbg !5656
  store i32 %lnot.ext, i32* %delta, align 4, !dbg !5658
  store i32 0, i32* %k, align 4, !dbg !5659
  br label %for.cond4, !dbg !5661

for.cond4:                                        ; preds = %for.inc377, %lor.end
  %10 = load i32, i32* %k, align 4, !dbg !5662
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5665
  %n_lim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 21, !dbg !5666
  %12 = load i32, i32* %n_lim, align 4, !dbg !5666
  %cmp5 = icmp ult i32 %10, %12, !dbg !5667
  br i1 %cmp5, label %for.body6, label %for.end379, !dbg !5668

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata float* %gain_boost, metadata !5669, metadata !2753), !dbg !5671
  call void @llvm.dbg.declare(metadata float* %gain_max, metadata !5672, metadata !2753), !dbg !5673
  call void @llvm.dbg.declare(metadata [2 x float]* %sum, metadata !5674, metadata !2753), !dbg !5676
  %13 = bitcast [2 x float]* %sum to i8*, !dbg !5676
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 8, i32 4, i1 false), !dbg !5676
  %14 = load i32, i32* %k, align 4, !dbg !5677
  %idxprom = sext i32 %14 to i64, !dbg !5679
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5679
  %f_tablelim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 26, !dbg !5680
  %arrayidx7 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim, i64 0, i64 %idxprom, !dbg !5679
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !5679
  %conv = zext i16 %16 to i32, !dbg !5679
  %17 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5681
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %17, i32 0, i32 13, !dbg !5682
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !5681
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !5681
  %sub = sub i32 %conv, %18, !dbg !5683
  store i32 %sub, i32* %m, align 4, !dbg !5684
  br label %for.cond9, !dbg !5685

for.cond9:                                        ; preds = %for.inc, %for.body6
  %19 = load i32, i32* %m, align 4, !dbg !5686
  %20 = load i32, i32* %k, align 4, !dbg !5689
  %add = add nsw i32 %20, 1, !dbg !5690
  %idxprom10 = sext i32 %add to i64, !dbg !5691
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5691
  %f_tablelim11 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 26, !dbg !5692
  %arrayidx12 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim11, i64 0, i64 %idxprom10, !dbg !5691
  %22 = load i16, i16* %arrayidx12, align 2, !dbg !5691
  %conv13 = zext i16 %22 to i32, !dbg !5691
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5693
  %kx14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 13, !dbg !5694
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %kx14, i64 0, i64 1, !dbg !5693
  %24 = load i32, i32* %arrayidx15, align 4, !dbg !5693
  %sub16 = sub i32 %conv13, %24, !dbg !5695
  %cmp17 = icmp ult i32 %19, %sub16, !dbg !5696
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !5697

for.body19:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata float* %temp, metadata !5698, metadata !2753), !dbg !5700
  %25 = load i32, i32* %m, align 4, !dbg !5701
  %idxprom20 = sext i32 %25 to i64, !dbg !5702
  %26 = load i32, i32* %e, align 4, !dbg !5703
  %idxprom21 = sext i32 %26 to i64, !dbg !5702
  %27 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5702
  %e_origmapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %27, i32 0, i32 35, !dbg !5704
  %arrayidx22 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped, i64 0, i64 %idxprom21, !dbg !5702
  %arrayidx23 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !5702
  %28 = load float, float* %arrayidx23, align 4, !dbg !5702
  %29 = load i32, i32* %m, align 4, !dbg !5705
  %idxprom24 = sext i32 %29 to i64, !dbg !5706
  %30 = load i32, i32* %e, align 4, !dbg !5707
  %idxprom25 = sext i32 %30 to i64, !dbg !5706
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5706
  %q_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 36, !dbg !5708
  %arrayidx26 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped, i64 0, i64 %idxprom25, !dbg !5706
  %arrayidx27 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx26, i64 0, i64 %idxprom24, !dbg !5706
  %32 = load float, float* %arrayidx27, align 4, !dbg !5706
  %add28 = fadd float 1.000000e+00, %32, !dbg !5709
  %div = fdiv float %28, %add28, !dbg !5710
  store float %div, float* %temp, align 4, !dbg !5700
  %33 = load float, float* %temp, align 4, !dbg !5711
  %34 = load i32, i32* %m, align 4, !dbg !5712
  %idxprom29 = sext i32 %34 to i64, !dbg !5713
  %35 = load i32, i32* %e, align 4, !dbg !5714
  %idxprom30 = sext i32 %35 to i64, !dbg !5713
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5713
  %q_mapped31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 36, !dbg !5715
  %arrayidx32 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped31, i64 0, i64 %idxprom30, !dbg !5713
  %arrayidx33 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5713
  %37 = load float, float* %arrayidx33, align 4, !dbg !5713
  %mul = fmul float %33, %37, !dbg !5716
  %call = call float @sqrtf(float %mul) #11, !dbg !5717
  %38 = load i32, i32* %m, align 4, !dbg !5718
  %idxprom34 = sext i32 %38 to i64, !dbg !5719
  %39 = load i32, i32* %e, align 4, !dbg !5720
  %idxprom35 = sext i32 %39 to i64, !dbg !5719
  %40 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5719
  %q_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %40, i32 0, i32 39, !dbg !5721
  %arrayidx36 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m, i64 0, i64 %idxprom35, !dbg !5719
  %arrayidx37 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx36, i64 0, i64 %idxprom34, !dbg !5719
  store float %call, float* %arrayidx37, align 4, !dbg !5722
  %41 = load float, float* %temp, align 4, !dbg !5723
  %42 = load i32, i32* %m, align 4, !dbg !5724
  %idxprom38 = sext i32 %42 to i64, !dbg !5725
  %43 = load i32, i32* %e, align 4, !dbg !5726
  %add39 = add nsw i32 %43, 1, !dbg !5727
  %idxprom40 = sext i32 %add39 to i64, !dbg !5725
  %44 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !5725
  %s_indexmapped = getelementptr inbounds %struct.SBRData, %struct.SBRData* %44, i32 0, i32 21, !dbg !5728
  %arrayidx41 = getelementptr inbounds [8 x [48 x i8]], [8 x [48 x i8]]* %s_indexmapped, i64 0, i64 %idxprom40, !dbg !5725
  %arrayidx42 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx41, i64 0, i64 %idxprom38, !dbg !5725
  %45 = load i8, i8* %arrayidx42, align 1, !dbg !5725
  %conv43 = zext i8 %45 to i32, !dbg !5725
  %conv44 = sitofp i32 %conv43 to float, !dbg !5725
  %mul45 = fmul float %41, %conv44, !dbg !5729
  %call46 = call float @sqrtf(float %mul45) #11, !dbg !5730
  %46 = load i32, i32* %m, align 4, !dbg !5731
  %idxprom47 = sext i32 %46 to i64, !dbg !5732
  %47 = load i32, i32* %e, align 4, !dbg !5733
  %idxprom48 = sext i32 %47 to i64, !dbg !5732
  %48 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5732
  %s_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %48, i32 0, i32 40, !dbg !5734
  %arrayidx49 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m, i64 0, i64 %idxprom48, !dbg !5732
  %arrayidx50 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !5732
  store float %call46, float* %arrayidx50, align 4, !dbg !5735
  %49 = load i32, i32* %m, align 4, !dbg !5736
  %idxprom51 = sext i32 %49 to i64, !dbg !5738
  %50 = load i32, i32* %e, align 4, !dbg !5739
  %idxprom52 = sext i32 %50 to i64, !dbg !5738
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5738
  %s_mapped = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %51, i32 0, i32 37, !dbg !5740
  %arrayidx53 = getelementptr inbounds [7 x [48 x i8]], [7 x [48 x i8]]* %s_mapped, i64 0, i64 %idxprom52, !dbg !5738
  %arrayidx54 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !5738
  %52 = load i8, i8* %arrayidx54, align 1, !dbg !5738
  %tobool = icmp ne i8 %52, 0, !dbg !5738
  br i1 %tobool, label %if.else, label %if.then, !dbg !5741

if.then:                                          ; preds = %for.body19
  %53 = load i32, i32* %m, align 4, !dbg !5742
  %idxprom55 = sext i32 %53 to i64, !dbg !5744
  %54 = load i32, i32* %e, align 4, !dbg !5745
  %idxprom56 = sext i32 %54 to i64, !dbg !5744
  %55 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5744
  %e_origmapped57 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %55, i32 0, i32 35, !dbg !5746
  %arrayidx58 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped57, i64 0, i64 %idxprom56, !dbg !5744
  %arrayidx59 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx58, i64 0, i64 %idxprom55, !dbg !5744
  %56 = load float, float* %arrayidx59, align 4, !dbg !5744
  %57 = load i32, i32* %m, align 4, !dbg !5747
  %idxprom60 = sext i32 %57 to i64, !dbg !5748
  %58 = load i32, i32* %e, align 4, !dbg !5749
  %idxprom61 = sext i32 %58 to i64, !dbg !5748
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5748
  %e_curr = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 38, !dbg !5750
  %arrayidx62 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_curr, i64 0, i64 %idxprom61, !dbg !5748
  %arrayidx63 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx62, i64 0, i64 %idxprom60, !dbg !5748
  %60 = load float, float* %arrayidx63, align 4, !dbg !5748
  %add64 = fadd float 1.000000e+00, %60, !dbg !5751
  %61 = load i32, i32* %m, align 4, !dbg !5752
  %idxprom65 = sext i32 %61 to i64, !dbg !5753
  %62 = load i32, i32* %e, align 4, !dbg !5754
  %idxprom66 = sext i32 %62 to i64, !dbg !5753
  %63 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5753
  %q_mapped67 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %63, i32 0, i32 36, !dbg !5755
  %arrayidx68 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped67, i64 0, i64 %idxprom66, !dbg !5753
  %arrayidx69 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx68, i64 0, i64 %idxprom65, !dbg !5753
  %64 = load float, float* %arrayidx69, align 4, !dbg !5753
  %65 = load i32, i32* %delta, align 4, !dbg !5756
  %conv70 = sitofp i32 %65 to float, !dbg !5756
  %mul71 = fmul float %64, %conv70, !dbg !5757
  %add72 = fadd float 1.000000e+00, %mul71, !dbg !5758
  %mul73 = fmul float %add64, %add72, !dbg !5759
  %div74 = fdiv float %56, %mul73, !dbg !5760
  %call75 = call float @sqrtf(float %div74) #11, !dbg !5761
  %66 = load i32, i32* %m, align 4, !dbg !5762
  %idxprom76 = sext i32 %66 to i64, !dbg !5763
  %67 = load i32, i32* %e, align 4, !dbg !5764
  %idxprom77 = sext i32 %67 to i64, !dbg !5763
  %68 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5763
  %gain = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %68, i32 0, i32 41, !dbg !5765
  %arrayidx78 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain, i64 0, i64 %idxprom77, !dbg !5763
  %arrayidx79 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx78, i64 0, i64 %idxprom76, !dbg !5763
  store float %call75, float* %arrayidx79, align 4, !dbg !5766
  br label %if.end, !dbg !5767

if.else:                                          ; preds = %for.body19
  %69 = load i32, i32* %m, align 4, !dbg !5768
  %idxprom80 = sext i32 %69 to i64, !dbg !5770
  %70 = load i32, i32* %e, align 4, !dbg !5771
  %idxprom81 = sext i32 %70 to i64, !dbg !5770
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5770
  %e_origmapped82 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 35, !dbg !5772
  %arrayidx83 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped82, i64 0, i64 %idxprom81, !dbg !5770
  %arrayidx84 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx83, i64 0, i64 %idxprom80, !dbg !5770
  %72 = load float, float* %arrayidx84, align 4, !dbg !5770
  %73 = load i32, i32* %m, align 4, !dbg !5773
  %idxprom85 = sext i32 %73 to i64, !dbg !5774
  %74 = load i32, i32* %e, align 4, !dbg !5775
  %idxprom86 = sext i32 %74 to i64, !dbg !5774
  %75 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5774
  %q_mapped87 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %75, i32 0, i32 36, !dbg !5776
  %arrayidx88 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped87, i64 0, i64 %idxprom86, !dbg !5774
  %arrayidx89 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx88, i64 0, i64 %idxprom85, !dbg !5774
  %76 = load float, float* %arrayidx89, align 4, !dbg !5774
  %mul90 = fmul float %72, %76, !dbg !5777
  %77 = load i32, i32* %m, align 4, !dbg !5778
  %idxprom91 = sext i32 %77 to i64, !dbg !5779
  %78 = load i32, i32* %e, align 4, !dbg !5780
  %idxprom92 = sext i32 %78 to i64, !dbg !5779
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5779
  %e_curr93 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %79, i32 0, i32 38, !dbg !5781
  %arrayidx94 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_curr93, i64 0, i64 %idxprom92, !dbg !5779
  %arrayidx95 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx94, i64 0, i64 %idxprom91, !dbg !5779
  %80 = load float, float* %arrayidx95, align 4, !dbg !5779
  %add96 = fadd float 1.000000e+00, %80, !dbg !5782
  %81 = load i32, i32* %m, align 4, !dbg !5783
  %idxprom97 = sext i32 %81 to i64, !dbg !5784
  %82 = load i32, i32* %e, align 4, !dbg !5785
  %idxprom98 = sext i32 %82 to i64, !dbg !5784
  %83 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5784
  %q_mapped99 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %83, i32 0, i32 36, !dbg !5786
  %arrayidx100 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_mapped99, i64 0, i64 %idxprom98, !dbg !5784
  %arrayidx101 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx100, i64 0, i64 %idxprom97, !dbg !5784
  %84 = load float, float* %arrayidx101, align 4, !dbg !5784
  %add102 = fadd float 1.000000e+00, %84, !dbg !5787
  %mul103 = fmul float %add96, %add102, !dbg !5788
  %div104 = fdiv float %mul90, %mul103, !dbg !5789
  %call105 = call float @sqrtf(float %div104) #11, !dbg !5790
  %85 = load i32, i32* %m, align 4, !dbg !5791
  %idxprom106 = sext i32 %85 to i64, !dbg !5792
  %86 = load i32, i32* %e, align 4, !dbg !5793
  %idxprom107 = sext i32 %86 to i64, !dbg !5792
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5792
  %gain108 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 41, !dbg !5794
  %arrayidx109 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain108, i64 0, i64 %idxprom107, !dbg !5792
  %arrayidx110 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx109, i64 0, i64 %idxprom106, !dbg !5792
  store float %call105, float* %arrayidx110, align 4, !dbg !5795
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %88 = load i32, i32* %m, align 4, !dbg !5796
  %idxprom111 = sext i32 %88 to i64, !dbg !5797
  %89 = load i32, i32* %e, align 4, !dbg !5798
  %idxprom112 = sext i32 %89 to i64, !dbg !5797
  %90 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5797
  %gain113 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %90, i32 0, i32 41, !dbg !5799
  %arrayidx114 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain113, i64 0, i64 %idxprom112, !dbg !5797
  %arrayidx115 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx114, i64 0, i64 %idxprom111, !dbg !5797
  %91 = load float, float* %arrayidx115, align 4, !dbg !5800
  %add116 = fadd float %91, 0x3810000000000000, !dbg !5800
  store float %add116, float* %arrayidx115, align 4, !dbg !5800
  br label %for.inc, !dbg !5801

for.inc:                                          ; preds = %if.end
  %92 = load i32, i32* %m, align 4, !dbg !5802
  %inc = add nsw i32 %92, 1, !dbg !5802
  store i32 %inc, i32* %m, align 4, !dbg !5802
  br label %for.cond9, !dbg !5804, !llvm.loop !5805

for.end:                                          ; preds = %for.cond9
  %93 = load i32, i32* %k, align 4, !dbg !5807
  %idxprom117 = sext i32 %93 to i64, !dbg !5809
  %94 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5809
  %f_tablelim118 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %94, i32 0, i32 26, !dbg !5810
  %arrayidx119 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim118, i64 0, i64 %idxprom117, !dbg !5809
  %95 = load i16, i16* %arrayidx119, align 2, !dbg !5809
  %conv120 = zext i16 %95 to i32, !dbg !5809
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5811
  %kx121 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 13, !dbg !5812
  %arrayidx122 = getelementptr inbounds [2 x i32], [2 x i32]* %kx121, i64 0, i64 1, !dbg !5811
  %97 = load i32, i32* %arrayidx122, align 4, !dbg !5811
  %sub123 = sub i32 %conv120, %97, !dbg !5813
  store i32 %sub123, i32* %m, align 4, !dbg !5814
  br label %for.cond124, !dbg !5815

for.cond124:                                      ; preds = %for.inc150, %for.end
  %98 = load i32, i32* %m, align 4, !dbg !5816
  %99 = load i32, i32* %k, align 4, !dbg !5819
  %add125 = add nsw i32 %99, 1, !dbg !5820
  %idxprom126 = sext i32 %add125 to i64, !dbg !5821
  %100 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5821
  %f_tablelim127 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %100, i32 0, i32 26, !dbg !5822
  %arrayidx128 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim127, i64 0, i64 %idxprom126, !dbg !5821
  %101 = load i16, i16* %arrayidx128, align 2, !dbg !5821
  %conv129 = zext i16 %101 to i32, !dbg !5821
  %102 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5823
  %kx130 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %102, i32 0, i32 13, !dbg !5824
  %arrayidx131 = getelementptr inbounds [2 x i32], [2 x i32]* %kx130, i64 0, i64 1, !dbg !5823
  %103 = load i32, i32* %arrayidx131, align 4, !dbg !5823
  %sub132 = sub i32 %conv129, %103, !dbg !5825
  %cmp133 = icmp ult i32 %98, %sub132, !dbg !5826
  br i1 %cmp133, label %for.body135, label %for.end152, !dbg !5827

for.body135:                                      ; preds = %for.cond124
  %104 = load i32, i32* %m, align 4, !dbg !5828
  %idxprom136 = sext i32 %104 to i64, !dbg !5830
  %105 = load i32, i32* %e, align 4, !dbg !5831
  %idxprom137 = sext i32 %105 to i64, !dbg !5830
  %106 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5830
  %e_origmapped138 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %106, i32 0, i32 35, !dbg !5832
  %arrayidx139 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped138, i64 0, i64 %idxprom137, !dbg !5830
  %arrayidx140 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx139, i64 0, i64 %idxprom136, !dbg !5830
  %107 = load float, float* %arrayidx140, align 4, !dbg !5830
  %arrayidx141 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 0, !dbg !5833
  %108 = load float, float* %arrayidx141, align 4, !dbg !5834
  %add142 = fadd float %108, %107, !dbg !5834
  store float %add142, float* %arrayidx141, align 4, !dbg !5834
  %109 = load i32, i32* %m, align 4, !dbg !5835
  %idxprom143 = sext i32 %109 to i64, !dbg !5836
  %110 = load i32, i32* %e, align 4, !dbg !5837
  %idxprom144 = sext i32 %110 to i64, !dbg !5836
  %111 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5836
  %e_curr145 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %111, i32 0, i32 38, !dbg !5838
  %arrayidx146 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_curr145, i64 0, i64 %idxprom144, !dbg !5836
  %arrayidx147 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx146, i64 0, i64 %idxprom143, !dbg !5836
  %112 = load float, float* %arrayidx147, align 4, !dbg !5836
  %arrayidx148 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 1, !dbg !5839
  %113 = load float, float* %arrayidx148, align 4, !dbg !5840
  %add149 = fadd float %113, %112, !dbg !5840
  store float %add149, float* %arrayidx148, align 4, !dbg !5840
  br label %for.inc150, !dbg !5841

for.inc150:                                       ; preds = %for.body135
  %114 = load i32, i32* %m, align 4, !dbg !5842
  %inc151 = add nsw i32 %114, 1, !dbg !5842
  store i32 %inc151, i32* %m, align 4, !dbg !5842
  br label %for.cond124, !dbg !5844, !llvm.loop !5845

for.end152:                                       ; preds = %for.cond124
  %115 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5847
  %bs_limiter_gains = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %115, i32 0, i32 8, !dbg !5848
  %116 = load i32, i32* %bs_limiter_gains, align 4, !dbg !5848
  %idxprom153 = zext i32 %116 to i64, !dbg !5849
  %arrayidx154 = getelementptr inbounds [4 x float], [4 x float]* @sbr_gain_calc.limgain, i64 0, i64 %idxprom153, !dbg !5849
  %117 = load float, float* %arrayidx154, align 4, !dbg !5849
  %arrayidx155 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 0, !dbg !5850
  %118 = load float, float* %arrayidx155, align 4, !dbg !5850
  %add156 = fadd float 0x3E80000000000000, %118, !dbg !5851
  %arrayidx157 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 1, !dbg !5852
  %119 = load float, float* %arrayidx157, align 4, !dbg !5852
  %add158 = fadd float 0x3E80000000000000, %119, !dbg !5853
  %div159 = fdiv float %add156, %add158, !dbg !5854
  %call160 = call float @sqrtf(float %div159) #11, !dbg !5855
  %mul161 = fmul float %117, %call160, !dbg !5856
  store float %mul161, float* %gain_max, align 4, !dbg !5857
  %120 = load float, float* %gain_max, align 4, !dbg !5858
  %cmp162 = fcmp ogt float 1.000000e+05, %120, !dbg !5859
  br i1 %cmp162, label %cond.true, label %cond.false, !dbg !5860

cond.true:                                        ; preds = %for.end152
  %121 = load float, float* %gain_max, align 4, !dbg !5861
  br label %cond.end, !dbg !5863

cond.false:                                       ; preds = %for.end152
  br label %cond.end, !dbg !5864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %121, %cond.true ], [ 1.000000e+05, %cond.false ], !dbg !5866
  store float %cond, float* %gain_max, align 4, !dbg !5868
  %122 = load i32, i32* %k, align 4, !dbg !5869
  %idxprom164 = sext i32 %122 to i64, !dbg !5871
  %123 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5871
  %f_tablelim165 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %123, i32 0, i32 26, !dbg !5872
  %arrayidx166 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim165, i64 0, i64 %idxprom164, !dbg !5871
  %124 = load i16, i16* %arrayidx166, align 2, !dbg !5871
  %conv167 = zext i16 %124 to i32, !dbg !5871
  %125 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5873
  %kx168 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %125, i32 0, i32 13, !dbg !5874
  %arrayidx169 = getelementptr inbounds [2 x i32], [2 x i32]* %kx168, i64 0, i64 1, !dbg !5873
  %126 = load i32, i32* %arrayidx169, align 4, !dbg !5873
  %sub170 = sub i32 %conv167, %126, !dbg !5875
  store i32 %sub170, i32* %m, align 4, !dbg !5876
  br label %for.cond171, !dbg !5877

for.cond171:                                      ; preds = %for.inc237, %cond.end
  %127 = load i32, i32* %m, align 4, !dbg !5878
  %128 = load i32, i32* %k, align 4, !dbg !5881
  %add172 = add nsw i32 %128, 1, !dbg !5882
  %idxprom173 = sext i32 %add172 to i64, !dbg !5883
  %129 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5883
  %f_tablelim174 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %129, i32 0, i32 26, !dbg !5884
  %arrayidx175 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim174, i64 0, i64 %idxprom173, !dbg !5883
  %130 = load i16, i16* %arrayidx175, align 2, !dbg !5883
  %conv176 = zext i16 %130 to i32, !dbg !5883
  %131 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5885
  %kx177 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %131, i32 0, i32 13, !dbg !5886
  %arrayidx178 = getelementptr inbounds [2 x i32], [2 x i32]* %kx177, i64 0, i64 1, !dbg !5885
  %132 = load i32, i32* %arrayidx178, align 4, !dbg !5885
  %sub179 = sub i32 %conv176, %132, !dbg !5887
  %cmp180 = icmp ult i32 %127, %sub179, !dbg !5888
  br i1 %cmp180, label %for.body182, label %for.end239, !dbg !5889

for.body182:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata float* %q_m_max, metadata !5890, metadata !2753), !dbg !5892
  %133 = load i32, i32* %m, align 4, !dbg !5893
  %idxprom183 = sext i32 %133 to i64, !dbg !5894
  %134 = load i32, i32* %e, align 4, !dbg !5895
  %idxprom184 = sext i32 %134 to i64, !dbg !5894
  %135 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5894
  %q_m185 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %135, i32 0, i32 39, !dbg !5896
  %arrayidx186 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m185, i64 0, i64 %idxprom184, !dbg !5894
  %arrayidx187 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx186, i64 0, i64 %idxprom183, !dbg !5894
  %136 = load float, float* %arrayidx187, align 4, !dbg !5894
  %137 = load float, float* %gain_max, align 4, !dbg !5897
  %mul188 = fmul float %136, %137, !dbg !5898
  %138 = load i32, i32* %m, align 4, !dbg !5899
  %idxprom189 = sext i32 %138 to i64, !dbg !5900
  %139 = load i32, i32* %e, align 4, !dbg !5901
  %idxprom190 = sext i32 %139 to i64, !dbg !5900
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5900
  %gain191 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 41, !dbg !5902
  %arrayidx192 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain191, i64 0, i64 %idxprom190, !dbg !5900
  %arrayidx193 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx192, i64 0, i64 %idxprom189, !dbg !5900
  %141 = load float, float* %arrayidx193, align 4, !dbg !5900
  %div194 = fdiv float %mul188, %141, !dbg !5903
  store float %div194, float* %q_m_max, align 4, !dbg !5892
  %142 = load i32, i32* %m, align 4, !dbg !5904
  %idxprom195 = sext i32 %142 to i64, !dbg !5905
  %143 = load i32, i32* %e, align 4, !dbg !5906
  %idxprom196 = sext i32 %143 to i64, !dbg !5905
  %144 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5905
  %q_m197 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %144, i32 0, i32 39, !dbg !5907
  %arrayidx198 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m197, i64 0, i64 %idxprom196, !dbg !5905
  %arrayidx199 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx198, i64 0, i64 %idxprom195, !dbg !5905
  %145 = load float, float* %arrayidx199, align 4, !dbg !5905
  %146 = load float, float* %q_m_max, align 4, !dbg !5908
  %cmp200 = fcmp ogt float %145, %146, !dbg !5909
  br i1 %cmp200, label %cond.true202, label %cond.false203, !dbg !5910

cond.true202:                                     ; preds = %for.body182
  %147 = load float, float* %q_m_max, align 4, !dbg !5911
  br label %cond.end209, !dbg !5913

cond.false203:                                    ; preds = %for.body182
  %148 = load i32, i32* %m, align 4, !dbg !5914
  %idxprom204 = sext i32 %148 to i64, !dbg !5916
  %149 = load i32, i32* %e, align 4, !dbg !5917
  %idxprom205 = sext i32 %149 to i64, !dbg !5916
  %150 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5916
  %q_m206 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %150, i32 0, i32 39, !dbg !5918
  %arrayidx207 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m206, i64 0, i64 %idxprom205, !dbg !5916
  %arrayidx208 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx207, i64 0, i64 %idxprom204, !dbg !5916
  %151 = load float, float* %arrayidx208, align 4, !dbg !5916
  br label %cond.end209, !dbg !5919

cond.end209:                                      ; preds = %cond.false203, %cond.true202
  %cond210 = phi float [ %147, %cond.true202 ], [ %151, %cond.false203 ], !dbg !5920
  %152 = load i32, i32* %m, align 4, !dbg !5922
  %idxprom211 = sext i32 %152 to i64, !dbg !5923
  %153 = load i32, i32* %e, align 4, !dbg !5924
  %idxprom212 = sext i32 %153 to i64, !dbg !5923
  %154 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5923
  %q_m213 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %154, i32 0, i32 39, !dbg !5925
  %arrayidx214 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m213, i64 0, i64 %idxprom212, !dbg !5923
  %arrayidx215 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx214, i64 0, i64 %idxprom211, !dbg !5923
  store float %cond210, float* %arrayidx215, align 4, !dbg !5926
  %155 = load i32, i32* %m, align 4, !dbg !5927
  %idxprom216 = sext i32 %155 to i64, !dbg !5928
  %156 = load i32, i32* %e, align 4, !dbg !5929
  %idxprom217 = sext i32 %156 to i64, !dbg !5928
  %157 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5928
  %gain218 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %157, i32 0, i32 41, !dbg !5930
  %arrayidx219 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain218, i64 0, i64 %idxprom217, !dbg !5928
  %arrayidx220 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx219, i64 0, i64 %idxprom216, !dbg !5928
  %158 = load float, float* %arrayidx220, align 4, !dbg !5928
  %159 = load float, float* %gain_max, align 4, !dbg !5931
  %cmp221 = fcmp ogt float %158, %159, !dbg !5932
  br i1 %cmp221, label %cond.true223, label %cond.false224, !dbg !5933

cond.true223:                                     ; preds = %cond.end209
  %160 = load float, float* %gain_max, align 4, !dbg !5934
  br label %cond.end230, !dbg !5935

cond.false224:                                    ; preds = %cond.end209
  %161 = load i32, i32* %m, align 4, !dbg !5936
  %idxprom225 = sext i32 %161 to i64, !dbg !5937
  %162 = load i32, i32* %e, align 4, !dbg !5938
  %idxprom226 = sext i32 %162 to i64, !dbg !5937
  %163 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5937
  %gain227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %163, i32 0, i32 41, !dbg !5939
  %arrayidx228 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain227, i64 0, i64 %idxprom226, !dbg !5937
  %arrayidx229 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx228, i64 0, i64 %idxprom225, !dbg !5937
  %164 = load float, float* %arrayidx229, align 4, !dbg !5937
  br label %cond.end230, !dbg !5940

cond.end230:                                      ; preds = %cond.false224, %cond.true223
  %cond231 = phi float [ %160, %cond.true223 ], [ %164, %cond.false224 ], !dbg !5941
  %165 = load i32, i32* %m, align 4, !dbg !5942
  %idxprom232 = sext i32 %165 to i64, !dbg !5943
  %166 = load i32, i32* %e, align 4, !dbg !5944
  %idxprom233 = sext i32 %166 to i64, !dbg !5943
  %167 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5943
  %gain234 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %167, i32 0, i32 41, !dbg !5945
  %arrayidx235 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain234, i64 0, i64 %idxprom233, !dbg !5943
  %arrayidx236 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx235, i64 0, i64 %idxprom232, !dbg !5943
  store float %cond231, float* %arrayidx236, align 4, !dbg !5946
  br label %for.inc237, !dbg !5947

for.inc237:                                       ; preds = %cond.end230
  %168 = load i32, i32* %m, align 4, !dbg !5948
  %inc238 = add nsw i32 %168, 1, !dbg !5948
  store i32 %inc238, i32* %m, align 4, !dbg !5948
  br label %for.cond171, !dbg !5950, !llvm.loop !5951

for.end239:                                       ; preds = %for.cond171
  %arrayidx240 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 1, !dbg !5953
  store float 0.000000e+00, float* %arrayidx240, align 4, !dbg !5954
  %arrayidx241 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 0, !dbg !5955
  store float 0.000000e+00, float* %arrayidx241, align 4, !dbg !5956
  %169 = load i32, i32* %k, align 4, !dbg !5957
  %idxprom242 = sext i32 %169 to i64, !dbg !5959
  %170 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5959
  %f_tablelim243 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %170, i32 0, i32 26, !dbg !5960
  %arrayidx244 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim243, i64 0, i64 %idxprom242, !dbg !5959
  %171 = load i16, i16* %arrayidx244, align 2, !dbg !5959
  %conv245 = zext i16 %171 to i32, !dbg !5959
  %172 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5961
  %kx246 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %172, i32 0, i32 13, !dbg !5962
  %arrayidx247 = getelementptr inbounds [2 x i32], [2 x i32]* %kx246, i64 0, i64 1, !dbg !5961
  %173 = load i32, i32* %arrayidx247, align 4, !dbg !5961
  %sub248 = sub i32 %conv245, %173, !dbg !5963
  store i32 %sub248, i32* %m, align 4, !dbg !5964
  br label %for.cond249, !dbg !5965

for.cond249:                                      ; preds = %for.inc322, %for.end239
  %174 = load i32, i32* %m, align 4, !dbg !5966
  %175 = load i32, i32* %k, align 4, !dbg !5969
  %add250 = add nsw i32 %175, 1, !dbg !5970
  %idxprom251 = sext i32 %add250 to i64, !dbg !5971
  %176 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5971
  %f_tablelim252 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %176, i32 0, i32 26, !dbg !5972
  %arrayidx253 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim252, i64 0, i64 %idxprom251, !dbg !5971
  %177 = load i16, i16* %arrayidx253, align 2, !dbg !5971
  %conv254 = zext i16 %177 to i32, !dbg !5971
  %178 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5973
  %kx255 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %178, i32 0, i32 13, !dbg !5974
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %kx255, i64 0, i64 1, !dbg !5973
  %179 = load i32, i32* %arrayidx256, align 4, !dbg !5973
  %sub257 = sub i32 %conv254, %179, !dbg !5975
  %cmp258 = icmp ult i32 %174, %sub257, !dbg !5976
  br i1 %cmp258, label %for.body260, label %for.end324, !dbg !5977

for.body260:                                      ; preds = %for.cond249
  %180 = load i32, i32* %m, align 4, !dbg !5978
  %idxprom261 = sext i32 %180 to i64, !dbg !5980
  %181 = load i32, i32* %e, align 4, !dbg !5981
  %idxprom262 = sext i32 %181 to i64, !dbg !5980
  %182 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5980
  %e_origmapped263 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %182, i32 0, i32 35, !dbg !5982
  %arrayidx264 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_origmapped263, i64 0, i64 %idxprom262, !dbg !5980
  %arrayidx265 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx264, i64 0, i64 %idxprom261, !dbg !5980
  %183 = load float, float* %arrayidx265, align 4, !dbg !5980
  %arrayidx266 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 0, !dbg !5983
  %184 = load float, float* %arrayidx266, align 4, !dbg !5984
  %add267 = fadd float %184, %183, !dbg !5984
  store float %add267, float* %arrayidx266, align 4, !dbg !5984
  %185 = load i32, i32* %m, align 4, !dbg !5985
  %idxprom268 = sext i32 %185 to i64, !dbg !5986
  %186 = load i32, i32* %e, align 4, !dbg !5987
  %idxprom269 = sext i32 %186 to i64, !dbg !5986
  %187 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5986
  %e_curr270 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %187, i32 0, i32 38, !dbg !5988
  %arrayidx271 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %e_curr270, i64 0, i64 %idxprom269, !dbg !5986
  %arrayidx272 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx271, i64 0, i64 %idxprom268, !dbg !5986
  %188 = load float, float* %arrayidx272, align 4, !dbg !5986
  %189 = load i32, i32* %m, align 4, !dbg !5989
  %idxprom273 = sext i32 %189 to i64, !dbg !5990
  %190 = load i32, i32* %e, align 4, !dbg !5991
  %idxprom274 = sext i32 %190 to i64, !dbg !5990
  %191 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5990
  %gain275 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %191, i32 0, i32 41, !dbg !5992
  %arrayidx276 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain275, i64 0, i64 %idxprom274, !dbg !5990
  %arrayidx277 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx276, i64 0, i64 %idxprom273, !dbg !5990
  %192 = load float, float* %arrayidx277, align 4, !dbg !5990
  %mul278 = fmul float %188, %192, !dbg !5993
  %193 = load i32, i32* %m, align 4, !dbg !5994
  %idxprom279 = sext i32 %193 to i64, !dbg !5995
  %194 = load i32, i32* %e, align 4, !dbg !5996
  %idxprom280 = sext i32 %194 to i64, !dbg !5995
  %195 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !5995
  %gain281 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %195, i32 0, i32 41, !dbg !5997
  %arrayidx282 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain281, i64 0, i64 %idxprom280, !dbg !5995
  %arrayidx283 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx282, i64 0, i64 %idxprom279, !dbg !5995
  %196 = load float, float* %arrayidx283, align 4, !dbg !5995
  %mul284 = fmul float %mul278, %196, !dbg !5998
  %197 = load i32, i32* %m, align 4, !dbg !5999
  %idxprom285 = sext i32 %197 to i64, !dbg !6000
  %198 = load i32, i32* %e, align 4, !dbg !6001
  %idxprom286 = sext i32 %198 to i64, !dbg !6000
  %199 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6000
  %s_m287 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %199, i32 0, i32 40, !dbg !6002
  %arrayidx288 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m287, i64 0, i64 %idxprom286, !dbg !6000
  %arrayidx289 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx288, i64 0, i64 %idxprom285, !dbg !6000
  %200 = load float, float* %arrayidx289, align 4, !dbg !6000
  %201 = load i32, i32* %m, align 4, !dbg !6003
  %idxprom290 = sext i32 %201 to i64, !dbg !6004
  %202 = load i32, i32* %e, align 4, !dbg !6005
  %idxprom291 = sext i32 %202 to i64, !dbg !6004
  %203 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6004
  %s_m292 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %203, i32 0, i32 40, !dbg !6006
  %arrayidx293 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m292, i64 0, i64 %idxprom291, !dbg !6004
  %arrayidx294 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx293, i64 0, i64 %idxprom290, !dbg !6004
  %204 = load float, float* %arrayidx294, align 4, !dbg !6004
  %mul295 = fmul float %200, %204, !dbg !6007
  %add296 = fadd float %mul284, %mul295, !dbg !6008
  %205 = load i32, i32* %delta, align 4, !dbg !6009
  %tobool297 = icmp ne i32 %205, 0, !dbg !6009
  br i1 %tobool297, label %land.rhs, label %land.end, !dbg !6010

land.rhs:                                         ; preds = %for.body260
  %206 = load i32, i32* %m, align 4, !dbg !6011
  %idxprom298 = sext i32 %206 to i64, !dbg !6013
  %207 = load i32, i32* %e, align 4, !dbg !6014
  %idxprom299 = sext i32 %207 to i64, !dbg !6013
  %208 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6013
  %s_m300 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %208, i32 0, i32 40, !dbg !6015
  %arrayidx301 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m300, i64 0, i64 %idxprom299, !dbg !6013
  %arrayidx302 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx301, i64 0, i64 %idxprom298, !dbg !6013
  %209 = load float, float* %arrayidx302, align 4, !dbg !6013
  %tobool303 = fcmp une float %209, 0.000000e+00, !dbg !6016
  %lnot304 = xor i1 %tobool303, true, !dbg !6016
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body260
  %210 = phi i1 [ false, %for.body260 ], [ %lnot304, %land.rhs ]
  %land.ext = zext i1 %210 to i32, !dbg !6017
  %conv306 = sitofp i32 %land.ext to float, !dbg !6019
  %211 = load i32, i32* %m, align 4, !dbg !6020
  %idxprom307 = sext i32 %211 to i64, !dbg !6021
  %212 = load i32, i32* %e, align 4, !dbg !6022
  %idxprom308 = sext i32 %212 to i64, !dbg !6021
  %213 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6021
  %q_m309 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %213, i32 0, i32 39, !dbg !6023
  %arrayidx310 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m309, i64 0, i64 %idxprom308, !dbg !6021
  %arrayidx311 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx310, i64 0, i64 %idxprom307, !dbg !6021
  %214 = load float, float* %arrayidx311, align 4, !dbg !6021
  %mul312 = fmul float %conv306, %214, !dbg !6024
  %215 = load i32, i32* %m, align 4, !dbg !6025
  %idxprom313 = sext i32 %215 to i64, !dbg !6026
  %216 = load i32, i32* %e, align 4, !dbg !6027
  %idxprom314 = sext i32 %216 to i64, !dbg !6026
  %217 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6026
  %q_m315 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %217, i32 0, i32 39, !dbg !6028
  %arrayidx316 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m315, i64 0, i64 %idxprom314, !dbg !6026
  %arrayidx317 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx316, i64 0, i64 %idxprom313, !dbg !6026
  %218 = load float, float* %arrayidx317, align 4, !dbg !6026
  %mul318 = fmul float %mul312, %218, !dbg !6029
  %add319 = fadd float %add296, %mul318, !dbg !6030
  %arrayidx320 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 1, !dbg !6031
  %219 = load float, float* %arrayidx320, align 4, !dbg !6032
  %add321 = fadd float %219, %add319, !dbg !6032
  store float %add321, float* %arrayidx320, align 4, !dbg !6032
  br label %for.inc322, !dbg !6033

for.inc322:                                       ; preds = %land.end
  %220 = load i32, i32* %m, align 4, !dbg !6034
  %inc323 = add nsw i32 %220, 1, !dbg !6034
  store i32 %inc323, i32* %m, align 4, !dbg !6034
  br label %for.cond249, !dbg !6036, !llvm.loop !6037

for.end324:                                       ; preds = %for.cond249
  %arrayidx325 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 0, !dbg !6039
  %221 = load float, float* %arrayidx325, align 4, !dbg !6039
  %add326 = fadd float 0x3E80000000000000, %221, !dbg !6040
  %arrayidx327 = getelementptr inbounds [2 x float], [2 x float]* %sum, i64 0, i64 1, !dbg !6041
  %222 = load float, float* %arrayidx327, align 4, !dbg !6041
  %add328 = fadd float 0x3E80000000000000, %222, !dbg !6042
  %div329 = fdiv float %add326, %add328, !dbg !6043
  %call330 = call float @sqrtf(float %div329) #11, !dbg !6044
  store float %call330, float* %gain_boost, align 4, !dbg !6045
  %223 = load float, float* %gain_boost, align 4, !dbg !6046
  %cmp331 = fcmp ogt float 0x3FF95BB900000000, %223, !dbg !6047
  br i1 %cmp331, label %cond.true333, label %cond.false334, !dbg !6048

cond.true333:                                     ; preds = %for.end324
  %224 = load float, float* %gain_boost, align 4, !dbg !6049
  br label %cond.end335, !dbg !6050

cond.false334:                                    ; preds = %for.end324
  br label %cond.end335, !dbg !6051

cond.end335:                                      ; preds = %cond.false334, %cond.true333
  %cond336 = phi float [ %224, %cond.true333 ], [ 0x3FF95BB900000000, %cond.false334 ], !dbg !6052
  store float %cond336, float* %gain_boost, align 4, !dbg !6053
  %225 = load i32, i32* %k, align 4, !dbg !6054
  %idxprom337 = sext i32 %225 to i64, !dbg !6056
  %226 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6056
  %f_tablelim338 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %226, i32 0, i32 26, !dbg !6057
  %arrayidx339 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim338, i64 0, i64 %idxprom337, !dbg !6056
  %227 = load i16, i16* %arrayidx339, align 2, !dbg !6056
  %conv340 = zext i16 %227 to i32, !dbg !6056
  %228 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6058
  %kx341 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %228, i32 0, i32 13, !dbg !6059
  %arrayidx342 = getelementptr inbounds [2 x i32], [2 x i32]* %kx341, i64 0, i64 1, !dbg !6058
  %229 = load i32, i32* %arrayidx342, align 4, !dbg !6058
  %sub343 = sub i32 %conv340, %229, !dbg !6060
  store i32 %sub343, i32* %m, align 4, !dbg !6061
  br label %for.cond344, !dbg !6062

for.cond344:                                      ; preds = %for.inc374, %cond.end335
  %230 = load i32, i32* %m, align 4, !dbg !6063
  %231 = load i32, i32* %k, align 4, !dbg !6066
  %add345 = add nsw i32 %231, 1, !dbg !6067
  %idxprom346 = sext i32 %add345 to i64, !dbg !6068
  %232 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6068
  %f_tablelim347 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %232, i32 0, i32 26, !dbg !6069
  %arrayidx348 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim347, i64 0, i64 %idxprom346, !dbg !6068
  %233 = load i16, i16* %arrayidx348, align 2, !dbg !6068
  %conv349 = zext i16 %233 to i32, !dbg !6068
  %234 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6070
  %kx350 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %234, i32 0, i32 13, !dbg !6071
  %arrayidx351 = getelementptr inbounds [2 x i32], [2 x i32]* %kx350, i64 0, i64 1, !dbg !6070
  %235 = load i32, i32* %arrayidx351, align 4, !dbg !6070
  %sub352 = sub i32 %conv349, %235, !dbg !6072
  %cmp353 = icmp ult i32 %230, %sub352, !dbg !6073
  br i1 %cmp353, label %for.body355, label %for.end376, !dbg !6074

for.body355:                                      ; preds = %for.cond344
  %236 = load float, float* %gain_boost, align 4, !dbg !6075
  %237 = load i32, i32* %m, align 4, !dbg !6077
  %idxprom356 = sext i32 %237 to i64, !dbg !6078
  %238 = load i32, i32* %e, align 4, !dbg !6079
  %idxprom357 = sext i32 %238 to i64, !dbg !6078
  %239 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6078
  %gain358 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %239, i32 0, i32 41, !dbg !6080
  %arrayidx359 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain358, i64 0, i64 %idxprom357, !dbg !6078
  %arrayidx360 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx359, i64 0, i64 %idxprom356, !dbg !6078
  %240 = load float, float* %arrayidx360, align 4, !dbg !6081
  %mul361 = fmul float %240, %236, !dbg !6081
  store float %mul361, float* %arrayidx360, align 4, !dbg !6081
  %241 = load float, float* %gain_boost, align 4, !dbg !6082
  %242 = load i32, i32* %m, align 4, !dbg !6083
  %idxprom362 = sext i32 %242 to i64, !dbg !6084
  %243 = load i32, i32* %e, align 4, !dbg !6085
  %idxprom363 = sext i32 %243 to i64, !dbg !6084
  %244 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6084
  %q_m364 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %244, i32 0, i32 39, !dbg !6086
  %arrayidx365 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m364, i64 0, i64 %idxprom363, !dbg !6084
  %arrayidx366 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx365, i64 0, i64 %idxprom362, !dbg !6084
  %245 = load float, float* %arrayidx366, align 4, !dbg !6087
  %mul367 = fmul float %245, %241, !dbg !6087
  store float %mul367, float* %arrayidx366, align 4, !dbg !6087
  %246 = load float, float* %gain_boost, align 4, !dbg !6088
  %247 = load i32, i32* %m, align 4, !dbg !6089
  %idxprom368 = sext i32 %247 to i64, !dbg !6090
  %248 = load i32, i32* %e, align 4, !dbg !6091
  %idxprom369 = sext i32 %248 to i64, !dbg !6090
  %249 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6090
  %s_m370 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %249, i32 0, i32 40, !dbg !6092
  %arrayidx371 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m370, i64 0, i64 %idxprom369, !dbg !6090
  %arrayidx372 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx371, i64 0, i64 %idxprom368, !dbg !6090
  %250 = load float, float* %arrayidx372, align 4, !dbg !6093
  %mul373 = fmul float %250, %246, !dbg !6093
  store float %mul373, float* %arrayidx372, align 4, !dbg !6093
  br label %for.inc374, !dbg !6094

for.inc374:                                       ; preds = %for.body355
  %251 = load i32, i32* %m, align 4, !dbg !6095
  %inc375 = add nsw i32 %251, 1, !dbg !6095
  store i32 %inc375, i32* %m, align 4, !dbg !6095
  br label %for.cond344, !dbg !6097, !llvm.loop !6098

for.end376:                                       ; preds = %for.cond344
  br label %for.inc377, !dbg !6100

for.inc377:                                       ; preds = %for.end376
  %252 = load i32, i32* %k, align 4, !dbg !6101
  %inc378 = add nsw i32 %252, 1, !dbg !6101
  store i32 %inc378, i32* %k, align 4, !dbg !6101
  br label %for.cond4, !dbg !6103, !llvm.loop !6104

for.end379:                                       ; preds = %for.cond4
  br label %for.inc380, !dbg !6106

for.inc380:                                       ; preds = %for.end379
  %253 = load i32, i32* %e, align 4, !dbg !6107
  %inc381 = add nsw i32 %253, 1, !dbg !6107
  store i32 %inc381, i32* %e, align 4, !dbg !6107
  br label %for.cond, !dbg !6109, !llvm.loop !6110

for.end382:                                       ; preds = %for.cond
  ret void, !dbg !6112
}

declare i32 @ff_ps_apply(%struct.AVCodecContext*, %struct.PSContext*, [38 x [64 x float]]*, [38 x [64 x float]]*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @sbr_qmf_synthesis(%struct.FFTContext* %mdct, %struct.SBRDSPContext* %sbrdsp, %struct.AVFloatDSPContext* %dsp, float* %out, [38 x [64 x float]]* %X, [64 x float]* %mdct_buf, float* %v0, i32* %v_off, i32 %div) #3 !dbg !6113 {
entry:
  %mdct.addr = alloca %struct.FFTContext*, align 8
  %sbrdsp.addr = alloca %struct.SBRDSPContext*, align 8
  %dsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %out.addr = alloca float*, align 8
  %X.addr = alloca [38 x [64 x float]]*, align 8
  %mdct_buf.addr = alloca [64 x float]*, align 8
  %v0.addr = alloca float*, align 8
  %v_off.addr = alloca i32*, align 8
  %div.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %sbr_qmf_window = alloca float*, align 8
  %step = alloca i32, align 4
  %v = alloca float*, align 8
  %saved_samples = alloca i32, align 4
  store %struct.FFTContext* %mdct, %struct.FFTContext** %mdct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct.addr, metadata !6118, metadata !2753), !dbg !6119
  store %struct.SBRDSPContext* %sbrdsp, %struct.SBRDSPContext** %sbrdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %sbrdsp.addr, metadata !6120, metadata !2753), !dbg !6121
  store %struct.AVFloatDSPContext* %dsp, %struct.AVFloatDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %dsp.addr, metadata !6122, metadata !2753), !dbg !6123
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !6124, metadata !2753), !dbg !6125
  store [38 x [64 x float]]* %X, [38 x [64 x float]]** %X.addr, align 8
  call void @llvm.dbg.declare(metadata [38 x [64 x float]]** %X.addr, metadata !6126, metadata !2753), !dbg !6127
  store [64 x float]* %mdct_buf, [64 x float]** %mdct_buf.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x float]** %mdct_buf.addr, metadata !6128, metadata !2753), !dbg !6129
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !6130, metadata !2753), !dbg !6131
  store i32* %v_off, i32** %v_off.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v_off.addr, metadata !6132, metadata !2753), !dbg !6133
  store i32 %div, i32* %div.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %div.addr, metadata !6134, metadata !2753), !dbg !6135
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6136, metadata !2753), !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6138, metadata !2753), !dbg !6139
  call void @llvm.dbg.declare(metadata float** %sbr_qmf_window, metadata !6140, metadata !2753), !dbg !6141
  %0 = load i32, i32* %div.addr, align 4, !dbg !6142
  %tobool = icmp ne i32 %0, 0, !dbg !6142
  %cond = select i1 %tobool, float* getelementptr inbounds ([320 x float], [320 x float]* @sbr_qmf_window_ds, i32 0, i32 0), float* getelementptr inbounds ([640 x float], [640 x float]* @sbr_qmf_window_us, i32 0, i32 0), !dbg !6142
  store float* %cond, float** %sbr_qmf_window, align 8, !dbg !6141
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6143, metadata !2753), !dbg !6144
  %1 = load i32, i32* %div.addr, align 4, !dbg !6145
  %shr = ashr i32 128, %1, !dbg !6146
  store i32 %shr, i32* %step, align 4, !dbg !6144
  call void @llvm.dbg.declare(metadata float** %v, metadata !6147, metadata !2753), !dbg !6148
  store i32 0, i32* %i, align 4, !dbg !6149
  br label %for.cond, !dbg !6151

for.cond:                                         ; preds = %for.inc140, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6152
  %cmp = icmp slt i32 %2, 32, !dbg !6155
  br i1 %cmp, label %for.body, label %for.end142, !dbg !6156

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %v_off.addr, align 8, !dbg !6157
  %4 = load i32, i32* %3, align 4, !dbg !6160
  %5 = load i32, i32* %step, align 4, !dbg !6161
  %cmp1 = icmp slt i32 %4, %5, !dbg !6162
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6163

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %saved_samples, metadata !6164, metadata !2753), !dbg !6166
  %6 = load i32, i32* %div.addr, align 4, !dbg !6167
  %shr2 = ashr i32 1152, %6, !dbg !6168
  store i32 %shr2, i32* %saved_samples, align 4, !dbg !6166
  %7 = load i32, i32* %saved_samples, align 4, !dbg !6169
  %sub = sub nsw i32 2304, %7, !dbg !6170
  %idxprom = sext i32 %sub to i64, !dbg !6171
  %8 = load float*, float** %v0.addr, align 8, !dbg !6171
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !6171
  %9 = bitcast float* %arrayidx to i8*, !dbg !6172
  %10 = load float*, float** %v0.addr, align 8, !dbg !6173
  %11 = bitcast float* %10 to i8*, !dbg !6172
  %12 = load i32, i32* %saved_samples, align 4, !dbg !6174
  %conv = sext i32 %12 to i64, !dbg !6174
  %mul = mul i64 %conv, 4, !dbg !6175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %11, i64 %mul, i32 4, i1 false), !dbg !6172
  %13 = load i32, i32* %saved_samples, align 4, !dbg !6176
  %sub3 = sub nsw i32 2304, %13, !dbg !6177
  %14 = load i32, i32* %step, align 4, !dbg !6178
  %sub4 = sub nsw i32 %sub3, %14, !dbg !6179
  %15 = load i32*, i32** %v_off.addr, align 8, !dbg !6180
  store i32 %sub4, i32* %15, align 4, !dbg !6181
  br label %if.end, !dbg !6182

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %step, align 4, !dbg !6183
  %17 = load i32*, i32** %v_off.addr, align 8, !dbg !6185
  %18 = load i32, i32* %17, align 4, !dbg !6186
  %sub5 = sub nsw i32 %18, %16, !dbg !6186
  store i32 %sub5, i32* %17, align 4, !dbg !6186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load float*, float** %v0.addr, align 8, !dbg !6187
  %20 = load i32*, i32** %v_off.addr, align 8, !dbg !6188
  %21 = load i32, i32* %20, align 4, !dbg !6189
  %idx.ext = sext i32 %21 to i64, !dbg !6190
  %add.ptr = getelementptr inbounds float, float* %19, i64 %idx.ext, !dbg !6190
  store float* %add.ptr, float** %v, align 8, !dbg !6191
  %22 = load i32, i32* %div.addr, align 4, !dbg !6192
  %tobool6 = icmp ne i32 %22, 0, !dbg !6192
  br i1 %tobool6, label %if.then7, label %if.else41, !dbg !6194

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %n, align 4, !dbg !6195
  br label %for.cond8, !dbg !6198

for.cond8:                                        ; preds = %for.inc, %if.then7
  %23 = load i32, i32* %n, align 4, !dbg !6199
  %cmp9 = icmp slt i32 %23, 32, !dbg !6202
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6203

for.body11:                                       ; preds = %for.cond8
  %24 = load i32, i32* %n, align 4, !dbg !6204
  %idxprom12 = sext i32 %24 to i64, !dbg !6206
  %25 = load i32, i32* %i, align 4, !dbg !6207
  %idxprom13 = sext i32 %25 to i64, !dbg !6206
  %26 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6206
  %arrayidx14 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %26, i64 0, !dbg !6206
  %arrayidx15 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx14, i64 0, i64 %idxprom13, !dbg !6206
  %arrayidx16 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx15, i64 0, i64 %idxprom12, !dbg !6206
  %27 = load float, float* %arrayidx16, align 4, !dbg !6206
  %sub17 = fsub float -0.000000e+00, %27, !dbg !6208
  %28 = load i32, i32* %n, align 4, !dbg !6209
  %idxprom18 = sext i32 %28 to i64, !dbg !6210
  %29 = load i32, i32* %i, align 4, !dbg !6211
  %idxprom19 = sext i32 %29 to i64, !dbg !6210
  %30 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6210
  %arrayidx20 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %30, i64 0, !dbg !6210
  %arrayidx21 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx20, i64 0, i64 %idxprom19, !dbg !6210
  %arrayidx22 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !6210
  store float %sub17, float* %arrayidx22, align 4, !dbg !6212
  %31 = load i32, i32* %n, align 4, !dbg !6213
  %sub23 = sub nsw i32 31, %31, !dbg !6214
  %idxprom24 = sext i32 %sub23 to i64, !dbg !6215
  %32 = load i32, i32* %i, align 4, !dbg !6216
  %idxprom25 = sext i32 %32 to i64, !dbg !6215
  %33 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6215
  %arrayidx26 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %33, i64 1, !dbg !6215
  %arrayidx27 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx26, i64 0, i64 %idxprom25, !dbg !6215
  %arrayidx28 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !6215
  %34 = load float, float* %arrayidx28, align 4, !dbg !6215
  %35 = load i32, i32* %n, align 4, !dbg !6217
  %add = add nsw i32 32, %35, !dbg !6218
  %idxprom29 = sext i32 %add to i64, !dbg !6219
  %36 = load i32, i32* %i, align 4, !dbg !6220
  %idxprom30 = sext i32 %36 to i64, !dbg !6219
  %37 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6219
  %arrayidx31 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %37, i64 0, !dbg !6219
  %arrayidx32 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx31, i64 0, i64 %idxprom30, !dbg !6219
  %arrayidx33 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !6219
  store float %34, float* %arrayidx33, align 4, !dbg !6221
  br label %for.inc, !dbg !6222

for.inc:                                          ; preds = %for.body11
  %38 = load i32, i32* %n, align 4, !dbg !6223
  %inc = add nsw i32 %38, 1, !dbg !6223
  store i32 %inc, i32* %n, align 4, !dbg !6223
  br label %for.cond8, !dbg !6225, !llvm.loop !6226

for.end:                                          ; preds = %for.cond8
  %39 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6228
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %39, i32 0, i32 11, !dbg !6229
  %40 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !6229
  %41 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6230
  %42 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6231
  %arrayidx34 = getelementptr inbounds [64 x float], [64 x float]* %42, i64 0, !dbg !6231
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %arrayidx34, i32 0, i32 0, !dbg !6231
  %43 = load i32, i32* %i, align 4, !dbg !6232
  %idxprom35 = sext i32 %43 to i64, !dbg !6233
  %44 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6233
  %arrayidx36 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %44, i64 0, !dbg !6233
  %arrayidx37 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx36, i64 0, i64 %idxprom35, !dbg !6233
  %arraydecay38 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx37, i32 0, i32 0, !dbg !6233
  call void %40(%struct.FFTContext* %41, float* %arraydecay, float* %arraydecay38), !dbg !6228
  %45 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6234
  %qmf_deint_neg = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %45, i32 0, i32 5, !dbg !6235
  %46 = load void (float*, float*)*, void (float*, float*)** %qmf_deint_neg, align 8, !dbg !6235
  %47 = load float*, float** %v, align 8, !dbg !6236
  %48 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6237
  %arrayidx39 = getelementptr inbounds [64 x float], [64 x float]* %48, i64 0, !dbg !6237
  %arraydecay40 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx39, i32 0, i32 0, !dbg !6237
  call void %46(float* %47, float* %arraydecay40), !dbg !6234
  br label %if.end64, !dbg !6238

if.else41:                                        ; preds = %if.end
  %49 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6239
  %neg_odd_64 = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %49, i32 0, i32 2, !dbg !6241
  %50 = load void (float*)*, void (float*)** %neg_odd_64, align 8, !dbg !6241
  %51 = load i32, i32* %i, align 4, !dbg !6242
  %idxprom42 = sext i32 %51 to i64, !dbg !6243
  %52 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6243
  %arrayidx43 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %52, i64 1, !dbg !6243
  %arrayidx44 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx43, i64 0, i64 %idxprom42, !dbg !6243
  %arraydecay45 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx44, i32 0, i32 0, !dbg !6243
  call void %50(float* %arraydecay45), !dbg !6239
  %53 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6244
  %imdct_half46 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %53, i32 0, i32 11, !dbg !6245
  %54 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half46, align 8, !dbg !6245
  %55 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6246
  %56 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6247
  %arrayidx47 = getelementptr inbounds [64 x float], [64 x float]* %56, i64 0, !dbg !6247
  %arraydecay48 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx47, i32 0, i32 0, !dbg !6247
  %57 = load i32, i32* %i, align 4, !dbg !6248
  %idxprom49 = sext i32 %57 to i64, !dbg !6249
  %58 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6249
  %arrayidx50 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %58, i64 0, !dbg !6249
  %arrayidx51 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx50, i64 0, i64 %idxprom49, !dbg !6249
  %arraydecay52 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx51, i32 0, i32 0, !dbg !6249
  call void %54(%struct.FFTContext* %55, float* %arraydecay48, float* %arraydecay52), !dbg !6244
  %59 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6250
  %imdct_half53 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %59, i32 0, i32 11, !dbg !6251
  %60 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half53, align 8, !dbg !6251
  %61 = load %struct.FFTContext*, %struct.FFTContext** %mdct.addr, align 8, !dbg !6252
  %62 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6253
  %arrayidx54 = getelementptr inbounds [64 x float], [64 x float]* %62, i64 1, !dbg !6253
  %arraydecay55 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx54, i32 0, i32 0, !dbg !6253
  %63 = load i32, i32* %i, align 4, !dbg !6254
  %idxprom56 = sext i32 %63 to i64, !dbg !6255
  %64 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !6255
  %arrayidx57 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %64, i64 1, !dbg !6255
  %arrayidx58 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx57, i64 0, i64 %idxprom56, !dbg !6255
  %arraydecay59 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx58, i32 0, i32 0, !dbg !6255
  call void %60(%struct.FFTContext* %61, float* %arraydecay55, float* %arraydecay59), !dbg !6250
  %65 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %sbrdsp.addr, align 8, !dbg !6256
  %qmf_deint_bfly = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %65, i32 0, i32 6, !dbg !6257
  %66 = load void (float*, float*, float*)*, void (float*, float*, float*)** %qmf_deint_bfly, align 8, !dbg !6257
  %67 = load float*, float** %v, align 8, !dbg !6258
  %68 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6259
  %arrayidx60 = getelementptr inbounds [64 x float], [64 x float]* %68, i64 1, !dbg !6259
  %arraydecay61 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx60, i32 0, i32 0, !dbg !6259
  %69 = load [64 x float]*, [64 x float]** %mdct_buf.addr, align 8, !dbg !6260
  %arrayidx62 = getelementptr inbounds [64 x float], [64 x float]* %69, i64 0, !dbg !6260
  %arraydecay63 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx62, i32 0, i32 0, !dbg !6260
  call void %66(float* %67, float* %arraydecay61, float* %arraydecay63), !dbg !6256
  br label %if.end64

if.end64:                                         ; preds = %if.else41, %for.end
  %70 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6261
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %70, i32 0, i32 0, !dbg !6262
  %71 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !6262
  %72 = load float*, float** %out.addr, align 8, !dbg !6263
  %73 = load float*, float** %v, align 8, !dbg !6264
  %74 = load float*, float** %sbr_qmf_window, align 8, !dbg !6265
  %75 = load i32, i32* %div.addr, align 4, !dbg !6266
  %shr65 = ashr i32 64, %75, !dbg !6267
  call void %71(float* %72, float* %73, float* %74, i32 %shr65), !dbg !6261
  %76 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6268
  %vector_fmul_add = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %76, i32 0, i32 6, !dbg !6269
  %77 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add, align 8, !dbg !6269
  %78 = load float*, float** %out.addr, align 8, !dbg !6270
  %79 = load float*, float** %v, align 8, !dbg !6271
  %80 = load i32, i32* %div.addr, align 4, !dbg !6272
  %shr66 = ashr i32 192, %80, !dbg !6273
  %idx.ext67 = sext i32 %shr66 to i64, !dbg !6274
  %add.ptr68 = getelementptr inbounds float, float* %79, i64 %idx.ext67, !dbg !6274
  %81 = load float*, float** %sbr_qmf_window, align 8, !dbg !6275
  %82 = load i32, i32* %div.addr, align 4, !dbg !6276
  %shr69 = ashr i32 64, %82, !dbg !6277
  %idx.ext70 = sext i32 %shr69 to i64, !dbg !6278
  %add.ptr71 = getelementptr inbounds float, float* %81, i64 %idx.ext70, !dbg !6278
  %83 = load float*, float** %out.addr, align 8, !dbg !6279
  %84 = load i32, i32* %div.addr, align 4, !dbg !6280
  %shr72 = ashr i32 64, %84, !dbg !6281
  call void %77(float* %78, float* %add.ptr68, float* %add.ptr71, float* %83, i32 %shr72), !dbg !6268
  %85 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6282
  %vector_fmul_add73 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %85, i32 0, i32 6, !dbg !6283
  %86 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add73, align 8, !dbg !6283
  %87 = load float*, float** %out.addr, align 8, !dbg !6284
  %88 = load float*, float** %v, align 8, !dbg !6285
  %89 = load i32, i32* %div.addr, align 4, !dbg !6286
  %shr74 = ashr i32 256, %89, !dbg !6287
  %idx.ext75 = sext i32 %shr74 to i64, !dbg !6288
  %add.ptr76 = getelementptr inbounds float, float* %88, i64 %idx.ext75, !dbg !6288
  %90 = load float*, float** %sbr_qmf_window, align 8, !dbg !6289
  %91 = load i32, i32* %div.addr, align 4, !dbg !6290
  %shr77 = ashr i32 128, %91, !dbg !6291
  %idx.ext78 = sext i32 %shr77 to i64, !dbg !6292
  %add.ptr79 = getelementptr inbounds float, float* %90, i64 %idx.ext78, !dbg !6292
  %92 = load float*, float** %out.addr, align 8, !dbg !6293
  %93 = load i32, i32* %div.addr, align 4, !dbg !6294
  %shr80 = ashr i32 64, %93, !dbg !6295
  call void %86(float* %87, float* %add.ptr76, float* %add.ptr79, float* %92, i32 %shr80), !dbg !6282
  %94 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6296
  %vector_fmul_add81 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %94, i32 0, i32 6, !dbg !6297
  %95 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add81, align 8, !dbg !6297
  %96 = load float*, float** %out.addr, align 8, !dbg !6298
  %97 = load float*, float** %v, align 8, !dbg !6299
  %98 = load i32, i32* %div.addr, align 4, !dbg !6300
  %shr82 = ashr i32 448, %98, !dbg !6301
  %idx.ext83 = sext i32 %shr82 to i64, !dbg !6302
  %add.ptr84 = getelementptr inbounds float, float* %97, i64 %idx.ext83, !dbg !6302
  %99 = load float*, float** %sbr_qmf_window, align 8, !dbg !6303
  %100 = load i32, i32* %div.addr, align 4, !dbg !6304
  %shr85 = ashr i32 192, %100, !dbg !6305
  %idx.ext86 = sext i32 %shr85 to i64, !dbg !6306
  %add.ptr87 = getelementptr inbounds float, float* %99, i64 %idx.ext86, !dbg !6306
  %101 = load float*, float** %out.addr, align 8, !dbg !6307
  %102 = load i32, i32* %div.addr, align 4, !dbg !6308
  %shr88 = ashr i32 64, %102, !dbg !6309
  call void %95(float* %96, float* %add.ptr84, float* %add.ptr87, float* %101, i32 %shr88), !dbg !6296
  %103 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6310
  %vector_fmul_add89 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %103, i32 0, i32 6, !dbg !6311
  %104 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add89, align 8, !dbg !6311
  %105 = load float*, float** %out.addr, align 8, !dbg !6312
  %106 = load float*, float** %v, align 8, !dbg !6313
  %107 = load i32, i32* %div.addr, align 4, !dbg !6314
  %shr90 = ashr i32 512, %107, !dbg !6315
  %idx.ext91 = sext i32 %shr90 to i64, !dbg !6316
  %add.ptr92 = getelementptr inbounds float, float* %106, i64 %idx.ext91, !dbg !6316
  %108 = load float*, float** %sbr_qmf_window, align 8, !dbg !6317
  %109 = load i32, i32* %div.addr, align 4, !dbg !6318
  %shr93 = ashr i32 256, %109, !dbg !6319
  %idx.ext94 = sext i32 %shr93 to i64, !dbg !6320
  %add.ptr95 = getelementptr inbounds float, float* %108, i64 %idx.ext94, !dbg !6320
  %110 = load float*, float** %out.addr, align 8, !dbg !6321
  %111 = load i32, i32* %div.addr, align 4, !dbg !6322
  %shr96 = ashr i32 64, %111, !dbg !6323
  call void %104(float* %105, float* %add.ptr92, float* %add.ptr95, float* %110, i32 %shr96), !dbg !6310
  %112 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6324
  %vector_fmul_add97 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %112, i32 0, i32 6, !dbg !6325
  %113 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add97, align 8, !dbg !6325
  %114 = load float*, float** %out.addr, align 8, !dbg !6326
  %115 = load float*, float** %v, align 8, !dbg !6327
  %116 = load i32, i32* %div.addr, align 4, !dbg !6328
  %shr98 = ashr i32 704, %116, !dbg !6329
  %idx.ext99 = sext i32 %shr98 to i64, !dbg !6330
  %add.ptr100 = getelementptr inbounds float, float* %115, i64 %idx.ext99, !dbg !6330
  %117 = load float*, float** %sbr_qmf_window, align 8, !dbg !6331
  %118 = load i32, i32* %div.addr, align 4, !dbg !6332
  %shr101 = ashr i32 320, %118, !dbg !6333
  %idx.ext102 = sext i32 %shr101 to i64, !dbg !6334
  %add.ptr103 = getelementptr inbounds float, float* %117, i64 %idx.ext102, !dbg !6334
  %119 = load float*, float** %out.addr, align 8, !dbg !6335
  %120 = load i32, i32* %div.addr, align 4, !dbg !6336
  %shr104 = ashr i32 64, %120, !dbg !6337
  call void %113(float* %114, float* %add.ptr100, float* %add.ptr103, float* %119, i32 %shr104), !dbg !6324
  %121 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6338
  %vector_fmul_add105 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %121, i32 0, i32 6, !dbg !6339
  %122 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add105, align 8, !dbg !6339
  %123 = load float*, float** %out.addr, align 8, !dbg !6340
  %124 = load float*, float** %v, align 8, !dbg !6341
  %125 = load i32, i32* %div.addr, align 4, !dbg !6342
  %shr106 = ashr i32 768, %125, !dbg !6343
  %idx.ext107 = sext i32 %shr106 to i64, !dbg !6344
  %add.ptr108 = getelementptr inbounds float, float* %124, i64 %idx.ext107, !dbg !6344
  %126 = load float*, float** %sbr_qmf_window, align 8, !dbg !6345
  %127 = load i32, i32* %div.addr, align 4, !dbg !6346
  %shr109 = ashr i32 384, %127, !dbg !6347
  %idx.ext110 = sext i32 %shr109 to i64, !dbg !6348
  %add.ptr111 = getelementptr inbounds float, float* %126, i64 %idx.ext110, !dbg !6348
  %128 = load float*, float** %out.addr, align 8, !dbg !6349
  %129 = load i32, i32* %div.addr, align 4, !dbg !6350
  %shr112 = ashr i32 64, %129, !dbg !6351
  call void %122(float* %123, float* %add.ptr108, float* %add.ptr111, float* %128, i32 %shr112), !dbg !6338
  %130 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6352
  %vector_fmul_add113 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %130, i32 0, i32 6, !dbg !6353
  %131 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add113, align 8, !dbg !6353
  %132 = load float*, float** %out.addr, align 8, !dbg !6354
  %133 = load float*, float** %v, align 8, !dbg !6355
  %134 = load i32, i32* %div.addr, align 4, !dbg !6356
  %shr114 = ashr i32 960, %134, !dbg !6357
  %idx.ext115 = sext i32 %shr114 to i64, !dbg !6358
  %add.ptr116 = getelementptr inbounds float, float* %133, i64 %idx.ext115, !dbg !6358
  %135 = load float*, float** %sbr_qmf_window, align 8, !dbg !6359
  %136 = load i32, i32* %div.addr, align 4, !dbg !6360
  %shr117 = ashr i32 448, %136, !dbg !6361
  %idx.ext118 = sext i32 %shr117 to i64, !dbg !6362
  %add.ptr119 = getelementptr inbounds float, float* %135, i64 %idx.ext118, !dbg !6362
  %137 = load float*, float** %out.addr, align 8, !dbg !6363
  %138 = load i32, i32* %div.addr, align 4, !dbg !6364
  %shr120 = ashr i32 64, %138, !dbg !6365
  call void %131(float* %132, float* %add.ptr116, float* %add.ptr119, float* %137, i32 %shr120), !dbg !6352
  %139 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6366
  %vector_fmul_add121 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %139, i32 0, i32 6, !dbg !6367
  %140 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add121, align 8, !dbg !6367
  %141 = load float*, float** %out.addr, align 8, !dbg !6368
  %142 = load float*, float** %v, align 8, !dbg !6369
  %143 = load i32, i32* %div.addr, align 4, !dbg !6370
  %shr122 = ashr i32 1024, %143, !dbg !6371
  %idx.ext123 = sext i32 %shr122 to i64, !dbg !6372
  %add.ptr124 = getelementptr inbounds float, float* %142, i64 %idx.ext123, !dbg !6372
  %144 = load float*, float** %sbr_qmf_window, align 8, !dbg !6373
  %145 = load i32, i32* %div.addr, align 4, !dbg !6374
  %shr125 = ashr i32 512, %145, !dbg !6375
  %idx.ext126 = sext i32 %shr125 to i64, !dbg !6376
  %add.ptr127 = getelementptr inbounds float, float* %144, i64 %idx.ext126, !dbg !6376
  %146 = load float*, float** %out.addr, align 8, !dbg !6377
  %147 = load i32, i32* %div.addr, align 4, !dbg !6378
  %shr128 = ashr i32 64, %147, !dbg !6379
  call void %140(float* %141, float* %add.ptr124, float* %add.ptr127, float* %146, i32 %shr128), !dbg !6366
  %148 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %dsp.addr, align 8, !dbg !6380
  %vector_fmul_add129 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %148, i32 0, i32 6, !dbg !6381
  %149 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add129, align 8, !dbg !6381
  %150 = load float*, float** %out.addr, align 8, !dbg !6382
  %151 = load float*, float** %v, align 8, !dbg !6383
  %152 = load i32, i32* %div.addr, align 4, !dbg !6384
  %shr130 = ashr i32 1216, %152, !dbg !6385
  %idx.ext131 = sext i32 %shr130 to i64, !dbg !6386
  %add.ptr132 = getelementptr inbounds float, float* %151, i64 %idx.ext131, !dbg !6386
  %153 = load float*, float** %sbr_qmf_window, align 8, !dbg !6387
  %154 = load i32, i32* %div.addr, align 4, !dbg !6388
  %shr133 = ashr i32 576, %154, !dbg !6389
  %idx.ext134 = sext i32 %shr133 to i64, !dbg !6390
  %add.ptr135 = getelementptr inbounds float, float* %153, i64 %idx.ext134, !dbg !6390
  %155 = load float*, float** %out.addr, align 8, !dbg !6391
  %156 = load i32, i32* %div.addr, align 4, !dbg !6392
  %shr136 = ashr i32 64, %156, !dbg !6393
  call void %149(float* %150, float* %add.ptr132, float* %add.ptr135, float* %155, i32 %shr136), !dbg !6380
  %157 = load i32, i32* %div.addr, align 4, !dbg !6394
  %shr137 = ashr i32 64, %157, !dbg !6395
  %158 = load float*, float** %out.addr, align 8, !dbg !6396
  %idx.ext138 = sext i32 %shr137 to i64, !dbg !6396
  %add.ptr139 = getelementptr inbounds float, float* %158, i64 %idx.ext138, !dbg !6396
  store float* %add.ptr139, float** %out.addr, align 8, !dbg !6396
  br label %for.inc140, !dbg !6397

for.inc140:                                       ; preds = %if.end64
  %159 = load i32, i32* %i, align 4, !dbg !6398
  %inc141 = add nsw i32 %159, 1, !dbg !6398
  store i32 %inc141, i32* %i, align 4, !dbg !6398
  br label %for.cond, !dbg !6400, !llvm.loop !6401

for.end142:                                       ; preds = %for.cond
  ret void, !dbg !6403
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !6404 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6409, metadata !2753), !dbg !6410
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6411
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6412
  %1 = load i32, i32* %index, align 8, !dbg !6412
  ret i32 %1, !dbg !6413
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !6414 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6417, metadata !2753), !dbg !6422
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6424, metadata !2753), !dbg !6425
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6426, metadata !2753), !dbg !6427
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6428, metadata !2753), !dbg !6429
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6430, metadata !2753), !dbg !6431
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6432
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6433
  %1 = load i32, i32* %index, align 8, !dbg !6433
  store i32 %1, i32* %re_index, align 4, !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6434, metadata !2753), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6436, metadata !2753), !dbg !6437
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6438
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6439
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6439
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6437
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6440
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6441
  %5 = load i8*, i8** %buffer, align 8, !dbg !6441
  %6 = load i32, i32* %re_index, align 4, !dbg !6442
  %shr = lshr i32 %6, 3, !dbg !6443
  %idx.ext = zext i32 %shr to i64, !dbg !6444
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6444
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6445
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6445
  %8 = load i32, i32* %l, align 1, !dbg !6445
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6446
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6447
  %shl.i = shl i32 %9, 8, !dbg !6448
  %and.i = and i32 %shl.i, 65280, !dbg !6449
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6450
  %shr.i = lshr i32 %10, 8, !dbg !6451
  %and1.i = and i32 %shr.i, 255, !dbg !6452
  %or.i = or i32 %and.i, %and1.i, !dbg !6453
  %shl2.i = shl i32 %or.i, 16, !dbg !6454
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6455
  %shr3.i = lshr i32 %11, 16, !dbg !6456
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6457
  %and5.i = and i32 %shl4.i, 65280, !dbg !6458
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6459
  %shr6.i = lshr i32 %12, 16, !dbg !6460
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6461
  %and8.i = and i32 %shr7.i, 255, !dbg !6462
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6463
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6464
  %13 = load i32, i32* %re_index, align 4, !dbg !6465
  %and = and i32 %13, 7, !dbg !6466
  %shl = shl i32 %or10.i, %and, !dbg !6467
  store i32 %shl, i32* %re_cache, align 4, !dbg !6468
  %14 = load i32, i32* %re_cache, align 4, !dbg !6469
  %15 = load i32, i32* %n.addr, align 4, !dbg !6470
  %conv = trunc i32 %15 to i8, !dbg !6470
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6471
  store i32 %call4, i32* %tmp, align 4, !dbg !6472
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6473
  %17 = load i32, i32* %re_index, align 4, !dbg !6474
  %18 = load i32, i32* %n.addr, align 4, !dbg !6475
  %add = add i32 %17, %18, !dbg !6476
  %cmp = icmp ugt i32 %16, %add, !dbg !6477
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6478

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6479
  %20 = load i32, i32* %n.addr, align 4, !dbg !6481
  %add6 = add i32 %19, %20, !dbg !6482
  br label %cond.end, !dbg !6483

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6484
  br label %cond.end, !dbg !6486

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6487
  store i32 %cond, i32* %re_index, align 4, !dbg !6489
  %22 = load i32, i32* %re_index, align 4, !dbg !6490
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6491
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6492
  store i32 %22, i32* %index7, align 8, !dbg !6493
  %24 = load i32, i32* %tmp, align 4, !dbg !6494
  ret i32 %24, !dbg !6495
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind uwtable
define internal void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %sbr) #3 !dbg !1120 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %k = alloca i32, align 4
  %lim_bands_per_octave_warped = alloca float, align 4
  %patch_borders = alloca [7 x i16], align 2
  %in = alloca i16*, align 8
  %out = alloca i16*, align 8
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca i16*, align 8
  %end = alloca i16*, align 8
  %checksort = alloca i32, align 4
  %right = alloca i16*, align 8
  %left = alloca i16*, align 8
  %mid = alloca i16*, align 8
  %SWAP_tmp = alloca i16, align 2
  %SWAP_tmp82 = alloca i16, align 2
  %SWAP_tmp91 = alloca i16, align 2
  %SWAP_tmp101 = alloca i16, align 2
  %SWAP_tmp110 = alloca i16, align 2
  %SWAP_tmp142 = alloca i16, align 2
  %SWAP_tmp149 = alloca i16, align 2
  %SWAP_tmp212 = alloca i16, align 2
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !6496, metadata !2753), !dbg !6497
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6498, metadata !2753), !dbg !6499
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6500
  %bs_limiter_bands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 7, !dbg !6502
  %1 = load i32, i32* %bs_limiter_bands, align 32, !dbg !6502
  %cmp = icmp ugt i32 %1, 0, !dbg !6503
  br i1 %cmp, label %if.then, label %if.else273, !dbg !6504

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %lim_bands_per_octave_warped, metadata !6505, metadata !2753), !dbg !6507
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6508
  %bs_limiter_bands1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 7, !dbg !6509
  %3 = load i32, i32* %bs_limiter_bands1, align 32, !dbg !6509
  %sub = sub i32 %3, 1, !dbg !6510
  %idxprom = zext i32 %sub to i64, !dbg !6511
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* @sbr_make_f_tablelim.bands_warped, i64 0, i64 %idxprom, !dbg !6511
  %4 = load float, float* %arrayidx, align 4, !dbg !6511
  store float %4, float* %lim_bands_per_octave_warped, align 4, !dbg !6507
  call void @llvm.dbg.declare(metadata [7 x i16]* %patch_borders, metadata !6512, metadata !2753), !dbg !6514
  call void @llvm.dbg.declare(metadata i16** %in, metadata !6515, metadata !2753), !dbg !6516
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6517
  %f_tablelim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 26, !dbg !6518
  %arraydecay = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim, i32 0, i32 0, !dbg !6517
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 1, !dbg !6519
  store i16* %add.ptr, i16** %in, align 8, !dbg !6516
  call void @llvm.dbg.declare(metadata i16** %out, metadata !6520, metadata !2753), !dbg !6521
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6522
  %f_tablelim2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 26, !dbg !6523
  %arraydecay3 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim2, i32 0, i32 0, !dbg !6522
  store i16* %arraydecay3, i16** %out, align 8, !dbg !6521
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6524
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 13, !dbg !6525
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !6524
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !6524
  %conv = trunc i32 %8 to i16, !dbg !6524
  %arrayidx5 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 0, !dbg !6526
  store i16 %conv, i16* %arrayidx5, align 2, !dbg !6527
  store i32 1, i32* %k, align 4, !dbg !6528
  br label %for.cond, !dbg !6530

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %k, align 4, !dbg !6531
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6534
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 27, !dbg !6535
  %11 = load i32, i32* %num_patches, align 16, !dbg !6535
  %cmp6 = icmp ule i32 %9, %11, !dbg !6536
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6537

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %k, align 4, !dbg !6538
  %sub8 = sub nsw i32 %12, 1, !dbg !6539
  %idxprom9 = sext i32 %sub8 to i64, !dbg !6540
  %arrayidx10 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 %idxprom9, !dbg !6540
  %13 = load i16, i16* %arrayidx10, align 2, !dbg !6540
  %conv11 = sext i16 %13 to i32, !dbg !6540
  %14 = load i32, i32* %k, align 4, !dbg !6541
  %sub12 = sub nsw i32 %14, 1, !dbg !6542
  %idxprom13 = sext i32 %sub12 to i64, !dbg !6543
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6543
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 28, !dbg !6544
  %arrayidx14 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom13, !dbg !6543
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !6543
  %conv15 = zext i8 %16 to i32, !dbg !6543
  %add = add nsw i32 %conv11, %conv15, !dbg !6545
  %conv16 = trunc i32 %add to i16, !dbg !6540
  %17 = load i32, i32* %k, align 4, !dbg !6546
  %idxprom17 = sext i32 %17 to i64, !dbg !6547
  %arrayidx18 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i64 0, i64 %idxprom17, !dbg !6547
  store i16 %conv16, i16* %arrayidx18, align 2, !dbg !6548
  br label %for.inc, !dbg !6547

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %k, align 4, !dbg !6549
  %inc = add nsw i32 %18, 1, !dbg !6549
  store i32 %inc, i32* %k, align 4, !dbg !6549
  br label %for.cond, !dbg !6551, !llvm.loop !6552

for.end:                                          ; preds = %for.cond
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6554
  %f_tablelim19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 26, !dbg !6555
  %arraydecay20 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim19, i32 0, i32 0, !dbg !6556
  %20 = bitcast i16* %arraydecay20 to i8*, !dbg !6556
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6557
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 23, !dbg !6558
  %arraydecay21 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i32 0, i32 0, !dbg !6556
  %22 = bitcast i16* %arraydecay21 to i8*, !dbg !6556
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6559
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 19, !dbg !6560
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 0, !dbg !6559
  %24 = load i32, i32* %arrayidx22, align 32, !dbg !6559
  %add23 = add i32 %24, 1, !dbg !6561
  %conv24 = zext i32 %add23 to i64, !dbg !6562
  %mul = mul i64 %conv24, 2, !dbg !6563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %mul, i32 2, i1 false), !dbg !6556
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6564
  %num_patches25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 27, !dbg !6566
  %26 = load i32, i32* %num_patches25, align 16, !dbg !6566
  %cmp26 = icmp ugt i32 %26, 1, !dbg !6567
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !6568

if.then28:                                        ; preds = %for.end
  %27 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6569
  %f_tablelim29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %27, i32 0, i32 26, !dbg !6570
  %arraydecay30 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim29, i32 0, i32 0, !dbg !6569
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6571
  %n31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 19, !dbg !6572
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %n31, i64 0, i64 0, !dbg !6571
  %29 = load i32, i32* %arrayidx32, align 32, !dbg !6571
  %idx.ext = zext i32 %29 to i64, !dbg !6573
  %add.ptr33 = getelementptr inbounds i16, i16* %arraydecay30, i64 %idx.ext, !dbg !6573
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr33, i64 1, !dbg !6574
  %30 = bitcast i16* %add.ptr34 to i8*, !dbg !6575
  %arraydecay35 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !6576
  %add.ptr36 = getelementptr inbounds i16, i16* %arraydecay35, i64 1, !dbg !6577
  %31 = bitcast i16* %add.ptr36 to i8*, !dbg !6575
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6578
  %num_patches37 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 27, !dbg !6579
  %33 = load i32, i32* %num_patches37, align 16, !dbg !6579
  %sub38 = sub i32 %33, 1, !dbg !6580
  %conv39 = zext i32 %sub38 to i64, !dbg !6581
  %mul40 = mul i64 %conv39, 2, !dbg !6582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 %mul40, i32 2, i1 false), !dbg !6575
  br label %if.end, !dbg !6575

if.end:                                           ; preds = %if.then28, %for.end
  br label %do.body, !dbg !6583, !llvm.loop !6584

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !6585, metadata !2753), !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !6589, metadata !2753), !dbg !6590
  store i32 1, i32* %sp, align 4, !dbg !6591
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6593
  %f_tablelim41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %34, i32 0, i32 26, !dbg !6594
  %arraydecay42 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim41, i32 0, i32 0, !dbg !6593
  %35 = bitcast i16* %arraydecay42 to i8*, !dbg !6593
  %arrayidx43 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6595
  %arrayidx44 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx43, i64 0, i64 0, !dbg !6595
  store i8* %35, i8** %arrayidx44, align 16, !dbg !6596
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6597
  %f_tablelim45 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 26, !dbg !6598
  %arraydecay46 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim45, i32 0, i32 0, !dbg !6599
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6600
  %num_patches47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 27, !dbg !6601
  %38 = load i32, i32* %num_patches47, align 16, !dbg !6601
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !6602
  %n48 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %39, i32 0, i32 19, !dbg !6603
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %n48, i64 0, i64 0, !dbg !6602
  %40 = load i32, i32* %arrayidx49, align 32, !dbg !6602
  %add50 = add i32 %38, %40, !dbg !6604
  %idx.ext51 = zext i32 %add50 to i64, !dbg !6605
  %add.ptr52 = getelementptr inbounds i16, i16* %arraydecay46, i64 %idx.ext51, !dbg !6605
  %add.ptr53 = getelementptr inbounds i16, i16* %add.ptr52, i64 -1, !dbg !6606
  %41 = bitcast i16* %add.ptr53 to i8*, !dbg !6599
  %arrayidx54 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !6607
  %arrayidx55 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx54, i64 0, i64 1, !dbg !6607
  store i8* %41, i8** %arrayidx55, align 8, !dbg !6608
  br label %while.cond, !dbg !6609

while.cond:                                       ; preds = %while.end216, %do.body
  %42 = load i32, i32* %sp, align 4, !dbg !6610
  %tobool = icmp ne i32 %42, 0, !dbg !6612
  br i1 %tobool, label %while.body, label %while.end217, !dbg !6612

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !6613, metadata !2753), !dbg !6615
  %43 = load i32, i32* %sp, align 4, !dbg !6616
  %dec = add nsw i32 %43, -1, !dbg !6616
  store i32 %dec, i32* %sp, align 4, !dbg !6616
  %idxprom56 = sext i32 %dec to i64, !dbg !6618
  %arrayidx57 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom56, !dbg !6618
  %arrayidx58 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx57, i64 0, i64 0, !dbg !6618
  %44 = load i8*, i8** %arrayidx58, align 16, !dbg !6618
  %45 = bitcast i8* %44 to i16*, !dbg !6618
  store i16* %45, i16** %start, align 8, !dbg !6619
  call void @llvm.dbg.declare(metadata i16** %end, metadata !6620, metadata !2753), !dbg !6621
  %46 = load i32, i32* %sp, align 4, !dbg !6622
  %idxprom59 = sext i32 %46 to i64, !dbg !6623
  %arrayidx60 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom59, !dbg !6623
  %arrayidx61 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx60, i64 0, i64 1, !dbg !6623
  %47 = load i8*, i8** %arrayidx61, align 8, !dbg !6623
  %48 = bitcast i8* %47 to i16*, !dbg !6623
  store i16* %48, i16** %end, align 8, !dbg !6624
  br label %while.cond62, !dbg !6625

while.cond62:                                     ; preds = %if.end215, %while.body
  %49 = load i16*, i16** %start, align 8, !dbg !6626
  %50 = load i16*, i16** %end, align 8, !dbg !6628
  %cmp63 = icmp ult i16* %49, %50, !dbg !6629
  br i1 %cmp63, label %while.body65, label %while.end216, !dbg !6630

while.body65:                                     ; preds = %while.cond62
  %51 = load i16*, i16** %start, align 8, !dbg !6631
  %52 = load i16*, i16** %end, align 8, !dbg !6635
  %add.ptr66 = getelementptr inbounds i16, i16* %52, i64 -1, !dbg !6636
  %cmp67 = icmp ult i16* %51, %add.ptr66, !dbg !6637
  br i1 %cmp67, label %if.then69, label %if.else206, !dbg !6631

if.then69:                                        ; preds = %while.body65
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !6638, metadata !2753), !dbg !6640
  store i32 0, i32* %checksort, align 4, !dbg !6641
  call void @llvm.dbg.declare(metadata i16** %right, metadata !6643, metadata !2753), !dbg !6644
  %53 = load i16*, i16** %end, align 8, !dbg !6645
  %add.ptr70 = getelementptr inbounds i16, i16* %53, i64 -2, !dbg !6646
  store i16* %add.ptr70, i16** %right, align 8, !dbg !6647
  call void @llvm.dbg.declare(metadata i16** %left, metadata !6648, metadata !2753), !dbg !6649
  %54 = load i16*, i16** %start, align 8, !dbg !6650
  %add.ptr71 = getelementptr inbounds i16, i16* %54, i64 1, !dbg !6651
  store i16* %add.ptr71, i16** %left, align 8, !dbg !6652
  call void @llvm.dbg.declare(metadata i16** %mid, metadata !6653, metadata !2753), !dbg !6654
  %55 = load i16*, i16** %start, align 8, !dbg !6655
  %56 = load i16*, i16** %end, align 8, !dbg !6656
  %57 = load i16*, i16** %start, align 8, !dbg !6657
  %sub.ptr.lhs.cast = ptrtoint i16* %56 to i64, !dbg !6658
  %sub.ptr.rhs.cast = ptrtoint i16* %57 to i64, !dbg !6658
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6658
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !6658
  %shr = ashr i64 %sub.ptr.div, 1, !dbg !6659
  %add.ptr72 = getelementptr inbounds i16, i16* %55, i64 %shr, !dbg !6660
  store i16* %add.ptr72, i16** %mid, align 8, !dbg !6661
  %58 = load i16*, i16** %start, align 8, !dbg !6662
  %59 = bitcast i16* %58 to i8*, !dbg !6662
  %60 = load i16*, i16** %end, align 8, !dbg !6663
  %61 = bitcast i16* %60 to i8*, !dbg !6663
  %call = call i32 @qsort_comparison_function_int16(i8* %59, i8* %61), !dbg !6664
  %cmp73 = icmp sgt i32 %call, 0, !dbg !6665
  br i1 %cmp73, label %if.then75, label %if.else85, !dbg !6664

if.then75:                                        ; preds = %if.then69
  %62 = load i16*, i16** %end, align 8, !dbg !6666
  %63 = bitcast i16* %62 to i8*, !dbg !6666
  %64 = load i16*, i16** %mid, align 8, !dbg !6671
  %65 = bitcast i16* %64 to i8*, !dbg !6671
  %call76 = call i32 @qsort_comparison_function_int16(i8* %63, i8* %65), !dbg !6672
  %cmp77 = icmp sgt i32 %call76, 0, !dbg !6673
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !6672

if.then79:                                        ; preds = %if.then75
  br label %do.body80, !dbg !6674, !llvm.loop !6676

do.body80:                                        ; preds = %if.then79
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp, metadata !6678, metadata !2753), !dbg !6680
  %66 = load i16*, i16** %mid, align 8, !dbg !6681
  %67 = load i16, i16* %66, align 2, !dbg !6683
  store i16 %67, i16* %SWAP_tmp, align 2, !dbg !6684
  %68 = load i16*, i16** %start, align 8, !dbg !6685
  %69 = load i16, i16* %68, align 2, !dbg !6686
  %70 = load i16*, i16** %mid, align 8, !dbg !6687
  store i16 %69, i16* %70, align 2, !dbg !6688
  %71 = load i16, i16* %SWAP_tmp, align 2, !dbg !6689
  %72 = load i16*, i16** %start, align 8, !dbg !6690
  store i16 %71, i16* %72, align 2, !dbg !6691
  br label %do.end, !dbg !6692

do.end:                                           ; preds = %do.body80
  br label %if.end84, !dbg !6693

if.else:                                          ; preds = %if.then75
  br label %do.body81, !dbg !6695, !llvm.loop !6697

do.body81:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp82, metadata !6699, metadata !2753), !dbg !6701
  %73 = load i16*, i16** %end, align 8, !dbg !6702
  %74 = load i16, i16* %73, align 2, !dbg !6704
  store i16 %74, i16* %SWAP_tmp82, align 2, !dbg !6705
  %75 = load i16*, i16** %start, align 8, !dbg !6706
  %76 = load i16, i16* %75, align 2, !dbg !6707
  %77 = load i16*, i16** %end, align 8, !dbg !6708
  store i16 %76, i16* %77, align 2, !dbg !6709
  %78 = load i16, i16* %SWAP_tmp82, align 2, !dbg !6710
  %79 = load i16*, i16** %start, align 8, !dbg !6711
  store i16 %78, i16* %79, align 2, !dbg !6712
  br label %do.end83, !dbg !6713

do.end83:                                         ; preds = %do.body81
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %do.end
  br label %if.end95, !dbg !6714

if.else85:                                        ; preds = %if.then69
  %80 = load i16*, i16** %start, align 8, !dbg !6716
  %81 = bitcast i16* %80 to i8*, !dbg !6716
  %82 = load i16*, i16** %mid, align 8, !dbg !6720
  %83 = bitcast i16* %82 to i8*, !dbg !6720
  %call86 = call i32 @qsort_comparison_function_int16(i8* %81, i8* %83), !dbg !6721
  %cmp87 = icmp sgt i32 %call86, 0, !dbg !6722
  br i1 %cmp87, label %if.then89, label %if.else93, !dbg !6721

if.then89:                                        ; preds = %if.else85
  br label %do.body90, !dbg !6723, !llvm.loop !6725

do.body90:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp91, metadata !6727, metadata !2753), !dbg !6729
  %84 = load i16*, i16** %mid, align 8, !dbg !6730
  %85 = load i16, i16* %84, align 2, !dbg !6732
  store i16 %85, i16* %SWAP_tmp91, align 2, !dbg !6733
  %86 = load i16*, i16** %start, align 8, !dbg !6734
  %87 = load i16, i16* %86, align 2, !dbg !6735
  %88 = load i16*, i16** %mid, align 8, !dbg !6736
  store i16 %87, i16* %88, align 2, !dbg !6737
  %89 = load i16, i16* %SWAP_tmp91, align 2, !dbg !6738
  %90 = load i16*, i16** %start, align 8, !dbg !6739
  store i16 %89, i16* %90, align 2, !dbg !6740
  br label %do.end92, !dbg !6741

do.end92:                                         ; preds = %do.body90
  br label %if.end94, !dbg !6742

if.else93:                                        ; preds = %if.else85
  store i32 1, i32* %checksort, align 4, !dbg !6744
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %do.end92
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end84
  %91 = load i16*, i16** %mid, align 8, !dbg !6746
  %92 = bitcast i16* %91 to i8*, !dbg !6746
  %93 = load i16*, i16** %end, align 8, !dbg !6749
  %94 = bitcast i16* %93 to i8*, !dbg !6749
  %call96 = call i32 @qsort_comparison_function_int16(i8* %92, i8* %94), !dbg !6750
  %cmp97 = icmp sgt i32 %call96, 0, !dbg !6751
  br i1 %cmp97, label %if.then99, label %if.end103, !dbg !6750

if.then99:                                        ; preds = %if.end95
  br label %do.body100, !dbg !6752, !llvm.loop !6755

do.body100:                                       ; preds = %if.then99
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp101, metadata !6757, metadata !2753), !dbg !6759
  %95 = load i16*, i16** %end, align 8, !dbg !6760
  %96 = load i16, i16* %95, align 2, !dbg !6762
  store i16 %96, i16* %SWAP_tmp101, align 2, !dbg !6763
  %97 = load i16*, i16** %mid, align 8, !dbg !6764
  %98 = load i16, i16* %97, align 2, !dbg !6765
  %99 = load i16*, i16** %end, align 8, !dbg !6766
  store i16 %98, i16* %99, align 2, !dbg !6767
  %100 = load i16, i16* %SWAP_tmp101, align 2, !dbg !6768
  %101 = load i16*, i16** %mid, align 8, !dbg !6769
  store i16 %100, i16* %101, align 2, !dbg !6770
  br label %do.end102, !dbg !6771

do.end102:                                        ; preds = %do.body100
  store i32 0, i32* %checksort, align 4, !dbg !6772
  br label %if.end103, !dbg !6774

if.end103:                                        ; preds = %do.end102, %if.end95
  %102 = load i16*, i16** %start, align 8, !dbg !6775
  %103 = load i16*, i16** %end, align 8, !dbg !6778
  %add.ptr104 = getelementptr inbounds i16, i16* %103, i64 -2, !dbg !6779
  %cmp105 = icmp eq i16* %102, %add.ptr104, !dbg !6780
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !6775

if.then107:                                       ; preds = %if.end103
  br label %while.end216, !dbg !6781

if.end108:                                        ; preds = %if.end103
  br label %do.body109, !dbg !6783, !llvm.loop !6785

do.body109:                                       ; preds = %if.end108
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp110, metadata !6787, metadata !2753), !dbg !6789
  %104 = load i16*, i16** %mid, align 8, !dbg !6790
  %105 = load i16, i16* %104, align 2, !dbg !6792
  store i16 %105, i16* %SWAP_tmp110, align 2, !dbg !6793
  %106 = load i16*, i16** %end, align 8, !dbg !6794
  %arrayidx111 = getelementptr inbounds i16, i16* %106, i64 -1, !dbg !6794
  %107 = load i16, i16* %arrayidx111, align 2, !dbg !6794
  %108 = load i16*, i16** %mid, align 8, !dbg !6795
  store i16 %107, i16* %108, align 2, !dbg !6796
  %109 = load i16, i16* %SWAP_tmp110, align 2, !dbg !6797
  %110 = load i16*, i16** %end, align 8, !dbg !6798
  %arrayidx112 = getelementptr inbounds i16, i16* %110, i64 -1, !dbg !6798
  store i16 %109, i16* %arrayidx112, align 2, !dbg !6799
  br label %do.end113, !dbg !6800

do.end113:                                        ; preds = %do.body109
  br label %while.cond114, !dbg !6801

while.cond114:                                    ; preds = %if.end146, %do.end113
  %111 = load i16*, i16** %left, align 8, !dbg !6803
  %112 = load i16*, i16** %right, align 8, !dbg !6805
  %cmp115 = icmp ule i16* %111, %112, !dbg !6806
  br i1 %cmp115, label %while.body117, label %while.end147, !dbg !6807

while.body117:                                    ; preds = %while.cond114
  br label %while.cond118, !dbg !6808

while.cond118:                                    ; preds = %while.body125, %while.body117
  %113 = load i16*, i16** %left, align 8, !dbg !6811
  %114 = load i16*, i16** %right, align 8, !dbg !6813
  %cmp119 = icmp ule i16* %113, %114, !dbg !6814
  br i1 %cmp119, label %land.rhs, label %land.end, !dbg !6815

land.rhs:                                         ; preds = %while.cond118
  %115 = load i16*, i16** %left, align 8, !dbg !6816
  %116 = bitcast i16* %115 to i8*, !dbg !6816
  %117 = load i16*, i16** %end, align 8, !dbg !6818
  %add.ptr121 = getelementptr inbounds i16, i16* %117, i64 -1, !dbg !6819
  %118 = bitcast i16* %add.ptr121 to i8*, !dbg !6818
  %call122 = call i32 @qsort_comparison_function_int16(i8* %116, i8* %118), !dbg !6820
  %cmp123 = icmp slt i32 %call122, 0, !dbg !6821
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond118
  %119 = phi i1 [ false, %while.cond118 ], [ %cmp123, %land.rhs ]
  br i1 %119, label %while.body125, label %while.end, !dbg !6822

while.body125:                                    ; preds = %land.end
  %120 = load i16*, i16** %left, align 8, !dbg !6824
  %incdec.ptr = getelementptr inbounds i16, i16* %120, i32 1, !dbg !6824
  store i16* %incdec.ptr, i16** %left, align 8, !dbg !6824
  br label %while.cond118, !dbg !6826, !llvm.loop !6827

while.end:                                        ; preds = %land.end
  br label %while.cond126, !dbg !6829

while.cond126:                                    ; preds = %while.body135, %while.end
  %121 = load i16*, i16** %left, align 8, !dbg !6831
  %122 = load i16*, i16** %right, align 8, !dbg !6833
  %cmp127 = icmp ule i16* %121, %122, !dbg !6834
  br i1 %cmp127, label %land.rhs129, label %land.end134, !dbg !6835

land.rhs129:                                      ; preds = %while.cond126
  %123 = load i16*, i16** %right, align 8, !dbg !6836
  %124 = bitcast i16* %123 to i8*, !dbg !6836
  %125 = load i16*, i16** %end, align 8, !dbg !6838
  %add.ptr130 = getelementptr inbounds i16, i16* %125, i64 -1, !dbg !6839
  %126 = bitcast i16* %add.ptr130 to i8*, !dbg !6838
  %call131 = call i32 @qsort_comparison_function_int16(i8* %124, i8* %126), !dbg !6840
  %cmp132 = icmp sgt i32 %call131, 0, !dbg !6841
  br label %land.end134

land.end134:                                      ; preds = %land.rhs129, %while.cond126
  %127 = phi i1 [ false, %while.cond126 ], [ %cmp132, %land.rhs129 ]
  br i1 %127, label %while.body135, label %while.end137, !dbg !6842

while.body135:                                    ; preds = %land.end134
  %128 = load i16*, i16** %right, align 8, !dbg !6844
  %incdec.ptr136 = getelementptr inbounds i16, i16* %128, i32 -1, !dbg !6844
  store i16* %incdec.ptr136, i16** %right, align 8, !dbg !6844
  br label %while.cond126, !dbg !6846, !llvm.loop !6847

while.end137:                                     ; preds = %land.end134
  %129 = load i16*, i16** %left, align 8, !dbg !6849
  %130 = load i16*, i16** %right, align 8, !dbg !6852
  %cmp138 = icmp ule i16* %129, %130, !dbg !6853
  br i1 %cmp138, label %if.then140, label %if.end146, !dbg !6849

if.then140:                                       ; preds = %while.end137
  br label %do.body141, !dbg !6854, !llvm.loop !6857

do.body141:                                       ; preds = %if.then140
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp142, metadata !6859, metadata !2753), !dbg !6861
  %131 = load i16*, i16** %right, align 8, !dbg !6862
  %132 = load i16, i16* %131, align 2, !dbg !6864
  store i16 %132, i16* %SWAP_tmp142, align 2, !dbg !6865
  %133 = load i16*, i16** %left, align 8, !dbg !6866
  %134 = load i16, i16* %133, align 2, !dbg !6867
  %135 = load i16*, i16** %right, align 8, !dbg !6868
  store i16 %134, i16* %135, align 2, !dbg !6869
  %136 = load i16, i16* %SWAP_tmp142, align 2, !dbg !6870
  %137 = load i16*, i16** %left, align 8, !dbg !6871
  store i16 %136, i16* %137, align 2, !dbg !6872
  br label %do.end143, !dbg !6873

do.end143:                                        ; preds = %do.body141
  %138 = load i16*, i16** %left, align 8, !dbg !6874
  %incdec.ptr144 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !6874
  store i16* %incdec.ptr144, i16** %left, align 8, !dbg !6874
  %139 = load i16*, i16** %right, align 8, !dbg !6876
  %incdec.ptr145 = getelementptr inbounds i16, i16* %139, i32 -1, !dbg !6876
  store i16* %incdec.ptr145, i16** %right, align 8, !dbg !6876
  br label %if.end146, !dbg !6877

if.end146:                                        ; preds = %do.end143, %while.end137
  br label %while.cond114, !dbg !6878, !llvm.loop !6880

while.end147:                                     ; preds = %while.cond114
  br label %do.body148, !dbg !6882, !llvm.loop !6884

do.body148:                                       ; preds = %while.end147
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp149, metadata !6886, metadata !2753), !dbg !6888
  %140 = load i16*, i16** %left, align 8, !dbg !6889
  %141 = load i16, i16* %140, align 2, !dbg !6891
  store i16 %141, i16* %SWAP_tmp149, align 2, !dbg !6892
  %142 = load i16*, i16** %end, align 8, !dbg !6893
  %arrayidx150 = getelementptr inbounds i16, i16* %142, i64 -1, !dbg !6893
  %143 = load i16, i16* %arrayidx150, align 2, !dbg !6893
  %144 = load i16*, i16** %left, align 8, !dbg !6894
  store i16 %143, i16* %144, align 2, !dbg !6895
  %145 = load i16, i16* %SWAP_tmp149, align 2, !dbg !6896
  %146 = load i16*, i16** %end, align 8, !dbg !6897
  %arrayidx151 = getelementptr inbounds i16, i16* %146, i64 -1, !dbg !6897
  store i16 %145, i16* %arrayidx151, align 2, !dbg !6898
  br label %do.end152, !dbg !6899

do.end152:                                        ; preds = %do.body148
  %147 = load i32, i32* %checksort, align 4, !dbg !6900
  %tobool153 = icmp ne i32 %147, 0, !dbg !6900
  br i1 %tobool153, label %land.lhs.true, label %if.end176, !dbg !6903

land.lhs.true:                                    ; preds = %do.end152
  %148 = load i16*, i16** %mid, align 8, !dbg !6904
  %149 = load i16*, i16** %left, align 8, !dbg !6906
  %add.ptr154 = getelementptr inbounds i16, i16* %149, i64 -1, !dbg !6907
  %cmp155 = icmp eq i16* %148, %add.ptr154, !dbg !6908
  br i1 %cmp155, label %if.then159, label %lor.lhs.false, !dbg !6909

lor.lhs.false:                                    ; preds = %land.lhs.true
  %150 = load i16*, i16** %mid, align 8, !dbg !6910
  %151 = load i16*, i16** %left, align 8, !dbg !6912
  %cmp157 = icmp eq i16* %150, %151, !dbg !6913
  br i1 %cmp157, label %if.then159, label %if.end176, !dbg !6914

if.then159:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %152 = load i16*, i16** %start, align 8, !dbg !6915
  store i16* %152, i16** %mid, align 8, !dbg !6918
  br label %while.cond160, !dbg !6919

while.cond160:                                    ; preds = %while.body169, %if.then159
  %153 = load i16*, i16** %mid, align 8, !dbg !6920
  %154 = load i16*, i16** %end, align 8, !dbg !6922
  %cmp161 = icmp ult i16* %153, %154, !dbg !6923
  br i1 %cmp161, label %land.rhs163, label %land.end168, !dbg !6924

land.rhs163:                                      ; preds = %while.cond160
  %155 = load i16*, i16** %mid, align 8, !dbg !6925
  %156 = bitcast i16* %155 to i8*, !dbg !6925
  %157 = load i16*, i16** %mid, align 8, !dbg !6927
  %add.ptr164 = getelementptr inbounds i16, i16* %157, i64 1, !dbg !6928
  %158 = bitcast i16* %add.ptr164 to i8*, !dbg !6927
  %call165 = call i32 @qsort_comparison_function_int16(i8* %156, i8* %158), !dbg !6929
  %cmp166 = icmp sle i32 %call165, 0, !dbg !6930
  br label %land.end168

land.end168:                                      ; preds = %land.rhs163, %while.cond160
  %159 = phi i1 [ false, %while.cond160 ], [ %cmp166, %land.rhs163 ]
  br i1 %159, label %while.body169, label %while.end171, !dbg !6931

while.body169:                                    ; preds = %land.end168
  %160 = load i16*, i16** %mid, align 8, !dbg !6933
  %incdec.ptr170 = getelementptr inbounds i16, i16* %160, i32 1, !dbg !6933
  store i16* %incdec.ptr170, i16** %mid, align 8, !dbg !6933
  br label %while.cond160, !dbg !6935, !llvm.loop !6936

while.end171:                                     ; preds = %land.end168
  %161 = load i16*, i16** %mid, align 8, !dbg !6938
  %162 = load i16*, i16** %end, align 8, !dbg !6941
  %cmp172 = icmp eq i16* %161, %162, !dbg !6942
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !6938

if.then174:                                       ; preds = %while.end171
  br label %while.end216, !dbg !6943

if.end175:                                        ; preds = %while.end171
  br label %if.end176, !dbg !6945

if.end176:                                        ; preds = %if.end175, %lor.lhs.false, %do.end152
  %163 = load i16*, i16** %end, align 8, !dbg !6947
  %164 = load i16*, i16** %left, align 8, !dbg !6950
  %sub.ptr.lhs.cast177 = ptrtoint i16* %163 to i64, !dbg !6951
  %sub.ptr.rhs.cast178 = ptrtoint i16* %164 to i64, !dbg !6951
  %sub.ptr.sub179 = sub i64 %sub.ptr.lhs.cast177, %sub.ptr.rhs.cast178, !dbg !6951
  %sub.ptr.div180 = sdiv exact i64 %sub.ptr.sub179, 2, !dbg !6951
  %165 = load i16*, i16** %left, align 8, !dbg !6952
  %166 = load i16*, i16** %start, align 8, !dbg !6953
  %sub.ptr.lhs.cast181 = ptrtoint i16* %165 to i64, !dbg !6954
  %sub.ptr.rhs.cast182 = ptrtoint i16* %166 to i64, !dbg !6954
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182, !dbg !6954
  %sub.ptr.div184 = sdiv exact i64 %sub.ptr.sub183, 2, !dbg !6954
  %cmp185 = icmp slt i64 %sub.ptr.div180, %sub.ptr.div184, !dbg !6955
  br i1 %cmp185, label %if.then187, label %if.else196, !dbg !6947

if.then187:                                       ; preds = %if.end176
  %167 = load i16*, i16** %start, align 8, !dbg !6956
  %168 = bitcast i16* %167 to i8*, !dbg !6956
  %169 = load i32, i32* %sp, align 4, !dbg !6959
  %idxprom188 = sext i32 %169 to i64, !dbg !6960
  %arrayidx189 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom188, !dbg !6960
  %arrayidx190 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx189, i64 0, i64 0, !dbg !6960
  store i8* %168, i8** %arrayidx190, align 16, !dbg !6961
  %170 = load i16*, i16** %right, align 8, !dbg !6962
  %171 = bitcast i16* %170 to i8*, !dbg !6962
  %172 = load i32, i32* %sp, align 4, !dbg !6963
  %inc191 = add nsw i32 %172, 1, !dbg !6963
  store i32 %inc191, i32* %sp, align 4, !dbg !6963
  %idxprom192 = sext i32 %172 to i64, !dbg !6964
  %arrayidx193 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom192, !dbg !6964
  %arrayidx194 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx193, i64 0, i64 1, !dbg !6964
  store i8* %171, i8** %arrayidx194, align 8, !dbg !6965
  %173 = load i16*, i16** %left, align 8, !dbg !6966
  %add.ptr195 = getelementptr inbounds i16, i16* %173, i64 1, !dbg !6967
  store i16* %add.ptr195, i16** %start, align 8, !dbg !6968
  br label %if.end205, !dbg !6969

if.else196:                                       ; preds = %if.end176
  %174 = load i16*, i16** %left, align 8, !dbg !6970
  %add.ptr197 = getelementptr inbounds i16, i16* %174, i64 1, !dbg !6973
  %175 = bitcast i16* %add.ptr197 to i8*, !dbg !6970
  %176 = load i32, i32* %sp, align 4, !dbg !6974
  %idxprom198 = sext i32 %176 to i64, !dbg !6975
  %arrayidx199 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom198, !dbg !6975
  %arrayidx200 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx199, i64 0, i64 0, !dbg !6975
  store i8* %175, i8** %arrayidx200, align 16, !dbg !6976
  %177 = load i16*, i16** %end, align 8, !dbg !6977
  %178 = bitcast i16* %177 to i8*, !dbg !6977
  %179 = load i32, i32* %sp, align 4, !dbg !6978
  %inc201 = add nsw i32 %179, 1, !dbg !6978
  store i32 %inc201, i32* %sp, align 4, !dbg !6978
  %idxprom202 = sext i32 %179 to i64, !dbg !6979
  %arrayidx203 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom202, !dbg !6979
  %arrayidx204 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx203, i64 0, i64 1, !dbg !6979
  store i8* %178, i8** %arrayidx204, align 8, !dbg !6980
  %180 = load i16*, i16** %right, align 8, !dbg !6981
  store i16* %180, i16** %end, align 8, !dbg !6982
  br label %if.end205

if.end205:                                        ; preds = %if.else196, %if.then187
  br label %if.end215, !dbg !6983

if.else206:                                       ; preds = %while.body65
  %181 = load i16*, i16** %start, align 8, !dbg !6985
  %182 = bitcast i16* %181 to i8*, !dbg !6985
  %183 = load i16*, i16** %end, align 8, !dbg !6989
  %184 = bitcast i16* %183 to i8*, !dbg !6989
  %call207 = call i32 @qsort_comparison_function_int16(i8* %182, i8* %184), !dbg !6990
  %cmp208 = icmp sgt i32 %call207, 0, !dbg !6991
  br i1 %cmp208, label %if.then210, label %if.end214, !dbg !6990

if.then210:                                       ; preds = %if.else206
  br label %do.body211, !dbg !6992, !llvm.loop !6994

do.body211:                                       ; preds = %if.then210
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp212, metadata !6996, metadata !2753), !dbg !6998
  %185 = load i16*, i16** %end, align 8, !dbg !6999
  %186 = load i16, i16* %185, align 2, !dbg !7001
  store i16 %186, i16* %SWAP_tmp212, align 2, !dbg !7002
  %187 = load i16*, i16** %start, align 8, !dbg !7003
  %188 = load i16, i16* %187, align 2, !dbg !7004
  %189 = load i16*, i16** %end, align 8, !dbg !7005
  store i16 %188, i16* %189, align 2, !dbg !7006
  %190 = load i16, i16* %SWAP_tmp212, align 2, !dbg !7007
  %191 = load i16*, i16** %start, align 8, !dbg !7008
  store i16 %190, i16* %191, align 2, !dbg !7009
  br label %do.end213, !dbg !7010

do.end213:                                        ; preds = %do.body211
  br label %if.end214, !dbg !7011

if.end214:                                        ; preds = %do.end213, %if.else206
  br label %while.end216, !dbg !7013

if.end215:                                        ; preds = %if.end205
  br label %while.cond62, !dbg !7015, !llvm.loop !7017

while.end216:                                     ; preds = %if.end214, %if.then174, %if.then107, %while.cond62
  br label %while.cond, !dbg !7019, !llvm.loop !7021

while.end217:                                     ; preds = %while.cond
  br label %do.end218, !dbg !7023

do.end218:                                        ; preds = %while.end217
  %192 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7025
  %n219 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %192, i32 0, i32 19, !dbg !7026
  %arrayidx220 = getelementptr inbounds [2 x i32], [2 x i32]* %n219, i64 0, i64 0, !dbg !7025
  %193 = load i32, i32* %arrayidx220, align 32, !dbg !7025
  %194 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7027
  %num_patches221 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %194, i32 0, i32 27, !dbg !7028
  %195 = load i32, i32* %num_patches221, align 16, !dbg !7028
  %add222 = add i32 %193, %195, !dbg !7029
  %sub223 = sub i32 %add222, 1, !dbg !7030
  %196 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7031
  %n_lim = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %196, i32 0, i32 21, !dbg !7032
  store i32 %sub223, i32* %n_lim, align 4, !dbg !7033
  br label %while.cond224, !dbg !7034

while.cond224:                                    ; preds = %if.end271, %do.end218
  %197 = load i16*, i16** %out, align 8, !dbg !7035
  %198 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7037
  %f_tablelim225 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %198, i32 0, i32 26, !dbg !7038
  %arraydecay226 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim225, i32 0, i32 0, !dbg !7037
  %199 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7039
  %n_lim227 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %199, i32 0, i32 21, !dbg !7040
  %200 = load i32, i32* %n_lim227, align 4, !dbg !7040
  %idx.ext228 = zext i32 %200 to i64, !dbg !7041
  %add.ptr229 = getelementptr inbounds i16, i16* %arraydecay226, i64 %idx.ext228, !dbg !7041
  %cmp230 = icmp ult i16* %197, %add.ptr229, !dbg !7042
  br i1 %cmp230, label %while.body232, label %while.end272, !dbg !7043

while.body232:                                    ; preds = %while.cond224
  %201 = load i16*, i16** %in, align 8, !dbg !7044
  %202 = load i16, i16* %201, align 2, !dbg !7047
  %conv233 = zext i16 %202 to i32, !dbg !7047
  %conv234 = sitofp i32 %conv233 to float, !dbg !7047
  %203 = load i16*, i16** %out, align 8, !dbg !7048
  %204 = load i16, i16* %203, align 2, !dbg !7049
  %conv235 = zext i16 %204 to i32, !dbg !7049
  %conv236 = sitofp i32 %conv235 to float, !dbg !7049
  %205 = load float, float* %lim_bands_per_octave_warped, align 4, !dbg !7050
  %mul237 = fmul float %conv236, %205, !dbg !7051
  %cmp238 = fcmp oge float %conv234, %mul237, !dbg !7052
  br i1 %cmp238, label %if.then240, label %if.else243, !dbg !7053

if.then240:                                       ; preds = %while.body232
  %206 = load i16*, i16** %in, align 8, !dbg !7054
  %incdec.ptr241 = getelementptr inbounds i16, i16* %206, i32 1, !dbg !7054
  store i16* %incdec.ptr241, i16** %in, align 8, !dbg !7054
  %207 = load i16, i16* %206, align 2, !dbg !7056
  %208 = load i16*, i16** %out, align 8, !dbg !7057
  %incdec.ptr242 = getelementptr inbounds i16, i16* %208, i32 1, !dbg !7057
  store i16* %incdec.ptr242, i16** %out, align 8, !dbg !7057
  store i16 %207, i16* %incdec.ptr242, align 2, !dbg !7058
  br label %if.end271, !dbg !7059

if.else243:                                       ; preds = %while.body232
  %209 = load i16*, i16** %in, align 8, !dbg !7060
  %210 = load i16, i16* %209, align 2, !dbg !7063
  %conv244 = zext i16 %210 to i32, !dbg !7063
  %211 = load i16*, i16** %out, align 8, !dbg !7064
  %212 = load i16, i16* %211, align 2, !dbg !7065
  %conv245 = zext i16 %212 to i32, !dbg !7065
  %cmp246 = icmp eq i32 %conv244, %conv245, !dbg !7066
  br i1 %cmp246, label %if.then253, label %lor.lhs.false248, !dbg !7067

lor.lhs.false248:                                 ; preds = %if.else243
  %arraydecay249 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !7068
  %213 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7069
  %num_patches250 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %213, i32 0, i32 27, !dbg !7070
  %214 = load i32, i32* %num_patches250, align 16, !dbg !7070
  %215 = load i16*, i16** %in, align 8, !dbg !7071
  %216 = load i16, i16* %215, align 2, !dbg !7072
  %call251 = call i32 @in_table_int16(i16* %arraydecay249, i32 %214, i16 signext %216), !dbg !7073
  %tobool252 = icmp ne i32 %call251, 0, !dbg !7073
  br i1 %tobool252, label %if.else257, label %if.then253, !dbg !7074

if.then253:                                       ; preds = %lor.lhs.false248, %if.else243
  %217 = load i16*, i16** %in, align 8, !dbg !7076
  %incdec.ptr254 = getelementptr inbounds i16, i16* %217, i32 1, !dbg !7076
  store i16* %incdec.ptr254, i16** %in, align 8, !dbg !7076
  %218 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7078
  %n_lim255 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %218, i32 0, i32 21, !dbg !7079
  %219 = load i32, i32* %n_lim255, align 4, !dbg !7080
  %dec256 = add i32 %219, -1, !dbg !7080
  store i32 %dec256, i32* %n_lim255, align 4, !dbg !7080
  br label %if.end270, !dbg !7081

if.else257:                                       ; preds = %lor.lhs.false248
  %arraydecay258 = getelementptr inbounds [7 x i16], [7 x i16]* %patch_borders, i32 0, i32 0, !dbg !7082
  %220 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7085
  %num_patches259 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %220, i32 0, i32 27, !dbg !7086
  %221 = load i32, i32* %num_patches259, align 16, !dbg !7086
  %222 = load i16*, i16** %out, align 8, !dbg !7087
  %223 = load i16, i16* %222, align 2, !dbg !7088
  %call260 = call i32 @in_table_int16(i16* %arraydecay258, i32 %221, i16 signext %223), !dbg !7089
  %tobool261 = icmp ne i32 %call260, 0, !dbg !7089
  br i1 %tobool261, label %if.else266, label %if.then262, !dbg !7090

if.then262:                                       ; preds = %if.else257
  %224 = load i16*, i16** %in, align 8, !dbg !7091
  %incdec.ptr263 = getelementptr inbounds i16, i16* %224, i32 1, !dbg !7091
  store i16* %incdec.ptr263, i16** %in, align 8, !dbg !7091
  %225 = load i16, i16* %224, align 2, !dbg !7093
  %226 = load i16*, i16** %out, align 8, !dbg !7094
  store i16 %225, i16* %226, align 2, !dbg !7095
  %227 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7096
  %n_lim264 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %227, i32 0, i32 21, !dbg !7097
  %228 = load i32, i32* %n_lim264, align 4, !dbg !7098
  %dec265 = add i32 %228, -1, !dbg !7098
  store i32 %dec265, i32* %n_lim264, align 4, !dbg !7098
  br label %if.end269, !dbg !7099

if.else266:                                       ; preds = %if.else257
  %229 = load i16*, i16** %in, align 8, !dbg !7100
  %incdec.ptr267 = getelementptr inbounds i16, i16* %229, i32 1, !dbg !7100
  store i16* %incdec.ptr267, i16** %in, align 8, !dbg !7100
  %230 = load i16, i16* %229, align 2, !dbg !7102
  %231 = load i16*, i16** %out, align 8, !dbg !7103
  %incdec.ptr268 = getelementptr inbounds i16, i16* %231, i32 1, !dbg !7103
  store i16* %incdec.ptr268, i16** %out, align 8, !dbg !7103
  store i16 %230, i16* %incdec.ptr268, align 2, !dbg !7104
  br label %if.end269

if.end269:                                        ; preds = %if.else266, %if.then262
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then253
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then240
  br label %while.cond224, !dbg !7105, !llvm.loop !7107

while.end272:                                     ; preds = %while.cond224
  br label %if.end286, !dbg !7108

if.else273:                                       ; preds = %entry
  %232 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7109
  %f_tablelow274 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %232, i32 0, i32 23, !dbg !7111
  %arrayidx275 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow274, i64 0, i64 0, !dbg !7109
  %233 = load i16, i16* %arrayidx275, align 2, !dbg !7109
  %234 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7112
  %f_tablelim276 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %234, i32 0, i32 26, !dbg !7113
  %arrayidx277 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim276, i64 0, i64 0, !dbg !7112
  store i16 %233, i16* %arrayidx277, align 2, !dbg !7114
  %235 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7115
  %n278 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %235, i32 0, i32 19, !dbg !7116
  %arrayidx279 = getelementptr inbounds [2 x i32], [2 x i32]* %n278, i64 0, i64 0, !dbg !7115
  %236 = load i32, i32* %arrayidx279, align 32, !dbg !7115
  %idxprom280 = zext i32 %236 to i64, !dbg !7117
  %237 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7117
  %f_tablelow281 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %237, i32 0, i32 23, !dbg !7118
  %arrayidx282 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow281, i64 0, i64 %idxprom280, !dbg !7117
  %238 = load i16, i16* %arrayidx282, align 2, !dbg !7117
  %239 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7119
  %f_tablelim283 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %239, i32 0, i32 26, !dbg !7120
  %arrayidx284 = getelementptr inbounds [30 x i16], [30 x i16]* %f_tablelim283, i64 0, i64 1, !dbg !7119
  store i16 %238, i16* %arrayidx284, align 2, !dbg !7121
  %240 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7122
  %n_lim285 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %240, i32 0, i32 21, !dbg !7123
  store i32 1, i32* %n_lim285, align 4, !dbg !7124
  br label %if.end286

if.end286:                                        ; preds = %if.else273, %while.end272
  ret void, !dbg !7125
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !7126 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7130, metadata !2753), !dbg !7131
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7132, metadata !2753), !dbg !7133
  %0 = load i32, i32* %a.addr, align 4, !dbg !7134
  %1 = load i8, i8* %s.addr, align 1, !dbg !7135
  %conv = sext i8 %1 to i32, !dbg !7135
  %sub = sub nsw i32 0, %conv, !dbg !7136
  %conv1 = trunc i32 %sub to i8, !dbg !7137
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7134, !srcloc !7138
  store i32 %2, i32* %a.addr, align 4, !dbg !7134
  %3 = load i32, i32* %a.addr, align 4, !dbg !7139
  ret i32 %3, !dbg !7140
}

; Function Attrs: nounwind uwtable
define internal i32 @qsort_comparison_function_int16(i8* %a, i8* %b) #3 !dbg !7141 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7144, metadata !2753), !dbg !7145
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7146, metadata !2753), !dbg !7147
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7148
  %1 = bitcast i8* %0 to i16*, !dbg !7149
  %2 = load i16, i16* %1, align 2, !dbg !7150
  %conv = sext i16 %2 to i32, !dbg !7150
  %3 = load i8*, i8** %b.addr, align 8, !dbg !7151
  %4 = bitcast i8* %3 to i16*, !dbg !7152
  %5 = load i16, i16* %4, align 2, !dbg !7153
  %conv1 = sext i16 %5 to i32, !dbg !7153
  %sub = sub nsw i32 %conv, %conv1, !dbg !7154
  ret i32 %sub, !dbg !7155
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @in_table_int16(i16* %table, i32 %last_el, i16 signext %needle) #5 !dbg !7156 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca i16*, align 8
  %last_el.addr = alloca i32, align 4
  %needle.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store i16* %table, i16** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %table.addr, metadata !7159, metadata !2753), !dbg !7160
  store i32 %last_el, i32* %last_el.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_el.addr, metadata !7161, metadata !2753), !dbg !7162
  store i16 %needle, i16* %needle.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %needle.addr, metadata !7163, metadata !2753), !dbg !7164
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7165, metadata !2753), !dbg !7166
  store i32 0, i32* %i, align 4, !dbg !7167
  br label %for.cond, !dbg !7169

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7170
  %1 = load i32, i32* %last_el.addr, align 4, !dbg !7173
  %cmp = icmp sle i32 %0, %1, !dbg !7174
  br i1 %cmp, label %for.body, label %for.end, !dbg !7175

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !7176
  %idxprom = sext i32 %2 to i64, !dbg !7178
  %3 = load i16*, i16** %table.addr, align 8, !dbg !7178
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !7178
  %4 = load i16, i16* %arrayidx, align 2, !dbg !7178
  %conv = sext i16 %4 to i32, !dbg !7178
  %5 = load i16, i16* %needle.addr, align 2, !dbg !7179
  %conv1 = sext i16 %5 to i32, !dbg !7179
  %cmp2 = icmp eq i32 %conv, %conv1, !dbg !7180
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7181

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7182
  br label %return, !dbg !7182

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7183

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !7185
  %inc = add nsw i32 %6, 1, !dbg !7185
  store i32 %inc, i32* %i, align 4, !dbg !7185
  br label %for.cond, !dbg !7187, !llvm.loop !7188

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7190
  br label %return, !dbg !7190

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7191
  ret i32 %7, !dbg !7191
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_make_f_master(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.SpectrumParameters* %spectrum) #3 !dbg !7192 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %spectrum.addr = alloca %struct.SpectrumParameters*, align 8
  %temp = alloca i32, align 4
  %max_qmf_subbands = alloca i32, align 4
  %start_min = alloca i32, align 4
  %stop_min = alloca i32, align 4
  %k = alloca i32, align 4
  %sbr_offset_ptr = alloca i8*, align 8
  %stop_dk = alloca [13 x i16], align 16
  %stack = alloca [64 x [2 x i8*]], align 16
  %sp = alloca i32, align 4
  %start = alloca i16*, align 8
  %end = alloca i16*, align 8
  %checksort = alloca i32, align 4
  %right = alloca i16*, align 8
  %left = alloca i16*, align 8
  %mid = alloca i16*, align 8
  %SWAP_tmp = alloca i16, align 2
  %SWAP_tmp65 = alloca i16, align 2
  %SWAP_tmp74 = alloca i16, align 2
  %SWAP_tmp84 = alloca i16, align 2
  %SWAP_tmp93 = alloca i16, align 2
  %SWAP_tmp125 = alloca i16, align 2
  %SWAP_tmp132 = alloca i16, align 2
  %SWAP_tmp194 = alloca i16, align 2
  %dk = alloca i32, align 4
  %k2diff = alloca i32, align 4
  %half_bands = alloca i32, align 4
  %two_regions = alloca i32, align 4
  %num_bands_0 = alloca i32, align 4
  %vdk0_max = alloca i32, align 4
  %vdk1_min = alloca i32, align 4
  %vk0 = alloca [49 x i16], align 16
  %stack417 = alloca [64 x [2 x i8*]], align 16
  %sp418 = alloca i32, align 4
  %start432 = alloca i16*, align 8
  %end437 = alloca i16*, align 8
  %checksort449 = alloca i32, align 4
  %right450 = alloca i16*, align 8
  %left452 = alloca i16*, align 8
  %mid454 = alloca i16*, align 8
  %SWAP_tmp470 = alloca i16, align 2
  %SWAP_tmp474 = alloca i16, align 2
  %SWAP_tmp483 = alloca i16, align 2
  %SWAP_tmp493 = alloca i16, align 2
  %SWAP_tmp502 = alloca i16, align 2
  %SWAP_tmp538 = alloca i16, align 2
  %SWAP_tmp545 = alloca i16, align 2
  %SWAP_tmp610 = alloca i16, align 2
  %vk1 = alloca [49 x i16], align 16
  %invwarp = alloca float, align 4
  %num_bands_1 = alloca i32, align 4
  %change = alloca i32, align 4
  %stack684 = alloca [64 x [2 x i8*]], align 16
  %sp685 = alloca i32, align 4
  %start700 = alloca i16*, align 8
  %end705 = alloca i16*, align 8
  %checksort717 = alloca i32, align 4
  %right718 = alloca i16*, align 8
  %left720 = alloca i16*, align 8
  %mid722 = alloca i16*, align 8
  %SWAP_tmp738 = alloca i16, align 2
  %SWAP_tmp742 = alloca i16, align 2
  %SWAP_tmp751 = alloca i16, align 2
  %SWAP_tmp761 = alloca i16, align 2
  %SWAP_tmp770 = alloca i16, align 2
  %SWAP_tmp806 = alloca i16, align 2
  %SWAP_tmp813 = alloca i16, align 2
  %SWAP_tmp878 = alloca i16, align 2
  %stack922 = alloca [64 x [2 x i8*]], align 16
  %sp923 = alloca i32, align 4
  %start938 = alloca i16*, align 8
  %end943 = alloca i16*, align 8
  %checksort955 = alloca i32, align 4
  %right956 = alloca i16*, align 8
  %left958 = alloca i16*, align 8
  %mid960 = alloca i16*, align 8
  %SWAP_tmp976 = alloca i16, align 2
  %SWAP_tmp980 = alloca i16, align 2
  %SWAP_tmp989 = alloca i16, align 2
  %SWAP_tmp999 = alloca i16, align 2
  %SWAP_tmp1008 = alloca i16, align 2
  %SWAP_tmp1044 = alloca i16, align 2
  %SWAP_tmp1051 = alloca i16, align 2
  %SWAP_tmp1116 = alloca i16, align 2
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !7196, metadata !2753), !dbg !7197
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !7198, metadata !2753), !dbg !7199
  store %struct.SpectrumParameters* %spectrum, %struct.SpectrumParameters** %spectrum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectrumParameters** %spectrum.addr, metadata !7200, metadata !2753), !dbg !7201
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !7202, metadata !2753), !dbg !7203
  call void @llvm.dbg.declare(metadata i32* %max_qmf_subbands, metadata !7204, metadata !2753), !dbg !7205
  store i32 0, i32* %max_qmf_subbands, align 4, !dbg !7205
  call void @llvm.dbg.declare(metadata i32* %start_min, metadata !7206, metadata !2753), !dbg !7207
  call void @llvm.dbg.declare(metadata i32* %stop_min, metadata !7208, metadata !2753), !dbg !7209
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7210, metadata !2753), !dbg !7211
  call void @llvm.dbg.declare(metadata i8** %sbr_offset_ptr, metadata !7212, metadata !2753), !dbg !7214
  call void @llvm.dbg.declare(metadata [13 x i16]* %stop_dk, metadata !7215, metadata !2753), !dbg !7219
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7220
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 0, !dbg !7221
  %1 = load i32, i32* %sample_rate, align 32, !dbg !7221
  switch i32 %1, label %sw.default [
    i32 16000, label %sw.bb
    i32 22050, label %sw.bb1
    i32 24000, label %sw.bb2
    i32 32000, label %sw.bb3
    i32 44100, label %sw.bb4
    i32 48000, label %sw.bb4
    i32 64000, label %sw.bb4
    i32 88200, label %sw.bb5
    i32 96000, label %sw.bb5
    i32 128000, label %sw.bb5
    i32 176400, label %sw.bb5
    i32 192000, label %sw.bb5
  ], !dbg !7222

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 0, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7223
  br label %sw.epilog, !dbg !7225

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 1, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7226
  br label %sw.epilog, !dbg !7227

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 2, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7228
  br label %sw.epilog, !dbg !7229

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 3, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7230
  br label %sw.epilog, !dbg !7231

sw.bb4:                                           ; preds = %entry, %entry, %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 4, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7232
  br label %sw.epilog, !dbg !7233

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  store i8* getelementptr inbounds ([6 x [16 x i8]], [6 x [16 x i8]]* @sbr_offset, i64 0, i64 5, i32 0), i8** %sbr_offset_ptr, align 8, !dbg !7234
  br label %sw.epilog, !dbg !7235

sw.default:                                       ; preds = %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7236
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %2, i32 0, i32 1, !dbg !7237
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7237
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !7236
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7238
  %sample_rate6 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 0, !dbg !7239
  %6 = load i32, i32* %sample_rate6, align 32, !dbg !7239
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0), i32 %6), !dbg !7240
  store i32 -1, i32* %retval, align 4, !dbg !7241
  br label %return, !dbg !7241

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7242
  %sample_rate7 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 0, !dbg !7244
  %8 = load i32, i32* %sample_rate7, align 32, !dbg !7244
  %cmp = icmp slt i32 %8, 32000, !dbg !7245
  br i1 %cmp, label %if.then, label %if.else, !dbg !7246

if.then:                                          ; preds = %sw.epilog
  store i32 3000, i32* %temp, align 4, !dbg !7247
  br label %if.end12, !dbg !7249

if.else:                                          ; preds = %sw.epilog
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7250
  %sample_rate8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 0, !dbg !7253
  %10 = load i32, i32* %sample_rate8, align 32, !dbg !7253
  %cmp9 = icmp slt i32 %10, 64000, !dbg !7254
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !7250

if.then10:                                        ; preds = %if.else
  store i32 4000, i32* %temp, align 4, !dbg !7255
  br label %if.end, !dbg !7257

if.else11:                                        ; preds = %if.else
  store i32 5000, i32* %temp, align 4, !dbg !7258
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %11 = load i32, i32* %temp, align 4, !dbg !7259
  %shl = shl i32 %11, 7, !dbg !7260
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7261
  %sample_rate13 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 0, !dbg !7262
  %13 = load i32, i32* %sample_rate13, align 32, !dbg !7262
  %shr = ashr i32 %13, 1, !dbg !7263
  %add = add i32 %shl, %shr, !dbg !7264
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7265
  %sample_rate14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 0, !dbg !7266
  %15 = load i32, i32* %sample_rate14, align 32, !dbg !7266
  %div = udiv i32 %add, %15, !dbg !7267
  store i32 %div, i32* %start_min, align 4, !dbg !7268
  %16 = load i32, i32* %temp, align 4, !dbg !7269
  %shl15 = shl i32 %16, 8, !dbg !7270
  %17 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7271
  %sample_rate16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %17, i32 0, i32 0, !dbg !7272
  %18 = load i32, i32* %sample_rate16, align 32, !dbg !7272
  %shr17 = ashr i32 %18, 1, !dbg !7273
  %add18 = add i32 %shl15, %shr17, !dbg !7274
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7275
  %sample_rate19 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 0, !dbg !7276
  %20 = load i32, i32* %sample_rate19, align 32, !dbg !7276
  %div20 = udiv i32 %add18, %20, !dbg !7277
  store i32 %div20, i32* %stop_min, align 4, !dbg !7278
  %21 = load i32, i32* %start_min, align 4, !dbg !7279
  %22 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7280
  %bs_start_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %22, i32 0, i32 0, !dbg !7281
  %23 = load i8, i8* %bs_start_freq, align 1, !dbg !7281
  %idxprom = zext i8 %23 to i64, !dbg !7282
  %24 = load i8*, i8** %sbr_offset_ptr, align 8, !dbg !7282
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %idxprom, !dbg !7282
  %25 = load i8, i8* %arrayidx, align 1, !dbg !7282
  %conv = sext i8 %25 to i32, !dbg !7282
  %add21 = add i32 %21, %conv, !dbg !7283
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7284
  %k22 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 12, !dbg !7285
  %arrayidx23 = getelementptr inbounds [5 x i32], [5 x i32]* %k22, i64 0, i64 0, !dbg !7284
  store i32 %add21, i32* %arrayidx23, align 4, !dbg !7286
  %27 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7287
  %bs_stop_freq = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %27, i32 0, i32 1, !dbg !7289
  %28 = load i8, i8* %bs_stop_freq, align 1, !dbg !7289
  %conv24 = zext i8 %28 to i32, !dbg !7287
  %cmp25 = icmp slt i32 %conv24, 14, !dbg !7290
  br i1 %cmp25, label %if.then27, label %if.else212, !dbg !7291

if.then27:                                        ; preds = %if.end12
  %29 = load i32, i32* %stop_min, align 4, !dbg !7292
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7294
  %k28 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 12, !dbg !7295
  %arrayidx29 = getelementptr inbounds [5 x i32], [5 x i32]* %k28, i64 0, i64 2, !dbg !7294
  store i32 %29, i32* %arrayidx29, align 4, !dbg !7296
  %arraydecay = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7297
  %31 = load i32, i32* %stop_min, align 4, !dbg !7298
  call void @make_bands(i16* %arraydecay, i32 %31, i32 64, i32 13), !dbg !7299
  br label %do.body, !dbg !7300, !llvm.loop !7301

do.body:                                          ; preds = %if.then27
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack, metadata !7302, metadata !2753), !dbg !7304
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !7305, metadata !2753), !dbg !7306
  store i32 1, i32* %sp, align 4, !dbg !7307
  %arraydecay30 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7309
  %32 = bitcast i16* %arraydecay30 to i8*, !dbg !7309
  %arrayidx31 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !7310
  %arrayidx32 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx31, i64 0, i64 0, !dbg !7310
  store i8* %32, i8** %arrayidx32, align 16, !dbg !7311
  %arraydecay33 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i32 0, i32 0, !dbg !7312
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay33, i64 13, !dbg !7313
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !7314
  %33 = bitcast i16* %add.ptr34 to i8*, !dbg !7312
  %arrayidx35 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 0, !dbg !7315
  %arrayidx36 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx35, i64 0, i64 1, !dbg !7315
  store i8* %33, i8** %arrayidx36, align 8, !dbg !7316
  br label %while.cond, !dbg !7317

while.cond:                                       ; preds = %while.end198, %do.body
  %34 = load i32, i32* %sp, align 4, !dbg !7318
  %tobool = icmp ne i32 %34, 0, !dbg !7320
  br i1 %tobool, label %while.body, label %while.end199, !dbg !7320

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !7321, metadata !2753), !dbg !7324
  %35 = load i32, i32* %sp, align 4, !dbg !7325
  %dec = add nsw i32 %35, -1, !dbg !7325
  store i32 %dec, i32* %sp, align 4, !dbg !7325
  %idxprom37 = sext i32 %dec to i64, !dbg !7327
  %arrayidx38 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom37, !dbg !7327
  %arrayidx39 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx38, i64 0, i64 0, !dbg !7327
  %36 = load i8*, i8** %arrayidx39, align 16, !dbg !7327
  %37 = bitcast i8* %36 to i16*, !dbg !7327
  store i16* %37, i16** %start, align 8, !dbg !7328
  call void @llvm.dbg.declare(metadata i16** %end, metadata !7329, metadata !2753), !dbg !7330
  %38 = load i32, i32* %sp, align 4, !dbg !7331
  %idxprom40 = sext i32 %38 to i64, !dbg !7332
  %arrayidx41 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom40, !dbg !7332
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx41, i64 0, i64 1, !dbg !7332
  %39 = load i8*, i8** %arrayidx42, align 8, !dbg !7332
  %40 = bitcast i8* %39 to i16*, !dbg !7332
  store i16* %40, i16** %end, align 8, !dbg !7333
  br label %while.cond43, !dbg !7334

while.cond43:                                     ; preds = %if.end197, %while.body
  %41 = load i16*, i16** %start, align 8, !dbg !7335
  %42 = load i16*, i16** %end, align 8, !dbg !7337
  %cmp44 = icmp ult i16* %41, %42, !dbg !7338
  br i1 %cmp44, label %while.body46, label %while.end198, !dbg !7339

while.body46:                                     ; preds = %while.cond43
  %43 = load i16*, i16** %start, align 8, !dbg !7340
  %44 = load i16*, i16** %end, align 8, !dbg !7344
  %add.ptr47 = getelementptr inbounds i16, i16* %44, i64 -1, !dbg !7345
  %cmp48 = icmp ult i16* %43, %add.ptr47, !dbg !7346
  br i1 %cmp48, label %if.then50, label %if.else188, !dbg !7340

if.then50:                                        ; preds = %while.body46
  call void @llvm.dbg.declare(metadata i32* %checksort, metadata !7347, metadata !2753), !dbg !7349
  store i32 0, i32* %checksort, align 4, !dbg !7350
  call void @llvm.dbg.declare(metadata i16** %right, metadata !7352, metadata !2753), !dbg !7353
  %45 = load i16*, i16** %end, align 8, !dbg !7354
  %add.ptr51 = getelementptr inbounds i16, i16* %45, i64 -2, !dbg !7355
  store i16* %add.ptr51, i16** %right, align 8, !dbg !7356
  call void @llvm.dbg.declare(metadata i16** %left, metadata !7357, metadata !2753), !dbg !7358
  %46 = load i16*, i16** %start, align 8, !dbg !7359
  %add.ptr52 = getelementptr inbounds i16, i16* %46, i64 1, !dbg !7360
  store i16* %add.ptr52, i16** %left, align 8, !dbg !7361
  call void @llvm.dbg.declare(metadata i16** %mid, metadata !7362, metadata !2753), !dbg !7363
  %47 = load i16*, i16** %start, align 8, !dbg !7364
  %48 = load i16*, i16** %end, align 8, !dbg !7365
  %49 = load i16*, i16** %start, align 8, !dbg !7366
  %sub.ptr.lhs.cast = ptrtoint i16* %48 to i64, !dbg !7367
  %sub.ptr.rhs.cast = ptrtoint i16* %49 to i64, !dbg !7367
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7367
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !7367
  %shr53 = ashr i64 %sub.ptr.div, 1, !dbg !7368
  %add.ptr54 = getelementptr inbounds i16, i16* %47, i64 %shr53, !dbg !7369
  store i16* %add.ptr54, i16** %mid, align 8, !dbg !7370
  %50 = load i16*, i16** %start, align 8, !dbg !7371
  %51 = bitcast i16* %50 to i8*, !dbg !7371
  %52 = load i16*, i16** %end, align 8, !dbg !7372
  %53 = bitcast i16* %52 to i8*, !dbg !7372
  %call = call i32 @qsort_comparison_function_int16(i8* %51, i8* %53), !dbg !7373
  %cmp55 = icmp sgt i32 %call, 0, !dbg !7374
  br i1 %cmp55, label %if.then57, label %if.else68, !dbg !7373

if.then57:                                        ; preds = %if.then50
  %54 = load i16*, i16** %end, align 8, !dbg !7375
  %55 = bitcast i16* %54 to i8*, !dbg !7375
  %56 = load i16*, i16** %mid, align 8, !dbg !7380
  %57 = bitcast i16* %56 to i8*, !dbg !7380
  %call58 = call i32 @qsort_comparison_function_int16(i8* %55, i8* %57), !dbg !7381
  %cmp59 = icmp sgt i32 %call58, 0, !dbg !7382
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !7381

if.then61:                                        ; preds = %if.then57
  br label %do.body62, !dbg !7383, !llvm.loop !7385

do.body62:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp, metadata !7387, metadata !2753), !dbg !7389
  %58 = load i16*, i16** %mid, align 8, !dbg !7390
  %59 = load i16, i16* %58, align 2, !dbg !7392
  store i16 %59, i16* %SWAP_tmp, align 2, !dbg !7393
  %60 = load i16*, i16** %start, align 8, !dbg !7394
  %61 = load i16, i16* %60, align 2, !dbg !7395
  %62 = load i16*, i16** %mid, align 8, !dbg !7396
  store i16 %61, i16* %62, align 2, !dbg !7397
  %63 = load i16, i16* %SWAP_tmp, align 2, !dbg !7398
  %64 = load i16*, i16** %start, align 8, !dbg !7399
  store i16 %63, i16* %64, align 2, !dbg !7400
  br label %do.end, !dbg !7401

do.end:                                           ; preds = %do.body62
  br label %if.end67, !dbg !7402

if.else63:                                        ; preds = %if.then57
  br label %do.body64, !dbg !7404, !llvm.loop !7406

do.body64:                                        ; preds = %if.else63
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp65, metadata !7408, metadata !2753), !dbg !7410
  %65 = load i16*, i16** %end, align 8, !dbg !7411
  %66 = load i16, i16* %65, align 2, !dbg !7413
  store i16 %66, i16* %SWAP_tmp65, align 2, !dbg !7414
  %67 = load i16*, i16** %start, align 8, !dbg !7415
  %68 = load i16, i16* %67, align 2, !dbg !7416
  %69 = load i16*, i16** %end, align 8, !dbg !7417
  store i16 %68, i16* %69, align 2, !dbg !7418
  %70 = load i16, i16* %SWAP_tmp65, align 2, !dbg !7419
  %71 = load i16*, i16** %start, align 8, !dbg !7420
  store i16 %70, i16* %71, align 2, !dbg !7421
  br label %do.end66, !dbg !7422

do.end66:                                         ; preds = %do.body64
  br label %if.end67

if.end67:                                         ; preds = %do.end66, %do.end
  br label %if.end78, !dbg !7423

if.else68:                                        ; preds = %if.then50
  %72 = load i16*, i16** %start, align 8, !dbg !7425
  %73 = bitcast i16* %72 to i8*, !dbg !7425
  %74 = load i16*, i16** %mid, align 8, !dbg !7429
  %75 = bitcast i16* %74 to i8*, !dbg !7429
  %call69 = call i32 @qsort_comparison_function_int16(i8* %73, i8* %75), !dbg !7430
  %cmp70 = icmp sgt i32 %call69, 0, !dbg !7431
  br i1 %cmp70, label %if.then72, label %if.else76, !dbg !7430

if.then72:                                        ; preds = %if.else68
  br label %do.body73, !dbg !7432, !llvm.loop !7434

do.body73:                                        ; preds = %if.then72
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp74, metadata !7436, metadata !2753), !dbg !7438
  %76 = load i16*, i16** %mid, align 8, !dbg !7439
  %77 = load i16, i16* %76, align 2, !dbg !7441
  store i16 %77, i16* %SWAP_tmp74, align 2, !dbg !7442
  %78 = load i16*, i16** %start, align 8, !dbg !7443
  %79 = load i16, i16* %78, align 2, !dbg !7444
  %80 = load i16*, i16** %mid, align 8, !dbg !7445
  store i16 %79, i16* %80, align 2, !dbg !7446
  %81 = load i16, i16* %SWAP_tmp74, align 2, !dbg !7447
  %82 = load i16*, i16** %start, align 8, !dbg !7448
  store i16 %81, i16* %82, align 2, !dbg !7449
  br label %do.end75, !dbg !7450

do.end75:                                         ; preds = %do.body73
  br label %if.end77, !dbg !7451

if.else76:                                        ; preds = %if.else68
  store i32 1, i32* %checksort, align 4, !dbg !7453
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %do.end75
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end67
  %83 = load i16*, i16** %mid, align 8, !dbg !7455
  %84 = bitcast i16* %83 to i8*, !dbg !7455
  %85 = load i16*, i16** %end, align 8, !dbg !7458
  %86 = bitcast i16* %85 to i8*, !dbg !7458
  %call79 = call i32 @qsort_comparison_function_int16(i8* %84, i8* %86), !dbg !7459
  %cmp80 = icmp sgt i32 %call79, 0, !dbg !7460
  br i1 %cmp80, label %if.then82, label %if.end86, !dbg !7459

if.then82:                                        ; preds = %if.end78
  br label %do.body83, !dbg !7461, !llvm.loop !7464

do.body83:                                        ; preds = %if.then82
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp84, metadata !7466, metadata !2753), !dbg !7468
  %87 = load i16*, i16** %end, align 8, !dbg !7469
  %88 = load i16, i16* %87, align 2, !dbg !7471
  store i16 %88, i16* %SWAP_tmp84, align 2, !dbg !7472
  %89 = load i16*, i16** %mid, align 8, !dbg !7473
  %90 = load i16, i16* %89, align 2, !dbg !7474
  %91 = load i16*, i16** %end, align 8, !dbg !7475
  store i16 %90, i16* %91, align 2, !dbg !7476
  %92 = load i16, i16* %SWAP_tmp84, align 2, !dbg !7477
  %93 = load i16*, i16** %mid, align 8, !dbg !7478
  store i16 %92, i16* %93, align 2, !dbg !7479
  br label %do.end85, !dbg !7480

do.end85:                                         ; preds = %do.body83
  store i32 0, i32* %checksort, align 4, !dbg !7481
  br label %if.end86, !dbg !7483

if.end86:                                         ; preds = %do.end85, %if.end78
  %94 = load i16*, i16** %start, align 8, !dbg !7484
  %95 = load i16*, i16** %end, align 8, !dbg !7487
  %add.ptr87 = getelementptr inbounds i16, i16* %95, i64 -2, !dbg !7488
  %cmp88 = icmp eq i16* %94, %add.ptr87, !dbg !7489
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !7484

if.then90:                                        ; preds = %if.end86
  br label %while.end198, !dbg !7490

if.end91:                                         ; preds = %if.end86
  br label %do.body92, !dbg !7492, !llvm.loop !7494

do.body92:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp93, metadata !7496, metadata !2753), !dbg !7498
  %96 = load i16*, i16** %mid, align 8, !dbg !7499
  %97 = load i16, i16* %96, align 2, !dbg !7501
  store i16 %97, i16* %SWAP_tmp93, align 2, !dbg !7502
  %98 = load i16*, i16** %end, align 8, !dbg !7503
  %arrayidx94 = getelementptr inbounds i16, i16* %98, i64 -1, !dbg !7503
  %99 = load i16, i16* %arrayidx94, align 2, !dbg !7503
  %100 = load i16*, i16** %mid, align 8, !dbg !7504
  store i16 %99, i16* %100, align 2, !dbg !7505
  %101 = load i16, i16* %SWAP_tmp93, align 2, !dbg !7506
  %102 = load i16*, i16** %end, align 8, !dbg !7507
  %arrayidx95 = getelementptr inbounds i16, i16* %102, i64 -1, !dbg !7507
  store i16 %101, i16* %arrayidx95, align 2, !dbg !7508
  br label %do.end96, !dbg !7509

do.end96:                                         ; preds = %do.body92
  br label %while.cond97, !dbg !7510

while.cond97:                                     ; preds = %if.end129, %do.end96
  %103 = load i16*, i16** %left, align 8, !dbg !7512
  %104 = load i16*, i16** %right, align 8, !dbg !7514
  %cmp98 = icmp ule i16* %103, %104, !dbg !7515
  br i1 %cmp98, label %while.body100, label %while.end130, !dbg !7516

while.body100:                                    ; preds = %while.cond97
  br label %while.cond101, !dbg !7517

while.cond101:                                    ; preds = %while.body108, %while.body100
  %105 = load i16*, i16** %left, align 8, !dbg !7520
  %106 = load i16*, i16** %right, align 8, !dbg !7522
  %cmp102 = icmp ule i16* %105, %106, !dbg !7523
  br i1 %cmp102, label %land.rhs, label %land.end, !dbg !7524

land.rhs:                                         ; preds = %while.cond101
  %107 = load i16*, i16** %left, align 8, !dbg !7525
  %108 = bitcast i16* %107 to i8*, !dbg !7525
  %109 = load i16*, i16** %end, align 8, !dbg !7527
  %add.ptr104 = getelementptr inbounds i16, i16* %109, i64 -1, !dbg !7528
  %110 = bitcast i16* %add.ptr104 to i8*, !dbg !7527
  %call105 = call i32 @qsort_comparison_function_int16(i8* %108, i8* %110), !dbg !7529
  %cmp106 = icmp slt i32 %call105, 0, !dbg !7530
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond101
  %111 = phi i1 [ false, %while.cond101 ], [ %cmp106, %land.rhs ]
  br i1 %111, label %while.body108, label %while.end, !dbg !7531

while.body108:                                    ; preds = %land.end
  %112 = load i16*, i16** %left, align 8, !dbg !7533
  %incdec.ptr = getelementptr inbounds i16, i16* %112, i32 1, !dbg !7533
  store i16* %incdec.ptr, i16** %left, align 8, !dbg !7533
  br label %while.cond101, !dbg !7535, !llvm.loop !7536

while.end:                                        ; preds = %land.end
  br label %while.cond109, !dbg !7538

while.cond109:                                    ; preds = %while.body118, %while.end
  %113 = load i16*, i16** %left, align 8, !dbg !7540
  %114 = load i16*, i16** %right, align 8, !dbg !7542
  %cmp110 = icmp ule i16* %113, %114, !dbg !7543
  br i1 %cmp110, label %land.rhs112, label %land.end117, !dbg !7544

land.rhs112:                                      ; preds = %while.cond109
  %115 = load i16*, i16** %right, align 8, !dbg !7545
  %116 = bitcast i16* %115 to i8*, !dbg !7545
  %117 = load i16*, i16** %end, align 8, !dbg !7547
  %add.ptr113 = getelementptr inbounds i16, i16* %117, i64 -1, !dbg !7548
  %118 = bitcast i16* %add.ptr113 to i8*, !dbg !7547
  %call114 = call i32 @qsort_comparison_function_int16(i8* %116, i8* %118), !dbg !7549
  %cmp115 = icmp sgt i32 %call114, 0, !dbg !7550
  br label %land.end117

land.end117:                                      ; preds = %land.rhs112, %while.cond109
  %119 = phi i1 [ false, %while.cond109 ], [ %cmp115, %land.rhs112 ]
  br i1 %119, label %while.body118, label %while.end120, !dbg !7551

while.body118:                                    ; preds = %land.end117
  %120 = load i16*, i16** %right, align 8, !dbg !7553
  %incdec.ptr119 = getelementptr inbounds i16, i16* %120, i32 -1, !dbg !7553
  store i16* %incdec.ptr119, i16** %right, align 8, !dbg !7553
  br label %while.cond109, !dbg !7555, !llvm.loop !7556

while.end120:                                     ; preds = %land.end117
  %121 = load i16*, i16** %left, align 8, !dbg !7558
  %122 = load i16*, i16** %right, align 8, !dbg !7561
  %cmp121 = icmp ule i16* %121, %122, !dbg !7562
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !7558

if.then123:                                       ; preds = %while.end120
  br label %do.body124, !dbg !7563, !llvm.loop !7566

do.body124:                                       ; preds = %if.then123
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp125, metadata !7568, metadata !2753), !dbg !7570
  %123 = load i16*, i16** %right, align 8, !dbg !7571
  %124 = load i16, i16* %123, align 2, !dbg !7573
  store i16 %124, i16* %SWAP_tmp125, align 2, !dbg !7574
  %125 = load i16*, i16** %left, align 8, !dbg !7575
  %126 = load i16, i16* %125, align 2, !dbg !7576
  %127 = load i16*, i16** %right, align 8, !dbg !7577
  store i16 %126, i16* %127, align 2, !dbg !7578
  %128 = load i16, i16* %SWAP_tmp125, align 2, !dbg !7579
  %129 = load i16*, i16** %left, align 8, !dbg !7580
  store i16 %128, i16* %129, align 2, !dbg !7581
  br label %do.end126, !dbg !7582

do.end126:                                        ; preds = %do.body124
  %130 = load i16*, i16** %left, align 8, !dbg !7583
  %incdec.ptr127 = getelementptr inbounds i16, i16* %130, i32 1, !dbg !7583
  store i16* %incdec.ptr127, i16** %left, align 8, !dbg !7583
  %131 = load i16*, i16** %right, align 8, !dbg !7585
  %incdec.ptr128 = getelementptr inbounds i16, i16* %131, i32 -1, !dbg !7585
  store i16* %incdec.ptr128, i16** %right, align 8, !dbg !7585
  br label %if.end129, !dbg !7586

if.end129:                                        ; preds = %do.end126, %while.end120
  br label %while.cond97, !dbg !7587, !llvm.loop !7589

while.end130:                                     ; preds = %while.cond97
  br label %do.body131, !dbg !7591, !llvm.loop !7593

do.body131:                                       ; preds = %while.end130
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp132, metadata !7595, metadata !2753), !dbg !7597
  %132 = load i16*, i16** %left, align 8, !dbg !7598
  %133 = load i16, i16* %132, align 2, !dbg !7600
  store i16 %133, i16* %SWAP_tmp132, align 2, !dbg !7601
  %134 = load i16*, i16** %end, align 8, !dbg !7602
  %arrayidx133 = getelementptr inbounds i16, i16* %134, i64 -1, !dbg !7602
  %135 = load i16, i16* %arrayidx133, align 2, !dbg !7602
  %136 = load i16*, i16** %left, align 8, !dbg !7603
  store i16 %135, i16* %136, align 2, !dbg !7604
  %137 = load i16, i16* %SWAP_tmp132, align 2, !dbg !7605
  %138 = load i16*, i16** %end, align 8, !dbg !7606
  %arrayidx134 = getelementptr inbounds i16, i16* %138, i64 -1, !dbg !7606
  store i16 %137, i16* %arrayidx134, align 2, !dbg !7607
  br label %do.end135, !dbg !7608

do.end135:                                        ; preds = %do.body131
  %139 = load i32, i32* %checksort, align 4, !dbg !7609
  %tobool136 = icmp ne i32 %139, 0, !dbg !7609
  br i1 %tobool136, label %land.lhs.true, label %if.end159, !dbg !7612

land.lhs.true:                                    ; preds = %do.end135
  %140 = load i16*, i16** %mid, align 8, !dbg !7613
  %141 = load i16*, i16** %left, align 8, !dbg !7615
  %add.ptr137 = getelementptr inbounds i16, i16* %141, i64 -1, !dbg !7616
  %cmp138 = icmp eq i16* %140, %add.ptr137, !dbg !7617
  br i1 %cmp138, label %if.then142, label %lor.lhs.false, !dbg !7618

lor.lhs.false:                                    ; preds = %land.lhs.true
  %142 = load i16*, i16** %mid, align 8, !dbg !7619
  %143 = load i16*, i16** %left, align 8, !dbg !7621
  %cmp140 = icmp eq i16* %142, %143, !dbg !7622
  br i1 %cmp140, label %if.then142, label %if.end159, !dbg !7623

if.then142:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %144 = load i16*, i16** %start, align 8, !dbg !7624
  store i16* %144, i16** %mid, align 8, !dbg !7627
  br label %while.cond143, !dbg !7628

while.cond143:                                    ; preds = %while.body152, %if.then142
  %145 = load i16*, i16** %mid, align 8, !dbg !7629
  %146 = load i16*, i16** %end, align 8, !dbg !7631
  %cmp144 = icmp ult i16* %145, %146, !dbg !7632
  br i1 %cmp144, label %land.rhs146, label %land.end151, !dbg !7633

land.rhs146:                                      ; preds = %while.cond143
  %147 = load i16*, i16** %mid, align 8, !dbg !7634
  %148 = bitcast i16* %147 to i8*, !dbg !7634
  %149 = load i16*, i16** %mid, align 8, !dbg !7636
  %add.ptr147 = getelementptr inbounds i16, i16* %149, i64 1, !dbg !7637
  %150 = bitcast i16* %add.ptr147 to i8*, !dbg !7636
  %call148 = call i32 @qsort_comparison_function_int16(i8* %148, i8* %150), !dbg !7638
  %cmp149 = icmp sle i32 %call148, 0, !dbg !7639
  br label %land.end151

land.end151:                                      ; preds = %land.rhs146, %while.cond143
  %151 = phi i1 [ false, %while.cond143 ], [ %cmp149, %land.rhs146 ]
  br i1 %151, label %while.body152, label %while.end154, !dbg !7640

while.body152:                                    ; preds = %land.end151
  %152 = load i16*, i16** %mid, align 8, !dbg !7642
  %incdec.ptr153 = getelementptr inbounds i16, i16* %152, i32 1, !dbg !7642
  store i16* %incdec.ptr153, i16** %mid, align 8, !dbg !7642
  br label %while.cond143, !dbg !7644, !llvm.loop !7645

while.end154:                                     ; preds = %land.end151
  %153 = load i16*, i16** %mid, align 8, !dbg !7647
  %154 = load i16*, i16** %end, align 8, !dbg !7650
  %cmp155 = icmp eq i16* %153, %154, !dbg !7651
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !7647

if.then157:                                       ; preds = %while.end154
  br label %while.end198, !dbg !7652

if.end158:                                        ; preds = %while.end154
  br label %if.end159, !dbg !7654

if.end159:                                        ; preds = %if.end158, %lor.lhs.false, %do.end135
  %155 = load i16*, i16** %end, align 8, !dbg !7656
  %156 = load i16*, i16** %left, align 8, !dbg !7659
  %sub.ptr.lhs.cast160 = ptrtoint i16* %155 to i64, !dbg !7660
  %sub.ptr.rhs.cast161 = ptrtoint i16* %156 to i64, !dbg !7660
  %sub.ptr.sub162 = sub i64 %sub.ptr.lhs.cast160, %sub.ptr.rhs.cast161, !dbg !7660
  %sub.ptr.div163 = sdiv exact i64 %sub.ptr.sub162, 2, !dbg !7660
  %157 = load i16*, i16** %left, align 8, !dbg !7661
  %158 = load i16*, i16** %start, align 8, !dbg !7662
  %sub.ptr.lhs.cast164 = ptrtoint i16* %157 to i64, !dbg !7663
  %sub.ptr.rhs.cast165 = ptrtoint i16* %158 to i64, !dbg !7663
  %sub.ptr.sub166 = sub i64 %sub.ptr.lhs.cast164, %sub.ptr.rhs.cast165, !dbg !7663
  %sub.ptr.div167 = sdiv exact i64 %sub.ptr.sub166, 2, !dbg !7663
  %cmp168 = icmp slt i64 %sub.ptr.div163, %sub.ptr.div167, !dbg !7664
  br i1 %cmp168, label %if.then170, label %if.else178, !dbg !7656

if.then170:                                       ; preds = %if.end159
  %159 = load i16*, i16** %start, align 8, !dbg !7665
  %160 = bitcast i16* %159 to i8*, !dbg !7665
  %161 = load i32, i32* %sp, align 4, !dbg !7668
  %idxprom171 = sext i32 %161 to i64, !dbg !7669
  %arrayidx172 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom171, !dbg !7669
  %arrayidx173 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx172, i64 0, i64 0, !dbg !7669
  store i8* %160, i8** %arrayidx173, align 16, !dbg !7670
  %162 = load i16*, i16** %right, align 8, !dbg !7671
  %163 = bitcast i16* %162 to i8*, !dbg !7671
  %164 = load i32, i32* %sp, align 4, !dbg !7672
  %inc = add nsw i32 %164, 1, !dbg !7672
  store i32 %inc, i32* %sp, align 4, !dbg !7672
  %idxprom174 = sext i32 %164 to i64, !dbg !7673
  %arrayidx175 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom174, !dbg !7673
  %arrayidx176 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx175, i64 0, i64 1, !dbg !7673
  store i8* %163, i8** %arrayidx176, align 8, !dbg !7674
  %165 = load i16*, i16** %left, align 8, !dbg !7675
  %add.ptr177 = getelementptr inbounds i16, i16* %165, i64 1, !dbg !7676
  store i16* %add.ptr177, i16** %start, align 8, !dbg !7677
  br label %if.end187, !dbg !7678

if.else178:                                       ; preds = %if.end159
  %166 = load i16*, i16** %left, align 8, !dbg !7679
  %add.ptr179 = getelementptr inbounds i16, i16* %166, i64 1, !dbg !7682
  %167 = bitcast i16* %add.ptr179 to i8*, !dbg !7679
  %168 = load i32, i32* %sp, align 4, !dbg !7683
  %idxprom180 = sext i32 %168 to i64, !dbg !7684
  %arrayidx181 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom180, !dbg !7684
  %arrayidx182 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx181, i64 0, i64 0, !dbg !7684
  store i8* %167, i8** %arrayidx182, align 16, !dbg !7685
  %169 = load i16*, i16** %end, align 8, !dbg !7686
  %170 = bitcast i16* %169 to i8*, !dbg !7686
  %171 = load i32, i32* %sp, align 4, !dbg !7687
  %inc183 = add nsw i32 %171, 1, !dbg !7687
  store i32 %inc183, i32* %sp, align 4, !dbg !7687
  %idxprom184 = sext i32 %171 to i64, !dbg !7688
  %arrayidx185 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack, i64 0, i64 %idxprom184, !dbg !7688
  %arrayidx186 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx185, i64 0, i64 1, !dbg !7688
  store i8* %170, i8** %arrayidx186, align 8, !dbg !7689
  %172 = load i16*, i16** %right, align 8, !dbg !7690
  store i16* %172, i16** %end, align 8, !dbg !7691
  br label %if.end187

if.end187:                                        ; preds = %if.else178, %if.then170
  br label %if.end197, !dbg !7692

if.else188:                                       ; preds = %while.body46
  %173 = load i16*, i16** %start, align 8, !dbg !7694
  %174 = bitcast i16* %173 to i8*, !dbg !7694
  %175 = load i16*, i16** %end, align 8, !dbg !7698
  %176 = bitcast i16* %175 to i8*, !dbg !7698
  %call189 = call i32 @qsort_comparison_function_int16(i8* %174, i8* %176), !dbg !7699
  %cmp190 = icmp sgt i32 %call189, 0, !dbg !7700
  br i1 %cmp190, label %if.then192, label %if.end196, !dbg !7699

if.then192:                                       ; preds = %if.else188
  br label %do.body193, !dbg !7701, !llvm.loop !7703

do.body193:                                       ; preds = %if.then192
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp194, metadata !7705, metadata !2753), !dbg !7707
  %177 = load i16*, i16** %end, align 8, !dbg !7708
  %178 = load i16, i16* %177, align 2, !dbg !7710
  store i16 %178, i16* %SWAP_tmp194, align 2, !dbg !7711
  %179 = load i16*, i16** %start, align 8, !dbg !7712
  %180 = load i16, i16* %179, align 2, !dbg !7713
  %181 = load i16*, i16** %end, align 8, !dbg !7714
  store i16 %180, i16* %181, align 2, !dbg !7715
  %182 = load i16, i16* %SWAP_tmp194, align 2, !dbg !7716
  %183 = load i16*, i16** %start, align 8, !dbg !7717
  store i16 %182, i16* %183, align 2, !dbg !7718
  br label %do.end195, !dbg !7719

do.end195:                                        ; preds = %do.body193
  br label %if.end196, !dbg !7720

if.end196:                                        ; preds = %do.end195, %if.else188
  br label %while.end198, !dbg !7722

if.end197:                                        ; preds = %if.end187
  br label %while.cond43, !dbg !7724, !llvm.loop !7726

while.end198:                                     ; preds = %if.end196, %if.then157, %if.then90, %while.cond43
  br label %while.cond, !dbg !7728, !llvm.loop !7730

while.end199:                                     ; preds = %while.cond
  br label %do.end200, !dbg !7732

do.end200:                                        ; preds = %while.end199
  store i32 0, i32* %k, align 4, !dbg !7734
  br label %for.cond, !dbg !7736

for.cond:                                         ; preds = %for.inc, %do.end200
  %184 = load i32, i32* %k, align 4, !dbg !7737
  %185 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7740
  %bs_stop_freq201 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %185, i32 0, i32 1, !dbg !7741
  %186 = load i8, i8* %bs_stop_freq201, align 1, !dbg !7741
  %conv202 = zext i8 %186 to i32, !dbg !7740
  %cmp203 = icmp slt i32 %184, %conv202, !dbg !7742
  br i1 %cmp203, label %for.body, label %for.end, !dbg !7743

for.body:                                         ; preds = %for.cond
  %187 = load i32, i32* %k, align 4, !dbg !7744
  %idxprom205 = sext i32 %187 to i64, !dbg !7745
  %arrayidx206 = getelementptr inbounds [13 x i16], [13 x i16]* %stop_dk, i64 0, i64 %idxprom205, !dbg !7745
  %188 = load i16, i16* %arrayidx206, align 2, !dbg !7745
  %conv207 = sext i16 %188 to i32, !dbg !7745
  %189 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7746
  %k208 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %189, i32 0, i32 12, !dbg !7747
  %arrayidx209 = getelementptr inbounds [5 x i32], [5 x i32]* %k208, i64 0, i64 2, !dbg !7746
  %190 = load i32, i32* %arrayidx209, align 4, !dbg !7748
  %add210 = add i32 %190, %conv207, !dbg !7748
  store i32 %add210, i32* %arrayidx209, align 4, !dbg !7748
  br label %for.inc, !dbg !7746

for.inc:                                          ; preds = %for.body
  %191 = load i32, i32* %k, align 4, !dbg !7749
  %inc211 = add nsw i32 %191, 1, !dbg !7749
  store i32 %inc211, i32* %k, align 4, !dbg !7749
  br label %for.cond, !dbg !7751, !llvm.loop !7752

for.end:                                          ; preds = %for.cond
  br label %if.end239, !dbg !7754

if.else212:                                       ; preds = %if.end12
  %192 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7755
  %bs_stop_freq213 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %192, i32 0, i32 1, !dbg !7758
  %193 = load i8, i8* %bs_stop_freq213, align 1, !dbg !7758
  %conv214 = zext i8 %193 to i32, !dbg !7755
  %cmp215 = icmp eq i32 %conv214, 14, !dbg !7759
  br i1 %cmp215, label %if.then217, label %if.else222, !dbg !7755

if.then217:                                       ; preds = %if.else212
  %194 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7760
  %k218 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %194, i32 0, i32 12, !dbg !7762
  %arrayidx219 = getelementptr inbounds [5 x i32], [5 x i32]* %k218, i64 0, i64 0, !dbg !7760
  %195 = load i32, i32* %arrayidx219, align 4, !dbg !7760
  %mul = mul i32 2, %195, !dbg !7763
  %196 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7764
  %k220 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %196, i32 0, i32 12, !dbg !7765
  %arrayidx221 = getelementptr inbounds [5 x i32], [5 x i32]* %k220, i64 0, i64 2, !dbg !7764
  store i32 %mul, i32* %arrayidx221, align 4, !dbg !7766
  br label %if.end238, !dbg !7767

if.else222:                                       ; preds = %if.else212
  %197 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7768
  %bs_stop_freq223 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %197, i32 0, i32 1, !dbg !7771
  %198 = load i8, i8* %bs_stop_freq223, align 1, !dbg !7771
  %conv224 = zext i8 %198 to i32, !dbg !7768
  %cmp225 = icmp eq i32 %conv224, 15, !dbg !7772
  br i1 %cmp225, label %if.then227, label %if.else233, !dbg !7768

if.then227:                                       ; preds = %if.else222
  %199 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7773
  %k228 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %199, i32 0, i32 12, !dbg !7775
  %arrayidx229 = getelementptr inbounds [5 x i32], [5 x i32]* %k228, i64 0, i64 0, !dbg !7773
  %200 = load i32, i32* %arrayidx229, align 4, !dbg !7773
  %mul230 = mul i32 3, %200, !dbg !7776
  %201 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7777
  %k231 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %201, i32 0, i32 12, !dbg !7778
  %arrayidx232 = getelementptr inbounds [5 x i32], [5 x i32]* %k231, i64 0, i64 2, !dbg !7777
  store i32 %mul230, i32* %arrayidx232, align 4, !dbg !7779
  br label %if.end237, !dbg !7780

if.else233:                                       ; preds = %if.else222
  %202 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7781
  %avctx234 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %202, i32 0, i32 1, !dbg !7783
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx234, align 8, !dbg !7783
  %204 = bitcast %struct.AVCodecContext* %203 to i8*, !dbg !7781
  %205 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7784
  %bs_stop_freq235 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %205, i32 0, i32 1, !dbg !7785
  %206 = load i8, i8* %bs_stop_freq235, align 1, !dbg !7785
  %conv236 = zext i8 %206 to i32, !dbg !7784
  call void (i8*, i32, i8*, ...) @av_log(i8* %204, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i32 0, i32 0), i32 %conv236), !dbg !7786
  store i32 -1, i32* %retval, align 4, !dbg !7787
  br label %return, !dbg !7787

if.end237:                                        ; preds = %if.then227
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then217
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %for.end
  %207 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7788
  %k240 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %207, i32 0, i32 12, !dbg !7789
  %arrayidx241 = getelementptr inbounds [5 x i32], [5 x i32]* %k240, i64 0, i64 2, !dbg !7788
  %208 = load i32, i32* %arrayidx241, align 4, !dbg !7788
  %cmp242 = icmp ugt i32 64, %208, !dbg !7790
  br i1 %cmp242, label %cond.true, label %cond.false, !dbg !7791

cond.true:                                        ; preds = %if.end239
  %209 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7792
  %k244 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %209, i32 0, i32 12, !dbg !7794
  %arrayidx245 = getelementptr inbounds [5 x i32], [5 x i32]* %k244, i64 0, i64 2, !dbg !7792
  %210 = load i32, i32* %arrayidx245, align 4, !dbg !7792
  br label %cond.end, !dbg !7795

cond.false:                                       ; preds = %if.end239
  br label %cond.end, !dbg !7796

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %210, %cond.true ], [ 64, %cond.false ], !dbg !7798
  %211 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7800
  %k246 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %211, i32 0, i32 12, !dbg !7801
  %arrayidx247 = getelementptr inbounds [5 x i32], [5 x i32]* %k246, i64 0, i64 2, !dbg !7800
  store i32 %cond, i32* %arrayidx247, align 4, !dbg !7802
  %212 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7803
  %sample_rate248 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %212, i32 0, i32 0, !dbg !7805
  %213 = load i32, i32* %sample_rate248, align 32, !dbg !7805
  %cmp249 = icmp sle i32 %213, 32000, !dbg !7806
  br i1 %cmp249, label %if.then251, label %if.else252, !dbg !7807

if.then251:                                       ; preds = %cond.end
  store i32 48, i32* %max_qmf_subbands, align 4, !dbg !7808
  br label %if.end267, !dbg !7810

if.else252:                                       ; preds = %cond.end
  %214 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7811
  %sample_rate253 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %214, i32 0, i32 0, !dbg !7814
  %215 = load i32, i32* %sample_rate253, align 32, !dbg !7814
  %cmp254 = icmp eq i32 %215, 44100, !dbg !7815
  br i1 %cmp254, label %if.then256, label %if.else257, !dbg !7811

if.then256:                                       ; preds = %if.else252
  store i32 35, i32* %max_qmf_subbands, align 4, !dbg !7816
  br label %if.end266, !dbg !7818

if.else257:                                       ; preds = %if.else252
  %216 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7819
  %sample_rate258 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %216, i32 0, i32 0, !dbg !7822
  %217 = load i32, i32* %sample_rate258, align 32, !dbg !7822
  %cmp259 = icmp sge i32 %217, 48000, !dbg !7823
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !7819

if.then261:                                       ; preds = %if.else257
  store i32 32, i32* %max_qmf_subbands, align 4, !dbg !7824
  br label %if.end265, !dbg !7825

if.else262:                                       ; preds = %if.else257
  br label %do.body263, !dbg !7826, !llvm.loop !7827

do.body263:                                       ; preds = %if.else262
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 338), !dbg !7828
  call void @abort() #10, !dbg !7833
  unreachable, !dbg !7835

do.end264:                                        ; No predecessors!
  br label %if.end265

if.end265:                                        ; preds = %do.end264, %if.then261
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then256
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then251
  %218 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7836
  %k268 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %218, i32 0, i32 12, !dbg !7838
  %arrayidx269 = getelementptr inbounds [5 x i32], [5 x i32]* %k268, i64 0, i64 2, !dbg !7836
  %219 = load i32, i32* %arrayidx269, align 4, !dbg !7836
  %220 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7839
  %k270 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %220, i32 0, i32 12, !dbg !7840
  %arrayidx271 = getelementptr inbounds [5 x i32], [5 x i32]* %k270, i64 0, i64 0, !dbg !7839
  %221 = load i32, i32* %arrayidx271, align 4, !dbg !7839
  %sub = sub i32 %219, %221, !dbg !7841
  %222 = load i32, i32* %max_qmf_subbands, align 4, !dbg !7842
  %cmp272 = icmp ugt i32 %sub, %222, !dbg !7843
  br i1 %cmp272, label %if.then274, label %if.end281, !dbg !7844

if.then274:                                       ; preds = %if.end267
  %223 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7845
  %avctx275 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %223, i32 0, i32 1, !dbg !7847
  %224 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx275, align 8, !dbg !7847
  %225 = bitcast %struct.AVCodecContext* %224 to i8*, !dbg !7845
  %226 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7848
  %k276 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %226, i32 0, i32 12, !dbg !7849
  %arrayidx277 = getelementptr inbounds [5 x i32], [5 x i32]* %k276, i64 0, i64 2, !dbg !7848
  %227 = load i32, i32* %arrayidx277, align 4, !dbg !7848
  %228 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7850
  %k278 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %228, i32 0, i32 12, !dbg !7851
  %arrayidx279 = getelementptr inbounds [5 x i32], [5 x i32]* %k278, i64 0, i64 0, !dbg !7850
  %229 = load i32, i32* %arrayidx279, align 4, !dbg !7850
  %sub280 = sub i32 %227, %229, !dbg !7852
  call void (i8*, i32, i8*, ...) @av_log(i8* %225, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i32 0, i32 0), i32 %sub280), !dbg !7853
  store i32 -1, i32* %retval, align 4, !dbg !7854
  br label %return, !dbg !7854

if.end281:                                        ; preds = %if.end267
  %230 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7855
  %bs_freq_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %230, i32 0, i32 3, !dbg !7857
  %231 = load i8, i8* %bs_freq_scale, align 1, !dbg !7857
  %tobool282 = icmp ne i8 %231, 0, !dbg !7855
  br i1 %tobool282, label %if.else367, label %if.then283, !dbg !7858

if.then283:                                       ; preds = %if.end281
  call void @llvm.dbg.declare(metadata i32* %dk, metadata !7859, metadata !2753), !dbg !7861
  call void @llvm.dbg.declare(metadata i32* %k2diff, metadata !7862, metadata !2753), !dbg !7863
  %232 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7864
  %bs_alter_scale = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %232, i32 0, i32 4, !dbg !7865
  %233 = load i8, i8* %bs_alter_scale, align 1, !dbg !7865
  %conv284 = zext i8 %233 to i32, !dbg !7864
  %add285 = add nsw i32 %conv284, 1, !dbg !7866
  store i32 %add285, i32* %dk, align 4, !dbg !7867
  %234 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7868
  %k286 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %234, i32 0, i32 12, !dbg !7869
  %arrayidx287 = getelementptr inbounds [5 x i32], [5 x i32]* %k286, i64 0, i64 2, !dbg !7868
  %235 = load i32, i32* %arrayidx287, align 4, !dbg !7868
  %236 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7870
  %k288 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %236, i32 0, i32 12, !dbg !7871
  %arrayidx289 = getelementptr inbounds [5 x i32], [5 x i32]* %k288, i64 0, i64 0, !dbg !7870
  %237 = load i32, i32* %arrayidx289, align 4, !dbg !7870
  %sub290 = sub i32 %235, %237, !dbg !7872
  %238 = load i32, i32* %dk, align 4, !dbg !7873
  %and = and i32 %238, 2, !dbg !7874
  %add291 = add i32 %sub290, %and, !dbg !7875
  %239 = load i32, i32* %dk, align 4, !dbg !7876
  %shr292 = lshr i32 %add291, %239, !dbg !7877
  %shl293 = shl i32 %shr292, 1, !dbg !7878
  %240 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7879
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %240, i32 0, i32 16, !dbg !7880
  store i32 %shl293, i32* %n_master, align 4, !dbg !7881
  %241 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !7882
  %avctx294 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %241, i32 0, i32 1, !dbg !7884
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx294, align 8, !dbg !7884
  %243 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7885
  %n_master295 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %243, i32 0, i32 16, !dbg !7886
  %244 = load i32, i32* %n_master295, align 4, !dbg !7886
  %245 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7887
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %245, i32 0, i32 5, !dbg !7888
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params, i32 0, i32 2, !dbg !7889
  %246 = load i8, i8* %bs_xover_band, align 2, !dbg !7889
  %conv296 = zext i8 %246 to i32, !dbg !7887
  %call297 = call i32 @check_n_master(%struct.AVCodecContext* %242, i32 %244, i32 %conv296), !dbg !7890
  %tobool298 = icmp ne i32 %call297, 0, !dbg !7890
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !7891

if.then299:                                       ; preds = %if.then283
  store i32 -1, i32* %retval, align 4, !dbg !7892
  br label %return, !dbg !7892

if.end300:                                        ; preds = %if.then283
  store i32 1, i32* %k, align 4, !dbg !7893
  br label %for.cond301, !dbg !7895

for.cond301:                                      ; preds = %for.inc309, %if.end300
  %247 = load i32, i32* %k, align 4, !dbg !7896
  %248 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7899
  %n_master302 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %248, i32 0, i32 16, !dbg !7900
  %249 = load i32, i32* %n_master302, align 4, !dbg !7900
  %cmp303 = icmp ule i32 %247, %249, !dbg !7901
  br i1 %cmp303, label %for.body305, label %for.end311, !dbg !7902

for.body305:                                      ; preds = %for.cond301
  %250 = load i32, i32* %dk, align 4, !dbg !7903
  %conv306 = trunc i32 %250 to i16, !dbg !7903
  %251 = load i32, i32* %k, align 4, !dbg !7904
  %idxprom307 = sext i32 %251 to i64, !dbg !7905
  %252 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7905
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %252, i32 0, i32 22, !dbg !7906
  %arrayidx308 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom307, !dbg !7905
  store i16 %conv306, i16* %arrayidx308, align 2, !dbg !7907
  br label %for.inc309, !dbg !7905

for.inc309:                                       ; preds = %for.body305
  %253 = load i32, i32* %k, align 4, !dbg !7908
  %inc310 = add nsw i32 %253, 1, !dbg !7908
  store i32 %inc310, i32* %k, align 4, !dbg !7908
  br label %for.cond301, !dbg !7910, !llvm.loop !7911

for.end311:                                       ; preds = %for.cond301
  %254 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7913
  %k312 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %254, i32 0, i32 12, !dbg !7914
  %arrayidx313 = getelementptr inbounds [5 x i32], [5 x i32]* %k312, i64 0, i64 2, !dbg !7913
  %255 = load i32, i32* %arrayidx313, align 4, !dbg !7913
  %256 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7915
  %k314 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %256, i32 0, i32 12, !dbg !7916
  %arrayidx315 = getelementptr inbounds [5 x i32], [5 x i32]* %k314, i64 0, i64 0, !dbg !7915
  %257 = load i32, i32* %arrayidx315, align 4, !dbg !7915
  %sub316 = sub i32 %255, %257, !dbg !7917
  %258 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7918
  %n_master317 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %258, i32 0, i32 16, !dbg !7919
  %259 = load i32, i32* %n_master317, align 4, !dbg !7919
  %260 = load i32, i32* %dk, align 4, !dbg !7920
  %mul318 = mul i32 %259, %260, !dbg !7921
  %sub319 = sub i32 %sub316, %mul318, !dbg !7922
  store i32 %sub319, i32* %k2diff, align 4, !dbg !7923
  %261 = load i32, i32* %k2diff, align 4, !dbg !7924
  %cmp320 = icmp slt i32 %261, 0, !dbg !7926
  br i1 %cmp320, label %if.then322, label %if.else333, !dbg !7927

if.then322:                                       ; preds = %for.end311
  %262 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7928
  %f_master323 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %262, i32 0, i32 22, !dbg !7930
  %arrayidx324 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master323, i64 0, i64 1, !dbg !7928
  %263 = load i16, i16* %arrayidx324, align 2, !dbg !7931
  %dec325 = add i16 %263, -1, !dbg !7931
  store i16 %dec325, i16* %arrayidx324, align 2, !dbg !7931
  %264 = load i32, i32* %k2diff, align 4, !dbg !7932
  %cmp326 = icmp slt i32 %264, -1, !dbg !7933
  %conv327 = zext i1 %cmp326 to i32, !dbg !7933
  %265 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7934
  %f_master328 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %265, i32 0, i32 22, !dbg !7935
  %arrayidx329 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master328, i64 0, i64 2, !dbg !7934
  %266 = load i16, i16* %arrayidx329, align 4, !dbg !7936
  %conv330 = zext i16 %266 to i32, !dbg !7936
  %sub331 = sub nsw i32 %conv330, %conv327, !dbg !7936
  %conv332 = trunc i32 %sub331 to i16, !dbg !7936
  store i16 %conv332, i16* %arrayidx329, align 4, !dbg !7936
  br label %if.end342, !dbg !7937

if.else333:                                       ; preds = %for.end311
  %267 = load i32, i32* %k2diff, align 4, !dbg !7938
  %tobool334 = icmp ne i32 %267, 0, !dbg !7938
  br i1 %tobool334, label %if.then335, label %if.end341, !dbg !7938

if.then335:                                       ; preds = %if.else333
  %268 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7941
  %n_master336 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %268, i32 0, i32 16, !dbg !7943
  %269 = load i32, i32* %n_master336, align 4, !dbg !7943
  %idxprom337 = zext i32 %269 to i64, !dbg !7944
  %270 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7944
  %f_master338 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %270, i32 0, i32 22, !dbg !7945
  %arrayidx339 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master338, i64 0, i64 %idxprom337, !dbg !7944
  %271 = load i16, i16* %arrayidx339, align 2, !dbg !7946
  %inc340 = add i16 %271, 1, !dbg !7946
  store i16 %inc340, i16* %arrayidx339, align 2, !dbg !7946
  br label %if.end341, !dbg !7947

if.end341:                                        ; preds = %if.then335, %if.else333
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then322
  %272 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7948
  %k343 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %272, i32 0, i32 12, !dbg !7949
  %arrayidx344 = getelementptr inbounds [5 x i32], [5 x i32]* %k343, i64 0, i64 0, !dbg !7948
  %273 = load i32, i32* %arrayidx344, align 4, !dbg !7948
  %conv345 = trunc i32 %273 to i16, !dbg !7948
  %274 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7950
  %f_master346 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %274, i32 0, i32 22, !dbg !7951
  %arrayidx347 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master346, i64 0, i64 0, !dbg !7950
  store i16 %conv345, i16* %arrayidx347, align 16, !dbg !7952
  store i32 1, i32* %k, align 4, !dbg !7953
  br label %for.cond348, !dbg !7955

for.cond348:                                      ; preds = %for.inc364, %if.end342
  %275 = load i32, i32* %k, align 4, !dbg !7956
  %276 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7959
  %n_master349 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %276, i32 0, i32 16, !dbg !7960
  %277 = load i32, i32* %n_master349, align 4, !dbg !7960
  %cmp350 = icmp ule i32 %275, %277, !dbg !7961
  br i1 %cmp350, label %for.body352, label %for.end366, !dbg !7962

for.body352:                                      ; preds = %for.cond348
  %278 = load i32, i32* %k, align 4, !dbg !7963
  %sub353 = sub nsw i32 %278, 1, !dbg !7964
  %idxprom354 = sext i32 %sub353 to i64, !dbg !7965
  %279 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7965
  %f_master355 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %279, i32 0, i32 22, !dbg !7966
  %arrayidx356 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master355, i64 0, i64 %idxprom354, !dbg !7965
  %280 = load i16, i16* %arrayidx356, align 2, !dbg !7965
  %conv357 = zext i16 %280 to i32, !dbg !7965
  %281 = load i32, i32* %k, align 4, !dbg !7967
  %idxprom358 = sext i32 %281 to i64, !dbg !7968
  %282 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7968
  %f_master359 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %282, i32 0, i32 22, !dbg !7969
  %arrayidx360 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master359, i64 0, i64 %idxprom358, !dbg !7968
  %283 = load i16, i16* %arrayidx360, align 2, !dbg !7970
  %conv361 = zext i16 %283 to i32, !dbg !7970
  %add362 = add nsw i32 %conv361, %conv357, !dbg !7970
  %conv363 = trunc i32 %add362 to i16, !dbg !7970
  store i16 %conv363, i16* %arrayidx360, align 2, !dbg !7970
  br label %for.inc364, !dbg !7968

for.inc364:                                       ; preds = %for.body352
  %284 = load i32, i32* %k, align 4, !dbg !7971
  %inc365 = add nsw i32 %284, 1, !dbg !7971
  store i32 %inc365, i32* %k, align 4, !dbg !7971
  br label %for.cond348, !dbg !7973, !llvm.loop !7974

for.end366:                                       ; preds = %for.cond348
  br label %if.end1197, !dbg !7976

if.else367:                                       ; preds = %if.end281
  call void @llvm.dbg.declare(metadata i32* %half_bands, metadata !7977, metadata !2753), !dbg !7979
  %285 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !7980
  %bs_freq_scale368 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %285, i32 0, i32 3, !dbg !7981
  %286 = load i8, i8* %bs_freq_scale368, align 1, !dbg !7981
  %conv369 = zext i8 %286 to i32, !dbg !7980
  %sub370 = sub nsw i32 7, %conv369, !dbg !7982
  store i32 %sub370, i32* %half_bands, align 4, !dbg !7979
  call void @llvm.dbg.declare(metadata i32* %two_regions, metadata !7983, metadata !2753), !dbg !7984
  call void @llvm.dbg.declare(metadata i32* %num_bands_0, metadata !7985, metadata !2753), !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %vdk0_max, metadata !7987, metadata !2753), !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %vdk1_min, metadata !7989, metadata !2753), !dbg !7990
  call void @llvm.dbg.declare(metadata [49 x i16]* %vk0, metadata !7991, metadata !2753), !dbg !7993
  %287 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7994
  %k371 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %287, i32 0, i32 12, !dbg !7996
  %arrayidx372 = getelementptr inbounds [5 x i32], [5 x i32]* %k371, i64 0, i64 2, !dbg !7994
  %288 = load i32, i32* %arrayidx372, align 4, !dbg !7994
  %mul373 = mul i32 49, %288, !dbg !7997
  %289 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !7998
  %k374 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %289, i32 0, i32 12, !dbg !7999
  %arrayidx375 = getelementptr inbounds [5 x i32], [5 x i32]* %k374, i64 0, i64 0, !dbg !7998
  %290 = load i32, i32* %arrayidx375, align 4, !dbg !7998
  %mul376 = mul i32 110, %290, !dbg !8000
  %cmp377 = icmp ugt i32 %mul373, %mul376, !dbg !8001
  br i1 %cmp377, label %if.then379, label %if.else385, !dbg !8002

if.then379:                                       ; preds = %if.else367
  store i32 1, i32* %two_regions, align 4, !dbg !8003
  %291 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8005
  %k380 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %291, i32 0, i32 12, !dbg !8006
  %arrayidx381 = getelementptr inbounds [5 x i32], [5 x i32]* %k380, i64 0, i64 0, !dbg !8005
  %292 = load i32, i32* %arrayidx381, align 4, !dbg !8005
  %mul382 = mul i32 2, %292, !dbg !8007
  %293 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8008
  %k383 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %293, i32 0, i32 12, !dbg !8009
  %arrayidx384 = getelementptr inbounds [5 x i32], [5 x i32]* %k383, i64 0, i64 1, !dbg !8008
  store i32 %mul382, i32* %arrayidx384, align 4, !dbg !8010
  br label %if.end390, !dbg !8011

if.else385:                                       ; preds = %if.else367
  store i32 0, i32* %two_regions, align 4, !dbg !8012
  %294 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8014
  %k386 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %294, i32 0, i32 12, !dbg !8015
  %arrayidx387 = getelementptr inbounds [5 x i32], [5 x i32]* %k386, i64 0, i64 2, !dbg !8014
  %295 = load i32, i32* %arrayidx387, align 4, !dbg !8014
  %296 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8016
  %k388 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %296, i32 0, i32 12, !dbg !8017
  %arrayidx389 = getelementptr inbounds [5 x i32], [5 x i32]* %k388, i64 0, i64 1, !dbg !8016
  store i32 %295, i32* %arrayidx389, align 4, !dbg !8018
  br label %if.end390

if.end390:                                        ; preds = %if.else385, %if.then379
  %297 = load i32, i32* %half_bands, align 4, !dbg !8019
  %conv391 = sitofp i32 %297 to float, !dbg !8019
  %298 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8020
  %k392 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %298, i32 0, i32 12, !dbg !8021
  %arrayidx393 = getelementptr inbounds [5 x i32], [5 x i32]* %k392, i64 0, i64 1, !dbg !8020
  %299 = load i32, i32* %arrayidx393, align 4, !dbg !8020
  %conv394 = uitofp i32 %299 to float, !dbg !8020
  %300 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8022
  %k395 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %300, i32 0, i32 12, !dbg !8023
  %arrayidx396 = getelementptr inbounds [5 x i32], [5 x i32]* %k395, i64 0, i64 0, !dbg !8022
  %301 = load i32, i32* %arrayidx396, align 4, !dbg !8022
  %conv397 = uitofp i32 %301 to float, !dbg !8024
  %div398 = fdiv float %conv394, %conv397, !dbg !8025
  %call399 = call float @log2f(float %div398) #11, !dbg !8026
  %mul400 = fmul float %conv391, %call399, !dbg !8027
  %call401 = call i64 @lrintf(float %mul400) #11, !dbg !8028
  %mul402 = mul nsw i64 %call401, 2, !dbg !8030
  %conv403 = trunc i64 %mul402 to i32, !dbg !8031
  store i32 %conv403, i32* %num_bands_0, align 4, !dbg !8032
  %302 = load i32, i32* %num_bands_0, align 4, !dbg !8033
  %cmp404 = icmp sle i32 %302, 0, !dbg !8035
  br i1 %cmp404, label %if.then406, label %if.end408, !dbg !8036

if.then406:                                       ; preds = %if.end390
  %303 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8037
  %avctx407 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %303, i32 0, i32 1, !dbg !8039
  %304 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx407, align 8, !dbg !8039
  %305 = bitcast %struct.AVCodecContext* %304 to i8*, !dbg !8037
  %306 = load i32, i32* %num_bands_0, align 4, !dbg !8040
  call void (i8*, i32, i8*, ...) @av_log(i8* %305, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i32 %306), !dbg !8041
  store i32 -1, i32* %retval, align 4, !dbg !8042
  br label %return, !dbg !8042

if.end408:                                        ; preds = %if.end390
  %arrayidx409 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 0, !dbg !8043
  store i16 0, i16* %arrayidx409, align 16, !dbg !8044
  %arraydecay410 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8045
  %add.ptr411 = getelementptr inbounds i16, i16* %arraydecay410, i64 1, !dbg !8046
  %307 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8047
  %k412 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %307, i32 0, i32 12, !dbg !8048
  %arrayidx413 = getelementptr inbounds [5 x i32], [5 x i32]* %k412, i64 0, i64 0, !dbg !8047
  %308 = load i32, i32* %arrayidx413, align 4, !dbg !8047
  %309 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8049
  %k414 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %309, i32 0, i32 12, !dbg !8050
  %arrayidx415 = getelementptr inbounds [5 x i32], [5 x i32]* %k414, i64 0, i64 1, !dbg !8049
  %310 = load i32, i32* %arrayidx415, align 4, !dbg !8049
  %311 = load i32, i32* %num_bands_0, align 4, !dbg !8051
  call void @make_bands(i16* %add.ptr411, i32 %308, i32 %310, i32 %311), !dbg !8052
  br label %do.body416, !dbg !8053, !llvm.loop !8054

do.body416:                                       ; preds = %if.end408
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack417, metadata !8055, metadata !2753), !dbg !8057
  call void @llvm.dbg.declare(metadata i32* %sp418, metadata !8058, metadata !2753), !dbg !8059
  store i32 1, i32* %sp418, align 4, !dbg !8060
  %arraydecay419 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8062
  %add.ptr420 = getelementptr inbounds i16, i16* %arraydecay419, i64 1, !dbg !8063
  %312 = bitcast i16* %add.ptr420 to i8*, !dbg !8062
  %arrayidx421 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 0, !dbg !8064
  %arrayidx422 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx421, i64 0, i64 0, !dbg !8064
  store i8* %312, i8** %arrayidx422, align 16, !dbg !8065
  %arraydecay423 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !8066
  %add.ptr424 = getelementptr inbounds i16, i16* %arraydecay423, i64 1, !dbg !8067
  %313 = load i32, i32* %num_bands_0, align 4, !dbg !8068
  %idx.ext = sext i32 %313 to i64, !dbg !8069
  %add.ptr425 = getelementptr inbounds i16, i16* %add.ptr424, i64 %idx.ext, !dbg !8069
  %add.ptr426 = getelementptr inbounds i16, i16* %add.ptr425, i64 -1, !dbg !8070
  %314 = bitcast i16* %add.ptr426 to i8*, !dbg !8071
  %arrayidx427 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 0, !dbg !8072
  %arrayidx428 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx427, i64 0, i64 1, !dbg !8072
  store i8* %314, i8** %arrayidx428, align 8, !dbg !8073
  br label %while.cond429, !dbg !8074

while.cond429:                                    ; preds = %while.end614, %do.body416
  %315 = load i32, i32* %sp418, align 4, !dbg !8075
  %tobool430 = icmp ne i32 %315, 0, !dbg !8077
  br i1 %tobool430, label %while.body431, label %while.end615, !dbg !8077

while.body431:                                    ; preds = %while.cond429
  call void @llvm.dbg.declare(metadata i16** %start432, metadata !8078, metadata !2753), !dbg !8080
  %316 = load i32, i32* %sp418, align 4, !dbg !8081
  %dec433 = add nsw i32 %316, -1, !dbg !8081
  store i32 %dec433, i32* %sp418, align 4, !dbg !8081
  %idxprom434 = sext i32 %dec433 to i64, !dbg !8083
  %arrayidx435 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom434, !dbg !8083
  %arrayidx436 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx435, i64 0, i64 0, !dbg !8083
  %317 = load i8*, i8** %arrayidx436, align 16, !dbg !8083
  %318 = bitcast i8* %317 to i16*, !dbg !8083
  store i16* %318, i16** %start432, align 8, !dbg !8084
  call void @llvm.dbg.declare(metadata i16** %end437, metadata !8085, metadata !2753), !dbg !8086
  %319 = load i32, i32* %sp418, align 4, !dbg !8087
  %idxprom438 = sext i32 %319 to i64, !dbg !8088
  %arrayidx439 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom438, !dbg !8088
  %arrayidx440 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx439, i64 0, i64 1, !dbg !8088
  %320 = load i8*, i8** %arrayidx440, align 8, !dbg !8088
  %321 = bitcast i8* %320 to i16*, !dbg !8088
  store i16* %321, i16** %end437, align 8, !dbg !8089
  br label %while.cond441, !dbg !8090

while.cond441:                                    ; preds = %if.end613, %while.body431
  %322 = load i16*, i16** %start432, align 8, !dbg !8091
  %323 = load i16*, i16** %end437, align 8, !dbg !8093
  %cmp442 = icmp ult i16* %322, %323, !dbg !8094
  br i1 %cmp442, label %while.body444, label %while.end614, !dbg !8095

while.body444:                                    ; preds = %while.cond441
  %324 = load i16*, i16** %start432, align 8, !dbg !8096
  %325 = load i16*, i16** %end437, align 8, !dbg !8100
  %add.ptr445 = getelementptr inbounds i16, i16* %325, i64 -1, !dbg !8101
  %cmp446 = icmp ult i16* %324, %add.ptr445, !dbg !8102
  br i1 %cmp446, label %if.then448, label %if.else604, !dbg !8096

if.then448:                                       ; preds = %while.body444
  call void @llvm.dbg.declare(metadata i32* %checksort449, metadata !8103, metadata !2753), !dbg !8105
  store i32 0, i32* %checksort449, align 4, !dbg !8106
  call void @llvm.dbg.declare(metadata i16** %right450, metadata !8108, metadata !2753), !dbg !8109
  %326 = load i16*, i16** %end437, align 8, !dbg !8110
  %add.ptr451 = getelementptr inbounds i16, i16* %326, i64 -2, !dbg !8111
  store i16* %add.ptr451, i16** %right450, align 8, !dbg !8112
  call void @llvm.dbg.declare(metadata i16** %left452, metadata !8113, metadata !2753), !dbg !8114
  %327 = load i16*, i16** %start432, align 8, !dbg !8115
  %add.ptr453 = getelementptr inbounds i16, i16* %327, i64 1, !dbg !8116
  store i16* %add.ptr453, i16** %left452, align 8, !dbg !8117
  call void @llvm.dbg.declare(metadata i16** %mid454, metadata !8118, metadata !2753), !dbg !8119
  %328 = load i16*, i16** %start432, align 8, !dbg !8120
  %329 = load i16*, i16** %end437, align 8, !dbg !8121
  %330 = load i16*, i16** %start432, align 8, !dbg !8122
  %sub.ptr.lhs.cast455 = ptrtoint i16* %329 to i64, !dbg !8123
  %sub.ptr.rhs.cast456 = ptrtoint i16* %330 to i64, !dbg !8123
  %sub.ptr.sub457 = sub i64 %sub.ptr.lhs.cast455, %sub.ptr.rhs.cast456, !dbg !8123
  %sub.ptr.div458 = sdiv exact i64 %sub.ptr.sub457, 2, !dbg !8123
  %shr459 = ashr i64 %sub.ptr.div458, 1, !dbg !8124
  %add.ptr460 = getelementptr inbounds i16, i16* %328, i64 %shr459, !dbg !8125
  store i16* %add.ptr460, i16** %mid454, align 8, !dbg !8126
  %331 = load i16*, i16** %start432, align 8, !dbg !8127
  %332 = bitcast i16* %331 to i8*, !dbg !8127
  %333 = load i16*, i16** %end437, align 8, !dbg !8128
  %334 = bitcast i16* %333 to i8*, !dbg !8128
  %call461 = call i32 @qsort_comparison_function_int16(i8* %332, i8* %334), !dbg !8129
  %cmp462 = icmp sgt i32 %call461, 0, !dbg !8130
  br i1 %cmp462, label %if.then464, label %if.else477, !dbg !8129

if.then464:                                       ; preds = %if.then448
  %335 = load i16*, i16** %end437, align 8, !dbg !8131
  %336 = bitcast i16* %335 to i8*, !dbg !8131
  %337 = load i16*, i16** %mid454, align 8, !dbg !8136
  %338 = bitcast i16* %337 to i8*, !dbg !8136
  %call465 = call i32 @qsort_comparison_function_int16(i8* %336, i8* %338), !dbg !8137
  %cmp466 = icmp sgt i32 %call465, 0, !dbg !8138
  br i1 %cmp466, label %if.then468, label %if.else472, !dbg !8137

if.then468:                                       ; preds = %if.then464
  br label %do.body469, !dbg !8139, !llvm.loop !8141

do.body469:                                       ; preds = %if.then468
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp470, metadata !8143, metadata !2753), !dbg !8145
  %339 = load i16*, i16** %mid454, align 8, !dbg !8146
  %340 = load i16, i16* %339, align 2, !dbg !8148
  store i16 %340, i16* %SWAP_tmp470, align 2, !dbg !8149
  %341 = load i16*, i16** %start432, align 8, !dbg !8150
  %342 = load i16, i16* %341, align 2, !dbg !8151
  %343 = load i16*, i16** %mid454, align 8, !dbg !8152
  store i16 %342, i16* %343, align 2, !dbg !8153
  %344 = load i16, i16* %SWAP_tmp470, align 2, !dbg !8154
  %345 = load i16*, i16** %start432, align 8, !dbg !8155
  store i16 %344, i16* %345, align 2, !dbg !8156
  br label %do.end471, !dbg !8157

do.end471:                                        ; preds = %do.body469
  br label %if.end476, !dbg !8158

if.else472:                                       ; preds = %if.then464
  br label %do.body473, !dbg !8160, !llvm.loop !8162

do.body473:                                       ; preds = %if.else472
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp474, metadata !8164, metadata !2753), !dbg !8166
  %346 = load i16*, i16** %end437, align 8, !dbg !8167
  %347 = load i16, i16* %346, align 2, !dbg !8169
  store i16 %347, i16* %SWAP_tmp474, align 2, !dbg !8170
  %348 = load i16*, i16** %start432, align 8, !dbg !8171
  %349 = load i16, i16* %348, align 2, !dbg !8172
  %350 = load i16*, i16** %end437, align 8, !dbg !8173
  store i16 %349, i16* %350, align 2, !dbg !8174
  %351 = load i16, i16* %SWAP_tmp474, align 2, !dbg !8175
  %352 = load i16*, i16** %start432, align 8, !dbg !8176
  store i16 %351, i16* %352, align 2, !dbg !8177
  br label %do.end475, !dbg !8178

do.end475:                                        ; preds = %do.body473
  br label %if.end476

if.end476:                                        ; preds = %do.end475, %do.end471
  br label %if.end487, !dbg !8179

if.else477:                                       ; preds = %if.then448
  %353 = load i16*, i16** %start432, align 8, !dbg !8181
  %354 = bitcast i16* %353 to i8*, !dbg !8181
  %355 = load i16*, i16** %mid454, align 8, !dbg !8185
  %356 = bitcast i16* %355 to i8*, !dbg !8185
  %call478 = call i32 @qsort_comparison_function_int16(i8* %354, i8* %356), !dbg !8186
  %cmp479 = icmp sgt i32 %call478, 0, !dbg !8187
  br i1 %cmp479, label %if.then481, label %if.else485, !dbg !8186

if.then481:                                       ; preds = %if.else477
  br label %do.body482, !dbg !8188, !llvm.loop !8190

do.body482:                                       ; preds = %if.then481
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp483, metadata !8192, metadata !2753), !dbg !8194
  %357 = load i16*, i16** %mid454, align 8, !dbg !8195
  %358 = load i16, i16* %357, align 2, !dbg !8197
  store i16 %358, i16* %SWAP_tmp483, align 2, !dbg !8198
  %359 = load i16*, i16** %start432, align 8, !dbg !8199
  %360 = load i16, i16* %359, align 2, !dbg !8200
  %361 = load i16*, i16** %mid454, align 8, !dbg !8201
  store i16 %360, i16* %361, align 2, !dbg !8202
  %362 = load i16, i16* %SWAP_tmp483, align 2, !dbg !8203
  %363 = load i16*, i16** %start432, align 8, !dbg !8204
  store i16 %362, i16* %363, align 2, !dbg !8205
  br label %do.end484, !dbg !8206

do.end484:                                        ; preds = %do.body482
  br label %if.end486, !dbg !8207

if.else485:                                       ; preds = %if.else477
  store i32 1, i32* %checksort449, align 4, !dbg !8209
  br label %if.end486

if.end486:                                        ; preds = %if.else485, %do.end484
  br label %if.end487

if.end487:                                        ; preds = %if.end486, %if.end476
  %364 = load i16*, i16** %mid454, align 8, !dbg !8211
  %365 = bitcast i16* %364 to i8*, !dbg !8211
  %366 = load i16*, i16** %end437, align 8, !dbg !8214
  %367 = bitcast i16* %366 to i8*, !dbg !8214
  %call488 = call i32 @qsort_comparison_function_int16(i8* %365, i8* %367), !dbg !8215
  %cmp489 = icmp sgt i32 %call488, 0, !dbg !8216
  br i1 %cmp489, label %if.then491, label %if.end495, !dbg !8215

if.then491:                                       ; preds = %if.end487
  br label %do.body492, !dbg !8217, !llvm.loop !8220

do.body492:                                       ; preds = %if.then491
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp493, metadata !8222, metadata !2753), !dbg !8224
  %368 = load i16*, i16** %end437, align 8, !dbg !8225
  %369 = load i16, i16* %368, align 2, !dbg !8227
  store i16 %369, i16* %SWAP_tmp493, align 2, !dbg !8228
  %370 = load i16*, i16** %mid454, align 8, !dbg !8229
  %371 = load i16, i16* %370, align 2, !dbg !8230
  %372 = load i16*, i16** %end437, align 8, !dbg !8231
  store i16 %371, i16* %372, align 2, !dbg !8232
  %373 = load i16, i16* %SWAP_tmp493, align 2, !dbg !8233
  %374 = load i16*, i16** %mid454, align 8, !dbg !8234
  store i16 %373, i16* %374, align 2, !dbg !8235
  br label %do.end494, !dbg !8236

do.end494:                                        ; preds = %do.body492
  store i32 0, i32* %checksort449, align 4, !dbg !8237
  br label %if.end495, !dbg !8239

if.end495:                                        ; preds = %do.end494, %if.end487
  %375 = load i16*, i16** %start432, align 8, !dbg !8240
  %376 = load i16*, i16** %end437, align 8, !dbg !8243
  %add.ptr496 = getelementptr inbounds i16, i16* %376, i64 -2, !dbg !8244
  %cmp497 = icmp eq i16* %375, %add.ptr496, !dbg !8245
  br i1 %cmp497, label %if.then499, label %if.end500, !dbg !8240

if.then499:                                       ; preds = %if.end495
  br label %while.end614, !dbg !8246

if.end500:                                        ; preds = %if.end495
  br label %do.body501, !dbg !8248, !llvm.loop !8250

do.body501:                                       ; preds = %if.end500
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp502, metadata !8252, metadata !2753), !dbg !8254
  %377 = load i16*, i16** %mid454, align 8, !dbg !8255
  %378 = load i16, i16* %377, align 2, !dbg !8257
  store i16 %378, i16* %SWAP_tmp502, align 2, !dbg !8258
  %379 = load i16*, i16** %end437, align 8, !dbg !8259
  %arrayidx503 = getelementptr inbounds i16, i16* %379, i64 -1, !dbg !8259
  %380 = load i16, i16* %arrayidx503, align 2, !dbg !8259
  %381 = load i16*, i16** %mid454, align 8, !dbg !8260
  store i16 %380, i16* %381, align 2, !dbg !8261
  %382 = load i16, i16* %SWAP_tmp502, align 2, !dbg !8262
  %383 = load i16*, i16** %end437, align 8, !dbg !8263
  %arrayidx504 = getelementptr inbounds i16, i16* %383, i64 -1, !dbg !8263
  store i16 %382, i16* %arrayidx504, align 2, !dbg !8264
  br label %do.end505, !dbg !8265

do.end505:                                        ; preds = %do.body501
  br label %while.cond506, !dbg !8266

while.cond506:                                    ; preds = %if.end542, %do.end505
  %384 = load i16*, i16** %left452, align 8, !dbg !8268
  %385 = load i16*, i16** %right450, align 8, !dbg !8270
  %cmp507 = icmp ule i16* %384, %385, !dbg !8271
  br i1 %cmp507, label %while.body509, label %while.end543, !dbg !8272

while.body509:                                    ; preds = %while.cond506
  br label %while.cond510, !dbg !8273

while.cond510:                                    ; preds = %while.body519, %while.body509
  %386 = load i16*, i16** %left452, align 8, !dbg !8276
  %387 = load i16*, i16** %right450, align 8, !dbg !8278
  %cmp511 = icmp ule i16* %386, %387, !dbg !8279
  br i1 %cmp511, label %land.rhs513, label %land.end518, !dbg !8280

land.rhs513:                                      ; preds = %while.cond510
  %388 = load i16*, i16** %left452, align 8, !dbg !8281
  %389 = bitcast i16* %388 to i8*, !dbg !8281
  %390 = load i16*, i16** %end437, align 8, !dbg !8283
  %add.ptr514 = getelementptr inbounds i16, i16* %390, i64 -1, !dbg !8284
  %391 = bitcast i16* %add.ptr514 to i8*, !dbg !8283
  %call515 = call i32 @qsort_comparison_function_int16(i8* %389, i8* %391), !dbg !8285
  %cmp516 = icmp slt i32 %call515, 0, !dbg !8286
  br label %land.end518

land.end518:                                      ; preds = %land.rhs513, %while.cond510
  %392 = phi i1 [ false, %while.cond510 ], [ %cmp516, %land.rhs513 ]
  br i1 %392, label %while.body519, label %while.end521, !dbg !8287

while.body519:                                    ; preds = %land.end518
  %393 = load i16*, i16** %left452, align 8, !dbg !8289
  %incdec.ptr520 = getelementptr inbounds i16, i16* %393, i32 1, !dbg !8289
  store i16* %incdec.ptr520, i16** %left452, align 8, !dbg !8289
  br label %while.cond510, !dbg !8291, !llvm.loop !8292

while.end521:                                     ; preds = %land.end518
  br label %while.cond522, !dbg !8294

while.cond522:                                    ; preds = %while.body531, %while.end521
  %394 = load i16*, i16** %left452, align 8, !dbg !8296
  %395 = load i16*, i16** %right450, align 8, !dbg !8298
  %cmp523 = icmp ule i16* %394, %395, !dbg !8299
  br i1 %cmp523, label %land.rhs525, label %land.end530, !dbg !8300

land.rhs525:                                      ; preds = %while.cond522
  %396 = load i16*, i16** %right450, align 8, !dbg !8301
  %397 = bitcast i16* %396 to i8*, !dbg !8301
  %398 = load i16*, i16** %end437, align 8, !dbg !8303
  %add.ptr526 = getelementptr inbounds i16, i16* %398, i64 -1, !dbg !8304
  %399 = bitcast i16* %add.ptr526 to i8*, !dbg !8303
  %call527 = call i32 @qsort_comparison_function_int16(i8* %397, i8* %399), !dbg !8305
  %cmp528 = icmp sgt i32 %call527, 0, !dbg !8306
  br label %land.end530

land.end530:                                      ; preds = %land.rhs525, %while.cond522
  %400 = phi i1 [ false, %while.cond522 ], [ %cmp528, %land.rhs525 ]
  br i1 %400, label %while.body531, label %while.end533, !dbg !8307

while.body531:                                    ; preds = %land.end530
  %401 = load i16*, i16** %right450, align 8, !dbg !8309
  %incdec.ptr532 = getelementptr inbounds i16, i16* %401, i32 -1, !dbg !8309
  store i16* %incdec.ptr532, i16** %right450, align 8, !dbg !8309
  br label %while.cond522, !dbg !8311, !llvm.loop !8312

while.end533:                                     ; preds = %land.end530
  %402 = load i16*, i16** %left452, align 8, !dbg !8314
  %403 = load i16*, i16** %right450, align 8, !dbg !8317
  %cmp534 = icmp ule i16* %402, %403, !dbg !8318
  br i1 %cmp534, label %if.then536, label %if.end542, !dbg !8314

if.then536:                                       ; preds = %while.end533
  br label %do.body537, !dbg !8319, !llvm.loop !8322

do.body537:                                       ; preds = %if.then536
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp538, metadata !8324, metadata !2753), !dbg !8326
  %404 = load i16*, i16** %right450, align 8, !dbg !8327
  %405 = load i16, i16* %404, align 2, !dbg !8329
  store i16 %405, i16* %SWAP_tmp538, align 2, !dbg !8330
  %406 = load i16*, i16** %left452, align 8, !dbg !8331
  %407 = load i16, i16* %406, align 2, !dbg !8332
  %408 = load i16*, i16** %right450, align 8, !dbg !8333
  store i16 %407, i16* %408, align 2, !dbg !8334
  %409 = load i16, i16* %SWAP_tmp538, align 2, !dbg !8335
  %410 = load i16*, i16** %left452, align 8, !dbg !8336
  store i16 %409, i16* %410, align 2, !dbg !8337
  br label %do.end539, !dbg !8338

do.end539:                                        ; preds = %do.body537
  %411 = load i16*, i16** %left452, align 8, !dbg !8339
  %incdec.ptr540 = getelementptr inbounds i16, i16* %411, i32 1, !dbg !8339
  store i16* %incdec.ptr540, i16** %left452, align 8, !dbg !8339
  %412 = load i16*, i16** %right450, align 8, !dbg !8341
  %incdec.ptr541 = getelementptr inbounds i16, i16* %412, i32 -1, !dbg !8341
  store i16* %incdec.ptr541, i16** %right450, align 8, !dbg !8341
  br label %if.end542, !dbg !8342

if.end542:                                        ; preds = %do.end539, %while.end533
  br label %while.cond506, !dbg !8343, !llvm.loop !8345

while.end543:                                     ; preds = %while.cond506
  br label %do.body544, !dbg !8347, !llvm.loop !8349

do.body544:                                       ; preds = %while.end543
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp545, metadata !8351, metadata !2753), !dbg !8353
  %413 = load i16*, i16** %left452, align 8, !dbg !8354
  %414 = load i16, i16* %413, align 2, !dbg !8356
  store i16 %414, i16* %SWAP_tmp545, align 2, !dbg !8357
  %415 = load i16*, i16** %end437, align 8, !dbg !8358
  %arrayidx546 = getelementptr inbounds i16, i16* %415, i64 -1, !dbg !8358
  %416 = load i16, i16* %arrayidx546, align 2, !dbg !8358
  %417 = load i16*, i16** %left452, align 8, !dbg !8359
  store i16 %416, i16* %417, align 2, !dbg !8360
  %418 = load i16, i16* %SWAP_tmp545, align 2, !dbg !8361
  %419 = load i16*, i16** %end437, align 8, !dbg !8362
  %arrayidx547 = getelementptr inbounds i16, i16* %419, i64 -1, !dbg !8362
  store i16 %418, i16* %arrayidx547, align 2, !dbg !8363
  br label %do.end548, !dbg !8364

do.end548:                                        ; preds = %do.body544
  %420 = load i32, i32* %checksort449, align 4, !dbg !8365
  %tobool549 = icmp ne i32 %420, 0, !dbg !8365
  br i1 %tobool549, label %land.lhs.true550, label %if.end574, !dbg !8368

land.lhs.true550:                                 ; preds = %do.end548
  %421 = load i16*, i16** %mid454, align 8, !dbg !8369
  %422 = load i16*, i16** %left452, align 8, !dbg !8371
  %add.ptr551 = getelementptr inbounds i16, i16* %422, i64 -1, !dbg !8372
  %cmp552 = icmp eq i16* %421, %add.ptr551, !dbg !8373
  br i1 %cmp552, label %if.then557, label %lor.lhs.false554, !dbg !8374

lor.lhs.false554:                                 ; preds = %land.lhs.true550
  %423 = load i16*, i16** %mid454, align 8, !dbg !8375
  %424 = load i16*, i16** %left452, align 8, !dbg !8377
  %cmp555 = icmp eq i16* %423, %424, !dbg !8378
  br i1 %cmp555, label %if.then557, label %if.end574, !dbg !8379

if.then557:                                       ; preds = %lor.lhs.false554, %land.lhs.true550
  %425 = load i16*, i16** %start432, align 8, !dbg !8380
  store i16* %425, i16** %mid454, align 8, !dbg !8383
  br label %while.cond558, !dbg !8384

while.cond558:                                    ; preds = %while.body567, %if.then557
  %426 = load i16*, i16** %mid454, align 8, !dbg !8385
  %427 = load i16*, i16** %end437, align 8, !dbg !8387
  %cmp559 = icmp ult i16* %426, %427, !dbg !8388
  br i1 %cmp559, label %land.rhs561, label %land.end566, !dbg !8389

land.rhs561:                                      ; preds = %while.cond558
  %428 = load i16*, i16** %mid454, align 8, !dbg !8390
  %429 = bitcast i16* %428 to i8*, !dbg !8390
  %430 = load i16*, i16** %mid454, align 8, !dbg !8392
  %add.ptr562 = getelementptr inbounds i16, i16* %430, i64 1, !dbg !8393
  %431 = bitcast i16* %add.ptr562 to i8*, !dbg !8392
  %call563 = call i32 @qsort_comparison_function_int16(i8* %429, i8* %431), !dbg !8394
  %cmp564 = icmp sle i32 %call563, 0, !dbg !8395
  br label %land.end566

land.end566:                                      ; preds = %land.rhs561, %while.cond558
  %432 = phi i1 [ false, %while.cond558 ], [ %cmp564, %land.rhs561 ]
  br i1 %432, label %while.body567, label %while.end569, !dbg !8396

while.body567:                                    ; preds = %land.end566
  %433 = load i16*, i16** %mid454, align 8, !dbg !8398
  %incdec.ptr568 = getelementptr inbounds i16, i16* %433, i32 1, !dbg !8398
  store i16* %incdec.ptr568, i16** %mid454, align 8, !dbg !8398
  br label %while.cond558, !dbg !8400, !llvm.loop !8401

while.end569:                                     ; preds = %land.end566
  %434 = load i16*, i16** %mid454, align 8, !dbg !8403
  %435 = load i16*, i16** %end437, align 8, !dbg !8406
  %cmp570 = icmp eq i16* %434, %435, !dbg !8407
  br i1 %cmp570, label %if.then572, label %if.end573, !dbg !8403

if.then572:                                       ; preds = %while.end569
  br label %while.end614, !dbg !8408

if.end573:                                        ; preds = %while.end569
  br label %if.end574, !dbg !8410

if.end574:                                        ; preds = %if.end573, %lor.lhs.false554, %do.end548
  %436 = load i16*, i16** %end437, align 8, !dbg !8412
  %437 = load i16*, i16** %left452, align 8, !dbg !8415
  %sub.ptr.lhs.cast575 = ptrtoint i16* %436 to i64, !dbg !8416
  %sub.ptr.rhs.cast576 = ptrtoint i16* %437 to i64, !dbg !8416
  %sub.ptr.sub577 = sub i64 %sub.ptr.lhs.cast575, %sub.ptr.rhs.cast576, !dbg !8416
  %sub.ptr.div578 = sdiv exact i64 %sub.ptr.sub577, 2, !dbg !8416
  %438 = load i16*, i16** %left452, align 8, !dbg !8417
  %439 = load i16*, i16** %start432, align 8, !dbg !8418
  %sub.ptr.lhs.cast579 = ptrtoint i16* %438 to i64, !dbg !8419
  %sub.ptr.rhs.cast580 = ptrtoint i16* %439 to i64, !dbg !8419
  %sub.ptr.sub581 = sub i64 %sub.ptr.lhs.cast579, %sub.ptr.rhs.cast580, !dbg !8419
  %sub.ptr.div582 = sdiv exact i64 %sub.ptr.sub581, 2, !dbg !8419
  %cmp583 = icmp slt i64 %sub.ptr.div578, %sub.ptr.div582, !dbg !8420
  br i1 %cmp583, label %if.then585, label %if.else594, !dbg !8412

if.then585:                                       ; preds = %if.end574
  %440 = load i16*, i16** %start432, align 8, !dbg !8421
  %441 = bitcast i16* %440 to i8*, !dbg !8421
  %442 = load i32, i32* %sp418, align 4, !dbg !8424
  %idxprom586 = sext i32 %442 to i64, !dbg !8425
  %arrayidx587 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom586, !dbg !8425
  %arrayidx588 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx587, i64 0, i64 0, !dbg !8425
  store i8* %441, i8** %arrayidx588, align 16, !dbg !8426
  %443 = load i16*, i16** %right450, align 8, !dbg !8427
  %444 = bitcast i16* %443 to i8*, !dbg !8427
  %445 = load i32, i32* %sp418, align 4, !dbg !8428
  %inc589 = add nsw i32 %445, 1, !dbg !8428
  store i32 %inc589, i32* %sp418, align 4, !dbg !8428
  %idxprom590 = sext i32 %445 to i64, !dbg !8429
  %arrayidx591 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom590, !dbg !8429
  %arrayidx592 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx591, i64 0, i64 1, !dbg !8429
  store i8* %444, i8** %arrayidx592, align 8, !dbg !8430
  %446 = load i16*, i16** %left452, align 8, !dbg !8431
  %add.ptr593 = getelementptr inbounds i16, i16* %446, i64 1, !dbg !8432
  store i16* %add.ptr593, i16** %start432, align 8, !dbg !8433
  br label %if.end603, !dbg !8434

if.else594:                                       ; preds = %if.end574
  %447 = load i16*, i16** %left452, align 8, !dbg !8435
  %add.ptr595 = getelementptr inbounds i16, i16* %447, i64 1, !dbg !8438
  %448 = bitcast i16* %add.ptr595 to i8*, !dbg !8435
  %449 = load i32, i32* %sp418, align 4, !dbg !8439
  %idxprom596 = sext i32 %449 to i64, !dbg !8440
  %arrayidx597 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom596, !dbg !8440
  %arrayidx598 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx597, i64 0, i64 0, !dbg !8440
  store i8* %448, i8** %arrayidx598, align 16, !dbg !8441
  %450 = load i16*, i16** %end437, align 8, !dbg !8442
  %451 = bitcast i16* %450 to i8*, !dbg !8442
  %452 = load i32, i32* %sp418, align 4, !dbg !8443
  %inc599 = add nsw i32 %452, 1, !dbg !8443
  store i32 %inc599, i32* %sp418, align 4, !dbg !8443
  %idxprom600 = sext i32 %452 to i64, !dbg !8444
  %arrayidx601 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack417, i64 0, i64 %idxprom600, !dbg !8444
  %arrayidx602 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx601, i64 0, i64 1, !dbg !8444
  store i8* %451, i8** %arrayidx602, align 8, !dbg !8445
  %453 = load i16*, i16** %right450, align 8, !dbg !8446
  store i16* %453, i16** %end437, align 8, !dbg !8447
  br label %if.end603

if.end603:                                        ; preds = %if.else594, %if.then585
  br label %if.end613, !dbg !8448

if.else604:                                       ; preds = %while.body444
  %454 = load i16*, i16** %start432, align 8, !dbg !8450
  %455 = bitcast i16* %454 to i8*, !dbg !8450
  %456 = load i16*, i16** %end437, align 8, !dbg !8454
  %457 = bitcast i16* %456 to i8*, !dbg !8454
  %call605 = call i32 @qsort_comparison_function_int16(i8* %455, i8* %457), !dbg !8455
  %cmp606 = icmp sgt i32 %call605, 0, !dbg !8456
  br i1 %cmp606, label %if.then608, label %if.end612, !dbg !8455

if.then608:                                       ; preds = %if.else604
  br label %do.body609, !dbg !8457, !llvm.loop !8459

do.body609:                                       ; preds = %if.then608
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp610, metadata !8461, metadata !2753), !dbg !8463
  %458 = load i16*, i16** %end437, align 8, !dbg !8464
  %459 = load i16, i16* %458, align 2, !dbg !8466
  store i16 %459, i16* %SWAP_tmp610, align 2, !dbg !8467
  %460 = load i16*, i16** %start432, align 8, !dbg !8468
  %461 = load i16, i16* %460, align 2, !dbg !8469
  %462 = load i16*, i16** %end437, align 8, !dbg !8470
  store i16 %461, i16* %462, align 2, !dbg !8471
  %463 = load i16, i16* %SWAP_tmp610, align 2, !dbg !8472
  %464 = load i16*, i16** %start432, align 8, !dbg !8473
  store i16 %463, i16* %464, align 2, !dbg !8474
  br label %do.end611, !dbg !8475

do.end611:                                        ; preds = %do.body609
  br label %if.end612, !dbg !8476

if.end612:                                        ; preds = %do.end611, %if.else604
  br label %while.end614, !dbg !8478

if.end613:                                        ; preds = %if.end603
  br label %while.cond441, !dbg !8480, !llvm.loop !8482

while.end614:                                     ; preds = %if.end612, %if.then572, %if.then499, %while.cond441
  br label %while.cond429, !dbg !8484, !llvm.loop !8486

while.end615:                                     ; preds = %while.cond429
  br label %do.end616, !dbg !8488

do.end616:                                        ; preds = %while.end615
  %465 = load i32, i32* %num_bands_0, align 4, !dbg !8490
  %idxprom617 = sext i32 %465 to i64, !dbg !8491
  %arrayidx618 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom617, !dbg !8491
  %466 = load i16, i16* %arrayidx618, align 2, !dbg !8491
  %conv619 = sext i16 %466 to i32, !dbg !8491
  store i32 %conv619, i32* %vdk0_max, align 4, !dbg !8492
  %467 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8493
  %k620 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %467, i32 0, i32 12, !dbg !8494
  %arrayidx621 = getelementptr inbounds [5 x i32], [5 x i32]* %k620, i64 0, i64 0, !dbg !8493
  %468 = load i32, i32* %arrayidx621, align 4, !dbg !8493
  %conv622 = trunc i32 %468 to i16, !dbg !8493
  %arrayidx623 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 0, !dbg !8495
  store i16 %conv622, i16* %arrayidx623, align 16, !dbg !8496
  store i32 1, i32* %k, align 4, !dbg !8497
  br label %for.cond624, !dbg !8499

for.cond624:                                      ; preds = %for.inc648, %do.end616
  %469 = load i32, i32* %k, align 4, !dbg !8500
  %470 = load i32, i32* %num_bands_0, align 4, !dbg !8503
  %cmp625 = icmp sle i32 %469, %470, !dbg !8504
  br i1 %cmp625, label %for.body627, label %for.end650, !dbg !8505

for.body627:                                      ; preds = %for.cond624
  %471 = load i32, i32* %k, align 4, !dbg !8506
  %idxprom628 = sext i32 %471 to i64, !dbg !8509
  %arrayidx629 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom628, !dbg !8509
  %472 = load i16, i16* %arrayidx629, align 2, !dbg !8509
  %conv630 = sext i16 %472 to i32, !dbg !8509
  %cmp631 = icmp sle i32 %conv630, 0, !dbg !8510
  br i1 %cmp631, label %if.then633, label %if.end638, !dbg !8511

if.then633:                                       ; preds = %for.body627
  %473 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !8512
  %avctx634 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %473, i32 0, i32 1, !dbg !8514
  %474 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx634, align 8, !dbg !8514
  %475 = bitcast %struct.AVCodecContext* %474 to i8*, !dbg !8512
  %476 = load i32, i32* %k, align 4, !dbg !8515
  %477 = load i32, i32* %k, align 4, !dbg !8516
  %idxprom635 = sext i32 %477 to i64, !dbg !8517
  %arrayidx636 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom635, !dbg !8517
  %478 = load i16, i16* %arrayidx636, align 2, !dbg !8517
  %conv637 = sext i16 %478 to i32, !dbg !8517
  call void (i8*, i32, i8*, ...) @av_log(i8* %475, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0), i32 %476, i32 %conv637), !dbg !8518
  store i32 -1, i32* %retval, align 4, !dbg !8519
  br label %return, !dbg !8519

if.end638:                                        ; preds = %for.body627
  %479 = load i32, i32* %k, align 4, !dbg !8520
  %sub639 = sub nsw i32 %479, 1, !dbg !8521
  %idxprom640 = sext i32 %sub639 to i64, !dbg !8522
  %arrayidx641 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom640, !dbg !8522
  %480 = load i16, i16* %arrayidx641, align 2, !dbg !8522
  %conv642 = sext i16 %480 to i32, !dbg !8522
  %481 = load i32, i32* %k, align 4, !dbg !8523
  %idxprom643 = sext i32 %481 to i64, !dbg !8524
  %arrayidx644 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i64 0, i64 %idxprom643, !dbg !8524
  %482 = load i16, i16* %arrayidx644, align 2, !dbg !8525
  %conv645 = sext i16 %482 to i32, !dbg !8525
  %add646 = add nsw i32 %conv645, %conv642, !dbg !8525
  %conv647 = trunc i32 %add646 to i16, !dbg !8525
  store i16 %conv647, i16* %arrayidx644, align 2, !dbg !8525
  br label %for.inc648, !dbg !8526

for.inc648:                                       ; preds = %if.end638
  %483 = load i32, i32* %k, align 4, !dbg !8527
  %inc649 = add nsw i32 %483, 1, !dbg !8527
  store i32 %inc649, i32* %k, align 4, !dbg !8527
  br label %for.cond624, !dbg !8529, !llvm.loop !8530

for.end650:                                       ; preds = %for.cond624
  %484 = load i32, i32* %two_regions, align 4, !dbg !8532
  %tobool651 = icmp ne i32 %484, 0, !dbg !8532
  br i1 %tobool651, label %if.then652, label %if.else1179, !dbg !8534

if.then652:                                       ; preds = %for.end650
  call void @llvm.dbg.declare(metadata [49 x i16]* %vk1, metadata !8535, metadata !2753), !dbg !8537
  call void @llvm.dbg.declare(metadata float* %invwarp, metadata !8538, metadata !2753), !dbg !8539
  %485 = load %struct.SpectrumParameters*, %struct.SpectrumParameters** %spectrum.addr, align 8, !dbg !8540
  %bs_alter_scale653 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %485, i32 0, i32 4, !dbg !8541
  %486 = load i8, i8* %bs_alter_scale653, align 1, !dbg !8541
  %conv654 = zext i8 %486 to i32, !dbg !8540
  %tobool655 = icmp ne i32 %conv654, 0, !dbg !8540
  %cond656 = select i1 %tobool655, float 0x3FE89D89E0000000, float 1.000000e+00, !dbg !8540
  store float %cond656, float* %invwarp, align 4, !dbg !8539
  call void @llvm.dbg.declare(metadata i32* %num_bands_1, metadata !8542, metadata !2753), !dbg !8543
  %487 = load i32, i32* %half_bands, align 4, !dbg !8544
  %conv657 = sitofp i32 %487 to float, !dbg !8544
  %488 = load float, float* %invwarp, align 4, !dbg !8545
  %mul658 = fmul float %conv657, %488, !dbg !8546
  %489 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8547
  %k659 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %489, i32 0, i32 12, !dbg !8548
  %arrayidx660 = getelementptr inbounds [5 x i32], [5 x i32]* %k659, i64 0, i64 2, !dbg !8547
  %490 = load i32, i32* %arrayidx660, align 4, !dbg !8547
  %conv661 = uitofp i32 %490 to float, !dbg !8547
  %491 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8549
  %k662 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %491, i32 0, i32 12, !dbg !8550
  %arrayidx663 = getelementptr inbounds [5 x i32], [5 x i32]* %k662, i64 0, i64 1, !dbg !8549
  %492 = load i32, i32* %arrayidx663, align 4, !dbg !8549
  %conv664 = uitofp i32 %492 to float, !dbg !8551
  %div665 = fdiv float %conv661, %conv664, !dbg !8552
  %call666 = call float @log2f(float %div665) #11, !dbg !8553
  %mul667 = fmul float %mul658, %call666, !dbg !8554
  %call668 = call i64 @lrintf(float %mul667) #11, !dbg !8555
  %mul669 = mul nsw i64 %call668, 2, !dbg !8556
  %conv670 = trunc i64 %mul669 to i32, !dbg !8555
  store i32 %conv670, i32* %num_bands_1, align 4, !dbg !8543
  %arraydecay671 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8557
  %add.ptr672 = getelementptr inbounds i16, i16* %arraydecay671, i64 1, !dbg !8558
  %493 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8559
  %k673 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %493, i32 0, i32 12, !dbg !8560
  %arrayidx674 = getelementptr inbounds [5 x i32], [5 x i32]* %k673, i64 0, i64 1, !dbg !8559
  %494 = load i32, i32* %arrayidx674, align 4, !dbg !8559
  %495 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !8561
  %k675 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %495, i32 0, i32 12, !dbg !8562
  %arrayidx676 = getelementptr inbounds [5 x i32], [5 x i32]* %k675, i64 0, i64 2, !dbg !8561
  %496 = load i32, i32* %arrayidx676, align 4, !dbg !8561
  %497 = load i32, i32* %num_bands_1, align 4, !dbg !8563
  call void @make_bands(i16* %add.ptr672, i32 %494, i32 %496, i32 %497), !dbg !8564
  %arraydecay677 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8565
  %add.ptr678 = getelementptr inbounds i16, i16* %arraydecay677, i64 1, !dbg !8566
  %498 = load i32, i32* %num_bands_1, align 4, !dbg !8567
  %call679 = call i32 @array_min_int16(i16* %add.ptr678, i32 %498), !dbg !8568
  store i32 %call679, i32* %vdk1_min, align 4, !dbg !8569
  %499 = load i32, i32* %vdk1_min, align 4, !dbg !8570
  %500 = load i32, i32* %vdk0_max, align 4, !dbg !8572
  %cmp680 = icmp slt i32 %499, %500, !dbg !8573
  br i1 %cmp680, label %if.then682, label %if.end920, !dbg !8574

if.then682:                                       ; preds = %if.then652
  call void @llvm.dbg.declare(metadata i32* %change, metadata !8575, metadata !2753), !dbg !8577
  br label %do.body683, !dbg !8578, !llvm.loop !8579

do.body683:                                       ; preds = %if.then682
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack684, metadata !8580, metadata !2753), !dbg !8582
  call void @llvm.dbg.declare(metadata i32* %sp685, metadata !8583, metadata !2753), !dbg !8584
  store i32 1, i32* %sp685, align 4, !dbg !8585
  %arraydecay686 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8587
  %add.ptr687 = getelementptr inbounds i16, i16* %arraydecay686, i64 1, !dbg !8588
  %501 = bitcast i16* %add.ptr687 to i8*, !dbg !8587
  %arrayidx688 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 0, !dbg !8589
  %arrayidx689 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx688, i64 0, i64 0, !dbg !8589
  store i8* %501, i8** %arrayidx689, align 16, !dbg !8590
  %arraydecay690 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !8591
  %add.ptr691 = getelementptr inbounds i16, i16* %arraydecay690, i64 1, !dbg !8592
  %502 = load i32, i32* %num_bands_1, align 4, !dbg !8593
  %idx.ext692 = sext i32 %502 to i64, !dbg !8594
  %add.ptr693 = getelementptr inbounds i16, i16* %add.ptr691, i64 %idx.ext692, !dbg !8594
  %add.ptr694 = getelementptr inbounds i16, i16* %add.ptr693, i64 -1, !dbg !8595
  %503 = bitcast i16* %add.ptr694 to i8*, !dbg !8596
  %arrayidx695 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 0, !dbg !8597
  %arrayidx696 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx695, i64 0, i64 1, !dbg !8597
  store i8* %503, i8** %arrayidx696, align 8, !dbg !8598
  br label %while.cond697, !dbg !8599

while.cond697:                                    ; preds = %while.end882, %do.body683
  %504 = load i32, i32* %sp685, align 4, !dbg !8600
  %tobool698 = icmp ne i32 %504, 0, !dbg !8602
  br i1 %tobool698, label %while.body699, label %while.end883, !dbg !8602

while.body699:                                    ; preds = %while.cond697
  call void @llvm.dbg.declare(metadata i16** %start700, metadata !8603, metadata !2753), !dbg !8605
  %505 = load i32, i32* %sp685, align 4, !dbg !8606
  %dec701 = add nsw i32 %505, -1, !dbg !8606
  store i32 %dec701, i32* %sp685, align 4, !dbg !8606
  %idxprom702 = sext i32 %dec701 to i64, !dbg !8608
  %arrayidx703 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom702, !dbg !8608
  %arrayidx704 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx703, i64 0, i64 0, !dbg !8608
  %506 = load i8*, i8** %arrayidx704, align 16, !dbg !8608
  %507 = bitcast i8* %506 to i16*, !dbg !8608
  store i16* %507, i16** %start700, align 8, !dbg !8609
  call void @llvm.dbg.declare(metadata i16** %end705, metadata !8610, metadata !2753), !dbg !8611
  %508 = load i32, i32* %sp685, align 4, !dbg !8612
  %idxprom706 = sext i32 %508 to i64, !dbg !8613
  %arrayidx707 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom706, !dbg !8613
  %arrayidx708 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx707, i64 0, i64 1, !dbg !8613
  %509 = load i8*, i8** %arrayidx708, align 8, !dbg !8613
  %510 = bitcast i8* %509 to i16*, !dbg !8613
  store i16* %510, i16** %end705, align 8, !dbg !8614
  br label %while.cond709, !dbg !8615

while.cond709:                                    ; preds = %if.end881, %while.body699
  %511 = load i16*, i16** %start700, align 8, !dbg !8616
  %512 = load i16*, i16** %end705, align 8, !dbg !8618
  %cmp710 = icmp ult i16* %511, %512, !dbg !8619
  br i1 %cmp710, label %while.body712, label %while.end882, !dbg !8620

while.body712:                                    ; preds = %while.cond709
  %513 = load i16*, i16** %start700, align 8, !dbg !8621
  %514 = load i16*, i16** %end705, align 8, !dbg !8625
  %add.ptr713 = getelementptr inbounds i16, i16* %514, i64 -1, !dbg !8626
  %cmp714 = icmp ult i16* %513, %add.ptr713, !dbg !8627
  br i1 %cmp714, label %if.then716, label %if.else872, !dbg !8621

if.then716:                                       ; preds = %while.body712
  call void @llvm.dbg.declare(metadata i32* %checksort717, metadata !8628, metadata !2753), !dbg !8630
  store i32 0, i32* %checksort717, align 4, !dbg !8631
  call void @llvm.dbg.declare(metadata i16** %right718, metadata !8633, metadata !2753), !dbg !8634
  %515 = load i16*, i16** %end705, align 8, !dbg !8635
  %add.ptr719 = getelementptr inbounds i16, i16* %515, i64 -2, !dbg !8636
  store i16* %add.ptr719, i16** %right718, align 8, !dbg !8637
  call void @llvm.dbg.declare(metadata i16** %left720, metadata !8638, metadata !2753), !dbg !8639
  %516 = load i16*, i16** %start700, align 8, !dbg !8640
  %add.ptr721 = getelementptr inbounds i16, i16* %516, i64 1, !dbg !8641
  store i16* %add.ptr721, i16** %left720, align 8, !dbg !8642
  call void @llvm.dbg.declare(metadata i16** %mid722, metadata !8643, metadata !2753), !dbg !8644
  %517 = load i16*, i16** %start700, align 8, !dbg !8645
  %518 = load i16*, i16** %end705, align 8, !dbg !8646
  %519 = load i16*, i16** %start700, align 8, !dbg !8647
  %sub.ptr.lhs.cast723 = ptrtoint i16* %518 to i64, !dbg !8648
  %sub.ptr.rhs.cast724 = ptrtoint i16* %519 to i64, !dbg !8648
  %sub.ptr.sub725 = sub i64 %sub.ptr.lhs.cast723, %sub.ptr.rhs.cast724, !dbg !8648
  %sub.ptr.div726 = sdiv exact i64 %sub.ptr.sub725, 2, !dbg !8648
  %shr727 = ashr i64 %sub.ptr.div726, 1, !dbg !8649
  %add.ptr728 = getelementptr inbounds i16, i16* %517, i64 %shr727, !dbg !8650
  store i16* %add.ptr728, i16** %mid722, align 8, !dbg !8651
  %520 = load i16*, i16** %start700, align 8, !dbg !8652
  %521 = bitcast i16* %520 to i8*, !dbg !8652
  %522 = load i16*, i16** %end705, align 8, !dbg !8653
  %523 = bitcast i16* %522 to i8*, !dbg !8653
  %call729 = call i32 @qsort_comparison_function_int16(i8* %521, i8* %523), !dbg !8654
  %cmp730 = icmp sgt i32 %call729, 0, !dbg !8655
  br i1 %cmp730, label %if.then732, label %if.else745, !dbg !8654

if.then732:                                       ; preds = %if.then716
  %524 = load i16*, i16** %end705, align 8, !dbg !8656
  %525 = bitcast i16* %524 to i8*, !dbg !8656
  %526 = load i16*, i16** %mid722, align 8, !dbg !8661
  %527 = bitcast i16* %526 to i8*, !dbg !8661
  %call733 = call i32 @qsort_comparison_function_int16(i8* %525, i8* %527), !dbg !8662
  %cmp734 = icmp sgt i32 %call733, 0, !dbg !8663
  br i1 %cmp734, label %if.then736, label %if.else740, !dbg !8662

if.then736:                                       ; preds = %if.then732
  br label %do.body737, !dbg !8664, !llvm.loop !8666

do.body737:                                       ; preds = %if.then736
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp738, metadata !8668, metadata !2753), !dbg !8670
  %528 = load i16*, i16** %mid722, align 8, !dbg !8671
  %529 = load i16, i16* %528, align 2, !dbg !8673
  store i16 %529, i16* %SWAP_tmp738, align 2, !dbg !8674
  %530 = load i16*, i16** %start700, align 8, !dbg !8675
  %531 = load i16, i16* %530, align 2, !dbg !8676
  %532 = load i16*, i16** %mid722, align 8, !dbg !8677
  store i16 %531, i16* %532, align 2, !dbg !8678
  %533 = load i16, i16* %SWAP_tmp738, align 2, !dbg !8679
  %534 = load i16*, i16** %start700, align 8, !dbg !8680
  store i16 %533, i16* %534, align 2, !dbg !8681
  br label %do.end739, !dbg !8682

do.end739:                                        ; preds = %do.body737
  br label %if.end744, !dbg !8683

if.else740:                                       ; preds = %if.then732
  br label %do.body741, !dbg !8685, !llvm.loop !8687

do.body741:                                       ; preds = %if.else740
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp742, metadata !8689, metadata !2753), !dbg !8691
  %535 = load i16*, i16** %end705, align 8, !dbg !8692
  %536 = load i16, i16* %535, align 2, !dbg !8694
  store i16 %536, i16* %SWAP_tmp742, align 2, !dbg !8695
  %537 = load i16*, i16** %start700, align 8, !dbg !8696
  %538 = load i16, i16* %537, align 2, !dbg !8697
  %539 = load i16*, i16** %end705, align 8, !dbg !8698
  store i16 %538, i16* %539, align 2, !dbg !8699
  %540 = load i16, i16* %SWAP_tmp742, align 2, !dbg !8700
  %541 = load i16*, i16** %start700, align 8, !dbg !8701
  store i16 %540, i16* %541, align 2, !dbg !8702
  br label %do.end743, !dbg !8703

do.end743:                                        ; preds = %do.body741
  br label %if.end744

if.end744:                                        ; preds = %do.end743, %do.end739
  br label %if.end755, !dbg !8704

if.else745:                                       ; preds = %if.then716
  %542 = load i16*, i16** %start700, align 8, !dbg !8706
  %543 = bitcast i16* %542 to i8*, !dbg !8706
  %544 = load i16*, i16** %mid722, align 8, !dbg !8710
  %545 = bitcast i16* %544 to i8*, !dbg !8710
  %call746 = call i32 @qsort_comparison_function_int16(i8* %543, i8* %545), !dbg !8711
  %cmp747 = icmp sgt i32 %call746, 0, !dbg !8712
  br i1 %cmp747, label %if.then749, label %if.else753, !dbg !8711

if.then749:                                       ; preds = %if.else745
  br label %do.body750, !dbg !8713, !llvm.loop !8715

do.body750:                                       ; preds = %if.then749
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp751, metadata !8717, metadata !2753), !dbg !8719
  %546 = load i16*, i16** %mid722, align 8, !dbg !8720
  %547 = load i16, i16* %546, align 2, !dbg !8722
  store i16 %547, i16* %SWAP_tmp751, align 2, !dbg !8723
  %548 = load i16*, i16** %start700, align 8, !dbg !8724
  %549 = load i16, i16* %548, align 2, !dbg !8725
  %550 = load i16*, i16** %mid722, align 8, !dbg !8726
  store i16 %549, i16* %550, align 2, !dbg !8727
  %551 = load i16, i16* %SWAP_tmp751, align 2, !dbg !8728
  %552 = load i16*, i16** %start700, align 8, !dbg !8729
  store i16 %551, i16* %552, align 2, !dbg !8730
  br label %do.end752, !dbg !8731

do.end752:                                        ; preds = %do.body750
  br label %if.end754, !dbg !8732

if.else753:                                       ; preds = %if.else745
  store i32 1, i32* %checksort717, align 4, !dbg !8734
  br label %if.end754

if.end754:                                        ; preds = %if.else753, %do.end752
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.end744
  %553 = load i16*, i16** %mid722, align 8, !dbg !8736
  %554 = bitcast i16* %553 to i8*, !dbg !8736
  %555 = load i16*, i16** %end705, align 8, !dbg !8739
  %556 = bitcast i16* %555 to i8*, !dbg !8739
  %call756 = call i32 @qsort_comparison_function_int16(i8* %554, i8* %556), !dbg !8740
  %cmp757 = icmp sgt i32 %call756, 0, !dbg !8741
  br i1 %cmp757, label %if.then759, label %if.end763, !dbg !8740

if.then759:                                       ; preds = %if.end755
  br label %do.body760, !dbg !8742, !llvm.loop !8745

do.body760:                                       ; preds = %if.then759
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp761, metadata !8747, metadata !2753), !dbg !8749
  %557 = load i16*, i16** %end705, align 8, !dbg !8750
  %558 = load i16, i16* %557, align 2, !dbg !8752
  store i16 %558, i16* %SWAP_tmp761, align 2, !dbg !8753
  %559 = load i16*, i16** %mid722, align 8, !dbg !8754
  %560 = load i16, i16* %559, align 2, !dbg !8755
  %561 = load i16*, i16** %end705, align 8, !dbg !8756
  store i16 %560, i16* %561, align 2, !dbg !8757
  %562 = load i16, i16* %SWAP_tmp761, align 2, !dbg !8758
  %563 = load i16*, i16** %mid722, align 8, !dbg !8759
  store i16 %562, i16* %563, align 2, !dbg !8760
  br label %do.end762, !dbg !8761

do.end762:                                        ; preds = %do.body760
  store i32 0, i32* %checksort717, align 4, !dbg !8762
  br label %if.end763, !dbg !8764

if.end763:                                        ; preds = %do.end762, %if.end755
  %564 = load i16*, i16** %start700, align 8, !dbg !8765
  %565 = load i16*, i16** %end705, align 8, !dbg !8768
  %add.ptr764 = getelementptr inbounds i16, i16* %565, i64 -2, !dbg !8769
  %cmp765 = icmp eq i16* %564, %add.ptr764, !dbg !8770
  br i1 %cmp765, label %if.then767, label %if.end768, !dbg !8765

if.then767:                                       ; preds = %if.end763
  br label %while.end882, !dbg !8771

if.end768:                                        ; preds = %if.end763
  br label %do.body769, !dbg !8773, !llvm.loop !8775

do.body769:                                       ; preds = %if.end768
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp770, metadata !8777, metadata !2753), !dbg !8779
  %566 = load i16*, i16** %mid722, align 8, !dbg !8780
  %567 = load i16, i16* %566, align 2, !dbg !8782
  store i16 %567, i16* %SWAP_tmp770, align 2, !dbg !8783
  %568 = load i16*, i16** %end705, align 8, !dbg !8784
  %arrayidx771 = getelementptr inbounds i16, i16* %568, i64 -1, !dbg !8784
  %569 = load i16, i16* %arrayidx771, align 2, !dbg !8784
  %570 = load i16*, i16** %mid722, align 8, !dbg !8785
  store i16 %569, i16* %570, align 2, !dbg !8786
  %571 = load i16, i16* %SWAP_tmp770, align 2, !dbg !8787
  %572 = load i16*, i16** %end705, align 8, !dbg !8788
  %arrayidx772 = getelementptr inbounds i16, i16* %572, i64 -1, !dbg !8788
  store i16 %571, i16* %arrayidx772, align 2, !dbg !8789
  br label %do.end773, !dbg !8790

do.end773:                                        ; preds = %do.body769
  br label %while.cond774, !dbg !8791

while.cond774:                                    ; preds = %if.end810, %do.end773
  %573 = load i16*, i16** %left720, align 8, !dbg !8793
  %574 = load i16*, i16** %right718, align 8, !dbg !8795
  %cmp775 = icmp ule i16* %573, %574, !dbg !8796
  br i1 %cmp775, label %while.body777, label %while.end811, !dbg !8797

while.body777:                                    ; preds = %while.cond774
  br label %while.cond778, !dbg !8798

while.cond778:                                    ; preds = %while.body787, %while.body777
  %575 = load i16*, i16** %left720, align 8, !dbg !8801
  %576 = load i16*, i16** %right718, align 8, !dbg !8803
  %cmp779 = icmp ule i16* %575, %576, !dbg !8804
  br i1 %cmp779, label %land.rhs781, label %land.end786, !dbg !8805

land.rhs781:                                      ; preds = %while.cond778
  %577 = load i16*, i16** %left720, align 8, !dbg !8806
  %578 = bitcast i16* %577 to i8*, !dbg !8806
  %579 = load i16*, i16** %end705, align 8, !dbg !8808
  %add.ptr782 = getelementptr inbounds i16, i16* %579, i64 -1, !dbg !8809
  %580 = bitcast i16* %add.ptr782 to i8*, !dbg !8808
  %call783 = call i32 @qsort_comparison_function_int16(i8* %578, i8* %580), !dbg !8810
  %cmp784 = icmp slt i32 %call783, 0, !dbg !8811
  br label %land.end786

land.end786:                                      ; preds = %land.rhs781, %while.cond778
  %581 = phi i1 [ false, %while.cond778 ], [ %cmp784, %land.rhs781 ]
  br i1 %581, label %while.body787, label %while.end789, !dbg !8812

while.body787:                                    ; preds = %land.end786
  %582 = load i16*, i16** %left720, align 8, !dbg !8814
  %incdec.ptr788 = getelementptr inbounds i16, i16* %582, i32 1, !dbg !8814
  store i16* %incdec.ptr788, i16** %left720, align 8, !dbg !8814
  br label %while.cond778, !dbg !8816, !llvm.loop !8817

while.end789:                                     ; preds = %land.end786
  br label %while.cond790, !dbg !8819

while.cond790:                                    ; preds = %while.body799, %while.end789
  %583 = load i16*, i16** %left720, align 8, !dbg !8821
  %584 = load i16*, i16** %right718, align 8, !dbg !8823
  %cmp791 = icmp ule i16* %583, %584, !dbg !8824
  br i1 %cmp791, label %land.rhs793, label %land.end798, !dbg !8825

land.rhs793:                                      ; preds = %while.cond790
  %585 = load i16*, i16** %right718, align 8, !dbg !8826
  %586 = bitcast i16* %585 to i8*, !dbg !8826
  %587 = load i16*, i16** %end705, align 8, !dbg !8828
  %add.ptr794 = getelementptr inbounds i16, i16* %587, i64 -1, !dbg !8829
  %588 = bitcast i16* %add.ptr794 to i8*, !dbg !8828
  %call795 = call i32 @qsort_comparison_function_int16(i8* %586, i8* %588), !dbg !8830
  %cmp796 = icmp sgt i32 %call795, 0, !dbg !8831
  br label %land.end798

land.end798:                                      ; preds = %land.rhs793, %while.cond790
  %589 = phi i1 [ false, %while.cond790 ], [ %cmp796, %land.rhs793 ]
  br i1 %589, label %while.body799, label %while.end801, !dbg !8832

while.body799:                                    ; preds = %land.end798
  %590 = load i16*, i16** %right718, align 8, !dbg !8834
  %incdec.ptr800 = getelementptr inbounds i16, i16* %590, i32 -1, !dbg !8834
  store i16* %incdec.ptr800, i16** %right718, align 8, !dbg !8834
  br label %while.cond790, !dbg !8836, !llvm.loop !8837

while.end801:                                     ; preds = %land.end798
  %591 = load i16*, i16** %left720, align 8, !dbg !8839
  %592 = load i16*, i16** %right718, align 8, !dbg !8842
  %cmp802 = icmp ule i16* %591, %592, !dbg !8843
  br i1 %cmp802, label %if.then804, label %if.end810, !dbg !8839

if.then804:                                       ; preds = %while.end801
  br label %do.body805, !dbg !8844, !llvm.loop !8847

do.body805:                                       ; preds = %if.then804
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp806, metadata !8849, metadata !2753), !dbg !8851
  %593 = load i16*, i16** %right718, align 8, !dbg !8852
  %594 = load i16, i16* %593, align 2, !dbg !8854
  store i16 %594, i16* %SWAP_tmp806, align 2, !dbg !8855
  %595 = load i16*, i16** %left720, align 8, !dbg !8856
  %596 = load i16, i16* %595, align 2, !dbg !8857
  %597 = load i16*, i16** %right718, align 8, !dbg !8858
  store i16 %596, i16* %597, align 2, !dbg !8859
  %598 = load i16, i16* %SWAP_tmp806, align 2, !dbg !8860
  %599 = load i16*, i16** %left720, align 8, !dbg !8861
  store i16 %598, i16* %599, align 2, !dbg !8862
  br label %do.end807, !dbg !8863

do.end807:                                        ; preds = %do.body805
  %600 = load i16*, i16** %left720, align 8, !dbg !8864
  %incdec.ptr808 = getelementptr inbounds i16, i16* %600, i32 1, !dbg !8864
  store i16* %incdec.ptr808, i16** %left720, align 8, !dbg !8864
  %601 = load i16*, i16** %right718, align 8, !dbg !8866
  %incdec.ptr809 = getelementptr inbounds i16, i16* %601, i32 -1, !dbg !8866
  store i16* %incdec.ptr809, i16** %right718, align 8, !dbg !8866
  br label %if.end810, !dbg !8867

if.end810:                                        ; preds = %do.end807, %while.end801
  br label %while.cond774, !dbg !8868, !llvm.loop !8870

while.end811:                                     ; preds = %while.cond774
  br label %do.body812, !dbg !8872, !llvm.loop !8874

do.body812:                                       ; preds = %while.end811
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp813, metadata !8876, metadata !2753), !dbg !8878
  %602 = load i16*, i16** %left720, align 8, !dbg !8879
  %603 = load i16, i16* %602, align 2, !dbg !8881
  store i16 %603, i16* %SWAP_tmp813, align 2, !dbg !8882
  %604 = load i16*, i16** %end705, align 8, !dbg !8883
  %arrayidx814 = getelementptr inbounds i16, i16* %604, i64 -1, !dbg !8883
  %605 = load i16, i16* %arrayidx814, align 2, !dbg !8883
  %606 = load i16*, i16** %left720, align 8, !dbg !8884
  store i16 %605, i16* %606, align 2, !dbg !8885
  %607 = load i16, i16* %SWAP_tmp813, align 2, !dbg !8886
  %608 = load i16*, i16** %end705, align 8, !dbg !8887
  %arrayidx815 = getelementptr inbounds i16, i16* %608, i64 -1, !dbg !8887
  store i16 %607, i16* %arrayidx815, align 2, !dbg !8888
  br label %do.end816, !dbg !8889

do.end816:                                        ; preds = %do.body812
  %609 = load i32, i32* %checksort717, align 4, !dbg !8890
  %tobool817 = icmp ne i32 %609, 0, !dbg !8890
  br i1 %tobool817, label %land.lhs.true818, label %if.end842, !dbg !8893

land.lhs.true818:                                 ; preds = %do.end816
  %610 = load i16*, i16** %mid722, align 8, !dbg !8894
  %611 = load i16*, i16** %left720, align 8, !dbg !8896
  %add.ptr819 = getelementptr inbounds i16, i16* %611, i64 -1, !dbg !8897
  %cmp820 = icmp eq i16* %610, %add.ptr819, !dbg !8898
  br i1 %cmp820, label %if.then825, label %lor.lhs.false822, !dbg !8899

lor.lhs.false822:                                 ; preds = %land.lhs.true818
  %612 = load i16*, i16** %mid722, align 8, !dbg !8900
  %613 = load i16*, i16** %left720, align 8, !dbg !8902
  %cmp823 = icmp eq i16* %612, %613, !dbg !8903
  br i1 %cmp823, label %if.then825, label %if.end842, !dbg !8904

if.then825:                                       ; preds = %lor.lhs.false822, %land.lhs.true818
  %614 = load i16*, i16** %start700, align 8, !dbg !8905
  store i16* %614, i16** %mid722, align 8, !dbg !8908
  br label %while.cond826, !dbg !8909

while.cond826:                                    ; preds = %while.body835, %if.then825
  %615 = load i16*, i16** %mid722, align 8, !dbg !8910
  %616 = load i16*, i16** %end705, align 8, !dbg !8912
  %cmp827 = icmp ult i16* %615, %616, !dbg !8913
  br i1 %cmp827, label %land.rhs829, label %land.end834, !dbg !8914

land.rhs829:                                      ; preds = %while.cond826
  %617 = load i16*, i16** %mid722, align 8, !dbg !8915
  %618 = bitcast i16* %617 to i8*, !dbg !8915
  %619 = load i16*, i16** %mid722, align 8, !dbg !8917
  %add.ptr830 = getelementptr inbounds i16, i16* %619, i64 1, !dbg !8918
  %620 = bitcast i16* %add.ptr830 to i8*, !dbg !8917
  %call831 = call i32 @qsort_comparison_function_int16(i8* %618, i8* %620), !dbg !8919
  %cmp832 = icmp sle i32 %call831, 0, !dbg !8920
  br label %land.end834

land.end834:                                      ; preds = %land.rhs829, %while.cond826
  %621 = phi i1 [ false, %while.cond826 ], [ %cmp832, %land.rhs829 ]
  br i1 %621, label %while.body835, label %while.end837, !dbg !8921

while.body835:                                    ; preds = %land.end834
  %622 = load i16*, i16** %mid722, align 8, !dbg !8923
  %incdec.ptr836 = getelementptr inbounds i16, i16* %622, i32 1, !dbg !8923
  store i16* %incdec.ptr836, i16** %mid722, align 8, !dbg !8923
  br label %while.cond826, !dbg !8925, !llvm.loop !8926

while.end837:                                     ; preds = %land.end834
  %623 = load i16*, i16** %mid722, align 8, !dbg !8928
  %624 = load i16*, i16** %end705, align 8, !dbg !8931
  %cmp838 = icmp eq i16* %623, %624, !dbg !8932
  br i1 %cmp838, label %if.then840, label %if.end841, !dbg !8928

if.then840:                                       ; preds = %while.end837
  br label %while.end882, !dbg !8933

if.end841:                                        ; preds = %while.end837
  br label %if.end842, !dbg !8935

if.end842:                                        ; preds = %if.end841, %lor.lhs.false822, %do.end816
  %625 = load i16*, i16** %end705, align 8, !dbg !8937
  %626 = load i16*, i16** %left720, align 8, !dbg !8940
  %sub.ptr.lhs.cast843 = ptrtoint i16* %625 to i64, !dbg !8941
  %sub.ptr.rhs.cast844 = ptrtoint i16* %626 to i64, !dbg !8941
  %sub.ptr.sub845 = sub i64 %sub.ptr.lhs.cast843, %sub.ptr.rhs.cast844, !dbg !8941
  %sub.ptr.div846 = sdiv exact i64 %sub.ptr.sub845, 2, !dbg !8941
  %627 = load i16*, i16** %left720, align 8, !dbg !8942
  %628 = load i16*, i16** %start700, align 8, !dbg !8943
  %sub.ptr.lhs.cast847 = ptrtoint i16* %627 to i64, !dbg !8944
  %sub.ptr.rhs.cast848 = ptrtoint i16* %628 to i64, !dbg !8944
  %sub.ptr.sub849 = sub i64 %sub.ptr.lhs.cast847, %sub.ptr.rhs.cast848, !dbg !8944
  %sub.ptr.div850 = sdiv exact i64 %sub.ptr.sub849, 2, !dbg !8944
  %cmp851 = icmp slt i64 %sub.ptr.div846, %sub.ptr.div850, !dbg !8945
  br i1 %cmp851, label %if.then853, label %if.else862, !dbg !8937

if.then853:                                       ; preds = %if.end842
  %629 = load i16*, i16** %start700, align 8, !dbg !8946
  %630 = bitcast i16* %629 to i8*, !dbg !8946
  %631 = load i32, i32* %sp685, align 4, !dbg !8949
  %idxprom854 = sext i32 %631 to i64, !dbg !8950
  %arrayidx855 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom854, !dbg !8950
  %arrayidx856 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx855, i64 0, i64 0, !dbg !8950
  store i8* %630, i8** %arrayidx856, align 16, !dbg !8951
  %632 = load i16*, i16** %right718, align 8, !dbg !8952
  %633 = bitcast i16* %632 to i8*, !dbg !8952
  %634 = load i32, i32* %sp685, align 4, !dbg !8953
  %inc857 = add nsw i32 %634, 1, !dbg !8953
  store i32 %inc857, i32* %sp685, align 4, !dbg !8953
  %idxprom858 = sext i32 %634 to i64, !dbg !8954
  %arrayidx859 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom858, !dbg !8954
  %arrayidx860 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx859, i64 0, i64 1, !dbg !8954
  store i8* %633, i8** %arrayidx860, align 8, !dbg !8955
  %635 = load i16*, i16** %left720, align 8, !dbg !8956
  %add.ptr861 = getelementptr inbounds i16, i16* %635, i64 1, !dbg !8957
  store i16* %add.ptr861, i16** %start700, align 8, !dbg !8958
  br label %if.end871, !dbg !8959

if.else862:                                       ; preds = %if.end842
  %636 = load i16*, i16** %left720, align 8, !dbg !8960
  %add.ptr863 = getelementptr inbounds i16, i16* %636, i64 1, !dbg !8963
  %637 = bitcast i16* %add.ptr863 to i8*, !dbg !8960
  %638 = load i32, i32* %sp685, align 4, !dbg !8964
  %idxprom864 = sext i32 %638 to i64, !dbg !8965
  %arrayidx865 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom864, !dbg !8965
  %arrayidx866 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx865, i64 0, i64 0, !dbg !8965
  store i8* %637, i8** %arrayidx866, align 16, !dbg !8966
  %639 = load i16*, i16** %end705, align 8, !dbg !8967
  %640 = bitcast i16* %639 to i8*, !dbg !8967
  %641 = load i32, i32* %sp685, align 4, !dbg !8968
  %inc867 = add nsw i32 %641, 1, !dbg !8968
  store i32 %inc867, i32* %sp685, align 4, !dbg !8968
  %idxprom868 = sext i32 %641 to i64, !dbg !8969
  %arrayidx869 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack684, i64 0, i64 %idxprom868, !dbg !8969
  %arrayidx870 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx869, i64 0, i64 1, !dbg !8969
  store i8* %640, i8** %arrayidx870, align 8, !dbg !8970
  %642 = load i16*, i16** %right718, align 8, !dbg !8971
  store i16* %642, i16** %end705, align 8, !dbg !8972
  br label %if.end871

if.end871:                                        ; preds = %if.else862, %if.then853
  br label %if.end881, !dbg !8973

if.else872:                                       ; preds = %while.body712
  %643 = load i16*, i16** %start700, align 8, !dbg !8975
  %644 = bitcast i16* %643 to i8*, !dbg !8975
  %645 = load i16*, i16** %end705, align 8, !dbg !8979
  %646 = bitcast i16* %645 to i8*, !dbg !8979
  %call873 = call i32 @qsort_comparison_function_int16(i8* %644, i8* %646), !dbg !8980
  %cmp874 = icmp sgt i32 %call873, 0, !dbg !8981
  br i1 %cmp874, label %if.then876, label %if.end880, !dbg !8980

if.then876:                                       ; preds = %if.else872
  br label %do.body877, !dbg !8982, !llvm.loop !8984

do.body877:                                       ; preds = %if.then876
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp878, metadata !8986, metadata !2753), !dbg !8988
  %647 = load i16*, i16** %end705, align 8, !dbg !8989
  %648 = load i16, i16* %647, align 2, !dbg !8991
  store i16 %648, i16* %SWAP_tmp878, align 2, !dbg !8992
  %649 = load i16*, i16** %start700, align 8, !dbg !8993
  %650 = load i16, i16* %649, align 2, !dbg !8994
  %651 = load i16*, i16** %end705, align 8, !dbg !8995
  store i16 %650, i16* %651, align 2, !dbg !8996
  %652 = load i16, i16* %SWAP_tmp878, align 2, !dbg !8997
  %653 = load i16*, i16** %start700, align 8, !dbg !8998
  store i16 %652, i16* %653, align 2, !dbg !8999
  br label %do.end879, !dbg !9000

do.end879:                                        ; preds = %do.body877
  br label %if.end880, !dbg !9001

if.end880:                                        ; preds = %do.end879, %if.else872
  br label %while.end882, !dbg !9003

if.end881:                                        ; preds = %if.end871
  br label %while.cond709, !dbg !9005, !llvm.loop !9007

while.end882:                                     ; preds = %if.end880, %if.then840, %if.then767, %while.cond709
  br label %while.cond697, !dbg !9009, !llvm.loop !9011

while.end883:                                     ; preds = %while.cond697
  br label %do.end884, !dbg !9013

do.end884:                                        ; preds = %while.end883
  %654 = load i32, i32* %vdk0_max, align 4, !dbg !9015
  %arrayidx885 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9016
  %655 = load i16, i16* %arrayidx885, align 2, !dbg !9016
  %conv886 = sext i16 %655 to i32, !dbg !9016
  %sub887 = sub nsw i32 %654, %conv886, !dbg !9017
  %656 = load i32, i32* %num_bands_1, align 4, !dbg !9018
  %idxprom888 = sext i32 %656 to i64, !dbg !9019
  %arrayidx889 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom888, !dbg !9019
  %657 = load i16, i16* %arrayidx889, align 2, !dbg !9019
  %conv890 = sext i16 %657 to i32, !dbg !9019
  %arrayidx891 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9020
  %658 = load i16, i16* %arrayidx891, align 2, !dbg !9020
  %conv892 = sext i16 %658 to i32, !dbg !9020
  %sub893 = sub nsw i32 %conv890, %conv892, !dbg !9021
  %shr894 = ashr i32 %sub893, 1, !dbg !9022
  %cmp895 = icmp sgt i32 %sub887, %shr894, !dbg !9023
  br i1 %cmp895, label %cond.true897, label %cond.false905, !dbg !9024

cond.true897:                                     ; preds = %do.end884
  %659 = load i32, i32* %num_bands_1, align 4, !dbg !9025
  %idxprom898 = sext i32 %659 to i64, !dbg !9027
  %arrayidx899 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom898, !dbg !9027
  %660 = load i16, i16* %arrayidx899, align 2, !dbg !9027
  %conv900 = sext i16 %660 to i32, !dbg !9027
  %arrayidx901 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9028
  %661 = load i16, i16* %arrayidx901, align 2, !dbg !9028
  %conv902 = sext i16 %661 to i32, !dbg !9028
  %sub903 = sub nsw i32 %conv900, %conv902, !dbg !9029
  %shr904 = ashr i32 %sub903, 1, !dbg !9030
  br label %cond.end909, !dbg !9031

cond.false905:                                    ; preds = %do.end884
  %662 = load i32, i32* %vdk0_max, align 4, !dbg !9032
  %arrayidx906 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9034
  %663 = load i16, i16* %arrayidx906, align 2, !dbg !9034
  %conv907 = sext i16 %663 to i32, !dbg !9034
  %sub908 = sub nsw i32 %662, %conv907, !dbg !9035
  br label %cond.end909, !dbg !9036

cond.end909:                                      ; preds = %cond.false905, %cond.true897
  %cond910 = phi i32 [ %shr904, %cond.true897 ], [ %sub908, %cond.false905 ], !dbg !9037
  store i32 %cond910, i32* %change, align 4, !dbg !9039
  %664 = load i32, i32* %change, align 4, !dbg !9040
  %arrayidx911 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 1, !dbg !9041
  %665 = load i16, i16* %arrayidx911, align 2, !dbg !9042
  %conv912 = sext i16 %665 to i32, !dbg !9042
  %add913 = add nsw i32 %conv912, %664, !dbg !9042
  %conv914 = trunc i32 %add913 to i16, !dbg !9042
  store i16 %conv914, i16* %arrayidx911, align 2, !dbg !9042
  %666 = load i32, i32* %change, align 4, !dbg !9043
  %667 = load i32, i32* %num_bands_1, align 4, !dbg !9044
  %idxprom915 = sext i32 %667 to i64, !dbg !9045
  %arrayidx916 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom915, !dbg !9045
  %668 = load i16, i16* %arrayidx916, align 2, !dbg !9046
  %conv917 = sext i16 %668 to i32, !dbg !9046
  %sub918 = sub nsw i32 %conv917, %666, !dbg !9046
  %conv919 = trunc i32 %sub918 to i16, !dbg !9046
  store i16 %conv919, i16* %arrayidx916, align 2, !dbg !9046
  br label %if.end920, !dbg !9047

if.end920:                                        ; preds = %cond.end909, %if.then652
  br label %do.body921, !dbg !9048, !llvm.loop !9049

do.body921:                                       ; preds = %if.end920
  call void @llvm.dbg.declare(metadata [64 x [2 x i8*]]* %stack922, metadata !9050, metadata !2753), !dbg !9052
  call void @llvm.dbg.declare(metadata i32* %sp923, metadata !9053, metadata !2753), !dbg !9054
  store i32 1, i32* %sp923, align 4, !dbg !9055
  %arraydecay924 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9057
  %add.ptr925 = getelementptr inbounds i16, i16* %arraydecay924, i64 1, !dbg !9058
  %669 = bitcast i16* %add.ptr925 to i8*, !dbg !9057
  %arrayidx926 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 0, !dbg !9059
  %arrayidx927 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx926, i64 0, i64 0, !dbg !9059
  store i8* %669, i8** %arrayidx927, align 16, !dbg !9060
  %arraydecay928 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9061
  %add.ptr929 = getelementptr inbounds i16, i16* %arraydecay928, i64 1, !dbg !9062
  %670 = load i32, i32* %num_bands_1, align 4, !dbg !9063
  %idx.ext930 = sext i32 %670 to i64, !dbg !9064
  %add.ptr931 = getelementptr inbounds i16, i16* %add.ptr929, i64 %idx.ext930, !dbg !9064
  %add.ptr932 = getelementptr inbounds i16, i16* %add.ptr931, i64 -1, !dbg !9065
  %671 = bitcast i16* %add.ptr932 to i8*, !dbg !9066
  %arrayidx933 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 0, !dbg !9067
  %arrayidx934 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx933, i64 0, i64 1, !dbg !9067
  store i8* %671, i8** %arrayidx934, align 8, !dbg !9068
  br label %while.cond935, !dbg !9069

while.cond935:                                    ; preds = %while.end1120, %do.body921
  %672 = load i32, i32* %sp923, align 4, !dbg !9070
  %tobool936 = icmp ne i32 %672, 0, !dbg !9072
  br i1 %tobool936, label %while.body937, label %while.end1121, !dbg !9072

while.body937:                                    ; preds = %while.cond935
  call void @llvm.dbg.declare(metadata i16** %start938, metadata !9073, metadata !2753), !dbg !9075
  %673 = load i32, i32* %sp923, align 4, !dbg !9076
  %dec939 = add nsw i32 %673, -1, !dbg !9076
  store i32 %dec939, i32* %sp923, align 4, !dbg !9076
  %idxprom940 = sext i32 %dec939 to i64, !dbg !9078
  %arrayidx941 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom940, !dbg !9078
  %arrayidx942 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx941, i64 0, i64 0, !dbg !9078
  %674 = load i8*, i8** %arrayidx942, align 16, !dbg !9078
  %675 = bitcast i8* %674 to i16*, !dbg !9078
  store i16* %675, i16** %start938, align 8, !dbg !9079
  call void @llvm.dbg.declare(metadata i16** %end943, metadata !9080, metadata !2753), !dbg !9081
  %676 = load i32, i32* %sp923, align 4, !dbg !9082
  %idxprom944 = sext i32 %676 to i64, !dbg !9083
  %arrayidx945 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom944, !dbg !9083
  %arrayidx946 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx945, i64 0, i64 1, !dbg !9083
  %677 = load i8*, i8** %arrayidx946, align 8, !dbg !9083
  %678 = bitcast i8* %677 to i16*, !dbg !9083
  store i16* %678, i16** %end943, align 8, !dbg !9084
  br label %while.cond947, !dbg !9085

while.cond947:                                    ; preds = %if.end1119, %while.body937
  %679 = load i16*, i16** %start938, align 8, !dbg !9086
  %680 = load i16*, i16** %end943, align 8, !dbg !9088
  %cmp948 = icmp ult i16* %679, %680, !dbg !9089
  br i1 %cmp948, label %while.body950, label %while.end1120, !dbg !9090

while.body950:                                    ; preds = %while.cond947
  %681 = load i16*, i16** %start938, align 8, !dbg !9091
  %682 = load i16*, i16** %end943, align 8, !dbg !9095
  %add.ptr951 = getelementptr inbounds i16, i16* %682, i64 -1, !dbg !9096
  %cmp952 = icmp ult i16* %681, %add.ptr951, !dbg !9097
  br i1 %cmp952, label %if.then954, label %if.else1110, !dbg !9091

if.then954:                                       ; preds = %while.body950
  call void @llvm.dbg.declare(metadata i32* %checksort955, metadata !9098, metadata !2753), !dbg !9100
  store i32 0, i32* %checksort955, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i16** %right956, metadata !9103, metadata !2753), !dbg !9104
  %683 = load i16*, i16** %end943, align 8, !dbg !9105
  %add.ptr957 = getelementptr inbounds i16, i16* %683, i64 -2, !dbg !9106
  store i16* %add.ptr957, i16** %right956, align 8, !dbg !9107
  call void @llvm.dbg.declare(metadata i16** %left958, metadata !9108, metadata !2753), !dbg !9109
  %684 = load i16*, i16** %start938, align 8, !dbg !9110
  %add.ptr959 = getelementptr inbounds i16, i16* %684, i64 1, !dbg !9111
  store i16* %add.ptr959, i16** %left958, align 8, !dbg !9112
  call void @llvm.dbg.declare(metadata i16** %mid960, metadata !9113, metadata !2753), !dbg !9114
  %685 = load i16*, i16** %start938, align 8, !dbg !9115
  %686 = load i16*, i16** %end943, align 8, !dbg !9116
  %687 = load i16*, i16** %start938, align 8, !dbg !9117
  %sub.ptr.lhs.cast961 = ptrtoint i16* %686 to i64, !dbg !9118
  %sub.ptr.rhs.cast962 = ptrtoint i16* %687 to i64, !dbg !9118
  %sub.ptr.sub963 = sub i64 %sub.ptr.lhs.cast961, %sub.ptr.rhs.cast962, !dbg !9118
  %sub.ptr.div964 = sdiv exact i64 %sub.ptr.sub963, 2, !dbg !9118
  %shr965 = ashr i64 %sub.ptr.div964, 1, !dbg !9119
  %add.ptr966 = getelementptr inbounds i16, i16* %685, i64 %shr965, !dbg !9120
  store i16* %add.ptr966, i16** %mid960, align 8, !dbg !9121
  %688 = load i16*, i16** %start938, align 8, !dbg !9122
  %689 = bitcast i16* %688 to i8*, !dbg !9122
  %690 = load i16*, i16** %end943, align 8, !dbg !9123
  %691 = bitcast i16* %690 to i8*, !dbg !9123
  %call967 = call i32 @qsort_comparison_function_int16(i8* %689, i8* %691), !dbg !9124
  %cmp968 = icmp sgt i32 %call967, 0, !dbg !9125
  br i1 %cmp968, label %if.then970, label %if.else983, !dbg !9124

if.then970:                                       ; preds = %if.then954
  %692 = load i16*, i16** %end943, align 8, !dbg !9126
  %693 = bitcast i16* %692 to i8*, !dbg !9126
  %694 = load i16*, i16** %mid960, align 8, !dbg !9131
  %695 = bitcast i16* %694 to i8*, !dbg !9131
  %call971 = call i32 @qsort_comparison_function_int16(i8* %693, i8* %695), !dbg !9132
  %cmp972 = icmp sgt i32 %call971, 0, !dbg !9133
  br i1 %cmp972, label %if.then974, label %if.else978, !dbg !9132

if.then974:                                       ; preds = %if.then970
  br label %do.body975, !dbg !9134, !llvm.loop !9136

do.body975:                                       ; preds = %if.then974
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp976, metadata !9138, metadata !2753), !dbg !9140
  %696 = load i16*, i16** %mid960, align 8, !dbg !9141
  %697 = load i16, i16* %696, align 2, !dbg !9143
  store i16 %697, i16* %SWAP_tmp976, align 2, !dbg !9144
  %698 = load i16*, i16** %start938, align 8, !dbg !9145
  %699 = load i16, i16* %698, align 2, !dbg !9146
  %700 = load i16*, i16** %mid960, align 8, !dbg !9147
  store i16 %699, i16* %700, align 2, !dbg !9148
  %701 = load i16, i16* %SWAP_tmp976, align 2, !dbg !9149
  %702 = load i16*, i16** %start938, align 8, !dbg !9150
  store i16 %701, i16* %702, align 2, !dbg !9151
  br label %do.end977, !dbg !9152

do.end977:                                        ; preds = %do.body975
  br label %if.end982, !dbg !9153

if.else978:                                       ; preds = %if.then970
  br label %do.body979, !dbg !9155, !llvm.loop !9157

do.body979:                                       ; preds = %if.else978
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp980, metadata !9159, metadata !2753), !dbg !9161
  %703 = load i16*, i16** %end943, align 8, !dbg !9162
  %704 = load i16, i16* %703, align 2, !dbg !9164
  store i16 %704, i16* %SWAP_tmp980, align 2, !dbg !9165
  %705 = load i16*, i16** %start938, align 8, !dbg !9166
  %706 = load i16, i16* %705, align 2, !dbg !9167
  %707 = load i16*, i16** %end943, align 8, !dbg !9168
  store i16 %706, i16* %707, align 2, !dbg !9169
  %708 = load i16, i16* %SWAP_tmp980, align 2, !dbg !9170
  %709 = load i16*, i16** %start938, align 8, !dbg !9171
  store i16 %708, i16* %709, align 2, !dbg !9172
  br label %do.end981, !dbg !9173

do.end981:                                        ; preds = %do.body979
  br label %if.end982

if.end982:                                        ; preds = %do.end981, %do.end977
  br label %if.end993, !dbg !9174

if.else983:                                       ; preds = %if.then954
  %710 = load i16*, i16** %start938, align 8, !dbg !9176
  %711 = bitcast i16* %710 to i8*, !dbg !9176
  %712 = load i16*, i16** %mid960, align 8, !dbg !9180
  %713 = bitcast i16* %712 to i8*, !dbg !9180
  %call984 = call i32 @qsort_comparison_function_int16(i8* %711, i8* %713), !dbg !9181
  %cmp985 = icmp sgt i32 %call984, 0, !dbg !9182
  br i1 %cmp985, label %if.then987, label %if.else991, !dbg !9181

if.then987:                                       ; preds = %if.else983
  br label %do.body988, !dbg !9183, !llvm.loop !9185

do.body988:                                       ; preds = %if.then987
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp989, metadata !9187, metadata !2753), !dbg !9189
  %714 = load i16*, i16** %mid960, align 8, !dbg !9190
  %715 = load i16, i16* %714, align 2, !dbg !9192
  store i16 %715, i16* %SWAP_tmp989, align 2, !dbg !9193
  %716 = load i16*, i16** %start938, align 8, !dbg !9194
  %717 = load i16, i16* %716, align 2, !dbg !9195
  %718 = load i16*, i16** %mid960, align 8, !dbg !9196
  store i16 %717, i16* %718, align 2, !dbg !9197
  %719 = load i16, i16* %SWAP_tmp989, align 2, !dbg !9198
  %720 = load i16*, i16** %start938, align 8, !dbg !9199
  store i16 %719, i16* %720, align 2, !dbg !9200
  br label %do.end990, !dbg !9201

do.end990:                                        ; preds = %do.body988
  br label %if.end992, !dbg !9202

if.else991:                                       ; preds = %if.else983
  store i32 1, i32* %checksort955, align 4, !dbg !9204
  br label %if.end992

if.end992:                                        ; preds = %if.else991, %do.end990
  br label %if.end993

if.end993:                                        ; preds = %if.end992, %if.end982
  %721 = load i16*, i16** %mid960, align 8, !dbg !9206
  %722 = bitcast i16* %721 to i8*, !dbg !9206
  %723 = load i16*, i16** %end943, align 8, !dbg !9209
  %724 = bitcast i16* %723 to i8*, !dbg !9209
  %call994 = call i32 @qsort_comparison_function_int16(i8* %722, i8* %724), !dbg !9210
  %cmp995 = icmp sgt i32 %call994, 0, !dbg !9211
  br i1 %cmp995, label %if.then997, label %if.end1001, !dbg !9210

if.then997:                                       ; preds = %if.end993
  br label %do.body998, !dbg !9212, !llvm.loop !9215

do.body998:                                       ; preds = %if.then997
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp999, metadata !9217, metadata !2753), !dbg !9219
  %725 = load i16*, i16** %end943, align 8, !dbg !9220
  %726 = load i16, i16* %725, align 2, !dbg !9222
  store i16 %726, i16* %SWAP_tmp999, align 2, !dbg !9223
  %727 = load i16*, i16** %mid960, align 8, !dbg !9224
  %728 = load i16, i16* %727, align 2, !dbg !9225
  %729 = load i16*, i16** %end943, align 8, !dbg !9226
  store i16 %728, i16* %729, align 2, !dbg !9227
  %730 = load i16, i16* %SWAP_tmp999, align 2, !dbg !9228
  %731 = load i16*, i16** %mid960, align 8, !dbg !9229
  store i16 %730, i16* %731, align 2, !dbg !9230
  br label %do.end1000, !dbg !9231

do.end1000:                                       ; preds = %do.body998
  store i32 0, i32* %checksort955, align 4, !dbg !9232
  br label %if.end1001, !dbg !9234

if.end1001:                                       ; preds = %do.end1000, %if.end993
  %732 = load i16*, i16** %start938, align 8, !dbg !9235
  %733 = load i16*, i16** %end943, align 8, !dbg !9238
  %add.ptr1002 = getelementptr inbounds i16, i16* %733, i64 -2, !dbg !9239
  %cmp1003 = icmp eq i16* %732, %add.ptr1002, !dbg !9240
  br i1 %cmp1003, label %if.then1005, label %if.end1006, !dbg !9235

if.then1005:                                      ; preds = %if.end1001
  br label %while.end1120, !dbg !9241

if.end1006:                                       ; preds = %if.end1001
  br label %do.body1007, !dbg !9243, !llvm.loop !9245

do.body1007:                                      ; preds = %if.end1006
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1008, metadata !9247, metadata !2753), !dbg !9249
  %734 = load i16*, i16** %mid960, align 8, !dbg !9250
  %735 = load i16, i16* %734, align 2, !dbg !9252
  store i16 %735, i16* %SWAP_tmp1008, align 2, !dbg !9253
  %736 = load i16*, i16** %end943, align 8, !dbg !9254
  %arrayidx1009 = getelementptr inbounds i16, i16* %736, i64 -1, !dbg !9254
  %737 = load i16, i16* %arrayidx1009, align 2, !dbg !9254
  %738 = load i16*, i16** %mid960, align 8, !dbg !9255
  store i16 %737, i16* %738, align 2, !dbg !9256
  %739 = load i16, i16* %SWAP_tmp1008, align 2, !dbg !9257
  %740 = load i16*, i16** %end943, align 8, !dbg !9258
  %arrayidx1010 = getelementptr inbounds i16, i16* %740, i64 -1, !dbg !9258
  store i16 %739, i16* %arrayidx1010, align 2, !dbg !9259
  br label %do.end1011, !dbg !9260

do.end1011:                                       ; preds = %do.body1007
  br label %while.cond1012, !dbg !9261

while.cond1012:                                   ; preds = %if.end1048, %do.end1011
  %741 = load i16*, i16** %left958, align 8, !dbg !9263
  %742 = load i16*, i16** %right956, align 8, !dbg !9265
  %cmp1013 = icmp ule i16* %741, %742, !dbg !9266
  br i1 %cmp1013, label %while.body1015, label %while.end1049, !dbg !9267

while.body1015:                                   ; preds = %while.cond1012
  br label %while.cond1016, !dbg !9268

while.cond1016:                                   ; preds = %while.body1025, %while.body1015
  %743 = load i16*, i16** %left958, align 8, !dbg !9271
  %744 = load i16*, i16** %right956, align 8, !dbg !9273
  %cmp1017 = icmp ule i16* %743, %744, !dbg !9274
  br i1 %cmp1017, label %land.rhs1019, label %land.end1024, !dbg !9275

land.rhs1019:                                     ; preds = %while.cond1016
  %745 = load i16*, i16** %left958, align 8, !dbg !9276
  %746 = bitcast i16* %745 to i8*, !dbg !9276
  %747 = load i16*, i16** %end943, align 8, !dbg !9278
  %add.ptr1020 = getelementptr inbounds i16, i16* %747, i64 -1, !dbg !9279
  %748 = bitcast i16* %add.ptr1020 to i8*, !dbg !9278
  %call1021 = call i32 @qsort_comparison_function_int16(i8* %746, i8* %748), !dbg !9280
  %cmp1022 = icmp slt i32 %call1021, 0, !dbg !9281
  br label %land.end1024

land.end1024:                                     ; preds = %land.rhs1019, %while.cond1016
  %749 = phi i1 [ false, %while.cond1016 ], [ %cmp1022, %land.rhs1019 ]
  br i1 %749, label %while.body1025, label %while.end1027, !dbg !9282

while.body1025:                                   ; preds = %land.end1024
  %750 = load i16*, i16** %left958, align 8, !dbg !9284
  %incdec.ptr1026 = getelementptr inbounds i16, i16* %750, i32 1, !dbg !9284
  store i16* %incdec.ptr1026, i16** %left958, align 8, !dbg !9284
  br label %while.cond1016, !dbg !9286, !llvm.loop !9287

while.end1027:                                    ; preds = %land.end1024
  br label %while.cond1028, !dbg !9289

while.cond1028:                                   ; preds = %while.body1037, %while.end1027
  %751 = load i16*, i16** %left958, align 8, !dbg !9291
  %752 = load i16*, i16** %right956, align 8, !dbg !9293
  %cmp1029 = icmp ule i16* %751, %752, !dbg !9294
  br i1 %cmp1029, label %land.rhs1031, label %land.end1036, !dbg !9295

land.rhs1031:                                     ; preds = %while.cond1028
  %753 = load i16*, i16** %right956, align 8, !dbg !9296
  %754 = bitcast i16* %753 to i8*, !dbg !9296
  %755 = load i16*, i16** %end943, align 8, !dbg !9298
  %add.ptr1032 = getelementptr inbounds i16, i16* %755, i64 -1, !dbg !9299
  %756 = bitcast i16* %add.ptr1032 to i8*, !dbg !9298
  %call1033 = call i32 @qsort_comparison_function_int16(i8* %754, i8* %756), !dbg !9300
  %cmp1034 = icmp sgt i32 %call1033, 0, !dbg !9301
  br label %land.end1036

land.end1036:                                     ; preds = %land.rhs1031, %while.cond1028
  %757 = phi i1 [ false, %while.cond1028 ], [ %cmp1034, %land.rhs1031 ]
  br i1 %757, label %while.body1037, label %while.end1039, !dbg !9302

while.body1037:                                   ; preds = %land.end1036
  %758 = load i16*, i16** %right956, align 8, !dbg !9304
  %incdec.ptr1038 = getelementptr inbounds i16, i16* %758, i32 -1, !dbg !9304
  store i16* %incdec.ptr1038, i16** %right956, align 8, !dbg !9304
  br label %while.cond1028, !dbg !9306, !llvm.loop !9307

while.end1039:                                    ; preds = %land.end1036
  %759 = load i16*, i16** %left958, align 8, !dbg !9309
  %760 = load i16*, i16** %right956, align 8, !dbg !9312
  %cmp1040 = icmp ule i16* %759, %760, !dbg !9313
  br i1 %cmp1040, label %if.then1042, label %if.end1048, !dbg !9309

if.then1042:                                      ; preds = %while.end1039
  br label %do.body1043, !dbg !9314, !llvm.loop !9317

do.body1043:                                      ; preds = %if.then1042
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1044, metadata !9319, metadata !2753), !dbg !9321
  %761 = load i16*, i16** %right956, align 8, !dbg !9322
  %762 = load i16, i16* %761, align 2, !dbg !9324
  store i16 %762, i16* %SWAP_tmp1044, align 2, !dbg !9325
  %763 = load i16*, i16** %left958, align 8, !dbg !9326
  %764 = load i16, i16* %763, align 2, !dbg !9327
  %765 = load i16*, i16** %right956, align 8, !dbg !9328
  store i16 %764, i16* %765, align 2, !dbg !9329
  %766 = load i16, i16* %SWAP_tmp1044, align 2, !dbg !9330
  %767 = load i16*, i16** %left958, align 8, !dbg !9331
  store i16 %766, i16* %767, align 2, !dbg !9332
  br label %do.end1045, !dbg !9333

do.end1045:                                       ; preds = %do.body1043
  %768 = load i16*, i16** %left958, align 8, !dbg !9334
  %incdec.ptr1046 = getelementptr inbounds i16, i16* %768, i32 1, !dbg !9334
  store i16* %incdec.ptr1046, i16** %left958, align 8, !dbg !9334
  %769 = load i16*, i16** %right956, align 8, !dbg !9336
  %incdec.ptr1047 = getelementptr inbounds i16, i16* %769, i32 -1, !dbg !9336
  store i16* %incdec.ptr1047, i16** %right956, align 8, !dbg !9336
  br label %if.end1048, !dbg !9337

if.end1048:                                       ; preds = %do.end1045, %while.end1039
  br label %while.cond1012, !dbg !9338, !llvm.loop !9340

while.end1049:                                    ; preds = %while.cond1012
  br label %do.body1050, !dbg !9342, !llvm.loop !9344

do.body1050:                                      ; preds = %while.end1049
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1051, metadata !9346, metadata !2753), !dbg !9348
  %770 = load i16*, i16** %left958, align 8, !dbg !9349
  %771 = load i16, i16* %770, align 2, !dbg !9351
  store i16 %771, i16* %SWAP_tmp1051, align 2, !dbg !9352
  %772 = load i16*, i16** %end943, align 8, !dbg !9353
  %arrayidx1052 = getelementptr inbounds i16, i16* %772, i64 -1, !dbg !9353
  %773 = load i16, i16* %arrayidx1052, align 2, !dbg !9353
  %774 = load i16*, i16** %left958, align 8, !dbg !9354
  store i16 %773, i16* %774, align 2, !dbg !9355
  %775 = load i16, i16* %SWAP_tmp1051, align 2, !dbg !9356
  %776 = load i16*, i16** %end943, align 8, !dbg !9357
  %arrayidx1053 = getelementptr inbounds i16, i16* %776, i64 -1, !dbg !9357
  store i16 %775, i16* %arrayidx1053, align 2, !dbg !9358
  br label %do.end1054, !dbg !9359

do.end1054:                                       ; preds = %do.body1050
  %777 = load i32, i32* %checksort955, align 4, !dbg !9360
  %tobool1055 = icmp ne i32 %777, 0, !dbg !9360
  br i1 %tobool1055, label %land.lhs.true1056, label %if.end1080, !dbg !9363

land.lhs.true1056:                                ; preds = %do.end1054
  %778 = load i16*, i16** %mid960, align 8, !dbg !9364
  %779 = load i16*, i16** %left958, align 8, !dbg !9366
  %add.ptr1057 = getelementptr inbounds i16, i16* %779, i64 -1, !dbg !9367
  %cmp1058 = icmp eq i16* %778, %add.ptr1057, !dbg !9368
  br i1 %cmp1058, label %if.then1063, label %lor.lhs.false1060, !dbg !9369

lor.lhs.false1060:                                ; preds = %land.lhs.true1056
  %780 = load i16*, i16** %mid960, align 8, !dbg !9370
  %781 = load i16*, i16** %left958, align 8, !dbg !9372
  %cmp1061 = icmp eq i16* %780, %781, !dbg !9373
  br i1 %cmp1061, label %if.then1063, label %if.end1080, !dbg !9374

if.then1063:                                      ; preds = %lor.lhs.false1060, %land.lhs.true1056
  %782 = load i16*, i16** %start938, align 8, !dbg !9375
  store i16* %782, i16** %mid960, align 8, !dbg !9378
  br label %while.cond1064, !dbg !9379

while.cond1064:                                   ; preds = %while.body1073, %if.then1063
  %783 = load i16*, i16** %mid960, align 8, !dbg !9380
  %784 = load i16*, i16** %end943, align 8, !dbg !9382
  %cmp1065 = icmp ult i16* %783, %784, !dbg !9383
  br i1 %cmp1065, label %land.rhs1067, label %land.end1072, !dbg !9384

land.rhs1067:                                     ; preds = %while.cond1064
  %785 = load i16*, i16** %mid960, align 8, !dbg !9385
  %786 = bitcast i16* %785 to i8*, !dbg !9385
  %787 = load i16*, i16** %mid960, align 8, !dbg !9387
  %add.ptr1068 = getelementptr inbounds i16, i16* %787, i64 1, !dbg !9388
  %788 = bitcast i16* %add.ptr1068 to i8*, !dbg !9387
  %call1069 = call i32 @qsort_comparison_function_int16(i8* %786, i8* %788), !dbg !9389
  %cmp1070 = icmp sle i32 %call1069, 0, !dbg !9390
  br label %land.end1072

land.end1072:                                     ; preds = %land.rhs1067, %while.cond1064
  %789 = phi i1 [ false, %while.cond1064 ], [ %cmp1070, %land.rhs1067 ]
  br i1 %789, label %while.body1073, label %while.end1075, !dbg !9391

while.body1073:                                   ; preds = %land.end1072
  %790 = load i16*, i16** %mid960, align 8, !dbg !9393
  %incdec.ptr1074 = getelementptr inbounds i16, i16* %790, i32 1, !dbg !9393
  store i16* %incdec.ptr1074, i16** %mid960, align 8, !dbg !9393
  br label %while.cond1064, !dbg !9395, !llvm.loop !9396

while.end1075:                                    ; preds = %land.end1072
  %791 = load i16*, i16** %mid960, align 8, !dbg !9398
  %792 = load i16*, i16** %end943, align 8, !dbg !9401
  %cmp1076 = icmp eq i16* %791, %792, !dbg !9402
  br i1 %cmp1076, label %if.then1078, label %if.end1079, !dbg !9398

if.then1078:                                      ; preds = %while.end1075
  br label %while.end1120, !dbg !9403

if.end1079:                                       ; preds = %while.end1075
  br label %if.end1080, !dbg !9405

if.end1080:                                       ; preds = %if.end1079, %lor.lhs.false1060, %do.end1054
  %793 = load i16*, i16** %end943, align 8, !dbg !9407
  %794 = load i16*, i16** %left958, align 8, !dbg !9410
  %sub.ptr.lhs.cast1081 = ptrtoint i16* %793 to i64, !dbg !9411
  %sub.ptr.rhs.cast1082 = ptrtoint i16* %794 to i64, !dbg !9411
  %sub.ptr.sub1083 = sub i64 %sub.ptr.lhs.cast1081, %sub.ptr.rhs.cast1082, !dbg !9411
  %sub.ptr.div1084 = sdiv exact i64 %sub.ptr.sub1083, 2, !dbg !9411
  %795 = load i16*, i16** %left958, align 8, !dbg !9412
  %796 = load i16*, i16** %start938, align 8, !dbg !9413
  %sub.ptr.lhs.cast1085 = ptrtoint i16* %795 to i64, !dbg !9414
  %sub.ptr.rhs.cast1086 = ptrtoint i16* %796 to i64, !dbg !9414
  %sub.ptr.sub1087 = sub i64 %sub.ptr.lhs.cast1085, %sub.ptr.rhs.cast1086, !dbg !9414
  %sub.ptr.div1088 = sdiv exact i64 %sub.ptr.sub1087, 2, !dbg !9414
  %cmp1089 = icmp slt i64 %sub.ptr.div1084, %sub.ptr.div1088, !dbg !9415
  br i1 %cmp1089, label %if.then1091, label %if.else1100, !dbg !9407

if.then1091:                                      ; preds = %if.end1080
  %797 = load i16*, i16** %start938, align 8, !dbg !9416
  %798 = bitcast i16* %797 to i8*, !dbg !9416
  %799 = load i32, i32* %sp923, align 4, !dbg !9419
  %idxprom1092 = sext i32 %799 to i64, !dbg !9420
  %arrayidx1093 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom1092, !dbg !9420
  %arrayidx1094 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1093, i64 0, i64 0, !dbg !9420
  store i8* %798, i8** %arrayidx1094, align 16, !dbg !9421
  %800 = load i16*, i16** %right956, align 8, !dbg !9422
  %801 = bitcast i16* %800 to i8*, !dbg !9422
  %802 = load i32, i32* %sp923, align 4, !dbg !9423
  %inc1095 = add nsw i32 %802, 1, !dbg !9423
  store i32 %inc1095, i32* %sp923, align 4, !dbg !9423
  %idxprom1096 = sext i32 %802 to i64, !dbg !9424
  %arrayidx1097 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom1096, !dbg !9424
  %arrayidx1098 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1097, i64 0, i64 1, !dbg !9424
  store i8* %801, i8** %arrayidx1098, align 8, !dbg !9425
  %803 = load i16*, i16** %left958, align 8, !dbg !9426
  %add.ptr1099 = getelementptr inbounds i16, i16* %803, i64 1, !dbg !9427
  store i16* %add.ptr1099, i16** %start938, align 8, !dbg !9428
  br label %if.end1109, !dbg !9429

if.else1100:                                      ; preds = %if.end1080
  %804 = load i16*, i16** %left958, align 8, !dbg !9430
  %add.ptr1101 = getelementptr inbounds i16, i16* %804, i64 1, !dbg !9433
  %805 = bitcast i16* %add.ptr1101 to i8*, !dbg !9430
  %806 = load i32, i32* %sp923, align 4, !dbg !9434
  %idxprom1102 = sext i32 %806 to i64, !dbg !9435
  %arrayidx1103 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom1102, !dbg !9435
  %arrayidx1104 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1103, i64 0, i64 0, !dbg !9435
  store i8* %805, i8** %arrayidx1104, align 16, !dbg !9436
  %807 = load i16*, i16** %end943, align 8, !dbg !9437
  %808 = bitcast i16* %807 to i8*, !dbg !9437
  %809 = load i32, i32* %sp923, align 4, !dbg !9438
  %inc1105 = add nsw i32 %809, 1, !dbg !9438
  store i32 %inc1105, i32* %sp923, align 4, !dbg !9438
  %idxprom1106 = sext i32 %809 to i64, !dbg !9439
  %arrayidx1107 = getelementptr inbounds [64 x [2 x i8*]], [64 x [2 x i8*]]* %stack922, i64 0, i64 %idxprom1106, !dbg !9439
  %arrayidx1108 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx1107, i64 0, i64 1, !dbg !9439
  store i8* %808, i8** %arrayidx1108, align 8, !dbg !9440
  %810 = load i16*, i16** %right956, align 8, !dbg !9441
  store i16* %810, i16** %end943, align 8, !dbg !9442
  br label %if.end1109

if.end1109:                                       ; preds = %if.else1100, %if.then1091
  br label %if.end1119, !dbg !9443

if.else1110:                                      ; preds = %while.body950
  %811 = load i16*, i16** %start938, align 8, !dbg !9445
  %812 = bitcast i16* %811 to i8*, !dbg !9445
  %813 = load i16*, i16** %end943, align 8, !dbg !9449
  %814 = bitcast i16* %813 to i8*, !dbg !9449
  %call1111 = call i32 @qsort_comparison_function_int16(i8* %812, i8* %814), !dbg !9450
  %cmp1112 = icmp sgt i32 %call1111, 0, !dbg !9451
  br i1 %cmp1112, label %if.then1114, label %if.end1118, !dbg !9450

if.then1114:                                      ; preds = %if.else1110
  br label %do.body1115, !dbg !9452, !llvm.loop !9454

do.body1115:                                      ; preds = %if.then1114
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp1116, metadata !9456, metadata !2753), !dbg !9458
  %815 = load i16*, i16** %end943, align 8, !dbg !9459
  %816 = load i16, i16* %815, align 2, !dbg !9461
  store i16 %816, i16* %SWAP_tmp1116, align 2, !dbg !9462
  %817 = load i16*, i16** %start938, align 8, !dbg !9463
  %818 = load i16, i16* %817, align 2, !dbg !9464
  %819 = load i16*, i16** %end943, align 8, !dbg !9465
  store i16 %818, i16* %819, align 2, !dbg !9466
  %820 = load i16, i16* %SWAP_tmp1116, align 2, !dbg !9467
  %821 = load i16*, i16** %start938, align 8, !dbg !9468
  store i16 %820, i16* %821, align 2, !dbg !9469
  br label %do.end1117, !dbg !9470

do.end1117:                                       ; preds = %do.body1115
  br label %if.end1118, !dbg !9471

if.end1118:                                       ; preds = %do.end1117, %if.else1110
  br label %while.end1120, !dbg !9473

if.end1119:                                       ; preds = %if.end1109
  br label %while.cond947, !dbg !9475, !llvm.loop !9477

while.end1120:                                    ; preds = %if.end1118, %if.then1078, %if.then1005, %while.cond947
  br label %while.cond935, !dbg !9479, !llvm.loop !9481

while.end1121:                                    ; preds = %while.cond935
  br label %do.end1122, !dbg !9483

do.end1122:                                       ; preds = %while.end1121
  %822 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9485
  %k1123 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %822, i32 0, i32 12, !dbg !9486
  %arrayidx1124 = getelementptr inbounds [5 x i32], [5 x i32]* %k1123, i64 0, i64 1, !dbg !9485
  %823 = load i32, i32* %arrayidx1124, align 4, !dbg !9485
  %conv1125 = trunc i32 %823 to i16, !dbg !9485
  %arrayidx1126 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 0, !dbg !9487
  store i16 %conv1125, i16* %arrayidx1126, align 16, !dbg !9488
  store i32 1, i32* %k, align 4, !dbg !9489
  br label %for.cond1127, !dbg !9491

for.cond1127:                                     ; preds = %for.inc1151, %do.end1122
  %824 = load i32, i32* %k, align 4, !dbg !9492
  %825 = load i32, i32* %num_bands_1, align 4, !dbg !9495
  %cmp1128 = icmp sle i32 %824, %825, !dbg !9496
  br i1 %cmp1128, label %for.body1130, label %for.end1153, !dbg !9497

for.body1130:                                     ; preds = %for.cond1127
  %826 = load i32, i32* %k, align 4, !dbg !9498
  %idxprom1131 = sext i32 %826 to i64, !dbg !9501
  %arrayidx1132 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1131, !dbg !9501
  %827 = load i16, i16* %arrayidx1132, align 2, !dbg !9501
  %conv1133 = sext i16 %827 to i32, !dbg !9501
  %cmp1134 = icmp sle i32 %conv1133, 0, !dbg !9502
  br i1 %cmp1134, label %if.then1136, label %if.end1141, !dbg !9503

if.then1136:                                      ; preds = %for.body1130
  %828 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9504
  %avctx1137 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %828, i32 0, i32 1, !dbg !9506
  %829 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1137, align 8, !dbg !9506
  %830 = bitcast %struct.AVCodecContext* %829 to i8*, !dbg !9504
  %831 = load i32, i32* %k, align 4, !dbg !9507
  %832 = load i32, i32* %k, align 4, !dbg !9508
  %idxprom1138 = sext i32 %832 to i64, !dbg !9509
  %arrayidx1139 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1138, !dbg !9509
  %833 = load i16, i16* %arrayidx1139, align 2, !dbg !9509
  %conv1140 = sext i16 %833 to i32, !dbg !9509
  call void (i8*, i32, i8*, ...) @av_log(i8* %830, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 %831, i32 %conv1140), !dbg !9510
  store i32 -1, i32* %retval, align 4, !dbg !9511
  br label %return, !dbg !9511

if.end1141:                                       ; preds = %for.body1130
  %834 = load i32, i32* %k, align 4, !dbg !9512
  %sub1142 = sub nsw i32 %834, 1, !dbg !9513
  %idxprom1143 = sext i32 %sub1142 to i64, !dbg !9514
  %arrayidx1144 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1143, !dbg !9514
  %835 = load i16, i16* %arrayidx1144, align 2, !dbg !9514
  %conv1145 = sext i16 %835 to i32, !dbg !9514
  %836 = load i32, i32* %k, align 4, !dbg !9515
  %idxprom1146 = sext i32 %836 to i64, !dbg !9516
  %arrayidx1147 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i64 0, i64 %idxprom1146, !dbg !9516
  %837 = load i16, i16* %arrayidx1147, align 2, !dbg !9517
  %conv1148 = sext i16 %837 to i32, !dbg !9517
  %add1149 = add nsw i32 %conv1148, %conv1145, !dbg !9517
  %conv1150 = trunc i32 %add1149 to i16, !dbg !9517
  store i16 %conv1150, i16* %arrayidx1147, align 2, !dbg !9517
  br label %for.inc1151, !dbg !9518

for.inc1151:                                      ; preds = %if.end1141
  %838 = load i32, i32* %k, align 4, !dbg !9519
  %inc1152 = add nsw i32 %838, 1, !dbg !9519
  store i32 %inc1152, i32* %k, align 4, !dbg !9519
  br label %for.cond1127, !dbg !9521, !llvm.loop !9522

for.end1153:                                      ; preds = %for.cond1127
  %839 = load i32, i32* %num_bands_0, align 4, !dbg !9524
  %840 = load i32, i32* %num_bands_1, align 4, !dbg !9525
  %add1154 = add nsw i32 %839, %840, !dbg !9526
  %841 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9527
  %n_master1155 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %841, i32 0, i32 16, !dbg !9528
  store i32 %add1154, i32* %n_master1155, align 4, !dbg !9529
  %842 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9530
  %avctx1156 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %842, i32 0, i32 1, !dbg !9532
  %843 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1156, align 8, !dbg !9532
  %844 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9533
  %n_master1157 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %844, i32 0, i32 16, !dbg !9534
  %845 = load i32, i32* %n_master1157, align 4, !dbg !9534
  %846 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9535
  %spectrum_params1158 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %846, i32 0, i32 5, !dbg !9536
  %bs_xover_band1159 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params1158, i32 0, i32 2, !dbg !9537
  %847 = load i8, i8* %bs_xover_band1159, align 2, !dbg !9537
  %conv1160 = zext i8 %847 to i32, !dbg !9535
  %call1161 = call i32 @check_n_master(%struct.AVCodecContext* %843, i32 %845, i32 %conv1160), !dbg !9538
  %tobool1162 = icmp ne i32 %call1161, 0, !dbg !9538
  br i1 %tobool1162, label %if.then1163, label %if.end1164, !dbg !9539

if.then1163:                                      ; preds = %for.end1153
  store i32 -1, i32* %retval, align 4, !dbg !9540
  br label %return, !dbg !9540

if.end1164:                                       ; preds = %for.end1153
  %848 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9541
  %f_master1165 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %848, i32 0, i32 22, !dbg !9542
  %arrayidx1166 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1165, i64 0, i64 0, !dbg !9541
  %849 = bitcast i16* %arrayidx1166 to i8*, !dbg !9543
  %arraydecay1167 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !9543
  %850 = bitcast i16* %arraydecay1167 to i8*, !dbg !9543
  %851 = load i32, i32* %num_bands_0, align 4, !dbg !9544
  %add1168 = add nsw i32 %851, 1, !dbg !9545
  %conv1169 = sext i32 %add1168 to i64, !dbg !9546
  %mul1170 = mul i64 %conv1169, 2, !dbg !9547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %849, i8* %850, i64 %mul1170, i32 16, i1 false), !dbg !9543
  %852 = load i32, i32* %num_bands_0, align 4, !dbg !9548
  %add1171 = add nsw i32 %852, 1, !dbg !9549
  %idxprom1172 = sext i32 %add1171 to i64, !dbg !9550
  %853 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9550
  %f_master1173 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %853, i32 0, i32 22, !dbg !9551
  %arrayidx1174 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1173, i64 0, i64 %idxprom1172, !dbg !9550
  %854 = bitcast i16* %arrayidx1174 to i8*, !dbg !9552
  %arraydecay1175 = getelementptr inbounds [49 x i16], [49 x i16]* %vk1, i32 0, i32 0, !dbg !9553
  %add.ptr1176 = getelementptr inbounds i16, i16* %arraydecay1175, i64 1, !dbg !9554
  %855 = bitcast i16* %add.ptr1176 to i8*, !dbg !9552
  %856 = load i32, i32* %num_bands_1, align 4, !dbg !9555
  %conv1177 = sext i32 %856 to i64, !dbg !9555
  %mul1178 = mul i64 %conv1177, 2, !dbg !9556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %854, i8* %855, i64 %mul1178, i32 2, i1 false), !dbg !9552
  br label %if.end1196, !dbg !9557

if.else1179:                                      ; preds = %for.end650
  %857 = load i32, i32* %num_bands_0, align 4, !dbg !9558
  %858 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9560
  %n_master1180 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %858, i32 0, i32 16, !dbg !9561
  store i32 %857, i32* %n_master1180, align 4, !dbg !9562
  %859 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9563
  %avctx1181 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %859, i32 0, i32 1, !dbg !9565
  %860 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1181, align 8, !dbg !9565
  %861 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9566
  %n_master1182 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %861, i32 0, i32 16, !dbg !9567
  %862 = load i32, i32* %n_master1182, align 4, !dbg !9567
  %863 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9568
  %spectrum_params1183 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %863, i32 0, i32 5, !dbg !9569
  %bs_xover_band1184 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params1183, i32 0, i32 2, !dbg !9570
  %864 = load i8, i8* %bs_xover_band1184, align 2, !dbg !9570
  %conv1185 = zext i8 %864 to i32, !dbg !9568
  %call1186 = call i32 @check_n_master(%struct.AVCodecContext* %860, i32 %862, i32 %conv1185), !dbg !9571
  %tobool1187 = icmp ne i32 %call1186, 0, !dbg !9571
  br i1 %tobool1187, label %if.then1188, label %if.end1189, !dbg !9572

if.then1188:                                      ; preds = %if.else1179
  store i32 -1, i32* %retval, align 4, !dbg !9573
  br label %return, !dbg !9573

if.end1189:                                       ; preds = %if.else1179
  %865 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9574
  %f_master1190 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %865, i32 0, i32 22, !dbg !9575
  %arraydecay1191 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master1190, i32 0, i32 0, !dbg !9576
  %866 = bitcast i16* %arraydecay1191 to i8*, !dbg !9576
  %arraydecay1192 = getelementptr inbounds [49 x i16], [49 x i16]* %vk0, i32 0, i32 0, !dbg !9576
  %867 = bitcast i16* %arraydecay1192 to i8*, !dbg !9576
  %868 = load i32, i32* %num_bands_0, align 4, !dbg !9577
  %add1193 = add nsw i32 %868, 1, !dbg !9578
  %conv1194 = sext i32 %add1193 to i64, !dbg !9579
  %mul1195 = mul i64 %conv1194, 2, !dbg !9580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %866, i8* %867, i64 %mul1195, i32 16, i1 false), !dbg !9576
  br label %if.end1196

if.end1196:                                       ; preds = %if.end1189, %if.end1164
  br label %if.end1197

if.end1197:                                       ; preds = %if.end1196, %for.end366
  store i32 0, i32* %retval, align 4, !dbg !9581
  br label %return, !dbg !9581

return:                                           ; preds = %if.end1197, %if.then1188, %if.then1163, %if.then1136, %if.then633, %if.then406, %if.then299, %if.then274, %if.else233, %sw.default
  %869 = load i32, i32* %retval, align 4, !dbg !9582
  ret i32 %869, !dbg !9582
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_make_f_derived(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !9583 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9586, metadata !2753), !dbg !9587
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !9588, metadata !2753), !dbg !9589
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9590, metadata !2753), !dbg !9591
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9592, metadata !2753), !dbg !9593
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9594
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 16, !dbg !9595
  %1 = load i32, i32* %n_master, align 4, !dbg !9595
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9596
  %spectrum_params = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 5, !dbg !9597
  %bs_xover_band = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params, i32 0, i32 2, !dbg !9598
  %3 = load i8, i8* %bs_xover_band, align 2, !dbg !9598
  %conv = zext i8 %3 to i32, !dbg !9596
  %sub = sub i32 %1, %conv, !dbg !9599
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9600
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 19, !dbg !9601
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !9600
  store i32 %sub, i32* %arrayidx, align 4, !dbg !9602
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9603
  %n1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 19, !dbg !9604
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %n1, i64 0, i64 1, !dbg !9603
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !9603
  %add = add i32 %6, 1, !dbg !9605
  %shr = lshr i32 %add, 1, !dbg !9606
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9607
  %n3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 19, !dbg !9608
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %n3, i64 0, i64 0, !dbg !9607
  store i32 %shr, i32* %arrayidx4, align 32, !dbg !9609
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9610
  %f_tablehigh = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 24, !dbg !9611
  %arraydecay = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh, i32 0, i32 0, !dbg !9612
  %9 = bitcast i16* %arraydecay to i8*, !dbg !9612
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9613
  %spectrum_params5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 5, !dbg !9614
  %bs_xover_band6 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params5, i32 0, i32 2, !dbg !9615
  %11 = load i8, i8* %bs_xover_band6, align 2, !dbg !9615
  %idxprom = zext i8 %11 to i64, !dbg !9616
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9616
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 22, !dbg !9617
  %arrayidx7 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom, !dbg !9616
  %13 = bitcast i16* %arrayidx7 to i8*, !dbg !9612
  %14 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9618
  %n8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %14, i32 0, i32 19, !dbg !9619
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %n8, i64 0, i64 1, !dbg !9618
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !9618
  %add10 = add i32 %15, 1, !dbg !9620
  %conv11 = zext i32 %add10 to i64, !dbg !9621
  %mul = mul i64 %conv11, 2, !dbg !9622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %13, i64 %mul, i32 2, i1 false), !dbg !9612
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9623
  %n12 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %16, i32 0, i32 19, !dbg !9624
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %n12, i64 0, i64 1, !dbg !9623
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !9623
  %idxprom14 = zext i32 %17 to i64, !dbg !9625
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9625
  %f_tablehigh15 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 24, !dbg !9626
  %arrayidx16 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh15, i64 0, i64 %idxprom14, !dbg !9625
  %19 = load i16, i16* %arrayidx16, align 2, !dbg !9625
  %conv17 = zext i16 %19 to i32, !dbg !9625
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9627
  %f_tablehigh18 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 24, !dbg !9628
  %arrayidx19 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh18, i64 0, i64 0, !dbg !9627
  %21 = load i16, i16* %arrayidx19, align 4, !dbg !9627
  %conv20 = zext i16 %21 to i32, !dbg !9627
  %sub21 = sub nsw i32 %conv17, %conv20, !dbg !9629
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9630
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 14, !dbg !9631
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !9630
  store i32 %sub21, i32* %arrayidx22, align 4, !dbg !9632
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9633
  %f_tablehigh23 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 24, !dbg !9634
  %arrayidx24 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh23, i64 0, i64 0, !dbg !9633
  %24 = load i16, i16* %arrayidx24, align 4, !dbg !9633
  %conv25 = zext i16 %24 to i32, !dbg !9633
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9635
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 13, !dbg !9636
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !9635
  store i32 %conv25, i32* %arrayidx26, align 4, !dbg !9637
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9638
  %kx27 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !9640
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %kx27, i64 0, i64 1, !dbg !9638
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !9638
  %28 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9641
  %m29 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %28, i32 0, i32 14, !dbg !9642
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %m29, i64 0, i64 1, !dbg !9641
  %29 = load i32, i32* %arrayidx30, align 4, !dbg !9641
  %add31 = add i32 %27, %29, !dbg !9643
  %cmp = icmp ugt i32 %add31, 64, !dbg !9644
  br i1 %cmp, label %if.then, label %if.end, !dbg !9645

if.then:                                          ; preds = %entry
  %30 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9646
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %30, i32 0, i32 1, !dbg !9648
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9648
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !9646
  %33 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9649
  %kx33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %33, i32 0, i32 13, !dbg !9650
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %kx33, i64 0, i64 1, !dbg !9649
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !9649
  %35 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9651
  %m35 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %35, i32 0, i32 14, !dbg !9652
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %m35, i64 0, i64 1, !dbg !9651
  %36 = load i32, i32* %arrayidx36, align 4, !dbg !9651
  %add37 = add i32 %34, %36, !dbg !9653
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i32 %add37), !dbg !9654
  store i32 -1, i32* %retval, align 4, !dbg !9655
  br label %return, !dbg !9655

if.end:                                           ; preds = %entry
  %37 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9656
  %kx38 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %37, i32 0, i32 13, !dbg !9658
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %kx38, i64 0, i64 1, !dbg !9656
  %38 = load i32, i32* %arrayidx39, align 4, !dbg !9656
  %cmp40 = icmp ugt i32 %38, 32, !dbg !9659
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !9660

if.then42:                                        ; preds = %if.end
  %39 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9661
  %avctx43 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %39, i32 0, i32 1, !dbg !9663
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 8, !dbg !9663
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !9661
  %42 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9664
  %kx44 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %42, i32 0, i32 13, !dbg !9665
  %arrayidx45 = getelementptr inbounds [2 x i32], [2 x i32]* %kx44, i64 0, i64 1, !dbg !9664
  %43 = load i32, i32* %arrayidx45, align 4, !dbg !9664
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i32 0, i32 0), i32 %43), !dbg !9666
  store i32 -1, i32* %retval, align 4, !dbg !9667
  br label %return, !dbg !9667

if.end46:                                         ; preds = %if.end
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9668
  %f_tablehigh47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %44, i32 0, i32 24, !dbg !9669
  %arrayidx48 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh47, i64 0, i64 0, !dbg !9668
  %45 = load i16, i16* %arrayidx48, align 4, !dbg !9668
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9670
  %f_tablelow = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 23, !dbg !9671
  %arrayidx49 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow, i64 0, i64 0, !dbg !9670
  store i16 %45, i16* %arrayidx49, align 2, !dbg !9672
  %47 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9673
  %n50 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %47, i32 0, i32 19, !dbg !9674
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %n50, i64 0, i64 1, !dbg !9673
  %48 = load i32, i32* %arrayidx51, align 4, !dbg !9673
  %and = and i32 %48, 1, !dbg !9675
  store i32 %and, i32* %temp, align 4, !dbg !9676
  store i32 1, i32* %k, align 4, !dbg !9677
  br label %for.cond, !dbg !9679

for.cond:                                         ; preds = %for.inc, %if.end46
  %49 = load i32, i32* %k, align 4, !dbg !9680
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9683
  %n52 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 19, !dbg !9684
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %n52, i64 0, i64 0, !dbg !9683
  %51 = load i32, i32* %arrayidx53, align 32, !dbg !9683
  %cmp54 = icmp ule i32 %49, %51, !dbg !9685
  br i1 %cmp54, label %for.body, label %for.end, !dbg !9686

for.body:                                         ; preds = %for.cond
  %52 = load i32, i32* %k, align 4, !dbg !9687
  %mul56 = mul nsw i32 2, %52, !dbg !9688
  %53 = load i32, i32* %temp, align 4, !dbg !9689
  %sub57 = sub nsw i32 %mul56, %53, !dbg !9690
  %idxprom58 = sext i32 %sub57 to i64, !dbg !9691
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9691
  %f_tablehigh59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %54, i32 0, i32 24, !dbg !9692
  %arrayidx60 = getelementptr inbounds [49 x i16], [49 x i16]* %f_tablehigh59, i64 0, i64 %idxprom58, !dbg !9691
  %55 = load i16, i16* %arrayidx60, align 2, !dbg !9691
  %56 = load i32, i32* %k, align 4, !dbg !9693
  %idxprom61 = sext i32 %56 to i64, !dbg !9694
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9694
  %f_tablelow62 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 23, !dbg !9695
  %arrayidx63 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow62, i64 0, i64 %idxprom61, !dbg !9694
  store i16 %55, i16* %arrayidx63, align 2, !dbg !9696
  br label %for.inc, !dbg !9694

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %k, align 4, !dbg !9697
  %inc = add nsw i32 %58, 1, !dbg !9697
  store i32 %inc, i32* %k, align 4, !dbg !9697
  br label %for.cond, !dbg !9699, !llvm.loop !9700

for.end:                                          ; preds = %for.cond
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9702
  %spectrum_params64 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 5, !dbg !9703
  %bs_noise_bands = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params64, i32 0, i32 5, !dbg !9704
  %60 = load i8, i8* %bs_noise_bands, align 1, !dbg !9704
  %conv65 = zext i8 %60 to i32, !dbg !9702
  %conv66 = sitofp i32 %conv65 to float, !dbg !9702
  %61 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9705
  %k67 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %61, i32 0, i32 12, !dbg !9706
  %arrayidx68 = getelementptr inbounds [5 x i32], [5 x i32]* %k67, i64 0, i64 2, !dbg !9705
  %62 = load i32, i32* %arrayidx68, align 4, !dbg !9705
  %conv69 = uitofp i32 %62 to float, !dbg !9705
  %63 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9707
  %kx70 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %63, i32 0, i32 13, !dbg !9708
  %arrayidx71 = getelementptr inbounds [2 x i32], [2 x i32]* %kx70, i64 0, i64 1, !dbg !9707
  %64 = load i32, i32* %arrayidx71, align 4, !dbg !9707
  %conv72 = uitofp i32 %64 to float, !dbg !9709
  %div = fdiv float %conv69, %conv72, !dbg !9710
  %call = call float @log2f(float %div) #11, !dbg !9711
  %mul73 = fmul float %conv66, %call, !dbg !9712
  %call74 = call i64 @lrintf(float %mul73) #11, !dbg !9713
  %cmp75 = icmp sgt i64 1, %call74, !dbg !9715
  br i1 %cmp75, label %cond.true, label %cond.false, !dbg !9716

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !9717

cond.false:                                       ; preds = %for.end
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9719
  %spectrum_params77 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 5, !dbg !9721
  %bs_noise_bands78 = getelementptr inbounds %struct.SpectrumParameters, %struct.SpectrumParameters* %spectrum_params77, i32 0, i32 5, !dbg !9722
  %66 = load i8, i8* %bs_noise_bands78, align 1, !dbg !9722
  %conv79 = zext i8 %66 to i32, !dbg !9719
  %conv80 = sitofp i32 %conv79 to float, !dbg !9719
  %67 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9723
  %k81 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %67, i32 0, i32 12, !dbg !9724
  %arrayidx82 = getelementptr inbounds [5 x i32], [5 x i32]* %k81, i64 0, i64 2, !dbg !9723
  %68 = load i32, i32* %arrayidx82, align 4, !dbg !9723
  %conv83 = uitofp i32 %68 to float, !dbg !9723
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9725
  %kx84 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 13, !dbg !9726
  %arrayidx85 = getelementptr inbounds [2 x i32], [2 x i32]* %kx84, i64 0, i64 1, !dbg !9725
  %70 = load i32, i32* %arrayidx85, align 4, !dbg !9725
  %conv86 = uitofp i32 %70 to float, !dbg !9727
  %div87 = fdiv float %conv83, %conv86, !dbg !9728
  %call88 = call float @log2f(float %div87) #11, !dbg !9729
  %mul89 = fmul float %conv80, %call88, !dbg !9730
  %call90 = call i64 @lrintf(float %mul89) #11, !dbg !9731
  br label %cond.end, !dbg !9733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 1, %cond.true ], [ %call90, %cond.false ], !dbg !9734
  %conv91 = trunc i64 %cond to i32, !dbg !9736
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9737
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 20, !dbg !9738
  store i32 %conv91, i32* %n_q, align 8, !dbg !9739
  %72 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9740
  %n_q92 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %72, i32 0, i32 20, !dbg !9742
  %73 = load i32, i32* %n_q92, align 8, !dbg !9742
  %cmp93 = icmp ugt i32 %73, 5, !dbg !9743
  br i1 %cmp93, label %if.then95, label %if.end98, !dbg !9744

if.then95:                                        ; preds = %cond.end
  %74 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9745
  %avctx96 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %74, i32 0, i32 1, !dbg !9747
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx96, align 8, !dbg !9747
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !9745
  %77 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9748
  %n_q97 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %77, i32 0, i32 20, !dbg !9749
  %78 = load i32, i32* %n_q97, align 8, !dbg !9749
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0), i32 %78), !dbg !9750
  store i32 -1, i32* %retval, align 4, !dbg !9751
  br label %return, !dbg !9751

if.end98:                                         ; preds = %cond.end
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9752
  %f_tablelow99 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %79, i32 0, i32 23, !dbg !9753
  %arrayidx100 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow99, i64 0, i64 0, !dbg !9752
  %80 = load i16, i16* %arrayidx100, align 2, !dbg !9752
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9754
  %f_tablenoise = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 25, !dbg !9755
  %arrayidx101 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise, i64 0, i64 0, !dbg !9754
  store i16 %80, i16* %arrayidx101, align 2, !dbg !9756
  store i32 0, i32* %temp, align 4, !dbg !9757
  store i32 1, i32* %k, align 4, !dbg !9758
  br label %for.cond102, !dbg !9760

for.cond102:                                      ; preds = %for.inc121, %if.end98
  %82 = load i32, i32* %k, align 4, !dbg !9761
  %83 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9764
  %n_q103 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %83, i32 0, i32 20, !dbg !9765
  %84 = load i32, i32* %n_q103, align 8, !dbg !9765
  %cmp104 = icmp ule i32 %82, %84, !dbg !9766
  br i1 %cmp104, label %for.body106, label %for.end123, !dbg !9767

for.body106:                                      ; preds = %for.cond102
  %85 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9768
  %n107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %85, i32 0, i32 19, !dbg !9770
  %arrayidx108 = getelementptr inbounds [2 x i32], [2 x i32]* %n107, i64 0, i64 0, !dbg !9768
  %86 = load i32, i32* %arrayidx108, align 32, !dbg !9768
  %87 = load i32, i32* %temp, align 4, !dbg !9771
  %sub109 = sub i32 %86, %87, !dbg !9772
  %88 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9773
  %n_q110 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %88, i32 0, i32 20, !dbg !9774
  %89 = load i32, i32* %n_q110, align 8, !dbg !9774
  %add111 = add i32 %89, 1, !dbg !9775
  %90 = load i32, i32* %k, align 4, !dbg !9776
  %sub112 = sub i32 %add111, %90, !dbg !9777
  %div113 = udiv i32 %sub109, %sub112, !dbg !9778
  %91 = load i32, i32* %temp, align 4, !dbg !9779
  %add114 = add i32 %91, %div113, !dbg !9779
  store i32 %add114, i32* %temp, align 4, !dbg !9779
  %92 = load i32, i32* %temp, align 4, !dbg !9780
  %idxprom115 = sext i32 %92 to i64, !dbg !9781
  %93 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9781
  %f_tablelow116 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %93, i32 0, i32 23, !dbg !9782
  %arrayidx117 = getelementptr inbounds [25 x i16], [25 x i16]* %f_tablelow116, i64 0, i64 %idxprom115, !dbg !9781
  %94 = load i16, i16* %arrayidx117, align 2, !dbg !9781
  %95 = load i32, i32* %k, align 4, !dbg !9783
  %idxprom118 = sext i32 %95 to i64, !dbg !9784
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9784
  %f_tablenoise119 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 25, !dbg !9785
  %arrayidx120 = getelementptr inbounds [6 x i16], [6 x i16]* %f_tablenoise119, i64 0, i64 %idxprom118, !dbg !9784
  store i16 %94, i16* %arrayidx120, align 2, !dbg !9786
  br label %for.inc121, !dbg !9787

for.inc121:                                       ; preds = %for.body106
  %97 = load i32, i32* %k, align 4, !dbg !9788
  %inc122 = add nsw i32 %97, 1, !dbg !9788
  store i32 %inc122, i32* %k, align 4, !dbg !9788
  br label %for.cond102, !dbg !9790, !llvm.loop !9791

for.end123:                                       ; preds = %for.cond102
  %98 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !9793
  %99 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9795
  %call124 = call i32 @sbr_hf_calc_npatches(%struct.AACContext* %98, %struct.SpectralBandReplication* %99), !dbg !9796
  %cmp125 = icmp slt i32 %call124, 0, !dbg !9797
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !9798

if.then127:                                       ; preds = %for.end123
  store i32 -1, i32* %retval, align 4, !dbg !9799
  br label %return, !dbg !9799

if.end128:                                        ; preds = %for.end123
  %100 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9800
  call void @sbr_make_f_tablelim(%struct.SpectralBandReplication* %100), !dbg !9801
  %101 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9802
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %101, i32 0, i32 17, !dbg !9803
  %arrayidx129 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !9802
  %f_indexnoise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx129, i32 0, i32 29, !dbg !9804
  store i32 0, i32* %f_indexnoise, align 8, !dbg !9805
  %102 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9806
  %data130 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %102, i32 0, i32 17, !dbg !9807
  %arrayidx131 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data130, i64 0, i64 1, !dbg !9806
  %f_indexnoise132 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx131, i32 0, i32 29, !dbg !9808
  store i32 0, i32* %f_indexnoise132, align 8, !dbg !9809
  store i32 0, i32* %retval, align 4, !dbg !9810
  br label %return, !dbg !9810

return:                                           ; preds = %if.end128, %if.then127, %if.then95, %if.then42, %if.then
  %103 = load i32, i32* %retval, align 4, !dbg !9811
  ret i32 %103, !dbg !9811
}

; Function Attrs: nounwind uwtable
define internal void @make_bands(i16* %bands, i32 %start, i32 %stop, i32 %num_bands) #3 !dbg !9812 {
entry:
  %bands.addr = alloca i16*, align 8
  %start.addr = alloca i32, align 4
  %stop.addr = alloca i32, align 4
  %num_bands.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %previous = alloca i32, align 4
  %present = alloca i32, align 4
  %base = alloca float, align 4
  %prod = alloca float, align 4
  store i16* %bands, i16** %bands.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %bands.addr, metadata !9815, metadata !2753), !dbg !9816
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !9817, metadata !2753), !dbg !9818
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !9819, metadata !2753), !dbg !9820
  store i32 %num_bands, i32* %num_bands.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_bands.addr, metadata !9821, metadata !2753), !dbg !9822
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9823, metadata !2753), !dbg !9824
  call void @llvm.dbg.declare(metadata i32* %previous, metadata !9825, metadata !2753), !dbg !9826
  call void @llvm.dbg.declare(metadata i32* %present, metadata !9827, metadata !2753), !dbg !9828
  call void @llvm.dbg.declare(metadata float* %base, metadata !9829, metadata !2753), !dbg !9830
  call void @llvm.dbg.declare(metadata float* %prod, metadata !9831, metadata !2753), !dbg !9832
  %0 = load i32, i32* %stop.addr, align 4, !dbg !9833
  %conv = sitofp i32 %0 to float, !dbg !9834
  %1 = load i32, i32* %start.addr, align 4, !dbg !9835
  %conv1 = sitofp i32 %1 to float, !dbg !9835
  %div = fdiv float %conv, %conv1, !dbg !9836
  %2 = load i32, i32* %num_bands.addr, align 4, !dbg !9837
  %conv2 = sitofp i32 %2 to float, !dbg !9837
  %div3 = fdiv float 1.000000e+00, %conv2, !dbg !9838
  %call = call float @powf(float %div, float %div3) #11, !dbg !9839
  store float %call, float* %base, align 4, !dbg !9840
  %3 = load i32, i32* %start.addr, align 4, !dbg !9841
  %conv4 = sitofp i32 %3 to float, !dbg !9841
  store float %conv4, float* %prod, align 4, !dbg !9842
  %4 = load i32, i32* %start.addr, align 4, !dbg !9843
  store i32 %4, i32* %previous, align 4, !dbg !9844
  store i32 0, i32* %k, align 4, !dbg !9845
  br label %for.cond, !dbg !9847

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %k, align 4, !dbg !9848
  %6 = load i32, i32* %num_bands.addr, align 4, !dbg !9851
  %sub = sub nsw i32 %6, 1, !dbg !9852
  %cmp = icmp slt i32 %5, %sub, !dbg !9853
  br i1 %cmp, label %for.body, label %for.end, !dbg !9854

for.body:                                         ; preds = %for.cond
  %7 = load float, float* %base, align 4, !dbg !9855
  %8 = load float, float* %prod, align 4, !dbg !9857
  %mul = fmul float %8, %7, !dbg !9857
  store float %mul, float* %prod, align 4, !dbg !9857
  %9 = load float, float* %prod, align 4, !dbg !9858
  %call6 = call i64 @lrintf(float %9) #11, !dbg !9859
  %conv7 = trunc i64 %call6 to i32, !dbg !9859
  store i32 %conv7, i32* %present, align 4, !dbg !9860
  %10 = load i32, i32* %present, align 4, !dbg !9861
  %11 = load i32, i32* %previous, align 4, !dbg !9862
  %sub8 = sub nsw i32 %10, %11, !dbg !9863
  %conv9 = trunc i32 %sub8 to i16, !dbg !9861
  %12 = load i32, i32* %k, align 4, !dbg !9864
  %idxprom = sext i32 %12 to i64, !dbg !9865
  %13 = load i16*, i16** %bands.addr, align 8, !dbg !9865
  %arrayidx = getelementptr inbounds i16, i16* %13, i64 %idxprom, !dbg !9865
  store i16 %conv9, i16* %arrayidx, align 2, !dbg !9866
  %14 = load i32, i32* %present, align 4, !dbg !9867
  store i32 %14, i32* %previous, align 4, !dbg !9868
  br label %for.inc, !dbg !9869

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %k, align 4, !dbg !9870
  %inc = add nsw i32 %15, 1, !dbg !9870
  store i32 %inc, i32* %k, align 4, !dbg !9870
  br label %for.cond, !dbg !9872, !llvm.loop !9873

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %stop.addr, align 4, !dbg !9875
  %17 = load i32, i32* %previous, align 4, !dbg !9876
  %sub10 = sub nsw i32 %16, %17, !dbg !9877
  %conv11 = trunc i32 %sub10 to i16, !dbg !9875
  %18 = load i32, i32* %num_bands.addr, align 4, !dbg !9878
  %sub12 = sub nsw i32 %18, 1, !dbg !9879
  %idxprom13 = sext i32 %sub12 to i64, !dbg !9880
  %19 = load i16*, i16** %bands.addr, align 8, !dbg !9880
  %arrayidx14 = getelementptr inbounds i16, i16* %19, i64 %idxprom13, !dbg !9880
  store i16 %conv11, i16* %arrayidx14, align 2, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: nounwind uwtable
define internal i32 @check_n_master(%struct.AVCodecContext* %avctx, i32 %n_master, i32 %bs_xover_band) #3 !dbg !9883 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %n_master.addr = alloca i32, align 4
  %bs_xover_band.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !9886, metadata !2753), !dbg !9887
  store i32 %n_master, i32* %n_master.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_master.addr, metadata !9888, metadata !2753), !dbg !9889
  store i32 %bs_xover_band, i32* %bs_xover_band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_xover_band.addr, metadata !9890, metadata !2753), !dbg !9891
  %0 = load i32, i32* %n_master.addr, align 4, !dbg !9892
  %cmp = icmp sle i32 %0, 0, !dbg !9894
  br i1 %cmp, label %if.then, label %if.end, !dbg !9895

if.then:                                          ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9896
  %2 = bitcast %struct.AVCodecContext* %1 to i8*, !dbg !9896
  %3 = load i32, i32* %n_master.addr, align 4, !dbg !9898
  call void (i8*, i32, i8*, ...) @av_log(i8* %2, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 %3), !dbg !9899
  store i32 -1, i32* %retval, align 4, !dbg !9900
  br label %return, !dbg !9900

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bs_xover_band.addr, align 4, !dbg !9901
  %5 = load i32, i32* %n_master.addr, align 4, !dbg !9903
  %cmp1 = icmp sge i32 %4, %5, !dbg !9904
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9905

if.then2:                                         ; preds = %if.end
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9906
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !9906
  %8 = load i32, i32* %bs_xover_band.addr, align 4, !dbg !9908
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.24, i32 0, i32 0), i32 %8), !dbg !9909
  store i32 -1, i32* %retval, align 4, !dbg !9910
  br label %return, !dbg !9910

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9911
  br label %return, !dbg !9911

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9912
  ret i32 %9, !dbg !9912
}

; Function Attrs: nounwind
declare i64 @lrintf(float) #8

; Function Attrs: nounwind
declare float @log2f(float) #8

; Function Attrs: nounwind uwtable
define internal i32 @array_min_int16(i16* %array, i32 %nel) #3 !dbg !9913 {
entry:
  %array.addr = alloca i16*, align 8
  %nel.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %min = alloca i32, align 4
  store i16* %array, i16** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %array.addr, metadata !9916, metadata !2753), !dbg !9917
  store i32 %nel, i32* %nel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nel.addr, metadata !9918, metadata !2753), !dbg !9919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9920, metadata !2753), !dbg !9921
  call void @llvm.dbg.declare(metadata i32* %min, metadata !9922, metadata !2753), !dbg !9923
  %0 = load i16*, i16** %array.addr, align 8, !dbg !9924
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !9924
  %1 = load i16, i16* %arrayidx, align 2, !dbg !9924
  %conv = sext i16 %1 to i32, !dbg !9924
  store i32 %conv, i32* %min, align 4, !dbg !9923
  store i32 1, i32* %i, align 4, !dbg !9925
  br label %for.cond, !dbg !9927

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9928
  %3 = load i32, i32* %nel.addr, align 4, !dbg !9931
  %cmp = icmp slt i32 %2, %3, !dbg !9932
  br i1 %cmp, label %for.body, label %for.end, !dbg !9933

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !9934
  %idxprom = sext i32 %4 to i64, !dbg !9935
  %5 = load i16*, i16** %array.addr, align 8, !dbg !9935
  %arrayidx2 = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !9935
  %6 = load i16, i16* %arrayidx2, align 2, !dbg !9935
  %conv3 = sext i16 %6 to i32, !dbg !9936
  %7 = load i32, i32* %min, align 4, !dbg !9937
  %cmp4 = icmp sgt i32 %conv3, %7, !dbg !9938
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9936

cond.true:                                        ; preds = %for.body
  %8 = load i32, i32* %min, align 4, !dbg !9939
  br label %cond.end, !dbg !9940

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9941
  %idxprom6 = sext i32 %9 to i64, !dbg !9943
  %10 = load i16*, i16** %array.addr, align 8, !dbg !9943
  %arrayidx7 = getelementptr inbounds i16, i16* %10, i64 %idxprom6, !dbg !9943
  %11 = load i16, i16* %arrayidx7, align 2, !dbg !9943
  %conv8 = sext i16 %11 to i32, !dbg !9944
  br label %cond.end, !dbg !9945

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %conv8, %cond.false ], !dbg !9946
  store i32 %cond, i32* %min, align 4, !dbg !9948
  br label %for.inc, !dbg !9949

for.inc:                                          ; preds = %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !9950
  %inc = add nsw i32 %12, 1, !dbg !9950
  store i32 %inc, i32* %i, align 4, !dbg !9950
  br label %for.cond, !dbg !9951, !llvm.loop !9952

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %min, align 4, !dbg !9954
  ret i32 %13, !dbg !9955
}

; Function Attrs: nounwind
declare float @powf(float, float) #8

; Function Attrs: nounwind uwtable
define internal i32 @sbr_hf_calc_npatches(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr) #3 !dbg !9956 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %last_k = alloca i32, align 4
  %last_msb = alloca i32, align 4
  %sb = alloca i32, align 4
  %msb = alloca i32, align 4
  %usb = alloca i32, align 4
  %goal_sb = alloca i32, align 4
  %odd = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !9957, metadata !2753), !dbg !9958
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !9959, metadata !2753), !dbg !9960
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9961, metadata !2753), !dbg !9962
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9963, metadata !2753), !dbg !9964
  call void @llvm.dbg.declare(metadata i32* %last_k, metadata !9965, metadata !2753), !dbg !9966
  store i32 -1, i32* %last_k, align 4, !dbg !9966
  call void @llvm.dbg.declare(metadata i32* %last_msb, metadata !9967, metadata !2753), !dbg !9968
  store i32 -1, i32* %last_msb, align 4, !dbg !9968
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !9969, metadata !2753), !dbg !9970
  store i32 0, i32* %sb, align 4, !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %msb, metadata !9971, metadata !2753), !dbg !9972
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9973
  %k1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 12, !dbg !9974
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %k1, i64 0, i64 0, !dbg !9973
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9973
  store i32 %1, i32* %msb, align 4, !dbg !9972
  call void @llvm.dbg.declare(metadata i32* %usb, metadata !9975, metadata !2753), !dbg !9976
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9977
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !9978
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !9977
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !9977
  store i32 %3, i32* %usb, align 4, !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %goal_sb, metadata !9979, metadata !2753), !dbg !9980
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9981
  %sample_rate = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 0, !dbg !9982
  %5 = load i32, i32* %sample_rate, align 32, !dbg !9982
  %shr = ashr i32 %5, 1, !dbg !9983
  %add = add nsw i32 2048000, %shr, !dbg !9984
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9985
  %sample_rate3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 0, !dbg !9986
  %7 = load i32, i32* %sample_rate3, align 32, !dbg !9986
  %div = sdiv i32 %add, %7, !dbg !9987
  store i32 %div, i32* %goal_sb, align 4, !dbg !9980
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9988
  %num_patches = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 27, !dbg !9989
  store i32 0, i32* %num_patches, align 16, !dbg !9990
  %9 = load i32, i32* %goal_sb, align 4, !dbg !9991
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9993
  %kx4 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %10, i32 0, i32 13, !dbg !9994
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %kx4, i64 0, i64 1, !dbg !9993
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !9993
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !9995
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 14, !dbg !9996
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 1, !dbg !9995
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !9995
  %add7 = add i32 %11, %13, !dbg !9997
  %cmp = icmp ult i32 %9, %add7, !dbg !9998
  br i1 %cmp, label %if.then, label %if.else, !dbg !9999

if.then:                                          ; preds = %entry
  store i32 0, i32* %k, align 4, !dbg !10000
  br label %for.cond, !dbg !10003

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %k, align 4, !dbg !10004
  %idxprom = sext i32 %14 to i64, !dbg !10007
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10007
  %f_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 22, !dbg !10008
  %arrayidx8 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master, i64 0, i64 %idxprom, !dbg !10007
  %16 = load i16, i16* %arrayidx8, align 2, !dbg !10007
  %conv = zext i16 %16 to i32, !dbg !10007
  %17 = load i32, i32* %goal_sb, align 4, !dbg !10009
  %cmp9 = icmp slt i32 %conv, %17, !dbg !10010
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10011

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10012

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %k, align 4, !dbg !10014
  %inc = add nsw i32 %18, 1, !dbg !10014
  store i32 %inc, i32* %k, align 4, !dbg !10014
  br label %for.cond, !dbg !10016, !llvm.loop !10017

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10019

if.else:                                          ; preds = %entry
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10020
  %n_master = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 16, !dbg !10021
  %20 = load i32, i32* %n_master, align 4, !dbg !10021
  store i32 %20, i32* %k, align 4, !dbg !10022
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %do.body, !dbg !10023, !llvm.loop !10024

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %odd, metadata !10025, metadata !2753), !dbg !10027
  store i32 0, i32* %odd, align 4, !dbg !10027
  %21 = load i32, i32* %k, align 4, !dbg !10028
  %22 = load i32, i32* %last_k, align 4, !dbg !10030
  %cmp11 = icmp eq i32 %21, %22, !dbg !10031
  br i1 %cmp11, label %land.lhs.true, label %if.end16, !dbg !10032

land.lhs.true:                                    ; preds = %do.body
  %23 = load i32, i32* %msb, align 4, !dbg !10033
  %24 = load i32, i32* %last_msb, align 4, !dbg !10035
  %cmp13 = icmp eq i32 %23, %24, !dbg !10036
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10037

if.then15:                                        ; preds = %land.lhs.true
  %25 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10038
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %25, i32 0, i32 1, !dbg !10040
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10040
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !10038
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i32 0, i32 0)), !dbg !10041
  store i32 -1094995529, i32* %retval, align 4, !dbg !10042
  br label %return, !dbg !10042

if.end16:                                         ; preds = %land.lhs.true, %do.body
  %28 = load i32, i32* %k, align 4, !dbg !10043
  store i32 %28, i32* %last_k, align 4, !dbg !10044
  %29 = load i32, i32* %msb, align 4, !dbg !10045
  store i32 %29, i32* %last_msb, align 4, !dbg !10046
  %30 = load i32, i32* %k, align 4, !dbg !10047
  store i32 %30, i32* %i, align 4, !dbg !10049
  br label %for.cond17, !dbg !10050

for.cond17:                                       ; preds = %for.inc34, %if.end16
  %31 = load i32, i32* %i, align 4, !dbg !10051
  %32 = load i32, i32* %k, align 4, !dbg !10054
  %cmp18 = icmp eq i32 %31, %32, !dbg !10055
  br i1 %cmp18, label %lor.end, label %lor.rhs, !dbg !10056

lor.rhs:                                          ; preds = %for.cond17
  %33 = load i32, i32* %sb, align 4, !dbg !10057
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10059
  %k20 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %34, i32 0, i32 12, !dbg !10060
  %arrayidx21 = getelementptr inbounds [5 x i32], [5 x i32]* %k20, i64 0, i64 0, !dbg !10059
  %35 = load i32, i32* %arrayidx21, align 4, !dbg !10059
  %sub = sub i32 %35, 1, !dbg !10061
  %36 = load i32, i32* %msb, align 4, !dbg !10062
  %add22 = add i32 %sub, %36, !dbg !10063
  %37 = load i32, i32* %odd, align 4, !dbg !10064
  %sub23 = sub i32 %add22, %37, !dbg !10065
  %cmp24 = icmp ugt i32 %33, %sub23, !dbg !10066
  br label %lor.end, !dbg !10067

lor.end:                                          ; preds = %lor.rhs, %for.cond17
  %38 = phi i1 [ true, %for.cond17 ], [ %cmp24, %lor.rhs ]
  br i1 %38, label %for.body26, label %for.end35, !dbg !10068

for.body26:                                       ; preds = %lor.end
  %39 = load i32, i32* %i, align 4, !dbg !10070
  %idxprom27 = sext i32 %39 to i64, !dbg !10072
  %40 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10072
  %f_master28 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %40, i32 0, i32 22, !dbg !10073
  %arrayidx29 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master28, i64 0, i64 %idxprom27, !dbg !10072
  %41 = load i16, i16* %arrayidx29, align 2, !dbg !10072
  %conv30 = zext i16 %41 to i32, !dbg !10072
  store i32 %conv30, i32* %sb, align 4, !dbg !10074
  %42 = load i32, i32* %sb, align 4, !dbg !10075
  %43 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10076
  %k31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %43, i32 0, i32 12, !dbg !10077
  %arrayidx32 = getelementptr inbounds [5 x i32], [5 x i32]* %k31, i64 0, i64 0, !dbg !10076
  %44 = load i32, i32* %arrayidx32, align 4, !dbg !10076
  %add33 = add i32 %42, %44, !dbg !10078
  %and = and i32 %add33, 1, !dbg !10079
  store i32 %and, i32* %odd, align 4, !dbg !10080
  br label %for.inc34, !dbg !10081

for.inc34:                                        ; preds = %for.body26
  %45 = load i32, i32* %i, align 4, !dbg !10082
  %dec = add nsw i32 %45, -1, !dbg !10082
  store i32 %dec, i32* %i, align 4, !dbg !10082
  br label %for.cond17, !dbg !10084, !llvm.loop !10085

for.end35:                                        ; preds = %lor.end
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10087
  %num_patches36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 27, !dbg !10089
  %47 = load i32, i32* %num_patches36, align 16, !dbg !10089
  %cmp37 = icmp ugt i32 %47, 5, !dbg !10090
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !10091

if.then39:                                        ; preds = %for.end35
  %48 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10092
  %avctx40 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %48, i32 0, i32 1, !dbg !10094
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx40, align 8, !dbg !10094
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !10092
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10095
  %num_patches41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %51, i32 0, i32 27, !dbg !10096
  %52 = load i32, i32* %num_patches41, align 16, !dbg !10096
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i32 %52), !dbg !10097
  store i32 -1, i32* %retval, align 4, !dbg !10098
  br label %return, !dbg !10098

if.end42:                                         ; preds = %for.end35
  %53 = load i32, i32* %sb, align 4, !dbg !10099
  %54 = load i32, i32* %usb, align 4, !dbg !10100
  %sub43 = sub nsw i32 %53, %54, !dbg !10101
  %cmp44 = icmp sgt i32 %sub43, 0, !dbg !10102
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !10103

cond.true:                                        ; preds = %if.end42
  %55 = load i32, i32* %sb, align 4, !dbg !10104
  %56 = load i32, i32* %usb, align 4, !dbg !10106
  %sub46 = sub nsw i32 %55, %56, !dbg !10107
  br label %cond.end, !dbg !10108

cond.false:                                       ; preds = %if.end42
  br label %cond.end, !dbg !10109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub46, %cond.true ], [ 0, %cond.false ], !dbg !10111
  %conv47 = trunc i32 %cond to i8, !dbg !10113
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10114
  %num_patches48 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %57, i32 0, i32 27, !dbg !10115
  %58 = load i32, i32* %num_patches48, align 16, !dbg !10115
  %idxprom49 = zext i32 %58 to i64, !dbg !10116
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10116
  %patch_num_subbands = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 28, !dbg !10117
  %arrayidx50 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands, i64 0, i64 %idxprom49, !dbg !10116
  store i8 %conv47, i8* %arrayidx50, align 1, !dbg !10118
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10119
  %k51 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %60, i32 0, i32 12, !dbg !10120
  %arrayidx52 = getelementptr inbounds [5 x i32], [5 x i32]* %k51, i64 0, i64 0, !dbg !10119
  %61 = load i32, i32* %arrayidx52, align 4, !dbg !10119
  %62 = load i32, i32* %odd, align 4, !dbg !10121
  %sub53 = sub i32 %61, %62, !dbg !10122
  %63 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10123
  %num_patches54 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %63, i32 0, i32 27, !dbg !10124
  %64 = load i32, i32* %num_patches54, align 16, !dbg !10124
  %idxprom55 = zext i32 %64 to i64, !dbg !10125
  %65 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10125
  %patch_num_subbands56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %65, i32 0, i32 28, !dbg !10126
  %arrayidx57 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands56, i64 0, i64 %idxprom55, !dbg !10125
  %66 = load i8, i8* %arrayidx57, align 1, !dbg !10125
  %conv58 = zext i8 %66 to i32, !dbg !10125
  %sub59 = sub i32 %sub53, %conv58, !dbg !10127
  %conv60 = trunc i32 %sub59 to i8, !dbg !10119
  %67 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10128
  %num_patches61 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %67, i32 0, i32 27, !dbg !10129
  %68 = load i32, i32* %num_patches61, align 16, !dbg !10129
  %idxprom62 = zext i32 %68 to i64, !dbg !10130
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10130
  %patch_start_subband = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %69, i32 0, i32 29, !dbg !10131
  %arrayidx63 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_start_subband, i64 0, i64 %idxprom62, !dbg !10130
  store i8 %conv60, i8* %arrayidx63, align 1, !dbg !10132
  %70 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10133
  %num_patches64 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %70, i32 0, i32 27, !dbg !10135
  %71 = load i32, i32* %num_patches64, align 16, !dbg !10135
  %idxprom65 = zext i32 %71 to i64, !dbg !10136
  %72 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10136
  %patch_num_subbands66 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %72, i32 0, i32 28, !dbg !10137
  %arrayidx67 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands66, i64 0, i64 %idxprom65, !dbg !10136
  %73 = load i8, i8* %arrayidx67, align 1, !dbg !10136
  %conv68 = zext i8 %73 to i32, !dbg !10136
  %cmp69 = icmp sgt i32 %conv68, 0, !dbg !10138
  br i1 %cmp69, label %if.then71, label %if.else74, !dbg !10139

if.then71:                                        ; preds = %cond.end
  %74 = load i32, i32* %sb, align 4, !dbg !10140
  store i32 %74, i32* %usb, align 4, !dbg !10142
  %75 = load i32, i32* %sb, align 4, !dbg !10143
  store i32 %75, i32* %msb, align 4, !dbg !10144
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10145
  %num_patches72 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 27, !dbg !10146
  %77 = load i32, i32* %num_patches72, align 16, !dbg !10147
  %inc73 = add i32 %77, 1, !dbg !10147
  store i32 %inc73, i32* %num_patches72, align 16, !dbg !10147
  br label %if.end77, !dbg !10148

if.else74:                                        ; preds = %cond.end
  %78 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10149
  %kx75 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %78, i32 0, i32 13, !dbg !10150
  %arrayidx76 = getelementptr inbounds [2 x i32], [2 x i32]* %kx75, i64 0, i64 1, !dbg !10149
  %79 = load i32, i32* %arrayidx76, align 4, !dbg !10149
  store i32 %79, i32* %msb, align 4, !dbg !10151
  br label %if.end77

if.end77:                                         ; preds = %if.else74, %if.then71
  %80 = load i32, i32* %k, align 4, !dbg !10152
  %idxprom78 = sext i32 %80 to i64, !dbg !10154
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10154
  %f_master79 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 22, !dbg !10155
  %arrayidx80 = getelementptr inbounds [49 x i16], [49 x i16]* %f_master79, i64 0, i64 %idxprom78, !dbg !10154
  %82 = load i16, i16* %arrayidx80, align 2, !dbg !10154
  %conv81 = zext i16 %82 to i32, !dbg !10154
  %83 = load i32, i32* %sb, align 4, !dbg !10156
  %sub82 = sub nsw i32 %conv81, %83, !dbg !10157
  %cmp83 = icmp slt i32 %sub82, 3, !dbg !10158
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !10159

if.then85:                                        ; preds = %if.end77
  %84 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10160
  %n_master86 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %84, i32 0, i32 16, !dbg !10161
  %85 = load i32, i32* %n_master86, align 4, !dbg !10161
  store i32 %85, i32* %k, align 4, !dbg !10162
  br label %if.end87, !dbg !10163

if.end87:                                         ; preds = %if.then85, %if.end77
  br label %do.cond, !dbg !10164

do.cond:                                          ; preds = %if.end87
  %86 = load i32, i32* %sb, align 4, !dbg !10165
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10167
  %kx88 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 13, !dbg !10168
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %kx88, i64 0, i64 1, !dbg !10167
  %88 = load i32, i32* %arrayidx89, align 4, !dbg !10167
  %89 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10169
  %m90 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %89, i32 0, i32 14, !dbg !10170
  %arrayidx91 = getelementptr inbounds [2 x i32], [2 x i32]* %m90, i64 0, i64 1, !dbg !10169
  %90 = load i32, i32* %arrayidx91, align 4, !dbg !10169
  %add92 = add i32 %88, %90, !dbg !10171
  %cmp93 = icmp ne i32 %86, %add92, !dbg !10172
  br i1 %cmp93, label %do.body, label %do.end, !dbg !10173, !llvm.loop !10024

do.end:                                           ; preds = %do.cond
  %91 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10174
  %num_patches95 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %91, i32 0, i32 27, !dbg !10176
  %92 = load i32, i32* %num_patches95, align 16, !dbg !10176
  %cmp96 = icmp ugt i32 %92, 1, !dbg !10177
  br i1 %cmp96, label %land.lhs.true98, label %if.end110, !dbg !10178

land.lhs.true98:                                  ; preds = %do.end
  %93 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10179
  %num_patches99 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %93, i32 0, i32 27, !dbg !10180
  %94 = load i32, i32* %num_patches99, align 16, !dbg !10180
  %sub100 = sub i32 %94, 1, !dbg !10181
  %idxprom101 = zext i32 %sub100 to i64, !dbg !10182
  %95 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10182
  %patch_num_subbands102 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %95, i32 0, i32 28, !dbg !10183
  %arrayidx103 = getelementptr inbounds [6 x i8], [6 x i8]* %patch_num_subbands102, i64 0, i64 %idxprom101, !dbg !10182
  %96 = load i8, i8* %arrayidx103, align 1, !dbg !10182
  %conv104 = zext i8 %96 to i32, !dbg !10182
  %cmp105 = icmp slt i32 %conv104, 3, !dbg !10184
  br i1 %cmp105, label %if.then107, label %if.end110, !dbg !10185

if.then107:                                       ; preds = %land.lhs.true98
  %97 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10186
  %num_patches108 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %97, i32 0, i32 27, !dbg !10187
  %98 = load i32, i32* %num_patches108, align 16, !dbg !10188
  %dec109 = add i32 %98, -1, !dbg !10188
  store i32 %dec109, i32* %num_patches108, align 16, !dbg !10188
  br label %if.end110, !dbg !10186

if.end110:                                        ; preds = %if.then107, %land.lhs.true98, %do.end
  store i32 0, i32* %retval, align 4, !dbg !10189
  br label %return, !dbg !10189

return:                                           ; preds = %if.end110, %if.then39, %if.then15
  %99 = load i32, i32* %retval, align 4, !dbg !10190
  ret i32 %99, !dbg !10190
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_single_channel_element(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !10191 {
entry:
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10194, metadata !2753), !dbg !10198
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10201, metadata !2753), !dbg !10202
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10203, metadata !2753), !dbg !10204
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10205, metadata !2753), !dbg !10206
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10207, metadata !2753), !dbg !10208
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10209, metadata !2753), !dbg !10210
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10211, metadata !2753), !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10213, metadata !2753), !dbg !10214
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10215
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !10217
  %tobool = icmp ne i32 %call, 0, !dbg !10217
  br i1 %tobool, label %if.then, label %if.end, !dbg !10218

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10219
  call void @skip_bits(%struct.GetBitContext* %1, i32 4), !dbg !10220
  br label %if.end, !dbg !10220

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10221
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10223
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10224
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10225
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %5, i32 0, i32 17, !dbg !10226
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !10225
  %call1 = call i32 @read_sbr_grid(%struct.AACContext* %2, %struct.SpectralBandReplication* %3, %struct.GetBitContext* %4, %struct.SBRData* %arrayidx), !dbg !10227
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10227
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10228

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10229
  br label %return, !dbg !10229

if.end4:                                          ; preds = %if.end
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10230
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10231
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10232
  %data5 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !10233
  %arrayidx6 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data5, i64 0, i64 0, !dbg !10232
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %6, %struct.GetBitContext* %7, %struct.SBRData* %arrayidx6), !dbg !10234
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10235
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10236
  %11 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10237
  %data7 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %11, i32 0, i32 17, !dbg !10238
  %arrayidx8 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data7, i64 0, i64 0, !dbg !10237
  call void @read_sbr_invf(%struct.SpectralBandReplication* %9, %struct.GetBitContext* %10, %struct.SBRData* %arrayidx8), !dbg !10239
  %12 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10240
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10242
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10243
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10244
  %data9 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 17, !dbg !10245
  %arrayidx10 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data9, i64 0, i64 0, !dbg !10244
  %call11 = call i32 @read_sbr_envelope(%struct.AACContext* %12, %struct.SpectralBandReplication* %13, %struct.GetBitContext* %14, %struct.SBRData* %arrayidx10, i32 0), !dbg !10246
  store i32 %call11, i32* %ret, align 4, !dbg !10247
  %cmp = icmp slt i32 %call11, 0, !dbg !10248
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !10249

if.then12:                                        ; preds = %if.end4
  %16 = load i32, i32* %ret, align 4, !dbg !10250
  store i32 %16, i32* %retval, align 4, !dbg !10251
  br label %return, !dbg !10251

if.end13:                                         ; preds = %if.end4
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10252
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10254
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10255
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10256
  %data14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 17, !dbg !10257
  %arrayidx15 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data14, i64 0, i64 0, !dbg !10256
  %call16 = call i32 @read_sbr_noise(%struct.AACContext* %17, %struct.SpectralBandReplication* %18, %struct.GetBitContext* %19, %struct.SBRData* %arrayidx15, i32 0), !dbg !10258
  store i32 %call16, i32* %ret, align 4, !dbg !10259
  %cmp17 = icmp slt i32 %call16, 0, !dbg !10260
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10261

if.then18:                                        ; preds = %if.end13
  %21 = load i32, i32* %ret, align 4, !dbg !10262
  store i32 %21, i32* %retval, align 4, !dbg !10263
  br label %return, !dbg !10263

if.end19:                                         ; preds = %if.end13
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10264
  %call20 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !10265
  %23 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10266
  %data21 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %23, i32 0, i32 17, !dbg !10267
  %arrayidx22 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data21, i64 0, i64 0, !dbg !10266
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx22, i32 0, i32 1, !dbg !10268
  store i32 %call20, i32* %bs_add_harmonic_flag, align 4, !dbg !10269
  %tobool23 = icmp ne i32 %call20, 0, !dbg !10269
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !10270

if.then24:                                        ; preds = %if.end19
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10271
  %25 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10272
  %data25 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %25, i32 0, i32 17, !dbg !10273
  %arrayidx26 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data25, i64 0, i64 0, !dbg !10272
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx26, i32 0, i32 8, !dbg !10274
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i32 0, i32 0, !dbg !10272
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10275
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 19, !dbg !10276
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !10275
  %27 = load i32, i32* %arrayidx27, align 4, !dbg !10275
  store %struct.GetBitContext* %24, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10277
  store i8* %arraydecay, i8** %vec.addr.i, align 8, !dbg !10277
  store i32 %27, i32* %elements.addr.i, align 4, !dbg !10277
  store i32 0, i32* %i.i, align 4, !dbg !10278
  br label %for.cond.i, !dbg !10280

for.cond.i:                                       ; preds = %for.body.i, %if.then24
  %28 = load i32, i32* %i.i, align 4, !dbg !10281
  %29 = load i32, i32* %elements.addr.i, align 4, !dbg !10284
  %cmp.i = icmp slt i32 %28, %29, !dbg !10285
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !10286

for.body.i:                                       ; preds = %for.cond.i
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10287
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %30) #11, !dbg !10289
  %conv.i = trunc i32 %call.i to i8, !dbg !10289
  %31 = load i32, i32* %i.i, align 4, !dbg !10290
  %idxprom.i = sext i32 %31 to i64, !dbg !10291
  %32 = load i8*, i8** %vec.addr.i, align 8, !dbg !10291
  %arrayidx.i = getelementptr inbounds i8, i8* %32, i64 %idxprom.i, !dbg !10291
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !10292
  %33 = load i32, i32* %i.i, align 4, !dbg !10293
  %inc.i = add nsw i32 %33, 1, !dbg !10293
  store i32 %inc.i, i32* %i.i, align 4, !dbg !10293
  br label %for.cond.i, !dbg !10295, !llvm.loop !10296

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %if.end28, !dbg !10277

if.end28:                                         ; preds = %get_bits1_vector.exit, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !10298
  br label %return, !dbg !10298

return:                                           ; preds = %if.end28, %if.then18, %if.then12, %if.then3
  %34 = load i32, i32* %retval, align 4, !dbg !10299
  ret i32 %34, !dbg !10299
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_channel_pair_element(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb) #3 !dbg !10300 {
entry:
  %gb.addr.i125 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i125, metadata !10194, metadata !2753), !dbg !10301
  %vec.addr.i126 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i126, metadata !10201, metadata !2753), !dbg !10304
  %elements.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i127, metadata !10203, metadata !2753), !dbg !10305
  %i.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i128, metadata !10205, metadata !2753), !dbg !10306
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10194, metadata !2753), !dbg !10307
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10201, metadata !2753), !dbg !10310
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10203, metadata !2753), !dbg !10311
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10205, metadata !2753), !dbg !10312
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10313, metadata !2753), !dbg !10314
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10315, metadata !2753), !dbg !10316
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10317, metadata !2753), !dbg !10318
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10319, metadata !2753), !dbg !10320
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10321
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !10323
  %tobool = icmp ne i32 %call, 0, !dbg !10323
  br i1 %tobool, label %if.then, label %if.end, !dbg !10324

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10325
  call void @skip_bits(%struct.GetBitContext* %1, i32 8), !dbg !10326
  br label %if.end, !dbg !10326

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10327
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !10329
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10330
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 11, !dbg !10331
  store i32 %call1, i32* %bs_coupling, align 16, !dbg !10332
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10332
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10333

if.then3:                                         ; preds = %if.end
  %4 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10334
  %5 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10337
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10338
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10339
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 17, !dbg !10340
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 0, !dbg !10339
  %call4 = call i32 @read_sbr_grid(%struct.AACContext* %4, %struct.SpectralBandReplication* %5, %struct.GetBitContext* %6, %struct.SBRData* %arrayidx), !dbg !10341
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10341
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10342

if.then6:                                         ; preds = %if.then3
  store i32 -1, i32* %retval, align 4, !dbg !10343
  br label %return, !dbg !10343

if.end7:                                          ; preds = %if.then3
  %8 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10344
  %data8 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %8, i32 0, i32 17, !dbg !10345
  %arrayidx9 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data8, i64 0, i64 1, !dbg !10344
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10346
  %data10 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 17, !dbg !10347
  %arrayidx11 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data10, i64 0, i64 0, !dbg !10346
  call void @copy_sbr_grid(%struct.SBRData* %arrayidx9, %struct.SBRData* %arrayidx11), !dbg !10348
  %10 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10349
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10350
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10351
  %data12 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 17, !dbg !10352
  %arrayidx13 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data12, i64 0, i64 0, !dbg !10351
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %10, %struct.GetBitContext* %11, %struct.SBRData* %arrayidx13), !dbg !10353
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10354
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10355
  %15 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10356
  %data14 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %15, i32 0, i32 17, !dbg !10357
  %arrayidx15 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data14, i64 0, i64 1, !dbg !10356
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %13, %struct.GetBitContext* %14, %struct.SBRData* %arrayidx15), !dbg !10358
  %16 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10359
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10360
  %18 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10361
  %data16 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %18, i32 0, i32 17, !dbg !10362
  %arrayidx17 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data16, i64 0, i64 0, !dbg !10361
  call void @read_sbr_invf(%struct.SpectralBandReplication* %16, %struct.GetBitContext* %17, %struct.SBRData* %arrayidx17), !dbg !10363
  %19 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10364
  %data18 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %19, i32 0, i32 17, !dbg !10365
  %arrayidx19 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data18, i64 0, i64 1, !dbg !10364
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx19, i32 0, i32 7, !dbg !10366
  %arrayidx20 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 1, !dbg !10364
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx20, i32 0, i32 0, !dbg !10367
  %20 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10368
  %data21 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %20, i32 0, i32 17, !dbg !10369
  %arrayidx22 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data21, i64 0, i64 1, !dbg !10368
  %bs_invf_mode23 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx22, i32 0, i32 7, !dbg !10370
  %arrayidx24 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode23, i64 0, i64 0, !dbg !10368
  %arraydecay25 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx24, i32 0, i32 0, !dbg !10367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay25, i64 5, i32 1, i1 false), !dbg !10367
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10371
  %data26 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 17, !dbg !10372
  %arrayidx27 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data26, i64 0, i64 1, !dbg !10371
  %bs_invf_mode28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx27, i32 0, i32 7, !dbg !10373
  %arrayidx29 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode28, i64 0, i64 0, !dbg !10371
  %arraydecay30 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx29, i32 0, i32 0, !dbg !10374
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10375
  %data31 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 17, !dbg !10376
  %arrayidx32 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data31, i64 0, i64 0, !dbg !10375
  %bs_invf_mode33 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx32, i32 0, i32 7, !dbg !10377
  %arrayidx34 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode33, i64 0, i64 0, !dbg !10375
  %arraydecay35 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx34, i32 0, i32 0, !dbg !10374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay30, i8* %arraydecay35, i64 5, i32 1, i1 false), !dbg !10374
  %23 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10378
  %24 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10380
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10381
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10382
  %data36 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 17, !dbg !10383
  %arrayidx37 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data36, i64 0, i64 0, !dbg !10382
  %call38 = call i32 @read_sbr_envelope(%struct.AACContext* %23, %struct.SpectralBandReplication* %24, %struct.GetBitContext* %25, %struct.SBRData* %arrayidx37, i32 0), !dbg !10384
  store i32 %call38, i32* %ret, align 4, !dbg !10385
  %cmp = icmp slt i32 %call38, 0, !dbg !10386
  br i1 %cmp, label %if.then39, label %if.end40, !dbg !10387

if.then39:                                        ; preds = %if.end7
  %27 = load i32, i32* %ret, align 4, !dbg !10388
  store i32 %27, i32* %retval, align 4, !dbg !10389
  br label %return, !dbg !10389

if.end40:                                         ; preds = %if.end7
  %28 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10390
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10392
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10393
  %31 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10394
  %data41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %31, i32 0, i32 17, !dbg !10395
  %arrayidx42 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data41, i64 0, i64 0, !dbg !10394
  %call43 = call i32 @read_sbr_noise(%struct.AACContext* %28, %struct.SpectralBandReplication* %29, %struct.GetBitContext* %30, %struct.SBRData* %arrayidx42, i32 0), !dbg !10396
  store i32 %call43, i32* %ret, align 4, !dbg !10397
  %cmp44 = icmp slt i32 %call43, 0, !dbg !10398
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !10399

if.then45:                                        ; preds = %if.end40
  %32 = load i32, i32* %ret, align 4, !dbg !10400
  store i32 %32, i32* %retval, align 4, !dbg !10401
  br label %return, !dbg !10401

if.end46:                                         ; preds = %if.end40
  %33 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10402
  %34 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10404
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10405
  %36 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10406
  %data47 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %36, i32 0, i32 17, !dbg !10407
  %arrayidx48 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data47, i64 0, i64 1, !dbg !10406
  %call49 = call i32 @read_sbr_envelope(%struct.AACContext* %33, %struct.SpectralBandReplication* %34, %struct.GetBitContext* %35, %struct.SBRData* %arrayidx48, i32 1), !dbg !10408
  store i32 %call49, i32* %ret, align 4, !dbg !10409
  %cmp50 = icmp slt i32 %call49, 0, !dbg !10410
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !10411

if.then51:                                        ; preds = %if.end46
  %37 = load i32, i32* %ret, align 4, !dbg !10412
  store i32 %37, i32* %retval, align 4, !dbg !10413
  br label %return, !dbg !10413

if.end52:                                         ; preds = %if.end46
  %38 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10414
  %39 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10416
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10417
  %41 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10418
  %data53 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %41, i32 0, i32 17, !dbg !10419
  %arrayidx54 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data53, i64 0, i64 1, !dbg !10418
  %call55 = call i32 @read_sbr_noise(%struct.AACContext* %38, %struct.SpectralBandReplication* %39, %struct.GetBitContext* %40, %struct.SBRData* %arrayidx54, i32 1), !dbg !10420
  store i32 %call55, i32* %ret, align 4, !dbg !10421
  %cmp56 = icmp slt i32 %call55, 0, !dbg !10422
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !10423

if.then57:                                        ; preds = %if.end52
  %42 = load i32, i32* %ret, align 4, !dbg !10424
  store i32 %42, i32* %retval, align 4, !dbg !10425
  br label %return, !dbg !10425

if.end58:                                         ; preds = %if.end52
  br label %if.end101, !dbg !10426

if.else:                                          ; preds = %if.end
  %43 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10427
  %44 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10430
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10431
  %46 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10432
  %data59 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %46, i32 0, i32 17, !dbg !10433
  %arrayidx60 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data59, i64 0, i64 0, !dbg !10432
  %call61 = call i32 @read_sbr_grid(%struct.AACContext* %43, %struct.SpectralBandReplication* %44, %struct.GetBitContext* %45, %struct.SBRData* %arrayidx60), !dbg !10434
  %tobool62 = icmp ne i32 %call61, 0, !dbg !10434
  br i1 %tobool62, label %if.then67, label %lor.lhs.false, !dbg !10435

lor.lhs.false:                                    ; preds = %if.else
  %47 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10436
  %48 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10437
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10438
  %50 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10439
  %data63 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %50, i32 0, i32 17, !dbg !10440
  %arrayidx64 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data63, i64 0, i64 1, !dbg !10439
  %call65 = call i32 @read_sbr_grid(%struct.AACContext* %47, %struct.SpectralBandReplication* %48, %struct.GetBitContext* %49, %struct.SBRData* %arrayidx64), !dbg !10441
  %tobool66 = icmp ne i32 %call65, 0, !dbg !10441
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !10442

if.then67:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -1, i32* %retval, align 4, !dbg !10444
  br label %return, !dbg !10444

if.end68:                                         ; preds = %lor.lhs.false
  %51 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10445
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10446
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10447
  %data69 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %53, i32 0, i32 17, !dbg !10448
  %arrayidx70 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data69, i64 0, i64 0, !dbg !10447
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %51, %struct.GetBitContext* %52, %struct.SBRData* %arrayidx70), !dbg !10449
  %54 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10450
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10451
  %56 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10452
  %data71 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %56, i32 0, i32 17, !dbg !10453
  %arrayidx72 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data71, i64 0, i64 1, !dbg !10452
  call void @read_sbr_dtdf(%struct.SpectralBandReplication* %54, %struct.GetBitContext* %55, %struct.SBRData* %arrayidx72), !dbg !10454
  %57 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10455
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10456
  %59 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10457
  %data73 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %59, i32 0, i32 17, !dbg !10458
  %arrayidx74 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data73, i64 0, i64 0, !dbg !10457
  call void @read_sbr_invf(%struct.SpectralBandReplication* %57, %struct.GetBitContext* %58, %struct.SBRData* %arrayidx74), !dbg !10459
  %60 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10460
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10461
  %62 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10462
  %data75 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %62, i32 0, i32 17, !dbg !10463
  %arrayidx76 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data75, i64 0, i64 1, !dbg !10462
  call void @read_sbr_invf(%struct.SpectralBandReplication* %60, %struct.GetBitContext* %61, %struct.SBRData* %arrayidx76), !dbg !10464
  %63 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10465
  %64 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10467
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10468
  %66 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10469
  %data77 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %66, i32 0, i32 17, !dbg !10470
  %arrayidx78 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data77, i64 0, i64 0, !dbg !10469
  %call79 = call i32 @read_sbr_envelope(%struct.AACContext* %63, %struct.SpectralBandReplication* %64, %struct.GetBitContext* %65, %struct.SBRData* %arrayidx78, i32 0), !dbg !10471
  store i32 %call79, i32* %ret, align 4, !dbg !10472
  %cmp80 = icmp slt i32 %call79, 0, !dbg !10473
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !10474

if.then81:                                        ; preds = %if.end68
  %67 = load i32, i32* %ret, align 4, !dbg !10475
  store i32 %67, i32* %retval, align 4, !dbg !10476
  br label %return, !dbg !10476

if.end82:                                         ; preds = %if.end68
  %68 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10477
  %69 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10479
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10480
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10481
  %data83 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 17, !dbg !10482
  %arrayidx84 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data83, i64 0, i64 1, !dbg !10481
  %call85 = call i32 @read_sbr_envelope(%struct.AACContext* %68, %struct.SpectralBandReplication* %69, %struct.GetBitContext* %70, %struct.SBRData* %arrayidx84, i32 1), !dbg !10483
  store i32 %call85, i32* %ret, align 4, !dbg !10484
  %cmp86 = icmp slt i32 %call85, 0, !dbg !10485
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !10486

if.then87:                                        ; preds = %if.end82
  %72 = load i32, i32* %ret, align 4, !dbg !10487
  store i32 %72, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

if.end88:                                         ; preds = %if.end82
  %73 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10489
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10491
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10492
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10493
  %data89 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 17, !dbg !10494
  %arrayidx90 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data89, i64 0, i64 0, !dbg !10493
  %call91 = call i32 @read_sbr_noise(%struct.AACContext* %73, %struct.SpectralBandReplication* %74, %struct.GetBitContext* %75, %struct.SBRData* %arrayidx90, i32 0), !dbg !10495
  store i32 %call91, i32* %ret, align 4, !dbg !10496
  %cmp92 = icmp slt i32 %call91, 0, !dbg !10497
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !10498

if.then93:                                        ; preds = %if.end88
  %77 = load i32, i32* %ret, align 4, !dbg !10499
  store i32 %77, i32* %retval, align 4, !dbg !10500
  br label %return, !dbg !10500

if.end94:                                         ; preds = %if.end88
  %78 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10501
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10503
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10504
  %81 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10505
  %data95 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %81, i32 0, i32 17, !dbg !10506
  %arrayidx96 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data95, i64 0, i64 1, !dbg !10505
  %call97 = call i32 @read_sbr_noise(%struct.AACContext* %78, %struct.SpectralBandReplication* %79, %struct.GetBitContext* %80, %struct.SBRData* %arrayidx96, i32 1), !dbg !10507
  store i32 %call97, i32* %ret, align 4, !dbg !10508
  %cmp98 = icmp slt i32 %call97, 0, !dbg !10509
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !10510

if.then99:                                        ; preds = %if.end94
  %82 = load i32, i32* %ret, align 4, !dbg !10511
  store i32 %82, i32* %retval, align 4, !dbg !10512
  br label %return, !dbg !10512

if.end100:                                        ; preds = %if.end94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end58
  %83 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10513
  %call102 = call i32 @get_bits1(%struct.GetBitContext* %83), !dbg !10514
  %84 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10515
  %data103 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %84, i32 0, i32 17, !dbg !10516
  %arrayidx104 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data103, i64 0, i64 0, !dbg !10515
  %bs_add_harmonic_flag = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx104, i32 0, i32 1, !dbg !10517
  store i32 %call102, i32* %bs_add_harmonic_flag, align 4, !dbg !10518
  %tobool105 = icmp ne i32 %call102, 0, !dbg !10518
  br i1 %tobool105, label %if.then106, label %if.end111, !dbg !10519

if.then106:                                       ; preds = %if.end101
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10520
  %86 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10521
  %data107 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %86, i32 0, i32 17, !dbg !10522
  %arrayidx108 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data107, i64 0, i64 0, !dbg !10521
  %bs_add_harmonic = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx108, i32 0, i32 8, !dbg !10523
  %arraydecay109 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic, i32 0, i32 0, !dbg !10521
  %87 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10524
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %87, i32 0, i32 19, !dbg !10525
  %arrayidx110 = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !10524
  %88 = load i32, i32* %arrayidx110, align 4, !dbg !10524
  store %struct.GetBitContext* %85, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10526
  store i8* %arraydecay109, i8** %vec.addr.i, align 8, !dbg !10526
  store i32 %88, i32* %elements.addr.i, align 4, !dbg !10526
  store i32 0, i32* %i.i, align 4, !dbg !10527
  br label %for.cond.i, !dbg !10528

for.cond.i:                                       ; preds = %for.body.i, %if.then106
  %89 = load i32, i32* %i.i, align 4, !dbg !10529
  %90 = load i32, i32* %elements.addr.i, align 4, !dbg !10530
  %cmp.i = icmp slt i32 %89, %90, !dbg !10531
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !10532

for.body.i:                                       ; preds = %for.cond.i
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10533
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %91) #11, !dbg !10534
  %conv.i = trunc i32 %call.i to i8, !dbg !10534
  %92 = load i32, i32* %i.i, align 4, !dbg !10535
  %idxprom.i = sext i32 %92 to i64, !dbg !10536
  %93 = load i8*, i8** %vec.addr.i, align 8, !dbg !10536
  %arrayidx.i = getelementptr inbounds i8, i8* %93, i64 %idxprom.i, !dbg !10536
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !10537
  %94 = load i32, i32* %i.i, align 4, !dbg !10538
  %inc.i = add nsw i32 %94, 1, !dbg !10538
  store i32 %inc.i, i32* %i.i, align 4, !dbg !10538
  br label %for.cond.i, !dbg !10539, !llvm.loop !10296

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %if.end111, !dbg !10526

if.end111:                                        ; preds = %get_bits1_vector.exit, %if.end101
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10540
  %call112 = call i32 @get_bits1(%struct.GetBitContext* %95), !dbg !10541
  %96 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10542
  %data113 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %96, i32 0, i32 17, !dbg !10543
  %arrayidx114 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data113, i64 0, i64 1, !dbg !10542
  %bs_add_harmonic_flag115 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx114, i32 0, i32 1, !dbg !10544
  store i32 %call112, i32* %bs_add_harmonic_flag115, align 4, !dbg !10545
  %tobool116 = icmp ne i32 %call112, 0, !dbg !10545
  br i1 %tobool116, label %if.then117, label %if.end124, !dbg !10546

if.then117:                                       ; preds = %if.end111
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10547
  %98 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10548
  %data118 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %98, i32 0, i32 17, !dbg !10549
  %arrayidx119 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data118, i64 0, i64 1, !dbg !10548
  %bs_add_harmonic120 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx119, i32 0, i32 8, !dbg !10550
  %arraydecay121 = getelementptr inbounds [48 x i8], [48 x i8]* %bs_add_harmonic120, i32 0, i32 0, !dbg !10548
  %99 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10551
  %n122 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %99, i32 0, i32 19, !dbg !10552
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %n122, i64 0, i64 1, !dbg !10551
  %100 = load i32, i32* %arrayidx123, align 4, !dbg !10551
  store %struct.GetBitContext* %97, %struct.GetBitContext** %gb.addr.i125, align 8, !dbg !10553
  store i8* %arraydecay121, i8** %vec.addr.i126, align 8, !dbg !10553
  store i32 %100, i32* %elements.addr.i127, align 4, !dbg !10553
  store i32 0, i32* %i.i128, align 4, !dbg !10554
  br label %for.cond.i130, !dbg !10555

for.cond.i130:                                    ; preds = %for.body.i135, %if.then117
  %101 = load i32, i32* %i.i128, align 4, !dbg !10556
  %102 = load i32, i32* %elements.addr.i127, align 4, !dbg !10557
  %cmp.i129 = icmp slt i32 %101, %102, !dbg !10558
  br i1 %cmp.i129, label %for.body.i135, label %get_bits1_vector.exit137, !dbg !10559

for.body.i135:                                    ; preds = %for.cond.i130
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i125, align 8, !dbg !10560
  %call.i131 = call i32 @get_bits1(%struct.GetBitContext* %103) #11, !dbg !10561
  %conv.i132 = trunc i32 %call.i131 to i8, !dbg !10561
  %104 = load i32, i32* %i.i128, align 4, !dbg !10562
  %idxprom.i133 = sext i32 %104 to i64, !dbg !10563
  %105 = load i8*, i8** %vec.addr.i126, align 8, !dbg !10563
  %arrayidx.i134 = getelementptr inbounds i8, i8* %105, i64 %idxprom.i133, !dbg !10563
  store i8 %conv.i132, i8* %arrayidx.i134, align 1, !dbg !10564
  %106 = load i32, i32* %i.i128, align 4, !dbg !10565
  %inc.i136 = add nsw i32 %106, 1, !dbg !10565
  store i32 %inc.i136, i32* %i.i128, align 4, !dbg !10565
  br label %for.cond.i130, !dbg !10566, !llvm.loop !10296

get_bits1_vector.exit137:                         ; preds = %for.cond.i130
  br label %if.end124, !dbg !10553

if.end124:                                        ; preds = %get_bits1_vector.exit137, %if.end111
  store i32 0, i32* %retval, align 4, !dbg !10567
  br label %return, !dbg !10567

return:                                           ; preds = %if.end124, %if.then99, %if.then93, %if.then87, %if.then81, %if.then67, %if.then57, %if.then51, %if.then45, %if.then39, %if.then6
  %107 = load i32, i32* %retval, align 4, !dbg !10568
  ret i32 %107, !dbg !10568
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_extension(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, i32 %bs_extension_id, i32* %num_bits_left) #3 !dbg !10569 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %bs_extension_id.addr = alloca i32, align 4
  %num_bits_left.addr = alloca i32*, align 8
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10572, metadata !2753), !dbg !10573
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10574, metadata !2753), !dbg !10575
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10576, metadata !2753), !dbg !10577
  store i32 %bs_extension_id, i32* %bs_extension_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_extension_id.addr, metadata !10578, metadata !2753), !dbg !10579
  store i32* %num_bits_left, i32** %num_bits_left.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_bits_left.addr, metadata !10580, metadata !2753), !dbg !10581
  %0 = load i32, i32* %bs_extension_id.addr, align 4, !dbg !10582
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !10583

sw.bb:                                            ; preds = %entry
  %1 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10584
  %oc = getelementptr inbounds %struct.AACContext, %struct.AACContext* %1, i32 0, i32 24, !dbg !10587
  %arrayidx = getelementptr inbounds [2 x %struct.OutputConfiguration], [2 x %struct.OutputConfiguration]* %oc, i64 0, i64 1, !dbg !10584
  %m4ac = getelementptr inbounds %struct.OutputConfiguration, %struct.OutputConfiguration* %arrayidx, i32 0, i32 0, !dbg !10588
  %ps = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 10, !dbg !10589
  %2 = load i32, i32* %ps, align 8, !dbg !10589
  %tobool = icmp ne i32 %2, 0, !dbg !10584
  br i1 %tobool, label %if.else, label %if.then, !dbg !10590

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10591
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %3, i32 0, i32 1, !dbg !10593
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10593
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !10591
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.39, i32 0, i32 0)), !dbg !10594
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10595
  %7 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10596
  %8 = load i32, i32* %7, align 4, !dbg !10597
  call void @skip_bits_long(%struct.GetBitContext* %6, i32 %8), !dbg !10598
  %9 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10599
  store i32 0, i32* %9, align 4, !dbg !10600
  br label %if.end, !dbg !10601

if.else:                                          ; preds = %sw.bb
  %10 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10602
  %avctx1 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %10, i32 0, i32 1, !dbg !10604
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !10604
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10605
  %13 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10606
  %ps2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %13, i32 0, i32 18, !dbg !10607
  %14 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10608
  %15 = load i32, i32* %14, align 4, !dbg !10609
  %call = call i32 @ff_ps_read_data(%struct.AVCodecContext* %11, %struct.GetBitContext* %12, %struct.PSContext* %ps2, i32 %15), !dbg !10610
  %16 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10611
  %17 = load i32, i32* %16, align 4, !dbg !10612
  %sub = sub nsw i32 %17, %call, !dbg !10612
  store i32 %sub, i32* %16, align 4, !dbg !10612
  %18 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10613
  %avctx3 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %18, i32 0, i32 1, !dbg !10614
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !10614
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 153, !dbg !10615
  store i32 28, i32* %profile, align 4, !dbg !10616
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !10617

sw.default:                                       ; preds = %entry
  %20 = load i32, i32* %bs_extension_id.addr, align 4, !dbg !10618
  %tobool4 = icmp ne i32 %20, 0, !dbg !10618
  br i1 %tobool4, label %if.then8, label %lor.lhs.false, !dbg !10620

lor.lhs.false:                                    ; preds = %sw.default
  %21 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10621
  %22 = load i32, i32* %21, align 4, !dbg !10623
  %cmp = icmp sgt i32 %22, 16, !dbg !10624
  br i1 %cmp, label %if.then8, label %lor.lhs.false5, !dbg !10625

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10626
  %24 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10628
  %25 = load i32, i32* %24, align 4, !dbg !10629
  %call6 = call i32 @show_bits(%struct.GetBitContext* %23, i32 %25), !dbg !10630
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10630
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10631

if.then8:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %sw.default
  %26 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10632
  %avctx9 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %26, i32 0, i32 1, !dbg !10633
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !10633
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !10632
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i32 0, i32 0)), !dbg !10634
  br label %if.end10, !dbg !10634

if.end10:                                         ; preds = %if.then8, %lor.lhs.false5
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10635
  %30 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10636
  %31 = load i32, i32* %30, align 4, !dbg !10637
  call void @skip_bits_long(%struct.GetBitContext* %29, i32 %31), !dbg !10638
  %32 = load i32*, i32** %num_bits_left.addr, align 8, !dbg !10639
  store i32 0, i32* %32, align 4, !dbg !10640
  br label %sw.epilog, !dbg !10641

sw.epilog:                                        ; preds = %if.end10, %if.end
  ret void, !dbg !10642
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_grid(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !10643 {
entry:
  %gb.addr.i343 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i343, metadata !10194, metadata !2753), !dbg !10646
  %vec.addr.i344 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i344, metadata !10201, metadata !2753), !dbg !10649
  %elements.addr.i345 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i345, metadata !10203, metadata !2753), !dbg !10650
  %i.i346 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i346, metadata !10205, metadata !2753), !dbg !10651
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10194, metadata !2753), !dbg !10652
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10201, metadata !2753), !dbg !10654
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10203, metadata !2753), !dbg !10655
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10205, metadata !2753), !dbg !10656
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  %bs_pointer = alloca i32, align 4
  %abs_bord_trail = alloca i32, align 4
  %num_rel_lead = alloca i32, align 4
  %num_rel_trail = alloca i32, align 4
  %bs_num_env_old = alloca i32, align 4
  %bs_frame_class = alloca i32, align 4
  %bs_num_env1 = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !10657, metadata !2753), !dbg !10658
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !10659, metadata !2753), !dbg !10660
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10661, metadata !2753), !dbg !10662
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !10663, metadata !2753), !dbg !10664
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10665, metadata !2753), !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %bs_pointer, metadata !10667, metadata !2753), !dbg !10668
  store i32 0, i32* %bs_pointer, align 4, !dbg !10668
  call void @llvm.dbg.declare(metadata i32* %abs_bord_trail, metadata !10669, metadata !2753), !dbg !10670
  store i32 16, i32* %abs_bord_trail, align 4, !dbg !10670
  call void @llvm.dbg.declare(metadata i32* %num_rel_lead, metadata !10671, metadata !2753), !dbg !10672
  call void @llvm.dbg.declare(metadata i32* %num_rel_trail, metadata !10673, metadata !2753), !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %bs_num_env_old, metadata !10675, metadata !2753), !dbg !10676
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10677
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 2, !dbg !10678
  %1 = load i32, i32* %bs_num_env, align 8, !dbg !10678
  store i32 %1, i32* %bs_num_env_old, align 4, !dbg !10676
  call void @llvm.dbg.declare(metadata i32* %bs_frame_class, metadata !10679, metadata !2753), !dbg !10680
  call void @llvm.dbg.declare(metadata i32* %bs_num_env1, metadata !10681, metadata !2753), !dbg !10682
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10683
  %bs_num_env2 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !10684
  %3 = load i32, i32* %bs_num_env2, align 8, !dbg !10684
  %idxprom = zext i32 %3 to i64, !dbg !10685
  %4 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10685
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 3, !dbg !10686
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !10685
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10685
  %6 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10687
  %bs_freq_res3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %6, i32 0, i32 3, !dbg !10688
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res3, i64 0, i64 0, !dbg !10687
  store i8 %5, i8* %arrayidx4, align 4, !dbg !10689
  %7 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !10690
  %bs_amp_res_header = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %7, i32 0, i32 6, !dbg !10691
  %8 = load i32, i32* %bs_amp_res_header, align 4, !dbg !10691
  %9 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10692
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 9, !dbg !10693
  store i32 %8, i32* %bs_amp_res, align 4, !dbg !10694
  %10 = load i32, i32* %bs_num_env_old, align 4, !dbg !10695
  %idxprom5 = zext i32 %10 to i64, !dbg !10696
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10696
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 26, !dbg !10697
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom5, !dbg !10696
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !10696
  %13 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10698
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %13, i32 0, i32 27, !dbg !10699
  store i8 %12, i8* %t_env_num_env_old, align 4, !dbg !10700
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10701
  %call = call i32 @get_bits(%struct.GetBitContext* %14, i32 2), !dbg !10702
  store i32 %call, i32* %bs_frame_class, align 4, !dbg !10703
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb53
    i32 2, label %sw.bb109
    i32 3, label %sw.bb149
  ], !dbg !10704

sw.bb:                                            ; preds = %entry
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10705
  %call7 = call i32 @get_bits(%struct.GetBitContext* %15, i32 2), !dbg !10706
  %shl = shl i32 1, %call7, !dbg !10707
  store i32 %shl, i32* %bs_num_env1, align 4, !dbg !10708
  %16 = load i32, i32* %bs_num_env1, align 4, !dbg !10709
  %cmp = icmp sgt i32 %16, 4, !dbg !10711
  br i1 %cmp, label %if.then, label %if.end, !dbg !10712

if.then:                                          ; preds = %sw.bb
  %17 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10713
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %17, i32 0, i32 1, !dbg !10715
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10715
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !10713
  %20 = load i32, i32* %bs_num_env1, align 4, !dbg !10716
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i32 0, i32 0), i32 %20), !dbg !10717
  store i32 -1, i32* %retval, align 4, !dbg !10718
  br label %return, !dbg !10718

if.end:                                           ; preds = %sw.bb
  %21 = load i32, i32* %bs_num_env1, align 4, !dbg !10719
  %22 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10720
  %bs_num_env8 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %22, i32 0, i32 2, !dbg !10721
  store i32 %21, i32* %bs_num_env8, align 8, !dbg !10722
  %23 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10723
  %bs_num_env9 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %23, i32 0, i32 2, !dbg !10724
  %24 = load i32, i32* %bs_num_env9, align 8, !dbg !10724
  %sub = sub i32 %24, 1, !dbg !10725
  store i32 %sub, i32* %num_rel_lead, align 4, !dbg !10726
  %25 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10727
  %bs_num_env10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %25, i32 0, i32 2, !dbg !10729
  %26 = load i32, i32* %bs_num_env10, align 8, !dbg !10729
  %cmp11 = icmp eq i32 %26, 1, !dbg !10730
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10731

if.then12:                                        ; preds = %if.end
  %27 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10732
  %bs_amp_res13 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %27, i32 0, i32 9, !dbg !10733
  store i32 0, i32* %bs_amp_res13, align 4, !dbg !10734
  br label %if.end14, !dbg !10732

if.end14:                                         ; preds = %if.then12, %if.end
  %28 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10735
  %t_env15 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %28, i32 0, i32 26, !dbg !10736
  %arrayidx16 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env15, i64 0, i64 0, !dbg !10735
  store i8 0, i8* %arrayidx16, align 4, !dbg !10737
  %29 = load i32, i32* %abs_bord_trail, align 4, !dbg !10738
  %conv = trunc i32 %29 to i8, !dbg !10738
  %30 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10739
  %bs_num_env17 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 2, !dbg !10740
  %31 = load i32, i32* %bs_num_env17, align 8, !dbg !10740
  %idxprom18 = zext i32 %31 to i64, !dbg !10741
  %32 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10741
  %t_env19 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %32, i32 0, i32 26, !dbg !10742
  %arrayidx20 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env19, i64 0, i64 %idxprom18, !dbg !10741
  store i8 %conv, i8* %arrayidx20, align 1, !dbg !10743
  %33 = load i32, i32* %abs_bord_trail, align 4, !dbg !10744
  %34 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10745
  %bs_num_env21 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %34, i32 0, i32 2, !dbg !10746
  %35 = load i32, i32* %bs_num_env21, align 8, !dbg !10746
  %shr = lshr i32 %35, 1, !dbg !10747
  %add = add i32 %33, %shr, !dbg !10748
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10749
  %bs_num_env22 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 2, !dbg !10750
  %37 = load i32, i32* %bs_num_env22, align 8, !dbg !10750
  %div = udiv i32 %add, %37, !dbg !10751
  store i32 %div, i32* %abs_bord_trail, align 4, !dbg !10752
  store i32 0, i32* %i, align 4, !dbg !10753
  br label %for.cond, !dbg !10755

for.cond:                                         ; preds = %for.inc, %if.end14
  %38 = load i32, i32* %i, align 4, !dbg !10756
  %39 = load i32, i32* %num_rel_lead, align 4, !dbg !10759
  %cmp23 = icmp slt i32 %38, %39, !dbg !10760
  br i1 %cmp23, label %for.body, label %for.end, !dbg !10761

for.body:                                         ; preds = %for.cond
  %40 = load i32, i32* %i, align 4, !dbg !10762
  %idxprom25 = sext i32 %40 to i64, !dbg !10763
  %41 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10763
  %t_env26 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %41, i32 0, i32 26, !dbg !10764
  %arrayidx27 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env26, i64 0, i64 %idxprom25, !dbg !10763
  %42 = load i8, i8* %arrayidx27, align 1, !dbg !10763
  %conv28 = zext i8 %42 to i32, !dbg !10763
  %43 = load i32, i32* %abs_bord_trail, align 4, !dbg !10765
  %add29 = add nsw i32 %conv28, %43, !dbg !10766
  %conv30 = trunc i32 %add29 to i8, !dbg !10763
  %44 = load i32, i32* %i, align 4, !dbg !10767
  %add31 = add nsw i32 %44, 1, !dbg !10768
  %idxprom32 = sext i32 %add31 to i64, !dbg !10769
  %45 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10769
  %t_env33 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %45, i32 0, i32 26, !dbg !10770
  %arrayidx34 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env33, i64 0, i64 %idxprom32, !dbg !10769
  store i8 %conv30, i8* %arrayidx34, align 1, !dbg !10771
  br label %for.inc, !dbg !10769

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !10772
  %inc = add nsw i32 %46, 1, !dbg !10772
  store i32 %inc, i32* %i, align 4, !dbg !10772
  br label %for.cond, !dbg !10774, !llvm.loop !10775

for.end:                                          ; preds = %for.cond
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10777
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !10778
  %conv36 = trunc i32 %call35 to i8, !dbg !10778
  %48 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10779
  %bs_freq_res37 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %48, i32 0, i32 3, !dbg !10780
  %arrayidx38 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res37, i64 0, i64 1, !dbg !10779
  store i8 %conv36, i8* %arrayidx38, align 1, !dbg !10781
  store i32 1, i32* %i, align 4, !dbg !10782
  br label %for.cond39, !dbg !10784

for.cond39:                                       ; preds = %for.inc50, %for.end
  %49 = load i32, i32* %i, align 4, !dbg !10785
  %50 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10788
  %bs_num_env40 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %50, i32 0, i32 2, !dbg !10789
  %51 = load i32, i32* %bs_num_env40, align 8, !dbg !10789
  %cmp41 = icmp ult i32 %49, %51, !dbg !10790
  br i1 %cmp41, label %for.body43, label %for.end52, !dbg !10791

for.body43:                                       ; preds = %for.cond39
  %52 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10792
  %bs_freq_res44 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %52, i32 0, i32 3, !dbg !10793
  %arrayidx45 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res44, i64 0, i64 1, !dbg !10792
  %53 = load i8, i8* %arrayidx45, align 1, !dbg !10792
  %54 = load i32, i32* %i, align 4, !dbg !10794
  %add46 = add nsw i32 %54, 1, !dbg !10795
  %idxprom47 = sext i32 %add46 to i64, !dbg !10796
  %55 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10796
  %bs_freq_res48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %55, i32 0, i32 3, !dbg !10797
  %arrayidx49 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res48, i64 0, i64 %idxprom47, !dbg !10796
  store i8 %53, i8* %arrayidx49, align 1, !dbg !10798
  br label %for.inc50, !dbg !10796

for.inc50:                                        ; preds = %for.body43
  %56 = load i32, i32* %i, align 4, !dbg !10799
  %inc51 = add nsw i32 %56, 1, !dbg !10799
  store i32 %inc51, i32* %i, align 4, !dbg !10799
  br label %for.cond39, !dbg !10801, !llvm.loop !10802

for.end52:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !10804

sw.bb53:                                          ; preds = %entry
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10805
  %call54 = call i32 @get_bits(%struct.GetBitContext* %57, i32 2), !dbg !10806
  %58 = load i32, i32* %abs_bord_trail, align 4, !dbg !10807
  %add55 = add i32 %58, %call54, !dbg !10807
  store i32 %add55, i32* %abs_bord_trail, align 4, !dbg !10807
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10808
  %call56 = call i32 @get_bits(%struct.GetBitContext* %59, i32 2), !dbg !10809
  store i32 %call56, i32* %num_rel_trail, align 4, !dbg !10810
  %60 = load i32, i32* %num_rel_trail, align 4, !dbg !10811
  %add57 = add nsw i32 %60, 1, !dbg !10812
  %61 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10813
  %bs_num_env58 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %61, i32 0, i32 2, !dbg !10814
  store i32 %add57, i32* %bs_num_env58, align 8, !dbg !10815
  %62 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10816
  %t_env59 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %62, i32 0, i32 26, !dbg !10817
  %arrayidx60 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env59, i64 0, i64 0, !dbg !10816
  store i8 0, i8* %arrayidx60, align 4, !dbg !10818
  %63 = load i32, i32* %abs_bord_trail, align 4, !dbg !10819
  %conv61 = trunc i32 %63 to i8, !dbg !10819
  %64 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10820
  %bs_num_env62 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %64, i32 0, i32 2, !dbg !10821
  %65 = load i32, i32* %bs_num_env62, align 8, !dbg !10821
  %idxprom63 = zext i32 %65 to i64, !dbg !10822
  %66 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10822
  %t_env64 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %66, i32 0, i32 26, !dbg !10823
  %arrayidx65 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env64, i64 0, i64 %idxprom63, !dbg !10822
  store i8 %conv61, i8* %arrayidx65, align 1, !dbg !10824
  store i32 0, i32* %i, align 4, !dbg !10825
  br label %for.cond66, !dbg !10827

for.cond66:                                       ; preds = %for.inc86, %sw.bb53
  %67 = load i32, i32* %i, align 4, !dbg !10828
  %68 = load i32, i32* %num_rel_trail, align 4, !dbg !10831
  %cmp67 = icmp slt i32 %67, %68, !dbg !10832
  br i1 %cmp67, label %for.body69, label %for.end88, !dbg !10833

for.body69:                                       ; preds = %for.cond66
  %69 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10834
  %bs_num_env70 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %69, i32 0, i32 2, !dbg !10835
  %70 = load i32, i32* %bs_num_env70, align 8, !dbg !10835
  %71 = load i32, i32* %i, align 4, !dbg !10836
  %sub71 = sub i32 %70, %71, !dbg !10837
  %idxprom72 = zext i32 %sub71 to i64, !dbg !10838
  %72 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10838
  %t_env73 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %72, i32 0, i32 26, !dbg !10839
  %arrayidx74 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env73, i64 0, i64 %idxprom72, !dbg !10838
  %73 = load i8, i8* %arrayidx74, align 1, !dbg !10838
  %conv75 = zext i8 %73 to i32, !dbg !10838
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10840
  %call76 = call i32 @get_bits(%struct.GetBitContext* %74, i32 2), !dbg !10841
  %mul = mul i32 2, %call76, !dbg !10842
  %sub77 = sub i32 %conv75, %mul, !dbg !10843
  %sub78 = sub i32 %sub77, 2, !dbg !10844
  %conv79 = trunc i32 %sub78 to i8, !dbg !10838
  %75 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10845
  %bs_num_env80 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %75, i32 0, i32 2, !dbg !10846
  %76 = load i32, i32* %bs_num_env80, align 8, !dbg !10846
  %sub81 = sub i32 %76, 1, !dbg !10847
  %77 = load i32, i32* %i, align 4, !dbg !10848
  %sub82 = sub i32 %sub81, %77, !dbg !10849
  %idxprom83 = zext i32 %sub82 to i64, !dbg !10850
  %78 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10850
  %t_env84 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %78, i32 0, i32 26, !dbg !10851
  %arrayidx85 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env84, i64 0, i64 %idxprom83, !dbg !10850
  store i8 %conv79, i8* %arrayidx85, align 1, !dbg !10852
  br label %for.inc86, !dbg !10850

for.inc86:                                        ; preds = %for.body69
  %79 = load i32, i32* %i, align 4, !dbg !10853
  %inc87 = add nsw i32 %79, 1, !dbg !10853
  store i32 %inc87, i32* %i, align 4, !dbg !10853
  br label %for.cond66, !dbg !10855, !llvm.loop !10856

for.end88:                                        ; preds = %for.cond66
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10858
  %81 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10859
  %bs_num_env89 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %81, i32 0, i32 2, !dbg !10860
  %82 = load i32, i32* %bs_num_env89, align 8, !dbg !10860
  %idxprom90 = zext i32 %82 to i64, !dbg !10861
  %arrayidx91 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom90, !dbg !10861
  %83 = load i8, i8* %arrayidx91, align 1, !dbg !10861
  %conv92 = sext i8 %83 to i32, !dbg !10861
  %call93 = call i32 @get_bits(%struct.GetBitContext* %80, i32 %conv92), !dbg !10862
  store i32 %call93, i32* %bs_pointer, align 4, !dbg !10863
  store i32 0, i32* %i, align 4, !dbg !10864
  br label %for.cond94, !dbg !10866

for.cond94:                                       ; preds = %for.inc106, %for.end88
  %84 = load i32, i32* %i, align 4, !dbg !10867
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10870
  %bs_num_env95 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 2, !dbg !10871
  %86 = load i32, i32* %bs_num_env95, align 8, !dbg !10871
  %cmp96 = icmp ult i32 %84, %86, !dbg !10872
  br i1 %cmp96, label %for.body98, label %for.end108, !dbg !10873

for.body98:                                       ; preds = %for.cond94
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10874
  %call99 = call i32 @get_bits1(%struct.GetBitContext* %87), !dbg !10875
  %conv100 = trunc i32 %call99 to i8, !dbg !10875
  %88 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10876
  %bs_num_env101 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %88, i32 0, i32 2, !dbg !10877
  %89 = load i32, i32* %bs_num_env101, align 8, !dbg !10877
  %90 = load i32, i32* %i, align 4, !dbg !10878
  %sub102 = sub i32 %89, %90, !dbg !10879
  %idxprom103 = zext i32 %sub102 to i64, !dbg !10880
  %91 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10880
  %bs_freq_res104 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %91, i32 0, i32 3, !dbg !10881
  %arrayidx105 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res104, i64 0, i64 %idxprom103, !dbg !10880
  store i8 %conv100, i8* %arrayidx105, align 1, !dbg !10882
  br label %for.inc106, !dbg !10880

for.inc106:                                       ; preds = %for.body98
  %92 = load i32, i32* %i, align 4, !dbg !10883
  %inc107 = add nsw i32 %92, 1, !dbg !10883
  store i32 %inc107, i32* %i, align 4, !dbg !10883
  br label %for.cond94, !dbg !10885, !llvm.loop !10886

for.end108:                                       ; preds = %for.cond94
  br label %sw.epilog, !dbg !10888

sw.bb109:                                         ; preds = %entry
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10889
  %call110 = call i32 @get_bits(%struct.GetBitContext* %93, i32 2), !dbg !10890
  %conv111 = trunc i32 %call110 to i8, !dbg !10890
  %94 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10891
  %t_env112 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %94, i32 0, i32 26, !dbg !10892
  %arrayidx113 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env112, i64 0, i64 0, !dbg !10891
  store i8 %conv111, i8* %arrayidx113, align 4, !dbg !10893
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10894
  %call114 = call i32 @get_bits(%struct.GetBitContext* %95, i32 2), !dbg !10895
  store i32 %call114, i32* %num_rel_lead, align 4, !dbg !10896
  %96 = load i32, i32* %num_rel_lead, align 4, !dbg !10897
  %add115 = add nsw i32 %96, 1, !dbg !10898
  %97 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10899
  %bs_num_env116 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %97, i32 0, i32 2, !dbg !10900
  store i32 %add115, i32* %bs_num_env116, align 8, !dbg !10901
  %98 = load i32, i32* %abs_bord_trail, align 4, !dbg !10902
  %conv117 = trunc i32 %98 to i8, !dbg !10902
  %99 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10903
  %bs_num_env118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %99, i32 0, i32 2, !dbg !10904
  %100 = load i32, i32* %bs_num_env118, align 8, !dbg !10904
  %idxprom119 = zext i32 %100 to i64, !dbg !10905
  %101 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10905
  %t_env120 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %101, i32 0, i32 26, !dbg !10906
  %arrayidx121 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env120, i64 0, i64 %idxprom119, !dbg !10905
  store i8 %conv117, i8* %arrayidx121, align 1, !dbg !10907
  store i32 0, i32* %i, align 4, !dbg !10908
  br label %for.cond122, !dbg !10910

for.cond122:                                      ; preds = %for.inc139, %sw.bb109
  %102 = load i32, i32* %i, align 4, !dbg !10911
  %103 = load i32, i32* %num_rel_lead, align 4, !dbg !10914
  %cmp123 = icmp slt i32 %102, %103, !dbg !10915
  br i1 %cmp123, label %for.body125, label %for.end141, !dbg !10916

for.body125:                                      ; preds = %for.cond122
  %104 = load i32, i32* %i, align 4, !dbg !10917
  %idxprom126 = sext i32 %104 to i64, !dbg !10918
  %105 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10918
  %t_env127 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %105, i32 0, i32 26, !dbg !10919
  %arrayidx128 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env127, i64 0, i64 %idxprom126, !dbg !10918
  %106 = load i8, i8* %arrayidx128, align 1, !dbg !10918
  %conv129 = zext i8 %106 to i32, !dbg !10918
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10920
  %call130 = call i32 @get_bits(%struct.GetBitContext* %107, i32 2), !dbg !10921
  %mul131 = mul i32 2, %call130, !dbg !10922
  %add132 = add i32 %conv129, %mul131, !dbg !10923
  %add133 = add i32 %add132, 2, !dbg !10924
  %conv134 = trunc i32 %add133 to i8, !dbg !10918
  %108 = load i32, i32* %i, align 4, !dbg !10925
  %add135 = add nsw i32 %108, 1, !dbg !10926
  %idxprom136 = sext i32 %add135 to i64, !dbg !10927
  %109 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10927
  %t_env137 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %109, i32 0, i32 26, !dbg !10928
  %arrayidx138 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env137, i64 0, i64 %idxprom136, !dbg !10927
  store i8 %conv134, i8* %arrayidx138, align 1, !dbg !10929
  br label %for.inc139, !dbg !10927

for.inc139:                                       ; preds = %for.body125
  %110 = load i32, i32* %i, align 4, !dbg !10930
  %inc140 = add nsw i32 %110, 1, !dbg !10930
  store i32 %inc140, i32* %i, align 4, !dbg !10930
  br label %for.cond122, !dbg !10932, !llvm.loop !10933

for.end141:                                       ; preds = %for.cond122
  %111 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10935
  %112 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10936
  %bs_num_env142 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %112, i32 0, i32 2, !dbg !10937
  %113 = load i32, i32* %bs_num_env142, align 8, !dbg !10937
  %idxprom143 = zext i32 %113 to i64, !dbg !10938
  %arrayidx144 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom143, !dbg !10938
  %114 = load i8, i8* %arrayidx144, align 1, !dbg !10938
  %conv145 = sext i8 %114 to i32, !dbg !10938
  %call146 = call i32 @get_bits(%struct.GetBitContext* %111, i32 %conv145), !dbg !10939
  store i32 %call146, i32* %bs_pointer, align 4, !dbg !10940
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10941
  %116 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10942
  %bs_freq_res147 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %116, i32 0, i32 3, !dbg !10943
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res147, i32 0, i32 0, !dbg !10942
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !10944
  %117 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10945
  %bs_num_env148 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %117, i32 0, i32 2, !dbg !10946
  %118 = load i32, i32* %bs_num_env148, align 8, !dbg !10946
  store %struct.GetBitContext* %115, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10947
  store i8* %add.ptr, i8** %vec.addr.i, align 8, !dbg !10947
  store i32 %118, i32* %elements.addr.i, align 4, !dbg !10947
  store i32 0, i32* %i.i, align 4, !dbg !10948
  br label %for.cond.i, !dbg !10949

for.cond.i:                                       ; preds = %for.body.i, %for.end141
  %119 = load i32, i32* %i.i, align 4, !dbg !10950
  %120 = load i32, i32* %elements.addr.i, align 4, !dbg !10951
  %cmp.i = icmp slt i32 %119, %120, !dbg !10952
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !10953

for.body.i:                                       ; preds = %for.cond.i
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !10954
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %121) #11, !dbg !10955
  %conv.i = trunc i32 %call.i to i8, !dbg !10955
  %122 = load i32, i32* %i.i, align 4, !dbg !10956
  %idxprom.i = sext i32 %122 to i64, !dbg !10957
  %123 = load i8*, i8** %vec.addr.i, align 8, !dbg !10957
  %arrayidx.i = getelementptr inbounds i8, i8* %123, i64 %idxprom.i, !dbg !10957
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !10958
  %124 = load i32, i32* %i.i, align 4, !dbg !10959
  %inc.i = add nsw i32 %124, 1, !dbg !10959
  store i32 %inc.i, i32* %i.i, align 4, !dbg !10959
  br label %for.cond.i, !dbg !10960, !llvm.loop !10296

get_bits1_vector.exit:                            ; preds = %for.cond.i
  br label %sw.epilog, !dbg !10961

sw.bb149:                                         ; preds = %entry
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10962
  %call150 = call i32 @get_bits(%struct.GetBitContext* %125, i32 2), !dbg !10963
  %conv151 = trunc i32 %call150 to i8, !dbg !10963
  %126 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10964
  %t_env152 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %126, i32 0, i32 26, !dbg !10965
  %arrayidx153 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env152, i64 0, i64 0, !dbg !10964
  store i8 %conv151, i8* %arrayidx153, align 4, !dbg !10966
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10967
  %call154 = call i32 @get_bits(%struct.GetBitContext* %127, i32 2), !dbg !10968
  %128 = load i32, i32* %abs_bord_trail, align 4, !dbg !10969
  %add155 = add i32 %128, %call154, !dbg !10969
  store i32 %add155, i32* %abs_bord_trail, align 4, !dbg !10969
  %129 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10970
  %call156 = call i32 @get_bits(%struct.GetBitContext* %129, i32 2), !dbg !10971
  store i32 %call156, i32* %num_rel_lead, align 4, !dbg !10972
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10973
  %call157 = call i32 @get_bits(%struct.GetBitContext* %130, i32 2), !dbg !10974
  store i32 %call157, i32* %num_rel_trail, align 4, !dbg !10975
  %131 = load i32, i32* %num_rel_lead, align 4, !dbg !10976
  %132 = load i32, i32* %num_rel_trail, align 4, !dbg !10977
  %add158 = add nsw i32 %131, %132, !dbg !10978
  %add159 = add nsw i32 %add158, 1, !dbg !10979
  store i32 %add159, i32* %bs_num_env1, align 4, !dbg !10980
  %133 = load i32, i32* %bs_num_env1, align 4, !dbg !10981
  %cmp160 = icmp sgt i32 %133, 5, !dbg !10983
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !10984

if.then162:                                       ; preds = %sw.bb149
  %134 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !10985
  %avctx163 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %134, i32 0, i32 1, !dbg !10987
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx163, align 8, !dbg !10987
  %136 = bitcast %struct.AVCodecContext* %135 to i8*, !dbg !10985
  %137 = load i32, i32* %bs_num_env1, align 4, !dbg !10988
  call void (i8*, i32, i8*, ...) @av_log(i8* %136, i32 16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.33, i32 0, i32 0), i32 %137), !dbg !10989
  store i32 -1, i32* %retval, align 4, !dbg !10990
  br label %return, !dbg !10990

if.end164:                                        ; preds = %sw.bb149
  %138 = load i32, i32* %bs_num_env1, align 4, !dbg !10991
  %139 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10992
  %bs_num_env165 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %139, i32 0, i32 2, !dbg !10993
  store i32 %138, i32* %bs_num_env165, align 8, !dbg !10994
  %140 = load i32, i32* %abs_bord_trail, align 4, !dbg !10995
  %conv166 = trunc i32 %140 to i8, !dbg !10995
  %141 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10996
  %bs_num_env167 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %141, i32 0, i32 2, !dbg !10997
  %142 = load i32, i32* %bs_num_env167, align 8, !dbg !10997
  %idxprom168 = zext i32 %142 to i64, !dbg !10998
  %143 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !10998
  %t_env169 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %143, i32 0, i32 26, !dbg !10999
  %arrayidx170 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env169, i64 0, i64 %idxprom168, !dbg !10998
  store i8 %conv166, i8* %arrayidx170, align 1, !dbg !11000
  store i32 0, i32* %i, align 4, !dbg !11001
  br label %for.cond171, !dbg !11003

for.cond171:                                      ; preds = %for.inc188, %if.end164
  %144 = load i32, i32* %i, align 4, !dbg !11004
  %145 = load i32, i32* %num_rel_lead, align 4, !dbg !11007
  %cmp172 = icmp slt i32 %144, %145, !dbg !11008
  br i1 %cmp172, label %for.body174, label %for.end190, !dbg !11009

for.body174:                                      ; preds = %for.cond171
  %146 = load i32, i32* %i, align 4, !dbg !11010
  %idxprom175 = sext i32 %146 to i64, !dbg !11011
  %147 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11011
  %t_env176 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %147, i32 0, i32 26, !dbg !11012
  %arrayidx177 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env176, i64 0, i64 %idxprom175, !dbg !11011
  %148 = load i8, i8* %arrayidx177, align 1, !dbg !11011
  %conv178 = zext i8 %148 to i32, !dbg !11011
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11013
  %call179 = call i32 @get_bits(%struct.GetBitContext* %149, i32 2), !dbg !11014
  %mul180 = mul i32 2, %call179, !dbg !11015
  %add181 = add i32 %conv178, %mul180, !dbg !11016
  %add182 = add i32 %add181, 2, !dbg !11017
  %conv183 = trunc i32 %add182 to i8, !dbg !11011
  %150 = load i32, i32* %i, align 4, !dbg !11018
  %add184 = add nsw i32 %150, 1, !dbg !11019
  %idxprom185 = sext i32 %add184 to i64, !dbg !11020
  %151 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11020
  %t_env186 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %151, i32 0, i32 26, !dbg !11021
  %arrayidx187 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env186, i64 0, i64 %idxprom185, !dbg !11020
  store i8 %conv183, i8* %arrayidx187, align 1, !dbg !11022
  br label %for.inc188, !dbg !11020

for.inc188:                                       ; preds = %for.body174
  %152 = load i32, i32* %i, align 4, !dbg !11023
  %inc189 = add nsw i32 %152, 1, !dbg !11023
  store i32 %inc189, i32* %i, align 4, !dbg !11023
  br label %for.cond171, !dbg !11025, !llvm.loop !11026

for.end190:                                       ; preds = %for.cond171
  store i32 0, i32* %i, align 4, !dbg !11028
  br label %for.cond191, !dbg !11030

for.cond191:                                      ; preds = %for.inc212, %for.end190
  %153 = load i32, i32* %i, align 4, !dbg !11031
  %154 = load i32, i32* %num_rel_trail, align 4, !dbg !11034
  %cmp192 = icmp slt i32 %153, %154, !dbg !11035
  br i1 %cmp192, label %for.body194, label %for.end214, !dbg !11036

for.body194:                                      ; preds = %for.cond191
  %155 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11037
  %bs_num_env195 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %155, i32 0, i32 2, !dbg !11038
  %156 = load i32, i32* %bs_num_env195, align 8, !dbg !11038
  %157 = load i32, i32* %i, align 4, !dbg !11039
  %sub196 = sub i32 %156, %157, !dbg !11040
  %idxprom197 = zext i32 %sub196 to i64, !dbg !11041
  %158 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11041
  %t_env198 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %158, i32 0, i32 26, !dbg !11042
  %arrayidx199 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env198, i64 0, i64 %idxprom197, !dbg !11041
  %159 = load i8, i8* %arrayidx199, align 1, !dbg !11041
  %conv200 = zext i8 %159 to i32, !dbg !11041
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11043
  %call201 = call i32 @get_bits(%struct.GetBitContext* %160, i32 2), !dbg !11044
  %mul202 = mul i32 2, %call201, !dbg !11045
  %sub203 = sub i32 %conv200, %mul202, !dbg !11046
  %sub204 = sub i32 %sub203, 2, !dbg !11047
  %conv205 = trunc i32 %sub204 to i8, !dbg !11041
  %161 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11048
  %bs_num_env206 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %161, i32 0, i32 2, !dbg !11049
  %162 = load i32, i32* %bs_num_env206, align 8, !dbg !11049
  %sub207 = sub i32 %162, 1, !dbg !11050
  %163 = load i32, i32* %i, align 4, !dbg !11051
  %sub208 = sub i32 %sub207, %163, !dbg !11052
  %idxprom209 = zext i32 %sub208 to i64, !dbg !11053
  %164 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11053
  %t_env210 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %164, i32 0, i32 26, !dbg !11054
  %arrayidx211 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env210, i64 0, i64 %idxprom209, !dbg !11053
  store i8 %conv205, i8* %arrayidx211, align 1, !dbg !11055
  br label %for.inc212, !dbg !11053

for.inc212:                                       ; preds = %for.body194
  %165 = load i32, i32* %i, align 4, !dbg !11056
  %inc213 = add nsw i32 %165, 1, !dbg !11056
  store i32 %inc213, i32* %i, align 4, !dbg !11056
  br label %for.cond191, !dbg !11058, !llvm.loop !11059

for.end214:                                       ; preds = %for.cond191
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11061
  %167 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11062
  %bs_num_env215 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %167, i32 0, i32 2, !dbg !11063
  %168 = load i32, i32* %bs_num_env215, align 8, !dbg !11063
  %idxprom216 = zext i32 %168 to i64, !dbg !11064
  %arrayidx217 = getelementptr inbounds [6 x i8], [6 x i8]* @ceil_log2, i64 0, i64 %idxprom216, !dbg !11064
  %169 = load i8, i8* %arrayidx217, align 1, !dbg !11064
  %conv218 = sext i8 %169 to i32, !dbg !11064
  %call219 = call i32 @get_bits(%struct.GetBitContext* %166, i32 %conv218), !dbg !11065
  store i32 %call219, i32* %bs_pointer, align 4, !dbg !11066
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11067
  %171 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11068
  %bs_freq_res220 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %171, i32 0, i32 3, !dbg !11069
  %arraydecay221 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res220, i32 0, i32 0, !dbg !11068
  %add.ptr222 = getelementptr inbounds i8, i8* %arraydecay221, i64 1, !dbg !11070
  %172 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11071
  %bs_num_env223 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %172, i32 0, i32 2, !dbg !11072
  %173 = load i32, i32* %bs_num_env223, align 8, !dbg !11072
  store %struct.GetBitContext* %170, %struct.GetBitContext** %gb.addr.i343, align 8, !dbg !11073
  store i8* %add.ptr222, i8** %vec.addr.i344, align 8, !dbg !11073
  store i32 %173, i32* %elements.addr.i345, align 4, !dbg !11073
  store i32 0, i32* %i.i346, align 4, !dbg !11074
  br label %for.cond.i348, !dbg !11075

for.cond.i348:                                    ; preds = %for.body.i353, %for.end214
  %174 = load i32, i32* %i.i346, align 4, !dbg !11076
  %175 = load i32, i32* %elements.addr.i345, align 4, !dbg !11077
  %cmp.i347 = icmp slt i32 %174, %175, !dbg !11078
  br i1 %cmp.i347, label %for.body.i353, label %get_bits1_vector.exit355, !dbg !11079

for.body.i353:                                    ; preds = %for.cond.i348
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i343, align 8, !dbg !11080
  %call.i349 = call i32 @get_bits1(%struct.GetBitContext* %176) #11, !dbg !11081
  %conv.i350 = trunc i32 %call.i349 to i8, !dbg !11081
  %177 = load i32, i32* %i.i346, align 4, !dbg !11082
  %idxprom.i351 = sext i32 %177 to i64, !dbg !11083
  %178 = load i8*, i8** %vec.addr.i344, align 8, !dbg !11083
  %arrayidx.i352 = getelementptr inbounds i8, i8* %178, i64 %idxprom.i351, !dbg !11083
  store i8 %conv.i350, i8* %arrayidx.i352, align 1, !dbg !11084
  %179 = load i32, i32* %i.i346, align 4, !dbg !11085
  %inc.i354 = add nsw i32 %179, 1, !dbg !11085
  store i32 %inc.i354, i32* %i.i346, align 4, !dbg !11085
  br label %for.cond.i348, !dbg !11086, !llvm.loop !10296

get_bits1_vector.exit355:                         ; preds = %for.cond.i348
  br label %sw.epilog, !dbg !11087

sw.epilog:                                        ; preds = %entry, %get_bits1_vector.exit355, %get_bits1_vector.exit, %for.end108, %for.end52
  %180 = load i32, i32* %bs_frame_class, align 4, !dbg !11088
  %181 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11089
  %bs_frame_class224 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %181, i32 0, i32 0, !dbg !11090
  store i32 %180, i32* %bs_frame_class224, align 32, !dbg !11091
  br label %do.body, !dbg !11092, !llvm.loop !11093

do.body:                                          ; preds = %sw.epilog
  %182 = load i32, i32* %bs_pointer, align 4, !dbg !11094
  %cmp225 = icmp sge i32 %182, 0, !dbg !11098
  br i1 %cmp225, label %if.end228, label %if.then227, !dbg !11099

if.then227:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i32 731), !dbg !11100
  call void @abort() #10, !dbg !11103
  unreachable, !dbg !11105

if.end228:                                        ; preds = %do.body
  br label %do.end, !dbg !11106

do.end:                                           ; preds = %if.end228
  %183 = load i32, i32* %bs_pointer, align 4, !dbg !11108
  %184 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11110
  %bs_num_env229 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %184, i32 0, i32 2, !dbg !11111
  %185 = load i32, i32* %bs_num_env229, align 8, !dbg !11111
  %add230 = add i32 %185, 1, !dbg !11112
  %cmp231 = icmp ugt i32 %183, %add230, !dbg !11113
  br i1 %cmp231, label %if.then233, label %if.end235, !dbg !11114

if.then233:                                       ; preds = %do.end
  %186 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11115
  %avctx234 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %186, i32 0, i32 1, !dbg !11117
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx234, align 8, !dbg !11117
  %188 = bitcast %struct.AVCodecContext* %187 to i8*, !dbg !11115
  %189 = load i32, i32* %bs_pointer, align 4, !dbg !11118
  call void (i8*, i32, i8*, ...) @av_log(i8* %188, i32 16, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.35, i32 0, i32 0), i32 %189), !dbg !11119
  store i32 -1, i32* %retval, align 4, !dbg !11120
  br label %return, !dbg !11120

if.end235:                                        ; preds = %do.end
  store i32 1, i32* %i, align 4, !dbg !11121
  br label %for.cond236, !dbg !11123

for.cond236:                                      ; preds = %for.inc255, %if.end235
  %190 = load i32, i32* %i, align 4, !dbg !11124
  %191 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11127
  %bs_num_env237 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %191, i32 0, i32 2, !dbg !11128
  %192 = load i32, i32* %bs_num_env237, align 8, !dbg !11128
  %cmp238 = icmp ule i32 %190, %192, !dbg !11129
  br i1 %cmp238, label %for.body240, label %for.end257, !dbg !11130

for.body240:                                      ; preds = %for.cond236
  %193 = load i32, i32* %i, align 4, !dbg !11131
  %sub241 = sub nsw i32 %193, 1, !dbg !11134
  %idxprom242 = sext i32 %sub241 to i64, !dbg !11135
  %194 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11135
  %t_env243 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %194, i32 0, i32 26, !dbg !11136
  %arrayidx244 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env243, i64 0, i64 %idxprom242, !dbg !11135
  %195 = load i8, i8* %arrayidx244, align 1, !dbg !11135
  %conv245 = zext i8 %195 to i32, !dbg !11135
  %196 = load i32, i32* %i, align 4, !dbg !11137
  %idxprom246 = sext i32 %196 to i64, !dbg !11138
  %197 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11138
  %t_env247 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %197, i32 0, i32 26, !dbg !11139
  %arrayidx248 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env247, i64 0, i64 %idxprom246, !dbg !11138
  %198 = load i8, i8* %arrayidx248, align 1, !dbg !11138
  %conv249 = zext i8 %198 to i32, !dbg !11138
  %cmp250 = icmp sge i32 %conv245, %conv249, !dbg !11140
  br i1 %cmp250, label %if.then252, label %if.end254, !dbg !11141

if.then252:                                       ; preds = %for.body240
  %199 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11142
  %avctx253 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %199, i32 0, i32 1, !dbg !11144
  %200 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx253, align 8, !dbg !11144
  %201 = bitcast %struct.AVCodecContext* %200 to i8*, !dbg !11142
  call void (i8*, i32, i8*, ...) @av_log(i8* %201, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i32 0, i32 0)), !dbg !11145
  store i32 -1, i32* %retval, align 4, !dbg !11146
  br label %return, !dbg !11146

if.end254:                                        ; preds = %for.body240
  br label %for.inc255, !dbg !11147

for.inc255:                                       ; preds = %if.end254
  %202 = load i32, i32* %i, align 4, !dbg !11148
  %inc256 = add nsw i32 %202, 1, !dbg !11148
  store i32 %inc256, i32* %i, align 4, !dbg !11148
  br label %for.cond236, !dbg !11150, !llvm.loop !11151

for.end257:                                       ; preds = %for.cond236
  %203 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11153
  %bs_num_env258 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %203, i32 0, i32 2, !dbg !11154
  %204 = load i32, i32* %bs_num_env258, align 8, !dbg !11154
  %cmp259 = icmp ugt i32 %204, 1, !dbg !11155
  %conv260 = zext i1 %cmp259 to i32, !dbg !11155
  %add261 = add nsw i32 %conv260, 1, !dbg !11156
  %205 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11157
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %205, i32 0, i32 4, !dbg !11158
  store i32 %add261, i32* %bs_num_noise, align 4, !dbg !11159
  %206 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11160
  %t_env262 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %206, i32 0, i32 26, !dbg !11161
  %arrayidx263 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env262, i64 0, i64 0, !dbg !11160
  %207 = load i8, i8* %arrayidx263, align 4, !dbg !11160
  %208 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11162
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %208, i32 0, i32 28, !dbg !11163
  %arrayidx264 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i64 0, i64 0, !dbg !11162
  store i8 %207, i8* %arrayidx264, align 1, !dbg !11164
  %209 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11165
  %bs_num_env265 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %209, i32 0, i32 2, !dbg !11166
  %210 = load i32, i32* %bs_num_env265, align 8, !dbg !11166
  %idxprom266 = zext i32 %210 to i64, !dbg !11167
  %211 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11167
  %t_env267 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %211, i32 0, i32 26, !dbg !11168
  %arrayidx268 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env267, i64 0, i64 %idxprom266, !dbg !11167
  %212 = load i8, i8* %arrayidx268, align 1, !dbg !11167
  %213 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11169
  %bs_num_noise269 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %213, i32 0, i32 4, !dbg !11170
  %214 = load i32, i32* %bs_num_noise269, align 4, !dbg !11170
  %idxprom270 = zext i32 %214 to i64, !dbg !11171
  %215 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11171
  %t_q271 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %215, i32 0, i32 28, !dbg !11172
  %arrayidx272 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q271, i64 0, i64 %idxprom270, !dbg !11171
  store i8 %212, i8* %arrayidx272, align 1, !dbg !11173
  %216 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11174
  %bs_num_noise273 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %216, i32 0, i32 4, !dbg !11176
  %217 = load i32, i32* %bs_num_noise273, align 4, !dbg !11176
  %cmp274 = icmp ugt i32 %217, 1, !dbg !11177
  br i1 %cmp274, label %if.then276, label %if.end311, !dbg !11178

if.then276:                                       ; preds = %for.end257
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !11179, metadata !2753), !dbg !11181
  %218 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11182
  %bs_frame_class277 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %218, i32 0, i32 0, !dbg !11184
  %219 = load i32, i32* %bs_frame_class277, align 32, !dbg !11184
  %cmp278 = icmp eq i32 %219, 0, !dbg !11185
  br i1 %cmp278, label %if.then280, label %if.else, !dbg !11186

if.then280:                                       ; preds = %if.then276
  %220 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11187
  %bs_num_env281 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %220, i32 0, i32 2, !dbg !11189
  %221 = load i32, i32* %bs_num_env281, align 8, !dbg !11189
  %shr282 = lshr i32 %221, 1, !dbg !11190
  store i32 %shr282, i32* %idx, align 4, !dbg !11191
  br label %if.end305, !dbg !11192

if.else:                                          ; preds = %if.then276
  %222 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11193
  %bs_frame_class283 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %222, i32 0, i32 0, !dbg !11196
  %223 = load i32, i32* %bs_frame_class283, align 32, !dbg !11196
  %and = and i32 %223, 1, !dbg !11197
  %tobool = icmp ne i32 %and, 0, !dbg !11197
  br i1 %tobool, label %if.then284, label %if.else291, !dbg !11193

if.then284:                                       ; preds = %if.else
  %224 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11198
  %bs_num_env285 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %224, i32 0, i32 2, !dbg !11200
  %225 = load i32, i32* %bs_num_env285, align 8, !dbg !11200
  %226 = load i32, i32* %bs_pointer, align 4, !dbg !11201
  %sub286 = sub nsw i32 %226, 1, !dbg !11202
  %cmp287 = icmp sgt i32 %sub286, 1, !dbg !11203
  br i1 %cmp287, label %cond.true, label %cond.false, !dbg !11204

cond.true:                                        ; preds = %if.then284
  %227 = load i32, i32* %bs_pointer, align 4, !dbg !11205
  %sub289 = sub nsw i32 %227, 1, !dbg !11207
  br label %cond.end, !dbg !11208

cond.false:                                       ; preds = %if.then284
  br label %cond.end, !dbg !11209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub289, %cond.true ], [ 1, %cond.false ], !dbg !11211
  %sub290 = sub i32 %225, %cond, !dbg !11213
  store i32 %sub290, i32* %idx, align 4, !dbg !11214
  br label %if.end304, !dbg !11215

if.else291:                                       ; preds = %if.else
  %228 = load i32, i32* %bs_pointer, align 4, !dbg !11216
  %tobool292 = icmp ne i32 %228, 0, !dbg !11216
  br i1 %tobool292, label %if.else294, label %if.then293, !dbg !11219

if.then293:                                       ; preds = %if.else291
  store i32 1, i32* %idx, align 4, !dbg !11220
  br label %if.end303, !dbg !11221

if.else294:                                       ; preds = %if.else291
  %229 = load i32, i32* %bs_pointer, align 4, !dbg !11222
  %cmp295 = icmp eq i32 %229, 1, !dbg !11224
  br i1 %cmp295, label %if.then297, label %if.else300, !dbg !11225

if.then297:                                       ; preds = %if.else294
  %230 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11226
  %bs_num_env298 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %230, i32 0, i32 2, !dbg !11227
  %231 = load i32, i32* %bs_num_env298, align 8, !dbg !11227
  %sub299 = sub i32 %231, 1, !dbg !11228
  store i32 %sub299, i32* %idx, align 4, !dbg !11229
  br label %if.end302, !dbg !11230

if.else300:                                       ; preds = %if.else294
  %232 = load i32, i32* %bs_pointer, align 4, !dbg !11231
  %sub301 = sub nsw i32 %232, 1, !dbg !11232
  store i32 %sub301, i32* %idx, align 4, !dbg !11233
  br label %if.end302

if.end302:                                        ; preds = %if.else300, %if.then297
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.then293
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %cond.end
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then280
  %233 = load i32, i32* %idx, align 4, !dbg !11234
  %idxprom306 = sext i32 %233 to i64, !dbg !11235
  %234 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11235
  %t_env307 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %234, i32 0, i32 26, !dbg !11236
  %arrayidx308 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env307, i64 0, i64 %idxprom306, !dbg !11235
  %235 = load i8, i8* %arrayidx308, align 1, !dbg !11235
  %236 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11237
  %t_q309 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %236, i32 0, i32 28, !dbg !11238
  %arrayidx310 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q309, i64 0, i64 1, !dbg !11237
  store i8 %235, i8* %arrayidx310, align 1, !dbg !11239
  br label %if.end311, !dbg !11240

if.end311:                                        ; preds = %if.end305, %for.end257
  %237 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11241
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %237, i32 0, i32 13, !dbg !11242
  %arrayidx312 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !11241
  %238 = load i32, i32* %arrayidx312, align 4, !dbg !11241
  %239 = load i32, i32* %bs_num_env_old, align 4, !dbg !11243
  %cmp313 = icmp ne i32 %238, %239, !dbg !11244
  %conv314 = zext i1 %cmp313 to i32, !dbg !11244
  %sub315 = sub nsw i32 0, %conv314, !dbg !11245
  %240 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11246
  %e_a316 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %240, i32 0, i32 13, !dbg !11247
  %arrayidx317 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a316, i64 0, i64 0, !dbg !11246
  store i32 %sub315, i32* %arrayidx317, align 4, !dbg !11248
  %241 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11249
  %e_a318 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %241, i32 0, i32 13, !dbg !11250
  %arrayidx319 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a318, i64 0, i64 1, !dbg !11249
  store i32 -1, i32* %arrayidx319, align 4, !dbg !11251
  %242 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11252
  %bs_frame_class320 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %242, i32 0, i32 0, !dbg !11254
  %243 = load i32, i32* %bs_frame_class320, align 32, !dbg !11254
  %and321 = and i32 %243, 1, !dbg !11255
  %tobool322 = icmp ne i32 %and321, 0, !dbg !11255
  br i1 %tobool322, label %land.lhs.true, label %if.else330, !dbg !11256

land.lhs.true:                                    ; preds = %if.end311
  %244 = load i32, i32* %bs_pointer, align 4, !dbg !11257
  %tobool323 = icmp ne i32 %244, 0, !dbg !11257
  br i1 %tobool323, label %if.then324, label %if.else330, !dbg !11259

if.then324:                                       ; preds = %land.lhs.true
  %245 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11260
  %bs_num_env325 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %245, i32 0, i32 2, !dbg !11262
  %246 = load i32, i32* %bs_num_env325, align 8, !dbg !11262
  %add326 = add i32 %246, 1, !dbg !11263
  %247 = load i32, i32* %bs_pointer, align 4, !dbg !11264
  %sub327 = sub i32 %add326, %247, !dbg !11265
  %248 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11266
  %e_a328 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %248, i32 0, i32 13, !dbg !11267
  %arrayidx329 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a328, i64 0, i64 1, !dbg !11266
  store i32 %sub327, i32* %arrayidx329, align 4, !dbg !11268
  br label %if.end342, !dbg !11269

if.else330:                                       ; preds = %land.lhs.true, %if.end311
  %249 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11270
  %bs_frame_class331 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %249, i32 0, i32 0, !dbg !11273
  %250 = load i32, i32* %bs_frame_class331, align 32, !dbg !11273
  %cmp332 = icmp eq i32 %250, 2, !dbg !11274
  br i1 %cmp332, label %land.lhs.true334, label %if.end341, !dbg !11275

land.lhs.true334:                                 ; preds = %if.else330
  %251 = load i32, i32* %bs_pointer, align 4, !dbg !11276
  %cmp335 = icmp sgt i32 %251, 1, !dbg !11278
  br i1 %cmp335, label %if.then337, label %if.end341, !dbg !11279

if.then337:                                       ; preds = %land.lhs.true334
  %252 = load i32, i32* %bs_pointer, align 4, !dbg !11280
  %sub338 = sub nsw i32 %252, 1, !dbg !11281
  %253 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11282
  %e_a339 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %253, i32 0, i32 13, !dbg !11283
  %arrayidx340 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a339, i64 0, i64 1, !dbg !11282
  store i32 %sub338, i32* %arrayidx340, align 4, !dbg !11284
  br label %if.end341, !dbg !11282

if.end341:                                        ; preds = %if.then337, %land.lhs.true334, %if.else330
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.then324
  store i32 0, i32* %retval, align 4, !dbg !11285
  br label %return, !dbg !11285

return:                                           ; preds = %if.end342, %if.then252, %if.then233, %if.then162, %if.then
  %254 = load i32, i32* %retval, align 4, !dbg !11286
  ret i32 %254, !dbg !11286
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_dtdf(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !11287 {
entry:
  %gb.addr.i2 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i2, metadata !10194, metadata !2753), !dbg !11290
  %vec.addr.i3 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i3, metadata !10201, metadata !2753), !dbg !11292
  %elements.addr.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i4, metadata !10203, metadata !2753), !dbg !11293
  %i.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i5, metadata !10205, metadata !2753), !dbg !11294
  %gb.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr.i, metadata !10194, metadata !2753), !dbg !11295
  %vec.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %vec.addr.i, metadata !10201, metadata !2753), !dbg !11297
  %elements.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %elements.addr.i, metadata !10203, metadata !2753), !dbg !11298
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !10205, metadata !2753), !dbg !11299
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11300, metadata !2753), !dbg !11301
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11302, metadata !2753), !dbg !11303
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11304, metadata !2753), !dbg !11305
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11306
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11307
  %bs_df_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 5, !dbg !11308
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %bs_df_env, i32 0, i32 0, !dbg !11307
  %2 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11309
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 2, !dbg !11310
  %3 = load i32, i32* %bs_num_env, align 8, !dbg !11310
  store %struct.GetBitContext* %0, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11311
  store i8* %arraydecay, i8** %vec.addr.i, align 8, !dbg !11311
  store i32 %3, i32* %elements.addr.i, align 4, !dbg !11311
  store i32 0, i32* %i.i, align 4, !dbg !11312
  br label %for.cond.i, !dbg !11313

for.cond.i:                                       ; preds = %for.body.i, %entry
  %4 = load i32, i32* %i.i, align 4, !dbg !11314
  %5 = load i32, i32* %elements.addr.i, align 4, !dbg !11315
  %cmp.i = icmp slt i32 %4, %5, !dbg !11316
  br i1 %cmp.i, label %for.body.i, label %get_bits1_vector.exit, !dbg !11317

for.body.i:                                       ; preds = %for.cond.i
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i, align 8, !dbg !11318
  %call.i = call i32 @get_bits1(%struct.GetBitContext* %6) #11, !dbg !11319
  %conv.i = trunc i32 %call.i to i8, !dbg !11319
  %7 = load i32, i32* %i.i, align 4, !dbg !11320
  %idxprom.i = sext i32 %7 to i64, !dbg !11321
  %8 = load i8*, i8** %vec.addr.i, align 8, !dbg !11321
  %arrayidx.i = getelementptr inbounds i8, i8* %8, i64 %idxprom.i, !dbg !11321
  store i8 %conv.i, i8* %arrayidx.i, align 1, !dbg !11322
  %9 = load i32, i32* %i.i, align 4, !dbg !11323
  %inc.i = add nsw i32 %9, 1, !dbg !11323
  store i32 %inc.i, i32* %i.i, align 4, !dbg !11323
  br label %for.cond.i, !dbg !11324, !llvm.loop !10296

get_bits1_vector.exit:                            ; preds = %for.cond.i
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11325
  %11 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11326
  %bs_df_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %11, i32 0, i32 6, !dbg !11327
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %bs_df_noise, i32 0, i32 0, !dbg !11326
  %12 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11328
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %12, i32 0, i32 4, !dbg !11329
  %13 = load i32, i32* %bs_num_noise, align 4, !dbg !11329
  store %struct.GetBitContext* %10, %struct.GetBitContext** %gb.addr.i2, align 8, !dbg !11330
  store i8* %arraydecay1, i8** %vec.addr.i3, align 8, !dbg !11330
  store i32 %13, i32* %elements.addr.i4, align 4, !dbg !11330
  store i32 0, i32* %i.i5, align 4, !dbg !11331
  br label %for.cond.i7, !dbg !11332

for.cond.i7:                                      ; preds = %for.body.i12, %get_bits1_vector.exit
  %14 = load i32, i32* %i.i5, align 4, !dbg !11333
  %15 = load i32, i32* %elements.addr.i4, align 4, !dbg !11334
  %cmp.i6 = icmp slt i32 %14, %15, !dbg !11335
  br i1 %cmp.i6, label %for.body.i12, label %get_bits1_vector.exit14, !dbg !11336

for.body.i12:                                     ; preds = %for.cond.i7
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr.i2, align 8, !dbg !11337
  %call.i8 = call i32 @get_bits1(%struct.GetBitContext* %16) #11, !dbg !11338
  %conv.i9 = trunc i32 %call.i8 to i8, !dbg !11338
  %17 = load i32, i32* %i.i5, align 4, !dbg !11339
  %idxprom.i10 = sext i32 %17 to i64, !dbg !11340
  %18 = load i8*, i8** %vec.addr.i3, align 8, !dbg !11340
  %arrayidx.i11 = getelementptr inbounds i8, i8* %18, i64 %idxprom.i10, !dbg !11340
  store i8 %conv.i9, i8* %arrayidx.i11, align 1, !dbg !11341
  %19 = load i32, i32* %i.i5, align 4, !dbg !11342
  %inc.i13 = add nsw i32 %19, 1, !dbg !11342
  store i32 %inc.i13, i32* %i.i5, align 4, !dbg !11342
  br label %for.cond.i7, !dbg !11343, !llvm.loop !10296

get_bits1_vector.exit14:                          ; preds = %for.cond.i7
  ret void, !dbg !11344
}

; Function Attrs: nounwind uwtable
define internal void @read_sbr_invf(%struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data) #3 !dbg !11345 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %i = alloca i32, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11346, metadata !2753), !dbg !11347
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11348, metadata !2753), !dbg !11349
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11350, metadata !2753), !dbg !11351
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11352, metadata !2753), !dbg !11353
  %0 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11354
  %bs_invf_mode = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 7, !dbg !11355
  %arrayidx = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode, i64 0, i64 1, !dbg !11354
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i32 0, i32 0, !dbg !11356
  %1 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11357
  %bs_invf_mode1 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %1, i32 0, i32 7, !dbg !11358
  %arrayidx2 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode1, i64 0, i64 0, !dbg !11357
  %arraydecay3 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx2, i32 0, i32 0, !dbg !11356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay3, i64 5, i32 1, i1 false), !dbg !11356
  store i32 0, i32* %i, align 4, !dbg !11359
  br label %for.cond, !dbg !11361

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !11362
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11365
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 20, !dbg !11366
  %4 = load i32, i32* %n_q, align 8, !dbg !11366
  %cmp = icmp ult i32 %2, %4, !dbg !11367
  br i1 %cmp, label %for.body, label %for.end, !dbg !11368

for.body:                                         ; preds = %for.cond
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11369
  %call = call i32 @get_bits(%struct.GetBitContext* %5, i32 2), !dbg !11370
  %conv = trunc i32 %call to i8, !dbg !11370
  %6 = load i32, i32* %i, align 4, !dbg !11371
  %idxprom = sext i32 %6 to i64, !dbg !11372
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11372
  %bs_invf_mode4 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 7, !dbg !11373
  %arrayidx5 = getelementptr inbounds [2 x [5 x i8]], [2 x [5 x i8]]* %bs_invf_mode4, i64 0, i64 0, !dbg !11372
  %arrayidx6 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx5, i64 0, i64 %idxprom, !dbg !11372
  store i8 %conv, i8* %arrayidx6, align 1, !dbg !11374
  br label %for.inc, !dbg !11372

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !11375
  %inc = add nsw i32 %8, 1, !dbg !11375
  store i32 %inc, i32* %i, align 4, !dbg !11375
  br label %for.cond, !dbg !11377, !llvm.loop !11378

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11380
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_envelope(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data, i32 %ch) #3 !dbg !11381 {
entry:
  %x.addr.i96.i556 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i556, metadata !6417, metadata !2753), !dbg !11384
  %x.addr.i81.i557 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i557, metadata !6417, metadata !2753), !dbg !11404
  %x.addr.i.i558 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i558, metadata !6417, metadata !2753), !dbg !11407
  %s.addr.i559 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i559, metadata !11409, metadata !2753), !dbg !11410
  %table.addr.i560 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i560, metadata !11411, metadata !2753), !dbg !11412
  %bits.addr.i561 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i561, metadata !11413, metadata !2753), !dbg !11414
  %max_depth.addr.i562 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i562, metadata !11415, metadata !2753), !dbg !11416
  %code.i563 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i563, metadata !11417, metadata !2753), !dbg !11418
  %re_index.i564 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i564, metadata !11419, metadata !2753), !dbg !11420
  %re_cache.i565 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i565, metadata !11421, metadata !2753), !dbg !11422
  %re_size_plus8.i566 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i566, metadata !11423, metadata !2753), !dbg !11424
  %n.i567 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i567, metadata !11425, metadata !2753), !dbg !11426
  %nb_bits.i568 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i568, metadata !11427, metadata !2753), !dbg !11428
  %index1.i569 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i569, metadata !11429, metadata !2753), !dbg !11430
  %x.addr.i96.i410 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i410, metadata !6417, metadata !2753), !dbg !11431
  %x.addr.i81.i411 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i411, metadata !6417, metadata !2753), !dbg !11441
  %x.addr.i.i412 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i412, metadata !6417, metadata !2753), !dbg !11443
  %s.addr.i413 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i413, metadata !11409, metadata !2753), !dbg !11445
  %table.addr.i414 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i414, metadata !11411, metadata !2753), !dbg !11446
  %bits.addr.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i415, metadata !11413, metadata !2753), !dbg !11447
  %max_depth.addr.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i416, metadata !11415, metadata !2753), !dbg !11448
  %code.i417 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i417, metadata !11417, metadata !2753), !dbg !11449
  %re_index.i418 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i418, metadata !11419, metadata !2753), !dbg !11450
  %re_cache.i419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i419, metadata !11421, metadata !2753), !dbg !11451
  %re_size_plus8.i420 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i420, metadata !11423, metadata !2753), !dbg !11452
  %n.i421 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i421, metadata !11425, metadata !2753), !dbg !11453
  %nb_bits.i422 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i422, metadata !11427, metadata !2753), !dbg !11454
  %index1.i423 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i423, metadata !11429, metadata !2753), !dbg !11455
  %x.addr.i96.i264 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i264, metadata !6417, metadata !2753), !dbg !11456
  %x.addr.i81.i265 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i265, metadata !6417, metadata !2753), !dbg !11463
  %x.addr.i.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i266, metadata !6417, metadata !2753), !dbg !11465
  %s.addr.i267 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i267, metadata !11409, metadata !2753), !dbg !11467
  %table.addr.i268 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i268, metadata !11411, metadata !2753), !dbg !11468
  %bits.addr.i269 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i269, metadata !11413, metadata !2753), !dbg !11469
  %max_depth.addr.i270 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i270, metadata !11415, metadata !2753), !dbg !11470
  %code.i271 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i271, metadata !11417, metadata !2753), !dbg !11471
  %re_index.i272 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i272, metadata !11419, metadata !2753), !dbg !11472
  %re_cache.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i273, metadata !11421, metadata !2753), !dbg !11473
  %re_size_plus8.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i274, metadata !11423, metadata !2753), !dbg !11474
  %n.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i275, metadata !11425, metadata !2753), !dbg !11475
  %nb_bits.i276 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i276, metadata !11427, metadata !2753), !dbg !11476
  %index1.i277 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i277, metadata !11429, metadata !2753), !dbg !11477
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6417, metadata !2753), !dbg !11478
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6417, metadata !2753), !dbg !11485
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6417, metadata !2753), !dbg !11487
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !11409, metadata !2753), !dbg !11489
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !11411, metadata !2753), !dbg !11490
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !11413, metadata !2753), !dbg !11491
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !11415, metadata !2753), !dbg !11492
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !11417, metadata !2753), !dbg !11493
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !11419, metadata !2753), !dbg !11494
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !11421, metadata !2753), !dbg !11495
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !11423, metadata !2753), !dbg !11496
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !11425, metadata !2753), !dbg !11497
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !11427, metadata !2753), !dbg !11498
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !11429, metadata !2753), !dbg !11499
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %ch.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %t_huff = alloca [2 x i16]*, align 8
  %f_huff = alloca [2 x i16]*, align 8
  %t_lav = alloca i32, align 4
  %f_lav = alloca i32, align 4
  %delta = alloca i32, align 4
  %odd = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !11500, metadata !2753), !dbg !11501
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !11502, metadata !2753), !dbg !11503
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11504, metadata !2753), !dbg !11505
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !11506, metadata !2753), !dbg !11507
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !11508, metadata !2753), !dbg !11509
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11510, metadata !2753), !dbg !11511
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11512, metadata !2753), !dbg !11513
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11514, metadata !2753), !dbg !11515
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11516, metadata !2753), !dbg !11517
  call void @llvm.dbg.declare(metadata [2 x i16]** %t_huff, metadata !11518, metadata !2753), !dbg !11519
  call void @llvm.dbg.declare(metadata [2 x i16]** %f_huff, metadata !11520, metadata !2753), !dbg !11521
  call void @llvm.dbg.declare(metadata i32* %t_lav, metadata !11522, metadata !2753), !dbg !11523
  call void @llvm.dbg.declare(metadata i32* %f_lav, metadata !11524, metadata !2753), !dbg !11525
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11526, metadata !2753), !dbg !11527
  %0 = load i32, i32* %ch.addr, align 4, !dbg !11528
  %cmp = icmp eq i32 %0, 1, !dbg !11529
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11530

land.rhs:                                         ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11531
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !11533
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !11533
  %cmp1 = icmp eq i32 %2, 1, !dbg !11534
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32, !dbg !11535
  %add = add nsw i32 %land.ext, 1, !dbg !11537
  store i32 %add, i32* %delta, align 4, !dbg !11538
  call void @llvm.dbg.declare(metadata i32* %odd, metadata !11539, metadata !2753), !dbg !11540
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11541
  %n = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 19, !dbg !11542
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %n, i64 0, i64 1, !dbg !11541
  %5 = load i32, i32* %arrayidx, align 4, !dbg !11541
  %and = and i32 %5, 1, !dbg !11543
  store i32 %and, i32* %odd, align 4, !dbg !11540
  %6 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11544
  %bs_coupling2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %6, i32 0, i32 11, !dbg !11546
  %7 = load i32, i32* %bs_coupling2, align 16, !dbg !11546
  %tobool = icmp ne i32 %7, 0, !dbg !11544
  br i1 %tobool, label %land.lhs.true, label %if.else9, !dbg !11547

land.lhs.true:                                    ; preds = %land.end
  %8 = load i32, i32* %ch.addr, align 4, !dbg !11548
  %tobool3 = icmp ne i32 %8, 0, !dbg !11548
  br i1 %tobool3, label %if.then, label %if.else9, !dbg !11550

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11551
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 9, !dbg !11554
  %10 = load i32, i32* %bs_amp_res, align 4, !dbg !11554
  %tobool4 = icmp ne i32 %10, 0, !dbg !11551
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !11555

if.then5:                                         ; preds = %if.then
  store i32 5, i32* %bits, align 4, !dbg !11556
  %11 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 6, i32 1), align 8, !dbg !11558
  store [2 x i16]* %11, [2 x i16]** %t_huff, align 8, !dbg !11559
  %12 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 6), align 1, !dbg !11560
  %conv = sext i8 %12 to i32, !dbg !11560
  store i32 %conv, i32* %t_lav, align 4, !dbg !11561
  %13 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !11562
  store [2 x i16]* %13, [2 x i16]** %f_huff, align 8, !dbg !11563
  %14 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 7), align 1, !dbg !11564
  %conv6 = sext i8 %14 to i32, !dbg !11564
  store i32 %conv6, i32* %f_lav, align 4, !dbg !11565
  br label %if.end, !dbg !11566

if.else:                                          ; preds = %if.then
  store i32 6, i32* %bits, align 4, !dbg !11567
  %15 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 2, i32 1), align 8, !dbg !11569
  store [2 x i16]* %15, [2 x i16]** %t_huff, align 8, !dbg !11570
  %16 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 2), align 1, !dbg !11571
  %conv7 = sext i8 %16 to i32, !dbg !11571
  store i32 %conv7, i32* %t_lav, align 4, !dbg !11572
  %17 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 3, i32 1), align 8, !dbg !11573
  store [2 x i16]* %17, [2 x i16]** %f_huff, align 8, !dbg !11574
  %18 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 3), align 1, !dbg !11575
  %conv8 = sext i8 %18 to i32, !dbg !11575
  store i32 %conv8, i32* %f_lav, align 4, !dbg !11576
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end19, !dbg !11577

if.else9:                                         ; preds = %land.lhs.true, %land.end
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11578
  %bs_amp_res10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 9, !dbg !11581
  %20 = load i32, i32* %bs_amp_res10, align 4, !dbg !11581
  %tobool11 = icmp ne i32 %20, 0, !dbg !11578
  br i1 %tobool11, label %if.then12, label %if.else15, !dbg !11582

if.then12:                                        ; preds = %if.else9
  store i32 6, i32* %bits, align 4, !dbg !11583
  %21 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 4, i32 1), align 8, !dbg !11585
  store [2 x i16]* %21, [2 x i16]** %t_huff, align 8, !dbg !11586
  %22 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 4), align 1, !dbg !11587
  %conv13 = sext i8 %22 to i32, !dbg !11587
  store i32 %conv13, i32* %t_lav, align 4, !dbg !11588
  %23 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !11589
  store [2 x i16]* %23, [2 x i16]** %f_huff, align 8, !dbg !11590
  %24 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 5), align 1, !dbg !11591
  %conv14 = sext i8 %24 to i32, !dbg !11591
  store i32 %conv14, i32* %f_lav, align 4, !dbg !11592
  br label %if.end18, !dbg !11593

if.else15:                                        ; preds = %if.else9
  store i32 7, i32* %bits, align 4, !dbg !11594
  %25 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 0, i32 1), align 8, !dbg !11596
  store [2 x i16]* %25, [2 x i16]** %t_huff, align 8, !dbg !11597
  %26 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 0), align 1, !dbg !11598
  %conv16 = sext i8 %26 to i32, !dbg !11598
  store i32 %conv16, i32* %t_lav, align 4, !dbg !11599
  %27 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 1, i32 1), align 8, !dbg !11600
  store [2 x i16]* %27, [2 x i16]** %f_huff, align 8, !dbg !11601
  %28 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 1), align 1, !dbg !11602
  %conv17 = sext i8 %28 to i32, !dbg !11602
  store i32 %conv17, i32* %f_lav, align 4, !dbg !11603
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  store i32 0, i32* %i, align 4, !dbg !11604
  br label %for.cond, !dbg !11605

for.cond:                                         ; preds = %for.inc254, %if.end19
  %29 = load i32, i32* %i, align 4, !dbg !11606
  %30 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11608
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 2, !dbg !11609
  %31 = load i32, i32* %bs_num_env, align 8, !dbg !11609
  %cmp20 = icmp ult i32 %29, %31, !dbg !11610
  br i1 %cmp20, label %for.body, label %for.end256, !dbg !11611

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !11612
  %idxprom = sext i32 %32 to i64, !dbg !11613
  %33 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11613
  %bs_df_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %33, i32 0, i32 5, !dbg !11614
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* %bs_df_env, i64 0, i64 %idxprom, !dbg !11613
  %34 = load i8, i8* %arrayidx22, align 1, !dbg !11613
  %tobool23 = icmp ne i8 %34, 0, !dbg !11613
  br i1 %tobool23, label %if.then24, label %if.else192, !dbg !11615

if.then24:                                        ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !11616
  %add25 = add nsw i32 %35, 1, !dbg !11617
  %idxprom26 = sext i32 %add25 to i64, !dbg !11618
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11618
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 3, !dbg !11619
  %arrayidx27 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom26, !dbg !11618
  %37 = load i8, i8* %arrayidx27, align 1, !dbg !11618
  %conv28 = zext i8 %37 to i32, !dbg !11618
  %38 = load i32, i32* %i, align 4, !dbg !11620
  %idxprom29 = sext i32 %38 to i64, !dbg !11621
  %39 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11621
  %bs_freq_res30 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %39, i32 0, i32 3, !dbg !11622
  %arrayidx31 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res30, i64 0, i64 %idxprom29, !dbg !11621
  %40 = load i8, i8* %arrayidx31, align 1, !dbg !11621
  %conv32 = zext i8 %40 to i32, !dbg !11621
  %cmp33 = icmp eq i32 %conv28, %conv32, !dbg !11623
  br i1 %cmp33, label %if.then35, label %if.else78, !dbg !11624

if.then35:                                        ; preds = %if.then24
  store i32 0, i32* %j, align 4, !dbg !11625
  br label %for.cond36, !dbg !11626

for.cond36:                                       ; preds = %for.inc, %if.then35
  %41 = load i32, i32* %j, align 4, !dbg !11627
  %42 = load i32, i32* %i, align 4, !dbg !11629
  %add37 = add nsw i32 %42, 1, !dbg !11630
  %idxprom38 = sext i32 %add37 to i64, !dbg !11631
  %43 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11631
  %bs_freq_res39 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %43, i32 0, i32 3, !dbg !11632
  %arrayidx40 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res39, i64 0, i64 %idxprom38, !dbg !11631
  %44 = load i8, i8* %arrayidx40, align 1, !dbg !11631
  %idxprom41 = zext i8 %44 to i64, !dbg !11633
  %45 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11633
  %n42 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %45, i32 0, i32 19, !dbg !11634
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %n42, i64 0, i64 %idxprom41, !dbg !11633
  %46 = load i32, i32* %arrayidx43, align 4, !dbg !11633
  %cmp44 = icmp ult i32 %41, %46, !dbg !11635
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !11636

for.body46:                                       ; preds = %for.cond36
  %47 = load i32, i32* %j, align 4, !dbg !11637
  %idxprom47 = sext i32 %47 to i64, !dbg !11638
  %48 = load i32, i32* %i, align 4, !dbg !11639
  %idxprom48 = sext i32 %48 to i64, !dbg !11638
  %49 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11638
  %env_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %49, i32 0, i32 22, !dbg !11640
  %arrayidx49 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q, i64 0, i64 %idxprom48, !dbg !11638
  %arrayidx50 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !11638
  %50 = load i8, i8* %arrayidx50, align 1, !dbg !11638
  %conv51 = zext i8 %50 to i32, !dbg !11638
  %51 = load i32, i32* %delta, align 4, !dbg !11641
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11642
  %53 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !11643
  store %struct.GetBitContext* %52, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11644
  store [2 x i16]* %53, [2 x i16]** %table.addr.i, align 8, !dbg !11644
  store i32 9, i32* %bits.addr.i, align 4, !dbg !11644
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !11644
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11645
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %54, i32 0, i32 2, !dbg !11646
  %55 = load i32, i32* %index.i, align 8, !dbg !11646
  store i32 %55, i32* %re_index.i, align 4, !dbg !11494
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11647
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %56, i32 0, i32 4, !dbg !11648
  %57 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !11648
  store i32 %57, i32* %re_size_plus8.i, align 4, !dbg !11496
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11649
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %58, i32 0, i32 0, !dbg !11650
  %59 = load i8*, i8** %buffer.i, align 8, !dbg !11650
  %60 = load i32, i32* %re_index.i, align 4, !dbg !11651
  %shr.i = lshr i32 %60, 3, !dbg !11652
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !11653
  %add.ptr.i = getelementptr inbounds i8, i8* %59, i64 %idx.ext.i, !dbg !11653
  %61 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !11654
  %l.i = bitcast %union.unaligned_32* %61 to i32*, !dbg !11654
  %62 = load i32, i32* %l.i, align 1, !dbg !11654
  store i32 %62, i32* %x.addr.i.i, align 4, !dbg !11655
  %63 = load i32, i32* %x.addr.i.i, align 4, !dbg !11656
  %shl.i.i = shl i32 %63, 8, !dbg !11657
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !11658
  %64 = load i32, i32* %x.addr.i.i, align 4, !dbg !11659
  %shr.i.i = lshr i32 %64, 8, !dbg !11660
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !11661
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !11662
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !11663
  %65 = load i32, i32* %x.addr.i.i, align 4, !dbg !11664
  %shr3.i.i = lshr i32 %65, 16, !dbg !11665
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !11666
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !11667
  %66 = load i32, i32* %x.addr.i.i, align 4, !dbg !11668
  %shr6.i.i = lshr i32 %66, 16, !dbg !11669
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !11670
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !11671
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !11672
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !11673
  %67 = load i32, i32* %re_index.i, align 4, !dbg !11674
  %and.i = and i32 %67, 7, !dbg !11675
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !11676
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !11677
  %68 = load i32, i32* %re_cache.i, align 4, !dbg !11678
  %69 = load i32, i32* %bits.addr.i, align 4, !dbg !11680
  %conv.i = trunc i32 %69 to i8, !dbg !11680
  %call2.i = call i32 @NEG_USR32(i32 %68, i8 signext %conv.i) #11, !dbg !11681
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !11682
  %70 = load i32, i32* %index1.i, align 4, !dbg !11683
  %idxprom.i = zext i32 %70 to i64, !dbg !11684
  %71 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11684
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %71, i64 %idxprom.i, !dbg !11684
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !11684
  %72 = load i16, i16* %arrayidx3.i, align 2, !dbg !11684
  %conv4.i = sext i16 %72 to i32, !dbg !11684
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !11685
  %73 = load i32, i32* %index1.i, align 4, !dbg !11686
  %idxprom5.i = zext i32 %73 to i64, !dbg !11687
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11687
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom5.i, !dbg !11687
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !11687
  %75 = load i16, i16* %arrayidx7.i, align 2, !dbg !11687
  %conv8.i = sext i16 %75 to i32, !dbg !11687
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !11688
  %76 = load i32, i32* %max_depth.addr.i, align 4, !dbg !11689
  %cmp.i = icmp sgt i32 %76, 1, !dbg !11690
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !11691

land.lhs.true.i:                                  ; preds = %for.body46
  %77 = load i32, i32* %n.i, align 4, !dbg !11692
  %cmp10.i = icmp slt i32 %77, 0, !dbg !11694
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !11695

if.then.i:                                        ; preds = %land.lhs.true.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11696
  %79 = load i32, i32* %re_index.i, align 4, !dbg !11698
  %80 = load i32, i32* %bits.addr.i, align 4, !dbg !11699
  %add.i = add i32 %79, %80, !dbg !11700
  %cmp12.i = icmp ugt i32 %78, %add.i, !dbg !11701
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !11702

cond.true.i:                                      ; preds = %if.then.i
  %81 = load i32, i32* %re_index.i, align 4, !dbg !11703
  %82 = load i32, i32* %bits.addr.i, align 4, !dbg !11705
  %add14.i = add i32 %81, %82, !dbg !11706
  br label %cond.end.i, !dbg !11707

cond.false.i:                                     ; preds = %if.then.i
  %83 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11708
  br label %cond.end.i, !dbg !11710

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %83, %cond.false.i ], !dbg !11711
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !11712
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11713
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %84, i32 0, i32 0, !dbg !11714
  %85 = load i8*, i8** %buffer15.i, align 8, !dbg !11714
  %86 = load i32, i32* %re_index.i, align 4, !dbg !11715
  %shr16.i = lshr i32 %86, 3, !dbg !11716
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !11717
  %add.ptr18.i = getelementptr inbounds i8, i8* %85, i64 %idx.ext17.i, !dbg !11717
  %87 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !11718
  %l19.i = bitcast %union.unaligned_32* %87 to i32*, !dbg !11718
  %88 = load i32, i32* %l19.i, align 1, !dbg !11718
  store i32 %88, i32* %x.addr.i81.i, align 4, !dbg !11719
  %89 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11720
  %shl.i82.i = shl i32 %89, 8, !dbg !11721
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !11722
  %90 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11723
  %shr.i84.i = lshr i32 %90, 8, !dbg !11724
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !11725
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !11726
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !11727
  %91 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11728
  %shr3.i88.i = lshr i32 %91, 16, !dbg !11729
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !11730
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !11731
  %92 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11732
  %shr6.i91.i = lshr i32 %92, 16, !dbg !11733
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !11734
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !11735
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !11736
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !11737
  %93 = load i32, i32* %re_index.i, align 4, !dbg !11738
  %and21.i = and i32 %93, 7, !dbg !11739
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !11740
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !11741
  %94 = load i32, i32* %n.i, align 4, !dbg !11742
  %sub.i = sub nsw i32 0, %94, !dbg !11743
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !11744
  %95 = load i32, i32* %re_cache.i, align 4, !dbg !11745
  %96 = load i32, i32* %nb_bits.i, align 4, !dbg !11746
  %conv23.i = trunc i32 %96 to i8, !dbg !11746
  %call24.i = call i32 @NEG_USR32(i32 %95, i8 signext %conv23.i) #11, !dbg !11747
  %97 = load i32, i32* %code.i, align 4, !dbg !11749
  %add25.i = add i32 %call24.i, %97, !dbg !11750
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !11751
  %98 = load i32, i32* %index1.i, align 4, !dbg !11752
  %idxprom26.i = zext i32 %98 to i64, !dbg !11753
  %99 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11753
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %99, i64 %idxprom26.i, !dbg !11753
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !11753
  %100 = load i16, i16* %arrayidx28.i, align 2, !dbg !11753
  %conv29.i = sext i16 %100 to i32, !dbg !11753
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !11754
  %101 = load i32, i32* %index1.i, align 4, !dbg !11755
  %idxprom30.i = zext i32 %101 to i64, !dbg !11756
  %102 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11756
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %102, i64 %idxprom30.i, !dbg !11756
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !11756
  %103 = load i16, i16* %arrayidx32.i, align 2, !dbg !11756
  %conv33.i = sext i16 %103 to i32, !dbg !11756
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !11757
  %104 = load i32, i32* %max_depth.addr.i, align 4, !dbg !11758
  %cmp34.i = icmp sgt i32 %104, 2, !dbg !11759
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !11760

land.lhs.true36.i:                                ; preds = %cond.end.i
  %105 = load i32, i32* %n.i, align 4, !dbg !11761
  %cmp37.i = icmp slt i32 %105, 0, !dbg !11763
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !11764

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %106 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11765
  %107 = load i32, i32* %re_index.i, align 4, !dbg !11767
  %108 = load i32, i32* %nb_bits.i, align 4, !dbg !11768
  %add40.i = add i32 %107, %108, !dbg !11769
  %cmp41.i = icmp ugt i32 %106, %add40.i, !dbg !11770
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !11771

cond.true43.i:                                    ; preds = %if.then39.i
  %109 = load i32, i32* %re_index.i, align 4, !dbg !11772
  %110 = load i32, i32* %nb_bits.i, align 4, !dbg !11774
  %add44.i = add i32 %109, %110, !dbg !11775
  br label %cond.end46.i, !dbg !11776

cond.false45.i:                                   ; preds = %if.then39.i
  %111 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11777
  br label %cond.end46.i, !dbg !11779

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %111, %cond.false45.i ], !dbg !11780
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !11781
  %112 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11782
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %112, i32 0, i32 0, !dbg !11783
  %113 = load i8*, i8** %buffer48.i, align 8, !dbg !11783
  %114 = load i32, i32* %re_index.i, align 4, !dbg !11784
  %shr49.i = lshr i32 %114, 3, !dbg !11785
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !11786
  %add.ptr51.i = getelementptr inbounds i8, i8* %113, i64 %idx.ext50.i, !dbg !11786
  %115 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !11787
  %l52.i = bitcast %union.unaligned_32* %115 to i32*, !dbg !11787
  %116 = load i32, i32* %l52.i, align 1, !dbg !11787
  store i32 %116, i32* %x.addr.i96.i, align 4, !dbg !11788
  %117 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11789
  %shl.i97.i = shl i32 %117, 8, !dbg !11790
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !11791
  %118 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11792
  %shr.i99.i = lshr i32 %118, 8, !dbg !11793
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !11794
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !11795
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !11796
  %119 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11797
  %shr3.i103.i = lshr i32 %119, 16, !dbg !11798
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !11799
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !11800
  %120 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11801
  %shr6.i106.i = lshr i32 %120, 16, !dbg !11802
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !11803
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !11804
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !11805
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !11806
  %121 = load i32, i32* %re_index.i, align 4, !dbg !11807
  %and54.i = and i32 %121, 7, !dbg !11808
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !11809
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !11810
  %122 = load i32, i32* %n.i, align 4, !dbg !11811
  %sub56.i = sub nsw i32 0, %122, !dbg !11812
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !11813
  %123 = load i32, i32* %re_cache.i, align 4, !dbg !11814
  %124 = load i32, i32* %nb_bits.i, align 4, !dbg !11815
  %conv57.i = trunc i32 %124 to i8, !dbg !11815
  %call58.i = call i32 @NEG_USR32(i32 %123, i8 signext %conv57.i) #11, !dbg !11816
  %125 = load i32, i32* %code.i, align 4, !dbg !11818
  %add59.i = add i32 %call58.i, %125, !dbg !11819
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !11820
  %126 = load i32, i32* %index1.i, align 4, !dbg !11821
  %idxprom60.i = zext i32 %126 to i64, !dbg !11822
  %127 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11822
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %127, i64 %idxprom60.i, !dbg !11822
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !11822
  %128 = load i16, i16* %arrayidx62.i, align 2, !dbg !11822
  %conv63.i = sext i16 %128 to i32, !dbg !11822
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !11823
  %129 = load i32, i32* %index1.i, align 4, !dbg !11824
  %idxprom64.i = zext i32 %129 to i64, !dbg !11825
  %130 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11825
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %130, i64 %idxprom64.i, !dbg !11825
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !11825
  %131 = load i16, i16* %arrayidx66.i, align 2, !dbg !11825
  %conv67.i = sext i16 %131 to i32, !dbg !11825
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !11826
  br label %if.end.i, !dbg !11827

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !11828

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body46
  %132 = load i32, i32* %n.i, align 4, !dbg !11830
  %133 = load i32, i32* %re_cache.i, align 4, !dbg !11833
  %shl70.i = shl i32 %133, %132, !dbg !11833
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !11833
  %134 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11834
  %135 = load i32, i32* %re_index.i, align 4, !dbg !11835
  %136 = load i32, i32* %n.i, align 4, !dbg !11836
  %add71.i = add i32 %135, %136, !dbg !11837
  %cmp72.i = icmp ugt i32 %134, %add71.i, !dbg !11838
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !11839

cond.true74.i:                                    ; preds = %if.end68.i
  %137 = load i32, i32* %re_index.i, align 4, !dbg !11840
  %138 = load i32, i32* %n.i, align 4, !dbg !11842
  %add75.i = add i32 %137, %138, !dbg !11843
  br label %get_vlc2.exit, !dbg !11844

cond.false76.i:                                   ; preds = %if.end68.i
  %139 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11845
  br label %get_vlc2.exit, !dbg !11847

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %139, %cond.false76.i ], !dbg !11848
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !11850
  %140 = load i32, i32* %re_index.i, align 4, !dbg !11851
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11852
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %141, i32 0, i32 2, !dbg !11853
  store i32 %140, i32* %index80.i, align 8, !dbg !11854
  %142 = load i32, i32* %code.i, align 4, !dbg !11855
  %143 = load i32, i32* %t_lav, align 4, !dbg !11856
  %sub = sub nsw i32 %142, %143, !dbg !11857
  %mul = mul nsw i32 %51, %sub, !dbg !11858
  %add52 = add nsw i32 %conv51, %mul, !dbg !11859
  %conv53 = trunc i32 %add52 to i8, !dbg !11638
  %144 = load i32, i32* %j, align 4, !dbg !11860
  %idxprom54 = sext i32 %144 to i64, !dbg !11861
  %145 = load i32, i32* %i, align 4, !dbg !11862
  %add55 = add nsw i32 %145, 1, !dbg !11863
  %idxprom56 = sext i32 %add55 to i64, !dbg !11861
  %146 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11861
  %env_facs_q57 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %146, i32 0, i32 22, !dbg !11864
  %arrayidx58 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q57, i64 0, i64 %idxprom56, !dbg !11861
  %arrayidx59 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx58, i64 0, i64 %idxprom54, !dbg !11861
  store i8 %conv53, i8* %arrayidx59, align 1, !dbg !11865
  %147 = load i32, i32* %j, align 4, !dbg !11866
  %idxprom60 = sext i32 %147 to i64, !dbg !11868
  %148 = load i32, i32* %i, align 4, !dbg !11869
  %add61 = add nsw i32 %148, 1, !dbg !11870
  %idxprom62 = sext i32 %add61 to i64, !dbg !11868
  %149 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11868
  %env_facs_q63 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %149, i32 0, i32 22, !dbg !11871
  %arrayidx64 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q63, i64 0, i64 %idxprom62, !dbg !11868
  %arrayidx65 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx64, i64 0, i64 %idxprom60, !dbg !11868
  %150 = load i8, i8* %arrayidx65, align 1, !dbg !11868
  %conv66 = zext i8 %150 to i32, !dbg !11868
  %cmp67 = icmp ugt i32 %conv66, 127, !dbg !11872
  br i1 %cmp67, label %if.then69, label %if.end77, !dbg !11873

if.then69:                                        ; preds = %get_vlc2.exit
  %151 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !11874
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %151, i32 0, i32 1, !dbg !11876
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !11876
  %153 = bitcast %struct.AVCodecContext* %152 to i8*, !dbg !11874
  %154 = load i32, i32* %j, align 4, !dbg !11877
  %idxprom70 = sext i32 %154 to i64, !dbg !11878
  %155 = load i32, i32* %i, align 4, !dbg !11879
  %add71 = add nsw i32 %155, 1, !dbg !11880
  %idxprom72 = sext i32 %add71 to i64, !dbg !11878
  %156 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11878
  %env_facs_q73 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %156, i32 0, i32 22, !dbg !11881
  %arrayidx74 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q73, i64 0, i64 %idxprom72, !dbg !11878
  %arrayidx75 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx74, i64 0, i64 %idxprom70, !dbg !11878
  %157 = load i8, i8* %arrayidx75, align 1, !dbg !11878
  %conv76 = zext i8 %157 to i32, !dbg !11878
  call void (i8*, i32, i8*, ...) @av_log(i8* %153, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv76), !dbg !11882
  store i32 -1094995529, i32* %retval, align 4, !dbg !11883
  br label %return, !dbg !11883

if.end77:                                         ; preds = %get_vlc2.exit
  br label %for.inc, !dbg !11884

for.inc:                                          ; preds = %if.end77
  %158 = load i32, i32* %j, align 4, !dbg !11885
  %inc = add nsw i32 %158, 1, !dbg !11885
  store i32 %inc, i32* %j, align 4, !dbg !11885
  br label %for.cond36, !dbg !11887, !llvm.loop !11888

for.end:                                          ; preds = %for.cond36
  br label %if.end191, !dbg !11890

if.else78:                                        ; preds = %if.then24
  %159 = load i32, i32* %i, align 4, !dbg !11891
  %add79 = add nsw i32 %159, 1, !dbg !11893
  %idxprom80 = sext i32 %add79 to i64, !dbg !11894
  %160 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11894
  %bs_freq_res81 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %160, i32 0, i32 3, !dbg !11895
  %arrayidx82 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res81, i64 0, i64 %idxprom80, !dbg !11894
  %161 = load i8, i8* %arrayidx82, align 1, !dbg !11894
  %tobool83 = icmp ne i8 %161, 0, !dbg !11894
  br i1 %tobool83, label %if.then84, label %if.else136, !dbg !11894

if.then84:                                        ; preds = %if.else78
  store i32 0, i32* %j, align 4, !dbg !11896
  br label %for.cond85, !dbg !11897

for.cond85:                                       ; preds = %for.inc133, %if.then84
  %162 = load i32, i32* %j, align 4, !dbg !11898
  %163 = load i32, i32* %i, align 4, !dbg !11900
  %add86 = add nsw i32 %163, 1, !dbg !11901
  %idxprom87 = sext i32 %add86 to i64, !dbg !11902
  %164 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11902
  %bs_freq_res88 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %164, i32 0, i32 3, !dbg !11903
  %arrayidx89 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res88, i64 0, i64 %idxprom87, !dbg !11902
  %165 = load i8, i8* %arrayidx89, align 1, !dbg !11902
  %idxprom90 = zext i8 %165 to i64, !dbg !11904
  %166 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !11904
  %n91 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %166, i32 0, i32 19, !dbg !11905
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %n91, i64 0, i64 %idxprom90, !dbg !11904
  %167 = load i32, i32* %arrayidx92, align 4, !dbg !11904
  %cmp93 = icmp ult i32 %162, %167, !dbg !11906
  br i1 %cmp93, label %for.body95, label %for.end135, !dbg !11907

for.body95:                                       ; preds = %for.cond85
  %168 = load i32, i32* %j, align 4, !dbg !11908
  %169 = load i32, i32* %odd, align 4, !dbg !11909
  %add96 = add nsw i32 %168, %169, !dbg !11910
  %shr = ashr i32 %add96, 1, !dbg !11911
  store i32 %shr, i32* %k, align 4, !dbg !11912
  %170 = load i32, i32* %k, align 4, !dbg !11913
  %idxprom97 = sext i32 %170 to i64, !dbg !11914
  %171 = load i32, i32* %i, align 4, !dbg !11915
  %idxprom98 = sext i32 %171 to i64, !dbg !11914
  %172 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !11914
  %env_facs_q99 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %172, i32 0, i32 22, !dbg !11916
  %arrayidx100 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q99, i64 0, i64 %idxprom98, !dbg !11914
  %arrayidx101 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx100, i64 0, i64 %idxprom97, !dbg !11914
  %173 = load i8, i8* %arrayidx101, align 1, !dbg !11914
  %conv102 = zext i8 %173 to i32, !dbg !11914
  %174 = load i32, i32* %delta, align 4, !dbg !11917
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11918
  %176 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !11919
  store %struct.GetBitContext* %175, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !11920
  store [2 x i16]* %176, [2 x i16]** %table.addr.i268, align 8, !dbg !11920
  store i32 9, i32* %bits.addr.i269, align 4, !dbg !11920
  store i32 3, i32* %max_depth.addr.i270, align 4, !dbg !11920
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !11921
  %index.i278 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %177, i32 0, i32 2, !dbg !11922
  %178 = load i32, i32* %index.i278, align 8, !dbg !11922
  store i32 %178, i32* %re_index.i272, align 4, !dbg !11472
  %179 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !11923
  %size_in_bits_plus8.i279 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %179, i32 0, i32 4, !dbg !11924
  %180 = load i32, i32* %size_in_bits_plus8.i279, align 8, !dbg !11924
  store i32 %180, i32* %re_size_plus8.i274, align 4, !dbg !11474
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !11925
  %buffer.i280 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %181, i32 0, i32 0, !dbg !11926
  %182 = load i8*, i8** %buffer.i280, align 8, !dbg !11926
  %183 = load i32, i32* %re_index.i272, align 4, !dbg !11927
  %shr.i281 = lshr i32 %183, 3, !dbg !11928
  %idx.ext.i282 = zext i32 %shr.i281 to i64, !dbg !11929
  %add.ptr.i283 = getelementptr inbounds i8, i8* %182, i64 %idx.ext.i282, !dbg !11929
  %184 = bitcast i8* %add.ptr.i283 to %union.unaligned_32*, !dbg !11930
  %l.i284 = bitcast %union.unaligned_32* %184 to i32*, !dbg !11930
  %185 = load i32, i32* %l.i284, align 1, !dbg !11930
  store i32 %185, i32* %x.addr.i.i266, align 4, !dbg !11931
  %186 = load i32, i32* %x.addr.i.i266, align 4, !dbg !11932
  %shl.i.i285 = shl i32 %186, 8, !dbg !11933
  %and.i.i286 = and i32 %shl.i.i285, 65280, !dbg !11934
  %187 = load i32, i32* %x.addr.i.i266, align 4, !dbg !11935
  %shr.i.i287 = lshr i32 %187, 8, !dbg !11936
  %and1.i.i288 = and i32 %shr.i.i287, 255, !dbg !11937
  %or.i.i289 = or i32 %and.i.i286, %and1.i.i288, !dbg !11938
  %shl2.i.i290 = shl i32 %or.i.i289, 16, !dbg !11939
  %188 = load i32, i32* %x.addr.i.i266, align 4, !dbg !11940
  %shr3.i.i291 = lshr i32 %188, 16, !dbg !11941
  %shl4.i.i292 = shl i32 %shr3.i.i291, 8, !dbg !11942
  %and5.i.i293 = and i32 %shl4.i.i292, 65280, !dbg !11943
  %189 = load i32, i32* %x.addr.i.i266, align 4, !dbg !11944
  %shr6.i.i294 = lshr i32 %189, 16, !dbg !11945
  %shr7.i.i295 = lshr i32 %shr6.i.i294, 8, !dbg !11946
  %and8.i.i296 = and i32 %shr7.i.i295, 255, !dbg !11947
  %or9.i.i297 = or i32 %and5.i.i293, %and8.i.i296, !dbg !11948
  %or10.i.i298 = or i32 %shl2.i.i290, %or9.i.i297, !dbg !11949
  %190 = load i32, i32* %re_index.i272, align 4, !dbg !11950
  %and.i299 = and i32 %190, 7, !dbg !11951
  %shl.i300 = shl i32 %or10.i.i298, %and.i299, !dbg !11952
  store i32 %shl.i300, i32* %re_cache.i273, align 4, !dbg !11953
  %191 = load i32, i32* %re_cache.i273, align 4, !dbg !11954
  %192 = load i32, i32* %bits.addr.i269, align 4, !dbg !11955
  %conv.i301 = trunc i32 %192 to i8, !dbg !11955
  %call2.i302 = call i32 @NEG_USR32(i32 %191, i8 signext %conv.i301) #11, !dbg !11956
  store i32 %call2.i302, i32* %index1.i277, align 4, !dbg !11957
  %193 = load i32, i32* %index1.i277, align 4, !dbg !11958
  %idxprom.i303 = zext i32 %193 to i64, !dbg !11959
  %194 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !11959
  %arrayidx.i304 = getelementptr inbounds [2 x i16], [2 x i16]* %194, i64 %idxprom.i303, !dbg !11959
  %arrayidx3.i305 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i304, i64 0, i64 0, !dbg !11959
  %195 = load i16, i16* %arrayidx3.i305, align 2, !dbg !11959
  %conv4.i306 = sext i16 %195 to i32, !dbg !11959
  store i32 %conv4.i306, i32* %code.i271, align 4, !dbg !11960
  %196 = load i32, i32* %index1.i277, align 4, !dbg !11961
  %idxprom5.i307 = zext i32 %196 to i64, !dbg !11962
  %197 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !11962
  %arrayidx6.i308 = getelementptr inbounds [2 x i16], [2 x i16]* %197, i64 %idxprom5.i307, !dbg !11962
  %arrayidx7.i309 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i308, i64 0, i64 1, !dbg !11962
  %198 = load i16, i16* %arrayidx7.i309, align 2, !dbg !11962
  %conv8.i310 = sext i16 %198 to i32, !dbg !11962
  store i32 %conv8.i310, i32* %n.i275, align 4, !dbg !11963
  %199 = load i32, i32* %max_depth.addr.i270, align 4, !dbg !11964
  %cmp.i311 = icmp sgt i32 %199, 1, !dbg !11965
  br i1 %cmp.i311, label %land.lhs.true.i313, label %if.end68.i400, !dbg !11966

land.lhs.true.i313:                               ; preds = %for.body95
  %200 = load i32, i32* %n.i275, align 4, !dbg !11967
  %cmp10.i312 = icmp slt i32 %200, 0, !dbg !11968
  br i1 %cmp10.i312, label %if.then.i316, label %if.end68.i400, !dbg !11969

if.then.i316:                                     ; preds = %land.lhs.true.i313
  %201 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !11970
  %202 = load i32, i32* %re_index.i272, align 4, !dbg !11971
  %203 = load i32, i32* %bits.addr.i269, align 4, !dbg !11972
  %add.i314 = add i32 %202, %203, !dbg !11973
  %cmp12.i315 = icmp ugt i32 %201, %add.i314, !dbg !11974
  br i1 %cmp12.i315, label %cond.true.i318, label %cond.false.i319, !dbg !11975

cond.true.i318:                                   ; preds = %if.then.i316
  %204 = load i32, i32* %re_index.i272, align 4, !dbg !11976
  %205 = load i32, i32* %bits.addr.i269, align 4, !dbg !11977
  %add14.i317 = add i32 %204, %205, !dbg !11978
  br label %cond.end.i355, !dbg !11979

cond.false.i319:                                  ; preds = %if.then.i316
  %206 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !11980
  br label %cond.end.i355, !dbg !11981

cond.end.i355:                                    ; preds = %cond.false.i319, %cond.true.i318
  %cond.i320 = phi i32 [ %add14.i317, %cond.true.i318 ], [ %206, %cond.false.i319 ], !dbg !11982
  store i32 %cond.i320, i32* %re_index.i272, align 4, !dbg !11983
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !11984
  %buffer15.i321 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %207, i32 0, i32 0, !dbg !11985
  %208 = load i8*, i8** %buffer15.i321, align 8, !dbg !11985
  %209 = load i32, i32* %re_index.i272, align 4, !dbg !11986
  %shr16.i322 = lshr i32 %209, 3, !dbg !11987
  %idx.ext17.i323 = zext i32 %shr16.i322 to i64, !dbg !11988
  %add.ptr18.i324 = getelementptr inbounds i8, i8* %208, i64 %idx.ext17.i323, !dbg !11988
  %210 = bitcast i8* %add.ptr18.i324 to %union.unaligned_32*, !dbg !11989
  %l19.i325 = bitcast %union.unaligned_32* %210 to i32*, !dbg !11989
  %211 = load i32, i32* %l19.i325, align 1, !dbg !11989
  store i32 %211, i32* %x.addr.i81.i265, align 4, !dbg !11990
  %212 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !11991
  %shl.i82.i326 = shl i32 %212, 8, !dbg !11992
  %and.i83.i327 = and i32 %shl.i82.i326, 65280, !dbg !11993
  %213 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !11994
  %shr.i84.i328 = lshr i32 %213, 8, !dbg !11995
  %and1.i85.i329 = and i32 %shr.i84.i328, 255, !dbg !11996
  %or.i86.i330 = or i32 %and.i83.i327, %and1.i85.i329, !dbg !11997
  %shl2.i87.i331 = shl i32 %or.i86.i330, 16, !dbg !11998
  %214 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !11999
  %shr3.i88.i332 = lshr i32 %214, 16, !dbg !12000
  %shl4.i89.i333 = shl i32 %shr3.i88.i332, 8, !dbg !12001
  %and5.i90.i334 = and i32 %shl4.i89.i333, 65280, !dbg !12002
  %215 = load i32, i32* %x.addr.i81.i265, align 4, !dbg !12003
  %shr6.i91.i335 = lshr i32 %215, 16, !dbg !12004
  %shr7.i92.i336 = lshr i32 %shr6.i91.i335, 8, !dbg !12005
  %and8.i93.i337 = and i32 %shr7.i92.i336, 255, !dbg !12006
  %or9.i94.i338 = or i32 %and5.i90.i334, %and8.i93.i337, !dbg !12007
  %or10.i95.i339 = or i32 %shl2.i87.i331, %or9.i94.i338, !dbg !12008
  %216 = load i32, i32* %re_index.i272, align 4, !dbg !12009
  %and21.i340 = and i32 %216, 7, !dbg !12010
  %shl22.i341 = shl i32 %or10.i95.i339, %and21.i340, !dbg !12011
  store i32 %shl22.i341, i32* %re_cache.i273, align 4, !dbg !12012
  %217 = load i32, i32* %n.i275, align 4, !dbg !12013
  %sub.i342 = sub nsw i32 0, %217, !dbg !12014
  store i32 %sub.i342, i32* %nb_bits.i276, align 4, !dbg !12015
  %218 = load i32, i32* %re_cache.i273, align 4, !dbg !12016
  %219 = load i32, i32* %nb_bits.i276, align 4, !dbg !12017
  %conv23.i343 = trunc i32 %219 to i8, !dbg !12017
  %call24.i344 = call i32 @NEG_USR32(i32 %218, i8 signext %conv23.i343) #11, !dbg !12018
  %220 = load i32, i32* %code.i271, align 4, !dbg !12019
  %add25.i345 = add i32 %call24.i344, %220, !dbg !12020
  store i32 %add25.i345, i32* %index1.i277, align 4, !dbg !12021
  %221 = load i32, i32* %index1.i277, align 4, !dbg !12022
  %idxprom26.i346 = zext i32 %221 to i64, !dbg !12023
  %222 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12023
  %arrayidx27.i347 = getelementptr inbounds [2 x i16], [2 x i16]* %222, i64 %idxprom26.i346, !dbg !12023
  %arrayidx28.i348 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i347, i64 0, i64 0, !dbg !12023
  %223 = load i16, i16* %arrayidx28.i348, align 2, !dbg !12023
  %conv29.i349 = sext i16 %223 to i32, !dbg !12023
  store i32 %conv29.i349, i32* %code.i271, align 4, !dbg !12024
  %224 = load i32, i32* %index1.i277, align 4, !dbg !12025
  %idxprom30.i350 = zext i32 %224 to i64, !dbg !12026
  %225 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12026
  %arrayidx31.i351 = getelementptr inbounds [2 x i16], [2 x i16]* %225, i64 %idxprom30.i350, !dbg !12026
  %arrayidx32.i352 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i351, i64 0, i64 1, !dbg !12026
  %226 = load i16, i16* %arrayidx32.i352, align 2, !dbg !12026
  %conv33.i353 = sext i16 %226 to i32, !dbg !12026
  store i32 %conv33.i353, i32* %n.i275, align 4, !dbg !12027
  %227 = load i32, i32* %max_depth.addr.i270, align 4, !dbg !12028
  %cmp34.i354 = icmp sgt i32 %227, 2, !dbg !12029
  br i1 %cmp34.i354, label %land.lhs.true36.i357, label %if.end.i399, !dbg !12030

land.lhs.true36.i357:                             ; preds = %cond.end.i355
  %228 = load i32, i32* %n.i275, align 4, !dbg !12031
  %cmp37.i356 = icmp slt i32 %228, 0, !dbg !12032
  br i1 %cmp37.i356, label %if.then39.i360, label %if.end.i399, !dbg !12033

if.then39.i360:                                   ; preds = %land.lhs.true36.i357
  %229 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12034
  %230 = load i32, i32* %re_index.i272, align 4, !dbg !12035
  %231 = load i32, i32* %nb_bits.i276, align 4, !dbg !12036
  %add40.i358 = add i32 %230, %231, !dbg !12037
  %cmp41.i359 = icmp ugt i32 %229, %add40.i358, !dbg !12038
  br i1 %cmp41.i359, label %cond.true43.i362, label %cond.false45.i363, !dbg !12039

cond.true43.i362:                                 ; preds = %if.then39.i360
  %232 = load i32, i32* %re_index.i272, align 4, !dbg !12040
  %233 = load i32, i32* %nb_bits.i276, align 4, !dbg !12041
  %add44.i361 = add i32 %232, %233, !dbg !12042
  br label %cond.end46.i398, !dbg !12043

cond.false45.i363:                                ; preds = %if.then39.i360
  %234 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12044
  br label %cond.end46.i398, !dbg !12045

cond.end46.i398:                                  ; preds = %cond.false45.i363, %cond.true43.i362
  %cond47.i364 = phi i32 [ %add44.i361, %cond.true43.i362 ], [ %234, %cond.false45.i363 ], !dbg !12046
  store i32 %cond47.i364, i32* %re_index.i272, align 4, !dbg !12047
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12048
  %buffer48.i365 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %235, i32 0, i32 0, !dbg !12049
  %236 = load i8*, i8** %buffer48.i365, align 8, !dbg !12049
  %237 = load i32, i32* %re_index.i272, align 4, !dbg !12050
  %shr49.i366 = lshr i32 %237, 3, !dbg !12051
  %idx.ext50.i367 = zext i32 %shr49.i366 to i64, !dbg !12052
  %add.ptr51.i368 = getelementptr inbounds i8, i8* %236, i64 %idx.ext50.i367, !dbg !12052
  %238 = bitcast i8* %add.ptr51.i368 to %union.unaligned_32*, !dbg !12053
  %l52.i369 = bitcast %union.unaligned_32* %238 to i32*, !dbg !12053
  %239 = load i32, i32* %l52.i369, align 1, !dbg !12053
  store i32 %239, i32* %x.addr.i96.i264, align 4, !dbg !12054
  %240 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12055
  %shl.i97.i370 = shl i32 %240, 8, !dbg !12056
  %and.i98.i371 = and i32 %shl.i97.i370, 65280, !dbg !12057
  %241 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12058
  %shr.i99.i372 = lshr i32 %241, 8, !dbg !12059
  %and1.i100.i373 = and i32 %shr.i99.i372, 255, !dbg !12060
  %or.i101.i374 = or i32 %and.i98.i371, %and1.i100.i373, !dbg !12061
  %shl2.i102.i375 = shl i32 %or.i101.i374, 16, !dbg !12062
  %242 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12063
  %shr3.i103.i376 = lshr i32 %242, 16, !dbg !12064
  %shl4.i104.i377 = shl i32 %shr3.i103.i376, 8, !dbg !12065
  %and5.i105.i378 = and i32 %shl4.i104.i377, 65280, !dbg !12066
  %243 = load i32, i32* %x.addr.i96.i264, align 4, !dbg !12067
  %shr6.i106.i379 = lshr i32 %243, 16, !dbg !12068
  %shr7.i107.i380 = lshr i32 %shr6.i106.i379, 8, !dbg !12069
  %and8.i108.i381 = and i32 %shr7.i107.i380, 255, !dbg !12070
  %or9.i109.i382 = or i32 %and5.i105.i378, %and8.i108.i381, !dbg !12071
  %or10.i110.i383 = or i32 %shl2.i102.i375, %or9.i109.i382, !dbg !12072
  %244 = load i32, i32* %re_index.i272, align 4, !dbg !12073
  %and54.i384 = and i32 %244, 7, !dbg !12074
  %shl55.i385 = shl i32 %or10.i110.i383, %and54.i384, !dbg !12075
  store i32 %shl55.i385, i32* %re_cache.i273, align 4, !dbg !12076
  %245 = load i32, i32* %n.i275, align 4, !dbg !12077
  %sub56.i386 = sub nsw i32 0, %245, !dbg !12078
  store i32 %sub56.i386, i32* %nb_bits.i276, align 4, !dbg !12079
  %246 = load i32, i32* %re_cache.i273, align 4, !dbg !12080
  %247 = load i32, i32* %nb_bits.i276, align 4, !dbg !12081
  %conv57.i387 = trunc i32 %247 to i8, !dbg !12081
  %call58.i388 = call i32 @NEG_USR32(i32 %246, i8 signext %conv57.i387) #11, !dbg !12082
  %248 = load i32, i32* %code.i271, align 4, !dbg !12083
  %add59.i389 = add i32 %call58.i388, %248, !dbg !12084
  store i32 %add59.i389, i32* %index1.i277, align 4, !dbg !12085
  %249 = load i32, i32* %index1.i277, align 4, !dbg !12086
  %idxprom60.i390 = zext i32 %249 to i64, !dbg !12087
  %250 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12087
  %arrayidx61.i391 = getelementptr inbounds [2 x i16], [2 x i16]* %250, i64 %idxprom60.i390, !dbg !12087
  %arrayidx62.i392 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i391, i64 0, i64 0, !dbg !12087
  %251 = load i16, i16* %arrayidx62.i392, align 2, !dbg !12087
  %conv63.i393 = sext i16 %251 to i32, !dbg !12087
  store i32 %conv63.i393, i32* %code.i271, align 4, !dbg !12088
  %252 = load i32, i32* %index1.i277, align 4, !dbg !12089
  %idxprom64.i394 = zext i32 %252 to i64, !dbg !12090
  %253 = load [2 x i16]*, [2 x i16]** %table.addr.i268, align 8, !dbg !12090
  %arrayidx65.i395 = getelementptr inbounds [2 x i16], [2 x i16]* %253, i64 %idxprom64.i394, !dbg !12090
  %arrayidx66.i396 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i395, i64 0, i64 1, !dbg !12090
  %254 = load i16, i16* %arrayidx66.i396, align 2, !dbg !12090
  %conv67.i397 = sext i16 %254 to i32, !dbg !12090
  store i32 %conv67.i397, i32* %n.i275, align 4, !dbg !12091
  br label %if.end.i399, !dbg !12092

if.end.i399:                                      ; preds = %cond.end46.i398, %land.lhs.true36.i357, %cond.end.i355
  br label %if.end68.i400, !dbg !12093

if.end68.i400:                                    ; preds = %if.end.i399, %land.lhs.true.i313, %for.body95
  %255 = load i32, i32* %n.i275, align 4, !dbg !12094
  %256 = load i32, i32* %re_cache.i273, align 4, !dbg !12095
  %shl70.i401 = shl i32 %256, %255, !dbg !12095
  store i32 %shl70.i401, i32* %re_cache.i273, align 4, !dbg !12095
  %257 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12096
  %258 = load i32, i32* %re_index.i272, align 4, !dbg !12097
  %259 = load i32, i32* %n.i275, align 4, !dbg !12098
  %add71.i402 = add i32 %258, %259, !dbg !12099
  %cmp72.i403 = icmp ugt i32 %257, %add71.i402, !dbg !12100
  br i1 %cmp72.i403, label %cond.true74.i405, label %cond.false76.i406, !dbg !12101

cond.true74.i405:                                 ; preds = %if.end68.i400
  %260 = load i32, i32* %re_index.i272, align 4, !dbg !12102
  %261 = load i32, i32* %n.i275, align 4, !dbg !12103
  %add75.i404 = add i32 %260, %261, !dbg !12104
  br label %get_vlc2.exit409, !dbg !12105

cond.false76.i406:                                ; preds = %if.end68.i400
  %262 = load i32, i32* %re_size_plus8.i274, align 4, !dbg !12106
  br label %get_vlc2.exit409, !dbg !12107

get_vlc2.exit409:                                 ; preds = %cond.true74.i405, %cond.false76.i406
  %cond78.i407 = phi i32 [ %add75.i404, %cond.true74.i405 ], [ %262, %cond.false76.i406 ], !dbg !12108
  store i32 %cond78.i407, i32* %re_index.i272, align 4, !dbg !12109
  %263 = load i32, i32* %re_index.i272, align 4, !dbg !12110
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i267, align 8, !dbg !12111
  %index80.i408 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %264, i32 0, i32 2, !dbg !12112
  store i32 %263, i32* %index80.i408, align 8, !dbg !12113
  %265 = load i32, i32* %code.i271, align 4, !dbg !12114
  %266 = load i32, i32* %t_lav, align 4, !dbg !12115
  %sub104 = sub nsw i32 %265, %266, !dbg !12116
  %mul105 = mul nsw i32 %174, %sub104, !dbg !12117
  %add106 = add nsw i32 %conv102, %mul105, !dbg !12118
  %conv107 = trunc i32 %add106 to i8, !dbg !11914
  %267 = load i32, i32* %j, align 4, !dbg !12119
  %idxprom108 = sext i32 %267 to i64, !dbg !12120
  %268 = load i32, i32* %i, align 4, !dbg !12121
  %add109 = add nsw i32 %268, 1, !dbg !12122
  %idxprom110 = sext i32 %add109 to i64, !dbg !12120
  %269 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12120
  %env_facs_q111 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %269, i32 0, i32 22, !dbg !12123
  %arrayidx112 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q111, i64 0, i64 %idxprom110, !dbg !12120
  %arrayidx113 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx112, i64 0, i64 %idxprom108, !dbg !12120
  store i8 %conv107, i8* %arrayidx113, align 1, !dbg !12124
  %270 = load i32, i32* %j, align 4, !dbg !12125
  %idxprom114 = sext i32 %270 to i64, !dbg !12127
  %271 = load i32, i32* %i, align 4, !dbg !12128
  %add115 = add nsw i32 %271, 1, !dbg !12129
  %idxprom116 = sext i32 %add115 to i64, !dbg !12127
  %272 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12127
  %env_facs_q117 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %272, i32 0, i32 22, !dbg !12130
  %arrayidx118 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q117, i64 0, i64 %idxprom116, !dbg !12127
  %arrayidx119 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx118, i64 0, i64 %idxprom114, !dbg !12127
  %273 = load i8, i8* %arrayidx119, align 1, !dbg !12127
  %conv120 = zext i8 %273 to i32, !dbg !12127
  %cmp121 = icmp ugt i32 %conv120, 127, !dbg !12131
  br i1 %cmp121, label %if.then123, label %if.end132, !dbg !12132

if.then123:                                       ; preds = %get_vlc2.exit409
  %274 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12133
  %avctx124 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %274, i32 0, i32 1, !dbg !12135
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx124, align 8, !dbg !12135
  %276 = bitcast %struct.AVCodecContext* %275 to i8*, !dbg !12133
  %277 = load i32, i32* %j, align 4, !dbg !12136
  %idxprom125 = sext i32 %277 to i64, !dbg !12137
  %278 = load i32, i32* %i, align 4, !dbg !12138
  %add126 = add nsw i32 %278, 1, !dbg !12139
  %idxprom127 = sext i32 %add126 to i64, !dbg !12137
  %279 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12137
  %env_facs_q128 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %279, i32 0, i32 22, !dbg !12140
  %arrayidx129 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q128, i64 0, i64 %idxprom127, !dbg !12137
  %arrayidx130 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx129, i64 0, i64 %idxprom125, !dbg !12137
  %280 = load i8, i8* %arrayidx130, align 1, !dbg !12137
  %conv131 = zext i8 %280 to i32, !dbg !12137
  call void (i8*, i32, i8*, ...) @av_log(i8* %276, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv131), !dbg !12141
  store i32 -1094995529, i32* %retval, align 4, !dbg !12142
  br label %return, !dbg !12142

if.end132:                                        ; preds = %get_vlc2.exit409
  br label %for.inc133, !dbg !12143

for.inc133:                                       ; preds = %if.end132
  %281 = load i32, i32* %j, align 4, !dbg !12144
  %inc134 = add nsw i32 %281, 1, !dbg !12144
  store i32 %inc134, i32* %j, align 4, !dbg !12144
  br label %for.cond85, !dbg !12146, !llvm.loop !12147

for.end135:                                       ; preds = %for.cond85
  br label %if.end190, !dbg !12149

if.else136:                                       ; preds = %if.else78
  store i32 0, i32* %j, align 4, !dbg !12150
  br label %for.cond137, !dbg !12151

for.cond137:                                      ; preds = %for.inc187, %if.else136
  %282 = load i32, i32* %j, align 4, !dbg !12152
  %283 = load i32, i32* %i, align 4, !dbg !12154
  %add138 = add nsw i32 %283, 1, !dbg !12155
  %idxprom139 = sext i32 %add138 to i64, !dbg !12156
  %284 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12156
  %bs_freq_res140 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %284, i32 0, i32 3, !dbg !12157
  %arrayidx141 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res140, i64 0, i64 %idxprom139, !dbg !12156
  %285 = load i8, i8* %arrayidx141, align 1, !dbg !12156
  %idxprom142 = zext i8 %285 to i64, !dbg !12158
  %286 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12158
  %n143 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %286, i32 0, i32 19, !dbg !12159
  %arrayidx144 = getelementptr inbounds [2 x i32], [2 x i32]* %n143, i64 0, i64 %idxprom142, !dbg !12158
  %287 = load i32, i32* %arrayidx144, align 4, !dbg !12158
  %cmp145 = icmp ult i32 %282, %287, !dbg !12160
  br i1 %cmp145, label %for.body147, label %for.end189, !dbg !12161

for.body147:                                      ; preds = %for.cond137
  %288 = load i32, i32* %j, align 4, !dbg !12162
  %tobool148 = icmp ne i32 %288, 0, !dbg !12162
  br i1 %tobool148, label %cond.true, label %cond.false, !dbg !12162

cond.true:                                        ; preds = %for.body147
  %289 = load i32, i32* %j, align 4, !dbg !12163
  %mul149 = mul nsw i32 2, %289, !dbg !12165
  %290 = load i32, i32* %odd, align 4, !dbg !12166
  %sub150 = sub nsw i32 %mul149, %290, !dbg !12167
  br label %cond.end, !dbg !12168

cond.false:                                       ; preds = %for.body147
  br label %cond.end, !dbg !12169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub150, %cond.true ], [ 0, %cond.false ], !dbg !12171
  store i32 %cond, i32* %k, align 4, !dbg !12173
  %291 = load i32, i32* %k, align 4, !dbg !12174
  %idxprom151 = sext i32 %291 to i64, !dbg !12175
  %292 = load i32, i32* %i, align 4, !dbg !12176
  %idxprom152 = sext i32 %292 to i64, !dbg !12175
  %293 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12175
  %env_facs_q153 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %293, i32 0, i32 22, !dbg !12177
  %arrayidx154 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q153, i64 0, i64 %idxprom152, !dbg !12175
  %arrayidx155 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx154, i64 0, i64 %idxprom151, !dbg !12175
  %294 = load i8, i8* %arrayidx155, align 1, !dbg !12175
  %conv156 = zext i8 %294 to i32, !dbg !12175
  %295 = load i32, i32* %delta, align 4, !dbg !12178
  %296 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12179
  %297 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !12180
  store %struct.GetBitContext* %296, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12181
  store [2 x i16]* %297, [2 x i16]** %table.addr.i414, align 8, !dbg !12181
  store i32 9, i32* %bits.addr.i415, align 4, !dbg !12181
  store i32 3, i32* %max_depth.addr.i416, align 4, !dbg !12181
  %298 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12182
  %index.i424 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %298, i32 0, i32 2, !dbg !12183
  %299 = load i32, i32* %index.i424, align 8, !dbg !12183
  store i32 %299, i32* %re_index.i418, align 4, !dbg !11450
  %300 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12184
  %size_in_bits_plus8.i425 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %300, i32 0, i32 4, !dbg !12185
  %301 = load i32, i32* %size_in_bits_plus8.i425, align 8, !dbg !12185
  store i32 %301, i32* %re_size_plus8.i420, align 4, !dbg !11452
  %302 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12186
  %buffer.i426 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %302, i32 0, i32 0, !dbg !12187
  %303 = load i8*, i8** %buffer.i426, align 8, !dbg !12187
  %304 = load i32, i32* %re_index.i418, align 4, !dbg !12188
  %shr.i427 = lshr i32 %304, 3, !dbg !12189
  %idx.ext.i428 = zext i32 %shr.i427 to i64, !dbg !12190
  %add.ptr.i429 = getelementptr inbounds i8, i8* %303, i64 %idx.ext.i428, !dbg !12190
  %305 = bitcast i8* %add.ptr.i429 to %union.unaligned_32*, !dbg !12191
  %l.i430 = bitcast %union.unaligned_32* %305 to i32*, !dbg !12191
  %306 = load i32, i32* %l.i430, align 1, !dbg !12191
  store i32 %306, i32* %x.addr.i.i412, align 4, !dbg !12192
  %307 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12193
  %shl.i.i431 = shl i32 %307, 8, !dbg !12194
  %and.i.i432 = and i32 %shl.i.i431, 65280, !dbg !12195
  %308 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12196
  %shr.i.i433 = lshr i32 %308, 8, !dbg !12197
  %and1.i.i434 = and i32 %shr.i.i433, 255, !dbg !12198
  %or.i.i435 = or i32 %and.i.i432, %and1.i.i434, !dbg !12199
  %shl2.i.i436 = shl i32 %or.i.i435, 16, !dbg !12200
  %309 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12201
  %shr3.i.i437 = lshr i32 %309, 16, !dbg !12202
  %shl4.i.i438 = shl i32 %shr3.i.i437, 8, !dbg !12203
  %and5.i.i439 = and i32 %shl4.i.i438, 65280, !dbg !12204
  %310 = load i32, i32* %x.addr.i.i412, align 4, !dbg !12205
  %shr6.i.i440 = lshr i32 %310, 16, !dbg !12206
  %shr7.i.i441 = lshr i32 %shr6.i.i440, 8, !dbg !12207
  %and8.i.i442 = and i32 %shr7.i.i441, 255, !dbg !12208
  %or9.i.i443 = or i32 %and5.i.i439, %and8.i.i442, !dbg !12209
  %or10.i.i444 = or i32 %shl2.i.i436, %or9.i.i443, !dbg !12210
  %311 = load i32, i32* %re_index.i418, align 4, !dbg !12211
  %and.i445 = and i32 %311, 7, !dbg !12212
  %shl.i446 = shl i32 %or10.i.i444, %and.i445, !dbg !12213
  store i32 %shl.i446, i32* %re_cache.i419, align 4, !dbg !12214
  %312 = load i32, i32* %re_cache.i419, align 4, !dbg !12215
  %313 = load i32, i32* %bits.addr.i415, align 4, !dbg !12216
  %conv.i447 = trunc i32 %313 to i8, !dbg !12216
  %call2.i448 = call i32 @NEG_USR32(i32 %312, i8 signext %conv.i447) #11, !dbg !12217
  store i32 %call2.i448, i32* %index1.i423, align 4, !dbg !12218
  %314 = load i32, i32* %index1.i423, align 4, !dbg !12219
  %idxprom.i449 = zext i32 %314 to i64, !dbg !12220
  %315 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12220
  %arrayidx.i450 = getelementptr inbounds [2 x i16], [2 x i16]* %315, i64 %idxprom.i449, !dbg !12220
  %arrayidx3.i451 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i450, i64 0, i64 0, !dbg !12220
  %316 = load i16, i16* %arrayidx3.i451, align 2, !dbg !12220
  %conv4.i452 = sext i16 %316 to i32, !dbg !12220
  store i32 %conv4.i452, i32* %code.i417, align 4, !dbg !12221
  %317 = load i32, i32* %index1.i423, align 4, !dbg !12222
  %idxprom5.i453 = zext i32 %317 to i64, !dbg !12223
  %318 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12223
  %arrayidx6.i454 = getelementptr inbounds [2 x i16], [2 x i16]* %318, i64 %idxprom5.i453, !dbg !12223
  %arrayidx7.i455 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i454, i64 0, i64 1, !dbg !12223
  %319 = load i16, i16* %arrayidx7.i455, align 2, !dbg !12223
  %conv8.i456 = sext i16 %319 to i32, !dbg !12223
  store i32 %conv8.i456, i32* %n.i421, align 4, !dbg !12224
  %320 = load i32, i32* %max_depth.addr.i416, align 4, !dbg !12225
  %cmp.i457 = icmp sgt i32 %320, 1, !dbg !12226
  br i1 %cmp.i457, label %land.lhs.true.i459, label %if.end68.i546, !dbg !12227

land.lhs.true.i459:                               ; preds = %cond.end
  %321 = load i32, i32* %n.i421, align 4, !dbg !12228
  %cmp10.i458 = icmp slt i32 %321, 0, !dbg !12229
  br i1 %cmp10.i458, label %if.then.i462, label %if.end68.i546, !dbg !12230

if.then.i462:                                     ; preds = %land.lhs.true.i459
  %322 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12231
  %323 = load i32, i32* %re_index.i418, align 4, !dbg !12232
  %324 = load i32, i32* %bits.addr.i415, align 4, !dbg !12233
  %add.i460 = add i32 %323, %324, !dbg !12234
  %cmp12.i461 = icmp ugt i32 %322, %add.i460, !dbg !12235
  br i1 %cmp12.i461, label %cond.true.i464, label %cond.false.i465, !dbg !12236

cond.true.i464:                                   ; preds = %if.then.i462
  %325 = load i32, i32* %re_index.i418, align 4, !dbg !12237
  %326 = load i32, i32* %bits.addr.i415, align 4, !dbg !12238
  %add14.i463 = add i32 %325, %326, !dbg !12239
  br label %cond.end.i501, !dbg !12240

cond.false.i465:                                  ; preds = %if.then.i462
  %327 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12241
  br label %cond.end.i501, !dbg !12242

cond.end.i501:                                    ; preds = %cond.false.i465, %cond.true.i464
  %cond.i466 = phi i32 [ %add14.i463, %cond.true.i464 ], [ %327, %cond.false.i465 ], !dbg !12243
  store i32 %cond.i466, i32* %re_index.i418, align 4, !dbg !12244
  %328 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12245
  %buffer15.i467 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %328, i32 0, i32 0, !dbg !12246
  %329 = load i8*, i8** %buffer15.i467, align 8, !dbg !12246
  %330 = load i32, i32* %re_index.i418, align 4, !dbg !12247
  %shr16.i468 = lshr i32 %330, 3, !dbg !12248
  %idx.ext17.i469 = zext i32 %shr16.i468 to i64, !dbg !12249
  %add.ptr18.i470 = getelementptr inbounds i8, i8* %329, i64 %idx.ext17.i469, !dbg !12249
  %331 = bitcast i8* %add.ptr18.i470 to %union.unaligned_32*, !dbg !12250
  %l19.i471 = bitcast %union.unaligned_32* %331 to i32*, !dbg !12250
  %332 = load i32, i32* %l19.i471, align 1, !dbg !12250
  store i32 %332, i32* %x.addr.i81.i411, align 4, !dbg !12251
  %333 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12252
  %shl.i82.i472 = shl i32 %333, 8, !dbg !12253
  %and.i83.i473 = and i32 %shl.i82.i472, 65280, !dbg !12254
  %334 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12255
  %shr.i84.i474 = lshr i32 %334, 8, !dbg !12256
  %and1.i85.i475 = and i32 %shr.i84.i474, 255, !dbg !12257
  %or.i86.i476 = or i32 %and.i83.i473, %and1.i85.i475, !dbg !12258
  %shl2.i87.i477 = shl i32 %or.i86.i476, 16, !dbg !12259
  %335 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12260
  %shr3.i88.i478 = lshr i32 %335, 16, !dbg !12261
  %shl4.i89.i479 = shl i32 %shr3.i88.i478, 8, !dbg !12262
  %and5.i90.i480 = and i32 %shl4.i89.i479, 65280, !dbg !12263
  %336 = load i32, i32* %x.addr.i81.i411, align 4, !dbg !12264
  %shr6.i91.i481 = lshr i32 %336, 16, !dbg !12265
  %shr7.i92.i482 = lshr i32 %shr6.i91.i481, 8, !dbg !12266
  %and8.i93.i483 = and i32 %shr7.i92.i482, 255, !dbg !12267
  %or9.i94.i484 = or i32 %and5.i90.i480, %and8.i93.i483, !dbg !12268
  %or10.i95.i485 = or i32 %shl2.i87.i477, %or9.i94.i484, !dbg !12269
  %337 = load i32, i32* %re_index.i418, align 4, !dbg !12270
  %and21.i486 = and i32 %337, 7, !dbg !12271
  %shl22.i487 = shl i32 %or10.i95.i485, %and21.i486, !dbg !12272
  store i32 %shl22.i487, i32* %re_cache.i419, align 4, !dbg !12273
  %338 = load i32, i32* %n.i421, align 4, !dbg !12274
  %sub.i488 = sub nsw i32 0, %338, !dbg !12275
  store i32 %sub.i488, i32* %nb_bits.i422, align 4, !dbg !12276
  %339 = load i32, i32* %re_cache.i419, align 4, !dbg !12277
  %340 = load i32, i32* %nb_bits.i422, align 4, !dbg !12278
  %conv23.i489 = trunc i32 %340 to i8, !dbg !12278
  %call24.i490 = call i32 @NEG_USR32(i32 %339, i8 signext %conv23.i489) #11, !dbg !12279
  %341 = load i32, i32* %code.i417, align 4, !dbg !12280
  %add25.i491 = add i32 %call24.i490, %341, !dbg !12281
  store i32 %add25.i491, i32* %index1.i423, align 4, !dbg !12282
  %342 = load i32, i32* %index1.i423, align 4, !dbg !12283
  %idxprom26.i492 = zext i32 %342 to i64, !dbg !12284
  %343 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12284
  %arrayidx27.i493 = getelementptr inbounds [2 x i16], [2 x i16]* %343, i64 %idxprom26.i492, !dbg !12284
  %arrayidx28.i494 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i493, i64 0, i64 0, !dbg !12284
  %344 = load i16, i16* %arrayidx28.i494, align 2, !dbg !12284
  %conv29.i495 = sext i16 %344 to i32, !dbg !12284
  store i32 %conv29.i495, i32* %code.i417, align 4, !dbg !12285
  %345 = load i32, i32* %index1.i423, align 4, !dbg !12286
  %idxprom30.i496 = zext i32 %345 to i64, !dbg !12287
  %346 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12287
  %arrayidx31.i497 = getelementptr inbounds [2 x i16], [2 x i16]* %346, i64 %idxprom30.i496, !dbg !12287
  %arrayidx32.i498 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i497, i64 0, i64 1, !dbg !12287
  %347 = load i16, i16* %arrayidx32.i498, align 2, !dbg !12287
  %conv33.i499 = sext i16 %347 to i32, !dbg !12287
  store i32 %conv33.i499, i32* %n.i421, align 4, !dbg !12288
  %348 = load i32, i32* %max_depth.addr.i416, align 4, !dbg !12289
  %cmp34.i500 = icmp sgt i32 %348, 2, !dbg !12290
  br i1 %cmp34.i500, label %land.lhs.true36.i503, label %if.end.i545, !dbg !12291

land.lhs.true36.i503:                             ; preds = %cond.end.i501
  %349 = load i32, i32* %n.i421, align 4, !dbg !12292
  %cmp37.i502 = icmp slt i32 %349, 0, !dbg !12293
  br i1 %cmp37.i502, label %if.then39.i506, label %if.end.i545, !dbg !12294

if.then39.i506:                                   ; preds = %land.lhs.true36.i503
  %350 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12295
  %351 = load i32, i32* %re_index.i418, align 4, !dbg !12296
  %352 = load i32, i32* %nb_bits.i422, align 4, !dbg !12297
  %add40.i504 = add i32 %351, %352, !dbg !12298
  %cmp41.i505 = icmp ugt i32 %350, %add40.i504, !dbg !12299
  br i1 %cmp41.i505, label %cond.true43.i508, label %cond.false45.i509, !dbg !12300

cond.true43.i508:                                 ; preds = %if.then39.i506
  %353 = load i32, i32* %re_index.i418, align 4, !dbg !12301
  %354 = load i32, i32* %nb_bits.i422, align 4, !dbg !12302
  %add44.i507 = add i32 %353, %354, !dbg !12303
  br label %cond.end46.i544, !dbg !12304

cond.false45.i509:                                ; preds = %if.then39.i506
  %355 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12305
  br label %cond.end46.i544, !dbg !12306

cond.end46.i544:                                  ; preds = %cond.false45.i509, %cond.true43.i508
  %cond47.i510 = phi i32 [ %add44.i507, %cond.true43.i508 ], [ %355, %cond.false45.i509 ], !dbg !12307
  store i32 %cond47.i510, i32* %re_index.i418, align 4, !dbg !12308
  %356 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12309
  %buffer48.i511 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %356, i32 0, i32 0, !dbg !12310
  %357 = load i8*, i8** %buffer48.i511, align 8, !dbg !12310
  %358 = load i32, i32* %re_index.i418, align 4, !dbg !12311
  %shr49.i512 = lshr i32 %358, 3, !dbg !12312
  %idx.ext50.i513 = zext i32 %shr49.i512 to i64, !dbg !12313
  %add.ptr51.i514 = getelementptr inbounds i8, i8* %357, i64 %idx.ext50.i513, !dbg !12313
  %359 = bitcast i8* %add.ptr51.i514 to %union.unaligned_32*, !dbg !12314
  %l52.i515 = bitcast %union.unaligned_32* %359 to i32*, !dbg !12314
  %360 = load i32, i32* %l52.i515, align 1, !dbg !12314
  store i32 %360, i32* %x.addr.i96.i410, align 4, !dbg !12315
  %361 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12316
  %shl.i97.i516 = shl i32 %361, 8, !dbg !12317
  %and.i98.i517 = and i32 %shl.i97.i516, 65280, !dbg !12318
  %362 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12319
  %shr.i99.i518 = lshr i32 %362, 8, !dbg !12320
  %and1.i100.i519 = and i32 %shr.i99.i518, 255, !dbg !12321
  %or.i101.i520 = or i32 %and.i98.i517, %and1.i100.i519, !dbg !12322
  %shl2.i102.i521 = shl i32 %or.i101.i520, 16, !dbg !12323
  %363 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12324
  %shr3.i103.i522 = lshr i32 %363, 16, !dbg !12325
  %shl4.i104.i523 = shl i32 %shr3.i103.i522, 8, !dbg !12326
  %and5.i105.i524 = and i32 %shl4.i104.i523, 65280, !dbg !12327
  %364 = load i32, i32* %x.addr.i96.i410, align 4, !dbg !12328
  %shr6.i106.i525 = lshr i32 %364, 16, !dbg !12329
  %shr7.i107.i526 = lshr i32 %shr6.i106.i525, 8, !dbg !12330
  %and8.i108.i527 = and i32 %shr7.i107.i526, 255, !dbg !12331
  %or9.i109.i528 = or i32 %and5.i105.i524, %and8.i108.i527, !dbg !12332
  %or10.i110.i529 = or i32 %shl2.i102.i521, %or9.i109.i528, !dbg !12333
  %365 = load i32, i32* %re_index.i418, align 4, !dbg !12334
  %and54.i530 = and i32 %365, 7, !dbg !12335
  %shl55.i531 = shl i32 %or10.i110.i529, %and54.i530, !dbg !12336
  store i32 %shl55.i531, i32* %re_cache.i419, align 4, !dbg !12337
  %366 = load i32, i32* %n.i421, align 4, !dbg !12338
  %sub56.i532 = sub nsw i32 0, %366, !dbg !12339
  store i32 %sub56.i532, i32* %nb_bits.i422, align 4, !dbg !12340
  %367 = load i32, i32* %re_cache.i419, align 4, !dbg !12341
  %368 = load i32, i32* %nb_bits.i422, align 4, !dbg !12342
  %conv57.i533 = trunc i32 %368 to i8, !dbg !12342
  %call58.i534 = call i32 @NEG_USR32(i32 %367, i8 signext %conv57.i533) #11, !dbg !12343
  %369 = load i32, i32* %code.i417, align 4, !dbg !12344
  %add59.i535 = add i32 %call58.i534, %369, !dbg !12345
  store i32 %add59.i535, i32* %index1.i423, align 4, !dbg !12346
  %370 = load i32, i32* %index1.i423, align 4, !dbg !12347
  %idxprom60.i536 = zext i32 %370 to i64, !dbg !12348
  %371 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12348
  %arrayidx61.i537 = getelementptr inbounds [2 x i16], [2 x i16]* %371, i64 %idxprom60.i536, !dbg !12348
  %arrayidx62.i538 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i537, i64 0, i64 0, !dbg !12348
  %372 = load i16, i16* %arrayidx62.i538, align 2, !dbg !12348
  %conv63.i539 = sext i16 %372 to i32, !dbg !12348
  store i32 %conv63.i539, i32* %code.i417, align 4, !dbg !12349
  %373 = load i32, i32* %index1.i423, align 4, !dbg !12350
  %idxprom64.i540 = zext i32 %373 to i64, !dbg !12351
  %374 = load [2 x i16]*, [2 x i16]** %table.addr.i414, align 8, !dbg !12351
  %arrayidx65.i541 = getelementptr inbounds [2 x i16], [2 x i16]* %374, i64 %idxprom64.i540, !dbg !12351
  %arrayidx66.i542 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i541, i64 0, i64 1, !dbg !12351
  %375 = load i16, i16* %arrayidx66.i542, align 2, !dbg !12351
  %conv67.i543 = sext i16 %375 to i32, !dbg !12351
  store i32 %conv67.i543, i32* %n.i421, align 4, !dbg !12352
  br label %if.end.i545, !dbg !12353

if.end.i545:                                      ; preds = %cond.end46.i544, %land.lhs.true36.i503, %cond.end.i501
  br label %if.end68.i546, !dbg !12354

if.end68.i546:                                    ; preds = %if.end.i545, %land.lhs.true.i459, %cond.end
  %376 = load i32, i32* %n.i421, align 4, !dbg !12355
  %377 = load i32, i32* %re_cache.i419, align 4, !dbg !12356
  %shl70.i547 = shl i32 %377, %376, !dbg !12356
  store i32 %shl70.i547, i32* %re_cache.i419, align 4, !dbg !12356
  %378 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12357
  %379 = load i32, i32* %re_index.i418, align 4, !dbg !12358
  %380 = load i32, i32* %n.i421, align 4, !dbg !12359
  %add71.i548 = add i32 %379, %380, !dbg !12360
  %cmp72.i549 = icmp ugt i32 %378, %add71.i548, !dbg !12361
  br i1 %cmp72.i549, label %cond.true74.i551, label %cond.false76.i552, !dbg !12362

cond.true74.i551:                                 ; preds = %if.end68.i546
  %381 = load i32, i32* %re_index.i418, align 4, !dbg !12363
  %382 = load i32, i32* %n.i421, align 4, !dbg !12364
  %add75.i550 = add i32 %381, %382, !dbg !12365
  br label %get_vlc2.exit555, !dbg !12366

cond.false76.i552:                                ; preds = %if.end68.i546
  %383 = load i32, i32* %re_size_plus8.i420, align 4, !dbg !12367
  br label %get_vlc2.exit555, !dbg !12368

get_vlc2.exit555:                                 ; preds = %cond.true74.i551, %cond.false76.i552
  %cond78.i553 = phi i32 [ %add75.i550, %cond.true74.i551 ], [ %383, %cond.false76.i552 ], !dbg !12369
  store i32 %cond78.i553, i32* %re_index.i418, align 4, !dbg !12370
  %384 = load i32, i32* %re_index.i418, align 4, !dbg !12371
  %385 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i413, align 8, !dbg !12372
  %index80.i554 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %385, i32 0, i32 2, !dbg !12373
  store i32 %384, i32* %index80.i554, align 8, !dbg !12374
  %386 = load i32, i32* %code.i417, align 4, !dbg !12375
  %387 = load i32, i32* %t_lav, align 4, !dbg !12376
  %sub158 = sub nsw i32 %386, %387, !dbg !12377
  %mul159 = mul nsw i32 %295, %sub158, !dbg !12378
  %add160 = add nsw i32 %conv156, %mul159, !dbg !12379
  %conv161 = trunc i32 %add160 to i8, !dbg !12175
  %388 = load i32, i32* %j, align 4, !dbg !12380
  %idxprom162 = sext i32 %388 to i64, !dbg !12381
  %389 = load i32, i32* %i, align 4, !dbg !12382
  %add163 = add nsw i32 %389, 1, !dbg !12383
  %idxprom164 = sext i32 %add163 to i64, !dbg !12381
  %390 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12381
  %env_facs_q165 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %390, i32 0, i32 22, !dbg !12384
  %arrayidx166 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q165, i64 0, i64 %idxprom164, !dbg !12381
  %arrayidx167 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx166, i64 0, i64 %idxprom162, !dbg !12381
  store i8 %conv161, i8* %arrayidx167, align 1, !dbg !12385
  %391 = load i32, i32* %j, align 4, !dbg !12386
  %idxprom168 = sext i32 %391 to i64, !dbg !12388
  %392 = load i32, i32* %i, align 4, !dbg !12389
  %add169 = add nsw i32 %392, 1, !dbg !12390
  %idxprom170 = sext i32 %add169 to i64, !dbg !12388
  %393 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12388
  %env_facs_q171 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %393, i32 0, i32 22, !dbg !12391
  %arrayidx172 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q171, i64 0, i64 %idxprom170, !dbg !12388
  %arrayidx173 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx172, i64 0, i64 %idxprom168, !dbg !12388
  %394 = load i8, i8* %arrayidx173, align 1, !dbg !12388
  %conv174 = zext i8 %394 to i32, !dbg !12388
  %cmp175 = icmp ugt i32 %conv174, 127, !dbg !12392
  br i1 %cmp175, label %if.then177, label %if.end186, !dbg !12393

if.then177:                                       ; preds = %get_vlc2.exit555
  %395 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12394
  %avctx178 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %395, i32 0, i32 1, !dbg !12396
  %396 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx178, align 8, !dbg !12396
  %397 = bitcast %struct.AVCodecContext* %396 to i8*, !dbg !12394
  %398 = load i32, i32* %j, align 4, !dbg !12397
  %idxprom179 = sext i32 %398 to i64, !dbg !12398
  %399 = load i32, i32* %i, align 4, !dbg !12399
  %add180 = add nsw i32 %399, 1, !dbg !12400
  %idxprom181 = sext i32 %add180 to i64, !dbg !12398
  %400 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12398
  %env_facs_q182 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %400, i32 0, i32 22, !dbg !12401
  %arrayidx183 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q182, i64 0, i64 %idxprom181, !dbg !12398
  %arrayidx184 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx183, i64 0, i64 %idxprom179, !dbg !12398
  %401 = load i8, i8* %arrayidx184, align 1, !dbg !12398
  %conv185 = zext i8 %401 to i32, !dbg !12398
  call void (i8*, i32, i8*, ...) @av_log(i8* %397, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv185), !dbg !12402
  store i32 -1094995529, i32* %retval, align 4, !dbg !12403
  br label %return, !dbg !12403

if.end186:                                        ; preds = %get_vlc2.exit555
  br label %for.inc187, !dbg !12404

for.inc187:                                       ; preds = %if.end186
  %402 = load i32, i32* %j, align 4, !dbg !12405
  %inc188 = add nsw i32 %402, 1, !dbg !12405
  store i32 %inc188, i32* %j, align 4, !dbg !12405
  br label %for.cond137, !dbg !12407, !llvm.loop !12408

for.end189:                                       ; preds = %for.cond137
  br label %if.end190

if.end190:                                        ; preds = %for.end189, %for.end135
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %for.end
  br label %if.end253, !dbg !12410

if.else192:                                       ; preds = %for.body
  %403 = load i32, i32* %delta, align 4, !dbg !12411
  %404 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12412
  %405 = load i32, i32* %bits, align 4, !dbg !12413
  %call193 = call i32 @get_bits(%struct.GetBitContext* %404, i32 %405), !dbg !12414
  %mul194 = mul i32 %403, %call193, !dbg !12415
  %conv195 = trunc i32 %mul194 to i8, !dbg !12411
  %406 = load i32, i32* %i, align 4, !dbg !12416
  %add196 = add nsw i32 %406, 1, !dbg !12417
  %idxprom197 = sext i32 %add196 to i64, !dbg !12418
  %407 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12418
  %env_facs_q198 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %407, i32 0, i32 22, !dbg !12419
  %arrayidx199 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q198, i64 0, i64 %idxprom197, !dbg !12418
  %arrayidx200 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx199, i64 0, i64 0, !dbg !12418
  store i8 %conv195, i8* %arrayidx200, align 16, !dbg !12420
  store i32 1, i32* %j, align 4, !dbg !12421
  br label %for.cond201, !dbg !12422

for.cond201:                                      ; preds = %for.inc250, %if.else192
  %408 = load i32, i32* %j, align 4, !dbg !12423
  %409 = load i32, i32* %i, align 4, !dbg !12425
  %add202 = add nsw i32 %409, 1, !dbg !12426
  %idxprom203 = sext i32 %add202 to i64, !dbg !12427
  %410 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12427
  %bs_freq_res204 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %410, i32 0, i32 3, !dbg !12428
  %arrayidx205 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res204, i64 0, i64 %idxprom203, !dbg !12427
  %411 = load i8, i8* %arrayidx205, align 1, !dbg !12427
  %idxprom206 = zext i8 %411 to i64, !dbg !12429
  %412 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12429
  %n207 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %412, i32 0, i32 19, !dbg !12430
  %arrayidx208 = getelementptr inbounds [2 x i32], [2 x i32]* %n207, i64 0, i64 %idxprom206, !dbg !12429
  %413 = load i32, i32* %arrayidx208, align 4, !dbg !12429
  %cmp209 = icmp ult i32 %408, %413, !dbg !12431
  br i1 %cmp209, label %for.body211, label %for.end252, !dbg !12432

for.body211:                                      ; preds = %for.cond201
  %414 = load i32, i32* %j, align 4, !dbg !12433
  %sub212 = sub nsw i32 %414, 1, !dbg !12434
  %idxprom213 = sext i32 %sub212 to i64, !dbg !12435
  %415 = load i32, i32* %i, align 4, !dbg !12436
  %add214 = add nsw i32 %415, 1, !dbg !12437
  %idxprom215 = sext i32 %add214 to i64, !dbg !12435
  %416 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12435
  %env_facs_q216 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %416, i32 0, i32 22, !dbg !12438
  %arrayidx217 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q216, i64 0, i64 %idxprom215, !dbg !12435
  %arrayidx218 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx217, i64 0, i64 %idxprom213, !dbg !12435
  %417 = load i8, i8* %arrayidx218, align 1, !dbg !12435
  %conv219 = zext i8 %417 to i32, !dbg !12435
  %418 = load i32, i32* %delta, align 4, !dbg !12439
  %419 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12440
  %420 = load [2 x i16]*, [2 x i16]** %f_huff, align 8, !dbg !12441
  store %struct.GetBitContext* %419, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12442
  store [2 x i16]* %420, [2 x i16]** %table.addr.i560, align 8, !dbg !12442
  store i32 9, i32* %bits.addr.i561, align 4, !dbg !12442
  store i32 3, i32* %max_depth.addr.i562, align 4, !dbg !12442
  %421 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12443
  %index.i570 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %421, i32 0, i32 2, !dbg !12444
  %422 = load i32, i32* %index.i570, align 8, !dbg !12444
  store i32 %422, i32* %re_index.i564, align 4, !dbg !11420
  %423 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12445
  %size_in_bits_plus8.i571 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %423, i32 0, i32 4, !dbg !12446
  %424 = load i32, i32* %size_in_bits_plus8.i571, align 8, !dbg !12446
  store i32 %424, i32* %re_size_plus8.i566, align 4, !dbg !11424
  %425 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12447
  %buffer.i572 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %425, i32 0, i32 0, !dbg !12448
  %426 = load i8*, i8** %buffer.i572, align 8, !dbg !12448
  %427 = load i32, i32* %re_index.i564, align 4, !dbg !12449
  %shr.i573 = lshr i32 %427, 3, !dbg !12450
  %idx.ext.i574 = zext i32 %shr.i573 to i64, !dbg !12451
  %add.ptr.i575 = getelementptr inbounds i8, i8* %426, i64 %idx.ext.i574, !dbg !12451
  %428 = bitcast i8* %add.ptr.i575 to %union.unaligned_32*, !dbg !12452
  %l.i576 = bitcast %union.unaligned_32* %428 to i32*, !dbg !12452
  %429 = load i32, i32* %l.i576, align 1, !dbg !12452
  store i32 %429, i32* %x.addr.i.i558, align 4, !dbg !12453
  %430 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12454
  %shl.i.i577 = shl i32 %430, 8, !dbg !12455
  %and.i.i578 = and i32 %shl.i.i577, 65280, !dbg !12456
  %431 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12457
  %shr.i.i579 = lshr i32 %431, 8, !dbg !12458
  %and1.i.i580 = and i32 %shr.i.i579, 255, !dbg !12459
  %or.i.i581 = or i32 %and.i.i578, %and1.i.i580, !dbg !12460
  %shl2.i.i582 = shl i32 %or.i.i581, 16, !dbg !12461
  %432 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12462
  %shr3.i.i583 = lshr i32 %432, 16, !dbg !12463
  %shl4.i.i584 = shl i32 %shr3.i.i583, 8, !dbg !12464
  %and5.i.i585 = and i32 %shl4.i.i584, 65280, !dbg !12465
  %433 = load i32, i32* %x.addr.i.i558, align 4, !dbg !12466
  %shr6.i.i586 = lshr i32 %433, 16, !dbg !12467
  %shr7.i.i587 = lshr i32 %shr6.i.i586, 8, !dbg !12468
  %and8.i.i588 = and i32 %shr7.i.i587, 255, !dbg !12469
  %or9.i.i589 = or i32 %and5.i.i585, %and8.i.i588, !dbg !12470
  %or10.i.i590 = or i32 %shl2.i.i582, %or9.i.i589, !dbg !12471
  %434 = load i32, i32* %re_index.i564, align 4, !dbg !12472
  %and.i591 = and i32 %434, 7, !dbg !12473
  %shl.i592 = shl i32 %or10.i.i590, %and.i591, !dbg !12474
  store i32 %shl.i592, i32* %re_cache.i565, align 4, !dbg !12475
  %435 = load i32, i32* %re_cache.i565, align 4, !dbg !12476
  %436 = load i32, i32* %bits.addr.i561, align 4, !dbg !12477
  %conv.i593 = trunc i32 %436 to i8, !dbg !12477
  %call2.i594 = call i32 @NEG_USR32(i32 %435, i8 signext %conv.i593) #11, !dbg !12478
  store i32 %call2.i594, i32* %index1.i569, align 4, !dbg !12479
  %437 = load i32, i32* %index1.i569, align 4, !dbg !12480
  %idxprom.i595 = zext i32 %437 to i64, !dbg !12481
  %438 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12481
  %arrayidx.i596 = getelementptr inbounds [2 x i16], [2 x i16]* %438, i64 %idxprom.i595, !dbg !12481
  %arrayidx3.i597 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i596, i64 0, i64 0, !dbg !12481
  %439 = load i16, i16* %arrayidx3.i597, align 2, !dbg !12481
  %conv4.i598 = sext i16 %439 to i32, !dbg !12481
  store i32 %conv4.i598, i32* %code.i563, align 4, !dbg !12482
  %440 = load i32, i32* %index1.i569, align 4, !dbg !12483
  %idxprom5.i599 = zext i32 %440 to i64, !dbg !12484
  %441 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12484
  %arrayidx6.i600 = getelementptr inbounds [2 x i16], [2 x i16]* %441, i64 %idxprom5.i599, !dbg !12484
  %arrayidx7.i601 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i600, i64 0, i64 1, !dbg !12484
  %442 = load i16, i16* %arrayidx7.i601, align 2, !dbg !12484
  %conv8.i602 = sext i16 %442 to i32, !dbg !12484
  store i32 %conv8.i602, i32* %n.i567, align 4, !dbg !12485
  %443 = load i32, i32* %max_depth.addr.i562, align 4, !dbg !12486
  %cmp.i603 = icmp sgt i32 %443, 1, !dbg !12487
  br i1 %cmp.i603, label %land.lhs.true.i605, label %if.end68.i692, !dbg !12488

land.lhs.true.i605:                               ; preds = %for.body211
  %444 = load i32, i32* %n.i567, align 4, !dbg !12489
  %cmp10.i604 = icmp slt i32 %444, 0, !dbg !12490
  br i1 %cmp10.i604, label %if.then.i608, label %if.end68.i692, !dbg !12491

if.then.i608:                                     ; preds = %land.lhs.true.i605
  %445 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12492
  %446 = load i32, i32* %re_index.i564, align 4, !dbg !12493
  %447 = load i32, i32* %bits.addr.i561, align 4, !dbg !12494
  %add.i606 = add i32 %446, %447, !dbg !12495
  %cmp12.i607 = icmp ugt i32 %445, %add.i606, !dbg !12496
  br i1 %cmp12.i607, label %cond.true.i610, label %cond.false.i611, !dbg !12497

cond.true.i610:                                   ; preds = %if.then.i608
  %448 = load i32, i32* %re_index.i564, align 4, !dbg !12498
  %449 = load i32, i32* %bits.addr.i561, align 4, !dbg !12499
  %add14.i609 = add i32 %448, %449, !dbg !12500
  br label %cond.end.i647, !dbg !12501

cond.false.i611:                                  ; preds = %if.then.i608
  %450 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12502
  br label %cond.end.i647, !dbg !12503

cond.end.i647:                                    ; preds = %cond.false.i611, %cond.true.i610
  %cond.i612 = phi i32 [ %add14.i609, %cond.true.i610 ], [ %450, %cond.false.i611 ], !dbg !12504
  store i32 %cond.i612, i32* %re_index.i564, align 4, !dbg !12505
  %451 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12506
  %buffer15.i613 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %451, i32 0, i32 0, !dbg !12507
  %452 = load i8*, i8** %buffer15.i613, align 8, !dbg !12507
  %453 = load i32, i32* %re_index.i564, align 4, !dbg !12508
  %shr16.i614 = lshr i32 %453, 3, !dbg !12509
  %idx.ext17.i615 = zext i32 %shr16.i614 to i64, !dbg !12510
  %add.ptr18.i616 = getelementptr inbounds i8, i8* %452, i64 %idx.ext17.i615, !dbg !12510
  %454 = bitcast i8* %add.ptr18.i616 to %union.unaligned_32*, !dbg !12511
  %l19.i617 = bitcast %union.unaligned_32* %454 to i32*, !dbg !12511
  %455 = load i32, i32* %l19.i617, align 1, !dbg !12511
  store i32 %455, i32* %x.addr.i81.i557, align 4, !dbg !12512
  %456 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12513
  %shl.i82.i618 = shl i32 %456, 8, !dbg !12514
  %and.i83.i619 = and i32 %shl.i82.i618, 65280, !dbg !12515
  %457 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12516
  %shr.i84.i620 = lshr i32 %457, 8, !dbg !12517
  %and1.i85.i621 = and i32 %shr.i84.i620, 255, !dbg !12518
  %or.i86.i622 = or i32 %and.i83.i619, %and1.i85.i621, !dbg !12519
  %shl2.i87.i623 = shl i32 %or.i86.i622, 16, !dbg !12520
  %458 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12521
  %shr3.i88.i624 = lshr i32 %458, 16, !dbg !12522
  %shl4.i89.i625 = shl i32 %shr3.i88.i624, 8, !dbg !12523
  %and5.i90.i626 = and i32 %shl4.i89.i625, 65280, !dbg !12524
  %459 = load i32, i32* %x.addr.i81.i557, align 4, !dbg !12525
  %shr6.i91.i627 = lshr i32 %459, 16, !dbg !12526
  %shr7.i92.i628 = lshr i32 %shr6.i91.i627, 8, !dbg !12527
  %and8.i93.i629 = and i32 %shr7.i92.i628, 255, !dbg !12528
  %or9.i94.i630 = or i32 %and5.i90.i626, %and8.i93.i629, !dbg !12529
  %or10.i95.i631 = or i32 %shl2.i87.i623, %or9.i94.i630, !dbg !12530
  %460 = load i32, i32* %re_index.i564, align 4, !dbg !12531
  %and21.i632 = and i32 %460, 7, !dbg !12532
  %shl22.i633 = shl i32 %or10.i95.i631, %and21.i632, !dbg !12533
  store i32 %shl22.i633, i32* %re_cache.i565, align 4, !dbg !12534
  %461 = load i32, i32* %n.i567, align 4, !dbg !12535
  %sub.i634 = sub nsw i32 0, %461, !dbg !12536
  store i32 %sub.i634, i32* %nb_bits.i568, align 4, !dbg !12537
  %462 = load i32, i32* %re_cache.i565, align 4, !dbg !12538
  %463 = load i32, i32* %nb_bits.i568, align 4, !dbg !12539
  %conv23.i635 = trunc i32 %463 to i8, !dbg !12539
  %call24.i636 = call i32 @NEG_USR32(i32 %462, i8 signext %conv23.i635) #11, !dbg !12540
  %464 = load i32, i32* %code.i563, align 4, !dbg !12541
  %add25.i637 = add i32 %call24.i636, %464, !dbg !12542
  store i32 %add25.i637, i32* %index1.i569, align 4, !dbg !12543
  %465 = load i32, i32* %index1.i569, align 4, !dbg !12544
  %idxprom26.i638 = zext i32 %465 to i64, !dbg !12545
  %466 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12545
  %arrayidx27.i639 = getelementptr inbounds [2 x i16], [2 x i16]* %466, i64 %idxprom26.i638, !dbg !12545
  %arrayidx28.i640 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i639, i64 0, i64 0, !dbg !12545
  %467 = load i16, i16* %arrayidx28.i640, align 2, !dbg !12545
  %conv29.i641 = sext i16 %467 to i32, !dbg !12545
  store i32 %conv29.i641, i32* %code.i563, align 4, !dbg !12546
  %468 = load i32, i32* %index1.i569, align 4, !dbg !12547
  %idxprom30.i642 = zext i32 %468 to i64, !dbg !12548
  %469 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12548
  %arrayidx31.i643 = getelementptr inbounds [2 x i16], [2 x i16]* %469, i64 %idxprom30.i642, !dbg !12548
  %arrayidx32.i644 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i643, i64 0, i64 1, !dbg !12548
  %470 = load i16, i16* %arrayidx32.i644, align 2, !dbg !12548
  %conv33.i645 = sext i16 %470 to i32, !dbg !12548
  store i32 %conv33.i645, i32* %n.i567, align 4, !dbg !12549
  %471 = load i32, i32* %max_depth.addr.i562, align 4, !dbg !12550
  %cmp34.i646 = icmp sgt i32 %471, 2, !dbg !12551
  br i1 %cmp34.i646, label %land.lhs.true36.i649, label %if.end.i691, !dbg !12552

land.lhs.true36.i649:                             ; preds = %cond.end.i647
  %472 = load i32, i32* %n.i567, align 4, !dbg !12553
  %cmp37.i648 = icmp slt i32 %472, 0, !dbg !12554
  br i1 %cmp37.i648, label %if.then39.i652, label %if.end.i691, !dbg !12555

if.then39.i652:                                   ; preds = %land.lhs.true36.i649
  %473 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12556
  %474 = load i32, i32* %re_index.i564, align 4, !dbg !12557
  %475 = load i32, i32* %nb_bits.i568, align 4, !dbg !12558
  %add40.i650 = add i32 %474, %475, !dbg !12559
  %cmp41.i651 = icmp ugt i32 %473, %add40.i650, !dbg !12560
  br i1 %cmp41.i651, label %cond.true43.i654, label %cond.false45.i655, !dbg !12561

cond.true43.i654:                                 ; preds = %if.then39.i652
  %476 = load i32, i32* %re_index.i564, align 4, !dbg !12562
  %477 = load i32, i32* %nb_bits.i568, align 4, !dbg !12563
  %add44.i653 = add i32 %476, %477, !dbg !12564
  br label %cond.end46.i690, !dbg !12565

cond.false45.i655:                                ; preds = %if.then39.i652
  %478 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12566
  br label %cond.end46.i690, !dbg !12567

cond.end46.i690:                                  ; preds = %cond.false45.i655, %cond.true43.i654
  %cond47.i656 = phi i32 [ %add44.i653, %cond.true43.i654 ], [ %478, %cond.false45.i655 ], !dbg !12568
  store i32 %cond47.i656, i32* %re_index.i564, align 4, !dbg !12569
  %479 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12570
  %buffer48.i657 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %479, i32 0, i32 0, !dbg !12571
  %480 = load i8*, i8** %buffer48.i657, align 8, !dbg !12571
  %481 = load i32, i32* %re_index.i564, align 4, !dbg !12572
  %shr49.i658 = lshr i32 %481, 3, !dbg !12573
  %idx.ext50.i659 = zext i32 %shr49.i658 to i64, !dbg !12574
  %add.ptr51.i660 = getelementptr inbounds i8, i8* %480, i64 %idx.ext50.i659, !dbg !12574
  %482 = bitcast i8* %add.ptr51.i660 to %union.unaligned_32*, !dbg !12575
  %l52.i661 = bitcast %union.unaligned_32* %482 to i32*, !dbg !12575
  %483 = load i32, i32* %l52.i661, align 1, !dbg !12575
  store i32 %483, i32* %x.addr.i96.i556, align 4, !dbg !12576
  %484 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !12577
  %shl.i97.i662 = shl i32 %484, 8, !dbg !12578
  %and.i98.i663 = and i32 %shl.i97.i662, 65280, !dbg !12579
  %485 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !12580
  %shr.i99.i664 = lshr i32 %485, 8, !dbg !12581
  %and1.i100.i665 = and i32 %shr.i99.i664, 255, !dbg !12582
  %or.i101.i666 = or i32 %and.i98.i663, %and1.i100.i665, !dbg !12583
  %shl2.i102.i667 = shl i32 %or.i101.i666, 16, !dbg !12584
  %486 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !12585
  %shr3.i103.i668 = lshr i32 %486, 16, !dbg !12586
  %shl4.i104.i669 = shl i32 %shr3.i103.i668, 8, !dbg !12587
  %and5.i105.i670 = and i32 %shl4.i104.i669, 65280, !dbg !12588
  %487 = load i32, i32* %x.addr.i96.i556, align 4, !dbg !12589
  %shr6.i106.i671 = lshr i32 %487, 16, !dbg !12590
  %shr7.i107.i672 = lshr i32 %shr6.i106.i671, 8, !dbg !12591
  %and8.i108.i673 = and i32 %shr7.i107.i672, 255, !dbg !12592
  %or9.i109.i674 = or i32 %and5.i105.i670, %and8.i108.i673, !dbg !12593
  %or10.i110.i675 = or i32 %shl2.i102.i667, %or9.i109.i674, !dbg !12594
  %488 = load i32, i32* %re_index.i564, align 4, !dbg !12595
  %and54.i676 = and i32 %488, 7, !dbg !12596
  %shl55.i677 = shl i32 %or10.i110.i675, %and54.i676, !dbg !12597
  store i32 %shl55.i677, i32* %re_cache.i565, align 4, !dbg !12598
  %489 = load i32, i32* %n.i567, align 4, !dbg !12599
  %sub56.i678 = sub nsw i32 0, %489, !dbg !12600
  store i32 %sub56.i678, i32* %nb_bits.i568, align 4, !dbg !12601
  %490 = load i32, i32* %re_cache.i565, align 4, !dbg !12602
  %491 = load i32, i32* %nb_bits.i568, align 4, !dbg !12603
  %conv57.i679 = trunc i32 %491 to i8, !dbg !12603
  %call58.i680 = call i32 @NEG_USR32(i32 %490, i8 signext %conv57.i679) #11, !dbg !12604
  %492 = load i32, i32* %code.i563, align 4, !dbg !12605
  %add59.i681 = add i32 %call58.i680, %492, !dbg !12606
  store i32 %add59.i681, i32* %index1.i569, align 4, !dbg !12607
  %493 = load i32, i32* %index1.i569, align 4, !dbg !12608
  %idxprom60.i682 = zext i32 %493 to i64, !dbg !12609
  %494 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12609
  %arrayidx61.i683 = getelementptr inbounds [2 x i16], [2 x i16]* %494, i64 %idxprom60.i682, !dbg !12609
  %arrayidx62.i684 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i683, i64 0, i64 0, !dbg !12609
  %495 = load i16, i16* %arrayidx62.i684, align 2, !dbg !12609
  %conv63.i685 = sext i16 %495 to i32, !dbg !12609
  store i32 %conv63.i685, i32* %code.i563, align 4, !dbg !12610
  %496 = load i32, i32* %index1.i569, align 4, !dbg !12611
  %idxprom64.i686 = zext i32 %496 to i64, !dbg !12612
  %497 = load [2 x i16]*, [2 x i16]** %table.addr.i560, align 8, !dbg !12612
  %arrayidx65.i687 = getelementptr inbounds [2 x i16], [2 x i16]* %497, i64 %idxprom64.i686, !dbg !12612
  %arrayidx66.i688 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i687, i64 0, i64 1, !dbg !12612
  %498 = load i16, i16* %arrayidx66.i688, align 2, !dbg !12612
  %conv67.i689 = sext i16 %498 to i32, !dbg !12612
  store i32 %conv67.i689, i32* %n.i567, align 4, !dbg !12613
  br label %if.end.i691, !dbg !12614

if.end.i691:                                      ; preds = %cond.end46.i690, %land.lhs.true36.i649, %cond.end.i647
  br label %if.end68.i692, !dbg !12615

if.end68.i692:                                    ; preds = %if.end.i691, %land.lhs.true.i605, %for.body211
  %499 = load i32, i32* %n.i567, align 4, !dbg !12616
  %500 = load i32, i32* %re_cache.i565, align 4, !dbg !12617
  %shl70.i693 = shl i32 %500, %499, !dbg !12617
  store i32 %shl70.i693, i32* %re_cache.i565, align 4, !dbg !12617
  %501 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12618
  %502 = load i32, i32* %re_index.i564, align 4, !dbg !12619
  %503 = load i32, i32* %n.i567, align 4, !dbg !12620
  %add71.i694 = add i32 %502, %503, !dbg !12621
  %cmp72.i695 = icmp ugt i32 %501, %add71.i694, !dbg !12622
  br i1 %cmp72.i695, label %cond.true74.i697, label %cond.false76.i698, !dbg !12623

cond.true74.i697:                                 ; preds = %if.end68.i692
  %504 = load i32, i32* %re_index.i564, align 4, !dbg !12624
  %505 = load i32, i32* %n.i567, align 4, !dbg !12625
  %add75.i696 = add i32 %504, %505, !dbg !12626
  br label %get_vlc2.exit701, !dbg !12627

cond.false76.i698:                                ; preds = %if.end68.i692
  %506 = load i32, i32* %re_size_plus8.i566, align 4, !dbg !12628
  br label %get_vlc2.exit701, !dbg !12629

get_vlc2.exit701:                                 ; preds = %cond.true74.i697, %cond.false76.i698
  %cond78.i699 = phi i32 [ %add75.i696, %cond.true74.i697 ], [ %506, %cond.false76.i698 ], !dbg !12630
  store i32 %cond78.i699, i32* %re_index.i564, align 4, !dbg !12631
  %507 = load i32, i32* %re_index.i564, align 4, !dbg !12632
  %508 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i559, align 8, !dbg !12633
  %index80.i700 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %508, i32 0, i32 2, !dbg !12634
  store i32 %507, i32* %index80.i700, align 8, !dbg !12635
  %509 = load i32, i32* %code.i563, align 4, !dbg !12636
  %510 = load i32, i32* %f_lav, align 4, !dbg !12637
  %sub221 = sub nsw i32 %509, %510, !dbg !12638
  %mul222 = mul nsw i32 %418, %sub221, !dbg !12639
  %add223 = add nsw i32 %conv219, %mul222, !dbg !12640
  %conv224 = trunc i32 %add223 to i8, !dbg !12435
  %511 = load i32, i32* %j, align 4, !dbg !12641
  %idxprom225 = sext i32 %511 to i64, !dbg !12642
  %512 = load i32, i32* %i, align 4, !dbg !12643
  %add226 = add nsw i32 %512, 1, !dbg !12644
  %idxprom227 = sext i32 %add226 to i64, !dbg !12642
  %513 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12642
  %env_facs_q228 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %513, i32 0, i32 22, !dbg !12645
  %arrayidx229 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q228, i64 0, i64 %idxprom227, !dbg !12642
  %arrayidx230 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx229, i64 0, i64 %idxprom225, !dbg !12642
  store i8 %conv224, i8* %arrayidx230, align 1, !dbg !12646
  %514 = load i32, i32* %j, align 4, !dbg !12647
  %idxprom231 = sext i32 %514 to i64, !dbg !12649
  %515 = load i32, i32* %i, align 4, !dbg !12650
  %add232 = add nsw i32 %515, 1, !dbg !12651
  %idxprom233 = sext i32 %add232 to i64, !dbg !12649
  %516 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12649
  %env_facs_q234 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %516, i32 0, i32 22, !dbg !12652
  %arrayidx235 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q234, i64 0, i64 %idxprom233, !dbg !12649
  %arrayidx236 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx235, i64 0, i64 %idxprom231, !dbg !12649
  %517 = load i8, i8* %arrayidx236, align 1, !dbg !12649
  %conv237 = zext i8 %517 to i32, !dbg !12649
  %cmp238 = icmp ugt i32 %conv237, 127, !dbg !12653
  br i1 %cmp238, label %if.then240, label %if.end249, !dbg !12654

if.then240:                                       ; preds = %get_vlc2.exit701
  %518 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !12655
  %avctx241 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %518, i32 0, i32 1, !dbg !12657
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx241, align 8, !dbg !12657
  %520 = bitcast %struct.AVCodecContext* %519 to i8*, !dbg !12655
  %521 = load i32, i32* %j, align 4, !dbg !12658
  %idxprom242 = sext i32 %521 to i64, !dbg !12659
  %522 = load i32, i32* %i, align 4, !dbg !12660
  %add243 = add nsw i32 %522, 1, !dbg !12661
  %idxprom244 = sext i32 %add243 to i64, !dbg !12659
  %523 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12659
  %env_facs_q245 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %523, i32 0, i32 22, !dbg !12662
  %arrayidx246 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q245, i64 0, i64 %idxprom244, !dbg !12659
  %arrayidx247 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx246, i64 0, i64 %idxprom242, !dbg !12659
  %524 = load i8, i8* %arrayidx247, align 1, !dbg !12659
  %conv248 = zext i8 %524 to i32, !dbg !12659
  call void (i8*, i32, i8*, ...) @av_log(i8* %520, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0), i32 %conv248), !dbg !12663
  store i32 -1094995529, i32* %retval, align 4, !dbg !12664
  br label %return, !dbg !12664

if.end249:                                        ; preds = %get_vlc2.exit701
  br label %for.inc250, !dbg !12665

for.inc250:                                       ; preds = %if.end249
  %525 = load i32, i32* %j, align 4, !dbg !12666
  %inc251 = add nsw i32 %525, 1, !dbg !12666
  store i32 %inc251, i32* %j, align 4, !dbg !12666
  br label %for.cond201, !dbg !12668, !llvm.loop !12669

for.end252:                                       ; preds = %for.cond201
  br label %if.end253

if.end253:                                        ; preds = %for.end252, %if.end191
  br label %for.inc254, !dbg !12671

for.inc254:                                       ; preds = %if.end253
  %526 = load i32, i32* %i, align 4, !dbg !12672
  %inc255 = add nsw i32 %526, 1, !dbg !12672
  store i32 %inc255, i32* %i, align 4, !dbg !12672
  br label %for.cond, !dbg !12674, !llvm.loop !12675

for.end256:                                       ; preds = %for.cond
  %527 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12677
  %env_facs_q257 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %527, i32 0, i32 22, !dbg !12678
  %arrayidx258 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q257, i64 0, i64 0, !dbg !12677
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx258, i32 0, i32 0, !dbg !12679
  %528 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12680
  %bs_num_env259 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %528, i32 0, i32 2, !dbg !12681
  %529 = load i32, i32* %bs_num_env259, align 8, !dbg !12681
  %idxprom260 = zext i32 %529 to i64, !dbg !12682
  %530 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12682
  %env_facs_q261 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %530, i32 0, i32 22, !dbg !12683
  %arrayidx262 = getelementptr inbounds [6 x [48 x i8]], [6 x [48 x i8]]* %env_facs_q261, i64 0, i64 %idxprom260, !dbg !12682
  %arraydecay263 = getelementptr inbounds [48 x i8], [48 x i8]* %arrayidx262, i32 0, i32 0, !dbg !12679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay263, i64 48, i32 16, i1 false), !dbg !12679
  store i32 0, i32* %retval, align 4, !dbg !12684
  br label %return, !dbg !12684

return:                                           ; preds = %for.end256, %if.then240, %if.then177, %if.then123, %if.then69
  %531 = load i32, i32* %retval, align 4, !dbg !12685
  ret i32 %531, !dbg !12685
}

; Function Attrs: nounwind uwtable
define internal i32 @read_sbr_noise(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, %struct.GetBitContext* %gb, %struct.SBRData* %ch_data, i32 %ch) #3 !dbg !12686 {
entry:
  %x.addr.i96.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i112, metadata !6417, metadata !2753), !dbg !12687
  %x.addr.i81.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i113, metadata !6417, metadata !2753), !dbg !12698
  %x.addr.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i114, metadata !6417, metadata !2753), !dbg !12700
  %s.addr.i115 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i115, metadata !11409, metadata !2753), !dbg !12702
  %table.addr.i116 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i116, metadata !11411, metadata !2753), !dbg !12703
  %bits.addr.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i117, metadata !11413, metadata !2753), !dbg !12704
  %max_depth.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i118, metadata !11415, metadata !2753), !dbg !12705
  %code.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i119, metadata !11417, metadata !2753), !dbg !12706
  %re_index.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i120, metadata !11419, metadata !2753), !dbg !12707
  %re_cache.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i121, metadata !11421, metadata !2753), !dbg !12708
  %re_size_plus8.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i122, metadata !11423, metadata !2753), !dbg !12709
  %n.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i123, metadata !11425, metadata !2753), !dbg !12710
  %nb_bits.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i124, metadata !11427, metadata !2753), !dbg !12711
  %index1.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i125, metadata !11429, metadata !2753), !dbg !12712
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !6417, metadata !2753), !dbg !12713
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !6417, metadata !2753), !dbg !12720
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6417, metadata !2753), !dbg !12722
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !11409, metadata !2753), !dbg !12724
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !11411, metadata !2753), !dbg !12725
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !11413, metadata !2753), !dbg !12726
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !11415, metadata !2753), !dbg !12727
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !11417, metadata !2753), !dbg !12728
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !11419, metadata !2753), !dbg !12729
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !11421, metadata !2753), !dbg !12730
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !11423, metadata !2753), !dbg !12731
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !11425, metadata !2753), !dbg !12732
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !11427, metadata !2753), !dbg !12733
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !11429, metadata !2753), !dbg !12734
  %retval = alloca i32, align 4
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %ch.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t_huff = alloca [2 x i16]*, align 8
  %f_huff = alloca [2 x i16]*, align 8
  %t_lav = alloca i32, align 4
  %f_lav = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !12735, metadata !2753), !dbg !12736
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !12737, metadata !2753), !dbg !12738
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !12739, metadata !2753), !dbg !12740
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !12741, metadata !2753), !dbg !12742
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !12743, metadata !2753), !dbg !12744
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12745, metadata !2753), !dbg !12746
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12747, metadata !2753), !dbg !12748
  call void @llvm.dbg.declare(metadata [2 x i16]** %t_huff, metadata !12749, metadata !2753), !dbg !12750
  call void @llvm.dbg.declare(metadata [2 x i16]** %f_huff, metadata !12751, metadata !2753), !dbg !12752
  call void @llvm.dbg.declare(metadata i32* %t_lav, metadata !12753, metadata !2753), !dbg !12754
  call void @llvm.dbg.declare(metadata i32* %f_lav, metadata !12755, metadata !2753), !dbg !12756
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !12757, metadata !2753), !dbg !12758
  %0 = load i32, i32* %ch.addr, align 4, !dbg !12759
  %cmp = icmp eq i32 %0, 1, !dbg !12760
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12761

land.rhs:                                         ; preds = %entry
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12762
  %bs_coupling = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 11, !dbg !12764
  %2 = load i32, i32* %bs_coupling, align 16, !dbg !12764
  %cmp1 = icmp eq i32 %2, 1, !dbg !12765
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32, !dbg !12766
  %add = add nsw i32 %land.ext, 1, !dbg !12768
  store i32 %add, i32* %delta, align 4, !dbg !12769
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12770
  %bs_coupling2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 11, !dbg !12772
  %5 = load i32, i32* %bs_coupling2, align 16, !dbg !12772
  %tobool = icmp ne i32 %5, 0, !dbg !12770
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !12773

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %ch.addr, align 4, !dbg !12774
  %tobool3 = icmp ne i32 %6, 0, !dbg !12774
  br i1 %tobool3, label %if.then, label %if.else, !dbg !12776

if.then:                                          ; preds = %land.lhs.true
  %7 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 9, i32 1), align 8, !dbg !12777
  store [2 x i16]* %7, [2 x i16]** %t_huff, align 8, !dbg !12779
  %8 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 9), align 1, !dbg !12780
  %conv = sext i8 %8 to i32, !dbg !12780
  store i32 %conv, i32* %t_lav, align 4, !dbg !12781
  %9 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 7, i32 1), align 8, !dbg !12782
  store [2 x i16]* %9, [2 x i16]** %f_huff, align 8, !dbg !12783
  %10 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 7), align 1, !dbg !12784
  %conv4 = sext i8 %10 to i32, !dbg !12784
  store i32 %conv4, i32* %f_lav, align 4, !dbg !12785
  br label %if.end, !dbg !12786

if.else:                                          ; preds = %land.lhs.true, %land.end
  %11 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 8, i32 1), align 8, !dbg !12787
  store [2 x i16]* %11, [2 x i16]** %t_huff, align 8, !dbg !12789
  %12 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 8), align 1, !dbg !12790
  %conv5 = sext i8 %12 to i32, !dbg !12790
  store i32 %conv5, i32* %t_lav, align 4, !dbg !12791
  %13 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([10 x %struct.VLC], [10 x %struct.VLC]* @vlc_sbr, i64 0, i64 5, i32 1), align 8, !dbg !12792
  store [2 x i16]* %13, [2 x i16]** %f_huff, align 8, !dbg !12793
  %14 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_sbr_lav, i64 0, i64 5), align 1, !dbg !12794
  %conv6 = sext i8 %14 to i32, !dbg !12794
  store i32 %conv6, i32* %f_lav, align 4, !dbg !12795
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !12796
  br label %for.cond, !dbg !12797

for.cond:                                         ; preds = %for.inc102, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !12798
  %16 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12800
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %16, i32 0, i32 4, !dbg !12801
  %17 = load i32, i32* %bs_num_noise, align 4, !dbg !12801
  %cmp7 = icmp ult i32 %15, %17, !dbg !12802
  br i1 %cmp7, label %for.body, label %for.end104, !dbg !12803

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !12804
  %idxprom = sext i32 %18 to i64, !dbg !12805
  %19 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12805
  %bs_df_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 6, !dbg !12806
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %bs_df_noise, i64 0, i64 %idxprom, !dbg !12805
  %20 = load i8, i8* %arrayidx, align 1, !dbg !12805
  %tobool9 = icmp ne i8 %20, 0, !dbg !12805
  br i1 %tobool9, label %if.then10, label %if.else46, !dbg !12807

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !12808
  br label %for.cond11, !dbg !12809

for.cond11:                                       ; preds = %for.inc, %if.then10
  %21 = load i32, i32* %j, align 4, !dbg !12810
  %22 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !12812
  %n_q = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %22, i32 0, i32 20, !dbg !12813
  %23 = load i32, i32* %n_q, align 8, !dbg !12813
  %cmp12 = icmp ult i32 %21, %23, !dbg !12814
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !12815

for.body14:                                       ; preds = %for.cond11
  %24 = load i32, i32* %j, align 4, !dbg !12816
  %idxprom15 = sext i32 %24 to i64, !dbg !12817
  %25 = load i32, i32* %i, align 4, !dbg !12818
  %idxprom16 = sext i32 %25 to i64, !dbg !12817
  %26 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !12817
  %noise_facs_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %26, i32 0, i32 24, !dbg !12819
  %arrayidx17 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q, i64 0, i64 %idxprom16, !dbg !12817
  %arrayidx18 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !12817
  %27 = load i8, i8* %arrayidx18, align 1, !dbg !12817
  %conv19 = zext i8 %27 to i32, !dbg !12817
  %28 = load i32, i32* %delta, align 4, !dbg !12820
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12821
  %30 = load [2 x i16]*, [2 x i16]** %t_huff, align 8, !dbg !12822
  store %struct.GetBitContext* %29, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12823
  store [2 x i16]* %30, [2 x i16]** %table.addr.i, align 8, !dbg !12823
  store i32 9, i32* %bits.addr.i, align 4, !dbg !12823
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !12823
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12824
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 2, !dbg !12825
  %32 = load i32, i32* %index.i, align 8, !dbg !12825
  store i32 %32, i32* %re_index.i, align 4, !dbg !12729
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12826
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 4, !dbg !12827
  %34 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !12827
  store i32 %34, i32* %re_size_plus8.i, align 4, !dbg !12731
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12828
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %35, i32 0, i32 0, !dbg !12829
  %36 = load i8*, i8** %buffer.i, align 8, !dbg !12829
  %37 = load i32, i32* %re_index.i, align 4, !dbg !12830
  %shr.i = lshr i32 %37, 3, !dbg !12831
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !12832
  %add.ptr.i = getelementptr inbounds i8, i8* %36, i64 %idx.ext.i, !dbg !12832
  %38 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !12833
  %l.i = bitcast %union.unaligned_32* %38 to i32*, !dbg !12833
  %39 = load i32, i32* %l.i, align 1, !dbg !12833
  store i32 %39, i32* %x.addr.i.i, align 4, !dbg !12834
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !12835
  %shl.i.i = shl i32 %40, 8, !dbg !12836
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !12837
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !12838
  %shr.i.i = lshr i32 %41, 8, !dbg !12839
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !12840
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !12841
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !12842
  %42 = load i32, i32* %x.addr.i.i, align 4, !dbg !12843
  %shr3.i.i = lshr i32 %42, 16, !dbg !12844
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !12845
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !12846
  %43 = load i32, i32* %x.addr.i.i, align 4, !dbg !12847
  %shr6.i.i = lshr i32 %43, 16, !dbg !12848
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !12849
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !12850
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !12851
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !12852
  %44 = load i32, i32* %re_index.i, align 4, !dbg !12853
  %and.i = and i32 %44, 7, !dbg !12854
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !12855
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !12856
  %45 = load i32, i32* %re_cache.i, align 4, !dbg !12857
  %46 = load i32, i32* %bits.addr.i, align 4, !dbg !12858
  %conv.i = trunc i32 %46 to i8, !dbg !12858
  %call2.i = call i32 @NEG_USR32(i32 %45, i8 signext %conv.i) #11, !dbg !12859
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !12860
  %47 = load i32, i32* %index1.i, align 4, !dbg !12861
  %idxprom.i = zext i32 %47 to i64, !dbg !12862
  %48 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12862
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %48, i64 %idxprom.i, !dbg !12862
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !12862
  %49 = load i16, i16* %arrayidx3.i, align 2, !dbg !12862
  %conv4.i = sext i16 %49 to i32, !dbg !12862
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !12863
  %50 = load i32, i32* %index1.i, align 4, !dbg !12864
  %idxprom5.i = zext i32 %50 to i64, !dbg !12865
  %51 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12865
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %51, i64 %idxprom5.i, !dbg !12865
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !12865
  %52 = load i16, i16* %arrayidx7.i, align 2, !dbg !12865
  %conv8.i = sext i16 %52 to i32, !dbg !12865
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !12866
  %53 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12867
  %cmp.i = icmp sgt i32 %53, 1, !dbg !12868
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !12869

land.lhs.true.i:                                  ; preds = %for.body14
  %54 = load i32, i32* %n.i, align 4, !dbg !12870
  %cmp10.i = icmp slt i32 %54, 0, !dbg !12871
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !12872

if.then.i:                                        ; preds = %land.lhs.true.i
  %55 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12873
  %56 = load i32, i32* %re_index.i, align 4, !dbg !12874
  %57 = load i32, i32* %bits.addr.i, align 4, !dbg !12875
  %add.i = add i32 %56, %57, !dbg !12876
  %cmp12.i = icmp ugt i32 %55, %add.i, !dbg !12877
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !12878

cond.true.i:                                      ; preds = %if.then.i
  %58 = load i32, i32* %re_index.i, align 4, !dbg !12879
  %59 = load i32, i32* %bits.addr.i, align 4, !dbg !12880
  %add14.i = add i32 %58, %59, !dbg !12881
  br label %cond.end.i, !dbg !12882

cond.false.i:                                     ; preds = %if.then.i
  %60 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12883
  br label %cond.end.i, !dbg !12884

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %60, %cond.false.i ], !dbg !12885
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !12886
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12887
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %61, i32 0, i32 0, !dbg !12888
  %62 = load i8*, i8** %buffer15.i, align 8, !dbg !12888
  %63 = load i32, i32* %re_index.i, align 4, !dbg !12889
  %shr16.i = lshr i32 %63, 3, !dbg !12890
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !12891
  %add.ptr18.i = getelementptr inbounds i8, i8* %62, i64 %idx.ext17.i, !dbg !12891
  %64 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !12892
  %l19.i = bitcast %union.unaligned_32* %64 to i32*, !dbg !12892
  %65 = load i32, i32* %l19.i, align 1, !dbg !12892
  store i32 %65, i32* %x.addr.i81.i, align 4, !dbg !12893
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12894
  %shl.i82.i = shl i32 %66, 8, !dbg !12895
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !12896
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12897
  %shr.i84.i = lshr i32 %67, 8, !dbg !12898
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !12899
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !12900
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !12901
  %68 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12902
  %shr3.i88.i = lshr i32 %68, 16, !dbg !12903
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !12904
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !12905
  %69 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12906
  %shr6.i91.i = lshr i32 %69, 16, !dbg !12907
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !12908
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !12909
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !12910
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !12911
  %70 = load i32, i32* %re_index.i, align 4, !dbg !12912
  %and21.i = and i32 %70, 7, !dbg !12913
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !12914
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !12915
  %71 = load i32, i32* %n.i, align 4, !dbg !12916
  %sub.i = sub nsw i32 0, %71, !dbg !12917
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !12918
  %72 = load i32, i32* %re_cache.i, align 4, !dbg !12919
  %73 = load i32, i32* %nb_bits.i, align 4, !dbg !12920
  %conv23.i = trunc i32 %73 to i8, !dbg !12920
  %call24.i = call i32 @NEG_USR32(i32 %72, i8 signext %conv23.i) #11, !dbg !12921
  %74 = load i32, i32* %code.i, align 4, !dbg !12922
  %add25.i = add i32 %call24.i, %74, !dbg !12923
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !12924
  %75 = load i32, i32* %index1.i, align 4, !dbg !12925
  %idxprom26.i = zext i32 %75 to i64, !dbg !12926
  %76 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12926
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %76, i64 %idxprom26.i, !dbg !12926
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !12926
  %77 = load i16, i16* %arrayidx28.i, align 2, !dbg !12926
  %conv29.i = sext i16 %77 to i32, !dbg !12926
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !12927
  %78 = load i32, i32* %index1.i, align 4, !dbg !12928
  %idxprom30.i = zext i32 %78 to i64, !dbg !12929
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12929
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom30.i, !dbg !12929
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !12929
  %80 = load i16, i16* %arrayidx32.i, align 2, !dbg !12929
  %conv33.i = sext i16 %80 to i32, !dbg !12929
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !12930
  %81 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12931
  %cmp34.i = icmp sgt i32 %81, 2, !dbg !12932
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !12933

land.lhs.true36.i:                                ; preds = %cond.end.i
  %82 = load i32, i32* %n.i, align 4, !dbg !12934
  %cmp37.i = icmp slt i32 %82, 0, !dbg !12935
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !12936

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %83 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12937
  %84 = load i32, i32* %re_index.i, align 4, !dbg !12938
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !12939
  %add40.i = add i32 %84, %85, !dbg !12940
  %cmp41.i = icmp ugt i32 %83, %add40.i, !dbg !12941
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !12942

cond.true43.i:                                    ; preds = %if.then39.i
  %86 = load i32, i32* %re_index.i, align 4, !dbg !12943
  %87 = load i32, i32* %nb_bits.i, align 4, !dbg !12944
  %add44.i = add i32 %86, %87, !dbg !12945
  br label %cond.end46.i, !dbg !12946

cond.false45.i:                                   ; preds = %if.then39.i
  %88 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12947
  br label %cond.end46.i, !dbg !12948

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %88, %cond.false45.i ], !dbg !12949
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !12950
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12951
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %89, i32 0, i32 0, !dbg !12952
  %90 = load i8*, i8** %buffer48.i, align 8, !dbg !12952
  %91 = load i32, i32* %re_index.i, align 4, !dbg !12953
  %shr49.i = lshr i32 %91, 3, !dbg !12954
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !12955
  %add.ptr51.i = getelementptr inbounds i8, i8* %90, i64 %idx.ext50.i, !dbg !12955
  %92 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !12956
  %l52.i = bitcast %union.unaligned_32* %92 to i32*, !dbg !12956
  %93 = load i32, i32* %l52.i, align 1, !dbg !12956
  store i32 %93, i32* %x.addr.i96.i, align 4, !dbg !12957
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12958
  %shl.i97.i = shl i32 %94, 8, !dbg !12959
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !12960
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12961
  %shr.i99.i = lshr i32 %95, 8, !dbg !12962
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !12963
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !12964
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !12965
  %96 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12966
  %shr3.i103.i = lshr i32 %96, 16, !dbg !12967
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !12968
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !12969
  %97 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12970
  %shr6.i106.i = lshr i32 %97, 16, !dbg !12971
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !12972
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !12973
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !12974
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !12975
  %98 = load i32, i32* %re_index.i, align 4, !dbg !12976
  %and54.i = and i32 %98, 7, !dbg !12977
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !12978
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !12979
  %99 = load i32, i32* %n.i, align 4, !dbg !12980
  %sub56.i = sub nsw i32 0, %99, !dbg !12981
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !12982
  %100 = load i32, i32* %re_cache.i, align 4, !dbg !12983
  %101 = load i32, i32* %nb_bits.i, align 4, !dbg !12984
  %conv57.i = trunc i32 %101 to i8, !dbg !12984
  %call58.i = call i32 @NEG_USR32(i32 %100, i8 signext %conv57.i) #11, !dbg !12985
  %102 = load i32, i32* %code.i, align 4, !dbg !12986
  %add59.i = add i32 %call58.i, %102, !dbg !12987
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !12988
  %103 = load i32, i32* %index1.i, align 4, !dbg !12989
  %idxprom60.i = zext i32 %103 to i64, !dbg !12990
  %104 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12990
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %104, i64 %idxprom60.i, !dbg !12990
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !12990
  %105 = load i16, i16* %arrayidx62.i, align 2, !dbg !12990
  %conv63.i = sext i16 %105 to i32, !dbg !12990
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !12991
  %106 = load i32, i32* %index1.i, align 4, !dbg !12992
  %idxprom64.i = zext i32 %106 to i64, !dbg !12993
  %107 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12993
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %107, i64 %idxprom64.i, !dbg !12993
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !12993
  %108 = load i16, i16* %arrayidx66.i, align 2, !dbg !12993
  %conv67.i = sext i16 %108 to i32, !dbg !12993
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !12994
  br label %if.end.i, !dbg !12995

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !12996

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body14
  %109 = load i32, i32* %n.i, align 4, !dbg !12997
  %110 = load i32, i32* %re_cache.i, align 4, !dbg !12998
  %shl70.i = shl i32 %110, %109, !dbg !12998
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !12998
  %111 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12999
  %112 = load i32, i32* %re_index.i, align 4, !dbg !13000
  %113 = load i32, i32* %n.i, align 4, !dbg !13001
  %add71.i = add i32 %112, %113, !dbg !13002
  %cmp72.i = icmp ugt i32 %111, %add71.i, !dbg !13003
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !13004

cond.true74.i:                                    ; preds = %if.end68.i
  %114 = load i32, i32* %re_index.i, align 4, !dbg !13005
  %115 = load i32, i32* %n.i, align 4, !dbg !13006
  %add75.i = add i32 %114, %115, !dbg !13007
  br label %get_vlc2.exit, !dbg !13008

cond.false76.i:                                   ; preds = %if.end68.i
  %116 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13009
  br label %get_vlc2.exit, !dbg !13010

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %116, %cond.false76.i ], !dbg !13011
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !13012
  %117 = load i32, i32* %re_index.i, align 4, !dbg !13013
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13014
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %118, i32 0, i32 2, !dbg !13015
  store i32 %117, i32* %index80.i, align 8, !dbg !13016
  %119 = load i32, i32* %code.i, align 4, !dbg !13017
  %120 = load i32, i32* %t_lav, align 4, !dbg !13018
  %sub = sub nsw i32 %119, %120, !dbg !13019
  %mul = mul nsw i32 %28, %sub, !dbg !13020
  %add20 = add nsw i32 %conv19, %mul, !dbg !13021
  %conv21 = trunc i32 %add20 to i8, !dbg !12817
  %121 = load i32, i32* %j, align 4, !dbg !13022
  %idxprom22 = sext i32 %121 to i64, !dbg !13023
  %122 = load i32, i32* %i, align 4, !dbg !13024
  %add23 = add nsw i32 %122, 1, !dbg !13025
  %idxprom24 = sext i32 %add23 to i64, !dbg !13023
  %123 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13023
  %noise_facs_q25 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %123, i32 0, i32 24, !dbg !13026
  %arrayidx26 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q25, i64 0, i64 %idxprom24, !dbg !13023
  %arrayidx27 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx26, i64 0, i64 %idxprom22, !dbg !13023
  store i8 %conv21, i8* %arrayidx27, align 1, !dbg !13027
  %124 = load i32, i32* %j, align 4, !dbg !13028
  %idxprom28 = sext i32 %124 to i64, !dbg !13030
  %125 = load i32, i32* %i, align 4, !dbg !13031
  %add29 = add nsw i32 %125, 1, !dbg !13032
  %idxprom30 = sext i32 %add29 to i64, !dbg !13030
  %126 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13030
  %noise_facs_q31 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %126, i32 0, i32 24, !dbg !13033
  %arrayidx32 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q31, i64 0, i64 %idxprom30, !dbg !13030
  %arrayidx33 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx32, i64 0, i64 %idxprom28, !dbg !13030
  %127 = load i8, i8* %arrayidx33, align 1, !dbg !13030
  %conv34 = zext i8 %127 to i32, !dbg !13030
  %cmp35 = icmp ugt i32 %conv34, 30, !dbg !13034
  br i1 %cmp35, label %if.then37, label %if.end45, !dbg !13035

if.then37:                                        ; preds = %get_vlc2.exit
  %128 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13036
  %avctx = getelementptr inbounds %struct.AACContext, %struct.AACContext* %128, i32 0, i32 1, !dbg !13038
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !13038
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !13036
  %131 = load i32, i32* %j, align 4, !dbg !13039
  %idxprom38 = sext i32 %131 to i64, !dbg !13040
  %132 = load i32, i32* %i, align 4, !dbg !13041
  %add39 = add nsw i32 %132, 1, !dbg !13042
  %idxprom40 = sext i32 %add39 to i64, !dbg !13040
  %133 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13040
  %noise_facs_q41 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %133, i32 0, i32 24, !dbg !13043
  %arrayidx42 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q41, i64 0, i64 %idxprom40, !dbg !13040
  %arrayidx43 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx42, i64 0, i64 %idxprom38, !dbg !13040
  %134 = load i8, i8* %arrayidx43, align 1, !dbg !13040
  %conv44 = zext i8 %134 to i32, !dbg !13040
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i32 0, i32 0), i32 %conv44), !dbg !13044
  store i32 -1094995529, i32* %retval, align 4, !dbg !13045
  br label %return, !dbg !13045

if.end45:                                         ; preds = %get_vlc2.exit
  br label %for.inc, !dbg !13046

for.inc:                                          ; preds = %if.end45
  %135 = load i32, i32* %j, align 4, !dbg !13047
  %inc = add nsw i32 %135, 1, !dbg !13047
  store i32 %inc, i32* %j, align 4, !dbg !13047
  br label %for.cond11, !dbg !13049, !llvm.loop !13050

for.end:                                          ; preds = %for.cond11
  br label %if.end101, !dbg !13052

if.else46:                                        ; preds = %for.body
  %136 = load i32, i32* %delta, align 4, !dbg !13053
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13054
  %call47 = call i32 @get_bits(%struct.GetBitContext* %137, i32 5), !dbg !13055
  %mul48 = mul i32 %136, %call47, !dbg !13056
  %conv49 = trunc i32 %mul48 to i8, !dbg !13053
  %138 = load i32, i32* %i, align 4, !dbg !13057
  %add50 = add nsw i32 %138, 1, !dbg !13058
  %idxprom51 = sext i32 %add50 to i64, !dbg !13059
  %139 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13059
  %noise_facs_q52 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %139, i32 0, i32 24, !dbg !13060
  %arrayidx53 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q52, i64 0, i64 %idxprom51, !dbg !13059
  %arrayidx54 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx53, i64 0, i64 0, !dbg !13059
  store i8 %conv49, i8* %arrayidx54, align 1, !dbg !13061
  store i32 1, i32* %j, align 4, !dbg !13062
  br label %for.cond55, !dbg !13063

for.cond55:                                       ; preds = %for.inc98, %if.else46
  %140 = load i32, i32* %j, align 4, !dbg !13064
  %141 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13066
  %n_q56 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %141, i32 0, i32 20, !dbg !13067
  %142 = load i32, i32* %n_q56, align 8, !dbg !13067
  %cmp57 = icmp ult i32 %140, %142, !dbg !13068
  br i1 %cmp57, label %for.body59, label %for.end100, !dbg !13069

for.body59:                                       ; preds = %for.cond55
  %143 = load i32, i32* %j, align 4, !dbg !13070
  %sub60 = sub nsw i32 %143, 1, !dbg !13071
  %idxprom61 = sext i32 %sub60 to i64, !dbg !13072
  %144 = load i32, i32* %i, align 4, !dbg !13073
  %add62 = add nsw i32 %144, 1, !dbg !13074
  %idxprom63 = sext i32 %add62 to i64, !dbg !13072
  %145 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13072
  %noise_facs_q64 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %145, i32 0, i32 24, !dbg !13075
  %arrayidx65 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q64, i64 0, i64 %idxprom63, !dbg !13072
  %arrayidx66 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx65, i64 0, i64 %idxprom61, !dbg !13072
  %146 = load i8, i8* %arrayidx66, align 1, !dbg !13072
  %conv67 = zext i8 %146 to i32, !dbg !13072
  %147 = load i32, i32* %delta, align 4, !dbg !13076
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13077
  %149 = load [2 x i16]*, [2 x i16]** %f_huff, align 8, !dbg !13078
  store %struct.GetBitContext* %148, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13079
  store [2 x i16]* %149, [2 x i16]** %table.addr.i116, align 8, !dbg !13079
  store i32 9, i32* %bits.addr.i117, align 4, !dbg !13079
  store i32 3, i32* %max_depth.addr.i118, align 4, !dbg !13079
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13080
  %index.i126 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %150, i32 0, i32 2, !dbg !13081
  %151 = load i32, i32* %index.i126, align 8, !dbg !13081
  store i32 %151, i32* %re_index.i120, align 4, !dbg !12707
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13082
  %size_in_bits_plus8.i127 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %152, i32 0, i32 4, !dbg !13083
  %153 = load i32, i32* %size_in_bits_plus8.i127, align 8, !dbg !13083
  store i32 %153, i32* %re_size_plus8.i122, align 4, !dbg !12709
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13084
  %buffer.i128 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %154, i32 0, i32 0, !dbg !13085
  %155 = load i8*, i8** %buffer.i128, align 8, !dbg !13085
  %156 = load i32, i32* %re_index.i120, align 4, !dbg !13086
  %shr.i129 = lshr i32 %156, 3, !dbg !13087
  %idx.ext.i130 = zext i32 %shr.i129 to i64, !dbg !13088
  %add.ptr.i131 = getelementptr inbounds i8, i8* %155, i64 %idx.ext.i130, !dbg !13088
  %157 = bitcast i8* %add.ptr.i131 to %union.unaligned_32*, !dbg !13089
  %l.i132 = bitcast %union.unaligned_32* %157 to i32*, !dbg !13089
  %158 = load i32, i32* %l.i132, align 1, !dbg !13089
  store i32 %158, i32* %x.addr.i.i114, align 4, !dbg !13090
  %159 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13091
  %shl.i.i133 = shl i32 %159, 8, !dbg !13092
  %and.i.i134 = and i32 %shl.i.i133, 65280, !dbg !13093
  %160 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13094
  %shr.i.i135 = lshr i32 %160, 8, !dbg !13095
  %and1.i.i136 = and i32 %shr.i.i135, 255, !dbg !13096
  %or.i.i137 = or i32 %and.i.i134, %and1.i.i136, !dbg !13097
  %shl2.i.i138 = shl i32 %or.i.i137, 16, !dbg !13098
  %161 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13099
  %shr3.i.i139 = lshr i32 %161, 16, !dbg !13100
  %shl4.i.i140 = shl i32 %shr3.i.i139, 8, !dbg !13101
  %and5.i.i141 = and i32 %shl4.i.i140, 65280, !dbg !13102
  %162 = load i32, i32* %x.addr.i.i114, align 4, !dbg !13103
  %shr6.i.i142 = lshr i32 %162, 16, !dbg !13104
  %shr7.i.i143 = lshr i32 %shr6.i.i142, 8, !dbg !13105
  %and8.i.i144 = and i32 %shr7.i.i143, 255, !dbg !13106
  %or9.i.i145 = or i32 %and5.i.i141, %and8.i.i144, !dbg !13107
  %or10.i.i146 = or i32 %shl2.i.i138, %or9.i.i145, !dbg !13108
  %163 = load i32, i32* %re_index.i120, align 4, !dbg !13109
  %and.i147 = and i32 %163, 7, !dbg !13110
  %shl.i148 = shl i32 %or10.i.i146, %and.i147, !dbg !13111
  store i32 %shl.i148, i32* %re_cache.i121, align 4, !dbg !13112
  %164 = load i32, i32* %re_cache.i121, align 4, !dbg !13113
  %165 = load i32, i32* %bits.addr.i117, align 4, !dbg !13114
  %conv.i149 = trunc i32 %165 to i8, !dbg !13114
  %call2.i150 = call i32 @NEG_USR32(i32 %164, i8 signext %conv.i149) #11, !dbg !13115
  store i32 %call2.i150, i32* %index1.i125, align 4, !dbg !13116
  %166 = load i32, i32* %index1.i125, align 4, !dbg !13117
  %idxprom.i151 = zext i32 %166 to i64, !dbg !13118
  %167 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13118
  %arrayidx.i152 = getelementptr inbounds [2 x i16], [2 x i16]* %167, i64 %idxprom.i151, !dbg !13118
  %arrayidx3.i153 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i152, i64 0, i64 0, !dbg !13118
  %168 = load i16, i16* %arrayidx3.i153, align 2, !dbg !13118
  %conv4.i154 = sext i16 %168 to i32, !dbg !13118
  store i32 %conv4.i154, i32* %code.i119, align 4, !dbg !13119
  %169 = load i32, i32* %index1.i125, align 4, !dbg !13120
  %idxprom5.i155 = zext i32 %169 to i64, !dbg !13121
  %170 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13121
  %arrayidx6.i156 = getelementptr inbounds [2 x i16], [2 x i16]* %170, i64 %idxprom5.i155, !dbg !13121
  %arrayidx7.i157 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i156, i64 0, i64 1, !dbg !13121
  %171 = load i16, i16* %arrayidx7.i157, align 2, !dbg !13121
  %conv8.i158 = sext i16 %171 to i32, !dbg !13121
  store i32 %conv8.i158, i32* %n.i123, align 4, !dbg !13122
  %172 = load i32, i32* %max_depth.addr.i118, align 4, !dbg !13123
  %cmp.i159 = icmp sgt i32 %172, 1, !dbg !13124
  br i1 %cmp.i159, label %land.lhs.true.i161, label %if.end68.i248, !dbg !13125

land.lhs.true.i161:                               ; preds = %for.body59
  %173 = load i32, i32* %n.i123, align 4, !dbg !13126
  %cmp10.i160 = icmp slt i32 %173, 0, !dbg !13127
  br i1 %cmp10.i160, label %if.then.i164, label %if.end68.i248, !dbg !13128

if.then.i164:                                     ; preds = %land.lhs.true.i161
  %174 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13129
  %175 = load i32, i32* %re_index.i120, align 4, !dbg !13130
  %176 = load i32, i32* %bits.addr.i117, align 4, !dbg !13131
  %add.i162 = add i32 %175, %176, !dbg !13132
  %cmp12.i163 = icmp ugt i32 %174, %add.i162, !dbg !13133
  br i1 %cmp12.i163, label %cond.true.i166, label %cond.false.i167, !dbg !13134

cond.true.i166:                                   ; preds = %if.then.i164
  %177 = load i32, i32* %re_index.i120, align 4, !dbg !13135
  %178 = load i32, i32* %bits.addr.i117, align 4, !dbg !13136
  %add14.i165 = add i32 %177, %178, !dbg !13137
  br label %cond.end.i203, !dbg !13138

cond.false.i167:                                  ; preds = %if.then.i164
  %179 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13139
  br label %cond.end.i203, !dbg !13140

cond.end.i203:                                    ; preds = %cond.false.i167, %cond.true.i166
  %cond.i168 = phi i32 [ %add14.i165, %cond.true.i166 ], [ %179, %cond.false.i167 ], !dbg !13141
  store i32 %cond.i168, i32* %re_index.i120, align 4, !dbg !13142
  %180 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13143
  %buffer15.i169 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %180, i32 0, i32 0, !dbg !13144
  %181 = load i8*, i8** %buffer15.i169, align 8, !dbg !13144
  %182 = load i32, i32* %re_index.i120, align 4, !dbg !13145
  %shr16.i170 = lshr i32 %182, 3, !dbg !13146
  %idx.ext17.i171 = zext i32 %shr16.i170 to i64, !dbg !13147
  %add.ptr18.i172 = getelementptr inbounds i8, i8* %181, i64 %idx.ext17.i171, !dbg !13147
  %183 = bitcast i8* %add.ptr18.i172 to %union.unaligned_32*, !dbg !13148
  %l19.i173 = bitcast %union.unaligned_32* %183 to i32*, !dbg !13148
  %184 = load i32, i32* %l19.i173, align 1, !dbg !13148
  store i32 %184, i32* %x.addr.i81.i113, align 4, !dbg !13149
  %185 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13150
  %shl.i82.i174 = shl i32 %185, 8, !dbg !13151
  %and.i83.i175 = and i32 %shl.i82.i174, 65280, !dbg !13152
  %186 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13153
  %shr.i84.i176 = lshr i32 %186, 8, !dbg !13154
  %and1.i85.i177 = and i32 %shr.i84.i176, 255, !dbg !13155
  %or.i86.i178 = or i32 %and.i83.i175, %and1.i85.i177, !dbg !13156
  %shl2.i87.i179 = shl i32 %or.i86.i178, 16, !dbg !13157
  %187 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13158
  %shr3.i88.i180 = lshr i32 %187, 16, !dbg !13159
  %shl4.i89.i181 = shl i32 %shr3.i88.i180, 8, !dbg !13160
  %and5.i90.i182 = and i32 %shl4.i89.i181, 65280, !dbg !13161
  %188 = load i32, i32* %x.addr.i81.i113, align 4, !dbg !13162
  %shr6.i91.i183 = lshr i32 %188, 16, !dbg !13163
  %shr7.i92.i184 = lshr i32 %shr6.i91.i183, 8, !dbg !13164
  %and8.i93.i185 = and i32 %shr7.i92.i184, 255, !dbg !13165
  %or9.i94.i186 = or i32 %and5.i90.i182, %and8.i93.i185, !dbg !13166
  %or10.i95.i187 = or i32 %shl2.i87.i179, %or9.i94.i186, !dbg !13167
  %189 = load i32, i32* %re_index.i120, align 4, !dbg !13168
  %and21.i188 = and i32 %189, 7, !dbg !13169
  %shl22.i189 = shl i32 %or10.i95.i187, %and21.i188, !dbg !13170
  store i32 %shl22.i189, i32* %re_cache.i121, align 4, !dbg !13171
  %190 = load i32, i32* %n.i123, align 4, !dbg !13172
  %sub.i190 = sub nsw i32 0, %190, !dbg !13173
  store i32 %sub.i190, i32* %nb_bits.i124, align 4, !dbg !13174
  %191 = load i32, i32* %re_cache.i121, align 4, !dbg !13175
  %192 = load i32, i32* %nb_bits.i124, align 4, !dbg !13176
  %conv23.i191 = trunc i32 %192 to i8, !dbg !13176
  %call24.i192 = call i32 @NEG_USR32(i32 %191, i8 signext %conv23.i191) #11, !dbg !13177
  %193 = load i32, i32* %code.i119, align 4, !dbg !13178
  %add25.i193 = add i32 %call24.i192, %193, !dbg !13179
  store i32 %add25.i193, i32* %index1.i125, align 4, !dbg !13180
  %194 = load i32, i32* %index1.i125, align 4, !dbg !13181
  %idxprom26.i194 = zext i32 %194 to i64, !dbg !13182
  %195 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13182
  %arrayidx27.i195 = getelementptr inbounds [2 x i16], [2 x i16]* %195, i64 %idxprom26.i194, !dbg !13182
  %arrayidx28.i196 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i195, i64 0, i64 0, !dbg !13182
  %196 = load i16, i16* %arrayidx28.i196, align 2, !dbg !13182
  %conv29.i197 = sext i16 %196 to i32, !dbg !13182
  store i32 %conv29.i197, i32* %code.i119, align 4, !dbg !13183
  %197 = load i32, i32* %index1.i125, align 4, !dbg !13184
  %idxprom30.i198 = zext i32 %197 to i64, !dbg !13185
  %198 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13185
  %arrayidx31.i199 = getelementptr inbounds [2 x i16], [2 x i16]* %198, i64 %idxprom30.i198, !dbg !13185
  %arrayidx32.i200 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i199, i64 0, i64 1, !dbg !13185
  %199 = load i16, i16* %arrayidx32.i200, align 2, !dbg !13185
  %conv33.i201 = sext i16 %199 to i32, !dbg !13185
  store i32 %conv33.i201, i32* %n.i123, align 4, !dbg !13186
  %200 = load i32, i32* %max_depth.addr.i118, align 4, !dbg !13187
  %cmp34.i202 = icmp sgt i32 %200, 2, !dbg !13188
  br i1 %cmp34.i202, label %land.lhs.true36.i205, label %if.end.i247, !dbg !13189

land.lhs.true36.i205:                             ; preds = %cond.end.i203
  %201 = load i32, i32* %n.i123, align 4, !dbg !13190
  %cmp37.i204 = icmp slt i32 %201, 0, !dbg !13191
  br i1 %cmp37.i204, label %if.then39.i208, label %if.end.i247, !dbg !13192

if.then39.i208:                                   ; preds = %land.lhs.true36.i205
  %202 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13193
  %203 = load i32, i32* %re_index.i120, align 4, !dbg !13194
  %204 = load i32, i32* %nb_bits.i124, align 4, !dbg !13195
  %add40.i206 = add i32 %203, %204, !dbg !13196
  %cmp41.i207 = icmp ugt i32 %202, %add40.i206, !dbg !13197
  br i1 %cmp41.i207, label %cond.true43.i210, label %cond.false45.i211, !dbg !13198

cond.true43.i210:                                 ; preds = %if.then39.i208
  %205 = load i32, i32* %re_index.i120, align 4, !dbg !13199
  %206 = load i32, i32* %nb_bits.i124, align 4, !dbg !13200
  %add44.i209 = add i32 %205, %206, !dbg !13201
  br label %cond.end46.i246, !dbg !13202

cond.false45.i211:                                ; preds = %if.then39.i208
  %207 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13203
  br label %cond.end46.i246, !dbg !13204

cond.end46.i246:                                  ; preds = %cond.false45.i211, %cond.true43.i210
  %cond47.i212 = phi i32 [ %add44.i209, %cond.true43.i210 ], [ %207, %cond.false45.i211 ], !dbg !13205
  store i32 %cond47.i212, i32* %re_index.i120, align 4, !dbg !13206
  %208 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13207
  %buffer48.i213 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %208, i32 0, i32 0, !dbg !13208
  %209 = load i8*, i8** %buffer48.i213, align 8, !dbg !13208
  %210 = load i32, i32* %re_index.i120, align 4, !dbg !13209
  %shr49.i214 = lshr i32 %210, 3, !dbg !13210
  %idx.ext50.i215 = zext i32 %shr49.i214 to i64, !dbg !13211
  %add.ptr51.i216 = getelementptr inbounds i8, i8* %209, i64 %idx.ext50.i215, !dbg !13211
  %211 = bitcast i8* %add.ptr51.i216 to %union.unaligned_32*, !dbg !13212
  %l52.i217 = bitcast %union.unaligned_32* %211 to i32*, !dbg !13212
  %212 = load i32, i32* %l52.i217, align 1, !dbg !13212
  store i32 %212, i32* %x.addr.i96.i112, align 4, !dbg !13213
  %213 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13214
  %shl.i97.i218 = shl i32 %213, 8, !dbg !13215
  %and.i98.i219 = and i32 %shl.i97.i218, 65280, !dbg !13216
  %214 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13217
  %shr.i99.i220 = lshr i32 %214, 8, !dbg !13218
  %and1.i100.i221 = and i32 %shr.i99.i220, 255, !dbg !13219
  %or.i101.i222 = or i32 %and.i98.i219, %and1.i100.i221, !dbg !13220
  %shl2.i102.i223 = shl i32 %or.i101.i222, 16, !dbg !13221
  %215 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13222
  %shr3.i103.i224 = lshr i32 %215, 16, !dbg !13223
  %shl4.i104.i225 = shl i32 %shr3.i103.i224, 8, !dbg !13224
  %and5.i105.i226 = and i32 %shl4.i104.i225, 65280, !dbg !13225
  %216 = load i32, i32* %x.addr.i96.i112, align 4, !dbg !13226
  %shr6.i106.i227 = lshr i32 %216, 16, !dbg !13227
  %shr7.i107.i228 = lshr i32 %shr6.i106.i227, 8, !dbg !13228
  %and8.i108.i229 = and i32 %shr7.i107.i228, 255, !dbg !13229
  %or9.i109.i230 = or i32 %and5.i105.i226, %and8.i108.i229, !dbg !13230
  %or10.i110.i231 = or i32 %shl2.i102.i223, %or9.i109.i230, !dbg !13231
  %217 = load i32, i32* %re_index.i120, align 4, !dbg !13232
  %and54.i232 = and i32 %217, 7, !dbg !13233
  %shl55.i233 = shl i32 %or10.i110.i231, %and54.i232, !dbg !13234
  store i32 %shl55.i233, i32* %re_cache.i121, align 4, !dbg !13235
  %218 = load i32, i32* %n.i123, align 4, !dbg !13236
  %sub56.i234 = sub nsw i32 0, %218, !dbg !13237
  store i32 %sub56.i234, i32* %nb_bits.i124, align 4, !dbg !13238
  %219 = load i32, i32* %re_cache.i121, align 4, !dbg !13239
  %220 = load i32, i32* %nb_bits.i124, align 4, !dbg !13240
  %conv57.i235 = trunc i32 %220 to i8, !dbg !13240
  %call58.i236 = call i32 @NEG_USR32(i32 %219, i8 signext %conv57.i235) #11, !dbg !13241
  %221 = load i32, i32* %code.i119, align 4, !dbg !13242
  %add59.i237 = add i32 %call58.i236, %221, !dbg !13243
  store i32 %add59.i237, i32* %index1.i125, align 4, !dbg !13244
  %222 = load i32, i32* %index1.i125, align 4, !dbg !13245
  %idxprom60.i238 = zext i32 %222 to i64, !dbg !13246
  %223 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13246
  %arrayidx61.i239 = getelementptr inbounds [2 x i16], [2 x i16]* %223, i64 %idxprom60.i238, !dbg !13246
  %arrayidx62.i240 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i239, i64 0, i64 0, !dbg !13246
  %224 = load i16, i16* %arrayidx62.i240, align 2, !dbg !13246
  %conv63.i241 = sext i16 %224 to i32, !dbg !13246
  store i32 %conv63.i241, i32* %code.i119, align 4, !dbg !13247
  %225 = load i32, i32* %index1.i125, align 4, !dbg !13248
  %idxprom64.i242 = zext i32 %225 to i64, !dbg !13249
  %226 = load [2 x i16]*, [2 x i16]** %table.addr.i116, align 8, !dbg !13249
  %arrayidx65.i243 = getelementptr inbounds [2 x i16], [2 x i16]* %226, i64 %idxprom64.i242, !dbg !13249
  %arrayidx66.i244 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i243, i64 0, i64 1, !dbg !13249
  %227 = load i16, i16* %arrayidx66.i244, align 2, !dbg !13249
  %conv67.i245 = sext i16 %227 to i32, !dbg !13249
  store i32 %conv67.i245, i32* %n.i123, align 4, !dbg !13250
  br label %if.end.i247, !dbg !13251

if.end.i247:                                      ; preds = %cond.end46.i246, %land.lhs.true36.i205, %cond.end.i203
  br label %if.end68.i248, !dbg !13252

if.end68.i248:                                    ; preds = %if.end.i247, %land.lhs.true.i161, %for.body59
  %228 = load i32, i32* %n.i123, align 4, !dbg !13253
  %229 = load i32, i32* %re_cache.i121, align 4, !dbg !13254
  %shl70.i249 = shl i32 %229, %228, !dbg !13254
  store i32 %shl70.i249, i32* %re_cache.i121, align 4, !dbg !13254
  %230 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13255
  %231 = load i32, i32* %re_index.i120, align 4, !dbg !13256
  %232 = load i32, i32* %n.i123, align 4, !dbg !13257
  %add71.i250 = add i32 %231, %232, !dbg !13258
  %cmp72.i251 = icmp ugt i32 %230, %add71.i250, !dbg !13259
  br i1 %cmp72.i251, label %cond.true74.i253, label %cond.false76.i254, !dbg !13260

cond.true74.i253:                                 ; preds = %if.end68.i248
  %233 = load i32, i32* %re_index.i120, align 4, !dbg !13261
  %234 = load i32, i32* %n.i123, align 4, !dbg !13262
  %add75.i252 = add i32 %233, %234, !dbg !13263
  br label %get_vlc2.exit257, !dbg !13264

cond.false76.i254:                                ; preds = %if.end68.i248
  %235 = load i32, i32* %re_size_plus8.i122, align 4, !dbg !13265
  br label %get_vlc2.exit257, !dbg !13266

get_vlc2.exit257:                                 ; preds = %cond.true74.i253, %cond.false76.i254
  %cond78.i255 = phi i32 [ %add75.i252, %cond.true74.i253 ], [ %235, %cond.false76.i254 ], !dbg !13267
  store i32 %cond78.i255, i32* %re_index.i120, align 4, !dbg !13268
  %236 = load i32, i32* %re_index.i120, align 4, !dbg !13269
  %237 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i115, align 8, !dbg !13270
  %index80.i256 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %237, i32 0, i32 2, !dbg !13271
  store i32 %236, i32* %index80.i256, align 8, !dbg !13272
  %238 = load i32, i32* %code.i119, align 4, !dbg !13273
  %239 = load i32, i32* %f_lav, align 4, !dbg !13274
  %sub69 = sub nsw i32 %238, %239, !dbg !13275
  %mul70 = mul nsw i32 %147, %sub69, !dbg !13276
  %add71 = add nsw i32 %conv67, %mul70, !dbg !13277
  %conv72 = trunc i32 %add71 to i8, !dbg !13072
  %240 = load i32, i32* %j, align 4, !dbg !13278
  %idxprom73 = sext i32 %240 to i64, !dbg !13279
  %241 = load i32, i32* %i, align 4, !dbg !13280
  %add74 = add nsw i32 %241, 1, !dbg !13281
  %idxprom75 = sext i32 %add74 to i64, !dbg !13279
  %242 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13279
  %noise_facs_q76 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %242, i32 0, i32 24, !dbg !13282
  %arrayidx77 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q76, i64 0, i64 %idxprom75, !dbg !13279
  %arrayidx78 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx77, i64 0, i64 %idxprom73, !dbg !13279
  store i8 %conv72, i8* %arrayidx78, align 1, !dbg !13283
  %243 = load i32, i32* %j, align 4, !dbg !13284
  %idxprom79 = sext i32 %243 to i64, !dbg !13286
  %244 = load i32, i32* %i, align 4, !dbg !13287
  %add80 = add nsw i32 %244, 1, !dbg !13288
  %idxprom81 = sext i32 %add80 to i64, !dbg !13286
  %245 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13286
  %noise_facs_q82 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %245, i32 0, i32 24, !dbg !13289
  %arrayidx83 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q82, i64 0, i64 %idxprom81, !dbg !13286
  %arrayidx84 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx83, i64 0, i64 %idxprom79, !dbg !13286
  %246 = load i8, i8* %arrayidx84, align 1, !dbg !13286
  %conv85 = zext i8 %246 to i32, !dbg !13286
  %cmp86 = icmp ugt i32 %conv85, 30, !dbg !13290
  br i1 %cmp86, label %if.then88, label %if.end97, !dbg !13291

if.then88:                                        ; preds = %get_vlc2.exit257
  %247 = load %struct.AACContext*, %struct.AACContext** %ac.addr, align 8, !dbg !13292
  %avctx89 = getelementptr inbounds %struct.AACContext, %struct.AACContext* %247, i32 0, i32 1, !dbg !13294
  %248 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx89, align 8, !dbg !13294
  %249 = bitcast %struct.AVCodecContext* %248 to i8*, !dbg !13292
  %250 = load i32, i32* %j, align 4, !dbg !13295
  %idxprom90 = sext i32 %250 to i64, !dbg !13296
  %251 = load i32, i32* %i, align 4, !dbg !13297
  %add91 = add nsw i32 %251, 1, !dbg !13298
  %idxprom92 = sext i32 %add91 to i64, !dbg !13296
  %252 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13296
  %noise_facs_q93 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %252, i32 0, i32 24, !dbg !13299
  %arrayidx94 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q93, i64 0, i64 %idxprom92, !dbg !13296
  %arrayidx95 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx94, i64 0, i64 %idxprom90, !dbg !13296
  %253 = load i8, i8* %arrayidx95, align 1, !dbg !13296
  %conv96 = zext i8 %253 to i32, !dbg !13296
  call void (i8*, i32, i8*, ...) @av_log(i8* %249, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i32 0, i32 0), i32 %conv96), !dbg !13300
  store i32 -1094995529, i32* %retval, align 4, !dbg !13301
  br label %return, !dbg !13301

if.end97:                                         ; preds = %get_vlc2.exit257
  br label %for.inc98, !dbg !13302

for.inc98:                                        ; preds = %if.end97
  %254 = load i32, i32* %j, align 4, !dbg !13303
  %inc99 = add nsw i32 %254, 1, !dbg !13303
  store i32 %inc99, i32* %j, align 4, !dbg !13303
  br label %for.cond55, !dbg !13305, !llvm.loop !13306

for.end100:                                       ; preds = %for.cond55
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %for.end
  br label %for.inc102, !dbg !13308

for.inc102:                                       ; preds = %if.end101
  %255 = load i32, i32* %i, align 4, !dbg !13309
  %inc103 = add nsw i32 %255, 1, !dbg !13309
  store i32 %inc103, i32* %i, align 4, !dbg !13309
  br label %for.cond, !dbg !13311, !llvm.loop !13312

for.end104:                                       ; preds = %for.cond
  %256 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13314
  %noise_facs_q105 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %256, i32 0, i32 24, !dbg !13315
  %arrayidx106 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q105, i64 0, i64 0, !dbg !13314
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx106, i32 0, i32 0, !dbg !13316
  %257 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13317
  %bs_num_noise107 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %257, i32 0, i32 4, !dbg !13318
  %258 = load i32, i32* %bs_num_noise107, align 4, !dbg !13318
  %idxprom108 = zext i32 %258 to i64, !dbg !13319
  %259 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13319
  %noise_facs_q109 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %259, i32 0, i32 24, !dbg !13320
  %arrayidx110 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* %noise_facs_q109, i64 0, i64 %idxprom108, !dbg !13319
  %arraydecay111 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx110, i32 0, i32 0, !dbg !13316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay111, i64 5, i32 1, i1 false), !dbg !13316
  store i32 0, i32* %retval, align 4, !dbg !13321
  br label %return, !dbg !13321

return:                                           ; preds = %for.end104, %if.then88, %if.then37
  %260 = load i32, i32* %retval, align 4, !dbg !13322
  ret i32 %260, !dbg !13322
}

; Function Attrs: nounwind uwtable
define internal void @copy_sbr_grid(%struct.SBRData* %dst, %struct.SBRData* %src) #3 !dbg !13323 {
entry:
  %dst.addr = alloca %struct.SBRData*, align 8
  %src.addr = alloca %struct.SBRData*, align 8
  store %struct.SBRData* %dst, %struct.SBRData** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %dst.addr, metadata !13328, metadata !2753), !dbg !13329
  store %struct.SBRData* %src, %struct.SBRData** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %src.addr, metadata !13330, metadata !2753), !dbg !13331
  %0 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13332
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %0, i32 0, i32 2, !dbg !13333
  %1 = load i32, i32* %bs_num_env, align 8, !dbg !13333
  %idxprom = zext i32 %1 to i64, !dbg !13334
  %2 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13334
  %bs_freq_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %2, i32 0, i32 3, !dbg !13335
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res, i64 0, i64 %idxprom, !dbg !13334
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13334
  %4 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13336
  %bs_freq_res1 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %4, i32 0, i32 3, !dbg !13337
  %arrayidx2 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res1, i64 0, i64 0, !dbg !13336
  store i8 %3, i8* %arrayidx2, align 4, !dbg !13338
  %5 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13339
  %bs_num_env3 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %5, i32 0, i32 2, !dbg !13340
  %6 = load i32, i32* %bs_num_env3, align 8, !dbg !13340
  %idxprom4 = zext i32 %6 to i64, !dbg !13341
  %7 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13341
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 26, !dbg !13342
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 %idxprom4, !dbg !13341
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !13341
  %9 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13343
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %9, i32 0, i32 27, !dbg !13344
  store i8 %8, i8* %t_env_num_env_old, align 4, !dbg !13345
  %10 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13346
  %e_a = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 13, !dbg !13347
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a, i64 0, i64 1, !dbg !13346
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !13346
  %12 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13348
  %bs_num_env7 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %12, i32 0, i32 2, !dbg !13349
  %13 = load i32, i32* %bs_num_env7, align 8, !dbg !13349
  %cmp = icmp ne i32 %11, %13, !dbg !13350
  %conv = zext i1 %cmp to i32, !dbg !13350
  %sub = sub nsw i32 0, %conv, !dbg !13351
  %14 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13352
  %e_a8 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %14, i32 0, i32 13, !dbg !13353
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a8, i64 0, i64 0, !dbg !13352
  store i32 %sub, i32* %arrayidx9, align 4, !dbg !13354
  %15 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13355
  %bs_freq_res10 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %15, i32 0, i32 3, !dbg !13356
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res10, i32 0, i32 0, !dbg !13355
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !13357
  %16 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13358
  %bs_freq_res11 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %16, i32 0, i32 3, !dbg !13359
  %arraydecay12 = getelementptr inbounds [7 x i8], [7 x i8]* %bs_freq_res11, i32 0, i32 0, !dbg !13358
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 1, !dbg !13360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr13, i64 6, i32 1, i1 false), !dbg !13361
  %17 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13362
  %t_env14 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %17, i32 0, i32 26, !dbg !13363
  %arraydecay15 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env14, i32 0, i32 0, !dbg !13364
  %18 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13365
  %t_env16 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %18, i32 0, i32 26, !dbg !13366
  %arraydecay17 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env16, i32 0, i32 0, !dbg !13364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay15, i8* %arraydecay17, i64 8, i32 4, i1 false), !dbg !13364
  %19 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13367
  %t_q = getelementptr inbounds %struct.SBRData, %struct.SBRData* %19, i32 0, i32 28, !dbg !13368
  %arraydecay18 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q, i32 0, i32 0, !dbg !13369
  %20 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13370
  %t_q19 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %20, i32 0, i32 28, !dbg !13371
  %arraydecay20 = getelementptr inbounds [3 x i8], [3 x i8]* %t_q19, i32 0, i32 0, !dbg !13369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay18, i8* %arraydecay20, i64 3, i32 1, i1 false), !dbg !13369
  %21 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13372
  %bs_num_env21 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %21, i32 0, i32 2, !dbg !13373
  %22 = load i32, i32* %bs_num_env21, align 8, !dbg !13373
  %23 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13374
  %bs_num_env22 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %23, i32 0, i32 2, !dbg !13375
  store i32 %22, i32* %bs_num_env22, align 8, !dbg !13376
  %24 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13377
  %bs_amp_res = getelementptr inbounds %struct.SBRData, %struct.SBRData* %24, i32 0, i32 9, !dbg !13378
  %25 = load i32, i32* %bs_amp_res, align 4, !dbg !13378
  %26 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13379
  %bs_amp_res23 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %26, i32 0, i32 9, !dbg !13380
  store i32 %25, i32* %bs_amp_res23, align 4, !dbg !13381
  %27 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13382
  %bs_num_noise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %27, i32 0, i32 4, !dbg !13383
  %28 = load i32, i32* %bs_num_noise, align 4, !dbg !13383
  %29 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13384
  %bs_num_noise24 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %29, i32 0, i32 4, !dbg !13385
  store i32 %28, i32* %bs_num_noise24, align 4, !dbg !13386
  %30 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13387
  %bs_frame_class = getelementptr inbounds %struct.SBRData, %struct.SBRData* %30, i32 0, i32 0, !dbg !13388
  %31 = load i32, i32* %bs_frame_class, align 32, !dbg !13388
  %32 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13389
  %bs_frame_class25 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %32, i32 0, i32 0, !dbg !13390
  store i32 %31, i32* %bs_frame_class25, align 32, !dbg !13391
  %33 = load %struct.SBRData*, %struct.SBRData** %src.addr, align 8, !dbg !13392
  %e_a26 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %33, i32 0, i32 13, !dbg !13393
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a26, i64 0, i64 1, !dbg !13392
  %34 = load i32, i32* %arrayidx27, align 4, !dbg !13392
  %35 = load %struct.SBRData*, %struct.SBRData** %dst.addr, align 8, !dbg !13394
  %e_a28 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %35, i32 0, i32 13, !dbg !13395
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %e_a28, i64 0, i64 1, !dbg !13394
  store i32 %34, i32* %arrayidx29, align 4, !dbg !13396
  ret void, !dbg !13397
}

declare i32 @ff_ps_read_data(%struct.AVCodecContext*, %struct.GetBitContext*, %struct.PSContext*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !13398 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6417, metadata !2753), !dbg !13399
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !13401, metadata !2753), !dbg !13402
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13403, metadata !2753), !dbg !13404
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13405, metadata !2753), !dbg !13406
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !13407, metadata !2753), !dbg !13408
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13409
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !13410
  %1 = load i32, i32* %index, align 8, !dbg !13410
  store i32 %1, i32* %re_index, align 4, !dbg !13408
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !13411, metadata !2753), !dbg !13412
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !13413
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !13414
  %3 = load i8*, i8** %buffer, align 8, !dbg !13414
  %4 = load i32, i32* %re_index, align 4, !dbg !13415
  %shr = lshr i32 %4, 3, !dbg !13416
  %idx.ext = zext i32 %shr to i64, !dbg !13417
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !13417
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !13418
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !13418
  %6 = load i32, i32* %l, align 1, !dbg !13418
  store i32 %6, i32* %x.addr.i, align 4, !dbg !13419
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !13420
  %shl.i = shl i32 %7, 8, !dbg !13421
  %and.i = and i32 %shl.i, 65280, !dbg !13422
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !13423
  %shr.i = lshr i32 %8, 8, !dbg !13424
  %and1.i = and i32 %shr.i, 255, !dbg !13425
  %or.i = or i32 %and.i, %and1.i, !dbg !13426
  %shl2.i = shl i32 %or.i, 16, !dbg !13427
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !13428
  %shr3.i = lshr i32 %9, 16, !dbg !13429
  %shl4.i = shl i32 %shr3.i, 8, !dbg !13430
  %and5.i = and i32 %shl4.i, 65280, !dbg !13431
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !13432
  %shr6.i = lshr i32 %10, 16, !dbg !13433
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !13434
  %and8.i = and i32 %shr7.i, 255, !dbg !13435
  %or9.i = or i32 %and5.i, %and8.i, !dbg !13436
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !13437
  %11 = load i32, i32* %re_index, align 4, !dbg !13438
  %and = and i32 %11, 7, !dbg !13439
  %shl = shl i32 %or10.i, %and, !dbg !13440
  store i32 %shl, i32* %re_cache, align 4, !dbg !13441
  %12 = load i32, i32* %re_cache, align 4, !dbg !13442
  %13 = load i32, i32* %n.addr, align 4, !dbg !13443
  %conv = trunc i32 %13 to i8, !dbg !13443
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !13444
  store i32 %call3, i32* %tmp, align 4, !dbg !13445
  %14 = load i32, i32* %tmp, align 4, !dbg !13446
  ret i32 %14, !dbg !13447
}

declare void @avpriv_request_sample(i8*, i8*, ...) #1

; Function Attrs: nounwind
declare float @sqrtf(float) #8

; Function Attrs: nounwind uwtable
define internal i32 @sbr_lf_gen(%struct.AACContext* %ac, %struct.SpectralBandReplication* %sbr, [40 x [2 x float]]* %X_low, [32 x [32 x [2 x float]]]* %W, i32 %buf_idx) #3 !dbg !13448 {
entry:
  %ac.addr = alloca %struct.AACContext*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X_low.addr = alloca [40 x [2 x float]]*, align 8
  %W.addr = alloca [32 x [32 x [2 x float]]]*, align 8
  %buf_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %t_HFGen = alloca i32, align 4
  %i_f = alloca i32, align 4
  store %struct.AACContext* %ac, %struct.AACContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACContext** %ac.addr, metadata !13449, metadata !2753), !dbg !13450
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !13451, metadata !2753), !dbg !13452
  store [40 x [2 x float]]* %X_low, [40 x [2 x float]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_low.addr, metadata !13453, metadata !2753), !dbg !13454
  store [32 x [32 x [2 x float]]]* %W, [32 x [32 x [2 x float]]]** %W.addr, align 8
  call void @llvm.dbg.declare(metadata [32 x [32 x [2 x float]]]** %W.addr, metadata !13455, metadata !2753), !dbg !13456
  store i32 %buf_idx, i32* %buf_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_idx.addr, metadata !13457, metadata !2753), !dbg !13458
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13459, metadata !2753), !dbg !13460
  call void @llvm.dbg.declare(metadata i32* %k, metadata !13461, metadata !2753), !dbg !13462
  call void @llvm.dbg.declare(metadata i32* %t_HFGen, metadata !13463, metadata !2753), !dbg !13464
  store i32 8, i32* %t_HFGen, align 4, !dbg !13464
  call void @llvm.dbg.declare(metadata i32* %i_f, metadata !13465, metadata !2753), !dbg !13466
  store i32 32, i32* %i_f, align 4, !dbg !13466
  %0 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !13467
  %1 = bitcast [40 x [2 x float]]* %0 to i8*, !dbg !13468
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 10240, i32 4, i1 false), !dbg !13468
  store i32 0, i32* %k, align 4, !dbg !13469
  br label %for.cond, !dbg !13471

for.cond:                                         ; preds = %for.inc28, %entry
  %2 = load i32, i32* %k, align 4, !dbg !13472
  %3 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13475
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %3, i32 0, i32 13, !dbg !13476
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 1, !dbg !13475
  %4 = load i32, i32* %arrayidx, align 4, !dbg !13475
  %cmp = icmp ult i32 %2, %4, !dbg !13477
  br i1 %cmp, label %for.body, label %for.end30, !dbg !13478

for.body:                                         ; preds = %for.cond
  store i32 8, i32* %i, align 4, !dbg !13479
  br label %for.cond1, !dbg !13482

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !13483
  %cmp2 = icmp slt i32 %5, 40, !dbg !13486
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !13487

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %k, align 4, !dbg !13488
  %idxprom = sext i32 %6 to i64, !dbg !13490
  %7 = load i32, i32* %i, align 4, !dbg !13491
  %sub = sub nsw i32 %7, 8, !dbg !13492
  %idxprom4 = sext i32 %sub to i64, !dbg !13490
  %8 = load i32, i32* %buf_idx.addr, align 4, !dbg !13493
  %idxprom5 = sext i32 %8 to i64, !dbg !13490
  %9 = load [32 x [32 x [2 x float]]]*, [32 x [32 x [2 x float]]]** %W.addr, align 8, !dbg !13490
  %arrayidx6 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %9, i64 %idxprom5, !dbg !13490
  %arrayidx7 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !13490
  %arrayidx8 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %arrayidx7, i64 0, i64 %idxprom, !dbg !13490
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx8, i64 0, i64 0, !dbg !13490
  %10 = load float, float* %arrayidx9, align 4, !dbg !13490
  %11 = load i32, i32* %i, align 4, !dbg !13494
  %idxprom10 = sext i32 %11 to i64, !dbg !13495
  %12 = load i32, i32* %k, align 4, !dbg !13496
  %idxprom11 = sext i32 %12 to i64, !dbg !13495
  %13 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !13495
  %arrayidx12 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %13, i64 %idxprom11, !dbg !13495
  %arrayidx13 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !13495
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !13495
  store float %10, float* %arrayidx14, align 4, !dbg !13497
  %14 = load i32, i32* %k, align 4, !dbg !13498
  %idxprom15 = sext i32 %14 to i64, !dbg !13499
  %15 = load i32, i32* %i, align 4, !dbg !13500
  %sub16 = sub nsw i32 %15, 8, !dbg !13501
  %idxprom17 = sext i32 %sub16 to i64, !dbg !13499
  %16 = load i32, i32* %buf_idx.addr, align 4, !dbg !13502
  %idxprom18 = sext i32 %16 to i64, !dbg !13499
  %17 = load [32 x [32 x [2 x float]]]*, [32 x [32 x [2 x float]]]** %W.addr, align 8, !dbg !13499
  %arrayidx19 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %17, i64 %idxprom18, !dbg !13499
  %arrayidx20 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !13499
  %arrayidx21 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %arrayidx20, i64 0, i64 %idxprom15, !dbg !13499
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 1, !dbg !13499
  %18 = load float, float* %arrayidx22, align 4, !dbg !13499
  %19 = load i32, i32* %i, align 4, !dbg !13503
  %idxprom23 = sext i32 %19 to i64, !dbg !13504
  %20 = load i32, i32* %k, align 4, !dbg !13505
  %idxprom24 = sext i32 %20 to i64, !dbg !13504
  %21 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !13504
  %arrayidx25 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %21, i64 %idxprom24, !dbg !13504
  %arrayidx26 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !13504
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 1, !dbg !13504
  store float %18, float* %arrayidx27, align 4, !dbg !13506
  br label %for.inc, !dbg !13507

for.inc:                                          ; preds = %for.body3
  %22 = load i32, i32* %i, align 4, !dbg !13508
  %inc = add nsw i32 %22, 1, !dbg !13508
  store i32 %inc, i32* %i, align 4, !dbg !13508
  br label %for.cond1, !dbg !13510, !llvm.loop !13511

for.end:                                          ; preds = %for.cond1
  br label %for.inc28, !dbg !13513

for.inc28:                                        ; preds = %for.end
  %23 = load i32, i32* %k, align 4, !dbg !13514
  %inc29 = add nsw i32 %23, 1, !dbg !13514
  store i32 %inc29, i32* %k, align 4, !dbg !13514
  br label %for.cond, !dbg !13516, !llvm.loop !13517

for.end30:                                        ; preds = %for.cond
  %24 = load i32, i32* %buf_idx.addr, align 4, !dbg !13519
  %sub31 = sub nsw i32 1, %24, !dbg !13520
  store i32 %sub31, i32* %buf_idx.addr, align 4, !dbg !13521
  store i32 0, i32* %k, align 4, !dbg !13522
  br label %for.cond32, !dbg !13524

for.cond32:                                       ; preds = %for.inc70, %for.end30
  %25 = load i32, i32* %k, align 4, !dbg !13525
  %26 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13528
  %kx33 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %26, i32 0, i32 13, !dbg !13529
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %kx33, i64 0, i64 0, !dbg !13528
  %27 = load i32, i32* %arrayidx34, align 8, !dbg !13528
  %cmp35 = icmp ult i32 %25, %27, !dbg !13530
  br i1 %cmp35, label %for.body36, label %for.end72, !dbg !13531

for.body36:                                       ; preds = %for.cond32
  store i32 0, i32* %i, align 4, !dbg !13532
  br label %for.cond37, !dbg !13535

for.cond37:                                       ; preds = %for.inc67, %for.body36
  %28 = load i32, i32* %i, align 4, !dbg !13536
  %cmp38 = icmp slt i32 %28, 8, !dbg !13539
  br i1 %cmp38, label %for.body39, label %for.end69, !dbg !13540

for.body39:                                       ; preds = %for.cond37
  %29 = load i32, i32* %k, align 4, !dbg !13541
  %idxprom40 = sext i32 %29 to i64, !dbg !13543
  %30 = load i32, i32* %i, align 4, !dbg !13544
  %add = add nsw i32 %30, 32, !dbg !13545
  %sub41 = sub nsw i32 %add, 8, !dbg !13546
  %idxprom42 = sext i32 %sub41 to i64, !dbg !13543
  %31 = load i32, i32* %buf_idx.addr, align 4, !dbg !13547
  %idxprom43 = sext i32 %31 to i64, !dbg !13543
  %32 = load [32 x [32 x [2 x float]]]*, [32 x [32 x [2 x float]]]** %W.addr, align 8, !dbg !13543
  %arrayidx44 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %32, i64 %idxprom43, !dbg !13543
  %arrayidx45 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %arrayidx44, i64 0, i64 %idxprom42, !dbg !13543
  %arrayidx46 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %arrayidx45, i64 0, i64 %idxprom40, !dbg !13543
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx46, i64 0, i64 0, !dbg !13543
  %33 = load float, float* %arrayidx47, align 4, !dbg !13543
  %34 = load i32, i32* %i, align 4, !dbg !13548
  %idxprom48 = sext i32 %34 to i64, !dbg !13549
  %35 = load i32, i32* %k, align 4, !dbg !13550
  %idxprom49 = sext i32 %35 to i64, !dbg !13549
  %36 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !13549
  %arrayidx50 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %36, i64 %idxprom49, !dbg !13549
  %arrayidx51 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !13549
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !13549
  store float %33, float* %arrayidx52, align 4, !dbg !13551
  %37 = load i32, i32* %k, align 4, !dbg !13552
  %idxprom53 = sext i32 %37 to i64, !dbg !13553
  %38 = load i32, i32* %i, align 4, !dbg !13554
  %add54 = add nsw i32 %38, 32, !dbg !13555
  %sub55 = sub nsw i32 %add54, 8, !dbg !13556
  %idxprom56 = sext i32 %sub55 to i64, !dbg !13553
  %39 = load i32, i32* %buf_idx.addr, align 4, !dbg !13557
  %idxprom57 = sext i32 %39 to i64, !dbg !13553
  %40 = load [32 x [32 x [2 x float]]]*, [32 x [32 x [2 x float]]]** %W.addr, align 8, !dbg !13553
  %arrayidx58 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %40, i64 %idxprom57, !dbg !13553
  %arrayidx59 = getelementptr inbounds [32 x [32 x [2 x float]]], [32 x [32 x [2 x float]]]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !13553
  %arrayidx60 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %arrayidx59, i64 0, i64 %idxprom53, !dbg !13553
  %arrayidx61 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx60, i64 0, i64 1, !dbg !13553
  %41 = load float, float* %arrayidx61, align 4, !dbg !13553
  %42 = load i32, i32* %i, align 4, !dbg !13558
  %idxprom62 = sext i32 %42 to i64, !dbg !13559
  %43 = load i32, i32* %k, align 4, !dbg !13560
  %idxprom63 = sext i32 %43 to i64, !dbg !13559
  %44 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !13559
  %arrayidx64 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %44, i64 %idxprom63, !dbg !13559
  %arrayidx65 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx64, i64 0, i64 %idxprom62, !dbg !13559
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx65, i64 0, i64 1, !dbg !13559
  store float %41, float* %arrayidx66, align 4, !dbg !13561
  br label %for.inc67, !dbg !13562

for.inc67:                                        ; preds = %for.body39
  %45 = load i32, i32* %i, align 4, !dbg !13563
  %inc68 = add nsw i32 %45, 1, !dbg !13563
  store i32 %inc68, i32* %i, align 4, !dbg !13563
  br label %for.cond37, !dbg !13565, !llvm.loop !13566

for.end69:                                        ; preds = %for.cond37
  br label %for.inc70, !dbg !13568

for.inc70:                                        ; preds = %for.end69
  %46 = load i32, i32* %k, align 4, !dbg !13569
  %inc71 = add nsw i32 %46, 1, !dbg !13569
  store i32 %inc71, i32* %k, align 4, !dbg !13569
  br label %for.cond32, !dbg !13571, !llvm.loop !13572

for.end72:                                        ; preds = %for.cond32
  ret i32 0, !dbg !13574
}

; Function Attrs: nounwind uwtable
define internal void @sbr_hf_assemble([64 x [2 x float]]* %Y1, [40 x [2 x float]]* %X_high, %struct.SpectralBandReplication* %sbr, %struct.SBRData* %ch_data, i32* %e_a) #3 !dbg !2587 {
entry:
  %Y1.addr = alloca [64 x [2 x float]]*, align 8
  %X_high.addr = alloca [40 x [2 x float]]*, align 8
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %ch_data.addr = alloca %struct.SBRData*, align 8
  %e_a.addr = alloca i32*, align 8
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %h_SL = alloca i32, align 4
  %kx = alloca i32, align 4
  %m_max = alloca i32, align 4
  %g_temp = alloca [48 x float]*, align 8
  %q_temp = alloca [48 x float]*, align 8
  %indexnoise = alloca i32, align 4
  %indexsine = alloca i32, align 4
  %la_g_filt_tab = alloca [48 x float], align 16
  %g_filt_tab = alloca float*, align 8
  %la_q_filt_tab = alloca [48 x float], align 16
  %q_filt_tab = alloca float*, align 8
  %g_filt = alloca float*, align 8
  %q_filt = alloca float*, align 8
  %idx1 = alloca i32, align 4
  %idx = alloca i32, align 4
  %A = alloca i32, align 4
  %B = alloca i32, align 4
  %out = alloca float*, align 8
  %in = alloca float*, align 8
  store [64 x [2 x float]]* %Y1, [64 x [2 x float]]** %Y1.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x float]]** %Y1.addr, metadata !13575, metadata !2753), !dbg !13576
  store [40 x [2 x float]]* %X_high, [40 x [2 x float]]** %X_high.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_high.addr, metadata !13577, metadata !2753), !dbg !13578
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !13579, metadata !2753), !dbg !13580
  store %struct.SBRData* %ch_data, %struct.SBRData** %ch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRData** %ch_data.addr, metadata !13581, metadata !2753), !dbg !13582
  store i32* %e_a, i32** %e_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %e_a.addr, metadata !13583, metadata !2753), !dbg !13584
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13585, metadata !2753), !dbg !13586
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13587, metadata !2753), !dbg !13588
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13589, metadata !2753), !dbg !13590
  call void @llvm.dbg.declare(metadata i32* %m, metadata !13591, metadata !2753), !dbg !13592
  call void @llvm.dbg.declare(metadata i32* %h_SL, metadata !13593, metadata !2753), !dbg !13594
  %0 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13595
  %bs_smoothing_mode = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %0, i32 0, i32 10, !dbg !13596
  %1 = load i32, i32* %bs_smoothing_mode, align 4, !dbg !13596
  %tobool = icmp ne i32 %1, 0, !dbg !13597
  %lnot = xor i1 %tobool, true, !dbg !13597
  %lnot.ext = zext i1 %lnot to i32, !dbg !13597
  %mul = mul nsw i32 4, %lnot.ext, !dbg !13598
  store i32 %mul, i32* %h_SL, align 4, !dbg !13594
  call void @llvm.dbg.declare(metadata i32* %kx, metadata !13599, metadata !2753), !dbg !13600
  %2 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13601
  %kx1 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %2, i32 0, i32 13, !dbg !13602
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %kx1, i64 0, i64 1, !dbg !13601
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13601
  store i32 %3, i32* %kx, align 4, !dbg !13600
  call void @llvm.dbg.declare(metadata i32* %m_max, metadata !13603, metadata !2753), !dbg !13604
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13605
  %m2 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 14, !dbg !13606
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %m2, i64 0, i64 1, !dbg !13605
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !13605
  store i32 %5, i32* %m_max, align 4, !dbg !13604
  call void @llvm.dbg.declare(metadata [48 x float]** %g_temp, metadata !13607, metadata !2753), !dbg !13610
  %6 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13611
  %g_temp4 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %6, i32 0, i32 19, !dbg !13612
  %arraydecay = getelementptr inbounds [42 x [48 x float]], [42 x [48 x float]]* %g_temp4, i32 0, i32 0, !dbg !13611
  store [48 x float]* %arraydecay, [48 x float]** %g_temp, align 8, !dbg !13610
  call void @llvm.dbg.declare(metadata [48 x float]** %q_temp, metadata !13613, metadata !2753), !dbg !13614
  %7 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13615
  %q_temp5 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %7, i32 0, i32 20, !dbg !13616
  %arraydecay6 = getelementptr inbounds [42 x [48 x float]], [42 x [48 x float]]* %q_temp5, i32 0, i32 0, !dbg !13615
  store [48 x float]* %arraydecay6, [48 x float]** %q_temp, align 8, !dbg !13614
  call void @llvm.dbg.declare(metadata i32* %indexnoise, metadata !13617, metadata !2753), !dbg !13618
  %8 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13619
  %f_indexnoise = getelementptr inbounds %struct.SBRData, %struct.SBRData* %8, i32 0, i32 29, !dbg !13620
  %9 = load i32, i32* %f_indexnoise, align 8, !dbg !13620
  store i32 %9, i32* %indexnoise, align 4, !dbg !13618
  call void @llvm.dbg.declare(metadata i32* %indexsine, metadata !13621, metadata !2753), !dbg !13622
  %10 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13623
  %f_indexsine = getelementptr inbounds %struct.SBRData, %struct.SBRData* %10, i32 0, i32 30, !dbg !13624
  %11 = load i32, i32* %f_indexsine, align 4, !dbg !13624
  store i32 %11, i32* %indexsine, align 4, !dbg !13622
  %12 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13625
  %reset = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %12, i32 0, i32 4, !dbg !13627
  %13 = load i32, i32* %reset, align 16, !dbg !13627
  %tobool7 = icmp ne i32 %13, 0, !dbg !13625
  br i1 %tobool7, label %if.then, label %if.else, !dbg !13628

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !13629
  br label %for.cond, !dbg !13632

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !13633
  %15 = load i32, i32* %h_SL, align 4, !dbg !13636
  %cmp = icmp slt i32 %14, %15, !dbg !13637
  br i1 %cmp, label %for.body, label %for.end, !dbg !13638

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !13639
  %17 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13641
  %t_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %17, i32 0, i32 26, !dbg !13642
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env, i64 0, i64 0, !dbg !13641
  %18 = load i8, i8* %arrayidx8, align 4, !dbg !13641
  %conv = zext i8 %18 to i32, !dbg !13641
  %mul9 = mul nsw i32 2, %conv, !dbg !13643
  %add = add nsw i32 %16, %mul9, !dbg !13644
  %idxprom = sext i32 %add to i64, !dbg !13645
  %19 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13645
  %arrayidx10 = getelementptr inbounds [48 x float], [48 x float]* %19, i64 %idxprom, !dbg !13645
  %arraydecay11 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx10, i32 0, i32 0, !dbg !13646
  %20 = bitcast float* %arraydecay11 to i8*, !dbg !13646
  %21 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13647
  %gain = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %21, i32 0, i32 41, !dbg !13648
  %arrayidx12 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain, i64 0, i64 0, !dbg !13647
  %arraydecay13 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx12, i32 0, i32 0, !dbg !13646
  %22 = bitcast float* %arraydecay13 to i8*, !dbg !13646
  %23 = load i32, i32* %m_max, align 4, !dbg !13649
  %conv14 = sext i32 %23 to i64, !dbg !13649
  %mul15 = mul i64 %conv14, 4, !dbg !13650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %mul15, i32 4, i1 false), !dbg !13646
  %24 = load i32, i32* %i, align 4, !dbg !13651
  %25 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13652
  %t_env16 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %25, i32 0, i32 26, !dbg !13653
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env16, i64 0, i64 0, !dbg !13652
  %26 = load i8, i8* %arrayidx17, align 4, !dbg !13652
  %conv18 = zext i8 %26 to i32, !dbg !13652
  %mul19 = mul nsw i32 2, %conv18, !dbg !13654
  %add20 = add nsw i32 %24, %mul19, !dbg !13655
  %idxprom21 = sext i32 %add20 to i64, !dbg !13656
  %27 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13656
  %arrayidx22 = getelementptr inbounds [48 x float], [48 x float]* %27, i64 %idxprom21, !dbg !13656
  %arraydecay23 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx22, i32 0, i32 0, !dbg !13657
  %28 = bitcast float* %arraydecay23 to i8*, !dbg !13657
  %29 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13658
  %q_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %29, i32 0, i32 39, !dbg !13659
  %arrayidx24 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m, i64 0, i64 0, !dbg !13658
  %arraydecay25 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx24, i32 0, i32 0, !dbg !13657
  %30 = bitcast float* %arraydecay25 to i8*, !dbg !13657
  %31 = load i32, i32* %m_max, align 4, !dbg !13660
  %conv26 = sext i32 %31 to i64, !dbg !13660
  %mul27 = mul i64 %conv26, 4, !dbg !13661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %mul27, i32 4, i1 false), !dbg !13657
  br label %for.inc, !dbg !13662

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !13663
  %inc = add nsw i32 %32, 1, !dbg !13663
  store i32 %inc, i32* %i, align 4, !dbg !13663
  br label %for.cond, !dbg !13665, !llvm.loop !13666

for.end:                                          ; preds = %for.cond
  br label %if.end66, !dbg !13668

if.else:                                          ; preds = %entry
  %33 = load i32, i32* %h_SL, align 4, !dbg !13669
  %tobool28 = icmp ne i32 %33, 0, !dbg !13669
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !13669

if.then29:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !13672
  br label %for.cond30, !dbg !13675

for.cond30:                                       ; preds = %for.inc63, %if.then29
  %34 = load i32, i32* %i, align 4, !dbg !13676
  %cmp31 = icmp slt i32 %34, 4, !dbg !13679
  br i1 %cmp31, label %for.body33, label %for.end65, !dbg !13680

for.body33:                                       ; preds = %for.cond30
  %35 = load i32, i32* %i, align 4, !dbg !13681
  %36 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13683
  %t_env34 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %36, i32 0, i32 26, !dbg !13684
  %arrayidx35 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env34, i64 0, i64 0, !dbg !13683
  %37 = load i8, i8* %arrayidx35, align 4, !dbg !13683
  %conv36 = zext i8 %37 to i32, !dbg !13683
  %mul37 = mul nsw i32 2, %conv36, !dbg !13685
  %add38 = add nsw i32 %35, %mul37, !dbg !13686
  %idxprom39 = sext i32 %add38 to i64, !dbg !13687
  %38 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13687
  %arrayidx40 = getelementptr inbounds [48 x float], [48 x float]* %38, i64 %idxprom39, !dbg !13687
  %arraydecay41 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx40, i32 0, i32 0, !dbg !13688
  %39 = bitcast float* %arraydecay41 to i8*, !dbg !13688
  %40 = load i32, i32* %i, align 4, !dbg !13689
  %41 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13690
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %41, i32 0, i32 27, !dbg !13691
  %42 = load i8, i8* %t_env_num_env_old, align 4, !dbg !13691
  %conv42 = zext i8 %42 to i32, !dbg !13690
  %mul43 = mul nsw i32 2, %conv42, !dbg !13692
  %add44 = add nsw i32 %40, %mul43, !dbg !13693
  %idxprom45 = sext i32 %add44 to i64, !dbg !13694
  %43 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13694
  %arrayidx46 = getelementptr inbounds [48 x float], [48 x float]* %43, i64 %idxprom45, !dbg !13694
  %arraydecay47 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx46, i32 0, i32 0, !dbg !13688
  %44 = bitcast float* %arraydecay47 to i8*, !dbg !13688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %44, i64 192, i32 4, i1 false), !dbg !13688
  %45 = load i32, i32* %i, align 4, !dbg !13695
  %46 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13696
  %t_env48 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %46, i32 0, i32 26, !dbg !13697
  %arrayidx49 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env48, i64 0, i64 0, !dbg !13696
  %47 = load i8, i8* %arrayidx49, align 4, !dbg !13696
  %conv50 = zext i8 %47 to i32, !dbg !13696
  %mul51 = mul nsw i32 2, %conv50, !dbg !13698
  %add52 = add nsw i32 %45, %mul51, !dbg !13699
  %idxprom53 = sext i32 %add52 to i64, !dbg !13700
  %48 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13700
  %arrayidx54 = getelementptr inbounds [48 x float], [48 x float]* %48, i64 %idxprom53, !dbg !13700
  %arraydecay55 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx54, i32 0, i32 0, !dbg !13701
  %49 = bitcast float* %arraydecay55 to i8*, !dbg !13701
  %50 = load i32, i32* %i, align 4, !dbg !13702
  %51 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13703
  %t_env_num_env_old56 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %51, i32 0, i32 27, !dbg !13704
  %52 = load i8, i8* %t_env_num_env_old56, align 4, !dbg !13704
  %conv57 = zext i8 %52 to i32, !dbg !13703
  %mul58 = mul nsw i32 2, %conv57, !dbg !13705
  %add59 = add nsw i32 %50, %mul58, !dbg !13706
  %idxprom60 = sext i32 %add59 to i64, !dbg !13707
  %53 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13707
  %arrayidx61 = getelementptr inbounds [48 x float], [48 x float]* %53, i64 %idxprom60, !dbg !13707
  %arraydecay62 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx61, i32 0, i32 0, !dbg !13701
  %54 = bitcast float* %arraydecay62 to i8*, !dbg !13701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %54, i64 192, i32 4, i1 false), !dbg !13701
  br label %for.inc63, !dbg !13708

for.inc63:                                        ; preds = %for.body33
  %55 = load i32, i32* %i, align 4, !dbg !13709
  %inc64 = add nsw i32 %55, 1, !dbg !13709
  store i32 %inc64, i32* %i, align 4, !dbg !13709
  br label %for.cond30, !dbg !13711, !llvm.loop !13712

for.end65:                                        ; preds = %for.cond30
  br label %if.end, !dbg !13714

if.end:                                           ; preds = %for.end65, %if.else
  br label %if.end66

if.end66:                                         ; preds = %if.end, %for.end
  store i32 0, i32* %e, align 4, !dbg !13715
  br label %for.cond67, !dbg !13717

for.cond67:                                       ; preds = %for.inc109, %if.end66
  %56 = load i32, i32* %e, align 4, !dbg !13718
  %57 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13721
  %bs_num_env = getelementptr inbounds %struct.SBRData, %struct.SBRData* %57, i32 0, i32 2, !dbg !13722
  %58 = load i32, i32* %bs_num_env, align 8, !dbg !13722
  %cmp68 = icmp ult i32 %56, %58, !dbg !13723
  br i1 %cmp68, label %for.body70, label %for.end111, !dbg !13724

for.body70:                                       ; preds = %for.cond67
  %59 = load i32, i32* %e, align 4, !dbg !13725
  %idxprom71 = sext i32 %59 to i64, !dbg !13728
  %60 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13728
  %t_env72 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %60, i32 0, i32 26, !dbg !13729
  %arrayidx73 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env72, i64 0, i64 %idxprom71, !dbg !13728
  %61 = load i8, i8* %arrayidx73, align 1, !dbg !13728
  %conv74 = zext i8 %61 to i32, !dbg !13728
  %mul75 = mul nsw i32 2, %conv74, !dbg !13730
  store i32 %mul75, i32* %i, align 4, !dbg !13731
  br label %for.cond76, !dbg !13732

for.cond76:                                       ; preds = %for.inc106, %for.body70
  %62 = load i32, i32* %i, align 4, !dbg !13733
  %63 = load i32, i32* %e, align 4, !dbg !13736
  %add77 = add nsw i32 %63, 1, !dbg !13737
  %idxprom78 = sext i32 %add77 to i64, !dbg !13738
  %64 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13738
  %t_env79 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %64, i32 0, i32 26, !dbg !13739
  %arrayidx80 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env79, i64 0, i64 %idxprom78, !dbg !13738
  %65 = load i8, i8* %arrayidx80, align 1, !dbg !13738
  %conv81 = zext i8 %65 to i32, !dbg !13738
  %mul82 = mul nsw i32 2, %conv81, !dbg !13740
  %cmp83 = icmp slt i32 %62, %mul82, !dbg !13741
  br i1 %cmp83, label %for.body85, label %for.end108, !dbg !13742

for.body85:                                       ; preds = %for.cond76
  %66 = load i32, i32* %h_SL, align 4, !dbg !13743
  %67 = load i32, i32* %i, align 4, !dbg !13745
  %add86 = add nsw i32 %66, %67, !dbg !13746
  %idxprom87 = sext i32 %add86 to i64, !dbg !13747
  %68 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13747
  %arrayidx88 = getelementptr inbounds [48 x float], [48 x float]* %68, i64 %idxprom87, !dbg !13747
  %arraydecay89 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx88, i32 0, i32 0, !dbg !13748
  %69 = bitcast float* %arraydecay89 to i8*, !dbg !13748
  %70 = load i32, i32* %e, align 4, !dbg !13749
  %idxprom90 = sext i32 %70 to i64, !dbg !13750
  %71 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13750
  %gain91 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %71, i32 0, i32 41, !dbg !13751
  %arrayidx92 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %gain91, i64 0, i64 %idxprom90, !dbg !13750
  %arraydecay93 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx92, i32 0, i32 0, !dbg !13748
  %72 = bitcast float* %arraydecay93 to i8*, !dbg !13748
  %73 = load i32, i32* %m_max, align 4, !dbg !13752
  %conv94 = sext i32 %73 to i64, !dbg !13752
  %mul95 = mul i64 %conv94, 4, !dbg !13753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %72, i64 %mul95, i32 4, i1 false), !dbg !13748
  %74 = load i32, i32* %h_SL, align 4, !dbg !13754
  %75 = load i32, i32* %i, align 4, !dbg !13755
  %add96 = add nsw i32 %74, %75, !dbg !13756
  %idxprom97 = sext i32 %add96 to i64, !dbg !13757
  %76 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13757
  %arrayidx98 = getelementptr inbounds [48 x float], [48 x float]* %76, i64 %idxprom97, !dbg !13757
  %arraydecay99 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx98, i32 0, i32 0, !dbg !13758
  %77 = bitcast float* %arraydecay99 to i8*, !dbg !13758
  %78 = load i32, i32* %e, align 4, !dbg !13759
  %idxprom100 = sext i32 %78 to i64, !dbg !13760
  %79 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13760
  %q_m101 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %79, i32 0, i32 39, !dbg !13761
  %arrayidx102 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %q_m101, i64 0, i64 %idxprom100, !dbg !13760
  %arraydecay103 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx102, i32 0, i32 0, !dbg !13758
  %80 = bitcast float* %arraydecay103 to i8*, !dbg !13758
  %81 = load i32, i32* %m_max, align 4, !dbg !13762
  %conv104 = sext i32 %81 to i64, !dbg !13762
  %mul105 = mul i64 %conv104, 4, !dbg !13763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %80, i64 %mul105, i32 4, i1 false), !dbg !13758
  br label %for.inc106, !dbg !13764

for.inc106:                                       ; preds = %for.body85
  %82 = load i32, i32* %i, align 4, !dbg !13765
  %inc107 = add nsw i32 %82, 1, !dbg !13765
  store i32 %inc107, i32* %i, align 4, !dbg !13765
  br label %for.cond76, !dbg !13767, !llvm.loop !13768

for.end108:                                       ; preds = %for.cond76
  br label %for.inc109, !dbg !13770

for.inc109:                                       ; preds = %for.end108
  %83 = load i32, i32* %e, align 4, !dbg !13771
  %inc110 = add nsw i32 %83, 1, !dbg !13771
  store i32 %inc110, i32* %e, align 4, !dbg !13771
  br label %for.cond67, !dbg !13773, !llvm.loop !13774

for.end111:                                       ; preds = %for.cond67
  store i32 0, i32* %e, align 4, !dbg !13776
  br label %for.cond112, !dbg !13778

for.cond112:                                      ; preds = %for.inc281, %for.end111
  %84 = load i32, i32* %e, align 4, !dbg !13779
  %85 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13782
  %bs_num_env113 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %85, i32 0, i32 2, !dbg !13783
  %86 = load i32, i32* %bs_num_env113, align 8, !dbg !13783
  %cmp114 = icmp ult i32 %84, %86, !dbg !13784
  br i1 %cmp114, label %for.body116, label %for.end283, !dbg !13785

for.body116:                                      ; preds = %for.cond112
  %87 = load i32, i32* %e, align 4, !dbg !13786
  %idxprom117 = sext i32 %87 to i64, !dbg !13789
  %88 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13789
  %t_env118 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %88, i32 0, i32 26, !dbg !13790
  %arrayidx119 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env118, i64 0, i64 %idxprom117, !dbg !13789
  %89 = load i8, i8* %arrayidx119, align 1, !dbg !13789
  %conv120 = zext i8 %89 to i32, !dbg !13789
  %mul121 = mul nsw i32 2, %conv120, !dbg !13791
  store i32 %mul121, i32* %i, align 4, !dbg !13792
  br label %for.cond122, !dbg !13793

for.cond122:                                      ; preds = %for.inc278, %for.body116
  %90 = load i32, i32* %i, align 4, !dbg !13794
  %91 = load i32, i32* %e, align 4, !dbg !13797
  %add123 = add nsw i32 %91, 1, !dbg !13798
  %idxprom124 = sext i32 %add123 to i64, !dbg !13799
  %92 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !13799
  %t_env125 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %92, i32 0, i32 26, !dbg !13800
  %arrayidx126 = getelementptr inbounds [8 x i8], [8 x i8]* %t_env125, i64 0, i64 %idxprom124, !dbg !13799
  %93 = load i8, i8* %arrayidx126, align 1, !dbg !13799
  %conv127 = zext i8 %93 to i32, !dbg !13799
  %mul128 = mul nsw i32 2, %conv127, !dbg !13801
  %cmp129 = icmp slt i32 %90, %mul128, !dbg !13802
  br i1 %cmp129, label %for.body131, label %for.end280, !dbg !13803

for.body131:                                      ; preds = %for.cond122
  call void @llvm.dbg.declare(metadata [48 x float]* %la_g_filt_tab, metadata !13804, metadata !2753), !dbg !13806
  call void @llvm.dbg.declare(metadata float** %g_filt_tab, metadata !13807, metadata !2753), !dbg !13808
  %arraydecay132 = getelementptr inbounds [48 x float], [48 x float]* %la_g_filt_tab, i32 0, i32 0, !dbg !13809
  store float* %arraydecay132, float** %g_filt_tab, align 8, !dbg !13808
  call void @llvm.dbg.declare(metadata [48 x float]* %la_q_filt_tab, metadata !13810, metadata !2753), !dbg !13811
  call void @llvm.dbg.declare(metadata float** %q_filt_tab, metadata !13812, metadata !2753), !dbg !13813
  %arraydecay133 = getelementptr inbounds [48 x float], [48 x float]* %la_q_filt_tab, i32 0, i32 0, !dbg !13814
  store float* %arraydecay133, float** %q_filt_tab, align 8, !dbg !13813
  call void @llvm.dbg.declare(metadata float** %g_filt, metadata !13815, metadata !2753), !dbg !13816
  call void @llvm.dbg.declare(metadata float** %q_filt, metadata !13817, metadata !2753), !dbg !13818
  %94 = load i32, i32* %h_SL, align 4, !dbg !13819
  %tobool134 = icmp ne i32 %94, 0, !dbg !13819
  br i1 %tobool134, label %land.lhs.true, label %if.else183, !dbg !13821

land.lhs.true:                                    ; preds = %for.body131
  %95 = load i32, i32* %e, align 4, !dbg !13822
  %96 = load i32*, i32** %e_a.addr, align 8, !dbg !13824
  %arrayidx135 = getelementptr inbounds i32, i32* %96, i64 0, !dbg !13824
  %97 = load i32, i32* %arrayidx135, align 4, !dbg !13824
  %cmp136 = icmp ne i32 %95, %97, !dbg !13825
  br i1 %cmp136, label %land.lhs.true138, label %if.else183, !dbg !13826

land.lhs.true138:                                 ; preds = %land.lhs.true
  %98 = load i32, i32* %e, align 4, !dbg !13827
  %99 = load i32*, i32** %e_a.addr, align 8, !dbg !13829
  %arrayidx139 = getelementptr inbounds i32, i32* %99, i64 1, !dbg !13829
  %100 = load i32, i32* %arrayidx139, align 4, !dbg !13829
  %cmp140 = icmp ne i32 %98, %100, !dbg !13830
  br i1 %cmp140, label %if.then142, label %if.else183, !dbg !13831

if.then142:                                       ; preds = %land.lhs.true138
  %101 = load float*, float** %g_filt_tab, align 8, !dbg !13832
  store float* %101, float** %g_filt, align 8, !dbg !13834
  %102 = load float*, float** %q_filt_tab, align 8, !dbg !13835
  store float* %102, float** %q_filt, align 8, !dbg !13836
  store i32 0, i32* %m, align 4, !dbg !13837
  br label %for.cond143, !dbg !13839

for.cond143:                                      ; preds = %for.inc180, %if.then142
  %103 = load i32, i32* %m, align 4, !dbg !13840
  %104 = load i32, i32* %m_max, align 4, !dbg !13843
  %cmp144 = icmp slt i32 %103, %104, !dbg !13844
  br i1 %cmp144, label %for.body146, label %for.end182, !dbg !13845

for.body146:                                      ; preds = %for.cond143
  call void @llvm.dbg.declare(metadata i32* %idx1, metadata !13846, metadata !2753), !dbg !13848
  %105 = load i32, i32* %i, align 4, !dbg !13849
  %106 = load i32, i32* %h_SL, align 4, !dbg !13850
  %add147 = add nsw i32 %105, %106, !dbg !13851
  store i32 %add147, i32* %idx1, align 4, !dbg !13848
  %107 = load i32, i32* %m, align 4, !dbg !13852
  %idxprom148 = sext i32 %107 to i64, !dbg !13853
  %108 = load float*, float** %g_filt, align 8, !dbg !13853
  %arrayidx149 = getelementptr inbounds float, float* %108, i64 %idxprom148, !dbg !13853
  store float 0.000000e+00, float* %arrayidx149, align 4, !dbg !13854
  %109 = load i32, i32* %m, align 4, !dbg !13855
  %idxprom150 = sext i32 %109 to i64, !dbg !13856
  %110 = load float*, float** %q_filt, align 8, !dbg !13856
  %arrayidx151 = getelementptr inbounds float, float* %110, i64 %idxprom150, !dbg !13856
  store float 0.000000e+00, float* %arrayidx151, align 4, !dbg !13857
  store i32 0, i32* %j, align 4, !dbg !13858
  br label %for.cond152, !dbg !13860

for.cond152:                                      ; preds = %for.inc177, %for.body146
  %111 = load i32, i32* %j, align 4, !dbg !13861
  %112 = load i32, i32* %h_SL, align 4, !dbg !13864
  %cmp153 = icmp sle i32 %111, %112, !dbg !13865
  br i1 %cmp153, label %for.body155, label %for.end179, !dbg !13866

for.body155:                                      ; preds = %for.cond152
  %113 = load i32, i32* %m, align 4, !dbg !13867
  %idxprom156 = sext i32 %113 to i64, !dbg !13869
  %114 = load i32, i32* %idx1, align 4, !dbg !13870
  %115 = load i32, i32* %j, align 4, !dbg !13871
  %sub = sub nsw i32 %114, %115, !dbg !13872
  %idxprom157 = sext i32 %sub to i64, !dbg !13869
  %116 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13869
  %arrayidx158 = getelementptr inbounds [48 x float], [48 x float]* %116, i64 %idxprom157, !dbg !13869
  %arrayidx159 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx158, i64 0, i64 %idxprom156, !dbg !13869
  %117 = load float, float* %arrayidx159, align 4, !dbg !13869
  %118 = load i32, i32* %j, align 4, !dbg !13873
  %idxprom160 = sext i32 %118 to i64, !dbg !13874
  %arrayidx161 = getelementptr inbounds [5 x float], [5 x float]* @sbr_hf_assemble.h_smooth, i64 0, i64 %idxprom160, !dbg !13874
  %119 = load float, float* %arrayidx161, align 4, !dbg !13874
  %mul162 = fmul float %117, %119, !dbg !13875
  %120 = load i32, i32* %m, align 4, !dbg !13876
  %idxprom163 = sext i32 %120 to i64, !dbg !13877
  %121 = load float*, float** %g_filt, align 8, !dbg !13877
  %arrayidx164 = getelementptr inbounds float, float* %121, i64 %idxprom163, !dbg !13877
  %122 = load float, float* %arrayidx164, align 4, !dbg !13878
  %add165 = fadd float %122, %mul162, !dbg !13878
  store float %add165, float* %arrayidx164, align 4, !dbg !13878
  %123 = load i32, i32* %m, align 4, !dbg !13879
  %idxprom166 = sext i32 %123 to i64, !dbg !13880
  %124 = load i32, i32* %idx1, align 4, !dbg !13881
  %125 = load i32, i32* %j, align 4, !dbg !13882
  %sub167 = sub nsw i32 %124, %125, !dbg !13883
  %idxprom168 = sext i32 %sub167 to i64, !dbg !13880
  %126 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13880
  %arrayidx169 = getelementptr inbounds [48 x float], [48 x float]* %126, i64 %idxprom168, !dbg !13880
  %arrayidx170 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx169, i64 0, i64 %idxprom166, !dbg !13880
  %127 = load float, float* %arrayidx170, align 4, !dbg !13880
  %128 = load i32, i32* %j, align 4, !dbg !13884
  %idxprom171 = sext i32 %128 to i64, !dbg !13885
  %arrayidx172 = getelementptr inbounds [5 x float], [5 x float]* @sbr_hf_assemble.h_smooth, i64 0, i64 %idxprom171, !dbg !13885
  %129 = load float, float* %arrayidx172, align 4, !dbg !13885
  %mul173 = fmul float %127, %129, !dbg !13886
  %130 = load i32, i32* %m, align 4, !dbg !13887
  %idxprom174 = sext i32 %130 to i64, !dbg !13888
  %131 = load float*, float** %q_filt, align 8, !dbg !13888
  %arrayidx175 = getelementptr inbounds float, float* %131, i64 %idxprom174, !dbg !13888
  %132 = load float, float* %arrayidx175, align 4, !dbg !13889
  %add176 = fadd float %132, %mul173, !dbg !13889
  store float %add176, float* %arrayidx175, align 4, !dbg !13889
  br label %for.inc177, !dbg !13890

for.inc177:                                       ; preds = %for.body155
  %133 = load i32, i32* %j, align 4, !dbg !13891
  %inc178 = add nsw i32 %133, 1, !dbg !13891
  store i32 %inc178, i32* %j, align 4, !dbg !13891
  br label %for.cond152, !dbg !13893, !llvm.loop !13894

for.end179:                                       ; preds = %for.cond152
  br label %for.inc180, !dbg !13896

for.inc180:                                       ; preds = %for.end179
  %134 = load i32, i32* %m, align 4, !dbg !13897
  %inc181 = add nsw i32 %134, 1, !dbg !13897
  store i32 %inc181, i32* %m, align 4, !dbg !13897
  br label %for.cond143, !dbg !13899, !llvm.loop !13900

for.end182:                                       ; preds = %for.cond143
  br label %if.end191, !dbg !13902

if.else183:                                       ; preds = %land.lhs.true138, %land.lhs.true, %for.body131
  %135 = load i32, i32* %i, align 4, !dbg !13903
  %136 = load i32, i32* %h_SL, align 4, !dbg !13905
  %add184 = add nsw i32 %135, %136, !dbg !13906
  %idxprom185 = sext i32 %add184 to i64, !dbg !13907
  %137 = load [48 x float]*, [48 x float]** %g_temp, align 8, !dbg !13907
  %arrayidx186 = getelementptr inbounds [48 x float], [48 x float]* %137, i64 %idxprom185, !dbg !13907
  %arraydecay187 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx186, i32 0, i32 0, !dbg !13907
  store float* %arraydecay187, float** %g_filt, align 8, !dbg !13908
  %138 = load i32, i32* %i, align 4, !dbg !13909
  %idxprom188 = sext i32 %138 to i64, !dbg !13910
  %139 = load [48 x float]*, [48 x float]** %q_temp, align 8, !dbg !13910
  %arrayidx189 = getelementptr inbounds [48 x float], [48 x float]* %139, i64 %idxprom188, !dbg !13910
  %arraydecay190 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx189, i32 0, i32 0, !dbg !13910
  store float* %arraydecay190, float** %q_filt, align 8, !dbg !13911
  br label %if.end191

if.end191:                                        ; preds = %if.else183, %for.end182
  %140 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13912
  %dsp = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %140, i32 0, i32 46, !dbg !13913
  %hf_g_filt = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp, i32 0, i32 9, !dbg !13914
  %141 = load void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)** %hf_g_filt, align 8, !dbg !13914
  %142 = load i32, i32* %i, align 4, !dbg !13915
  %idxprom192 = sext i32 %142 to i64, !dbg !13916
  %143 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y1.addr, align 8, !dbg !13916
  %arrayidx193 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %143, i64 %idxprom192, !dbg !13916
  %arraydecay194 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx193, i32 0, i32 0, !dbg !13916
  %144 = load i32, i32* %kx, align 4, !dbg !13917
  %idx.ext = sext i32 %144 to i64, !dbg !13918
  %add.ptr = getelementptr inbounds [2 x float], [2 x float]* %arraydecay194, i64 %idx.ext, !dbg !13918
  %145 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_high.addr, align 8, !dbg !13919
  %146 = load i32, i32* %kx, align 4, !dbg !13920
  %idx.ext195 = sext i32 %146 to i64, !dbg !13921
  %add.ptr196 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %145, i64 %idx.ext195, !dbg !13921
  %147 = load float*, float** %g_filt, align 8, !dbg !13922
  %148 = load i32, i32* %m_max, align 4, !dbg !13923
  %149 = load i32, i32* %i, align 4, !dbg !13924
  %add197 = add nsw i32 %149, 2, !dbg !13925
  %conv198 = sext i32 %add197 to i64, !dbg !13924
  call void %141([2 x float]* %add.ptr, [40 x [2 x float]]* %add.ptr196, float* %147, i32 %148, i64 %conv198), !dbg !13912
  %150 = load i32, i32* %e, align 4, !dbg !13926
  %151 = load i32*, i32** %e_a.addr, align 8, !dbg !13928
  %arrayidx199 = getelementptr inbounds i32, i32* %151, i64 0, !dbg !13928
  %152 = load i32, i32* %arrayidx199, align 4, !dbg !13928
  %cmp200 = icmp ne i32 %150, %152, !dbg !13929
  br i1 %cmp200, label %land.lhs.true202, label %if.else218, !dbg !13930

land.lhs.true202:                                 ; preds = %if.end191
  %153 = load i32, i32* %e, align 4, !dbg !13931
  %154 = load i32*, i32** %e_a.addr, align 8, !dbg !13933
  %arrayidx203 = getelementptr inbounds i32, i32* %154, i64 1, !dbg !13933
  %155 = load i32, i32* %arrayidx203, align 4, !dbg !13933
  %cmp204 = icmp ne i32 %153, %155, !dbg !13934
  br i1 %cmp204, label %if.then206, label %if.else218, !dbg !13935

if.then206:                                       ; preds = %land.lhs.true202
  %156 = load i32, i32* %indexsine, align 4, !dbg !13936
  %idxprom207 = sext i32 %156 to i64, !dbg !13938
  %157 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13938
  %dsp208 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %157, i32 0, i32 46, !dbg !13939
  %hf_apply_noise = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %dsp208, i32 0, i32 10, !dbg !13940
  %arrayidx209 = getelementptr inbounds [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*], [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*]* %hf_apply_noise, i64 0, i64 %idxprom207, !dbg !13938
  %158 = load void ([2 x float]*, float*, float*, i32, i32, i32)*, void ([2 x float]*, float*, float*, i32, i32, i32)** %arrayidx209, align 8, !dbg !13938
  %159 = load i32, i32* %i, align 4, !dbg !13941
  %idxprom210 = sext i32 %159 to i64, !dbg !13942
  %160 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y1.addr, align 8, !dbg !13942
  %arrayidx211 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %160, i64 %idxprom210, !dbg !13942
  %arraydecay212 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx211, i32 0, i32 0, !dbg !13942
  %161 = load i32, i32* %kx, align 4, !dbg !13943
  %idx.ext213 = sext i32 %161 to i64, !dbg !13944
  %add.ptr214 = getelementptr inbounds [2 x float], [2 x float]* %arraydecay212, i64 %idx.ext213, !dbg !13944
  %162 = load i32, i32* %e, align 4, !dbg !13945
  %idxprom215 = sext i32 %162 to i64, !dbg !13946
  %163 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13946
  %s_m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %163, i32 0, i32 40, !dbg !13947
  %arrayidx216 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m, i64 0, i64 %idxprom215, !dbg !13946
  %arraydecay217 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx216, i32 0, i32 0, !dbg !13946
  %164 = load float*, float** %q_filt, align 8, !dbg !13948
  %165 = load i32, i32* %indexnoise, align 4, !dbg !13949
  %166 = load i32, i32* %kx, align 4, !dbg !13950
  %167 = load i32, i32* %m_max, align 4, !dbg !13951
  call void %158([2 x float]* %add.ptr214, float* %arraydecay217, float* %164, i32 %165, i32 %166, i32 %167), !dbg !13938
  br label %if.end273, !dbg !13952

if.else218:                                       ; preds = %land.lhs.true202, %if.end191
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13953, metadata !2753), !dbg !13955
  %168 = load i32, i32* %indexsine, align 4, !dbg !13956
  %and = and i32 %168, 1, !dbg !13957
  store i32 %and, i32* %idx, align 4, !dbg !13955
  call void @llvm.dbg.declare(metadata i32* %A, metadata !13958, metadata !2753), !dbg !13959
  %169 = load i32, i32* %indexsine, align 4, !dbg !13960
  %170 = load i32, i32* %kx, align 4, !dbg !13961
  %and219 = and i32 %170, 1, !dbg !13962
  %add220 = add nsw i32 %169, %and219, !dbg !13963
  %and221 = and i32 %add220, 2, !dbg !13964
  %sub222 = sub nsw i32 1, %and221, !dbg !13965
  store i32 %sub222, i32* %A, align 4, !dbg !13959
  call void @llvm.dbg.declare(metadata i32* %B, metadata !13966, metadata !2753), !dbg !13967
  %171 = load i32, i32* %A, align 4, !dbg !13968
  %172 = load i32, i32* %idx, align 4, !dbg !13969
  %sub223 = sub nsw i32 0, %172, !dbg !13970
  %xor = xor i32 %171, %sub223, !dbg !13971
  %173 = load i32, i32* %idx, align 4, !dbg !13972
  %add224 = add nsw i32 %xor, %173, !dbg !13973
  store i32 %add224, i32* %B, align 4, !dbg !13967
  call void @llvm.dbg.declare(metadata float** %out, metadata !13974, metadata !2753), !dbg !13975
  %174 = load i32, i32* %idx, align 4, !dbg !13976
  %idxprom225 = sext i32 %174 to i64, !dbg !13977
  %175 = load i32, i32* %kx, align 4, !dbg !13978
  %idxprom226 = sext i32 %175 to i64, !dbg !13977
  %176 = load i32, i32* %i, align 4, !dbg !13979
  %idxprom227 = sext i32 %176 to i64, !dbg !13977
  %177 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y1.addr, align 8, !dbg !13977
  %arrayidx228 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %177, i64 %idxprom227, !dbg !13977
  %arrayidx229 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx228, i64 0, i64 %idxprom226, !dbg !13977
  %arrayidx230 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx229, i64 0, i64 %idxprom225, !dbg !13977
  store float* %arrayidx230, float** %out, align 8, !dbg !13975
  call void @llvm.dbg.declare(metadata float** %in, metadata !13980, metadata !2753), !dbg !13981
  %178 = load i32, i32* %e, align 4, !dbg !13982
  %idxprom231 = sext i32 %178 to i64, !dbg !13983
  %179 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !13983
  %s_m232 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %179, i32 0, i32 40, !dbg !13984
  %arrayidx233 = getelementptr inbounds [7 x [48 x float]], [7 x [48 x float]]* %s_m232, i64 0, i64 %idxprom231, !dbg !13983
  %arraydecay234 = getelementptr inbounds [48 x float], [48 x float]* %arrayidx233, i32 0, i32 0, !dbg !13983
  store float* %arraydecay234, float** %in, align 8, !dbg !13981
  store i32 0, i32* %m, align 4, !dbg !13985
  br label %for.cond235, !dbg !13987

for.cond235:                                      ; preds = %for.inc258, %if.else218
  %180 = load i32, i32* %m, align 4, !dbg !13988
  %add236 = add nsw i32 %180, 1, !dbg !13991
  %181 = load i32, i32* %m_max, align 4, !dbg !13992
  %cmp237 = icmp slt i32 %add236, %181, !dbg !13993
  br i1 %cmp237, label %for.body239, label %for.end260, !dbg !13994

for.body239:                                      ; preds = %for.cond235
  %182 = load i32, i32* %m, align 4, !dbg !13995
  %idxprom240 = sext i32 %182 to i64, !dbg !13997
  %183 = load float*, float** %in, align 8, !dbg !13997
  %arrayidx241 = getelementptr inbounds float, float* %183, i64 %idxprom240, !dbg !13997
  %184 = load float, float* %arrayidx241, align 4, !dbg !13997
  %185 = load i32, i32* %A, align 4, !dbg !13998
  %conv242 = sitofp i32 %185 to float, !dbg !13998
  %mul243 = fmul float %184, %conv242, !dbg !13999
  %186 = load i32, i32* %m, align 4, !dbg !14000
  %mul244 = mul nsw i32 2, %186, !dbg !14001
  %idxprom245 = sext i32 %mul244 to i64, !dbg !14002
  %187 = load float*, float** %out, align 8, !dbg !14002
  %arrayidx246 = getelementptr inbounds float, float* %187, i64 %idxprom245, !dbg !14002
  %188 = load float, float* %arrayidx246, align 4, !dbg !14003
  %add247 = fadd float %188, %mul243, !dbg !14003
  store float %add247, float* %arrayidx246, align 4, !dbg !14003
  %189 = load i32, i32* %m, align 4, !dbg !14004
  %add248 = add nsw i32 %189, 1, !dbg !14005
  %idxprom249 = sext i32 %add248 to i64, !dbg !14006
  %190 = load float*, float** %in, align 8, !dbg !14006
  %arrayidx250 = getelementptr inbounds float, float* %190, i64 %idxprom249, !dbg !14006
  %191 = load float, float* %arrayidx250, align 4, !dbg !14006
  %192 = load i32, i32* %B, align 4, !dbg !14007
  %conv251 = sitofp i32 %192 to float, !dbg !14007
  %mul252 = fmul float %191, %conv251, !dbg !14008
  %193 = load i32, i32* %m, align 4, !dbg !14009
  %mul253 = mul nsw i32 2, %193, !dbg !14010
  %add254 = add nsw i32 %mul253, 2, !dbg !14011
  %idxprom255 = sext i32 %add254 to i64, !dbg !14012
  %194 = load float*, float** %out, align 8, !dbg !14012
  %arrayidx256 = getelementptr inbounds float, float* %194, i64 %idxprom255, !dbg !14012
  %195 = load float, float* %arrayidx256, align 4, !dbg !14013
  %add257 = fadd float %195, %mul252, !dbg !14013
  store float %add257, float* %arrayidx256, align 4, !dbg !14013
  br label %for.inc258, !dbg !14014

for.inc258:                                       ; preds = %for.body239
  %196 = load i32, i32* %m, align 4, !dbg !14015
  %add259 = add nsw i32 %196, 2, !dbg !14015
  store i32 %add259, i32* %m, align 4, !dbg !14015
  br label %for.cond235, !dbg !14017, !llvm.loop !14018

for.end260:                                       ; preds = %for.cond235
  %197 = load i32, i32* %m_max, align 4, !dbg !14020
  %and261 = and i32 %197, 1, !dbg !14022
  %tobool262 = icmp ne i32 %and261, 0, !dbg !14022
  br i1 %tobool262, label %if.then263, label %if.end272, !dbg !14023

if.then263:                                       ; preds = %for.end260
  %198 = load i32, i32* %m, align 4, !dbg !14024
  %idxprom264 = sext i32 %198 to i64, !dbg !14025
  %199 = load float*, float** %in, align 8, !dbg !14025
  %arrayidx265 = getelementptr inbounds float, float* %199, i64 %idxprom264, !dbg !14025
  %200 = load float, float* %arrayidx265, align 4, !dbg !14025
  %201 = load i32, i32* %A, align 4, !dbg !14026
  %conv266 = sitofp i32 %201 to float, !dbg !14026
  %mul267 = fmul float %200, %conv266, !dbg !14027
  %202 = load i32, i32* %m, align 4, !dbg !14028
  %mul268 = mul nsw i32 2, %202, !dbg !14029
  %idxprom269 = sext i32 %mul268 to i64, !dbg !14030
  %203 = load float*, float** %out, align 8, !dbg !14030
  %arrayidx270 = getelementptr inbounds float, float* %203, i64 %idxprom269, !dbg !14030
  %204 = load float, float* %arrayidx270, align 4, !dbg !14031
  %add271 = fadd float %204, %mul267, !dbg !14031
  store float %add271, float* %arrayidx270, align 4, !dbg !14031
  br label %if.end272, !dbg !14030

if.end272:                                        ; preds = %if.then263, %for.end260
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then206
  %205 = load i32, i32* %indexnoise, align 4, !dbg !14032
  %206 = load i32, i32* %m_max, align 4, !dbg !14033
  %add274 = add nsw i32 %205, %206, !dbg !14034
  %and275 = and i32 %add274, 511, !dbg !14035
  store i32 %and275, i32* %indexnoise, align 4, !dbg !14036
  %207 = load i32, i32* %indexsine, align 4, !dbg !14037
  %add276 = add nsw i32 %207, 1, !dbg !14038
  %and277 = and i32 %add276, 3, !dbg !14039
  store i32 %and277, i32* %indexsine, align 4, !dbg !14040
  br label %for.inc278, !dbg !14041

for.inc278:                                       ; preds = %if.end273
  %208 = load i32, i32* %i, align 4, !dbg !14042
  %inc279 = add nsw i32 %208, 1, !dbg !14042
  store i32 %inc279, i32* %i, align 4, !dbg !14042
  br label %for.cond122, !dbg !14044, !llvm.loop !14045

for.end280:                                       ; preds = %for.cond122
  br label %for.inc281, !dbg !14047

for.inc281:                                       ; preds = %for.end280
  %209 = load i32, i32* %e, align 4, !dbg !14048
  %inc282 = add nsw i32 %209, 1, !dbg !14048
  store i32 %inc282, i32* %e, align 4, !dbg !14048
  br label %for.cond112, !dbg !14050, !llvm.loop !14051

for.end283:                                       ; preds = %for.cond112
  %210 = load i32, i32* %indexnoise, align 4, !dbg !14053
  %211 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14054
  %f_indexnoise284 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %211, i32 0, i32 29, !dbg !14055
  store i32 %210, i32* %f_indexnoise284, align 8, !dbg !14056
  %212 = load i32, i32* %indexsine, align 4, !dbg !14057
  %213 = load %struct.SBRData*, %struct.SBRData** %ch_data.addr, align 8, !dbg !14058
  %f_indexsine285 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %213, i32 0, i32 30, !dbg !14059
  store i32 %212, i32* %f_indexsine285, align 4, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: nounwind uwtable
define internal i32 @sbr_x_gen(%struct.SpectralBandReplication* %sbr, [38 x [64 x float]]* %X, [64 x [2 x float]]* %Y0, [64 x [2 x float]]* %Y1, [40 x [2 x float]]* %X_low, i32 %ch) #3 !dbg !14062 {
entry:
  %sbr.addr = alloca %struct.SpectralBandReplication*, align 8
  %X.addr = alloca [38 x [64 x float]]*, align 8
  %Y0.addr = alloca [64 x [2 x float]]*, align 8
  %Y1.addr = alloca [64 x [2 x float]]*, align 8
  %X_low.addr = alloca [40 x [2 x float]]*, align 8
  %ch.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %i_f = alloca i32, align 4
  %i_Temp = alloca i32, align 4
  store %struct.SpectralBandReplication* %sbr, %struct.SpectralBandReplication** %sbr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpectralBandReplication** %sbr.addr, metadata !14063, metadata !2753), !dbg !14064
  store [38 x [64 x float]]* %X, [38 x [64 x float]]** %X.addr, align 8
  call void @llvm.dbg.declare(metadata [38 x [64 x float]]** %X.addr, metadata !14065, metadata !2753), !dbg !14066
  store [64 x [2 x float]]* %Y0, [64 x [2 x float]]** %Y0.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x float]]** %Y0.addr, metadata !14067, metadata !2753), !dbg !14068
  store [64 x [2 x float]]* %Y1, [64 x [2 x float]]** %Y1.addr, align 8
  call void @llvm.dbg.declare(metadata [64 x [2 x float]]** %Y1.addr, metadata !14069, metadata !2753), !dbg !14070
  store [40 x [2 x float]]* %X_low, [40 x [2 x float]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_low.addr, metadata !14071, metadata !2753), !dbg !14072
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !14073, metadata !2753), !dbg !14074
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14075, metadata !2753), !dbg !14076
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14077, metadata !2753), !dbg !14078
  call void @llvm.dbg.declare(metadata i32* %i_f, metadata !14079, metadata !2753), !dbg !14080
  store i32 32, i32* %i_f, align 4, !dbg !14080
  call void @llvm.dbg.declare(metadata i32* %i_Temp, metadata !14081, metadata !2753), !dbg !14082
  %0 = load i32, i32* %ch.addr, align 4, !dbg !14083
  %idxprom = sext i32 %0 to i64, !dbg !14084
  %1 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14084
  %data = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %1, i32 0, i32 17, !dbg !14085
  %arrayidx = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data, i64 0, i64 %idxprom, !dbg !14084
  %t_env_num_env_old = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx, i32 0, i32 27, !dbg !14086
  %2 = load i8, i8* %t_env_num_env_old, align 4, !dbg !14086
  %conv = zext i8 %2 to i32, !dbg !14084
  %mul = mul nsw i32 2, %conv, !dbg !14087
  %sub = sub nsw i32 %mul, 32, !dbg !14088
  %cmp = icmp sgt i32 %sub, 0, !dbg !14089
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14090

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %ch.addr, align 4, !dbg !14091
  %idxprom2 = sext i32 %3 to i64, !dbg !14093
  %4 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14093
  %data3 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %4, i32 0, i32 17, !dbg !14094
  %arrayidx4 = getelementptr inbounds [2 x %struct.SBRData], [2 x %struct.SBRData]* %data3, i64 0, i64 %idxprom2, !dbg !14093
  %t_env_num_env_old5 = getelementptr inbounds %struct.SBRData, %struct.SBRData* %arrayidx4, i32 0, i32 27, !dbg !14095
  %5 = load i8, i8* %t_env_num_env_old5, align 4, !dbg !14095
  %conv6 = zext i8 %5 to i32, !dbg !14093
  %mul7 = mul nsw i32 2, %conv6, !dbg !14096
  %sub8 = sub nsw i32 %mul7, 32, !dbg !14097
  br label %cond.end, !dbg !14098

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14099

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub8, %cond.true ], [ 0, %cond.false ], !dbg !14101
  store i32 %cond, i32* %i_Temp, align 4, !dbg !14103
  %6 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14104
  %7 = bitcast [38 x [64 x float]]* %6 to i8*, !dbg !14105
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 19456, i32 4, i1 false), !dbg !14105
  store i32 0, i32* %k, align 4, !dbg !14106
  br label %for.cond, !dbg !14108

for.cond:                                         ; preds = %for.inc37, %cond.end
  %8 = load i32, i32* %k, align 4, !dbg !14109
  %9 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14112
  %kx = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %9, i32 0, i32 13, !dbg !14113
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %kx, i64 0, i64 0, !dbg !14112
  %10 = load i32, i32* %arrayidx9, align 8, !dbg !14112
  %cmp10 = icmp ult i32 %8, %10, !dbg !14114
  br i1 %cmp10, label %for.body, label %for.end39, !dbg !14115

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14116
  br label %for.cond12, !dbg !14119

for.cond12:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !14120
  %12 = load i32, i32* %i_Temp, align 4, !dbg !14123
  %cmp13 = icmp slt i32 %11, %12, !dbg !14124
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !14125

for.body15:                                       ; preds = %for.cond12
  %13 = load i32, i32* %i, align 4, !dbg !14126
  %add = add nsw i32 %13, 2, !dbg !14128
  %idxprom16 = sext i32 %add to i64, !dbg !14129
  %14 = load i32, i32* %k, align 4, !dbg !14130
  %idxprom17 = sext i32 %14 to i64, !dbg !14129
  %15 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !14129
  %arrayidx18 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %15, i64 %idxprom17, !dbg !14129
  %arrayidx19 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !14129
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !14129
  %16 = load float, float* %arrayidx20, align 4, !dbg !14129
  %17 = load i32, i32* %k, align 4, !dbg !14131
  %idxprom21 = sext i32 %17 to i64, !dbg !14132
  %18 = load i32, i32* %i, align 4, !dbg !14133
  %idxprom22 = sext i32 %18 to i64, !dbg !14132
  %19 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14132
  %arrayidx23 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %19, i64 0, !dbg !14132
  %arrayidx24 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx23, i64 0, i64 %idxprom22, !dbg !14132
  %arrayidx25 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx24, i64 0, i64 %idxprom21, !dbg !14132
  store float %16, float* %arrayidx25, align 4, !dbg !14134
  %20 = load i32, i32* %i, align 4, !dbg !14135
  %add26 = add nsw i32 %20, 2, !dbg !14136
  %idxprom27 = sext i32 %add26 to i64, !dbg !14137
  %21 = load i32, i32* %k, align 4, !dbg !14138
  %idxprom28 = sext i32 %21 to i64, !dbg !14137
  %22 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !14137
  %arrayidx29 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %22, i64 %idxprom28, !dbg !14137
  %arrayidx30 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx29, i64 0, i64 %idxprom27, !dbg !14137
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx30, i64 0, i64 1, !dbg !14137
  %23 = load float, float* %arrayidx31, align 4, !dbg !14137
  %24 = load i32, i32* %k, align 4, !dbg !14139
  %idxprom32 = sext i32 %24 to i64, !dbg !14140
  %25 = load i32, i32* %i, align 4, !dbg !14141
  %idxprom33 = sext i32 %25 to i64, !dbg !14140
  %26 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14140
  %arrayidx34 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %26, i64 1, !dbg !14140
  %arrayidx35 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx34, i64 0, i64 %idxprom33, !dbg !14140
  %arrayidx36 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx35, i64 0, i64 %idxprom32, !dbg !14140
  store float %23, float* %arrayidx36, align 4, !dbg !14142
  br label %for.inc, !dbg !14143

for.inc:                                          ; preds = %for.body15
  %27 = load i32, i32* %i, align 4, !dbg !14144
  %inc = add nsw i32 %27, 1, !dbg !14144
  store i32 %inc, i32* %i, align 4, !dbg !14144
  br label %for.cond12, !dbg !14146, !llvm.loop !14147

for.end:                                          ; preds = %for.cond12
  br label %for.inc37, !dbg !14149

for.inc37:                                        ; preds = %for.end
  %28 = load i32, i32* %k, align 4, !dbg !14150
  %inc38 = add nsw i32 %28, 1, !dbg !14150
  store i32 %inc38, i32* %k, align 4, !dbg !14150
  br label %for.cond, !dbg !14152, !llvm.loop !14153

for.end39:                                        ; preds = %for.cond
  br label %for.cond40, !dbg !14155

for.cond40:                                       ; preds = %for.inc77, %for.end39
  %29 = load i32, i32* %k, align 4, !dbg !14156
  %30 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14160
  %kx41 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %30, i32 0, i32 13, !dbg !14161
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %kx41, i64 0, i64 0, !dbg !14160
  %31 = load i32, i32* %arrayidx42, align 8, !dbg !14160
  %32 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14162
  %m = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %32, i32 0, i32 14, !dbg !14163
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %m, i64 0, i64 0, !dbg !14162
  %33 = load i32, i32* %arrayidx43, align 16, !dbg !14162
  %add44 = add i32 %31, %33, !dbg !14164
  %cmp45 = icmp ult i32 %29, %add44, !dbg !14165
  br i1 %cmp45, label %for.body47, label %for.end79, !dbg !14166

for.body47:                                       ; preds = %for.cond40
  store i32 0, i32* %i, align 4, !dbg !14167
  br label %for.cond48, !dbg !14170

for.cond48:                                       ; preds = %for.inc74, %for.body47
  %34 = load i32, i32* %i, align 4, !dbg !14171
  %35 = load i32, i32* %i_Temp, align 4, !dbg !14174
  %cmp49 = icmp slt i32 %34, %35, !dbg !14175
  br i1 %cmp49, label %for.body51, label %for.end76, !dbg !14176

for.body51:                                       ; preds = %for.cond48
  %36 = load i32, i32* %k, align 4, !dbg !14177
  %idxprom52 = sext i32 %36 to i64, !dbg !14179
  %37 = load i32, i32* %i, align 4, !dbg !14180
  %add53 = add nsw i32 %37, 32, !dbg !14181
  %idxprom54 = sext i32 %add53 to i64, !dbg !14179
  %38 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y0.addr, align 8, !dbg !14179
  %arrayidx55 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %38, i64 %idxprom54, !dbg !14179
  %arrayidx56 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx55, i64 0, i64 %idxprom52, !dbg !14179
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx56, i64 0, i64 0, !dbg !14179
  %39 = load float, float* %arrayidx57, align 4, !dbg !14179
  %40 = load i32, i32* %k, align 4, !dbg !14182
  %idxprom58 = sext i32 %40 to i64, !dbg !14183
  %41 = load i32, i32* %i, align 4, !dbg !14184
  %idxprom59 = sext i32 %41 to i64, !dbg !14183
  %42 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14183
  %arrayidx60 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %42, i64 0, !dbg !14183
  %arrayidx61 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx60, i64 0, i64 %idxprom59, !dbg !14183
  %arrayidx62 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx61, i64 0, i64 %idxprom58, !dbg !14183
  store float %39, float* %arrayidx62, align 4, !dbg !14185
  %43 = load i32, i32* %k, align 4, !dbg !14186
  %idxprom63 = sext i32 %43 to i64, !dbg !14187
  %44 = load i32, i32* %i, align 4, !dbg !14188
  %add64 = add nsw i32 %44, 32, !dbg !14189
  %idxprom65 = sext i32 %add64 to i64, !dbg !14187
  %45 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y0.addr, align 8, !dbg !14187
  %arrayidx66 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %45, i64 %idxprom65, !dbg !14187
  %arrayidx67 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx66, i64 0, i64 %idxprom63, !dbg !14187
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx67, i64 0, i64 1, !dbg !14187
  %46 = load float, float* %arrayidx68, align 4, !dbg !14187
  %47 = load i32, i32* %k, align 4, !dbg !14190
  %idxprom69 = sext i32 %47 to i64, !dbg !14191
  %48 = load i32, i32* %i, align 4, !dbg !14192
  %idxprom70 = sext i32 %48 to i64, !dbg !14191
  %49 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14191
  %arrayidx71 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %49, i64 1, !dbg !14191
  %arrayidx72 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx71, i64 0, i64 %idxprom70, !dbg !14191
  %arrayidx73 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !14191
  store float %46, float* %arrayidx73, align 4, !dbg !14193
  br label %for.inc74, !dbg !14194

for.inc74:                                        ; preds = %for.body51
  %50 = load i32, i32* %i, align 4, !dbg !14195
  %inc75 = add nsw i32 %50, 1, !dbg !14195
  store i32 %inc75, i32* %i, align 4, !dbg !14195
  br label %for.cond48, !dbg !14197, !llvm.loop !14198

for.end76:                                        ; preds = %for.cond48
  br label %for.inc77, !dbg !14200

for.inc77:                                        ; preds = %for.end76
  %51 = load i32, i32* %k, align 4, !dbg !14201
  %inc78 = add nsw i32 %51, 1, !dbg !14201
  store i32 %inc78, i32* %k, align 4, !dbg !14201
  br label %for.cond40, !dbg !14203, !llvm.loop !14204

for.end79:                                        ; preds = %for.cond40
  store i32 0, i32* %k, align 4, !dbg !14205
  br label %for.cond80, !dbg !14207

for.cond80:                                       ; preds = %for.inc115, %for.end79
  %52 = load i32, i32* %k, align 4, !dbg !14208
  %53 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14211
  %kx81 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %53, i32 0, i32 13, !dbg !14212
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %kx81, i64 0, i64 1, !dbg !14211
  %54 = load i32, i32* %arrayidx82, align 4, !dbg !14211
  %cmp83 = icmp ult i32 %52, %54, !dbg !14213
  br i1 %cmp83, label %for.body85, label %for.end117, !dbg !14214

for.body85:                                       ; preds = %for.cond80
  %55 = load i32, i32* %i_Temp, align 4, !dbg !14215
  store i32 %55, i32* %i, align 4, !dbg !14218
  br label %for.cond86, !dbg !14219

for.cond86:                                       ; preds = %for.inc112, %for.body85
  %56 = load i32, i32* %i, align 4, !dbg !14220
  %cmp87 = icmp slt i32 %56, 38, !dbg !14223
  br i1 %cmp87, label %for.body89, label %for.end114, !dbg !14224

for.body89:                                       ; preds = %for.cond86
  %57 = load i32, i32* %i, align 4, !dbg !14225
  %add90 = add nsw i32 %57, 2, !dbg !14227
  %idxprom91 = sext i32 %add90 to i64, !dbg !14228
  %58 = load i32, i32* %k, align 4, !dbg !14229
  %idxprom92 = sext i32 %58 to i64, !dbg !14228
  %59 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !14228
  %arrayidx93 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %59, i64 %idxprom92, !dbg !14228
  %arrayidx94 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx93, i64 0, i64 %idxprom91, !dbg !14228
  %arrayidx95 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx94, i64 0, i64 0, !dbg !14228
  %60 = load float, float* %arrayidx95, align 4, !dbg !14228
  %61 = load i32, i32* %k, align 4, !dbg !14230
  %idxprom96 = sext i32 %61 to i64, !dbg !14231
  %62 = load i32, i32* %i, align 4, !dbg !14232
  %idxprom97 = sext i32 %62 to i64, !dbg !14231
  %63 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14231
  %arrayidx98 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %63, i64 0, !dbg !14231
  %arrayidx99 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx98, i64 0, i64 %idxprom97, !dbg !14231
  %arrayidx100 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx99, i64 0, i64 %idxprom96, !dbg !14231
  store float %60, float* %arrayidx100, align 4, !dbg !14233
  %64 = load i32, i32* %i, align 4, !dbg !14234
  %add101 = add nsw i32 %64, 2, !dbg !14235
  %idxprom102 = sext i32 %add101 to i64, !dbg !14236
  %65 = load i32, i32* %k, align 4, !dbg !14237
  %idxprom103 = sext i32 %65 to i64, !dbg !14236
  %66 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !14236
  %arrayidx104 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %66, i64 %idxprom103, !dbg !14236
  %arrayidx105 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx104, i64 0, i64 %idxprom102, !dbg !14236
  %arrayidx106 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx105, i64 0, i64 1, !dbg !14236
  %67 = load float, float* %arrayidx106, align 4, !dbg !14236
  %68 = load i32, i32* %k, align 4, !dbg !14238
  %idxprom107 = sext i32 %68 to i64, !dbg !14239
  %69 = load i32, i32* %i, align 4, !dbg !14240
  %idxprom108 = sext i32 %69 to i64, !dbg !14239
  %70 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14239
  %arrayidx109 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %70, i64 1, !dbg !14239
  %arrayidx110 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx109, i64 0, i64 %idxprom108, !dbg !14239
  %arrayidx111 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx110, i64 0, i64 %idxprom107, !dbg !14239
  store float %67, float* %arrayidx111, align 4, !dbg !14241
  br label %for.inc112, !dbg !14242

for.inc112:                                       ; preds = %for.body89
  %71 = load i32, i32* %i, align 4, !dbg !14243
  %inc113 = add nsw i32 %71, 1, !dbg !14243
  store i32 %inc113, i32* %i, align 4, !dbg !14243
  br label %for.cond86, !dbg !14245, !llvm.loop !14246

for.end114:                                       ; preds = %for.cond86
  br label %for.inc115, !dbg !14248

for.inc115:                                       ; preds = %for.end114
  %72 = load i32, i32* %k, align 4, !dbg !14249
  %inc116 = add nsw i32 %72, 1, !dbg !14249
  store i32 %inc116, i32* %k, align 4, !dbg !14249
  br label %for.cond80, !dbg !14251, !llvm.loop !14252

for.end117:                                       ; preds = %for.cond80
  br label %for.cond118, !dbg !14254

for.cond118:                                      ; preds = %for.inc154, %for.end117
  %73 = load i32, i32* %k, align 4, !dbg !14255
  %74 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14259
  %kx119 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %74, i32 0, i32 13, !dbg !14260
  %arrayidx120 = getelementptr inbounds [2 x i32], [2 x i32]* %kx119, i64 0, i64 1, !dbg !14259
  %75 = load i32, i32* %arrayidx120, align 4, !dbg !14259
  %76 = load %struct.SpectralBandReplication*, %struct.SpectralBandReplication** %sbr.addr, align 8, !dbg !14261
  %m121 = getelementptr inbounds %struct.SpectralBandReplication, %struct.SpectralBandReplication* %76, i32 0, i32 14, !dbg !14262
  %arrayidx122 = getelementptr inbounds [2 x i32], [2 x i32]* %m121, i64 0, i64 1, !dbg !14261
  %77 = load i32, i32* %arrayidx122, align 4, !dbg !14261
  %add123 = add i32 %75, %77, !dbg !14263
  %cmp124 = icmp ult i32 %73, %add123, !dbg !14264
  br i1 %cmp124, label %for.body126, label %for.end156, !dbg !14265

for.body126:                                      ; preds = %for.cond118
  %78 = load i32, i32* %i_Temp, align 4, !dbg !14266
  store i32 %78, i32* %i, align 4, !dbg !14269
  br label %for.cond127, !dbg !14270

for.cond127:                                      ; preds = %for.inc151, %for.body126
  %79 = load i32, i32* %i, align 4, !dbg !14271
  %cmp128 = icmp slt i32 %79, 32, !dbg !14274
  br i1 %cmp128, label %for.body130, label %for.end153, !dbg !14275

for.body130:                                      ; preds = %for.cond127
  %80 = load i32, i32* %k, align 4, !dbg !14276
  %idxprom131 = sext i32 %80 to i64, !dbg !14278
  %81 = load i32, i32* %i, align 4, !dbg !14279
  %idxprom132 = sext i32 %81 to i64, !dbg !14278
  %82 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y1.addr, align 8, !dbg !14278
  %arrayidx133 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %82, i64 %idxprom132, !dbg !14278
  %arrayidx134 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx133, i64 0, i64 %idxprom131, !dbg !14278
  %arrayidx135 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx134, i64 0, i64 0, !dbg !14278
  %83 = load float, float* %arrayidx135, align 4, !dbg !14278
  %84 = load i32, i32* %k, align 4, !dbg !14280
  %idxprom136 = sext i32 %84 to i64, !dbg !14281
  %85 = load i32, i32* %i, align 4, !dbg !14282
  %idxprom137 = sext i32 %85 to i64, !dbg !14281
  %86 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14281
  %arrayidx138 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %86, i64 0, !dbg !14281
  %arrayidx139 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx138, i64 0, i64 %idxprom137, !dbg !14281
  %arrayidx140 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx139, i64 0, i64 %idxprom136, !dbg !14281
  store float %83, float* %arrayidx140, align 4, !dbg !14283
  %87 = load i32, i32* %k, align 4, !dbg !14284
  %idxprom141 = sext i32 %87 to i64, !dbg !14285
  %88 = load i32, i32* %i, align 4, !dbg !14286
  %idxprom142 = sext i32 %88 to i64, !dbg !14285
  %89 = load [64 x [2 x float]]*, [64 x [2 x float]]** %Y1.addr, align 8, !dbg !14285
  %arrayidx143 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %89, i64 %idxprom142, !dbg !14285
  %arrayidx144 = getelementptr inbounds [64 x [2 x float]], [64 x [2 x float]]* %arrayidx143, i64 0, i64 %idxprom141, !dbg !14285
  %arrayidx145 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx144, i64 0, i64 1, !dbg !14285
  %90 = load float, float* %arrayidx145, align 4, !dbg !14285
  %91 = load i32, i32* %k, align 4, !dbg !14287
  %idxprom146 = sext i32 %91 to i64, !dbg !14288
  %92 = load i32, i32* %i, align 4, !dbg !14289
  %idxprom147 = sext i32 %92 to i64, !dbg !14288
  %93 = load [38 x [64 x float]]*, [38 x [64 x float]]** %X.addr, align 8, !dbg !14288
  %arrayidx148 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %93, i64 1, !dbg !14288
  %arrayidx149 = getelementptr inbounds [38 x [64 x float]], [38 x [64 x float]]* %arrayidx148, i64 0, i64 %idxprom147, !dbg !14288
  %arrayidx150 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx149, i64 0, i64 %idxprom146, !dbg !14288
  store float %90, float* %arrayidx150, align 4, !dbg !14290
  br label %for.inc151, !dbg !14291

for.inc151:                                       ; preds = %for.body130
  %94 = load i32, i32* %i, align 4, !dbg !14292
  %inc152 = add nsw i32 %94, 1, !dbg !14292
  store i32 %inc152, i32* %i, align 4, !dbg !14292
  br label %for.cond127, !dbg !14294, !llvm.loop !14295

for.end153:                                       ; preds = %for.cond127
  br label %for.inc154, !dbg !14297

for.inc154:                                       ; preds = %for.end153
  %95 = load i32, i32* %k, align 4, !dbg !14298
  %inc155 = add nsw i32 %95, 1, !dbg !14298
  store i32 %inc155, i32* %k, align 4, !dbg !14298
  br label %for.cond118, !dbg !14300, !llvm.loop !14301

for.end156:                                       ; preds = %for.cond118
  ret i32 0, !dbg !14302
}

; Function Attrs: nounwind uwtable
define internal void @sbr_hf_inverse_filter(%struct.SBRDSPContext* %dsp, [2 x float]* %alpha0, [2 x float]* %alpha1, [40 x [2 x float]]* %X_low, i32 %k0) #3 !dbg !14303 {
entry:
  %dsp.addr = alloca %struct.SBRDSPContext*, align 8
  %alpha0.addr = alloca [2 x float]*, align 8
  %alpha1.addr = alloca [2 x float]*, align 8
  %X_low.addr = alloca [40 x [2 x float]]*, align 8
  %k0.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %la_phi = alloca [3 x [2 x [2 x float]]], align 16
  %phi = alloca [2 x [2 x float]]*, align 8
  %dk = alloca float, align 4
  %temp_real = alloca float, align 4
  %temp_im = alloca float, align 4
  %temp_real94 = alloca float, align 4
  %temp_im95 = alloca float, align 4
  store %struct.SBRDSPContext* %dsp, %struct.SBRDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SBRDSPContext** %dsp.addr, metadata !14307, metadata !2753), !dbg !14308
  store [2 x float]* %alpha0, [2 x float]** %alpha0.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %alpha0.addr, metadata !14309, metadata !2753), !dbg !14310
  store [2 x float]* %alpha1, [2 x float]** %alpha1.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %alpha1.addr, metadata !14311, metadata !2753), !dbg !14312
  store [40 x [2 x float]]* %X_low, [40 x [2 x float]]** %X_low.addr, align 8
  call void @llvm.dbg.declare(metadata [40 x [2 x float]]** %X_low.addr, metadata !14313, metadata !2753), !dbg !14314
  store i32 %k0, i32* %k0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k0.addr, metadata !14315, metadata !2753), !dbg !14316
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14317, metadata !2753), !dbg !14318
  store i32 0, i32* %k, align 4, !dbg !14319
  br label %for.cond, !dbg !14321

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !14322
  %1 = load i32, i32* %k0.addr, align 4, !dbg !14325
  %cmp = icmp slt i32 %0, %1, !dbg !14326
  br i1 %cmp, label %for.body, label %for.end, !dbg !14327

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x [2 x [2 x float]]]* %la_phi, metadata !14328, metadata !2753), !dbg !14332
  call void @llvm.dbg.declare(metadata [2 x [2 x float]]** %phi, metadata !14333, metadata !2753), !dbg !14336
  %arraydecay = getelementptr inbounds [3 x [2 x [2 x float]]], [3 x [2 x [2 x float]]]* %la_phi, i32 0, i32 0, !dbg !14337
  store [2 x [2 x float]]* %arraydecay, [2 x [2 x float]]** %phi, align 8, !dbg !14336
  call void @llvm.dbg.declare(metadata float* %dk, metadata !14338, metadata !2753), !dbg !14339
  %2 = load %struct.SBRDSPContext*, %struct.SBRDSPContext** %dsp.addr, align 8, !dbg !14340
  %autocorrelate = getelementptr inbounds %struct.SBRDSPContext, %struct.SBRDSPContext* %2, i32 0, i32 7, !dbg !14341
  %3 = load void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x [2 x float]]*)** %autocorrelate, align 8, !dbg !14341
  %4 = load i32, i32* %k, align 4, !dbg !14342
  %idxprom = sext i32 %4 to i64, !dbg !14343
  %5 = load [40 x [2 x float]]*, [40 x [2 x float]]** %X_low.addr, align 8, !dbg !14343
  %arrayidx = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %5, i64 %idxprom, !dbg !14343
  %arraydecay1 = getelementptr inbounds [40 x [2 x float]], [40 x [2 x float]]* %arrayidx, i32 0, i32 0, !dbg !14343
  %6 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14344
  call void %3([2 x float]* %arraydecay1, [2 x [2 x float]]* %6), !dbg !14340
  %7 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14345
  %arrayidx2 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %7, i64 2, !dbg !14345
  %arrayidx3 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx2, i64 0, i64 1, !dbg !14345
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !14345
  %8 = load float, float* %arrayidx4, align 4, !dbg !14345
  %9 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14346
  %arrayidx5 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %9, i64 1, !dbg !14346
  %arrayidx6 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx5, i64 0, i64 0, !dbg !14346
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !14346
  %10 = load float, float* %arrayidx7, align 4, !dbg !14346
  %mul = fmul float %8, %10, !dbg !14347
  %11 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14348
  %arrayidx8 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %11, i64 1, !dbg !14348
  %arrayidx9 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx8, i64 0, i64 1, !dbg !14348
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !14348
  %12 = load float, float* %arrayidx10, align 4, !dbg !14348
  %13 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14349
  %arrayidx11 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %13, i64 1, !dbg !14349
  %arrayidx12 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx11, i64 0, i64 1, !dbg !14349
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !14349
  %14 = load float, float* %arrayidx13, align 4, !dbg !14349
  %mul14 = fmul float %12, %14, !dbg !14350
  %15 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14351
  %arrayidx15 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %15, i64 1, !dbg !14351
  %arrayidx16 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx15, i64 0, i64 1, !dbg !14351
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 1, !dbg !14351
  %16 = load float, float* %arrayidx17, align 4, !dbg !14351
  %17 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14352
  %arrayidx18 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %17, i64 1, !dbg !14352
  %arrayidx19 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx18, i64 0, i64 1, !dbg !14352
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 1, !dbg !14352
  %18 = load float, float* %arrayidx20, align 4, !dbg !14352
  %mul21 = fmul float %16, %18, !dbg !14353
  %add = fadd float %mul14, %mul21, !dbg !14354
  %div = fdiv float %add, 0x3FF0000100000000, !dbg !14355
  %sub = fsub float %mul, %div, !dbg !14356
  store float %sub, float* %dk, align 4, !dbg !14357
  %19 = load float, float* %dk, align 4, !dbg !14358
  %tobool = fcmp une float %19, 0.000000e+00, !dbg !14358
  br i1 %tobool, label %if.else, label %if.then, !dbg !14360

if.then:                                          ; preds = %for.body
  %20 = load i32, i32* %k, align 4, !dbg !14361
  %idxprom22 = sext i32 %20 to i64, !dbg !14363
  %21 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14363
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %21, i64 %idxprom22, !dbg !14363
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !14363
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !14364
  %22 = load i32, i32* %k, align 4, !dbg !14365
  %idxprom25 = sext i32 %22 to i64, !dbg !14366
  %23 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14366
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %23, i64 %idxprom25, !dbg !14366
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 1, !dbg !14366
  store float 0.000000e+00, float* %arrayidx27, align 4, !dbg !14367
  br label %if.end, !dbg !14368

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %temp_real, metadata !14369, metadata !2753), !dbg !14371
  call void @llvm.dbg.declare(metadata float* %temp_im, metadata !14372, metadata !2753), !dbg !14373
  %24 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14374
  %arrayidx28 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %24, i64 0, !dbg !14374
  %arrayidx29 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx28, i64 0, i64 0, !dbg !14374
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx29, i64 0, i64 0, !dbg !14374
  %25 = load float, float* %arrayidx30, align 4, !dbg !14374
  %26 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14375
  %arrayidx31 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %26, i64 1, !dbg !14375
  %arrayidx32 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx31, i64 0, i64 1, !dbg !14375
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx32, i64 0, i64 0, !dbg !14375
  %27 = load float, float* %arrayidx33, align 4, !dbg !14375
  %mul34 = fmul float %25, %27, !dbg !14376
  %28 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14377
  %arrayidx35 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %28, i64 0, !dbg !14377
  %arrayidx36 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx35, i64 0, i64 0, !dbg !14377
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 1, !dbg !14377
  %29 = load float, float* %arrayidx37, align 4, !dbg !14377
  %30 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14378
  %arrayidx38 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %30, i64 1, !dbg !14378
  %arrayidx39 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx38, i64 0, i64 1, !dbg !14378
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 1, !dbg !14378
  %31 = load float, float* %arrayidx40, align 4, !dbg !14378
  %mul41 = fmul float %29, %31, !dbg !14379
  %sub42 = fsub float %mul34, %mul41, !dbg !14380
  %32 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14381
  %arrayidx43 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %32, i64 0, !dbg !14381
  %arrayidx44 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx43, i64 0, i64 1, !dbg !14381
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 0, !dbg !14381
  %33 = load float, float* %arrayidx45, align 4, !dbg !14381
  %34 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14382
  %arrayidx46 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %34, i64 1, !dbg !14382
  %arrayidx47 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx46, i64 0, i64 0, !dbg !14382
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 0, !dbg !14382
  %35 = load float, float* %arrayidx48, align 4, !dbg !14382
  %mul49 = fmul float %33, %35, !dbg !14383
  %sub50 = fsub float %sub42, %mul49, !dbg !14384
  store float %sub50, float* %temp_real, align 4, !dbg !14385
  %36 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14386
  %arrayidx51 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %36, i64 0, !dbg !14386
  %arrayidx52 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx51, i64 0, i64 0, !dbg !14386
  %arrayidx53 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx52, i64 0, i64 0, !dbg !14386
  %37 = load float, float* %arrayidx53, align 4, !dbg !14386
  %38 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14387
  %arrayidx54 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %38, i64 1, !dbg !14387
  %arrayidx55 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx54, i64 0, i64 1, !dbg !14387
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx55, i64 0, i64 1, !dbg !14387
  %39 = load float, float* %arrayidx56, align 4, !dbg !14387
  %mul57 = fmul float %37, %39, !dbg !14388
  %40 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14389
  %arrayidx58 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %40, i64 0, !dbg !14389
  %arrayidx59 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx58, i64 0, i64 0, !dbg !14389
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 1, !dbg !14389
  %41 = load float, float* %arrayidx60, align 4, !dbg !14389
  %42 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14390
  %arrayidx61 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %42, i64 1, !dbg !14390
  %arrayidx62 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx61, i64 0, i64 1, !dbg !14390
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx62, i64 0, i64 0, !dbg !14390
  %43 = load float, float* %arrayidx63, align 4, !dbg !14390
  %mul64 = fmul float %41, %43, !dbg !14391
  %add65 = fadd float %mul57, %mul64, !dbg !14392
  %44 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14393
  %arrayidx66 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %44, i64 0, !dbg !14393
  %arrayidx67 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx66, i64 0, i64 1, !dbg !14393
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx67, i64 0, i64 1, !dbg !14393
  %45 = load float, float* %arrayidx68, align 4, !dbg !14393
  %46 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14394
  %arrayidx69 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %46, i64 1, !dbg !14394
  %arrayidx70 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx69, i64 0, i64 0, !dbg !14394
  %arrayidx71 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx70, i64 0, i64 0, !dbg !14394
  %47 = load float, float* %arrayidx71, align 4, !dbg !14394
  %mul72 = fmul float %45, %47, !dbg !14395
  %sub73 = fsub float %add65, %mul72, !dbg !14396
  store float %sub73, float* %temp_im, align 4, !dbg !14397
  %48 = load float, float* %temp_real, align 4, !dbg !14398
  %49 = load float, float* %dk, align 4, !dbg !14399
  %div74 = fdiv float %48, %49, !dbg !14400
  %50 = load i32, i32* %k, align 4, !dbg !14401
  %idxprom75 = sext i32 %50 to i64, !dbg !14402
  %51 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14402
  %arrayidx76 = getelementptr inbounds [2 x float], [2 x float]* %51, i64 %idxprom75, !dbg !14402
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx76, i64 0, i64 0, !dbg !14402
  store float %div74, float* %arrayidx77, align 4, !dbg !14403
  %52 = load float, float* %temp_im, align 4, !dbg !14404
  %53 = load float, float* %dk, align 4, !dbg !14405
  %div78 = fdiv float %52, %53, !dbg !14406
  %54 = load i32, i32* %k, align 4, !dbg !14407
  %idxprom79 = sext i32 %54 to i64, !dbg !14408
  %55 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14408
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %55, i64 %idxprom79, !dbg !14408
  %arrayidx81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 1, !dbg !14408
  store float %div78, float* %arrayidx81, align 4, !dbg !14409
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %56 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14410
  %arrayidx82 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %56, i64 1, !dbg !14410
  %arrayidx83 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx82, i64 0, i64 0, !dbg !14410
  %arrayidx84 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx83, i64 0, i64 0, !dbg !14410
  %57 = load float, float* %arrayidx84, align 4, !dbg !14410
  %tobool85 = fcmp une float %57, 0.000000e+00, !dbg !14410
  br i1 %tobool85, label %if.else93, label %if.then86, !dbg !14412

if.then86:                                        ; preds = %if.end
  %58 = load i32, i32* %k, align 4, !dbg !14413
  %idxprom87 = sext i32 %58 to i64, !dbg !14415
  %59 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14415
  %arrayidx88 = getelementptr inbounds [2 x float], [2 x float]* %59, i64 %idxprom87, !dbg !14415
  %arrayidx89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !14415
  store float 0.000000e+00, float* %arrayidx89, align 4, !dbg !14416
  %60 = load i32, i32* %k, align 4, !dbg !14417
  %idxprom90 = sext i32 %60 to i64, !dbg !14418
  %61 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14418
  %arrayidx91 = getelementptr inbounds [2 x float], [2 x float]* %61, i64 %idxprom90, !dbg !14418
  %arrayidx92 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx91, i64 0, i64 1, !dbg !14418
  store float 0.000000e+00, float* %arrayidx92, align 4, !dbg !14419
  br label %if.end150, !dbg !14420

if.else93:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %temp_real94, metadata !14421, metadata !2753), !dbg !14423
  call void @llvm.dbg.declare(metadata float* %temp_im95, metadata !14424, metadata !2753), !dbg !14425
  %62 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14426
  %arrayidx96 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %62, i64 0, !dbg !14426
  %arrayidx97 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx96, i64 0, i64 0, !dbg !14426
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !14426
  %63 = load float, float* %arrayidx98, align 4, !dbg !14426
  %64 = load i32, i32* %k, align 4, !dbg !14427
  %idxprom99 = sext i32 %64 to i64, !dbg !14428
  %65 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14428
  %arrayidx100 = getelementptr inbounds [2 x float], [2 x float]* %65, i64 %idxprom99, !dbg !14428
  %arrayidx101 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx100, i64 0, i64 0, !dbg !14428
  %66 = load float, float* %arrayidx101, align 4, !dbg !14428
  %67 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14429
  %arrayidx102 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %67, i64 1, !dbg !14429
  %arrayidx103 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx102, i64 0, i64 1, !dbg !14429
  %arrayidx104 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx103, i64 0, i64 0, !dbg !14429
  %68 = load float, float* %arrayidx104, align 4, !dbg !14429
  %mul105 = fmul float %66, %68, !dbg !14430
  %add106 = fadd float %63, %mul105, !dbg !14431
  %69 = load i32, i32* %k, align 4, !dbg !14432
  %idxprom107 = sext i32 %69 to i64, !dbg !14433
  %70 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14433
  %arrayidx108 = getelementptr inbounds [2 x float], [2 x float]* %70, i64 %idxprom107, !dbg !14433
  %arrayidx109 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx108, i64 0, i64 1, !dbg !14433
  %71 = load float, float* %arrayidx109, align 4, !dbg !14433
  %72 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14434
  %arrayidx110 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %72, i64 1, !dbg !14434
  %arrayidx111 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx110, i64 0, i64 1, !dbg !14434
  %arrayidx112 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx111, i64 0, i64 1, !dbg !14434
  %73 = load float, float* %arrayidx112, align 4, !dbg !14434
  %mul113 = fmul float %71, %73, !dbg !14435
  %add114 = fadd float %add106, %mul113, !dbg !14436
  store float %add114, float* %temp_real94, align 4, !dbg !14437
  %74 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14438
  %arrayidx115 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %74, i64 0, !dbg !14438
  %arrayidx116 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx115, i64 0, i64 0, !dbg !14438
  %arrayidx117 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx116, i64 0, i64 1, !dbg !14438
  %75 = load float, float* %arrayidx117, align 4, !dbg !14438
  %76 = load i32, i32* %k, align 4, !dbg !14439
  %idxprom118 = sext i32 %76 to i64, !dbg !14440
  %77 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14440
  %arrayidx119 = getelementptr inbounds [2 x float], [2 x float]* %77, i64 %idxprom118, !dbg !14440
  %arrayidx120 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx119, i64 0, i64 1, !dbg !14440
  %78 = load float, float* %arrayidx120, align 4, !dbg !14440
  %79 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14441
  %arrayidx121 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %79, i64 1, !dbg !14441
  %arrayidx122 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx121, i64 0, i64 1, !dbg !14441
  %arrayidx123 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx122, i64 0, i64 0, !dbg !14441
  %80 = load float, float* %arrayidx123, align 4, !dbg !14441
  %mul124 = fmul float %78, %80, !dbg !14442
  %add125 = fadd float %75, %mul124, !dbg !14443
  %81 = load i32, i32* %k, align 4, !dbg !14444
  %idxprom126 = sext i32 %81 to i64, !dbg !14445
  %82 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14445
  %arrayidx127 = getelementptr inbounds [2 x float], [2 x float]* %82, i64 %idxprom126, !dbg !14445
  %arrayidx128 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx127, i64 0, i64 0, !dbg !14445
  %83 = load float, float* %arrayidx128, align 4, !dbg !14445
  %84 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14446
  %arrayidx129 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %84, i64 1, !dbg !14446
  %arrayidx130 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx129, i64 0, i64 1, !dbg !14446
  %arrayidx131 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx130, i64 0, i64 1, !dbg !14446
  %85 = load float, float* %arrayidx131, align 4, !dbg !14446
  %mul132 = fmul float %83, %85, !dbg !14447
  %sub133 = fsub float %add125, %mul132, !dbg !14448
  store float %sub133, float* %temp_im95, align 4, !dbg !14449
  %86 = load float, float* %temp_real94, align 4, !dbg !14450
  %sub134 = fsub float -0.000000e+00, %86, !dbg !14451
  %87 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14452
  %arrayidx135 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %87, i64 1, !dbg !14452
  %arrayidx136 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx135, i64 0, i64 0, !dbg !14452
  %arrayidx137 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx136, i64 0, i64 0, !dbg !14452
  %88 = load float, float* %arrayidx137, align 4, !dbg !14452
  %div138 = fdiv float %sub134, %88, !dbg !14453
  %89 = load i32, i32* %k, align 4, !dbg !14454
  %idxprom139 = sext i32 %89 to i64, !dbg !14455
  %90 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14455
  %arrayidx140 = getelementptr inbounds [2 x float], [2 x float]* %90, i64 %idxprom139, !dbg !14455
  %arrayidx141 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx140, i64 0, i64 0, !dbg !14455
  store float %div138, float* %arrayidx141, align 4, !dbg !14456
  %91 = load float, float* %temp_im95, align 4, !dbg !14457
  %sub142 = fsub float -0.000000e+00, %91, !dbg !14458
  %92 = load [2 x [2 x float]]*, [2 x [2 x float]]** %phi, align 8, !dbg !14459
  %arrayidx143 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %92, i64 1, !dbg !14459
  %arrayidx144 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %arrayidx143, i64 0, i64 0, !dbg !14459
  %arrayidx145 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx144, i64 0, i64 0, !dbg !14459
  %93 = load float, float* %arrayidx145, align 4, !dbg !14459
  %div146 = fdiv float %sub142, %93, !dbg !14460
  %94 = load i32, i32* %k, align 4, !dbg !14461
  %idxprom147 = sext i32 %94 to i64, !dbg !14462
  %95 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14462
  %arrayidx148 = getelementptr inbounds [2 x float], [2 x float]* %95, i64 %idxprom147, !dbg !14462
  %arrayidx149 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx148, i64 0, i64 1, !dbg !14462
  store float %div146, float* %arrayidx149, align 4, !dbg !14463
  br label %if.end150

if.end150:                                        ; preds = %if.else93, %if.then86
  %96 = load i32, i32* %k, align 4, !dbg !14464
  %idxprom151 = sext i32 %96 to i64, !dbg !14466
  %97 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14466
  %arrayidx152 = getelementptr inbounds [2 x float], [2 x float]* %97, i64 %idxprom151, !dbg !14466
  %arrayidx153 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx152, i64 0, i64 0, !dbg !14466
  %98 = load float, float* %arrayidx153, align 4, !dbg !14466
  %99 = load i32, i32* %k, align 4, !dbg !14467
  %idxprom154 = sext i32 %99 to i64, !dbg !14468
  %100 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14468
  %arrayidx155 = getelementptr inbounds [2 x float], [2 x float]* %100, i64 %idxprom154, !dbg !14468
  %arrayidx156 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx155, i64 0, i64 0, !dbg !14468
  %101 = load float, float* %arrayidx156, align 4, !dbg !14468
  %mul157 = fmul float %98, %101, !dbg !14469
  %102 = load i32, i32* %k, align 4, !dbg !14470
  %idxprom158 = sext i32 %102 to i64, !dbg !14471
  %103 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14471
  %arrayidx159 = getelementptr inbounds [2 x float], [2 x float]* %103, i64 %idxprom158, !dbg !14471
  %arrayidx160 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx159, i64 0, i64 1, !dbg !14471
  %104 = load float, float* %arrayidx160, align 4, !dbg !14471
  %105 = load i32, i32* %k, align 4, !dbg !14472
  %idxprom161 = sext i32 %105 to i64, !dbg !14473
  %106 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14473
  %arrayidx162 = getelementptr inbounds [2 x float], [2 x float]* %106, i64 %idxprom161, !dbg !14473
  %arrayidx163 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx162, i64 0, i64 1, !dbg !14473
  %107 = load float, float* %arrayidx163, align 4, !dbg !14473
  %mul164 = fmul float %104, %107, !dbg !14474
  %add165 = fadd float %mul157, %mul164, !dbg !14475
  %cmp166 = fcmp oge float %add165, 1.600000e+01, !dbg !14476
  br i1 %cmp166, label %if.then183, label %lor.lhs.false, !dbg !14477

lor.lhs.false:                                    ; preds = %if.end150
  %108 = load i32, i32* %k, align 4, !dbg !14478
  %idxprom167 = sext i32 %108 to i64, !dbg !14479
  %109 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14479
  %arrayidx168 = getelementptr inbounds [2 x float], [2 x float]* %109, i64 %idxprom167, !dbg !14479
  %arrayidx169 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx168, i64 0, i64 0, !dbg !14479
  %110 = load float, float* %arrayidx169, align 4, !dbg !14479
  %111 = load i32, i32* %k, align 4, !dbg !14480
  %idxprom170 = sext i32 %111 to i64, !dbg !14481
  %112 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14481
  %arrayidx171 = getelementptr inbounds [2 x float], [2 x float]* %112, i64 %idxprom170, !dbg !14481
  %arrayidx172 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx171, i64 0, i64 0, !dbg !14481
  %113 = load float, float* %arrayidx172, align 4, !dbg !14481
  %mul173 = fmul float %110, %113, !dbg !14482
  %114 = load i32, i32* %k, align 4, !dbg !14483
  %idxprom174 = sext i32 %114 to i64, !dbg !14484
  %115 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14484
  %arrayidx175 = getelementptr inbounds [2 x float], [2 x float]* %115, i64 %idxprom174, !dbg !14484
  %arrayidx176 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx175, i64 0, i64 1, !dbg !14484
  %116 = load float, float* %arrayidx176, align 4, !dbg !14484
  %117 = load i32, i32* %k, align 4, !dbg !14485
  %idxprom177 = sext i32 %117 to i64, !dbg !14486
  %118 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14486
  %arrayidx178 = getelementptr inbounds [2 x float], [2 x float]* %118, i64 %idxprom177, !dbg !14486
  %arrayidx179 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx178, i64 0, i64 1, !dbg !14486
  %119 = load float, float* %arrayidx179, align 4, !dbg !14486
  %mul180 = fmul float %116, %119, !dbg !14487
  %add181 = fadd float %mul173, %mul180, !dbg !14488
  %cmp182 = fcmp oge float %add181, 1.600000e+01, !dbg !14489
  br i1 %cmp182, label %if.then183, label %if.end196, !dbg !14490

if.then183:                                       ; preds = %lor.lhs.false, %if.end150
  %120 = load i32, i32* %k, align 4, !dbg !14492
  %idxprom184 = sext i32 %120 to i64, !dbg !14494
  %121 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14494
  %arrayidx185 = getelementptr inbounds [2 x float], [2 x float]* %121, i64 %idxprom184, !dbg !14494
  %arrayidx186 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx185, i64 0, i64 0, !dbg !14494
  store float 0.000000e+00, float* %arrayidx186, align 4, !dbg !14495
  %122 = load i32, i32* %k, align 4, !dbg !14496
  %idxprom187 = sext i32 %122 to i64, !dbg !14497
  %123 = load [2 x float]*, [2 x float]** %alpha1.addr, align 8, !dbg !14497
  %arrayidx188 = getelementptr inbounds [2 x float], [2 x float]* %123, i64 %idxprom187, !dbg !14497
  %arrayidx189 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx188, i64 0, i64 1, !dbg !14497
  store float 0.000000e+00, float* %arrayidx189, align 4, !dbg !14498
  %124 = load i32, i32* %k, align 4, !dbg !14499
  %idxprom190 = sext i32 %124 to i64, !dbg !14500
  %125 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14500
  %arrayidx191 = getelementptr inbounds [2 x float], [2 x float]* %125, i64 %idxprom190, !dbg !14500
  %arrayidx192 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx191, i64 0, i64 0, !dbg !14500
  store float 0.000000e+00, float* %arrayidx192, align 4, !dbg !14501
  %126 = load i32, i32* %k, align 4, !dbg !14502
  %idxprom193 = sext i32 %126 to i64, !dbg !14503
  %127 = load [2 x float]*, [2 x float]** %alpha0.addr, align 8, !dbg !14503
  %arrayidx194 = getelementptr inbounds [2 x float], [2 x float]* %127, i64 %idxprom193, !dbg !14503
  %arrayidx195 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx194, i64 0, i64 1, !dbg !14503
  store float 0.000000e+00, float* %arrayidx195, align 4, !dbg !14504
  br label %if.end196, !dbg !14505

if.end196:                                        ; preds = %if.then183, %lor.lhs.false
  br label %for.inc, !dbg !14506

for.inc:                                          ; preds = %if.end196
  %128 = load i32, i32* %k, align 4, !dbg !14507
  %inc = add nsw i32 %128, 1, !dbg !14507
  store i32 %inc, i32* %k, align 4, !dbg !14507
  br label %for.cond, !dbg !14509, !llvm.loop !14510

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14512
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2595, !2596}
!llvm.ident = !{!2597}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !954, globals: !993)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacsbr.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !894, !903, !908, !918, !924, !928, !935, !942}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !888, line: 75, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892, !893}
!890 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!891 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!892 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!893 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !888, line: 82, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "ZERO_BT", value: 0)
!897 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!898 = !DIEnumerator(name: "ESC_BT", value: 11)
!899 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!900 = !DIEnumerator(name: "NOISE_BT", value: 13)
!901 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!902 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !888, line: 106, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907}
!905 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!906 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!907 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !888, line: 55, size: 32, align: 32, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !916, !917}
!910 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!911 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!912 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!913 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!914 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!915 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!916 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!917 = !DIEnumerator(name: "TYPE_END", value: 7)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !919, line: 77, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!920 = !{!921, !922, !923}
!921 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!922 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!923 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!924 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !919, line: 83, size: 32, align: 32, elements: !925)
!925 = !{!926, !927}
!926 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!927 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !888, line: 115, size: 32, align: 32, elements: !929)
!929 = !{!930, !931, !932, !933, !934}
!930 = !DIEnumerator(name: "OC_NONE", value: 0)
!931 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!932 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!933 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!934 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !936, line: 58, size: 32, align: 32, elements: !937)
!936 = !DIFile(filename: "libavcodec/aacsbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!937 = !{!938, !939, !940, !941}
!938 = !DIEnumerator(name: "FIXFIX", value: 0)
!939 = !DIEnumerator(name: "FIXVAR", value: 1)
!940 = !DIEnumerator(name: "VARFIX", value: 2)
!941 = !DIEnumerator(name: "VARVAR", value: 3)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !936, line: 42, size: 32, align: 32, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !952, !953}
!944 = !DIEnumerator(name: "T_HUFFMAN_ENV_1_5DB", value: 0)
!945 = !DIEnumerator(name: "F_HUFFMAN_ENV_1_5DB", value: 1)
!946 = !DIEnumerator(name: "T_HUFFMAN_ENV_BAL_1_5DB", value: 2)
!947 = !DIEnumerator(name: "F_HUFFMAN_ENV_BAL_1_5DB", value: 3)
!948 = !DIEnumerator(name: "T_HUFFMAN_ENV_3_0DB", value: 4)
!949 = !DIEnumerator(name: "F_HUFFMAN_ENV_3_0DB", value: 5)
!950 = !DIEnumerator(name: "T_HUFFMAN_ENV_BAL_3_0DB", value: 6)
!951 = !DIEnumerator(name: "F_HUFFMAN_ENV_BAL_3_0DB", value: 7)
!952 = !DIEnumerator(name: "T_HUFFMAN_NOISE_3_0DB", value: 8)
!953 = !DIEnumerator(name: "T_HUFFMAN_NOISE_BAL_3_0DB", value: 9)
!954 = !{!955, !959, !965, !969, !970, !973, !977, !986, !988, !958, !992, !985}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !957, line: 86, baseType: !958)
!957 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!958 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 65536, align: 32, elements: !962)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!962 = !{!963, !963, !964}
!963 = !DISubrange(count: 32)
!964 = !DISubrange(count: 2)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 2560, align: 32, elements: !967)
!967 = !{!968, !964}
!968 = !DISubrange(count: 40)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 64, align: 32, elements: !972)
!972 = !{!964}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 4096, align: 32, elements: !975)
!975 = !{!976, !964}
!976 = !DISubrange(count: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !980, line: 221, size: 32, align: 8, elements: !981)
!980 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !979, file: !980, line: 221, baseType: !983, size: 32, align: 32)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !984, line: 51, baseType: !985)
!984 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!985 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !984, line: 48, baseType: !987)
!987 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !984, line: 37, baseType: !991)
!991 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!992 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!993 = !{!994, !999, !1018, !1022, !1026, !1030, !1034, !1038, !1042, !1046, !1047, !1051, !1055, !1068, !1073, !1076, !1077, !1078, !1082, !1084, !1085, !1086, !1090, !1092, !1093, !1094, !1101, !1103, !1104, !1105, !1107, !1108, !1109, !1110, !1115, !1119, !2564, !2568, !2570, !2572, !2577, !2582, !2586}
!994 = distinct !DIGlobalVariable(name: "ff_sbr_noise_table", scope: !0, file: !995, line: 271, type: !996, isLocal: false, isDefinition: true, variable: [520 x [2 x float]]* @ff_sbr_noise_table)
!995 = !DIFile(filename: "libavcodec/aacsbrdata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 33280, align: 32, elements: !997)
!997 = !{!998, !964}
!998 = !DISubrange(count: 520)
!999 = distinct !DIGlobalVariable(name: "sbr_tmp", scope: !1000, file: !1001, line: 54, type: !1005, isLocal: true, isDefinition: true, variable: [10 x %struct.anon]* @ff_aac_sbr_init.sbr_tmp)
!1000 = distinct !DISubprogram(name: "ff_aac_sbr_init", scope: !1001, file: !1001, line: 49, type: !1002, isLocal: false, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!1001 = !DIFile(filename: "libavcodec/aacsbr_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null}
!1004 = !{}
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 1920, align: 64, elements: !1016)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1000, file: !1001, line: 51, size: 192, align: 64, elements: !1008)
!1008 = !{!1009, !1012, !1013, !1015}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_codes", scope: !1007, file: !1001, line: 52, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_bits", scope: !1007, file: !1001, line: 52, baseType: !1010, size: 64, align: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1007, file: !1001, line: 53, baseType: !1014, size: 32, align: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !1007, file: !1001, line: 53, baseType: !1014, size: 32, align: 32, offset: 160)
!1016 = !{!1017}
!1017 = !DISubrange(count: 10)
!1018 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 68, type: !1019, isLocal: true, isDefinition: true, variable: [1098 x [2 x i16]]* @ff_aac_sbr_init.table)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 35136, align: 16, elements: !1020)
!1020 = !{!1021, !964}
!1021 = !DISubrange(count: 1098)
!1022 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 69, type: !1023, isLocal: true, isDefinition: true, variable: [1092 x [2 x i16]]* @ff_aac_sbr_init.table.1)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 34944, align: 16, elements: !1024)
!1024 = !{!1025, !964}
!1025 = !DISubrange(count: 1092)
!1026 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 70, type: !1027, isLocal: true, isDefinition: true, variable: [768 x [2 x i16]]* @ff_aac_sbr_init.table.2)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 24576, align: 16, elements: !1028)
!1028 = !{!1029, !964}
!1029 = !DISubrange(count: 768)
!1030 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 71, type: !1031, isLocal: true, isDefinition: true, variable: [1026 x [2 x i16]]* @ff_aac_sbr_init.table.3)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 32832, align: 16, elements: !1032)
!1032 = !{!1033, !964}
!1033 = !DISubrange(count: 1026)
!1034 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 72, type: !1035, isLocal: true, isDefinition: true, variable: [1058 x [2 x i16]]* @ff_aac_sbr_init.table.4)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 33856, align: 16, elements: !1036)
!1036 = !{!1037, !964}
!1037 = !DISubrange(count: 1058)
!1038 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 73, type: !1039, isLocal: true, isDefinition: true, variable: [1052 x [2 x i16]]* @ff_aac_sbr_init.table.5)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 33664, align: 16, elements: !1040)
!1040 = !{!1041, !964}
!1041 = !DISubrange(count: 1052)
!1042 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 74, type: !1043, isLocal: true, isDefinition: true, variable: [544 x [2 x i16]]* @ff_aac_sbr_init.table.6)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 17408, align: 16, elements: !1044)
!1044 = !{!1045, !964}
!1045 = !DISubrange(count: 544)
!1046 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 75, type: !1043, isLocal: true, isDefinition: true, variable: [544 x [2 x i16]]* @ff_aac_sbr_init.table.7)
!1047 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 76, type: !1048, isLocal: true, isDefinition: true, variable: [592 x [2 x i16]]* @ff_aac_sbr_init.table.8)
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 18944, align: 16, elements: !1049)
!1049 = !{!1050, !964}
!1050 = !DISubrange(count: 592)
!1051 = distinct !DIGlobalVariable(name: "table", scope: !1000, file: !1001, line: 77, type: !1052, isLocal: true, isDefinition: true, variable: [512 x [2 x i16]]* @ff_aac_sbr_init.table.9)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 16384, align: 16, elements: !1053)
!1053 = !{!1054, !964}
!1054 = !DISubrange(count: 512)
!1055 = distinct !DIGlobalVariable(name: "vlc_sbr", scope: !0, file: !1056, line: 51, type: !1057, isLocal: true, isDefinition: true, variable: [10 x %struct.VLC]* @vlc_sbr)
!1056 = !DIFile(filename: "libavcodec/aacsbr.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 1920, align: 64, elements: !1016)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1059, line: 30, baseType: !1060)
!1059 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1059, line: 26, size: 192, align: 64, elements: !1061)
!1061 = !{!1062, !1063, !1066, !1067}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1060, file: !1059, line: 27, baseType: !992, size: 32, align: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1060, file: !1059, line: 28, baseType: !1064, size: 64, align: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 32, align: 16, elements: !972)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1060, file: !1059, line: 29, baseType: !992, size: 32, align: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1060, file: !1059, line: 29, baseType: !992, size: 32, align: 32, offset: 160)
!1068 = distinct !DIGlobalVariable(name: "t_huffman_env_1_5dB_codes", scope: !0, file: !995, line: 56, type: !1069, isLocal: true, isDefinition: true, variable: [121 x i32]* @t_huffman_env_1_5dB_codes)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 3872, align: 32, elements: !1071)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!1071 = !{!1072}
!1072 = !DISubrange(count: 121)
!1073 = distinct !DIGlobalVariable(name: "t_huffman_env_1_5dB_bits", scope: !0, file: !995, line: 37, type: !1074, isLocal: true, isDefinition: true, variable: [121 x i8]* @t_huffman_env_1_5dB_bits)
!1074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 968, align: 8, elements: !1071)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!1076 = distinct !DIGlobalVariable(name: "f_huffman_env_1_5dB_codes", scope: !0, file: !995, line: 94, type: !1069, isLocal: true, isDefinition: true, variable: [121 x i32]* @f_huffman_env_1_5dB_codes)
!1077 = distinct !DIGlobalVariable(name: "f_huffman_env_1_5dB_bits", scope: !0, file: !995, line: 75, type: !1074, isLocal: true, isDefinition: true, variable: [121 x i8]* @f_huffman_env_1_5dB_bits)
!1078 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_1_5dB_codes", scope: !0, file: !995, line: 123, type: !1079, isLocal: true, isDefinition: true, variable: [49 x i32]* @t_huffman_env_bal_1_5dB_codes)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 1568, align: 32, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 49)
!1082 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_1_5dB_bits", scope: !0, file: !995, line: 113, type: !1083, isLocal: true, isDefinition: true, variable: [49 x i8]* @t_huffman_env_bal_1_5dB_bits)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 392, align: 8, elements: !1080)
!1084 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_1_5dB_codes", scope: !0, file: !995, line: 143, type: !1079, isLocal: true, isDefinition: true, variable: [49 x i32]* @f_huffman_env_bal_1_5dB_codes)
!1085 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_1_5dB_bits", scope: !0, file: !995, line: 133, type: !1083, isLocal: true, isDefinition: true, variable: [49 x i8]* @f_huffman_env_bal_1_5dB_bits)
!1086 = distinct !DIGlobalVariable(name: "t_huffman_env_3_0dB_codes", scope: !0, file: !995, line: 164, type: !1087, isLocal: true, isDefinition: true, variable: [63 x i32]* @t_huffman_env_3_0dB_codes)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 2016, align: 32, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 63)
!1090 = distinct !DIGlobalVariable(name: "t_huffman_env_3_0dB_bits", scope: !0, file: !995, line: 153, type: !1091, isLocal: true, isDefinition: true, variable: [63 x i8]* @t_huffman_env_3_0dB_bits)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 504, align: 8, elements: !1088)
!1092 = distinct !DIGlobalVariable(name: "f_huffman_env_3_0dB_codes", scope: !0, file: !995, line: 186, type: !1087, isLocal: true, isDefinition: true, variable: [63 x i32]* @f_huffman_env_3_0dB_codes)
!1093 = distinct !DIGlobalVariable(name: "f_huffman_env_3_0dB_bits", scope: !0, file: !995, line: 175, type: !1091, isLocal: true, isDefinition: true, variable: [63 x i8]* @f_huffman_env_3_0dB_bits)
!1094 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_3_0dB_codes", scope: !0, file: !995, line: 204, type: !1095, isLocal: true, isDefinition: true, variable: [25 x i16]* @t_huffman_env_bal_3_0dB_codes)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 400, align: 16, elements: !1099)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !984, line: 49, baseType: !1098)
!1098 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1099 = !{!1100}
!1100 = !DISubrange(count: 25)
!1101 = distinct !DIGlobalVariable(name: "t_huffman_env_bal_3_0dB_bits", scope: !0, file: !995, line: 197, type: !1102, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_env_bal_3_0dB_bits)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 200, align: 8, elements: !1099)
!1103 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_3_0dB_codes", scope: !0, file: !995, line: 218, type: !1095, isLocal: true, isDefinition: true, variable: [25 x i16]* @f_huffman_env_bal_3_0dB_codes)
!1104 = distinct !DIGlobalVariable(name: "f_huffman_env_bal_3_0dB_bits", scope: !0, file: !995, line: 211, type: !1102, isLocal: true, isDefinition: true, variable: [25 x i8]* @f_huffman_env_bal_3_0dB_bits)
!1105 = distinct !DIGlobalVariable(name: "t_huffman_noise_3_0dB_codes", scope: !0, file: !995, line: 236, type: !1106, isLocal: true, isDefinition: true, variable: [63 x i16]* @t_huffman_noise_3_0dB_codes)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 1008, align: 16, elements: !1088)
!1107 = distinct !DIGlobalVariable(name: "t_huffman_noise_3_0dB_bits", scope: !0, file: !995, line: 225, type: !1091, isLocal: true, isDefinition: true, variable: [63 x i8]* @t_huffman_noise_3_0dB_bits)
!1108 = distinct !DIGlobalVariable(name: "t_huffman_noise_bal_3_0dB_codes", scope: !0, file: !995, line: 254, type: !1102, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_noise_bal_3_0dB_codes)
!1109 = distinct !DIGlobalVariable(name: "t_huffman_noise_bal_3_0dB_bits", scope: !0, file: !995, line: 247, type: !1102, isLocal: true, isDefinition: true, variable: [25 x i8]* @t_huffman_noise_bal_3_0dB_bits)
!1110 = distinct !DIGlobalVariable(name: "sbr_qmf_window_us", scope: !0, file: !1111, line: 30, type: !1112, isLocal: true, isDefinition: true, variable: [640 x float]* @sbr_qmf_window_us)
!1111 = !DIFile(filename: "libavcodec/aacsbr_tablegen_common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 20480, align: 32, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 640)
!1115 = distinct !DIGlobalVariable(name: "sbr_qmf_window_ds", scope: !0, file: !1111, line: 29, type: !1116, isLocal: true, isDefinition: true, variable: [320 x float]* @sbr_qmf_window_ds)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 10240, align: 32, elements: !1117)
!1117 = !{!1118}
!1118 = !DISubrange(count: 320)
!1119 = distinct !DIGlobalVariable(name: "bands_warped", scope: !1120, file: !1001, line: 140, type: !2563, isLocal: true, isDefinition: true, variable: [3 x float]* @sbr_make_f_tablelim.bands_warped)
!1120 = distinct !DISubprogram(name: "sbr_make_f_tablelim", scope: !1001, file: !1001, line: 136, type: !1121, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{null, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !1125, line: 115, baseType: !1126)
!1125 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !1125, line: 139, size: 3129856, align: 256, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1131, !1132, !1133, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1154, !1156, !1157, !1158, !1159, !1236, !1356, !1357, !1358, !1359, !1361, !1363, !1364, !1366, !1370, !1371, !1373, !1374, !1377, !1380, !1383, !1385, !1386, !1389, !1390, !1392, !1393, !1394, !1395, !1396, !1399, !1445, !1446, !1496}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1126, file: !1125, line: 140, baseType: !992, size: 32, align: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1126, file: !1125, line: 141, baseType: !992, size: 32, align: 32, offset: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !1126, file: !1125, line: 142, baseType: !992, size: 32, align: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !1126, file: !1125, line: 143, baseType: !992, size: 32, align: 32, offset: 96)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1126, file: !1125, line: 144, baseType: !992, size: 32, align: 32, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !1126, file: !1125, line: 145, baseType: !1134, size: 48, align: 8, offset: 160)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !1125, line: 55, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !1125, line: 42, size: 48, align: 8, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !1135, file: !1125, line: 43, baseType: !986, size: 8, align: 8)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !1135, file: !1125, line: 44, baseType: !986, size: 8, align: 8, offset: 8)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !1135, file: !1125, line: 45, baseType: !986, size: 8, align: 8, offset: 16)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !1135, file: !1125, line: 51, baseType: !986, size: 8, align: 8, offset: 24)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !1135, file: !1125, line: 52, baseType: !986, size: 8, align: 8, offset: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !1135, file: !1125, line: 53, baseType: !986, size: 8, align: 8, offset: 40)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !1126, file: !1125, line: 146, baseType: !992, size: 32, align: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !1126, file: !1125, line: 151, baseType: !985, size: 32, align: 32, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !1126, file: !1125, line: 152, baseType: !985, size: 32, align: 32, offset: 288)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !1126, file: !1125, line: 153, baseType: !985, size: 32, align: 32, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !1126, file: !1125, line: 154, baseType: !985, size: 32, align: 32, offset: 352)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !1126, file: !1125, line: 156, baseType: !985, size: 32, align: 32, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1126, file: !1125, line: 157, baseType: !1150, size: 160, align: 32, offset: 416)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 160, align: 32, elements: !1152)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !957, line: 91, baseType: !985)
!1152 = !{!1153}
!1153 = !DISubrange(count: 5)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !1126, file: !1125, line: 160, baseType: !1155, size: 64, align: 32, offset: 576)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 64, align: 32, elements: !972)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1126, file: !1125, line: 162, baseType: !1155, size: 64, align: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !1126, file: !1125, line: 163, baseType: !985, size: 32, align: 32, offset: 704)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !1126, file: !1125, line: 165, baseType: !1151, size: 32, align: 32, offset: 736)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1126, file: !1125, line: 166, baseType: !1160, size: 1407488, align: 256, offset: 768)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 1407488, align: 256, elements: !972)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !1125, line: 113, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !1125, line: 62, size: 703744, align: 256, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1171, !1172, !1174, !1176, !1179, !1183, !1184, !1188, !1192, !1193, !1195, !1197, !1200, !1201, !1205, !1210, !1211, !1215, !1219, !1221, !1225, !1227, !1230, !1231, !1234, !1235}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !1162, file: !1125, line: 67, baseType: !985, size: 32, align: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !1162, file: !1125, line: 68, baseType: !985, size: 32, align: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !1162, file: !1125, line: 69, baseType: !1151, size: 32, align: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !1162, file: !1125, line: 70, baseType: !1168, size: 56, align: 8, offset: 96)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 56, align: 8, elements: !1169)
!1169 = !{!1170}
!1170 = !DISubrange(count: 7)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !1162, file: !1125, line: 71, baseType: !1151, size: 32, align: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !1162, file: !1125, line: 72, baseType: !1173, size: 40, align: 8, offset: 192)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 40, align: 8, elements: !1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !1162, file: !1125, line: 73, baseType: !1175, size: 16, align: 8, offset: 232)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 16, align: 8, elements: !972)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !1162, file: !1125, line: 74, baseType: !1177, size: 80, align: 8, offset: 248)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 80, align: 8, elements: !1178)
!1178 = !{!964, !1153}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !1162, file: !1125, line: 75, baseType: !1180, size: 384, align: 8, offset: 328)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 384, align: 8, elements: !1181)
!1181 = !{!1182}
!1182 = !DISubrange(count: 48)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !1162, file: !1125, line: 76, baseType: !985, size: 32, align: 32, offset: 736)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !1162, file: !1125, line: 83, baseType: !1185, size: 73728, align: 32, offset: 768)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 73728, align: 32, elements: !1186)
!1186 = !{!1187}
!1187 = !DISubrange(count: 2304)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !1162, file: !1125, line: 84, baseType: !1189, size: 41984, align: 32, offset: 74496)
!1189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 41984, align: 32, elements: !1190)
!1190 = !{!1191}
!1191 = !DISubrange(count: 1312)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !1162, file: !1125, line: 85, baseType: !992, size: 32, align: 32, offset: 116480)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !1162, file: !1125, line: 87, baseType: !1194, size: 64, align: 32, offset: 116512)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 64, align: 32, elements: !972)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !1162, file: !1125, line: 89, baseType: !1196, size: 160, align: 32, offset: 116576)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 160, align: 32, elements: !1152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !1162, file: !1125, line: 91, baseType: !1198, size: 131072, align: 32, offset: 116736)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 131072, align: 32, elements: !1199)
!1199 = !{!964, !963, !963, !964}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !1162, file: !1125, line: 93, baseType: !992, size: 32, align: 32, offset: 247808)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !1162, file: !1125, line: 94, baseType: !1202, size: 311296, align: 32, offset: 247936)
!1202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 311296, align: 32, elements: !1203)
!1203 = !{!964, !1204, !976, !964}
!1204 = !DISubrange(count: 38)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !1162, file: !1125, line: 95, baseType: !1206, size: 64512, align: 32, offset: 559232)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 64512, align: 32, elements: !1208)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !957, line: 90, baseType: !958)
!1208 = !{!1209, !1182}
!1209 = !DISubrange(count: 42)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !1162, file: !1125, line: 96, baseType: !1206, size: 64512, align: 32, offset: 623744)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !1162, file: !1125, line: 97, baseType: !1212, size: 3072, align: 8, offset: 688256)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 3072, align: 8, elements: !1213)
!1213 = !{!1214, !1182}
!1214 = !DISubrange(count: 8)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !1162, file: !1125, line: 99, baseType: !1216, size: 2304, align: 8, offset: 691328)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 2304, align: 8, elements: !1217)
!1217 = !{!1218, !1182}
!1218 = !DISubrange(count: 6)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !1162, file: !1125, line: 100, baseType: !1220, size: 9216, align: 32, offset: 693632)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 9216, align: 32, elements: !1217)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !1162, file: !1125, line: 102, baseType: !1222, size: 120, align: 8, offset: 702848)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 120, align: 8, elements: !1223)
!1223 = !{!1224, !1153}
!1224 = !DISubrange(count: 3)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !1162, file: !1125, line: 103, baseType: !1226, size: 480, align: 32, offset: 702976)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 480, align: 32, elements: !1223)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !1162, file: !1125, line: 105, baseType: !1228, size: 64, align: 8, offset: 703456)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 64, align: 8, elements: !1229)
!1229 = !{!1214}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !1162, file: !1125, line: 107, baseType: !986, size: 8, align: 8, offset: 703520)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !1162, file: !1125, line: 109, baseType: !1232, size: 24, align: 8, offset: 703528)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 24, align: 8, elements: !1233)
!1233 = !{!1224}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !1162, file: !1125, line: 110, baseType: !985, size: 32, align: 32, offset: 703552)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !1162, file: !1125, line: 111, baseType: !985, size: 32, align: 32, offset: 703584)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !1126, file: !1125, line: 167, baseType: !1237, size: 1072896, align: 128, offset: 1408256)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !1238, line: 79, baseType: !1239)
!1238 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !1238, line: 41, size: 1072896, align: 128, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1257, !1263, !1264, !1265, !1266, !1267, !1268, !1272, !1277, !1282, !1285, !1286, !1287, !1290, !1291, !1292, !1293, !1296, !1297, !1299, !1300}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1239, file: !1238, line: 42, baseType: !992, size: 32, align: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !1239, file: !1238, line: 43, baseType: !992, size: 32, align: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !1239, file: !1238, line: 44, baseType: !992, size: 32, align: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !1239, file: !1238, line: 45, baseType: !992, size: 32, align: 32, offset: 96)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !1239, file: !1238, line: 46, baseType: !992, size: 32, align: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !1239, file: !1238, line: 47, baseType: !992, size: 32, align: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !1239, file: !1238, line: 48, baseType: !992, size: 32, align: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !1239, file: !1238, line: 49, baseType: !992, size: 32, align: 32, offset: 224)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !1239, file: !1238, line: 50, baseType: !992, size: 32, align: 32, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !1239, file: !1238, line: 51, baseType: !992, size: 32, align: 32, offset: 288)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !1239, file: !1238, line: 52, baseType: !992, size: 32, align: 32, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !1239, file: !1238, line: 53, baseType: !992, size: 32, align: 32, offset: 352)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !1239, file: !1238, line: 54, baseType: !992, size: 32, align: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !1239, file: !1238, line: 55, baseType: !1255, size: 192, align: 32, offset: 416)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 192, align: 32, elements: !1256)
!1256 = !{!1218}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !1239, file: !1238, line: 56, baseType: !1258, size: 1360, align: 8, offset: 608)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1259, size: 1360, align: 8, elements: !1261)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !984, line: 36, baseType: !1260)
!1260 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1261 = !{!1153, !1262}
!1262 = !DISubrange(count: 34)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !1239, file: !1238, line: 57, baseType: !1258, size: 1360, align: 8, offset: 1968)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !1239, file: !1238, line: 59, baseType: !1258, size: 1360, align: 8, offset: 3328)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !1239, file: !1238, line: 60, baseType: !1258, size: 1360, align: 8, offset: 4688)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !1239, file: !1238, line: 61, baseType: !992, size: 32, align: 32, offset: 6048)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !1239, file: !1238, line: 62, baseType: !992, size: 32, align: 32, offset: 6080)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1239, file: !1238, line: 64, baseType: !1269, size: 14080, align: 32, offset: 6144)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 14080, align: 32, elements: !1270)
!1270 = !{!1153, !1271, !964}
!1271 = !DISubrange(count: 44)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1239, file: !1238, line: 65, baseType: !1273, size: 267904, align: 32, offset: 20224)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 267904, align: 32, elements: !1274)
!1274 = !{!1275, !1276, !964}
!1275 = !DISubrange(count: 91)
!1276 = !DISubrange(count: 46)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !1239, file: !1238, line: 66, baseType: !1278, size: 355200, align: 32, offset: 288128)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 355200, align: 32, elements: !1279)
!1279 = !{!1280, !1224, !1281, !964}
!1280 = !DISubrange(count: 50)
!1281 = !DISubrange(count: 37)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !1239, file: !1238, line: 67, baseType: !1283, size: 1088, align: 32, offset: 643328)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 1088, align: 32, elements: !1284)
!1284 = !{!1262}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !1239, file: !1238, line: 68, baseType: !1283, size: 1088, align: 32, offset: 644480)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !1239, file: !1238, line: 69, baseType: !1283, size: 1088, align: 32, offset: 645632)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !1239, file: !1238, line: 70, baseType: !1288, size: 13056, align: 32, offset: 646784)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 13056, align: 32, elements: !1289)
!1289 = !{!964, !1218, !1262}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !1239, file: !1238, line: 71, baseType: !1288, size: 13056, align: 32, offset: 659840)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !1239, file: !1238, line: 72, baseType: !1288, size: 13056, align: 32, offset: 672896)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !1239, file: !1238, line: 73, baseType: !1288, size: 13056, align: 32, offset: 685952)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !1239, file: !1238, line: 74, baseType: !1294, size: 186368, align: 32, offset: 699008)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 186368, align: 32, elements: !1295)
!1295 = !{!1275, !963, !964}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !1239, file: !1238, line: 75, baseType: !1294, size: 186368, align: 32, offset: 885376)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !1239, file: !1238, line: 76, baseType: !1298, size: 272, align: 8, offset: 1071744)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1259, size: 272, align: 8, elements: !1284)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !1239, file: !1238, line: 77, baseType: !1298, size: 272, align: 8, offset: 1072016)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1239, file: !1238, line: 78, baseType: !1301, size: 512, align: 64, offset: 1072320)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !1302, line: 52, baseType: !1303)
!1302 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !1302, line: 32, size: 512, align: 64, elements: !1304)
!1304 = !{!1305, !1309, !1315, !1325, !1335, !1339, !1347}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !1303, file: !1302, line: 33, baseType: !1306, size: 64, align: 64)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{null, !955, !970, !992}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !1303, file: !1302, line: 34, baseType: !1310, size: 64, align: 64, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !1313, !1313, !955, !992}
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64, align: 64)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 64, align: 32, elements: !972)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !1303, file: !1302, line: 36, baseType: !1316, size: 64, align: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !1313, !1313, !1319, !1322, !992}
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64, align: 64)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 512, align: 32, elements: !1321)
!1321 = !{!1214, !964}
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1323, line: 149, baseType: !1324)
!1323 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1324 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !1303, file: !1302, line: 39, baseType: !1326, size: 64, align: 64, offset: 192)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{null, !1329, !1332, !992, !992}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2048, align: 32, elements: !1331)
!1331 = !{!963, !964}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 77824, align: 32, elements: !1334)
!1334 = !{!1204, !976}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !1303, file: !1302, line: 41, baseType: !1336, size: 64, align: 64, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !1332, !1329, !992, !992}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !1303, file: !1302, line: 43, baseType: !1340, size: 64, align: 64, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64, align: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{null, !1313, !1313, !1343, !1346, !970, !1346, !956, !992}
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2368, align: 32, elements: !1345)
!1345 = !{!1281, !964}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !1303, file: !1302, line: 49, baseType: !1348, size: 128, align: 64, offset: 384)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 128, align: 64, elements: !972)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64, align: 64)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{null, !1313, !1313, !1352, !1352, !992}
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 128, align: 32, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 4)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1126, file: !1125, line: 169, baseType: !1155, size: 64, align: 32, offset: 2481152)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !1126, file: !1125, line: 171, baseType: !1151, size: 32, align: 32, offset: 2481216)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !1126, file: !1125, line: 173, baseType: !1151, size: 32, align: 32, offset: 2481248)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !1126, file: !1125, line: 175, baseType: !1360, size: 784, align: 16, offset: 2481280)
!1360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 784, align: 16, elements: !1080)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !1126, file: !1125, line: 177, baseType: !1362, size: 400, align: 16, offset: 2482064)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 400, align: 16, elements: !1099)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !1126, file: !1125, line: 179, baseType: !1360, size: 784, align: 16, offset: 2482464)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !1126, file: !1125, line: 181, baseType: !1365, size: 96, align: 16, offset: 2483248)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 96, align: 16, elements: !1256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !1126, file: !1125, line: 183, baseType: !1367, size: 480, align: 16, offset: 2483344)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 480, align: 16, elements: !1368)
!1368 = !{!1369}
!1369 = !DISubrange(count: 30)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !1126, file: !1125, line: 184, baseType: !1151, size: 32, align: 32, offset: 2483840)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !1126, file: !1125, line: 185, baseType: !1372, size: 48, align: 8, offset: 2483872)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 48, align: 8, elements: !1256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !1126, file: !1125, line: 186, baseType: !1372, size: 48, align: 8, offset: 2483920)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !1126, file: !1125, line: 188, baseType: !1375, size: 81920, align: 32, offset: 2483968)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 81920, align: 32, elements: !1376)
!1376 = !{!963, !968, !964}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !1126, file: !1125, line: 190, baseType: !1378, size: 163840, align: 32, offset: 2565888)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 163840, align: 32, elements: !1379)
!1379 = !{!976, !968, !964}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !1126, file: !1125, line: 192, baseType: !1381, size: 311296, align: 32, offset: 2729728)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 311296, align: 32, elements: !1382)
!1382 = !{!964, !964, !1204, !976}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !1126, file: !1125, line: 194, baseType: !1384, size: 4096, align: 32, offset: 3041024)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 4096, align: 32, elements: !975)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !1126, file: !1125, line: 196, baseType: !1384, size: 4096, align: 32, offset: 3045120)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !1126, file: !1125, line: 198, baseType: !1387, size: 10752, align: 32, offset: 3049216)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 10752, align: 32, elements: !1388)
!1388 = !{!1170, !1182}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !1126, file: !1125, line: 200, baseType: !1387, size: 10752, align: 32, offset: 3059968)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !1126, file: !1125, line: 202, baseType: !1391, size: 2688, align: 8, offset: 3070720)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 2688, align: 8, elements: !1388)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !1126, file: !1125, line: 204, baseType: !1387, size: 10752, align: 32, offset: 3073408)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !1126, file: !1125, line: 206, baseType: !1387, size: 10752, align: 32, offset: 3084160)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !1126, file: !1125, line: 208, baseType: !1387, size: 10752, align: 32, offset: 3094912)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1126, file: !1125, line: 209, baseType: !1387, size: 10752, align: 32, offset: 3105664)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !1126, file: !1125, line: 210, baseType: !1397, size: 10240, align: 32, offset: 3116544)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 10240, align: 32, elements: !1398)
!1398 = !{!1153, !976}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !1126, file: !1125, line: 211, baseType: !1400, size: 896, align: 64, offset: 3126784)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1401, line: 41, baseType: !1402)
!1401 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !919, line: 88, size: 896, align: 64, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1408, !1416, !1417, !1418, !1420, !1421, !1426, !1427, !1433, !1434, !1435, !1441, !1442, !1443}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1402, file: !919, line: 89, baseType: !992, size: 32, align: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1402, file: !919, line: 90, baseType: !992, size: 32, align: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1402, file: !919, line: 91, baseType: !1407, size: 64, align: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1402, file: !919, line: 92, baseType: !1409, size: 64, align: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1401, line: 39, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1401, line: 37, size: 64, align: 32, elements: !1412)
!1412 = !{!1413, !1415}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1411, file: !1401, line: 38, baseType: !1414, size: 32, align: 32)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1401, line: 35, baseType: !958)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1411, file: !1401, line: 38, baseType: !1414, size: 32, align: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1402, file: !919, line: 93, baseType: !992, size: 32, align: 32, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1402, file: !919, line: 94, baseType: !992, size: 32, align: 32, offset: 224)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1402, file: !919, line: 96, baseType: !1419, size: 64, align: 64, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64, align: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1402, file: !919, line: 97, baseType: !1419, size: 64, align: 64, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1402, file: !919, line: 101, baseType: !1422, size: 64, align: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64, align: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{null, !1425, !1409}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1402, file: !919, line: 106, baseType: !1422, size: 64, align: 64, offset: 448)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1402, file: !919, line: 107, baseType: !1428, size: 64, align: 64, offset: 512)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1425, !1419, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1402, file: !919, line: 108, baseType: !1428, size: 64, align: 64, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1402, file: !919, line: 109, baseType: !1428, size: 64, align: 64, offset: 640)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1402, file: !919, line: 110, baseType: !1436, size: 64, align: 64, offset: 704)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64, align: 64)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{null, !1425, !1439, !1431}
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !919, line: 43, baseType: !958)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1402, file: !919, line: 111, baseType: !918, size: 32, align: 32, offset: 768)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1402, file: !919, line: 112, baseType: !924, size: 32, align: 32, offset: 800)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1402, file: !919, line: 113, baseType: !1444, size: 64, align: 64, offset: 832)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1126, file: !1125, line: 212, baseType: !1400, size: 896, align: 64, offset: 3127680)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1126, file: !1125, line: 213, baseType: !1447, size: 896, align: 64, offset: 3128576)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !1448, line: 45, baseType: !1449)
!1448 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !1448, line: 28, size: 896, align: 64, elements: !1450)
!1450 = !{!1451, !1455, !1459, !1460, !1461, !1465, !1469, !1473, !1480, !1484, !1491}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !1449, file: !1448, line: 29, baseType: !1452, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !955}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !1449, file: !1448, line: 30, baseType: !1456, size: 64, align: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!1207, !1313, !992}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !1449, file: !1448, line: 31, baseType: !1452, size: 64, align: 64, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !1449, file: !1448, line: 32, baseType: !1452, size: 64, align: 64, offset: 192)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !1449, file: !1448, line: 33, baseType: !1462, size: 64, align: 64, offset: 256)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !1313, !1346}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !1449, file: !1448, line: 34, baseType: !1466, size: 64, align: 64, offset: 320)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !955, !1346}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !1449, file: !1448, line: 35, baseType: !1470, size: 64, align: 64, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64, align: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !955, !1346, !1346}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !1449, file: !1448, line: 36, baseType: !1474, size: 64, align: 64, offset: 448)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !970, !1477}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 128, align: 32, elements: !1479)
!1479 = !{!964, !964}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !1449, file: !1448, line: 37, baseType: !1481, size: 64, align: 64, offset: 512)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{null, !1313, !970, !1346, !1346, !956, !992, !992}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !1449, file: !1448, line: 40, baseType: !1485, size: 64, align: 64, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{null, !1313, !965, !1488, !992, !1490}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !984, line: 119, baseType: !1324)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !1449, file: !1448, line: 42, baseType: !1492, size: 256, align: 64, offset: 640)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 256, align: 64, elements: !1354)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{null, !1313, !1488, !1488, !992, !992, !992}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1126, file: !1125, line: 214, baseType: !1497, size: 256, align: 64, offset: 3129472)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !1125, line: 134, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !1125, line: 120, size: 256, align: 64, elements: !1499)
!1499 = !{!1500, !2548, !2554, !2558}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !1498, file: !1125, line: 121, baseType: !1501, size: 64, align: 64)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!992, !1504, !1123, !2546, !959, !992}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !1125, line: 37, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !888, line: 293, size: 62208, align: 256, elements: !1507)
!1507 = !{!1508, !1551, !2223, !2224, !2225, !2242, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2437, !2438, !2439, !2482, !2483, !2486, !2487, !2488, !2490, !2519, !2520, !2521, !2522, !2526, !2527, !2533, !2537, !2538, !2542}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1506, file: !888, line: 294, baseType: !1509, size: 64, align: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1512)
!1512 = !{!1513, !1517, !1521, !1525, !1526, !1527, !1528, !1532, !1538, !1540, !1544}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1511, file: !4, line: 72, baseType: !1514, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64, align: 64)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1511, file: !4, line: 78, baseType: !1518, size: 64, align: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1514, !969}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1511, file: !4, line: 85, baseType: !1522, size: 64, align: 64, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64, align: 64)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1511, file: !4, line: 93, baseType: !992, size: 32, align: 32, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1511, file: !4, line: 99, baseType: !992, size: 32, align: 32, offset: 224)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1511, file: !4, line: 108, baseType: !992, size: 32, align: 32, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1511, file: !4, line: 113, baseType: !1529, size: 64, align: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!969, !969, !969}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1511, file: !4, line: 123, baseType: !1533, size: 64, align: 64, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!1536, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64, align: 64)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1511, file: !4, line: 130, baseType: !1539, size: 32, align: 32, offset: 448)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1511, file: !4, line: 136, baseType: !1541, size: 64, align: 64, offset: 512)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!1539, !969}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1511, file: !4, line: 142, baseType: !1545, size: 64, align: 64, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64, align: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!992, !1548, !969, !1514, !992}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64, align: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1506, file: !888, line: 295, baseType: !1552, size: 64, align: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1555)
!1555 = !{!1556, !1559, !1560, !1561, !1823, !1824, !1825, !1826, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1979, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2161, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1554, file: !35, line: 1561, baseType: !1557, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1554, file: !35, line: 1562, baseType: !992, size: 32, align: 32, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1554, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1554, file: !35, line: 1565, baseType: !1562, size: 64, align: 64, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1570, !1571, !1580, !1583, !1586, !1589, !1594, !1595, !1596, !1604, !1605, !1606, !1608, !1612, !1618, !1628, !1632, !1633, !1676, !1794, !1798, !1799, !1803, !1807, !1812, !1816, !1817, !1818}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1564, file: !35, line: 3475, baseType: !1514, size: 64, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1564, file: !35, line: 3480, baseType: !1514, size: 64, align: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1564, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1564, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1564, file: !35, line: 3487, baseType: !992, size: 32, align: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1564, file: !35, line: 3488, baseType: !1572, size: 64, align: 64, offset: 256)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1574)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1575, line: 61, baseType: !1576)
!1575 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1575, line: 58, size: 64, align: 32, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1576, file: !1575, line: 59, baseType: !992, size: 32, align: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1576, file: !1575, line: 60, baseType: !992, size: 32, align: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1564, file: !35, line: 3489, baseType: !1581, size: 64, align: 64, offset: 320)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1564, file: !35, line: 3490, baseType: !1584, size: 64, align: 64, offset: 384)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1564, file: !35, line: 3491, baseType: !1587, size: 64, align: 64, offset: 448)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1564, file: !35, line: 3492, baseType: !1590, size: 64, align: 64, offset: 512)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !984, line: 55, baseType: !1593)
!1593 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1564, file: !35, line: 3493, baseType: !986, size: 8, align: 8, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1564, file: !35, line: 3494, baseType: !1557, size: 64, align: 64, offset: 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1564, file: !35, line: 3495, baseType: !1597, size: 64, align: 64, offset: 704)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1600, file: !35, line: 3402, baseType: !992, size: 32, align: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1600, file: !35, line: 3403, baseType: !1514, size: 64, align: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1564, file: !35, line: 3507, baseType: !1514, size: 64, align: 64, offset: 768)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1564, file: !35, line: 3516, baseType: !992, size: 32, align: 32, offset: 832)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1564, file: !35, line: 3517, baseType: !1607, size: 64, align: 64, offset: 896)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1564, file: !35, line: 3527, baseType: !1609, size: 64, align: 64, offset: 960)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64, align: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!992, !1552}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1564, file: !35, line: 3535, baseType: !1613, size: 64, align: 64, offset: 1024)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!992, !1552, !1616}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1564, file: !35, line: 3541, baseType: !1619, size: 64, align: 64, offset: 1088)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1623, line: 223, size: 128, align: 64, elements: !1624)
!1623 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1624 = !{!1625, !1627}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1622, file: !1623, line: 224, baseType: !1626, size: 64, align: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1622, file: !1623, line: 225, baseType: !1626, size: 64, align: 64, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1564, file: !35, line: 3549, baseType: !1629, size: 64, align: 64, offset: 1152)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64, align: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1607}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1564, file: !35, line: 3551, baseType: !1609, size: 64, align: 64, offset: 1216)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1564, file: !35, line: 3552, baseType: !1634, size: 64, align: 64, offset: 1280)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!992, !1552, !1637, !992, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1674}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1640, file: !35, line: 3921, baseType: !1097, size: 16, align: 16)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1640, file: !35, line: 3922, baseType: !983, size: 32, align: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1640, file: !35, line: 3923, baseType: !983, size: 32, align: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1640, file: !35, line: 3924, baseType: !985, size: 32, align: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1640, file: !35, line: 3925, baseType: !1647, size: 64, align: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1665, !1667, !1669, !1670, !1672, !1673}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1650, file: !35, line: 3886, baseType: !992, size: 32, align: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1650, file: !35, line: 3887, baseType: !992, size: 32, align: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1650, file: !35, line: 3888, baseType: !992, size: 32, align: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1650, file: !35, line: 3889, baseType: !992, size: 32, align: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1650, file: !35, line: 3890, baseType: !992, size: 32, align: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1650, file: !35, line: 3897, baseType: !1658, size: 768, align: 64, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1660)
!1660 = !{!1661, !1663}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1659, file: !35, line: 3855, baseType: !1662, size: 512, align: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 512, align: 64, elements: !1229)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1659, file: !35, line: 3857, baseType: !1664, size: 256, align: 32, offset: 512)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 256, align: 32, elements: !1229)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1650, file: !35, line: 3903, baseType: !1666, size: 256, align: 64, offset: 960)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 256, align: 64, elements: !1354)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1650, file: !35, line: 3904, baseType: !1668, size: 128, align: 32, offset: 1216)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 128, align: 32, elements: !1354)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1650, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1650, file: !35, line: 3908, baseType: !1671, size: 64, align: 64, offset: 1408)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1650, file: !35, line: 3915, baseType: !1671, size: 64, align: 64, offset: 1472)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1650, file: !35, line: 3917, baseType: !992, size: 32, align: 32, offset: 1536)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1640, file: !35, line: 3926, baseType: !1675, size: 64, align: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !984, line: 40, baseType: !1324)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1564, file: !35, line: 3564, baseType: !1677, size: 64, align: 64, offset: 1344)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64, align: 64)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!992, !1552, !1680, !1714, !1793}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1683)
!1683 = !{!1684, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1710, !1711, !1712, !1713}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1682, file: !35, line: 1451, baseType: !1685, size: 64, align: 64)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1687, line: 94, baseType: !1688)
!1687 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1687, line: 81, size: 192, align: 64, elements: !1689)
!1689 = !{!1690, !1694, !1695}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1688, file: !1687, line: 82, baseType: !1691, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1687, line: 73, baseType: !1693)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1687, line: 73, flags: DIFlagFwdDecl)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1688, file: !1687, line: 89, baseType: !1637, size: 64, align: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1688, file: !1687, line: 93, baseType: !992, size: 32, align: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1682, file: !35, line: 1461, baseType: !1675, size: 64, align: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1682, file: !35, line: 1467, baseType: !1675, size: 64, align: 64, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1682, file: !35, line: 1468, baseType: !1637, size: 64, align: 64, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1682, file: !35, line: 1469, baseType: !992, size: 32, align: 32, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1682, file: !35, line: 1470, baseType: !992, size: 32, align: 32, offset: 288)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1682, file: !35, line: 1474, baseType: !992, size: 32, align: 32, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1682, file: !35, line: 1479, baseType: !1703, size: 64, align: 64, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64, align: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1706)
!1706 = !{!1707, !1708, !1709}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1705, file: !35, line: 1412, baseType: !1637, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1705, file: !35, line: 1413, baseType: !992, size: 32, align: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1682, file: !35, line: 1480, baseType: !992, size: 32, align: 32, offset: 448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1682, file: !35, line: 1486, baseType: !1675, size: 64, align: 64, offset: 512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1682, file: !35, line: 1488, baseType: !1675, size: 64, align: 64, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1682, file: !35, line: 1497, baseType: !1675, size: 64, align: 64, offset: 640)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1748, !1750, !1751, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1782, !1783, !1784, !1785, !1786, !1787, !1789, !1790, !1791, !1792}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1717, file: !758, line: 282, baseType: !1662, size: 512, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1717, file: !758, line: 299, baseType: !1664, size: 256, align: 32, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1717, file: !758, line: 315, baseType: !1722, size: 64, align: 64, offset: 768)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1717, file: !758, line: 326, baseType: !992, size: 32, align: 32, offset: 832)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1717, file: !758, line: 326, baseType: !992, size: 32, align: 32, offset: 864)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1717, file: !758, line: 334, baseType: !992, size: 32, align: 32, offset: 896)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1717, file: !758, line: 341, baseType: !992, size: 32, align: 32, offset: 928)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1717, file: !758, line: 346, baseType: !992, size: 32, align: 32, offset: 960)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1717, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1717, file: !758, line: 356, baseType: !1574, size: 64, align: 32, offset: 1024)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1717, file: !758, line: 361, baseType: !1675, size: 64, align: 64, offset: 1088)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1717, file: !758, line: 369, baseType: !1675, size: 64, align: 64, offset: 1152)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1717, file: !758, line: 377, baseType: !1675, size: 64, align: 64, offset: 1216)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1717, file: !758, line: 382, baseType: !992, size: 32, align: 32, offset: 1280)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1717, file: !758, line: 386, baseType: !992, size: 32, align: 32, offset: 1312)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1717, file: !758, line: 391, baseType: !992, size: 32, align: 32, offset: 1344)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1717, file: !758, line: 396, baseType: !969, size: 64, align: 64, offset: 1408)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1717, file: !758, line: 403, baseType: !1738, size: 512, align: 64, offset: 1472)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1592, size: 512, align: 64, elements: !1229)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1717, file: !758, line: 410, baseType: !992, size: 32, align: 32, offset: 1984)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1717, file: !758, line: 415, baseType: !992, size: 32, align: 32, offset: 2016)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1717, file: !758, line: 420, baseType: !992, size: 32, align: 32, offset: 2048)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1717, file: !758, line: 425, baseType: !992, size: 32, align: 32, offset: 2080)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1717, file: !758, line: 435, baseType: !1675, size: 64, align: 64, offset: 2112)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1717, file: !758, line: 440, baseType: !992, size: 32, align: 32, offset: 2176)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1717, file: !758, line: 445, baseType: !1592, size: 64, align: 64, offset: 2240)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1717, file: !758, line: 459, baseType: !1747, size: 512, align: 64, offset: 2304)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1685, size: 512, align: 64, elements: !1229)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1717, file: !758, line: 473, baseType: !1749, size: 64, align: 64, offset: 2816)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1717, file: !758, line: 477, baseType: !992, size: 32, align: 32, offset: 2880)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1717, file: !758, line: 479, baseType: !1752, size: 64, align: 64, offset: 2944)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64, align: 64)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1765}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1755, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1755, file: !758, line: 203, baseType: !1637, size: 64, align: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1755, file: !758, line: 204, baseType: !992, size: 32, align: 32, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1755, file: !758, line: 205, baseType: !1761, size: 64, align: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64, align: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1763, line: 86, baseType: !1764)
!1763 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1763, line: 86, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1755, file: !758, line: 206, baseType: !1685, size: 64, align: 64, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1717, file: !758, line: 480, baseType: !992, size: 32, align: 32, offset: 3008)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1717, file: !758, line: 505, baseType: !992, size: 32, align: 32, offset: 3040)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1717, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1717, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1717, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1717, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1717, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1717, file: !758, line: 532, baseType: !1675, size: 64, align: 64, offset: 3264)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1717, file: !758, line: 539, baseType: !1675, size: 64, align: 64, offset: 3328)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1717, file: !758, line: 547, baseType: !1675, size: 64, align: 64, offset: 3392)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1717, file: !758, line: 554, baseType: !1761, size: 64, align: 64, offset: 3456)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1717, file: !758, line: 563, baseType: !992, size: 32, align: 32, offset: 3520)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1717, file: !758, line: 572, baseType: !992, size: 32, align: 32, offset: 3552)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1717, file: !758, line: 581, baseType: !992, size: 32, align: 32, offset: 3584)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1717, file: !758, line: 588, baseType: !1781, size: 64, align: 64, offset: 3648)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64, align: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1717, file: !758, line: 593, baseType: !992, size: 32, align: 32, offset: 3712)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1717, file: !758, line: 596, baseType: !992, size: 32, align: 32, offset: 3744)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1717, file: !758, line: 599, baseType: !1685, size: 64, align: 64, offset: 3776)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1717, file: !758, line: 605, baseType: !1685, size: 64, align: 64, offset: 3840)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1717, file: !758, line: 616, baseType: !1685, size: 64, align: 64, offset: 3904)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1717, file: !758, line: 626, baseType: !1788, size: 64, align: 64, offset: 3968)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1323, line: 216, baseType: !1593)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1717, file: !758, line: 627, baseType: !1788, size: 64, align: 64, offset: 4032)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1717, file: !758, line: 628, baseType: !1788, size: 64, align: 64, offset: 4096)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1717, file: !758, line: 629, baseType: !1788, size: 64, align: 64, offset: 4160)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1717, file: !758, line: 645, baseType: !1685, size: 64, align: 64, offset: 4224)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1564, file: !35, line: 3566, baseType: !1795, size: 64, align: 64, offset: 1408)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!992, !1552, !969, !1793, !1680}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1564, file: !35, line: 3567, baseType: !1609, size: 64, align: 64, offset: 1472)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1564, file: !35, line: 3576, baseType: !1800, size: 64, align: 64, offset: 1536)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!992, !1552, !1714}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1564, file: !35, line: 3577, baseType: !1804, size: 64, align: 64, offset: 1600)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64, align: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!992, !1552, !1680}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1564, file: !35, line: 3584, baseType: !1808, size: 64, align: 64, offset: 1664)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!992, !1552, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1564, file: !35, line: 3589, baseType: !1813, size: 64, align: 64, offset: 1728)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64, align: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1552}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1564, file: !35, line: 3594, baseType: !992, size: 32, align: 32, offset: 1792)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1564, file: !35, line: 3600, baseType: !1514, size: 64, align: 64, offset: 1856)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1564, file: !35, line: 3609, baseType: !1819, size: 64, align: 64, offset: 1920)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64, align: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1554, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1554, file: !35, line: 1581, baseType: !985, size: 32, align: 32, offset: 224)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1554, file: !35, line: 1583, baseType: !969, size: 64, align: 64, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1554, file: !35, line: 1591, baseType: !1827, size: 64, align: 64, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64, align: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1623, line: 129, size: 1664, align: 64, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1852, !1853, !1859, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1828, file: !1623, line: 136, baseType: !992, size: 32, align: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1828, file: !1623, line: 151, baseType: !992, size: 32, align: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1828, file: !1623, line: 157, baseType: !992, size: 32, align: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1828, file: !1623, line: 159, baseType: !1811, size: 64, align: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1828, file: !1623, line: 161, baseType: !1835, size: 64, align: 64, offset: 192)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64, align: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1623, line: 117, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1623, line: 100, size: 832, align: 64, elements: !1838)
!1838 = !{!1839, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1837, file: !1623, line: 105, baseType: !1840, size: 256, align: 64)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 256, align: 64, elements: !1354)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1687, line: 238, baseType: !1843)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1687, line: 238, flags: DIFlagFwdDecl)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1837, file: !1623, line: 110, baseType: !992, size: 32, align: 32, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1837, file: !1623, line: 111, baseType: !992, size: 32, align: 32, offset: 288)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1837, file: !1623, line: 111, baseType: !992, size: 32, align: 32, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1837, file: !1623, line: 112, baseType: !1664, size: 256, align: 32, offset: 352)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1837, file: !1623, line: 113, baseType: !1668, size: 128, align: 32, offset: 608)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1837, file: !1623, line: 114, baseType: !992, size: 32, align: 32, offset: 736)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1837, file: !1623, line: 115, baseType: !992, size: 32, align: 32, offset: 768)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1837, file: !1623, line: 116, baseType: !992, size: 32, align: 32, offset: 800)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1828, file: !1623, line: 163, baseType: !969, size: 64, align: 64, offset: 256)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1828, file: !1623, line: 165, baseType: !1854, size: 128, align: 64, offset: 320)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1623, line: 122, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1623, line: 119, size: 128, align: 64, elements: !1856)
!1856 = !{!1857, !1858}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1855, file: !1623, line: 120, baseType: !1680, size: 64, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1855, file: !1623, line: 121, baseType: !1811, size: 64, align: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1828, file: !1623, line: 166, baseType: !1860, size: 128, align: 64, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1623, line: 127, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1623, line: 124, size: 128, align: 64, elements: !1862)
!1862 = !{!1863, !1936}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1861, file: !1623, line: 125, baseType: !1864, size: 64, align: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1868)
!1868 = !{!1869, !1870, !1894, !1898, !1899, !1933, !1934, !1935}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1867, file: !35, line: 5751, baseType: !1557, size: 64, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1867, file: !35, line: 5756, baseType: !1871, size: 64, align: 64, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64, align: 64)
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1874)
!1874 = !{!1875, !1876, !1879, !1880, !1881, !1885, !1889, !1893}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1873, file: !35, line: 5797, baseType: !1514, size: 64, align: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1873, file: !35, line: 5804, baseType: !1877, size: 64, align: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64, align: 64)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1873, file: !35, line: 5815, baseType: !1557, size: 64, align: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1873, file: !35, line: 5825, baseType: !992, size: 32, align: 32, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1873, file: !35, line: 5826, baseType: !1882, size: 64, align: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!992, !1865}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1873, file: !35, line: 5827, baseType: !1886, size: 64, align: 64, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64, align: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!992, !1865, !1680}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1873, file: !35, line: 5828, baseType: !1890, size: 64, align: 64, offset: 384)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64, align: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{null, !1865}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1873, file: !35, line: 5829, baseType: !1890, size: 64, align: 64, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1867, file: !35, line: 5762, baseType: !1895, size: 64, align: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1897)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1867, file: !35, line: 5768, baseType: !969, size: 64, align: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1867, file: !35, line: 5775, baseType: !1900, size: 64, align: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1902, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1902, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1902, file: !35, line: 3948, baseType: !983, size: 32, align: 32, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1902, file: !35, line: 3958, baseType: !1637, size: 64, align: 64, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1902, file: !35, line: 3962, baseType: !992, size: 32, align: 32, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1902, file: !35, line: 3968, baseType: !992, size: 32, align: 32, offset: 224)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1902, file: !35, line: 3973, baseType: !1675, size: 64, align: 64, offset: 256)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1902, file: !35, line: 3986, baseType: !992, size: 32, align: 32, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1902, file: !35, line: 3999, baseType: !992, size: 32, align: 32, offset: 352)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1902, file: !35, line: 4004, baseType: !992, size: 32, align: 32, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1902, file: !35, line: 4005, baseType: !992, size: 32, align: 32, offset: 416)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1902, file: !35, line: 4010, baseType: !992, size: 32, align: 32, offset: 448)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1902, file: !35, line: 4011, baseType: !992, size: 32, align: 32, offset: 480)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1902, file: !35, line: 4020, baseType: !1574, size: 64, align: 32, offset: 512)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1902, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1902, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1902, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1902, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1902, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1902, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1902, file: !35, line: 4039, baseType: !992, size: 32, align: 32, offset: 768)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1902, file: !35, line: 4046, baseType: !1592, size: 64, align: 64, offset: 832)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1902, file: !35, line: 4050, baseType: !992, size: 32, align: 32, offset: 896)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1902, file: !35, line: 4054, baseType: !992, size: 32, align: 32, offset: 928)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1902, file: !35, line: 4061, baseType: !992, size: 32, align: 32, offset: 960)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1902, file: !35, line: 4065, baseType: !992, size: 32, align: 32, offset: 992)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1902, file: !35, line: 4073, baseType: !992, size: 32, align: 32, offset: 1024)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1902, file: !35, line: 4080, baseType: !992, size: 32, align: 32, offset: 1056)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1902, file: !35, line: 4084, baseType: !992, size: 32, align: 32, offset: 1088)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1867, file: !35, line: 5781, baseType: !1900, size: 64, align: 64, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1867, file: !35, line: 5787, baseType: !1574, size: 64, align: 32, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1867, file: !35, line: 5793, baseType: !1574, size: 64, align: 32, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1861, file: !1623, line: 126, baseType: !992, size: 32, align: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1828, file: !1623, line: 172, baseType: !1680, size: 64, align: 64, offset: 576)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1828, file: !1623, line: 177, baseType: !1637, size: 64, align: 64, offset: 640)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1828, file: !1623, line: 178, baseType: !985, size: 32, align: 32, offset: 704)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1828, file: !1623, line: 180, baseType: !969, size: 64, align: 64, offset: 768)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1828, file: !1623, line: 185, baseType: !992, size: 32, align: 32, offset: 832)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1828, file: !1623, line: 190, baseType: !969, size: 64, align: 64, offset: 896)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1828, file: !1623, line: 195, baseType: !992, size: 32, align: 32, offset: 960)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1828, file: !1623, line: 200, baseType: !1680, size: 64, align: 64, offset: 1024)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1828, file: !1623, line: 201, baseType: !992, size: 32, align: 32, offset: 1088)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1828, file: !1623, line: 202, baseType: !1811, size: 64, align: 64, offset: 1152)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1828, file: !1623, line: 203, baseType: !992, size: 32, align: 32, offset: 1216)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1828, file: !1623, line: 205, baseType: !992, size: 32, align: 32, offset: 1248)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1828, file: !1623, line: 206, baseType: !992, size: 32, align: 32, offset: 1280)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1828, file: !1623, line: 209, baseType: !1788, size: 64, align: 64, offset: 1344)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1828, file: !1623, line: 212, baseType: !1788, size: 64, align: 64, offset: 1408)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1828, file: !1623, line: 213, baseType: !1811, size: 64, align: 64, offset: 1472)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1828, file: !1623, line: 215, baseType: !992, size: 32, align: 32, offset: 1536)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1828, file: !1623, line: 217, baseType: !992, size: 32, align: 32, offset: 1568)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1828, file: !1623, line: 220, baseType: !992, size: 32, align: 32, offset: 1600)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1554, file: !35, line: 1598, baseType: !969, size: 64, align: 64, offset: 384)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1554, file: !35, line: 1606, baseType: !1675, size: 64, align: 64, offset: 448)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1554, file: !35, line: 1614, baseType: !992, size: 32, align: 32, offset: 512)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1554, file: !35, line: 1622, baseType: !992, size: 32, align: 32, offset: 544)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1554, file: !35, line: 1628, baseType: !992, size: 32, align: 32, offset: 576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1554, file: !35, line: 1636, baseType: !992, size: 32, align: 32, offset: 608)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1554, file: !35, line: 1643, baseType: !992, size: 32, align: 32, offset: 640)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1554, file: !35, line: 1657, baseType: !1637, size: 64, align: 64, offset: 704)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1554, file: !35, line: 1658, baseType: !992, size: 32, align: 32, offset: 768)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1554, file: !35, line: 1679, baseType: !1574, size: 64, align: 32, offset: 800)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1554, file: !35, line: 1688, baseType: !992, size: 32, align: 32, offset: 864)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1554, file: !35, line: 1712, baseType: !992, size: 32, align: 32, offset: 896)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1554, file: !35, line: 1729, baseType: !992, size: 32, align: 32, offset: 928)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1554, file: !35, line: 1729, baseType: !992, size: 32, align: 32, offset: 960)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1554, file: !35, line: 1744, baseType: !992, size: 32, align: 32, offset: 992)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1554, file: !35, line: 1744, baseType: !992, size: 32, align: 32, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1554, file: !35, line: 1751, baseType: !992, size: 32, align: 32, offset: 1056)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1554, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1554, file: !35, line: 1791, baseType: !1975, size: 64, align: 64, offset: 1152)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64, align: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1978, !1714, !1793, !992, !992, !992}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1554, file: !35, line: 1808, baseType: !1980, size: 64, align: 64, offset: 1216)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64, align: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!494, !1978, !1581}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1554, file: !35, line: 1816, baseType: !992, size: 32, align: 32, offset: 1280)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1554, file: !35, line: 1825, baseType: !958, size: 32, align: 32, offset: 1312)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1554, file: !35, line: 1830, baseType: !992, size: 32, align: 32, offset: 1344)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1554, file: !35, line: 1838, baseType: !958, size: 32, align: 32, offset: 1376)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1554, file: !35, line: 1846, baseType: !992, size: 32, align: 32, offset: 1408)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1554, file: !35, line: 1851, baseType: !992, size: 32, align: 32, offset: 1440)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1554, file: !35, line: 1861, baseType: !958, size: 32, align: 32, offset: 1472)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1554, file: !35, line: 1868, baseType: !958, size: 32, align: 32, offset: 1504)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1554, file: !35, line: 1875, baseType: !958, size: 32, align: 32, offset: 1536)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1554, file: !35, line: 1882, baseType: !958, size: 32, align: 32, offset: 1568)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1554, file: !35, line: 1889, baseType: !958, size: 32, align: 32, offset: 1600)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1554, file: !35, line: 1896, baseType: !958, size: 32, align: 32, offset: 1632)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1554, file: !35, line: 1903, baseType: !958, size: 32, align: 32, offset: 1664)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1554, file: !35, line: 1910, baseType: !992, size: 32, align: 32, offset: 1696)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1554, file: !35, line: 1915, baseType: !992, size: 32, align: 32, offset: 1728)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1554, file: !35, line: 1926, baseType: !1793, size: 64, align: 64, offset: 1792)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1554, file: !35, line: 1935, baseType: !1574, size: 64, align: 32, offset: 1856)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1554, file: !35, line: 1942, baseType: !992, size: 32, align: 32, offset: 1920)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1554, file: !35, line: 1948, baseType: !992, size: 32, align: 32, offset: 1952)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1554, file: !35, line: 1954, baseType: !992, size: 32, align: 32, offset: 1984)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1554, file: !35, line: 1960, baseType: !992, size: 32, align: 32, offset: 2016)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1554, file: !35, line: 1984, baseType: !992, size: 32, align: 32, offset: 2048)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1554, file: !35, line: 1991, baseType: !992, size: 32, align: 32, offset: 2080)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1554, file: !35, line: 1996, baseType: !992, size: 32, align: 32, offset: 2112)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1554, file: !35, line: 2004, baseType: !992, size: 32, align: 32, offset: 2144)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1554, file: !35, line: 2011, baseType: !992, size: 32, align: 32, offset: 2176)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1554, file: !35, line: 2018, baseType: !992, size: 32, align: 32, offset: 2208)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1554, file: !35, line: 2027, baseType: !992, size: 32, align: 32, offset: 2240)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1554, file: !35, line: 2034, baseType: !992, size: 32, align: 32, offset: 2272)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1554, file: !35, line: 2044, baseType: !992, size: 32, align: 32, offset: 2304)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1554, file: !35, line: 2054, baseType: !1407, size: 64, align: 64, offset: 2368)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1554, file: !35, line: 2061, baseType: !1407, size: 64, align: 64, offset: 2432)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1554, file: !35, line: 2066, baseType: !992, size: 32, align: 32, offset: 2496)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1554, file: !35, line: 2070, baseType: !992, size: 32, align: 32, offset: 2528)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1554, file: !35, line: 2078, baseType: !992, size: 32, align: 32, offset: 2560)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1554, file: !35, line: 2085, baseType: !992, size: 32, align: 32, offset: 2592)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1554, file: !35, line: 2092, baseType: !992, size: 32, align: 32, offset: 2624)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1554, file: !35, line: 2099, baseType: !992, size: 32, align: 32, offset: 2656)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1554, file: !35, line: 2106, baseType: !992, size: 32, align: 32, offset: 2688)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1554, file: !35, line: 2113, baseType: !992, size: 32, align: 32, offset: 2720)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1554, file: !35, line: 2120, baseType: !992, size: 32, align: 32, offset: 2752)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1554, file: !35, line: 2125, baseType: !992, size: 32, align: 32, offset: 2784)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1554, file: !35, line: 2133, baseType: !992, size: 32, align: 32, offset: 2816)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1554, file: !35, line: 2140, baseType: !992, size: 32, align: 32, offset: 2848)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1554, file: !35, line: 2145, baseType: !992, size: 32, align: 32, offset: 2880)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1554, file: !35, line: 2153, baseType: !992, size: 32, align: 32, offset: 2912)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1554, file: !35, line: 2158, baseType: !992, size: 32, align: 32, offset: 2944)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1554, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1554, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1554, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1554, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1554, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1554, file: !35, line: 2203, baseType: !992, size: 32, align: 32, offset: 3136)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1554, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1554, file: !35, line: 2212, baseType: !992, size: 32, align: 32, offset: 3200)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1554, file: !35, line: 2213, baseType: !992, size: 32, align: 32, offset: 3232)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1554, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1554, file: !35, line: 2232, baseType: !992, size: 32, align: 32, offset: 3296)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1554, file: !35, line: 2243, baseType: !992, size: 32, align: 32, offset: 3328)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1554, file: !35, line: 2249, baseType: !992, size: 32, align: 32, offset: 3360)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1554, file: !35, line: 2256, baseType: !992, size: 32, align: 32, offset: 3392)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1554, file: !35, line: 2263, baseType: !1592, size: 64, align: 64, offset: 3456)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1554, file: !35, line: 2270, baseType: !1592, size: 64, align: 64, offset: 3520)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1554, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1554, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1554, file: !35, line: 2367, baseType: !2049, size: 64, align: 64, offset: 3648)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64, align: 64)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{!992, !1978, !1811, !992}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1554, file: !35, line: 2383, baseType: !992, size: 32, align: 32, offset: 3712)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1554, file: !35, line: 2386, baseType: !958, size: 32, align: 32, offset: 3744)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1554, file: !35, line: 2387, baseType: !958, size: 32, align: 32, offset: 3776)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1554, file: !35, line: 2394, baseType: !992, size: 32, align: 32, offset: 3808)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1554, file: !35, line: 2401, baseType: !992, size: 32, align: 32, offset: 3840)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1554, file: !35, line: 2408, baseType: !992, size: 32, align: 32, offset: 3872)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1554, file: !35, line: 2415, baseType: !992, size: 32, align: 32, offset: 3904)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1554, file: !35, line: 2422, baseType: !992, size: 32, align: 32, offset: 3936)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1554, file: !35, line: 2423, baseType: !2061, size: 64, align: 64, offset: 3968)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64, align: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2063, file: !35, line: 827, baseType: !992, size: 32, align: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2063, file: !35, line: 828, baseType: !992, size: 32, align: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2063, file: !35, line: 829, baseType: !992, size: 32, align: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !2063, file: !35, line: 830, baseType: !958, size: 32, align: 32, offset: 96)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1554, file: !35, line: 2430, baseType: !1675, size: 64, align: 64, offset: 4032)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1554, file: !35, line: 2437, baseType: !1675, size: 64, align: 64, offset: 4096)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1554, file: !35, line: 2444, baseType: !958, size: 32, align: 32, offset: 4160)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1554, file: !35, line: 2451, baseType: !958, size: 32, align: 32, offset: 4192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1554, file: !35, line: 2458, baseType: !992, size: 32, align: 32, offset: 4224)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1554, file: !35, line: 2469, baseType: !992, size: 32, align: 32, offset: 4256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1554, file: !35, line: 2475, baseType: !992, size: 32, align: 32, offset: 4288)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1554, file: !35, line: 2481, baseType: !992, size: 32, align: 32, offset: 4320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1554, file: !35, line: 2485, baseType: !992, size: 32, align: 32, offset: 4352)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1554, file: !35, line: 2489, baseType: !992, size: 32, align: 32, offset: 4384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1554, file: !35, line: 2493, baseType: !992, size: 32, align: 32, offset: 4416)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1554, file: !35, line: 2501, baseType: !992, size: 32, align: 32, offset: 4448)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1554, file: !35, line: 2506, baseType: !992, size: 32, align: 32, offset: 4480)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1554, file: !35, line: 2510, baseType: !992, size: 32, align: 32, offset: 4512)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1554, file: !35, line: 2514, baseType: !1675, size: 64, align: 64, offset: 4544)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1554, file: !35, line: 2528, baseType: !2085, size: 64, align: 64, offset: 4608)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !1978, !969, !992, !992}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1554, file: !35, line: 2534, baseType: !992, size: 32, align: 32, offset: 4672)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1554, file: !35, line: 2545, baseType: !992, size: 32, align: 32, offset: 4704)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1554, file: !35, line: 2547, baseType: !992, size: 32, align: 32, offset: 4736)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1554, file: !35, line: 2549, baseType: !992, size: 32, align: 32, offset: 4768)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1554, file: !35, line: 2551, baseType: !992, size: 32, align: 32, offset: 4800)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1554, file: !35, line: 2553, baseType: !992, size: 32, align: 32, offset: 4832)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1554, file: !35, line: 2555, baseType: !992, size: 32, align: 32, offset: 4864)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1554, file: !35, line: 2557, baseType: !992, size: 32, align: 32, offset: 4896)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1554, file: !35, line: 2559, baseType: !992, size: 32, align: 32, offset: 4928)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1554, file: !35, line: 2563, baseType: !992, size: 32, align: 32, offset: 4960)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1554, file: !35, line: 2571, baseType: !1671, size: 64, align: 64, offset: 4992)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1554, file: !35, line: 2579, baseType: !1671, size: 64, align: 64, offset: 5056)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1554, file: !35, line: 2586, baseType: !992, size: 32, align: 32, offset: 5120)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1554, file: !35, line: 2615, baseType: !992, size: 32, align: 32, offset: 5152)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1554, file: !35, line: 2627, baseType: !992, size: 32, align: 32, offset: 5184)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1554, file: !35, line: 2637, baseType: !992, size: 32, align: 32, offset: 5216)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1554, file: !35, line: 2681, baseType: !992, size: 32, align: 32, offset: 5248)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1554, file: !35, line: 2709, baseType: !1675, size: 64, align: 64, offset: 5312)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1554, file: !35, line: 2716, baseType: !2107, size: 64, align: 64, offset: 5376)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64, align: 64)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2121, !2125, !2126, !2127, !2128, !2134, !2135, !2136, !2137, !2138}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2109, file: !35, line: 3642, baseType: !1514, size: 64, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2109, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2109, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2109, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2109, file: !35, line: 3669, baseType: !992, size: 32, align: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !2109, file: !35, line: 3682, baseType: !1808, size: 64, align: 64, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2109, file: !35, line: 3698, baseType: !2118, size: 64, align: 64, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64, align: 64)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!992, !1552, !1626, !983}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !2109, file: !35, line: 3712, baseType: !2122, size: 64, align: 64, offset: 320)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64, align: 64)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!992, !1552, !992, !1626, !983}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !2109, file: !35, line: 3726, baseType: !2118, size: 64, align: 64, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2109, file: !35, line: 3737, baseType: !1609, size: 64, align: 64, offset: 448)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !2109, file: !35, line: 3746, baseType: !992, size: 32, align: 32, offset: 512)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2109, file: !35, line: 3757, baseType: !2129, size: 64, align: 64, offset: 576)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64, align: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64, align: 64)
!2133 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2109, file: !35, line: 3766, baseType: !1609, size: 64, align: 64, offset: 640)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2109, file: !35, line: 3774, baseType: !1609, size: 64, align: 64, offset: 704)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2109, file: !35, line: 3780, baseType: !992, size: 32, align: 32, offset: 768)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !2109, file: !35, line: 3785, baseType: !992, size: 32, align: 32, offset: 800)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !2109, file: !35, line: 3795, baseType: !2139, size: 64, align: 64, offset: 832)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64, align: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!992, !1552, !1685}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1554, file: !35, line: 2728, baseType: !969, size: 64, align: 64, offset: 5440)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1554, file: !35, line: 2735, baseType: !1738, size: 512, align: 64, offset: 5504)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1554, file: !35, line: 2742, baseType: !992, size: 32, align: 32, offset: 6016)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1554, file: !35, line: 2755, baseType: !992, size: 32, align: 32, offset: 6048)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1554, file: !35, line: 2776, baseType: !992, size: 32, align: 32, offset: 6080)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1554, file: !35, line: 2783, baseType: !992, size: 32, align: 32, offset: 6112)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1554, file: !35, line: 2791, baseType: !992, size: 32, align: 32, offset: 6144)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1554, file: !35, line: 2802, baseType: !1811, size: 64, align: 64, offset: 6208)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1554, file: !35, line: 2811, baseType: !992, size: 32, align: 32, offset: 6272)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1554, file: !35, line: 2821, baseType: !992, size: 32, align: 32, offset: 6304)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1554, file: !35, line: 2830, baseType: !992, size: 32, align: 32, offset: 6336)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1554, file: !35, line: 2840, baseType: !992, size: 32, align: 32, offset: 6368)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1554, file: !35, line: 2851, baseType: !2155, size: 64, align: 64, offset: 6400)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64, align: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!992, !1978, !2158, !969, !1793, !992, !992}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64, align: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!992, !1978, !969}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1554, file: !35, line: 2871, baseType: !2162, size: 64, align: 64, offset: 6464)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64, align: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!992, !1978, !2165, !969, !1793, !992}
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64, align: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!992, !1978, !969, !992, !992}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1554, file: !35, line: 2878, baseType: !992, size: 32, align: 32, offset: 6528)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1554, file: !35, line: 2885, baseType: !992, size: 32, align: 32, offset: 6560)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1554, file: !35, line: 3005, baseType: !992, size: 32, align: 32, offset: 6592)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1554, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1554, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1554, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1554, file: !35, line: 3037, baseType: !1637, size: 64, align: 64, offset: 6720)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1554, file: !35, line: 3038, baseType: !992, size: 32, align: 32, offset: 6784)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1554, file: !35, line: 3050, baseType: !1592, size: 64, align: 64, offset: 6848)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1554, file: !35, line: 3065, baseType: !992, size: 32, align: 32, offset: 6912)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1554, file: !35, line: 3083, baseType: !992, size: 32, align: 32, offset: 6944)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1554, file: !35, line: 3092, baseType: !1574, size: 64, align: 32, offset: 6976)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1554, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1554, file: !35, line: 3106, baseType: !1574, size: 64, align: 32, offset: 7072)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1554, file: !35, line: 3113, baseType: !2183, size: 64, align: 64, offset: 7168)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64, align: 64)
!2184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2196}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2186, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2186, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2186, file: !35, line: 720, baseType: !1514, size: 64, align: 64, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2186, file: !35, line: 724, baseType: !1514, size: 64, align: 64, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2186, file: !35, line: 728, baseType: !992, size: 32, align: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2186, file: !35, line: 734, baseType: !2194, size: 64, align: 64, offset: 256)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2186, file: !35, line: 739, baseType: !2197, size: 64, align: 64, offset: 320)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64, align: 64)
!2198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1554, file: !35, line: 3129, baseType: !1675, size: 64, align: 64, offset: 7232)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1554, file: !35, line: 3130, baseType: !1675, size: 64, align: 64, offset: 7296)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1554, file: !35, line: 3131, baseType: !1675, size: 64, align: 64, offset: 7360)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1554, file: !35, line: 3132, baseType: !1675, size: 64, align: 64, offset: 7424)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1554, file: !35, line: 3139, baseType: !1671, size: 64, align: 64, offset: 7488)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1554, file: !35, line: 3147, baseType: !992, size: 32, align: 32, offset: 7552)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1554, file: !35, line: 3165, baseType: !992, size: 32, align: 32, offset: 7584)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1554, file: !35, line: 3172, baseType: !992, size: 32, align: 32, offset: 7616)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1554, file: !35, line: 3180, baseType: !992, size: 32, align: 32, offset: 7648)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1554, file: !35, line: 3191, baseType: !1407, size: 64, align: 64, offset: 7680)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1554, file: !35, line: 3199, baseType: !1637, size: 64, align: 64, offset: 7744)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1554, file: !35, line: 3207, baseType: !1671, size: 64, align: 64, offset: 7808)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1554, file: !35, line: 3214, baseType: !985, size: 32, align: 32, offset: 7872)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1554, file: !35, line: 3224, baseType: !1703, size: 64, align: 64, offset: 7936)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1554, file: !35, line: 3225, baseType: !992, size: 32, align: 32, offset: 8000)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1554, file: !35, line: 3249, baseType: !1685, size: 64, align: 64, offset: 8064)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1554, file: !35, line: 3256, baseType: !992, size: 32, align: 32, offset: 8128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1554, file: !35, line: 3271, baseType: !992, size: 32, align: 32, offset: 8160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1554, file: !35, line: 3279, baseType: !1675, size: 64, align: 64, offset: 8192)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1554, file: !35, line: 3301, baseType: !1685, size: 64, align: 64, offset: 8256)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1554, file: !35, line: 3310, baseType: !992, size: 32, align: 32, offset: 8320)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1554, file: !35, line: 3337, baseType: !992, size: 32, align: 32, offset: 8352)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1554, file: !35, line: 3351, baseType: !992, size: 32, align: 32, offset: 8384)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1554, file: !35, line: 3359, baseType: !992, size: 32, align: 32, offset: 8416)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1506, file: !888, line: 296, baseType: !1811, size: 64, align: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !1506, file: !888, line: 298, baseType: !992, size: 32, align: 32, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !1506, file: !888, line: 299, baseType: !2226, size: 3808, align: 32, offset: 224)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !888, line: 222, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !888, line: 211, size: 3808, align: 32, elements: !2228)
!2228 = !{!2229, !2230, !2234, !2235, !2238, !2239, !2240, !2241}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2227, file: !888, line: 212, baseType: !992, size: 32, align: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2227, file: !888, line: 213, baseType: !2231, size: 544, align: 32, offset: 32)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 544, align: 32, elements: !2232)
!2232 = !{!2233}
!2233 = !DISubrange(count: 17)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2227, file: !888, line: 214, baseType: !2231, size: 544, align: 32, offset: 576)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2227, file: !888, line: 215, baseType: !2236, size: 2048, align: 32, offset: 1120)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 2048, align: 32, elements: !2237)
!2237 = !{!976}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2227, file: !888, line: 216, baseType: !992, size: 32, align: 32, offset: 3168)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2227, file: !888, line: 217, baseType: !992, size: 32, align: 32, offset: 3200)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2227, file: !888, line: 218, baseType: !2231, size: 544, align: 32, offset: 3232)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2227, file: !888, line: 219, baseType: !992, size: 32, align: 32, offset: 3776)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !1506, file: !888, line: 305, baseType: !2243, size: 4096, align: 64, offset: 4032)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2244, size: 4096, align: 64, elements: !2394)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64, align: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !888, line: 288, baseType: !2246)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !888, line: 275, size: 4381952, align: 256, elements: !2247)
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2256, !2257, !2379, !2393}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2246, file: !888, line: 276, baseType: !992, size: 32, align: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !2246, file: !888, line: 278, baseType: !992, size: 32, align: 32, offset: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !2246, file: !888, line: 279, baseType: !992, size: 32, align: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !2246, file: !888, line: 280, baseType: !986, size: 8, align: 8, offset: 96)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !2246, file: !888, line: 281, baseType: !2253, size: 1024, align: 8, offset: 104)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 1024, align: 8, elements: !2254)
!2254 = !{!2255}
!2255 = !DISubrange(count: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !2246, file: !888, line: 282, baseType: !2253, size: 1024, align: 8, offset: 1128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2246, file: !888, line: 284, baseType: !2258, size: 1187328, align: 256, offset: 2304)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, size: 1187328, align: 256, elements: !972)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !888, line: 270, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !888, line: 248, size: 593664, align: 256, elements: !2261)
!2261 = !{!2262, !2302, !2319, !2327, !2329, !2330, !2334, !2336, !2338, !2339, !2340, !2342, !2343, !2347, !2348, !2352, !2356, !2360, !2362, !2363, !2378}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !2260, file: !888, line: 249, baseType: !2263, size: 2432, align: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !888, line: 193, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !888, line: 174, size: 2432, align: 64, elements: !2265)
!2265 = !{!2266, !2267, !2269, !2270, !2271, !2272, !2283, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2296, !2300, !2301}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !2264, file: !888, line: 175, baseType: !986, size: 8, align: 8)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !2264, file: !888, line: 176, baseType: !2268, size: 64, align: 32, offset: 32)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 64, align: 32, elements: !972)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !2264, file: !888, line: 177, baseType: !1175, size: 16, align: 8, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !2264, file: !888, line: 178, baseType: !992, size: 32, align: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !2264, file: !888, line: 179, baseType: !1228, size: 64, align: 8, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !2264, file: !888, line: 180, baseType: !2273, size: 416, align: 32, offset: 224)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !888, line: 169, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !888, line: 163, size: 416, align: 32, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2274, file: !888, line: 164, baseType: !1259, size: 8, align: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !2274, file: !888, line: 165, baseType: !990, size: 16, align: 16, offset: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !2274, file: !888, line: 166, baseType: !992, size: 32, align: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !2274, file: !888, line: 167, baseType: !956, size: 32, align: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2274, file: !888, line: 168, baseType: !2281, size: 320, align: 8, offset: 96)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1259, size: 320, align: 8, elements: !2282)
!2282 = !{!968}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !2264, file: !888, line: 181, baseType: !2284, size: 64, align: 64, offset: 640)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !2264, file: !888, line: 182, baseType: !1626, size: 64, align: 64, offset: 704)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !2264, file: !888, line: 183, baseType: !992, size: 32, align: 32, offset: 768)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !2264, file: !888, line: 184, baseType: !992, size: 32, align: 32, offset: 800)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !2264, file: !888, line: 185, baseType: !992, size: 32, align: 32, offset: 832)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !2264, file: !888, line: 186, baseType: !992, size: 32, align: 32, offset: 864)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !2264, file: !888, line: 187, baseType: !992, size: 32, align: 32, offset: 896)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !2264, file: !888, line: 188, baseType: !992, size: 32, align: 32, offset: 928)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !2264, file: !888, line: 189, baseType: !2293, size: 992, align: 32, offset: 960)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 992, align: 32, elements: !2294)
!2294 = !{!2295}
!2295 = !DISubrange(count: 31)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !2264, file: !888, line: 190, baseType: !2297, size: 328, align: 8, offset: 1952)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 328, align: 8, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 41)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !2264, file: !888, line: 191, baseType: !1228, size: 64, align: 8, offset: 2280)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !2264, file: !888, line: 192, baseType: !958, size: 32, align: 32, offset: 2368)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !2260, file: !888, line: 250, baseType: !2303, size: 44320, align: 32, offset: 2432)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !888, line: 206, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !888, line: 198, size: 44320, align: 32, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2311, !2312, !2313, !2317}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2304, file: !888, line: 199, baseType: !992, size: 32, align: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !2304, file: !888, line: 200, baseType: !1664, size: 256, align: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2304, file: !888, line: 201, baseType: !2309, size: 1024, align: 32, offset: 288)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 1024, align: 32, elements: !2310)
!2310 = !{!1214, !1355}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !2304, file: !888, line: 202, baseType: !2309, size: 1024, align: 32, offset: 1312)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2304, file: !888, line: 203, baseType: !2309, size: 1024, align: 32, offset: 2336)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !2304, file: !888, line: 204, baseType: !2314, size: 20480, align: 32, offset: 3360)
!2314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 20480, align: 32, elements: !2315)
!2315 = !{!1214, !1355, !2316}
!2316 = !DISubrange(count: 20)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !2304, file: !888, line: 205, baseType: !2318, size: 20480, align: 32, offset: 23840)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 20480, align: 32, elements: !2315)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !2260, file: !888, line: 251, baseType: !2320, size: 320, align: 32, offset: 46752)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !888, line: 229, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !888, line: 224, size: 320, align: 32, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !2321, file: !888, line: 225, baseType: !992, size: 32, align: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2321, file: !888, line: 226, baseType: !992, size: 32, align: 32, offset: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2321, file: !888, line: 227, baseType: !1668, size: 128, align: 32, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !2321, file: !888, line: 228, baseType: !1668, size: 128, align: 32, offset: 192)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !2260, file: !888, line: 252, baseType: !2328, size: 4096, align: 32, offset: 47072)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 4096, align: 32, elements: !2254)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !2260, file: !888, line: 253, baseType: !2328, size: 4096, align: 32, offset: 51168)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !2260, file: !888, line: 254, baseType: !2331, size: 3840, align: 32, offset: 55264)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 3840, align: 32, elements: !2332)
!2332 = !{!2333}
!2333 = !DISubrange(count: 120)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !2260, file: !888, line: 255, baseType: !2335, size: 3840, align: 32, offset: 59104)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 3840, align: 32, elements: !2332)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !2260, file: !888, line: 256, baseType: !2337, size: 4096, align: 32, offset: 62944)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 4096, align: 32, elements: !2254)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !2260, file: !888, line: 257, baseType: !2253, size: 1024, align: 8, offset: 67040)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !2260, file: !888, line: 258, baseType: !2253, size: 1024, align: 8, offset: 68064)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !2260, file: !888, line: 259, baseType: !2341, size: 4096, align: 32, offset: 69088)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 4096, align: 32, elements: !2254)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !2260, file: !888, line: 260, baseType: !2341, size: 4096, align: 32, offset: 73184)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !2260, file: !888, line: 261, baseType: !2344, size: 32768, align: 32, offset: 77312)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 32768, align: 32, elements: !2345)
!2345 = !{!2346}
!2346 = !DISubrange(count: 1024)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !2260, file: !888, line: 262, baseType: !2344, size: 32768, align: 32, offset: 110080)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !2260, file: !888, line: 263, baseType: !2349, size: 49152, align: 32, offset: 142848)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 49152, align: 32, elements: !2350)
!2350 = !{!2351}
!2351 = !DISubrange(count: 1536)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !2260, file: !888, line: 264, baseType: !2353, size: 65536, align: 32, offset: 192000)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 65536, align: 32, elements: !2354)
!2354 = !{!2355}
!2355 = !DISubrange(count: 2048)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !2260, file: !888, line: 265, baseType: !2357, size: 98304, align: 32, offset: 257536)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 98304, align: 32, elements: !2358)
!2358 = !{!2359}
!2359 = !DISubrange(count: 3072)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !2260, file: !888, line: 266, baseType: !2361, size: 32768, align: 32, offset: 355840)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 32768, align: 32, elements: !2345)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !2260, file: !888, line: 267, baseType: !2361, size: 32768, align: 32, offset: 388608)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !2260, file: !888, line: 268, baseType: !2364, size: 172032, align: 32, offset: 421376)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 172032, align: 32, elements: !2376)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !888, line: 144, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !888, line: 135, size: 256, align: 32, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2366, file: !888, line: 136, baseType: !1207, size: 32, align: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2366, file: !888, line: 137, baseType: !1207, size: 32, align: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2366, file: !888, line: 138, baseType: !1207, size: 32, align: 32, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2366, file: !888, line: 139, baseType: !1207, size: 32, align: 32, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2366, file: !888, line: 140, baseType: !1207, size: 32, align: 32, offset: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2366, file: !888, line: 141, baseType: !1207, size: 32, align: 32, offset: 160)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2366, file: !888, line: 142, baseType: !1207, size: 32, align: 32, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2366, file: !888, line: 143, baseType: !1207, size: 32, align: 32, offset: 224)
!2376 = !{!2377}
!2377 = !DISubrange(count: 672)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !2260, file: !888, line: 269, baseType: !955, size: 64, align: 64, offset: 593408)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !2246, file: !888, line: 286, baseType: !2380, size: 62272, align: 32, offset: 1189632)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !888, line: 243, baseType: !2381)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !888, line: 234, size: 62272, align: 32, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2387, !2388, !2389}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2381, file: !888, line: 235, baseType: !903, size: 32, align: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2381, file: !888, line: 236, baseType: !992, size: 32, align: 32, offset: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2381, file: !888, line: 237, baseType: !2386, size: 256, align: 32, offset: 64)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 256, align: 32, elements: !1229)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2381, file: !888, line: 238, baseType: !1664, size: 256, align: 32, offset: 320)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2381, file: !888, line: 239, baseType: !1664, size: 256, align: 32, offset: 576)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2381, file: !888, line: 242, baseType: !2390, size: 61440, align: 32, offset: 832)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 61440, align: 32, elements: !2391)
!2391 = !{!2392, !2333}
!2392 = !DISubrange(count: 16)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2246, file: !888, line: 287, baseType: !1124, size: 3129856, align: 256, offset: 1252096)
!2394 = !{!1355, !2392}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !1506, file: !888, line: 306, baseType: !2243, size: 4096, align: 64, offset: 8128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !1506, file: !888, line: 307, baseType: !992, size: 32, align: 32, offset: 12224)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !1506, file: !888, line: 308, baseType: !992, size: 32, align: 32, offset: 12256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !1506, file: !888, line: 316, baseType: !2344, size: 32768, align: 32, offset: 12288)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1506, file: !888, line: 323, baseType: !1400, size: 896, align: 64, offset: 45056)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !1506, file: !888, line: 324, baseType: !1400, size: 896, align: 64, offset: 45952)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !1506, file: !888, line: 325, baseType: !1400, size: 896, align: 64, offset: 46848)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !1506, file: !888, line: 326, baseType: !1400, size: 896, align: 64, offset: 47744)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "mdct120", scope: !1506, file: !888, line: 330, baseType: !2404, size: 64, align: 64, offset: 48640)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64, align: 64)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !2406, line: 54, baseType: !2407)
!2406 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !2406, line: 28, size: 5632, align: 256, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2420, !2424, !2428, !2436}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !2407, file: !2406, line: 29, baseType: !992, size: 32, align: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !2407, file: !2406, line: 30, baseType: !992, size: 32, align: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !2407, file: !2406, line: 31, baseType: !992, size: 32, align: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2407, file: !2406, line: 32, baseType: !992, size: 32, align: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !2407, file: !2406, line: 33, baseType: !1793, size: 64, align: 64, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !2407, file: !2406, line: 34, baseType: !1793, size: 64, align: 64, offset: 192)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !2407, file: !2406, line: 36, baseType: !1400, size: 896, align: 64, offset: 256)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2407, file: !2406, line: 37, baseType: !1409, size: 64, align: 64, offset: 1152)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !2407, file: !2406, line: 38, baseType: !1409, size: 64, align: 64, offset: 1216)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !2407, file: !2406, line: 40, baseType: !2419, size: 4096, align: 32, offset: 1280)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 4096, align: 32, elements: !2237)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !2407, file: !2406, line: 43, baseType: !2421, size: 64, align: 64, offset: 5376)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64, align: 64)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !1409, !1409, !1409, !1322}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !2407, file: !2406, line: 46, baseType: !2425, size: 64, align: 64, offset: 5440)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64, align: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !1409, !1409, !1409, !1793, !1322}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2407, file: !2406, line: 49, baseType: !2429, size: 64, align: 64, offset: 5504)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64, align: 64)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{null, !2432, !2433, !2434, !1322}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64, align: 64)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64, align: 64)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64, align: 64)
!2435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2407, file: !2406, line: 52, baseType: !2429, size: 64, align: 64, offset: 5568)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mdct480", scope: !1506, file: !888, line: 331, baseType: !2404, size: 64, align: 64, offset: 48704)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mdct960", scope: !1506, file: !888, line: 332, baseType: !2404, size: 64, align: 64, offset: 48768)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1506, file: !888, line: 333, baseType: !2440, size: 64, align: 64, offset: 48832)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64, align: 64)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !2442, line: 192, baseType: !2443)
!2442 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !2442, line: 24, size: 704, align: 64, elements: !2444)
!2444 = !{!2445, !2449, !2453, !2461, !2462, !2463, !2467, !2468, !2469, !2474, !2478}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2443, file: !2442, line: 38, baseType: !2446, size: 64, align: 64)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64, align: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{null, !2433, !2434, !2434, !992}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !2443, file: !2442, line: 54, baseType: !2450, size: 64, align: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64, align: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2433, !2434, !958, !992}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !2443, file: !2442, line: 70, baseType: !2454, size: 64, align: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64, align: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{null, !2457, !2459, !2458, !992}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64, align: 64)
!2458 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2458)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !2443, file: !2442, line: 85, baseType: !2450, size: 64, align: 64, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !2443, file: !2442, line: 100, baseType: !2454, size: 64, align: 64, offset: 256)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2443, file: !2442, line: 119, baseType: !2464, size: 64, align: 64, offset: 320)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64, align: 64)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !2433, !2434, !2434, !2434, !992}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2443, file: !2442, line: 137, baseType: !2464, size: 64, align: 64, offset: 384)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2443, file: !2442, line: 154, baseType: !2446, size: 64, align: 64, offset: 448)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !2443, file: !2442, line: 164, baseType: !2470, size: 64, align: 64, offset: 512)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64, align: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !2473, !2473, !992}
!2473 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2433)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !2443, file: !2442, line: 175, baseType: !2475, size: 64, align: 64, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64, align: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!958, !2434, !2434, !992}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !2443, file: !2442, line: 190, baseType: !2479, size: 64, align: 64, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64, align: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{null, !2457, !2459, !2459, !992}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !1506, file: !888, line: 335, baseType: !992, size: 32, align: 32, offset: 48896)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !1506, file: !888, line: 342, baseType: !2484, size: 4096, align: 64, offset: 48960)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2485, size: 4096, align: 64, elements: !2237)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64, align: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !1506, file: !888, line: 350, baseType: !992, size: 32, align: 32, offset: 53056)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !1506, file: !888, line: 351, baseType: !992, size: 32, align: 32, offset: 53088)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1506, file: !888, line: 354, baseType: !2489, size: 4096, align: 32, offset: 53248)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 4096, align: 32, elements: !2254)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !1506, file: !888, line: 356, baseType: !2491, size: 4224, align: 64, offset: 57344)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2492, size: 4224, align: 64, elements: !972)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !888, line: 130, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !888, line: 123, size: 2112, align: 64, elements: !2494)
!2494 = !{!2495, !2512, !2515, !2516, !2517, !2518}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2493, file: !888, line: 124, baseType: !2496, size: 384, align: 32)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2497, line: 46, baseType: !2498)
!2497 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2497, line: 33, size: 384, align: 32, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2498, file: !2497, line: 34, baseType: !992, size: 32, align: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2498, file: !2497, line: 35, baseType: !992, size: 32, align: 32, offset: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2498, file: !2497, line: 36, baseType: !992, size: 32, align: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2498, file: !2497, line: 37, baseType: !992, size: 32, align: 32, offset: 96)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2498, file: !2497, line: 38, baseType: !992, size: 32, align: 32, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2498, file: !2497, line: 39, baseType: !992, size: 32, align: 32, offset: 160)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2498, file: !2497, line: 40, baseType: !992, size: 32, align: 32, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2498, file: !2497, line: 41, baseType: !992, size: 32, align: 32, offset: 224)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2498, file: !2497, line: 42, baseType: !992, size: 32, align: 32, offset: 256)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2498, file: !2497, line: 43, baseType: !992, size: 32, align: 32, offset: 288)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2498, file: !2497, line: 44, baseType: !992, size: 32, align: 32, offset: 320)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2498, file: !2497, line: 45, baseType: !992, size: 32, align: 32, offset: 352)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2493, file: !888, line: 125, baseType: !2513, size: 1536, align: 8, offset: 384)
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 1536, align: 8, elements: !2514)
!2514 = !{!976, !1224}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2493, file: !888, line: 126, baseType: !992, size: 32, align: 32, offset: 1920)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2493, file: !888, line: 127, baseType: !992, size: 32, align: 32, offset: 1952)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2493, file: !888, line: 128, baseType: !1592, size: 64, align: 64, offset: 1984)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2493, file: !888, line: 129, baseType: !928, size: 32, align: 32, offset: 2048)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !1506, file: !888, line: 357, baseType: !992, size: 32, align: 32, offset: 61568)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !1506, file: !888, line: 358, baseType: !992, size: 32, align: 32, offset: 61600)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !1506, file: !888, line: 360, baseType: !992, size: 32, align: 32, offset: 61632)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !1506, file: !888, line: 363, baseType: !2523, size: 64, align: 64, offset: 61696)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64, align: 64)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{null, !1504, !2485}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !1506, file: !888, line: 364, baseType: !2523, size: 64, align: 64, offset: 61760)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !1506, file: !888, line: 365, baseType: !2528, size: 64, align: 64, offset: 61824)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64, align: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{null, !955, !2531, !2532, !992}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64, align: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !1506, file: !888, line: 367, baseType: !2534, size: 64, align: 64, offset: 61888)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64, align: 64)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !1504, !955, !955, !2532}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !1506, file: !888, line: 369, baseType: !2523, size: 64, align: 64, offset: 61952)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !1506, file: !888, line: 370, baseType: !2539, size: 64, align: 64, offset: 62016)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64, align: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{null, !1793, !992}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !1506, file: !888, line: 371, baseType: !2543, size: 64, align: 64, offset: 62080)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64, align: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !1793, !1793, !992, !992, !992, !969}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64, align: 64)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2560, align: 32, elements: !967)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !1498, file: !1125, line: 124, baseType: !2549, size: 64, align: 64, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64, align: 64)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{null, !2552, !965, !1123, !2553, !1584}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64, align: 64)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64, align: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !1498, file: !1125, line: 128, baseType: !2555, size: 64, align: 64, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64, align: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!992, !1123, !1332, !973, !973, !965, !992}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !1498, file: !1125, line: 131, baseType: !2559, size: 64, align: 64, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64, align: 64)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{null, !2562, !1313, !1313, !965, !992}
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64, align: 64)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 96, align: 32, elements: !1233)
!2564 = distinct !DIGlobalVariable(name: "sbr_offset", scope: !0, file: !995, line: 261, type: !2565, isLocal: true, isDefinition: true, variable: [6 x [16 x i8]]* @sbr_offset)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, size: 768, align: 8, elements: !2567)
!2566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!2567 = !{!1218, !2392}
!2568 = distinct !DIGlobalVariable(name: "ceil_log2", scope: !0, file: !1001, line: 626, type: !2569, isLocal: true, isDefinition: true, variable: [6 x i8]* @ceil_log2)
!2569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, size: 48, align: 8, elements: !1256)
!2570 = distinct !DIGlobalVariable(name: "vlc_sbr_lav", scope: !0, file: !936, line: 69, type: !2571, isLocal: true, isDefinition: true, variable: [10 x i8]* @vlc_sbr_lav)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, size: 80, align: 8, elements: !1016)
!2572 = distinct !DIGlobalVariable(name: "exp2_tab", scope: !2573, file: !1056, line: 77, type: !2576, isLocal: true, isDefinition: true, variable: [2 x double]* @sbr_dequant.exp2_tab)
!2573 = distinct !DISubprogram(name: "sbr_dequant", scope: !1056, file: !1056, line: 73, type: !2574, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !1123, !992}
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2460, size: 128, align: 64, elements: !972)
!2577 = distinct !DIGlobalVariable(name: "bw_tab", scope: !2578, file: !1056, line: 199, type: !2581, isLocal: true, isDefinition: true, variable: [4 x float]* @sbr_chirp.bw_tab)
!2578 = distinct !DISubprogram(name: "sbr_chirp", scope: !1056, file: !1056, line: 195, type: !2579, isLocal: true, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{null, !1123, !2553}
!2581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 128, align: 32, elements: !1354)
!2582 = distinct !DIGlobalVariable(name: "limgain", scope: !2583, file: !1056, line: 224, type: !2581, isLocal: true, isDefinition: true, variable: [4 x float]* @sbr_gain_calc.limgain)
!2583 = distinct !DISubprogram(name: "sbr_gain_calc", scope: !1056, file: !1056, line: 219, type: !2584, isLocal: true, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{null, !1504, !1123, !2553, !1584}
!2586 = distinct !DIGlobalVariable(name: "h_smooth", scope: !2587, file: !1056, line: 285, type: !2594, isLocal: true, isDefinition: true, variable: [5 x float]* @sbr_hf_assemble.h_smooth)
!2587 = distinct !DISubprogram(name: "sbr_hf_assemble", scope: !1056, file: !1056, line: 276, type: !2588, isLocal: true, isDefinition: true, scopeLine: 280, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{null, !2590, !2592, !1123, !2553, !1584}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64, align: 64)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 4096, align: 32, elements: !975)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64, align: 64)
!2593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 2560, align: 32, elements: !967)
!2594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 160, align: 32, elements: !1152)
!2595 = !{i32 2, !"Dwarf Version", i32 4}
!2596 = !{i32 2, !"Debug Info Version", i32 3}
!2597 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2598 = !DILocation(line: 68, column: 5, scope: !1000)
!2599 = distinct !{!2599, !2598}
!2600 = !DILocation(line: 68, column: 62, scope: !2601)
!2601 = !DILexicalBlockFile(scope: !2602, file: !1001, discriminator: 1)
!2602 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 68, column: 8)
!2603 = !DILocation(line: 68, column: 102, scope: !2601)
!2604 = !DILocation(line: 68, column: 156, scope: !2601)
!2605 = !DILocation(line: 68, column: 180, scope: !2601)
!2606 = !DILocation(line: 68, column: 167, scope: !2601)
!2607 = !DILocation(line: 68, column: 202, scope: !2601)
!2608 = !DILocation(line: 68, column: 229, scope: !2601)
!2609 = !DILocation(line: 68, column: 251, scope: !2601)
!2610 = !DILocation(line: 68, column: 273, scope: !2601)
!2611 = !DILocation(line: 68, column: 110, scope: !2601)
!2612 = !DILocation(line: 68, column: 16, scope: !2601)
!2613 = !DILocation(line: 69, column: 5, scope: !1000)
!2614 = distinct !{!2614, !2613}
!2615 = !DILocation(line: 69, column: 62, scope: !2616)
!2616 = !DILexicalBlockFile(scope: !2617, file: !1001, discriminator: 1)
!2617 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 69, column: 8)
!2618 = !DILocation(line: 69, column: 102, scope: !2616)
!2619 = !DILocation(line: 69, column: 156, scope: !2616)
!2620 = !DILocation(line: 69, column: 180, scope: !2616)
!2621 = !DILocation(line: 69, column: 167, scope: !2616)
!2622 = !DILocation(line: 69, column: 202, scope: !2616)
!2623 = !DILocation(line: 69, column: 229, scope: !2616)
!2624 = !DILocation(line: 69, column: 251, scope: !2616)
!2625 = !DILocation(line: 69, column: 273, scope: !2616)
!2626 = !DILocation(line: 69, column: 110, scope: !2616)
!2627 = !DILocation(line: 69, column: 16, scope: !2616)
!2628 = !DILocation(line: 70, column: 5, scope: !1000)
!2629 = distinct !{!2629, !2628}
!2630 = !DILocation(line: 70, column: 61, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !2632, file: !1001, discriminator: 1)
!2632 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 70, column: 8)
!2633 = !DILocation(line: 70, column: 101, scope: !2631)
!2634 = !DILocation(line: 70, column: 154, scope: !2631)
!2635 = !DILocation(line: 70, column: 178, scope: !2631)
!2636 = !DILocation(line: 70, column: 165, scope: !2631)
!2637 = !DILocation(line: 70, column: 200, scope: !2631)
!2638 = !DILocation(line: 70, column: 227, scope: !2631)
!2639 = !DILocation(line: 70, column: 249, scope: !2631)
!2640 = !DILocation(line: 70, column: 271, scope: !2631)
!2641 = !DILocation(line: 70, column: 108, scope: !2631)
!2642 = !DILocation(line: 70, column: 16, scope: !2631)
!2643 = !DILocation(line: 71, column: 5, scope: !1000)
!2644 = distinct !{!2644, !2643}
!2645 = !DILocation(line: 71, column: 62, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2647, file: !1001, discriminator: 1)
!2647 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 71, column: 8)
!2648 = !DILocation(line: 71, column: 102, scope: !2646)
!2649 = !DILocation(line: 71, column: 156, scope: !2646)
!2650 = !DILocation(line: 71, column: 180, scope: !2646)
!2651 = !DILocation(line: 71, column: 167, scope: !2646)
!2652 = !DILocation(line: 71, column: 202, scope: !2646)
!2653 = !DILocation(line: 71, column: 229, scope: !2646)
!2654 = !DILocation(line: 71, column: 251, scope: !2646)
!2655 = !DILocation(line: 71, column: 273, scope: !2646)
!2656 = !DILocation(line: 71, column: 110, scope: !2646)
!2657 = !DILocation(line: 71, column: 16, scope: !2646)
!2658 = !DILocation(line: 72, column: 5, scope: !1000)
!2659 = distinct !{!2659, !2658}
!2660 = !DILocation(line: 72, column: 62, scope: !2661)
!2661 = !DILexicalBlockFile(scope: !2662, file: !1001, discriminator: 1)
!2662 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 72, column: 8)
!2663 = !DILocation(line: 72, column: 102, scope: !2661)
!2664 = !DILocation(line: 72, column: 156, scope: !2661)
!2665 = !DILocation(line: 72, column: 180, scope: !2661)
!2666 = !DILocation(line: 72, column: 167, scope: !2661)
!2667 = !DILocation(line: 72, column: 202, scope: !2661)
!2668 = !DILocation(line: 72, column: 229, scope: !2661)
!2669 = !DILocation(line: 72, column: 251, scope: !2661)
!2670 = !DILocation(line: 72, column: 273, scope: !2661)
!2671 = !DILocation(line: 72, column: 110, scope: !2661)
!2672 = !DILocation(line: 72, column: 16, scope: !2661)
!2673 = !DILocation(line: 73, column: 5, scope: !1000)
!2674 = distinct !{!2674, !2673}
!2675 = !DILocation(line: 73, column: 62, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2677, file: !1001, discriminator: 1)
!2677 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 73, column: 8)
!2678 = !DILocation(line: 73, column: 102, scope: !2676)
!2679 = !DILocation(line: 73, column: 156, scope: !2676)
!2680 = !DILocation(line: 73, column: 180, scope: !2676)
!2681 = !DILocation(line: 73, column: 167, scope: !2676)
!2682 = !DILocation(line: 73, column: 202, scope: !2676)
!2683 = !DILocation(line: 73, column: 229, scope: !2676)
!2684 = !DILocation(line: 73, column: 251, scope: !2676)
!2685 = !DILocation(line: 73, column: 273, scope: !2676)
!2686 = !DILocation(line: 73, column: 110, scope: !2676)
!2687 = !DILocation(line: 73, column: 16, scope: !2676)
!2688 = !DILocation(line: 74, column: 5, scope: !1000)
!2689 = distinct !{!2689, !2688}
!2690 = !DILocation(line: 74, column: 61, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2692, file: !1001, discriminator: 1)
!2692 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 74, column: 8)
!2693 = !DILocation(line: 74, column: 101, scope: !2691)
!2694 = !DILocation(line: 74, column: 154, scope: !2691)
!2695 = !DILocation(line: 74, column: 178, scope: !2691)
!2696 = !DILocation(line: 74, column: 165, scope: !2691)
!2697 = !DILocation(line: 74, column: 200, scope: !2691)
!2698 = !DILocation(line: 74, column: 227, scope: !2691)
!2699 = !DILocation(line: 74, column: 249, scope: !2691)
!2700 = !DILocation(line: 74, column: 271, scope: !2691)
!2701 = !DILocation(line: 74, column: 108, scope: !2691)
!2702 = !DILocation(line: 74, column: 16, scope: !2691)
!2703 = !DILocation(line: 75, column: 5, scope: !1000)
!2704 = distinct !{!2704, !2703}
!2705 = !DILocation(line: 75, column: 61, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2707, file: !1001, discriminator: 1)
!2707 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 75, column: 8)
!2708 = !DILocation(line: 75, column: 101, scope: !2706)
!2709 = !DILocation(line: 75, column: 154, scope: !2706)
!2710 = !DILocation(line: 75, column: 178, scope: !2706)
!2711 = !DILocation(line: 75, column: 165, scope: !2706)
!2712 = !DILocation(line: 75, column: 200, scope: !2706)
!2713 = !DILocation(line: 75, column: 227, scope: !2706)
!2714 = !DILocation(line: 75, column: 249, scope: !2706)
!2715 = !DILocation(line: 75, column: 271, scope: !2706)
!2716 = !DILocation(line: 75, column: 108, scope: !2706)
!2717 = !DILocation(line: 75, column: 16, scope: !2706)
!2718 = !DILocation(line: 76, column: 5, scope: !1000)
!2719 = distinct !{!2719, !2718}
!2720 = !DILocation(line: 76, column: 61, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2722, file: !1001, discriminator: 1)
!2722 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 76, column: 8)
!2723 = !DILocation(line: 76, column: 101, scope: !2721)
!2724 = !DILocation(line: 76, column: 154, scope: !2721)
!2725 = !DILocation(line: 76, column: 178, scope: !2721)
!2726 = !DILocation(line: 76, column: 165, scope: !2721)
!2727 = !DILocation(line: 76, column: 200, scope: !2721)
!2728 = !DILocation(line: 76, column: 227, scope: !2721)
!2729 = !DILocation(line: 76, column: 249, scope: !2721)
!2730 = !DILocation(line: 76, column: 271, scope: !2721)
!2731 = !DILocation(line: 76, column: 108, scope: !2721)
!2732 = !DILocation(line: 76, column: 16, scope: !2721)
!2733 = !DILocation(line: 77, column: 5, scope: !1000)
!2734 = distinct !{!2734, !2733}
!2735 = !DILocation(line: 77, column: 61, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2737, file: !1001, discriminator: 1)
!2737 = distinct !DILexicalBlock(scope: !1000, file: !1001, line: 77, column: 8)
!2738 = !DILocation(line: 77, column: 101, scope: !2736)
!2739 = !DILocation(line: 77, column: 154, scope: !2736)
!2740 = !DILocation(line: 77, column: 178, scope: !2736)
!2741 = !DILocation(line: 77, column: 165, scope: !2736)
!2742 = !DILocation(line: 77, column: 200, scope: !2736)
!2743 = !DILocation(line: 77, column: 227, scope: !2736)
!2744 = !DILocation(line: 77, column: 249, scope: !2736)
!2745 = !DILocation(line: 77, column: 271, scope: !2736)
!2746 = !DILocation(line: 77, column: 108, scope: !2736)
!2747 = !DILocation(line: 77, column: 16, scope: !2736)
!2748 = !DILocation(line: 79, column: 5, scope: !1000)
!2749 = !DILocation(line: 81, column: 5, scope: !1000)
!2750 = !DILocation(line: 82, column: 1, scope: !1000)
!2751 = distinct !DISubprogram(name: "aacsbr_tableinit", scope: !1001, file: !1001, line: 37, type: !1002, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2752 = !DILocalVariable(name: "n", scope: !2751, file: !1001, line: 39, type: !992)
!2753 = !DIExpression()
!2754 = !DILocation(line: 39, column: 9, scope: !2751)
!2755 = !DILocation(line: 40, column: 12, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2751, file: !1001, line: 40, column: 5)
!2757 = !DILocation(line: 40, column: 10, scope: !2756)
!2758 = !DILocation(line: 40, column: 17, scope: !2759)
!2759 = !DILexicalBlockFile(scope: !2760, file: !1001, discriminator: 1)
!2760 = distinct !DILexicalBlock(scope: !2756, file: !1001, line: 40, column: 5)
!2761 = !DILocation(line: 40, column: 19, scope: !2759)
!2762 = !DILocation(line: 40, column: 5, scope: !2759)
!2763 = !DILocation(line: 41, column: 62, scope: !2760)
!2764 = !DILocation(line: 41, column: 60, scope: !2760)
!2765 = !DILocation(line: 41, column: 38, scope: !2760)
!2766 = !DILocation(line: 41, column: 33, scope: !2760)
!2767 = !DILocation(line: 41, column: 31, scope: !2760)
!2768 = !DILocation(line: 41, column: 9, scope: !2760)
!2769 = !DILocation(line: 41, column: 36, scope: !2760)
!2770 = !DILocation(line: 40, column: 27, scope: !2771)
!2771 = !DILexicalBlockFile(scope: !2760, file: !1001, discriminator: 2)
!2772 = !DILocation(line: 40, column: 5, scope: !2771)
!2773 = distinct !{!2773, !2774}
!2774 = !DILocation(line: 40, column: 5, scope: !2751)
!2775 = !DILocation(line: 42, column: 31, scope: !2751)
!2776 = !DILocation(line: 42, column: 30, scope: !2751)
!2777 = !DILocation(line: 42, column: 28, scope: !2751)
!2778 = !DILocation(line: 43, column: 31, scope: !2751)
!2779 = !DILocation(line: 43, column: 30, scope: !2751)
!2780 = !DILocation(line: 43, column: 28, scope: !2751)
!2781 = !DILocation(line: 45, column: 12, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2751, file: !1001, line: 45, column: 5)
!2783 = !DILocation(line: 45, column: 10, scope: !2782)
!2784 = !DILocation(line: 45, column: 17, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !2786, file: !1001, discriminator: 1)
!2786 = distinct !DILexicalBlock(scope: !2782, file: !1001, line: 45, column: 5)
!2787 = !DILocation(line: 45, column: 19, scope: !2785)
!2788 = !DILocation(line: 45, column: 5, scope: !2785)
!2789 = !DILocation(line: 46, column: 52, scope: !2786)
!2790 = !DILocation(line: 46, column: 51, scope: !2786)
!2791 = !DILocation(line: 46, column: 32, scope: !2786)
!2792 = !DILocation(line: 46, column: 27, scope: !2786)
!2793 = !DILocation(line: 46, column: 9, scope: !2786)
!2794 = !DILocation(line: 46, column: 30, scope: !2786)
!2795 = !DILocation(line: 45, column: 27, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !2786, file: !1001, discriminator: 2)
!2797 = !DILocation(line: 45, column: 5, scope: !2796)
!2798 = distinct !{!2798, !2799}
!2799 = !DILocation(line: 45, column: 5, scope: !2751)
!2800 = !DILocation(line: 47, column: 1, scope: !2751)
!2801 = distinct !DISubprogram(name: "ff_aac_sbr_ctx_init", scope: !1001, file: !1001, line: 96, type: !2802, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{null, !1504, !1123, !992}
!2804 = !DILocalVariable(name: "ac", arg: 1, scope: !2801, file: !1001, line: 96, type: !1504)
!2805 = !DILocation(line: 96, column: 60, scope: !2801)
!2806 = !DILocalVariable(name: "sbr", arg: 2, scope: !2801, file: !1001, line: 96, type: !1123)
!2807 = !DILocation(line: 96, column: 89, scope: !2801)
!2808 = !DILocalVariable(name: "id_aac", arg: 3, scope: !2801, file: !1001, line: 96, type: !992)
!2809 = !DILocation(line: 96, column: 98, scope: !2801)
!2810 = !DILocation(line: 98, column: 8, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2801, file: !1001, line: 98, column: 8)
!2812 = !DILocation(line: 98, column: 13, scope: !2811)
!2813 = !DILocation(line: 98, column: 18, scope: !2811)
!2814 = !DILocation(line: 98, column: 8, scope: !2801)
!2815 = !DILocation(line: 99, column: 9, scope: !2811)
!2816 = !DILocation(line: 100, column: 18, scope: !2801)
!2817 = !DILocation(line: 100, column: 23, scope: !2801)
!2818 = !DILocation(line: 100, column: 5, scope: !2801)
!2819 = !DILocation(line: 100, column: 10, scope: !2801)
!2820 = !DILocation(line: 100, column: 16, scope: !2801)
!2821 = !DILocation(line: 101, column: 19, scope: !2801)
!2822 = !DILocation(line: 101, column: 5, scope: !2801)
!2823 = !DILocation(line: 101, column: 10, scope: !2801)
!2824 = !DILocation(line: 101, column: 17, scope: !2801)
!2825 = !DILocation(line: 102, column: 17, scope: !2801)
!2826 = !DILocation(line: 102, column: 5, scope: !2801)
!2827 = !DILocation(line: 103, column: 5, scope: !2801)
!2828 = !DILocation(line: 103, column: 10, scope: !2801)
!2829 = !DILocation(line: 103, column: 18, scope: !2801)
!2830 = !DILocation(line: 103, column: 54, scope: !2801)
!2831 = !DILocation(line: 104, column: 5, scope: !2801)
!2832 = !DILocation(line: 104, column: 10, scope: !2801)
!2833 = !DILocation(line: 104, column: 18, scope: !2801)
!2834 = !DILocation(line: 104, column: 54, scope: !2801)
!2835 = !DILocation(line: 108, column: 19, scope: !2801)
!2836 = !DILocation(line: 108, column: 24, scope: !2801)
!2837 = !DILocation(line: 108, column: 5, scope: !2801)
!2838 = !DILocation(line: 109, column: 19, scope: !2801)
!2839 = !DILocation(line: 109, column: 24, scope: !2801)
!2840 = !DILocation(line: 109, column: 5, scope: !2801)
!2841 = !DILocation(line: 110, column: 21, scope: !2801)
!2842 = !DILocation(line: 110, column: 26, scope: !2801)
!2843 = !DILocation(line: 110, column: 5, scope: !2801)
!2844 = !DILocation(line: 111, column: 21, scope: !2801)
!2845 = !DILocation(line: 111, column: 26, scope: !2801)
!2846 = !DILocation(line: 111, column: 5, scope: !2801)
!2847 = !DILocation(line: 112, column: 27, scope: !2801)
!2848 = !DILocation(line: 112, column: 32, scope: !2801)
!2849 = !DILocation(line: 112, column: 5, scope: !2801)
!2850 = !DILocation(line: 113, column: 1, scope: !2801)
!2851 = !DILocation(line: 113, column: 1, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !2801, file: !1001, discriminator: 1)
!2853 = distinct !DISubprogram(name: "sbr_turnoff", scope: !1001, file: !1001, line: 85, type: !1121, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2854 = !DILocalVariable(name: "sbr", arg: 1, scope: !2853, file: !1001, line: 85, type: !1123)
!2855 = !DILocation(line: 85, column: 50, scope: !2853)
!2856 = !DILocation(line: 86, column: 5, scope: !2853)
!2857 = !DILocation(line: 86, column: 10, scope: !2853)
!2858 = !DILocation(line: 86, column: 16, scope: !2853)
!2859 = !DILocation(line: 87, column: 5, scope: !2853)
!2860 = !DILocation(line: 87, column: 10, scope: !2853)
!2861 = !DILocation(line: 87, column: 28, scope: !2853)
!2862 = !DILocation(line: 89, column: 5, scope: !2853)
!2863 = !DILocation(line: 89, column: 10, scope: !2853)
!2864 = !DILocation(line: 89, column: 16, scope: !2853)
!2865 = !DILocation(line: 90, column: 5, scope: !2853)
!2866 = !DILocation(line: 90, column: 10, scope: !2853)
!2867 = !DILocation(line: 90, column: 15, scope: !2853)
!2868 = !DILocation(line: 92, column: 27, scope: !2853)
!2869 = !DILocation(line: 92, column: 32, scope: !2853)
!2870 = !DILocation(line: 92, column: 40, scope: !2853)
!2871 = !DILocation(line: 92, column: 47, scope: !2853)
!2872 = !DILocation(line: 92, column: 5, scope: !2853)
!2873 = !DILocation(line: 92, column: 10, scope: !2853)
!2874 = !DILocation(line: 92, column: 18, scope: !2853)
!2875 = !DILocation(line: 92, column: 25, scope: !2853)
!2876 = !DILocation(line: 93, column: 13, scope: !2853)
!2877 = !DILocation(line: 93, column: 18, scope: !2853)
!2878 = !DILocation(line: 93, column: 5, scope: !2853)
!2879 = !DILocation(line: 94, column: 1, scope: !2853)
!2880 = distinct !DISubprogram(name: "aacsbr_func_ptr_init", scope: !1001, file: !1001, line: 1572, type: !2881, isLocal: true, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{null, !2883}
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!2884 = !DILocalVariable(name: "c", arg: 1, scope: !2880, file: !1001, line: 1572, type: !2883)
!2885 = !DILocation(line: 1572, column: 49, scope: !2880)
!2886 = !DILocation(line: 1574, column: 5, scope: !2880)
!2887 = !DILocation(line: 1574, column: 8, scope: !2880)
!2888 = !DILocation(line: 1574, column: 19, scope: !2880)
!2889 = !DILocation(line: 1575, column: 5, scope: !2880)
!2890 = !DILocation(line: 1575, column: 8, scope: !2880)
!2891 = !DILocation(line: 1575, column: 24, scope: !2880)
!2892 = !DILocation(line: 1576, column: 5, scope: !2880)
!2893 = !DILocation(line: 1576, column: 8, scope: !2880)
!2894 = !DILocation(line: 1576, column: 18, scope: !2880)
!2895 = !DILocation(line: 1577, column: 5, scope: !2880)
!2896 = !DILocation(line: 1577, column: 8, scope: !2880)
!2897 = !DILocation(line: 1577, column: 30, scope: !2880)
!2898 = !DILocation(line: 1583, column: 1, scope: !2880)
!2899 = distinct !DISubprogram(name: "ff_aac_sbr_ctx_close", scope: !1001, file: !1001, line: 115, type: !1121, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2900 = !DILocalVariable(name: "sbr", arg: 1, scope: !2899, file: !1001, line: 115, type: !1123)
!2901 = !DILocation(line: 115, column: 74, scope: !2899)
!2902 = !DILocation(line: 117, column: 18, scope: !2899)
!2903 = !DILocation(line: 117, column: 23, scope: !2899)
!2904 = !DILocation(line: 117, column: 5, scope: !2899)
!2905 = !DILocation(line: 118, column: 18, scope: !2899)
!2906 = !DILocation(line: 118, column: 23, scope: !2899)
!2907 = !DILocation(line: 118, column: 5, scope: !2899)
!2908 = !DILocation(line: 119, column: 1, scope: !2899)
!2909 = distinct !DISubprogram(name: "ff_decode_sbr_extension", scope: !1001, file: !1001, line: 1115, type: !2910, isLocal: false, isDefinition: true, scopeLine: 1117, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!992, !1504, !1123, !2912, !992, !992, !992}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64, align: 64)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2914, line: 70, baseType: !2915)
!2914 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2914, line: 61, size: 256, align: 64, elements: !2916)
!2916 = !{!2917, !2918, !2919, !2920, !2921}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2915, file: !2914, line: 62, baseType: !1626, size: 64, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2915, file: !2914, line: 62, baseType: !1626, size: 64, align: 64, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2915, file: !2914, line: 67, baseType: !992, size: 32, align: 32, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2915, file: !2914, line: 68, baseType: !992, size: 32, align: 32, offset: 160)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2915, file: !2914, line: 69, baseType: !992, size: 32, align: 32, offset: 192)
!2922 = !DILocalVariable(name: "ac", arg: 1, scope: !2909, file: !1001, line: 1115, type: !1504)
!2923 = !DILocation(line: 1115, column: 41, scope: !2909)
!2924 = !DILocalVariable(name: "sbr", arg: 2, scope: !2909, file: !1001, line: 1115, type: !1123)
!2925 = !DILocation(line: 1115, column: 70, scope: !2909)
!2926 = !DILocalVariable(name: "gb_host", arg: 3, scope: !2909, file: !1001, line: 1116, type: !2912)
!2927 = !DILocation(line: 1116, column: 44, scope: !2909)
!2928 = !DILocalVariable(name: "crc", arg: 4, scope: !2909, file: !1001, line: 1116, type: !992)
!2929 = !DILocation(line: 1116, column: 57, scope: !2909)
!2930 = !DILocalVariable(name: "cnt", arg: 5, scope: !2909, file: !1001, line: 1116, type: !992)
!2931 = !DILocation(line: 1116, column: 66, scope: !2909)
!2932 = !DILocalVariable(name: "id_aac", arg: 6, scope: !2909, file: !1001, line: 1116, type: !992)
!2933 = !DILocation(line: 1116, column: 75, scope: !2909)
!2934 = !DILocalVariable(name: "num_sbr_bits", scope: !2909, file: !1001, line: 1118, type: !985)
!2935 = !DILocation(line: 1118, column: 18, scope: !2909)
!2936 = !DILocalVariable(name: "num_align_bits", scope: !2909, file: !1001, line: 1118, type: !985)
!2937 = !DILocation(line: 1118, column: 36, scope: !2909)
!2938 = !DILocalVariable(name: "bytes_read", scope: !2909, file: !1001, line: 1119, type: !985)
!2939 = !DILocation(line: 1119, column: 14, scope: !2909)
!2940 = !DILocalVariable(name: "gbc", scope: !2909, file: !1001, line: 1120, type: !2913)
!2941 = !DILocation(line: 1120, column: 19, scope: !2909)
!2942 = !DILocation(line: 1120, column: 26, scope: !2909)
!2943 = !DILocation(line: 1120, column: 25, scope: !2909)
!2944 = !DILocalVariable(name: "gb", scope: !2909, file: !1001, line: 1120, type: !2912)
!2945 = !DILocation(line: 1120, column: 36, scope: !2909)
!2946 = !DILocation(line: 1121, column: 20, scope: !2909)
!2947 = !DILocation(line: 1121, column: 29, scope: !2909)
!2948 = !DILocation(line: 1121, column: 32, scope: !2909)
!2949 = !DILocation(line: 1121, column: 35, scope: !2909)
!2950 = !DILocation(line: 1121, column: 5, scope: !2909)
!2951 = !DILocation(line: 1123, column: 5, scope: !2909)
!2952 = !DILocation(line: 1123, column: 10, scope: !2909)
!2953 = !DILocation(line: 1123, column: 16, scope: !2909)
!2954 = !DILocation(line: 1125, column: 10, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1125, column: 9)
!2956 = !DILocation(line: 1125, column: 15, scope: !2955)
!2957 = !DILocation(line: 1125, column: 9, scope: !2909)
!2958 = !DILocation(line: 1126, column: 32, scope: !2955)
!2959 = !DILocation(line: 1126, column: 36, scope: !2955)
!2960 = !DILocation(line: 1126, column: 42, scope: !2955)
!2961 = !DILocation(line: 1126, column: 47, scope: !2955)
!2962 = !DILocation(line: 1126, column: 30, scope: !2955)
!2963 = !DILocation(line: 1126, column: 9, scope: !2955)
!2964 = !DILocation(line: 1126, column: 14, scope: !2955)
!2965 = !DILocation(line: 1126, column: 26, scope: !2955)
!2966 = !DILocation(line: 1127, column: 10, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1127, column: 9)
!2968 = !DILocation(line: 1127, column: 14, scope: !2967)
!2969 = !DILocation(line: 1127, column: 20, scope: !2967)
!2970 = !DILocation(line: 1127, column: 25, scope: !2967)
!2971 = !DILocation(line: 1127, column: 9, scope: !2909)
!2972 = !DILocation(line: 1128, column: 46, scope: !2967)
!2973 = !DILocation(line: 1128, column: 50, scope: !2967)
!2974 = !DILocation(line: 1128, column: 56, scope: !2967)
!2975 = !DILocation(line: 1128, column: 61, scope: !2967)
!2976 = !DILocation(line: 1128, column: 44, scope: !2967)
!2977 = !DILocation(line: 1128, column: 9, scope: !2967)
!2978 = !DILocation(line: 1128, column: 13, scope: !2967)
!2979 = !DILocation(line: 1128, column: 19, scope: !2967)
!2980 = !DILocation(line: 1128, column: 24, scope: !2967)
!2981 = !DILocation(line: 1128, column: 40, scope: !2967)
!2982 = !DILocation(line: 1130, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1130, column: 9)
!2984 = !DILocation(line: 1130, column: 9, scope: !2909)
!2985 = !DILocation(line: 1131, column: 19, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2983, file: !1001, line: 1130, column: 14)
!2987 = !DILocation(line: 1131, column: 9, scope: !2986)
!2988 = !DILocation(line: 1132, column: 22, scope: !2986)
!2989 = !DILocation(line: 1133, column: 5, scope: !2986)
!2990 = !DILocation(line: 1136, column: 18, scope: !2909)
!2991 = !DILocation(line: 1136, column: 23, scope: !2909)
!2992 = !DILocation(line: 1136, column: 5, scope: !2909)
!2993 = !DILocation(line: 1136, column: 10, scope: !2909)
!2994 = !DILocation(line: 1136, column: 16, scope: !2909)
!2995 = !DILocation(line: 1137, column: 17, scope: !2909)
!2996 = !DILocation(line: 1137, column: 22, scope: !2909)
!2997 = !DILocation(line: 1137, column: 5, scope: !2909)
!2998 = !DILocation(line: 1137, column: 10, scope: !2909)
!2999 = !DILocation(line: 1137, column: 15, scope: !2909)
!3000 = !DILocation(line: 1138, column: 5, scope: !2909)
!3001 = !DILocation(line: 1138, column: 10, scope: !2909)
!3002 = !DILocation(line: 1138, column: 26, scope: !2909)
!3003 = !DILocation(line: 1140, column: 17, scope: !2909)
!3004 = !DILocation(line: 1141, column: 19, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1141, column: 9)
!3006 = !DILocation(line: 1141, column: 9, scope: !3005)
!3007 = !DILocation(line: 1141, column: 9, scope: !2909)
!3008 = !DILocation(line: 1142, column: 41, scope: !3005)
!3009 = !DILocation(line: 1142, column: 46, scope: !3005)
!3010 = !DILocation(line: 1142, column: 25, scope: !3005)
!3011 = !DILocation(line: 1142, column: 22, scope: !3005)
!3012 = !DILocation(line: 1142, column: 9, scope: !3005)
!3013 = !DILocation(line: 1144, column: 9, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1144, column: 9)
!3015 = !DILocation(line: 1144, column: 14, scope: !3014)
!3016 = !DILocation(line: 1144, column: 9, scope: !2909)
!3017 = !DILocation(line: 1145, column: 19, scope: !3014)
!3018 = !DILocation(line: 1145, column: 23, scope: !3014)
!3019 = !DILocation(line: 1145, column: 9, scope: !3014)
!3020 = !DILocation(line: 1147, column: 9, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1147, column: 9)
!3022 = !DILocation(line: 1147, column: 14, scope: !3021)
!3023 = !DILocation(line: 1147, column: 9, scope: !2909)
!3024 = !DILocation(line: 1148, column: 39, scope: !3021)
!3025 = !DILocation(line: 1148, column: 43, scope: !3021)
!3026 = !DILocation(line: 1148, column: 48, scope: !3021)
!3027 = !DILocation(line: 1148, column: 52, scope: !3021)
!3028 = !DILocation(line: 1148, column: 25, scope: !3021)
!3029 = !DILocation(line: 1148, column: 22, scope: !3021)
!3030 = !DILocation(line: 1148, column: 9, scope: !3021)
!3031 = !DILocation(line: 1150, column: 24, scope: !2909)
!3032 = !DILocation(line: 1150, column: 28, scope: !2909)
!3033 = !DILocation(line: 1150, column: 34, scope: !2909)
!3034 = !DILocation(line: 1150, column: 40, scope: !2909)
!3035 = !DILocation(line: 1150, column: 38, scope: !2909)
!3036 = !DILocation(line: 1150, column: 54, scope: !2909)
!3037 = !DILocation(line: 1150, column: 20, scope: !2909)
!3038 = !DILocation(line: 1151, column: 20, scope: !2909)
!3039 = !DILocation(line: 1151, column: 35, scope: !2909)
!3040 = !DILocation(line: 1151, column: 33, scope: !2909)
!3041 = !DILocation(line: 1151, column: 50, scope: !2909)
!3042 = !DILocation(line: 1151, column: 55, scope: !2909)
!3043 = !DILocation(line: 1151, column: 16, scope: !2909)
!3044 = !DILocation(line: 1153, column: 9, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !2909, file: !1001, line: 1153, column: 9)
!3046 = !DILocation(line: 1153, column: 22, scope: !3045)
!3047 = !DILocation(line: 1153, column: 20, scope: !3045)
!3048 = !DILocation(line: 1153, column: 9, scope: !2909)
!3049 = !DILocation(line: 1154, column: 16, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !1001, line: 1153, column: 27)
!3051 = !DILocation(line: 1154, column: 20, scope: !3050)
!3052 = !DILocation(line: 1155, column: 69, scope: !3050)
!3053 = !DILocation(line: 1155, column: 74, scope: !3050)
!3054 = !DILocation(line: 1154, column: 9, scope: !3050)
!3055 = !DILocation(line: 1156, column: 21, scope: !3050)
!3056 = !DILocation(line: 1156, column: 9, scope: !3050)
!3057 = !DILocation(line: 1157, column: 5, scope: !3050)
!3058 = !DILocation(line: 1158, column: 12, scope: !2909)
!3059 = !DILocation(line: 1158, column: 5, scope: !2909)
!3060 = distinct !DISubprogram(name: "skip_bits_long", scope: !2914, file: !2914, line: 293, type: !3061, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{null, !2912, !992}
!3063 = !DILocalVariable(name: "a", arg: 1, scope: !3064, file: !3065, line: 127, type: !992)
!3064 = distinct !DISubprogram(name: "av_clip_c", scope: !3065, file: !3065, line: 127, type: !3066, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3065 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!992, !992, !992, !992}
!3068 = !DILocation(line: 127, column: 87, scope: !3064, inlinedAt: !3069)
!3069 = distinct !DILocation(line: 301, column: 17, scope: !3060)
!3070 = !DILocalVariable(name: "amin", arg: 2, scope: !3064, file: !3065, line: 127, type: !992)
!3071 = !DILocation(line: 127, column: 94, scope: !3064, inlinedAt: !3069)
!3072 = !DILocalVariable(name: "amax", arg: 3, scope: !3064, file: !3065, line: 127, type: !992)
!3073 = !DILocation(line: 127, column: 104, scope: !3064, inlinedAt: !3069)
!3074 = !DILocalVariable(name: "s", arg: 1, scope: !3060, file: !2914, line: 293, type: !2912)
!3075 = !DILocation(line: 293, column: 50, scope: !3060)
!3076 = !DILocalVariable(name: "n", arg: 2, scope: !3060, file: !2914, line: 293, type: !992)
!3077 = !DILocation(line: 293, column: 57, scope: !3060)
!3078 = !DILocation(line: 301, column: 27, scope: !3060)
!3079 = !DILocation(line: 301, column: 31, scope: !3060)
!3080 = !DILocation(line: 301, column: 34, scope: !3060)
!3081 = !DILocation(line: 301, column: 30, scope: !3060)
!3082 = !DILocation(line: 301, column: 41, scope: !3060)
!3083 = !DILocation(line: 301, column: 44, scope: !3060)
!3084 = !DILocation(line: 301, column: 65, scope: !3060)
!3085 = !DILocation(line: 301, column: 68, scope: !3060)
!3086 = !DILocation(line: 301, column: 63, scope: !3060)
!3087 = !DILocation(line: 301, column: 17, scope: !3060)
!3088 = !DILocation(line: 132, column: 9, scope: !3089, inlinedAt: !3069)
!3089 = distinct !DILexicalBlock(scope: !3064, file: !3065, line: 132, column: 9)
!3090 = !DILocation(line: 132, column: 13, scope: !3089, inlinedAt: !3069)
!3091 = !DILocation(line: 132, column: 11, scope: !3089, inlinedAt: !3069)
!3092 = !DILocation(line: 132, column: 9, scope: !3064, inlinedAt: !3069)
!3093 = !DILocation(line: 132, column: 26, scope: !3094, inlinedAt: !3069)
!3094 = !DILexicalBlockFile(scope: !3089, file: !3065, discriminator: 1)
!3095 = !DILocation(line: 132, column: 19, scope: !3094, inlinedAt: !3069)
!3096 = !DILocation(line: 133, column: 14, scope: !3097, inlinedAt: !3069)
!3097 = distinct !DILexicalBlock(scope: !3089, file: !3065, line: 133, column: 14)
!3098 = !DILocation(line: 133, column: 18, scope: !3097, inlinedAt: !3069)
!3099 = !DILocation(line: 133, column: 16, scope: !3097, inlinedAt: !3069)
!3100 = !DILocation(line: 133, column: 14, scope: !3089, inlinedAt: !3069)
!3101 = !DILocation(line: 133, column: 31, scope: !3102, inlinedAt: !3069)
!3102 = !DILexicalBlockFile(scope: !3097, file: !3065, discriminator: 1)
!3103 = !DILocation(line: 133, column: 24, scope: !3102, inlinedAt: !3069)
!3104 = !DILocation(line: 134, column: 17, scope: !3097, inlinedAt: !3069)
!3105 = !DILocation(line: 134, column: 10, scope: !3097, inlinedAt: !3069)
!3106 = !DILocation(line: 135, column: 1, scope: !3064, inlinedAt: !3069)
!3107 = !DILocation(line: 301, column: 5, scope: !3060)
!3108 = !DILocation(line: 301, column: 8, scope: !3060)
!3109 = !DILocation(line: 301, column: 14, scope: !3060)
!3110 = !DILocation(line: 304, column: 1, scope: !3060)
!3111 = distinct !DISubprogram(name: "skip_bits", scope: !2914, file: !2914, line: 460, type: !3061, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3112 = !DILocalVariable(name: "s", arg: 1, scope: !3111, file: !2914, line: 460, type: !2912)
!3113 = !DILocation(line: 460, column: 45, scope: !3111)
!3114 = !DILocalVariable(name: "n", arg: 2, scope: !3111, file: !2914, line: 460, type: !992)
!3115 = !DILocation(line: 460, column: 52, scope: !3111)
!3116 = !DILocalVariable(name: "re_index", scope: !3111, file: !2914, line: 481, type: !985)
!3117 = !DILocation(line: 481, column: 18, scope: !3111)
!3118 = !DILocation(line: 481, column: 30, scope: !3111)
!3119 = !DILocation(line: 481, column: 34, scope: !3111)
!3120 = !DILocalVariable(name: "re_cache", scope: !3111, file: !2914, line: 481, type: !985)
!3121 = !DILocation(line: 481, column: 78, scope: !3111)
!3122 = !DILocalVariable(name: "re_size_plus8", scope: !3111, file: !2914, line: 481, type: !985)
!3123 = !DILocation(line: 481, column: 101, scope: !3111)
!3124 = !DILocation(line: 481, column: 118, scope: !3111)
!3125 = !DILocation(line: 481, column: 122, scope: !3111)
!3126 = !DILocation(line: 482, column: 18, scope: !3111)
!3127 = !DILocation(line: 482, column: 36, scope: !3111)
!3128 = !DILocation(line: 482, column: 48, scope: !3111)
!3129 = !DILocation(line: 482, column: 45, scope: !3111)
!3130 = !DILocation(line: 482, column: 33, scope: !3111)
!3131 = !DILocation(line: 482, column: 17, scope: !3111)
!3132 = !DILocation(line: 482, column: 55, scope: !3133)
!3133 = !DILexicalBlockFile(scope: !3111, file: !2914, discriminator: 1)
!3134 = !DILocation(line: 482, column: 67, scope: !3133)
!3135 = !DILocation(line: 482, column: 64, scope: !3133)
!3136 = !DILocation(line: 482, column: 17, scope: !3133)
!3137 = !DILocation(line: 482, column: 74, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3111, file: !2914, discriminator: 2)
!3139 = !DILocation(line: 482, column: 17, scope: !3138)
!3140 = !DILocation(line: 482, column: 17, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3111, file: !2914, discriminator: 3)
!3142 = !DILocation(line: 482, column: 14, scope: !3141)
!3143 = !DILocation(line: 483, column: 18, scope: !3111)
!3144 = !DILocation(line: 483, column: 6, scope: !3111)
!3145 = !DILocation(line: 483, column: 10, scope: !3111)
!3146 = !DILocation(line: 483, column: 16, scope: !3111)
!3147 = !DILocation(line: 485, column: 1, scope: !3111)
!3148 = distinct !DISubprogram(name: "get_bits1", scope: !2914, file: !2914, line: 487, type: !3149, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!985, !2912}
!3151 = !DILocalVariable(name: "s", arg: 1, scope: !3148, file: !2914, line: 487, type: !2912)
!3152 = !DILocation(line: 487, column: 53, scope: !3148)
!3153 = !DILocalVariable(name: "index", scope: !3148, file: !2914, line: 499, type: !985)
!3154 = !DILocation(line: 499, column: 18, scope: !3148)
!3155 = !DILocation(line: 499, column: 26, scope: !3148)
!3156 = !DILocation(line: 499, column: 29, scope: !3148)
!3157 = !DILocalVariable(name: "result", scope: !3148, file: !2914, line: 500, type: !986)
!3158 = !DILocation(line: 500, column: 13, scope: !3148)
!3159 = !DILocation(line: 500, column: 32, scope: !3148)
!3160 = !DILocation(line: 500, column: 38, scope: !3148)
!3161 = !DILocation(line: 500, column: 22, scope: !3148)
!3162 = !DILocation(line: 500, column: 25, scope: !3148)
!3163 = !DILocation(line: 505, column: 16, scope: !3148)
!3164 = !DILocation(line: 505, column: 22, scope: !3148)
!3165 = !DILocation(line: 505, column: 12, scope: !3148)
!3166 = !DILocation(line: 506, column: 12, scope: !3148)
!3167 = !DILocation(line: 509, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3148, file: !2914, line: 509, column: 9)
!3169 = !DILocation(line: 509, column: 12, scope: !3168)
!3170 = !DILocation(line: 509, column: 20, scope: !3168)
!3171 = !DILocation(line: 509, column: 23, scope: !3168)
!3172 = !DILocation(line: 509, column: 18, scope: !3168)
!3173 = !DILocation(line: 509, column: 9, scope: !3148)
!3174 = !DILocation(line: 511, column: 14, scope: !3168)
!3175 = !DILocation(line: 511, column: 9, scope: !3168)
!3176 = !DILocation(line: 512, column: 16, scope: !3148)
!3177 = !DILocation(line: 512, column: 5, scope: !3148)
!3178 = !DILocation(line: 512, column: 8, scope: !3148)
!3179 = !DILocation(line: 512, column: 14, scope: !3148)
!3180 = !DILocation(line: 514, column: 12, scope: !3148)
!3181 = !DILocation(line: 514, column: 5, scope: !3148)
!3182 = distinct !DISubprogram(name: "read_sbr_header", scope: !1001, file: !1001, line: 187, type: !3183, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!985, !1123, !2912}
!3185 = !DILocalVariable(name: "sbr", arg: 1, scope: !3182, file: !1001, line: 187, type: !1123)
!3186 = !DILocation(line: 187, column: 62, scope: !3182)
!3187 = !DILocalVariable(name: "gb", arg: 2, scope: !3182, file: !1001, line: 187, type: !2912)
!3188 = !DILocation(line: 187, column: 82, scope: !3182)
!3189 = !DILocalVariable(name: "cnt", scope: !3182, file: !1001, line: 189, type: !985)
!3190 = !DILocation(line: 189, column: 18, scope: !3182)
!3191 = !DILocation(line: 189, column: 39, scope: !3182)
!3192 = !DILocation(line: 189, column: 24, scope: !3182)
!3193 = !DILocalVariable(name: "bs_header_extra_1", scope: !3182, file: !1001, line: 190, type: !986)
!3194 = !DILocation(line: 190, column: 13, scope: !3182)
!3195 = !DILocalVariable(name: "bs_header_extra_2", scope: !3182, file: !1001, line: 191, type: !986)
!3196 = !DILocation(line: 191, column: 13, scope: !3182)
!3197 = !DILocalVariable(name: "old_bs_limiter_bands", scope: !3182, file: !1001, line: 192, type: !992)
!3198 = !DILocation(line: 192, column: 9, scope: !3182)
!3199 = !DILocation(line: 192, column: 32, scope: !3182)
!3200 = !DILocation(line: 192, column: 37, scope: !3182)
!3201 = !DILocalVariable(name: "old_spectrum_params", scope: !3182, file: !1001, line: 193, type: !1134)
!3202 = !DILocation(line: 193, column: 24, scope: !3182)
!3203 = !DILocation(line: 195, column: 5, scope: !3182)
!3204 = !DILocation(line: 195, column: 10, scope: !3182)
!3205 = !DILocation(line: 195, column: 16, scope: !3182)
!3206 = !DILocation(line: 196, column: 5, scope: !3182)
!3207 = !DILocation(line: 196, column: 10, scope: !3182)
!3208 = !DILocation(line: 196, column: 28, scope: !3182)
!3209 = !DILocation(line: 199, column: 5, scope: !3182)
!3210 = !DILocation(line: 199, column: 35, scope: !3182)
!3211 = !DILocation(line: 199, column: 40, scope: !3182)
!3212 = !DILocation(line: 201, column: 40, scope: !3182)
!3213 = !DILocation(line: 201, column: 30, scope: !3182)
!3214 = !DILocation(line: 201, column: 5, scope: !3182)
!3215 = !DILocation(line: 201, column: 10, scope: !3182)
!3216 = !DILocation(line: 201, column: 28, scope: !3182)
!3217 = !DILocation(line: 202, column: 51, scope: !3182)
!3218 = !DILocation(line: 202, column: 42, scope: !3182)
!3219 = !DILocation(line: 202, column: 5, scope: !3182)
!3220 = !DILocation(line: 202, column: 10, scope: !3182)
!3221 = !DILocation(line: 202, column: 26, scope: !3182)
!3222 = !DILocation(line: 202, column: 40, scope: !3182)
!3223 = !DILocation(line: 203, column: 50, scope: !3182)
!3224 = !DILocation(line: 203, column: 41, scope: !3182)
!3225 = !DILocation(line: 203, column: 5, scope: !3182)
!3226 = !DILocation(line: 203, column: 10, scope: !3182)
!3227 = !DILocation(line: 203, column: 26, scope: !3182)
!3228 = !DILocation(line: 203, column: 39, scope: !3182)
!3229 = !DILocation(line: 204, column: 51, scope: !3182)
!3230 = !DILocation(line: 204, column: 42, scope: !3182)
!3231 = !DILocation(line: 204, column: 5, scope: !3182)
!3232 = !DILocation(line: 204, column: 10, scope: !3182)
!3233 = !DILocation(line: 204, column: 26, scope: !3182)
!3234 = !DILocation(line: 204, column: 40, scope: !3182)
!3235 = !DILocation(line: 205, column: 53, scope: !3182)
!3236 = !DILocation(line: 205, column: 43, scope: !3182)
!3237 = !DILocation(line: 207, column: 35, scope: !3182)
!3238 = !DILocation(line: 207, column: 25, scope: !3182)
!3239 = !DILocation(line: 207, column: 23, scope: !3182)
!3240 = !DILocation(line: 208, column: 35, scope: !3182)
!3241 = !DILocation(line: 208, column: 25, scope: !3182)
!3242 = !DILocation(line: 208, column: 23, scope: !3182)
!3243 = !DILocation(line: 210, column: 9, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3182, file: !1001, line: 210, column: 9)
!3245 = !DILocation(line: 210, column: 9, scope: !3182)
!3246 = !DILocation(line: 211, column: 55, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3244, file: !1001, line: 210, column: 28)
!3248 = !DILocation(line: 211, column: 46, scope: !3247)
!3249 = !DILocation(line: 211, column: 9, scope: !3247)
!3250 = !DILocation(line: 211, column: 14, scope: !3247)
!3251 = !DILocation(line: 211, column: 30, scope: !3247)
!3252 = !DILocation(line: 211, column: 44, scope: !3247)
!3253 = !DILocation(line: 212, column: 57, scope: !3247)
!3254 = !DILocation(line: 212, column: 47, scope: !3247)
!3255 = !DILocation(line: 212, column: 9, scope: !3247)
!3256 = !DILocation(line: 212, column: 14, scope: !3247)
!3257 = !DILocation(line: 212, column: 30, scope: !3247)
!3258 = !DILocation(line: 212, column: 45, scope: !3247)
!3259 = !DILocation(line: 213, column: 56, scope: !3247)
!3260 = !DILocation(line: 213, column: 47, scope: !3247)
!3261 = !DILocation(line: 213, column: 9, scope: !3247)
!3262 = !DILocation(line: 213, column: 14, scope: !3247)
!3263 = !DILocation(line: 213, column: 30, scope: !3247)
!3264 = !DILocation(line: 213, column: 45, scope: !3247)
!3265 = !DILocation(line: 214, column: 5, scope: !3247)
!3266 = !DILocation(line: 215, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3244, file: !1001, line: 214, column: 12)
!3268 = !DILocation(line: 215, column: 14, scope: !3267)
!3269 = !DILocation(line: 215, column: 30, scope: !3267)
!3270 = !DILocation(line: 215, column: 44, scope: !3267)
!3271 = !DILocation(line: 216, column: 9, scope: !3267)
!3272 = !DILocation(line: 216, column: 14, scope: !3267)
!3273 = !DILocation(line: 216, column: 30, scope: !3267)
!3274 = !DILocation(line: 216, column: 45, scope: !3267)
!3275 = !DILocation(line: 217, column: 9, scope: !3267)
!3276 = !DILocation(line: 217, column: 14, scope: !3267)
!3277 = !DILocation(line: 217, column: 30, scope: !3267)
!3278 = !DILocation(line: 217, column: 45, scope: !3267)
!3279 = !DILocation(line: 221, column: 16, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3182, file: !1001, line: 221, column: 9)
!3281 = !DILocation(line: 221, column: 39, scope: !3280)
!3282 = !DILocation(line: 221, column: 44, scope: !3280)
!3283 = !DILocation(line: 221, column: 38, scope: !3280)
!3284 = !DILocation(line: 221, column: 9, scope: !3280)
!3285 = !DILocation(line: 221, column: 9, scope: !3182)
!3286 = !DILocation(line: 222, column: 9, scope: !3280)
!3287 = !DILocation(line: 222, column: 14, scope: !3280)
!3288 = !DILocation(line: 222, column: 20, scope: !3280)
!3289 = !DILocation(line: 224, column: 9, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3182, file: !1001, line: 224, column: 9)
!3291 = !DILocation(line: 224, column: 9, scope: !3182)
!3292 = !DILocation(line: 225, column: 42, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3290, file: !1001, line: 224, column: 28)
!3294 = !DILocation(line: 225, column: 33, scope: !3293)
!3295 = !DILocation(line: 225, column: 9, scope: !3293)
!3296 = !DILocation(line: 225, column: 14, scope: !3293)
!3297 = !DILocation(line: 225, column: 31, scope: !3293)
!3298 = !DILocation(line: 226, column: 42, scope: !3293)
!3299 = !DILocation(line: 226, column: 33, scope: !3293)
!3300 = !DILocation(line: 226, column: 9, scope: !3293)
!3301 = !DILocation(line: 226, column: 14, scope: !3293)
!3302 = !DILocation(line: 226, column: 31, scope: !3293)
!3303 = !DILocation(line: 227, column: 43, scope: !3293)
!3304 = !DILocation(line: 227, column: 33, scope: !3293)
!3305 = !DILocation(line: 227, column: 9, scope: !3293)
!3306 = !DILocation(line: 227, column: 14, scope: !3293)
!3307 = !DILocation(line: 227, column: 31, scope: !3293)
!3308 = !DILocation(line: 228, column: 44, scope: !3293)
!3309 = !DILocation(line: 228, column: 34, scope: !3293)
!3310 = !DILocation(line: 228, column: 9, scope: !3293)
!3311 = !DILocation(line: 228, column: 14, scope: !3293)
!3312 = !DILocation(line: 228, column: 32, scope: !3293)
!3313 = !DILocation(line: 229, column: 5, scope: !3293)
!3314 = !DILocation(line: 230, column: 9, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3290, file: !1001, line: 229, column: 12)
!3316 = !DILocation(line: 230, column: 14, scope: !3315)
!3317 = !DILocation(line: 230, column: 31, scope: !3315)
!3318 = !DILocation(line: 231, column: 9, scope: !3315)
!3319 = !DILocation(line: 231, column: 14, scope: !3315)
!3320 = !DILocation(line: 231, column: 31, scope: !3315)
!3321 = !DILocation(line: 232, column: 9, scope: !3315)
!3322 = !DILocation(line: 232, column: 14, scope: !3315)
!3323 = !DILocation(line: 232, column: 31, scope: !3315)
!3324 = !DILocation(line: 233, column: 9, scope: !3315)
!3325 = !DILocation(line: 233, column: 14, scope: !3315)
!3326 = !DILocation(line: 233, column: 32, scope: !3315)
!3327 = !DILocation(line: 236, column: 9, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3182, file: !1001, line: 236, column: 9)
!3329 = !DILocation(line: 236, column: 14, scope: !3328)
!3330 = !DILocation(line: 236, column: 34, scope: !3328)
!3331 = !DILocation(line: 236, column: 31, scope: !3328)
!3332 = !DILocation(line: 236, column: 55, scope: !3328)
!3333 = !DILocation(line: 236, column: 59, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3328, file: !1001, discriminator: 1)
!3335 = !DILocation(line: 236, column: 64, scope: !3334)
!3336 = !DILocation(line: 236, column: 9, scope: !3334)
!3337 = !DILocation(line: 237, column: 29, scope: !3328)
!3338 = !DILocation(line: 237, column: 9, scope: !3328)
!3339 = !DILocation(line: 239, column: 27, scope: !3182)
!3340 = !DILocation(line: 239, column: 12, scope: !3182)
!3341 = !DILocation(line: 239, column: 33, scope: !3182)
!3342 = !DILocation(line: 239, column: 31, scope: !3182)
!3343 = !DILocation(line: 239, column: 5, scope: !3182)
!3344 = distinct !DISubprogram(name: "sbr_reset", scope: !1001, file: !1001, line: 1094, type: !3345, isLocal: true, isDefinition: true, scopeLine: 1095, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{null, !1504, !1123}
!3347 = !DILocalVariable(name: "ac", arg: 1, scope: !3344, file: !1001, line: 1094, type: !1504)
!3348 = !DILocation(line: 1094, column: 35, scope: !3344)
!3349 = !DILocalVariable(name: "sbr", arg: 2, scope: !3344, file: !1001, line: 1094, type: !1123)
!3350 = !DILocation(line: 1094, column: 64, scope: !3344)
!3351 = !DILocalVariable(name: "err", scope: !3344, file: !1001, line: 1096, type: !992)
!3352 = !DILocation(line: 1096, column: 9, scope: !3344)
!3353 = !DILocation(line: 1097, column: 29, scope: !3344)
!3354 = !DILocation(line: 1097, column: 33, scope: !3344)
!3355 = !DILocation(line: 1097, column: 39, scope: !3344)
!3356 = !DILocation(line: 1097, column: 44, scope: !3344)
!3357 = !DILocation(line: 1097, column: 11, scope: !3344)
!3358 = !DILocation(line: 1097, column: 9, scope: !3344)
!3359 = !DILocation(line: 1098, column: 9, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3344, file: !1001, line: 1098, column: 9)
!3361 = !DILocation(line: 1098, column: 13, scope: !3360)
!3362 = !DILocation(line: 1098, column: 9, scope: !3344)
!3363 = !DILocation(line: 1099, column: 34, scope: !3360)
!3364 = !DILocation(line: 1099, column: 38, scope: !3360)
!3365 = !DILocation(line: 1099, column: 15, scope: !3360)
!3366 = !DILocation(line: 1099, column: 13, scope: !3360)
!3367 = !DILocation(line: 1099, column: 9, scope: !3360)
!3368 = !DILocation(line: 1100, column: 9, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3344, file: !1001, line: 1100, column: 9)
!3370 = !DILocation(line: 1100, column: 13, scope: !3369)
!3371 = !DILocation(line: 1100, column: 9, scope: !3344)
!3372 = !DILocation(line: 1101, column: 16, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3369, file: !1001, line: 1100, column: 18)
!3374 = !DILocation(line: 1101, column: 20, scope: !3373)
!3375 = !DILocation(line: 1101, column: 9, scope: !3373)
!3376 = !DILocation(line: 1103, column: 21, scope: !3373)
!3377 = !DILocation(line: 1103, column: 9, scope: !3373)
!3378 = !DILocation(line: 1104, column: 5, scope: !3373)
!3379 = !DILocation(line: 1105, column: 1, scope: !3344)
!3380 = distinct !DISubprogram(name: "read_sbr_data", scope: !1001, file: !1001, line: 1050, type: !3381, isLocal: true, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!985, !1504, !1123, !2912, !992}
!3383 = !DILocalVariable(name: "ac", arg: 1, scope: !3380, file: !1001, line: 1050, type: !1504)
!3384 = !DILocation(line: 1050, column: 47, scope: !3380)
!3385 = !DILocalVariable(name: "sbr", arg: 2, scope: !3380, file: !1001, line: 1050, type: !1123)
!3386 = !DILocation(line: 1050, column: 76, scope: !3380)
!3387 = !DILocalVariable(name: "gb", arg: 3, scope: !3380, file: !1001, line: 1051, type: !2912)
!3388 = !DILocation(line: 1051, column: 50, scope: !3380)
!3389 = !DILocalVariable(name: "id_aac", arg: 4, scope: !3380, file: !1001, line: 1051, type: !992)
!3390 = !DILocation(line: 1051, column: 58, scope: !3380)
!3391 = !DILocalVariable(name: "cnt", scope: !3380, file: !1001, line: 1053, type: !985)
!3392 = !DILocation(line: 1053, column: 18, scope: !3380)
!3393 = !DILocation(line: 1053, column: 39, scope: !3380)
!3394 = !DILocation(line: 1053, column: 24, scope: !3380)
!3395 = !DILocation(line: 1055, column: 19, scope: !3380)
!3396 = !DILocation(line: 1055, column: 5, scope: !3380)
!3397 = !DILocation(line: 1055, column: 10, scope: !3380)
!3398 = !DILocation(line: 1055, column: 17, scope: !3380)
!3399 = !DILocation(line: 1056, column: 5, scope: !3380)
!3400 = !DILocation(line: 1056, column: 10, scope: !3380)
!3401 = !DILocation(line: 1056, column: 28, scope: !3380)
!3402 = !DILocation(line: 1058, column: 9, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3380, file: !1001, line: 1058, column: 9)
!3404 = !DILocation(line: 1058, column: 16, scope: !3403)
!3405 = !DILocation(line: 1058, column: 28, scope: !3403)
!3406 = !DILocation(line: 1058, column: 31, scope: !3407)
!3407 = !DILexicalBlockFile(scope: !3403, file: !1001, discriminator: 1)
!3408 = !DILocation(line: 1058, column: 38, scope: !3407)
!3409 = !DILocation(line: 1058, column: 9, scope: !3407)
!3410 = !DILocation(line: 1059, column: 45, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !1001, line: 1059, column: 13)
!3412 = distinct !DILexicalBlock(scope: !3403, file: !1001, line: 1058, column: 51)
!3413 = !DILocation(line: 1059, column: 49, scope: !3411)
!3414 = !DILocation(line: 1059, column: 54, scope: !3411)
!3415 = !DILocation(line: 1059, column: 13, scope: !3411)
!3416 = !DILocation(line: 1059, column: 13, scope: !3412)
!3417 = !DILocation(line: 1060, column: 25, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !1001, line: 1059, column: 59)
!3419 = !DILocation(line: 1060, column: 13, scope: !3418)
!3420 = !DILocation(line: 1061, column: 35, scope: !3418)
!3421 = !DILocation(line: 1061, column: 20, scope: !3418)
!3422 = !DILocation(line: 1061, column: 41, scope: !3418)
!3423 = !DILocation(line: 1061, column: 39, scope: !3418)
!3424 = !DILocation(line: 1061, column: 13, scope: !3418)
!3425 = !DILocation(line: 1063, column: 5, scope: !3412)
!3426 = !DILocation(line: 1063, column: 16, scope: !3427)
!3427 = !DILexicalBlockFile(scope: !3428, file: !1001, discriminator: 1)
!3428 = distinct !DILexicalBlock(scope: !3403, file: !1001, line: 1063, column: 16)
!3429 = !DILocation(line: 1063, column: 23, scope: !3427)
!3430 = !DILocation(line: 1064, column: 43, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !1001, line: 1064, column: 13)
!3432 = distinct !DILexicalBlock(scope: !3428, file: !1001, line: 1063, column: 36)
!3433 = !DILocation(line: 1064, column: 47, scope: !3431)
!3434 = !DILocation(line: 1064, column: 52, scope: !3431)
!3435 = !DILocation(line: 1064, column: 13, scope: !3431)
!3436 = !DILocation(line: 1064, column: 13, scope: !3432)
!3437 = !DILocation(line: 1065, column: 25, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3431, file: !1001, line: 1064, column: 57)
!3439 = !DILocation(line: 1065, column: 13, scope: !3438)
!3440 = !DILocation(line: 1066, column: 35, scope: !3438)
!3441 = !DILocation(line: 1066, column: 20, scope: !3438)
!3442 = !DILocation(line: 1066, column: 41, scope: !3438)
!3443 = !DILocation(line: 1066, column: 39, scope: !3438)
!3444 = !DILocation(line: 1066, column: 13, scope: !3438)
!3445 = !DILocation(line: 1068, column: 5, scope: !3432)
!3446 = !DILocation(line: 1069, column: 16, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3428, file: !1001, line: 1068, column: 12)
!3448 = !DILocation(line: 1069, column: 20, scope: !3447)
!3449 = !DILocation(line: 1070, column: 74, scope: !3447)
!3450 = !DILocation(line: 1069, column: 9, scope: !3447)
!3451 = !DILocation(line: 1071, column: 21, scope: !3447)
!3452 = !DILocation(line: 1071, column: 9, scope: !3447)
!3453 = !DILocation(line: 1072, column: 31, scope: !3447)
!3454 = !DILocation(line: 1072, column: 16, scope: !3447)
!3455 = !DILocation(line: 1072, column: 37, scope: !3447)
!3456 = !DILocation(line: 1072, column: 35, scope: !3447)
!3457 = !DILocation(line: 1072, column: 9, scope: !3447)
!3458 = !DILocation(line: 1074, column: 19, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3380, file: !1001, line: 1074, column: 9)
!3460 = !DILocation(line: 1074, column: 9, scope: !3459)
!3461 = !DILocation(line: 1074, column: 9, scope: !3380)
!3462 = !DILocalVariable(name: "num_bits_left", scope: !3463, file: !1001, line: 1075, type: !992)
!3463 = distinct !DILexicalBlock(scope: !3459, file: !1001, line: 1074, column: 24)
!3464 = !DILocation(line: 1075, column: 13, scope: !3463)
!3465 = !DILocation(line: 1075, column: 38, scope: !3463)
!3466 = !DILocation(line: 1075, column: 29, scope: !3463)
!3467 = !DILocation(line: 1076, column: 13, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !1001, line: 1076, column: 13)
!3469 = !DILocation(line: 1076, column: 27, scope: !3468)
!3470 = !DILocation(line: 1076, column: 13, scope: !3463)
!3471 = !DILocation(line: 1077, column: 39, scope: !3468)
!3472 = !DILocation(line: 1077, column: 30, scope: !3468)
!3473 = !DILocation(line: 1077, column: 27, scope: !3468)
!3474 = !DILocation(line: 1077, column: 13, scope: !3468)
!3475 = !DILocation(line: 1079, column: 23, scope: !3463)
!3476 = !DILocation(line: 1080, column: 9, scope: !3463)
!3477 = !DILocation(line: 1080, column: 16, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3463, file: !1001, discriminator: 1)
!3479 = !DILocation(line: 1080, column: 30, scope: !3478)
!3480 = !DILocation(line: 1080, column: 9, scope: !3478)
!3481 = !DILocation(line: 1081, column: 27, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3463, file: !1001, line: 1080, column: 35)
!3483 = !DILocation(line: 1082, column: 32, scope: !3482)
!3484 = !DILocation(line: 1082, column: 36, scope: !3482)
!3485 = !DILocation(line: 1082, column: 41, scope: !3482)
!3486 = !DILocation(line: 1082, column: 54, scope: !3482)
!3487 = !DILocation(line: 1082, column: 45, scope: !3482)
!3488 = !DILocation(line: 1082, column: 13, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3482, file: !1001, discriminator: 1)
!3490 = !DILocation(line: 1080, column: 9, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !3463, file: !1001, discriminator: 2)
!3492 = distinct !{!3492, !3476}
!3493 = !DILocation(line: 1084, column: 13, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3463, file: !1001, line: 1084, column: 13)
!3495 = !DILocation(line: 1084, column: 27, scope: !3494)
!3496 = !DILocation(line: 1084, column: 13, scope: !3463)
!3497 = !DILocation(line: 1085, column: 20, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3494, file: !1001, line: 1084, column: 32)
!3499 = !DILocation(line: 1085, column: 24, scope: !3498)
!3500 = !DILocation(line: 1085, column: 13, scope: !3498)
!3501 = !DILocation(line: 1086, column: 9, scope: !3498)
!3502 = !DILocation(line: 1087, column: 13, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3463, file: !1001, line: 1087, column: 13)
!3504 = !DILocation(line: 1087, column: 27, scope: !3503)
!3505 = !DILocation(line: 1087, column: 13, scope: !3463)
!3506 = !DILocation(line: 1088, column: 23, scope: !3503)
!3507 = !DILocation(line: 1088, column: 27, scope: !3503)
!3508 = !DILocation(line: 1088, column: 13, scope: !3503)
!3509 = !DILocation(line: 1089, column: 5, scope: !3463)
!3510 = !DILocation(line: 1091, column: 27, scope: !3380)
!3511 = !DILocation(line: 1091, column: 12, scope: !3380)
!3512 = !DILocation(line: 1091, column: 33, scope: !3380)
!3513 = !DILocation(line: 1091, column: 31, scope: !3380)
!3514 = !DILocation(line: 1091, column: 5, scope: !3380)
!3515 = !DILocation(line: 1092, column: 1, scope: !3380)
!3516 = distinct !DISubprogram(name: "ff_sbr_apply", scope: !1001, file: !1001, line: 1479, type: !3517, isLocal: false, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{null, !1504, !1123, !992, !955, !955}
!3519 = !DILocalVariable(name: "ac", arg: 1, scope: !3516, file: !1001, line: 1479, type: !1504)
!3520 = !DILocation(line: 1479, column: 31, scope: !3516)
!3521 = !DILocalVariable(name: "sbr", arg: 2, scope: !3516, file: !1001, line: 1479, type: !1123)
!3522 = !DILocation(line: 1479, column: 60, scope: !3516)
!3523 = !DILocalVariable(name: "id_aac", arg: 3, scope: !3516, file: !1001, line: 1479, type: !992)
!3524 = !DILocation(line: 1479, column: 69, scope: !3516)
!3525 = !DILocalVariable(name: "L", arg: 4, scope: !3516, file: !1001, line: 1480, type: !955)
!3526 = !DILocation(line: 1480, column: 29, scope: !3516)
!3527 = !DILocalVariable(name: "R", arg: 5, scope: !3516, file: !1001, line: 1480, type: !955)
!3528 = !DILocation(line: 1480, column: 42, scope: !3516)
!3529 = !DILocalVariable(name: "downsampled", scope: !3516, file: !1001, line: 1482, type: !992)
!3530 = !DILocation(line: 1482, column: 9, scope: !3516)
!3531 = !DILocation(line: 1482, column: 23, scope: !3516)
!3532 = !DILocation(line: 1482, column: 27, scope: !3516)
!3533 = !DILocation(line: 1482, column: 33, scope: !3516)
!3534 = !DILocation(line: 1482, column: 38, scope: !3516)
!3535 = !DILocation(line: 1482, column: 56, scope: !3516)
!3536 = !DILocation(line: 1482, column: 61, scope: !3516)
!3537 = !DILocation(line: 1482, column: 54, scope: !3516)
!3538 = !DILocalVariable(name: "ch", scope: !3516, file: !1001, line: 1483, type: !992)
!3539 = !DILocation(line: 1483, column: 9, scope: !3516)
!3540 = !DILocalVariable(name: "nch", scope: !3516, file: !1001, line: 1484, type: !992)
!3541 = !DILocation(line: 1484, column: 9, scope: !3516)
!3542 = !DILocation(line: 1484, column: 16, scope: !3516)
!3543 = !DILocation(line: 1484, column: 23, scope: !3516)
!3544 = !DILocation(line: 1484, column: 15, scope: !3516)
!3545 = !DILocalVariable(name: "err", scope: !3516, file: !1001, line: 1485, type: !992)
!3546 = !DILocation(line: 1485, column: 9, scope: !3516)
!3547 = !DILocation(line: 1487, column: 9, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1487, column: 9)
!3549 = !DILocation(line: 1487, column: 19, scope: !3548)
!3550 = !DILocation(line: 1487, column: 24, scope: !3548)
!3551 = !DILocation(line: 1487, column: 16, scope: !3548)
!3552 = !DILocation(line: 1487, column: 9, scope: !3516)
!3553 = !DILocation(line: 1488, column: 16, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3548, file: !1001, line: 1487, column: 32)
!3555 = !DILocation(line: 1488, column: 20, scope: !3554)
!3556 = !DILocation(line: 1488, column: 27, scope: !3554)
!3557 = !DILocation(line: 1488, column: 34, scope: !3554)
!3558 = !DILocation(line: 1489, column: 49, scope: !3554)
!3559 = !DILocation(line: 1489, column: 57, scope: !3554)
!3560 = !DILocation(line: 1489, column: 62, scope: !3554)
!3561 = !DILocation(line: 1488, column: 9, scope: !3554)
!3562 = !DILocation(line: 1490, column: 21, scope: !3554)
!3563 = !DILocation(line: 1490, column: 9, scope: !3554)
!3564 = !DILocation(line: 1491, column: 5, scope: !3554)
!3565 = !DILocation(line: 1493, column: 9, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1493, column: 9)
!3567 = !DILocation(line: 1493, column: 14, scope: !3566)
!3568 = !DILocation(line: 1493, column: 20, scope: !3566)
!3569 = !DILocation(line: 1493, column: 24, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3566, file: !1001, discriminator: 1)
!3571 = !DILocation(line: 1493, column: 29, scope: !3570)
!3572 = !DILocation(line: 1493, column: 9, scope: !3570)
!3573 = !DILocation(line: 1494, column: 16, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3566, file: !1001, line: 1493, column: 48)
!3575 = !DILocation(line: 1494, column: 20, scope: !3574)
!3576 = !DILocation(line: 1494, column: 9, scope: !3574)
!3577 = !DILocation(line: 1496, column: 21, scope: !3574)
!3578 = !DILocation(line: 1496, column: 9, scope: !3574)
!3579 = !DILocation(line: 1497, column: 5, scope: !3574)
!3580 = !DILocation(line: 1499, column: 10, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1499, column: 9)
!3582 = !DILocation(line: 1499, column: 15, scope: !3581)
!3583 = !DILocation(line: 1499, column: 9, scope: !3516)
!3584 = !DILocation(line: 1500, column: 22, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !1001, line: 1499, column: 32)
!3586 = !DILocation(line: 1500, column: 27, scope: !3585)
!3587 = !DILocation(line: 1500, column: 9, scope: !3585)
!3588 = !DILocation(line: 1500, column: 14, scope: !3585)
!3589 = !DILocation(line: 1500, column: 20, scope: !3585)
!3590 = !DILocation(line: 1501, column: 21, scope: !3585)
!3591 = !DILocation(line: 1501, column: 26, scope: !3585)
!3592 = !DILocation(line: 1501, column: 9, scope: !3585)
!3593 = !DILocation(line: 1501, column: 14, scope: !3585)
!3594 = !DILocation(line: 1501, column: 19, scope: !3585)
!3595 = !DILocation(line: 1502, column: 5, scope: !3585)
!3596 = !DILocation(line: 1503, column: 9, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3581, file: !1001, line: 1502, column: 12)
!3598 = !DILocation(line: 1503, column: 14, scope: !3597)
!3599 = !DILocation(line: 1503, column: 30, scope: !3597)
!3600 = !DILocation(line: 1506, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1506, column: 9)
!3602 = !DILocation(line: 1506, column: 14, scope: !3601)
!3603 = !DILocation(line: 1506, column: 9, scope: !3516)
!3604 = !DILocation(line: 1507, column: 21, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !1001, line: 1506, column: 21)
!3606 = !DILocation(line: 1507, column: 26, scope: !3605)
!3607 = !DILocation(line: 1507, column: 9, scope: !3605)
!3608 = !DILocation(line: 1508, column: 9, scope: !3605)
!3609 = !DILocation(line: 1508, column: 14, scope: !3605)
!3610 = !DILocation(line: 1508, column: 32, scope: !3605)
!3611 = !DILocation(line: 1509, column: 5, scope: !3605)
!3612 = !DILocation(line: 1510, column: 13, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1510, column: 5)
!3614 = !DILocation(line: 1510, column: 10, scope: !3613)
!3615 = !DILocation(line: 1510, column: 18, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3617, file: !1001, discriminator: 1)
!3617 = distinct !DILexicalBlock(scope: !3613, file: !1001, line: 1510, column: 5)
!3618 = !DILocation(line: 1510, column: 23, scope: !3616)
!3619 = !DILocation(line: 1510, column: 21, scope: !3616)
!3620 = !DILocation(line: 1510, column: 5, scope: !3616)
!3621 = !DILocation(line: 1512, column: 26, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !1001, line: 1510, column: 34)
!3623 = !DILocation(line: 1512, column: 30, scope: !3622)
!3624 = !DILocation(line: 1512, column: 37, scope: !3622)
!3625 = !DILocation(line: 1512, column: 42, scope: !3622)
!3626 = !DILocation(line: 1512, column: 53, scope: !3622)
!3627 = !DILocation(line: 1512, column: 58, scope: !3622)
!3628 = !DILocation(line: 1512, column: 63, scope: !3622)
!3629 = !DILocation(line: 1512, column: 68, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3622, file: !1001, discriminator: 1)
!3631 = !DILocation(line: 1512, column: 63, scope: !3630)
!3632 = !DILocation(line: 1512, column: 72, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3622, file: !1001, discriminator: 2)
!3634 = !DILocation(line: 1512, column: 63, scope: !3633)
!3635 = !DILocation(line: 1512, column: 63, scope: !3636)
!3636 = !DILexicalBlockFile(scope: !3622, file: !1001, discriminator: 3)
!3637 = !DILocation(line: 1512, column: 85, scope: !3636)
!3638 = !DILocation(line: 1512, column: 75, scope: !3636)
!3639 = !DILocation(line: 1512, column: 80, scope: !3636)
!3640 = !DILocation(line: 1512, column: 89, scope: !3636)
!3641 = !DILocation(line: 1513, column: 37, scope: !3622)
!3642 = !DILocation(line: 1513, column: 42, scope: !3622)
!3643 = !DILocation(line: 1513, column: 26, scope: !3622)
!3644 = !DILocation(line: 1514, column: 36, scope: !3622)
!3645 = !DILocation(line: 1514, column: 26, scope: !3622)
!3646 = !DILocation(line: 1514, column: 31, scope: !3622)
!3647 = !DILocation(line: 1514, column: 40, scope: !3622)
!3648 = !DILocation(line: 1514, column: 53, scope: !3622)
!3649 = !DILocation(line: 1514, column: 43, scope: !3622)
!3650 = !DILocation(line: 1514, column: 48, scope: !3622)
!3651 = !DILocation(line: 1514, column: 57, scope: !3622)
!3652 = !DILocation(line: 1512, column: 9, scope: !3636)
!3653 = !DILocation(line: 1515, column: 9, scope: !3622)
!3654 = !DILocation(line: 1515, column: 14, scope: !3622)
!3655 = !DILocation(line: 1515, column: 16, scope: !3622)
!3656 = !DILocation(line: 1515, column: 27, scope: !3622)
!3657 = !DILocation(line: 1515, column: 31, scope: !3622)
!3658 = !DILocation(line: 1515, column: 36, scope: !3622)
!3659 = !DILocation(line: 1515, column: 41, scope: !3622)
!3660 = !DILocation(line: 1516, column: 69, scope: !3622)
!3661 = !DILocation(line: 1516, column: 59, scope: !3622)
!3662 = !DILocation(line: 1516, column: 64, scope: !3622)
!3663 = !DILocation(line: 1516, column: 73, scope: !3622)
!3664 = !DILocation(line: 1517, column: 37, scope: !3622)
!3665 = !DILocation(line: 1517, column: 27, scope: !3622)
!3666 = !DILocation(line: 1517, column: 32, scope: !3622)
!3667 = !DILocation(line: 1517, column: 41, scope: !3622)
!3668 = !DILocation(line: 1518, column: 19, scope: !3622)
!3669 = !DILocation(line: 1518, column: 9, scope: !3622)
!3670 = !DILocation(line: 1518, column: 14, scope: !3622)
!3671 = !DILocation(line: 1518, column: 23, scope: !3622)
!3672 = !DILocation(line: 1518, column: 28, scope: !3622)
!3673 = !DILocation(line: 1519, column: 13, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3622, file: !1001, line: 1519, column: 13)
!3675 = !DILocation(line: 1519, column: 18, scope: !3674)
!3676 = !DILocation(line: 1519, column: 13, scope: !3622)
!3677 = !DILocation(line: 1520, column: 13, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !1001, line: 1519, column: 25)
!3679 = !DILocation(line: 1520, column: 18, scope: !3678)
!3680 = !DILocation(line: 1520, column: 20, scope: !3678)
!3681 = !DILocation(line: 1520, column: 43, scope: !3678)
!3682 = !DILocation(line: 1520, column: 48, scope: !3678)
!3683 = !DILocation(line: 1520, column: 53, scope: !3678)
!3684 = !DILocation(line: 1520, column: 58, scope: !3678)
!3685 = !DILocation(line: 1520, column: 66, scope: !3678)
!3686 = !DILocation(line: 1520, column: 71, scope: !3678)
!3687 = !DILocation(line: 1521, column: 70, scope: !3678)
!3688 = !DILocation(line: 1521, column: 75, scope: !3678)
!3689 = !DILocation(line: 1521, column: 82, scope: !3678)
!3690 = !DILocation(line: 1521, column: 87, scope: !3678)
!3691 = !DILocation(line: 1522, column: 23, scope: !3678)
!3692 = !DILocation(line: 1522, column: 39, scope: !3678)
!3693 = !DILocation(line: 1522, column: 29, scope: !3678)
!3694 = !DILocation(line: 1522, column: 34, scope: !3678)
!3695 = !DILocation(line: 1522, column: 13, scope: !3678)
!3696 = !DILocation(line: 1523, column: 13, scope: !3678)
!3697 = distinct !{!3697, !3696}
!3698 = !DILocation(line: 1523, column: 34, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3700, file: !1001, discriminator: 1)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !1001, line: 1523, column: 22)
!3701 = distinct !DILexicalBlock(scope: !3678, file: !1001, line: 1523, column: 16)
!3702 = !DILocation(line: 1523, column: 24, scope: !3699)
!3703 = !DILocation(line: 1523, column: 29, scope: !3699)
!3704 = !DILocation(line: 1523, column: 38, scope: !3699)
!3705 = !DILocation(line: 1523, column: 49, scope: !3699)
!3706 = !DILocation(line: 1523, column: 22, scope: !3699)
!3707 = !DILocation(line: 1523, column: 57, scope: !3708)
!3708 = !DILexicalBlockFile(scope: !3709, file: !1001, discriminator: 2)
!3709 = distinct !DILexicalBlock(scope: !3700, file: !1001, line: 1523, column: 55)
!3710 = !DILocation(line: 1523, column: 122, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !3708, file: !1001, discriminator: 4)
!3712 = !DILocation(line: 1523, column: 122, scope: !3708)
!3713 = !DILocation(line: 1523, column: 133, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !3701, file: !1001, discriminator: 3)
!3715 = !DILocation(line: 1524, column: 24, scope: !3678)
!3716 = !DILocation(line: 1524, column: 28, scope: !3678)
!3717 = !DILocation(line: 1524, column: 33, scope: !3678)
!3718 = !DILocation(line: 1524, column: 38, scope: !3678)
!3719 = !DILocation(line: 1525, column: 52, scope: !3678)
!3720 = !DILocation(line: 1525, column: 57, scope: !3678)
!3721 = !DILocation(line: 1526, column: 48, scope: !3678)
!3722 = !DILocation(line: 1526, column: 53, scope: !3678)
!3723 = !DILocation(line: 1527, column: 48, scope: !3678)
!3724 = !DILocation(line: 1527, column: 53, scope: !3678)
!3725 = !DILocation(line: 1528, column: 34, scope: !3678)
!3726 = !DILocation(line: 1528, column: 24, scope: !3678)
!3727 = !DILocation(line: 1528, column: 29, scope: !3678)
!3728 = !DILocation(line: 1528, column: 38, scope: !3678)
!3729 = !DILocation(line: 1528, column: 58, scope: !3678)
!3730 = !DILocation(line: 1528, column: 48, scope: !3678)
!3731 = !DILocation(line: 1528, column: 53, scope: !3678)
!3732 = !DILocation(line: 1528, column: 62, scope: !3678)
!3733 = !DILocation(line: 1529, column: 34, scope: !3678)
!3734 = !DILocation(line: 1529, column: 24, scope: !3678)
!3735 = !DILocation(line: 1529, column: 29, scope: !3678)
!3736 = !DILocation(line: 1529, column: 38, scope: !3678)
!3737 = !DILocation(line: 1524, column: 13, scope: !3678)
!3738 = !DILocation(line: 1532, column: 31, scope: !3678)
!3739 = !DILocation(line: 1532, column: 35, scope: !3678)
!3740 = !DILocation(line: 1532, column: 51, scope: !3678)
!3741 = !DILocation(line: 1532, column: 41, scope: !3678)
!3742 = !DILocation(line: 1532, column: 46, scope: !3678)
!3743 = !DILocation(line: 1532, column: 66, scope: !3678)
!3744 = !DILocation(line: 1532, column: 56, scope: !3678)
!3745 = !DILocation(line: 1532, column: 61, scope: !3678)
!3746 = !DILocation(line: 1532, column: 70, scope: !3678)
!3747 = !DILocation(line: 1532, column: 19, scope: !3678)
!3748 = !DILocation(line: 1532, column: 17, scope: !3678)
!3749 = !DILocation(line: 1533, column: 18, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3678, file: !1001, line: 1533, column: 17)
!3751 = !DILocation(line: 1533, column: 17, scope: !3678)
!3752 = !DILocation(line: 1534, column: 34, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3750, file: !1001, line: 1533, column: 23)
!3754 = !DILocation(line: 1534, column: 39, scope: !3753)
!3755 = !DILocation(line: 1534, column: 47, scope: !3753)
!3756 = !DILocation(line: 1534, column: 52, scope: !3753)
!3757 = !DILocation(line: 1534, column: 60, scope: !3753)
!3758 = !DILocation(line: 1534, column: 76, scope: !3753)
!3759 = !DILocation(line: 1534, column: 66, scope: !3753)
!3760 = !DILocation(line: 1534, column: 71, scope: !3753)
!3761 = !DILocation(line: 1534, column: 17, scope: !3753)
!3762 = !DILocation(line: 1535, column: 31, scope: !3753)
!3763 = !DILocation(line: 1535, column: 35, scope: !3753)
!3764 = !DILocation(line: 1535, column: 51, scope: !3753)
!3765 = !DILocation(line: 1535, column: 41, scope: !3753)
!3766 = !DILocation(line: 1535, column: 46, scope: !3753)
!3767 = !DILocation(line: 1535, column: 66, scope: !3753)
!3768 = !DILocation(line: 1535, column: 56, scope: !3753)
!3769 = !DILocation(line: 1535, column: 61, scope: !3753)
!3770 = !DILocation(line: 1535, column: 70, scope: !3753)
!3771 = !DILocation(line: 1535, column: 17, scope: !3753)
!3772 = !DILocation(line: 1536, column: 17, scope: !3753)
!3773 = !DILocation(line: 1536, column: 22, scope: !3753)
!3774 = !DILocation(line: 1536, column: 24, scope: !3753)
!3775 = !DILocation(line: 1536, column: 66, scope: !3753)
!3776 = !DILocation(line: 1536, column: 56, scope: !3753)
!3777 = !DILocation(line: 1536, column: 61, scope: !3753)
!3778 = !DILocation(line: 1536, column: 70, scope: !3753)
!3779 = !DILocation(line: 1536, column: 40, scope: !3753)
!3780 = !DILocation(line: 1536, column: 50, scope: !3753)
!3781 = !DILocation(line: 1536, column: 45, scope: !3753)
!3782 = !DILocation(line: 1536, column: 54, scope: !3753)
!3783 = !DILocation(line: 1537, column: 61, scope: !3753)
!3784 = !DILocation(line: 1537, column: 66, scope: !3753)
!3785 = !DILocation(line: 1538, column: 33, scope: !3753)
!3786 = !DILocation(line: 1538, column: 49, scope: !3753)
!3787 = !DILocation(line: 1538, column: 39, scope: !3753)
!3788 = !DILocation(line: 1538, column: 44, scope: !3753)
!3789 = !DILocation(line: 1539, column: 43, scope: !3753)
!3790 = !DILocation(line: 1539, column: 33, scope: !3753)
!3791 = !DILocation(line: 1539, column: 38, scope: !3753)
!3792 = !DILocation(line: 1539, column: 47, scope: !3753)
!3793 = !DILocation(line: 1540, column: 13, scope: !3753)
!3794 = !DILocation(line: 1541, column: 9, scope: !3678)
!3795 = !DILocation(line: 1544, column: 9, scope: !3622)
!3796 = !DILocation(line: 1544, column: 14, scope: !3622)
!3797 = !DILocation(line: 1544, column: 16, scope: !3622)
!3798 = !DILocation(line: 1544, column: 26, scope: !3622)
!3799 = !DILocation(line: 1544, column: 38, scope: !3622)
!3800 = !DILocation(line: 1544, column: 31, scope: !3622)
!3801 = !DILocation(line: 1544, column: 36, scope: !3622)
!3802 = !DILocation(line: 1545, column: 75, scope: !3622)
!3803 = !DILocation(line: 1545, column: 65, scope: !3622)
!3804 = !DILocation(line: 1545, column: 70, scope: !3622)
!3805 = !DILocation(line: 1545, column: 79, scope: !3622)
!3806 = !DILocation(line: 1545, column: 64, scope: !3622)
!3807 = !DILocation(line: 1545, column: 47, scope: !3622)
!3808 = !DILocation(line: 1545, column: 57, scope: !3622)
!3809 = !DILocation(line: 1545, column: 52, scope: !3622)
!3810 = !DILocation(line: 1545, column: 61, scope: !3622)
!3811 = !DILocation(line: 1546, column: 74, scope: !3622)
!3812 = !DILocation(line: 1546, column: 64, scope: !3622)
!3813 = !DILocation(line: 1546, column: 69, scope: !3622)
!3814 = !DILocation(line: 1546, column: 78, scope: !3622)
!3815 = !DILocation(line: 1546, column: 47, scope: !3622)
!3816 = !DILocation(line: 1546, column: 57, scope: !3622)
!3817 = !DILocation(line: 1546, column: 52, scope: !3622)
!3818 = !DILocation(line: 1546, column: 61, scope: !3622)
!3819 = !DILocation(line: 1547, column: 47, scope: !3622)
!3820 = !DILocation(line: 1547, column: 52, scope: !3622)
!3821 = !DILocation(line: 1547, column: 59, scope: !3622)
!3822 = !DILocation(line: 1548, column: 5, scope: !3622)
!3823 = !DILocation(line: 1510, column: 30, scope: !3824)
!3824 = !DILexicalBlockFile(scope: !3617, file: !1001, discriminator: 2)
!3825 = !DILocation(line: 1510, column: 5, scope: !3824)
!3826 = distinct !{!3826, !3827}
!3827 = !DILocation(line: 1510, column: 5, scope: !3516)
!3828 = !DILocation(line: 1550, column: 9, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1550, column: 9)
!3830 = !DILocation(line: 1550, column: 13, scope: !3829)
!3831 = !DILocation(line: 1550, column: 19, scope: !3829)
!3832 = !DILocation(line: 1550, column: 24, scope: !3829)
!3833 = !DILocation(line: 1550, column: 27, scope: !3829)
!3834 = !DILocation(line: 1550, column: 9, scope: !3516)
!3835 = !DILocation(line: 1551, column: 13, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !1001, line: 1551, column: 13)
!3837 = distinct !DILexicalBlock(scope: !3829, file: !1001, line: 1550, column: 33)
!3838 = !DILocation(line: 1551, column: 18, scope: !3836)
!3839 = !DILocation(line: 1551, column: 21, scope: !3836)
!3840 = !DILocation(line: 1551, column: 13, scope: !3837)
!3841 = !DILocation(line: 1552, column: 25, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3836, file: !1001, line: 1551, column: 28)
!3843 = !DILocation(line: 1552, column: 29, scope: !3842)
!3844 = !DILocation(line: 1552, column: 37, scope: !3842)
!3845 = !DILocation(line: 1552, column: 42, scope: !3842)
!3846 = !DILocation(line: 1552, column: 46, scope: !3842)
!3847 = !DILocation(line: 1552, column: 51, scope: !3842)
!3848 = !DILocation(line: 1552, column: 57, scope: !3842)
!3849 = !DILocation(line: 1552, column: 62, scope: !3842)
!3850 = !DILocation(line: 1552, column: 68, scope: !3842)
!3851 = !DILocation(line: 1552, column: 73, scope: !3842)
!3852 = !DILocation(line: 1552, column: 81, scope: !3842)
!3853 = !DILocation(line: 1552, column: 86, scope: !3842)
!3854 = !DILocation(line: 1552, column: 79, scope: !3842)
!3855 = !DILocation(line: 1552, column: 13, scope: !3842)
!3856 = !DILocation(line: 1553, column: 9, scope: !3842)
!3857 = !DILocation(line: 1554, column: 20, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3836, file: !1001, line: 1553, column: 16)
!3859 = !DILocation(line: 1554, column: 25, scope: !3858)
!3860 = !DILocation(line: 1554, column: 13, scope: !3858)
!3861 = !DILocation(line: 1554, column: 31, scope: !3858)
!3862 = !DILocation(line: 1554, column: 36, scope: !3858)
!3863 = !DILocation(line: 1556, column: 13, scope: !3837)
!3864 = !DILocation(line: 1557, column: 5, scope: !3837)
!3865 = !DILocation(line: 1559, column: 24, scope: !3516)
!3866 = !DILocation(line: 1559, column: 29, scope: !3516)
!3867 = !DILocation(line: 1559, column: 36, scope: !3516)
!3868 = !DILocation(line: 1559, column: 41, scope: !3516)
!3869 = !DILocation(line: 1559, column: 46, scope: !3516)
!3870 = !DILocation(line: 1559, column: 50, scope: !3516)
!3871 = !DILocation(line: 1560, column: 23, scope: !3516)
!3872 = !DILocation(line: 1560, column: 26, scope: !3516)
!3873 = !DILocation(line: 1560, column: 31, scope: !3516)
!3874 = !DILocation(line: 1560, column: 37, scope: !3516)
!3875 = !DILocation(line: 1560, column: 42, scope: !3516)
!3876 = !DILocation(line: 1561, column: 23, scope: !3516)
!3877 = !DILocation(line: 1561, column: 28, scope: !3516)
!3878 = !DILocation(line: 1561, column: 36, scope: !3516)
!3879 = !DILocation(line: 1562, column: 24, scope: !3516)
!3880 = !DILocation(line: 1562, column: 29, scope: !3516)
!3881 = !DILocation(line: 1562, column: 37, scope: !3516)
!3882 = !DILocation(line: 1563, column: 23, scope: !3516)
!3883 = !DILocation(line: 1559, column: 5, scope: !3516)
!3884 = !DILocation(line: 1564, column: 9, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3516, file: !1001, line: 1564, column: 9)
!3886 = !DILocation(line: 1564, column: 13, scope: !3885)
!3887 = !DILocation(line: 1564, column: 9, scope: !3516)
!3888 = !DILocation(line: 1565, column: 28, scope: !3885)
!3889 = !DILocation(line: 1565, column: 33, scope: !3885)
!3890 = !DILocation(line: 1565, column: 40, scope: !3885)
!3891 = !DILocation(line: 1565, column: 45, scope: !3885)
!3892 = !DILocation(line: 1565, column: 50, scope: !3885)
!3893 = !DILocation(line: 1565, column: 54, scope: !3885)
!3894 = !DILocation(line: 1566, column: 27, scope: !3885)
!3895 = !DILocation(line: 1566, column: 30, scope: !3885)
!3896 = !DILocation(line: 1566, column: 35, scope: !3885)
!3897 = !DILocation(line: 1566, column: 41, scope: !3885)
!3898 = !DILocation(line: 1566, column: 46, scope: !3885)
!3899 = !DILocation(line: 1567, column: 27, scope: !3885)
!3900 = !DILocation(line: 1567, column: 32, scope: !3885)
!3901 = !DILocation(line: 1567, column: 40, scope: !3885)
!3902 = !DILocation(line: 1568, column: 28, scope: !3885)
!3903 = !DILocation(line: 1568, column: 33, scope: !3885)
!3904 = !DILocation(line: 1568, column: 41, scope: !3885)
!3905 = !DILocation(line: 1569, column: 27, scope: !3885)
!3906 = !DILocation(line: 1565, column: 9, scope: !3885)
!3907 = !DILocation(line: 1570, column: 1, scope: !3516)
!3908 = !DILocalVariable(name: "i", arg: 1, scope: !3909, file: !3910, line: 40, type: !983)
!3909 = distinct !DISubprogram(name: "av_int2float", scope: !3910, file: !3910, line: 40, type: !3911, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3910 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!958, !983}
!3913 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3914)
!3914 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3921)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !1623, line: 301, column: 14)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !1623, line: 298, column: 14)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !1623, line: 295, column: 9)
!3918 = distinct !DISubprogram(name: "ff_exp2fi", scope: !1623, file: !1623, line: 293, type: !3919, isLocal: true, isDefinition: true, scopeLine: 293, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!958, !992}
!3921 = distinct !DILocation(line: 85, column: 29, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !1056, line: 83, column: 46)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !1056, line: 83, column: 21)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !1056, line: 81, column: 71)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !1056, line: 81, column: 13)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !1056, line: 81, column: 13)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !1056, line: 80, column: 56)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !1056, line: 80, column: 9)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !1056, line: 80, column: 9)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !1056, line: 78, column: 49)
!3931 = distinct !DILexicalBlock(scope: !2573, file: !1056, line: 78, column: 9)
!3932 = !DILocalVariable(name: "v", scope: !3909, file: !3910, line: 42, type: !3933)
!3933 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat32", file: !3910, line: 27, size: 32, align: 32, elements: !3934)
!3934 = !{!3935, !3936}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3933, file: !3910, line: 28, baseType: !983, size: 32, align: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3933, file: !3910, line: 29, baseType: !958, size: 32, align: 32)
!3937 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3914)
!3938 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3939)
!3939 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3921)
!3940 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3939)
!3941 = !DILocalVariable(name: "x", arg: 1, scope: !3918, file: !1623, line: 293, type: !992)
!3942 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3921)
!3943 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3944)
!3944 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3945)
!3945 = distinct !DILocation(line: 88, column: 29, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3923, file: !1056, line: 87, column: 22)
!3947 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3944)
!3948 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3949)
!3949 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3945)
!3950 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3949)
!3951 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3945)
!3952 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3953)
!3953 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3954)
!3954 = distinct !DILocation(line: 90, column: 29, scope: !3946)
!3955 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3953)
!3956 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3957)
!3957 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3954)
!3958 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3957)
!3959 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3954)
!3960 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3961)
!3961 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3962)
!3962 = distinct !DILocation(line: 104, column: 31, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !1056, line: 103, column: 44)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !1056, line: 103, column: 13)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !1056, line: 103, column: 13)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !1056, line: 102, column: 58)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !1056, line: 102, column: 9)
!3968 = distinct !DILexicalBlock(scope: !3930, file: !1056, line: 102, column: 9)
!3969 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3961)
!3970 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3971)
!3971 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3962)
!3972 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3971)
!3973 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3962)
!3974 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3975)
!3975 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3976)
!3976 = distinct !DILocation(line: 105, column: 31, scope: !3963)
!3977 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3975)
!3978 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3979)
!3979 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3976)
!3980 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3979)
!3981 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3976)
!3982 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3983)
!3983 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3984)
!3984 = distinct !DILocation(line: 118, column: 56, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !1056, line: 117, column: 25)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !1056, line: 116, column: 75)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !1056, line: 116, column: 17)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !1056, line: 116, column: 17)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !1056, line: 115, column: 13)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !1056, line: 115, column: 13)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !1056, line: 114, column: 59)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !1056, line: 114, column: 9)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !1056, line: 114, column: 9)
!3994 = distinct !DILexicalBlock(scope: !3931, file: !1056, line: 113, column: 12)
!3995 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3983)
!3996 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !3997)
!3997 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3984)
!3998 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !3997)
!3999 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !3984)
!4000 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4001)
!4001 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4002)
!4002 = distinct !DILocation(line: 120, column: 56, scope: !3985)
!4003 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4001)
!4004 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4005)
!4005 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4002)
!4006 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4005)
!4007 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !4002)
!4008 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4009)
!4009 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4010)
!4010 = distinct !DILocation(line: 131, column: 25, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !1056, line: 129, column: 17)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !1056, line: 129, column: 17)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !1056, line: 128, column: 13)
!4014 = distinct !DILexicalBlock(scope: !3991, file: !1056, line: 128, column: 13)
!4015 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4009)
!4016 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4017)
!4017 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4010)
!4018 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4017)
!4019 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !4010)
!4020 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4021)
!4021 = distinct !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4022)
!4022 = distinct !DILocation(line: 84, column: 29, scope: !3922)
!4023 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4021)
!4024 = !DILocation(line: 40, column: 74, scope: !3909, inlinedAt: !4025)
!4025 = distinct !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4022)
!4026 = !DILocation(line: 42, column: 25, scope: !3909, inlinedAt: !4025)
!4027 = !DILocation(line: 293, column: 66, scope: !3918, inlinedAt: !4022)
!4028 = !DILocalVariable(name: "sbr", arg: 1, scope: !2573, file: !1056, line: 73, type: !1123)
!4029 = !DILocation(line: 73, column: 50, scope: !2573)
!4030 = !DILocalVariable(name: "id_aac", arg: 2, scope: !2573, file: !1056, line: 73, type: !992)
!4031 = !DILocation(line: 73, column: 59, scope: !2573)
!4032 = !DILocalVariable(name: "k", scope: !2573, file: !1056, line: 75, type: !992)
!4033 = !DILocation(line: 75, column: 9, scope: !2573)
!4034 = !DILocalVariable(name: "e", scope: !2573, file: !1056, line: 75, type: !992)
!4035 = !DILocation(line: 75, column: 12, scope: !2573)
!4036 = !DILocalVariable(name: "ch", scope: !2573, file: !1056, line: 76, type: !992)
!4037 = !DILocation(line: 76, column: 9, scope: !2573)
!4038 = !DILocation(line: 78, column: 9, scope: !3931)
!4039 = !DILocation(line: 78, column: 16, scope: !3931)
!4040 = !DILocation(line: 78, column: 28, scope: !3931)
!4041 = !DILocation(line: 78, column: 31, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !3931, file: !1056, discriminator: 1)
!4043 = !DILocation(line: 78, column: 36, scope: !4042)
!4044 = !DILocation(line: 78, column: 9, scope: !4042)
!4045 = !DILocalVariable(name: "pan_offset", scope: !3930, file: !1056, line: 79, type: !992)
!4046 = !DILocation(line: 79, column: 13, scope: !3930)
!4047 = !DILocation(line: 79, column: 26, scope: !3930)
!4048 = !DILocation(line: 79, column: 31, scope: !3930)
!4049 = !DILocation(line: 79, column: 39, scope: !3930)
!4050 = !DILocation(line: 80, column: 16, scope: !3929)
!4051 = !DILocation(line: 80, column: 14, scope: !3929)
!4052 = !DILocation(line: 80, column: 21, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !3928, file: !1056, discriminator: 1)
!4054 = !DILocation(line: 80, column: 26, scope: !4053)
!4055 = !DILocation(line: 80, column: 31, scope: !4053)
!4056 = !DILocation(line: 80, column: 39, scope: !4053)
!4057 = !DILocation(line: 80, column: 23, scope: !4053)
!4058 = !DILocation(line: 80, column: 9, scope: !4053)
!4059 = !DILocation(line: 81, column: 20, scope: !3926)
!4060 = !DILocation(line: 81, column: 18, scope: !3926)
!4061 = !DILocation(line: 81, column: 25, scope: !4062)
!4062 = !DILexicalBlockFile(scope: !3925, file: !1056, discriminator: 1)
!4063 = !DILocation(line: 81, column: 61, scope: !4062)
!4064 = !DILocation(line: 81, column: 36, scope: !4062)
!4065 = !DILocation(line: 81, column: 41, scope: !4062)
!4066 = !DILocation(line: 81, column: 49, scope: !4062)
!4067 = !DILocation(line: 81, column: 29, scope: !4062)
!4068 = !DILocation(line: 81, column: 34, scope: !4062)
!4069 = !DILocation(line: 81, column: 27, scope: !4062)
!4070 = !DILocation(line: 81, column: 13, scope: !4062)
!4071 = !DILocalVariable(name: "temp1", scope: !3924, file: !1056, line: 82, type: !958)
!4072 = !DILocation(line: 82, column: 23, scope: !3924)
!4073 = !DILocalVariable(name: "temp2", scope: !3924, file: !1056, line: 82, type: !958)
!4074 = !DILocation(line: 82, column: 30, scope: !3924)
!4075 = !DILocalVariable(name: "fac", scope: !3924, file: !1056, line: 82, type: !958)
!4076 = !DILocation(line: 82, column: 37, scope: !3924)
!4077 = !DILocation(line: 83, column: 21, scope: !3923)
!4078 = !DILocation(line: 83, column: 26, scope: !3923)
!4079 = !DILocation(line: 83, column: 34, scope: !3923)
!4080 = !DILocation(line: 83, column: 21, scope: !3924)
!4081 = !DILocation(line: 84, column: 66, scope: !3922)
!4082 = !DILocation(line: 84, column: 39, scope: !3922)
!4083 = !DILocation(line: 84, column: 63, scope: !3922)
!4084 = !DILocation(line: 84, column: 44, scope: !3922)
!4085 = !DILocation(line: 84, column: 52, scope: !3922)
!4086 = !DILocation(line: 84, column: 69, scope: !3922)
!4087 = !DILocation(line: 84, column: 29, scope: !3922)
!4088 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !4022)
!4089 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !4022)
!4090 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !4022)
!4091 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !4022)
!4092 = !DILexicalBlockFile(scope: !3917, file: !1623, discriminator: 1)
!4093 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !4022)
!4094 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !4022)
!4095 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !4022)
!4096 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !4022)
!4097 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !4022)
!4098 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4022)
!4099 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4025)
!4100 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4025)
!4101 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4025)
!4102 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4025)
!4103 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !4022)
!4104 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !4022)
!4105 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !4022)
!4106 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !4022)
!4107 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !4022)
!4108 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !4022)
!4109 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !4022)
!4110 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !4022)
!4111 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !4022)
!4112 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !4022)
!4113 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !4022)
!4114 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4022)
!4115 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4021)
!4116 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4021)
!4117 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4021)
!4118 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4021)
!4119 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !4022)
!4120 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !4022)
!4121 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !4022)
!4122 = !DILocation(line: 84, column: 27, scope: !3922)
!4123 = !DILocation(line: 85, column: 39, scope: !3922)
!4124 = !DILocation(line: 85, column: 79, scope: !3922)
!4125 = !DILocation(line: 85, column: 52, scope: !3922)
!4126 = !DILocation(line: 85, column: 76, scope: !3922)
!4127 = !DILocation(line: 85, column: 57, scope: !3922)
!4128 = !DILocation(line: 85, column: 65, scope: !3922)
!4129 = !DILocation(line: 85, column: 50, scope: !3922)
!4130 = !DILocation(line: 85, column: 29, scope: !3922)
!4131 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3921)
!4132 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3921)
!4133 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3921)
!4134 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3921)
!4135 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3921)
!4136 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3921)
!4137 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3921)
!4138 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3921)
!4139 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3921)
!4140 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3921)
!4141 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3939)
!4142 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3939)
!4143 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3939)
!4144 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3939)
!4145 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3921)
!4146 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3921)
!4147 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3921)
!4148 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3921)
!4149 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3921)
!4150 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3921)
!4151 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3921)
!4152 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3921)
!4153 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3921)
!4154 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3921)
!4155 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3921)
!4156 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3921)
!4157 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3914)
!4158 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3914)
!4159 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3914)
!4160 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3914)
!4161 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3921)
!4162 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3921)
!4163 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3921)
!4164 = !DILocation(line: 85, column: 27, scope: !3922)
!4165 = !DILocation(line: 86, column: 17, scope: !3922)
!4166 = !DILocation(line: 88, column: 67, scope: !3946)
!4167 = !DILocation(line: 88, column: 40, scope: !3946)
!4168 = !DILocation(line: 88, column: 64, scope: !3946)
!4169 = !DILocation(line: 88, column: 45, scope: !3946)
!4170 = !DILocation(line: 88, column: 53, scope: !3946)
!4171 = !DILocation(line: 88, column: 69, scope: !3946)
!4172 = !DILocation(line: 88, column: 74, scope: !3946)
!4173 = !DILocation(line: 88, column: 29, scope: !3946)
!4174 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3945)
!4175 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3945)
!4176 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3945)
!4177 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3945)
!4178 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3945)
!4179 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3945)
!4180 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3945)
!4181 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3945)
!4182 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3945)
!4183 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3945)
!4184 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3949)
!4185 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3949)
!4186 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3949)
!4187 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3949)
!4188 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3945)
!4189 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3945)
!4190 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3945)
!4191 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3945)
!4192 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3945)
!4193 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3945)
!4194 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3945)
!4195 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3945)
!4196 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3945)
!4197 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3945)
!4198 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3945)
!4199 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3945)
!4200 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3944)
!4201 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3944)
!4202 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3944)
!4203 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3944)
!4204 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3945)
!4205 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3945)
!4206 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3945)
!4207 = !DILocation(line: 89, column: 65, scope: !3946)
!4208 = !DILocation(line: 89, column: 38, scope: !3946)
!4209 = !DILocation(line: 89, column: 62, scope: !3946)
!4210 = !DILocation(line: 89, column: 43, scope: !3946)
!4211 = !DILocation(line: 89, column: 51, scope: !3946)
!4212 = !DILocation(line: 89, column: 68, scope: !3946)
!4213 = !DILocation(line: 89, column: 29, scope: !3946)
!4214 = !DILocation(line: 88, column: 79, scope: !3946)
!4215 = !DILocation(line: 88, column: 27, scope: !3946)
!4216 = !DILocation(line: 90, column: 40, scope: !3946)
!4217 = !DILocation(line: 90, column: 80, scope: !3946)
!4218 = !DILocation(line: 90, column: 53, scope: !3946)
!4219 = !DILocation(line: 90, column: 77, scope: !3946)
!4220 = !DILocation(line: 90, column: 58, scope: !3946)
!4221 = !DILocation(line: 90, column: 66, scope: !3946)
!4222 = !DILocation(line: 90, column: 51, scope: !3946)
!4223 = !DILocation(line: 90, column: 83, scope: !3946)
!4224 = !DILocation(line: 90, column: 29, scope: !3946)
!4225 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3954)
!4226 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3954)
!4227 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3954)
!4228 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3954)
!4229 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3954)
!4230 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3954)
!4231 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3954)
!4232 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3954)
!4233 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3954)
!4234 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3954)
!4235 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3957)
!4236 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3957)
!4237 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3957)
!4238 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3957)
!4239 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3954)
!4240 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3954)
!4241 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3954)
!4242 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3954)
!4243 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3954)
!4244 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3954)
!4245 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3954)
!4246 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3954)
!4247 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3954)
!4248 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3954)
!4249 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3954)
!4250 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3954)
!4251 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3953)
!4252 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3953)
!4253 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3953)
!4254 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3953)
!4255 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3954)
!4256 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3954)
!4257 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3954)
!4258 = !DILocation(line: 91, column: 39, scope: !3946)
!4259 = !DILocation(line: 91, column: 79, scope: !3946)
!4260 = !DILocation(line: 91, column: 52, scope: !3946)
!4261 = !DILocation(line: 91, column: 76, scope: !3946)
!4262 = !DILocation(line: 91, column: 57, scope: !3946)
!4263 = !DILocation(line: 91, column: 65, scope: !3946)
!4264 = !DILocation(line: 91, column: 50, scope: !3946)
!4265 = !DILocation(line: 91, column: 83, scope: !3946)
!4266 = !DILocation(line: 91, column: 29, scope: !3946)
!4267 = !DILocation(line: 90, column: 88, scope: !3946)
!4268 = !DILocation(line: 90, column: 27, scope: !3946)
!4269 = !DILocation(line: 93, column: 21, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !3924, file: !1056, line: 93, column: 21)
!4271 = !DILocation(line: 93, column: 27, scope: !4270)
!4272 = !DILocation(line: 93, column: 21, scope: !3924)
!4273 = !DILocation(line: 94, column: 21, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !1056, line: 93, column: 35)
!4275 = !DILocation(line: 95, column: 27, scope: !4274)
!4276 = !DILocation(line: 96, column: 17, scope: !4274)
!4277 = !DILocation(line: 97, column: 23, scope: !3924)
!4278 = !DILocation(line: 97, column: 39, scope: !3924)
!4279 = !DILocation(line: 97, column: 37, scope: !3924)
!4280 = !DILocation(line: 97, column: 29, scope: !3924)
!4281 = !DILocation(line: 97, column: 21, scope: !3924)
!4282 = !DILocation(line: 98, column: 47, scope: !3924)
!4283 = !DILocation(line: 98, column: 42, scope: !3924)
!4284 = !DILocation(line: 98, column: 17, scope: !3924)
!4285 = !DILocation(line: 98, column: 39, scope: !3924)
!4286 = !DILocation(line: 98, column: 22, scope: !3924)
!4287 = !DILocation(line: 98, column: 30, scope: !3924)
!4288 = !DILocation(line: 98, column: 45, scope: !3924)
!4289 = !DILocation(line: 99, column: 47, scope: !3924)
!4290 = !DILocation(line: 99, column: 53, scope: !3924)
!4291 = !DILocation(line: 99, column: 51, scope: !3924)
!4292 = !DILocation(line: 99, column: 42, scope: !3924)
!4293 = !DILocation(line: 99, column: 17, scope: !3924)
!4294 = !DILocation(line: 99, column: 39, scope: !3924)
!4295 = !DILocation(line: 99, column: 22, scope: !3924)
!4296 = !DILocation(line: 99, column: 30, scope: !3924)
!4297 = !DILocation(line: 99, column: 45, scope: !3924)
!4298 = !DILocation(line: 100, column: 13, scope: !3924)
!4299 = !DILocation(line: 81, column: 67, scope: !4300)
!4300 = !DILexicalBlockFile(scope: !3925, file: !1056, discriminator: 2)
!4301 = !DILocation(line: 81, column: 13, scope: !4300)
!4302 = distinct !{!4302, !4303}
!4303 = !DILocation(line: 81, column: 13, scope: !3927)
!4304 = !DILocation(line: 101, column: 9, scope: !3927)
!4305 = !DILocation(line: 80, column: 52, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !3928, file: !1056, discriminator: 2)
!4307 = !DILocation(line: 80, column: 9, scope: !4306)
!4308 = distinct !{!4308, !4309}
!4309 = !DILocation(line: 80, column: 9, scope: !3930)
!4310 = !DILocation(line: 102, column: 16, scope: !3968)
!4311 = !DILocation(line: 102, column: 14, scope: !3968)
!4312 = !DILocation(line: 102, column: 21, scope: !4313)
!4313 = !DILexicalBlockFile(scope: !3967, file: !1056, discriminator: 1)
!4314 = !DILocation(line: 102, column: 26, scope: !4313)
!4315 = !DILocation(line: 102, column: 31, scope: !4313)
!4316 = !DILocation(line: 102, column: 39, scope: !4313)
!4317 = !DILocation(line: 102, column: 23, scope: !4313)
!4318 = !DILocation(line: 102, column: 9, scope: !4313)
!4319 = !DILocation(line: 103, column: 20, scope: !3965)
!4320 = !DILocation(line: 103, column: 18, scope: !3965)
!4321 = !DILocation(line: 103, column: 25, scope: !4322)
!4322 = !DILexicalBlockFile(scope: !3964, file: !1056, discriminator: 1)
!4323 = !DILocation(line: 103, column: 29, scope: !4322)
!4324 = !DILocation(line: 103, column: 34, scope: !4322)
!4325 = !DILocation(line: 103, column: 27, scope: !4322)
!4326 = !DILocation(line: 103, column: 13, scope: !4322)
!4327 = !DILocalVariable(name: "temp1", scope: !3963, file: !1056, line: 104, type: !958)
!4328 = !DILocation(line: 104, column: 23, scope: !3963)
!4329 = !DILocation(line: 104, column: 74, scope: !3963)
!4330 = !DILocation(line: 104, column: 45, scope: !3963)
!4331 = !DILocation(line: 104, column: 71, scope: !3963)
!4332 = !DILocation(line: 104, column: 50, scope: !3963)
!4333 = !DILocation(line: 104, column: 58, scope: !3963)
!4334 = !DILocation(line: 104, column: 43, scope: !3963)
!4335 = !DILocation(line: 104, column: 77, scope: !3963)
!4336 = !DILocation(line: 104, column: 31, scope: !3963)
!4337 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3962)
!4338 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3962)
!4339 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3962)
!4340 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3962)
!4341 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3962)
!4342 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3962)
!4343 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3962)
!4344 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3962)
!4345 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3962)
!4346 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3962)
!4347 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3971)
!4348 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3971)
!4349 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3971)
!4350 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3971)
!4351 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3962)
!4352 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3962)
!4353 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3962)
!4354 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3962)
!4355 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3962)
!4356 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3962)
!4357 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3962)
!4358 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3962)
!4359 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3962)
!4360 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3962)
!4361 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3962)
!4362 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3962)
!4363 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3961)
!4364 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3961)
!4365 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3961)
!4366 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3961)
!4367 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3962)
!4368 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3962)
!4369 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3962)
!4370 = !DILocalVariable(name: "temp2", scope: !3963, file: !1056, line: 105, type: !958)
!4371 = !DILocation(line: 105, column: 23, scope: !3963)
!4372 = !DILocation(line: 105, column: 75, scope: !3963)
!4373 = !DILocation(line: 105, column: 46, scope: !3963)
!4374 = !DILocation(line: 105, column: 72, scope: !3963)
!4375 = !DILocation(line: 105, column: 51, scope: !3963)
!4376 = !DILocation(line: 105, column: 59, scope: !3963)
!4377 = !DILocation(line: 105, column: 44, scope: !3963)
!4378 = !DILocation(line: 105, column: 31, scope: !3963)
!4379 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3976)
!4380 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3976)
!4381 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3976)
!4382 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3976)
!4383 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3976)
!4384 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3976)
!4385 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3976)
!4386 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3976)
!4387 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3976)
!4388 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3976)
!4389 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3979)
!4390 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3979)
!4391 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3979)
!4392 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3979)
!4393 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3976)
!4394 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3976)
!4395 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3976)
!4396 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3976)
!4397 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3976)
!4398 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3976)
!4399 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3976)
!4400 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3976)
!4401 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3976)
!4402 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3976)
!4403 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3976)
!4404 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3976)
!4405 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3975)
!4406 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3975)
!4407 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3975)
!4408 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3975)
!4409 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3976)
!4410 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3976)
!4411 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3976)
!4412 = !DILocalVariable(name: "fac", scope: !3963, file: !1056, line: 106, type: !958)
!4413 = !DILocation(line: 106, column: 23, scope: !3963)
!4414 = !DILocation(line: 107, column: 17, scope: !3963)
!4415 = distinct !{!4415, !4414}
!4416 = !DILocation(line: 107, column: 28, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4418, file: !1056, discriminator: 1)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !1056, line: 107, column: 26)
!4419 = distinct !DILexicalBlock(scope: !3963, file: !1056, line: 107, column: 20)
!4420 = !DILocation(line: 107, column: 34, scope: !4417)
!4421 = !DILocation(line: 107, column: 26, scope: !4417)
!4422 = !DILocation(line: 107, column: 46, scope: !4423)
!4423 = !DILexicalBlockFile(scope: !4424, file: !1056, discriminator: 2)
!4424 = distinct !DILexicalBlock(scope: !4418, file: !1056, line: 107, column: 44)
!4425 = !DILocation(line: 107, column: 101, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !4423, file: !1056, discriminator: 4)
!4427 = !DILocation(line: 107, column: 101, scope: !4423)
!4428 = !DILocation(line: 107, column: 112, scope: !4429)
!4429 = !DILexicalBlockFile(scope: !4419, file: !1056, discriminator: 3)
!4430 = !DILocation(line: 108, column: 23, scope: !3963)
!4431 = !DILocation(line: 108, column: 39, scope: !3963)
!4432 = !DILocation(line: 108, column: 37, scope: !3963)
!4433 = !DILocation(line: 108, column: 29, scope: !3963)
!4434 = !DILocation(line: 108, column: 21, scope: !3963)
!4435 = !DILocation(line: 109, column: 49, scope: !3963)
!4436 = !DILocation(line: 109, column: 44, scope: !3963)
!4437 = !DILocation(line: 109, column: 17, scope: !3963)
!4438 = !DILocation(line: 109, column: 41, scope: !3963)
!4439 = !DILocation(line: 109, column: 22, scope: !3963)
!4440 = !DILocation(line: 109, column: 30, scope: !3963)
!4441 = !DILocation(line: 109, column: 47, scope: !3963)
!4442 = !DILocation(line: 110, column: 49, scope: !3963)
!4443 = !DILocation(line: 110, column: 55, scope: !3963)
!4444 = !DILocation(line: 110, column: 53, scope: !3963)
!4445 = !DILocation(line: 110, column: 44, scope: !3963)
!4446 = !DILocation(line: 110, column: 17, scope: !3963)
!4447 = !DILocation(line: 110, column: 41, scope: !3963)
!4448 = !DILocation(line: 110, column: 22, scope: !3963)
!4449 = !DILocation(line: 110, column: 30, scope: !3963)
!4450 = !DILocation(line: 110, column: 47, scope: !3963)
!4451 = !DILocation(line: 111, column: 13, scope: !3963)
!4452 = !DILocation(line: 103, column: 40, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !3964, file: !1056, discriminator: 2)
!4454 = !DILocation(line: 103, column: 13, scope: !4453)
!4455 = distinct !{!4455, !4456}
!4456 = !DILocation(line: 103, column: 13, scope: !3966)
!4457 = !DILocation(line: 112, column: 9, scope: !3966)
!4458 = !DILocation(line: 102, column: 54, scope: !4459)
!4459 = !DILexicalBlockFile(scope: !3967, file: !1056, discriminator: 2)
!4460 = !DILocation(line: 102, column: 9, scope: !4459)
!4461 = distinct !{!4461, !4462}
!4462 = !DILocation(line: 102, column: 9, scope: !3930)
!4463 = !DILocation(line: 113, column: 5, scope: !3930)
!4464 = !DILocation(line: 114, column: 17, scope: !3993)
!4465 = !DILocation(line: 114, column: 14, scope: !3993)
!4466 = !DILocation(line: 114, column: 22, scope: !4467)
!4467 = !DILexicalBlockFile(scope: !3992, file: !1056, discriminator: 1)
!4468 = !DILocation(line: 114, column: 28, scope: !4467)
!4469 = !DILocation(line: 114, column: 35, scope: !4467)
!4470 = !DILocation(line: 114, column: 48, scope: !4467)
!4471 = !DILocation(line: 114, column: 25, scope: !4467)
!4472 = !DILocation(line: 114, column: 9, scope: !4467)
!4473 = !DILocation(line: 115, column: 20, scope: !3990)
!4474 = !DILocation(line: 115, column: 18, scope: !3990)
!4475 = !DILocation(line: 115, column: 25, scope: !4476)
!4476 = !DILexicalBlockFile(scope: !3989, file: !1056, discriminator: 1)
!4477 = !DILocation(line: 115, column: 40, scope: !4476)
!4478 = !DILocation(line: 115, column: 30, scope: !4476)
!4479 = !DILocation(line: 115, column: 35, scope: !4476)
!4480 = !DILocation(line: 115, column: 44, scope: !4476)
!4481 = !DILocation(line: 115, column: 27, scope: !4476)
!4482 = !DILocation(line: 115, column: 13, scope: !4476)
!4483 = !DILocation(line: 116, column: 24, scope: !3988)
!4484 = !DILocation(line: 116, column: 22, scope: !3988)
!4485 = !DILocation(line: 116, column: 29, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !3987, file: !1056, discriminator: 1)
!4487 = !DILocation(line: 116, column: 66, scope: !4486)
!4488 = !DILocation(line: 116, column: 40, scope: !4486)
!4489 = !DILocation(line: 116, column: 50, scope: !4486)
!4490 = !DILocation(line: 116, column: 45, scope: !4486)
!4491 = !DILocation(line: 116, column: 54, scope: !4486)
!4492 = !DILocation(line: 116, column: 33, scope: !4486)
!4493 = !DILocation(line: 116, column: 38, scope: !4486)
!4494 = !DILocation(line: 116, column: 31, scope: !4486)
!4495 = !DILocation(line: 116, column: 17, scope: !4486)
!4496 = !DILocation(line: 117, column: 35, scope: !3985)
!4497 = !DILocation(line: 117, column: 25, scope: !3985)
!4498 = !DILocation(line: 117, column: 30, scope: !3985)
!4499 = !DILocation(line: 117, column: 39, scope: !3985)
!4500 = !DILocation(line: 117, column: 25, scope: !3986)
!4501 = !DILocation(line: 118, column: 94, scope: !3985)
!4502 = !DILocation(line: 118, column: 66, scope: !3985)
!4503 = !DILocation(line: 118, column: 91, scope: !3985)
!4504 = !DILocation(line: 118, column: 76, scope: !3985)
!4505 = !DILocation(line: 118, column: 71, scope: !3985)
!4506 = !DILocation(line: 118, column: 80, scope: !3985)
!4507 = !DILocation(line: 118, column: 97, scope: !3985)
!4508 = !DILocation(line: 118, column: 56, scope: !3985)
!4509 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !3984)
!4510 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !3984)
!4511 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !3984)
!4512 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !3984)
!4513 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !3984)
!4514 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !3984)
!4515 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !3984)
!4516 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !3984)
!4517 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !3984)
!4518 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !3984)
!4519 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3997)
!4520 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3997)
!4521 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3997)
!4522 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3997)
!4523 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !3984)
!4524 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !3984)
!4525 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !3984)
!4526 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !3984)
!4527 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !3984)
!4528 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !3984)
!4529 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !3984)
!4530 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !3984)
!4531 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !3984)
!4532 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !3984)
!4533 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !3984)
!4534 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !3984)
!4535 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !3983)
!4536 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !3983)
!4537 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !3983)
!4538 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !3983)
!4539 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !3984)
!4540 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !3984)
!4541 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !3984)
!4542 = !DILocation(line: 118, column: 51, scope: !3985)
!4543 = !DILocation(line: 118, column: 25, scope: !3985)
!4544 = !DILocation(line: 118, column: 48, scope: !3985)
!4545 = !DILocation(line: 118, column: 35, scope: !3985)
!4546 = !DILocation(line: 118, column: 30, scope: !3985)
!4547 = !DILocation(line: 118, column: 39, scope: !3985)
!4548 = !DILocation(line: 118, column: 54, scope: !3985)
!4549 = !DILocation(line: 120, column: 95, scope: !3985)
!4550 = !DILocation(line: 120, column: 67, scope: !3985)
!4551 = !DILocation(line: 120, column: 92, scope: !3985)
!4552 = !DILocation(line: 120, column: 77, scope: !3985)
!4553 = !DILocation(line: 120, column: 72, scope: !3985)
!4554 = !DILocation(line: 120, column: 81, scope: !3985)
!4555 = !DILocation(line: 120, column: 97, scope: !3985)
!4556 = !DILocation(line: 120, column: 102, scope: !3985)
!4557 = !DILocation(line: 120, column: 56, scope: !3985)
!4558 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !4002)
!4559 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !4002)
!4560 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !4002)
!4561 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !4002)
!4562 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !4002)
!4563 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !4002)
!4564 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !4002)
!4565 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !4002)
!4566 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !4002)
!4567 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4002)
!4568 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4005)
!4569 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4005)
!4570 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4005)
!4571 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4005)
!4572 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !4002)
!4573 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !4002)
!4574 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !4002)
!4575 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !4002)
!4576 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !4002)
!4577 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !4002)
!4578 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !4002)
!4579 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !4002)
!4580 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !4002)
!4581 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !4002)
!4582 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !4002)
!4583 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4002)
!4584 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4001)
!4585 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4001)
!4586 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4001)
!4587 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4001)
!4588 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !4002)
!4589 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !4002)
!4590 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !4002)
!4591 = !DILocation(line: 121, column: 95, scope: !3985)
!4592 = !DILocation(line: 121, column: 67, scope: !3985)
!4593 = !DILocation(line: 121, column: 92, scope: !3985)
!4594 = !DILocation(line: 121, column: 77, scope: !3985)
!4595 = !DILocation(line: 121, column: 72, scope: !3985)
!4596 = !DILocation(line: 121, column: 81, scope: !3985)
!4597 = !DILocation(line: 121, column: 98, scope: !3985)
!4598 = !DILocation(line: 121, column: 58, scope: !3985)
!4599 = !DILocation(line: 121, column: 56, scope: !3985)
!4600 = !DILocation(line: 120, column: 51, scope: !3985)
!4601 = !DILocation(line: 120, column: 25, scope: !3985)
!4602 = !DILocation(line: 120, column: 48, scope: !3985)
!4603 = !DILocation(line: 120, column: 35, scope: !3985)
!4604 = !DILocation(line: 120, column: 30, scope: !3985)
!4605 = !DILocation(line: 120, column: 39, scope: !3985)
!4606 = !DILocation(line: 120, column: 54, scope: !3985)
!4607 = !DILocation(line: 122, column: 51, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !3986, file: !1056, line: 122, column: 25)
!4609 = !DILocation(line: 122, column: 25, scope: !4608)
!4610 = !DILocation(line: 122, column: 48, scope: !4608)
!4611 = !DILocation(line: 122, column: 35, scope: !4608)
!4612 = !DILocation(line: 122, column: 30, scope: !4608)
!4613 = !DILocation(line: 122, column: 39, scope: !4608)
!4614 = !DILocation(line: 122, column: 54, scope: !4608)
!4615 = !DILocation(line: 122, column: 25, scope: !3986)
!4616 = !DILocation(line: 123, column: 25, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4608, file: !1056, line: 122, column: 62)
!4618 = !DILocation(line: 124, column: 51, scope: !4617)
!4619 = !DILocation(line: 124, column: 25, scope: !4617)
!4620 = !DILocation(line: 124, column: 48, scope: !4617)
!4621 = !DILocation(line: 124, column: 35, scope: !4617)
!4622 = !DILocation(line: 124, column: 30, scope: !4617)
!4623 = !DILocation(line: 124, column: 39, scope: !4617)
!4624 = !DILocation(line: 124, column: 54, scope: !4617)
!4625 = !DILocation(line: 125, column: 21, scope: !4617)
!4626 = !DILocation(line: 126, column: 17, scope: !3986)
!4627 = !DILocation(line: 116, column: 72, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !3987, file: !1056, discriminator: 2)
!4629 = !DILocation(line: 116, column: 17, scope: !4628)
!4630 = distinct !{!4630, !4631}
!4631 = !DILocation(line: 116, column: 17, scope: !3989)
!4632 = !DILocation(line: 126, column: 17, scope: !4633)
!4633 = !DILexicalBlockFile(scope: !3988, file: !1056, discriminator: 1)
!4634 = !DILocation(line: 115, column: 57, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !3989, file: !1056, discriminator: 2)
!4636 = !DILocation(line: 115, column: 13, scope: !4635)
!4637 = distinct !{!4637, !4638}
!4638 = !DILocation(line: 115, column: 13, scope: !3991)
!4639 = !DILocation(line: 128, column: 20, scope: !4014)
!4640 = !DILocation(line: 128, column: 18, scope: !4014)
!4641 = !DILocation(line: 128, column: 25, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !4013, file: !1056, discriminator: 1)
!4643 = !DILocation(line: 128, column: 40, scope: !4642)
!4644 = !DILocation(line: 128, column: 30, scope: !4642)
!4645 = !DILocation(line: 128, column: 35, scope: !4642)
!4646 = !DILocation(line: 128, column: 44, scope: !4642)
!4647 = !DILocation(line: 128, column: 27, scope: !4642)
!4648 = !DILocation(line: 128, column: 13, scope: !4642)
!4649 = !DILocation(line: 129, column: 24, scope: !4012)
!4650 = !DILocation(line: 129, column: 22, scope: !4012)
!4651 = !DILocation(line: 129, column: 29, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !4011, file: !1056, discriminator: 1)
!4653 = !DILocation(line: 129, column: 33, scope: !4652)
!4654 = !DILocation(line: 129, column: 38, scope: !4652)
!4655 = !DILocation(line: 129, column: 31, scope: !4652)
!4656 = !DILocation(line: 129, column: 17, scope: !4652)
!4657 = !DILocation(line: 131, column: 69, scope: !4011)
!4658 = !DILocation(line: 131, column: 39, scope: !4011)
!4659 = !DILocation(line: 131, column: 66, scope: !4011)
!4660 = !DILocation(line: 131, column: 49, scope: !4011)
!4661 = !DILocation(line: 131, column: 44, scope: !4011)
!4662 = !DILocation(line: 131, column: 53, scope: !4011)
!4663 = !DILocation(line: 131, column: 37, scope: !4011)
!4664 = !DILocation(line: 131, column: 25, scope: !4011)
!4665 = !DILocation(line: 295, column: 17, scope: !3917, inlinedAt: !4010)
!4666 = !DILocation(line: 295, column: 14, scope: !3917, inlinedAt: !4010)
!4667 = !DILocation(line: 295, column: 19, scope: !3917, inlinedAt: !4010)
!4668 = !DILocation(line: 295, column: 22, scope: !4092, inlinedAt: !4010)
!4669 = !DILocation(line: 295, column: 24, scope: !4092, inlinedAt: !4010)
!4670 = !DILocation(line: 295, column: 9, scope: !4092, inlinedAt: !4010)
!4671 = !DILocation(line: 296, column: 30, scope: !3917, inlinedAt: !4010)
!4672 = !DILocation(line: 296, column: 31, scope: !3917, inlinedAt: !4010)
!4673 = !DILocation(line: 296, column: 37, scope: !3917, inlinedAt: !4010)
!4674 = !DILocation(line: 296, column: 16, scope: !3917, inlinedAt: !4010)
!4675 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4017)
!4676 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4017)
!4677 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4017)
!4678 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4017)
!4679 = !DILocation(line: 296, column: 9, scope: !3917, inlinedAt: !4010)
!4680 = !DILocation(line: 298, column: 14, scope: !3916, inlinedAt: !4010)
!4681 = !DILocation(line: 298, column: 16, scope: !3916, inlinedAt: !4010)
!4682 = !DILocation(line: 298, column: 14, scope: !3917, inlinedAt: !4010)
!4683 = !DILocation(line: 299, column: 9, scope: !3916, inlinedAt: !4010)
!4684 = !DILocation(line: 301, column: 14, scope: !3915, inlinedAt: !4010)
!4685 = !DILocation(line: 301, column: 16, scope: !3915, inlinedAt: !4010)
!4686 = !DILocation(line: 301, column: 14, scope: !3916, inlinedAt: !4010)
!4687 = !DILocation(line: 302, column: 35, scope: !3915, inlinedAt: !4010)
!4688 = !DILocation(line: 302, column: 36, scope: !3915, inlinedAt: !4010)
!4689 = !DILocation(line: 302, column: 31, scope: !3915, inlinedAt: !4010)
!4690 = !DILocation(line: 302, column: 16, scope: !3915, inlinedAt: !4010)
!4691 = !DILocation(line: 43, column: 11, scope: !3909, inlinedAt: !4009)
!4692 = !DILocation(line: 43, column: 7, scope: !3909, inlinedAt: !4009)
!4693 = !DILocation(line: 43, column: 9, scope: !3909, inlinedAt: !4009)
!4694 = !DILocation(line: 44, column: 14, scope: !3909, inlinedAt: !4009)
!4695 = !DILocation(line: 302, column: 9, scope: !3915, inlinedAt: !4010)
!4696 = !DILocation(line: 305, column: 9, scope: !3915, inlinedAt: !4010)
!4697 = !DILocation(line: 306, column: 1, scope: !3918, inlinedAt: !4010)
!4698 = !DILocation(line: 130, column: 49, scope: !4011)
!4699 = !DILocation(line: 130, column: 21, scope: !4011)
!4700 = !DILocation(line: 130, column: 46, scope: !4011)
!4701 = !DILocation(line: 130, column: 31, scope: !4011)
!4702 = !DILocation(line: 130, column: 26, scope: !4011)
!4703 = !DILocation(line: 130, column: 35, scope: !4011)
!4704 = !DILocation(line: 130, column: 52, scope: !4011)
!4705 = !DILocation(line: 129, column: 44, scope: !4706)
!4706 = !DILexicalBlockFile(scope: !4011, file: !1056, discriminator: 2)
!4707 = !DILocation(line: 129, column: 17, scope: !4706)
!4708 = distinct !{!4708, !4709}
!4709 = !DILocation(line: 129, column: 17, scope: !4013)
!4710 = !DILocation(line: 131, column: 71, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4012, file: !1056, discriminator: 1)
!4712 = !DILocation(line: 128, column: 59, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !4013, file: !1056, discriminator: 2)
!4714 = !DILocation(line: 128, column: 13, scope: !4713)
!4715 = distinct !{!4715, !4716}
!4716 = !DILocation(line: 128, column: 13, scope: !3991)
!4717 = !DILocation(line: 132, column: 9, scope: !3991)
!4718 = !DILocation(line: 114, column: 55, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !3992, file: !1056, discriminator: 2)
!4720 = !DILocation(line: 114, column: 9, scope: !4719)
!4721 = distinct !{!4721, !4722}
!4722 = !DILocation(line: 114, column: 9, scope: !3994)
!4723 = !DILocation(line: 134, column: 1, scope: !2573)
!4724 = distinct !DISubprogram(name: "sbr_qmf_analysis", scope: !1001, file: !1001, line: 1171, type: !4725, isLocal: true, isDefinition: true, scopeLine: 1175, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{null, !2440, !4727, !2562, !1346, !955, !955, !4728, !992}
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64, align: 64)
!4729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 65536, align: 32, elements: !962)
!4730 = !DILocalVariable(name: "dsp", arg: 1, scope: !4724, file: !1001, line: 1171, type: !2440)
!4731 = !DILocation(line: 1171, column: 49, scope: !4724)
!4732 = !DILocalVariable(name: "mdct", arg: 2, scope: !4724, file: !1001, line: 1171, type: !4727)
!4733 = !DILocation(line: 1171, column: 66, scope: !4724)
!4734 = !DILocalVariable(name: "sbrdsp", arg: 3, scope: !4724, file: !1001, line: 1173, type: !2562)
!4735 = !DILocation(line: 1173, column: 45, scope: !4724)
!4736 = !DILocalVariable(name: "in", arg: 4, scope: !4724, file: !1001, line: 1173, type: !1346)
!4737 = !DILocation(line: 1173, column: 69, scope: !4724)
!4738 = !DILocalVariable(name: "x", arg: 5, scope: !4724, file: !1001, line: 1173, type: !955)
!4739 = !DILocation(line: 1173, column: 83, scope: !4724)
!4740 = !DILocalVariable(name: "z", arg: 6, scope: !4724, file: !1001, line: 1174, type: !955)
!4741 = !DILocation(line: 1174, column: 39, scope: !4724)
!4742 = !DILocalVariable(name: "W", arg: 7, scope: !4724, file: !1001, line: 1174, type: !4728)
!4743 = !DILocation(line: 1174, column: 56, scope: !4724)
!4744 = !DILocalVariable(name: "buf_idx", arg: 8, scope: !4724, file: !1001, line: 1174, type: !992)
!4745 = !DILocation(line: 1174, column: 77, scope: !4724)
!4746 = !DILocalVariable(name: "i", scope: !4724, file: !1001, line: 1176, type: !992)
!4747 = !DILocation(line: 1176, column: 9, scope: !4724)
!4748 = !DILocation(line: 1180, column: 12, scope: !4724)
!4749 = !DILocation(line: 1180, column: 5, scope: !4724)
!4750 = !DILocation(line: 1180, column: 16, scope: !4724)
!4751 = !DILocation(line: 1180, column: 17, scope: !4724)
!4752 = !DILocation(line: 1181, column: 12, scope: !4724)
!4753 = !DILocation(line: 1181, column: 13, scope: !4724)
!4754 = !DILocation(line: 1181, column: 5, scope: !4724)
!4755 = !DILocation(line: 1181, column: 19, scope: !4724)
!4756 = !DILocation(line: 1182, column: 12, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4724, file: !1001, line: 1182, column: 5)
!4758 = !DILocation(line: 1182, column: 10, scope: !4757)
!4759 = !DILocation(line: 1182, column: 17, scope: !4760)
!4760 = !DILexicalBlockFile(scope: !4761, file: !1001, discriminator: 1)
!4761 = distinct !DILexicalBlock(scope: !4757, file: !1001, line: 1182, column: 5)
!4762 = !DILocation(line: 1182, column: 19, scope: !4760)
!4763 = !DILocation(line: 1182, column: 5, scope: !4760)
!4764 = !DILocation(line: 1184, column: 9, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !1001, line: 1182, column: 30)
!4766 = !DILocation(line: 1184, column: 14, scope: !4765)
!4767 = !DILocation(line: 1184, column: 34, scope: !4765)
!4768 = !DILocation(line: 1184, column: 56, scope: !4765)
!4769 = !DILocation(line: 1185, column: 9, scope: !4765)
!4770 = !DILocation(line: 1185, column: 17, scope: !4765)
!4771 = !DILocation(line: 1185, column: 25, scope: !4765)
!4772 = !DILocation(line: 1186, column: 9, scope: !4765)
!4773 = !DILocation(line: 1186, column: 17, scope: !4765)
!4774 = !DILocation(line: 1186, column: 33, scope: !4765)
!4775 = !DILocation(line: 1202, column: 9, scope: !4765)
!4776 = !DILocation(line: 1202, column: 15, scope: !4765)
!4777 = !DILocation(line: 1202, column: 26, scope: !4765)
!4778 = !DILocation(line: 1202, column: 32, scope: !4765)
!4779 = !DILocation(line: 1202, column: 35, scope: !4765)
!4780 = !DILocation(line: 1202, column: 36, scope: !4765)
!4781 = !DILocation(line: 1203, column: 9, scope: !4765)
!4782 = !DILocation(line: 1203, column: 17, scope: !4765)
!4783 = !DILocation(line: 1203, column: 45, scope: !4765)
!4784 = !DILocation(line: 1203, column: 34, scope: !4765)
!4785 = !DILocation(line: 1203, column: 36, scope: !4765)
!4786 = !DILocation(line: 1203, column: 49, scope: !4765)
!4787 = !DILocation(line: 1204, column: 11, scope: !4765)
!4788 = !DILocation(line: 1205, column: 5, scope: !4765)
!4789 = !DILocation(line: 1182, column: 26, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4761, file: !1001, discriminator: 2)
!4791 = !DILocation(line: 1182, column: 5, scope: !4790)
!4792 = distinct !{!4792, !4793}
!4793 = !DILocation(line: 1182, column: 5, scope: !4724)
!4794 = !DILocation(line: 1206, column: 1, scope: !4724)
!4795 = !DILocalVariable(name: "sbr", arg: 1, scope: !2578, file: !1056, line: 195, type: !1123)
!4796 = !DILocation(line: 195, column: 48, scope: !2578)
!4797 = !DILocalVariable(name: "ch_data", arg: 2, scope: !2578, file: !1056, line: 195, type: !2553)
!4798 = !DILocation(line: 195, column: 62, scope: !2578)
!4799 = !DILocalVariable(name: "i", scope: !2578, file: !1056, line: 197, type: !992)
!4800 = !DILocation(line: 197, column: 9, scope: !2578)
!4801 = !DILocalVariable(name: "new_bw", scope: !2578, file: !1056, line: 198, type: !958)
!4802 = !DILocation(line: 198, column: 11, scope: !2578)
!4803 = !DILocation(line: 201, column: 12, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !2578, file: !1056, line: 201, column: 5)
!4805 = !DILocation(line: 201, column: 10, scope: !4804)
!4806 = !DILocation(line: 201, column: 17, scope: !4807)
!4807 = !DILexicalBlockFile(scope: !4808, file: !1056, discriminator: 1)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !1056, line: 201, column: 5)
!4809 = !DILocation(line: 201, column: 21, scope: !4807)
!4810 = !DILocation(line: 201, column: 26, scope: !4807)
!4811 = !DILocation(line: 201, column: 19, scope: !4807)
!4812 = !DILocation(line: 201, column: 5, scope: !4807)
!4813 = !DILocation(line: 202, column: 38, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !1056, line: 202, column: 13)
!4815 = distinct !DILexicalBlock(scope: !4808, file: !1056, line: 201, column: 36)
!4816 = !DILocation(line: 202, column: 13, scope: !4814)
!4817 = !DILocation(line: 202, column: 22, scope: !4814)
!4818 = !DILocation(line: 202, column: 68, scope: !4814)
!4819 = !DILocation(line: 202, column: 43, scope: !4814)
!4820 = !DILocation(line: 202, column: 52, scope: !4814)
!4821 = !DILocation(line: 202, column: 41, scope: !4814)
!4822 = !DILocation(line: 202, column: 71, scope: !4814)
!4823 = !DILocation(line: 202, column: 13, scope: !4815)
!4824 = !DILocation(line: 203, column: 20, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4814, file: !1056, line: 202, column: 77)
!4826 = !DILocation(line: 204, column: 9, scope: !4825)
!4827 = !DILocation(line: 205, column: 54, scope: !4814)
!4828 = !DILocation(line: 205, column: 29, scope: !4814)
!4829 = !DILocation(line: 205, column: 38, scope: !4814)
!4830 = !DILocation(line: 205, column: 22, scope: !4814)
!4831 = !DILocation(line: 205, column: 20, scope: !4814)
!4832 = !DILocation(line: 207, column: 13, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4815, file: !1056, line: 207, column: 13)
!4834 = !DILocation(line: 207, column: 40, scope: !4833)
!4835 = !DILocation(line: 207, column: 22, scope: !4833)
!4836 = !DILocation(line: 207, column: 31, scope: !4833)
!4837 = !DILocation(line: 207, column: 20, scope: !4833)
!4838 = !DILocation(line: 207, column: 13, scope: !4815)
!4839 = !DILocation(line: 208, column: 30, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4833, file: !1056, line: 207, column: 44)
!4841 = !DILocation(line: 208, column: 28, scope: !4840)
!4842 = !DILocation(line: 208, column: 65, scope: !4840)
!4843 = !DILocation(line: 208, column: 47, scope: !4840)
!4844 = !DILocation(line: 208, column: 56, scope: !4840)
!4845 = !DILocation(line: 208, column: 45, scope: !4840)
!4846 = !DILocation(line: 208, column: 37, scope: !4840)
!4847 = !DILocation(line: 208, column: 20, scope: !4840)
!4848 = !DILocation(line: 209, column: 9, scope: !4840)
!4849 = !DILocation(line: 210, column: 33, scope: !4833)
!4850 = !DILocation(line: 210, column: 31, scope: !4833)
!4851 = !DILocation(line: 210, column: 71, scope: !4833)
!4852 = !DILocation(line: 210, column: 53, scope: !4833)
!4853 = !DILocation(line: 210, column: 62, scope: !4833)
!4854 = !DILocation(line: 210, column: 51, scope: !4833)
!4855 = !DILocation(line: 210, column: 40, scope: !4833)
!4856 = !DILocation(line: 210, column: 20, scope: !4833)
!4857 = !DILocation(line: 211, column: 32, scope: !4815)
!4858 = !DILocation(line: 211, column: 39, scope: !4815)
!4859 = !DILocation(line: 211, column: 32, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4815, file: !1056, discriminator: 1)
!4861 = !DILocation(line: 211, column: 60, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4815, file: !1056, discriminator: 2)
!4863 = !DILocation(line: 211, column: 32, scope: !4862)
!4864 = !DILocation(line: 211, column: 32, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4815, file: !1056, discriminator: 3)
!4866 = !DILocation(line: 211, column: 27, scope: !4865)
!4867 = !DILocation(line: 211, column: 9, scope: !4865)
!4868 = !DILocation(line: 211, column: 18, scope: !4865)
!4869 = !DILocation(line: 211, column: 30, scope: !4865)
!4870 = !DILocation(line: 212, column: 5, scope: !4815)
!4871 = !DILocation(line: 201, column: 32, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !4808, file: !1056, discriminator: 2)
!4873 = !DILocation(line: 201, column: 5, scope: !4872)
!4874 = distinct !{!4874, !4875}
!4875 = !DILocation(line: 201, column: 5, scope: !2578)
!4876 = !DILocation(line: 213, column: 1, scope: !2578)
!4877 = distinct !DISubprogram(name: "sbr_hf_gen", scope: !1001, file: !1001, line: 1291, type: !4878, isLocal: true, isDefinition: true, scopeLine: 1296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!992, !1504, !1123, !2546, !965, !970, !970, !1346, !1626, !992}
!4880 = !DILocalVariable(name: "ac", arg: 1, scope: !4877, file: !1001, line: 1291, type: !1504)
!4881 = !DILocation(line: 1291, column: 35, scope: !4877)
!4882 = !DILocalVariable(name: "sbr", arg: 2, scope: !4877, file: !1001, line: 1291, type: !1123)
!4883 = !DILocation(line: 1291, column: 64, scope: !4877)
!4884 = !DILocalVariable(name: "X_high", arg: 3, scope: !4877, file: !1001, line: 1292, type: !2546)
!4885 = !DILocation(line: 1292, column: 32, scope: !4877)
!4886 = !DILocalVariable(name: "X_low", arg: 4, scope: !4877, file: !1001, line: 1292, type: !965)
!4887 = !DILocation(line: 1292, column: 66, scope: !4877)
!4888 = !DILocalVariable(name: "alpha0", arg: 5, scope: !4877, file: !1001, line: 1293, type: !970)
!4889 = !DILocation(line: 1293, column: 40, scope: !4877)
!4890 = !DILocalVariable(name: "alpha1", arg: 6, scope: !4877, file: !1001, line: 1293, type: !970)
!4891 = !DILocation(line: 1293, column: 69, scope: !4877)
!4892 = !DILocalVariable(name: "bw_array", arg: 7, scope: !4877, file: !1001, line: 1294, type: !1346)
!4893 = !DILocation(line: 1294, column: 38, scope: !4877)
!4894 = !DILocalVariable(name: "t_env", arg: 8, scope: !4877, file: !1001, line: 1294, type: !1626)
!4895 = !DILocation(line: 1294, column: 66, scope: !4877)
!4896 = !DILocalVariable(name: "bs_num_env", arg: 9, scope: !4877, file: !1001, line: 1295, type: !992)
!4897 = !DILocation(line: 1295, column: 27, scope: !4877)
!4898 = !DILocalVariable(name: "j", scope: !4877, file: !1001, line: 1297, type: !992)
!4899 = !DILocation(line: 1297, column: 9, scope: !4877)
!4900 = !DILocalVariable(name: "x", scope: !4877, file: !1001, line: 1297, type: !992)
!4901 = !DILocation(line: 1297, column: 12, scope: !4877)
!4902 = !DILocalVariable(name: "g", scope: !4877, file: !1001, line: 1298, type: !992)
!4903 = !DILocation(line: 1298, column: 9, scope: !4877)
!4904 = !DILocalVariable(name: "k", scope: !4877, file: !1001, line: 1299, type: !992)
!4905 = !DILocation(line: 1299, column: 9, scope: !4877)
!4906 = !DILocation(line: 1299, column: 13, scope: !4877)
!4907 = !DILocation(line: 1299, column: 18, scope: !4877)
!4908 = !DILocation(line: 1300, column: 12, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4877, file: !1001, line: 1300, column: 5)
!4910 = !DILocation(line: 1300, column: 10, scope: !4909)
!4911 = !DILocation(line: 1300, column: 17, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !4913, file: !1001, discriminator: 1)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !1001, line: 1300, column: 5)
!4914 = !DILocation(line: 1300, column: 21, scope: !4912)
!4915 = !DILocation(line: 1300, column: 26, scope: !4912)
!4916 = !DILocation(line: 1300, column: 19, scope: !4912)
!4917 = !DILocation(line: 1300, column: 5, scope: !4912)
!4918 = !DILocation(line: 1301, column: 16, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !1001, line: 1301, column: 9)
!4920 = distinct !DILexicalBlock(scope: !4913, file: !1001, line: 1300, column: 44)
!4921 = !DILocation(line: 1301, column: 14, scope: !4919)
!4922 = !DILocation(line: 1301, column: 21, scope: !4923)
!4923 = !DILexicalBlockFile(scope: !4924, file: !1001, discriminator: 1)
!4924 = distinct !DILexicalBlock(scope: !4919, file: !1001, line: 1301, column: 9)
!4925 = !DILocation(line: 1301, column: 49, scope: !4923)
!4926 = !DILocation(line: 1301, column: 25, scope: !4923)
!4927 = !DILocation(line: 1301, column: 30, scope: !4923)
!4928 = !DILocation(line: 1301, column: 23, scope: !4923)
!4929 = !DILocation(line: 1301, column: 9, scope: !4923)
!4930 = !DILocalVariable(name: "p", scope: !4931, file: !1001, line: 1302, type: !1585)
!4931 = distinct !DILexicalBlock(scope: !4924, file: !1001, line: 1301, column: 63)
!4932 = !DILocation(line: 1302, column: 23, scope: !4931)
!4933 = !DILocation(line: 1302, column: 52, scope: !4931)
!4934 = !DILocation(line: 1302, column: 27, scope: !4931)
!4935 = !DILocation(line: 1302, column: 32, scope: !4931)
!4936 = !DILocation(line: 1302, column: 57, scope: !4931)
!4937 = !DILocation(line: 1302, column: 55, scope: !4931)
!4938 = !DILocation(line: 1303, column: 13, scope: !4931)
!4939 = !DILocation(line: 1303, column: 20, scope: !4940)
!4940 = !DILexicalBlockFile(scope: !4931, file: !1001, discriminator: 1)
!4941 = !DILocation(line: 1303, column: 25, scope: !4940)
!4942 = !DILocation(line: 1303, column: 30, scope: !4940)
!4943 = !DILocation(line: 1303, column: 22, scope: !4940)
!4944 = !DILocation(line: 1303, column: 34, scope: !4940)
!4945 = !DILocation(line: 1303, column: 37, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4931, file: !1001, discriminator: 2)
!4947 = !DILocation(line: 1303, column: 60, scope: !4946)
!4948 = !DILocation(line: 1303, column: 42, scope: !4946)
!4949 = !DILocation(line: 1303, column: 47, scope: !4946)
!4950 = !DILocation(line: 1303, column: 39, scope: !4946)
!4951 = !DILocation(line: 1303, column: 13, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4931, file: !1001, discriminator: 3)
!4953 = !DILocation(line: 1304, column: 18, scope: !4931)
!4954 = !DILocation(line: 1303, column: 13, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4931, file: !1001, discriminator: 4)
!4956 = distinct !{!4956, !4938}
!4957 = !DILocation(line: 1305, column: 14, scope: !4931)
!4958 = !DILocation(line: 1307, column: 17, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4931, file: !1001, line: 1307, column: 17)
!4960 = !DILocation(line: 1307, column: 19, scope: !4959)
!4961 = !DILocation(line: 1307, column: 17, scope: !4931)
!4962 = !DILocation(line: 1308, column: 24, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !1001, line: 1307, column: 24)
!4964 = !DILocation(line: 1308, column: 28, scope: !4963)
!4965 = !DILocation(line: 1309, column: 71, scope: !4963)
!4966 = !DILocation(line: 1308, column: 17, scope: !4963)
!4967 = !DILocation(line: 1310, column: 17, scope: !4963)
!4968 = !DILocation(line: 1313, column: 13, scope: !4931)
!4969 = !DILocation(line: 1313, column: 18, scope: !4931)
!4970 = !DILocation(line: 1313, column: 22, scope: !4931)
!4971 = !DILocation(line: 1313, column: 36, scope: !4931)
!4972 = !DILocation(line: 1313, column: 29, scope: !4931)
!4973 = !DILocation(line: 1313, column: 39, scope: !4931)
!4974 = !DILocation(line: 1314, column: 35, scope: !4931)
!4975 = !DILocation(line: 1314, column: 29, scope: !4931)
!4976 = !DILocation(line: 1314, column: 38, scope: !4931)
!4977 = !DILocation(line: 1315, column: 36, scope: !4931)
!4978 = !DILocation(line: 1315, column: 29, scope: !4931)
!4979 = !DILocation(line: 1315, column: 47, scope: !4931)
!4980 = !DILocation(line: 1315, column: 40, scope: !4931)
!4981 = !DILocation(line: 1315, column: 60, scope: !4931)
!4982 = !DILocation(line: 1315, column: 51, scope: !4931)
!4983 = !DILocation(line: 1316, column: 33, scope: !4931)
!4984 = !DILocation(line: 1316, column: 31, scope: !4931)
!4985 = !DILocation(line: 1316, column: 53, scope: !4931)
!4986 = !DILocation(line: 1316, column: 47, scope: !4931)
!4987 = !DILocation(line: 1316, column: 45, scope: !4931)
!4988 = !DILocation(line: 1317, column: 9, scope: !4931)
!4989 = !DILocation(line: 1301, column: 54, scope: !4990)
!4990 = !DILexicalBlockFile(scope: !4924, file: !1001, discriminator: 2)
!4991 = !DILocation(line: 1301, column: 59, scope: !4990)
!4992 = !DILocation(line: 1301, column: 9, scope: !4990)
!4993 = distinct !{!4993, !4994}
!4994 = !DILocation(line: 1301, column: 9, scope: !4920)
!4995 = !DILocation(line: 1318, column: 5, scope: !4920)
!4996 = !DILocation(line: 1300, column: 40, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4913, file: !1001, discriminator: 2)
!4998 = !DILocation(line: 1300, column: 5, scope: !4997)
!4999 = distinct !{!4999, !5000}
!5000 = !DILocation(line: 1300, column: 5, scope: !4877)
!5001 = !DILocation(line: 1319, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4877, file: !1001, line: 1319, column: 9)
!5003 = !DILocation(line: 1319, column: 13, scope: !5002)
!5004 = !DILocation(line: 1319, column: 18, scope: !5002)
!5005 = !DILocation(line: 1319, column: 25, scope: !5002)
!5006 = !DILocation(line: 1319, column: 30, scope: !5002)
!5007 = !DILocation(line: 1319, column: 23, scope: !5002)
!5008 = !DILocation(line: 1319, column: 11, scope: !5002)
!5009 = !DILocation(line: 1319, column: 9, scope: !4877)
!5010 = !DILocation(line: 1320, column: 16, scope: !5002)
!5011 = !DILocation(line: 1320, column: 25, scope: !5002)
!5012 = !DILocation(line: 1320, column: 23, scope: !5002)
!5013 = !DILocation(line: 1320, column: 9, scope: !5002)
!5014 = !DILocation(line: 1320, column: 32, scope: !5002)
!5015 = !DILocation(line: 1320, column: 37, scope: !5002)
!5016 = !DILocation(line: 1320, column: 44, scope: !5002)
!5017 = !DILocation(line: 1320, column: 49, scope: !5002)
!5018 = !DILocation(line: 1320, column: 42, scope: !5002)
!5019 = !DILocation(line: 1320, column: 57, scope: !5002)
!5020 = !DILocation(line: 1320, column: 55, scope: !5002)
!5021 = !DILocation(line: 1320, column: 31, scope: !5002)
!5022 = !DILocation(line: 1320, column: 60, scope: !5002)
!5023 = !DILocation(line: 1322, column: 5, scope: !4877)
!5024 = !DILocation(line: 1323, column: 1, scope: !4877)
!5025 = distinct !DISubprogram(name: "sbr_mapping", scope: !1001, file: !1001, line: 1365, type: !5026, isLocal: true, isDefinition: true, scopeLine: 1367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{!992, !1504, !1123, !2553, !1793}
!5028 = !DILocalVariable(name: "ac", arg: 1, scope: !5025, file: !1001, line: 1365, type: !1504)
!5029 = !DILocation(line: 1365, column: 36, scope: !5025)
!5030 = !DILocalVariable(name: "sbr", arg: 2, scope: !5025, file: !1001, line: 1365, type: !1123)
!5031 = !DILocation(line: 1365, column: 65, scope: !5025)
!5032 = !DILocalVariable(name: "ch_data", arg: 3, scope: !5025, file: !1001, line: 1366, type: !2553)
!5033 = !DILocation(line: 1366, column: 34, scope: !5025)
!5034 = !DILocalVariable(name: "e_a", arg: 4, scope: !5025, file: !1001, line: 1366, type: !1793)
!5035 = !DILocation(line: 1366, column: 47, scope: !5025)
!5036 = !DILocalVariable(name: "e", scope: !5025, file: !1001, line: 1368, type: !992)
!5037 = !DILocation(line: 1368, column: 9, scope: !5025)
!5038 = !DILocalVariable(name: "i", scope: !5025, file: !1001, line: 1368, type: !992)
!5039 = !DILocation(line: 1368, column: 12, scope: !5025)
!5040 = !DILocalVariable(name: "m", scope: !5025, file: !1001, line: 1368, type: !992)
!5041 = !DILocation(line: 1368, column: 15, scope: !5025)
!5042 = !DILocation(line: 1370, column: 12, scope: !5025)
!5043 = !DILocation(line: 1370, column: 21, scope: !5025)
!5044 = !DILocation(line: 1370, column: 5, scope: !5025)
!5045 = !DILocation(line: 1371, column: 12, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5025, file: !1001, line: 1371, column: 5)
!5047 = !DILocation(line: 1371, column: 10, scope: !5046)
!5048 = !DILocation(line: 1371, column: 17, scope: !5049)
!5049 = !DILexicalBlockFile(scope: !5050, file: !1001, discriminator: 1)
!5050 = distinct !DILexicalBlock(scope: !5046, file: !1001, line: 1371, column: 5)
!5051 = !DILocation(line: 1371, column: 21, scope: !5049)
!5052 = !DILocation(line: 1371, column: 30, scope: !5049)
!5053 = !DILocation(line: 1371, column: 19, scope: !5049)
!5054 = !DILocation(line: 1371, column: 5, scope: !5049)
!5055 = !DILocalVariable(name: "ilim", scope: !5056, file: !1001, line: 1372, type: !1014)
!5056 = distinct !DILexicalBlock(scope: !5050, file: !1001, line: 1371, column: 47)
!5057 = !DILocation(line: 1372, column: 28, scope: !5056)
!5058 = !DILocation(line: 1372, column: 63, scope: !5056)
!5059 = !DILocation(line: 1372, column: 65, scope: !5056)
!5060 = !DILocation(line: 1372, column: 42, scope: !5056)
!5061 = !DILocation(line: 1372, column: 51, scope: !5056)
!5062 = !DILocation(line: 1372, column: 35, scope: !5056)
!5063 = !DILocation(line: 1372, column: 40, scope: !5056)
!5064 = !DILocalVariable(name: "table", scope: !5056, file: !1001, line: 1373, type: !1407)
!5065 = !DILocation(line: 1373, column: 19, scope: !5056)
!5066 = !DILocation(line: 1373, column: 48, scope: !5056)
!5067 = !DILocation(line: 1373, column: 50, scope: !5056)
!5068 = !DILocation(line: 1373, column: 27, scope: !5056)
!5069 = !DILocation(line: 1373, column: 36, scope: !5056)
!5070 = !DILocation(line: 1373, column: 57, scope: !5071)
!5071 = !DILexicalBlockFile(scope: !5056, file: !1001, discriminator: 1)
!5072 = !DILocation(line: 1373, column: 62, scope: !5071)
!5073 = !DILocation(line: 1373, column: 27, scope: !5071)
!5074 = !DILocation(line: 1373, column: 76, scope: !5075)
!5075 = !DILexicalBlockFile(scope: !5056, file: !1001, discriminator: 2)
!5076 = !DILocation(line: 1373, column: 81, scope: !5075)
!5077 = !DILocation(line: 1373, column: 27, scope: !5075)
!5078 = !DILocation(line: 1373, column: 27, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !5056, file: !1001, discriminator: 3)
!5080 = !DILocation(line: 1373, column: 19, scope: !5079)
!5081 = !DILocalVariable(name: "k", scope: !5056, file: !1001, line: 1374, type: !992)
!5082 = !DILocation(line: 1374, column: 13, scope: !5056)
!5083 = !DILocation(line: 1376, column: 13, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5056, file: !1001, line: 1376, column: 13)
!5085 = !DILocation(line: 1376, column: 18, scope: !5084)
!5086 = !DILocation(line: 1376, column: 27, scope: !5084)
!5087 = !DILocation(line: 1376, column: 24, scope: !5084)
!5088 = !DILocation(line: 1376, column: 13, scope: !5056)
!5089 = !DILocation(line: 1377, column: 20, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5084, file: !1001, line: 1376, column: 37)
!5091 = !DILocation(line: 1377, column: 24, scope: !5090)
!5092 = !DILocation(line: 1377, column: 13, scope: !5090)
!5093 = !DILocation(line: 1379, column: 25, scope: !5090)
!5094 = !DILocation(line: 1379, column: 13, scope: !5090)
!5095 = !DILocation(line: 1380, column: 13, scope: !5090)
!5096 = !DILocation(line: 1382, column: 16, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5056, file: !1001, line: 1382, column: 9)
!5098 = !DILocation(line: 1382, column: 14, scope: !5097)
!5099 = !DILocation(line: 1382, column: 21, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5101, file: !1001, discriminator: 1)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !1001, line: 1382, column: 9)
!5102 = !DILocation(line: 1382, column: 25, scope: !5100)
!5103 = !DILocation(line: 1382, column: 23, scope: !5100)
!5104 = !DILocation(line: 1382, column: 9, scope: !5100)
!5105 = !DILocation(line: 1383, column: 28, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5101, file: !1001, line: 1383, column: 13)
!5107 = !DILocation(line: 1383, column: 22, scope: !5106)
!5108 = !DILocation(line: 1383, column: 20, scope: !5106)
!5109 = !DILocation(line: 1383, column: 18, scope: !5106)
!5110 = !DILocation(line: 1383, column: 32, scope: !5111)
!5111 = !DILexicalBlockFile(scope: !5112, file: !1001, discriminator: 1)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !1001, line: 1383, column: 13)
!5113 = !DILocation(line: 1383, column: 42, scope: !5111)
!5114 = !DILocation(line: 1383, column: 44, scope: !5111)
!5115 = !DILocation(line: 1383, column: 36, scope: !5111)
!5116 = !DILocation(line: 1383, column: 34, scope: !5111)
!5117 = !DILocation(line: 1383, column: 13, scope: !5111)
!5118 = !DILocation(line: 1384, column: 79, scope: !5112)
!5119 = !DILocation(line: 1384, column: 56, scope: !5112)
!5120 = !DILocation(line: 1384, column: 74, scope: !5112)
!5121 = !DILocation(line: 1384, column: 75, scope: !5112)
!5122 = !DILocation(line: 1384, column: 65, scope: !5112)
!5123 = !DILocation(line: 1384, column: 38, scope: !5112)
!5124 = !DILocation(line: 1384, column: 42, scope: !5112)
!5125 = !DILocation(line: 1384, column: 47, scope: !5112)
!5126 = !DILocation(line: 1384, column: 40, scope: !5112)
!5127 = !DILocation(line: 1384, column: 17, scope: !5112)
!5128 = !DILocation(line: 1384, column: 35, scope: !5112)
!5129 = !DILocation(line: 1384, column: 22, scope: !5112)
!5130 = !DILocation(line: 1384, column: 54, scope: !5112)
!5131 = !DILocation(line: 1383, column: 51, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5112, file: !1001, discriminator: 2)
!5133 = !DILocation(line: 1383, column: 13, scope: !5132)
!5134 = distinct !{!5134, !5135}
!5135 = !DILocation(line: 1383, column: 13, scope: !5101)
!5136 = !DILocation(line: 1384, column: 80, scope: !5137)
!5137 = !DILexicalBlockFile(scope: !5106, file: !1001, discriminator: 1)
!5138 = !DILocation(line: 1382, column: 32, scope: !5139)
!5139 = !DILexicalBlockFile(scope: !5101, file: !1001, discriminator: 2)
!5140 = !DILocation(line: 1382, column: 9, scope: !5139)
!5141 = distinct !{!5141, !5142}
!5142 = !DILocation(line: 1382, column: 9, scope: !5056)
!5143 = !DILocation(line: 1387, column: 14, scope: !5056)
!5144 = !DILocation(line: 1387, column: 23, scope: !5056)
!5145 = !DILocation(line: 1387, column: 36, scope: !5056)
!5146 = !DILocation(line: 1387, column: 41, scope: !5056)
!5147 = !DILocation(line: 1387, column: 60, scope: !5071)
!5148 = !DILocation(line: 1387, column: 45, scope: !5071)
!5149 = !DILocation(line: 1387, column: 54, scope: !5071)
!5150 = !DILocation(line: 1387, column: 66, scope: !5071)
!5151 = !DILocation(line: 1387, column: 75, scope: !5071)
!5152 = !DILocation(line: 1387, column: 63, scope: !5071)
!5153 = !DILocation(line: 1387, column: 41, scope: !5075)
!5154 = !DILocation(line: 1387, column: 11, scope: !5075)
!5155 = !DILocation(line: 1388, column: 16, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5056, file: !1001, line: 1388, column: 9)
!5157 = !DILocation(line: 1388, column: 14, scope: !5156)
!5158 = !DILocation(line: 1388, column: 21, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5160, file: !1001, discriminator: 1)
!5160 = distinct !DILexicalBlock(scope: !5156, file: !1001, line: 1388, column: 9)
!5161 = !DILocation(line: 1388, column: 25, scope: !5159)
!5162 = !DILocation(line: 1388, column: 30, scope: !5159)
!5163 = !DILocation(line: 1388, column: 23, scope: !5159)
!5164 = !DILocation(line: 1388, column: 9, scope: !5159)
!5165 = !DILocation(line: 1389, column: 40, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5160, file: !1001, line: 1389, column: 13)
!5167 = !DILocation(line: 1389, column: 22, scope: !5166)
!5168 = !DILocation(line: 1389, column: 27, scope: !5166)
!5169 = !DILocation(line: 1389, column: 20, scope: !5166)
!5170 = !DILocation(line: 1389, column: 18, scope: !5166)
!5171 = !DILocation(line: 1389, column: 44, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !5173, file: !1001, discriminator: 1)
!5173 = distinct !DILexicalBlock(scope: !5166, file: !1001, line: 1389, column: 13)
!5174 = !DILocation(line: 1389, column: 66, scope: !5172)
!5175 = !DILocation(line: 1389, column: 68, scope: !5172)
!5176 = !DILocation(line: 1389, column: 48, scope: !5172)
!5177 = !DILocation(line: 1389, column: 53, scope: !5172)
!5178 = !DILocation(line: 1389, column: 46, scope: !5172)
!5179 = !DILocation(line: 1389, column: 13, scope: !5172)
!5180 = !DILocation(line: 1390, column: 77, scope: !5173)
!5181 = !DILocation(line: 1390, column: 52, scope: !5173)
!5182 = !DILocation(line: 1390, column: 72, scope: !5173)
!5183 = !DILocation(line: 1390, column: 73, scope: !5173)
!5184 = !DILocation(line: 1390, column: 61, scope: !5173)
!5185 = !DILocation(line: 1390, column: 34, scope: !5173)
!5186 = !DILocation(line: 1390, column: 38, scope: !5173)
!5187 = !DILocation(line: 1390, column: 43, scope: !5173)
!5188 = !DILocation(line: 1390, column: 36, scope: !5173)
!5189 = !DILocation(line: 1390, column: 17, scope: !5173)
!5190 = !DILocation(line: 1390, column: 31, scope: !5173)
!5191 = !DILocation(line: 1390, column: 22, scope: !5173)
!5192 = !DILocation(line: 1390, column: 50, scope: !5173)
!5193 = !DILocation(line: 1389, column: 75, scope: !5194)
!5194 = !DILexicalBlockFile(scope: !5173, file: !1001, discriminator: 2)
!5195 = !DILocation(line: 1389, column: 13, scope: !5194)
!5196 = distinct !{!5196, !5197}
!5197 = !DILocation(line: 1389, column: 13, scope: !5160)
!5198 = !DILocation(line: 1390, column: 78, scope: !5199)
!5199 = !DILexicalBlockFile(scope: !5166, file: !1001, discriminator: 1)
!5200 = !DILocation(line: 1388, column: 36, scope: !5201)
!5201 = !DILexicalBlockFile(scope: !5160, file: !1001, discriminator: 2)
!5202 = !DILocation(line: 1388, column: 9, scope: !5201)
!5203 = distinct !{!5203, !5204}
!5204 = !DILocation(line: 1388, column: 9, scope: !5056)
!5205 = !DILocation(line: 1392, column: 16, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5056, file: !1001, line: 1392, column: 9)
!5207 = !DILocation(line: 1392, column: 14, scope: !5206)
!5208 = !DILocation(line: 1392, column: 21, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !5210, file: !1001, discriminator: 1)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !1001, line: 1392, column: 9)
!5211 = !DILocation(line: 1392, column: 25, scope: !5209)
!5212 = !DILocation(line: 1392, column: 30, scope: !5209)
!5213 = !DILocation(line: 1392, column: 23, scope: !5209)
!5214 = !DILocation(line: 1392, column: 9, scope: !5209)
!5215 = !DILocation(line: 1393, column: 17, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !1001, line: 1393, column: 17)
!5217 = distinct !DILexicalBlock(scope: !5210, file: !1001, line: 1392, column: 41)
!5218 = !DILocation(line: 1393, column: 26, scope: !5216)
!5219 = !DILocation(line: 1393, column: 17, scope: !5217)
!5220 = !DILocalVariable(name: "m_midpoint", scope: !5221, file: !1001, line: 1394, type: !1014)
!5221 = distinct !DILexicalBlock(scope: !5216, file: !1001, line: 1393, column: 48)
!5222 = !DILocation(line: 1394, column: 36, scope: !5221)
!5223 = !DILocation(line: 1395, column: 39, scope: !5221)
!5224 = !DILocation(line: 1395, column: 22, scope: !5221)
!5225 = !DILocation(line: 1395, column: 27, scope: !5221)
!5226 = !DILocation(line: 1395, column: 61, scope: !5221)
!5227 = !DILocation(line: 1395, column: 63, scope: !5221)
!5228 = !DILocation(line: 1395, column: 44, scope: !5221)
!5229 = !DILocation(line: 1395, column: 49, scope: !5221)
!5230 = !DILocation(line: 1395, column: 42, scope: !5221)
!5231 = !DILocation(line: 1395, column: 69, scope: !5221)
!5232 = !DILocation(line: 1397, column: 99, scope: !5221)
!5233 = !DILocation(line: 1397, column: 74, scope: !5221)
!5234 = !DILocation(line: 1397, column: 83, scope: !5221)
!5235 = !DILocation(line: 1398, column: 22, scope: !5221)
!5236 = !DILocation(line: 1398, column: 27, scope: !5221)
!5237 = !DILocation(line: 1398, column: 24, scope: !5221)
!5238 = !DILocation(line: 1398, column: 34, scope: !5221)
!5239 = !DILocation(line: 1398, column: 64, scope: !5240)
!5240 = !DILexicalBlockFile(scope: !5221, file: !1001, discriminator: 1)
!5241 = !DILocation(line: 1398, column: 77, scope: !5240)
!5242 = !DILocation(line: 1398, column: 82, scope: !5240)
!5243 = !DILocation(line: 1398, column: 75, scope: !5240)
!5244 = !DILocation(line: 1398, column: 38, scope: !5240)
!5245 = !DILocation(line: 1398, column: 47, scope: !5240)
!5246 = !DILocation(line: 1398, column: 89, scope: !5240)
!5247 = !DILocation(line: 1398, column: 34, scope: !5240)
!5248 = !DILocation(line: 1398, column: 34, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !5221, file: !1001, discriminator: 2)
!5250 = !DILocation(line: 1397, column: 102, scope: !5240)
!5251 = !DILocation(line: 1397, column: 74, scope: !5240)
!5252 = !DILocation(line: 1397, column: 47, scope: !5240)
!5253 = !DILocation(line: 1397, column: 60, scope: !5240)
!5254 = !DILocation(line: 1397, column: 65, scope: !5240)
!5255 = !DILocation(line: 1397, column: 58, scope: !5240)
!5256 = !DILocation(line: 1397, column: 17, scope: !5240)
!5257 = !DILocation(line: 1397, column: 40, scope: !5240)
!5258 = !DILocation(line: 1397, column: 42, scope: !5240)
!5259 = !DILocation(line: 1397, column: 26, scope: !5240)
!5260 = !DILocation(line: 1397, column: 72, scope: !5240)
!5261 = !DILocation(line: 1399, column: 13, scope: !5221)
!5262 = !DILocation(line: 1400, column: 9, scope: !5217)
!5263 = !DILocation(line: 1392, column: 37, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5210, file: !1001, discriminator: 2)
!5265 = !DILocation(line: 1392, column: 9, scope: !5264)
!5266 = distinct !{!5266, !5267}
!5267 = !DILocation(line: 1392, column: 9, scope: !5056)
!5268 = !DILocation(line: 1402, column: 16, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5056, file: !1001, line: 1402, column: 9)
!5270 = !DILocation(line: 1402, column: 14, scope: !5269)
!5271 = !DILocation(line: 1402, column: 21, scope: !5272)
!5272 = !DILexicalBlockFile(scope: !5273, file: !1001, discriminator: 1)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !1001, line: 1402, column: 9)
!5274 = !DILocation(line: 1402, column: 25, scope: !5272)
!5275 = !DILocation(line: 1402, column: 23, scope: !5272)
!5276 = !DILocation(line: 1402, column: 9, scope: !5272)
!5277 = !DILocalVariable(name: "additional_sinusoid_present", scope: !5278, file: !1001, line: 1403, type: !992)
!5278 = distinct !DILexicalBlock(scope: !5273, file: !1001, line: 1402, column: 36)
!5279 = !DILocation(line: 1403, column: 17, scope: !5278)
!5280 = !DILocation(line: 1404, column: 28, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5278, file: !1001, line: 1404, column: 13)
!5282 = !DILocation(line: 1404, column: 22, scope: !5281)
!5283 = !DILocation(line: 1404, column: 20, scope: !5281)
!5284 = !DILocation(line: 1404, column: 18, scope: !5281)
!5285 = !DILocation(line: 1404, column: 32, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5287, file: !1001, discriminator: 1)
!5287 = distinct !DILexicalBlock(scope: !5281, file: !1001, line: 1404, column: 13)
!5288 = !DILocation(line: 1404, column: 42, scope: !5286)
!5289 = !DILocation(line: 1404, column: 44, scope: !5286)
!5290 = !DILocation(line: 1404, column: 36, scope: !5286)
!5291 = !DILocation(line: 1404, column: 34, scope: !5286)
!5292 = !DILocation(line: 1404, column: 13, scope: !5286)
!5293 = !DILocation(line: 1405, column: 51, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !1001, line: 1405, column: 21)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !1001, line: 1404, column: 55)
!5296 = !DILocation(line: 1405, column: 55, scope: !5294)
!5297 = !DILocation(line: 1405, column: 60, scope: !5294)
!5298 = !DILocation(line: 1405, column: 53, scope: !5294)
!5299 = !DILocation(line: 1405, column: 21, scope: !5294)
!5300 = !DILocation(line: 1405, column: 44, scope: !5294)
!5301 = !DILocation(line: 1405, column: 46, scope: !5294)
!5302 = !DILocation(line: 1405, column: 30, scope: !5294)
!5303 = !DILocation(line: 1405, column: 21, scope: !5295)
!5304 = !DILocation(line: 1406, column: 49, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5294, file: !1001, line: 1405, column: 68)
!5306 = !DILocation(line: 1407, column: 21, scope: !5305)
!5307 = !DILocation(line: 1409, column: 13, scope: !5295)
!5308 = !DILocation(line: 1404, column: 51, scope: !5309)
!5309 = !DILexicalBlockFile(scope: !5287, file: !1001, discriminator: 2)
!5310 = !DILocation(line: 1404, column: 13, scope: !5309)
!5311 = distinct !{!5311, !5312}
!5312 = !DILocation(line: 1404, column: 13, scope: !5278)
!5313 = !DILocation(line: 1410, column: 44, scope: !5278)
!5314 = !DILocation(line: 1410, column: 38, scope: !5278)
!5315 = !DILocation(line: 1410, column: 49, scope: !5278)
!5316 = !DILocation(line: 1410, column: 54, scope: !5278)
!5317 = !DILocation(line: 1410, column: 47, scope: !5278)
!5318 = !DILocation(line: 1410, column: 21, scope: !5278)
!5319 = !DILocation(line: 1410, column: 35, scope: !5278)
!5320 = !DILocation(line: 1410, column: 26, scope: !5278)
!5321 = !DILocation(line: 1410, column: 62, scope: !5278)
!5322 = !DILocation(line: 1410, column: 13, scope: !5278)
!5323 = !DILocation(line: 1411, column: 27, scope: !5278)
!5324 = !DILocation(line: 1411, column: 29, scope: !5278)
!5325 = !DILocation(line: 1411, column: 21, scope: !5278)
!5326 = !DILocation(line: 1411, column: 42, scope: !5278)
!5327 = !DILocation(line: 1411, column: 36, scope: !5278)
!5328 = !DILocation(line: 1411, column: 34, scope: !5278)
!5329 = !DILocation(line: 1411, column: 20, scope: !5278)
!5330 = !DILocation(line: 1411, column: 46, scope: !5278)
!5331 = !DILocation(line: 1412, column: 9, scope: !5278)
!5332 = !DILocation(line: 1402, column: 32, scope: !5333)
!5333 = !DILexicalBlockFile(scope: !5273, file: !1001, discriminator: 2)
!5334 = !DILocation(line: 1402, column: 9, scope: !5333)
!5335 = distinct !{!5335, !5336}
!5336 = !DILocation(line: 1402, column: 9, scope: !5056)
!5337 = !DILocation(line: 1413, column: 5, scope: !5056)
!5338 = !DILocation(line: 1371, column: 43, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5050, file: !1001, discriminator: 2)
!5340 = !DILocation(line: 1371, column: 5, scope: !5339)
!5341 = distinct !{!5341, !5342}
!5342 = !DILocation(line: 1371, column: 5, scope: !5025)
!5343 = !DILocation(line: 1415, column: 12, scope: !5025)
!5344 = !DILocation(line: 1415, column: 21, scope: !5025)
!5345 = !DILocation(line: 1415, column: 5, scope: !5025)
!5346 = !DILocation(line: 1415, column: 62, scope: !5025)
!5347 = !DILocation(line: 1415, column: 71, scope: !5025)
!5348 = !DILocation(line: 1415, column: 39, scope: !5025)
!5349 = !DILocation(line: 1415, column: 48, scope: !5025)
!5350 = !DILocation(line: 1416, column: 5, scope: !5025)
!5351 = !DILocation(line: 1417, column: 1, scope: !5025)
!5352 = distinct !DISubprogram(name: "sbr_env_estimate", scope: !1001, file: !1001, line: 1420, type: !5353, isLocal: true, isDefinition: true, scopeLine: 1422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!5353 = !DISubroutineType(types: !5354)
!5354 = !{null, !5355, !2546, !1123, !2553}
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 64, align: 64)
!5356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 1536, align: 32, elements: !1181)
!5357 = !DILocalVariable(name: "e_curr", arg: 1, scope: !5352, file: !1001, line: 1420, type: !5355)
!5358 = !DILocation(line: 1420, column: 42, scope: !5352)
!5359 = !DILocalVariable(name: "X_high", arg: 2, scope: !5352, file: !1001, line: 1420, type: !2546)
!5360 = !DILocation(line: 1420, column: 64, scope: !5352)
!5361 = !DILocalVariable(name: "sbr", arg: 3, scope: !5352, file: !1001, line: 1421, type: !1123)
!5362 = !DILocation(line: 1421, column: 55, scope: !5352)
!5363 = !DILocalVariable(name: "ch_data", arg: 4, scope: !5352, file: !1001, line: 1421, type: !2553)
!5364 = !DILocation(line: 1421, column: 69, scope: !5352)
!5365 = !DILocalVariable(name: "e", scope: !5352, file: !1001, line: 1423, type: !992)
!5366 = !DILocation(line: 1423, column: 9, scope: !5352)
!5367 = !DILocalVariable(name: "m", scope: !5352, file: !1001, line: 1423, type: !992)
!5368 = !DILocation(line: 1423, column: 12, scope: !5352)
!5369 = !DILocalVariable(name: "kx1", scope: !5352, file: !1001, line: 1424, type: !992)
!5370 = !DILocation(line: 1424, column: 9, scope: !5352)
!5371 = !DILocation(line: 1424, column: 15, scope: !5352)
!5372 = !DILocation(line: 1424, column: 20, scope: !5352)
!5373 = !DILocation(line: 1426, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5352, file: !1001, line: 1426, column: 9)
!5375 = !DILocation(line: 1426, column: 14, scope: !5374)
!5376 = !DILocation(line: 1426, column: 9, scope: !5352)
!5377 = !DILocation(line: 1427, column: 16, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !1001, line: 1427, column: 9)
!5379 = distinct !DILexicalBlock(scope: !5374, file: !1001, line: 1426, column: 32)
!5380 = !DILocation(line: 1427, column: 14, scope: !5378)
!5381 = !DILocation(line: 1427, column: 21, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5383, file: !1001, discriminator: 1)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !1001, line: 1427, column: 9)
!5384 = !DILocation(line: 1427, column: 25, scope: !5382)
!5385 = !DILocation(line: 1427, column: 34, scope: !5382)
!5386 = !DILocation(line: 1427, column: 23, scope: !5382)
!5387 = !DILocation(line: 1427, column: 9, scope: !5382)
!5388 = !DILocalVariable(name: "recip_env_size", scope: !5389, file: !1001, line: 1431, type: !2435)
!5389 = distinct !DILexicalBlock(scope: !5383, file: !1001, line: 1427, column: 51)
!5390 = !DILocation(line: 1431, column: 25, scope: !5389)
!5391 = !DILocation(line: 1431, column: 65, scope: !5389)
!5392 = !DILocation(line: 1431, column: 67, scope: !5389)
!5393 = !DILocation(line: 1431, column: 50, scope: !5389)
!5394 = !DILocation(line: 1431, column: 59, scope: !5389)
!5395 = !DILocation(line: 1431, column: 89, scope: !5389)
!5396 = !DILocation(line: 1431, column: 74, scope: !5389)
!5397 = !DILocation(line: 1431, column: 83, scope: !5389)
!5398 = !DILocation(line: 1431, column: 72, scope: !5389)
!5399 = !DILocation(line: 1431, column: 49, scope: !5389)
!5400 = !DILocation(line: 1431, column: 47, scope: !5389)
!5401 = !DILocalVariable(name: "ilb", scope: !5389, file: !1001, line: 1433, type: !992)
!5402 = !DILocation(line: 1433, column: 17, scope: !5389)
!5403 = !DILocation(line: 1433, column: 38, scope: !5389)
!5404 = !DILocation(line: 1433, column: 23, scope: !5389)
!5405 = !DILocation(line: 1433, column: 32, scope: !5389)
!5406 = !DILocation(line: 1433, column: 41, scope: !5389)
!5407 = !DILocation(line: 1433, column: 45, scope: !5389)
!5408 = !DILocalVariable(name: "iub", scope: !5389, file: !1001, line: 1434, type: !992)
!5409 = !DILocation(line: 1434, column: 17, scope: !5389)
!5410 = !DILocation(line: 1434, column: 38, scope: !5389)
!5411 = !DILocation(line: 1434, column: 40, scope: !5389)
!5412 = !DILocation(line: 1434, column: 23, scope: !5389)
!5413 = !DILocation(line: 1434, column: 32, scope: !5389)
!5414 = !DILocation(line: 1434, column: 45, scope: !5389)
!5415 = !DILocation(line: 1434, column: 49, scope: !5389)
!5416 = !DILocation(line: 1436, column: 20, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5389, file: !1001, line: 1436, column: 13)
!5418 = !DILocation(line: 1436, column: 18, scope: !5417)
!5419 = !DILocation(line: 1436, column: 25, scope: !5420)
!5420 = !DILexicalBlockFile(scope: !5421, file: !1001, discriminator: 1)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !1001, line: 1436, column: 13)
!5422 = !DILocation(line: 1436, column: 29, scope: !5420)
!5423 = !DILocation(line: 1436, column: 34, scope: !5420)
!5424 = !DILocation(line: 1436, column: 27, scope: !5420)
!5425 = !DILocation(line: 1436, column: 13, scope: !5420)
!5426 = !DILocalVariable(name: "sum", scope: !5427, file: !1001, line: 1437, type: !1207)
!5427 = distinct !DILexicalBlock(scope: !5421, file: !1001, line: 1436, column: 45)
!5428 = !DILocation(line: 1437, column: 27, scope: !5427)
!5429 = !DILocation(line: 1437, column: 33, scope: !5427)
!5430 = !DILocation(line: 1437, column: 38, scope: !5427)
!5431 = !DILocation(line: 1437, column: 42, scope: !5427)
!5432 = !DILocation(line: 1437, column: 60, scope: !5427)
!5433 = !DILocation(line: 1437, column: 62, scope: !5427)
!5434 = !DILocation(line: 1437, column: 61, scope: !5427)
!5435 = !DILocation(line: 1437, column: 53, scope: !5427)
!5436 = !DILocation(line: 1437, column: 69, scope: !5427)
!5437 = !DILocation(line: 1437, column: 67, scope: !5427)
!5438 = !DILocation(line: 1437, column: 74, scope: !5427)
!5439 = !DILocation(line: 1437, column: 80, scope: !5427)
!5440 = !DILocation(line: 1437, column: 78, scope: !5427)
!5441 = !DILocation(line: 1441, column: 32, scope: !5427)
!5442 = !DILocation(line: 1441, column: 38, scope: !5427)
!5443 = !DILocation(line: 1441, column: 36, scope: !5427)
!5444 = !DILocation(line: 1441, column: 27, scope: !5427)
!5445 = !DILocation(line: 1441, column: 17, scope: !5427)
!5446 = !DILocation(line: 1441, column: 24, scope: !5427)
!5447 = !DILocation(line: 1441, column: 30, scope: !5427)
!5448 = !DILocation(line: 1443, column: 13, scope: !5427)
!5449 = !DILocation(line: 1436, column: 41, scope: !5450)
!5450 = !DILexicalBlockFile(scope: !5421, file: !1001, discriminator: 2)
!5451 = !DILocation(line: 1436, column: 13, scope: !5450)
!5452 = distinct !{!5452, !5453}
!5453 = !DILocation(line: 1436, column: 13, scope: !5389)
!5454 = !DILocation(line: 1444, column: 9, scope: !5389)
!5455 = !DILocation(line: 1427, column: 47, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !5383, file: !1001, discriminator: 2)
!5457 = !DILocation(line: 1427, column: 9, scope: !5456)
!5458 = distinct !{!5458, !5459}
!5459 = !DILocation(line: 1427, column: 9, scope: !5379)
!5460 = !DILocation(line: 1445, column: 5, scope: !5379)
!5461 = !DILocalVariable(name: "k", scope: !5462, file: !1001, line: 1446, type: !992)
!5462 = distinct !DILexicalBlock(scope: !5374, file: !1001, line: 1445, column: 12)
!5463 = !DILocation(line: 1446, column: 13, scope: !5462)
!5464 = !DILocalVariable(name: "p", scope: !5462, file: !1001, line: 1446, type: !992)
!5465 = !DILocation(line: 1446, column: 16, scope: !5462)
!5466 = !DILocation(line: 1448, column: 16, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5462, file: !1001, line: 1448, column: 9)
!5468 = !DILocation(line: 1448, column: 14, scope: !5467)
!5469 = !DILocation(line: 1448, column: 21, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5471, file: !1001, discriminator: 1)
!5471 = distinct !DILexicalBlock(scope: !5467, file: !1001, line: 1448, column: 9)
!5472 = !DILocation(line: 1448, column: 25, scope: !5470)
!5473 = !DILocation(line: 1448, column: 34, scope: !5470)
!5474 = !DILocation(line: 1448, column: 23, scope: !5470)
!5475 = !DILocation(line: 1448, column: 9, scope: !5470)
!5476 = !DILocalVariable(name: "env_size", scope: !5477, file: !1001, line: 1449, type: !1585)
!5477 = distinct !DILexicalBlock(scope: !5471, file: !1001, line: 1448, column: 51)
!5478 = !DILocation(line: 1449, column: 23, scope: !5477)
!5479 = !DILocation(line: 1449, column: 54, scope: !5477)
!5480 = !DILocation(line: 1449, column: 56, scope: !5477)
!5481 = !DILocation(line: 1449, column: 39, scope: !5477)
!5482 = !DILocation(line: 1449, column: 48, scope: !5477)
!5483 = !DILocation(line: 1449, column: 78, scope: !5477)
!5484 = !DILocation(line: 1449, column: 63, scope: !5477)
!5485 = !DILocation(line: 1449, column: 72, scope: !5477)
!5486 = !DILocation(line: 1449, column: 61, scope: !5477)
!5487 = !DILocation(line: 1449, column: 36, scope: !5477)
!5488 = !DILocalVariable(name: "ilb", scope: !5477, file: !1001, line: 1450, type: !992)
!5489 = !DILocation(line: 1450, column: 17, scope: !5477)
!5490 = !DILocation(line: 1450, column: 38, scope: !5477)
!5491 = !DILocation(line: 1450, column: 23, scope: !5477)
!5492 = !DILocation(line: 1450, column: 32, scope: !5477)
!5493 = !DILocation(line: 1450, column: 41, scope: !5477)
!5494 = !DILocation(line: 1450, column: 45, scope: !5477)
!5495 = !DILocalVariable(name: "iub", scope: !5477, file: !1001, line: 1451, type: !992)
!5496 = !DILocation(line: 1451, column: 17, scope: !5477)
!5497 = !DILocation(line: 1451, column: 38, scope: !5477)
!5498 = !DILocation(line: 1451, column: 40, scope: !5477)
!5499 = !DILocation(line: 1451, column: 23, scope: !5477)
!5500 = !DILocation(line: 1451, column: 32, scope: !5477)
!5501 = !DILocation(line: 1451, column: 45, scope: !5477)
!5502 = !DILocation(line: 1451, column: 49, scope: !5477)
!5503 = !DILocalVariable(name: "table", scope: !5477, file: !1001, line: 1452, type: !2284)
!5504 = !DILocation(line: 1452, column: 29, scope: !5477)
!5505 = !DILocation(line: 1452, column: 58, scope: !5477)
!5506 = !DILocation(line: 1452, column: 60, scope: !5477)
!5507 = !DILocation(line: 1452, column: 37, scope: !5477)
!5508 = !DILocation(line: 1452, column: 46, scope: !5477)
!5509 = !DILocation(line: 1452, column: 67, scope: !5510)
!5510 = !DILexicalBlockFile(scope: !5477, file: !1001, discriminator: 1)
!5511 = !DILocation(line: 1452, column: 72, scope: !5510)
!5512 = !DILocation(line: 1452, column: 37, scope: !5510)
!5513 = !DILocation(line: 1452, column: 86, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !5477, file: !1001, discriminator: 2)
!5515 = !DILocation(line: 1452, column: 91, scope: !5514)
!5516 = !DILocation(line: 1452, column: 37, scope: !5514)
!5517 = !DILocation(line: 1452, column: 37, scope: !5518)
!5518 = !DILexicalBlockFile(scope: !5477, file: !1001, discriminator: 3)
!5519 = !DILocation(line: 1452, column: 29, scope: !5518)
!5520 = !DILocation(line: 1454, column: 20, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5477, file: !1001, line: 1454, column: 13)
!5522 = !DILocation(line: 1454, column: 18, scope: !5521)
!5523 = !DILocation(line: 1454, column: 25, scope: !5524)
!5524 = !DILexicalBlockFile(scope: !5525, file: !1001, discriminator: 1)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !1001, line: 1454, column: 13)
!5526 = !DILocation(line: 1454, column: 57, scope: !5524)
!5527 = !DILocation(line: 1454, column: 59, scope: !5524)
!5528 = !DILocation(line: 1454, column: 36, scope: !5524)
!5529 = !DILocation(line: 1454, column: 45, scope: !5524)
!5530 = !DILocation(line: 1454, column: 29, scope: !5524)
!5531 = !DILocation(line: 1454, column: 34, scope: !5524)
!5532 = !DILocation(line: 1454, column: 27, scope: !5524)
!5533 = !DILocation(line: 1454, column: 13, scope: !5524)
!5534 = !DILocalVariable(name: "sum", scope: !5535, file: !1001, line: 1463, type: !958)
!5535 = distinct !DILexicalBlock(scope: !5525, file: !1001, line: 1454, column: 71)
!5536 = !DILocation(line: 1463, column: 23, scope: !5535)
!5537 = !DILocalVariable(name: "den", scope: !5535, file: !1001, line: 1464, type: !1585)
!5538 = !DILocation(line: 1464, column: 27, scope: !5535)
!5539 = !DILocation(line: 1464, column: 33, scope: !5535)
!5540 = !DILocation(line: 1464, column: 51, scope: !5535)
!5541 = !DILocation(line: 1464, column: 53, scope: !5535)
!5542 = !DILocation(line: 1464, column: 45, scope: !5535)
!5543 = !DILocation(line: 1464, column: 66, scope: !5535)
!5544 = !DILocation(line: 1464, column: 60, scope: !5535)
!5545 = !DILocation(line: 1464, column: 58, scope: !5535)
!5546 = !DILocation(line: 1464, column: 42, scope: !5535)
!5547 = !DILocation(line: 1466, column: 32, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5535, file: !1001, line: 1466, column: 17)
!5549 = !DILocation(line: 1466, column: 26, scope: !5548)
!5550 = !DILocation(line: 1466, column: 24, scope: !5548)
!5551 = !DILocation(line: 1466, column: 22, scope: !5548)
!5552 = !DILocation(line: 1466, column: 36, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5554, file: !1001, discriminator: 1)
!5554 = distinct !DILexicalBlock(scope: !5548, file: !1001, line: 1466, column: 17)
!5555 = !DILocation(line: 1466, column: 46, scope: !5553)
!5556 = !DILocation(line: 1466, column: 48, scope: !5553)
!5557 = !DILocation(line: 1466, column: 40, scope: !5553)
!5558 = !DILocation(line: 1466, column: 38, scope: !5553)
!5559 = !DILocation(line: 1466, column: 17, scope: !5553)
!5560 = !DILocation(line: 1467, column: 28, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5554, file: !1001, line: 1466, column: 59)
!5562 = !DILocation(line: 1467, column: 33, scope: !5561)
!5563 = !DILocation(line: 1467, column: 37, scope: !5561)
!5564 = !DILocation(line: 1467, column: 55, scope: !5561)
!5565 = !DILocation(line: 1467, column: 48, scope: !5561)
!5566 = !DILocation(line: 1467, column: 60, scope: !5561)
!5567 = !DILocation(line: 1467, column: 58, scope: !5561)
!5568 = !DILocation(line: 1467, column: 65, scope: !5561)
!5569 = !DILocation(line: 1467, column: 71, scope: !5561)
!5570 = !DILocation(line: 1467, column: 69, scope: !5561)
!5571 = !DILocation(line: 1467, column: 25, scope: !5561)
!5572 = !DILocation(line: 1468, column: 17, scope: !5561)
!5573 = !DILocation(line: 1466, column: 55, scope: !5574)
!5574 = !DILexicalBlockFile(scope: !5554, file: !1001, discriminator: 2)
!5575 = !DILocation(line: 1466, column: 17, scope: !5574)
!5576 = distinct !{!5576, !5577}
!5577 = !DILocation(line: 1466, column: 17, scope: !5535)
!5578 = !DILocation(line: 1469, column: 24, scope: !5535)
!5579 = !DILocation(line: 1469, column: 21, scope: !5535)
!5580 = !DILocation(line: 1471, column: 32, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5535, file: !1001, line: 1471, column: 17)
!5582 = !DILocation(line: 1471, column: 26, scope: !5581)
!5583 = !DILocation(line: 1471, column: 24, scope: !5581)
!5584 = !DILocation(line: 1471, column: 22, scope: !5581)
!5585 = !DILocation(line: 1471, column: 36, scope: !5586)
!5586 = !DILexicalBlockFile(scope: !5587, file: !1001, discriminator: 1)
!5587 = distinct !DILexicalBlock(scope: !5581, file: !1001, line: 1471, column: 17)
!5588 = !DILocation(line: 1471, column: 46, scope: !5586)
!5589 = !DILocation(line: 1471, column: 48, scope: !5586)
!5590 = !DILocation(line: 1471, column: 40, scope: !5586)
!5591 = !DILocation(line: 1471, column: 38, scope: !5586)
!5592 = !DILocation(line: 1471, column: 17, scope: !5586)
!5593 = !DILocation(line: 1472, column: 42, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5587, file: !1001, line: 1471, column: 59)
!5595 = !DILocation(line: 1472, column: 31, scope: !5594)
!5596 = !DILocation(line: 1472, column: 35, scope: !5594)
!5597 = !DILocation(line: 1472, column: 33, scope: !5594)
!5598 = !DILocation(line: 1472, column: 21, scope: !5594)
!5599 = !DILocation(line: 1472, column: 28, scope: !5594)
!5600 = !DILocation(line: 1472, column: 40, scope: !5594)
!5601 = !DILocation(line: 1473, column: 17, scope: !5594)
!5602 = !DILocation(line: 1471, column: 55, scope: !5603)
!5603 = !DILexicalBlockFile(scope: !5587, file: !1001, discriminator: 2)
!5604 = !DILocation(line: 1471, column: 17, scope: !5603)
!5605 = distinct !{!5605, !5606}
!5606 = !DILocation(line: 1471, column: 17, scope: !5535)
!5607 = !DILocation(line: 1474, column: 13, scope: !5535)
!5608 = !DILocation(line: 1454, column: 67, scope: !5609)
!5609 = !DILexicalBlockFile(scope: !5525, file: !1001, discriminator: 2)
!5610 = !DILocation(line: 1454, column: 13, scope: !5609)
!5611 = distinct !{!5611, !5612}
!5612 = !DILocation(line: 1454, column: 13, scope: !5477)
!5613 = !DILocation(line: 1475, column: 9, scope: !5477)
!5614 = !DILocation(line: 1448, column: 47, scope: !5615)
!5615 = !DILexicalBlockFile(scope: !5471, file: !1001, discriminator: 2)
!5616 = !DILocation(line: 1448, column: 9, scope: !5615)
!5617 = distinct !{!5617, !5618}
!5618 = !DILocation(line: 1448, column: 9, scope: !5462)
!5619 = !DILocation(line: 1477, column: 1, scope: !5352)
!5620 = !DILocalVariable(name: "ac", arg: 1, scope: !2583, file: !1056, line: 219, type: !1504)
!5621 = !DILocation(line: 219, column: 39, scope: !2583)
!5622 = !DILocalVariable(name: "sbr", arg: 2, scope: !2583, file: !1056, line: 219, type: !1123)
!5623 = !DILocation(line: 219, column: 68, scope: !2583)
!5624 = !DILocalVariable(name: "ch_data", arg: 3, scope: !2583, file: !1056, line: 220, type: !2553)
!5625 = !DILocation(line: 220, column: 36, scope: !2583)
!5626 = !DILocalVariable(name: "e_a", arg: 4, scope: !2583, file: !1056, line: 220, type: !1584)
!5627 = !DILocation(line: 220, column: 55, scope: !2583)
!5628 = !DILocalVariable(name: "e", scope: !2583, file: !1056, line: 222, type: !992)
!5629 = !DILocation(line: 222, column: 9, scope: !2583)
!5630 = !DILocalVariable(name: "k", scope: !2583, file: !1056, line: 222, type: !992)
!5631 = !DILocation(line: 222, column: 12, scope: !2583)
!5632 = !DILocalVariable(name: "m", scope: !2583, file: !1056, line: 222, type: !992)
!5633 = !DILocation(line: 222, column: 15, scope: !2583)
!5634 = !DILocation(line: 226, column: 12, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !2583, file: !1056, line: 226, column: 5)
!5636 = !DILocation(line: 226, column: 10, scope: !5635)
!5637 = !DILocation(line: 226, column: 17, scope: !5638)
!5638 = !DILexicalBlockFile(scope: !5639, file: !1056, discriminator: 1)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !1056, line: 226, column: 5)
!5640 = !DILocation(line: 226, column: 21, scope: !5638)
!5641 = !DILocation(line: 226, column: 30, scope: !5638)
!5642 = !DILocation(line: 226, column: 19, scope: !5638)
!5643 = !DILocation(line: 226, column: 5, scope: !5638)
!5644 = !DILocalVariable(name: "delta", scope: !5645, file: !1056, line: 227, type: !992)
!5645 = distinct !DILexicalBlock(scope: !5639, file: !1056, line: 226, column: 47)
!5646 = !DILocation(line: 227, column: 13, scope: !5645)
!5647 = !DILocation(line: 227, column: 24, scope: !5645)
!5648 = !DILocation(line: 227, column: 29, scope: !5645)
!5649 = !DILocation(line: 227, column: 26, scope: !5645)
!5650 = !DILocation(line: 227, column: 37, scope: !5645)
!5651 = !DILocation(line: 227, column: 41, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !5645, file: !1056, discriminator: 1)
!5653 = !DILocation(line: 227, column: 46, scope: !5652)
!5654 = !DILocation(line: 227, column: 43, scope: !5652)
!5655 = !DILocation(line: 227, column: 37, scope: !5652)
!5656 = !DILocation(line: 227, column: 21, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !5645, file: !1056, discriminator: 2)
!5658 = !DILocation(line: 227, column: 13, scope: !5657)
!5659 = !DILocation(line: 228, column: 16, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5645, file: !1056, line: 228, column: 9)
!5661 = !DILocation(line: 228, column: 14, scope: !5660)
!5662 = !DILocation(line: 228, column: 21, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5664, file: !1056, discriminator: 1)
!5664 = distinct !DILexicalBlock(scope: !5660, file: !1056, line: 228, column: 9)
!5665 = !DILocation(line: 228, column: 25, scope: !5663)
!5666 = !DILocation(line: 228, column: 30, scope: !5663)
!5667 = !DILocation(line: 228, column: 23, scope: !5663)
!5668 = !DILocation(line: 228, column: 9, scope: !5663)
!5669 = !DILocalVariable(name: "gain_boost", scope: !5670, file: !1056, line: 229, type: !958)
!5670 = distinct !DILexicalBlock(scope: !5664, file: !1056, line: 228, column: 42)
!5671 = !DILocation(line: 229, column: 19, scope: !5670)
!5672 = !DILocalVariable(name: "gain_max", scope: !5670, file: !1056, line: 229, type: !958)
!5673 = !DILocation(line: 229, column: 31, scope: !5670)
!5674 = !DILocalVariable(name: "sum", scope: !5670, file: !1056, line: 230, type: !5675)
!5675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 64, align: 32, elements: !972)
!5676 = !DILocation(line: 230, column: 19, scope: !5670)
!5677 = !DILocation(line: 231, column: 38, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5670, file: !1056, line: 231, column: 13)
!5679 = !DILocation(line: 231, column: 22, scope: !5678)
!5680 = !DILocation(line: 231, column: 27, scope: !5678)
!5681 = !DILocation(line: 231, column: 43, scope: !5678)
!5682 = !DILocation(line: 231, column: 48, scope: !5678)
!5683 = !DILocation(line: 231, column: 41, scope: !5678)
!5684 = !DILocation(line: 231, column: 20, scope: !5678)
!5685 = !DILocation(line: 231, column: 18, scope: !5678)
!5686 = !DILocation(line: 231, column: 55, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !5688, file: !1056, discriminator: 1)
!5688 = distinct !DILexicalBlock(scope: !5678, file: !1056, line: 231, column: 13)
!5689 = !DILocation(line: 231, column: 75, scope: !5687)
!5690 = !DILocation(line: 231, column: 77, scope: !5687)
!5691 = !DILocation(line: 231, column: 59, scope: !5687)
!5692 = !DILocation(line: 231, column: 64, scope: !5687)
!5693 = !DILocation(line: 231, column: 84, scope: !5687)
!5694 = !DILocation(line: 231, column: 89, scope: !5687)
!5695 = !DILocation(line: 231, column: 82, scope: !5687)
!5696 = !DILocation(line: 231, column: 57, scope: !5687)
!5697 = !DILocation(line: 231, column: 13, scope: !5687)
!5698 = !DILocalVariable(name: "temp", scope: !5699, file: !1056, line: 232, type: !2435)
!5699 = distinct !DILexicalBlock(scope: !5688, file: !1056, line: 231, column: 101)
!5700 = !DILocation(line: 232, column: 29, scope: !5699)
!5701 = !DILocation(line: 232, column: 57, scope: !5699)
!5702 = !DILocation(line: 232, column: 36, scope: !5699)
!5703 = !DILocation(line: 232, column: 54, scope: !5699)
!5704 = !DILocation(line: 232, column: 41, scope: !5699)
!5705 = !DILocation(line: 232, column: 87, scope: !5699)
!5706 = !DILocation(line: 232, column: 70, scope: !5699)
!5707 = !DILocation(line: 232, column: 84, scope: !5699)
!5708 = !DILocation(line: 232, column: 75, scope: !5699)
!5709 = !DILocation(line: 232, column: 68, scope: !5699)
!5710 = !DILocation(line: 232, column: 60, scope: !5699)
!5711 = !DILocation(line: 233, column: 40, scope: !5699)
!5712 = !DILocation(line: 233, column: 64, scope: !5699)
!5713 = !DILocation(line: 233, column: 47, scope: !5699)
!5714 = !DILocation(line: 233, column: 61, scope: !5699)
!5715 = !DILocation(line: 233, column: 52, scope: !5699)
!5716 = !DILocation(line: 233, column: 45, scope: !5699)
!5717 = !DILocation(line: 233, column: 34, scope: !5699)
!5718 = !DILocation(line: 233, column: 29, scope: !5699)
!5719 = !DILocation(line: 233, column: 17, scope: !5699)
!5720 = !DILocation(line: 233, column: 26, scope: !5699)
!5721 = !DILocation(line: 233, column: 22, scope: !5699)
!5722 = !DILocation(line: 233, column: 32, scope: !5699)
!5723 = !DILocation(line: 234, column: 40, scope: !5699)
!5724 = !DILocation(line: 234, column: 77, scope: !5699)
!5725 = !DILocation(line: 234, column: 47, scope: !5699)
!5726 = !DILocation(line: 234, column: 70, scope: !5699)
!5727 = !DILocation(line: 234, column: 72, scope: !5699)
!5728 = !DILocation(line: 234, column: 56, scope: !5699)
!5729 = !DILocation(line: 234, column: 45, scope: !5699)
!5730 = !DILocation(line: 234, column: 34, scope: !5699)
!5731 = !DILocation(line: 234, column: 29, scope: !5699)
!5732 = !DILocation(line: 234, column: 17, scope: !5699)
!5733 = !DILocation(line: 234, column: 26, scope: !5699)
!5734 = !DILocation(line: 234, column: 22, scope: !5699)
!5735 = !DILocation(line: 234, column: 32, scope: !5699)
!5736 = !DILocation(line: 235, column: 39, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5699, file: !1056, line: 235, column: 21)
!5738 = !DILocation(line: 235, column: 22, scope: !5737)
!5739 = !DILocation(line: 235, column: 36, scope: !5737)
!5740 = !DILocation(line: 235, column: 27, scope: !5737)
!5741 = !DILocation(line: 235, column: 21, scope: !5699)
!5742 = !DILocation(line: 236, column: 66, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5737, file: !1056, line: 235, column: 43)
!5744 = !DILocation(line: 236, column: 45, scope: !5743)
!5745 = !DILocation(line: 236, column: 63, scope: !5743)
!5746 = !DILocation(line: 236, column: 50, scope: !5743)
!5747 = !DILocation(line: 237, column: 69, scope: !5743)
!5748 = !DILocation(line: 237, column: 54, scope: !5743)
!5749 = !DILocation(line: 237, column: 66, scope: !5743)
!5750 = !DILocation(line: 237, column: 59, scope: !5743)
!5751 = !DILocation(line: 237, column: 52, scope: !5743)
!5752 = !DILocation(line: 238, column: 71, scope: !5743)
!5753 = !DILocation(line: 238, column: 54, scope: !5743)
!5754 = !DILocation(line: 238, column: 68, scope: !5743)
!5755 = !DILocation(line: 238, column: 59, scope: !5743)
!5756 = !DILocation(line: 238, column: 76, scope: !5743)
!5757 = !DILocation(line: 238, column: 74, scope: !5743)
!5758 = !DILocation(line: 238, column: 52, scope: !5743)
!5759 = !DILocation(line: 237, column: 73, scope: !5743)
!5760 = !DILocation(line: 236, column: 69, scope: !5743)
!5761 = !DILocation(line: 236, column: 39, scope: !5743)
!5762 = !DILocation(line: 236, column: 34, scope: !5743)
!5763 = !DILocation(line: 236, column: 21, scope: !5743)
!5764 = !DILocation(line: 236, column: 31, scope: !5743)
!5765 = !DILocation(line: 236, column: 26, scope: !5743)
!5766 = !DILocation(line: 236, column: 37, scope: !5743)
!5767 = !DILocation(line: 239, column: 17, scope: !5743)
!5768 = !DILocation(line: 240, column: 66, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5737, file: !1056, line: 239, column: 24)
!5770 = !DILocation(line: 240, column: 45, scope: !5769)
!5771 = !DILocation(line: 240, column: 63, scope: !5769)
!5772 = !DILocation(line: 240, column: 50, scope: !5769)
!5773 = !DILocation(line: 240, column: 88, scope: !5769)
!5774 = !DILocation(line: 240, column: 71, scope: !5769)
!5775 = !DILocation(line: 240, column: 85, scope: !5769)
!5776 = !DILocation(line: 240, column: 76, scope: !5769)
!5777 = !DILocation(line: 240, column: 69, scope: !5769)
!5778 = !DILocation(line: 241, column: 69, scope: !5769)
!5779 = !DILocation(line: 241, column: 54, scope: !5769)
!5780 = !DILocation(line: 241, column: 66, scope: !5769)
!5781 = !DILocation(line: 241, column: 59, scope: !5769)
!5782 = !DILocation(line: 241, column: 52, scope: !5769)
!5783 = !DILocation(line: 242, column: 71, scope: !5769)
!5784 = !DILocation(line: 242, column: 54, scope: !5769)
!5785 = !DILocation(line: 242, column: 68, scope: !5769)
!5786 = !DILocation(line: 242, column: 59, scope: !5769)
!5787 = !DILocation(line: 242, column: 52, scope: !5769)
!5788 = !DILocation(line: 241, column: 73, scope: !5769)
!5789 = !DILocation(line: 240, column: 91, scope: !5769)
!5790 = !DILocation(line: 240, column: 39, scope: !5769)
!5791 = !DILocation(line: 240, column: 34, scope: !5769)
!5792 = !DILocation(line: 240, column: 21, scope: !5769)
!5793 = !DILocation(line: 240, column: 31, scope: !5769)
!5794 = !DILocation(line: 240, column: 26, scope: !5769)
!5795 = !DILocation(line: 240, column: 37, scope: !5769)
!5796 = !DILocation(line: 244, column: 30, scope: !5699)
!5797 = !DILocation(line: 244, column: 17, scope: !5699)
!5798 = !DILocation(line: 244, column: 27, scope: !5699)
!5799 = !DILocation(line: 244, column: 22, scope: !5699)
!5800 = !DILocation(line: 244, column: 33, scope: !5699)
!5801 = !DILocation(line: 245, column: 13, scope: !5699)
!5802 = !DILocation(line: 231, column: 97, scope: !5803)
!5803 = !DILexicalBlockFile(scope: !5688, file: !1056, discriminator: 2)
!5804 = !DILocation(line: 231, column: 13, scope: !5803)
!5805 = distinct !{!5805, !5806}
!5806 = !DILocation(line: 231, column: 13, scope: !5670)
!5807 = !DILocation(line: 246, column: 38, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5670, file: !1056, line: 246, column: 13)
!5809 = !DILocation(line: 246, column: 22, scope: !5808)
!5810 = !DILocation(line: 246, column: 27, scope: !5808)
!5811 = !DILocation(line: 246, column: 43, scope: !5808)
!5812 = !DILocation(line: 246, column: 48, scope: !5808)
!5813 = !DILocation(line: 246, column: 41, scope: !5808)
!5814 = !DILocation(line: 246, column: 20, scope: !5808)
!5815 = !DILocation(line: 246, column: 18, scope: !5808)
!5816 = !DILocation(line: 246, column: 55, scope: !5817)
!5817 = !DILexicalBlockFile(scope: !5818, file: !1056, discriminator: 1)
!5818 = distinct !DILexicalBlock(scope: !5808, file: !1056, line: 246, column: 13)
!5819 = !DILocation(line: 246, column: 75, scope: !5817)
!5820 = !DILocation(line: 246, column: 77, scope: !5817)
!5821 = !DILocation(line: 246, column: 59, scope: !5817)
!5822 = !DILocation(line: 246, column: 64, scope: !5817)
!5823 = !DILocation(line: 246, column: 84, scope: !5817)
!5824 = !DILocation(line: 246, column: 89, scope: !5817)
!5825 = !DILocation(line: 246, column: 82, scope: !5817)
!5826 = !DILocation(line: 246, column: 57, scope: !5817)
!5827 = !DILocation(line: 246, column: 13, scope: !5817)
!5828 = !DILocation(line: 247, column: 48, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5818, file: !1056, line: 246, column: 101)
!5830 = !DILocation(line: 247, column: 27, scope: !5829)
!5831 = !DILocation(line: 247, column: 45, scope: !5829)
!5832 = !DILocation(line: 247, column: 32, scope: !5829)
!5833 = !DILocation(line: 247, column: 17, scope: !5829)
!5834 = !DILocation(line: 247, column: 24, scope: !5829)
!5835 = !DILocation(line: 248, column: 42, scope: !5829)
!5836 = !DILocation(line: 248, column: 27, scope: !5829)
!5837 = !DILocation(line: 248, column: 39, scope: !5829)
!5838 = !DILocation(line: 248, column: 32, scope: !5829)
!5839 = !DILocation(line: 248, column: 17, scope: !5829)
!5840 = !DILocation(line: 248, column: 24, scope: !5829)
!5841 = !DILocation(line: 249, column: 13, scope: !5829)
!5842 = !DILocation(line: 246, column: 97, scope: !5843)
!5843 = !DILexicalBlockFile(scope: !5818, file: !1056, discriminator: 2)
!5844 = !DILocation(line: 246, column: 13, scope: !5843)
!5845 = distinct !{!5845, !5846}
!5846 = !DILocation(line: 246, column: 13, scope: !5670)
!5847 = !DILocation(line: 250, column: 32, scope: !5670)
!5848 = !DILocation(line: 250, column: 37, scope: !5670)
!5849 = !DILocation(line: 250, column: 24, scope: !5670)
!5850 = !DILocation(line: 250, column: 93, scope: !5670)
!5851 = !DILocation(line: 250, column: 91, scope: !5670)
!5852 = !DILocation(line: 250, column: 133, scope: !5670)
!5853 = !DILocation(line: 250, column: 131, scope: !5670)
!5854 = !DILocation(line: 250, column: 101, scope: !5670)
!5855 = !DILocation(line: 250, column: 57, scope: !5670)
!5856 = !DILocation(line: 250, column: 55, scope: !5670)
!5857 = !DILocation(line: 250, column: 22, scope: !5670)
!5858 = !DILocation(line: 251, column: 39, scope: !5670)
!5859 = !DILocation(line: 251, column: 36, scope: !5670)
!5860 = !DILocation(line: 251, column: 25, scope: !5670)
!5861 = !DILocation(line: 251, column: 52, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5670, file: !1056, discriminator: 1)
!5863 = !DILocation(line: 251, column: 25, scope: !5862)
!5864 = !DILocation(line: 251, column: 25, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5670, file: !1056, discriminator: 2)
!5866 = !DILocation(line: 251, column: 25, scope: !5867)
!5867 = !DILexicalBlockFile(scope: !5670, file: !1056, discriminator: 3)
!5868 = !DILocation(line: 251, column: 22, scope: !5867)
!5869 = !DILocation(line: 252, column: 38, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5670, file: !1056, line: 252, column: 13)
!5871 = !DILocation(line: 252, column: 22, scope: !5870)
!5872 = !DILocation(line: 252, column: 27, scope: !5870)
!5873 = !DILocation(line: 252, column: 43, scope: !5870)
!5874 = !DILocation(line: 252, column: 48, scope: !5870)
!5875 = !DILocation(line: 252, column: 41, scope: !5870)
!5876 = !DILocation(line: 252, column: 20, scope: !5870)
!5877 = !DILocation(line: 252, column: 18, scope: !5870)
!5878 = !DILocation(line: 252, column: 55, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5880, file: !1056, discriminator: 1)
!5880 = distinct !DILexicalBlock(scope: !5870, file: !1056, line: 252, column: 13)
!5881 = !DILocation(line: 252, column: 75, scope: !5879)
!5882 = !DILocation(line: 252, column: 77, scope: !5879)
!5883 = !DILocation(line: 252, column: 59, scope: !5879)
!5884 = !DILocation(line: 252, column: 64, scope: !5879)
!5885 = !DILocation(line: 252, column: 84, scope: !5879)
!5886 = !DILocation(line: 252, column: 89, scope: !5879)
!5887 = !DILocation(line: 252, column: 82, scope: !5879)
!5888 = !DILocation(line: 252, column: 57, scope: !5879)
!5889 = !DILocation(line: 252, column: 13, scope: !5879)
!5890 = !DILocalVariable(name: "q_m_max", scope: !5891, file: !1056, line: 253, type: !958)
!5891 = distinct !DILexicalBlock(scope: !5880, file: !1056, line: 252, column: 101)
!5892 = !DILocation(line: 253, column: 23, scope: !5891)
!5893 = !DILocation(line: 253, column: 45, scope: !5891)
!5894 = !DILocation(line: 253, column: 33, scope: !5891)
!5895 = !DILocation(line: 253, column: 42, scope: !5891)
!5896 = !DILocation(line: 253, column: 38, scope: !5891)
!5897 = !DILocation(line: 253, column: 50, scope: !5891)
!5898 = !DILocation(line: 253, column: 48, scope: !5891)
!5899 = !DILocation(line: 253, column: 74, scope: !5891)
!5900 = !DILocation(line: 253, column: 61, scope: !5891)
!5901 = !DILocation(line: 253, column: 71, scope: !5891)
!5902 = !DILocation(line: 253, column: 66, scope: !5891)
!5903 = !DILocation(line: 253, column: 59, scope: !5891)
!5904 = !DILocation(line: 254, column: 48, scope: !5891)
!5905 = !DILocation(line: 254, column: 36, scope: !5891)
!5906 = !DILocation(line: 254, column: 45, scope: !5891)
!5907 = !DILocation(line: 254, column: 41, scope: !5891)
!5908 = !DILocation(line: 254, column: 55, scope: !5891)
!5909 = !DILocation(line: 254, column: 52, scope: !5891)
!5910 = !DILocation(line: 254, column: 35, scope: !5891)
!5911 = !DILocation(line: 254, column: 67, scope: !5912)
!5912 = !DILexicalBlockFile(scope: !5891, file: !1056, discriminator: 1)
!5913 = !DILocation(line: 254, column: 35, scope: !5912)
!5914 = !DILocation(line: 254, column: 91, scope: !5915)
!5915 = !DILexicalBlockFile(scope: !5891, file: !1056, discriminator: 2)
!5916 = !DILocation(line: 254, column: 79, scope: !5915)
!5917 = !DILocation(line: 254, column: 88, scope: !5915)
!5918 = !DILocation(line: 254, column: 84, scope: !5915)
!5919 = !DILocation(line: 254, column: 35, scope: !5915)
!5920 = !DILocation(line: 254, column: 35, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5891, file: !1056, discriminator: 3)
!5922 = !DILocation(line: 254, column: 29, scope: !5921)
!5923 = !DILocation(line: 254, column: 17, scope: !5921)
!5924 = !DILocation(line: 254, column: 26, scope: !5921)
!5925 = !DILocation(line: 254, column: 22, scope: !5921)
!5926 = !DILocation(line: 254, column: 32, scope: !5921)
!5927 = !DILocation(line: 255, column: 50, scope: !5891)
!5928 = !DILocation(line: 255, column: 37, scope: !5891)
!5929 = !DILocation(line: 255, column: 47, scope: !5891)
!5930 = !DILocation(line: 255, column: 42, scope: !5891)
!5931 = !DILocation(line: 255, column: 57, scope: !5891)
!5932 = !DILocation(line: 255, column: 54, scope: !5891)
!5933 = !DILocation(line: 255, column: 36, scope: !5891)
!5934 = !DILocation(line: 255, column: 70, scope: !5912)
!5935 = !DILocation(line: 255, column: 36, scope: !5912)
!5936 = !DILocation(line: 255, column: 96, scope: !5915)
!5937 = !DILocation(line: 255, column: 83, scope: !5915)
!5938 = !DILocation(line: 255, column: 93, scope: !5915)
!5939 = !DILocation(line: 255, column: 88, scope: !5915)
!5940 = !DILocation(line: 255, column: 36, scope: !5915)
!5941 = !DILocation(line: 255, column: 36, scope: !5921)
!5942 = !DILocation(line: 255, column: 30, scope: !5921)
!5943 = !DILocation(line: 255, column: 17, scope: !5921)
!5944 = !DILocation(line: 255, column: 27, scope: !5921)
!5945 = !DILocation(line: 255, column: 22, scope: !5921)
!5946 = !DILocation(line: 255, column: 33, scope: !5921)
!5947 = !DILocation(line: 256, column: 13, scope: !5891)
!5948 = !DILocation(line: 252, column: 97, scope: !5949)
!5949 = !DILexicalBlockFile(scope: !5880, file: !1056, discriminator: 2)
!5950 = !DILocation(line: 252, column: 13, scope: !5949)
!5951 = distinct !{!5951, !5952}
!5952 = !DILocation(line: 252, column: 13, scope: !5670)
!5953 = !DILocation(line: 257, column: 22, scope: !5670)
!5954 = !DILocation(line: 257, column: 29, scope: !5670)
!5955 = !DILocation(line: 257, column: 13, scope: !5670)
!5956 = !DILocation(line: 257, column: 20, scope: !5670)
!5957 = !DILocation(line: 258, column: 38, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5670, file: !1056, line: 258, column: 13)
!5959 = !DILocation(line: 258, column: 22, scope: !5958)
!5960 = !DILocation(line: 258, column: 27, scope: !5958)
!5961 = !DILocation(line: 258, column: 43, scope: !5958)
!5962 = !DILocation(line: 258, column: 48, scope: !5958)
!5963 = !DILocation(line: 258, column: 41, scope: !5958)
!5964 = !DILocation(line: 258, column: 20, scope: !5958)
!5965 = !DILocation(line: 258, column: 18, scope: !5958)
!5966 = !DILocation(line: 258, column: 55, scope: !5967)
!5967 = !DILexicalBlockFile(scope: !5968, file: !1056, discriminator: 1)
!5968 = distinct !DILexicalBlock(scope: !5958, file: !1056, line: 258, column: 13)
!5969 = !DILocation(line: 258, column: 75, scope: !5967)
!5970 = !DILocation(line: 258, column: 77, scope: !5967)
!5971 = !DILocation(line: 258, column: 59, scope: !5967)
!5972 = !DILocation(line: 258, column: 64, scope: !5967)
!5973 = !DILocation(line: 258, column: 84, scope: !5967)
!5974 = !DILocation(line: 258, column: 89, scope: !5967)
!5975 = !DILocation(line: 258, column: 82, scope: !5967)
!5976 = !DILocation(line: 258, column: 57, scope: !5967)
!5977 = !DILocation(line: 258, column: 13, scope: !5967)
!5978 = !DILocation(line: 259, column: 48, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5968, file: !1056, line: 258, column: 101)
!5980 = !DILocation(line: 259, column: 27, scope: !5979)
!5981 = !DILocation(line: 259, column: 45, scope: !5979)
!5982 = !DILocation(line: 259, column: 32, scope: !5979)
!5983 = !DILocation(line: 259, column: 17, scope: !5979)
!5984 = !DILocation(line: 259, column: 24, scope: !5979)
!5985 = !DILocation(line: 260, column: 42, scope: !5979)
!5986 = !DILocation(line: 260, column: 27, scope: !5979)
!5987 = !DILocation(line: 260, column: 39, scope: !5979)
!5988 = !DILocation(line: 260, column: 32, scope: !5979)
!5989 = !DILocation(line: 260, column: 60, scope: !5979)
!5990 = !DILocation(line: 260, column: 47, scope: !5979)
!5991 = !DILocation(line: 260, column: 57, scope: !5979)
!5992 = !DILocation(line: 260, column: 52, scope: !5979)
!5993 = !DILocation(line: 260, column: 45, scope: !5979)
!5994 = !DILocation(line: 260, column: 78, scope: !5979)
!5995 = !DILocation(line: 260, column: 65, scope: !5979)
!5996 = !DILocation(line: 260, column: 75, scope: !5979)
!5997 = !DILocation(line: 260, column: 70, scope: !5979)
!5998 = !DILocation(line: 260, column: 63, scope: !5979)
!5999 = !DILocation(line: 261, column: 41, scope: !5979)
!6000 = !DILocation(line: 261, column: 29, scope: !5979)
!6001 = !DILocation(line: 261, column: 38, scope: !5979)
!6002 = !DILocation(line: 261, column: 34, scope: !5979)
!6003 = !DILocation(line: 261, column: 58, scope: !5979)
!6004 = !DILocation(line: 261, column: 46, scope: !5979)
!6005 = !DILocation(line: 261, column: 55, scope: !5979)
!6006 = !DILocation(line: 261, column: 51, scope: !5979)
!6007 = !DILocation(line: 261, column: 44, scope: !5979)
!6008 = !DILocation(line: 261, column: 27, scope: !5979)
!6009 = !DILocation(line: 262, column: 30, scope: !5979)
!6010 = !DILocation(line: 262, column: 36, scope: !5979)
!6011 = !DILocation(line: 262, column: 52, scope: !6012)
!6012 = !DILexicalBlockFile(scope: !5979, file: !1056, discriminator: 1)
!6013 = !DILocation(line: 262, column: 40, scope: !6012)
!6014 = !DILocation(line: 262, column: 49, scope: !6012)
!6015 = !DILocation(line: 262, column: 45, scope: !6012)
!6016 = !DILocation(line: 262, column: 39, scope: !6012)
!6017 = !DILocation(line: 262, column: 36, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !5979, file: !1056, discriminator: 2)
!6019 = !DILocation(line: 262, column: 29, scope: !6018)
!6020 = !DILocation(line: 262, column: 70, scope: !6018)
!6021 = !DILocation(line: 262, column: 58, scope: !6018)
!6022 = !DILocation(line: 262, column: 67, scope: !6018)
!6023 = !DILocation(line: 262, column: 63, scope: !6018)
!6024 = !DILocation(line: 262, column: 56, scope: !6018)
!6025 = !DILocation(line: 262, column: 87, scope: !6018)
!6026 = !DILocation(line: 262, column: 75, scope: !6018)
!6027 = !DILocation(line: 262, column: 84, scope: !6018)
!6028 = !DILocation(line: 262, column: 80, scope: !6018)
!6029 = !DILocation(line: 262, column: 73, scope: !6018)
!6030 = !DILocation(line: 262, column: 27, scope: !6018)
!6031 = !DILocation(line: 260, column: 17, scope: !6012)
!6032 = !DILocation(line: 260, column: 24, scope: !6012)
!6033 = !DILocation(line: 263, column: 13, scope: !5979)
!6034 = !DILocation(line: 258, column: 97, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !5968, file: !1056, discriminator: 2)
!6036 = !DILocation(line: 258, column: 13, scope: !6035)
!6037 = distinct !{!6037, !6038}
!6038 = !DILocation(line: 258, column: 13, scope: !5670)
!6039 = !DILocation(line: 264, column: 62, scope: !5670)
!6040 = !DILocation(line: 264, column: 60, scope: !5670)
!6041 = !DILocation(line: 264, column: 102, scope: !5670)
!6042 = !DILocation(line: 264, column: 100, scope: !5670)
!6043 = !DILocation(line: 264, column: 70, scope: !5670)
!6044 = !DILocation(line: 264, column: 26, scope: !5670)
!6045 = !DILocation(line: 264, column: 24, scope: !5670)
!6046 = !DILocation(line: 265, column: 45, scope: !5670)
!6047 = !DILocation(line: 265, column: 42, scope: !5670)
!6048 = !DILocation(line: 265, column: 27, scope: !5670)
!6049 = !DILocation(line: 265, column: 60, scope: !5862)
!6050 = !DILocation(line: 265, column: 27, scope: !5862)
!6051 = !DILocation(line: 265, column: 27, scope: !5865)
!6052 = !DILocation(line: 265, column: 27, scope: !5867)
!6053 = !DILocation(line: 265, column: 24, scope: !5867)
!6054 = !DILocation(line: 266, column: 38, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !5670, file: !1056, line: 266, column: 13)
!6056 = !DILocation(line: 266, column: 22, scope: !6055)
!6057 = !DILocation(line: 266, column: 27, scope: !6055)
!6058 = !DILocation(line: 266, column: 43, scope: !6055)
!6059 = !DILocation(line: 266, column: 48, scope: !6055)
!6060 = !DILocation(line: 266, column: 41, scope: !6055)
!6061 = !DILocation(line: 266, column: 20, scope: !6055)
!6062 = !DILocation(line: 266, column: 18, scope: !6055)
!6063 = !DILocation(line: 266, column: 55, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !6065, file: !1056, discriminator: 1)
!6065 = distinct !DILexicalBlock(scope: !6055, file: !1056, line: 266, column: 13)
!6066 = !DILocation(line: 266, column: 75, scope: !6064)
!6067 = !DILocation(line: 266, column: 77, scope: !6064)
!6068 = !DILocation(line: 266, column: 59, scope: !6064)
!6069 = !DILocation(line: 266, column: 64, scope: !6064)
!6070 = !DILocation(line: 266, column: 84, scope: !6064)
!6071 = !DILocation(line: 266, column: 89, scope: !6064)
!6072 = !DILocation(line: 266, column: 82, scope: !6064)
!6073 = !DILocation(line: 266, column: 57, scope: !6064)
!6074 = !DILocation(line: 266, column: 13, scope: !6064)
!6075 = !DILocation(line: 267, column: 36, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6065, file: !1056, line: 266, column: 101)
!6077 = !DILocation(line: 267, column: 30, scope: !6076)
!6078 = !DILocation(line: 267, column: 17, scope: !6076)
!6079 = !DILocation(line: 267, column: 27, scope: !6076)
!6080 = !DILocation(line: 267, column: 22, scope: !6076)
!6081 = !DILocation(line: 267, column: 33, scope: !6076)
!6082 = !DILocation(line: 268, column: 35, scope: !6076)
!6083 = !DILocation(line: 268, column: 29, scope: !6076)
!6084 = !DILocation(line: 268, column: 17, scope: !6076)
!6085 = !DILocation(line: 268, column: 26, scope: !6076)
!6086 = !DILocation(line: 268, column: 22, scope: !6076)
!6087 = !DILocation(line: 268, column: 32, scope: !6076)
!6088 = !DILocation(line: 269, column: 35, scope: !6076)
!6089 = !DILocation(line: 269, column: 29, scope: !6076)
!6090 = !DILocation(line: 269, column: 17, scope: !6076)
!6091 = !DILocation(line: 269, column: 26, scope: !6076)
!6092 = !DILocation(line: 269, column: 22, scope: !6076)
!6093 = !DILocation(line: 269, column: 32, scope: !6076)
!6094 = !DILocation(line: 270, column: 13, scope: !6076)
!6095 = !DILocation(line: 266, column: 97, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6065, file: !1056, discriminator: 2)
!6097 = !DILocation(line: 266, column: 13, scope: !6096)
!6098 = distinct !{!6098, !6099}
!6099 = !DILocation(line: 266, column: 13, scope: !5670)
!6100 = !DILocation(line: 271, column: 9, scope: !5670)
!6101 = !DILocation(line: 228, column: 38, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !5664, file: !1056, discriminator: 2)
!6103 = !DILocation(line: 228, column: 9, scope: !6102)
!6104 = distinct !{!6104, !6105}
!6105 = !DILocation(line: 228, column: 9, scope: !5645)
!6106 = !DILocation(line: 272, column: 5, scope: !5645)
!6107 = !DILocation(line: 226, column: 43, scope: !6108)
!6108 = !DILexicalBlockFile(scope: !5639, file: !1056, discriminator: 2)
!6109 = !DILocation(line: 226, column: 5, scope: !6108)
!6110 = distinct !{!6110, !6111}
!6111 = !DILocation(line: 226, column: 5, scope: !2583)
!6112 = !DILocation(line: 273, column: 1, scope: !2583)
!6113 = distinct !DISubprogram(name: "sbr_qmf_synthesis", scope: !1001, file: !1001, line: 1214, type: !6114, isLocal: true, isDefinition: true, scopeLine: 1223, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !4727, !2562, !2440, !955, !1332, !6116, !955, !1793, !1014}
!6116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6117, size: 64, align: 64)
!6117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 2048, align: 32, elements: !2237)
!6118 = !DILocalVariable(name: "mdct", arg: 1, scope: !6113, file: !1001, line: 1214, type: !4727)
!6119 = !DILocation(line: 1214, column: 43, scope: !6113)
!6120 = !DILocalVariable(name: "sbrdsp", arg: 2, scope: !6113, file: !1001, line: 1218, type: !2562)
!6121 = !DILocation(line: 1218, column: 46, scope: !6113)
!6122 = !DILocalVariable(name: "dsp", arg: 3, scope: !6113, file: !1001, line: 1218, type: !2440)
!6123 = !DILocation(line: 1218, column: 73, scope: !6113)
!6124 = !DILocalVariable(name: "out", arg: 4, scope: !6113, file: !1001, line: 1220, type: !955)
!6125 = !DILocation(line: 1220, column: 41, scope: !6113)
!6126 = !DILocalVariable(name: "X", arg: 5, scope: !6113, file: !1001, line: 1220, type: !1332)
!6127 = !DILocation(line: 1220, column: 55, scope: !6113)
!6128 = !DILocalVariable(name: "mdct_buf", arg: 6, scope: !6113, file: !1001, line: 1221, type: !6116)
!6129 = !DILocation(line: 1221, column: 40, scope: !6113)
!6130 = !DILocalVariable(name: "v0", arg: 7, scope: !6113, file: !1001, line: 1222, type: !955)
!6131 = !DILocation(line: 1222, column: 41, scope: !6113)
!6132 = !DILocalVariable(name: "v_off", arg: 8, scope: !6113, file: !1001, line: 1222, type: !1793)
!6133 = !DILocation(line: 1222, column: 50, scope: !6113)
!6134 = !DILocalVariable(name: "div", arg: 9, scope: !6113, file: !1001, line: 1222, type: !1014)
!6135 = !DILocation(line: 1222, column: 76, scope: !6113)
!6136 = !DILocalVariable(name: "i", scope: !6113, file: !1001, line: 1224, type: !992)
!6137 = !DILocation(line: 1224, column: 9, scope: !6113)
!6138 = !DILocalVariable(name: "n", scope: !6113, file: !1001, line: 1224, type: !992)
!6139 = !DILocation(line: 1224, column: 12, scope: !6113)
!6140 = !DILocalVariable(name: "sbr_qmf_window", scope: !6113, file: !1001, line: 1225, type: !1346)
!6141 = !DILocation(line: 1225, column: 21, scope: !6113)
!6142 = !DILocation(line: 1225, column: 38, scope: !6113)
!6143 = !DILocalVariable(name: "step", scope: !6113, file: !1001, line: 1226, type: !1585)
!6144 = !DILocation(line: 1226, column: 15, scope: !6113)
!6145 = !DILocation(line: 1226, column: 29, scope: !6113)
!6146 = !DILocation(line: 1226, column: 26, scope: !6113)
!6147 = !DILocalVariable(name: "v", scope: !6113, file: !1001, line: 1227, type: !955)
!6148 = !DILocation(line: 1227, column: 15, scope: !6113)
!6149 = !DILocation(line: 1228, column: 12, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6113, file: !1001, line: 1228, column: 5)
!6151 = !DILocation(line: 1228, column: 10, scope: !6150)
!6152 = !DILocation(line: 1228, column: 17, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6154, file: !1001, discriminator: 1)
!6154 = distinct !DILexicalBlock(scope: !6150, file: !1001, line: 1228, column: 5)
!6155 = !DILocation(line: 1228, column: 19, scope: !6153)
!6156 = !DILocation(line: 1228, column: 5, scope: !6153)
!6157 = !DILocation(line: 1229, column: 14, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !1001, line: 1229, column: 13)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !1001, line: 1228, column: 30)
!6160 = !DILocation(line: 1229, column: 13, scope: !6158)
!6161 = !DILocation(line: 1229, column: 22, scope: !6158)
!6162 = !DILocation(line: 1229, column: 20, scope: !6158)
!6163 = !DILocation(line: 1229, column: 13, scope: !6159)
!6164 = !DILocalVariable(name: "saved_samples", scope: !6165, file: !1001, line: 1230, type: !992)
!6165 = distinct !DILexicalBlock(scope: !6158, file: !1001, line: 1229, column: 28)
!6166 = !DILocation(line: 1230, column: 17, scope: !6165)
!6167 = !DILocation(line: 1230, column: 49, scope: !6165)
!6168 = !DILocation(line: 1230, column: 46, scope: !6165)
!6169 = !DILocation(line: 1231, column: 41, scope: !6165)
!6170 = !DILocation(line: 1231, column: 39, scope: !6165)
!6171 = !DILocation(line: 1231, column: 21, scope: !6165)
!6172 = !DILocation(line: 1231, column: 13, scope: !6165)
!6173 = !DILocation(line: 1231, column: 57, scope: !6165)
!6174 = !DILocation(line: 1231, column: 61, scope: !6165)
!6175 = !DILocation(line: 1231, column: 75, scope: !6165)
!6176 = !DILocation(line: 1232, column: 39, scope: !6165)
!6177 = !DILocation(line: 1232, column: 37, scope: !6165)
!6178 = !DILocation(line: 1232, column: 55, scope: !6165)
!6179 = !DILocation(line: 1232, column: 53, scope: !6165)
!6180 = !DILocation(line: 1232, column: 14, scope: !6165)
!6181 = !DILocation(line: 1232, column: 20, scope: !6165)
!6182 = !DILocation(line: 1233, column: 9, scope: !6165)
!6183 = !DILocation(line: 1234, column: 23, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6158, file: !1001, line: 1233, column: 16)
!6185 = !DILocation(line: 1234, column: 14, scope: !6184)
!6186 = !DILocation(line: 1234, column: 20, scope: !6184)
!6187 = !DILocation(line: 1236, column: 13, scope: !6159)
!6188 = !DILocation(line: 1236, column: 19, scope: !6159)
!6189 = !DILocation(line: 1236, column: 18, scope: !6159)
!6190 = !DILocation(line: 1236, column: 16, scope: !6159)
!6191 = !DILocation(line: 1236, column: 11, scope: !6159)
!6192 = !DILocation(line: 1237, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6159, file: !1001, line: 1237, column: 13)
!6194 = !DILocation(line: 1237, column: 13, scope: !6159)
!6195 = !DILocation(line: 1238, column: 20, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !1001, line: 1238, column: 13)
!6197 = distinct !DILexicalBlock(scope: !6193, file: !1001, line: 1237, column: 18)
!6198 = !DILocation(line: 1238, column: 18, scope: !6196)
!6199 = !DILocation(line: 1238, column: 25, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6201, file: !1001, discriminator: 1)
!6201 = distinct !DILexicalBlock(scope: !6196, file: !1001, line: 1238, column: 13)
!6202 = !DILocation(line: 1238, column: 27, scope: !6200)
!6203 = !DILocation(line: 1238, column: 13, scope: !6200)
!6204 = !DILocation(line: 1239, column: 40, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !1001, line: 1238, column: 38)
!6206 = !DILocation(line: 1239, column: 32, scope: !6205)
!6207 = !DILocation(line: 1239, column: 37, scope: !6205)
!6208 = !DILocation(line: 1239, column: 31, scope: !6205)
!6209 = !DILocation(line: 1239, column: 26, scope: !6205)
!6210 = !DILocation(line: 1239, column: 17, scope: !6205)
!6211 = !DILocation(line: 1239, column: 22, scope: !6205)
!6212 = !DILocation(line: 1239, column: 29, scope: !6205)
!6213 = !DILocation(line: 1240, column: 44, scope: !6205)
!6214 = !DILocation(line: 1240, column: 43, scope: !6205)
!6215 = !DILocation(line: 1240, column: 33, scope: !6205)
!6216 = !DILocation(line: 1240, column: 38, scope: !6205)
!6217 = !DILocation(line: 1240, column: 28, scope: !6205)
!6218 = !DILocation(line: 1240, column: 27, scope: !6205)
!6219 = !DILocation(line: 1240, column: 17, scope: !6205)
!6220 = !DILocation(line: 1240, column: 22, scope: !6205)
!6221 = !DILocation(line: 1240, column: 31, scope: !6205)
!6222 = !DILocation(line: 1241, column: 13, scope: !6205)
!6223 = !DILocation(line: 1238, column: 34, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6201, file: !1001, discriminator: 2)
!6225 = !DILocation(line: 1238, column: 13, scope: !6224)
!6226 = distinct !{!6226, !6227}
!6227 = !DILocation(line: 1238, column: 13, scope: !6197)
!6228 = !DILocation(line: 1242, column: 13, scope: !6197)
!6229 = !DILocation(line: 1242, column: 19, scope: !6197)
!6230 = !DILocation(line: 1242, column: 30, scope: !6197)
!6231 = !DILocation(line: 1242, column: 36, scope: !6197)
!6232 = !DILocation(line: 1242, column: 54, scope: !6197)
!6233 = !DILocation(line: 1242, column: 49, scope: !6197)
!6234 = !DILocation(line: 1243, column: 13, scope: !6197)
!6235 = !DILocation(line: 1243, column: 21, scope: !6197)
!6236 = !DILocation(line: 1243, column: 35, scope: !6197)
!6237 = !DILocation(line: 1243, column: 38, scope: !6197)
!6238 = !DILocation(line: 1244, column: 9, scope: !6197)
!6239 = !DILocation(line: 1245, column: 13, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6193, file: !1001, line: 1244, column: 16)
!6241 = !DILocation(line: 1245, column: 21, scope: !6240)
!6242 = !DILocation(line: 1245, column: 37, scope: !6240)
!6243 = !DILocation(line: 1245, column: 32, scope: !6240)
!6244 = !DILocation(line: 1246, column: 13, scope: !6240)
!6245 = !DILocation(line: 1246, column: 19, scope: !6240)
!6246 = !DILocation(line: 1246, column: 30, scope: !6240)
!6247 = !DILocation(line: 1246, column: 36, scope: !6240)
!6248 = !DILocation(line: 1246, column: 54, scope: !6240)
!6249 = !DILocation(line: 1246, column: 49, scope: !6240)
!6250 = !DILocation(line: 1247, column: 13, scope: !6240)
!6251 = !DILocation(line: 1247, column: 19, scope: !6240)
!6252 = !DILocation(line: 1247, column: 30, scope: !6240)
!6253 = !DILocation(line: 1247, column: 36, scope: !6240)
!6254 = !DILocation(line: 1247, column: 54, scope: !6240)
!6255 = !DILocation(line: 1247, column: 49, scope: !6240)
!6256 = !DILocation(line: 1248, column: 13, scope: !6240)
!6257 = !DILocation(line: 1248, column: 21, scope: !6240)
!6258 = !DILocation(line: 1248, column: 36, scope: !6240)
!6259 = !DILocation(line: 1248, column: 39, scope: !6240)
!6260 = !DILocation(line: 1248, column: 52, scope: !6240)
!6261 = !DILocation(line: 1250, column: 9, scope: !6159)
!6262 = !DILocation(line: 1250, column: 14, scope: !6159)
!6263 = !DILocation(line: 1250, column: 27, scope: !6159)
!6264 = !DILocation(line: 1250, column: 32, scope: !6159)
!6265 = !DILocation(line: 1250, column: 36, scope: !6159)
!6266 = !DILocation(line: 1250, column: 59, scope: !6159)
!6267 = !DILocation(line: 1250, column: 56, scope: !6159)
!6268 = !DILocation(line: 1251, column: 9, scope: !6159)
!6269 = !DILocation(line: 1251, column: 14, scope: !6159)
!6270 = !DILocation(line: 1251, column: 30, scope: !6159)
!6271 = !DILocation(line: 1251, column: 35, scope: !6159)
!6272 = !DILocation(line: 1251, column: 48, scope: !6159)
!6273 = !DILocation(line: 1251, column: 45, scope: !6159)
!6274 = !DILocation(line: 1251, column: 37, scope: !6159)
!6275 = !DILocation(line: 1251, column: 54, scope: !6159)
!6276 = !DILocation(line: 1251, column: 79, scope: !6159)
!6277 = !DILocation(line: 1251, column: 76, scope: !6159)
!6278 = !DILocation(line: 1251, column: 69, scope: !6159)
!6279 = !DILocation(line: 1251, column: 85, scope: !6159)
!6280 = !DILocation(line: 1251, column: 97, scope: !6159)
!6281 = !DILocation(line: 1251, column: 94, scope: !6159)
!6282 = !DILocation(line: 1252, column: 9, scope: !6159)
!6283 = !DILocation(line: 1252, column: 14, scope: !6159)
!6284 = !DILocation(line: 1252, column: 30, scope: !6159)
!6285 = !DILocation(line: 1252, column: 35, scope: !6159)
!6286 = !DILocation(line: 1252, column: 48, scope: !6159)
!6287 = !DILocation(line: 1252, column: 45, scope: !6159)
!6288 = !DILocation(line: 1252, column: 37, scope: !6159)
!6289 = !DILocation(line: 1252, column: 54, scope: !6159)
!6290 = !DILocation(line: 1252, column: 79, scope: !6159)
!6291 = !DILocation(line: 1252, column: 76, scope: !6159)
!6292 = !DILocation(line: 1252, column: 69, scope: !6159)
!6293 = !DILocation(line: 1252, column: 85, scope: !6159)
!6294 = !DILocation(line: 1252, column: 97, scope: !6159)
!6295 = !DILocation(line: 1252, column: 94, scope: !6159)
!6296 = !DILocation(line: 1253, column: 9, scope: !6159)
!6297 = !DILocation(line: 1253, column: 14, scope: !6159)
!6298 = !DILocation(line: 1253, column: 30, scope: !6159)
!6299 = !DILocation(line: 1253, column: 35, scope: !6159)
!6300 = !DILocation(line: 1253, column: 48, scope: !6159)
!6301 = !DILocation(line: 1253, column: 45, scope: !6159)
!6302 = !DILocation(line: 1253, column: 37, scope: !6159)
!6303 = !DILocation(line: 1253, column: 54, scope: !6159)
!6304 = !DILocation(line: 1253, column: 79, scope: !6159)
!6305 = !DILocation(line: 1253, column: 76, scope: !6159)
!6306 = !DILocation(line: 1253, column: 69, scope: !6159)
!6307 = !DILocation(line: 1253, column: 85, scope: !6159)
!6308 = !DILocation(line: 1253, column: 97, scope: !6159)
!6309 = !DILocation(line: 1253, column: 94, scope: !6159)
!6310 = !DILocation(line: 1254, column: 9, scope: !6159)
!6311 = !DILocation(line: 1254, column: 14, scope: !6159)
!6312 = !DILocation(line: 1254, column: 30, scope: !6159)
!6313 = !DILocation(line: 1254, column: 35, scope: !6159)
!6314 = !DILocation(line: 1254, column: 48, scope: !6159)
!6315 = !DILocation(line: 1254, column: 45, scope: !6159)
!6316 = !DILocation(line: 1254, column: 37, scope: !6159)
!6317 = !DILocation(line: 1254, column: 54, scope: !6159)
!6318 = !DILocation(line: 1254, column: 79, scope: !6159)
!6319 = !DILocation(line: 1254, column: 76, scope: !6159)
!6320 = !DILocation(line: 1254, column: 69, scope: !6159)
!6321 = !DILocation(line: 1254, column: 85, scope: !6159)
!6322 = !DILocation(line: 1254, column: 97, scope: !6159)
!6323 = !DILocation(line: 1254, column: 94, scope: !6159)
!6324 = !DILocation(line: 1255, column: 9, scope: !6159)
!6325 = !DILocation(line: 1255, column: 14, scope: !6159)
!6326 = !DILocation(line: 1255, column: 30, scope: !6159)
!6327 = !DILocation(line: 1255, column: 35, scope: !6159)
!6328 = !DILocation(line: 1255, column: 48, scope: !6159)
!6329 = !DILocation(line: 1255, column: 45, scope: !6159)
!6330 = !DILocation(line: 1255, column: 37, scope: !6159)
!6331 = !DILocation(line: 1255, column: 54, scope: !6159)
!6332 = !DILocation(line: 1255, column: 79, scope: !6159)
!6333 = !DILocation(line: 1255, column: 76, scope: !6159)
!6334 = !DILocation(line: 1255, column: 69, scope: !6159)
!6335 = !DILocation(line: 1255, column: 85, scope: !6159)
!6336 = !DILocation(line: 1255, column: 97, scope: !6159)
!6337 = !DILocation(line: 1255, column: 94, scope: !6159)
!6338 = !DILocation(line: 1256, column: 9, scope: !6159)
!6339 = !DILocation(line: 1256, column: 14, scope: !6159)
!6340 = !DILocation(line: 1256, column: 30, scope: !6159)
!6341 = !DILocation(line: 1256, column: 35, scope: !6159)
!6342 = !DILocation(line: 1256, column: 48, scope: !6159)
!6343 = !DILocation(line: 1256, column: 45, scope: !6159)
!6344 = !DILocation(line: 1256, column: 37, scope: !6159)
!6345 = !DILocation(line: 1256, column: 54, scope: !6159)
!6346 = !DILocation(line: 1256, column: 79, scope: !6159)
!6347 = !DILocation(line: 1256, column: 76, scope: !6159)
!6348 = !DILocation(line: 1256, column: 69, scope: !6159)
!6349 = !DILocation(line: 1256, column: 85, scope: !6159)
!6350 = !DILocation(line: 1256, column: 97, scope: !6159)
!6351 = !DILocation(line: 1256, column: 94, scope: !6159)
!6352 = !DILocation(line: 1257, column: 9, scope: !6159)
!6353 = !DILocation(line: 1257, column: 14, scope: !6159)
!6354 = !DILocation(line: 1257, column: 30, scope: !6159)
!6355 = !DILocation(line: 1257, column: 35, scope: !6159)
!6356 = !DILocation(line: 1257, column: 48, scope: !6159)
!6357 = !DILocation(line: 1257, column: 45, scope: !6159)
!6358 = !DILocation(line: 1257, column: 37, scope: !6159)
!6359 = !DILocation(line: 1257, column: 54, scope: !6159)
!6360 = !DILocation(line: 1257, column: 79, scope: !6159)
!6361 = !DILocation(line: 1257, column: 76, scope: !6159)
!6362 = !DILocation(line: 1257, column: 69, scope: !6159)
!6363 = !DILocation(line: 1257, column: 85, scope: !6159)
!6364 = !DILocation(line: 1257, column: 97, scope: !6159)
!6365 = !DILocation(line: 1257, column: 94, scope: !6159)
!6366 = !DILocation(line: 1258, column: 9, scope: !6159)
!6367 = !DILocation(line: 1258, column: 14, scope: !6159)
!6368 = !DILocation(line: 1258, column: 30, scope: !6159)
!6369 = !DILocation(line: 1258, column: 35, scope: !6159)
!6370 = !DILocation(line: 1258, column: 48, scope: !6159)
!6371 = !DILocation(line: 1258, column: 45, scope: !6159)
!6372 = !DILocation(line: 1258, column: 37, scope: !6159)
!6373 = !DILocation(line: 1258, column: 54, scope: !6159)
!6374 = !DILocation(line: 1258, column: 79, scope: !6159)
!6375 = !DILocation(line: 1258, column: 76, scope: !6159)
!6376 = !DILocation(line: 1258, column: 69, scope: !6159)
!6377 = !DILocation(line: 1258, column: 85, scope: !6159)
!6378 = !DILocation(line: 1258, column: 97, scope: !6159)
!6379 = !DILocation(line: 1258, column: 94, scope: !6159)
!6380 = !DILocation(line: 1259, column: 9, scope: !6159)
!6381 = !DILocation(line: 1259, column: 14, scope: !6159)
!6382 = !DILocation(line: 1259, column: 30, scope: !6159)
!6383 = !DILocation(line: 1259, column: 35, scope: !6159)
!6384 = !DILocation(line: 1259, column: 48, scope: !6159)
!6385 = !DILocation(line: 1259, column: 45, scope: !6159)
!6386 = !DILocation(line: 1259, column: 37, scope: !6159)
!6387 = !DILocation(line: 1259, column: 54, scope: !6159)
!6388 = !DILocation(line: 1259, column: 79, scope: !6159)
!6389 = !DILocation(line: 1259, column: 76, scope: !6159)
!6390 = !DILocation(line: 1259, column: 69, scope: !6159)
!6391 = !DILocation(line: 1259, column: 85, scope: !6159)
!6392 = !DILocation(line: 1259, column: 97, scope: !6159)
!6393 = !DILocation(line: 1259, column: 94, scope: !6159)
!6394 = !DILocation(line: 1260, column: 22, scope: !6159)
!6395 = !DILocation(line: 1260, column: 19, scope: !6159)
!6396 = !DILocation(line: 1260, column: 13, scope: !6159)
!6397 = !DILocation(line: 1261, column: 5, scope: !6159)
!6398 = !DILocation(line: 1228, column: 26, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !6154, file: !1001, discriminator: 2)
!6400 = !DILocation(line: 1228, column: 5, scope: !6399)
!6401 = distinct !{!6401, !6402}
!6402 = !DILocation(line: 1228, column: 5, scope: !6113)
!6403 = !DILocation(line: 1262, column: 1, scope: !6113)
!6404 = distinct !DISubprogram(name: "get_bits_count", scope: !2914, file: !2914, line: 219, type: !6405, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{!992, !6407}
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6408, size: 64, align: 64)
!6408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2913)
!6409 = !DILocalVariable(name: "s", arg: 1, scope: !6404, file: !2914, line: 219, type: !6407)
!6410 = !DILocation(line: 219, column: 55, scope: !6404)
!6411 = !DILocation(line: 224, column: 12, scope: !6404)
!6412 = !DILocation(line: 224, column: 15, scope: !6404)
!6413 = !DILocation(line: 224, column: 5, scope: !6404)
!6414 = distinct !DISubprogram(name: "get_bits", scope: !2914, file: !2914, line: 381, type: !6415, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{!985, !2912, !992}
!6417 = !DILocalVariable(name: "x", arg: 1, scope: !6418, file: !6419, line: 66, type: !983)
!6418 = distinct !DISubprogram(name: "av_bswap32", scope: !6419, file: !6419, line: 66, type: !6420, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!6419 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!983, !983}
!6422 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !6423)
!6423 = distinct !DILocation(line: 401, column: 16, scope: !6414)
!6424 = !DILocalVariable(name: "s", arg: 1, scope: !6414, file: !2914, line: 381, type: !2912)
!6425 = !DILocation(line: 381, column: 52, scope: !6414)
!6426 = !DILocalVariable(name: "n", arg: 2, scope: !6414, file: !2914, line: 381, type: !992)
!6427 = !DILocation(line: 381, column: 59, scope: !6414)
!6428 = !DILocalVariable(name: "tmp", scope: !6414, file: !2914, line: 383, type: !992)
!6429 = !DILocation(line: 383, column: 18, scope: !6414)
!6430 = !DILocalVariable(name: "re_index", scope: !6414, file: !2914, line: 399, type: !985)
!6431 = !DILocation(line: 399, column: 18, scope: !6414)
!6432 = !DILocation(line: 399, column: 30, scope: !6414)
!6433 = !DILocation(line: 399, column: 34, scope: !6414)
!6434 = !DILocalVariable(name: "re_cache", scope: !6414, file: !2914, line: 399, type: !985)
!6435 = !DILocation(line: 399, column: 78, scope: !6414)
!6436 = !DILocalVariable(name: "re_size_plus8", scope: !6414, file: !2914, line: 399, type: !985)
!6437 = !DILocation(line: 399, column: 101, scope: !6414)
!6438 = !DILocation(line: 399, column: 118, scope: !6414)
!6439 = !DILocation(line: 399, column: 122, scope: !6414)
!6440 = !DILocation(line: 401, column: 60, scope: !6414)
!6441 = !DILocation(line: 401, column: 64, scope: !6414)
!6442 = !DILocation(line: 401, column: 74, scope: !6414)
!6443 = !DILocation(line: 401, column: 83, scope: !6414)
!6444 = !DILocation(line: 401, column: 71, scope: !6414)
!6445 = !DILocation(line: 401, column: 92, scope: !6414)
!6446 = !DILocation(line: 401, column: 16, scope: !6414)
!6447 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !6423)
!6448 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !6423)
!6449 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !6423)
!6450 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !6423)
!6451 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !6423)
!6452 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !6423)
!6453 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !6423)
!6454 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !6423)
!6455 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !6423)
!6456 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !6423)
!6457 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !6423)
!6458 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !6423)
!6459 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !6423)
!6460 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !6423)
!6461 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !6423)
!6462 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !6423)
!6463 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !6423)
!6464 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !6423)
!6465 = !DILocation(line: 401, column: 100, scope: !6414)
!6466 = !DILocation(line: 401, column: 109, scope: !6414)
!6467 = !DILocation(line: 401, column: 96, scope: !6414)
!6468 = !DILocation(line: 401, column: 14, scope: !6414)
!6469 = !DILocation(line: 402, column: 21, scope: !6414)
!6470 = !DILocation(line: 402, column: 31, scope: !6414)
!6471 = !DILocation(line: 402, column: 11, scope: !6414)
!6472 = !DILocation(line: 402, column: 9, scope: !6414)
!6473 = !DILocation(line: 403, column: 18, scope: !6414)
!6474 = !DILocation(line: 403, column: 36, scope: !6414)
!6475 = !DILocation(line: 403, column: 48, scope: !6414)
!6476 = !DILocation(line: 403, column: 45, scope: !6414)
!6477 = !DILocation(line: 403, column: 33, scope: !6414)
!6478 = !DILocation(line: 403, column: 17, scope: !6414)
!6479 = !DILocation(line: 403, column: 55, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !6414, file: !2914, discriminator: 1)
!6481 = !DILocation(line: 403, column: 67, scope: !6480)
!6482 = !DILocation(line: 403, column: 64, scope: !6480)
!6483 = !DILocation(line: 403, column: 17, scope: !6480)
!6484 = !DILocation(line: 403, column: 74, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6414, file: !2914, discriminator: 2)
!6486 = !DILocation(line: 403, column: 17, scope: !6485)
!6487 = !DILocation(line: 403, column: 17, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6414, file: !2914, discriminator: 3)
!6489 = !DILocation(line: 403, column: 14, scope: !6488)
!6490 = !DILocation(line: 404, column: 18, scope: !6414)
!6491 = !DILocation(line: 404, column: 6, scope: !6414)
!6492 = !DILocation(line: 404, column: 10, scope: !6414)
!6493 = !DILocation(line: 404, column: 16, scope: !6414)
!6494 = !DILocation(line: 406, column: 12, scope: !6414)
!6495 = !DILocation(line: 406, column: 5, scope: !6414)
!6496 = !DILocalVariable(name: "sbr", arg: 1, scope: !1120, file: !1001, line: 136, type: !1123)
!6497 = !DILocation(line: 136, column: 58, scope: !1120)
!6498 = !DILocalVariable(name: "k", scope: !1120, file: !1001, line: 138, type: !992)
!6499 = !DILocation(line: 138, column: 9, scope: !1120)
!6500 = !DILocation(line: 139, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !1120, file: !1001, line: 139, column: 9)
!6502 = !DILocation(line: 139, column: 14, scope: !6501)
!6503 = !DILocation(line: 139, column: 31, scope: !6501)
!6504 = !DILocation(line: 139, column: 9, scope: !1120)
!6505 = !DILocalVariable(name: "lim_bands_per_octave_warped", scope: !6506, file: !1001, line: 143, type: !961)
!6506 = distinct !DILexicalBlock(scope: !6501, file: !1001, line: 139, column: 36)
!6507 = !DILocation(line: 143, column: 24, scope: !6506)
!6508 = !DILocation(line: 143, column: 67, scope: !6506)
!6509 = !DILocation(line: 143, column: 72, scope: !6506)
!6510 = !DILocation(line: 143, column: 89, scope: !6506)
!6511 = !DILocation(line: 143, column: 54, scope: !6506)
!6512 = !DILocalVariable(name: "patch_borders", scope: !6506, file: !1001, line: 144, type: !6513)
!6513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 112, align: 16, elements: !1169)
!6514 = !DILocation(line: 144, column: 17, scope: !6506)
!6515 = !DILocalVariable(name: "in", scope: !6506, file: !1001, line: 145, type: !1407)
!6516 = !DILocation(line: 145, column: 19, scope: !6506)
!6517 = !DILocation(line: 145, column: 24, scope: !6506)
!6518 = !DILocation(line: 145, column: 29, scope: !6506)
!6519 = !DILocation(line: 145, column: 40, scope: !6506)
!6520 = !DILocalVariable(name: "out", scope: !6506, file: !1001, line: 145, type: !1407)
!6521 = !DILocation(line: 145, column: 46, scope: !6506)
!6522 = !DILocation(line: 145, column: 52, scope: !6506)
!6523 = !DILocation(line: 145, column: 57, scope: !6506)
!6524 = !DILocation(line: 147, column: 28, scope: !6506)
!6525 = !DILocation(line: 147, column: 33, scope: !6506)
!6526 = !DILocation(line: 147, column: 9, scope: !6506)
!6527 = !DILocation(line: 147, column: 26, scope: !6506)
!6528 = !DILocation(line: 148, column: 16, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6506, file: !1001, line: 148, column: 9)
!6530 = !DILocation(line: 148, column: 14, scope: !6529)
!6531 = !DILocation(line: 148, column: 21, scope: !6532)
!6532 = !DILexicalBlockFile(scope: !6533, file: !1001, discriminator: 1)
!6533 = distinct !DILexicalBlock(scope: !6529, file: !1001, line: 148, column: 9)
!6534 = !DILocation(line: 148, column: 26, scope: !6532)
!6535 = !DILocation(line: 148, column: 31, scope: !6532)
!6536 = !DILocation(line: 148, column: 23, scope: !6532)
!6537 = !DILocation(line: 148, column: 9, scope: !6532)
!6538 = !DILocation(line: 149, column: 46, scope: !6533)
!6539 = !DILocation(line: 149, column: 47, scope: !6533)
!6540 = !DILocation(line: 149, column: 32, scope: !6533)
!6541 = !DILocation(line: 149, column: 77, scope: !6533)
!6542 = !DILocation(line: 149, column: 78, scope: !6533)
!6543 = !DILocation(line: 149, column: 53, scope: !6533)
!6544 = !DILocation(line: 149, column: 58, scope: !6533)
!6545 = !DILocation(line: 149, column: 51, scope: !6533)
!6546 = !DILocation(line: 149, column: 27, scope: !6533)
!6547 = !DILocation(line: 149, column: 13, scope: !6533)
!6548 = !DILocation(line: 149, column: 30, scope: !6533)
!6549 = !DILocation(line: 148, column: 45, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6533, file: !1001, discriminator: 2)
!6551 = !DILocation(line: 148, column: 9, scope: !6550)
!6552 = distinct !{!6552, !6553}
!6553 = !DILocation(line: 148, column: 9, scope: !6506)
!6554 = !DILocation(line: 151, column: 16, scope: !6506)
!6555 = !DILocation(line: 151, column: 21, scope: !6506)
!6556 = !DILocation(line: 151, column: 9, scope: !6506)
!6557 = !DILocation(line: 151, column: 33, scope: !6506)
!6558 = !DILocation(line: 151, column: 38, scope: !6506)
!6559 = !DILocation(line: 152, column: 17, scope: !6506)
!6560 = !DILocation(line: 152, column: 22, scope: !6506)
!6561 = !DILocation(line: 152, column: 27, scope: !6506)
!6562 = !DILocation(line: 152, column: 16, scope: !6506)
!6563 = !DILocation(line: 152, column: 32, scope: !6506)
!6564 = !DILocation(line: 153, column: 13, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6506, file: !1001, line: 153, column: 13)
!6566 = !DILocation(line: 153, column: 18, scope: !6565)
!6567 = !DILocation(line: 153, column: 30, scope: !6565)
!6568 = !DILocation(line: 153, column: 13, scope: !6506)
!6569 = !DILocation(line: 154, column: 20, scope: !6565)
!6570 = !DILocation(line: 154, column: 25, scope: !6565)
!6571 = !DILocation(line: 154, column: 38, scope: !6565)
!6572 = !DILocation(line: 154, column: 43, scope: !6565)
!6573 = !DILocation(line: 154, column: 36, scope: !6565)
!6574 = !DILocation(line: 154, column: 48, scope: !6565)
!6575 = !DILocation(line: 154, column: 13, scope: !6565)
!6576 = !DILocation(line: 154, column: 53, scope: !6565)
!6577 = !DILocation(line: 154, column: 67, scope: !6565)
!6578 = !DILocation(line: 155, column: 21, scope: !6565)
!6579 = !DILocation(line: 155, column: 26, scope: !6565)
!6580 = !DILocation(line: 155, column: 38, scope: !6565)
!6581 = !DILocation(line: 155, column: 20, scope: !6565)
!6582 = !DILocation(line: 155, column: 43, scope: !6565)
!6583 = !DILocation(line: 157, column: 9, scope: !6506)
!6584 = distinct !{!6584, !6583}
!6585 = !DILocalVariable(name: "stack", scope: !6586, file: !1001, line: 157, type: !6587)
!6586 = distinct !DILexicalBlock(scope: !6506, file: !1001, line: 157, column: 12)
!6587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 8192, align: 64, elements: !975)
!6588 = !DILocation(line: 157, column: 20, scope: !6586)
!6589 = !DILocalVariable(name: "sp", scope: !6586, file: !1001, line: 157, type: !992)
!6590 = !DILocation(line: 157, column: 38, scope: !6586)
!6591 = !DILocation(line: 157, column: 38, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6586, file: !1001, discriminator: 1)
!6593 = !DILocation(line: 157, column: 59, scope: !6592)
!6594 = !DILocation(line: 157, column: 64, scope: !6592)
!6595 = !DILocation(line: 157, column: 45, scope: !6592)
!6596 = !DILocation(line: 157, column: 57, scope: !6592)
!6597 = !DILocation(line: 157, column: 91, scope: !6592)
!6598 = !DILocation(line: 157, column: 96, scope: !6592)
!6599 = !DILocation(line: 157, column: 90, scope: !6592)
!6600 = !DILocation(line: 157, column: 109, scope: !6592)
!6601 = !DILocation(line: 157, column: 114, scope: !6592)
!6602 = !DILocation(line: 157, column: 128, scope: !6592)
!6603 = !DILocation(line: 157, column: 133, scope: !6592)
!6604 = !DILocation(line: 157, column: 126, scope: !6592)
!6605 = !DILocation(line: 157, column: 107, scope: !6592)
!6606 = !DILocation(line: 157, column: 138, scope: !6592)
!6607 = !DILocation(line: 157, column: 76, scope: !6592)
!6608 = !DILocation(line: 157, column: 88, scope: !6592)
!6609 = !DILocation(line: 157, column: 142, scope: !6592)
!6610 = !DILocation(line: 157, column: 148, scope: !6611)
!6611 = !DILexicalBlockFile(scope: !6586, file: !1001, discriminator: 2)
!6612 = !DILocation(line: 157, column: 142, scope: !6611)
!6613 = !DILocalVariable(name: "start", scope: !6614, file: !1001, line: 157, type: !1407)
!6614 = distinct !DILexicalBlock(scope: !6586, file: !1001, line: 157, column: 151)
!6615 = !DILocation(line: 157, column: 163, scope: !6614)
!6616 = !DILocation(line: 157, column: 176, scope: !6617)
!6617 = !DILexicalBlockFile(scope: !6614, file: !1001, discriminator: 3)
!6618 = !DILocation(line: 157, column: 170, scope: !6617)
!6619 = !DILocation(line: 157, column: 163, scope: !6617)
!6620 = !DILocalVariable(name: "end", scope: !6614, file: !1001, line: 157, type: !1407)
!6621 = !DILocation(line: 157, column: 196, scope: !6614)
!6622 = !DILocation(line: 157, column: 209, scope: !6617)
!6623 = !DILocation(line: 157, column: 202, scope: !6617)
!6624 = !DILocation(line: 157, column: 196, scope: !6617)
!6625 = !DILocation(line: 157, column: 217, scope: !6617)
!6626 = !DILocation(line: 157, column: 223, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !6614, file: !1001, discriminator: 4)
!6628 = !DILocation(line: 157, column: 231, scope: !6627)
!6629 = !DILocation(line: 157, column: 229, scope: !6627)
!6630 = !DILocation(line: 157, column: 217, scope: !6627)
!6631 = !DILocation(line: 157, column: 240, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !6633, file: !1001, discriminator: 5)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !1001, line: 157, column: 240)
!6634 = distinct !DILexicalBlock(scope: !6614, file: !1001, line: 157, column: 235)
!6635 = !DILocation(line: 157, column: 248, scope: !6632)
!6636 = !DILocation(line: 157, column: 251, scope: !6632)
!6637 = !DILocation(line: 157, column: 246, scope: !6632)
!6638 = !DILocalVariable(name: "checksort", scope: !6639, file: !1001, line: 157, type: !992)
!6639 = distinct !DILexicalBlock(scope: !6633, file: !1001, line: 157, column: 255)
!6640 = !DILocation(line: 157, column: 261, scope: !6639)
!6641 = !DILocation(line: 157, column: 261, scope: !6642)
!6642 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 6)
!6643 = !DILocalVariable(name: "right", scope: !6639, file: !1001, line: 157, type: !1407)
!6644 = !DILocation(line: 157, column: 284, scope: !6639)
!6645 = !DILocation(line: 157, column: 292, scope: !6642)
!6646 = !DILocation(line: 157, column: 295, scope: !6642)
!6647 = !DILocation(line: 157, column: 284, scope: !6642)
!6648 = !DILocalVariable(name: "left", scope: !6639, file: !1001, line: 157, type: !1407)
!6649 = !DILocation(line: 157, column: 309, scope: !6639)
!6650 = !DILocation(line: 157, column: 316, scope: !6642)
!6651 = !DILocation(line: 157, column: 321, scope: !6642)
!6652 = !DILocation(line: 157, column: 309, scope: !6642)
!6653 = !DILocalVariable(name: "mid", scope: !6639, file: !1001, line: 157, type: !1407)
!6654 = !DILocation(line: 157, column: 335, scope: !6639)
!6655 = !DILocation(line: 157, column: 341, scope: !6642)
!6656 = !DILocation(line: 157, column: 351, scope: !6642)
!6657 = !DILocation(line: 157, column: 355, scope: !6642)
!6658 = !DILocation(line: 157, column: 354, scope: !6642)
!6659 = !DILocation(line: 157, column: 361, scope: !6642)
!6660 = !DILocation(line: 157, column: 347, scope: !6642)
!6661 = !DILocation(line: 157, column: 335, scope: !6642)
!6662 = !DILocation(line: 157, column: 402, scope: !6642)
!6663 = !DILocation(line: 157, column: 409, scope: !6642)
!6664 = !DILocation(line: 157, column: 370, scope: !6642)
!6665 = !DILocation(line: 157, column: 414, scope: !6642)
!6666 = !DILocation(line: 157, column: 457, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6668, file: !1001, discriminator: 7)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !1001, line: 157, column: 424)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !1001, line: 157, column: 419)
!6670 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 370)
!6671 = !DILocation(line: 157, column: 462, scope: !6667)
!6672 = !DILocation(line: 157, column: 424, scope: !6667)
!6673 = !DILocation(line: 157, column: 467, scope: !6667)
!6674 = !DILocation(line: 157, column: 472, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !6668, file: !1001, discriminator: 8)
!6676 = distinct !{!6676, !6677}
!6677 = !DILocation(line: 157, column: 472, scope: !6668)
!6678 = !DILocalVariable(name: "SWAP_tmp", scope: !6679, file: !1001, line: 157, type: !1097)
!6679 = distinct !DILexicalBlock(scope: !6668, file: !1001, line: 157, column: 474)
!6680 = !DILocation(line: 157, column: 484, scope: !6679)
!6681 = !DILocation(line: 157, column: 495, scope: !6682)
!6682 = !DILexicalBlockFile(scope: !6679, file: !1001, discriminator: 9)
!6683 = !DILocation(line: 157, column: 494, scope: !6682)
!6684 = !DILocation(line: 157, column: 484, scope: !6682)
!6685 = !DILocation(line: 157, column: 507, scope: !6682)
!6686 = !DILocation(line: 157, column: 506, scope: !6682)
!6687 = !DILocation(line: 157, column: 501, scope: !6682)
!6688 = !DILocation(line: 157, column: 504, scope: !6682)
!6689 = !DILocation(line: 157, column: 522, scope: !6682)
!6690 = !DILocation(line: 157, column: 515, scope: !6682)
!6691 = !DILocation(line: 157, column: 520, scope: !6682)
!6692 = !DILocation(line: 157, column: 531, scope: !6682)
!6693 = !DILocation(line: 157, column: 531, scope: !6694)
!6694 = !DILexicalBlockFile(scope: !6679, file: !1001, discriminator: 10)
!6695 = !DILocation(line: 157, column: 547, scope: !6696)
!6696 = !DILexicalBlockFile(scope: !6668, file: !1001, discriminator: 11)
!6697 = distinct !{!6697, !6698}
!6698 = !DILocation(line: 157, column: 547, scope: !6668)
!6699 = !DILocalVariable(name: "SWAP_tmp", scope: !6700, file: !1001, line: 157, type: !1097)
!6700 = distinct !DILexicalBlock(scope: !6668, file: !1001, line: 157, column: 549)
!6701 = !DILocation(line: 157, column: 559, scope: !6700)
!6702 = !DILocation(line: 157, column: 570, scope: !6703)
!6703 = !DILexicalBlockFile(scope: !6700, file: !1001, discriminator: 12)
!6704 = !DILocation(line: 157, column: 569, scope: !6703)
!6705 = !DILocation(line: 157, column: 559, scope: !6703)
!6706 = !DILocation(line: 157, column: 582, scope: !6703)
!6707 = !DILocation(line: 157, column: 581, scope: !6703)
!6708 = !DILocation(line: 157, column: 576, scope: !6703)
!6709 = !DILocation(line: 157, column: 579, scope: !6703)
!6710 = !DILocation(line: 157, column: 597, scope: !6703)
!6711 = !DILocation(line: 157, column: 590, scope: !6703)
!6712 = !DILocation(line: 157, column: 595, scope: !6703)
!6713 = !DILocation(line: 157, column: 606, scope: !6703)
!6714 = !DILocation(line: 157, column: 617, scope: !6715)
!6715 = !DILexicalBlockFile(scope: !6669, file: !1001, discriminator: 13)
!6716 = !DILocation(line: 157, column: 659, scope: !6717)
!6717 = !DILexicalBlockFile(scope: !6718, file: !1001, discriminator: 14)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !1001, line: 157, column: 627)
!6719 = distinct !DILexicalBlock(scope: !6670, file: !1001, line: 157, column: 622)
!6720 = !DILocation(line: 157, column: 666, scope: !6717)
!6721 = !DILocation(line: 157, column: 627, scope: !6717)
!6722 = !DILocation(line: 157, column: 671, scope: !6717)
!6723 = !DILocation(line: 157, column: 676, scope: !6724)
!6724 = !DILexicalBlockFile(scope: !6718, file: !1001, discriminator: 15)
!6725 = distinct !{!6725, !6726}
!6726 = !DILocation(line: 157, column: 676, scope: !6718)
!6727 = !DILocalVariable(name: "SWAP_tmp", scope: !6728, file: !1001, line: 157, type: !1097)
!6728 = distinct !DILexicalBlock(scope: !6718, file: !1001, line: 157, column: 678)
!6729 = !DILocation(line: 157, column: 688, scope: !6728)
!6730 = !DILocation(line: 157, column: 699, scope: !6731)
!6731 = !DILexicalBlockFile(scope: !6728, file: !1001, discriminator: 16)
!6732 = !DILocation(line: 157, column: 698, scope: !6731)
!6733 = !DILocation(line: 157, column: 688, scope: !6731)
!6734 = !DILocation(line: 157, column: 711, scope: !6731)
!6735 = !DILocation(line: 157, column: 710, scope: !6731)
!6736 = !DILocation(line: 157, column: 705, scope: !6731)
!6737 = !DILocation(line: 157, column: 708, scope: !6731)
!6738 = !DILocation(line: 157, column: 726, scope: !6731)
!6739 = !DILocation(line: 157, column: 719, scope: !6731)
!6740 = !DILocation(line: 157, column: 724, scope: !6731)
!6741 = !DILocation(line: 157, column: 735, scope: !6731)
!6742 = !DILocation(line: 157, column: 735, scope: !6743)
!6743 = !DILexicalBlockFile(scope: !6728, file: !1001, discriminator: 17)
!6744 = !DILocation(line: 157, column: 760, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !6718, file: !1001, discriminator: 18)
!6746 = !DILocation(line: 157, column: 802, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !6748, file: !1001, discriminator: 19)
!6748 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 770)
!6749 = !DILocation(line: 157, column: 807, scope: !6747)
!6750 = !DILocation(line: 157, column: 770, scope: !6747)
!6751 = !DILocation(line: 157, column: 812, scope: !6747)
!6752 = !DILocation(line: 157, column: 818, scope: !6753)
!6753 = !DILexicalBlockFile(scope: !6754, file: !1001, discriminator: 20)
!6754 = distinct !DILexicalBlock(scope: !6748, file: !1001, line: 157, column: 816)
!6755 = distinct !{!6755, !6756}
!6756 = !DILocation(line: 157, column: 818, scope: !6754)
!6757 = !DILocalVariable(name: "SWAP_tmp", scope: !6758, file: !1001, line: 157, type: !1097)
!6758 = distinct !DILexicalBlock(scope: !6754, file: !1001, line: 157, column: 820)
!6759 = !DILocation(line: 157, column: 830, scope: !6758)
!6760 = !DILocation(line: 157, column: 841, scope: !6761)
!6761 = !DILexicalBlockFile(scope: !6758, file: !1001, discriminator: 21)
!6762 = !DILocation(line: 157, column: 840, scope: !6761)
!6763 = !DILocation(line: 157, column: 830, scope: !6761)
!6764 = !DILocation(line: 157, column: 853, scope: !6761)
!6765 = !DILocation(line: 157, column: 852, scope: !6761)
!6766 = !DILocation(line: 157, column: 847, scope: !6761)
!6767 = !DILocation(line: 157, column: 850, scope: !6761)
!6768 = !DILocation(line: 157, column: 864, scope: !6761)
!6769 = !DILocation(line: 157, column: 859, scope: !6761)
!6770 = !DILocation(line: 157, column: 862, scope: !6761)
!6771 = !DILocation(line: 157, column: 873, scope: !6761)
!6772 = !DILocation(line: 157, column: 893, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !6754, file: !1001, discriminator: 22)
!6774 = !DILocation(line: 157, column: 897, scope: !6773)
!6775 = !DILocation(line: 157, column: 902, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !6777, file: !1001, discriminator: 23)
!6777 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 902)
!6778 = !DILocation(line: 157, column: 911, scope: !6776)
!6779 = !DILocation(line: 157, column: 914, scope: !6776)
!6780 = !DILocation(line: 157, column: 908, scope: !6776)
!6781 = !DILocation(line: 157, column: 918, scope: !6782)
!6782 = !DILexicalBlockFile(scope: !6777, file: !1001, discriminator: 24)
!6783 = !DILocation(line: 157, column: 925, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 25)
!6785 = distinct !{!6785, !6786}
!6786 = !DILocation(line: 157, column: 925, scope: !6639)
!6787 = !DILocalVariable(name: "SWAP_tmp", scope: !6788, file: !1001, line: 157, type: !1097)
!6788 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 927)
!6789 = !DILocation(line: 157, column: 937, scope: !6788)
!6790 = !DILocation(line: 157, column: 948, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6788, file: !1001, discriminator: 26)
!6792 = !DILocation(line: 157, column: 947, scope: !6791)
!6793 = !DILocation(line: 157, column: 937, scope: !6791)
!6794 = !DILocation(line: 157, column: 959, scope: !6791)
!6795 = !DILocation(line: 157, column: 954, scope: !6791)
!6796 = !DILocation(line: 157, column: 957, scope: !6791)
!6797 = !DILocation(line: 157, column: 977, scope: !6791)
!6798 = !DILocation(line: 157, column: 968, scope: !6791)
!6799 = !DILocation(line: 157, column: 975, scope: !6791)
!6800 = !DILocation(line: 157, column: 986, scope: !6791)
!6801 = !DILocation(line: 157, column: 997, scope: !6802)
!6802 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 27)
!6803 = !DILocation(line: 157, column: 1003, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 28)
!6805 = !DILocation(line: 157, column: 1011, scope: !6804)
!6806 = !DILocation(line: 157, column: 1008, scope: !6804)
!6807 = !DILocation(line: 157, column: 997, scope: !6804)
!6808 = !DILocation(line: 157, column: 1019, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 29)
!6810 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 1017)
!6811 = !DILocation(line: 157, column: 1025, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 30)
!6813 = !DILocation(line: 157, column: 1031, scope: !6812)
!6814 = !DILocation(line: 157, column: 1029, scope: !6812)
!6815 = !DILocation(line: 157, column: 1037, scope: !6812)
!6816 = !DILocation(line: 157, column: 1072, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 31)
!6818 = !DILocation(line: 157, column: 1078, scope: !6817)
!6819 = !DILocation(line: 157, column: 1081, scope: !6817)
!6820 = !DILocation(line: 157, column: 1040, scope: !6817)
!6821 = !DILocation(line: 157, column: 1085, scope: !6817)
!6822 = !DILocation(line: 157, column: 1019, scope: !6823)
!6823 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 32)
!6824 = !DILocation(line: 157, column: 1094, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 33)
!6826 = !DILocation(line: 157, column: 1019, scope: !6825)
!6827 = distinct !{!6827, !6828}
!6828 = !DILocation(line: 157, column: 1019, scope: !6810)
!6829 = !DILocation(line: 157, column: 1098, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 34)
!6831 = !DILocation(line: 157, column: 1104, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 35)
!6833 = !DILocation(line: 157, column: 1110, scope: !6832)
!6834 = !DILocation(line: 157, column: 1108, scope: !6832)
!6835 = !DILocation(line: 157, column: 1116, scope: !6832)
!6836 = !DILocation(line: 157, column: 1151, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 36)
!6838 = !DILocation(line: 157, column: 1158, scope: !6837)
!6839 = !DILocation(line: 157, column: 1161, scope: !6837)
!6840 = !DILocation(line: 157, column: 1119, scope: !6837)
!6841 = !DILocation(line: 157, column: 1165, scope: !6837)
!6842 = !DILocation(line: 157, column: 1098, scope: !6843)
!6843 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 37)
!6844 = !DILocation(line: 157, column: 1175, scope: !6845)
!6845 = !DILexicalBlockFile(scope: !6810, file: !1001, discriminator: 38)
!6846 = !DILocation(line: 157, column: 1098, scope: !6845)
!6847 = distinct !{!6847, !6848}
!6848 = !DILocation(line: 157, column: 1098, scope: !6810)
!6849 = !DILocation(line: 157, column: 1182, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6851, file: !1001, discriminator: 39)
!6851 = distinct !DILexicalBlock(scope: !6810, file: !1001, line: 157, column: 1182)
!6852 = !DILocation(line: 157, column: 1190, scope: !6850)
!6853 = !DILocation(line: 157, column: 1187, scope: !6850)
!6854 = !DILocation(line: 157, column: 1198, scope: !6855)
!6855 = !DILexicalBlockFile(scope: !6856, file: !1001, discriminator: 40)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !1001, line: 157, column: 1196)
!6857 = distinct !{!6857, !6858}
!6858 = !DILocation(line: 157, column: 1198, scope: !6856)
!6859 = !DILocalVariable(name: "SWAP_tmp", scope: !6860, file: !1001, line: 157, type: !1097)
!6860 = distinct !DILexicalBlock(scope: !6856, file: !1001, line: 157, column: 1200)
!6861 = !DILocation(line: 157, column: 1210, scope: !6860)
!6862 = !DILocation(line: 157, column: 1221, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !6860, file: !1001, discriminator: 41)
!6864 = !DILocation(line: 157, column: 1220, scope: !6863)
!6865 = !DILocation(line: 157, column: 1210, scope: !6863)
!6866 = !DILocation(line: 157, column: 1237, scope: !6863)
!6867 = !DILocation(line: 157, column: 1236, scope: !6863)
!6868 = !DILocation(line: 157, column: 1229, scope: !6863)
!6869 = !DILocation(line: 157, column: 1234, scope: !6863)
!6870 = !DILocation(line: 157, column: 1250, scope: !6863)
!6871 = !DILocation(line: 157, column: 1244, scope: !6863)
!6872 = !DILocation(line: 157, column: 1248, scope: !6863)
!6873 = !DILocation(line: 157, column: 1259, scope: !6863)
!6874 = !DILocation(line: 157, column: 1274, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6856, file: !1001, discriminator: 42)
!6876 = !DILocation(line: 157, column: 1283, scope: !6875)
!6877 = !DILocation(line: 157, column: 1287, scope: !6875)
!6878 = !DILocation(line: 157, column: 997, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 43)
!6880 = distinct !{!6880, !6881}
!6881 = !DILocation(line: 157, column: 997, scope: !6639)
!6882 = !DILocation(line: 157, column: 1291, scope: !6883)
!6883 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 44)
!6884 = distinct !{!6884, !6885}
!6885 = !DILocation(line: 157, column: 1291, scope: !6639)
!6886 = !DILocalVariable(name: "SWAP_tmp", scope: !6887, file: !1001, line: 157, type: !1097)
!6887 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 1293)
!6888 = !DILocation(line: 157, column: 1303, scope: !6887)
!6889 = !DILocation(line: 157, column: 1314, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6887, file: !1001, discriminator: 45)
!6891 = !DILocation(line: 157, column: 1313, scope: !6890)
!6892 = !DILocation(line: 157, column: 1303, scope: !6890)
!6893 = !DILocation(line: 157, column: 1327, scope: !6890)
!6894 = !DILocation(line: 157, column: 1321, scope: !6890)
!6895 = !DILocation(line: 157, column: 1325, scope: !6890)
!6896 = !DILocation(line: 157, column: 1345, scope: !6890)
!6897 = !DILocation(line: 157, column: 1336, scope: !6890)
!6898 = !DILocation(line: 157, column: 1343, scope: !6890)
!6899 = !DILocation(line: 157, column: 1354, scope: !6890)
!6900 = !DILocation(line: 157, column: 1368, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !6902, file: !1001, discriminator: 46)
!6902 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 1368)
!6903 = !DILocation(line: 157, column: 1378, scope: !6901)
!6904 = !DILocation(line: 157, column: 1382, scope: !6905)
!6905 = !DILexicalBlockFile(scope: !6902, file: !1001, discriminator: 47)
!6906 = !DILocation(line: 157, column: 1389, scope: !6905)
!6907 = !DILocation(line: 157, column: 1393, scope: !6905)
!6908 = !DILocation(line: 157, column: 1386, scope: !6905)
!6909 = !DILocation(line: 157, column: 1396, scope: !6905)
!6910 = !DILocation(line: 157, column: 1399, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !6902, file: !1001, discriminator: 48)
!6912 = !DILocation(line: 157, column: 1406, scope: !6911)
!6913 = !DILocation(line: 157, column: 1403, scope: !6911)
!6914 = !DILocation(line: 157, column: 1368, scope: !6911)
!6915 = !DILocation(line: 157, column: 1419, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 49)
!6917 = distinct !DILexicalBlock(scope: !6902, file: !1001, line: 157, column: 1412)
!6918 = !DILocation(line: 157, column: 1417, scope: !6916)
!6919 = !DILocation(line: 157, column: 1426, scope: !6916)
!6920 = !DILocation(line: 157, column: 1432, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 50)
!6922 = !DILocation(line: 157, column: 1436, scope: !6921)
!6923 = !DILocation(line: 157, column: 1435, scope: !6921)
!6924 = !DILocation(line: 157, column: 1440, scope: !6921)
!6925 = !DILocation(line: 157, column: 1475, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 51)
!6927 = !DILocation(line: 157, column: 1480, scope: !6926)
!6928 = !DILocation(line: 157, column: 1483, scope: !6926)
!6929 = !DILocation(line: 157, column: 1443, scope: !6926)
!6930 = !DILocation(line: 157, column: 1487, scope: !6926)
!6931 = !DILocation(line: 157, column: 1426, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 52)
!6933 = !DILocation(line: 157, column: 1496, scope: !6934)
!6934 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 53)
!6935 = !DILocation(line: 157, column: 1426, scope: !6934)
!6936 = distinct !{!6936, !6937}
!6937 = !DILocation(line: 157, column: 1426, scope: !6917)
!6938 = !DILocation(line: 157, column: 1503, scope: !6939)
!6939 = !DILexicalBlockFile(scope: !6940, file: !1001, discriminator: 54)
!6940 = distinct !DILexicalBlock(scope: !6917, file: !1001, line: 157, column: 1503)
!6941 = !DILocation(line: 157, column: 1508, scope: !6939)
!6942 = !DILocation(line: 157, column: 1506, scope: !6939)
!6943 = !DILocation(line: 157, column: 1513, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6940, file: !1001, discriminator: 55)
!6945 = !DILocation(line: 157, column: 1520, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6917, file: !1001, discriminator: 56)
!6947 = !DILocation(line: 157, column: 1525, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6949, file: !1001, discriminator: 57)
!6949 = distinct !DILexicalBlock(scope: !6639, file: !1001, line: 157, column: 1525)
!6950 = !DILocation(line: 157, column: 1529, scope: !6948)
!6951 = !DILocation(line: 157, column: 1528, scope: !6948)
!6952 = !DILocation(line: 157, column: 1536, scope: !6948)
!6953 = !DILocation(line: 157, column: 1541, scope: !6948)
!6954 = !DILocation(line: 157, column: 1540, scope: !6948)
!6955 = !DILocation(line: 157, column: 1534, scope: !6948)
!6956 = !DILocation(line: 157, column: 1564, scope: !6957)
!6957 = !DILexicalBlockFile(scope: !6958, file: !1001, discriminator: 58)
!6958 = distinct !DILexicalBlock(scope: !6949, file: !1001, line: 157, column: 1547)
!6959 = !DILocation(line: 157, column: 1555, scope: !6957)
!6960 = !DILocation(line: 157, column: 1549, scope: !6957)
!6961 = !DILocation(line: 157, column: 1562, scope: !6957)
!6962 = !DILocation(line: 157, column: 1587, scope: !6957)
!6963 = !DILocation(line: 157, column: 1579, scope: !6957)
!6964 = !DILocation(line: 157, column: 1571, scope: !6957)
!6965 = !DILocation(line: 157, column: 1585, scope: !6957)
!6966 = !DILocation(line: 157, column: 1602, scope: !6957)
!6967 = !DILocation(line: 157, column: 1606, scope: !6957)
!6968 = !DILocation(line: 157, column: 1600, scope: !6957)
!6969 = !DILocation(line: 157, column: 1610, scope: !6957)
!6970 = !DILocation(line: 157, column: 1632, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6972, file: !1001, discriminator: 59)
!6972 = distinct !DILexicalBlock(scope: !6949, file: !1001, line: 157, column: 1615)
!6973 = !DILocation(line: 157, column: 1636, scope: !6971)
!6974 = !DILocation(line: 157, column: 1623, scope: !6971)
!6975 = !DILocation(line: 157, column: 1617, scope: !6971)
!6976 = !DILocation(line: 157, column: 1630, scope: !6971)
!6977 = !DILocation(line: 157, column: 1656, scope: !6971)
!6978 = !DILocation(line: 157, column: 1648, scope: !6971)
!6979 = !DILocation(line: 157, column: 1640, scope: !6971)
!6980 = !DILocation(line: 157, column: 1654, scope: !6971)
!6981 = !DILocation(line: 157, column: 1667, scope: !6971)
!6982 = !DILocation(line: 157, column: 1665, scope: !6971)
!6983 = !DILocation(line: 157, column: 1676, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !6639, file: !1001, discriminator: 60)
!6985 = !DILocation(line: 157, column: 1718, scope: !6986)
!6986 = !DILexicalBlockFile(scope: !6987, file: !1001, discriminator: 61)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !1001, line: 157, column: 1686)
!6988 = distinct !DILexicalBlock(scope: !6633, file: !1001, line: 157, column: 1681)
!6989 = !DILocation(line: 157, column: 1725, scope: !6986)
!6990 = !DILocation(line: 157, column: 1686, scope: !6986)
!6991 = !DILocation(line: 157, column: 1730, scope: !6986)
!6992 = !DILocation(line: 157, column: 1735, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !6987, file: !1001, discriminator: 62)
!6994 = distinct !{!6994, !6995}
!6995 = !DILocation(line: 157, column: 1735, scope: !6987)
!6996 = !DILocalVariable(name: "SWAP_tmp", scope: !6997, file: !1001, line: 157, type: !1097)
!6997 = distinct !DILexicalBlock(scope: !6987, file: !1001, line: 157, column: 1737)
!6998 = !DILocation(line: 157, column: 1747, scope: !6997)
!6999 = !DILocation(line: 157, column: 1758, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !6997, file: !1001, discriminator: 63)
!7001 = !DILocation(line: 157, column: 1757, scope: !7000)
!7002 = !DILocation(line: 157, column: 1747, scope: !7000)
!7003 = !DILocation(line: 157, column: 1770, scope: !7000)
!7004 = !DILocation(line: 157, column: 1769, scope: !7000)
!7005 = !DILocation(line: 157, column: 1764, scope: !7000)
!7006 = !DILocation(line: 157, column: 1767, scope: !7000)
!7007 = !DILocation(line: 157, column: 1785, scope: !7000)
!7008 = !DILocation(line: 157, column: 1778, scope: !7000)
!7009 = !DILocation(line: 157, column: 1783, scope: !7000)
!7010 = !DILocation(line: 157, column: 1794, scope: !7000)
!7011 = !DILocation(line: 157, column: 1794, scope: !7012)
!7012 = !DILexicalBlockFile(scope: !6997, file: !1001, discriminator: 64)
!7013 = !DILocation(line: 157, column: 1805, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !6988, file: !1001, discriminator: 65)
!7015 = !DILocation(line: 157, column: 217, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !6614, file: !1001, discriminator: 66)
!7017 = distinct !{!7017, !7018}
!7018 = !DILocation(line: 157, column: 217, scope: !6614)
!7019 = !DILocation(line: 157, column: 142, scope: !7020)
!7020 = !DILexicalBlockFile(scope: !6586, file: !1001, discriminator: 67)
!7021 = distinct !{!7021, !7022}
!7022 = !DILocation(line: 157, column: 142, scope: !6586)
!7023 = !DILocation(line: 157, column: 1817, scope: !7024)
!7024 = !DILexicalBlockFile(scope: !6586, file: !1001, discriminator: 68)
!7025 = !DILocation(line: 161, column: 22, scope: !6506)
!7026 = !DILocation(line: 161, column: 27, scope: !6506)
!7027 = !DILocation(line: 161, column: 34, scope: !6506)
!7028 = !DILocation(line: 161, column: 39, scope: !6506)
!7029 = !DILocation(line: 161, column: 32, scope: !6506)
!7030 = !DILocation(line: 161, column: 51, scope: !6506)
!7031 = !DILocation(line: 161, column: 9, scope: !6506)
!7032 = !DILocation(line: 161, column: 14, scope: !6506)
!7033 = !DILocation(line: 161, column: 20, scope: !6506)
!7034 = !DILocation(line: 162, column: 9, scope: !6506)
!7035 = !DILocation(line: 162, column: 16, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !6506, file: !1001, discriminator: 1)
!7037 = !DILocation(line: 162, column: 22, scope: !7036)
!7038 = !DILocation(line: 162, column: 27, scope: !7036)
!7039 = !DILocation(line: 162, column: 40, scope: !7036)
!7040 = !DILocation(line: 162, column: 45, scope: !7036)
!7041 = !DILocation(line: 162, column: 38, scope: !7036)
!7042 = !DILocation(line: 162, column: 20, scope: !7036)
!7043 = !DILocation(line: 162, column: 9, scope: !7036)
!7044 = !DILocation(line: 166, column: 18, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !1001, line: 166, column: 17)
!7046 = distinct !DILexicalBlock(scope: !6506, file: !1001, line: 162, column: 52)
!7047 = !DILocation(line: 166, column: 17, scope: !7045)
!7048 = !DILocation(line: 166, column: 25, scope: !7045)
!7049 = !DILocation(line: 166, column: 24, scope: !7045)
!7050 = !DILocation(line: 166, column: 31, scope: !7045)
!7051 = !DILocation(line: 166, column: 29, scope: !7045)
!7052 = !DILocation(line: 166, column: 21, scope: !7045)
!7053 = !DILocation(line: 166, column: 17, scope: !7046)
!7054 = !DILocation(line: 168, column: 29, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7045, file: !1001, line: 166, column: 60)
!7056 = !DILocation(line: 168, column: 26, scope: !7055)
!7057 = !DILocation(line: 168, column: 18, scope: !7055)
!7058 = !DILocation(line: 168, column: 24, scope: !7055)
!7059 = !DILocation(line: 169, column: 13, scope: !7055)
!7060 = !DILocation(line: 169, column: 25, scope: !7061)
!7061 = !DILexicalBlockFile(scope: !7062, file: !1001, discriminator: 1)
!7062 = distinct !DILexicalBlock(scope: !7045, file: !1001, line: 169, column: 24)
!7063 = !DILocation(line: 169, column: 24, scope: !7061)
!7064 = !DILocation(line: 169, column: 32, scope: !7061)
!7065 = !DILocation(line: 169, column: 31, scope: !7061)
!7066 = !DILocation(line: 169, column: 28, scope: !7061)
!7067 = !DILocation(line: 169, column: 36, scope: !7061)
!7068 = !DILocation(line: 170, column: 33, scope: !7062)
!7069 = !DILocation(line: 170, column: 48, scope: !7062)
!7070 = !DILocation(line: 170, column: 53, scope: !7062)
!7071 = !DILocation(line: 170, column: 67, scope: !7062)
!7072 = !DILocation(line: 170, column: 66, scope: !7062)
!7073 = !DILocation(line: 170, column: 18, scope: !7062)
!7074 = !DILocation(line: 169, column: 24, scope: !7075)
!7075 = !DILexicalBlockFile(scope: !7045, file: !1001, discriminator: 2)
!7076 = !DILocation(line: 171, column: 19, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7062, file: !1001, line: 170, column: 72)
!7078 = !DILocation(line: 172, column: 17, scope: !7077)
!7079 = !DILocation(line: 172, column: 22, scope: !7077)
!7080 = !DILocation(line: 172, column: 27, scope: !7077)
!7081 = !DILocation(line: 173, column: 13, scope: !7077)
!7082 = !DILocation(line: 173, column: 40, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !7084, file: !1001, discriminator: 1)
!7084 = distinct !DILexicalBlock(scope: !7062, file: !1001, line: 173, column: 24)
!7085 = !DILocation(line: 173, column: 55, scope: !7083)
!7086 = !DILocation(line: 173, column: 60, scope: !7083)
!7087 = !DILocation(line: 173, column: 74, scope: !7083)
!7088 = !DILocation(line: 173, column: 73, scope: !7083)
!7089 = !DILocation(line: 173, column: 25, scope: !7083)
!7090 = !DILocation(line: 173, column: 24, scope: !7083)
!7091 = !DILocation(line: 174, column: 27, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7084, file: !1001, line: 173, column: 80)
!7093 = !DILocation(line: 174, column: 24, scope: !7092)
!7094 = !DILocation(line: 174, column: 18, scope: !7092)
!7095 = !DILocation(line: 174, column: 22, scope: !7092)
!7096 = !DILocation(line: 175, column: 17, scope: !7092)
!7097 = !DILocation(line: 175, column: 22, scope: !7092)
!7098 = !DILocation(line: 175, column: 27, scope: !7092)
!7099 = !DILocation(line: 176, column: 13, scope: !7092)
!7100 = !DILocation(line: 177, column: 29, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7084, file: !1001, line: 176, column: 20)
!7102 = !DILocation(line: 177, column: 26, scope: !7101)
!7103 = !DILocation(line: 177, column: 18, scope: !7101)
!7104 = !DILocation(line: 177, column: 24, scope: !7101)
!7105 = !DILocation(line: 162, column: 9, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !6506, file: !1001, discriminator: 2)
!7107 = distinct !{!7107, !7034}
!7108 = !DILocation(line: 180, column: 5, scope: !6506)
!7109 = !DILocation(line: 181, column: 30, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !6501, file: !1001, line: 180, column: 12)
!7111 = !DILocation(line: 181, column: 35, scope: !7110)
!7112 = !DILocation(line: 181, column: 9, scope: !7110)
!7113 = !DILocation(line: 181, column: 14, scope: !7110)
!7114 = !DILocation(line: 181, column: 28, scope: !7110)
!7115 = !DILocation(line: 182, column: 46, scope: !7110)
!7116 = !DILocation(line: 182, column: 51, scope: !7110)
!7117 = !DILocation(line: 182, column: 30, scope: !7110)
!7118 = !DILocation(line: 182, column: 35, scope: !7110)
!7119 = !DILocation(line: 182, column: 9, scope: !7110)
!7120 = !DILocation(line: 182, column: 14, scope: !7110)
!7121 = !DILocation(line: 182, column: 28, scope: !7110)
!7122 = !DILocation(line: 183, column: 9, scope: !7110)
!7123 = !DILocation(line: 183, column: 14, scope: !7110)
!7124 = !DILocation(line: 183, column: 20, scope: !7110)
!7125 = !DILocation(line: 185, column: 1, scope: !1120)
!7126 = distinct !DISubprogram(name: "NEG_USR32", scope: !7127, file: !7127, line: 124, type: !7128, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!7127 = !DIFile(filename: "./libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!983, !983, !1259}
!7130 = !DILocalVariable(name: "a", arg: 1, scope: !7126, file: !7127, line: 124, type: !983)
!7131 = !DILocation(line: 124, column: 43, scope: !7126)
!7132 = !DILocalVariable(name: "s", arg: 2, scope: !7126, file: !7127, line: 124, type: !1259)
!7133 = !DILocation(line: 124, column: 53, scope: !7126)
!7134 = !DILocation(line: 125, column: 5, scope: !7126)
!7135 = !DILocation(line: 127, column: 29, scope: !7126)
!7136 = !DILocation(line: 127, column: 28, scope: !7126)
!7137 = !DILocation(line: 127, column: 18, scope: !7126)
!7138 = !{i32 110787, i32 110801}
!7139 = !DILocation(line: 129, column: 12, scope: !7126)
!7140 = !DILocation(line: 129, column: 5, scope: !7126)
!7141 = distinct !DISubprogram(name: "qsort_comparison_function_int16", scope: !1001, file: !1001, line: 121, type: !7142, isLocal: true, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!992, !1010, !1010}
!7144 = !DILocalVariable(name: "a", arg: 1, scope: !7141, file: !1001, line: 121, type: !1010)
!7145 = !DILocation(line: 121, column: 56, scope: !7141)
!7146 = !DILocalVariable(name: "b", arg: 2, scope: !7141, file: !1001, line: 121, type: !1010)
!7147 = !DILocation(line: 121, column: 71, scope: !7141)
!7148 = !DILocation(line: 123, column: 30, scope: !7141)
!7149 = !DILocation(line: 123, column: 13, scope: !7141)
!7150 = !DILocation(line: 123, column: 12, scope: !7141)
!7151 = !DILocation(line: 123, column: 52, scope: !7141)
!7152 = !DILocation(line: 123, column: 35, scope: !7141)
!7153 = !DILocation(line: 123, column: 34, scope: !7141)
!7154 = !DILocation(line: 123, column: 32, scope: !7141)
!7155 = !DILocation(line: 123, column: 5, scope: !7141)
!7156 = distinct !DISubprogram(name: "in_table_int16", scope: !1001, file: !1001, line: 126, type: !7157, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!992, !988, !992, !990}
!7159 = !DILocalVariable(name: "table", arg: 1, scope: !7156, file: !1001, line: 126, type: !988)
!7160 = !DILocation(line: 126, column: 49, scope: !7156)
!7161 = !DILocalVariable(name: "last_el", arg: 2, scope: !7156, file: !1001, line: 126, type: !992)
!7162 = !DILocation(line: 126, column: 60, scope: !7156)
!7163 = !DILocalVariable(name: "needle", arg: 3, scope: !7156, file: !1001, line: 126, type: !990)
!7164 = !DILocation(line: 126, column: 77, scope: !7156)
!7165 = !DILocalVariable(name: "i", scope: !7156, file: !1001, line: 128, type: !992)
!7166 = !DILocation(line: 128, column: 9, scope: !7156)
!7167 = !DILocation(line: 129, column: 12, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7156, file: !1001, line: 129, column: 5)
!7169 = !DILocation(line: 129, column: 10, scope: !7168)
!7170 = !DILocation(line: 129, column: 17, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7172, file: !1001, discriminator: 1)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !1001, line: 129, column: 5)
!7173 = !DILocation(line: 129, column: 22, scope: !7171)
!7174 = !DILocation(line: 129, column: 19, scope: !7171)
!7175 = !DILocation(line: 129, column: 5, scope: !7171)
!7176 = !DILocation(line: 130, column: 19, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7172, file: !1001, line: 130, column: 13)
!7178 = !DILocation(line: 130, column: 13, scope: !7177)
!7179 = !DILocation(line: 130, column: 25, scope: !7177)
!7180 = !DILocation(line: 130, column: 22, scope: !7177)
!7181 = !DILocation(line: 130, column: 13, scope: !7172)
!7182 = !DILocation(line: 131, column: 13, scope: !7177)
!7183 = !DILocation(line: 130, column: 25, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7177, file: !1001, discriminator: 1)
!7185 = !DILocation(line: 129, column: 32, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7172, file: !1001, discriminator: 2)
!7187 = !DILocation(line: 129, column: 5, scope: !7186)
!7188 = distinct !{!7188, !7189}
!7189 = !DILocation(line: 129, column: 5, scope: !7156)
!7190 = !DILocation(line: 132, column: 5, scope: !7156)
!7191 = !DILocation(line: 133, column: 1, scope: !7156)
!7192 = distinct !DISubprogram(name: "sbr_make_f_master", scope: !1001, file: !1001, line: 267, type: !7193, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!992, !1504, !1123, !7195}
!7195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!7196 = !DILocalVariable(name: "ac", arg: 1, scope: !7192, file: !1001, line: 267, type: !1504)
!7197 = !DILocation(line: 267, column: 42, scope: !7192)
!7198 = !DILocalVariable(name: "sbr", arg: 2, scope: !7192, file: !1001, line: 267, type: !1123)
!7199 = !DILocation(line: 267, column: 71, scope: !7192)
!7200 = !DILocalVariable(name: "spectrum", arg: 3, scope: !7192, file: !1001, line: 268, type: !7195)
!7201 = !DILocation(line: 268, column: 50, scope: !7192)
!7202 = !DILocalVariable(name: "temp", scope: !7192, file: !1001, line: 270, type: !985)
!7203 = !DILocation(line: 270, column: 18, scope: !7192)
!7204 = !DILocalVariable(name: "max_qmf_subbands", scope: !7192, file: !1001, line: 270, type: !985)
!7205 = !DILocation(line: 270, column: 24, scope: !7192)
!7206 = !DILocalVariable(name: "start_min", scope: !7192, file: !1001, line: 271, type: !985)
!7207 = !DILocation(line: 271, column: 18, scope: !7192)
!7208 = !DILocalVariable(name: "stop_min", scope: !7192, file: !1001, line: 271, type: !985)
!7209 = !DILocation(line: 271, column: 29, scope: !7192)
!7210 = !DILocalVariable(name: "k", scope: !7192, file: !1001, line: 272, type: !992)
!7211 = !DILocation(line: 272, column: 9, scope: !7192)
!7212 = !DILocalVariable(name: "sbr_offset_ptr", scope: !7192, file: !1001, line: 273, type: !7213)
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64, align: 64)
!7214 = !DILocation(line: 273, column: 19, scope: !7192)
!7215 = !DILocalVariable(name: "stop_dk", scope: !7192, file: !1001, line: 274, type: !7216)
!7216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 208, align: 16, elements: !7217)
!7217 = !{!7218}
!7218 = !DISubrange(count: 13)
!7219 = !DILocation(line: 274, column: 13, scope: !7192)
!7220 = !DILocation(line: 276, column: 13, scope: !7192)
!7221 = !DILocation(line: 276, column: 18, scope: !7192)
!7222 = !DILocation(line: 276, column: 5, scope: !7192)
!7223 = !DILocation(line: 278, column: 24, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 276, column: 31)
!7225 = !DILocation(line: 279, column: 9, scope: !7224)
!7226 = !DILocation(line: 281, column: 24, scope: !7224)
!7227 = !DILocation(line: 282, column: 9, scope: !7224)
!7228 = !DILocation(line: 284, column: 24, scope: !7224)
!7229 = !DILocation(line: 285, column: 9, scope: !7224)
!7230 = !DILocation(line: 287, column: 24, scope: !7224)
!7231 = !DILocation(line: 288, column: 9, scope: !7224)
!7232 = !DILocation(line: 290, column: 24, scope: !7224)
!7233 = !DILocation(line: 291, column: 9, scope: !7224)
!7234 = !DILocation(line: 293, column: 24, scope: !7224)
!7235 = !DILocation(line: 294, column: 9, scope: !7224)
!7236 = !DILocation(line: 296, column: 16, scope: !7224)
!7237 = !DILocation(line: 296, column: 20, scope: !7224)
!7238 = !DILocation(line: 297, column: 57, scope: !7224)
!7239 = !DILocation(line: 297, column: 62, scope: !7224)
!7240 = !DILocation(line: 296, column: 9, scope: !7224)
!7241 = !DILocation(line: 298, column: 9, scope: !7224)
!7242 = !DILocation(line: 301, column: 9, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 301, column: 9)
!7244 = !DILocation(line: 301, column: 14, scope: !7243)
!7245 = !DILocation(line: 301, column: 26, scope: !7243)
!7246 = !DILocation(line: 301, column: 9, scope: !7192)
!7247 = !DILocation(line: 302, column: 14, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !1001, line: 301, column: 35)
!7249 = !DILocation(line: 303, column: 5, scope: !7248)
!7250 = !DILocation(line: 303, column: 16, scope: !7251)
!7251 = !DILexicalBlockFile(scope: !7252, file: !1001, discriminator: 1)
!7252 = distinct !DILexicalBlock(scope: !7243, file: !1001, line: 303, column: 16)
!7253 = !DILocation(line: 303, column: 21, scope: !7251)
!7254 = !DILocation(line: 303, column: 33, scope: !7251)
!7255 = !DILocation(line: 304, column: 14, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7252, file: !1001, line: 303, column: 42)
!7257 = !DILocation(line: 305, column: 5, scope: !7256)
!7258 = !DILocation(line: 306, column: 14, scope: !7252)
!7259 = !DILocation(line: 308, column: 19, scope: !7192)
!7260 = !DILocation(line: 308, column: 24, scope: !7192)
!7261 = !DILocation(line: 308, column: 33, scope: !7192)
!7262 = !DILocation(line: 308, column: 38, scope: !7192)
!7263 = !DILocation(line: 308, column: 50, scope: !7192)
!7264 = !DILocation(line: 308, column: 30, scope: !7192)
!7265 = !DILocation(line: 308, column: 59, scope: !7192)
!7266 = !DILocation(line: 308, column: 64, scope: !7192)
!7267 = !DILocation(line: 308, column: 57, scope: !7192)
!7268 = !DILocation(line: 308, column: 15, scope: !7192)
!7269 = !DILocation(line: 309, column: 18, scope: !7192)
!7270 = !DILocation(line: 309, column: 23, scope: !7192)
!7271 = !DILocation(line: 309, column: 32, scope: !7192)
!7272 = !DILocation(line: 309, column: 37, scope: !7192)
!7273 = !DILocation(line: 309, column: 49, scope: !7192)
!7274 = !DILocation(line: 309, column: 29, scope: !7192)
!7275 = !DILocation(line: 309, column: 58, scope: !7192)
!7276 = !DILocation(line: 309, column: 63, scope: !7192)
!7277 = !DILocation(line: 309, column: 56, scope: !7192)
!7278 = !DILocation(line: 309, column: 14, scope: !7192)
!7279 = !DILocation(line: 311, column: 17, scope: !7192)
!7280 = !DILocation(line: 311, column: 44, scope: !7192)
!7281 = !DILocation(line: 311, column: 54, scope: !7192)
!7282 = !DILocation(line: 311, column: 29, scope: !7192)
!7283 = !DILocation(line: 311, column: 27, scope: !7192)
!7284 = !DILocation(line: 311, column: 5, scope: !7192)
!7285 = !DILocation(line: 311, column: 10, scope: !7192)
!7286 = !DILocation(line: 311, column: 15, scope: !7192)
!7287 = !DILocation(line: 313, column: 9, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 313, column: 9)
!7289 = !DILocation(line: 313, column: 19, scope: !7288)
!7290 = !DILocation(line: 313, column: 32, scope: !7288)
!7291 = !DILocation(line: 313, column: 9, scope: !7192)
!7292 = !DILocation(line: 314, column: 21, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7288, file: !1001, line: 313, column: 38)
!7294 = !DILocation(line: 314, column: 9, scope: !7293)
!7295 = !DILocation(line: 314, column: 14, scope: !7293)
!7296 = !DILocation(line: 314, column: 19, scope: !7293)
!7297 = !DILocation(line: 315, column: 20, scope: !7293)
!7298 = !DILocation(line: 315, column: 29, scope: !7293)
!7299 = !DILocation(line: 315, column: 9, scope: !7293)
!7300 = !DILocation(line: 316, column: 9, scope: !7293)
!7301 = distinct !{!7301, !7300}
!7302 = !DILocalVariable(name: "stack", scope: !7303, file: !1001, line: 316, type: !6587)
!7303 = distinct !DILexicalBlock(scope: !7293, file: !1001, line: 316, column: 12)
!7304 = !DILocation(line: 316, column: 20, scope: !7303)
!7305 = !DILocalVariable(name: "sp", scope: !7303, file: !1001, line: 316, type: !992)
!7306 = !DILocation(line: 316, column: 38, scope: !7303)
!7307 = !DILocation(line: 316, column: 38, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7303, file: !1001, discriminator: 1)
!7309 = !DILocation(line: 316, column: 59, scope: !7308)
!7310 = !DILocation(line: 316, column: 45, scope: !7308)
!7311 = !DILocation(line: 316, column: 57, scope: !7308)
!7312 = !DILocation(line: 316, column: 82, scope: !7308)
!7313 = !DILocation(line: 316, column: 91, scope: !7308)
!7314 = !DILocation(line: 316, column: 96, scope: !7308)
!7315 = !DILocation(line: 316, column: 68, scope: !7308)
!7316 = !DILocation(line: 316, column: 80, scope: !7308)
!7317 = !DILocation(line: 316, column: 100, scope: !7308)
!7318 = !DILocation(line: 316, column: 106, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !7303, file: !1001, discriminator: 2)
!7320 = !DILocation(line: 316, column: 100, scope: !7319)
!7321 = !DILocalVariable(name: "start", scope: !7322, file: !1001, line: 316, type: !7323)
!7322 = distinct !DILexicalBlock(scope: !7303, file: !1001, line: 316, column: 109)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!7324 = !DILocation(line: 316, column: 120, scope: !7322)
!7325 = !DILocation(line: 316, column: 133, scope: !7326)
!7326 = !DILexicalBlockFile(scope: !7322, file: !1001, discriminator: 3)
!7327 = !DILocation(line: 316, column: 127, scope: !7326)
!7328 = !DILocation(line: 316, column: 120, scope: !7326)
!7329 = !DILocalVariable(name: "end", scope: !7322, file: !1001, line: 316, type: !7323)
!7330 = !DILocation(line: 316, column: 152, scope: !7322)
!7331 = !DILocation(line: 316, column: 165, scope: !7326)
!7332 = !DILocation(line: 316, column: 158, scope: !7326)
!7333 = !DILocation(line: 316, column: 152, scope: !7326)
!7334 = !DILocation(line: 316, column: 173, scope: !7326)
!7335 = !DILocation(line: 316, column: 179, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !7322, file: !1001, discriminator: 4)
!7337 = !DILocation(line: 316, column: 187, scope: !7336)
!7338 = !DILocation(line: 316, column: 185, scope: !7336)
!7339 = !DILocation(line: 316, column: 173, scope: !7336)
!7340 = !DILocation(line: 316, column: 196, scope: !7341)
!7341 = !DILexicalBlockFile(scope: !7342, file: !1001, discriminator: 5)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !1001, line: 316, column: 196)
!7343 = distinct !DILexicalBlock(scope: !7322, file: !1001, line: 316, column: 191)
!7344 = !DILocation(line: 316, column: 204, scope: !7341)
!7345 = !DILocation(line: 316, column: 207, scope: !7341)
!7346 = !DILocation(line: 316, column: 202, scope: !7341)
!7347 = !DILocalVariable(name: "checksort", scope: !7348, file: !1001, line: 316, type: !992)
!7348 = distinct !DILexicalBlock(scope: !7342, file: !1001, line: 316, column: 211)
!7349 = !DILocation(line: 316, column: 217, scope: !7348)
!7350 = !DILocation(line: 316, column: 217, scope: !7351)
!7351 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 6)
!7352 = !DILocalVariable(name: "right", scope: !7348, file: !1001, line: 316, type: !7323)
!7353 = !DILocation(line: 316, column: 239, scope: !7348)
!7354 = !DILocation(line: 316, column: 247, scope: !7351)
!7355 = !DILocation(line: 316, column: 250, scope: !7351)
!7356 = !DILocation(line: 316, column: 239, scope: !7351)
!7357 = !DILocalVariable(name: "left", scope: !7348, file: !1001, line: 316, type: !7323)
!7358 = !DILocation(line: 316, column: 263, scope: !7348)
!7359 = !DILocation(line: 316, column: 270, scope: !7351)
!7360 = !DILocation(line: 316, column: 275, scope: !7351)
!7361 = !DILocation(line: 316, column: 263, scope: !7351)
!7362 = !DILocalVariable(name: "mid", scope: !7348, file: !1001, line: 316, type: !7323)
!7363 = !DILocation(line: 316, column: 288, scope: !7348)
!7364 = !DILocation(line: 316, column: 294, scope: !7351)
!7365 = !DILocation(line: 316, column: 304, scope: !7351)
!7366 = !DILocation(line: 316, column: 308, scope: !7351)
!7367 = !DILocation(line: 316, column: 307, scope: !7351)
!7368 = !DILocation(line: 316, column: 314, scope: !7351)
!7369 = !DILocation(line: 316, column: 300, scope: !7351)
!7370 = !DILocation(line: 316, column: 288, scope: !7351)
!7371 = !DILocation(line: 316, column: 355, scope: !7351)
!7372 = !DILocation(line: 316, column: 362, scope: !7351)
!7373 = !DILocation(line: 316, column: 323, scope: !7351)
!7374 = !DILocation(line: 316, column: 367, scope: !7351)
!7375 = !DILocation(line: 316, column: 410, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !7377, file: !1001, discriminator: 7)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !1001, line: 316, column: 377)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !1001, line: 316, column: 372)
!7379 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 323)
!7380 = !DILocation(line: 316, column: 415, scope: !7376)
!7381 = !DILocation(line: 316, column: 377, scope: !7376)
!7382 = !DILocation(line: 316, column: 420, scope: !7376)
!7383 = !DILocation(line: 316, column: 425, scope: !7384)
!7384 = !DILexicalBlockFile(scope: !7377, file: !1001, discriminator: 8)
!7385 = distinct !{!7385, !7386}
!7386 = !DILocation(line: 316, column: 425, scope: !7377)
!7387 = !DILocalVariable(name: "SWAP_tmp", scope: !7388, file: !1001, line: 316, type: !990)
!7388 = distinct !DILexicalBlock(scope: !7377, file: !1001, line: 316, column: 427)
!7389 = !DILocation(line: 316, column: 436, scope: !7388)
!7390 = !DILocation(line: 316, column: 447, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !7388, file: !1001, discriminator: 9)
!7392 = !DILocation(line: 316, column: 446, scope: !7391)
!7393 = !DILocation(line: 316, column: 436, scope: !7391)
!7394 = !DILocation(line: 316, column: 459, scope: !7391)
!7395 = !DILocation(line: 316, column: 458, scope: !7391)
!7396 = !DILocation(line: 316, column: 453, scope: !7391)
!7397 = !DILocation(line: 316, column: 456, scope: !7391)
!7398 = !DILocation(line: 316, column: 474, scope: !7391)
!7399 = !DILocation(line: 316, column: 467, scope: !7391)
!7400 = !DILocation(line: 316, column: 472, scope: !7391)
!7401 = !DILocation(line: 316, column: 483, scope: !7391)
!7402 = !DILocation(line: 316, column: 483, scope: !7403)
!7403 = !DILexicalBlockFile(scope: !7388, file: !1001, discriminator: 10)
!7404 = !DILocation(line: 316, column: 499, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !7377, file: !1001, discriminator: 11)
!7406 = distinct !{!7406, !7407}
!7407 = !DILocation(line: 316, column: 499, scope: !7377)
!7408 = !DILocalVariable(name: "SWAP_tmp", scope: !7409, file: !1001, line: 316, type: !990)
!7409 = distinct !DILexicalBlock(scope: !7377, file: !1001, line: 316, column: 501)
!7410 = !DILocation(line: 316, column: 510, scope: !7409)
!7411 = !DILocation(line: 316, column: 521, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7409, file: !1001, discriminator: 12)
!7413 = !DILocation(line: 316, column: 520, scope: !7412)
!7414 = !DILocation(line: 316, column: 510, scope: !7412)
!7415 = !DILocation(line: 316, column: 533, scope: !7412)
!7416 = !DILocation(line: 316, column: 532, scope: !7412)
!7417 = !DILocation(line: 316, column: 527, scope: !7412)
!7418 = !DILocation(line: 316, column: 530, scope: !7412)
!7419 = !DILocation(line: 316, column: 548, scope: !7412)
!7420 = !DILocation(line: 316, column: 541, scope: !7412)
!7421 = !DILocation(line: 316, column: 546, scope: !7412)
!7422 = !DILocation(line: 316, column: 557, scope: !7412)
!7423 = !DILocation(line: 316, column: 568, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !7378, file: !1001, discriminator: 13)
!7425 = !DILocation(line: 316, column: 610, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7427, file: !1001, discriminator: 14)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !1001, line: 316, column: 578)
!7428 = distinct !DILexicalBlock(scope: !7379, file: !1001, line: 316, column: 573)
!7429 = !DILocation(line: 316, column: 617, scope: !7426)
!7430 = !DILocation(line: 316, column: 578, scope: !7426)
!7431 = !DILocation(line: 316, column: 622, scope: !7426)
!7432 = !DILocation(line: 316, column: 627, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !7427, file: !1001, discriminator: 15)
!7434 = distinct !{!7434, !7435}
!7435 = !DILocation(line: 316, column: 627, scope: !7427)
!7436 = !DILocalVariable(name: "SWAP_tmp", scope: !7437, file: !1001, line: 316, type: !990)
!7437 = distinct !DILexicalBlock(scope: !7427, file: !1001, line: 316, column: 629)
!7438 = !DILocation(line: 316, column: 638, scope: !7437)
!7439 = !DILocation(line: 316, column: 649, scope: !7440)
!7440 = !DILexicalBlockFile(scope: !7437, file: !1001, discriminator: 16)
!7441 = !DILocation(line: 316, column: 648, scope: !7440)
!7442 = !DILocation(line: 316, column: 638, scope: !7440)
!7443 = !DILocation(line: 316, column: 661, scope: !7440)
!7444 = !DILocation(line: 316, column: 660, scope: !7440)
!7445 = !DILocation(line: 316, column: 655, scope: !7440)
!7446 = !DILocation(line: 316, column: 658, scope: !7440)
!7447 = !DILocation(line: 316, column: 676, scope: !7440)
!7448 = !DILocation(line: 316, column: 669, scope: !7440)
!7449 = !DILocation(line: 316, column: 674, scope: !7440)
!7450 = !DILocation(line: 316, column: 685, scope: !7440)
!7451 = !DILocation(line: 316, column: 685, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !7437, file: !1001, discriminator: 17)
!7453 = !DILocation(line: 316, column: 710, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7427, file: !1001, discriminator: 18)
!7455 = !DILocation(line: 316, column: 752, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7457, file: !1001, discriminator: 19)
!7457 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 720)
!7458 = !DILocation(line: 316, column: 757, scope: !7456)
!7459 = !DILocation(line: 316, column: 720, scope: !7456)
!7460 = !DILocation(line: 316, column: 762, scope: !7456)
!7461 = !DILocation(line: 316, column: 768, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !7463, file: !1001, discriminator: 20)
!7463 = distinct !DILexicalBlock(scope: !7457, file: !1001, line: 316, column: 766)
!7464 = distinct !{!7464, !7465}
!7465 = !DILocation(line: 316, column: 768, scope: !7463)
!7466 = !DILocalVariable(name: "SWAP_tmp", scope: !7467, file: !1001, line: 316, type: !990)
!7467 = distinct !DILexicalBlock(scope: !7463, file: !1001, line: 316, column: 770)
!7468 = !DILocation(line: 316, column: 779, scope: !7467)
!7469 = !DILocation(line: 316, column: 790, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7467, file: !1001, discriminator: 21)
!7471 = !DILocation(line: 316, column: 789, scope: !7470)
!7472 = !DILocation(line: 316, column: 779, scope: !7470)
!7473 = !DILocation(line: 316, column: 802, scope: !7470)
!7474 = !DILocation(line: 316, column: 801, scope: !7470)
!7475 = !DILocation(line: 316, column: 796, scope: !7470)
!7476 = !DILocation(line: 316, column: 799, scope: !7470)
!7477 = !DILocation(line: 316, column: 813, scope: !7470)
!7478 = !DILocation(line: 316, column: 808, scope: !7470)
!7479 = !DILocation(line: 316, column: 811, scope: !7470)
!7480 = !DILocation(line: 316, column: 822, scope: !7470)
!7481 = !DILocation(line: 316, column: 842, scope: !7482)
!7482 = !DILexicalBlockFile(scope: !7463, file: !1001, discriminator: 22)
!7483 = !DILocation(line: 316, column: 846, scope: !7482)
!7484 = !DILocation(line: 316, column: 851, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !7486, file: !1001, discriminator: 23)
!7486 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 851)
!7487 = !DILocation(line: 316, column: 860, scope: !7485)
!7488 = !DILocation(line: 316, column: 863, scope: !7485)
!7489 = !DILocation(line: 316, column: 857, scope: !7485)
!7490 = !DILocation(line: 316, column: 867, scope: !7491)
!7491 = !DILexicalBlockFile(scope: !7486, file: !1001, discriminator: 24)
!7492 = !DILocation(line: 316, column: 874, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 25)
!7494 = distinct !{!7494, !7495}
!7495 = !DILocation(line: 316, column: 874, scope: !7348)
!7496 = !DILocalVariable(name: "SWAP_tmp", scope: !7497, file: !1001, line: 316, type: !990)
!7497 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 876)
!7498 = !DILocation(line: 316, column: 885, scope: !7497)
!7499 = !DILocation(line: 316, column: 896, scope: !7500)
!7500 = !DILexicalBlockFile(scope: !7497, file: !1001, discriminator: 26)
!7501 = !DILocation(line: 316, column: 895, scope: !7500)
!7502 = !DILocation(line: 316, column: 885, scope: !7500)
!7503 = !DILocation(line: 316, column: 907, scope: !7500)
!7504 = !DILocation(line: 316, column: 902, scope: !7500)
!7505 = !DILocation(line: 316, column: 905, scope: !7500)
!7506 = !DILocation(line: 316, column: 925, scope: !7500)
!7507 = !DILocation(line: 316, column: 916, scope: !7500)
!7508 = !DILocation(line: 316, column: 923, scope: !7500)
!7509 = !DILocation(line: 316, column: 934, scope: !7500)
!7510 = !DILocation(line: 316, column: 945, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 27)
!7512 = !DILocation(line: 316, column: 951, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 28)
!7514 = !DILocation(line: 316, column: 959, scope: !7513)
!7515 = !DILocation(line: 316, column: 956, scope: !7513)
!7516 = !DILocation(line: 316, column: 945, scope: !7513)
!7517 = !DILocation(line: 316, column: 967, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 29)
!7519 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 965)
!7520 = !DILocation(line: 316, column: 973, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 30)
!7522 = !DILocation(line: 316, column: 979, scope: !7521)
!7523 = !DILocation(line: 316, column: 977, scope: !7521)
!7524 = !DILocation(line: 316, column: 985, scope: !7521)
!7525 = !DILocation(line: 316, column: 1020, scope: !7526)
!7526 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 31)
!7527 = !DILocation(line: 316, column: 1026, scope: !7526)
!7528 = !DILocation(line: 316, column: 1029, scope: !7526)
!7529 = !DILocation(line: 316, column: 988, scope: !7526)
!7530 = !DILocation(line: 316, column: 1033, scope: !7526)
!7531 = !DILocation(line: 316, column: 967, scope: !7532)
!7532 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 32)
!7533 = !DILocation(line: 316, column: 1042, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 33)
!7535 = !DILocation(line: 316, column: 967, scope: !7534)
!7536 = distinct !{!7536, !7537}
!7537 = !DILocation(line: 316, column: 967, scope: !7519)
!7538 = !DILocation(line: 316, column: 1046, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 34)
!7540 = !DILocation(line: 316, column: 1052, scope: !7541)
!7541 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 35)
!7542 = !DILocation(line: 316, column: 1058, scope: !7541)
!7543 = !DILocation(line: 316, column: 1056, scope: !7541)
!7544 = !DILocation(line: 316, column: 1064, scope: !7541)
!7545 = !DILocation(line: 316, column: 1099, scope: !7546)
!7546 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 36)
!7547 = !DILocation(line: 316, column: 1106, scope: !7546)
!7548 = !DILocation(line: 316, column: 1109, scope: !7546)
!7549 = !DILocation(line: 316, column: 1067, scope: !7546)
!7550 = !DILocation(line: 316, column: 1113, scope: !7546)
!7551 = !DILocation(line: 316, column: 1046, scope: !7552)
!7552 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 37)
!7553 = !DILocation(line: 316, column: 1123, scope: !7554)
!7554 = !DILexicalBlockFile(scope: !7519, file: !1001, discriminator: 38)
!7555 = !DILocation(line: 316, column: 1046, scope: !7554)
!7556 = distinct !{!7556, !7557}
!7557 = !DILocation(line: 316, column: 1046, scope: !7519)
!7558 = !DILocation(line: 316, column: 1130, scope: !7559)
!7559 = !DILexicalBlockFile(scope: !7560, file: !1001, discriminator: 39)
!7560 = distinct !DILexicalBlock(scope: !7519, file: !1001, line: 316, column: 1130)
!7561 = !DILocation(line: 316, column: 1138, scope: !7559)
!7562 = !DILocation(line: 316, column: 1135, scope: !7559)
!7563 = !DILocation(line: 316, column: 1146, scope: !7564)
!7564 = !DILexicalBlockFile(scope: !7565, file: !1001, discriminator: 40)
!7565 = distinct !DILexicalBlock(scope: !7560, file: !1001, line: 316, column: 1144)
!7566 = distinct !{!7566, !7567}
!7567 = !DILocation(line: 316, column: 1146, scope: !7565)
!7568 = !DILocalVariable(name: "SWAP_tmp", scope: !7569, file: !1001, line: 316, type: !990)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !1001, line: 316, column: 1148)
!7570 = !DILocation(line: 316, column: 1157, scope: !7569)
!7571 = !DILocation(line: 316, column: 1168, scope: !7572)
!7572 = !DILexicalBlockFile(scope: !7569, file: !1001, discriminator: 41)
!7573 = !DILocation(line: 316, column: 1167, scope: !7572)
!7574 = !DILocation(line: 316, column: 1157, scope: !7572)
!7575 = !DILocation(line: 316, column: 1184, scope: !7572)
!7576 = !DILocation(line: 316, column: 1183, scope: !7572)
!7577 = !DILocation(line: 316, column: 1176, scope: !7572)
!7578 = !DILocation(line: 316, column: 1181, scope: !7572)
!7579 = !DILocation(line: 316, column: 1197, scope: !7572)
!7580 = !DILocation(line: 316, column: 1191, scope: !7572)
!7581 = !DILocation(line: 316, column: 1195, scope: !7572)
!7582 = !DILocation(line: 316, column: 1206, scope: !7572)
!7583 = !DILocation(line: 316, column: 1221, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7565, file: !1001, discriminator: 42)
!7585 = !DILocation(line: 316, column: 1230, scope: !7584)
!7586 = !DILocation(line: 316, column: 1234, scope: !7584)
!7587 = !DILocation(line: 316, column: 945, scope: !7588)
!7588 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 43)
!7589 = distinct !{!7589, !7590}
!7590 = !DILocation(line: 316, column: 945, scope: !7348)
!7591 = !DILocation(line: 316, column: 1238, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 44)
!7593 = distinct !{!7593, !7594}
!7594 = !DILocation(line: 316, column: 1238, scope: !7348)
!7595 = !DILocalVariable(name: "SWAP_tmp", scope: !7596, file: !1001, line: 316, type: !990)
!7596 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 1240)
!7597 = !DILocation(line: 316, column: 1249, scope: !7596)
!7598 = !DILocation(line: 316, column: 1260, scope: !7599)
!7599 = !DILexicalBlockFile(scope: !7596, file: !1001, discriminator: 45)
!7600 = !DILocation(line: 316, column: 1259, scope: !7599)
!7601 = !DILocation(line: 316, column: 1249, scope: !7599)
!7602 = !DILocation(line: 316, column: 1273, scope: !7599)
!7603 = !DILocation(line: 316, column: 1267, scope: !7599)
!7604 = !DILocation(line: 316, column: 1271, scope: !7599)
!7605 = !DILocation(line: 316, column: 1291, scope: !7599)
!7606 = !DILocation(line: 316, column: 1282, scope: !7599)
!7607 = !DILocation(line: 316, column: 1289, scope: !7599)
!7608 = !DILocation(line: 316, column: 1300, scope: !7599)
!7609 = !DILocation(line: 316, column: 1314, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !7611, file: !1001, discriminator: 46)
!7611 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 1314)
!7612 = !DILocation(line: 316, column: 1324, scope: !7610)
!7613 = !DILocation(line: 316, column: 1328, scope: !7614)
!7614 = !DILexicalBlockFile(scope: !7611, file: !1001, discriminator: 47)
!7615 = !DILocation(line: 316, column: 1335, scope: !7614)
!7616 = !DILocation(line: 316, column: 1339, scope: !7614)
!7617 = !DILocation(line: 316, column: 1332, scope: !7614)
!7618 = !DILocation(line: 316, column: 1342, scope: !7614)
!7619 = !DILocation(line: 316, column: 1345, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7611, file: !1001, discriminator: 48)
!7621 = !DILocation(line: 316, column: 1352, scope: !7620)
!7622 = !DILocation(line: 316, column: 1349, scope: !7620)
!7623 = !DILocation(line: 316, column: 1314, scope: !7620)
!7624 = !DILocation(line: 316, column: 1365, scope: !7625)
!7625 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 49)
!7626 = distinct !DILexicalBlock(scope: !7611, file: !1001, line: 316, column: 1358)
!7627 = !DILocation(line: 316, column: 1363, scope: !7625)
!7628 = !DILocation(line: 316, column: 1372, scope: !7625)
!7629 = !DILocation(line: 316, column: 1378, scope: !7630)
!7630 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 50)
!7631 = !DILocation(line: 316, column: 1382, scope: !7630)
!7632 = !DILocation(line: 316, column: 1381, scope: !7630)
!7633 = !DILocation(line: 316, column: 1386, scope: !7630)
!7634 = !DILocation(line: 316, column: 1421, scope: !7635)
!7635 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 51)
!7636 = !DILocation(line: 316, column: 1426, scope: !7635)
!7637 = !DILocation(line: 316, column: 1429, scope: !7635)
!7638 = !DILocation(line: 316, column: 1389, scope: !7635)
!7639 = !DILocation(line: 316, column: 1433, scope: !7635)
!7640 = !DILocation(line: 316, column: 1372, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 52)
!7642 = !DILocation(line: 316, column: 1442, scope: !7643)
!7643 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 53)
!7644 = !DILocation(line: 316, column: 1372, scope: !7643)
!7645 = distinct !{!7645, !7646}
!7646 = !DILocation(line: 316, column: 1372, scope: !7626)
!7647 = !DILocation(line: 316, column: 1449, scope: !7648)
!7648 = !DILexicalBlockFile(scope: !7649, file: !1001, discriminator: 54)
!7649 = distinct !DILexicalBlock(scope: !7626, file: !1001, line: 316, column: 1449)
!7650 = !DILocation(line: 316, column: 1454, scope: !7648)
!7651 = !DILocation(line: 316, column: 1452, scope: !7648)
!7652 = !DILocation(line: 316, column: 1459, scope: !7653)
!7653 = !DILexicalBlockFile(scope: !7649, file: !1001, discriminator: 55)
!7654 = !DILocation(line: 316, column: 1466, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7626, file: !1001, discriminator: 56)
!7656 = !DILocation(line: 316, column: 1471, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !7658, file: !1001, discriminator: 57)
!7658 = distinct !DILexicalBlock(scope: !7348, file: !1001, line: 316, column: 1471)
!7659 = !DILocation(line: 316, column: 1475, scope: !7657)
!7660 = !DILocation(line: 316, column: 1474, scope: !7657)
!7661 = !DILocation(line: 316, column: 1482, scope: !7657)
!7662 = !DILocation(line: 316, column: 1487, scope: !7657)
!7663 = !DILocation(line: 316, column: 1486, scope: !7657)
!7664 = !DILocation(line: 316, column: 1480, scope: !7657)
!7665 = !DILocation(line: 316, column: 1510, scope: !7666)
!7666 = !DILexicalBlockFile(scope: !7667, file: !1001, discriminator: 58)
!7667 = distinct !DILexicalBlock(scope: !7658, file: !1001, line: 316, column: 1493)
!7668 = !DILocation(line: 316, column: 1501, scope: !7666)
!7669 = !DILocation(line: 316, column: 1495, scope: !7666)
!7670 = !DILocation(line: 316, column: 1508, scope: !7666)
!7671 = !DILocation(line: 316, column: 1533, scope: !7666)
!7672 = !DILocation(line: 316, column: 1525, scope: !7666)
!7673 = !DILocation(line: 316, column: 1517, scope: !7666)
!7674 = !DILocation(line: 316, column: 1531, scope: !7666)
!7675 = !DILocation(line: 316, column: 1548, scope: !7666)
!7676 = !DILocation(line: 316, column: 1552, scope: !7666)
!7677 = !DILocation(line: 316, column: 1546, scope: !7666)
!7678 = !DILocation(line: 316, column: 1556, scope: !7666)
!7679 = !DILocation(line: 316, column: 1578, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !7681, file: !1001, discriminator: 59)
!7681 = distinct !DILexicalBlock(scope: !7658, file: !1001, line: 316, column: 1561)
!7682 = !DILocation(line: 316, column: 1582, scope: !7680)
!7683 = !DILocation(line: 316, column: 1569, scope: !7680)
!7684 = !DILocation(line: 316, column: 1563, scope: !7680)
!7685 = !DILocation(line: 316, column: 1576, scope: !7680)
!7686 = !DILocation(line: 316, column: 1602, scope: !7680)
!7687 = !DILocation(line: 316, column: 1594, scope: !7680)
!7688 = !DILocation(line: 316, column: 1586, scope: !7680)
!7689 = !DILocation(line: 316, column: 1600, scope: !7680)
!7690 = !DILocation(line: 316, column: 1613, scope: !7680)
!7691 = !DILocation(line: 316, column: 1611, scope: !7680)
!7692 = !DILocation(line: 316, column: 1622, scope: !7693)
!7693 = !DILexicalBlockFile(scope: !7348, file: !1001, discriminator: 60)
!7694 = !DILocation(line: 316, column: 1664, scope: !7695)
!7695 = !DILexicalBlockFile(scope: !7696, file: !1001, discriminator: 61)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !1001, line: 316, column: 1632)
!7697 = distinct !DILexicalBlock(scope: !7342, file: !1001, line: 316, column: 1627)
!7698 = !DILocation(line: 316, column: 1671, scope: !7695)
!7699 = !DILocation(line: 316, column: 1632, scope: !7695)
!7700 = !DILocation(line: 316, column: 1676, scope: !7695)
!7701 = !DILocation(line: 316, column: 1681, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7696, file: !1001, discriminator: 62)
!7703 = distinct !{!7703, !7704}
!7704 = !DILocation(line: 316, column: 1681, scope: !7696)
!7705 = !DILocalVariable(name: "SWAP_tmp", scope: !7706, file: !1001, line: 316, type: !990)
!7706 = distinct !DILexicalBlock(scope: !7696, file: !1001, line: 316, column: 1683)
!7707 = !DILocation(line: 316, column: 1692, scope: !7706)
!7708 = !DILocation(line: 316, column: 1703, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7706, file: !1001, discriminator: 63)
!7710 = !DILocation(line: 316, column: 1702, scope: !7709)
!7711 = !DILocation(line: 316, column: 1692, scope: !7709)
!7712 = !DILocation(line: 316, column: 1715, scope: !7709)
!7713 = !DILocation(line: 316, column: 1714, scope: !7709)
!7714 = !DILocation(line: 316, column: 1709, scope: !7709)
!7715 = !DILocation(line: 316, column: 1712, scope: !7709)
!7716 = !DILocation(line: 316, column: 1730, scope: !7709)
!7717 = !DILocation(line: 316, column: 1723, scope: !7709)
!7718 = !DILocation(line: 316, column: 1728, scope: !7709)
!7719 = !DILocation(line: 316, column: 1739, scope: !7709)
!7720 = !DILocation(line: 316, column: 1739, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !7706, file: !1001, discriminator: 64)
!7722 = !DILocation(line: 316, column: 1750, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !7697, file: !1001, discriminator: 65)
!7724 = !DILocation(line: 316, column: 173, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7322, file: !1001, discriminator: 66)
!7726 = distinct !{!7726, !7727}
!7727 = !DILocation(line: 316, column: 173, scope: !7322)
!7728 = !DILocation(line: 316, column: 100, scope: !7729)
!7729 = !DILexicalBlockFile(scope: !7303, file: !1001, discriminator: 67)
!7730 = distinct !{!7730, !7731}
!7731 = !DILocation(line: 316, column: 100, scope: !7303)
!7732 = !DILocation(line: 316, column: 1762, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7303, file: !1001, discriminator: 68)
!7734 = !DILocation(line: 317, column: 16, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7293, file: !1001, line: 317, column: 9)
!7736 = !DILocation(line: 317, column: 14, scope: !7735)
!7737 = !DILocation(line: 317, column: 21, scope: !7738)
!7738 = !DILexicalBlockFile(scope: !7739, file: !1001, discriminator: 1)
!7739 = distinct !DILexicalBlock(scope: !7735, file: !1001, line: 317, column: 9)
!7740 = !DILocation(line: 317, column: 25, scope: !7738)
!7741 = !DILocation(line: 317, column: 35, scope: !7738)
!7742 = !DILocation(line: 317, column: 23, scope: !7738)
!7743 = !DILocation(line: 317, column: 9, scope: !7738)
!7744 = !DILocation(line: 318, column: 34, scope: !7739)
!7745 = !DILocation(line: 318, column: 26, scope: !7739)
!7746 = !DILocation(line: 318, column: 13, scope: !7739)
!7747 = !DILocation(line: 318, column: 18, scope: !7739)
!7748 = !DILocation(line: 318, column: 23, scope: !7739)
!7749 = !DILocation(line: 317, column: 50, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7739, file: !1001, discriminator: 2)
!7751 = !DILocation(line: 317, column: 9, scope: !7750)
!7752 = distinct !{!7752, !7753}
!7753 = !DILocation(line: 317, column: 9, scope: !7293)
!7754 = !DILocation(line: 319, column: 5, scope: !7293)
!7755 = !DILocation(line: 319, column: 16, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !7757, file: !1001, discriminator: 1)
!7757 = distinct !DILexicalBlock(scope: !7288, file: !1001, line: 319, column: 16)
!7758 = !DILocation(line: 319, column: 26, scope: !7756)
!7759 = !DILocation(line: 319, column: 39, scope: !7756)
!7760 = !DILocation(line: 320, column: 23, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !1001, line: 319, column: 46)
!7762 = !DILocation(line: 320, column: 28, scope: !7761)
!7763 = !DILocation(line: 320, column: 22, scope: !7761)
!7764 = !DILocation(line: 320, column: 9, scope: !7761)
!7765 = !DILocation(line: 320, column: 14, scope: !7761)
!7766 = !DILocation(line: 320, column: 19, scope: !7761)
!7767 = !DILocation(line: 321, column: 5, scope: !7761)
!7768 = !DILocation(line: 321, column: 16, scope: !7769)
!7769 = !DILexicalBlockFile(scope: !7770, file: !1001, discriminator: 1)
!7770 = distinct !DILexicalBlock(scope: !7757, file: !1001, line: 321, column: 16)
!7771 = !DILocation(line: 321, column: 26, scope: !7769)
!7772 = !DILocation(line: 321, column: 39, scope: !7769)
!7773 = !DILocation(line: 322, column: 23, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7770, file: !1001, line: 321, column: 46)
!7775 = !DILocation(line: 322, column: 28, scope: !7774)
!7776 = !DILocation(line: 322, column: 22, scope: !7774)
!7777 = !DILocation(line: 322, column: 9, scope: !7774)
!7778 = !DILocation(line: 322, column: 14, scope: !7774)
!7779 = !DILocation(line: 322, column: 19, scope: !7774)
!7780 = !DILocation(line: 323, column: 5, scope: !7774)
!7781 = !DILocation(line: 324, column: 16, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7770, file: !1001, line: 323, column: 12)
!7783 = !DILocation(line: 324, column: 20, scope: !7782)
!7784 = !DILocation(line: 325, column: 46, scope: !7782)
!7785 = !DILocation(line: 325, column: 56, scope: !7782)
!7786 = !DILocation(line: 324, column: 9, scope: !7782)
!7787 = !DILocation(line: 326, column: 9, scope: !7782)
!7788 = !DILocation(line: 328, column: 26, scope: !7192)
!7789 = !DILocation(line: 328, column: 31, scope: !7192)
!7790 = !DILocation(line: 328, column: 23, scope: !7192)
!7791 = !DILocation(line: 328, column: 18, scope: !7192)
!7792 = !DILocation(line: 328, column: 40, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !7192, file: !1001, discriminator: 1)
!7794 = !DILocation(line: 328, column: 45, scope: !7793)
!7795 = !DILocation(line: 328, column: 18, scope: !7793)
!7796 = !DILocation(line: 328, column: 18, scope: !7797)
!7797 = !DILexicalBlockFile(scope: !7192, file: !1001, discriminator: 2)
!7798 = !DILocation(line: 328, column: 18, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !7192, file: !1001, discriminator: 3)
!7800 = !DILocation(line: 328, column: 5, scope: !7799)
!7801 = !DILocation(line: 328, column: 10, scope: !7799)
!7802 = !DILocation(line: 328, column: 15, scope: !7799)
!7803 = !DILocation(line: 331, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 331, column: 9)
!7805 = !DILocation(line: 331, column: 14, scope: !7804)
!7806 = !DILocation(line: 331, column: 26, scope: !7804)
!7807 = !DILocation(line: 331, column: 9, scope: !7192)
!7808 = !DILocation(line: 332, column: 26, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !1001, line: 331, column: 36)
!7810 = !DILocation(line: 333, column: 5, scope: !7809)
!7811 = !DILocation(line: 333, column: 16, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7813, file: !1001, discriminator: 1)
!7813 = distinct !DILexicalBlock(scope: !7804, file: !1001, line: 333, column: 16)
!7814 = !DILocation(line: 333, column: 21, scope: !7812)
!7815 = !DILocation(line: 333, column: 33, scope: !7812)
!7816 = !DILocation(line: 334, column: 26, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7813, file: !1001, line: 333, column: 43)
!7818 = !DILocation(line: 335, column: 5, scope: !7817)
!7819 = !DILocation(line: 335, column: 16, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !7821, file: !1001, discriminator: 1)
!7821 = distinct !DILexicalBlock(scope: !7813, file: !1001, line: 335, column: 16)
!7822 = !DILocation(line: 335, column: 21, scope: !7820)
!7823 = !DILocation(line: 335, column: 33, scope: !7820)
!7824 = !DILocation(line: 336, column: 26, scope: !7821)
!7825 = !DILocation(line: 336, column: 9, scope: !7821)
!7826 = !DILocation(line: 338, column: 9, scope: !7821)
!7827 = distinct !{!7827, !7826}
!7828 = !DILocation(line: 338, column: 26, scope: !7829)
!7829 = !DILexicalBlockFile(scope: !7830, file: !1001, discriminator: 1)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !1001, line: 338, column: 24)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !1001, line: 338, column: 18)
!7832 = distinct !DILexicalBlock(scope: !7821, file: !1001, line: 338, column: 12)
!7833 = !DILocation(line: 338, column: 90, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7829, file: !1001, discriminator: 2)
!7835 = !DILocation(line: 338, column: 90, scope: !7829)
!7836 = !DILocation(line: 340, column: 9, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 340, column: 9)
!7838 = !DILocation(line: 340, column: 14, scope: !7837)
!7839 = !DILocation(line: 340, column: 21, scope: !7837)
!7840 = !DILocation(line: 340, column: 26, scope: !7837)
!7841 = !DILocation(line: 340, column: 19, scope: !7837)
!7842 = !DILocation(line: 340, column: 33, scope: !7837)
!7843 = !DILocation(line: 340, column: 31, scope: !7837)
!7844 = !DILocation(line: 340, column: 9, scope: !7192)
!7845 = !DILocation(line: 341, column: 16, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7837, file: !1001, line: 340, column: 51)
!7847 = !DILocation(line: 341, column: 20, scope: !7846)
!7848 = !DILocation(line: 342, column: 66, scope: !7846)
!7849 = !DILocation(line: 342, column: 71, scope: !7846)
!7850 = !DILocation(line: 342, column: 78, scope: !7846)
!7851 = !DILocation(line: 342, column: 83, scope: !7846)
!7852 = !DILocation(line: 342, column: 76, scope: !7846)
!7853 = !DILocation(line: 341, column: 9, scope: !7846)
!7854 = !DILocation(line: 343, column: 9, scope: !7846)
!7855 = !DILocation(line: 346, column: 10, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7192, file: !1001, line: 346, column: 9)
!7857 = !DILocation(line: 346, column: 20, scope: !7856)
!7858 = !DILocation(line: 346, column: 9, scope: !7192)
!7859 = !DILocalVariable(name: "dk", scope: !7860, file: !1001, line: 347, type: !992)
!7860 = distinct !DILexicalBlock(scope: !7856, file: !1001, line: 346, column: 35)
!7861 = !DILocation(line: 347, column: 13, scope: !7860)
!7862 = !DILocalVariable(name: "k2diff", scope: !7860, file: !1001, line: 347, type: !992)
!7863 = !DILocation(line: 347, column: 17, scope: !7860)
!7864 = !DILocation(line: 349, column: 14, scope: !7860)
!7865 = !DILocation(line: 349, column: 24, scope: !7860)
!7866 = !DILocation(line: 349, column: 39, scope: !7860)
!7867 = !DILocation(line: 349, column: 12, scope: !7860)
!7868 = !DILocation(line: 350, column: 27, scope: !7860)
!7869 = !DILocation(line: 350, column: 32, scope: !7860)
!7870 = !DILocation(line: 350, column: 39, scope: !7860)
!7871 = !DILocation(line: 350, column: 44, scope: !7860)
!7872 = !DILocation(line: 350, column: 37, scope: !7860)
!7873 = !DILocation(line: 350, column: 52, scope: !7860)
!7874 = !DILocation(line: 350, column: 54, scope: !7860)
!7875 = !DILocation(line: 350, column: 49, scope: !7860)
!7876 = !DILocation(line: 350, column: 62, scope: !7860)
!7877 = !DILocation(line: 350, column: 59, scope: !7860)
!7878 = !DILocation(line: 350, column: 66, scope: !7860)
!7879 = !DILocation(line: 350, column: 9, scope: !7860)
!7880 = !DILocation(line: 350, column: 14, scope: !7860)
!7881 = !DILocation(line: 350, column: 23, scope: !7860)
!7882 = !DILocation(line: 351, column: 28, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7860, file: !1001, line: 351, column: 13)
!7884 = !DILocation(line: 351, column: 32, scope: !7883)
!7885 = !DILocation(line: 351, column: 39, scope: !7883)
!7886 = !DILocation(line: 351, column: 44, scope: !7883)
!7887 = !DILocation(line: 351, column: 54, scope: !7883)
!7888 = !DILocation(line: 351, column: 59, scope: !7883)
!7889 = !DILocation(line: 351, column: 75, scope: !7883)
!7890 = !DILocation(line: 351, column: 13, scope: !7883)
!7891 = !DILocation(line: 351, column: 13, scope: !7860)
!7892 = !DILocation(line: 352, column: 13, scope: !7883)
!7893 = !DILocation(line: 354, column: 16, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7860, file: !1001, line: 354, column: 9)
!7895 = !DILocation(line: 354, column: 14, scope: !7894)
!7896 = !DILocation(line: 354, column: 21, scope: !7897)
!7897 = !DILexicalBlockFile(scope: !7898, file: !1001, discriminator: 1)
!7898 = distinct !DILexicalBlock(scope: !7894, file: !1001, line: 354, column: 9)
!7899 = !DILocation(line: 354, column: 26, scope: !7897)
!7900 = !DILocation(line: 354, column: 31, scope: !7897)
!7901 = !DILocation(line: 354, column: 23, scope: !7897)
!7902 = !DILocation(line: 354, column: 9, scope: !7897)
!7903 = !DILocation(line: 355, column: 32, scope: !7898)
!7904 = !DILocation(line: 355, column: 27, scope: !7898)
!7905 = !DILocation(line: 355, column: 13, scope: !7898)
!7906 = !DILocation(line: 355, column: 18, scope: !7898)
!7907 = !DILocation(line: 355, column: 30, scope: !7898)
!7908 = !DILocation(line: 354, column: 42, scope: !7909)
!7909 = !DILexicalBlockFile(scope: !7898, file: !1001, discriminator: 2)
!7910 = !DILocation(line: 354, column: 9, scope: !7909)
!7911 = distinct !{!7911, !7912}
!7912 = !DILocation(line: 354, column: 9, scope: !7860)
!7913 = !DILocation(line: 357, column: 18, scope: !7860)
!7914 = !DILocation(line: 357, column: 23, scope: !7860)
!7915 = !DILocation(line: 357, column: 30, scope: !7860)
!7916 = !DILocation(line: 357, column: 35, scope: !7860)
!7917 = !DILocation(line: 357, column: 28, scope: !7860)
!7918 = !DILocation(line: 357, column: 42, scope: !7860)
!7919 = !DILocation(line: 357, column: 47, scope: !7860)
!7920 = !DILocation(line: 357, column: 58, scope: !7860)
!7921 = !DILocation(line: 357, column: 56, scope: !7860)
!7922 = !DILocation(line: 357, column: 40, scope: !7860)
!7923 = !DILocation(line: 357, column: 16, scope: !7860)
!7924 = !DILocation(line: 358, column: 13, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7860, file: !1001, line: 358, column: 13)
!7926 = !DILocation(line: 358, column: 20, scope: !7925)
!7927 = !DILocation(line: 358, column: 13, scope: !7860)
!7928 = !DILocation(line: 359, column: 13, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7925, file: !1001, line: 358, column: 25)
!7930 = !DILocation(line: 359, column: 18, scope: !7929)
!7931 = !DILocation(line: 359, column: 29, scope: !7929)
!7932 = !DILocation(line: 360, column: 33, scope: !7929)
!7933 = !DILocation(line: 360, column: 40, scope: !7929)
!7934 = !DILocation(line: 360, column: 13, scope: !7929)
!7935 = !DILocation(line: 360, column: 18, scope: !7929)
!7936 = !DILocation(line: 360, column: 29, scope: !7929)
!7937 = !DILocation(line: 361, column: 9, scope: !7929)
!7938 = !DILocation(line: 361, column: 20, scope: !7939)
!7939 = !DILexicalBlockFile(scope: !7940, file: !1001, discriminator: 1)
!7940 = distinct !DILexicalBlock(scope: !7925, file: !1001, line: 361, column: 20)
!7941 = !DILocation(line: 362, column: 27, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7940, file: !1001, line: 361, column: 28)
!7943 = !DILocation(line: 362, column: 32, scope: !7942)
!7944 = !DILocation(line: 362, column: 13, scope: !7942)
!7945 = !DILocation(line: 362, column: 18, scope: !7942)
!7946 = !DILocation(line: 362, column: 41, scope: !7942)
!7947 = !DILocation(line: 363, column: 9, scope: !7942)
!7948 = !DILocation(line: 365, column: 28, scope: !7860)
!7949 = !DILocation(line: 365, column: 33, scope: !7860)
!7950 = !DILocation(line: 365, column: 9, scope: !7860)
!7951 = !DILocation(line: 365, column: 14, scope: !7860)
!7952 = !DILocation(line: 365, column: 26, scope: !7860)
!7953 = !DILocation(line: 366, column: 16, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7860, file: !1001, line: 366, column: 9)
!7955 = !DILocation(line: 366, column: 14, scope: !7954)
!7956 = !DILocation(line: 366, column: 21, scope: !7957)
!7957 = !DILexicalBlockFile(scope: !7958, file: !1001, discriminator: 1)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !1001, line: 366, column: 9)
!7959 = !DILocation(line: 366, column: 26, scope: !7957)
!7960 = !DILocation(line: 366, column: 31, scope: !7957)
!7961 = !DILocation(line: 366, column: 23, scope: !7957)
!7962 = !DILocation(line: 366, column: 9, scope: !7957)
!7963 = !DILocation(line: 367, column: 47, scope: !7958)
!7964 = !DILocation(line: 367, column: 49, scope: !7958)
!7965 = !DILocation(line: 367, column: 33, scope: !7958)
!7966 = !DILocation(line: 367, column: 38, scope: !7958)
!7967 = !DILocation(line: 367, column: 27, scope: !7958)
!7968 = !DILocation(line: 367, column: 13, scope: !7958)
!7969 = !DILocation(line: 367, column: 18, scope: !7958)
!7970 = !DILocation(line: 367, column: 30, scope: !7958)
!7971 = !DILocation(line: 366, column: 42, scope: !7972)
!7972 = !DILexicalBlockFile(scope: !7958, file: !1001, discriminator: 2)
!7973 = !DILocation(line: 366, column: 9, scope: !7972)
!7974 = distinct !{!7974, !7975}
!7975 = !DILocation(line: 366, column: 9, scope: !7860)
!7976 = !DILocation(line: 369, column: 5, scope: !7860)
!7977 = !DILocalVariable(name: "half_bands", scope: !7978, file: !1001, line: 370, type: !992)
!7978 = distinct !DILexicalBlock(scope: !7856, file: !1001, line: 369, column: 12)
!7979 = !DILocation(line: 370, column: 13, scope: !7978)
!7980 = !DILocation(line: 370, column: 30, scope: !7978)
!7981 = !DILocation(line: 370, column: 40, scope: !7978)
!7982 = !DILocation(line: 370, column: 28, scope: !7978)
!7983 = !DILocalVariable(name: "two_regions", scope: !7978, file: !1001, line: 371, type: !992)
!7984 = !DILocation(line: 371, column: 13, scope: !7978)
!7985 = !DILocalVariable(name: "num_bands_0", scope: !7978, file: !1001, line: 371, type: !992)
!7986 = !DILocation(line: 371, column: 26, scope: !7978)
!7987 = !DILocalVariable(name: "vdk0_max", scope: !7978, file: !1001, line: 372, type: !992)
!7988 = !DILocation(line: 372, column: 13, scope: !7978)
!7989 = !DILocalVariable(name: "vdk1_min", scope: !7978, file: !1001, line: 372, type: !992)
!7990 = !DILocation(line: 372, column: 23, scope: !7978)
!7991 = !DILocalVariable(name: "vk0", scope: !7978, file: !1001, line: 373, type: !7992)
!7992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 784, align: 16, elements: !1080)
!7993 = !DILocation(line: 373, column: 17, scope: !7978)
!7994 = !DILocation(line: 378, column: 18, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7978, file: !1001, line: 378, column: 13)
!7996 = !DILocation(line: 378, column: 23, scope: !7995)
!7997 = !DILocation(line: 378, column: 16, scope: !7995)
!7998 = !DILocation(line: 378, column: 36, scope: !7995)
!7999 = !DILocation(line: 378, column: 41, scope: !7995)
!8000 = !DILocation(line: 378, column: 34, scope: !7995)
!8001 = !DILocation(line: 378, column: 28, scope: !7995)
!8002 = !DILocation(line: 378, column: 13, scope: !7978)
!8003 = !DILocation(line: 379, column: 25, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7995, file: !1001, line: 378, column: 47)
!8005 = !DILocation(line: 380, column: 29, scope: !8004)
!8006 = !DILocation(line: 380, column: 34, scope: !8004)
!8007 = !DILocation(line: 380, column: 27, scope: !8004)
!8008 = !DILocation(line: 380, column: 13, scope: !8004)
!8009 = !DILocation(line: 380, column: 18, scope: !8004)
!8010 = !DILocation(line: 380, column: 23, scope: !8004)
!8011 = !DILocation(line: 381, column: 9, scope: !8004)
!8012 = !DILocation(line: 382, column: 25, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7995, file: !1001, line: 381, column: 16)
!8014 = !DILocation(line: 383, column: 25, scope: !8013)
!8015 = !DILocation(line: 383, column: 30, scope: !8013)
!8016 = !DILocation(line: 383, column: 13, scope: !8013)
!8017 = !DILocation(line: 383, column: 18, scope: !8013)
!8018 = !DILocation(line: 383, column: 23, scope: !8013)
!8019 = !DILocation(line: 397, column: 30, scope: !7978)
!8020 = !DILocation(line: 397, column: 49, scope: !7978)
!8021 = !DILocation(line: 397, column: 54, scope: !7978)
!8022 = !DILocation(line: 397, column: 68, scope: !7978)
!8023 = !DILocation(line: 397, column: 73, scope: !7978)
!8024 = !DILocation(line: 397, column: 61, scope: !7978)
!8025 = !DILocation(line: 397, column: 59, scope: !7978)
!8026 = !DILocation(line: 397, column: 43, scope: !7978)
!8027 = !DILocation(line: 397, column: 41, scope: !7978)
!8028 = !DILocation(line: 397, column: 23, scope: !8029)
!8029 = !DILexicalBlockFile(scope: !7978, file: !1001, discriminator: 1)
!8030 = !DILocation(line: 397, column: 80, scope: !7978)
!8031 = !DILocation(line: 397, column: 23, scope: !7978)
!8032 = !DILocation(line: 397, column: 21, scope: !7978)
!8033 = !DILocation(line: 400, column: 13, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !7978, file: !1001, line: 400, column: 13)
!8035 = !DILocation(line: 400, column: 25, scope: !8034)
!8036 = !DILocation(line: 400, column: 13, scope: !7978)
!8037 = !DILocation(line: 401, column: 20, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !1001, line: 400, column: 31)
!8039 = !DILocation(line: 401, column: 24, scope: !8038)
!8040 = !DILocation(line: 401, column: 64, scope: !8038)
!8041 = !DILocation(line: 401, column: 13, scope: !8038)
!8042 = !DILocation(line: 402, column: 13, scope: !8038)
!8043 = !DILocation(line: 405, column: 9, scope: !7978)
!8044 = !DILocation(line: 405, column: 16, scope: !7978)
!8045 = !DILocation(line: 407, column: 20, scope: !7978)
!8046 = !DILocation(line: 407, column: 23, scope: !7978)
!8047 = !DILocation(line: 407, column: 27, scope: !7978)
!8048 = !DILocation(line: 407, column: 32, scope: !7978)
!8049 = !DILocation(line: 407, column: 38, scope: !7978)
!8050 = !DILocation(line: 407, column: 43, scope: !7978)
!8051 = !DILocation(line: 407, column: 49, scope: !7978)
!8052 = !DILocation(line: 407, column: 9, scope: !7978)
!8053 = !DILocation(line: 409, column: 9, scope: !7978)
!8054 = distinct !{!8054, !8053}
!8055 = !DILocalVariable(name: "stack", scope: !8056, file: !1001, line: 409, type: !6587)
!8056 = distinct !DILexicalBlock(scope: !7978, file: !1001, line: 409, column: 12)
!8057 = !DILocation(line: 409, column: 20, scope: !8056)
!8058 = !DILocalVariable(name: "sp", scope: !8056, file: !1001, line: 409, type: !992)
!8059 = !DILocation(line: 409, column: 38, scope: !8056)
!8060 = !DILocation(line: 409, column: 38, scope: !8061)
!8061 = !DILexicalBlockFile(scope: !8056, file: !1001, discriminator: 1)
!8062 = !DILocation(line: 409, column: 59, scope: !8061)
!8063 = !DILocation(line: 409, column: 63, scope: !8061)
!8064 = !DILocation(line: 409, column: 45, scope: !8061)
!8065 = !DILocation(line: 409, column: 57, scope: !8061)
!8066 = !DILocation(line: 409, column: 83, scope: !8061)
!8067 = !DILocation(line: 409, column: 87, scope: !8061)
!8068 = !DILocation(line: 409, column: 93, scope: !8061)
!8069 = !DILocation(line: 409, column: 91, scope: !8061)
!8070 = !DILocation(line: 409, column: 105, scope: !8061)
!8071 = !DILocation(line: 409, column: 82, scope: !8061)
!8072 = !DILocation(line: 409, column: 68, scope: !8061)
!8073 = !DILocation(line: 409, column: 80, scope: !8061)
!8074 = !DILocation(line: 409, column: 109, scope: !8061)
!8075 = !DILocation(line: 409, column: 115, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8056, file: !1001, discriminator: 2)
!8077 = !DILocation(line: 409, column: 109, scope: !8076)
!8078 = !DILocalVariable(name: "start", scope: !8079, file: !1001, line: 409, type: !7323)
!8079 = distinct !DILexicalBlock(scope: !8056, file: !1001, line: 409, column: 118)
!8080 = !DILocation(line: 409, column: 129, scope: !8079)
!8081 = !DILocation(line: 409, column: 142, scope: !8082)
!8082 = !DILexicalBlockFile(scope: !8079, file: !1001, discriminator: 3)
!8083 = !DILocation(line: 409, column: 136, scope: !8082)
!8084 = !DILocation(line: 409, column: 129, scope: !8082)
!8085 = !DILocalVariable(name: "end", scope: !8079, file: !1001, line: 409, type: !7323)
!8086 = !DILocation(line: 409, column: 161, scope: !8079)
!8087 = !DILocation(line: 409, column: 174, scope: !8082)
!8088 = !DILocation(line: 409, column: 167, scope: !8082)
!8089 = !DILocation(line: 409, column: 161, scope: !8082)
!8090 = !DILocation(line: 409, column: 182, scope: !8082)
!8091 = !DILocation(line: 409, column: 188, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !8079, file: !1001, discriminator: 4)
!8093 = !DILocation(line: 409, column: 196, scope: !8092)
!8094 = !DILocation(line: 409, column: 194, scope: !8092)
!8095 = !DILocation(line: 409, column: 182, scope: !8092)
!8096 = !DILocation(line: 409, column: 205, scope: !8097)
!8097 = !DILexicalBlockFile(scope: !8098, file: !1001, discriminator: 5)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !1001, line: 409, column: 205)
!8099 = distinct !DILexicalBlock(scope: !8079, file: !1001, line: 409, column: 200)
!8100 = !DILocation(line: 409, column: 213, scope: !8097)
!8101 = !DILocation(line: 409, column: 216, scope: !8097)
!8102 = !DILocation(line: 409, column: 211, scope: !8097)
!8103 = !DILocalVariable(name: "checksort", scope: !8104, file: !1001, line: 409, type: !992)
!8104 = distinct !DILexicalBlock(scope: !8098, file: !1001, line: 409, column: 220)
!8105 = !DILocation(line: 409, column: 226, scope: !8104)
!8106 = !DILocation(line: 409, column: 226, scope: !8107)
!8107 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 6)
!8108 = !DILocalVariable(name: "right", scope: !8104, file: !1001, line: 409, type: !7323)
!8109 = !DILocation(line: 409, column: 248, scope: !8104)
!8110 = !DILocation(line: 409, column: 256, scope: !8107)
!8111 = !DILocation(line: 409, column: 259, scope: !8107)
!8112 = !DILocation(line: 409, column: 248, scope: !8107)
!8113 = !DILocalVariable(name: "left", scope: !8104, file: !1001, line: 409, type: !7323)
!8114 = !DILocation(line: 409, column: 272, scope: !8104)
!8115 = !DILocation(line: 409, column: 279, scope: !8107)
!8116 = !DILocation(line: 409, column: 284, scope: !8107)
!8117 = !DILocation(line: 409, column: 272, scope: !8107)
!8118 = !DILocalVariable(name: "mid", scope: !8104, file: !1001, line: 409, type: !7323)
!8119 = !DILocation(line: 409, column: 297, scope: !8104)
!8120 = !DILocation(line: 409, column: 303, scope: !8107)
!8121 = !DILocation(line: 409, column: 313, scope: !8107)
!8122 = !DILocation(line: 409, column: 317, scope: !8107)
!8123 = !DILocation(line: 409, column: 316, scope: !8107)
!8124 = !DILocation(line: 409, column: 323, scope: !8107)
!8125 = !DILocation(line: 409, column: 309, scope: !8107)
!8126 = !DILocation(line: 409, column: 297, scope: !8107)
!8127 = !DILocation(line: 409, column: 364, scope: !8107)
!8128 = !DILocation(line: 409, column: 371, scope: !8107)
!8129 = !DILocation(line: 409, column: 332, scope: !8107)
!8130 = !DILocation(line: 409, column: 376, scope: !8107)
!8131 = !DILocation(line: 409, column: 419, scope: !8132)
!8132 = !DILexicalBlockFile(scope: !8133, file: !1001, discriminator: 7)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !1001, line: 409, column: 386)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !1001, line: 409, column: 381)
!8135 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 332)
!8136 = !DILocation(line: 409, column: 424, scope: !8132)
!8137 = !DILocation(line: 409, column: 386, scope: !8132)
!8138 = !DILocation(line: 409, column: 429, scope: !8132)
!8139 = !DILocation(line: 409, column: 434, scope: !8140)
!8140 = !DILexicalBlockFile(scope: !8133, file: !1001, discriminator: 8)
!8141 = distinct !{!8141, !8142}
!8142 = !DILocation(line: 409, column: 434, scope: !8133)
!8143 = !DILocalVariable(name: "SWAP_tmp", scope: !8144, file: !1001, line: 409, type: !990)
!8144 = distinct !DILexicalBlock(scope: !8133, file: !1001, line: 409, column: 436)
!8145 = !DILocation(line: 409, column: 445, scope: !8144)
!8146 = !DILocation(line: 409, column: 456, scope: !8147)
!8147 = !DILexicalBlockFile(scope: !8144, file: !1001, discriminator: 9)
!8148 = !DILocation(line: 409, column: 455, scope: !8147)
!8149 = !DILocation(line: 409, column: 445, scope: !8147)
!8150 = !DILocation(line: 409, column: 468, scope: !8147)
!8151 = !DILocation(line: 409, column: 467, scope: !8147)
!8152 = !DILocation(line: 409, column: 462, scope: !8147)
!8153 = !DILocation(line: 409, column: 465, scope: !8147)
!8154 = !DILocation(line: 409, column: 483, scope: !8147)
!8155 = !DILocation(line: 409, column: 476, scope: !8147)
!8156 = !DILocation(line: 409, column: 481, scope: !8147)
!8157 = !DILocation(line: 409, column: 492, scope: !8147)
!8158 = !DILocation(line: 409, column: 492, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !8144, file: !1001, discriminator: 10)
!8160 = !DILocation(line: 409, column: 508, scope: !8161)
!8161 = !DILexicalBlockFile(scope: !8133, file: !1001, discriminator: 11)
!8162 = distinct !{!8162, !8163}
!8163 = !DILocation(line: 409, column: 508, scope: !8133)
!8164 = !DILocalVariable(name: "SWAP_tmp", scope: !8165, file: !1001, line: 409, type: !990)
!8165 = distinct !DILexicalBlock(scope: !8133, file: !1001, line: 409, column: 510)
!8166 = !DILocation(line: 409, column: 519, scope: !8165)
!8167 = !DILocation(line: 409, column: 530, scope: !8168)
!8168 = !DILexicalBlockFile(scope: !8165, file: !1001, discriminator: 12)
!8169 = !DILocation(line: 409, column: 529, scope: !8168)
!8170 = !DILocation(line: 409, column: 519, scope: !8168)
!8171 = !DILocation(line: 409, column: 542, scope: !8168)
!8172 = !DILocation(line: 409, column: 541, scope: !8168)
!8173 = !DILocation(line: 409, column: 536, scope: !8168)
!8174 = !DILocation(line: 409, column: 539, scope: !8168)
!8175 = !DILocation(line: 409, column: 557, scope: !8168)
!8176 = !DILocation(line: 409, column: 550, scope: !8168)
!8177 = !DILocation(line: 409, column: 555, scope: !8168)
!8178 = !DILocation(line: 409, column: 566, scope: !8168)
!8179 = !DILocation(line: 409, column: 577, scope: !8180)
!8180 = !DILexicalBlockFile(scope: !8134, file: !1001, discriminator: 13)
!8181 = !DILocation(line: 409, column: 619, scope: !8182)
!8182 = !DILexicalBlockFile(scope: !8183, file: !1001, discriminator: 14)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !1001, line: 409, column: 587)
!8184 = distinct !DILexicalBlock(scope: !8135, file: !1001, line: 409, column: 582)
!8185 = !DILocation(line: 409, column: 626, scope: !8182)
!8186 = !DILocation(line: 409, column: 587, scope: !8182)
!8187 = !DILocation(line: 409, column: 631, scope: !8182)
!8188 = !DILocation(line: 409, column: 636, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8183, file: !1001, discriminator: 15)
!8190 = distinct !{!8190, !8191}
!8191 = !DILocation(line: 409, column: 636, scope: !8183)
!8192 = !DILocalVariable(name: "SWAP_tmp", scope: !8193, file: !1001, line: 409, type: !990)
!8193 = distinct !DILexicalBlock(scope: !8183, file: !1001, line: 409, column: 638)
!8194 = !DILocation(line: 409, column: 647, scope: !8193)
!8195 = !DILocation(line: 409, column: 658, scope: !8196)
!8196 = !DILexicalBlockFile(scope: !8193, file: !1001, discriminator: 16)
!8197 = !DILocation(line: 409, column: 657, scope: !8196)
!8198 = !DILocation(line: 409, column: 647, scope: !8196)
!8199 = !DILocation(line: 409, column: 670, scope: !8196)
!8200 = !DILocation(line: 409, column: 669, scope: !8196)
!8201 = !DILocation(line: 409, column: 664, scope: !8196)
!8202 = !DILocation(line: 409, column: 667, scope: !8196)
!8203 = !DILocation(line: 409, column: 685, scope: !8196)
!8204 = !DILocation(line: 409, column: 678, scope: !8196)
!8205 = !DILocation(line: 409, column: 683, scope: !8196)
!8206 = !DILocation(line: 409, column: 694, scope: !8196)
!8207 = !DILocation(line: 409, column: 694, scope: !8208)
!8208 = !DILexicalBlockFile(scope: !8193, file: !1001, discriminator: 17)
!8209 = !DILocation(line: 409, column: 719, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !8183, file: !1001, discriminator: 18)
!8211 = !DILocation(line: 409, column: 761, scope: !8212)
!8212 = !DILexicalBlockFile(scope: !8213, file: !1001, discriminator: 19)
!8213 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 729)
!8214 = !DILocation(line: 409, column: 766, scope: !8212)
!8215 = !DILocation(line: 409, column: 729, scope: !8212)
!8216 = !DILocation(line: 409, column: 771, scope: !8212)
!8217 = !DILocation(line: 409, column: 777, scope: !8218)
!8218 = !DILexicalBlockFile(scope: !8219, file: !1001, discriminator: 20)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !1001, line: 409, column: 775)
!8220 = distinct !{!8220, !8221}
!8221 = !DILocation(line: 409, column: 777, scope: !8219)
!8222 = !DILocalVariable(name: "SWAP_tmp", scope: !8223, file: !1001, line: 409, type: !990)
!8223 = distinct !DILexicalBlock(scope: !8219, file: !1001, line: 409, column: 779)
!8224 = !DILocation(line: 409, column: 788, scope: !8223)
!8225 = !DILocation(line: 409, column: 799, scope: !8226)
!8226 = !DILexicalBlockFile(scope: !8223, file: !1001, discriminator: 21)
!8227 = !DILocation(line: 409, column: 798, scope: !8226)
!8228 = !DILocation(line: 409, column: 788, scope: !8226)
!8229 = !DILocation(line: 409, column: 811, scope: !8226)
!8230 = !DILocation(line: 409, column: 810, scope: !8226)
!8231 = !DILocation(line: 409, column: 805, scope: !8226)
!8232 = !DILocation(line: 409, column: 808, scope: !8226)
!8233 = !DILocation(line: 409, column: 822, scope: !8226)
!8234 = !DILocation(line: 409, column: 817, scope: !8226)
!8235 = !DILocation(line: 409, column: 820, scope: !8226)
!8236 = !DILocation(line: 409, column: 831, scope: !8226)
!8237 = !DILocation(line: 409, column: 851, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8219, file: !1001, discriminator: 22)
!8239 = !DILocation(line: 409, column: 855, scope: !8238)
!8240 = !DILocation(line: 409, column: 860, scope: !8241)
!8241 = !DILexicalBlockFile(scope: !8242, file: !1001, discriminator: 23)
!8242 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 860)
!8243 = !DILocation(line: 409, column: 869, scope: !8241)
!8244 = !DILocation(line: 409, column: 872, scope: !8241)
!8245 = !DILocation(line: 409, column: 866, scope: !8241)
!8246 = !DILocation(line: 409, column: 876, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8242, file: !1001, discriminator: 24)
!8248 = !DILocation(line: 409, column: 883, scope: !8249)
!8249 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 25)
!8250 = distinct !{!8250, !8251}
!8251 = !DILocation(line: 409, column: 883, scope: !8104)
!8252 = !DILocalVariable(name: "SWAP_tmp", scope: !8253, file: !1001, line: 409, type: !990)
!8253 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 885)
!8254 = !DILocation(line: 409, column: 894, scope: !8253)
!8255 = !DILocation(line: 409, column: 905, scope: !8256)
!8256 = !DILexicalBlockFile(scope: !8253, file: !1001, discriminator: 26)
!8257 = !DILocation(line: 409, column: 904, scope: !8256)
!8258 = !DILocation(line: 409, column: 894, scope: !8256)
!8259 = !DILocation(line: 409, column: 916, scope: !8256)
!8260 = !DILocation(line: 409, column: 911, scope: !8256)
!8261 = !DILocation(line: 409, column: 914, scope: !8256)
!8262 = !DILocation(line: 409, column: 934, scope: !8256)
!8263 = !DILocation(line: 409, column: 925, scope: !8256)
!8264 = !DILocation(line: 409, column: 932, scope: !8256)
!8265 = !DILocation(line: 409, column: 943, scope: !8256)
!8266 = !DILocation(line: 409, column: 954, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 27)
!8268 = !DILocation(line: 409, column: 960, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 28)
!8270 = !DILocation(line: 409, column: 968, scope: !8269)
!8271 = !DILocation(line: 409, column: 965, scope: !8269)
!8272 = !DILocation(line: 409, column: 954, scope: !8269)
!8273 = !DILocation(line: 409, column: 976, scope: !8274)
!8274 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 29)
!8275 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 974)
!8276 = !DILocation(line: 409, column: 982, scope: !8277)
!8277 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 30)
!8278 = !DILocation(line: 409, column: 988, scope: !8277)
!8279 = !DILocation(line: 409, column: 986, scope: !8277)
!8280 = !DILocation(line: 409, column: 994, scope: !8277)
!8281 = !DILocation(line: 409, column: 1029, scope: !8282)
!8282 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 31)
!8283 = !DILocation(line: 409, column: 1035, scope: !8282)
!8284 = !DILocation(line: 409, column: 1038, scope: !8282)
!8285 = !DILocation(line: 409, column: 997, scope: !8282)
!8286 = !DILocation(line: 409, column: 1042, scope: !8282)
!8287 = !DILocation(line: 409, column: 976, scope: !8288)
!8288 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 32)
!8289 = !DILocation(line: 409, column: 1051, scope: !8290)
!8290 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 33)
!8291 = !DILocation(line: 409, column: 976, scope: !8290)
!8292 = distinct !{!8292, !8293}
!8293 = !DILocation(line: 409, column: 976, scope: !8275)
!8294 = !DILocation(line: 409, column: 1055, scope: !8295)
!8295 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 34)
!8296 = !DILocation(line: 409, column: 1061, scope: !8297)
!8297 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 35)
!8298 = !DILocation(line: 409, column: 1067, scope: !8297)
!8299 = !DILocation(line: 409, column: 1065, scope: !8297)
!8300 = !DILocation(line: 409, column: 1073, scope: !8297)
!8301 = !DILocation(line: 409, column: 1108, scope: !8302)
!8302 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 36)
!8303 = !DILocation(line: 409, column: 1115, scope: !8302)
!8304 = !DILocation(line: 409, column: 1118, scope: !8302)
!8305 = !DILocation(line: 409, column: 1076, scope: !8302)
!8306 = !DILocation(line: 409, column: 1122, scope: !8302)
!8307 = !DILocation(line: 409, column: 1055, scope: !8308)
!8308 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 37)
!8309 = !DILocation(line: 409, column: 1132, scope: !8310)
!8310 = !DILexicalBlockFile(scope: !8275, file: !1001, discriminator: 38)
!8311 = !DILocation(line: 409, column: 1055, scope: !8310)
!8312 = distinct !{!8312, !8313}
!8313 = !DILocation(line: 409, column: 1055, scope: !8275)
!8314 = !DILocation(line: 409, column: 1139, scope: !8315)
!8315 = !DILexicalBlockFile(scope: !8316, file: !1001, discriminator: 39)
!8316 = distinct !DILexicalBlock(scope: !8275, file: !1001, line: 409, column: 1139)
!8317 = !DILocation(line: 409, column: 1147, scope: !8315)
!8318 = !DILocation(line: 409, column: 1144, scope: !8315)
!8319 = !DILocation(line: 409, column: 1155, scope: !8320)
!8320 = !DILexicalBlockFile(scope: !8321, file: !1001, discriminator: 40)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !1001, line: 409, column: 1153)
!8322 = distinct !{!8322, !8323}
!8323 = !DILocation(line: 409, column: 1155, scope: !8321)
!8324 = !DILocalVariable(name: "SWAP_tmp", scope: !8325, file: !1001, line: 409, type: !990)
!8325 = distinct !DILexicalBlock(scope: !8321, file: !1001, line: 409, column: 1157)
!8326 = !DILocation(line: 409, column: 1166, scope: !8325)
!8327 = !DILocation(line: 409, column: 1177, scope: !8328)
!8328 = !DILexicalBlockFile(scope: !8325, file: !1001, discriminator: 41)
!8329 = !DILocation(line: 409, column: 1176, scope: !8328)
!8330 = !DILocation(line: 409, column: 1166, scope: !8328)
!8331 = !DILocation(line: 409, column: 1193, scope: !8328)
!8332 = !DILocation(line: 409, column: 1192, scope: !8328)
!8333 = !DILocation(line: 409, column: 1185, scope: !8328)
!8334 = !DILocation(line: 409, column: 1190, scope: !8328)
!8335 = !DILocation(line: 409, column: 1206, scope: !8328)
!8336 = !DILocation(line: 409, column: 1200, scope: !8328)
!8337 = !DILocation(line: 409, column: 1204, scope: !8328)
!8338 = !DILocation(line: 409, column: 1215, scope: !8328)
!8339 = !DILocation(line: 409, column: 1230, scope: !8340)
!8340 = !DILexicalBlockFile(scope: !8321, file: !1001, discriminator: 42)
!8341 = !DILocation(line: 409, column: 1239, scope: !8340)
!8342 = !DILocation(line: 409, column: 1243, scope: !8340)
!8343 = !DILocation(line: 409, column: 954, scope: !8344)
!8344 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 43)
!8345 = distinct !{!8345, !8346}
!8346 = !DILocation(line: 409, column: 954, scope: !8104)
!8347 = !DILocation(line: 409, column: 1247, scope: !8348)
!8348 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 44)
!8349 = distinct !{!8349, !8350}
!8350 = !DILocation(line: 409, column: 1247, scope: !8104)
!8351 = !DILocalVariable(name: "SWAP_tmp", scope: !8352, file: !1001, line: 409, type: !990)
!8352 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 1249)
!8353 = !DILocation(line: 409, column: 1258, scope: !8352)
!8354 = !DILocation(line: 409, column: 1269, scope: !8355)
!8355 = !DILexicalBlockFile(scope: !8352, file: !1001, discriminator: 45)
!8356 = !DILocation(line: 409, column: 1268, scope: !8355)
!8357 = !DILocation(line: 409, column: 1258, scope: !8355)
!8358 = !DILocation(line: 409, column: 1282, scope: !8355)
!8359 = !DILocation(line: 409, column: 1276, scope: !8355)
!8360 = !DILocation(line: 409, column: 1280, scope: !8355)
!8361 = !DILocation(line: 409, column: 1300, scope: !8355)
!8362 = !DILocation(line: 409, column: 1291, scope: !8355)
!8363 = !DILocation(line: 409, column: 1298, scope: !8355)
!8364 = !DILocation(line: 409, column: 1309, scope: !8355)
!8365 = !DILocation(line: 409, column: 1323, scope: !8366)
!8366 = !DILexicalBlockFile(scope: !8367, file: !1001, discriminator: 46)
!8367 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 1323)
!8368 = !DILocation(line: 409, column: 1333, scope: !8366)
!8369 = !DILocation(line: 409, column: 1337, scope: !8370)
!8370 = !DILexicalBlockFile(scope: !8367, file: !1001, discriminator: 47)
!8371 = !DILocation(line: 409, column: 1344, scope: !8370)
!8372 = !DILocation(line: 409, column: 1348, scope: !8370)
!8373 = !DILocation(line: 409, column: 1341, scope: !8370)
!8374 = !DILocation(line: 409, column: 1351, scope: !8370)
!8375 = !DILocation(line: 409, column: 1354, scope: !8376)
!8376 = !DILexicalBlockFile(scope: !8367, file: !1001, discriminator: 48)
!8377 = !DILocation(line: 409, column: 1361, scope: !8376)
!8378 = !DILocation(line: 409, column: 1358, scope: !8376)
!8379 = !DILocation(line: 409, column: 1323, scope: !8376)
!8380 = !DILocation(line: 409, column: 1374, scope: !8381)
!8381 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 49)
!8382 = distinct !DILexicalBlock(scope: !8367, file: !1001, line: 409, column: 1367)
!8383 = !DILocation(line: 409, column: 1372, scope: !8381)
!8384 = !DILocation(line: 409, column: 1381, scope: !8381)
!8385 = !DILocation(line: 409, column: 1387, scope: !8386)
!8386 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 50)
!8387 = !DILocation(line: 409, column: 1391, scope: !8386)
!8388 = !DILocation(line: 409, column: 1390, scope: !8386)
!8389 = !DILocation(line: 409, column: 1395, scope: !8386)
!8390 = !DILocation(line: 409, column: 1430, scope: !8391)
!8391 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 51)
!8392 = !DILocation(line: 409, column: 1435, scope: !8391)
!8393 = !DILocation(line: 409, column: 1438, scope: !8391)
!8394 = !DILocation(line: 409, column: 1398, scope: !8391)
!8395 = !DILocation(line: 409, column: 1442, scope: !8391)
!8396 = !DILocation(line: 409, column: 1381, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 52)
!8398 = !DILocation(line: 409, column: 1451, scope: !8399)
!8399 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 53)
!8400 = !DILocation(line: 409, column: 1381, scope: !8399)
!8401 = distinct !{!8401, !8402}
!8402 = !DILocation(line: 409, column: 1381, scope: !8382)
!8403 = !DILocation(line: 409, column: 1458, scope: !8404)
!8404 = !DILexicalBlockFile(scope: !8405, file: !1001, discriminator: 54)
!8405 = distinct !DILexicalBlock(scope: !8382, file: !1001, line: 409, column: 1458)
!8406 = !DILocation(line: 409, column: 1463, scope: !8404)
!8407 = !DILocation(line: 409, column: 1461, scope: !8404)
!8408 = !DILocation(line: 409, column: 1468, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8405, file: !1001, discriminator: 55)
!8410 = !DILocation(line: 409, column: 1475, scope: !8411)
!8411 = !DILexicalBlockFile(scope: !8382, file: !1001, discriminator: 56)
!8412 = !DILocation(line: 409, column: 1480, scope: !8413)
!8413 = !DILexicalBlockFile(scope: !8414, file: !1001, discriminator: 57)
!8414 = distinct !DILexicalBlock(scope: !8104, file: !1001, line: 409, column: 1480)
!8415 = !DILocation(line: 409, column: 1484, scope: !8413)
!8416 = !DILocation(line: 409, column: 1483, scope: !8413)
!8417 = !DILocation(line: 409, column: 1491, scope: !8413)
!8418 = !DILocation(line: 409, column: 1496, scope: !8413)
!8419 = !DILocation(line: 409, column: 1495, scope: !8413)
!8420 = !DILocation(line: 409, column: 1489, scope: !8413)
!8421 = !DILocation(line: 409, column: 1519, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8423, file: !1001, discriminator: 58)
!8423 = distinct !DILexicalBlock(scope: !8414, file: !1001, line: 409, column: 1502)
!8424 = !DILocation(line: 409, column: 1510, scope: !8422)
!8425 = !DILocation(line: 409, column: 1504, scope: !8422)
!8426 = !DILocation(line: 409, column: 1517, scope: !8422)
!8427 = !DILocation(line: 409, column: 1542, scope: !8422)
!8428 = !DILocation(line: 409, column: 1534, scope: !8422)
!8429 = !DILocation(line: 409, column: 1526, scope: !8422)
!8430 = !DILocation(line: 409, column: 1540, scope: !8422)
!8431 = !DILocation(line: 409, column: 1557, scope: !8422)
!8432 = !DILocation(line: 409, column: 1561, scope: !8422)
!8433 = !DILocation(line: 409, column: 1555, scope: !8422)
!8434 = !DILocation(line: 409, column: 1565, scope: !8422)
!8435 = !DILocation(line: 409, column: 1587, scope: !8436)
!8436 = !DILexicalBlockFile(scope: !8437, file: !1001, discriminator: 59)
!8437 = distinct !DILexicalBlock(scope: !8414, file: !1001, line: 409, column: 1570)
!8438 = !DILocation(line: 409, column: 1591, scope: !8436)
!8439 = !DILocation(line: 409, column: 1578, scope: !8436)
!8440 = !DILocation(line: 409, column: 1572, scope: !8436)
!8441 = !DILocation(line: 409, column: 1585, scope: !8436)
!8442 = !DILocation(line: 409, column: 1611, scope: !8436)
!8443 = !DILocation(line: 409, column: 1603, scope: !8436)
!8444 = !DILocation(line: 409, column: 1595, scope: !8436)
!8445 = !DILocation(line: 409, column: 1609, scope: !8436)
!8446 = !DILocation(line: 409, column: 1622, scope: !8436)
!8447 = !DILocation(line: 409, column: 1620, scope: !8436)
!8448 = !DILocation(line: 409, column: 1631, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !8104, file: !1001, discriminator: 60)
!8450 = !DILocation(line: 409, column: 1673, scope: !8451)
!8451 = !DILexicalBlockFile(scope: !8452, file: !1001, discriminator: 61)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !1001, line: 409, column: 1641)
!8453 = distinct !DILexicalBlock(scope: !8098, file: !1001, line: 409, column: 1636)
!8454 = !DILocation(line: 409, column: 1680, scope: !8451)
!8455 = !DILocation(line: 409, column: 1641, scope: !8451)
!8456 = !DILocation(line: 409, column: 1685, scope: !8451)
!8457 = !DILocation(line: 409, column: 1690, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !8452, file: !1001, discriminator: 62)
!8459 = distinct !{!8459, !8460}
!8460 = !DILocation(line: 409, column: 1690, scope: !8452)
!8461 = !DILocalVariable(name: "SWAP_tmp", scope: !8462, file: !1001, line: 409, type: !990)
!8462 = distinct !DILexicalBlock(scope: !8452, file: !1001, line: 409, column: 1692)
!8463 = !DILocation(line: 409, column: 1701, scope: !8462)
!8464 = !DILocation(line: 409, column: 1712, scope: !8465)
!8465 = !DILexicalBlockFile(scope: !8462, file: !1001, discriminator: 63)
!8466 = !DILocation(line: 409, column: 1711, scope: !8465)
!8467 = !DILocation(line: 409, column: 1701, scope: !8465)
!8468 = !DILocation(line: 409, column: 1724, scope: !8465)
!8469 = !DILocation(line: 409, column: 1723, scope: !8465)
!8470 = !DILocation(line: 409, column: 1718, scope: !8465)
!8471 = !DILocation(line: 409, column: 1721, scope: !8465)
!8472 = !DILocation(line: 409, column: 1739, scope: !8465)
!8473 = !DILocation(line: 409, column: 1732, scope: !8465)
!8474 = !DILocation(line: 409, column: 1737, scope: !8465)
!8475 = !DILocation(line: 409, column: 1748, scope: !8465)
!8476 = !DILocation(line: 409, column: 1748, scope: !8477)
!8477 = !DILexicalBlockFile(scope: !8462, file: !1001, discriminator: 64)
!8478 = !DILocation(line: 409, column: 1759, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8453, file: !1001, discriminator: 65)
!8480 = !DILocation(line: 409, column: 182, scope: !8481)
!8481 = !DILexicalBlockFile(scope: !8079, file: !1001, discriminator: 66)
!8482 = distinct !{!8482, !8483}
!8483 = !DILocation(line: 409, column: 182, scope: !8079)
!8484 = !DILocation(line: 409, column: 109, scope: !8485)
!8485 = !DILexicalBlockFile(scope: !8056, file: !1001, discriminator: 67)
!8486 = distinct !{!8486, !8487}
!8487 = !DILocation(line: 409, column: 109, scope: !8056)
!8488 = !DILocation(line: 409, column: 1771, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8056, file: !1001, discriminator: 68)
!8490 = !DILocation(line: 410, column: 24, scope: !7978)
!8491 = !DILocation(line: 410, column: 20, scope: !7978)
!8492 = !DILocation(line: 410, column: 18, scope: !7978)
!8493 = !DILocation(line: 412, column: 18, scope: !7978)
!8494 = !DILocation(line: 412, column: 23, scope: !7978)
!8495 = !DILocation(line: 412, column: 9, scope: !7978)
!8496 = !DILocation(line: 412, column: 16, scope: !7978)
!8497 = !DILocation(line: 413, column: 16, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !7978, file: !1001, line: 413, column: 9)
!8499 = !DILocation(line: 413, column: 14, scope: !8498)
!8500 = !DILocation(line: 413, column: 21, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !8502, file: !1001, discriminator: 1)
!8502 = distinct !DILexicalBlock(scope: !8498, file: !1001, line: 413, column: 9)
!8503 = !DILocation(line: 413, column: 26, scope: !8501)
!8504 = !DILocation(line: 413, column: 23, scope: !8501)
!8505 = !DILocation(line: 413, column: 9, scope: !8501)
!8506 = !DILocation(line: 414, column: 21, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !1001, line: 414, column: 17)
!8508 = distinct !DILexicalBlock(scope: !8502, file: !1001, line: 413, column: 44)
!8509 = !DILocation(line: 414, column: 17, scope: !8507)
!8510 = !DILocation(line: 414, column: 24, scope: !8507)
!8511 = !DILocation(line: 414, column: 17, scope: !8508)
!8512 = !DILocation(line: 415, column: 24, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8507, file: !1001, line: 414, column: 30)
!8514 = !DILocation(line: 415, column: 28, scope: !8513)
!8515 = !DILocation(line: 415, column: 65, scope: !8513)
!8516 = !DILocation(line: 415, column: 72, scope: !8513)
!8517 = !DILocation(line: 415, column: 68, scope: !8513)
!8518 = !DILocation(line: 415, column: 17, scope: !8513)
!8519 = !DILocation(line: 416, column: 17, scope: !8513)
!8520 = !DILocation(line: 418, column: 27, scope: !8508)
!8521 = !DILocation(line: 418, column: 28, scope: !8508)
!8522 = !DILocation(line: 418, column: 23, scope: !8508)
!8523 = !DILocation(line: 418, column: 17, scope: !8508)
!8524 = !DILocation(line: 418, column: 13, scope: !8508)
!8525 = !DILocation(line: 418, column: 20, scope: !8508)
!8526 = !DILocation(line: 419, column: 9, scope: !8508)
!8527 = !DILocation(line: 413, column: 40, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !8502, file: !1001, discriminator: 2)
!8529 = !DILocation(line: 413, column: 9, scope: !8528)
!8530 = distinct !{!8530, !8531}
!8531 = !DILocation(line: 413, column: 9, scope: !7978)
!8532 = !DILocation(line: 421, column: 13, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !7978, file: !1001, line: 421, column: 13)
!8534 = !DILocation(line: 421, column: 13, scope: !7978)
!8535 = !DILocalVariable(name: "vk1", scope: !8536, file: !1001, line: 422, type: !7992)
!8536 = distinct !DILexicalBlock(scope: !8533, file: !1001, line: 421, column: 26)
!8537 = !DILocation(line: 422, column: 21, scope: !8536)
!8538 = !DILocalVariable(name: "invwarp", scope: !8536, file: !1001, line: 439, type: !958)
!8539 = !DILocation(line: 439, column: 19, scope: !8536)
!8540 = !DILocation(line: 439, column: 29, scope: !8536)
!8541 = !DILocation(line: 439, column: 39, scope: !8536)
!8542 = !DILocalVariable(name: "num_bands_1", scope: !8536, file: !1001, line: 441, type: !992)
!8543 = !DILocation(line: 441, column: 17, scope: !8536)
!8544 = !DILocation(line: 441, column: 38, scope: !8536)
!8545 = !DILocation(line: 441, column: 51, scope: !8536)
!8546 = !DILocation(line: 441, column: 49, scope: !8536)
!8547 = !DILocation(line: 442, column: 44, scope: !8536)
!8548 = !DILocation(line: 442, column: 49, scope: !8536)
!8549 = !DILocation(line: 442, column: 63, scope: !8536)
!8550 = !DILocation(line: 442, column: 68, scope: !8536)
!8551 = !DILocation(line: 442, column: 56, scope: !8536)
!8552 = !DILocation(line: 442, column: 54, scope: !8536)
!8553 = !DILocation(line: 442, column: 38, scope: !8536)
!8554 = !DILocation(line: 441, column: 59, scope: !8536)
!8555 = !DILocation(line: 441, column: 31, scope: !8536)
!8556 = !DILocation(line: 442, column: 75, scope: !8536)
!8557 = !DILocation(line: 444, column: 24, scope: !8536)
!8558 = !DILocation(line: 444, column: 27, scope: !8536)
!8559 = !DILocation(line: 444, column: 31, scope: !8536)
!8560 = !DILocation(line: 444, column: 36, scope: !8536)
!8561 = !DILocation(line: 444, column: 42, scope: !8536)
!8562 = !DILocation(line: 444, column: 47, scope: !8536)
!8563 = !DILocation(line: 444, column: 53, scope: !8536)
!8564 = !DILocation(line: 444, column: 13, scope: !8536)
!8565 = !DILocation(line: 446, column: 40, scope: !8536)
!8566 = !DILocation(line: 446, column: 44, scope: !8536)
!8567 = !DILocation(line: 446, column: 49, scope: !8536)
!8568 = !DILocation(line: 446, column: 24, scope: !8536)
!8569 = !DILocation(line: 446, column: 22, scope: !8536)
!8570 = !DILocation(line: 448, column: 17, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8536, file: !1001, line: 448, column: 17)
!8572 = !DILocation(line: 448, column: 28, scope: !8571)
!8573 = !DILocation(line: 448, column: 26, scope: !8571)
!8574 = !DILocation(line: 448, column: 17, scope: !8536)
!8575 = !DILocalVariable(name: "change", scope: !8576, file: !1001, line: 449, type: !992)
!8576 = distinct !DILexicalBlock(scope: !8571, file: !1001, line: 448, column: 38)
!8577 = !DILocation(line: 449, column: 21, scope: !8576)
!8578 = !DILocation(line: 450, column: 17, scope: !8576)
!8579 = distinct !{!8579, !8578}
!8580 = !DILocalVariable(name: "stack", scope: !8581, file: !1001, line: 450, type: !6587)
!8581 = distinct !DILexicalBlock(scope: !8576, file: !1001, line: 450, column: 20)
!8582 = !DILocation(line: 450, column: 28, scope: !8581)
!8583 = !DILocalVariable(name: "sp", scope: !8581, file: !1001, line: 450, type: !992)
!8584 = !DILocation(line: 450, column: 46, scope: !8581)
!8585 = !DILocation(line: 450, column: 46, scope: !8586)
!8586 = !DILexicalBlockFile(scope: !8581, file: !1001, discriminator: 1)
!8587 = !DILocation(line: 450, column: 67, scope: !8586)
!8588 = !DILocation(line: 450, column: 71, scope: !8586)
!8589 = !DILocation(line: 450, column: 53, scope: !8586)
!8590 = !DILocation(line: 450, column: 65, scope: !8586)
!8591 = !DILocation(line: 450, column: 91, scope: !8586)
!8592 = !DILocation(line: 450, column: 95, scope: !8586)
!8593 = !DILocation(line: 450, column: 101, scope: !8586)
!8594 = !DILocation(line: 450, column: 99, scope: !8586)
!8595 = !DILocation(line: 450, column: 113, scope: !8586)
!8596 = !DILocation(line: 450, column: 90, scope: !8586)
!8597 = !DILocation(line: 450, column: 76, scope: !8586)
!8598 = !DILocation(line: 450, column: 88, scope: !8586)
!8599 = !DILocation(line: 450, column: 117, scope: !8586)
!8600 = !DILocation(line: 450, column: 123, scope: !8601)
!8601 = !DILexicalBlockFile(scope: !8581, file: !1001, discriminator: 2)
!8602 = !DILocation(line: 450, column: 117, scope: !8601)
!8603 = !DILocalVariable(name: "start", scope: !8604, file: !1001, line: 450, type: !7323)
!8604 = distinct !DILexicalBlock(scope: !8581, file: !1001, line: 450, column: 126)
!8605 = !DILocation(line: 450, column: 137, scope: !8604)
!8606 = !DILocation(line: 450, column: 150, scope: !8607)
!8607 = !DILexicalBlockFile(scope: !8604, file: !1001, discriminator: 3)
!8608 = !DILocation(line: 450, column: 144, scope: !8607)
!8609 = !DILocation(line: 450, column: 137, scope: !8607)
!8610 = !DILocalVariable(name: "end", scope: !8604, file: !1001, line: 450, type: !7323)
!8611 = !DILocation(line: 450, column: 169, scope: !8604)
!8612 = !DILocation(line: 450, column: 182, scope: !8607)
!8613 = !DILocation(line: 450, column: 175, scope: !8607)
!8614 = !DILocation(line: 450, column: 169, scope: !8607)
!8615 = !DILocation(line: 450, column: 190, scope: !8607)
!8616 = !DILocation(line: 450, column: 196, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8604, file: !1001, discriminator: 4)
!8618 = !DILocation(line: 450, column: 204, scope: !8617)
!8619 = !DILocation(line: 450, column: 202, scope: !8617)
!8620 = !DILocation(line: 450, column: 190, scope: !8617)
!8621 = !DILocation(line: 450, column: 213, scope: !8622)
!8622 = !DILexicalBlockFile(scope: !8623, file: !1001, discriminator: 5)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !1001, line: 450, column: 213)
!8624 = distinct !DILexicalBlock(scope: !8604, file: !1001, line: 450, column: 208)
!8625 = !DILocation(line: 450, column: 221, scope: !8622)
!8626 = !DILocation(line: 450, column: 224, scope: !8622)
!8627 = !DILocation(line: 450, column: 219, scope: !8622)
!8628 = !DILocalVariable(name: "checksort", scope: !8629, file: !1001, line: 450, type: !992)
!8629 = distinct !DILexicalBlock(scope: !8623, file: !1001, line: 450, column: 228)
!8630 = !DILocation(line: 450, column: 234, scope: !8629)
!8631 = !DILocation(line: 450, column: 234, scope: !8632)
!8632 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 6)
!8633 = !DILocalVariable(name: "right", scope: !8629, file: !1001, line: 450, type: !7323)
!8634 = !DILocation(line: 450, column: 256, scope: !8629)
!8635 = !DILocation(line: 450, column: 264, scope: !8632)
!8636 = !DILocation(line: 450, column: 267, scope: !8632)
!8637 = !DILocation(line: 450, column: 256, scope: !8632)
!8638 = !DILocalVariable(name: "left", scope: !8629, file: !1001, line: 450, type: !7323)
!8639 = !DILocation(line: 450, column: 280, scope: !8629)
!8640 = !DILocation(line: 450, column: 287, scope: !8632)
!8641 = !DILocation(line: 450, column: 292, scope: !8632)
!8642 = !DILocation(line: 450, column: 280, scope: !8632)
!8643 = !DILocalVariable(name: "mid", scope: !8629, file: !1001, line: 450, type: !7323)
!8644 = !DILocation(line: 450, column: 305, scope: !8629)
!8645 = !DILocation(line: 450, column: 311, scope: !8632)
!8646 = !DILocation(line: 450, column: 321, scope: !8632)
!8647 = !DILocation(line: 450, column: 325, scope: !8632)
!8648 = !DILocation(line: 450, column: 324, scope: !8632)
!8649 = !DILocation(line: 450, column: 331, scope: !8632)
!8650 = !DILocation(line: 450, column: 317, scope: !8632)
!8651 = !DILocation(line: 450, column: 305, scope: !8632)
!8652 = !DILocation(line: 450, column: 372, scope: !8632)
!8653 = !DILocation(line: 450, column: 379, scope: !8632)
!8654 = !DILocation(line: 450, column: 340, scope: !8632)
!8655 = !DILocation(line: 450, column: 384, scope: !8632)
!8656 = !DILocation(line: 450, column: 427, scope: !8657)
!8657 = !DILexicalBlockFile(scope: !8658, file: !1001, discriminator: 7)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !1001, line: 450, column: 394)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !1001, line: 450, column: 389)
!8660 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 340)
!8661 = !DILocation(line: 450, column: 432, scope: !8657)
!8662 = !DILocation(line: 450, column: 394, scope: !8657)
!8663 = !DILocation(line: 450, column: 437, scope: !8657)
!8664 = !DILocation(line: 450, column: 442, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !8658, file: !1001, discriminator: 8)
!8666 = distinct !{!8666, !8667}
!8667 = !DILocation(line: 450, column: 442, scope: !8658)
!8668 = !DILocalVariable(name: "SWAP_tmp", scope: !8669, file: !1001, line: 450, type: !990)
!8669 = distinct !DILexicalBlock(scope: !8658, file: !1001, line: 450, column: 444)
!8670 = !DILocation(line: 450, column: 453, scope: !8669)
!8671 = !DILocation(line: 450, column: 464, scope: !8672)
!8672 = !DILexicalBlockFile(scope: !8669, file: !1001, discriminator: 9)
!8673 = !DILocation(line: 450, column: 463, scope: !8672)
!8674 = !DILocation(line: 450, column: 453, scope: !8672)
!8675 = !DILocation(line: 450, column: 476, scope: !8672)
!8676 = !DILocation(line: 450, column: 475, scope: !8672)
!8677 = !DILocation(line: 450, column: 470, scope: !8672)
!8678 = !DILocation(line: 450, column: 473, scope: !8672)
!8679 = !DILocation(line: 450, column: 491, scope: !8672)
!8680 = !DILocation(line: 450, column: 484, scope: !8672)
!8681 = !DILocation(line: 450, column: 489, scope: !8672)
!8682 = !DILocation(line: 450, column: 500, scope: !8672)
!8683 = !DILocation(line: 450, column: 500, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8669, file: !1001, discriminator: 10)
!8685 = !DILocation(line: 450, column: 516, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !8658, file: !1001, discriminator: 11)
!8687 = distinct !{!8687, !8688}
!8688 = !DILocation(line: 450, column: 516, scope: !8658)
!8689 = !DILocalVariable(name: "SWAP_tmp", scope: !8690, file: !1001, line: 450, type: !990)
!8690 = distinct !DILexicalBlock(scope: !8658, file: !1001, line: 450, column: 518)
!8691 = !DILocation(line: 450, column: 527, scope: !8690)
!8692 = !DILocation(line: 450, column: 538, scope: !8693)
!8693 = !DILexicalBlockFile(scope: !8690, file: !1001, discriminator: 12)
!8694 = !DILocation(line: 450, column: 537, scope: !8693)
!8695 = !DILocation(line: 450, column: 527, scope: !8693)
!8696 = !DILocation(line: 450, column: 550, scope: !8693)
!8697 = !DILocation(line: 450, column: 549, scope: !8693)
!8698 = !DILocation(line: 450, column: 544, scope: !8693)
!8699 = !DILocation(line: 450, column: 547, scope: !8693)
!8700 = !DILocation(line: 450, column: 565, scope: !8693)
!8701 = !DILocation(line: 450, column: 558, scope: !8693)
!8702 = !DILocation(line: 450, column: 563, scope: !8693)
!8703 = !DILocation(line: 450, column: 574, scope: !8693)
!8704 = !DILocation(line: 450, column: 585, scope: !8705)
!8705 = !DILexicalBlockFile(scope: !8659, file: !1001, discriminator: 13)
!8706 = !DILocation(line: 450, column: 627, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !8708, file: !1001, discriminator: 14)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !1001, line: 450, column: 595)
!8709 = distinct !DILexicalBlock(scope: !8660, file: !1001, line: 450, column: 590)
!8710 = !DILocation(line: 450, column: 634, scope: !8707)
!8711 = !DILocation(line: 450, column: 595, scope: !8707)
!8712 = !DILocation(line: 450, column: 639, scope: !8707)
!8713 = !DILocation(line: 450, column: 644, scope: !8714)
!8714 = !DILexicalBlockFile(scope: !8708, file: !1001, discriminator: 15)
!8715 = distinct !{!8715, !8716}
!8716 = !DILocation(line: 450, column: 644, scope: !8708)
!8717 = !DILocalVariable(name: "SWAP_tmp", scope: !8718, file: !1001, line: 450, type: !990)
!8718 = distinct !DILexicalBlock(scope: !8708, file: !1001, line: 450, column: 646)
!8719 = !DILocation(line: 450, column: 655, scope: !8718)
!8720 = !DILocation(line: 450, column: 666, scope: !8721)
!8721 = !DILexicalBlockFile(scope: !8718, file: !1001, discriminator: 16)
!8722 = !DILocation(line: 450, column: 665, scope: !8721)
!8723 = !DILocation(line: 450, column: 655, scope: !8721)
!8724 = !DILocation(line: 450, column: 678, scope: !8721)
!8725 = !DILocation(line: 450, column: 677, scope: !8721)
!8726 = !DILocation(line: 450, column: 672, scope: !8721)
!8727 = !DILocation(line: 450, column: 675, scope: !8721)
!8728 = !DILocation(line: 450, column: 693, scope: !8721)
!8729 = !DILocation(line: 450, column: 686, scope: !8721)
!8730 = !DILocation(line: 450, column: 691, scope: !8721)
!8731 = !DILocation(line: 450, column: 702, scope: !8721)
!8732 = !DILocation(line: 450, column: 702, scope: !8733)
!8733 = !DILexicalBlockFile(scope: !8718, file: !1001, discriminator: 17)
!8734 = !DILocation(line: 450, column: 727, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !8708, file: !1001, discriminator: 18)
!8736 = !DILocation(line: 450, column: 769, scope: !8737)
!8737 = !DILexicalBlockFile(scope: !8738, file: !1001, discriminator: 19)
!8738 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 737)
!8739 = !DILocation(line: 450, column: 774, scope: !8737)
!8740 = !DILocation(line: 450, column: 737, scope: !8737)
!8741 = !DILocation(line: 450, column: 779, scope: !8737)
!8742 = !DILocation(line: 450, column: 785, scope: !8743)
!8743 = !DILexicalBlockFile(scope: !8744, file: !1001, discriminator: 20)
!8744 = distinct !DILexicalBlock(scope: !8738, file: !1001, line: 450, column: 783)
!8745 = distinct !{!8745, !8746}
!8746 = !DILocation(line: 450, column: 785, scope: !8744)
!8747 = !DILocalVariable(name: "SWAP_tmp", scope: !8748, file: !1001, line: 450, type: !990)
!8748 = distinct !DILexicalBlock(scope: !8744, file: !1001, line: 450, column: 787)
!8749 = !DILocation(line: 450, column: 796, scope: !8748)
!8750 = !DILocation(line: 450, column: 807, scope: !8751)
!8751 = !DILexicalBlockFile(scope: !8748, file: !1001, discriminator: 21)
!8752 = !DILocation(line: 450, column: 806, scope: !8751)
!8753 = !DILocation(line: 450, column: 796, scope: !8751)
!8754 = !DILocation(line: 450, column: 819, scope: !8751)
!8755 = !DILocation(line: 450, column: 818, scope: !8751)
!8756 = !DILocation(line: 450, column: 813, scope: !8751)
!8757 = !DILocation(line: 450, column: 816, scope: !8751)
!8758 = !DILocation(line: 450, column: 830, scope: !8751)
!8759 = !DILocation(line: 450, column: 825, scope: !8751)
!8760 = !DILocation(line: 450, column: 828, scope: !8751)
!8761 = !DILocation(line: 450, column: 839, scope: !8751)
!8762 = !DILocation(line: 450, column: 859, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !8744, file: !1001, discriminator: 22)
!8764 = !DILocation(line: 450, column: 863, scope: !8763)
!8765 = !DILocation(line: 450, column: 868, scope: !8766)
!8766 = !DILexicalBlockFile(scope: !8767, file: !1001, discriminator: 23)
!8767 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 868)
!8768 = !DILocation(line: 450, column: 877, scope: !8766)
!8769 = !DILocation(line: 450, column: 880, scope: !8766)
!8770 = !DILocation(line: 450, column: 874, scope: !8766)
!8771 = !DILocation(line: 450, column: 884, scope: !8772)
!8772 = !DILexicalBlockFile(scope: !8767, file: !1001, discriminator: 24)
!8773 = !DILocation(line: 450, column: 891, scope: !8774)
!8774 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 25)
!8775 = distinct !{!8775, !8776}
!8776 = !DILocation(line: 450, column: 891, scope: !8629)
!8777 = !DILocalVariable(name: "SWAP_tmp", scope: !8778, file: !1001, line: 450, type: !990)
!8778 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 893)
!8779 = !DILocation(line: 450, column: 902, scope: !8778)
!8780 = !DILocation(line: 450, column: 913, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !8778, file: !1001, discriminator: 26)
!8782 = !DILocation(line: 450, column: 912, scope: !8781)
!8783 = !DILocation(line: 450, column: 902, scope: !8781)
!8784 = !DILocation(line: 450, column: 924, scope: !8781)
!8785 = !DILocation(line: 450, column: 919, scope: !8781)
!8786 = !DILocation(line: 450, column: 922, scope: !8781)
!8787 = !DILocation(line: 450, column: 942, scope: !8781)
!8788 = !DILocation(line: 450, column: 933, scope: !8781)
!8789 = !DILocation(line: 450, column: 940, scope: !8781)
!8790 = !DILocation(line: 450, column: 951, scope: !8781)
!8791 = !DILocation(line: 450, column: 962, scope: !8792)
!8792 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 27)
!8793 = !DILocation(line: 450, column: 968, scope: !8794)
!8794 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 28)
!8795 = !DILocation(line: 450, column: 976, scope: !8794)
!8796 = !DILocation(line: 450, column: 973, scope: !8794)
!8797 = !DILocation(line: 450, column: 962, scope: !8794)
!8798 = !DILocation(line: 450, column: 984, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 29)
!8800 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 982)
!8801 = !DILocation(line: 450, column: 990, scope: !8802)
!8802 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 30)
!8803 = !DILocation(line: 450, column: 996, scope: !8802)
!8804 = !DILocation(line: 450, column: 994, scope: !8802)
!8805 = !DILocation(line: 450, column: 1002, scope: !8802)
!8806 = !DILocation(line: 450, column: 1037, scope: !8807)
!8807 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 31)
!8808 = !DILocation(line: 450, column: 1043, scope: !8807)
!8809 = !DILocation(line: 450, column: 1046, scope: !8807)
!8810 = !DILocation(line: 450, column: 1005, scope: !8807)
!8811 = !DILocation(line: 450, column: 1050, scope: !8807)
!8812 = !DILocation(line: 450, column: 984, scope: !8813)
!8813 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 32)
!8814 = !DILocation(line: 450, column: 1059, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 33)
!8816 = !DILocation(line: 450, column: 984, scope: !8815)
!8817 = distinct !{!8817, !8818}
!8818 = !DILocation(line: 450, column: 984, scope: !8800)
!8819 = !DILocation(line: 450, column: 1063, scope: !8820)
!8820 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 34)
!8821 = !DILocation(line: 450, column: 1069, scope: !8822)
!8822 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 35)
!8823 = !DILocation(line: 450, column: 1075, scope: !8822)
!8824 = !DILocation(line: 450, column: 1073, scope: !8822)
!8825 = !DILocation(line: 450, column: 1081, scope: !8822)
!8826 = !DILocation(line: 450, column: 1116, scope: !8827)
!8827 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 36)
!8828 = !DILocation(line: 450, column: 1123, scope: !8827)
!8829 = !DILocation(line: 450, column: 1126, scope: !8827)
!8830 = !DILocation(line: 450, column: 1084, scope: !8827)
!8831 = !DILocation(line: 450, column: 1130, scope: !8827)
!8832 = !DILocation(line: 450, column: 1063, scope: !8833)
!8833 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 37)
!8834 = !DILocation(line: 450, column: 1140, scope: !8835)
!8835 = !DILexicalBlockFile(scope: !8800, file: !1001, discriminator: 38)
!8836 = !DILocation(line: 450, column: 1063, scope: !8835)
!8837 = distinct !{!8837, !8838}
!8838 = !DILocation(line: 450, column: 1063, scope: !8800)
!8839 = !DILocation(line: 450, column: 1147, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !8841, file: !1001, discriminator: 39)
!8841 = distinct !DILexicalBlock(scope: !8800, file: !1001, line: 450, column: 1147)
!8842 = !DILocation(line: 450, column: 1155, scope: !8840)
!8843 = !DILocation(line: 450, column: 1152, scope: !8840)
!8844 = !DILocation(line: 450, column: 1163, scope: !8845)
!8845 = !DILexicalBlockFile(scope: !8846, file: !1001, discriminator: 40)
!8846 = distinct !DILexicalBlock(scope: !8841, file: !1001, line: 450, column: 1161)
!8847 = distinct !{!8847, !8848}
!8848 = !DILocation(line: 450, column: 1163, scope: !8846)
!8849 = !DILocalVariable(name: "SWAP_tmp", scope: !8850, file: !1001, line: 450, type: !990)
!8850 = distinct !DILexicalBlock(scope: !8846, file: !1001, line: 450, column: 1165)
!8851 = !DILocation(line: 450, column: 1174, scope: !8850)
!8852 = !DILocation(line: 450, column: 1185, scope: !8853)
!8853 = !DILexicalBlockFile(scope: !8850, file: !1001, discriminator: 41)
!8854 = !DILocation(line: 450, column: 1184, scope: !8853)
!8855 = !DILocation(line: 450, column: 1174, scope: !8853)
!8856 = !DILocation(line: 450, column: 1201, scope: !8853)
!8857 = !DILocation(line: 450, column: 1200, scope: !8853)
!8858 = !DILocation(line: 450, column: 1193, scope: !8853)
!8859 = !DILocation(line: 450, column: 1198, scope: !8853)
!8860 = !DILocation(line: 450, column: 1214, scope: !8853)
!8861 = !DILocation(line: 450, column: 1208, scope: !8853)
!8862 = !DILocation(line: 450, column: 1212, scope: !8853)
!8863 = !DILocation(line: 450, column: 1223, scope: !8853)
!8864 = !DILocation(line: 450, column: 1238, scope: !8865)
!8865 = !DILexicalBlockFile(scope: !8846, file: !1001, discriminator: 42)
!8866 = !DILocation(line: 450, column: 1247, scope: !8865)
!8867 = !DILocation(line: 450, column: 1251, scope: !8865)
!8868 = !DILocation(line: 450, column: 962, scope: !8869)
!8869 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 43)
!8870 = distinct !{!8870, !8871}
!8871 = !DILocation(line: 450, column: 962, scope: !8629)
!8872 = !DILocation(line: 450, column: 1255, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 44)
!8874 = distinct !{!8874, !8875}
!8875 = !DILocation(line: 450, column: 1255, scope: !8629)
!8876 = !DILocalVariable(name: "SWAP_tmp", scope: !8877, file: !1001, line: 450, type: !990)
!8877 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 1257)
!8878 = !DILocation(line: 450, column: 1266, scope: !8877)
!8879 = !DILocation(line: 450, column: 1277, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !8877, file: !1001, discriminator: 45)
!8881 = !DILocation(line: 450, column: 1276, scope: !8880)
!8882 = !DILocation(line: 450, column: 1266, scope: !8880)
!8883 = !DILocation(line: 450, column: 1290, scope: !8880)
!8884 = !DILocation(line: 450, column: 1284, scope: !8880)
!8885 = !DILocation(line: 450, column: 1288, scope: !8880)
!8886 = !DILocation(line: 450, column: 1308, scope: !8880)
!8887 = !DILocation(line: 450, column: 1299, scope: !8880)
!8888 = !DILocation(line: 450, column: 1306, scope: !8880)
!8889 = !DILocation(line: 450, column: 1317, scope: !8880)
!8890 = !DILocation(line: 450, column: 1331, scope: !8891)
!8891 = !DILexicalBlockFile(scope: !8892, file: !1001, discriminator: 46)
!8892 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 1331)
!8893 = !DILocation(line: 450, column: 1341, scope: !8891)
!8894 = !DILocation(line: 450, column: 1345, scope: !8895)
!8895 = !DILexicalBlockFile(scope: !8892, file: !1001, discriminator: 47)
!8896 = !DILocation(line: 450, column: 1352, scope: !8895)
!8897 = !DILocation(line: 450, column: 1356, scope: !8895)
!8898 = !DILocation(line: 450, column: 1349, scope: !8895)
!8899 = !DILocation(line: 450, column: 1359, scope: !8895)
!8900 = !DILocation(line: 450, column: 1362, scope: !8901)
!8901 = !DILexicalBlockFile(scope: !8892, file: !1001, discriminator: 48)
!8902 = !DILocation(line: 450, column: 1369, scope: !8901)
!8903 = !DILocation(line: 450, column: 1366, scope: !8901)
!8904 = !DILocation(line: 450, column: 1331, scope: !8901)
!8905 = !DILocation(line: 450, column: 1382, scope: !8906)
!8906 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 49)
!8907 = distinct !DILexicalBlock(scope: !8892, file: !1001, line: 450, column: 1375)
!8908 = !DILocation(line: 450, column: 1380, scope: !8906)
!8909 = !DILocation(line: 450, column: 1389, scope: !8906)
!8910 = !DILocation(line: 450, column: 1395, scope: !8911)
!8911 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 50)
!8912 = !DILocation(line: 450, column: 1399, scope: !8911)
!8913 = !DILocation(line: 450, column: 1398, scope: !8911)
!8914 = !DILocation(line: 450, column: 1403, scope: !8911)
!8915 = !DILocation(line: 450, column: 1438, scope: !8916)
!8916 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 51)
!8917 = !DILocation(line: 450, column: 1443, scope: !8916)
!8918 = !DILocation(line: 450, column: 1446, scope: !8916)
!8919 = !DILocation(line: 450, column: 1406, scope: !8916)
!8920 = !DILocation(line: 450, column: 1450, scope: !8916)
!8921 = !DILocation(line: 450, column: 1389, scope: !8922)
!8922 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 52)
!8923 = !DILocation(line: 450, column: 1459, scope: !8924)
!8924 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 53)
!8925 = !DILocation(line: 450, column: 1389, scope: !8924)
!8926 = distinct !{!8926, !8927}
!8927 = !DILocation(line: 450, column: 1389, scope: !8907)
!8928 = !DILocation(line: 450, column: 1466, scope: !8929)
!8929 = !DILexicalBlockFile(scope: !8930, file: !1001, discriminator: 54)
!8930 = distinct !DILexicalBlock(scope: !8907, file: !1001, line: 450, column: 1466)
!8931 = !DILocation(line: 450, column: 1471, scope: !8929)
!8932 = !DILocation(line: 450, column: 1469, scope: !8929)
!8933 = !DILocation(line: 450, column: 1476, scope: !8934)
!8934 = !DILexicalBlockFile(scope: !8930, file: !1001, discriminator: 55)
!8935 = !DILocation(line: 450, column: 1483, scope: !8936)
!8936 = !DILexicalBlockFile(scope: !8907, file: !1001, discriminator: 56)
!8937 = !DILocation(line: 450, column: 1488, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8939, file: !1001, discriminator: 57)
!8939 = distinct !DILexicalBlock(scope: !8629, file: !1001, line: 450, column: 1488)
!8940 = !DILocation(line: 450, column: 1492, scope: !8938)
!8941 = !DILocation(line: 450, column: 1491, scope: !8938)
!8942 = !DILocation(line: 450, column: 1499, scope: !8938)
!8943 = !DILocation(line: 450, column: 1504, scope: !8938)
!8944 = !DILocation(line: 450, column: 1503, scope: !8938)
!8945 = !DILocation(line: 450, column: 1497, scope: !8938)
!8946 = !DILocation(line: 450, column: 1527, scope: !8947)
!8947 = !DILexicalBlockFile(scope: !8948, file: !1001, discriminator: 58)
!8948 = distinct !DILexicalBlock(scope: !8939, file: !1001, line: 450, column: 1510)
!8949 = !DILocation(line: 450, column: 1518, scope: !8947)
!8950 = !DILocation(line: 450, column: 1512, scope: !8947)
!8951 = !DILocation(line: 450, column: 1525, scope: !8947)
!8952 = !DILocation(line: 450, column: 1550, scope: !8947)
!8953 = !DILocation(line: 450, column: 1542, scope: !8947)
!8954 = !DILocation(line: 450, column: 1534, scope: !8947)
!8955 = !DILocation(line: 450, column: 1548, scope: !8947)
!8956 = !DILocation(line: 450, column: 1565, scope: !8947)
!8957 = !DILocation(line: 450, column: 1569, scope: !8947)
!8958 = !DILocation(line: 450, column: 1563, scope: !8947)
!8959 = !DILocation(line: 450, column: 1573, scope: !8947)
!8960 = !DILocation(line: 450, column: 1595, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !8962, file: !1001, discriminator: 59)
!8962 = distinct !DILexicalBlock(scope: !8939, file: !1001, line: 450, column: 1578)
!8963 = !DILocation(line: 450, column: 1599, scope: !8961)
!8964 = !DILocation(line: 450, column: 1586, scope: !8961)
!8965 = !DILocation(line: 450, column: 1580, scope: !8961)
!8966 = !DILocation(line: 450, column: 1593, scope: !8961)
!8967 = !DILocation(line: 450, column: 1619, scope: !8961)
!8968 = !DILocation(line: 450, column: 1611, scope: !8961)
!8969 = !DILocation(line: 450, column: 1603, scope: !8961)
!8970 = !DILocation(line: 450, column: 1617, scope: !8961)
!8971 = !DILocation(line: 450, column: 1630, scope: !8961)
!8972 = !DILocation(line: 450, column: 1628, scope: !8961)
!8973 = !DILocation(line: 450, column: 1639, scope: !8974)
!8974 = !DILexicalBlockFile(scope: !8629, file: !1001, discriminator: 60)
!8975 = !DILocation(line: 450, column: 1681, scope: !8976)
!8976 = !DILexicalBlockFile(scope: !8977, file: !1001, discriminator: 61)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !1001, line: 450, column: 1649)
!8978 = distinct !DILexicalBlock(scope: !8623, file: !1001, line: 450, column: 1644)
!8979 = !DILocation(line: 450, column: 1688, scope: !8976)
!8980 = !DILocation(line: 450, column: 1649, scope: !8976)
!8981 = !DILocation(line: 450, column: 1693, scope: !8976)
!8982 = !DILocation(line: 450, column: 1698, scope: !8983)
!8983 = !DILexicalBlockFile(scope: !8977, file: !1001, discriminator: 62)
!8984 = distinct !{!8984, !8985}
!8985 = !DILocation(line: 450, column: 1698, scope: !8977)
!8986 = !DILocalVariable(name: "SWAP_tmp", scope: !8987, file: !1001, line: 450, type: !990)
!8987 = distinct !DILexicalBlock(scope: !8977, file: !1001, line: 450, column: 1700)
!8988 = !DILocation(line: 450, column: 1709, scope: !8987)
!8989 = !DILocation(line: 450, column: 1720, scope: !8990)
!8990 = !DILexicalBlockFile(scope: !8987, file: !1001, discriminator: 63)
!8991 = !DILocation(line: 450, column: 1719, scope: !8990)
!8992 = !DILocation(line: 450, column: 1709, scope: !8990)
!8993 = !DILocation(line: 450, column: 1732, scope: !8990)
!8994 = !DILocation(line: 450, column: 1731, scope: !8990)
!8995 = !DILocation(line: 450, column: 1726, scope: !8990)
!8996 = !DILocation(line: 450, column: 1729, scope: !8990)
!8997 = !DILocation(line: 450, column: 1747, scope: !8990)
!8998 = !DILocation(line: 450, column: 1740, scope: !8990)
!8999 = !DILocation(line: 450, column: 1745, scope: !8990)
!9000 = !DILocation(line: 450, column: 1756, scope: !8990)
!9001 = !DILocation(line: 450, column: 1756, scope: !9002)
!9002 = !DILexicalBlockFile(scope: !8987, file: !1001, discriminator: 64)
!9003 = !DILocation(line: 450, column: 1767, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !8978, file: !1001, discriminator: 65)
!9005 = !DILocation(line: 450, column: 190, scope: !9006)
!9006 = !DILexicalBlockFile(scope: !8604, file: !1001, discriminator: 66)
!9007 = distinct !{!9007, !9008}
!9008 = !DILocation(line: 450, column: 190, scope: !8604)
!9009 = !DILocation(line: 450, column: 117, scope: !9010)
!9010 = !DILexicalBlockFile(scope: !8581, file: !1001, discriminator: 67)
!9011 = distinct !{!9011, !9012}
!9012 = !DILocation(line: 450, column: 117, scope: !8581)
!9013 = !DILocation(line: 450, column: 1779, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !8581, file: !1001, discriminator: 68)
!9015 = !DILocation(line: 451, column: 28, scope: !8576)
!9016 = !DILocation(line: 451, column: 39, scope: !8576)
!9017 = !DILocation(line: 451, column: 37, scope: !8576)
!9018 = !DILocation(line: 451, column: 55, scope: !8576)
!9019 = !DILocation(line: 451, column: 51, scope: !8576)
!9020 = !DILocation(line: 451, column: 70, scope: !8576)
!9021 = !DILocation(line: 451, column: 68, scope: !8576)
!9022 = !DILocation(line: 451, column: 78, scope: !8576)
!9023 = !DILocation(line: 451, column: 47, scope: !8576)
!9024 = !DILocation(line: 451, column: 27, scope: !8576)
!9025 = !DILocation(line: 451, column: 92, scope: !9026)
!9026 = !DILexicalBlockFile(scope: !8576, file: !1001, discriminator: 1)
!9027 = !DILocation(line: 451, column: 88, scope: !9026)
!9028 = !DILocation(line: 451, column: 107, scope: !9026)
!9029 = !DILocation(line: 451, column: 105, scope: !9026)
!9030 = !DILocation(line: 451, column: 115, scope: !9026)
!9031 = !DILocation(line: 451, column: 27, scope: !9026)
!9032 = !DILocation(line: 451, column: 124, scope: !9033)
!9033 = !DILexicalBlockFile(scope: !8576, file: !1001, discriminator: 2)
!9034 = !DILocation(line: 451, column: 135, scope: !9033)
!9035 = !DILocation(line: 451, column: 133, scope: !9033)
!9036 = !DILocation(line: 451, column: 27, scope: !9033)
!9037 = !DILocation(line: 451, column: 27, scope: !9038)
!9038 = !DILexicalBlockFile(scope: !8576, file: !1001, discriminator: 3)
!9039 = !DILocation(line: 451, column: 24, scope: !9038)
!9040 = !DILocation(line: 452, column: 27, scope: !8576)
!9041 = !DILocation(line: 452, column: 17, scope: !8576)
!9042 = !DILocation(line: 452, column: 24, scope: !8576)
!9043 = !DILocation(line: 453, column: 37, scope: !8576)
!9044 = !DILocation(line: 453, column: 21, scope: !8576)
!9045 = !DILocation(line: 453, column: 17, scope: !8576)
!9046 = !DILocation(line: 453, column: 34, scope: !8576)
!9047 = !DILocation(line: 454, column: 13, scope: !8576)
!9048 = !DILocation(line: 456, column: 13, scope: !8536)
!9049 = distinct !{!9049, !9048}
!9050 = !DILocalVariable(name: "stack", scope: !9051, file: !1001, line: 456, type: !6587)
!9051 = distinct !DILexicalBlock(scope: !8536, file: !1001, line: 456, column: 16)
!9052 = !DILocation(line: 456, column: 24, scope: !9051)
!9053 = !DILocalVariable(name: "sp", scope: !9051, file: !1001, line: 456, type: !992)
!9054 = !DILocation(line: 456, column: 42, scope: !9051)
!9055 = !DILocation(line: 456, column: 42, scope: !9056)
!9056 = !DILexicalBlockFile(scope: !9051, file: !1001, discriminator: 1)
!9057 = !DILocation(line: 456, column: 63, scope: !9056)
!9058 = !DILocation(line: 456, column: 67, scope: !9056)
!9059 = !DILocation(line: 456, column: 49, scope: !9056)
!9060 = !DILocation(line: 456, column: 61, scope: !9056)
!9061 = !DILocation(line: 456, column: 87, scope: !9056)
!9062 = !DILocation(line: 456, column: 91, scope: !9056)
!9063 = !DILocation(line: 456, column: 97, scope: !9056)
!9064 = !DILocation(line: 456, column: 95, scope: !9056)
!9065 = !DILocation(line: 456, column: 109, scope: !9056)
!9066 = !DILocation(line: 456, column: 86, scope: !9056)
!9067 = !DILocation(line: 456, column: 72, scope: !9056)
!9068 = !DILocation(line: 456, column: 84, scope: !9056)
!9069 = !DILocation(line: 456, column: 113, scope: !9056)
!9070 = !DILocation(line: 456, column: 119, scope: !9071)
!9071 = !DILexicalBlockFile(scope: !9051, file: !1001, discriminator: 2)
!9072 = !DILocation(line: 456, column: 113, scope: !9071)
!9073 = !DILocalVariable(name: "start", scope: !9074, file: !1001, line: 456, type: !7323)
!9074 = distinct !DILexicalBlock(scope: !9051, file: !1001, line: 456, column: 122)
!9075 = !DILocation(line: 456, column: 133, scope: !9074)
!9076 = !DILocation(line: 456, column: 146, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !9074, file: !1001, discriminator: 3)
!9078 = !DILocation(line: 456, column: 140, scope: !9077)
!9079 = !DILocation(line: 456, column: 133, scope: !9077)
!9080 = !DILocalVariable(name: "end", scope: !9074, file: !1001, line: 456, type: !7323)
!9081 = !DILocation(line: 456, column: 165, scope: !9074)
!9082 = !DILocation(line: 456, column: 178, scope: !9077)
!9083 = !DILocation(line: 456, column: 171, scope: !9077)
!9084 = !DILocation(line: 456, column: 165, scope: !9077)
!9085 = !DILocation(line: 456, column: 186, scope: !9077)
!9086 = !DILocation(line: 456, column: 192, scope: !9087)
!9087 = !DILexicalBlockFile(scope: !9074, file: !1001, discriminator: 4)
!9088 = !DILocation(line: 456, column: 200, scope: !9087)
!9089 = !DILocation(line: 456, column: 198, scope: !9087)
!9090 = !DILocation(line: 456, column: 186, scope: !9087)
!9091 = !DILocation(line: 456, column: 209, scope: !9092)
!9092 = !DILexicalBlockFile(scope: !9093, file: !1001, discriminator: 5)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !1001, line: 456, column: 209)
!9094 = distinct !DILexicalBlock(scope: !9074, file: !1001, line: 456, column: 204)
!9095 = !DILocation(line: 456, column: 217, scope: !9092)
!9096 = !DILocation(line: 456, column: 220, scope: !9092)
!9097 = !DILocation(line: 456, column: 215, scope: !9092)
!9098 = !DILocalVariable(name: "checksort", scope: !9099, file: !1001, line: 456, type: !992)
!9099 = distinct !DILexicalBlock(scope: !9093, file: !1001, line: 456, column: 224)
!9100 = !DILocation(line: 456, column: 230, scope: !9099)
!9101 = !DILocation(line: 456, column: 230, scope: !9102)
!9102 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 6)
!9103 = !DILocalVariable(name: "right", scope: !9099, file: !1001, line: 456, type: !7323)
!9104 = !DILocation(line: 456, column: 252, scope: !9099)
!9105 = !DILocation(line: 456, column: 260, scope: !9102)
!9106 = !DILocation(line: 456, column: 263, scope: !9102)
!9107 = !DILocation(line: 456, column: 252, scope: !9102)
!9108 = !DILocalVariable(name: "left", scope: !9099, file: !1001, line: 456, type: !7323)
!9109 = !DILocation(line: 456, column: 276, scope: !9099)
!9110 = !DILocation(line: 456, column: 283, scope: !9102)
!9111 = !DILocation(line: 456, column: 288, scope: !9102)
!9112 = !DILocation(line: 456, column: 276, scope: !9102)
!9113 = !DILocalVariable(name: "mid", scope: !9099, file: !1001, line: 456, type: !7323)
!9114 = !DILocation(line: 456, column: 301, scope: !9099)
!9115 = !DILocation(line: 456, column: 307, scope: !9102)
!9116 = !DILocation(line: 456, column: 317, scope: !9102)
!9117 = !DILocation(line: 456, column: 321, scope: !9102)
!9118 = !DILocation(line: 456, column: 320, scope: !9102)
!9119 = !DILocation(line: 456, column: 327, scope: !9102)
!9120 = !DILocation(line: 456, column: 313, scope: !9102)
!9121 = !DILocation(line: 456, column: 301, scope: !9102)
!9122 = !DILocation(line: 456, column: 368, scope: !9102)
!9123 = !DILocation(line: 456, column: 375, scope: !9102)
!9124 = !DILocation(line: 456, column: 336, scope: !9102)
!9125 = !DILocation(line: 456, column: 380, scope: !9102)
!9126 = !DILocation(line: 456, column: 423, scope: !9127)
!9127 = !DILexicalBlockFile(scope: !9128, file: !1001, discriminator: 7)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !1001, line: 456, column: 390)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !1001, line: 456, column: 385)
!9130 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 336)
!9131 = !DILocation(line: 456, column: 428, scope: !9127)
!9132 = !DILocation(line: 456, column: 390, scope: !9127)
!9133 = !DILocation(line: 456, column: 433, scope: !9127)
!9134 = !DILocation(line: 456, column: 438, scope: !9135)
!9135 = !DILexicalBlockFile(scope: !9128, file: !1001, discriminator: 8)
!9136 = distinct !{!9136, !9137}
!9137 = !DILocation(line: 456, column: 438, scope: !9128)
!9138 = !DILocalVariable(name: "SWAP_tmp", scope: !9139, file: !1001, line: 456, type: !990)
!9139 = distinct !DILexicalBlock(scope: !9128, file: !1001, line: 456, column: 440)
!9140 = !DILocation(line: 456, column: 449, scope: !9139)
!9141 = !DILocation(line: 456, column: 460, scope: !9142)
!9142 = !DILexicalBlockFile(scope: !9139, file: !1001, discriminator: 9)
!9143 = !DILocation(line: 456, column: 459, scope: !9142)
!9144 = !DILocation(line: 456, column: 449, scope: !9142)
!9145 = !DILocation(line: 456, column: 472, scope: !9142)
!9146 = !DILocation(line: 456, column: 471, scope: !9142)
!9147 = !DILocation(line: 456, column: 466, scope: !9142)
!9148 = !DILocation(line: 456, column: 469, scope: !9142)
!9149 = !DILocation(line: 456, column: 487, scope: !9142)
!9150 = !DILocation(line: 456, column: 480, scope: !9142)
!9151 = !DILocation(line: 456, column: 485, scope: !9142)
!9152 = !DILocation(line: 456, column: 496, scope: !9142)
!9153 = !DILocation(line: 456, column: 496, scope: !9154)
!9154 = !DILexicalBlockFile(scope: !9139, file: !1001, discriminator: 10)
!9155 = !DILocation(line: 456, column: 512, scope: !9156)
!9156 = !DILexicalBlockFile(scope: !9128, file: !1001, discriminator: 11)
!9157 = distinct !{!9157, !9158}
!9158 = !DILocation(line: 456, column: 512, scope: !9128)
!9159 = !DILocalVariable(name: "SWAP_tmp", scope: !9160, file: !1001, line: 456, type: !990)
!9160 = distinct !DILexicalBlock(scope: !9128, file: !1001, line: 456, column: 514)
!9161 = !DILocation(line: 456, column: 523, scope: !9160)
!9162 = !DILocation(line: 456, column: 534, scope: !9163)
!9163 = !DILexicalBlockFile(scope: !9160, file: !1001, discriminator: 12)
!9164 = !DILocation(line: 456, column: 533, scope: !9163)
!9165 = !DILocation(line: 456, column: 523, scope: !9163)
!9166 = !DILocation(line: 456, column: 546, scope: !9163)
!9167 = !DILocation(line: 456, column: 545, scope: !9163)
!9168 = !DILocation(line: 456, column: 540, scope: !9163)
!9169 = !DILocation(line: 456, column: 543, scope: !9163)
!9170 = !DILocation(line: 456, column: 561, scope: !9163)
!9171 = !DILocation(line: 456, column: 554, scope: !9163)
!9172 = !DILocation(line: 456, column: 559, scope: !9163)
!9173 = !DILocation(line: 456, column: 570, scope: !9163)
!9174 = !DILocation(line: 456, column: 581, scope: !9175)
!9175 = !DILexicalBlockFile(scope: !9129, file: !1001, discriminator: 13)
!9176 = !DILocation(line: 456, column: 623, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !9178, file: !1001, discriminator: 14)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !1001, line: 456, column: 591)
!9179 = distinct !DILexicalBlock(scope: !9130, file: !1001, line: 456, column: 586)
!9180 = !DILocation(line: 456, column: 630, scope: !9177)
!9181 = !DILocation(line: 456, column: 591, scope: !9177)
!9182 = !DILocation(line: 456, column: 635, scope: !9177)
!9183 = !DILocation(line: 456, column: 640, scope: !9184)
!9184 = !DILexicalBlockFile(scope: !9178, file: !1001, discriminator: 15)
!9185 = distinct !{!9185, !9186}
!9186 = !DILocation(line: 456, column: 640, scope: !9178)
!9187 = !DILocalVariable(name: "SWAP_tmp", scope: !9188, file: !1001, line: 456, type: !990)
!9188 = distinct !DILexicalBlock(scope: !9178, file: !1001, line: 456, column: 642)
!9189 = !DILocation(line: 456, column: 651, scope: !9188)
!9190 = !DILocation(line: 456, column: 662, scope: !9191)
!9191 = !DILexicalBlockFile(scope: !9188, file: !1001, discriminator: 16)
!9192 = !DILocation(line: 456, column: 661, scope: !9191)
!9193 = !DILocation(line: 456, column: 651, scope: !9191)
!9194 = !DILocation(line: 456, column: 674, scope: !9191)
!9195 = !DILocation(line: 456, column: 673, scope: !9191)
!9196 = !DILocation(line: 456, column: 668, scope: !9191)
!9197 = !DILocation(line: 456, column: 671, scope: !9191)
!9198 = !DILocation(line: 456, column: 689, scope: !9191)
!9199 = !DILocation(line: 456, column: 682, scope: !9191)
!9200 = !DILocation(line: 456, column: 687, scope: !9191)
!9201 = !DILocation(line: 456, column: 698, scope: !9191)
!9202 = !DILocation(line: 456, column: 698, scope: !9203)
!9203 = !DILexicalBlockFile(scope: !9188, file: !1001, discriminator: 17)
!9204 = !DILocation(line: 456, column: 723, scope: !9205)
!9205 = !DILexicalBlockFile(scope: !9178, file: !1001, discriminator: 18)
!9206 = !DILocation(line: 456, column: 765, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !9208, file: !1001, discriminator: 19)
!9208 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 733)
!9209 = !DILocation(line: 456, column: 770, scope: !9207)
!9210 = !DILocation(line: 456, column: 733, scope: !9207)
!9211 = !DILocation(line: 456, column: 775, scope: !9207)
!9212 = !DILocation(line: 456, column: 781, scope: !9213)
!9213 = !DILexicalBlockFile(scope: !9214, file: !1001, discriminator: 20)
!9214 = distinct !DILexicalBlock(scope: !9208, file: !1001, line: 456, column: 779)
!9215 = distinct !{!9215, !9216}
!9216 = !DILocation(line: 456, column: 781, scope: !9214)
!9217 = !DILocalVariable(name: "SWAP_tmp", scope: !9218, file: !1001, line: 456, type: !990)
!9218 = distinct !DILexicalBlock(scope: !9214, file: !1001, line: 456, column: 783)
!9219 = !DILocation(line: 456, column: 792, scope: !9218)
!9220 = !DILocation(line: 456, column: 803, scope: !9221)
!9221 = !DILexicalBlockFile(scope: !9218, file: !1001, discriminator: 21)
!9222 = !DILocation(line: 456, column: 802, scope: !9221)
!9223 = !DILocation(line: 456, column: 792, scope: !9221)
!9224 = !DILocation(line: 456, column: 815, scope: !9221)
!9225 = !DILocation(line: 456, column: 814, scope: !9221)
!9226 = !DILocation(line: 456, column: 809, scope: !9221)
!9227 = !DILocation(line: 456, column: 812, scope: !9221)
!9228 = !DILocation(line: 456, column: 826, scope: !9221)
!9229 = !DILocation(line: 456, column: 821, scope: !9221)
!9230 = !DILocation(line: 456, column: 824, scope: !9221)
!9231 = !DILocation(line: 456, column: 835, scope: !9221)
!9232 = !DILocation(line: 456, column: 855, scope: !9233)
!9233 = !DILexicalBlockFile(scope: !9214, file: !1001, discriminator: 22)
!9234 = !DILocation(line: 456, column: 859, scope: !9233)
!9235 = !DILocation(line: 456, column: 864, scope: !9236)
!9236 = !DILexicalBlockFile(scope: !9237, file: !1001, discriminator: 23)
!9237 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 864)
!9238 = !DILocation(line: 456, column: 873, scope: !9236)
!9239 = !DILocation(line: 456, column: 876, scope: !9236)
!9240 = !DILocation(line: 456, column: 870, scope: !9236)
!9241 = !DILocation(line: 456, column: 880, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !9237, file: !1001, discriminator: 24)
!9243 = !DILocation(line: 456, column: 887, scope: !9244)
!9244 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 25)
!9245 = distinct !{!9245, !9246}
!9246 = !DILocation(line: 456, column: 887, scope: !9099)
!9247 = !DILocalVariable(name: "SWAP_tmp", scope: !9248, file: !1001, line: 456, type: !990)
!9248 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 889)
!9249 = !DILocation(line: 456, column: 898, scope: !9248)
!9250 = !DILocation(line: 456, column: 909, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !9248, file: !1001, discriminator: 26)
!9252 = !DILocation(line: 456, column: 908, scope: !9251)
!9253 = !DILocation(line: 456, column: 898, scope: !9251)
!9254 = !DILocation(line: 456, column: 920, scope: !9251)
!9255 = !DILocation(line: 456, column: 915, scope: !9251)
!9256 = !DILocation(line: 456, column: 918, scope: !9251)
!9257 = !DILocation(line: 456, column: 938, scope: !9251)
!9258 = !DILocation(line: 456, column: 929, scope: !9251)
!9259 = !DILocation(line: 456, column: 936, scope: !9251)
!9260 = !DILocation(line: 456, column: 947, scope: !9251)
!9261 = !DILocation(line: 456, column: 958, scope: !9262)
!9262 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 27)
!9263 = !DILocation(line: 456, column: 964, scope: !9264)
!9264 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 28)
!9265 = !DILocation(line: 456, column: 972, scope: !9264)
!9266 = !DILocation(line: 456, column: 969, scope: !9264)
!9267 = !DILocation(line: 456, column: 958, scope: !9264)
!9268 = !DILocation(line: 456, column: 980, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 29)
!9270 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 978)
!9271 = !DILocation(line: 456, column: 986, scope: !9272)
!9272 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 30)
!9273 = !DILocation(line: 456, column: 992, scope: !9272)
!9274 = !DILocation(line: 456, column: 990, scope: !9272)
!9275 = !DILocation(line: 456, column: 998, scope: !9272)
!9276 = !DILocation(line: 456, column: 1033, scope: !9277)
!9277 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 31)
!9278 = !DILocation(line: 456, column: 1039, scope: !9277)
!9279 = !DILocation(line: 456, column: 1042, scope: !9277)
!9280 = !DILocation(line: 456, column: 1001, scope: !9277)
!9281 = !DILocation(line: 456, column: 1046, scope: !9277)
!9282 = !DILocation(line: 456, column: 980, scope: !9283)
!9283 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 32)
!9284 = !DILocation(line: 456, column: 1055, scope: !9285)
!9285 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 33)
!9286 = !DILocation(line: 456, column: 980, scope: !9285)
!9287 = distinct !{!9287, !9288}
!9288 = !DILocation(line: 456, column: 980, scope: !9270)
!9289 = !DILocation(line: 456, column: 1059, scope: !9290)
!9290 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 34)
!9291 = !DILocation(line: 456, column: 1065, scope: !9292)
!9292 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 35)
!9293 = !DILocation(line: 456, column: 1071, scope: !9292)
!9294 = !DILocation(line: 456, column: 1069, scope: !9292)
!9295 = !DILocation(line: 456, column: 1077, scope: !9292)
!9296 = !DILocation(line: 456, column: 1112, scope: !9297)
!9297 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 36)
!9298 = !DILocation(line: 456, column: 1119, scope: !9297)
!9299 = !DILocation(line: 456, column: 1122, scope: !9297)
!9300 = !DILocation(line: 456, column: 1080, scope: !9297)
!9301 = !DILocation(line: 456, column: 1126, scope: !9297)
!9302 = !DILocation(line: 456, column: 1059, scope: !9303)
!9303 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 37)
!9304 = !DILocation(line: 456, column: 1136, scope: !9305)
!9305 = !DILexicalBlockFile(scope: !9270, file: !1001, discriminator: 38)
!9306 = !DILocation(line: 456, column: 1059, scope: !9305)
!9307 = distinct !{!9307, !9308}
!9308 = !DILocation(line: 456, column: 1059, scope: !9270)
!9309 = !DILocation(line: 456, column: 1143, scope: !9310)
!9310 = !DILexicalBlockFile(scope: !9311, file: !1001, discriminator: 39)
!9311 = distinct !DILexicalBlock(scope: !9270, file: !1001, line: 456, column: 1143)
!9312 = !DILocation(line: 456, column: 1151, scope: !9310)
!9313 = !DILocation(line: 456, column: 1148, scope: !9310)
!9314 = !DILocation(line: 456, column: 1159, scope: !9315)
!9315 = !DILexicalBlockFile(scope: !9316, file: !1001, discriminator: 40)
!9316 = distinct !DILexicalBlock(scope: !9311, file: !1001, line: 456, column: 1157)
!9317 = distinct !{!9317, !9318}
!9318 = !DILocation(line: 456, column: 1159, scope: !9316)
!9319 = !DILocalVariable(name: "SWAP_tmp", scope: !9320, file: !1001, line: 456, type: !990)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !1001, line: 456, column: 1161)
!9321 = !DILocation(line: 456, column: 1170, scope: !9320)
!9322 = !DILocation(line: 456, column: 1181, scope: !9323)
!9323 = !DILexicalBlockFile(scope: !9320, file: !1001, discriminator: 41)
!9324 = !DILocation(line: 456, column: 1180, scope: !9323)
!9325 = !DILocation(line: 456, column: 1170, scope: !9323)
!9326 = !DILocation(line: 456, column: 1197, scope: !9323)
!9327 = !DILocation(line: 456, column: 1196, scope: !9323)
!9328 = !DILocation(line: 456, column: 1189, scope: !9323)
!9329 = !DILocation(line: 456, column: 1194, scope: !9323)
!9330 = !DILocation(line: 456, column: 1210, scope: !9323)
!9331 = !DILocation(line: 456, column: 1204, scope: !9323)
!9332 = !DILocation(line: 456, column: 1208, scope: !9323)
!9333 = !DILocation(line: 456, column: 1219, scope: !9323)
!9334 = !DILocation(line: 456, column: 1234, scope: !9335)
!9335 = !DILexicalBlockFile(scope: !9316, file: !1001, discriminator: 42)
!9336 = !DILocation(line: 456, column: 1243, scope: !9335)
!9337 = !DILocation(line: 456, column: 1247, scope: !9335)
!9338 = !DILocation(line: 456, column: 958, scope: !9339)
!9339 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 43)
!9340 = distinct !{!9340, !9341}
!9341 = !DILocation(line: 456, column: 958, scope: !9099)
!9342 = !DILocation(line: 456, column: 1251, scope: !9343)
!9343 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 44)
!9344 = distinct !{!9344, !9345}
!9345 = !DILocation(line: 456, column: 1251, scope: !9099)
!9346 = !DILocalVariable(name: "SWAP_tmp", scope: !9347, file: !1001, line: 456, type: !990)
!9347 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 1253)
!9348 = !DILocation(line: 456, column: 1262, scope: !9347)
!9349 = !DILocation(line: 456, column: 1273, scope: !9350)
!9350 = !DILexicalBlockFile(scope: !9347, file: !1001, discriminator: 45)
!9351 = !DILocation(line: 456, column: 1272, scope: !9350)
!9352 = !DILocation(line: 456, column: 1262, scope: !9350)
!9353 = !DILocation(line: 456, column: 1286, scope: !9350)
!9354 = !DILocation(line: 456, column: 1280, scope: !9350)
!9355 = !DILocation(line: 456, column: 1284, scope: !9350)
!9356 = !DILocation(line: 456, column: 1304, scope: !9350)
!9357 = !DILocation(line: 456, column: 1295, scope: !9350)
!9358 = !DILocation(line: 456, column: 1302, scope: !9350)
!9359 = !DILocation(line: 456, column: 1313, scope: !9350)
!9360 = !DILocation(line: 456, column: 1327, scope: !9361)
!9361 = !DILexicalBlockFile(scope: !9362, file: !1001, discriminator: 46)
!9362 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 1327)
!9363 = !DILocation(line: 456, column: 1337, scope: !9361)
!9364 = !DILocation(line: 456, column: 1341, scope: !9365)
!9365 = !DILexicalBlockFile(scope: !9362, file: !1001, discriminator: 47)
!9366 = !DILocation(line: 456, column: 1348, scope: !9365)
!9367 = !DILocation(line: 456, column: 1352, scope: !9365)
!9368 = !DILocation(line: 456, column: 1345, scope: !9365)
!9369 = !DILocation(line: 456, column: 1355, scope: !9365)
!9370 = !DILocation(line: 456, column: 1358, scope: !9371)
!9371 = !DILexicalBlockFile(scope: !9362, file: !1001, discriminator: 48)
!9372 = !DILocation(line: 456, column: 1365, scope: !9371)
!9373 = !DILocation(line: 456, column: 1362, scope: !9371)
!9374 = !DILocation(line: 456, column: 1327, scope: !9371)
!9375 = !DILocation(line: 456, column: 1378, scope: !9376)
!9376 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 49)
!9377 = distinct !DILexicalBlock(scope: !9362, file: !1001, line: 456, column: 1371)
!9378 = !DILocation(line: 456, column: 1376, scope: !9376)
!9379 = !DILocation(line: 456, column: 1385, scope: !9376)
!9380 = !DILocation(line: 456, column: 1391, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 50)
!9382 = !DILocation(line: 456, column: 1395, scope: !9381)
!9383 = !DILocation(line: 456, column: 1394, scope: !9381)
!9384 = !DILocation(line: 456, column: 1399, scope: !9381)
!9385 = !DILocation(line: 456, column: 1434, scope: !9386)
!9386 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 51)
!9387 = !DILocation(line: 456, column: 1439, scope: !9386)
!9388 = !DILocation(line: 456, column: 1442, scope: !9386)
!9389 = !DILocation(line: 456, column: 1402, scope: !9386)
!9390 = !DILocation(line: 456, column: 1446, scope: !9386)
!9391 = !DILocation(line: 456, column: 1385, scope: !9392)
!9392 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 52)
!9393 = !DILocation(line: 456, column: 1455, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 53)
!9395 = !DILocation(line: 456, column: 1385, scope: !9394)
!9396 = distinct !{!9396, !9397}
!9397 = !DILocation(line: 456, column: 1385, scope: !9377)
!9398 = !DILocation(line: 456, column: 1462, scope: !9399)
!9399 = !DILexicalBlockFile(scope: !9400, file: !1001, discriminator: 54)
!9400 = distinct !DILexicalBlock(scope: !9377, file: !1001, line: 456, column: 1462)
!9401 = !DILocation(line: 456, column: 1467, scope: !9399)
!9402 = !DILocation(line: 456, column: 1465, scope: !9399)
!9403 = !DILocation(line: 456, column: 1472, scope: !9404)
!9404 = !DILexicalBlockFile(scope: !9400, file: !1001, discriminator: 55)
!9405 = !DILocation(line: 456, column: 1479, scope: !9406)
!9406 = !DILexicalBlockFile(scope: !9377, file: !1001, discriminator: 56)
!9407 = !DILocation(line: 456, column: 1484, scope: !9408)
!9408 = !DILexicalBlockFile(scope: !9409, file: !1001, discriminator: 57)
!9409 = distinct !DILexicalBlock(scope: !9099, file: !1001, line: 456, column: 1484)
!9410 = !DILocation(line: 456, column: 1488, scope: !9408)
!9411 = !DILocation(line: 456, column: 1487, scope: !9408)
!9412 = !DILocation(line: 456, column: 1495, scope: !9408)
!9413 = !DILocation(line: 456, column: 1500, scope: !9408)
!9414 = !DILocation(line: 456, column: 1499, scope: !9408)
!9415 = !DILocation(line: 456, column: 1493, scope: !9408)
!9416 = !DILocation(line: 456, column: 1523, scope: !9417)
!9417 = !DILexicalBlockFile(scope: !9418, file: !1001, discriminator: 58)
!9418 = distinct !DILexicalBlock(scope: !9409, file: !1001, line: 456, column: 1506)
!9419 = !DILocation(line: 456, column: 1514, scope: !9417)
!9420 = !DILocation(line: 456, column: 1508, scope: !9417)
!9421 = !DILocation(line: 456, column: 1521, scope: !9417)
!9422 = !DILocation(line: 456, column: 1546, scope: !9417)
!9423 = !DILocation(line: 456, column: 1538, scope: !9417)
!9424 = !DILocation(line: 456, column: 1530, scope: !9417)
!9425 = !DILocation(line: 456, column: 1544, scope: !9417)
!9426 = !DILocation(line: 456, column: 1561, scope: !9417)
!9427 = !DILocation(line: 456, column: 1565, scope: !9417)
!9428 = !DILocation(line: 456, column: 1559, scope: !9417)
!9429 = !DILocation(line: 456, column: 1569, scope: !9417)
!9430 = !DILocation(line: 456, column: 1591, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9432, file: !1001, discriminator: 59)
!9432 = distinct !DILexicalBlock(scope: !9409, file: !1001, line: 456, column: 1574)
!9433 = !DILocation(line: 456, column: 1595, scope: !9431)
!9434 = !DILocation(line: 456, column: 1582, scope: !9431)
!9435 = !DILocation(line: 456, column: 1576, scope: !9431)
!9436 = !DILocation(line: 456, column: 1589, scope: !9431)
!9437 = !DILocation(line: 456, column: 1615, scope: !9431)
!9438 = !DILocation(line: 456, column: 1607, scope: !9431)
!9439 = !DILocation(line: 456, column: 1599, scope: !9431)
!9440 = !DILocation(line: 456, column: 1613, scope: !9431)
!9441 = !DILocation(line: 456, column: 1626, scope: !9431)
!9442 = !DILocation(line: 456, column: 1624, scope: !9431)
!9443 = !DILocation(line: 456, column: 1635, scope: !9444)
!9444 = !DILexicalBlockFile(scope: !9099, file: !1001, discriminator: 60)
!9445 = !DILocation(line: 456, column: 1677, scope: !9446)
!9446 = !DILexicalBlockFile(scope: !9447, file: !1001, discriminator: 61)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !1001, line: 456, column: 1645)
!9448 = distinct !DILexicalBlock(scope: !9093, file: !1001, line: 456, column: 1640)
!9449 = !DILocation(line: 456, column: 1684, scope: !9446)
!9450 = !DILocation(line: 456, column: 1645, scope: !9446)
!9451 = !DILocation(line: 456, column: 1689, scope: !9446)
!9452 = !DILocation(line: 456, column: 1694, scope: !9453)
!9453 = !DILexicalBlockFile(scope: !9447, file: !1001, discriminator: 62)
!9454 = distinct !{!9454, !9455}
!9455 = !DILocation(line: 456, column: 1694, scope: !9447)
!9456 = !DILocalVariable(name: "SWAP_tmp", scope: !9457, file: !1001, line: 456, type: !990)
!9457 = distinct !DILexicalBlock(scope: !9447, file: !1001, line: 456, column: 1696)
!9458 = !DILocation(line: 456, column: 1705, scope: !9457)
!9459 = !DILocation(line: 456, column: 1716, scope: !9460)
!9460 = !DILexicalBlockFile(scope: !9457, file: !1001, discriminator: 63)
!9461 = !DILocation(line: 456, column: 1715, scope: !9460)
!9462 = !DILocation(line: 456, column: 1705, scope: !9460)
!9463 = !DILocation(line: 456, column: 1728, scope: !9460)
!9464 = !DILocation(line: 456, column: 1727, scope: !9460)
!9465 = !DILocation(line: 456, column: 1722, scope: !9460)
!9466 = !DILocation(line: 456, column: 1725, scope: !9460)
!9467 = !DILocation(line: 456, column: 1743, scope: !9460)
!9468 = !DILocation(line: 456, column: 1736, scope: !9460)
!9469 = !DILocation(line: 456, column: 1741, scope: !9460)
!9470 = !DILocation(line: 456, column: 1752, scope: !9460)
!9471 = !DILocation(line: 456, column: 1752, scope: !9472)
!9472 = !DILexicalBlockFile(scope: !9457, file: !1001, discriminator: 64)
!9473 = !DILocation(line: 456, column: 1763, scope: !9474)
!9474 = !DILexicalBlockFile(scope: !9448, file: !1001, discriminator: 65)
!9475 = !DILocation(line: 456, column: 186, scope: !9476)
!9476 = !DILexicalBlockFile(scope: !9074, file: !1001, discriminator: 66)
!9477 = distinct !{!9477, !9478}
!9478 = !DILocation(line: 456, column: 186, scope: !9074)
!9479 = !DILocation(line: 456, column: 113, scope: !9480)
!9480 = !DILexicalBlockFile(scope: !9051, file: !1001, discriminator: 67)
!9481 = distinct !{!9481, !9482}
!9482 = !DILocation(line: 456, column: 113, scope: !9051)
!9483 = !DILocation(line: 456, column: 1775, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !9051, file: !1001, discriminator: 68)
!9485 = !DILocation(line: 458, column: 22, scope: !8536)
!9486 = !DILocation(line: 458, column: 27, scope: !8536)
!9487 = !DILocation(line: 458, column: 13, scope: !8536)
!9488 = !DILocation(line: 458, column: 20, scope: !8536)
!9489 = !DILocation(line: 459, column: 20, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !8536, file: !1001, line: 459, column: 13)
!9491 = !DILocation(line: 459, column: 18, scope: !9490)
!9492 = !DILocation(line: 459, column: 25, scope: !9493)
!9493 = !DILexicalBlockFile(scope: !9494, file: !1001, discriminator: 1)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !1001, line: 459, column: 13)
!9495 = !DILocation(line: 459, column: 30, scope: !9493)
!9496 = !DILocation(line: 459, column: 27, scope: !9493)
!9497 = !DILocation(line: 459, column: 13, scope: !9493)
!9498 = !DILocation(line: 460, column: 25, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !1001, line: 460, column: 21)
!9500 = distinct !DILexicalBlock(scope: !9494, file: !1001, line: 459, column: 48)
!9501 = !DILocation(line: 460, column: 21, scope: !9499)
!9502 = !DILocation(line: 460, column: 28, scope: !9499)
!9503 = !DILocation(line: 460, column: 21, scope: !9500)
!9504 = !DILocation(line: 461, column: 28, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9499, file: !1001, line: 460, column: 34)
!9506 = !DILocation(line: 461, column: 32, scope: !9505)
!9507 = !DILocation(line: 461, column: 69, scope: !9505)
!9508 = !DILocation(line: 461, column: 76, scope: !9505)
!9509 = !DILocation(line: 461, column: 72, scope: !9505)
!9510 = !DILocation(line: 461, column: 21, scope: !9505)
!9511 = !DILocation(line: 462, column: 21, scope: !9505)
!9512 = !DILocation(line: 464, column: 31, scope: !9500)
!9513 = !DILocation(line: 464, column: 32, scope: !9500)
!9514 = !DILocation(line: 464, column: 27, scope: !9500)
!9515 = !DILocation(line: 464, column: 21, scope: !9500)
!9516 = !DILocation(line: 464, column: 17, scope: !9500)
!9517 = !DILocation(line: 464, column: 24, scope: !9500)
!9518 = !DILocation(line: 465, column: 13, scope: !9500)
!9519 = !DILocation(line: 459, column: 44, scope: !9520)
!9520 = !DILexicalBlockFile(scope: !9494, file: !1001, discriminator: 2)
!9521 = !DILocation(line: 459, column: 13, scope: !9520)
!9522 = distinct !{!9522, !9523}
!9523 = !DILocation(line: 459, column: 13, scope: !8536)
!9524 = !DILocation(line: 467, column: 29, scope: !8536)
!9525 = !DILocation(line: 467, column: 43, scope: !8536)
!9526 = !DILocation(line: 467, column: 41, scope: !8536)
!9527 = !DILocation(line: 467, column: 13, scope: !8536)
!9528 = !DILocation(line: 467, column: 18, scope: !8536)
!9529 = !DILocation(line: 467, column: 27, scope: !8536)
!9530 = !DILocation(line: 468, column: 32, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !8536, file: !1001, line: 468, column: 17)
!9532 = !DILocation(line: 468, column: 36, scope: !9531)
!9533 = !DILocation(line: 468, column: 43, scope: !9531)
!9534 = !DILocation(line: 468, column: 48, scope: !9531)
!9535 = !DILocation(line: 468, column: 58, scope: !9531)
!9536 = !DILocation(line: 468, column: 63, scope: !9531)
!9537 = !DILocation(line: 468, column: 79, scope: !9531)
!9538 = !DILocation(line: 468, column: 17, scope: !9531)
!9539 = !DILocation(line: 468, column: 17, scope: !8536)
!9540 = !DILocation(line: 469, column: 17, scope: !9531)
!9541 = !DILocation(line: 470, column: 21, scope: !8536)
!9542 = !DILocation(line: 470, column: 26, scope: !8536)
!9543 = !DILocation(line: 470, column: 13, scope: !8536)
!9544 = !DILocation(line: 471, column: 21, scope: !8536)
!9545 = !DILocation(line: 471, column: 33, scope: !8536)
!9546 = !DILocation(line: 471, column: 20, scope: !8536)
!9547 = !DILocation(line: 471, column: 38, scope: !8536)
!9548 = !DILocation(line: 472, column: 35, scope: !8536)
!9549 = !DILocation(line: 472, column: 47, scope: !8536)
!9550 = !DILocation(line: 472, column: 21, scope: !8536)
!9551 = !DILocation(line: 472, column: 26, scope: !8536)
!9552 = !DILocation(line: 472, column: 13, scope: !8536)
!9553 = !DILocation(line: 472, column: 53, scope: !8536)
!9554 = !DILocation(line: 472, column: 57, scope: !8536)
!9555 = !DILocation(line: 473, column: 21, scope: !8536)
!9556 = !DILocation(line: 473, column: 33, scope: !8536)
!9557 = !DILocation(line: 475, column: 9, scope: !8536)
!9558 = !DILocation(line: 476, column: 29, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !8533, file: !1001, line: 475, column: 16)
!9560 = !DILocation(line: 476, column: 13, scope: !9559)
!9561 = !DILocation(line: 476, column: 18, scope: !9559)
!9562 = !DILocation(line: 476, column: 27, scope: !9559)
!9563 = !DILocation(line: 477, column: 32, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9559, file: !1001, line: 477, column: 17)
!9565 = !DILocation(line: 477, column: 36, scope: !9564)
!9566 = !DILocation(line: 477, column: 43, scope: !9564)
!9567 = !DILocation(line: 477, column: 48, scope: !9564)
!9568 = !DILocation(line: 477, column: 58, scope: !9564)
!9569 = !DILocation(line: 477, column: 63, scope: !9564)
!9570 = !DILocation(line: 477, column: 79, scope: !9564)
!9571 = !DILocation(line: 477, column: 17, scope: !9564)
!9572 = !DILocation(line: 477, column: 17, scope: !9559)
!9573 = !DILocation(line: 478, column: 17, scope: !9564)
!9574 = !DILocation(line: 479, column: 20, scope: !9559)
!9575 = !DILocation(line: 479, column: 25, scope: !9559)
!9576 = !DILocation(line: 479, column: 13, scope: !9559)
!9577 = !DILocation(line: 479, column: 41, scope: !9559)
!9578 = !DILocation(line: 479, column: 53, scope: !9559)
!9579 = !DILocation(line: 479, column: 40, scope: !9559)
!9580 = !DILocation(line: 479, column: 58, scope: !9559)
!9581 = !DILocation(line: 483, column: 5, scope: !7192)
!9582 = !DILocation(line: 484, column: 1, scope: !7192)
!9583 = distinct !DISubprogram(name: "sbr_make_f_derived", scope: !1001, file: !1001, line: 545, type: !9584, isLocal: true, isDefinition: true, scopeLine: 546, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!992, !1504, !1123}
!9586 = !DILocalVariable(name: "ac", arg: 1, scope: !9583, file: !1001, line: 545, type: !1504)
!9587 = !DILocation(line: 545, column: 43, scope: !9583)
!9588 = !DILocalVariable(name: "sbr", arg: 2, scope: !9583, file: !1001, line: 545, type: !1123)
!9589 = !DILocation(line: 545, column: 72, scope: !9583)
!9590 = !DILocalVariable(name: "k", scope: !9583, file: !1001, line: 547, type: !992)
!9591 = !DILocation(line: 547, column: 9, scope: !9583)
!9592 = !DILocalVariable(name: "temp", scope: !9583, file: !1001, line: 547, type: !992)
!9593 = !DILocation(line: 547, column: 12, scope: !9583)
!9594 = !DILocation(line: 552, column: 17, scope: !9583)
!9595 = !DILocation(line: 552, column: 22, scope: !9583)
!9596 = !DILocation(line: 552, column: 33, scope: !9583)
!9597 = !DILocation(line: 552, column: 38, scope: !9583)
!9598 = !DILocation(line: 552, column: 54, scope: !9583)
!9599 = !DILocation(line: 552, column: 31, scope: !9583)
!9600 = !DILocation(line: 552, column: 5, scope: !9583)
!9601 = !DILocation(line: 552, column: 10, scope: !9583)
!9602 = !DILocation(line: 552, column: 15, scope: !9583)
!9603 = !DILocation(line: 553, column: 18, scope: !9583)
!9604 = !DILocation(line: 553, column: 23, scope: !9583)
!9605 = !DILocation(line: 553, column: 28, scope: !9583)
!9606 = !DILocation(line: 553, column: 33, scope: !9583)
!9607 = !DILocation(line: 553, column: 5, scope: !9583)
!9608 = !DILocation(line: 553, column: 10, scope: !9583)
!9609 = !DILocation(line: 553, column: 15, scope: !9583)
!9610 = !DILocation(line: 555, column: 12, scope: !9583)
!9611 = !DILocation(line: 555, column: 17, scope: !9583)
!9612 = !DILocation(line: 555, column: 5, scope: !9583)
!9613 = !DILocation(line: 555, column: 45, scope: !9583)
!9614 = !DILocation(line: 555, column: 50, scope: !9583)
!9615 = !DILocation(line: 555, column: 66, scope: !9583)
!9616 = !DILocation(line: 555, column: 31, scope: !9583)
!9617 = !DILocation(line: 555, column: 36, scope: !9583)
!9618 = !DILocation(line: 556, column: 13, scope: !9583)
!9619 = !DILocation(line: 556, column: 18, scope: !9583)
!9620 = !DILocation(line: 556, column: 23, scope: !9583)
!9621 = !DILocation(line: 556, column: 12, scope: !9583)
!9622 = !DILocation(line: 556, column: 28, scope: !9583)
!9623 = !DILocation(line: 557, column: 34, scope: !9583)
!9624 = !DILocation(line: 557, column: 39, scope: !9583)
!9625 = !DILocation(line: 557, column: 17, scope: !9583)
!9626 = !DILocation(line: 557, column: 22, scope: !9583)
!9627 = !DILocation(line: 557, column: 47, scope: !9583)
!9628 = !DILocation(line: 557, column: 52, scope: !9583)
!9629 = !DILocation(line: 557, column: 45, scope: !9583)
!9630 = !DILocation(line: 557, column: 5, scope: !9583)
!9631 = !DILocation(line: 557, column: 10, scope: !9583)
!9632 = !DILocation(line: 557, column: 15, scope: !9583)
!9633 = !DILocation(line: 558, column: 18, scope: !9583)
!9634 = !DILocation(line: 558, column: 23, scope: !9583)
!9635 = !DILocation(line: 558, column: 5, scope: !9583)
!9636 = !DILocation(line: 558, column: 10, scope: !9583)
!9637 = !DILocation(line: 558, column: 16, scope: !9583)
!9638 = !DILocation(line: 561, column: 9, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 561, column: 9)
!9640 = !DILocation(line: 561, column: 14, scope: !9639)
!9641 = !DILocation(line: 561, column: 22, scope: !9639)
!9642 = !DILocation(line: 561, column: 27, scope: !9639)
!9643 = !DILocation(line: 561, column: 20, scope: !9639)
!9644 = !DILocation(line: 561, column: 32, scope: !9639)
!9645 = !DILocation(line: 561, column: 9, scope: !9583)
!9646 = !DILocation(line: 562, column: 16, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9639, file: !1001, line: 561, column: 38)
!9648 = !DILocation(line: 562, column: 20, scope: !9647)
!9649 = !DILocation(line: 563, column: 56, scope: !9647)
!9650 = !DILocation(line: 563, column: 61, scope: !9647)
!9651 = !DILocation(line: 563, column: 69, scope: !9647)
!9652 = !DILocation(line: 563, column: 74, scope: !9647)
!9653 = !DILocation(line: 563, column: 67, scope: !9647)
!9654 = !DILocation(line: 562, column: 9, scope: !9647)
!9655 = !DILocation(line: 564, column: 9, scope: !9647)
!9656 = !DILocation(line: 566, column: 9, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 566, column: 9)
!9658 = !DILocation(line: 566, column: 14, scope: !9657)
!9659 = !DILocation(line: 566, column: 20, scope: !9657)
!9660 = !DILocation(line: 566, column: 9, scope: !9583)
!9661 = !DILocation(line: 567, column: 16, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9657, file: !1001, line: 566, column: 26)
!9663 = !DILocation(line: 567, column: 20, scope: !9662)
!9664 = !DILocation(line: 567, column: 72, scope: !9662)
!9665 = !DILocation(line: 567, column: 77, scope: !9662)
!9666 = !DILocation(line: 567, column: 9, scope: !9662)
!9667 = !DILocation(line: 568, column: 9, scope: !9662)
!9668 = !DILocation(line: 571, column: 26, scope: !9583)
!9669 = !DILocation(line: 571, column: 31, scope: !9583)
!9670 = !DILocation(line: 571, column: 5, scope: !9583)
!9671 = !DILocation(line: 571, column: 10, scope: !9583)
!9672 = !DILocation(line: 571, column: 24, scope: !9583)
!9673 = !DILocation(line: 572, column: 12, scope: !9583)
!9674 = !DILocation(line: 572, column: 17, scope: !9583)
!9675 = !DILocation(line: 572, column: 22, scope: !9583)
!9676 = !DILocation(line: 572, column: 10, scope: !9583)
!9677 = !DILocation(line: 573, column: 12, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 573, column: 5)
!9679 = !DILocation(line: 573, column: 10, scope: !9678)
!9680 = !DILocation(line: 573, column: 17, scope: !9681)
!9681 = !DILexicalBlockFile(scope: !9682, file: !1001, discriminator: 1)
!9682 = distinct !DILexicalBlock(scope: !9678, file: !1001, line: 573, column: 5)
!9683 = !DILocation(line: 573, column: 22, scope: !9681)
!9684 = !DILocation(line: 573, column: 27, scope: !9681)
!9685 = !DILocation(line: 573, column: 19, scope: !9681)
!9686 = !DILocation(line: 573, column: 5, scope: !9681)
!9687 = !DILocation(line: 574, column: 51, scope: !9682)
!9688 = !DILocation(line: 574, column: 49, scope: !9682)
!9689 = !DILocation(line: 574, column: 55, scope: !9682)
!9690 = !DILocation(line: 574, column: 53, scope: !9682)
!9691 = !DILocation(line: 574, column: 30, scope: !9682)
!9692 = !DILocation(line: 574, column: 35, scope: !9682)
!9693 = !DILocation(line: 574, column: 25, scope: !9682)
!9694 = !DILocation(line: 574, column: 9, scope: !9682)
!9695 = !DILocation(line: 574, column: 14, scope: !9682)
!9696 = !DILocation(line: 574, column: 28, scope: !9682)
!9697 = !DILocation(line: 573, column: 34, scope: !9698)
!9698 = !DILexicalBlockFile(scope: !9682, file: !1001, discriminator: 2)
!9699 = !DILocation(line: 573, column: 5, scope: !9698)
!9700 = distinct !{!9700, !9701}
!9701 = !DILocation(line: 573, column: 5, scope: !9583)
!9702 = !DILocation(line: 589, column: 31, scope: !9583)
!9703 = !DILocation(line: 589, column: 36, scope: !9583)
!9704 = !DILocation(line: 589, column: 52, scope: !9583)
!9705 = !DILocation(line: 589, column: 75, scope: !9583)
!9706 = !DILocation(line: 589, column: 80, scope: !9583)
!9707 = !DILocation(line: 589, column: 94, scope: !9583)
!9708 = !DILocation(line: 589, column: 99, scope: !9583)
!9709 = !DILocation(line: 589, column: 87, scope: !9583)
!9710 = !DILocation(line: 589, column: 85, scope: !9583)
!9711 = !DILocation(line: 589, column: 69, scope: !9583)
!9712 = !DILocation(line: 589, column: 67, scope: !9583)
!9713 = !DILocation(line: 589, column: 24, scope: !9714)
!9714 = !DILexicalBlockFile(scope: !9583, file: !1001, discriminator: 4)
!9715 = !DILocation(line: 589, column: 21, scope: !9583)
!9716 = !DILocation(line: 589, column: 17, scope: !9583)
!9717 = !DILocation(line: 589, column: 17, scope: !9718)
!9718 = !DILexicalBlockFile(scope: !9583, file: !1001, discriminator: 1)
!9719 = !DILocation(line: 589, column: 124, scope: !9720)
!9720 = !DILexicalBlockFile(scope: !9583, file: !1001, discriminator: 2)
!9721 = !DILocation(line: 589, column: 129, scope: !9720)
!9722 = !DILocation(line: 589, column: 145, scope: !9720)
!9723 = !DILocation(line: 589, column: 168, scope: !9720)
!9724 = !DILocation(line: 589, column: 173, scope: !9720)
!9725 = !DILocation(line: 589, column: 187, scope: !9720)
!9726 = !DILocation(line: 589, column: 192, scope: !9720)
!9727 = !DILocation(line: 589, column: 180, scope: !9720)
!9728 = !DILocation(line: 589, column: 178, scope: !9720)
!9729 = !DILocation(line: 589, column: 162, scope: !9720)
!9730 = !DILocation(line: 589, column: 160, scope: !9720)
!9731 = !DILocation(line: 589, column: 117, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !9720, file: !1001, discriminator: 5)
!9733 = !DILocation(line: 589, column: 17, scope: !9720)
!9734 = !DILocation(line: 589, column: 17, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !9583, file: !1001, discriminator: 3)
!9736 = !DILocation(line: 589, column: 16, scope: !9735)
!9737 = !DILocation(line: 589, column: 5, scope: !9735)
!9738 = !DILocation(line: 589, column: 10, scope: !9735)
!9739 = !DILocation(line: 589, column: 14, scope: !9735)
!9740 = !DILocation(line: 593, column: 9, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 593, column: 9)
!9742 = !DILocation(line: 593, column: 14, scope: !9741)
!9743 = !DILocation(line: 593, column: 18, scope: !9741)
!9744 = !DILocation(line: 593, column: 9, scope: !9583)
!9745 = !DILocation(line: 594, column: 16, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9741, file: !1001, line: 593, column: 23)
!9747 = !DILocation(line: 594, column: 20, scope: !9746)
!9748 = !DILocation(line: 594, column: 75, scope: !9746)
!9749 = !DILocation(line: 594, column: 80, scope: !9746)
!9750 = !DILocation(line: 594, column: 9, scope: !9746)
!9751 = !DILocation(line: 595, column: 9, scope: !9746)
!9752 = !DILocation(line: 598, column: 28, scope: !9583)
!9753 = !DILocation(line: 598, column: 33, scope: !9583)
!9754 = !DILocation(line: 598, column: 5, scope: !9583)
!9755 = !DILocation(line: 598, column: 10, scope: !9583)
!9756 = !DILocation(line: 598, column: 26, scope: !9583)
!9757 = !DILocation(line: 599, column: 10, scope: !9583)
!9758 = !DILocation(line: 600, column: 12, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 600, column: 5)
!9760 = !DILocation(line: 600, column: 10, scope: !9759)
!9761 = !DILocation(line: 600, column: 17, scope: !9762)
!9762 = !DILexicalBlockFile(scope: !9763, file: !1001, discriminator: 1)
!9763 = distinct !DILexicalBlock(scope: !9759, file: !1001, line: 600, column: 5)
!9764 = !DILocation(line: 600, column: 22, scope: !9762)
!9765 = !DILocation(line: 600, column: 27, scope: !9762)
!9766 = !DILocation(line: 600, column: 19, scope: !9762)
!9767 = !DILocation(line: 600, column: 5, scope: !9762)
!9768 = !DILocation(line: 601, column: 18, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9763, file: !1001, line: 600, column: 37)
!9770 = !DILocation(line: 601, column: 23, scope: !9769)
!9771 = !DILocation(line: 601, column: 30, scope: !9769)
!9772 = !DILocation(line: 601, column: 28, scope: !9769)
!9773 = !DILocation(line: 601, column: 39, scope: !9769)
!9774 = !DILocation(line: 601, column: 44, scope: !9769)
!9775 = !DILocation(line: 601, column: 48, scope: !9769)
!9776 = !DILocation(line: 601, column: 54, scope: !9769)
!9777 = !DILocation(line: 601, column: 52, scope: !9769)
!9778 = !DILocation(line: 601, column: 36, scope: !9769)
!9779 = !DILocation(line: 601, column: 14, scope: !9769)
!9780 = !DILocation(line: 602, column: 48, scope: !9769)
!9781 = !DILocation(line: 602, column: 32, scope: !9769)
!9782 = !DILocation(line: 602, column: 37, scope: !9769)
!9783 = !DILocation(line: 602, column: 27, scope: !9769)
!9784 = !DILocation(line: 602, column: 9, scope: !9769)
!9785 = !DILocation(line: 602, column: 14, scope: !9769)
!9786 = !DILocation(line: 602, column: 30, scope: !9769)
!9787 = !DILocation(line: 603, column: 5, scope: !9769)
!9788 = !DILocation(line: 600, column: 33, scope: !9789)
!9789 = !DILexicalBlockFile(scope: !9763, file: !1001, discriminator: 2)
!9790 = !DILocation(line: 600, column: 5, scope: !9789)
!9791 = distinct !{!9791, !9792}
!9792 = !DILocation(line: 600, column: 5, scope: !9583)
!9793 = !DILocation(line: 605, column: 30, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9583, file: !1001, line: 605, column: 9)
!9795 = !DILocation(line: 605, column: 34, scope: !9794)
!9796 = !DILocation(line: 605, column: 9, scope: !9794)
!9797 = !DILocation(line: 605, column: 39, scope: !9794)
!9798 = !DILocation(line: 605, column: 9, scope: !9583)
!9799 = !DILocation(line: 606, column: 9, scope: !9794)
!9800 = !DILocation(line: 608, column: 25, scope: !9583)
!9801 = !DILocation(line: 608, column: 5, scope: !9583)
!9802 = !DILocation(line: 610, column: 5, scope: !9583)
!9803 = !DILocation(line: 610, column: 10, scope: !9583)
!9804 = !DILocation(line: 610, column: 18, scope: !9583)
!9805 = !DILocation(line: 610, column: 31, scope: !9583)
!9806 = !DILocation(line: 611, column: 5, scope: !9583)
!9807 = !DILocation(line: 611, column: 10, scope: !9583)
!9808 = !DILocation(line: 611, column: 18, scope: !9583)
!9809 = !DILocation(line: 611, column: 31, scope: !9583)
!9810 = !DILocation(line: 613, column: 5, scope: !9583)
!9811 = !DILocation(line: 614, column: 1, scope: !9583)
!9812 = distinct !DISubprogram(name: "make_bands", scope: !1056, file: !1056, line: 54, type: !9813, isLocal: true, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!9813 = !DISubroutineType(types: !9814)
!9814 = !{null, !7323, !992, !992, !992}
!9815 = !DILocalVariable(name: "bands", arg: 1, scope: !9812, file: !1056, line: 54, type: !7323)
!9816 = !DILocation(line: 54, column: 33, scope: !9812)
!9817 = !DILocalVariable(name: "start", arg: 2, scope: !9812, file: !1056, line: 54, type: !992)
!9818 = !DILocation(line: 54, column: 44, scope: !9812)
!9819 = !DILocalVariable(name: "stop", arg: 3, scope: !9812, file: !1056, line: 54, type: !992)
!9820 = !DILocation(line: 54, column: 55, scope: !9812)
!9821 = !DILocalVariable(name: "num_bands", arg: 4, scope: !9812, file: !1056, line: 54, type: !992)
!9822 = !DILocation(line: 54, column: 65, scope: !9812)
!9823 = !DILocalVariable(name: "k", scope: !9812, file: !1056, line: 56, type: !992)
!9824 = !DILocation(line: 56, column: 9, scope: !9812)
!9825 = !DILocalVariable(name: "previous", scope: !9812, file: !1056, line: 56, type: !992)
!9826 = !DILocation(line: 56, column: 12, scope: !9812)
!9827 = !DILocalVariable(name: "present", scope: !9812, file: !1056, line: 56, type: !992)
!9828 = !DILocation(line: 56, column: 22, scope: !9812)
!9829 = !DILocalVariable(name: "base", scope: !9812, file: !1056, line: 57, type: !958)
!9830 = !DILocation(line: 57, column: 11, scope: !9812)
!9831 = !DILocalVariable(name: "prod", scope: !9812, file: !1056, line: 57, type: !958)
!9832 = !DILocation(line: 57, column: 17, scope: !9812)
!9833 = !DILocation(line: 59, column: 24, scope: !9812)
!9834 = !DILocation(line: 59, column: 17, scope: !9812)
!9835 = !DILocation(line: 59, column: 31, scope: !9812)
!9836 = !DILocation(line: 59, column: 29, scope: !9812)
!9837 = !DILocation(line: 59, column: 45, scope: !9812)
!9838 = !DILocation(line: 59, column: 43, scope: !9812)
!9839 = !DILocation(line: 59, column: 12, scope: !9812)
!9840 = !DILocation(line: 59, column: 10, scope: !9812)
!9841 = !DILocation(line: 60, column: 12, scope: !9812)
!9842 = !DILocation(line: 60, column: 10, scope: !9812)
!9843 = !DILocation(line: 61, column: 16, scope: !9812)
!9844 = !DILocation(line: 61, column: 14, scope: !9812)
!9845 = !DILocation(line: 63, column: 12, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9812, file: !1056, line: 63, column: 5)
!9847 = !DILocation(line: 63, column: 10, scope: !9846)
!9848 = !DILocation(line: 63, column: 17, scope: !9849)
!9849 = !DILexicalBlockFile(scope: !9850, file: !1056, discriminator: 1)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !1056, line: 63, column: 5)
!9851 = !DILocation(line: 63, column: 21, scope: !9849)
!9852 = !DILocation(line: 63, column: 30, scope: !9849)
!9853 = !DILocation(line: 63, column: 19, scope: !9849)
!9854 = !DILocation(line: 63, column: 5, scope: !9849)
!9855 = !DILocation(line: 64, column: 17, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9850, file: !1056, line: 63, column: 39)
!9857 = !DILocation(line: 64, column: 14, scope: !9856)
!9858 = !DILocation(line: 65, column: 26, scope: !9856)
!9859 = !DILocation(line: 65, column: 19, scope: !9856)
!9860 = !DILocation(line: 65, column: 17, scope: !9856)
!9861 = !DILocation(line: 66, column: 20, scope: !9856)
!9862 = !DILocation(line: 66, column: 30, scope: !9856)
!9863 = !DILocation(line: 66, column: 28, scope: !9856)
!9864 = !DILocation(line: 66, column: 15, scope: !9856)
!9865 = !DILocation(line: 66, column: 9, scope: !9856)
!9866 = !DILocation(line: 66, column: 18, scope: !9856)
!9867 = !DILocation(line: 67, column: 20, scope: !9856)
!9868 = !DILocation(line: 67, column: 18, scope: !9856)
!9869 = !DILocation(line: 68, column: 5, scope: !9856)
!9870 = !DILocation(line: 63, column: 35, scope: !9871)
!9871 = !DILexicalBlockFile(scope: !9850, file: !1056, discriminator: 2)
!9872 = !DILocation(line: 63, column: 5, scope: !9871)
!9873 = distinct !{!9873, !9874}
!9874 = !DILocation(line: 63, column: 5, scope: !9812)
!9875 = !DILocation(line: 69, column: 26, scope: !9812)
!9876 = !DILocation(line: 69, column: 33, scope: !9812)
!9877 = !DILocation(line: 69, column: 31, scope: !9812)
!9878 = !DILocation(line: 69, column: 11, scope: !9812)
!9879 = !DILocation(line: 69, column: 20, scope: !9812)
!9880 = !DILocation(line: 69, column: 5, scope: !9812)
!9881 = !DILocation(line: 69, column: 24, scope: !9812)
!9882 = !DILocation(line: 70, column: 1, scope: !9812)
!9883 = distinct !DISubprogram(name: "check_n_master", scope: !1001, file: !1001, line: 250, type: !9884, isLocal: true, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!9884 = !DISubroutineType(types: !9885)
!9885 = !{!992, !1552, !992, !992}
!9886 = !DILocalVariable(name: "avctx", arg: 1, scope: !9883, file: !1001, line: 250, type: !1552)
!9887 = !DILocation(line: 250, column: 43, scope: !9883)
!9888 = !DILocalVariable(name: "n_master", arg: 2, scope: !9883, file: !1001, line: 250, type: !992)
!9889 = !DILocation(line: 250, column: 54, scope: !9883)
!9890 = !DILocalVariable(name: "bs_xover_band", arg: 3, scope: !9883, file: !1001, line: 250, type: !992)
!9891 = !DILocation(line: 250, column: 68, scope: !9883)
!9892 = !DILocation(line: 253, column: 9, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9883, file: !1001, line: 253, column: 9)
!9894 = !DILocation(line: 253, column: 18, scope: !9893)
!9895 = !DILocation(line: 253, column: 9, scope: !9883)
!9896 = !DILocation(line: 254, column: 16, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9893, file: !1001, line: 253, column: 24)
!9898 = !DILocation(line: 254, column: 53, scope: !9897)
!9899 = !DILocation(line: 254, column: 9, scope: !9897)
!9900 = !DILocation(line: 255, column: 9, scope: !9897)
!9901 = !DILocation(line: 257, column: 9, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9883, file: !1001, line: 257, column: 9)
!9903 = !DILocation(line: 257, column: 26, scope: !9902)
!9904 = !DILocation(line: 257, column: 23, scope: !9902)
!9905 = !DILocation(line: 257, column: 9, scope: !9883)
!9906 = !DILocation(line: 258, column: 16, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9902, file: !1001, line: 257, column: 36)
!9908 = !DILocation(line: 260, column: 16, scope: !9907)
!9909 = !DILocation(line: 258, column: 9, scope: !9907)
!9910 = !DILocation(line: 261, column: 9, scope: !9907)
!9911 = !DILocation(line: 263, column: 5, scope: !9883)
!9912 = !DILocation(line: 264, column: 1, scope: !9883)
!9913 = distinct !DISubprogram(name: "array_min_int16", scope: !1001, file: !1001, line: 242, type: !9914, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!9914 = !DISubroutineType(types: !9915)
!9915 = !{!992, !988, !992}
!9916 = !DILocalVariable(name: "array", arg: 1, scope: !9913, file: !1001, line: 242, type: !988)
!9917 = !DILocation(line: 242, column: 43, scope: !9913)
!9918 = !DILocalVariable(name: "nel", arg: 2, scope: !9913, file: !1001, line: 242, type: !992)
!9919 = !DILocation(line: 242, column: 54, scope: !9913)
!9920 = !DILocalVariable(name: "i", scope: !9913, file: !1001, line: 244, type: !992)
!9921 = !DILocation(line: 244, column: 9, scope: !9913)
!9922 = !DILocalVariable(name: "min", scope: !9913, file: !1001, line: 244, type: !992)
!9923 = !DILocation(line: 244, column: 12, scope: !9913)
!9924 = !DILocation(line: 244, column: 18, scope: !9913)
!9925 = !DILocation(line: 245, column: 12, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9913, file: !1001, line: 245, column: 5)
!9927 = !DILocation(line: 245, column: 10, scope: !9926)
!9928 = !DILocation(line: 245, column: 17, scope: !9929)
!9929 = !DILexicalBlockFile(scope: !9930, file: !1001, discriminator: 1)
!9930 = distinct !DILexicalBlock(scope: !9926, file: !1001, line: 245, column: 5)
!9931 = !DILocation(line: 245, column: 21, scope: !9929)
!9932 = !DILocation(line: 245, column: 19, scope: !9929)
!9933 = !DILocation(line: 245, column: 5, scope: !9929)
!9934 = !DILocation(line: 246, column: 23, scope: !9930)
!9935 = !DILocation(line: 246, column: 17, scope: !9930)
!9936 = !DILocation(line: 246, column: 16, scope: !9930)
!9937 = !DILocation(line: 246, column: 30, scope: !9930)
!9938 = !DILocation(line: 246, column: 27, scope: !9930)
!9939 = !DILocation(line: 246, column: 38, scope: !9929)
!9940 = !DILocation(line: 246, column: 16, scope: !9929)
!9941 = !DILocation(line: 246, column: 52, scope: !9942)
!9942 = !DILexicalBlockFile(scope: !9930, file: !1001, discriminator: 2)
!9943 = !DILocation(line: 246, column: 46, scope: !9942)
!9944 = !DILocation(line: 246, column: 45, scope: !9942)
!9945 = !DILocation(line: 246, column: 16, scope: !9942)
!9946 = !DILocation(line: 246, column: 16, scope: !9947)
!9947 = !DILexicalBlockFile(scope: !9930, file: !1001, discriminator: 3)
!9948 = !DILocation(line: 246, column: 13, scope: !9947)
!9949 = !DILocation(line: 246, column: 9, scope: !9947)
!9950 = !DILocation(line: 245, column: 27, scope: !9942)
!9951 = !DILocation(line: 245, column: 5, scope: !9942)
!9952 = distinct !{!9952, !9953}
!9953 = !DILocation(line: 245, column: 5, scope: !9913)
!9954 = !DILocation(line: 247, column: 12, scope: !9913)
!9955 = !DILocation(line: 247, column: 5, scope: !9913)
!9956 = distinct !DISubprogram(name: "sbr_hf_calc_npatches", scope: !1001, file: !1001, line: 487, type: !9584, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!9957 = !DILocalVariable(name: "ac", arg: 1, scope: !9956, file: !1001, line: 487, type: !1504)
!9958 = !DILocation(line: 487, column: 45, scope: !9956)
!9959 = !DILocalVariable(name: "sbr", arg: 2, scope: !9956, file: !1001, line: 487, type: !1123)
!9960 = !DILocation(line: 487, column: 74, scope: !9956)
!9961 = !DILocalVariable(name: "i", scope: !9956, file: !1001, line: 489, type: !992)
!9962 = !DILocation(line: 489, column: 9, scope: !9956)
!9963 = !DILocalVariable(name: "k", scope: !9956, file: !1001, line: 489, type: !992)
!9964 = !DILocation(line: 489, column: 12, scope: !9956)
!9965 = !DILocalVariable(name: "last_k", scope: !9956, file: !1001, line: 489, type: !992)
!9966 = !DILocation(line: 489, column: 15, scope: !9956)
!9967 = !DILocalVariable(name: "last_msb", scope: !9956, file: !1001, line: 489, type: !992)
!9968 = !DILocation(line: 489, column: 28, scope: !9956)
!9969 = !DILocalVariable(name: "sb", scope: !9956, file: !1001, line: 489, type: !992)
!9970 = !DILocation(line: 489, column: 43, scope: !9956)
!9971 = !DILocalVariable(name: "msb", scope: !9956, file: !1001, line: 490, type: !992)
!9972 = !DILocation(line: 490, column: 9, scope: !9956)
!9973 = !DILocation(line: 490, column: 15, scope: !9956)
!9974 = !DILocation(line: 490, column: 20, scope: !9956)
!9975 = !DILocalVariable(name: "usb", scope: !9956, file: !1001, line: 491, type: !992)
!9976 = !DILocation(line: 491, column: 9, scope: !9956)
!9977 = !DILocation(line: 491, column: 15, scope: !9956)
!9978 = !DILocation(line: 491, column: 20, scope: !9956)
!9979 = !DILocalVariable(name: "goal_sb", scope: !9956, file: !1001, line: 492, type: !992)
!9980 = !DILocation(line: 492, column: 9, scope: !9956)
!9981 = !DILocation(line: 492, column: 36, scope: !9956)
!9982 = !DILocation(line: 492, column: 41, scope: !9956)
!9983 = !DILocation(line: 492, column: 53, scope: !9956)
!9984 = !DILocation(line: 492, column: 33, scope: !9956)
!9985 = !DILocation(line: 492, column: 62, scope: !9956)
!9986 = !DILocation(line: 492, column: 67, scope: !9956)
!9987 = !DILocation(line: 492, column: 60, scope: !9956)
!9988 = !DILocation(line: 494, column: 5, scope: !9956)
!9989 = !DILocation(line: 494, column: 10, scope: !9956)
!9990 = !DILocation(line: 494, column: 22, scope: !9956)
!9991 = !DILocation(line: 496, column: 9, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9956, file: !1001, line: 496, column: 9)
!9993 = !DILocation(line: 496, column: 19, scope: !9992)
!9994 = !DILocation(line: 496, column: 24, scope: !9992)
!9995 = !DILocation(line: 496, column: 32, scope: !9992)
!9996 = !DILocation(line: 496, column: 37, scope: !9992)
!9997 = !DILocation(line: 496, column: 30, scope: !9992)
!9998 = !DILocation(line: 496, column: 17, scope: !9992)
!9999 = !DILocation(line: 496, column: 9, scope: !9956)
!10000 = !DILocation(line: 497, column: 16, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !10002, file: !1001, line: 497, column: 9)
!10002 = distinct !DILexicalBlock(scope: !9992, file: !1001, line: 496, column: 43)
!10003 = !DILocation(line: 497, column: 14, scope: !10001)
!10004 = !DILocation(line: 497, column: 35, scope: !10005)
!10005 = !DILexicalBlockFile(scope: !10006, file: !1001, discriminator: 1)
!10006 = distinct !DILexicalBlock(scope: !10001, file: !1001, line: 497, column: 9)
!10007 = !DILocation(line: 497, column: 21, scope: !10005)
!10008 = !DILocation(line: 497, column: 26, scope: !10005)
!10009 = !DILocation(line: 497, column: 40, scope: !10005)
!10010 = !DILocation(line: 497, column: 38, scope: !10005)
!10011 = !DILocation(line: 497, column: 9, scope: !10005)
!10012 = !DILocation(line: 497, column: 9, scope: !10013)
!10013 = !DILexicalBlockFile(scope: !10001, file: !1001, discriminator: 2)
!10014 = !DILocation(line: 497, column: 50, scope: !10015)
!10015 = !DILexicalBlockFile(scope: !10006, file: !1001, discriminator: 3)
!10016 = !DILocation(line: 497, column: 9, scope: !10015)
!10017 = distinct !{!10017, !10018}
!10018 = !DILocation(line: 497, column: 9, scope: !10002)
!10019 = !DILocation(line: 498, column: 5, scope: !10002)
!10020 = !DILocation(line: 499, column: 13, scope: !9992)
!10021 = !DILocation(line: 499, column: 18, scope: !9992)
!10022 = !DILocation(line: 499, column: 11, scope: !9992)
!10023 = !DILocation(line: 501, column: 5, scope: !9956)
!10024 = distinct !{!10024, !10023}
!10025 = !DILocalVariable(name: "odd", scope: !10026, file: !1001, line: 502, type: !992)
!10026 = distinct !DILexicalBlock(scope: !9956, file: !1001, line: 501, column: 8)
!10027 = !DILocation(line: 502, column: 13, scope: !10026)
!10028 = !DILocation(line: 503, column: 13, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10026, file: !1001, line: 503, column: 13)
!10030 = !DILocation(line: 503, column: 18, scope: !10029)
!10031 = !DILocation(line: 503, column: 15, scope: !10029)
!10032 = !DILocation(line: 503, column: 25, scope: !10029)
!10033 = !DILocation(line: 503, column: 28, scope: !10034)
!10034 = !DILexicalBlockFile(scope: !10029, file: !1001, discriminator: 1)
!10035 = !DILocation(line: 503, column: 35, scope: !10034)
!10036 = !DILocation(line: 503, column: 32, scope: !10034)
!10037 = !DILocation(line: 503, column: 13, scope: !10034)
!10038 = !DILocation(line: 504, column: 20, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10029, file: !1001, line: 503, column: 45)
!10040 = !DILocation(line: 504, column: 24, scope: !10039)
!10041 = !DILocation(line: 504, column: 13, scope: !10039)
!10042 = !DILocation(line: 505, column: 13, scope: !10039)
!10043 = !DILocation(line: 507, column: 18, scope: !10026)
!10044 = !DILocation(line: 507, column: 16, scope: !10026)
!10045 = !DILocation(line: 508, column: 20, scope: !10026)
!10046 = !DILocation(line: 508, column: 18, scope: !10026)
!10047 = !DILocation(line: 509, column: 18, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10026, file: !1001, line: 509, column: 9)
!10049 = !DILocation(line: 509, column: 16, scope: !10048)
!10050 = !DILocation(line: 509, column: 14, scope: !10048)
!10051 = !DILocation(line: 509, column: 21, scope: !10052)
!10052 = !DILexicalBlockFile(scope: !10053, file: !1001, discriminator: 1)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !1001, line: 509, column: 9)
!10054 = !DILocation(line: 509, column: 26, scope: !10052)
!10055 = !DILocation(line: 509, column: 23, scope: !10052)
!10056 = !DILocation(line: 509, column: 28, scope: !10052)
!10057 = !DILocation(line: 509, column: 31, scope: !10058)
!10058 = !DILexicalBlockFile(scope: !10053, file: !1001, discriminator: 2)
!10059 = !DILocation(line: 509, column: 37, scope: !10058)
!10060 = !DILocation(line: 509, column: 42, scope: !10058)
!10061 = !DILocation(line: 509, column: 47, scope: !10058)
!10062 = !DILocation(line: 509, column: 53, scope: !10058)
!10063 = !DILocation(line: 509, column: 51, scope: !10058)
!10064 = !DILocation(line: 509, column: 59, scope: !10058)
!10065 = !DILocation(line: 509, column: 57, scope: !10058)
!10066 = !DILocation(line: 509, column: 34, scope: !10058)
!10067 = !DILocation(line: 509, column: 28, scope: !10058)
!10068 = !DILocation(line: 509, column: 9, scope: !10069)
!10069 = !DILexicalBlockFile(scope: !10048, file: !1001, discriminator: 3)
!10070 = !DILocation(line: 510, column: 32, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10053, file: !1001, line: 509, column: 70)
!10072 = !DILocation(line: 510, column: 18, scope: !10071)
!10073 = !DILocation(line: 510, column: 23, scope: !10071)
!10074 = !DILocation(line: 510, column: 16, scope: !10071)
!10075 = !DILocation(line: 511, column: 20, scope: !10071)
!10076 = !DILocation(line: 511, column: 25, scope: !10071)
!10077 = !DILocation(line: 511, column: 30, scope: !10071)
!10078 = !DILocation(line: 511, column: 23, scope: !10071)
!10079 = !DILocation(line: 511, column: 36, scope: !10071)
!10080 = !DILocation(line: 511, column: 17, scope: !10071)
!10081 = !DILocation(line: 512, column: 9, scope: !10071)
!10082 = !DILocation(line: 509, column: 66, scope: !10083)
!10083 = !DILexicalBlockFile(scope: !10053, file: !1001, discriminator: 4)
!10084 = !DILocation(line: 509, column: 9, scope: !10083)
!10085 = distinct !{!10085, !10086}
!10086 = !DILocation(line: 509, column: 9, scope: !10026)
!10087 = !DILocation(line: 518, column: 13, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10026, file: !1001, line: 518, column: 13)
!10089 = !DILocation(line: 518, column: 18, scope: !10088)
!10090 = !DILocation(line: 518, column: 30, scope: !10088)
!10091 = !DILocation(line: 518, column: 13, scope: !10026)
!10092 = !DILocation(line: 519, column: 20, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10088, file: !1001, line: 518, column: 35)
!10094 = !DILocation(line: 519, column: 24, scope: !10093)
!10095 = !DILocation(line: 519, column: 61, scope: !10093)
!10096 = !DILocation(line: 519, column: 66, scope: !10093)
!10097 = !DILocation(line: 519, column: 13, scope: !10093)
!10098 = !DILocation(line: 520, column: 13, scope: !10093)
!10099 = !DILocation(line: 523, column: 55, scope: !10026)
!10100 = !DILocation(line: 523, column: 60, scope: !10026)
!10101 = !DILocation(line: 523, column: 58, scope: !10026)
!10102 = !DILocation(line: 523, column: 65, scope: !10026)
!10103 = !DILocation(line: 523, column: 54, scope: !10026)
!10104 = !DILocation(line: 523, column: 74, scope: !10105)
!10105 = !DILexicalBlockFile(scope: !10026, file: !1001, discriminator: 1)
!10106 = !DILocation(line: 523, column: 79, scope: !10105)
!10107 = !DILocation(line: 523, column: 77, scope: !10105)
!10108 = !DILocation(line: 523, column: 54, scope: !10105)
!10109 = !DILocation(line: 523, column: 54, scope: !10110)
!10110 = !DILexicalBlockFile(scope: !10026, file: !1001, discriminator: 2)
!10111 = !DILocation(line: 523, column: 54, scope: !10112)
!10112 = !DILexicalBlockFile(scope: !10026, file: !1001, discriminator: 3)
!10113 = !DILocation(line: 523, column: 53, scope: !10112)
!10114 = !DILocation(line: 523, column: 33, scope: !10112)
!10115 = !DILocation(line: 523, column: 38, scope: !10112)
!10116 = !DILocation(line: 523, column: 9, scope: !10112)
!10117 = !DILocation(line: 523, column: 14, scope: !10112)
!10118 = !DILocation(line: 523, column: 51, scope: !10112)
!10119 = !DILocation(line: 524, column: 54, scope: !10026)
!10120 = !DILocation(line: 524, column: 59, scope: !10026)
!10121 = !DILocation(line: 524, column: 66, scope: !10026)
!10122 = !DILocation(line: 524, column: 64, scope: !10026)
!10123 = !DILocation(line: 524, column: 96, scope: !10026)
!10124 = !DILocation(line: 524, column: 101, scope: !10026)
!10125 = !DILocation(line: 524, column: 72, scope: !10026)
!10126 = !DILocation(line: 524, column: 77, scope: !10026)
!10127 = !DILocation(line: 524, column: 70, scope: !10026)
!10128 = !DILocation(line: 524, column: 34, scope: !10026)
!10129 = !DILocation(line: 524, column: 39, scope: !10026)
!10130 = !DILocation(line: 524, column: 9, scope: !10026)
!10131 = !DILocation(line: 524, column: 14, scope: !10026)
!10132 = !DILocation(line: 524, column: 52, scope: !10026)
!10133 = !DILocation(line: 526, column: 37, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10026, file: !1001, line: 526, column: 13)
!10135 = !DILocation(line: 526, column: 42, scope: !10134)
!10136 = !DILocation(line: 526, column: 13, scope: !10134)
!10137 = !DILocation(line: 526, column: 18, scope: !10134)
!10138 = !DILocation(line: 526, column: 55, scope: !10134)
!10139 = !DILocation(line: 526, column: 13, scope: !10026)
!10140 = !DILocation(line: 527, column: 19, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10134, file: !1001, line: 526, column: 60)
!10142 = !DILocation(line: 527, column: 17, scope: !10141)
!10143 = !DILocation(line: 528, column: 19, scope: !10141)
!10144 = !DILocation(line: 528, column: 17, scope: !10141)
!10145 = !DILocation(line: 529, column: 13, scope: !10141)
!10146 = !DILocation(line: 529, column: 18, scope: !10141)
!10147 = !DILocation(line: 529, column: 29, scope: !10141)
!10148 = !DILocation(line: 530, column: 9, scope: !10141)
!10149 = !DILocation(line: 531, column: 19, scope: !10134)
!10150 = !DILocation(line: 531, column: 24, scope: !10134)
!10151 = !DILocation(line: 531, column: 17, scope: !10134)
!10152 = !DILocation(line: 533, column: 27, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10026, file: !1001, line: 533, column: 13)
!10154 = !DILocation(line: 533, column: 13, scope: !10153)
!10155 = !DILocation(line: 533, column: 18, scope: !10153)
!10156 = !DILocation(line: 533, column: 32, scope: !10153)
!10157 = !DILocation(line: 533, column: 30, scope: !10153)
!10158 = !DILocation(line: 533, column: 35, scope: !10153)
!10159 = !DILocation(line: 533, column: 13, scope: !10026)
!10160 = !DILocation(line: 534, column: 17, scope: !10153)
!10161 = !DILocation(line: 534, column: 22, scope: !10153)
!10162 = !DILocation(line: 534, column: 15, scope: !10153)
!10163 = !DILocation(line: 534, column: 13, scope: !10153)
!10164 = !DILocation(line: 535, column: 5, scope: !10026)
!10165 = !DILocation(line: 535, column: 14, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !9956, file: !1001, discriminator: 1)
!10167 = !DILocation(line: 535, column: 20, scope: !10166)
!10168 = !DILocation(line: 535, column: 25, scope: !10166)
!10169 = !DILocation(line: 535, column: 33, scope: !10166)
!10170 = !DILocation(line: 535, column: 38, scope: !10166)
!10171 = !DILocation(line: 535, column: 31, scope: !10166)
!10172 = !DILocation(line: 535, column: 17, scope: !10166)
!10173 = !DILocation(line: 535, column: 5, scope: !10166)
!10174 = !DILocation(line: 537, column: 9, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !9956, file: !1001, line: 537, column: 9)
!10176 = !DILocation(line: 537, column: 14, scope: !10175)
!10177 = !DILocation(line: 537, column: 26, scope: !10175)
!10178 = !DILocation(line: 537, column: 30, scope: !10175)
!10179 = !DILocation(line: 538, column: 33, scope: !10175)
!10180 = !DILocation(line: 538, column: 38, scope: !10175)
!10181 = !DILocation(line: 538, column: 50, scope: !10175)
!10182 = !DILocation(line: 538, column: 9, scope: !10175)
!10183 = !DILocation(line: 538, column: 14, scope: !10175)
!10184 = !DILocation(line: 538, column: 55, scope: !10175)
!10185 = !DILocation(line: 537, column: 9, scope: !10166)
!10186 = !DILocation(line: 539, column: 9, scope: !10175)
!10187 = !DILocation(line: 539, column: 14, scope: !10175)
!10188 = !DILocation(line: 539, column: 25, scope: !10175)
!10189 = !DILocation(line: 541, column: 5, scope: !9956)
!10190 = !DILocation(line: 542, column: 1, scope: !9956)
!10191 = distinct !DISubprogram(name: "read_sbr_single_channel_element", scope: !1001, file: !1001, line: 974, type: !10192, isLocal: true, isDefinition: true, scopeLine: 977, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!992, !1504, !1123, !2912}
!10194 = !DILocalVariable(name: "gb", arg: 1, scope: !10195, file: !1001, line: 616, type: !2912)
!10195 = distinct !DISubprogram(name: "get_bits1_vector", scope: !1001, file: !1001, line: 616, type: !10196, isLocal: true, isDefinition: true, scopeLine: 618, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!10196 = !DISubroutineType(types: !10197)
!10197 = !{null, !2912, !1637, !992}
!10198 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !10199)
!10199 = distinct !DILocation(line: 993, column: 9, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10191, file: !1001, line: 992, column: 9)
!10201 = !DILocalVariable(name: "vec", arg: 2, scope: !10195, file: !1001, line: 616, type: !1637)
!10202 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !10199)
!10203 = !DILocalVariable(name: "elements", arg: 3, scope: !10195, file: !1001, line: 617, type: !992)
!10204 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !10199)
!10205 = !DILocalVariable(name: "i", scope: !10195, file: !1001, line: 619, type: !992)
!10206 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !10199)
!10207 = !DILocalVariable(name: "ac", arg: 1, scope: !10191, file: !1001, line: 974, type: !1504)
!10208 = !DILocation(line: 974, column: 56, scope: !10191)
!10209 = !DILocalVariable(name: "sbr", arg: 2, scope: !10191, file: !1001, line: 975, type: !1123)
!10210 = !DILocation(line: 975, column: 70, scope: !10191)
!10211 = !DILocalVariable(name: "gb", arg: 3, scope: !10191, file: !1001, line: 976, type: !2912)
!10212 = !DILocation(line: 976, column: 60, scope: !10191)
!10213 = !DILocalVariable(name: "ret", scope: !10191, file: !1001, line: 978, type: !992)
!10214 = !DILocation(line: 978, column: 9, scope: !10191)
!10215 = !DILocation(line: 980, column: 19, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10191, file: !1001, line: 980, column: 9)
!10217 = !DILocation(line: 980, column: 9, scope: !10216)
!10218 = !DILocation(line: 980, column: 9, scope: !10191)
!10219 = !DILocation(line: 981, column: 19, scope: !10216)
!10220 = !DILocation(line: 981, column: 9, scope: !10216)
!10221 = !DILocation(line: 983, column: 23, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10191, file: !1001, line: 983, column: 9)
!10223 = !DILocation(line: 983, column: 27, scope: !10222)
!10224 = !DILocation(line: 983, column: 32, scope: !10222)
!10225 = !DILocation(line: 983, column: 37, scope: !10222)
!10226 = !DILocation(line: 983, column: 42, scope: !10222)
!10227 = !DILocation(line: 983, column: 9, scope: !10222)
!10228 = !DILocation(line: 983, column: 9, scope: !10191)
!10229 = !DILocation(line: 984, column: 9, scope: !10222)
!10230 = !DILocation(line: 985, column: 19, scope: !10191)
!10231 = !DILocation(line: 985, column: 24, scope: !10191)
!10232 = !DILocation(line: 985, column: 29, scope: !10191)
!10233 = !DILocation(line: 985, column: 34, scope: !10191)
!10234 = !DILocation(line: 985, column: 5, scope: !10191)
!10235 = !DILocation(line: 986, column: 19, scope: !10191)
!10236 = !DILocation(line: 986, column: 24, scope: !10191)
!10237 = !DILocation(line: 986, column: 29, scope: !10191)
!10238 = !DILocation(line: 986, column: 34, scope: !10191)
!10239 = !DILocation(line: 986, column: 5, scope: !10191)
!10240 = !DILocation(line: 987, column: 33, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10191, file: !1001, line: 987, column: 8)
!10242 = !DILocation(line: 987, column: 37, scope: !10241)
!10243 = !DILocation(line: 987, column: 42, scope: !10241)
!10244 = !DILocation(line: 987, column: 47, scope: !10241)
!10245 = !DILocation(line: 987, column: 52, scope: !10241)
!10246 = !DILocation(line: 987, column: 15, scope: !10241)
!10247 = !DILocation(line: 987, column: 13, scope: !10241)
!10248 = !DILocation(line: 987, column: 65, scope: !10241)
!10249 = !DILocation(line: 987, column: 8, scope: !10191)
!10250 = !DILocation(line: 988, column: 16, scope: !10241)
!10251 = !DILocation(line: 988, column: 9, scope: !10241)
!10252 = !DILocation(line: 989, column: 30, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10191, file: !1001, line: 989, column: 8)
!10254 = !DILocation(line: 989, column: 34, scope: !10253)
!10255 = !DILocation(line: 989, column: 39, scope: !10253)
!10256 = !DILocation(line: 989, column: 44, scope: !10253)
!10257 = !DILocation(line: 989, column: 49, scope: !10253)
!10258 = !DILocation(line: 989, column: 15, scope: !10253)
!10259 = !DILocation(line: 989, column: 13, scope: !10253)
!10260 = !DILocation(line: 989, column: 62, scope: !10253)
!10261 = !DILocation(line: 989, column: 8, scope: !10191)
!10262 = !DILocation(line: 990, column: 16, scope: !10253)
!10263 = !DILocation(line: 990, column: 9, scope: !10253)
!10264 = !DILocation(line: 992, column: 56, scope: !10200)
!10265 = !DILocation(line: 992, column: 46, scope: !10200)
!10266 = !DILocation(line: 992, column: 10, scope: !10200)
!10267 = !DILocation(line: 992, column: 15, scope: !10200)
!10268 = !DILocation(line: 992, column: 23, scope: !10200)
!10269 = !DILocation(line: 992, column: 44, scope: !10200)
!10270 = !DILocation(line: 992, column: 9, scope: !10191)
!10271 = !DILocation(line: 993, column: 26, scope: !10200)
!10272 = !DILocation(line: 993, column: 30, scope: !10200)
!10273 = !DILocation(line: 993, column: 35, scope: !10200)
!10274 = !DILocation(line: 993, column: 43, scope: !10200)
!10275 = !DILocation(line: 993, column: 60, scope: !10200)
!10276 = !DILocation(line: 993, column: 65, scope: !10200)
!10277 = !DILocation(line: 993, column: 9, scope: !10200)
!10278 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !10199)
!10279 = distinct !DILexicalBlock(scope: !10195, file: !1001, line: 620, column: 5)
!10280 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !10199)
!10281 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !10199)
!10282 = !DILexicalBlockFile(scope: !10283, file: !1001, discriminator: 1)
!10283 = distinct !DILexicalBlock(scope: !10279, file: !1001, line: 620, column: 5)
!10284 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !10199)
!10285 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !10199)
!10286 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !10199)
!10287 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !10199)
!10288 = distinct !DILexicalBlock(scope: !10283, file: !1001, line: 620, column: 36)
!10289 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !10199)
!10290 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !10199)
!10291 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !10199)
!10292 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !10199)
!10293 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !10199)
!10294 = !DILexicalBlockFile(scope: !10283, file: !1001, discriminator: 2)
!10295 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !10199)
!10296 = distinct !{!10296, !10297}
!10297 = !DILocation(line: 620, column: 5, scope: !10195)
!10298 = !DILocation(line: 995, column: 5, scope: !10191)
!10299 = !DILocation(line: 996, column: 1, scope: !10191)
!10300 = distinct !DISubprogram(name: "read_sbr_channel_pair_element", scope: !1001, file: !1001, line: 998, type: !10192, isLocal: true, isDefinition: true, scopeLine: 1001, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!10301 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 1045, column: 9, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10300, file: !1001, line: 1044, column: 9)
!10304 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !10302)
!10305 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !10302)
!10306 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !10302)
!10307 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !10308)
!10308 = distinct !DILocation(line: 1043, column: 9, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10300, file: !1001, line: 1042, column: 9)
!10310 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !10308)
!10311 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !10308)
!10312 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !10308)
!10313 = !DILocalVariable(name: "ac", arg: 1, scope: !10300, file: !1001, line: 998, type: !1504)
!10314 = !DILocation(line: 998, column: 54, scope: !10300)
!10315 = !DILocalVariable(name: "sbr", arg: 2, scope: !10300, file: !1001, line: 999, type: !1123)
!10316 = !DILocation(line: 999, column: 68, scope: !10300)
!10317 = !DILocalVariable(name: "gb", arg: 3, scope: !10300, file: !1001, line: 1000, type: !2912)
!10318 = !DILocation(line: 1000, column: 58, scope: !10300)
!10319 = !DILocalVariable(name: "ret", scope: !10300, file: !1001, line: 1002, type: !992)
!10320 = !DILocation(line: 1002, column: 9, scope: !10300)
!10321 = !DILocation(line: 1004, column: 19, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10300, file: !1001, line: 1004, column: 9)
!10323 = !DILocation(line: 1004, column: 9, scope: !10322)
!10324 = !DILocation(line: 1004, column: 9, scope: !10300)
!10325 = !DILocation(line: 1005, column: 19, scope: !10322)
!10326 = !DILocation(line: 1005, column: 9, scope: !10322)
!10327 = !DILocation(line: 1007, column: 39, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10300, file: !1001, line: 1007, column: 9)
!10329 = !DILocation(line: 1007, column: 29, scope: !10328)
!10330 = !DILocation(line: 1007, column: 10, scope: !10328)
!10331 = !DILocation(line: 1007, column: 15, scope: !10328)
!10332 = !DILocation(line: 1007, column: 27, scope: !10328)
!10333 = !DILocation(line: 1007, column: 9, scope: !10300)
!10334 = !DILocation(line: 1008, column: 27, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !1001, line: 1008, column: 13)
!10336 = distinct !DILexicalBlock(scope: !10328, file: !1001, line: 1007, column: 45)
!10337 = !DILocation(line: 1008, column: 31, scope: !10335)
!10338 = !DILocation(line: 1008, column: 36, scope: !10335)
!10339 = !DILocation(line: 1008, column: 41, scope: !10335)
!10340 = !DILocation(line: 1008, column: 46, scope: !10335)
!10341 = !DILocation(line: 1008, column: 13, scope: !10335)
!10342 = !DILocation(line: 1008, column: 13, scope: !10336)
!10343 = !DILocation(line: 1009, column: 13, scope: !10335)
!10344 = !DILocation(line: 1010, column: 24, scope: !10336)
!10345 = !DILocation(line: 1010, column: 29, scope: !10336)
!10346 = !DILocation(line: 1010, column: 39, scope: !10336)
!10347 = !DILocation(line: 1010, column: 44, scope: !10336)
!10348 = !DILocation(line: 1010, column: 9, scope: !10336)
!10349 = !DILocation(line: 1011, column: 23, scope: !10336)
!10350 = !DILocation(line: 1011, column: 28, scope: !10336)
!10351 = !DILocation(line: 1011, column: 33, scope: !10336)
!10352 = !DILocation(line: 1011, column: 38, scope: !10336)
!10353 = !DILocation(line: 1011, column: 9, scope: !10336)
!10354 = !DILocation(line: 1012, column: 23, scope: !10336)
!10355 = !DILocation(line: 1012, column: 28, scope: !10336)
!10356 = !DILocation(line: 1012, column: 33, scope: !10336)
!10357 = !DILocation(line: 1012, column: 38, scope: !10336)
!10358 = !DILocation(line: 1012, column: 9, scope: !10336)
!10359 = !DILocation(line: 1013, column: 23, scope: !10336)
!10360 = !DILocation(line: 1013, column: 28, scope: !10336)
!10361 = !DILocation(line: 1013, column: 33, scope: !10336)
!10362 = !DILocation(line: 1013, column: 38, scope: !10336)
!10363 = !DILocation(line: 1013, column: 9, scope: !10336)
!10364 = !DILocation(line: 1014, column: 16, scope: !10336)
!10365 = !DILocation(line: 1014, column: 21, scope: !10336)
!10366 = !DILocation(line: 1014, column: 29, scope: !10336)
!10367 = !DILocation(line: 1014, column: 9, scope: !10336)
!10368 = !DILocation(line: 1014, column: 46, scope: !10336)
!10369 = !DILocation(line: 1014, column: 51, scope: !10336)
!10370 = !DILocation(line: 1014, column: 59, scope: !10336)
!10371 = !DILocation(line: 1015, column: 16, scope: !10336)
!10372 = !DILocation(line: 1015, column: 21, scope: !10336)
!10373 = !DILocation(line: 1015, column: 29, scope: !10336)
!10374 = !DILocation(line: 1015, column: 9, scope: !10336)
!10375 = !DILocation(line: 1015, column: 46, scope: !10336)
!10376 = !DILocation(line: 1015, column: 51, scope: !10336)
!10377 = !DILocation(line: 1015, column: 59, scope: !10336)
!10378 = !DILocation(line: 1016, column: 37, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10336, file: !1001, line: 1016, column: 12)
!10380 = !DILocation(line: 1016, column: 41, scope: !10379)
!10381 = !DILocation(line: 1016, column: 46, scope: !10379)
!10382 = !DILocation(line: 1016, column: 51, scope: !10379)
!10383 = !DILocation(line: 1016, column: 56, scope: !10379)
!10384 = !DILocation(line: 1016, column: 19, scope: !10379)
!10385 = !DILocation(line: 1016, column: 17, scope: !10379)
!10386 = !DILocation(line: 1016, column: 69, scope: !10379)
!10387 = !DILocation(line: 1016, column: 12, scope: !10336)
!10388 = !DILocation(line: 1017, column: 20, scope: !10379)
!10389 = !DILocation(line: 1017, column: 13, scope: !10379)
!10390 = !DILocation(line: 1018, column: 34, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10336, file: !1001, line: 1018, column: 12)
!10392 = !DILocation(line: 1018, column: 38, scope: !10391)
!10393 = !DILocation(line: 1018, column: 43, scope: !10391)
!10394 = !DILocation(line: 1018, column: 48, scope: !10391)
!10395 = !DILocation(line: 1018, column: 53, scope: !10391)
!10396 = !DILocation(line: 1018, column: 19, scope: !10391)
!10397 = !DILocation(line: 1018, column: 17, scope: !10391)
!10398 = !DILocation(line: 1018, column: 66, scope: !10391)
!10399 = !DILocation(line: 1018, column: 12, scope: !10336)
!10400 = !DILocation(line: 1019, column: 20, scope: !10391)
!10401 = !DILocation(line: 1019, column: 13, scope: !10391)
!10402 = !DILocation(line: 1020, column: 37, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10336, file: !1001, line: 1020, column: 12)
!10404 = !DILocation(line: 1020, column: 41, scope: !10403)
!10405 = !DILocation(line: 1020, column: 46, scope: !10403)
!10406 = !DILocation(line: 1020, column: 51, scope: !10403)
!10407 = !DILocation(line: 1020, column: 56, scope: !10403)
!10408 = !DILocation(line: 1020, column: 19, scope: !10403)
!10409 = !DILocation(line: 1020, column: 17, scope: !10403)
!10410 = !DILocation(line: 1020, column: 69, scope: !10403)
!10411 = !DILocation(line: 1020, column: 12, scope: !10336)
!10412 = !DILocation(line: 1021, column: 20, scope: !10403)
!10413 = !DILocation(line: 1021, column: 13, scope: !10403)
!10414 = !DILocation(line: 1022, column: 34, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10336, file: !1001, line: 1022, column: 12)
!10416 = !DILocation(line: 1022, column: 38, scope: !10415)
!10417 = !DILocation(line: 1022, column: 43, scope: !10415)
!10418 = !DILocation(line: 1022, column: 48, scope: !10415)
!10419 = !DILocation(line: 1022, column: 53, scope: !10415)
!10420 = !DILocation(line: 1022, column: 19, scope: !10415)
!10421 = !DILocation(line: 1022, column: 17, scope: !10415)
!10422 = !DILocation(line: 1022, column: 66, scope: !10415)
!10423 = !DILocation(line: 1022, column: 12, scope: !10336)
!10424 = !DILocation(line: 1023, column: 20, scope: !10415)
!10425 = !DILocation(line: 1023, column: 13, scope: !10415)
!10426 = !DILocation(line: 1024, column: 5, scope: !10336)
!10427 = !DILocation(line: 1025, column: 27, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !1001, line: 1025, column: 13)
!10429 = distinct !DILexicalBlock(scope: !10328, file: !1001, line: 1024, column: 12)
!10430 = !DILocation(line: 1025, column: 31, scope: !10428)
!10431 = !DILocation(line: 1025, column: 36, scope: !10428)
!10432 = !DILocation(line: 1025, column: 41, scope: !10428)
!10433 = !DILocation(line: 1025, column: 46, scope: !10428)
!10434 = !DILocation(line: 1025, column: 13, scope: !10428)
!10435 = !DILocation(line: 1025, column: 55, scope: !10428)
!10436 = !DILocation(line: 1026, column: 27, scope: !10428)
!10437 = !DILocation(line: 1026, column: 31, scope: !10428)
!10438 = !DILocation(line: 1026, column: 36, scope: !10428)
!10439 = !DILocation(line: 1026, column: 41, scope: !10428)
!10440 = !DILocation(line: 1026, column: 46, scope: !10428)
!10441 = !DILocation(line: 1026, column: 13, scope: !10428)
!10442 = !DILocation(line: 1025, column: 13, scope: !10443)
!10443 = !DILexicalBlockFile(scope: !10429, file: !1001, discriminator: 1)
!10444 = !DILocation(line: 1027, column: 13, scope: !10428)
!10445 = !DILocation(line: 1028, column: 23, scope: !10429)
!10446 = !DILocation(line: 1028, column: 28, scope: !10429)
!10447 = !DILocation(line: 1028, column: 33, scope: !10429)
!10448 = !DILocation(line: 1028, column: 38, scope: !10429)
!10449 = !DILocation(line: 1028, column: 9, scope: !10429)
!10450 = !DILocation(line: 1029, column: 23, scope: !10429)
!10451 = !DILocation(line: 1029, column: 28, scope: !10429)
!10452 = !DILocation(line: 1029, column: 33, scope: !10429)
!10453 = !DILocation(line: 1029, column: 38, scope: !10429)
!10454 = !DILocation(line: 1029, column: 9, scope: !10429)
!10455 = !DILocation(line: 1030, column: 23, scope: !10429)
!10456 = !DILocation(line: 1030, column: 28, scope: !10429)
!10457 = !DILocation(line: 1030, column: 33, scope: !10429)
!10458 = !DILocation(line: 1030, column: 38, scope: !10429)
!10459 = !DILocation(line: 1030, column: 9, scope: !10429)
!10460 = !DILocation(line: 1031, column: 23, scope: !10429)
!10461 = !DILocation(line: 1031, column: 28, scope: !10429)
!10462 = !DILocation(line: 1031, column: 33, scope: !10429)
!10463 = !DILocation(line: 1031, column: 38, scope: !10429)
!10464 = !DILocation(line: 1031, column: 9, scope: !10429)
!10465 = !DILocation(line: 1032, column: 37, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10429, file: !1001, line: 1032, column: 12)
!10467 = !DILocation(line: 1032, column: 41, scope: !10466)
!10468 = !DILocation(line: 1032, column: 46, scope: !10466)
!10469 = !DILocation(line: 1032, column: 51, scope: !10466)
!10470 = !DILocation(line: 1032, column: 56, scope: !10466)
!10471 = !DILocation(line: 1032, column: 19, scope: !10466)
!10472 = !DILocation(line: 1032, column: 17, scope: !10466)
!10473 = !DILocation(line: 1032, column: 69, scope: !10466)
!10474 = !DILocation(line: 1032, column: 12, scope: !10429)
!10475 = !DILocation(line: 1033, column: 20, scope: !10466)
!10476 = !DILocation(line: 1033, column: 13, scope: !10466)
!10477 = !DILocation(line: 1034, column: 37, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10429, file: !1001, line: 1034, column: 12)
!10479 = !DILocation(line: 1034, column: 41, scope: !10478)
!10480 = !DILocation(line: 1034, column: 46, scope: !10478)
!10481 = !DILocation(line: 1034, column: 51, scope: !10478)
!10482 = !DILocation(line: 1034, column: 56, scope: !10478)
!10483 = !DILocation(line: 1034, column: 19, scope: !10478)
!10484 = !DILocation(line: 1034, column: 17, scope: !10478)
!10485 = !DILocation(line: 1034, column: 69, scope: !10478)
!10486 = !DILocation(line: 1034, column: 12, scope: !10429)
!10487 = !DILocation(line: 1035, column: 20, scope: !10478)
!10488 = !DILocation(line: 1035, column: 13, scope: !10478)
!10489 = !DILocation(line: 1036, column: 34, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10429, file: !1001, line: 1036, column: 12)
!10491 = !DILocation(line: 1036, column: 38, scope: !10490)
!10492 = !DILocation(line: 1036, column: 43, scope: !10490)
!10493 = !DILocation(line: 1036, column: 48, scope: !10490)
!10494 = !DILocation(line: 1036, column: 53, scope: !10490)
!10495 = !DILocation(line: 1036, column: 19, scope: !10490)
!10496 = !DILocation(line: 1036, column: 17, scope: !10490)
!10497 = !DILocation(line: 1036, column: 66, scope: !10490)
!10498 = !DILocation(line: 1036, column: 12, scope: !10429)
!10499 = !DILocation(line: 1037, column: 20, scope: !10490)
!10500 = !DILocation(line: 1037, column: 13, scope: !10490)
!10501 = !DILocation(line: 1038, column: 34, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10429, file: !1001, line: 1038, column: 12)
!10503 = !DILocation(line: 1038, column: 38, scope: !10502)
!10504 = !DILocation(line: 1038, column: 43, scope: !10502)
!10505 = !DILocation(line: 1038, column: 48, scope: !10502)
!10506 = !DILocation(line: 1038, column: 53, scope: !10502)
!10507 = !DILocation(line: 1038, column: 19, scope: !10502)
!10508 = !DILocation(line: 1038, column: 17, scope: !10502)
!10509 = !DILocation(line: 1038, column: 66, scope: !10502)
!10510 = !DILocation(line: 1038, column: 12, scope: !10429)
!10511 = !DILocation(line: 1039, column: 20, scope: !10502)
!10512 = !DILocation(line: 1039, column: 13, scope: !10502)
!10513 = !DILocation(line: 1042, column: 56, scope: !10309)
!10514 = !DILocation(line: 1042, column: 46, scope: !10309)
!10515 = !DILocation(line: 1042, column: 10, scope: !10309)
!10516 = !DILocation(line: 1042, column: 15, scope: !10309)
!10517 = !DILocation(line: 1042, column: 23, scope: !10309)
!10518 = !DILocation(line: 1042, column: 44, scope: !10309)
!10519 = !DILocation(line: 1042, column: 9, scope: !10300)
!10520 = !DILocation(line: 1043, column: 26, scope: !10309)
!10521 = !DILocation(line: 1043, column: 30, scope: !10309)
!10522 = !DILocation(line: 1043, column: 35, scope: !10309)
!10523 = !DILocation(line: 1043, column: 43, scope: !10309)
!10524 = !DILocation(line: 1043, column: 60, scope: !10309)
!10525 = !DILocation(line: 1043, column: 65, scope: !10309)
!10526 = !DILocation(line: 1043, column: 9, scope: !10309)
!10527 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !10308)
!10528 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !10308)
!10529 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !10308)
!10530 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !10308)
!10531 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !10308)
!10532 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !10308)
!10533 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !10308)
!10534 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !10308)
!10535 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !10308)
!10536 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !10308)
!10537 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !10308)
!10538 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !10308)
!10539 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !10308)
!10540 = !DILocation(line: 1044, column: 56, scope: !10303)
!10541 = !DILocation(line: 1044, column: 46, scope: !10303)
!10542 = !DILocation(line: 1044, column: 10, scope: !10303)
!10543 = !DILocation(line: 1044, column: 15, scope: !10303)
!10544 = !DILocation(line: 1044, column: 23, scope: !10303)
!10545 = !DILocation(line: 1044, column: 44, scope: !10303)
!10546 = !DILocation(line: 1044, column: 9, scope: !10300)
!10547 = !DILocation(line: 1045, column: 26, scope: !10303)
!10548 = !DILocation(line: 1045, column: 30, scope: !10303)
!10549 = !DILocation(line: 1045, column: 35, scope: !10303)
!10550 = !DILocation(line: 1045, column: 43, scope: !10303)
!10551 = !DILocation(line: 1045, column: 60, scope: !10303)
!10552 = !DILocation(line: 1045, column: 65, scope: !10303)
!10553 = !DILocation(line: 1045, column: 9, scope: !10303)
!10554 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !10302)
!10555 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !10302)
!10556 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !10302)
!10557 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !10302)
!10558 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !10302)
!10559 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !10302)
!10560 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !10302)
!10561 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !10302)
!10562 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !10302)
!10563 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !10302)
!10564 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !10302)
!10565 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !10302)
!10566 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !10302)
!10567 = !DILocation(line: 1047, column: 5, scope: !10300)
!10568 = !DILocation(line: 1048, column: 1, scope: !10300)
!10569 = distinct !DISubprogram(name: "read_sbr_extension", scope: !1001, file: !1001, line: 949, type: !10570, isLocal: true, isDefinition: true, scopeLine: 952, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{null, !1504, !1123, !2912, !992, !1793}
!10572 = !DILocalVariable(name: "ac", arg: 1, scope: !10569, file: !1001, line: 949, type: !1504)
!10573 = !DILocation(line: 949, column: 44, scope: !10569)
!10574 = !DILocalVariable(name: "sbr", arg: 2, scope: !10569, file: !1001, line: 949, type: !1123)
!10575 = !DILocation(line: 949, column: 73, scope: !10569)
!10576 = !DILocalVariable(name: "gb", arg: 3, scope: !10569, file: !1001, line: 950, type: !2912)
!10577 = !DILocation(line: 950, column: 47, scope: !10569)
!10578 = !DILocalVariable(name: "bs_extension_id", arg: 4, scope: !10569, file: !1001, line: 951, type: !992)
!10579 = !DILocation(line: 951, column: 36, scope: !10569)
!10580 = !DILocalVariable(name: "num_bits_left", arg: 5, scope: !10569, file: !1001, line: 951, type: !1793)
!10581 = !DILocation(line: 951, column: 58, scope: !10569)
!10582 = !DILocation(line: 953, column: 13, scope: !10569)
!10583 = !DILocation(line: 953, column: 5, scope: !10569)
!10584 = !DILocation(line: 955, column: 14, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !1001, line: 955, column: 13)
!10586 = distinct !DILexicalBlock(scope: !10569, file: !1001, line: 953, column: 30)
!10587 = !DILocation(line: 955, column: 18, scope: !10585)
!10588 = !DILocation(line: 955, column: 24, scope: !10585)
!10589 = !DILocation(line: 955, column: 29, scope: !10585)
!10590 = !DILocation(line: 955, column: 13, scope: !10586)
!10591 = !DILocation(line: 956, column: 20, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10585, file: !1001, line: 955, column: 33)
!10593 = !DILocation(line: 956, column: 24, scope: !10592)
!10594 = !DILocation(line: 956, column: 13, scope: !10592)
!10595 = !DILocation(line: 957, column: 28, scope: !10592)
!10596 = !DILocation(line: 957, column: 33, scope: !10592)
!10597 = !DILocation(line: 957, column: 32, scope: !10592)
!10598 = !DILocation(line: 957, column: 13, scope: !10592)
!10599 = !DILocation(line: 958, column: 14, scope: !10592)
!10600 = !DILocation(line: 958, column: 28, scope: !10592)
!10601 = !DILocation(line: 959, column: 9, scope: !10592)
!10602 = !DILocation(line: 960, column: 47, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10585, file: !1001, line: 959, column: 16)
!10604 = !DILocation(line: 960, column: 51, scope: !10603)
!10605 = !DILocation(line: 960, column: 58, scope: !10603)
!10606 = !DILocation(line: 960, column: 63, scope: !10603)
!10607 = !DILocation(line: 960, column: 68, scope: !10603)
!10608 = !DILocation(line: 960, column: 73, scope: !10603)
!10609 = !DILocation(line: 960, column: 72, scope: !10603)
!10610 = !DILocation(line: 960, column: 31, scope: !10603)
!10611 = !DILocation(line: 960, column: 14, scope: !10603)
!10612 = !DILocation(line: 960, column: 28, scope: !10603)
!10613 = !DILocation(line: 961, column: 13, scope: !10603)
!10614 = !DILocation(line: 961, column: 17, scope: !10603)
!10615 = !DILocation(line: 961, column: 24, scope: !10603)
!10616 = !DILocation(line: 961, column: 32, scope: !10603)
!10617 = !DILocation(line: 963, column: 9, scope: !10586)
!10618 = !DILocation(line: 966, column: 13, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10586, file: !1001, line: 966, column: 13)
!10620 = !DILocation(line: 966, column: 29, scope: !10619)
!10621 = !DILocation(line: 966, column: 33, scope: !10622)
!10622 = !DILexicalBlockFile(scope: !10619, file: !1001, discriminator: 1)
!10623 = !DILocation(line: 966, column: 32, scope: !10622)
!10624 = !DILocation(line: 966, column: 47, scope: !10622)
!10625 = !DILocation(line: 966, column: 52, scope: !10622)
!10626 = !DILocation(line: 966, column: 65, scope: !10627)
!10627 = !DILexicalBlockFile(scope: !10619, file: !1001, discriminator: 2)
!10628 = !DILocation(line: 966, column: 70, scope: !10627)
!10629 = !DILocation(line: 966, column: 69, scope: !10627)
!10630 = !DILocation(line: 966, column: 55, scope: !10627)
!10631 = !DILocation(line: 966, column: 13, scope: !10627)
!10632 = !DILocation(line: 967, column: 35, scope: !10619)
!10633 = !DILocation(line: 967, column: 39, scope: !10619)
!10634 = !DILocation(line: 967, column: 13, scope: !10619)
!10635 = !DILocation(line: 968, column: 24, scope: !10586)
!10636 = !DILocation(line: 968, column: 29, scope: !10586)
!10637 = !DILocation(line: 968, column: 28, scope: !10586)
!10638 = !DILocation(line: 968, column: 9, scope: !10586)
!10639 = !DILocation(line: 969, column: 10, scope: !10586)
!10640 = !DILocation(line: 969, column: 24, scope: !10586)
!10641 = !DILocation(line: 970, column: 9, scope: !10586)
!10642 = !DILocation(line: 972, column: 1, scope: !10569)
!10643 = distinct !DISubprogram(name: "read_sbr_grid", scope: !1001, file: !1001, line: 630, type: !10644, isLocal: true, isDefinition: true, scopeLine: 632, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!992, !1504, !1123, !2912, !2553}
!10646 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !10647)
!10647 = distinct !DILocation(line: 726, column: 9, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 645, column: 47)
!10649 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !10647)
!10650 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !10647)
!10651 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !10647)
!10652 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !10653)
!10653 = distinct !DILocation(line: 699, column: 9, scope: !10648)
!10654 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !10653)
!10655 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !10653)
!10656 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !10653)
!10657 = !DILocalVariable(name: "ac", arg: 1, scope: !10643, file: !1001, line: 630, type: !1504)
!10658 = !DILocation(line: 630, column: 38, scope: !10643)
!10659 = !DILocalVariable(name: "sbr", arg: 2, scope: !10643, file: !1001, line: 630, type: !1123)
!10660 = !DILocation(line: 630, column: 67, scope: !10643)
!10661 = !DILocalVariable(name: "gb", arg: 3, scope: !10643, file: !1001, line: 631, type: !2912)
!10662 = !DILocation(line: 631, column: 41, scope: !10643)
!10663 = !DILocalVariable(name: "ch_data", arg: 4, scope: !10643, file: !1001, line: 631, type: !2553)
!10664 = !DILocation(line: 631, column: 54, scope: !10643)
!10665 = !DILocalVariable(name: "i", scope: !10643, file: !1001, line: 633, type: !992)
!10666 = !DILocation(line: 633, column: 9, scope: !10643)
!10667 = !DILocalVariable(name: "bs_pointer", scope: !10643, file: !1001, line: 634, type: !992)
!10668 = !DILocation(line: 634, column: 9, scope: !10643)
!10669 = !DILocalVariable(name: "abs_bord_trail", scope: !10643, file: !1001, line: 636, type: !992)
!10670 = !DILocation(line: 636, column: 9, scope: !10643)
!10671 = !DILocalVariable(name: "num_rel_lead", scope: !10643, file: !1001, line: 637, type: !992)
!10672 = !DILocation(line: 637, column: 9, scope: !10643)
!10673 = !DILocalVariable(name: "num_rel_trail", scope: !10643, file: !1001, line: 637, type: !992)
!10674 = !DILocation(line: 637, column: 23, scope: !10643)
!10675 = !DILocalVariable(name: "bs_num_env_old", scope: !10643, file: !1001, line: 638, type: !985)
!10676 = !DILocation(line: 638, column: 14, scope: !10643)
!10677 = !DILocation(line: 638, column: 31, scope: !10643)
!10678 = !DILocation(line: 638, column: 40, scope: !10643)
!10679 = !DILocalVariable(name: "bs_frame_class", scope: !10643, file: !1001, line: 639, type: !992)
!10680 = !DILocation(line: 639, column: 9, scope: !10643)
!10681 = !DILocalVariable(name: "bs_num_env", scope: !10643, file: !1001, line: 639, type: !992)
!10682 = !DILocation(line: 639, column: 25, scope: !10643)
!10683 = !DILocation(line: 641, column: 52, scope: !10643)
!10684 = !DILocation(line: 641, column: 61, scope: !10643)
!10685 = !DILocation(line: 641, column: 31, scope: !10643)
!10686 = !DILocation(line: 641, column: 40, scope: !10643)
!10687 = !DILocation(line: 641, column: 5, scope: !10643)
!10688 = !DILocation(line: 641, column: 14, scope: !10643)
!10689 = !DILocation(line: 641, column: 29, scope: !10643)
!10690 = !DILocation(line: 642, column: 27, scope: !10643)
!10691 = !DILocation(line: 642, column: 32, scope: !10643)
!10692 = !DILocation(line: 642, column: 5, scope: !10643)
!10693 = !DILocation(line: 642, column: 14, scope: !10643)
!10694 = !DILocation(line: 642, column: 25, scope: !10643)
!10695 = !DILocation(line: 643, column: 49, scope: !10643)
!10696 = !DILocation(line: 643, column: 34, scope: !10643)
!10697 = !DILocation(line: 643, column: 43, scope: !10643)
!10698 = !DILocation(line: 643, column: 5, scope: !10643)
!10699 = !DILocation(line: 643, column: 14, scope: !10643)
!10700 = !DILocation(line: 643, column: 32, scope: !10643)
!10701 = !DILocation(line: 645, column: 39, scope: !10643)
!10702 = !DILocation(line: 645, column: 30, scope: !10643)
!10703 = !DILocation(line: 645, column: 28, scope: !10643)
!10704 = !DILocation(line: 645, column: 5, scope: !10643)
!10705 = !DILocation(line: 647, column: 36, scope: !10648)
!10706 = !DILocation(line: 647, column: 27, scope: !10648)
!10707 = !DILocation(line: 647, column: 24, scope: !10648)
!10708 = !DILocation(line: 647, column: 20, scope: !10648)
!10709 = !DILocation(line: 648, column: 13, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 648, column: 13)
!10711 = !DILocation(line: 648, column: 24, scope: !10710)
!10712 = !DILocation(line: 648, column: 13, scope: !10648)
!10713 = !DILocation(line: 649, column: 20, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10710, file: !1001, line: 648, column: 29)
!10715 = !DILocation(line: 649, column: 24, scope: !10714)
!10716 = !DILocation(line: 651, column: 20, scope: !10714)
!10717 = !DILocation(line: 649, column: 13, scope: !10714)
!10718 = !DILocation(line: 652, column: 13, scope: !10714)
!10719 = !DILocation(line: 654, column: 31, scope: !10648)
!10720 = !DILocation(line: 654, column: 9, scope: !10648)
!10721 = !DILocation(line: 654, column: 18, scope: !10648)
!10722 = !DILocation(line: 654, column: 29, scope: !10648)
!10723 = !DILocation(line: 655, column: 24, scope: !10648)
!10724 = !DILocation(line: 655, column: 33, scope: !10648)
!10725 = !DILocation(line: 655, column: 44, scope: !10648)
!10726 = !DILocation(line: 655, column: 22, scope: !10648)
!10727 = !DILocation(line: 656, column: 13, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 656, column: 13)
!10729 = !DILocation(line: 656, column: 22, scope: !10728)
!10730 = !DILocation(line: 656, column: 33, scope: !10728)
!10731 = !DILocation(line: 656, column: 13, scope: !10648)
!10732 = !DILocation(line: 657, column: 13, scope: !10728)
!10733 = !DILocation(line: 657, column: 22, scope: !10728)
!10734 = !DILocation(line: 657, column: 33, scope: !10728)
!10735 = !DILocation(line: 660, column: 9, scope: !10648)
!10736 = !DILocation(line: 660, column: 18, scope: !10648)
!10737 = !DILocation(line: 660, column: 27, scope: !10648)
!10738 = !DILocation(line: 661, column: 47, scope: !10648)
!10739 = !DILocation(line: 661, column: 24, scope: !10648)
!10740 = !DILocation(line: 661, column: 33, scope: !10648)
!10741 = !DILocation(line: 661, column: 9, scope: !10648)
!10742 = !DILocation(line: 661, column: 18, scope: !10648)
!10743 = !DILocation(line: 661, column: 45, scope: !10648)
!10744 = !DILocation(line: 663, column: 27, scope: !10648)
!10745 = !DILocation(line: 663, column: 45, scope: !10648)
!10746 = !DILocation(line: 663, column: 54, scope: !10648)
!10747 = !DILocation(line: 663, column: 65, scope: !10648)
!10748 = !DILocation(line: 663, column: 42, scope: !10648)
!10749 = !DILocation(line: 664, column: 20, scope: !10648)
!10750 = !DILocation(line: 664, column: 29, scope: !10648)
!10751 = !DILocation(line: 663, column: 72, scope: !10648)
!10752 = !DILocation(line: 663, column: 24, scope: !10648)
!10753 = !DILocation(line: 665, column: 16, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 665, column: 9)
!10755 = !DILocation(line: 665, column: 14, scope: !10754)
!10756 = !DILocation(line: 665, column: 21, scope: !10757)
!10757 = !DILexicalBlockFile(scope: !10758, file: !1001, discriminator: 1)
!10758 = distinct !DILexicalBlock(scope: !10754, file: !1001, line: 665, column: 9)
!10759 = !DILocation(line: 665, column: 25, scope: !10757)
!10760 = !DILocation(line: 665, column: 23, scope: !10757)
!10761 = !DILocation(line: 665, column: 9, scope: !10757)
!10762 = !DILocation(line: 666, column: 52, scope: !10758)
!10763 = !DILocation(line: 666, column: 37, scope: !10758)
!10764 = !DILocation(line: 666, column: 46, scope: !10758)
!10765 = !DILocation(line: 666, column: 57, scope: !10758)
!10766 = !DILocation(line: 666, column: 55, scope: !10758)
!10767 = !DILocation(line: 666, column: 28, scope: !10758)
!10768 = !DILocation(line: 666, column: 30, scope: !10758)
!10769 = !DILocation(line: 666, column: 13, scope: !10758)
!10770 = !DILocation(line: 666, column: 22, scope: !10758)
!10771 = !DILocation(line: 666, column: 35, scope: !10758)
!10772 = !DILocation(line: 665, column: 40, scope: !10773)
!10773 = !DILexicalBlockFile(scope: !10758, file: !1001, discriminator: 2)
!10774 = !DILocation(line: 665, column: 9, scope: !10773)
!10775 = distinct !{!10775, !10776}
!10776 = !DILocation(line: 665, column: 9, scope: !10648)
!10777 = !DILocation(line: 668, column: 45, scope: !10648)
!10778 = !DILocation(line: 668, column: 35, scope: !10648)
!10779 = !DILocation(line: 668, column: 9, scope: !10648)
!10780 = !DILocation(line: 668, column: 18, scope: !10648)
!10781 = !DILocation(line: 668, column: 33, scope: !10648)
!10782 = !DILocation(line: 669, column: 16, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 669, column: 9)
!10784 = !DILocation(line: 669, column: 14, scope: !10783)
!10785 = !DILocation(line: 669, column: 21, scope: !10786)
!10786 = !DILexicalBlockFile(scope: !10787, file: !1001, discriminator: 1)
!10787 = distinct !DILexicalBlock(scope: !10783, file: !1001, line: 669, column: 9)
!10788 = !DILocation(line: 669, column: 25, scope: !10786)
!10789 = !DILocation(line: 669, column: 34, scope: !10786)
!10790 = !DILocation(line: 669, column: 23, scope: !10786)
!10791 = !DILocation(line: 669, column: 9, scope: !10786)
!10792 = !DILocation(line: 670, column: 43, scope: !10787)
!10793 = !DILocation(line: 670, column: 52, scope: !10787)
!10794 = !DILocation(line: 670, column: 34, scope: !10787)
!10795 = !DILocation(line: 670, column: 36, scope: !10787)
!10796 = !DILocation(line: 670, column: 13, scope: !10787)
!10797 = !DILocation(line: 670, column: 22, scope: !10787)
!10798 = !DILocation(line: 670, column: 41, scope: !10787)
!10799 = !DILocation(line: 669, column: 47, scope: !10800)
!10800 = !DILexicalBlockFile(scope: !10787, file: !1001, discriminator: 2)
!10801 = !DILocation(line: 669, column: 9, scope: !10800)
!10802 = distinct !{!10802, !10803}
!10803 = !DILocation(line: 669, column: 9, scope: !10648)
!10804 = !DILocation(line: 671, column: 9, scope: !10648)
!10805 = !DILocation(line: 673, column: 36, scope: !10648)
!10806 = !DILocation(line: 673, column: 27, scope: !10648)
!10807 = !DILocation(line: 673, column: 24, scope: !10648)
!10808 = !DILocation(line: 674, column: 34, scope: !10648)
!10809 = !DILocation(line: 674, column: 25, scope: !10648)
!10810 = !DILocation(line: 674, column: 23, scope: !10648)
!10811 = !DILocation(line: 675, column: 31, scope: !10648)
!10812 = !DILocation(line: 675, column: 45, scope: !10648)
!10813 = !DILocation(line: 675, column: 9, scope: !10648)
!10814 = !DILocation(line: 675, column: 18, scope: !10648)
!10815 = !DILocation(line: 675, column: 29, scope: !10648)
!10816 = !DILocation(line: 676, column: 9, scope: !10648)
!10817 = !DILocation(line: 676, column: 18, scope: !10648)
!10818 = !DILocation(line: 676, column: 27, scope: !10648)
!10819 = !DILocation(line: 677, column: 47, scope: !10648)
!10820 = !DILocation(line: 677, column: 24, scope: !10648)
!10821 = !DILocation(line: 677, column: 33, scope: !10648)
!10822 = !DILocation(line: 677, column: 9, scope: !10648)
!10823 = !DILocation(line: 677, column: 18, scope: !10648)
!10824 = !DILocation(line: 677, column: 45, scope: !10648)
!10825 = !DILocation(line: 679, column: 16, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 679, column: 9)
!10827 = !DILocation(line: 679, column: 14, scope: !10826)
!10828 = !DILocation(line: 679, column: 21, scope: !10829)
!10829 = !DILexicalBlockFile(scope: !10830, file: !1001, discriminator: 1)
!10830 = distinct !DILexicalBlock(scope: !10826, file: !1001, line: 679, column: 9)
!10831 = !DILocation(line: 679, column: 25, scope: !10829)
!10832 = !DILocation(line: 679, column: 23, scope: !10829)
!10833 = !DILocation(line: 679, column: 9, scope: !10829)
!10834 = !DILocation(line: 681, column: 32, scope: !10830)
!10835 = !DILocation(line: 681, column: 41, scope: !10830)
!10836 = !DILocation(line: 681, column: 54, scope: !10830)
!10837 = !DILocation(line: 681, column: 52, scope: !10830)
!10838 = !DILocation(line: 681, column: 17, scope: !10830)
!10839 = !DILocation(line: 681, column: 26, scope: !10830)
!10840 = !DILocation(line: 681, column: 72, scope: !10830)
!10841 = !DILocation(line: 681, column: 63, scope: !10830)
!10842 = !DILocation(line: 681, column: 61, scope: !10830)
!10843 = !DILocation(line: 681, column: 57, scope: !10830)
!10844 = !DILocation(line: 681, column: 79, scope: !10830)
!10845 = !DILocation(line: 680, column: 28, scope: !10830)
!10846 = !DILocation(line: 680, column: 37, scope: !10830)
!10847 = !DILocation(line: 680, column: 48, scope: !10830)
!10848 = !DILocation(line: 680, column: 54, scope: !10830)
!10849 = !DILocation(line: 680, column: 52, scope: !10830)
!10850 = !DILocation(line: 680, column: 13, scope: !10830)
!10851 = !DILocation(line: 680, column: 22, scope: !10830)
!10852 = !DILocation(line: 680, column: 57, scope: !10830)
!10853 = !DILocation(line: 679, column: 41, scope: !10854)
!10854 = !DILexicalBlockFile(scope: !10830, file: !1001, discriminator: 2)
!10855 = !DILocation(line: 679, column: 9, scope: !10854)
!10856 = distinct !{!10856, !10857}
!10857 = !DILocation(line: 679, column: 9, scope: !10648)
!10858 = !DILocation(line: 683, column: 31, scope: !10648)
!10859 = !DILocation(line: 683, column: 45, scope: !10648)
!10860 = !DILocation(line: 683, column: 54, scope: !10648)
!10861 = !DILocation(line: 683, column: 35, scope: !10648)
!10862 = !DILocation(line: 683, column: 22, scope: !10648)
!10863 = !DILocation(line: 683, column: 20, scope: !10648)
!10864 = !DILocation(line: 685, column: 16, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 685, column: 9)
!10866 = !DILocation(line: 685, column: 14, scope: !10865)
!10867 = !DILocation(line: 685, column: 21, scope: !10868)
!10868 = !DILexicalBlockFile(scope: !10869, file: !1001, discriminator: 1)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !1001, line: 685, column: 9)
!10870 = !DILocation(line: 685, column: 25, scope: !10868)
!10871 = !DILocation(line: 685, column: 34, scope: !10868)
!10872 = !DILocation(line: 685, column: 23, scope: !10868)
!10873 = !DILocation(line: 685, column: 9, scope: !10868)
!10874 = !DILocation(line: 686, column: 71, scope: !10869)
!10875 = !DILocation(line: 686, column: 61, scope: !10869)
!10876 = !DILocation(line: 686, column: 34, scope: !10869)
!10877 = !DILocation(line: 686, column: 43, scope: !10869)
!10878 = !DILocation(line: 686, column: 56, scope: !10869)
!10879 = !DILocation(line: 686, column: 54, scope: !10869)
!10880 = !DILocation(line: 686, column: 13, scope: !10869)
!10881 = !DILocation(line: 686, column: 22, scope: !10869)
!10882 = !DILocation(line: 686, column: 59, scope: !10869)
!10883 = !DILocation(line: 685, column: 47, scope: !10884)
!10884 = !DILexicalBlockFile(scope: !10869, file: !1001, discriminator: 2)
!10885 = !DILocation(line: 685, column: 9, scope: !10884)
!10886 = distinct !{!10886, !10887}
!10887 = !DILocation(line: 685, column: 9, scope: !10648)
!10888 = !DILocation(line: 687, column: 9, scope: !10648)
!10889 = !DILocation(line: 689, column: 38, scope: !10648)
!10890 = !DILocation(line: 689, column: 29, scope: !10648)
!10891 = !DILocation(line: 689, column: 9, scope: !10648)
!10892 = !DILocation(line: 689, column: 18, scope: !10648)
!10893 = !DILocation(line: 689, column: 27, scope: !10648)
!10894 = !DILocation(line: 690, column: 33, scope: !10648)
!10895 = !DILocation(line: 690, column: 24, scope: !10648)
!10896 = !DILocation(line: 690, column: 22, scope: !10648)
!10897 = !DILocation(line: 691, column: 31, scope: !10648)
!10898 = !DILocation(line: 691, column: 44, scope: !10648)
!10899 = !DILocation(line: 691, column: 9, scope: !10648)
!10900 = !DILocation(line: 691, column: 18, scope: !10648)
!10901 = !DILocation(line: 691, column: 29, scope: !10648)
!10902 = !DILocation(line: 692, column: 47, scope: !10648)
!10903 = !DILocation(line: 692, column: 24, scope: !10648)
!10904 = !DILocation(line: 692, column: 33, scope: !10648)
!10905 = !DILocation(line: 692, column: 9, scope: !10648)
!10906 = !DILocation(line: 692, column: 18, scope: !10648)
!10907 = !DILocation(line: 692, column: 45, scope: !10648)
!10908 = !DILocation(line: 694, column: 16, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 694, column: 9)
!10910 = !DILocation(line: 694, column: 14, scope: !10909)
!10911 = !DILocation(line: 694, column: 21, scope: !10912)
!10912 = !DILexicalBlockFile(scope: !10913, file: !1001, discriminator: 1)
!10913 = distinct !DILexicalBlock(scope: !10909, file: !1001, line: 694, column: 9)
!10914 = !DILocation(line: 694, column: 25, scope: !10912)
!10915 = !DILocation(line: 694, column: 23, scope: !10912)
!10916 = !DILocation(line: 694, column: 9, scope: !10912)
!10917 = !DILocation(line: 695, column: 52, scope: !10913)
!10918 = !DILocation(line: 695, column: 37, scope: !10913)
!10919 = !DILocation(line: 695, column: 46, scope: !10913)
!10920 = !DILocation(line: 695, column: 70, scope: !10913)
!10921 = !DILocation(line: 695, column: 61, scope: !10913)
!10922 = !DILocation(line: 695, column: 59, scope: !10913)
!10923 = !DILocation(line: 695, column: 55, scope: !10913)
!10924 = !DILocation(line: 695, column: 77, scope: !10913)
!10925 = !DILocation(line: 695, column: 28, scope: !10913)
!10926 = !DILocation(line: 695, column: 30, scope: !10913)
!10927 = !DILocation(line: 695, column: 13, scope: !10913)
!10928 = !DILocation(line: 695, column: 22, scope: !10913)
!10929 = !DILocation(line: 695, column: 35, scope: !10913)
!10930 = !DILocation(line: 694, column: 40, scope: !10931)
!10931 = !DILexicalBlockFile(scope: !10913, file: !1001, discriminator: 2)
!10932 = !DILocation(line: 694, column: 9, scope: !10931)
!10933 = distinct !{!10933, !10934}
!10934 = !DILocation(line: 694, column: 9, scope: !10648)
!10935 = !DILocation(line: 697, column: 31, scope: !10648)
!10936 = !DILocation(line: 697, column: 45, scope: !10648)
!10937 = !DILocation(line: 697, column: 54, scope: !10648)
!10938 = !DILocation(line: 697, column: 35, scope: !10648)
!10939 = !DILocation(line: 697, column: 22, scope: !10648)
!10940 = !DILocation(line: 697, column: 20, scope: !10648)
!10941 = !DILocation(line: 699, column: 26, scope: !10648)
!10942 = !DILocation(line: 699, column: 30, scope: !10648)
!10943 = !DILocation(line: 699, column: 39, scope: !10648)
!10944 = !DILocation(line: 699, column: 51, scope: !10648)
!10945 = !DILocation(line: 699, column: 56, scope: !10648)
!10946 = !DILocation(line: 699, column: 65, scope: !10648)
!10947 = !DILocation(line: 699, column: 9, scope: !10648)
!10948 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !10653)
!10949 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !10653)
!10950 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !10653)
!10951 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !10653)
!10952 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !10653)
!10953 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !10653)
!10954 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !10653)
!10955 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !10653)
!10956 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !10653)
!10957 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !10653)
!10958 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !10653)
!10959 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !10653)
!10960 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !10653)
!10961 = !DILocation(line: 700, column: 9, scope: !10648)
!10962 = !DILocation(line: 702, column: 38, scope: !10648)
!10963 = !DILocation(line: 702, column: 29, scope: !10648)
!10964 = !DILocation(line: 702, column: 9, scope: !10648)
!10965 = !DILocation(line: 702, column: 18, scope: !10648)
!10966 = !DILocation(line: 702, column: 27, scope: !10648)
!10967 = !DILocation(line: 703, column: 36, scope: !10648)
!10968 = !DILocation(line: 703, column: 27, scope: !10648)
!10969 = !DILocation(line: 703, column: 24, scope: !10648)
!10970 = !DILocation(line: 704, column: 33, scope: !10648)
!10971 = !DILocation(line: 704, column: 24, scope: !10648)
!10972 = !DILocation(line: 704, column: 22, scope: !10648)
!10973 = !DILocation(line: 705, column: 34, scope: !10648)
!10974 = !DILocation(line: 705, column: 25, scope: !10648)
!10975 = !DILocation(line: 705, column: 23, scope: !10648)
!10976 = !DILocation(line: 706, column: 22, scope: !10648)
!10977 = !DILocation(line: 706, column: 37, scope: !10648)
!10978 = !DILocation(line: 706, column: 35, scope: !10648)
!10979 = !DILocation(line: 706, column: 51, scope: !10648)
!10980 = !DILocation(line: 706, column: 20, scope: !10648)
!10981 = !DILocation(line: 708, column: 13, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 708, column: 13)
!10983 = !DILocation(line: 708, column: 24, scope: !10982)
!10984 = !DILocation(line: 708, column: 13, scope: !10648)
!10985 = !DILocation(line: 709, column: 20, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10982, file: !1001, line: 708, column: 29)
!10987 = !DILocation(line: 709, column: 24, scope: !10986)
!10988 = !DILocation(line: 711, column: 20, scope: !10986)
!10989 = !DILocation(line: 709, column: 13, scope: !10986)
!10990 = !DILocation(line: 712, column: 13, scope: !10986)
!10991 = !DILocation(line: 714, column: 31, scope: !10648)
!10992 = !DILocation(line: 714, column: 9, scope: !10648)
!10993 = !DILocation(line: 714, column: 18, scope: !10648)
!10994 = !DILocation(line: 714, column: 29, scope: !10648)
!10995 = !DILocation(line: 716, column: 47, scope: !10648)
!10996 = !DILocation(line: 716, column: 24, scope: !10648)
!10997 = !DILocation(line: 716, column: 33, scope: !10648)
!10998 = !DILocation(line: 716, column: 9, scope: !10648)
!10999 = !DILocation(line: 716, column: 18, scope: !10648)
!11000 = !DILocation(line: 716, column: 45, scope: !10648)
!11001 = !DILocation(line: 718, column: 16, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 718, column: 9)
!11003 = !DILocation(line: 718, column: 14, scope: !11002)
!11004 = !DILocation(line: 718, column: 21, scope: !11005)
!11005 = !DILexicalBlockFile(scope: !11006, file: !1001, discriminator: 1)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !1001, line: 718, column: 9)
!11007 = !DILocation(line: 718, column: 25, scope: !11005)
!11008 = !DILocation(line: 718, column: 23, scope: !11005)
!11009 = !DILocation(line: 718, column: 9, scope: !11005)
!11010 = !DILocation(line: 719, column: 52, scope: !11006)
!11011 = !DILocation(line: 719, column: 37, scope: !11006)
!11012 = !DILocation(line: 719, column: 46, scope: !11006)
!11013 = !DILocation(line: 719, column: 70, scope: !11006)
!11014 = !DILocation(line: 719, column: 61, scope: !11006)
!11015 = !DILocation(line: 719, column: 59, scope: !11006)
!11016 = !DILocation(line: 719, column: 55, scope: !11006)
!11017 = !DILocation(line: 719, column: 77, scope: !11006)
!11018 = !DILocation(line: 719, column: 28, scope: !11006)
!11019 = !DILocation(line: 719, column: 30, scope: !11006)
!11020 = !DILocation(line: 719, column: 13, scope: !11006)
!11021 = !DILocation(line: 719, column: 22, scope: !11006)
!11022 = !DILocation(line: 719, column: 35, scope: !11006)
!11023 = !DILocation(line: 718, column: 40, scope: !11024)
!11024 = !DILexicalBlockFile(scope: !11006, file: !1001, discriminator: 2)
!11025 = !DILocation(line: 718, column: 9, scope: !11024)
!11026 = distinct !{!11026, !11027}
!11027 = !DILocation(line: 718, column: 9, scope: !10648)
!11028 = !DILocation(line: 720, column: 16, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !10648, file: !1001, line: 720, column: 9)
!11030 = !DILocation(line: 720, column: 14, scope: !11029)
!11031 = !DILocation(line: 720, column: 21, scope: !11032)
!11032 = !DILexicalBlockFile(scope: !11033, file: !1001, discriminator: 1)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !1001, line: 720, column: 9)
!11034 = !DILocation(line: 720, column: 25, scope: !11032)
!11035 = !DILocation(line: 720, column: 23, scope: !11032)
!11036 = !DILocation(line: 720, column: 9, scope: !11032)
!11037 = !DILocation(line: 722, column: 32, scope: !11033)
!11038 = !DILocation(line: 722, column: 41, scope: !11033)
!11039 = !DILocation(line: 722, column: 54, scope: !11033)
!11040 = !DILocation(line: 722, column: 52, scope: !11033)
!11041 = !DILocation(line: 722, column: 17, scope: !11033)
!11042 = !DILocation(line: 722, column: 26, scope: !11033)
!11043 = !DILocation(line: 722, column: 72, scope: !11033)
!11044 = !DILocation(line: 722, column: 63, scope: !11033)
!11045 = !DILocation(line: 722, column: 61, scope: !11033)
!11046 = !DILocation(line: 722, column: 57, scope: !11033)
!11047 = !DILocation(line: 722, column: 79, scope: !11033)
!11048 = !DILocation(line: 721, column: 28, scope: !11033)
!11049 = !DILocation(line: 721, column: 37, scope: !11033)
!11050 = !DILocation(line: 721, column: 48, scope: !11033)
!11051 = !DILocation(line: 721, column: 54, scope: !11033)
!11052 = !DILocation(line: 721, column: 52, scope: !11033)
!11053 = !DILocation(line: 721, column: 13, scope: !11033)
!11054 = !DILocation(line: 721, column: 22, scope: !11033)
!11055 = !DILocation(line: 721, column: 57, scope: !11033)
!11056 = !DILocation(line: 720, column: 41, scope: !11057)
!11057 = !DILexicalBlockFile(scope: !11033, file: !1001, discriminator: 2)
!11058 = !DILocation(line: 720, column: 9, scope: !11057)
!11059 = distinct !{!11059, !11060}
!11060 = !DILocation(line: 720, column: 9, scope: !10648)
!11061 = !DILocation(line: 724, column: 31, scope: !10648)
!11062 = !DILocation(line: 724, column: 45, scope: !10648)
!11063 = !DILocation(line: 724, column: 54, scope: !10648)
!11064 = !DILocation(line: 724, column: 35, scope: !10648)
!11065 = !DILocation(line: 724, column: 22, scope: !10648)
!11066 = !DILocation(line: 724, column: 20, scope: !10648)
!11067 = !DILocation(line: 726, column: 26, scope: !10648)
!11068 = !DILocation(line: 726, column: 30, scope: !10648)
!11069 = !DILocation(line: 726, column: 39, scope: !10648)
!11070 = !DILocation(line: 726, column: 51, scope: !10648)
!11071 = !DILocation(line: 726, column: 56, scope: !10648)
!11072 = !DILocation(line: 726, column: 65, scope: !10648)
!11073 = !DILocation(line: 726, column: 9, scope: !10648)
!11074 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !10647)
!11075 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !10647)
!11076 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !10647)
!11077 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !10647)
!11078 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !10647)
!11079 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !10647)
!11080 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !10647)
!11081 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !10647)
!11082 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !10647)
!11083 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !10647)
!11084 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !10647)
!11085 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !10647)
!11086 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !10647)
!11087 = !DILocation(line: 727, column: 9, scope: !10648)
!11088 = !DILocation(line: 729, column: 31, scope: !10643)
!11089 = !DILocation(line: 729, column: 5, scope: !10643)
!11090 = !DILocation(line: 729, column: 14, scope: !10643)
!11091 = !DILocation(line: 729, column: 29, scope: !10643)
!11092 = !DILocation(line: 731, column: 5, scope: !10643)
!11093 = distinct !{!11093, !11092}
!11094 = !DILocation(line: 731, column: 16, scope: !11095)
!11095 = !DILexicalBlockFile(scope: !11096, file: !1001, discriminator: 1)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !1001, line: 731, column: 14)
!11097 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 731, column: 8)
!11098 = !DILocation(line: 731, column: 27, scope: !11095)
!11099 = !DILocation(line: 731, column: 14, scope: !11095)
!11100 = !DILocation(line: 731, column: 36, scope: !11101)
!11101 = !DILexicalBlockFile(scope: !11102, file: !1001, discriminator: 2)
!11102 = distinct !DILexicalBlock(scope: !11096, file: !1001, line: 731, column: 34)
!11103 = !DILocation(line: 731, column: 100, scope: !11104)
!11104 = !DILexicalBlockFile(scope: !11101, file: !1001, discriminator: 4)
!11105 = !DILocation(line: 731, column: 100, scope: !11101)
!11106 = !DILocation(line: 731, column: 111, scope: !11107)
!11107 = !DILexicalBlockFile(scope: !11097, file: !1001, discriminator: 3)
!11108 = !DILocation(line: 732, column: 9, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 732, column: 9)
!11110 = !DILocation(line: 732, column: 22, scope: !11109)
!11111 = !DILocation(line: 732, column: 31, scope: !11109)
!11112 = !DILocation(line: 732, column: 42, scope: !11109)
!11113 = !DILocation(line: 732, column: 20, scope: !11109)
!11114 = !DILocation(line: 732, column: 9, scope: !10643)
!11115 = !DILocation(line: 733, column: 16, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11109, file: !1001, line: 732, column: 47)
!11117 = !DILocation(line: 733, column: 20, scope: !11116)
!11118 = !DILocation(line: 735, column: 16, scope: !11116)
!11119 = !DILocation(line: 733, column: 9, scope: !11116)
!11120 = !DILocation(line: 736, column: 9, scope: !11116)
!11121 = !DILocation(line: 739, column: 12, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 739, column: 5)
!11123 = !DILocation(line: 739, column: 10, scope: !11122)
!11124 = !DILocation(line: 739, column: 17, scope: !11125)
!11125 = !DILexicalBlockFile(scope: !11126, file: !1001, discriminator: 1)
!11126 = distinct !DILexicalBlock(scope: !11122, file: !1001, line: 739, column: 5)
!11127 = !DILocation(line: 739, column: 22, scope: !11125)
!11128 = !DILocation(line: 739, column: 31, scope: !11125)
!11129 = !DILocation(line: 739, column: 19, scope: !11125)
!11130 = !DILocation(line: 739, column: 5, scope: !11125)
!11131 = !DILocation(line: 740, column: 28, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !1001, line: 740, column: 13)
!11133 = distinct !DILexicalBlock(scope: !11126, file: !1001, line: 739, column: 48)
!11134 = !DILocation(line: 740, column: 29, scope: !11132)
!11135 = !DILocation(line: 740, column: 13, scope: !11132)
!11136 = !DILocation(line: 740, column: 22, scope: !11132)
!11137 = !DILocation(line: 740, column: 51, scope: !11132)
!11138 = !DILocation(line: 740, column: 36, scope: !11132)
!11139 = !DILocation(line: 740, column: 45, scope: !11132)
!11140 = !DILocation(line: 740, column: 33, scope: !11132)
!11141 = !DILocation(line: 740, column: 13, scope: !11133)
!11142 = !DILocation(line: 741, column: 20, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11132, file: !1001, line: 740, column: 55)
!11144 = !DILocation(line: 741, column: 24, scope: !11143)
!11145 = !DILocation(line: 741, column: 13, scope: !11143)
!11146 = !DILocation(line: 742, column: 13, scope: !11143)
!11147 = !DILocation(line: 744, column: 5, scope: !11133)
!11148 = !DILocation(line: 739, column: 44, scope: !11149)
!11149 = !DILexicalBlockFile(scope: !11126, file: !1001, discriminator: 2)
!11150 = !DILocation(line: 739, column: 5, scope: !11149)
!11151 = distinct !{!11151, !11152}
!11152 = !DILocation(line: 739, column: 5, scope: !10643)
!11153 = !DILocation(line: 746, column: 30, scope: !10643)
!11154 = !DILocation(line: 746, column: 39, scope: !10643)
!11155 = !DILocation(line: 746, column: 50, scope: !10643)
!11156 = !DILocation(line: 746, column: 55, scope: !10643)
!11157 = !DILocation(line: 746, column: 5, scope: !10643)
!11158 = !DILocation(line: 746, column: 14, scope: !10643)
!11159 = !DILocation(line: 746, column: 27, scope: !10643)
!11160 = !DILocation(line: 748, column: 23, scope: !10643)
!11161 = !DILocation(line: 748, column: 32, scope: !10643)
!11162 = !DILocation(line: 748, column: 5, scope: !10643)
!11163 = !DILocation(line: 748, column: 14, scope: !10643)
!11164 = !DILocation(line: 748, column: 21, scope: !10643)
!11165 = !DILocation(line: 749, column: 58, scope: !10643)
!11166 = !DILocation(line: 749, column: 67, scope: !10643)
!11167 = !DILocation(line: 749, column: 43, scope: !10643)
!11168 = !DILocation(line: 749, column: 52, scope: !10643)
!11169 = !DILocation(line: 749, column: 18, scope: !10643)
!11170 = !DILocation(line: 749, column: 27, scope: !10643)
!11171 = !DILocation(line: 749, column: 5, scope: !10643)
!11172 = !DILocation(line: 749, column: 14, scope: !10643)
!11173 = !DILocation(line: 749, column: 41, scope: !10643)
!11174 = !DILocation(line: 750, column: 9, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 750, column: 9)
!11176 = !DILocation(line: 750, column: 18, scope: !11175)
!11177 = !DILocation(line: 750, column: 31, scope: !11175)
!11178 = !DILocation(line: 750, column: 9, scope: !10643)
!11179 = !DILocalVariable(name: "idx", scope: !11180, file: !1001, line: 751, type: !992)
!11180 = distinct !DILexicalBlock(scope: !11175, file: !1001, line: 750, column: 36)
!11181 = !DILocation(line: 751, column: 13, scope: !11180)
!11182 = !DILocation(line: 752, column: 13, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11180, file: !1001, line: 752, column: 13)
!11184 = !DILocation(line: 752, column: 22, scope: !11183)
!11185 = !DILocation(line: 752, column: 37, scope: !11183)
!11186 = !DILocation(line: 752, column: 13, scope: !11180)
!11187 = !DILocation(line: 753, column: 19, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !1001, line: 752, column: 48)
!11189 = !DILocation(line: 753, column: 28, scope: !11188)
!11190 = !DILocation(line: 753, column: 39, scope: !11188)
!11191 = !DILocation(line: 753, column: 17, scope: !11188)
!11192 = !DILocation(line: 754, column: 9, scope: !11188)
!11193 = !DILocation(line: 754, column: 20, scope: !11194)
!11194 = !DILexicalBlockFile(scope: !11195, file: !1001, discriminator: 1)
!11195 = distinct !DILexicalBlock(scope: !11183, file: !1001, line: 754, column: 20)
!11196 = !DILocation(line: 754, column: 29, scope: !11194)
!11197 = !DILocation(line: 754, column: 44, scope: !11194)
!11198 = !DILocation(line: 755, column: 19, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11195, file: !1001, line: 754, column: 49)
!11200 = !DILocation(line: 755, column: 28, scope: !11199)
!11201 = !DILocation(line: 755, column: 43, scope: !11199)
!11202 = !DILocation(line: 755, column: 54, scope: !11199)
!11203 = !DILocation(line: 755, column: 59, scope: !11199)
!11204 = !DILocation(line: 755, column: 42, scope: !11199)
!11205 = !DILocation(line: 755, column: 68, scope: !11206)
!11206 = !DILexicalBlockFile(scope: !11199, file: !1001, discriminator: 1)
!11207 = !DILocation(line: 755, column: 79, scope: !11206)
!11208 = !DILocation(line: 755, column: 42, scope: !11206)
!11209 = !DILocation(line: 755, column: 42, scope: !11210)
!11210 = !DILexicalBlockFile(scope: !11199, file: !1001, discriminator: 2)
!11211 = !DILocation(line: 755, column: 42, scope: !11212)
!11212 = !DILexicalBlockFile(scope: !11199, file: !1001, discriminator: 3)
!11213 = !DILocation(line: 755, column: 39, scope: !11212)
!11214 = !DILocation(line: 755, column: 17, scope: !11212)
!11215 = !DILocation(line: 756, column: 9, scope: !11199)
!11216 = !DILocation(line: 757, column: 18, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !1001, line: 757, column: 17)
!11218 = distinct !DILexicalBlock(scope: !11195, file: !1001, line: 756, column: 16)
!11219 = !DILocation(line: 757, column: 17, scope: !11218)
!11220 = !DILocation(line: 758, column: 21, scope: !11217)
!11221 = !DILocation(line: 758, column: 17, scope: !11217)
!11222 = !DILocation(line: 759, column: 22, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11217, file: !1001, line: 759, column: 22)
!11224 = !DILocation(line: 759, column: 33, scope: !11223)
!11225 = !DILocation(line: 759, column: 22, scope: !11217)
!11226 = !DILocation(line: 760, column: 23, scope: !11223)
!11227 = !DILocation(line: 760, column: 32, scope: !11223)
!11228 = !DILocation(line: 760, column: 43, scope: !11223)
!11229 = !DILocation(line: 760, column: 21, scope: !11223)
!11230 = !DILocation(line: 760, column: 17, scope: !11223)
!11231 = !DILocation(line: 762, column: 23, scope: !11223)
!11232 = !DILocation(line: 762, column: 34, scope: !11223)
!11233 = !DILocation(line: 762, column: 21, scope: !11223)
!11234 = !DILocation(line: 764, column: 42, scope: !11180)
!11235 = !DILocation(line: 764, column: 27, scope: !11180)
!11236 = !DILocation(line: 764, column: 36, scope: !11180)
!11237 = !DILocation(line: 764, column: 9, scope: !11180)
!11238 = !DILocation(line: 764, column: 18, scope: !11180)
!11239 = !DILocation(line: 764, column: 25, scope: !11180)
!11240 = !DILocation(line: 765, column: 5, scope: !11180)
!11241 = !DILocation(line: 767, column: 25, scope: !10643)
!11242 = !DILocation(line: 767, column: 34, scope: !10643)
!11243 = !DILocation(line: 767, column: 44, scope: !10643)
!11244 = !DILocation(line: 767, column: 41, scope: !10643)
!11245 = !DILocation(line: 767, column: 23, scope: !10643)
!11246 = !DILocation(line: 767, column: 5, scope: !10643)
!11247 = !DILocation(line: 767, column: 14, scope: !10643)
!11248 = !DILocation(line: 767, column: 21, scope: !10643)
!11249 = !DILocation(line: 768, column: 5, scope: !10643)
!11250 = !DILocation(line: 768, column: 14, scope: !10643)
!11251 = !DILocation(line: 768, column: 21, scope: !10643)
!11252 = !DILocation(line: 769, column: 10, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !10643, file: !1001, line: 769, column: 9)
!11254 = !DILocation(line: 769, column: 19, scope: !11253)
!11255 = !DILocation(line: 769, column: 34, scope: !11253)
!11256 = !DILocation(line: 769, column: 39, scope: !11253)
!11257 = !DILocation(line: 769, column: 42, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !11253, file: !1001, discriminator: 1)
!11259 = !DILocation(line: 769, column: 9, scope: !11258)
!11260 = !DILocation(line: 770, column: 27, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11253, file: !1001, line: 769, column: 54)
!11262 = !DILocation(line: 770, column: 36, scope: !11261)
!11263 = !DILocation(line: 770, column: 47, scope: !11261)
!11264 = !DILocation(line: 770, column: 53, scope: !11261)
!11265 = !DILocation(line: 770, column: 51, scope: !11261)
!11266 = !DILocation(line: 770, column: 9, scope: !11261)
!11267 = !DILocation(line: 770, column: 18, scope: !11261)
!11268 = !DILocation(line: 770, column: 25, scope: !11261)
!11269 = !DILocation(line: 771, column: 5, scope: !11261)
!11270 = !DILocation(line: 771, column: 17, scope: !11271)
!11271 = !DILexicalBlockFile(scope: !11272, file: !1001, discriminator: 1)
!11272 = distinct !DILexicalBlock(scope: !11253, file: !1001, line: 771, column: 16)
!11273 = !DILocation(line: 771, column: 26, scope: !11271)
!11274 = !DILocation(line: 771, column: 41, scope: !11271)
!11275 = !DILocation(line: 771, column: 47, scope: !11271)
!11276 = !DILocation(line: 771, column: 51, scope: !11277)
!11277 = !DILexicalBlockFile(scope: !11272, file: !1001, discriminator: 2)
!11278 = !DILocation(line: 771, column: 62, scope: !11277)
!11279 = !DILocation(line: 771, column: 16, scope: !11277)
!11280 = !DILocation(line: 772, column: 27, scope: !11272)
!11281 = !DILocation(line: 772, column: 38, scope: !11272)
!11282 = !DILocation(line: 772, column: 9, scope: !11272)
!11283 = !DILocation(line: 772, column: 18, scope: !11272)
!11284 = !DILocation(line: 772, column: 25, scope: !11272)
!11285 = !DILocation(line: 774, column: 5, scope: !10643)
!11286 = !DILocation(line: 775, column: 1, scope: !10643)
!11287 = distinct !DISubprogram(name: "read_sbr_dtdf", scope: !1001, file: !1001, line: 795, type: !11288, isLocal: true, isDefinition: true, scopeLine: 797, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!11288 = !DISubroutineType(types: !11289)
!11289 = !{null, !1123, !2912, !2553}
!11290 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !11291)
!11291 = distinct !DILocation(line: 799, column: 5, scope: !11287)
!11292 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !11291)
!11293 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !11291)
!11294 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !11291)
!11295 = !DILocation(line: 616, column: 83, scope: !10195, inlinedAt: !11296)
!11296 = distinct !DILocation(line: 798, column: 5, scope: !11287)
!11297 = !DILocation(line: 616, column: 96, scope: !10195, inlinedAt: !11296)
!11298 = !DILocation(line: 617, column: 51, scope: !10195, inlinedAt: !11296)
!11299 = !DILocation(line: 619, column: 9, scope: !10195, inlinedAt: !11296)
!11300 = !DILocalVariable(name: "sbr", arg: 1, scope: !11287, file: !1001, line: 795, type: !1123)
!11301 = !DILocation(line: 795, column: 52, scope: !11287)
!11302 = !DILocalVariable(name: "gb", arg: 2, scope: !11287, file: !1001, line: 795, type: !2912)
!11303 = !DILocation(line: 795, column: 72, scope: !11287)
!11304 = !DILocalVariable(name: "ch_data", arg: 3, scope: !11287, file: !1001, line: 796, type: !2553)
!11305 = !DILocation(line: 796, column: 36, scope: !11287)
!11306 = !DILocation(line: 798, column: 22, scope: !11287)
!11307 = !DILocation(line: 798, column: 26, scope: !11287)
!11308 = !DILocation(line: 798, column: 35, scope: !11287)
!11309 = !DILocation(line: 798, column: 46, scope: !11287)
!11310 = !DILocation(line: 798, column: 55, scope: !11287)
!11311 = !DILocation(line: 798, column: 5, scope: !11287)
!11312 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !11296)
!11313 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !11296)
!11314 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !11296)
!11315 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !11296)
!11316 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !11296)
!11317 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !11296)
!11318 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !11296)
!11319 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !11296)
!11320 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !11296)
!11321 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !11296)
!11322 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !11296)
!11323 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !11296)
!11324 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !11296)
!11325 = !DILocation(line: 799, column: 22, scope: !11287)
!11326 = !DILocation(line: 799, column: 26, scope: !11287)
!11327 = !DILocation(line: 799, column: 35, scope: !11287)
!11328 = !DILocation(line: 799, column: 48, scope: !11287)
!11329 = !DILocation(line: 799, column: 57, scope: !11287)
!11330 = !DILocation(line: 799, column: 5, scope: !11287)
!11331 = !DILocation(line: 620, column: 12, scope: !10279, inlinedAt: !11291)
!11332 = !DILocation(line: 620, column: 10, scope: !10279, inlinedAt: !11291)
!11333 = !DILocation(line: 620, column: 17, scope: !10282, inlinedAt: !11291)
!11334 = !DILocation(line: 620, column: 21, scope: !10282, inlinedAt: !11291)
!11335 = !DILocation(line: 620, column: 19, scope: !10282, inlinedAt: !11291)
!11336 = !DILocation(line: 620, column: 5, scope: !10282, inlinedAt: !11291)
!11337 = !DILocation(line: 621, column: 28, scope: !10288, inlinedAt: !11291)
!11338 = !DILocation(line: 621, column: 18, scope: !10288, inlinedAt: !11291)
!11339 = !DILocation(line: 621, column: 13, scope: !10288, inlinedAt: !11291)
!11340 = !DILocation(line: 621, column: 9, scope: !10288, inlinedAt: !11291)
!11341 = !DILocation(line: 621, column: 16, scope: !10288, inlinedAt: !11291)
!11342 = !DILocation(line: 620, column: 32, scope: !10294, inlinedAt: !11291)
!11343 = !DILocation(line: 620, column: 5, scope: !10294, inlinedAt: !11291)
!11344 = !DILocation(line: 800, column: 1, scope: !11287)
!11345 = distinct !DISubprogram(name: "read_sbr_invf", scope: !1001, file: !1001, line: 803, type: !11288, isLocal: true, isDefinition: true, scopeLine: 805, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!11346 = !DILocalVariable(name: "sbr", arg: 1, scope: !11345, file: !1001, line: 803, type: !1123)
!11347 = !DILocation(line: 803, column: 52, scope: !11345)
!11348 = !DILocalVariable(name: "gb", arg: 2, scope: !11345, file: !1001, line: 803, type: !2912)
!11349 = !DILocation(line: 803, column: 72, scope: !11345)
!11350 = !DILocalVariable(name: "ch_data", arg: 3, scope: !11345, file: !1001, line: 804, type: !2553)
!11351 = !DILocation(line: 804, column: 36, scope: !11345)
!11352 = !DILocalVariable(name: "i", scope: !11345, file: !1001, line: 806, type: !992)
!11353 = !DILocation(line: 806, column: 9, scope: !11345)
!11354 = !DILocation(line: 808, column: 12, scope: !11345)
!11355 = !DILocation(line: 808, column: 21, scope: !11345)
!11356 = !DILocation(line: 808, column: 5, scope: !11345)
!11357 = !DILocation(line: 808, column: 38, scope: !11345)
!11358 = !DILocation(line: 808, column: 47, scope: !11345)
!11359 = !DILocation(line: 809, column: 12, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11345, file: !1001, line: 809, column: 5)
!11361 = !DILocation(line: 809, column: 10, scope: !11360)
!11362 = !DILocation(line: 809, column: 17, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11364, file: !1001, discriminator: 1)
!11364 = distinct !DILexicalBlock(scope: !11360, file: !1001, line: 809, column: 5)
!11365 = !DILocation(line: 809, column: 21, scope: !11363)
!11366 = !DILocation(line: 809, column: 26, scope: !11363)
!11367 = !DILocation(line: 809, column: 19, scope: !11363)
!11368 = !DILocation(line: 809, column: 5, scope: !11363)
!11369 = !DILocation(line: 810, column: 48, scope: !11364)
!11370 = !DILocation(line: 810, column: 39, scope: !11364)
!11371 = !DILocation(line: 810, column: 34, scope: !11364)
!11372 = !DILocation(line: 810, column: 9, scope: !11364)
!11373 = !DILocation(line: 810, column: 18, scope: !11364)
!11374 = !DILocation(line: 810, column: 37, scope: !11364)
!11375 = !DILocation(line: 809, column: 32, scope: !11376)
!11376 = !DILexicalBlockFile(scope: !11364, file: !1001, discriminator: 2)
!11377 = !DILocation(line: 809, column: 5, scope: !11376)
!11378 = distinct !{!11378, !11379}
!11379 = !DILocation(line: 809, column: 5, scope: !11345)
!11380 = !DILocation(line: 811, column: 1, scope: !11345)
!11381 = distinct !DISubprogram(name: "read_sbr_envelope", scope: !1001, file: !1001, line: 813, type: !11382, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!992, !1504, !1123, !2912, !2553, !992}
!11384 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11385)
!11385 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11395)
!11386 = !DILexicalBlockFile(scope: !11387, file: !2914, discriminator: 11)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !2914, line: 788, column: 490)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !2914, line: 788, column: 466)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !2914, line: 788, column: 154)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !2914, line: 788, column: 130)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !2914, line: 788, column: 8)
!11392 = distinct !DISubprogram(name: "get_vlc2", scope: !2914, file: !2914, line: 762, type: !11393, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{!992, !2912, !1064, !992, !992}
!11395 = distinct !DILocation(line: 886, column: 94, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !1001, line: 885, column: 71)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !1001, line: 885, column: 13)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !1001, line: 885, column: 13)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !1001, line: 883, column: 16)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !1001, line: 854, column: 13)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !1001, line: 853, column: 47)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !1001, line: 853, column: 5)
!11403 = distinct !DILexicalBlock(scope: !11381, file: !1001, line: 853, column: 5)
!11404 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11405)
!11405 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11395)
!11406 = !DILexicalBlockFile(scope: !11389, file: !2914, discriminator: 6)
!11407 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11395)
!11409 = !DILocalVariable(name: "s", arg: 1, scope: !11392, file: !2914, line: 762, type: !2912)
!11410 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !11395)
!11411 = !DILocalVariable(name: "table", arg: 2, scope: !11392, file: !2914, line: 762, type: !1064)
!11412 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !11395)
!11413 = !DILocalVariable(name: "bits", arg: 3, scope: !11392, file: !2914, line: 763, type: !992)
!11414 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !11395)
!11415 = !DILocalVariable(name: "max_depth", arg: 4, scope: !11392, file: !2914, line: 763, type: !992)
!11416 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !11395)
!11417 = !DILocalVariable(name: "code", scope: !11392, file: !2914, line: 783, type: !992)
!11418 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !11395)
!11419 = !DILocalVariable(name: "re_index", scope: !11392, file: !2914, line: 785, type: !985)
!11420 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !11395)
!11421 = !DILocalVariable(name: "re_cache", scope: !11392, file: !2914, line: 785, type: !985)
!11422 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !11395)
!11423 = !DILocalVariable(name: "re_size_plus8", scope: !11392, file: !2914, line: 785, type: !985)
!11424 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !11395)
!11425 = !DILocalVariable(name: "n", scope: !11391, file: !2914, line: 788, type: !992)
!11426 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !11395)
!11427 = !DILocalVariable(name: "nb_bits", scope: !11391, file: !2914, line: 788, type: !992)
!11428 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !11395)
!11429 = !DILocalVariable(name: "index", scope: !11391, file: !2914, line: 788, type: !985)
!11430 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !11395)
!11431 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11432)
!11432 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11433)
!11433 = distinct !DILocation(line: 876, column: 90, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !1001, line: 874, column: 75)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !1001, line: 874, column: 17)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !1001, line: 874, column: 17)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !1001, line: 873, column: 20)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !1001, line: 864, column: 24)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !1001, line: 856, column: 17)
!11440 = distinct !DILexicalBlock(scope: !11400, file: !1001, line: 854, column: 36)
!11441 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11433)
!11443 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11444)
!11444 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11433)
!11445 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !11433)
!11446 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !11433)
!11447 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !11433)
!11448 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !11433)
!11449 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !11433)
!11450 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !11433)
!11451 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !11433)
!11452 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !11433)
!11453 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !11433)
!11454 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !11433)
!11455 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !11433)
!11456 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11457)
!11457 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11458)
!11458 = distinct !DILocation(line: 867, column: 90, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !1001, line: 865, column: 75)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !1001, line: 865, column: 17)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1001, line: 865, column: 17)
!11462 = distinct !DILexicalBlock(scope: !11438, file: !1001, line: 864, column: 53)
!11463 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11464)
!11464 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11458)
!11465 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11466)
!11466 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11458)
!11467 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !11458)
!11468 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !11458)
!11469 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !11458)
!11470 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !11458)
!11471 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !11458)
!11472 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !11458)
!11473 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !11458)
!11474 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !11458)
!11475 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !11458)
!11476 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !11458)
!11477 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !11458)
!11478 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11479)
!11479 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11480)
!11480 = distinct !DILocation(line: 858, column: 90, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !1001, line: 857, column: 75)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !1001, line: 857, column: 17)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !1001, line: 857, column: 17)
!11484 = distinct !DILexicalBlock(scope: !11439, file: !1001, line: 856, column: 73)
!11485 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11486)
!11486 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11480)
!11487 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !11488)
!11488 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11480)
!11489 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !11480)
!11490 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !11480)
!11491 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !11480)
!11492 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !11480)
!11493 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !11480)
!11494 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !11480)
!11495 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !11480)
!11496 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !11480)
!11497 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !11480)
!11498 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !11480)
!11499 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !11480)
!11500 = !DILocalVariable(name: "ac", arg: 1, scope: !11381, file: !1001, line: 813, type: !1504)
!11501 = !DILocation(line: 813, column: 42, scope: !11381)
!11502 = !DILocalVariable(name: "sbr", arg: 2, scope: !11381, file: !1001, line: 813, type: !1123)
!11503 = !DILocation(line: 813, column: 71, scope: !11381)
!11504 = !DILocalVariable(name: "gb", arg: 3, scope: !11381, file: !1001, line: 813, type: !2912)
!11505 = !DILocation(line: 813, column: 91, scope: !11381)
!11506 = !DILocalVariable(name: "ch_data", arg: 4, scope: !11381, file: !1001, line: 814, type: !2553)
!11507 = !DILocation(line: 814, column: 40, scope: !11381)
!11508 = !DILocalVariable(name: "ch", arg: 5, scope: !11381, file: !1001, line: 814, type: !992)
!11509 = !DILocation(line: 814, column: 53, scope: !11381)
!11510 = !DILocalVariable(name: "bits", scope: !11381, file: !1001, line: 816, type: !992)
!11511 = !DILocation(line: 816, column: 9, scope: !11381)
!11512 = !DILocalVariable(name: "i", scope: !11381, file: !1001, line: 817, type: !992)
!11513 = !DILocation(line: 817, column: 9, scope: !11381)
!11514 = !DILocalVariable(name: "j", scope: !11381, file: !1001, line: 817, type: !992)
!11515 = !DILocation(line: 817, column: 12, scope: !11381)
!11516 = !DILocalVariable(name: "k", scope: !11381, file: !1001, line: 817, type: !992)
!11517 = !DILocation(line: 817, column: 15, scope: !11381)
!11518 = !DILocalVariable(name: "t_huff", scope: !11381, file: !1001, line: 818, type: !1064)
!11519 = !DILocation(line: 818, column: 15, scope: !11381)
!11520 = !DILocalVariable(name: "f_huff", scope: !11381, file: !1001, line: 818, type: !1064)
!11521 = !DILocation(line: 818, column: 29, scope: !11381)
!11522 = !DILocalVariable(name: "t_lav", scope: !11381, file: !1001, line: 819, type: !992)
!11523 = !DILocation(line: 819, column: 9, scope: !11381)
!11524 = !DILocalVariable(name: "f_lav", scope: !11381, file: !1001, line: 819, type: !992)
!11525 = !DILocation(line: 819, column: 16, scope: !11381)
!11526 = !DILocalVariable(name: "delta", scope: !11381, file: !1001, line: 820, type: !1585)
!11527 = !DILocation(line: 820, column: 15, scope: !11381)
!11528 = !DILocation(line: 820, column: 24, scope: !11381)
!11529 = !DILocation(line: 820, column: 27, scope: !11381)
!11530 = !DILocation(line: 820, column: 32, scope: !11381)
!11531 = !DILocation(line: 820, column: 35, scope: !11532)
!11532 = !DILexicalBlockFile(scope: !11381, file: !1001, discriminator: 1)
!11533 = !DILocation(line: 820, column: 40, scope: !11532)
!11534 = !DILocation(line: 820, column: 52, scope: !11532)
!11535 = !DILocation(line: 820, column: 32, scope: !11536)
!11536 = !DILexicalBlockFile(scope: !11381, file: !1001, discriminator: 2)
!11537 = !DILocation(line: 820, column: 58, scope: !11536)
!11538 = !DILocation(line: 820, column: 15, scope: !11536)
!11539 = !DILocalVariable(name: "odd", scope: !11381, file: !1001, line: 821, type: !1585)
!11540 = !DILocation(line: 821, column: 15, scope: !11381)
!11541 = !DILocation(line: 821, column: 21, scope: !11381)
!11542 = !DILocation(line: 821, column: 26, scope: !11381)
!11543 = !DILocation(line: 821, column: 31, scope: !11381)
!11544 = !DILocation(line: 823, column: 9, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11381, file: !1001, line: 823, column: 9)
!11546 = !DILocation(line: 823, column: 14, scope: !11545)
!11547 = !DILocation(line: 823, column: 26, scope: !11545)
!11548 = !DILocation(line: 823, column: 29, scope: !11549)
!11549 = !DILexicalBlockFile(scope: !11545, file: !1001, discriminator: 1)
!11550 = !DILocation(line: 823, column: 9, scope: !11549)
!11551 = !DILocation(line: 824, column: 13, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !1001, line: 824, column: 13)
!11553 = distinct !DILexicalBlock(scope: !11545, file: !1001, line: 823, column: 33)
!11554 = !DILocation(line: 824, column: 22, scope: !11552)
!11555 = !DILocation(line: 824, column: 13, scope: !11553)
!11556 = !DILocation(line: 825, column: 18, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11552, file: !1001, line: 824, column: 34)
!11558 = !DILocation(line: 826, column: 55, scope: !11557)
!11559 = !DILocation(line: 826, column: 20, scope: !11557)
!11560 = !DILocation(line: 827, column: 21, scope: !11557)
!11561 = !DILocation(line: 827, column: 19, scope: !11557)
!11562 = !DILocation(line: 828, column: 55, scope: !11557)
!11563 = !DILocation(line: 828, column: 20, scope: !11557)
!11564 = !DILocation(line: 829, column: 21, scope: !11557)
!11565 = !DILocation(line: 829, column: 19, scope: !11557)
!11566 = !DILocation(line: 830, column: 9, scope: !11557)
!11567 = !DILocation(line: 831, column: 18, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11552, file: !1001, line: 830, column: 16)
!11569 = !DILocation(line: 832, column: 55, scope: !11568)
!11570 = !DILocation(line: 832, column: 20, scope: !11568)
!11571 = !DILocation(line: 833, column: 21, scope: !11568)
!11572 = !DILocation(line: 833, column: 19, scope: !11568)
!11573 = !DILocation(line: 834, column: 55, scope: !11568)
!11574 = !DILocation(line: 834, column: 20, scope: !11568)
!11575 = !DILocation(line: 835, column: 21, scope: !11568)
!11576 = !DILocation(line: 835, column: 19, scope: !11568)
!11577 = !DILocation(line: 837, column: 5, scope: !11553)
!11578 = !DILocation(line: 838, column: 13, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !1001, line: 838, column: 13)
!11580 = distinct !DILexicalBlock(scope: !11545, file: !1001, line: 837, column: 12)
!11581 = !DILocation(line: 838, column: 22, scope: !11579)
!11582 = !DILocation(line: 838, column: 13, scope: !11580)
!11583 = !DILocation(line: 839, column: 18, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11579, file: !1001, line: 838, column: 34)
!11585 = !DILocation(line: 840, column: 51, scope: !11584)
!11586 = !DILocation(line: 840, column: 20, scope: !11584)
!11587 = !DILocation(line: 841, column: 21, scope: !11584)
!11588 = !DILocation(line: 841, column: 19, scope: !11584)
!11589 = !DILocation(line: 842, column: 51, scope: !11584)
!11590 = !DILocation(line: 842, column: 20, scope: !11584)
!11591 = !DILocation(line: 843, column: 21, scope: !11584)
!11592 = !DILocation(line: 843, column: 19, scope: !11584)
!11593 = !DILocation(line: 844, column: 9, scope: !11584)
!11594 = !DILocation(line: 845, column: 18, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11579, file: !1001, line: 844, column: 16)
!11596 = !DILocation(line: 846, column: 51, scope: !11595)
!11597 = !DILocation(line: 846, column: 20, scope: !11595)
!11598 = !DILocation(line: 847, column: 21, scope: !11595)
!11599 = !DILocation(line: 847, column: 19, scope: !11595)
!11600 = !DILocation(line: 848, column: 51, scope: !11595)
!11601 = !DILocation(line: 848, column: 20, scope: !11595)
!11602 = !DILocation(line: 849, column: 21, scope: !11595)
!11603 = !DILocation(line: 849, column: 19, scope: !11595)
!11604 = !DILocation(line: 853, column: 12, scope: !11403)
!11605 = !DILocation(line: 853, column: 10, scope: !11403)
!11606 = !DILocation(line: 853, column: 17, scope: !11607)
!11607 = !DILexicalBlockFile(scope: !11402, file: !1001, discriminator: 1)
!11608 = !DILocation(line: 853, column: 21, scope: !11607)
!11609 = !DILocation(line: 853, column: 30, scope: !11607)
!11610 = !DILocation(line: 853, column: 19, scope: !11607)
!11611 = !DILocation(line: 853, column: 5, scope: !11607)
!11612 = !DILocation(line: 854, column: 32, scope: !11400)
!11613 = !DILocation(line: 854, column: 13, scope: !11400)
!11614 = !DILocation(line: 854, column: 22, scope: !11400)
!11615 = !DILocation(line: 854, column: 13, scope: !11401)
!11616 = !DILocation(line: 856, column: 38, scope: !11439)
!11617 = !DILocation(line: 856, column: 40, scope: !11439)
!11618 = !DILocation(line: 856, column: 17, scope: !11439)
!11619 = !DILocation(line: 856, column: 26, scope: !11439)
!11620 = !DILocation(line: 856, column: 69, scope: !11439)
!11621 = !DILocation(line: 856, column: 48, scope: !11439)
!11622 = !DILocation(line: 856, column: 57, scope: !11439)
!11623 = !DILocation(line: 856, column: 45, scope: !11439)
!11624 = !DILocation(line: 856, column: 17, scope: !11440)
!11625 = !DILocation(line: 857, column: 24, scope: !11483)
!11626 = !DILocation(line: 857, column: 22, scope: !11483)
!11627 = !DILocation(line: 857, column: 29, scope: !11628)
!11628 = !DILexicalBlockFile(scope: !11482, file: !1001, discriminator: 1)
!11629 = !DILocation(line: 857, column: 61, scope: !11628)
!11630 = !DILocation(line: 857, column: 63, scope: !11628)
!11631 = !DILocation(line: 857, column: 40, scope: !11628)
!11632 = !DILocation(line: 857, column: 49, scope: !11628)
!11633 = !DILocation(line: 857, column: 33, scope: !11628)
!11634 = !DILocation(line: 857, column: 38, scope: !11628)
!11635 = !DILocation(line: 857, column: 31, scope: !11628)
!11636 = !DILocation(line: 857, column: 17, scope: !11628)
!11637 = !DILocation(line: 858, column: 76, scope: !11481)
!11638 = !DILocation(line: 858, column: 53, scope: !11481)
!11639 = !DILocation(line: 858, column: 73, scope: !11481)
!11640 = !DILocation(line: 858, column: 62, scope: !11481)
!11641 = !DILocation(line: 858, column: 81, scope: !11481)
!11642 = !DILocation(line: 858, column: 99, scope: !11481)
!11643 = !DILocation(line: 858, column: 103, scope: !11481)
!11644 = !DILocation(line: 858, column: 90, scope: !11481)
!11645 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !11480)
!11646 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !11480)
!11647 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !11480)
!11648 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !11480)
!11649 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !11480)
!11650 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !11480)
!11651 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !11480)
!11652 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !11480)
!11653 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !11480)
!11654 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !11480)
!11655 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11480)
!11656 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11488)
!11657 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11488)
!11658 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11488)
!11659 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11488)
!11660 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11488)
!11661 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11488)
!11662 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11488)
!11663 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11488)
!11664 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11488)
!11665 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11488)
!11666 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11488)
!11667 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11488)
!11668 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11488)
!11669 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11488)
!11670 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11488)
!11671 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11488)
!11672 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11488)
!11673 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11488)
!11674 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !11480)
!11675 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !11480)
!11676 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !11480)
!11677 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !11480)
!11678 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !11480)
!11679 = !DILexicalBlockFile(scope: !11391, file: !2914, discriminator: 1)
!11680 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !11480)
!11681 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !11480)
!11682 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !11480)
!11683 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !11480)
!11684 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !11480)
!11685 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !11480)
!11686 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !11480)
!11687 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !11480)
!11688 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !11480)
!11689 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !11480)
!11690 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !11480)
!11691 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !11480)
!11692 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !11480)
!11693 = !DILexicalBlockFile(scope: !11390, file: !2914, discriminator: 2)
!11694 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !11480)
!11695 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !11480)
!11696 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !11480)
!11697 = !DILexicalBlockFile(scope: !11389, file: !2914, discriminator: 3)
!11698 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !11480)
!11699 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !11480)
!11700 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !11480)
!11701 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !11480)
!11702 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !11480)
!11703 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !11480)
!11704 = !DILexicalBlockFile(scope: !11389, file: !2914, discriminator: 4)
!11705 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !11480)
!11706 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !11480)
!11707 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !11480)
!11708 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !11480)
!11709 = !DILexicalBlockFile(scope: !11389, file: !2914, discriminator: 5)
!11710 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !11480)
!11711 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !11480)
!11712 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !11480)
!11713 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !11480)
!11714 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !11480)
!11715 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !11480)
!11716 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !11480)
!11717 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !11480)
!11718 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !11480)
!11719 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11480)
!11720 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11486)
!11721 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11486)
!11722 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11486)
!11723 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11486)
!11724 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11486)
!11725 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11486)
!11726 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11486)
!11727 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11486)
!11728 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11486)
!11729 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11486)
!11730 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11486)
!11731 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11486)
!11732 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11486)
!11733 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11486)
!11734 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11486)
!11735 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11486)
!11736 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11486)
!11737 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11486)
!11738 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !11480)
!11739 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !11480)
!11740 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !11480)
!11741 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !11480)
!11742 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !11480)
!11743 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !11480)
!11744 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !11480)
!11745 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !11480)
!11746 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !11480)
!11747 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !11480)
!11748 = !DILexicalBlockFile(scope: !11406, file: !2914, discriminator: 19)
!11749 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !11480)
!11750 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !11480)
!11751 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !11480)
!11752 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !11480)
!11753 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !11480)
!11754 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !11480)
!11755 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !11480)
!11756 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !11480)
!11757 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !11480)
!11758 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !11480)
!11759 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !11480)
!11760 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !11480)
!11761 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !11480)
!11762 = !DILexicalBlockFile(scope: !11388, file: !2914, discriminator: 7)
!11763 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !11480)
!11764 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !11480)
!11765 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !11480)
!11766 = !DILexicalBlockFile(scope: !11387, file: !2914, discriminator: 8)
!11767 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !11480)
!11768 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !11480)
!11769 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !11480)
!11770 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !11480)
!11771 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !11480)
!11772 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !11480)
!11773 = !DILexicalBlockFile(scope: !11387, file: !2914, discriminator: 9)
!11774 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !11480)
!11775 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !11480)
!11776 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !11480)
!11777 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !11480)
!11778 = !DILexicalBlockFile(scope: !11387, file: !2914, discriminator: 10)
!11779 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !11480)
!11780 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !11480)
!11781 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !11480)
!11782 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !11480)
!11783 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !11480)
!11784 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !11480)
!11785 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !11480)
!11786 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !11480)
!11787 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !11480)
!11788 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11480)
!11789 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11479)
!11790 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11479)
!11791 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11479)
!11792 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11479)
!11793 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11479)
!11794 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11479)
!11795 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11479)
!11796 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11479)
!11797 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11479)
!11798 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11479)
!11799 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11479)
!11800 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11479)
!11801 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11479)
!11802 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11479)
!11803 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11479)
!11804 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11479)
!11805 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11479)
!11806 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11479)
!11807 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !11480)
!11808 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !11480)
!11809 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !11480)
!11810 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !11480)
!11811 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !11480)
!11812 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !11480)
!11813 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !11480)
!11814 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !11480)
!11815 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !11480)
!11816 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !11480)
!11817 = !DILexicalBlockFile(scope: !11386, file: !2914, discriminator: 20)
!11818 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !11480)
!11819 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !11480)
!11820 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !11480)
!11821 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !11480)
!11822 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !11480)
!11823 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !11480)
!11824 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !11480)
!11825 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !11480)
!11826 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !11480)
!11827 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !11480)
!11828 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !11480)
!11829 = !DILexicalBlockFile(scope: !11389, file: !2914, discriminator: 12)
!11830 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !11480)
!11831 = !DILexicalBlockFile(scope: !11832, file: !2914, discriminator: 14)
!11832 = distinct !DILexicalBlock(scope: !11391, file: !2914, line: 788, column: 811)
!11833 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !11480)
!11834 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !11480)
!11835 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !11480)
!11836 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !11480)
!11837 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !11480)
!11838 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !11480)
!11839 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !11480)
!11840 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !11480)
!11841 = !DILexicalBlockFile(scope: !11832, file: !2914, discriminator: 15)
!11842 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !11480)
!11843 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !11480)
!11844 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !11480)
!11845 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !11480)
!11846 = !DILexicalBlockFile(scope: !11832, file: !2914, discriminator: 16)
!11847 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !11480)
!11848 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !11480)
!11849 = !DILexicalBlockFile(scope: !11832, file: !2914, discriminator: 17)
!11850 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !11480)
!11851 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !11480)
!11852 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !11480)
!11853 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !11480)
!11854 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !11480)
!11855 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !11480)
!11856 = !DILocation(line: 858, column: 119, scope: !11481)
!11857 = !DILocation(line: 858, column: 117, scope: !11481)
!11858 = !DILocation(line: 858, column: 87, scope: !11481)
!11859 = !DILocation(line: 858, column: 79, scope: !11481)
!11860 = !DILocation(line: 858, column: 48, scope: !11481)
!11861 = !DILocation(line: 858, column: 21, scope: !11481)
!11862 = !DILocation(line: 858, column: 41, scope: !11481)
!11863 = !DILocation(line: 858, column: 43, scope: !11481)
!11864 = !DILocation(line: 858, column: 30, scope: !11481)
!11865 = !DILocation(line: 858, column: 51, scope: !11481)
!11866 = !DILocation(line: 859, column: 52, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11481, file: !1001, line: 859, column: 25)
!11868 = !DILocation(line: 859, column: 25, scope: !11867)
!11869 = !DILocation(line: 859, column: 45, scope: !11867)
!11870 = !DILocation(line: 859, column: 47, scope: !11867)
!11871 = !DILocation(line: 859, column: 34, scope: !11867)
!11872 = !DILocation(line: 859, column: 55, scope: !11867)
!11873 = !DILocation(line: 859, column: 25, scope: !11481)
!11874 = !DILocation(line: 860, column: 32, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11867, file: !1001, line: 859, column: 63)
!11876 = !DILocation(line: 860, column: 36, scope: !11875)
!11877 = !DILocation(line: 860, column: 104, scope: !11875)
!11878 = !DILocation(line: 860, column: 77, scope: !11875)
!11879 = !DILocation(line: 860, column: 97, scope: !11875)
!11880 = !DILocation(line: 860, column: 99, scope: !11875)
!11881 = !DILocation(line: 860, column: 86, scope: !11875)
!11882 = !DILocation(line: 860, column: 25, scope: !11875)
!11883 = !DILocation(line: 861, column: 25, scope: !11875)
!11884 = !DILocation(line: 863, column: 17, scope: !11481)
!11885 = !DILocation(line: 857, column: 71, scope: !11886)
!11886 = !DILexicalBlockFile(scope: !11482, file: !1001, discriminator: 2)
!11887 = !DILocation(line: 857, column: 17, scope: !11886)
!11888 = distinct !{!11888, !11889}
!11889 = !DILocation(line: 857, column: 17, scope: !11484)
!11890 = !DILocation(line: 864, column: 13, scope: !11484)
!11891 = !DILocation(line: 864, column: 45, scope: !11892)
!11892 = !DILexicalBlockFile(scope: !11438, file: !1001, discriminator: 1)
!11893 = !DILocation(line: 864, column: 47, scope: !11892)
!11894 = !DILocation(line: 864, column: 24, scope: !11892)
!11895 = !DILocation(line: 864, column: 33, scope: !11892)
!11896 = !DILocation(line: 865, column: 24, scope: !11461)
!11897 = !DILocation(line: 865, column: 22, scope: !11461)
!11898 = !DILocation(line: 865, column: 29, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !11460, file: !1001, discriminator: 1)
!11900 = !DILocation(line: 865, column: 61, scope: !11899)
!11901 = !DILocation(line: 865, column: 63, scope: !11899)
!11902 = !DILocation(line: 865, column: 40, scope: !11899)
!11903 = !DILocation(line: 865, column: 49, scope: !11899)
!11904 = !DILocation(line: 865, column: 33, scope: !11899)
!11905 = !DILocation(line: 865, column: 38, scope: !11899)
!11906 = !DILocation(line: 865, column: 31, scope: !11899)
!11907 = !DILocation(line: 865, column: 17, scope: !11899)
!11908 = !DILocation(line: 866, column: 26, scope: !11459)
!11909 = !DILocation(line: 866, column: 30, scope: !11459)
!11910 = !DILocation(line: 866, column: 28, scope: !11459)
!11911 = !DILocation(line: 866, column: 35, scope: !11459)
!11912 = !DILocation(line: 866, column: 23, scope: !11459)
!11913 = !DILocation(line: 867, column: 76, scope: !11459)
!11914 = !DILocation(line: 867, column: 53, scope: !11459)
!11915 = !DILocation(line: 867, column: 73, scope: !11459)
!11916 = !DILocation(line: 867, column: 62, scope: !11459)
!11917 = !DILocation(line: 867, column: 81, scope: !11459)
!11918 = !DILocation(line: 867, column: 99, scope: !11459)
!11919 = !DILocation(line: 867, column: 103, scope: !11459)
!11920 = !DILocation(line: 867, column: 90, scope: !11459)
!11921 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !11458)
!11922 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !11458)
!11923 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !11458)
!11924 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !11458)
!11925 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !11458)
!11926 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !11458)
!11927 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !11458)
!11928 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !11458)
!11929 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !11458)
!11930 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !11458)
!11931 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11458)
!11932 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11466)
!11933 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11466)
!11934 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11466)
!11935 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11466)
!11936 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11466)
!11937 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11466)
!11938 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11466)
!11939 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11466)
!11940 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11466)
!11941 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11466)
!11942 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11466)
!11943 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11466)
!11944 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11466)
!11945 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11466)
!11946 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11466)
!11947 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11466)
!11948 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11466)
!11949 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11466)
!11950 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !11458)
!11951 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !11458)
!11952 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !11458)
!11953 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !11458)
!11954 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !11458)
!11955 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !11458)
!11956 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !11458)
!11957 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !11458)
!11958 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !11458)
!11959 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !11458)
!11960 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !11458)
!11961 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !11458)
!11962 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !11458)
!11963 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !11458)
!11964 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !11458)
!11965 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !11458)
!11966 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !11458)
!11967 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !11458)
!11968 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !11458)
!11969 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !11458)
!11970 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !11458)
!11971 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !11458)
!11972 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !11458)
!11973 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !11458)
!11974 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !11458)
!11975 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !11458)
!11976 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !11458)
!11977 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !11458)
!11978 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !11458)
!11979 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !11458)
!11980 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !11458)
!11981 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !11458)
!11982 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !11458)
!11983 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !11458)
!11984 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !11458)
!11985 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !11458)
!11986 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !11458)
!11987 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !11458)
!11988 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !11458)
!11989 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !11458)
!11990 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11458)
!11991 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11464)
!11992 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11464)
!11993 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11464)
!11994 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11464)
!11995 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11464)
!11996 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11464)
!11997 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11464)
!11998 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11464)
!11999 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11464)
!12000 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11464)
!12001 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11464)
!12002 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11464)
!12003 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11464)
!12004 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11464)
!12005 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11464)
!12006 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11464)
!12007 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11464)
!12008 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11464)
!12009 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !11458)
!12010 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !11458)
!12011 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !11458)
!12012 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !11458)
!12013 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !11458)
!12014 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !11458)
!12015 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !11458)
!12016 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !11458)
!12017 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !11458)
!12018 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !11458)
!12019 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !11458)
!12020 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !11458)
!12021 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !11458)
!12022 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !11458)
!12023 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !11458)
!12024 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !11458)
!12025 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !11458)
!12026 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !11458)
!12027 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !11458)
!12028 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !11458)
!12029 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !11458)
!12030 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !11458)
!12031 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !11458)
!12032 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !11458)
!12033 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !11458)
!12034 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !11458)
!12035 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !11458)
!12036 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !11458)
!12037 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !11458)
!12038 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !11458)
!12039 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !11458)
!12040 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !11458)
!12041 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !11458)
!12042 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !11458)
!12043 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !11458)
!12044 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !11458)
!12045 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !11458)
!12046 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !11458)
!12047 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !11458)
!12048 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !11458)
!12049 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !11458)
!12050 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !11458)
!12051 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !11458)
!12052 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !11458)
!12053 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !11458)
!12054 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11458)
!12055 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11457)
!12056 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11457)
!12057 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11457)
!12058 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11457)
!12059 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11457)
!12060 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11457)
!12061 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11457)
!12062 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11457)
!12063 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11457)
!12064 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11457)
!12065 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11457)
!12066 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11457)
!12067 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11457)
!12068 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11457)
!12069 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11457)
!12070 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11457)
!12071 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11457)
!12072 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11457)
!12073 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !11458)
!12074 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !11458)
!12075 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !11458)
!12076 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !11458)
!12077 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !11458)
!12078 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !11458)
!12079 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !11458)
!12080 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !11458)
!12081 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !11458)
!12082 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !11458)
!12083 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !11458)
!12084 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !11458)
!12085 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !11458)
!12086 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !11458)
!12087 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !11458)
!12088 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !11458)
!12089 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !11458)
!12090 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !11458)
!12091 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !11458)
!12092 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !11458)
!12093 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !11458)
!12094 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !11458)
!12095 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !11458)
!12096 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !11458)
!12097 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !11458)
!12098 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !11458)
!12099 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !11458)
!12100 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !11458)
!12101 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !11458)
!12102 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !11458)
!12103 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !11458)
!12104 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !11458)
!12105 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !11458)
!12106 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !11458)
!12107 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !11458)
!12108 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !11458)
!12109 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !11458)
!12110 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !11458)
!12111 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !11458)
!12112 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !11458)
!12113 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !11458)
!12114 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !11458)
!12115 = !DILocation(line: 867, column: 119, scope: !11459)
!12116 = !DILocation(line: 867, column: 117, scope: !11459)
!12117 = !DILocation(line: 867, column: 87, scope: !11459)
!12118 = !DILocation(line: 867, column: 79, scope: !11459)
!12119 = !DILocation(line: 867, column: 48, scope: !11459)
!12120 = !DILocation(line: 867, column: 21, scope: !11459)
!12121 = !DILocation(line: 867, column: 41, scope: !11459)
!12122 = !DILocation(line: 867, column: 43, scope: !11459)
!12123 = !DILocation(line: 867, column: 30, scope: !11459)
!12124 = !DILocation(line: 867, column: 51, scope: !11459)
!12125 = !DILocation(line: 868, column: 52, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !11459, file: !1001, line: 868, column: 25)
!12127 = !DILocation(line: 868, column: 25, scope: !12126)
!12128 = !DILocation(line: 868, column: 45, scope: !12126)
!12129 = !DILocation(line: 868, column: 47, scope: !12126)
!12130 = !DILocation(line: 868, column: 34, scope: !12126)
!12131 = !DILocation(line: 868, column: 55, scope: !12126)
!12132 = !DILocation(line: 868, column: 25, scope: !11459)
!12133 = !DILocation(line: 869, column: 32, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12126, file: !1001, line: 868, column: 63)
!12135 = !DILocation(line: 869, column: 36, scope: !12134)
!12136 = !DILocation(line: 869, column: 104, scope: !12134)
!12137 = !DILocation(line: 869, column: 77, scope: !12134)
!12138 = !DILocation(line: 869, column: 97, scope: !12134)
!12139 = !DILocation(line: 869, column: 99, scope: !12134)
!12140 = !DILocation(line: 869, column: 86, scope: !12134)
!12141 = !DILocation(line: 869, column: 25, scope: !12134)
!12142 = !DILocation(line: 870, column: 25, scope: !12134)
!12143 = !DILocation(line: 872, column: 17, scope: !11459)
!12144 = !DILocation(line: 865, column: 71, scope: !12145)
!12145 = !DILexicalBlockFile(scope: !11460, file: !1001, discriminator: 2)
!12146 = !DILocation(line: 865, column: 17, scope: !12145)
!12147 = distinct !{!12147, !12148}
!12148 = !DILocation(line: 865, column: 17, scope: !11462)
!12149 = !DILocation(line: 873, column: 13, scope: !11462)
!12150 = !DILocation(line: 874, column: 24, scope: !11436)
!12151 = !DILocation(line: 874, column: 22, scope: !11436)
!12152 = !DILocation(line: 874, column: 29, scope: !12153)
!12153 = !DILexicalBlockFile(scope: !11435, file: !1001, discriminator: 1)
!12154 = !DILocation(line: 874, column: 61, scope: !12153)
!12155 = !DILocation(line: 874, column: 63, scope: !12153)
!12156 = !DILocation(line: 874, column: 40, scope: !12153)
!12157 = !DILocation(line: 874, column: 49, scope: !12153)
!12158 = !DILocation(line: 874, column: 33, scope: !12153)
!12159 = !DILocation(line: 874, column: 38, scope: !12153)
!12160 = !DILocation(line: 874, column: 31, scope: !12153)
!12161 = !DILocation(line: 874, column: 17, scope: !12153)
!12162 = !DILocation(line: 875, column: 25, scope: !11434)
!12163 = !DILocation(line: 875, column: 31, scope: !12164)
!12164 = !DILexicalBlockFile(scope: !11434, file: !1001, discriminator: 1)
!12165 = !DILocation(line: 875, column: 30, scope: !12164)
!12166 = !DILocation(line: 875, column: 35, scope: !12164)
!12167 = !DILocation(line: 875, column: 33, scope: !12164)
!12168 = !DILocation(line: 875, column: 25, scope: !12164)
!12169 = !DILocation(line: 875, column: 25, scope: !12170)
!12170 = !DILexicalBlockFile(scope: !11434, file: !1001, discriminator: 2)
!12171 = !DILocation(line: 875, column: 25, scope: !12172)
!12172 = !DILexicalBlockFile(scope: !11434, file: !1001, discriminator: 3)
!12173 = !DILocation(line: 875, column: 23, scope: !12172)
!12174 = !DILocation(line: 876, column: 76, scope: !11434)
!12175 = !DILocation(line: 876, column: 53, scope: !11434)
!12176 = !DILocation(line: 876, column: 73, scope: !11434)
!12177 = !DILocation(line: 876, column: 62, scope: !11434)
!12178 = !DILocation(line: 876, column: 81, scope: !11434)
!12179 = !DILocation(line: 876, column: 99, scope: !11434)
!12180 = !DILocation(line: 876, column: 103, scope: !11434)
!12181 = !DILocation(line: 876, column: 90, scope: !11434)
!12182 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !11433)
!12183 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !11433)
!12184 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !11433)
!12185 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !11433)
!12186 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !11433)
!12187 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !11433)
!12188 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !11433)
!12189 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !11433)
!12190 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !11433)
!12191 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !11433)
!12192 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11433)
!12193 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11444)
!12194 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11444)
!12195 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11444)
!12196 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11444)
!12197 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11444)
!12198 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11444)
!12199 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11444)
!12200 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11444)
!12201 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11444)
!12202 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11444)
!12203 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11444)
!12204 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11444)
!12205 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11444)
!12206 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11444)
!12207 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11444)
!12208 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11444)
!12209 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11444)
!12210 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11444)
!12211 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !11433)
!12212 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !11433)
!12213 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !11433)
!12214 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !11433)
!12215 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !11433)
!12216 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !11433)
!12217 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !11433)
!12218 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !11433)
!12219 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !11433)
!12220 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !11433)
!12221 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !11433)
!12222 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !11433)
!12223 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !11433)
!12224 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !11433)
!12225 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !11433)
!12226 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !11433)
!12227 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !11433)
!12228 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !11433)
!12229 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !11433)
!12230 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !11433)
!12231 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !11433)
!12232 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !11433)
!12233 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !11433)
!12234 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !11433)
!12235 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !11433)
!12236 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !11433)
!12237 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !11433)
!12238 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !11433)
!12239 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !11433)
!12240 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !11433)
!12241 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !11433)
!12242 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !11433)
!12243 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !11433)
!12244 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !11433)
!12245 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !11433)
!12246 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !11433)
!12247 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !11433)
!12248 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !11433)
!12249 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !11433)
!12250 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !11433)
!12251 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11433)
!12252 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11442)
!12253 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11442)
!12254 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11442)
!12255 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11442)
!12256 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11442)
!12257 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11442)
!12258 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11442)
!12259 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11442)
!12260 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11442)
!12261 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11442)
!12262 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11442)
!12263 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11442)
!12264 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11442)
!12265 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11442)
!12266 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11442)
!12267 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11442)
!12268 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11442)
!12269 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11442)
!12270 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !11433)
!12271 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !11433)
!12272 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !11433)
!12273 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !11433)
!12274 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !11433)
!12275 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !11433)
!12276 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !11433)
!12277 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !11433)
!12278 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !11433)
!12279 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !11433)
!12280 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !11433)
!12281 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !11433)
!12282 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !11433)
!12283 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !11433)
!12284 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !11433)
!12285 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !11433)
!12286 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !11433)
!12287 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !11433)
!12288 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !11433)
!12289 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !11433)
!12290 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !11433)
!12291 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !11433)
!12292 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !11433)
!12293 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !11433)
!12294 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !11433)
!12295 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !11433)
!12296 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !11433)
!12297 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !11433)
!12298 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !11433)
!12299 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !11433)
!12300 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !11433)
!12301 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !11433)
!12302 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !11433)
!12303 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !11433)
!12304 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !11433)
!12305 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !11433)
!12306 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !11433)
!12307 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !11433)
!12308 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !11433)
!12309 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !11433)
!12310 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !11433)
!12311 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !11433)
!12312 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !11433)
!12313 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !11433)
!12314 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !11433)
!12315 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11433)
!12316 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11432)
!12317 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11432)
!12318 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11432)
!12319 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11432)
!12320 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11432)
!12321 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11432)
!12322 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11432)
!12323 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11432)
!12324 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11432)
!12325 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11432)
!12326 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11432)
!12327 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11432)
!12328 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11432)
!12329 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11432)
!12330 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11432)
!12331 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11432)
!12332 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11432)
!12333 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11432)
!12334 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !11433)
!12335 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !11433)
!12336 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !11433)
!12337 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !11433)
!12338 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !11433)
!12339 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !11433)
!12340 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !11433)
!12341 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !11433)
!12342 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !11433)
!12343 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !11433)
!12344 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !11433)
!12345 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !11433)
!12346 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !11433)
!12347 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !11433)
!12348 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !11433)
!12349 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !11433)
!12350 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !11433)
!12351 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !11433)
!12352 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !11433)
!12353 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !11433)
!12354 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !11433)
!12355 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !11433)
!12356 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !11433)
!12357 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !11433)
!12358 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !11433)
!12359 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !11433)
!12360 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !11433)
!12361 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !11433)
!12362 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !11433)
!12363 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !11433)
!12364 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !11433)
!12365 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !11433)
!12366 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !11433)
!12367 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !11433)
!12368 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !11433)
!12369 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !11433)
!12370 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !11433)
!12371 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !11433)
!12372 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !11433)
!12373 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !11433)
!12374 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !11433)
!12375 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !11433)
!12376 = !DILocation(line: 876, column: 119, scope: !11434)
!12377 = !DILocation(line: 876, column: 117, scope: !11434)
!12378 = !DILocation(line: 876, column: 87, scope: !11434)
!12379 = !DILocation(line: 876, column: 79, scope: !11434)
!12380 = !DILocation(line: 876, column: 48, scope: !11434)
!12381 = !DILocation(line: 876, column: 21, scope: !11434)
!12382 = !DILocation(line: 876, column: 41, scope: !11434)
!12383 = !DILocation(line: 876, column: 43, scope: !11434)
!12384 = !DILocation(line: 876, column: 30, scope: !11434)
!12385 = !DILocation(line: 876, column: 51, scope: !11434)
!12386 = !DILocation(line: 877, column: 52, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !11434, file: !1001, line: 877, column: 25)
!12388 = !DILocation(line: 877, column: 25, scope: !12387)
!12389 = !DILocation(line: 877, column: 45, scope: !12387)
!12390 = !DILocation(line: 877, column: 47, scope: !12387)
!12391 = !DILocation(line: 877, column: 34, scope: !12387)
!12392 = !DILocation(line: 877, column: 55, scope: !12387)
!12393 = !DILocation(line: 877, column: 25, scope: !11434)
!12394 = !DILocation(line: 878, column: 32, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12387, file: !1001, line: 877, column: 63)
!12396 = !DILocation(line: 878, column: 36, scope: !12395)
!12397 = !DILocation(line: 878, column: 104, scope: !12395)
!12398 = !DILocation(line: 878, column: 77, scope: !12395)
!12399 = !DILocation(line: 878, column: 97, scope: !12395)
!12400 = !DILocation(line: 878, column: 99, scope: !12395)
!12401 = !DILocation(line: 878, column: 86, scope: !12395)
!12402 = !DILocation(line: 878, column: 25, scope: !12395)
!12403 = !DILocation(line: 879, column: 25, scope: !12395)
!12404 = !DILocation(line: 881, column: 17, scope: !11434)
!12405 = !DILocation(line: 874, column: 71, scope: !12406)
!12406 = !DILexicalBlockFile(scope: !11435, file: !1001, discriminator: 2)
!12407 = !DILocation(line: 874, column: 17, scope: !12406)
!12408 = distinct !{!12408, !12409}
!12409 = !DILocation(line: 874, column: 17, scope: !11437)
!12410 = !DILocation(line: 883, column: 9, scope: !11440)
!12411 = !DILocation(line: 884, column: 45, scope: !11399)
!12412 = !DILocation(line: 884, column: 62, scope: !11399)
!12413 = !DILocation(line: 884, column: 66, scope: !11399)
!12414 = !DILocation(line: 884, column: 53, scope: !11399)
!12415 = !DILocation(line: 884, column: 51, scope: !11399)
!12416 = !DILocation(line: 884, column: 33, scope: !11399)
!12417 = !DILocation(line: 884, column: 35, scope: !11399)
!12418 = !DILocation(line: 884, column: 13, scope: !11399)
!12419 = !DILocation(line: 884, column: 22, scope: !11399)
!12420 = !DILocation(line: 884, column: 43, scope: !11399)
!12421 = !DILocation(line: 885, column: 20, scope: !11398)
!12422 = !DILocation(line: 885, column: 18, scope: !11398)
!12423 = !DILocation(line: 885, column: 25, scope: !12424)
!12424 = !DILexicalBlockFile(scope: !11397, file: !1001, discriminator: 1)
!12425 = !DILocation(line: 885, column: 57, scope: !12424)
!12426 = !DILocation(line: 885, column: 59, scope: !12424)
!12427 = !DILocation(line: 885, column: 36, scope: !12424)
!12428 = !DILocation(line: 885, column: 45, scope: !12424)
!12429 = !DILocation(line: 885, column: 29, scope: !12424)
!12430 = !DILocation(line: 885, column: 34, scope: !12424)
!12431 = !DILocation(line: 885, column: 27, scope: !12424)
!12432 = !DILocation(line: 885, column: 13, scope: !12424)
!12433 = !DILocation(line: 886, column: 76, scope: !11396)
!12434 = !DILocation(line: 886, column: 78, scope: !11396)
!12435 = !DILocation(line: 886, column: 49, scope: !11396)
!12436 = !DILocation(line: 886, column: 69, scope: !11396)
!12437 = !DILocation(line: 886, column: 71, scope: !11396)
!12438 = !DILocation(line: 886, column: 58, scope: !11396)
!12439 = !DILocation(line: 886, column: 85, scope: !11396)
!12440 = !DILocation(line: 886, column: 103, scope: !11396)
!12441 = !DILocation(line: 886, column: 107, scope: !11396)
!12442 = !DILocation(line: 886, column: 94, scope: !11396)
!12443 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !11395)
!12444 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !11395)
!12445 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !11395)
!12446 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !11395)
!12447 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !11395)
!12448 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !11395)
!12449 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !11395)
!12450 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !11395)
!12451 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !11395)
!12452 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !11395)
!12453 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !11395)
!12454 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11408)
!12455 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11408)
!12456 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11408)
!12457 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11408)
!12458 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11408)
!12459 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11408)
!12460 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11408)
!12461 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11408)
!12462 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11408)
!12463 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11408)
!12464 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11408)
!12465 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11408)
!12466 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11408)
!12467 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11408)
!12468 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11408)
!12469 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11408)
!12470 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11408)
!12471 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11408)
!12472 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !11395)
!12473 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !11395)
!12474 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !11395)
!12475 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !11395)
!12476 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !11395)
!12477 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !11395)
!12478 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !11395)
!12479 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !11395)
!12480 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !11395)
!12481 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !11395)
!12482 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !11395)
!12483 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !11395)
!12484 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !11395)
!12485 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !11395)
!12486 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !11395)
!12487 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !11395)
!12488 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !11395)
!12489 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !11395)
!12490 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !11395)
!12491 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !11395)
!12492 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !11395)
!12493 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !11395)
!12494 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !11395)
!12495 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !11395)
!12496 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !11395)
!12497 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !11395)
!12498 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !11395)
!12499 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !11395)
!12500 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !11395)
!12501 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !11395)
!12502 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !11395)
!12503 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !11395)
!12504 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !11395)
!12505 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !11395)
!12506 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !11395)
!12507 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !11395)
!12508 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !11395)
!12509 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !11395)
!12510 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !11395)
!12511 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !11395)
!12512 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !11395)
!12513 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11405)
!12514 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11405)
!12515 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11405)
!12516 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11405)
!12517 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11405)
!12518 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11405)
!12519 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11405)
!12520 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11405)
!12521 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11405)
!12522 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11405)
!12523 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11405)
!12524 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11405)
!12525 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11405)
!12526 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11405)
!12527 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11405)
!12528 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11405)
!12529 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11405)
!12530 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11405)
!12531 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !11395)
!12532 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !11395)
!12533 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !11395)
!12534 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !11395)
!12535 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !11395)
!12536 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !11395)
!12537 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !11395)
!12538 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !11395)
!12539 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !11395)
!12540 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !11395)
!12541 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !11395)
!12542 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !11395)
!12543 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !11395)
!12544 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !11395)
!12545 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !11395)
!12546 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !11395)
!12547 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !11395)
!12548 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !11395)
!12549 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !11395)
!12550 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !11395)
!12551 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !11395)
!12552 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !11395)
!12553 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !11395)
!12554 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !11395)
!12555 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !11395)
!12556 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !11395)
!12557 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !11395)
!12558 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !11395)
!12559 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !11395)
!12560 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !11395)
!12561 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !11395)
!12562 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !11395)
!12563 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !11395)
!12564 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !11395)
!12565 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !11395)
!12566 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !11395)
!12567 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !11395)
!12568 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !11395)
!12569 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !11395)
!12570 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !11395)
!12571 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !11395)
!12572 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !11395)
!12573 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !11395)
!12574 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !11395)
!12575 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !11395)
!12576 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !11395)
!12577 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !11385)
!12578 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !11385)
!12579 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !11385)
!12580 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !11385)
!12581 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !11385)
!12582 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !11385)
!12583 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !11385)
!12584 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !11385)
!12585 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !11385)
!12586 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !11385)
!12587 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !11385)
!12588 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !11385)
!12589 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !11385)
!12590 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !11385)
!12591 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !11385)
!12592 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !11385)
!12593 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !11385)
!12594 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !11385)
!12595 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !11395)
!12596 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !11395)
!12597 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !11395)
!12598 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !11395)
!12599 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !11395)
!12600 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !11395)
!12601 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !11395)
!12602 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !11395)
!12603 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !11395)
!12604 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !11395)
!12605 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !11395)
!12606 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !11395)
!12607 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !11395)
!12608 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !11395)
!12609 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !11395)
!12610 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !11395)
!12611 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !11395)
!12612 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !11395)
!12613 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !11395)
!12614 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !11395)
!12615 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !11395)
!12616 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !11395)
!12617 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !11395)
!12618 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !11395)
!12619 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !11395)
!12620 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !11395)
!12621 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !11395)
!12622 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !11395)
!12623 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !11395)
!12624 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !11395)
!12625 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !11395)
!12626 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !11395)
!12627 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !11395)
!12628 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !11395)
!12629 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !11395)
!12630 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !11395)
!12631 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !11395)
!12632 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !11395)
!12633 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !11395)
!12634 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !11395)
!12635 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !11395)
!12636 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !11395)
!12637 = !DILocation(line: 886, column: 123, scope: !11396)
!12638 = !DILocation(line: 886, column: 121, scope: !11396)
!12639 = !DILocation(line: 886, column: 91, scope: !11396)
!12640 = !DILocation(line: 886, column: 83, scope: !11396)
!12641 = !DILocation(line: 886, column: 44, scope: !11396)
!12642 = !DILocation(line: 886, column: 17, scope: !11396)
!12643 = !DILocation(line: 886, column: 37, scope: !11396)
!12644 = !DILocation(line: 886, column: 39, scope: !11396)
!12645 = !DILocation(line: 886, column: 26, scope: !11396)
!12646 = !DILocation(line: 886, column: 47, scope: !11396)
!12647 = !DILocation(line: 887, column: 48, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !11396, file: !1001, line: 887, column: 21)
!12649 = !DILocation(line: 887, column: 21, scope: !12648)
!12650 = !DILocation(line: 887, column: 41, scope: !12648)
!12651 = !DILocation(line: 887, column: 43, scope: !12648)
!12652 = !DILocation(line: 887, column: 30, scope: !12648)
!12653 = !DILocation(line: 887, column: 51, scope: !12648)
!12654 = !DILocation(line: 887, column: 21, scope: !11396)
!12655 = !DILocation(line: 888, column: 28, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12648, file: !1001, line: 887, column: 59)
!12657 = !DILocation(line: 888, column: 32, scope: !12656)
!12658 = !DILocation(line: 888, column: 100, scope: !12656)
!12659 = !DILocation(line: 888, column: 73, scope: !12656)
!12660 = !DILocation(line: 888, column: 93, scope: !12656)
!12661 = !DILocation(line: 888, column: 95, scope: !12656)
!12662 = !DILocation(line: 888, column: 82, scope: !12656)
!12663 = !DILocation(line: 888, column: 21, scope: !12656)
!12664 = !DILocation(line: 889, column: 21, scope: !12656)
!12665 = !DILocation(line: 891, column: 13, scope: !11396)
!12666 = !DILocation(line: 885, column: 67, scope: !12667)
!12667 = !DILexicalBlockFile(scope: !11397, file: !1001, discriminator: 2)
!12668 = !DILocation(line: 885, column: 13, scope: !12667)
!12669 = distinct !{!12669, !12670}
!12670 = !DILocation(line: 885, column: 13, scope: !11399)
!12671 = !DILocation(line: 893, column: 5, scope: !11401)
!12672 = !DILocation(line: 853, column: 43, scope: !12673)
!12673 = !DILexicalBlockFile(scope: !11402, file: !1001, discriminator: 2)
!12674 = !DILocation(line: 853, column: 5, scope: !12673)
!12675 = distinct !{!12675, !12676}
!12676 = !DILocation(line: 853, column: 5, scope: !11381)
!12677 = !DILocation(line: 896, column: 12, scope: !11381)
!12678 = !DILocation(line: 896, column: 21, scope: !11381)
!12679 = !DILocation(line: 896, column: 5, scope: !11381)
!12680 = !DILocation(line: 896, column: 56, scope: !11381)
!12681 = !DILocation(line: 896, column: 65, scope: !11381)
!12682 = !DILocation(line: 896, column: 36, scope: !11381)
!12683 = !DILocation(line: 896, column: 45, scope: !11381)
!12684 = !DILocation(line: 899, column: 5, scope: !11381)
!12685 = !DILocation(line: 900, column: 1, scope: !11381)
!12686 = distinct !DISubprogram(name: "read_sbr_noise", scope: !1001, file: !1001, line: 902, type: !11382, isLocal: true, isDefinition: true, scopeLine: 904, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!12687 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12688)
!12688 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !12689)
!12689 = distinct !DILocation(line: 934, column: 98, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !1001, line: 933, column: 44)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !1001, line: 933, column: 13)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !1001, line: 933, column: 13)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !1001, line: 931, column: 16)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !1001, line: 923, column: 13)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !1001, line: 922, column: 49)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !1001, line: 922, column: 5)
!12697 = distinct !DILexicalBlock(scope: !12686, file: !1001, line: 922, column: 5)
!12698 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12699)
!12699 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !12689)
!12700 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12701)
!12701 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !12689)
!12702 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !12689)
!12703 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !12689)
!12704 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !12689)
!12705 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !12689)
!12706 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !12689)
!12707 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !12689)
!12708 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !12689)
!12709 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !12689)
!12710 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !12689)
!12711 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !12689)
!12712 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !12689)
!12713 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12714)
!12714 = distinct !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 925, column: 90, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !1001, line: 924, column: 44)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !1001, line: 924, column: 13)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !1001, line: 924, column: 13)
!12719 = distinct !DILexicalBlock(scope: !12694, file: !1001, line: 923, column: 38)
!12720 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12721)
!12721 = distinct !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !12715)
!12722 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !12723)
!12723 = distinct !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !12715)
!12724 = !DILocation(line: 762, column: 74, scope: !11392, inlinedAt: !12715)
!12725 = !DILocation(line: 762, column: 87, scope: !11392, inlinedAt: !12715)
!12726 = !DILocation(line: 763, column: 42, scope: !11392, inlinedAt: !12715)
!12727 = !DILocation(line: 763, column: 52, scope: !11392, inlinedAt: !12715)
!12728 = !DILocation(line: 783, column: 9, scope: !11392, inlinedAt: !12715)
!12729 = !DILocation(line: 785, column: 18, scope: !11392, inlinedAt: !12715)
!12730 = !DILocation(line: 785, column: 78, scope: !11392, inlinedAt: !12715)
!12731 = !DILocation(line: 785, column: 101, scope: !11392, inlinedAt: !12715)
!12732 = !DILocation(line: 788, column: 14, scope: !11391, inlinedAt: !12715)
!12733 = !DILocation(line: 788, column: 17, scope: !11391, inlinedAt: !12715)
!12734 = !DILocation(line: 788, column: 39, scope: !11391, inlinedAt: !12715)
!12735 = !DILocalVariable(name: "ac", arg: 1, scope: !12686, file: !1001, line: 902, type: !1504)
!12736 = !DILocation(line: 902, column: 39, scope: !12686)
!12737 = !DILocalVariable(name: "sbr", arg: 2, scope: !12686, file: !1001, line: 902, type: !1123)
!12738 = !DILocation(line: 902, column: 68, scope: !12686)
!12739 = !DILocalVariable(name: "gb", arg: 3, scope: !12686, file: !1001, line: 902, type: !2912)
!12740 = !DILocation(line: 902, column: 88, scope: !12686)
!12741 = !DILocalVariable(name: "ch_data", arg: 4, scope: !12686, file: !1001, line: 903, type: !2553)
!12742 = !DILocation(line: 903, column: 37, scope: !12686)
!12743 = !DILocalVariable(name: "ch", arg: 5, scope: !12686, file: !1001, line: 903, type: !992)
!12744 = !DILocation(line: 903, column: 50, scope: !12686)
!12745 = !DILocalVariable(name: "i", scope: !12686, file: !1001, line: 905, type: !992)
!12746 = !DILocation(line: 905, column: 9, scope: !12686)
!12747 = !DILocalVariable(name: "j", scope: !12686, file: !1001, line: 905, type: !992)
!12748 = !DILocation(line: 905, column: 12, scope: !12686)
!12749 = !DILocalVariable(name: "t_huff", scope: !12686, file: !1001, line: 906, type: !1064)
!12750 = !DILocation(line: 906, column: 15, scope: !12686)
!12751 = !DILocalVariable(name: "f_huff", scope: !12686, file: !1001, line: 906, type: !1064)
!12752 = !DILocation(line: 906, column: 29, scope: !12686)
!12753 = !DILocalVariable(name: "t_lav", scope: !12686, file: !1001, line: 907, type: !992)
!12754 = !DILocation(line: 907, column: 9, scope: !12686)
!12755 = !DILocalVariable(name: "f_lav", scope: !12686, file: !1001, line: 907, type: !992)
!12756 = !DILocation(line: 907, column: 16, scope: !12686)
!12757 = !DILocalVariable(name: "delta", scope: !12686, file: !1001, line: 908, type: !992)
!12758 = !DILocation(line: 908, column: 9, scope: !12686)
!12759 = !DILocation(line: 908, column: 18, scope: !12686)
!12760 = !DILocation(line: 908, column: 21, scope: !12686)
!12761 = !DILocation(line: 908, column: 26, scope: !12686)
!12762 = !DILocation(line: 908, column: 29, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !12686, file: !1001, discriminator: 1)
!12764 = !DILocation(line: 908, column: 34, scope: !12763)
!12765 = !DILocation(line: 908, column: 46, scope: !12763)
!12766 = !DILocation(line: 908, column: 26, scope: !12767)
!12767 = !DILexicalBlockFile(scope: !12686, file: !1001, discriminator: 2)
!12768 = !DILocation(line: 908, column: 52, scope: !12767)
!12769 = !DILocation(line: 908, column: 9, scope: !12767)
!12770 = !DILocation(line: 910, column: 9, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12686, file: !1001, line: 910, column: 9)
!12772 = !DILocation(line: 910, column: 14, scope: !12771)
!12773 = !DILocation(line: 910, column: 26, scope: !12771)
!12774 = !DILocation(line: 910, column: 29, scope: !12775)
!12775 = !DILexicalBlockFile(scope: !12771, file: !1001, discriminator: 1)
!12776 = !DILocation(line: 910, column: 9, scope: !12775)
!12777 = !DILocation(line: 911, column: 53, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12771, file: !1001, line: 910, column: 33)
!12779 = !DILocation(line: 911, column: 16, scope: !12778)
!12780 = !DILocation(line: 912, column: 17, scope: !12778)
!12781 = !DILocation(line: 912, column: 15, scope: !12778)
!12782 = !DILocation(line: 913, column: 51, scope: !12778)
!12783 = !DILocation(line: 913, column: 16, scope: !12778)
!12784 = !DILocation(line: 914, column: 17, scope: !12778)
!12785 = !DILocation(line: 914, column: 15, scope: !12778)
!12786 = !DILocation(line: 915, column: 5, scope: !12778)
!12787 = !DILocation(line: 916, column: 49, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12771, file: !1001, line: 915, column: 12)
!12789 = !DILocation(line: 916, column: 16, scope: !12788)
!12790 = !DILocation(line: 917, column: 17, scope: !12788)
!12791 = !DILocation(line: 917, column: 15, scope: !12788)
!12792 = !DILocation(line: 918, column: 47, scope: !12788)
!12793 = !DILocation(line: 918, column: 16, scope: !12788)
!12794 = !DILocation(line: 919, column: 17, scope: !12788)
!12795 = !DILocation(line: 919, column: 15, scope: !12788)
!12796 = !DILocation(line: 922, column: 12, scope: !12697)
!12797 = !DILocation(line: 922, column: 10, scope: !12697)
!12798 = !DILocation(line: 922, column: 17, scope: !12799)
!12799 = !DILexicalBlockFile(scope: !12696, file: !1001, discriminator: 1)
!12800 = !DILocation(line: 922, column: 21, scope: !12799)
!12801 = !DILocation(line: 922, column: 30, scope: !12799)
!12802 = !DILocation(line: 922, column: 19, scope: !12799)
!12803 = !DILocation(line: 922, column: 5, scope: !12799)
!12804 = !DILocation(line: 923, column: 34, scope: !12694)
!12805 = !DILocation(line: 923, column: 13, scope: !12694)
!12806 = !DILocation(line: 923, column: 22, scope: !12694)
!12807 = !DILocation(line: 923, column: 13, scope: !12695)
!12808 = !DILocation(line: 924, column: 20, scope: !12718)
!12809 = !DILocation(line: 924, column: 18, scope: !12718)
!12810 = !DILocation(line: 924, column: 25, scope: !12811)
!12811 = !DILexicalBlockFile(scope: !12717, file: !1001, discriminator: 1)
!12812 = !DILocation(line: 924, column: 29, scope: !12811)
!12813 = !DILocation(line: 924, column: 34, scope: !12811)
!12814 = !DILocation(line: 924, column: 27, scope: !12811)
!12815 = !DILocation(line: 924, column: 13, scope: !12811)
!12816 = !DILocation(line: 925, column: 76, scope: !12716)
!12817 = !DILocation(line: 925, column: 51, scope: !12716)
!12818 = !DILocation(line: 925, column: 73, scope: !12716)
!12819 = !DILocation(line: 925, column: 60, scope: !12716)
!12820 = !DILocation(line: 925, column: 81, scope: !12716)
!12821 = !DILocation(line: 925, column: 99, scope: !12716)
!12822 = !DILocation(line: 925, column: 103, scope: !12716)
!12823 = !DILocation(line: 925, column: 90, scope: !12716)
!12824 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !12715)
!12825 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !12715)
!12826 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !12715)
!12827 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !12715)
!12828 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !12715)
!12829 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !12715)
!12830 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !12715)
!12831 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !12715)
!12832 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !12715)
!12833 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !12715)
!12834 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !12715)
!12835 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12723)
!12836 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12723)
!12837 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12723)
!12838 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12723)
!12839 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12723)
!12840 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12723)
!12841 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12723)
!12842 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12723)
!12843 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12723)
!12844 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12723)
!12845 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12723)
!12846 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12723)
!12847 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12723)
!12848 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12723)
!12849 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12723)
!12850 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12723)
!12851 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12723)
!12852 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12723)
!12853 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !12715)
!12854 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !12715)
!12855 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !12715)
!12856 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !12715)
!12857 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !12715)
!12858 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !12715)
!12859 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !12715)
!12860 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !12715)
!12861 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !12715)
!12862 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !12715)
!12863 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !12715)
!12864 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !12715)
!12865 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !12715)
!12866 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !12715)
!12867 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !12715)
!12868 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !12715)
!12869 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !12715)
!12870 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !12715)
!12871 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !12715)
!12872 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !12715)
!12873 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !12715)
!12874 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !12715)
!12875 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !12715)
!12876 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !12715)
!12877 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !12715)
!12878 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !12715)
!12879 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !12715)
!12880 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !12715)
!12881 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !12715)
!12882 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !12715)
!12883 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !12715)
!12884 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !12715)
!12885 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !12715)
!12886 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !12715)
!12887 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !12715)
!12888 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !12715)
!12889 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !12715)
!12890 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !12715)
!12891 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !12715)
!12892 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !12715)
!12893 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !12715)
!12894 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12721)
!12895 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12721)
!12896 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12721)
!12897 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12721)
!12898 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12721)
!12899 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12721)
!12900 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12721)
!12901 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12721)
!12902 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12721)
!12903 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12721)
!12904 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12721)
!12905 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12721)
!12906 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12721)
!12907 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12721)
!12908 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12721)
!12909 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12721)
!12910 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12721)
!12911 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12721)
!12912 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !12715)
!12913 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !12715)
!12914 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !12715)
!12915 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !12715)
!12916 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !12715)
!12917 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !12715)
!12918 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !12715)
!12919 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !12715)
!12920 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !12715)
!12921 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !12715)
!12922 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !12715)
!12923 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !12715)
!12924 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !12715)
!12925 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !12715)
!12926 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !12715)
!12927 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !12715)
!12928 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !12715)
!12929 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !12715)
!12930 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !12715)
!12931 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !12715)
!12932 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !12715)
!12933 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !12715)
!12934 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !12715)
!12935 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !12715)
!12936 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !12715)
!12937 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !12715)
!12938 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !12715)
!12939 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !12715)
!12940 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !12715)
!12941 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !12715)
!12942 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !12715)
!12943 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !12715)
!12944 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !12715)
!12945 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !12715)
!12946 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !12715)
!12947 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !12715)
!12948 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !12715)
!12949 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !12715)
!12950 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !12715)
!12951 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !12715)
!12952 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !12715)
!12953 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !12715)
!12954 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !12715)
!12955 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !12715)
!12956 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !12715)
!12957 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !12715)
!12958 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12714)
!12959 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12714)
!12960 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12714)
!12961 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12714)
!12962 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12714)
!12963 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12714)
!12964 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12714)
!12965 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12714)
!12966 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12714)
!12967 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12714)
!12968 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12714)
!12969 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12714)
!12970 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12714)
!12971 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12714)
!12972 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12714)
!12973 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12714)
!12974 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12714)
!12975 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12714)
!12976 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !12715)
!12977 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !12715)
!12978 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !12715)
!12979 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !12715)
!12980 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !12715)
!12981 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !12715)
!12982 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !12715)
!12983 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !12715)
!12984 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !12715)
!12985 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !12715)
!12986 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !12715)
!12987 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !12715)
!12988 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !12715)
!12989 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !12715)
!12990 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !12715)
!12991 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !12715)
!12992 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !12715)
!12993 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !12715)
!12994 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !12715)
!12995 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !12715)
!12996 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !12715)
!12997 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !12715)
!12998 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !12715)
!12999 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !12715)
!13000 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !12715)
!13001 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !12715)
!13002 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !12715)
!13003 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !12715)
!13004 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !12715)
!13005 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !12715)
!13006 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !12715)
!13007 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !12715)
!13008 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !12715)
!13009 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !12715)
!13010 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !12715)
!13011 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !12715)
!13012 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !12715)
!13013 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !12715)
!13014 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !12715)
!13015 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !12715)
!13016 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !12715)
!13017 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !12715)
!13018 = !DILocation(line: 925, column: 119, scope: !12716)
!13019 = !DILocation(line: 925, column: 117, scope: !12716)
!13020 = !DILocation(line: 925, column: 87, scope: !12716)
!13021 = !DILocation(line: 925, column: 79, scope: !12716)
!13022 = !DILocation(line: 925, column: 46, scope: !12716)
!13023 = !DILocation(line: 925, column: 17, scope: !12716)
!13024 = !DILocation(line: 925, column: 39, scope: !12716)
!13025 = !DILocation(line: 925, column: 41, scope: !12716)
!13026 = !DILocation(line: 925, column: 26, scope: !12716)
!13027 = !DILocation(line: 925, column: 49, scope: !12716)
!13028 = !DILocation(line: 926, column: 50, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12716, file: !1001, line: 926, column: 21)
!13030 = !DILocation(line: 926, column: 21, scope: !13029)
!13031 = !DILocation(line: 926, column: 43, scope: !13029)
!13032 = !DILocation(line: 926, column: 45, scope: !13029)
!13033 = !DILocation(line: 926, column: 30, scope: !13029)
!13034 = !DILocation(line: 926, column: 53, scope: !13029)
!13035 = !DILocation(line: 926, column: 21, scope: !12716)
!13036 = !DILocation(line: 927, column: 28, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13029, file: !1001, line: 926, column: 60)
!13038 = !DILocation(line: 927, column: 32, scope: !13037)
!13039 = !DILocation(line: 927, column: 104, scope: !13037)
!13040 = !DILocation(line: 927, column: 75, scope: !13037)
!13041 = !DILocation(line: 927, column: 97, scope: !13037)
!13042 = !DILocation(line: 927, column: 99, scope: !13037)
!13043 = !DILocation(line: 927, column: 84, scope: !13037)
!13044 = !DILocation(line: 927, column: 21, scope: !13037)
!13045 = !DILocation(line: 928, column: 21, scope: !13037)
!13046 = !DILocation(line: 930, column: 13, scope: !12716)
!13047 = !DILocation(line: 924, column: 40, scope: !13048)
!13048 = !DILexicalBlockFile(scope: !12717, file: !1001, discriminator: 2)
!13049 = !DILocation(line: 924, column: 13, scope: !13048)
!13050 = distinct !{!13050, !13051}
!13051 = !DILocation(line: 924, column: 13, scope: !12719)
!13052 = !DILocation(line: 931, column: 9, scope: !12719)
!13053 = !DILocation(line: 932, column: 47, scope: !12693)
!13054 = !DILocation(line: 932, column: 64, scope: !12693)
!13055 = !DILocation(line: 932, column: 55, scope: !12693)
!13056 = !DILocation(line: 932, column: 53, scope: !12693)
!13057 = !DILocation(line: 932, column: 35, scope: !12693)
!13058 = !DILocation(line: 932, column: 37, scope: !12693)
!13059 = !DILocation(line: 932, column: 13, scope: !12693)
!13060 = !DILocation(line: 932, column: 22, scope: !12693)
!13061 = !DILocation(line: 932, column: 45, scope: !12693)
!13062 = !DILocation(line: 933, column: 20, scope: !12692)
!13063 = !DILocation(line: 933, column: 18, scope: !12692)
!13064 = !DILocation(line: 933, column: 25, scope: !13065)
!13065 = !DILexicalBlockFile(scope: !12691, file: !1001, discriminator: 1)
!13066 = !DILocation(line: 933, column: 29, scope: !13065)
!13067 = !DILocation(line: 933, column: 34, scope: !13065)
!13068 = !DILocation(line: 933, column: 27, scope: !13065)
!13069 = !DILocation(line: 933, column: 13, scope: !13065)
!13070 = !DILocation(line: 934, column: 80, scope: !12690)
!13071 = !DILocation(line: 934, column: 82, scope: !12690)
!13072 = !DILocation(line: 934, column: 51, scope: !12690)
!13073 = !DILocation(line: 934, column: 73, scope: !12690)
!13074 = !DILocation(line: 934, column: 75, scope: !12690)
!13075 = !DILocation(line: 934, column: 60, scope: !12690)
!13076 = !DILocation(line: 934, column: 89, scope: !12690)
!13077 = !DILocation(line: 934, column: 107, scope: !12690)
!13078 = !DILocation(line: 934, column: 111, scope: !12690)
!13079 = !DILocation(line: 934, column: 98, scope: !12690)
!13080 = !DILocation(line: 785, column: 30, scope: !11392, inlinedAt: !12689)
!13081 = !DILocation(line: 785, column: 34, scope: !11392, inlinedAt: !12689)
!13082 = !DILocation(line: 785, column: 118, scope: !11392, inlinedAt: !12689)
!13083 = !DILocation(line: 785, column: 122, scope: !11392, inlinedAt: !12689)
!13084 = !DILocation(line: 786, column: 60, scope: !11392, inlinedAt: !12689)
!13085 = !DILocation(line: 786, column: 64, scope: !11392, inlinedAt: !12689)
!13086 = !DILocation(line: 786, column: 74, scope: !11392, inlinedAt: !12689)
!13087 = !DILocation(line: 786, column: 83, scope: !11392, inlinedAt: !12689)
!13088 = !DILocation(line: 786, column: 71, scope: !11392, inlinedAt: !12689)
!13089 = !DILocation(line: 786, column: 92, scope: !11392, inlinedAt: !12689)
!13090 = !DILocation(line: 786, column: 16, scope: !11392, inlinedAt: !12689)
!13091 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12701)
!13092 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12701)
!13093 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12701)
!13094 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12701)
!13095 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12701)
!13096 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12701)
!13097 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12701)
!13098 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12701)
!13099 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12701)
!13100 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12701)
!13101 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12701)
!13102 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12701)
!13103 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12701)
!13104 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12701)
!13105 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12701)
!13106 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12701)
!13107 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12701)
!13108 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12701)
!13109 = !DILocation(line: 786, column: 100, scope: !11392, inlinedAt: !12689)
!13110 = !DILocation(line: 786, column: 109, scope: !11392, inlinedAt: !12689)
!13111 = !DILocation(line: 786, column: 96, scope: !11392, inlinedAt: !12689)
!13112 = !DILocation(line: 786, column: 14, scope: !11392, inlinedAt: !12689)
!13113 = !DILocation(line: 788, column: 64, scope: !11679, inlinedAt: !12689)
!13114 = !DILocation(line: 788, column: 74, scope: !11679, inlinedAt: !12689)
!13115 = !DILocation(line: 788, column: 54, scope: !11679, inlinedAt: !12689)
!13116 = !DILocation(line: 788, column: 52, scope: !11679, inlinedAt: !12689)
!13117 = !DILocation(line: 788, column: 94, scope: !11679, inlinedAt: !12689)
!13118 = !DILocation(line: 788, column: 88, scope: !11679, inlinedAt: !12689)
!13119 = !DILocation(line: 788, column: 86, scope: !11679, inlinedAt: !12689)
!13120 = !DILocation(line: 788, column: 115, scope: !11679, inlinedAt: !12689)
!13121 = !DILocation(line: 788, column: 109, scope: !11679, inlinedAt: !12689)
!13122 = !DILocation(line: 788, column: 107, scope: !11679, inlinedAt: !12689)
!13123 = !DILocation(line: 788, column: 130, scope: !11679, inlinedAt: !12689)
!13124 = !DILocation(line: 788, column: 140, scope: !11679, inlinedAt: !12689)
!13125 = !DILocation(line: 788, column: 144, scope: !11679, inlinedAt: !12689)
!13126 = !DILocation(line: 788, column: 147, scope: !11693, inlinedAt: !12689)
!13127 = !DILocation(line: 788, column: 149, scope: !11693, inlinedAt: !12689)
!13128 = !DILocation(line: 788, column: 130, scope: !11693, inlinedAt: !12689)
!13129 = !DILocation(line: 788, column: 169, scope: !11697, inlinedAt: !12689)
!13130 = !DILocation(line: 788, column: 187, scope: !11697, inlinedAt: !12689)
!13131 = !DILocation(line: 788, column: 199, scope: !11697, inlinedAt: !12689)
!13132 = !DILocation(line: 788, column: 196, scope: !11697, inlinedAt: !12689)
!13133 = !DILocation(line: 788, column: 184, scope: !11697, inlinedAt: !12689)
!13134 = !DILocation(line: 788, column: 168, scope: !11697, inlinedAt: !12689)
!13135 = !DILocation(line: 788, column: 209, scope: !11704, inlinedAt: !12689)
!13136 = !DILocation(line: 788, column: 221, scope: !11704, inlinedAt: !12689)
!13137 = !DILocation(line: 788, column: 218, scope: !11704, inlinedAt: !12689)
!13138 = !DILocation(line: 788, column: 168, scope: !11704, inlinedAt: !12689)
!13139 = !DILocation(line: 788, column: 231, scope: !11709, inlinedAt: !12689)
!13140 = !DILocation(line: 788, column: 168, scope: !11709, inlinedAt: !12689)
!13141 = !DILocation(line: 788, column: 168, scope: !11406, inlinedAt: !12689)
!13142 = !DILocation(line: 788, column: 165, scope: !11406, inlinedAt: !12689)
!13143 = !DILocation(line: 788, column: 303, scope: !11406, inlinedAt: !12689)
!13144 = !DILocation(line: 788, column: 307, scope: !11406, inlinedAt: !12689)
!13145 = !DILocation(line: 788, column: 317, scope: !11406, inlinedAt: !12689)
!13146 = !DILocation(line: 788, column: 326, scope: !11406, inlinedAt: !12689)
!13147 = !DILocation(line: 788, column: 314, scope: !11406, inlinedAt: !12689)
!13148 = !DILocation(line: 788, column: 335, scope: !11406, inlinedAt: !12689)
!13149 = !DILocation(line: 788, column: 259, scope: !11406, inlinedAt: !12689)
!13150 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12699)
!13151 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12699)
!13152 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12699)
!13153 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12699)
!13154 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12699)
!13155 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12699)
!13156 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12699)
!13157 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12699)
!13158 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12699)
!13159 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12699)
!13160 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12699)
!13161 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12699)
!13162 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12699)
!13163 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12699)
!13164 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12699)
!13165 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12699)
!13166 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12699)
!13167 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12699)
!13168 = !DILocation(line: 788, column: 343, scope: !11406, inlinedAt: !12689)
!13169 = !DILocation(line: 788, column: 352, scope: !11406, inlinedAt: !12689)
!13170 = !DILocation(line: 788, column: 339, scope: !11406, inlinedAt: !12689)
!13171 = !DILocation(line: 788, column: 257, scope: !11406, inlinedAt: !12689)
!13172 = !DILocation(line: 788, column: 369, scope: !11406, inlinedAt: !12689)
!13173 = !DILocation(line: 788, column: 368, scope: !11406, inlinedAt: !12689)
!13174 = !DILocation(line: 788, column: 366, scope: !11406, inlinedAt: !12689)
!13175 = !DILocation(line: 788, column: 390, scope: !11406, inlinedAt: !12689)
!13176 = !DILocation(line: 788, column: 400, scope: !11406, inlinedAt: !12689)
!13177 = !DILocation(line: 788, column: 380, scope: !11748, inlinedAt: !12689)
!13178 = !DILocation(line: 788, column: 411, scope: !11406, inlinedAt: !12689)
!13179 = !DILocation(line: 788, column: 409, scope: !11406, inlinedAt: !12689)
!13180 = !DILocation(line: 788, column: 378, scope: !11406, inlinedAt: !12689)
!13181 = !DILocation(line: 788, column: 430, scope: !11406, inlinedAt: !12689)
!13182 = !DILocation(line: 788, column: 424, scope: !11406, inlinedAt: !12689)
!13183 = !DILocation(line: 788, column: 422, scope: !11406, inlinedAt: !12689)
!13184 = !DILocation(line: 788, column: 451, scope: !11406, inlinedAt: !12689)
!13185 = !DILocation(line: 788, column: 445, scope: !11406, inlinedAt: !12689)
!13186 = !DILocation(line: 788, column: 443, scope: !11406, inlinedAt: !12689)
!13187 = !DILocation(line: 788, column: 466, scope: !11406, inlinedAt: !12689)
!13188 = !DILocation(line: 788, column: 476, scope: !11406, inlinedAt: !12689)
!13189 = !DILocation(line: 788, column: 480, scope: !11406, inlinedAt: !12689)
!13190 = !DILocation(line: 788, column: 483, scope: !11762, inlinedAt: !12689)
!13191 = !DILocation(line: 788, column: 485, scope: !11762, inlinedAt: !12689)
!13192 = !DILocation(line: 788, column: 466, scope: !11762, inlinedAt: !12689)
!13193 = !DILocation(line: 788, column: 505, scope: !11766, inlinedAt: !12689)
!13194 = !DILocation(line: 788, column: 523, scope: !11766, inlinedAt: !12689)
!13195 = !DILocation(line: 788, column: 535, scope: !11766, inlinedAt: !12689)
!13196 = !DILocation(line: 788, column: 532, scope: !11766, inlinedAt: !12689)
!13197 = !DILocation(line: 788, column: 520, scope: !11766, inlinedAt: !12689)
!13198 = !DILocation(line: 788, column: 504, scope: !11766, inlinedAt: !12689)
!13199 = !DILocation(line: 788, column: 548, scope: !11773, inlinedAt: !12689)
!13200 = !DILocation(line: 788, column: 560, scope: !11773, inlinedAt: !12689)
!13201 = !DILocation(line: 788, column: 557, scope: !11773, inlinedAt: !12689)
!13202 = !DILocation(line: 788, column: 504, scope: !11773, inlinedAt: !12689)
!13203 = !DILocation(line: 788, column: 573, scope: !11778, inlinedAt: !12689)
!13204 = !DILocation(line: 788, column: 504, scope: !11778, inlinedAt: !12689)
!13205 = !DILocation(line: 788, column: 504, scope: !11386, inlinedAt: !12689)
!13206 = !DILocation(line: 788, column: 501, scope: !11386, inlinedAt: !12689)
!13207 = !DILocation(line: 788, column: 645, scope: !11386, inlinedAt: !12689)
!13208 = !DILocation(line: 788, column: 649, scope: !11386, inlinedAt: !12689)
!13209 = !DILocation(line: 788, column: 659, scope: !11386, inlinedAt: !12689)
!13210 = !DILocation(line: 788, column: 668, scope: !11386, inlinedAt: !12689)
!13211 = !DILocation(line: 788, column: 656, scope: !11386, inlinedAt: !12689)
!13212 = !DILocation(line: 788, column: 677, scope: !11386, inlinedAt: !12689)
!13213 = !DILocation(line: 788, column: 601, scope: !11386, inlinedAt: !12689)
!13214 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !12688)
!13215 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !12688)
!13216 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !12688)
!13217 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !12688)
!13218 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !12688)
!13219 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !12688)
!13220 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !12688)
!13221 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !12688)
!13222 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !12688)
!13223 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !12688)
!13224 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !12688)
!13225 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !12688)
!13226 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !12688)
!13227 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !12688)
!13228 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !12688)
!13229 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !12688)
!13230 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !12688)
!13231 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !12688)
!13232 = !DILocation(line: 788, column: 685, scope: !11386, inlinedAt: !12689)
!13233 = !DILocation(line: 788, column: 694, scope: !11386, inlinedAt: !12689)
!13234 = !DILocation(line: 788, column: 681, scope: !11386, inlinedAt: !12689)
!13235 = !DILocation(line: 788, column: 599, scope: !11386, inlinedAt: !12689)
!13236 = !DILocation(line: 788, column: 711, scope: !11386, inlinedAt: !12689)
!13237 = !DILocation(line: 788, column: 710, scope: !11386, inlinedAt: !12689)
!13238 = !DILocation(line: 788, column: 708, scope: !11386, inlinedAt: !12689)
!13239 = !DILocation(line: 788, column: 732, scope: !11386, inlinedAt: !12689)
!13240 = !DILocation(line: 788, column: 742, scope: !11386, inlinedAt: !12689)
!13241 = !DILocation(line: 788, column: 722, scope: !11817, inlinedAt: !12689)
!13242 = !DILocation(line: 788, column: 753, scope: !11386, inlinedAt: !12689)
!13243 = !DILocation(line: 788, column: 751, scope: !11386, inlinedAt: !12689)
!13244 = !DILocation(line: 788, column: 720, scope: !11386, inlinedAt: !12689)
!13245 = !DILocation(line: 788, column: 772, scope: !11386, inlinedAt: !12689)
!13246 = !DILocation(line: 788, column: 766, scope: !11386, inlinedAt: !12689)
!13247 = !DILocation(line: 788, column: 764, scope: !11386, inlinedAt: !12689)
!13248 = !DILocation(line: 788, column: 793, scope: !11386, inlinedAt: !12689)
!13249 = !DILocation(line: 788, column: 787, scope: !11386, inlinedAt: !12689)
!13250 = !DILocation(line: 788, column: 785, scope: !11386, inlinedAt: !12689)
!13251 = !DILocation(line: 788, column: 804, scope: !11386, inlinedAt: !12689)
!13252 = !DILocation(line: 788, column: 806, scope: !11829, inlinedAt: !12689)
!13253 = !DILocation(line: 788, column: 827, scope: !11831, inlinedAt: !12689)
!13254 = !DILocation(line: 788, column: 822, scope: !11831, inlinedAt: !12689)
!13255 = !DILocation(line: 788, column: 844, scope: !11831, inlinedAt: !12689)
!13256 = !DILocation(line: 788, column: 862, scope: !11831, inlinedAt: !12689)
!13257 = !DILocation(line: 788, column: 874, scope: !11831, inlinedAt: !12689)
!13258 = !DILocation(line: 788, column: 871, scope: !11831, inlinedAt: !12689)
!13259 = !DILocation(line: 788, column: 859, scope: !11831, inlinedAt: !12689)
!13260 = !DILocation(line: 788, column: 843, scope: !11831, inlinedAt: !12689)
!13261 = !DILocation(line: 788, column: 881, scope: !11841, inlinedAt: !12689)
!13262 = !DILocation(line: 788, column: 893, scope: !11841, inlinedAt: !12689)
!13263 = !DILocation(line: 788, column: 890, scope: !11841, inlinedAt: !12689)
!13264 = !DILocation(line: 788, column: 843, scope: !11841, inlinedAt: !12689)
!13265 = !DILocation(line: 788, column: 900, scope: !11846, inlinedAt: !12689)
!13266 = !DILocation(line: 788, column: 843, scope: !11846, inlinedAt: !12689)
!13267 = !DILocation(line: 788, column: 843, scope: !11849, inlinedAt: !12689)
!13268 = !DILocation(line: 788, column: 840, scope: !11849, inlinedAt: !12689)
!13269 = !DILocation(line: 790, column: 18, scope: !11392, inlinedAt: !12689)
!13270 = !DILocation(line: 790, column: 6, scope: !11392, inlinedAt: !12689)
!13271 = !DILocation(line: 790, column: 10, scope: !11392, inlinedAt: !12689)
!13272 = !DILocation(line: 790, column: 16, scope: !11392, inlinedAt: !12689)
!13273 = !DILocation(line: 792, column: 12, scope: !11392, inlinedAt: !12689)
!13274 = !DILocation(line: 934, column: 127, scope: !12690)
!13275 = !DILocation(line: 934, column: 125, scope: !12690)
!13276 = !DILocation(line: 934, column: 95, scope: !12690)
!13277 = !DILocation(line: 934, column: 87, scope: !12690)
!13278 = !DILocation(line: 934, column: 46, scope: !12690)
!13279 = !DILocation(line: 934, column: 17, scope: !12690)
!13280 = !DILocation(line: 934, column: 39, scope: !12690)
!13281 = !DILocation(line: 934, column: 41, scope: !12690)
!13282 = !DILocation(line: 934, column: 26, scope: !12690)
!13283 = !DILocation(line: 934, column: 49, scope: !12690)
!13284 = !DILocation(line: 935, column: 50, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !12690, file: !1001, line: 935, column: 21)
!13286 = !DILocation(line: 935, column: 21, scope: !13285)
!13287 = !DILocation(line: 935, column: 43, scope: !13285)
!13288 = !DILocation(line: 935, column: 45, scope: !13285)
!13289 = !DILocation(line: 935, column: 30, scope: !13285)
!13290 = !DILocation(line: 935, column: 53, scope: !13285)
!13291 = !DILocation(line: 935, column: 21, scope: !12690)
!13292 = !DILocation(line: 936, column: 28, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13285, file: !1001, line: 935, column: 60)
!13294 = !DILocation(line: 936, column: 32, scope: !13293)
!13295 = !DILocation(line: 936, column: 104, scope: !13293)
!13296 = !DILocation(line: 936, column: 75, scope: !13293)
!13297 = !DILocation(line: 936, column: 97, scope: !13293)
!13298 = !DILocation(line: 936, column: 99, scope: !13293)
!13299 = !DILocation(line: 936, column: 84, scope: !13293)
!13300 = !DILocation(line: 936, column: 21, scope: !13293)
!13301 = !DILocation(line: 937, column: 21, scope: !13293)
!13302 = !DILocation(line: 939, column: 13, scope: !12690)
!13303 = !DILocation(line: 933, column: 40, scope: !13304)
!13304 = !DILexicalBlockFile(scope: !12691, file: !1001, discriminator: 2)
!13305 = !DILocation(line: 933, column: 13, scope: !13304)
!13306 = distinct !{!13306, !13307}
!13307 = !DILocation(line: 933, column: 13, scope: !12693)
!13308 = !DILocation(line: 941, column: 5, scope: !12695)
!13309 = !DILocation(line: 922, column: 45, scope: !13310)
!13310 = !DILexicalBlockFile(scope: !12696, file: !1001, discriminator: 2)
!13311 = !DILocation(line: 922, column: 5, scope: !13310)
!13312 = distinct !{!13312, !13313}
!13313 = !DILocation(line: 922, column: 5, scope: !12686)
!13314 = !DILocation(line: 944, column: 12, scope: !12686)
!13315 = !DILocation(line: 944, column: 21, scope: !12686)
!13316 = !DILocation(line: 944, column: 5, scope: !12686)
!13317 = !DILocation(line: 944, column: 60, scope: !12686)
!13318 = !DILocation(line: 944, column: 69, scope: !12686)
!13319 = !DILocation(line: 944, column: 38, scope: !12686)
!13320 = !DILocation(line: 944, column: 47, scope: !12686)
!13321 = !DILocation(line: 946, column: 5, scope: !12686)
!13322 = !DILocation(line: 947, column: 1, scope: !12686)
!13323 = distinct !DISubprogram(name: "copy_sbr_grid", scope: !1001, file: !1001, line: 777, type: !13324, isLocal: true, isDefinition: true, scopeLine: 777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{null, !2553, !13326}
!13326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13327, size: 64, align: 64)
!13327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!13328 = !DILocalVariable(name: "dst", arg: 1, scope: !13323, file: !1001, line: 777, type: !2553)
!13329 = !DILocation(line: 777, column: 36, scope: !13323)
!13330 = !DILocalVariable(name: "src", arg: 2, scope: !13323, file: !1001, line: 777, type: !13326)
!13331 = !DILocation(line: 777, column: 56, scope: !13323)
!13332 = !DILocation(line: 779, column: 44, scope: !13323)
!13333 = !DILocation(line: 779, column: 49, scope: !13323)
!13334 = !DILocation(line: 779, column: 27, scope: !13323)
!13335 = !DILocation(line: 779, column: 32, scope: !13323)
!13336 = !DILocation(line: 779, column: 5, scope: !13323)
!13337 = !DILocation(line: 779, column: 10, scope: !13323)
!13338 = !DILocation(line: 779, column: 25, scope: !13323)
!13339 = !DILocation(line: 780, column: 41, scope: !13323)
!13340 = !DILocation(line: 780, column: 46, scope: !13323)
!13341 = !DILocation(line: 780, column: 30, scope: !13323)
!13342 = !DILocation(line: 780, column: 35, scope: !13323)
!13343 = !DILocation(line: 780, column: 5, scope: !13323)
!13344 = !DILocation(line: 780, column: 10, scope: !13323)
!13345 = !DILocation(line: 780, column: 28, scope: !13323)
!13346 = !DILocation(line: 781, column: 21, scope: !13323)
!13347 = !DILocation(line: 781, column: 26, scope: !13323)
!13348 = !DILocation(line: 781, column: 36, scope: !13323)
!13349 = !DILocation(line: 781, column: 41, scope: !13323)
!13350 = !DILocation(line: 781, column: 33, scope: !13323)
!13351 = !DILocation(line: 781, column: 19, scope: !13323)
!13352 = !DILocation(line: 781, column: 5, scope: !13323)
!13353 = !DILocation(line: 781, column: 10, scope: !13323)
!13354 = !DILocation(line: 781, column: 17, scope: !13323)
!13355 = !DILocation(line: 784, column: 12, scope: !13323)
!13356 = !DILocation(line: 784, column: 17, scope: !13323)
!13357 = !DILocation(line: 784, column: 28, scope: !13323)
!13358 = !DILocation(line: 784, column: 32, scope: !13323)
!13359 = !DILocation(line: 784, column: 37, scope: !13323)
!13360 = !DILocation(line: 784, column: 48, scope: !13323)
!13361 = !DILocation(line: 784, column: 5, scope: !13323)
!13362 = !DILocation(line: 785, column: 12, scope: !13323)
!13363 = !DILocation(line: 785, column: 17, scope: !13323)
!13364 = !DILocation(line: 785, column: 5, scope: !13323)
!13365 = !DILocation(line: 785, column: 24, scope: !13323)
!13366 = !DILocation(line: 785, column: 29, scope: !13323)
!13367 = !DILocation(line: 786, column: 12, scope: !13323)
!13368 = !DILocation(line: 786, column: 17, scope: !13323)
!13369 = !DILocation(line: 786, column: 5, scope: !13323)
!13370 = !DILocation(line: 786, column: 22, scope: !13323)
!13371 = !DILocation(line: 786, column: 27, scope: !13323)
!13372 = !DILocation(line: 787, column: 23, scope: !13323)
!13373 = !DILocation(line: 787, column: 28, scope: !13323)
!13374 = !DILocation(line: 787, column: 5, scope: !13323)
!13375 = !DILocation(line: 787, column: 10, scope: !13323)
!13376 = !DILocation(line: 787, column: 21, scope: !13323)
!13377 = !DILocation(line: 788, column: 23, scope: !13323)
!13378 = !DILocation(line: 788, column: 28, scope: !13323)
!13379 = !DILocation(line: 788, column: 5, scope: !13323)
!13380 = !DILocation(line: 788, column: 10, scope: !13323)
!13381 = !DILocation(line: 788, column: 21, scope: !13323)
!13382 = !DILocation(line: 789, column: 25, scope: !13323)
!13383 = !DILocation(line: 789, column: 30, scope: !13323)
!13384 = !DILocation(line: 789, column: 5, scope: !13323)
!13385 = !DILocation(line: 789, column: 10, scope: !13323)
!13386 = !DILocation(line: 789, column: 23, scope: !13323)
!13387 = !DILocation(line: 790, column: 27, scope: !13323)
!13388 = !DILocation(line: 790, column: 32, scope: !13323)
!13389 = !DILocation(line: 790, column: 5, scope: !13323)
!13390 = !DILocation(line: 790, column: 10, scope: !13323)
!13391 = !DILocation(line: 790, column: 25, scope: !13323)
!13392 = !DILocation(line: 791, column: 19, scope: !13323)
!13393 = !DILocation(line: 791, column: 24, scope: !13323)
!13394 = !DILocation(line: 791, column: 5, scope: !13323)
!13395 = !DILocation(line: 791, column: 10, scope: !13323)
!13396 = !DILocation(line: 791, column: 17, scope: !13323)
!13397 = !DILocation(line: 792, column: 1, scope: !13323)
!13398 = distinct !DISubprogram(name: "show_bits", scope: !2914, file: !2914, line: 443, type: !6415, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!13399 = !DILocation(line: 66, column: 98, scope: !6418, inlinedAt: !13400)
!13400 = distinct !DILocation(line: 454, column: 16, scope: !13398)
!13401 = !DILocalVariable(name: "s", arg: 1, scope: !13398, file: !2914, line: 443, type: !2912)
!13402 = !DILocation(line: 443, column: 53, scope: !13398)
!13403 = !DILocalVariable(name: "n", arg: 2, scope: !13398, file: !2914, line: 443, type: !992)
!13404 = !DILocation(line: 443, column: 60, scope: !13398)
!13405 = !DILocalVariable(name: "tmp", scope: !13398, file: !2914, line: 445, type: !992)
!13406 = !DILocation(line: 445, column: 18, scope: !13398)
!13407 = !DILocalVariable(name: "re_index", scope: !13398, file: !2914, line: 452, type: !985)
!13408 = !DILocation(line: 452, column: 18, scope: !13398)
!13409 = !DILocation(line: 452, column: 30, scope: !13398)
!13410 = !DILocation(line: 452, column: 34, scope: !13398)
!13411 = !DILocalVariable(name: "re_cache", scope: !13398, file: !2914, line: 452, type: !985)
!13412 = !DILocation(line: 452, column: 78, scope: !13398)
!13413 = !DILocation(line: 454, column: 60, scope: !13398)
!13414 = !DILocation(line: 454, column: 64, scope: !13398)
!13415 = !DILocation(line: 454, column: 74, scope: !13398)
!13416 = !DILocation(line: 454, column: 83, scope: !13398)
!13417 = !DILocation(line: 454, column: 71, scope: !13398)
!13418 = !DILocation(line: 454, column: 92, scope: !13398)
!13419 = !DILocation(line: 454, column: 16, scope: !13398)
!13420 = !DILocation(line: 68, column: 16, scope: !6418, inlinedAt: !13400)
!13421 = !DILocation(line: 68, column: 19, scope: !6418, inlinedAt: !13400)
!13422 = !DILocation(line: 68, column: 24, scope: !6418, inlinedAt: !13400)
!13423 = !DILocation(line: 68, column: 38, scope: !6418, inlinedAt: !13400)
!13424 = !DILocation(line: 68, column: 41, scope: !6418, inlinedAt: !13400)
!13425 = !DILocation(line: 68, column: 46, scope: !6418, inlinedAt: !13400)
!13426 = !DILocation(line: 68, column: 34, scope: !6418, inlinedAt: !13400)
!13427 = !DILocation(line: 68, column: 57, scope: !6418, inlinedAt: !13400)
!13428 = !DILocation(line: 68, column: 69, scope: !6418, inlinedAt: !13400)
!13429 = !DILocation(line: 68, column: 72, scope: !6418, inlinedAt: !13400)
!13430 = !DILocation(line: 68, column: 79, scope: !6418, inlinedAt: !13400)
!13431 = !DILocation(line: 68, column: 84, scope: !6418, inlinedAt: !13400)
!13432 = !DILocation(line: 68, column: 99, scope: !6418, inlinedAt: !13400)
!13433 = !DILocation(line: 68, column: 102, scope: !6418, inlinedAt: !13400)
!13434 = !DILocation(line: 68, column: 109, scope: !6418, inlinedAt: !13400)
!13435 = !DILocation(line: 68, column: 114, scope: !6418, inlinedAt: !13400)
!13436 = !DILocation(line: 68, column: 94, scope: !6418, inlinedAt: !13400)
!13437 = !DILocation(line: 68, column: 63, scope: !6418, inlinedAt: !13400)
!13438 = !DILocation(line: 454, column: 100, scope: !13398)
!13439 = !DILocation(line: 454, column: 109, scope: !13398)
!13440 = !DILocation(line: 454, column: 96, scope: !13398)
!13441 = !DILocation(line: 454, column: 14, scope: !13398)
!13442 = !DILocation(line: 455, column: 21, scope: !13398)
!13443 = !DILocation(line: 455, column: 31, scope: !13398)
!13444 = !DILocation(line: 455, column: 11, scope: !13398)
!13445 = !DILocation(line: 455, column: 9, scope: !13398)
!13446 = !DILocation(line: 457, column: 12, scope: !13398)
!13447 = !DILocation(line: 457, column: 5, scope: !13398)
!13448 = distinct !DISubprogram(name: "sbr_lf_gen", scope: !1001, file: !1001, line: 1266, type: !1502, isLocal: true, isDefinition: true, scopeLine: 1269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!13449 = !DILocalVariable(name: "ac", arg: 1, scope: !13448, file: !1001, line: 1266, type: !1504)
!13450 = !DILocation(line: 1266, column: 35, scope: !13448)
!13451 = !DILocalVariable(name: "sbr", arg: 2, scope: !13448, file: !1001, line: 1266, type: !1123)
!13452 = !DILocation(line: 1266, column: 64, scope: !13448)
!13453 = !DILocalVariable(name: "X_low", arg: 3, scope: !13448, file: !1001, line: 1267, type: !2546)
!13454 = !DILocation(line: 1267, column: 32, scope: !13448)
!13455 = !DILocalVariable(name: "W", arg: 4, scope: !13448, file: !1001, line: 1267, type: !959)
!13456 = !DILocation(line: 1267, column: 65, scope: !13448)
!13457 = !DILocalVariable(name: "buf_idx", arg: 5, scope: !13448, file: !1001, line: 1268, type: !992)
!13458 = !DILocation(line: 1268, column: 27, scope: !13448)
!13459 = !DILocalVariable(name: "i", scope: !13448, file: !1001, line: 1270, type: !992)
!13460 = !DILocation(line: 1270, column: 9, scope: !13448)
!13461 = !DILocalVariable(name: "k", scope: !13448, file: !1001, line: 1270, type: !992)
!13462 = !DILocation(line: 1270, column: 12, scope: !13448)
!13463 = !DILocalVariable(name: "t_HFGen", scope: !13448, file: !1001, line: 1271, type: !1585)
!13464 = !DILocation(line: 1271, column: 15, scope: !13448)
!13465 = !DILocalVariable(name: "i_f", scope: !13448, file: !1001, line: 1272, type: !1585)
!13466 = !DILocation(line: 1272, column: 15, scope: !13448)
!13467 = !DILocation(line: 1273, column: 12, scope: !13448)
!13468 = !DILocation(line: 1273, column: 5, scope: !13448)
!13469 = !DILocation(line: 1274, column: 12, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13448, file: !1001, line: 1274, column: 5)
!13471 = !DILocation(line: 1274, column: 10, scope: !13470)
!13472 = !DILocation(line: 1274, column: 17, scope: !13473)
!13473 = !DILexicalBlockFile(scope: !13474, file: !1001, discriminator: 1)
!13474 = distinct !DILexicalBlock(scope: !13470, file: !1001, line: 1274, column: 5)
!13475 = !DILocation(line: 1274, column: 21, scope: !13473)
!13476 = !DILocation(line: 1274, column: 26, scope: !13473)
!13477 = !DILocation(line: 1274, column: 19, scope: !13473)
!13478 = !DILocation(line: 1274, column: 5, scope: !13473)
!13479 = !DILocation(line: 1275, column: 16, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !1001, line: 1275, column: 9)
!13481 = distinct !DILexicalBlock(scope: !13474, file: !1001, line: 1274, column: 38)
!13482 = !DILocation(line: 1275, column: 14, scope: !13480)
!13483 = !DILocation(line: 1275, column: 27, scope: !13484)
!13484 = !DILexicalBlockFile(scope: !13485, file: !1001, discriminator: 1)
!13485 = distinct !DILexicalBlock(scope: !13480, file: !1001, line: 1275, column: 9)
!13486 = !DILocation(line: 1275, column: 29, scope: !13484)
!13487 = !DILocation(line: 1275, column: 9, scope: !13484)
!13488 = !DILocation(line: 1276, column: 54, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13485, file: !1001, line: 1275, column: 51)
!13490 = !DILocation(line: 1276, column: 30, scope: !13489)
!13491 = !DILocation(line: 1276, column: 41, scope: !13489)
!13492 = !DILocation(line: 1276, column: 43, scope: !13489)
!13493 = !DILocation(line: 1276, column: 32, scope: !13489)
!13494 = !DILocation(line: 1276, column: 22, scope: !13489)
!13495 = !DILocation(line: 1276, column: 13, scope: !13489)
!13496 = !DILocation(line: 1276, column: 19, scope: !13489)
!13497 = !DILocation(line: 1276, column: 28, scope: !13489)
!13498 = !DILocation(line: 1277, column: 54, scope: !13489)
!13499 = !DILocation(line: 1277, column: 30, scope: !13489)
!13500 = !DILocation(line: 1277, column: 41, scope: !13489)
!13501 = !DILocation(line: 1277, column: 43, scope: !13489)
!13502 = !DILocation(line: 1277, column: 32, scope: !13489)
!13503 = !DILocation(line: 1277, column: 22, scope: !13489)
!13504 = !DILocation(line: 1277, column: 13, scope: !13489)
!13505 = !DILocation(line: 1277, column: 19, scope: !13489)
!13506 = !DILocation(line: 1277, column: 28, scope: !13489)
!13507 = !DILocation(line: 1278, column: 9, scope: !13489)
!13508 = !DILocation(line: 1275, column: 47, scope: !13509)
!13509 = !DILexicalBlockFile(scope: !13485, file: !1001, discriminator: 2)
!13510 = !DILocation(line: 1275, column: 9, scope: !13509)
!13511 = distinct !{!13511, !13512}
!13512 = !DILocation(line: 1275, column: 9, scope: !13481)
!13513 = !DILocation(line: 1279, column: 5, scope: !13481)
!13514 = !DILocation(line: 1274, column: 34, scope: !13515)
!13515 = !DILexicalBlockFile(scope: !13474, file: !1001, discriminator: 2)
!13516 = !DILocation(line: 1274, column: 5, scope: !13515)
!13517 = distinct !{!13517, !13518}
!13518 = !DILocation(line: 1274, column: 5, scope: !13448)
!13519 = !DILocation(line: 1280, column: 17, scope: !13448)
!13520 = !DILocation(line: 1280, column: 16, scope: !13448)
!13521 = !DILocation(line: 1280, column: 13, scope: !13448)
!13522 = !DILocation(line: 1281, column: 12, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13448, file: !1001, line: 1281, column: 5)
!13524 = !DILocation(line: 1281, column: 10, scope: !13523)
!13525 = !DILocation(line: 1281, column: 17, scope: !13526)
!13526 = !DILexicalBlockFile(scope: !13527, file: !1001, discriminator: 1)
!13527 = distinct !DILexicalBlock(scope: !13523, file: !1001, line: 1281, column: 5)
!13528 = !DILocation(line: 1281, column: 21, scope: !13526)
!13529 = !DILocation(line: 1281, column: 26, scope: !13526)
!13530 = !DILocation(line: 1281, column: 19, scope: !13526)
!13531 = !DILocation(line: 1281, column: 5, scope: !13526)
!13532 = !DILocation(line: 1282, column: 16, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13534, file: !1001, line: 1282, column: 9)
!13534 = distinct !DILexicalBlock(scope: !13527, file: !1001, line: 1281, column: 38)
!13535 = !DILocation(line: 1282, column: 14, scope: !13533)
!13536 = !DILocation(line: 1282, column: 21, scope: !13537)
!13537 = !DILexicalBlockFile(scope: !13538, file: !1001, discriminator: 1)
!13538 = distinct !DILexicalBlock(scope: !13533, file: !1001, line: 1282, column: 9)
!13539 = !DILocation(line: 1282, column: 23, scope: !13537)
!13540 = !DILocation(line: 1282, column: 9, scope: !13537)
!13541 = !DILocation(line: 1283, column: 60, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13538, file: !1001, line: 1282, column: 39)
!13543 = !DILocation(line: 1283, column: 30, scope: !13542)
!13544 = !DILocation(line: 1283, column: 41, scope: !13542)
!13545 = !DILocation(line: 1283, column: 43, scope: !13542)
!13546 = !DILocation(line: 1283, column: 49, scope: !13542)
!13547 = !DILocation(line: 1283, column: 32, scope: !13542)
!13548 = !DILocation(line: 1283, column: 22, scope: !13542)
!13549 = !DILocation(line: 1283, column: 13, scope: !13542)
!13550 = !DILocation(line: 1283, column: 19, scope: !13542)
!13551 = !DILocation(line: 1283, column: 28, scope: !13542)
!13552 = !DILocation(line: 1284, column: 60, scope: !13542)
!13553 = !DILocation(line: 1284, column: 30, scope: !13542)
!13554 = !DILocation(line: 1284, column: 41, scope: !13542)
!13555 = !DILocation(line: 1284, column: 43, scope: !13542)
!13556 = !DILocation(line: 1284, column: 49, scope: !13542)
!13557 = !DILocation(line: 1284, column: 32, scope: !13542)
!13558 = !DILocation(line: 1284, column: 22, scope: !13542)
!13559 = !DILocation(line: 1284, column: 13, scope: !13542)
!13560 = !DILocation(line: 1284, column: 19, scope: !13542)
!13561 = !DILocation(line: 1284, column: 28, scope: !13542)
!13562 = !DILocation(line: 1285, column: 9, scope: !13542)
!13563 = !DILocation(line: 1282, column: 35, scope: !13564)
!13564 = !DILexicalBlockFile(scope: !13538, file: !1001, discriminator: 2)
!13565 = !DILocation(line: 1282, column: 9, scope: !13564)
!13566 = distinct !{!13566, !13567}
!13567 = !DILocation(line: 1282, column: 9, scope: !13534)
!13568 = !DILocation(line: 1286, column: 5, scope: !13534)
!13569 = !DILocation(line: 1281, column: 34, scope: !13570)
!13570 = !DILexicalBlockFile(scope: !13527, file: !1001, discriminator: 2)
!13571 = !DILocation(line: 1281, column: 5, scope: !13570)
!13572 = distinct !{!13572, !13573}
!13573 = !DILocation(line: 1281, column: 5, scope: !13448)
!13574 = !DILocation(line: 1287, column: 5, scope: !13448)
!13575 = !DILocalVariable(name: "Y1", arg: 1, scope: !2587, file: !1056, line: 276, type: !2590)
!13576 = !DILocation(line: 276, column: 35, scope: !2587)
!13577 = !DILocalVariable(name: "X_high", arg: 2, scope: !2587, file: !1056, line: 277, type: !2592)
!13578 = !DILocation(line: 277, column: 41, scope: !2587)
!13579 = !DILocalVariable(name: "sbr", arg: 3, scope: !2587, file: !1056, line: 278, type: !1123)
!13580 = !DILocation(line: 278, column: 54, scope: !2587)
!13581 = !DILocalVariable(name: "ch_data", arg: 4, scope: !2587, file: !1056, line: 278, type: !2553)
!13582 = !DILocation(line: 278, column: 68, scope: !2587)
!13583 = !DILocalVariable(name: "e_a", arg: 5, scope: !2587, file: !1056, line: 279, type: !1584)
!13584 = !DILocation(line: 279, column: 39, scope: !2587)
!13585 = !DILocalVariable(name: "e", scope: !2587, file: !1056, line: 281, type: !992)
!13586 = !DILocation(line: 281, column: 9, scope: !2587)
!13587 = !DILocalVariable(name: "i", scope: !2587, file: !1056, line: 281, type: !992)
!13588 = !DILocation(line: 281, column: 12, scope: !2587)
!13589 = !DILocalVariable(name: "j", scope: !2587, file: !1056, line: 281, type: !992)
!13590 = !DILocation(line: 281, column: 15, scope: !2587)
!13591 = !DILocalVariable(name: "m", scope: !2587, file: !1056, line: 281, type: !992)
!13592 = !DILocation(line: 281, column: 18, scope: !2587)
!13593 = !DILocalVariable(name: "h_SL", scope: !2587, file: !1056, line: 282, type: !1585)
!13594 = !DILocation(line: 282, column: 15, scope: !2587)
!13595 = !DILocation(line: 282, column: 27, scope: !2587)
!13596 = !DILocation(line: 282, column: 32, scope: !2587)
!13597 = !DILocation(line: 282, column: 26, scope: !2587)
!13598 = !DILocation(line: 282, column: 24, scope: !2587)
!13599 = !DILocalVariable(name: "kx", scope: !2587, file: !1056, line: 283, type: !1585)
!13600 = !DILocation(line: 283, column: 15, scope: !2587)
!13601 = !DILocation(line: 283, column: 20, scope: !2587)
!13602 = !DILocation(line: 283, column: 25, scope: !2587)
!13603 = !DILocalVariable(name: "m_max", scope: !2587, file: !1056, line: 284, type: !1585)
!13604 = !DILocation(line: 284, column: 15, scope: !2587)
!13605 = !DILocation(line: 284, column: 23, scope: !2587)
!13606 = !DILocation(line: 284, column: 28, scope: !2587)
!13607 = !DILocalVariable(name: "g_temp", scope: !2587, file: !1056, line: 292, type: !13608)
!13608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13609, size: 64, align: 64)
!13609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 1536, align: 32, elements: !1181)
!13610 = !DILocation(line: 292, column: 13, scope: !2587)
!13611 = !DILocation(line: 292, column: 27, scope: !2587)
!13612 = !DILocation(line: 292, column: 36, scope: !2587)
!13613 = !DILocalVariable(name: "q_temp", scope: !2587, file: !1056, line: 292, type: !13608)
!13614 = !DILocation(line: 292, column: 46, scope: !2587)
!13615 = !DILocation(line: 292, column: 60, scope: !2587)
!13616 = !DILocation(line: 292, column: 69, scope: !2587)
!13617 = !DILocalVariable(name: "indexnoise", scope: !2587, file: !1056, line: 293, type: !992)
!13618 = !DILocation(line: 293, column: 9, scope: !2587)
!13619 = !DILocation(line: 293, column: 22, scope: !2587)
!13620 = !DILocation(line: 293, column: 31, scope: !2587)
!13621 = !DILocalVariable(name: "indexsine", scope: !2587, file: !1056, line: 294, type: !992)
!13622 = !DILocation(line: 294, column: 9, scope: !2587)
!13623 = !DILocation(line: 294, column: 21, scope: !2587)
!13624 = !DILocation(line: 294, column: 30, scope: !2587)
!13625 = !DILocation(line: 296, column: 9, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !2587, file: !1056, line: 296, column: 9)
!13627 = !DILocation(line: 296, column: 14, scope: !13626)
!13628 = !DILocation(line: 296, column: 9, scope: !2587)
!13629 = !DILocation(line: 297, column: 16, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !1056, line: 297, column: 9)
!13631 = distinct !DILexicalBlock(scope: !13626, file: !1056, line: 296, column: 21)
!13632 = !DILocation(line: 297, column: 14, scope: !13630)
!13633 = !DILocation(line: 297, column: 21, scope: !13634)
!13634 = !DILexicalBlockFile(scope: !13635, file: !1056, discriminator: 1)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !1056, line: 297, column: 9)
!13636 = !DILocation(line: 297, column: 25, scope: !13634)
!13637 = !DILocation(line: 297, column: 23, scope: !13634)
!13638 = !DILocation(line: 297, column: 9, scope: !13634)
!13639 = !DILocation(line: 298, column: 27, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13635, file: !1056, line: 297, column: 36)
!13641 = !DILocation(line: 298, column: 33, scope: !13640)
!13642 = !DILocation(line: 298, column: 42, scope: !13640)
!13643 = !DILocation(line: 298, column: 32, scope: !13640)
!13644 = !DILocation(line: 298, column: 29, scope: !13640)
!13645 = !DILocation(line: 298, column: 20, scope: !13640)
!13646 = !DILocation(line: 298, column: 13, scope: !13640)
!13647 = !DILocation(line: 298, column: 53, scope: !13640)
!13648 = !DILocation(line: 298, column: 58, scope: !13640)
!13649 = !DILocation(line: 298, column: 67, scope: !13640)
!13650 = !DILocation(line: 298, column: 73, scope: !13640)
!13651 = !DILocation(line: 299, column: 27, scope: !13640)
!13652 = !DILocation(line: 299, column: 33, scope: !13640)
!13653 = !DILocation(line: 299, column: 42, scope: !13640)
!13654 = !DILocation(line: 299, column: 32, scope: !13640)
!13655 = !DILocation(line: 299, column: 29, scope: !13640)
!13656 = !DILocation(line: 299, column: 20, scope: !13640)
!13657 = !DILocation(line: 299, column: 13, scope: !13640)
!13658 = !DILocation(line: 299, column: 53, scope: !13640)
!13659 = !DILocation(line: 299, column: 58, scope: !13640)
!13660 = !DILocation(line: 299, column: 66, scope: !13640)
!13661 = !DILocation(line: 299, column: 72, scope: !13640)
!13662 = !DILocation(line: 300, column: 9, scope: !13640)
!13663 = !DILocation(line: 297, column: 32, scope: !13664)
!13664 = !DILexicalBlockFile(scope: !13635, file: !1056, discriminator: 2)
!13665 = !DILocation(line: 297, column: 9, scope: !13664)
!13666 = distinct !{!13666, !13667}
!13667 = !DILocation(line: 297, column: 9, scope: !13631)
!13668 = !DILocation(line: 301, column: 5, scope: !13631)
!13669 = !DILocation(line: 301, column: 16, scope: !13670)
!13670 = !DILexicalBlockFile(scope: !13671, file: !1056, discriminator: 1)
!13671 = distinct !DILexicalBlock(scope: !13626, file: !1056, line: 301, column: 16)
!13672 = !DILocation(line: 302, column: 16, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !1056, line: 302, column: 9)
!13674 = distinct !DILexicalBlock(scope: !13671, file: !1056, line: 301, column: 22)
!13675 = !DILocation(line: 302, column: 14, scope: !13673)
!13676 = !DILocation(line: 302, column: 21, scope: !13677)
!13677 = !DILexicalBlockFile(scope: !13678, file: !1056, discriminator: 1)
!13678 = distinct !DILexicalBlock(scope: !13673, file: !1056, line: 302, column: 9)
!13679 = !DILocation(line: 302, column: 23, scope: !13677)
!13680 = !DILocation(line: 302, column: 9, scope: !13677)
!13681 = !DILocation(line: 303, column: 27, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13678, file: !1056, line: 302, column: 33)
!13683 = !DILocation(line: 303, column: 35, scope: !13682)
!13684 = !DILocation(line: 303, column: 44, scope: !13682)
!13685 = !DILocation(line: 303, column: 33, scope: !13682)
!13686 = !DILocation(line: 303, column: 29, scope: !13682)
!13687 = !DILocation(line: 303, column: 20, scope: !13682)
!13688 = !DILocation(line: 303, column: 13, scope: !13682)
!13689 = !DILocation(line: 304, column: 27, scope: !13682)
!13690 = !DILocation(line: 304, column: 35, scope: !13682)
!13691 = !DILocation(line: 304, column: 44, scope: !13682)
!13692 = !DILocation(line: 304, column: 33, scope: !13682)
!13693 = !DILocation(line: 304, column: 29, scope: !13682)
!13694 = !DILocation(line: 304, column: 20, scope: !13682)
!13695 = !DILocation(line: 306, column: 27, scope: !13682)
!13696 = !DILocation(line: 306, column: 35, scope: !13682)
!13697 = !DILocation(line: 306, column: 44, scope: !13682)
!13698 = !DILocation(line: 306, column: 33, scope: !13682)
!13699 = !DILocation(line: 306, column: 29, scope: !13682)
!13700 = !DILocation(line: 306, column: 20, scope: !13682)
!13701 = !DILocation(line: 306, column: 13, scope: !13682)
!13702 = !DILocation(line: 307, column: 27, scope: !13682)
!13703 = !DILocation(line: 307, column: 35, scope: !13682)
!13704 = !DILocation(line: 307, column: 44, scope: !13682)
!13705 = !DILocation(line: 307, column: 33, scope: !13682)
!13706 = !DILocation(line: 307, column: 29, scope: !13682)
!13707 = !DILocation(line: 307, column: 20, scope: !13682)
!13708 = !DILocation(line: 309, column: 9, scope: !13682)
!13709 = !DILocation(line: 302, column: 29, scope: !13710)
!13710 = !DILexicalBlockFile(scope: !13678, file: !1056, discriminator: 2)
!13711 = !DILocation(line: 302, column: 9, scope: !13710)
!13712 = distinct !{!13712, !13713}
!13713 = !DILocation(line: 302, column: 9, scope: !13674)
!13714 = !DILocation(line: 310, column: 5, scope: !13674)
!13715 = !DILocation(line: 312, column: 12, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !2587, file: !1056, line: 312, column: 5)
!13717 = !DILocation(line: 312, column: 10, scope: !13716)
!13718 = !DILocation(line: 312, column: 17, scope: !13719)
!13719 = !DILexicalBlockFile(scope: !13720, file: !1056, discriminator: 1)
!13720 = distinct !DILexicalBlock(scope: !13716, file: !1056, line: 312, column: 5)
!13721 = !DILocation(line: 312, column: 21, scope: !13719)
!13722 = !DILocation(line: 312, column: 30, scope: !13719)
!13723 = !DILocation(line: 312, column: 19, scope: !13719)
!13724 = !DILocation(line: 312, column: 5, scope: !13719)
!13725 = !DILocation(line: 313, column: 37, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13727, file: !1056, line: 313, column: 9)
!13727 = distinct !DILexicalBlock(scope: !13720, file: !1056, line: 312, column: 47)
!13728 = !DILocation(line: 313, column: 22, scope: !13726)
!13729 = !DILocation(line: 313, column: 31, scope: !13726)
!13730 = !DILocation(line: 313, column: 20, scope: !13726)
!13731 = !DILocation(line: 313, column: 16, scope: !13726)
!13732 = !DILocation(line: 313, column: 14, scope: !13726)
!13733 = !DILocation(line: 313, column: 41, scope: !13734)
!13734 = !DILexicalBlockFile(scope: !13735, file: !1056, discriminator: 1)
!13735 = distinct !DILexicalBlock(scope: !13726, file: !1056, line: 313, column: 9)
!13736 = !DILocation(line: 313, column: 64, scope: !13734)
!13737 = !DILocation(line: 313, column: 66, scope: !13734)
!13738 = !DILocation(line: 313, column: 49, scope: !13734)
!13739 = !DILocation(line: 313, column: 58, scope: !13734)
!13740 = !DILocation(line: 313, column: 47, scope: !13734)
!13741 = !DILocation(line: 313, column: 43, scope: !13734)
!13742 = !DILocation(line: 313, column: 9, scope: !13734)
!13743 = !DILocation(line: 314, column: 27, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13735, file: !1056, line: 313, column: 77)
!13745 = !DILocation(line: 314, column: 34, scope: !13744)
!13746 = !DILocation(line: 314, column: 32, scope: !13744)
!13747 = !DILocation(line: 314, column: 20, scope: !13744)
!13748 = !DILocation(line: 314, column: 13, scope: !13744)
!13749 = !DILocation(line: 314, column: 48, scope: !13744)
!13750 = !DILocation(line: 314, column: 38, scope: !13744)
!13751 = !DILocation(line: 314, column: 43, scope: !13744)
!13752 = !DILocation(line: 314, column: 52, scope: !13744)
!13753 = !DILocation(line: 314, column: 58, scope: !13744)
!13754 = !DILocation(line: 315, column: 27, scope: !13744)
!13755 = !DILocation(line: 315, column: 34, scope: !13744)
!13756 = !DILocation(line: 315, column: 32, scope: !13744)
!13757 = !DILocation(line: 315, column: 20, scope: !13744)
!13758 = !DILocation(line: 315, column: 13, scope: !13744)
!13759 = !DILocation(line: 315, column: 47, scope: !13744)
!13760 = !DILocation(line: 315, column: 38, scope: !13744)
!13761 = !DILocation(line: 315, column: 43, scope: !13744)
!13762 = !DILocation(line: 315, column: 51, scope: !13744)
!13763 = !DILocation(line: 315, column: 57, scope: !13744)
!13764 = !DILocation(line: 316, column: 9, scope: !13744)
!13765 = !DILocation(line: 313, column: 73, scope: !13766)
!13766 = !DILexicalBlockFile(scope: !13735, file: !1056, discriminator: 2)
!13767 = !DILocation(line: 313, column: 9, scope: !13766)
!13768 = distinct !{!13768, !13769}
!13769 = !DILocation(line: 313, column: 9, scope: !13727)
!13770 = !DILocation(line: 317, column: 5, scope: !13727)
!13771 = !DILocation(line: 312, column: 43, scope: !13772)
!13772 = !DILexicalBlockFile(scope: !13720, file: !1056, discriminator: 2)
!13773 = !DILocation(line: 312, column: 5, scope: !13772)
!13774 = distinct !{!13774, !13775}
!13775 = !DILocation(line: 312, column: 5, scope: !2587)
!13776 = !DILocation(line: 319, column: 12, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !2587, file: !1056, line: 319, column: 5)
!13778 = !DILocation(line: 319, column: 10, scope: !13777)
!13779 = !DILocation(line: 319, column: 17, scope: !13780)
!13780 = !DILexicalBlockFile(scope: !13781, file: !1056, discriminator: 1)
!13781 = distinct !DILexicalBlock(scope: !13777, file: !1056, line: 319, column: 5)
!13782 = !DILocation(line: 319, column: 21, scope: !13780)
!13783 = !DILocation(line: 319, column: 30, scope: !13780)
!13784 = !DILocation(line: 319, column: 19, scope: !13780)
!13785 = !DILocation(line: 319, column: 5, scope: !13780)
!13786 = !DILocation(line: 320, column: 37, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !1056, line: 320, column: 9)
!13788 = distinct !DILexicalBlock(scope: !13781, file: !1056, line: 319, column: 47)
!13789 = !DILocation(line: 320, column: 22, scope: !13787)
!13790 = !DILocation(line: 320, column: 31, scope: !13787)
!13791 = !DILocation(line: 320, column: 20, scope: !13787)
!13792 = !DILocation(line: 320, column: 16, scope: !13787)
!13793 = !DILocation(line: 320, column: 14, scope: !13787)
!13794 = !DILocation(line: 320, column: 41, scope: !13795)
!13795 = !DILexicalBlockFile(scope: !13796, file: !1056, discriminator: 1)
!13796 = distinct !DILexicalBlock(scope: !13787, file: !1056, line: 320, column: 9)
!13797 = !DILocation(line: 320, column: 64, scope: !13795)
!13798 = !DILocation(line: 320, column: 66, scope: !13795)
!13799 = !DILocation(line: 320, column: 49, scope: !13795)
!13800 = !DILocation(line: 320, column: 58, scope: !13795)
!13801 = !DILocation(line: 320, column: 47, scope: !13795)
!13802 = !DILocation(line: 320, column: 43, scope: !13795)
!13803 = !DILocation(line: 320, column: 9, scope: !13795)
!13804 = !DILocalVariable(name: "la_g_filt_tab", scope: !13805, file: !1056, line: 321, type: !13609)
!13805 = distinct !DILexicalBlock(scope: !13796, file: !1056, line: 320, column: 77)
!13806 = !DILocation(line: 321, column: 50, scope: !13805)
!13807 = !DILocalVariable(name: "g_filt_tab", scope: !13805, file: !1056, line: 321, type: !2433)
!13808 = !DILocation(line: 321, column: 79, scope: !13805)
!13809 = !DILocation(line: 321, column: 93, scope: !13805)
!13810 = !DILocalVariable(name: "la_q_filt_tab", scope: !13805, file: !1056, line: 322, type: !13609)
!13811 = !DILocation(line: 322, column: 50, scope: !13805)
!13812 = !DILocalVariable(name: "q_filt_tab", scope: !13805, file: !1056, line: 322, type: !2433)
!13813 = !DILocation(line: 322, column: 79, scope: !13805)
!13814 = !DILocation(line: 322, column: 93, scope: !13805)
!13815 = !DILocalVariable(name: "g_filt", scope: !13805, file: !1056, line: 323, type: !2433)
!13816 = !DILocation(line: 323, column: 20, scope: !13805)
!13817 = !DILocalVariable(name: "q_filt", scope: !13805, file: !1056, line: 323, type: !2433)
!13818 = !DILocation(line: 323, column: 29, scope: !13805)
!13819 = !DILocation(line: 325, column: 17, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13805, file: !1056, line: 325, column: 17)
!13821 = !DILocation(line: 325, column: 22, scope: !13820)
!13822 = !DILocation(line: 325, column: 25, scope: !13823)
!13823 = !DILexicalBlockFile(scope: !13820, file: !1056, discriminator: 1)
!13824 = !DILocation(line: 325, column: 30, scope: !13823)
!13825 = !DILocation(line: 325, column: 27, scope: !13823)
!13826 = !DILocation(line: 325, column: 37, scope: !13823)
!13827 = !DILocation(line: 325, column: 40, scope: !13828)
!13828 = !DILexicalBlockFile(scope: !13820, file: !1056, discriminator: 2)
!13829 = !DILocation(line: 325, column: 45, scope: !13828)
!13830 = !DILocation(line: 325, column: 42, scope: !13828)
!13831 = !DILocation(line: 325, column: 17, scope: !13828)
!13832 = !DILocation(line: 326, column: 26, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13820, file: !1056, line: 325, column: 53)
!13834 = !DILocation(line: 326, column: 24, scope: !13833)
!13835 = !DILocation(line: 327, column: 26, scope: !13833)
!13836 = !DILocation(line: 327, column: 24, scope: !13833)
!13837 = !DILocation(line: 328, column: 24, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13833, file: !1056, line: 328, column: 17)
!13839 = !DILocation(line: 328, column: 22, scope: !13838)
!13840 = !DILocation(line: 328, column: 29, scope: !13841)
!13841 = !DILexicalBlockFile(scope: !13842, file: !1056, discriminator: 1)
!13842 = distinct !DILexicalBlock(scope: !13838, file: !1056, line: 328, column: 17)
!13843 = !DILocation(line: 328, column: 33, scope: !13841)
!13844 = !DILocation(line: 328, column: 31, scope: !13841)
!13845 = !DILocation(line: 328, column: 17, scope: !13841)
!13846 = !DILocalVariable(name: "idx1", scope: !13847, file: !1056, line: 329, type: !1585)
!13847 = distinct !DILexicalBlock(scope: !13842, file: !1056, line: 328, column: 45)
!13848 = !DILocation(line: 329, column: 31, scope: !13847)
!13849 = !DILocation(line: 329, column: 38, scope: !13847)
!13850 = !DILocation(line: 329, column: 42, scope: !13847)
!13851 = !DILocation(line: 329, column: 40, scope: !13847)
!13852 = !DILocation(line: 330, column: 28, scope: !13847)
!13853 = !DILocation(line: 330, column: 21, scope: !13847)
!13854 = !DILocation(line: 330, column: 31, scope: !13847)
!13855 = !DILocation(line: 331, column: 28, scope: !13847)
!13856 = !DILocation(line: 331, column: 21, scope: !13847)
!13857 = !DILocation(line: 331, column: 31, scope: !13847)
!13858 = !DILocation(line: 332, column: 28, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13847, file: !1056, line: 332, column: 21)
!13860 = !DILocation(line: 332, column: 26, scope: !13859)
!13861 = !DILocation(line: 332, column: 33, scope: !13862)
!13862 = !DILexicalBlockFile(scope: !13863, file: !1056, discriminator: 1)
!13863 = distinct !DILexicalBlock(scope: !13859, file: !1056, line: 332, column: 21)
!13864 = !DILocation(line: 332, column: 38, scope: !13862)
!13865 = !DILocation(line: 332, column: 35, scope: !13862)
!13866 = !DILocation(line: 332, column: 21, scope: !13862)
!13867 = !DILocation(line: 333, column: 55, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13863, file: !1056, line: 332, column: 49)
!13869 = !DILocation(line: 333, column: 38, scope: !13868)
!13870 = !DILocation(line: 333, column: 45, scope: !13868)
!13871 = !DILocation(line: 333, column: 52, scope: !13868)
!13872 = !DILocation(line: 333, column: 50, scope: !13868)
!13873 = !DILocation(line: 333, column: 69, scope: !13868)
!13874 = !DILocation(line: 333, column: 60, scope: !13868)
!13875 = !DILocation(line: 333, column: 58, scope: !13868)
!13876 = !DILocation(line: 333, column: 32, scope: !13868)
!13877 = !DILocation(line: 333, column: 25, scope: !13868)
!13878 = !DILocation(line: 333, column: 35, scope: !13868)
!13879 = !DILocation(line: 334, column: 55, scope: !13868)
!13880 = !DILocation(line: 334, column: 38, scope: !13868)
!13881 = !DILocation(line: 334, column: 45, scope: !13868)
!13882 = !DILocation(line: 334, column: 52, scope: !13868)
!13883 = !DILocation(line: 334, column: 50, scope: !13868)
!13884 = !DILocation(line: 334, column: 69, scope: !13868)
!13885 = !DILocation(line: 334, column: 60, scope: !13868)
!13886 = !DILocation(line: 334, column: 58, scope: !13868)
!13887 = !DILocation(line: 334, column: 32, scope: !13868)
!13888 = !DILocation(line: 334, column: 25, scope: !13868)
!13889 = !DILocation(line: 334, column: 35, scope: !13868)
!13890 = !DILocation(line: 335, column: 21, scope: !13868)
!13891 = !DILocation(line: 332, column: 45, scope: !13892)
!13892 = !DILexicalBlockFile(scope: !13863, file: !1056, discriminator: 2)
!13893 = !DILocation(line: 332, column: 21, scope: !13892)
!13894 = distinct !{!13894, !13895}
!13895 = !DILocation(line: 332, column: 21, scope: !13847)
!13896 = !DILocation(line: 336, column: 17, scope: !13847)
!13897 = !DILocation(line: 328, column: 41, scope: !13898)
!13898 = !DILexicalBlockFile(scope: !13842, file: !1056, discriminator: 2)
!13899 = !DILocation(line: 328, column: 17, scope: !13898)
!13900 = distinct !{!13900, !13901}
!13901 = !DILocation(line: 328, column: 17, scope: !13833)
!13902 = !DILocation(line: 337, column: 13, scope: !13833)
!13903 = !DILocation(line: 338, column: 33, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13820, file: !1056, line: 337, column: 20)
!13905 = !DILocation(line: 338, column: 37, scope: !13904)
!13906 = !DILocation(line: 338, column: 35, scope: !13904)
!13907 = !DILocation(line: 338, column: 26, scope: !13904)
!13908 = !DILocation(line: 338, column: 24, scope: !13904)
!13909 = !DILocation(line: 339, column: 33, scope: !13904)
!13910 = !DILocation(line: 339, column: 26, scope: !13904)
!13911 = !DILocation(line: 339, column: 24, scope: !13904)
!13912 = !DILocation(line: 342, column: 13, scope: !13805)
!13913 = !DILocation(line: 342, column: 18, scope: !13805)
!13914 = !DILocation(line: 342, column: 22, scope: !13805)
!13915 = !DILocation(line: 342, column: 35, scope: !13805)
!13916 = !DILocation(line: 342, column: 32, scope: !13805)
!13917 = !DILocation(line: 342, column: 40, scope: !13805)
!13918 = !DILocation(line: 342, column: 38, scope: !13805)
!13919 = !DILocation(line: 342, column: 44, scope: !13805)
!13920 = !DILocation(line: 342, column: 53, scope: !13805)
!13921 = !DILocation(line: 342, column: 51, scope: !13805)
!13922 = !DILocation(line: 342, column: 57, scope: !13805)
!13923 = !DILocation(line: 342, column: 65, scope: !13805)
!13924 = !DILocation(line: 343, column: 32, scope: !13805)
!13925 = !DILocation(line: 343, column: 34, scope: !13805)
!13926 = !DILocation(line: 345, column: 17, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13805, file: !1056, line: 345, column: 17)
!13928 = !DILocation(line: 345, column: 22, scope: !13927)
!13929 = !DILocation(line: 345, column: 19, scope: !13927)
!13930 = !DILocation(line: 345, column: 29, scope: !13927)
!13931 = !DILocation(line: 345, column: 32, scope: !13932)
!13932 = !DILexicalBlockFile(scope: !13927, file: !1056, discriminator: 1)
!13933 = !DILocation(line: 345, column: 37, scope: !13932)
!13934 = !DILocation(line: 345, column: 34, scope: !13932)
!13935 = !DILocation(line: 345, column: 17, scope: !13932)
!13936 = !DILocation(line: 346, column: 41, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13927, file: !1056, line: 345, column: 45)
!13938 = !DILocation(line: 346, column: 17, scope: !13937)
!13939 = !DILocation(line: 346, column: 22, scope: !13937)
!13940 = !DILocation(line: 346, column: 26, scope: !13937)
!13941 = !DILocation(line: 346, column: 55, scope: !13937)
!13942 = !DILocation(line: 346, column: 52, scope: !13937)
!13943 = !DILocation(line: 346, column: 60, scope: !13937)
!13944 = !DILocation(line: 346, column: 58, scope: !13937)
!13945 = !DILocation(line: 346, column: 73, scope: !13937)
!13946 = !DILocation(line: 346, column: 64, scope: !13937)
!13947 = !DILocation(line: 346, column: 69, scope: !13937)
!13948 = !DILocation(line: 347, column: 52, scope: !13937)
!13949 = !DILocation(line: 347, column: 60, scope: !13937)
!13950 = !DILocation(line: 348, column: 52, scope: !13937)
!13951 = !DILocation(line: 348, column: 56, scope: !13937)
!13952 = !DILocation(line: 349, column: 13, scope: !13937)
!13953 = !DILocalVariable(name: "idx", scope: !13954, file: !1056, line: 350, type: !992)
!13954 = distinct !DILexicalBlock(scope: !13927, file: !1056, line: 349, column: 20)
!13955 = !DILocation(line: 350, column: 21, scope: !13954)
!13956 = !DILocation(line: 350, column: 27, scope: !13954)
!13957 = !DILocation(line: 350, column: 36, scope: !13954)
!13958 = !DILocalVariable(name: "A", scope: !13954, file: !1056, line: 351, type: !992)
!13959 = !DILocation(line: 351, column: 21, scope: !13954)
!13960 = !DILocation(line: 351, column: 30, scope: !13954)
!13961 = !DILocation(line: 351, column: 41, scope: !13954)
!13962 = !DILocation(line: 351, column: 44, scope: !13954)
!13963 = !DILocation(line: 351, column: 39, scope: !13954)
!13964 = !DILocation(line: 351, column: 49, scope: !13954)
!13965 = !DILocation(line: 351, column: 27, scope: !13954)
!13966 = !DILocalVariable(name: "B", scope: !13954, file: !1056, line: 352, type: !992)
!13967 = !DILocation(line: 352, column: 21, scope: !13954)
!13968 = !DILocation(line: 352, column: 26, scope: !13954)
!13969 = !DILocation(line: 352, column: 30, scope: !13954)
!13970 = !DILocation(line: 352, column: 29, scope: !13954)
!13971 = !DILocation(line: 352, column: 27, scope: !13954)
!13972 = !DILocation(line: 352, column: 38, scope: !13954)
!13973 = !DILocation(line: 352, column: 36, scope: !13954)
!13974 = !DILocalVariable(name: "out", scope: !13954, file: !1056, line: 353, type: !2433)
!13975 = !DILocation(line: 353, column: 24, scope: !13954)
!13976 = !DILocation(line: 353, column: 41, scope: !13954)
!13977 = !DILocation(line: 353, column: 31, scope: !13954)
!13978 = !DILocation(line: 353, column: 37, scope: !13954)
!13979 = !DILocation(line: 353, column: 34, scope: !13954)
!13980 = !DILocalVariable(name: "in", scope: !13954, file: !1056, line: 354, type: !2433)
!13981 = !DILocation(line: 354, column: 24, scope: !13954)
!13982 = !DILocation(line: 354, column: 38, scope: !13954)
!13983 = !DILocation(line: 354, column: 29, scope: !13954)
!13984 = !DILocation(line: 354, column: 34, scope: !13954)
!13985 = !DILocation(line: 355, column: 24, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13954, file: !1056, line: 355, column: 17)
!13987 = !DILocation(line: 355, column: 22, scope: !13986)
!13988 = !DILocation(line: 355, column: 29, scope: !13989)
!13989 = !DILexicalBlockFile(scope: !13990, file: !1056, discriminator: 1)
!13990 = distinct !DILexicalBlock(scope: !13986, file: !1056, line: 355, column: 17)
!13991 = !DILocation(line: 355, column: 30, scope: !13989)
!13992 = !DILocation(line: 355, column: 35, scope: !13989)
!13993 = !DILocation(line: 355, column: 33, scope: !13989)
!13994 = !DILocation(line: 355, column: 17, scope: !13989)
!13995 = !DILocation(line: 356, column: 37, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13990, file: !1056, line: 355, column: 48)
!13997 = !DILocation(line: 356, column: 34, scope: !13996)
!13998 = !DILocation(line: 356, column: 43, scope: !13996)
!13999 = !DILocation(line: 356, column: 41, scope: !13996)
!14000 = !DILocation(line: 356, column: 27, scope: !13996)
!14001 = !DILocation(line: 356, column: 26, scope: !13996)
!14002 = !DILocation(line: 356, column: 21, scope: !13996)
!14003 = !DILocation(line: 356, column: 31, scope: !13996)
!14004 = !DILocation(line: 357, column: 38, scope: !13996)
!14005 = !DILocation(line: 357, column: 39, scope: !13996)
!14006 = !DILocation(line: 357, column: 35, scope: !13996)
!14007 = !DILocation(line: 357, column: 45, scope: !13996)
!14008 = !DILocation(line: 357, column: 43, scope: !13996)
!14009 = !DILocation(line: 357, column: 27, scope: !13996)
!14010 = !DILocation(line: 357, column: 26, scope: !13996)
!14011 = !DILocation(line: 357, column: 28, scope: !13996)
!14012 = !DILocation(line: 357, column: 21, scope: !13996)
!14013 = !DILocation(line: 357, column: 32, scope: !13996)
!14014 = !DILocation(line: 358, column: 17, scope: !13996)
!14015 = !DILocation(line: 355, column: 43, scope: !14016)
!14016 = !DILexicalBlockFile(scope: !13990, file: !1056, discriminator: 2)
!14017 = !DILocation(line: 355, column: 17, scope: !14016)
!14018 = distinct !{!14018, !14019}
!14019 = !DILocation(line: 355, column: 17, scope: !13954)
!14020 = !DILocation(line: 359, column: 20, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !13954, file: !1056, line: 359, column: 20)
!14022 = !DILocation(line: 359, column: 25, scope: !14021)
!14023 = !DILocation(line: 359, column: 20, scope: !13954)
!14024 = !DILocation(line: 360, column: 37, scope: !14021)
!14025 = !DILocation(line: 360, column: 34, scope: !14021)
!14026 = !DILocation(line: 360, column: 43, scope: !14021)
!14027 = !DILocation(line: 360, column: 41, scope: !14021)
!14028 = !DILocation(line: 360, column: 27, scope: !14021)
!14029 = !DILocation(line: 360, column: 26, scope: !14021)
!14030 = !DILocation(line: 360, column: 21, scope: !14021)
!14031 = !DILocation(line: 360, column: 31, scope: !14021)
!14032 = !DILocation(line: 362, column: 27, scope: !13805)
!14033 = !DILocation(line: 362, column: 40, scope: !13805)
!14034 = !DILocation(line: 362, column: 38, scope: !13805)
!14035 = !DILocation(line: 362, column: 47, scope: !13805)
!14036 = !DILocation(line: 362, column: 24, scope: !13805)
!14037 = !DILocation(line: 363, column: 26, scope: !13805)
!14038 = !DILocation(line: 363, column: 36, scope: !13805)
!14039 = !DILocation(line: 363, column: 41, scope: !13805)
!14040 = !DILocation(line: 363, column: 23, scope: !13805)
!14041 = !DILocation(line: 364, column: 9, scope: !13805)
!14042 = !DILocation(line: 320, column: 73, scope: !14043)
!14043 = !DILexicalBlockFile(scope: !13796, file: !1056, discriminator: 2)
!14044 = !DILocation(line: 320, column: 9, scope: !14043)
!14045 = distinct !{!14045, !14046}
!14046 = !DILocation(line: 320, column: 9, scope: !13788)
!14047 = !DILocation(line: 365, column: 5, scope: !13788)
!14048 = !DILocation(line: 319, column: 43, scope: !14049)
!14049 = !DILexicalBlockFile(scope: !13781, file: !1056, discriminator: 2)
!14050 = !DILocation(line: 319, column: 5, scope: !14049)
!14051 = distinct !{!14051, !14052}
!14052 = !DILocation(line: 319, column: 5, scope: !2587)
!14053 = !DILocation(line: 366, column: 29, scope: !2587)
!14054 = !DILocation(line: 366, column: 5, scope: !2587)
!14055 = !DILocation(line: 366, column: 14, scope: !2587)
!14056 = !DILocation(line: 366, column: 27, scope: !2587)
!14057 = !DILocation(line: 367, column: 28, scope: !2587)
!14058 = !DILocation(line: 367, column: 5, scope: !2587)
!14059 = !DILocation(line: 367, column: 14, scope: !2587)
!14060 = !DILocation(line: 367, column: 26, scope: !2587)
!14061 = !DILocation(line: 368, column: 1, scope: !2587)
!14062 = distinct !DISubprogram(name: "sbr_x_gen", scope: !1001, file: !1001, line: 1326, type: !2556, isLocal: true, isDefinition: true, scopeLine: 1329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!14063 = !DILocalVariable(name: "sbr", arg: 1, scope: !14062, file: !1001, line: 1326, type: !1123)
!14064 = !DILocation(line: 1326, column: 47, scope: !14062)
!14065 = !DILocalVariable(name: "X", arg: 2, scope: !14062, file: !1001, line: 1326, type: !1332)
!14066 = !DILocation(line: 1326, column: 61, scope: !14062)
!14067 = !DILocalVariable(name: "Y0", arg: 3, scope: !14062, file: !1001, line: 1327, type: !973)
!14068 = !DILocation(line: 1327, column: 37, scope: !14062)
!14069 = !DILocalVariable(name: "Y1", arg: 4, scope: !14062, file: !1001, line: 1327, type: !973)
!14070 = !DILocation(line: 1327, column: 67, scope: !14062)
!14071 = !DILocalVariable(name: "X_low", arg: 5, scope: !14062, file: !1001, line: 1328, type: !965)
!14072 = !DILocation(line: 1328, column: 37, scope: !14062)
!14073 = !DILocalVariable(name: "ch", arg: 6, scope: !14062, file: !1001, line: 1328, type: !992)
!14074 = !DILocation(line: 1328, column: 59, scope: !14062)
!14075 = !DILocalVariable(name: "k", scope: !14062, file: !1001, line: 1330, type: !992)
!14076 = !DILocation(line: 1330, column: 9, scope: !14062)
!14077 = !DILocalVariable(name: "i", scope: !14062, file: !1001, line: 1330, type: !992)
!14078 = !DILocation(line: 1330, column: 12, scope: !14062)
!14079 = !DILocalVariable(name: "i_f", scope: !14062, file: !1001, line: 1331, type: !1585)
!14080 = !DILocation(line: 1331, column: 15, scope: !14062)
!14081 = !DILocalVariable(name: "i_Temp", scope: !14062, file: !1001, line: 1332, type: !1585)
!14082 = !DILocation(line: 1332, column: 15, scope: !14062)
!14083 = !DILocation(line: 1332, column: 38, scope: !14062)
!14084 = !DILocation(line: 1332, column: 28, scope: !14062)
!14085 = !DILocation(line: 1332, column: 33, scope: !14062)
!14086 = !DILocation(line: 1332, column: 42, scope: !14062)
!14087 = !DILocation(line: 1332, column: 27, scope: !14062)
!14088 = !DILocation(line: 1332, column: 60, scope: !14062)
!14089 = !DILocation(line: 1332, column: 67, scope: !14062)
!14090 = !DILocation(line: 1332, column: 25, scope: !14062)
!14091 = !DILocation(line: 1332, column: 88, scope: !14092)
!14092 = !DILexicalBlockFile(scope: !14062, file: !1001, discriminator: 1)
!14093 = !DILocation(line: 1332, column: 78, scope: !14092)
!14094 = !DILocation(line: 1332, column: 83, scope: !14092)
!14095 = !DILocation(line: 1332, column: 92, scope: !14092)
!14096 = !DILocation(line: 1332, column: 77, scope: !14092)
!14097 = !DILocation(line: 1332, column: 110, scope: !14092)
!14098 = !DILocation(line: 1332, column: 25, scope: !14092)
!14099 = !DILocation(line: 1332, column: 25, scope: !14100)
!14100 = !DILexicalBlockFile(scope: !14062, file: !1001, discriminator: 2)
!14101 = !DILocation(line: 1332, column: 25, scope: !14102)
!14102 = !DILexicalBlockFile(scope: !14062, file: !1001, discriminator: 3)
!14103 = !DILocation(line: 1332, column: 15, scope: !14102)
!14104 = !DILocation(line: 1333, column: 12, scope: !14062)
!14105 = !DILocation(line: 1333, column: 5, scope: !14062)
!14106 = !DILocation(line: 1334, column: 12, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14062, file: !1001, line: 1334, column: 5)
!14108 = !DILocation(line: 1334, column: 10, scope: !14107)
!14109 = !DILocation(line: 1334, column: 17, scope: !14110)
!14110 = !DILexicalBlockFile(scope: !14111, file: !1001, discriminator: 1)
!14111 = distinct !DILexicalBlock(scope: !14107, file: !1001, line: 1334, column: 5)
!14112 = !DILocation(line: 1334, column: 21, scope: !14110)
!14113 = !DILocation(line: 1334, column: 26, scope: !14110)
!14114 = !DILocation(line: 1334, column: 19, scope: !14110)
!14115 = !DILocation(line: 1334, column: 5, scope: !14110)
!14116 = !DILocation(line: 1335, column: 16, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !1001, line: 1335, column: 9)
!14118 = distinct !DILexicalBlock(scope: !14111, file: !1001, line: 1334, column: 38)
!14119 = !DILocation(line: 1335, column: 14, scope: !14117)
!14120 = !DILocation(line: 1335, column: 21, scope: !14121)
!14121 = !DILexicalBlockFile(scope: !14122, file: !1001, discriminator: 1)
!14122 = distinct !DILexicalBlock(scope: !14117, file: !1001, line: 1335, column: 9)
!14123 = !DILocation(line: 1335, column: 25, scope: !14121)
!14124 = !DILocation(line: 1335, column: 23, scope: !14121)
!14125 = !DILocation(line: 1335, column: 9, scope: !14121)
!14126 = !DILocation(line: 1336, column: 35, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14122, file: !1001, line: 1335, column: 38)
!14128 = !DILocation(line: 1336, column: 37, scope: !14127)
!14129 = !DILocation(line: 1336, column: 26, scope: !14127)
!14130 = !DILocation(line: 1336, column: 32, scope: !14127)
!14131 = !DILocation(line: 1336, column: 21, scope: !14127)
!14132 = !DILocation(line: 1336, column: 13, scope: !14127)
!14133 = !DILocation(line: 1336, column: 18, scope: !14127)
!14134 = !DILocation(line: 1336, column: 24, scope: !14127)
!14135 = !DILocation(line: 1337, column: 35, scope: !14127)
!14136 = !DILocation(line: 1337, column: 37, scope: !14127)
!14137 = !DILocation(line: 1337, column: 26, scope: !14127)
!14138 = !DILocation(line: 1337, column: 32, scope: !14127)
!14139 = !DILocation(line: 1337, column: 21, scope: !14127)
!14140 = !DILocation(line: 1337, column: 13, scope: !14127)
!14141 = !DILocation(line: 1337, column: 18, scope: !14127)
!14142 = !DILocation(line: 1337, column: 24, scope: !14127)
!14143 = !DILocation(line: 1338, column: 9, scope: !14127)
!14144 = !DILocation(line: 1335, column: 34, scope: !14145)
!14145 = !DILexicalBlockFile(scope: !14122, file: !1001, discriminator: 2)
!14146 = !DILocation(line: 1335, column: 9, scope: !14145)
!14147 = distinct !{!14147, !14148}
!14148 = !DILocation(line: 1335, column: 9, scope: !14118)
!14149 = !DILocation(line: 1339, column: 5, scope: !14118)
!14150 = !DILocation(line: 1334, column: 34, scope: !14151)
!14151 = !DILexicalBlockFile(scope: !14111, file: !1001, discriminator: 2)
!14152 = !DILocation(line: 1334, column: 5, scope: !14151)
!14153 = distinct !{!14153, !14154}
!14154 = !DILocation(line: 1334, column: 5, scope: !14062)
!14155 = !DILocation(line: 1340, column: 5, scope: !14062)
!14156 = !DILocation(line: 1340, column: 12, scope: !14157)
!14157 = !DILexicalBlockFile(scope: !14158, file: !1001, discriminator: 1)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !1001, line: 1340, column: 5)
!14159 = distinct !DILexicalBlock(scope: !14062, file: !1001, line: 1340, column: 5)
!14160 = !DILocation(line: 1340, column: 16, scope: !14157)
!14161 = !DILocation(line: 1340, column: 21, scope: !14157)
!14162 = !DILocation(line: 1340, column: 29, scope: !14157)
!14163 = !DILocation(line: 1340, column: 34, scope: !14157)
!14164 = !DILocation(line: 1340, column: 27, scope: !14157)
!14165 = !DILocation(line: 1340, column: 14, scope: !14157)
!14166 = !DILocation(line: 1340, column: 5, scope: !14157)
!14167 = !DILocation(line: 1341, column: 16, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14169, file: !1001, line: 1341, column: 9)
!14169 = distinct !DILexicalBlock(scope: !14158, file: !1001, line: 1340, column: 45)
!14170 = !DILocation(line: 1341, column: 14, scope: !14168)
!14171 = !DILocation(line: 1341, column: 21, scope: !14172)
!14172 = !DILexicalBlockFile(scope: !14173, file: !1001, discriminator: 1)
!14173 = distinct !DILexicalBlock(scope: !14168, file: !1001, line: 1341, column: 9)
!14174 = !DILocation(line: 1341, column: 25, scope: !14172)
!14175 = !DILocation(line: 1341, column: 23, scope: !14172)
!14176 = !DILocation(line: 1341, column: 9, scope: !14172)
!14177 = !DILocation(line: 1342, column: 38, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14173, file: !1001, line: 1341, column: 38)
!14179 = !DILocation(line: 1342, column: 26, scope: !14178)
!14180 = !DILocation(line: 1342, column: 29, scope: !14178)
!14181 = !DILocation(line: 1342, column: 31, scope: !14178)
!14182 = !DILocation(line: 1342, column: 21, scope: !14178)
!14183 = !DILocation(line: 1342, column: 13, scope: !14178)
!14184 = !DILocation(line: 1342, column: 18, scope: !14178)
!14185 = !DILocation(line: 1342, column: 24, scope: !14178)
!14186 = !DILocation(line: 1343, column: 38, scope: !14178)
!14187 = !DILocation(line: 1343, column: 26, scope: !14178)
!14188 = !DILocation(line: 1343, column: 29, scope: !14178)
!14189 = !DILocation(line: 1343, column: 31, scope: !14178)
!14190 = !DILocation(line: 1343, column: 21, scope: !14178)
!14191 = !DILocation(line: 1343, column: 13, scope: !14178)
!14192 = !DILocation(line: 1343, column: 18, scope: !14178)
!14193 = !DILocation(line: 1343, column: 24, scope: !14178)
!14194 = !DILocation(line: 1344, column: 9, scope: !14178)
!14195 = !DILocation(line: 1341, column: 34, scope: !14196)
!14196 = !DILexicalBlockFile(scope: !14173, file: !1001, discriminator: 2)
!14197 = !DILocation(line: 1341, column: 9, scope: !14196)
!14198 = distinct !{!14198, !14199}
!14199 = !DILocation(line: 1341, column: 9, scope: !14169)
!14200 = !DILocation(line: 1345, column: 5, scope: !14169)
!14201 = !DILocation(line: 1340, column: 41, scope: !14202)
!14202 = !DILexicalBlockFile(scope: !14158, file: !1001, discriminator: 2)
!14203 = !DILocation(line: 1340, column: 5, scope: !14202)
!14204 = distinct !{!14204, !14155}
!14205 = !DILocation(line: 1347, column: 12, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14062, file: !1001, line: 1347, column: 5)
!14207 = !DILocation(line: 1347, column: 10, scope: !14206)
!14208 = !DILocation(line: 1347, column: 17, scope: !14209)
!14209 = !DILexicalBlockFile(scope: !14210, file: !1001, discriminator: 1)
!14210 = distinct !DILexicalBlock(scope: !14206, file: !1001, line: 1347, column: 5)
!14211 = !DILocation(line: 1347, column: 21, scope: !14209)
!14212 = !DILocation(line: 1347, column: 26, scope: !14209)
!14213 = !DILocation(line: 1347, column: 19, scope: !14209)
!14214 = !DILocation(line: 1347, column: 5, scope: !14209)
!14215 = !DILocation(line: 1348, column: 18, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !1001, line: 1348, column: 9)
!14217 = distinct !DILexicalBlock(scope: !14210, file: !1001, line: 1347, column: 38)
!14218 = !DILocation(line: 1348, column: 16, scope: !14216)
!14219 = !DILocation(line: 1348, column: 14, scope: !14216)
!14220 = !DILocation(line: 1348, column: 26, scope: !14221)
!14221 = !DILexicalBlockFile(scope: !14222, file: !1001, discriminator: 1)
!14222 = distinct !DILexicalBlock(scope: !14216, file: !1001, line: 1348, column: 9)
!14223 = !DILocation(line: 1348, column: 28, scope: !14221)
!14224 = !DILocation(line: 1348, column: 9, scope: !14221)
!14225 = !DILocation(line: 1349, column: 35, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !1001, line: 1348, column: 39)
!14227 = !DILocation(line: 1349, column: 37, scope: !14226)
!14228 = !DILocation(line: 1349, column: 26, scope: !14226)
!14229 = !DILocation(line: 1349, column: 32, scope: !14226)
!14230 = !DILocation(line: 1349, column: 21, scope: !14226)
!14231 = !DILocation(line: 1349, column: 13, scope: !14226)
!14232 = !DILocation(line: 1349, column: 18, scope: !14226)
!14233 = !DILocation(line: 1349, column: 24, scope: !14226)
!14234 = !DILocation(line: 1350, column: 35, scope: !14226)
!14235 = !DILocation(line: 1350, column: 37, scope: !14226)
!14236 = !DILocation(line: 1350, column: 26, scope: !14226)
!14237 = !DILocation(line: 1350, column: 32, scope: !14226)
!14238 = !DILocation(line: 1350, column: 21, scope: !14226)
!14239 = !DILocation(line: 1350, column: 13, scope: !14226)
!14240 = !DILocation(line: 1350, column: 18, scope: !14226)
!14241 = !DILocation(line: 1350, column: 24, scope: !14226)
!14242 = !DILocation(line: 1351, column: 9, scope: !14226)
!14243 = !DILocation(line: 1348, column: 35, scope: !14244)
!14244 = !DILexicalBlockFile(scope: !14222, file: !1001, discriminator: 2)
!14245 = !DILocation(line: 1348, column: 9, scope: !14244)
!14246 = distinct !{!14246, !14247}
!14247 = !DILocation(line: 1348, column: 9, scope: !14217)
!14248 = !DILocation(line: 1352, column: 5, scope: !14217)
!14249 = !DILocation(line: 1347, column: 34, scope: !14250)
!14250 = !DILexicalBlockFile(scope: !14210, file: !1001, discriminator: 2)
!14251 = !DILocation(line: 1347, column: 5, scope: !14250)
!14252 = distinct !{!14252, !14253}
!14253 = !DILocation(line: 1347, column: 5, scope: !14062)
!14254 = !DILocation(line: 1353, column: 5, scope: !14062)
!14255 = !DILocation(line: 1353, column: 12, scope: !14256)
!14256 = !DILexicalBlockFile(scope: !14257, file: !1001, discriminator: 1)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !1001, line: 1353, column: 5)
!14258 = distinct !DILexicalBlock(scope: !14062, file: !1001, line: 1353, column: 5)
!14259 = !DILocation(line: 1353, column: 16, scope: !14256)
!14260 = !DILocation(line: 1353, column: 21, scope: !14256)
!14261 = !DILocation(line: 1353, column: 29, scope: !14256)
!14262 = !DILocation(line: 1353, column: 34, scope: !14256)
!14263 = !DILocation(line: 1353, column: 27, scope: !14256)
!14264 = !DILocation(line: 1353, column: 14, scope: !14256)
!14265 = !DILocation(line: 1353, column: 5, scope: !14256)
!14266 = !DILocation(line: 1354, column: 18, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !1001, line: 1354, column: 9)
!14268 = distinct !DILexicalBlock(scope: !14257, file: !1001, line: 1353, column: 45)
!14269 = !DILocation(line: 1354, column: 16, scope: !14267)
!14270 = !DILocation(line: 1354, column: 14, scope: !14267)
!14271 = !DILocation(line: 1354, column: 26, scope: !14272)
!14272 = !DILexicalBlockFile(scope: !14273, file: !1001, discriminator: 1)
!14273 = distinct !DILexicalBlock(scope: !14267, file: !1001, line: 1354, column: 9)
!14274 = !DILocation(line: 1354, column: 28, scope: !14272)
!14275 = !DILocation(line: 1354, column: 9, scope: !14272)
!14276 = !DILocation(line: 1355, column: 32, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14273, file: !1001, line: 1354, column: 40)
!14278 = !DILocation(line: 1355, column: 26, scope: !14277)
!14279 = !DILocation(line: 1355, column: 29, scope: !14277)
!14280 = !DILocation(line: 1355, column: 21, scope: !14277)
!14281 = !DILocation(line: 1355, column: 13, scope: !14277)
!14282 = !DILocation(line: 1355, column: 18, scope: !14277)
!14283 = !DILocation(line: 1355, column: 24, scope: !14277)
!14284 = !DILocation(line: 1356, column: 32, scope: !14277)
!14285 = !DILocation(line: 1356, column: 26, scope: !14277)
!14286 = !DILocation(line: 1356, column: 29, scope: !14277)
!14287 = !DILocation(line: 1356, column: 21, scope: !14277)
!14288 = !DILocation(line: 1356, column: 13, scope: !14277)
!14289 = !DILocation(line: 1356, column: 18, scope: !14277)
!14290 = !DILocation(line: 1356, column: 24, scope: !14277)
!14291 = !DILocation(line: 1357, column: 9, scope: !14277)
!14292 = !DILocation(line: 1354, column: 36, scope: !14293)
!14293 = !DILexicalBlockFile(scope: !14273, file: !1001, discriminator: 2)
!14294 = !DILocation(line: 1354, column: 9, scope: !14293)
!14295 = distinct !{!14295, !14296}
!14296 = !DILocation(line: 1354, column: 9, scope: !14268)
!14297 = !DILocation(line: 1358, column: 5, scope: !14268)
!14298 = !DILocation(line: 1353, column: 41, scope: !14299)
!14299 = !DILexicalBlockFile(scope: !14257, file: !1001, discriminator: 2)
!14300 = !DILocation(line: 1353, column: 5, scope: !14299)
!14301 = distinct !{!14301, !14254}
!14302 = !DILocation(line: 1359, column: 5, scope: !14062)
!14303 = distinct !DISubprogram(name: "sbr_hf_inverse_filter", scope: !1056, file: !1056, line: 140, type: !14304, isLocal: true, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1004)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{null, !2562, !14306, !14306, !2592, !992}
!14306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64, align: 64)
!14307 = !DILocalVariable(name: "dsp", arg: 1, scope: !14303, file: !1056, line: 140, type: !2562)
!14308 = !DILocation(line: 140, column: 50, scope: !14303)
!14309 = !DILocalVariable(name: "alpha0", arg: 2, scope: !14303, file: !1056, line: 141, type: !14306)
!14310 = !DILocation(line: 141, column: 43, scope: !14303)
!14311 = !DILocalVariable(name: "alpha1", arg: 3, scope: !14303, file: !1056, line: 141, type: !14306)
!14312 = !DILocation(line: 141, column: 63, scope: !14303)
!14313 = !DILocalVariable(name: "X_low", arg: 4, scope: !14303, file: !1056, line: 142, type: !2592)
!14314 = !DILocation(line: 142, column: 47, scope: !14303)
!14315 = !DILocalVariable(name: "k0", arg: 5, scope: !14303, file: !1056, line: 142, type: !992)
!14316 = !DILocation(line: 142, column: 69, scope: !14303)
!14317 = !DILocalVariable(name: "k", scope: !14303, file: !1056, line: 144, type: !992)
!14318 = !DILocation(line: 144, column: 9, scope: !14303)
!14319 = !DILocation(line: 145, column: 12, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14303, file: !1056, line: 145, column: 5)
!14321 = !DILocation(line: 145, column: 10, scope: !14320)
!14322 = !DILocation(line: 145, column: 17, scope: !14323)
!14323 = !DILexicalBlockFile(scope: !14324, file: !1056, discriminator: 1)
!14324 = distinct !DILexicalBlock(scope: !14320, file: !1056, line: 145, column: 5)
!14325 = !DILocation(line: 145, column: 21, scope: !14323)
!14326 = !DILocation(line: 145, column: 19, scope: !14323)
!14327 = !DILocation(line: 145, column: 5, scope: !14323)
!14328 = !DILocalVariable(name: "la_phi", scope: !14329, file: !1056, line: 146, type: !14330)
!14329 = distinct !DILexicalBlock(scope: !14324, file: !1056, line: 145, column: 30)
!14330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 384, align: 32, elements: !14331)
!14331 = !{!1224, !964, !964}
!14332 = !DILocation(line: 146, column: 46, scope: !14329)
!14333 = !DILocalVariable(name: "phi", scope: !14329, file: !1056, line: 146, type: !14334)
!14334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14335, size: 64, align: 64)
!14335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 128, align: 32, elements: !1479)
!14336 = !DILocation(line: 146, column: 73, scope: !14329)
!14337 = !DILocation(line: 146, column: 87, scope: !14329)
!14338 = !DILocalVariable(name: "dk", scope: !14329, file: !1056, line: 147, type: !958)
!14339 = !DILocation(line: 147, column: 15, scope: !14329)
!14340 = !DILocation(line: 149, column: 9, scope: !14329)
!14341 = !DILocation(line: 149, column: 14, scope: !14329)
!14342 = !DILocation(line: 149, column: 34, scope: !14329)
!14343 = !DILocation(line: 149, column: 28, scope: !14329)
!14344 = !DILocation(line: 149, column: 38, scope: !14329)
!14345 = !DILocation(line: 151, column: 14, scope: !14329)
!14346 = !DILocation(line: 151, column: 29, scope: !14329)
!14347 = !DILocation(line: 151, column: 27, scope: !14329)
!14348 = !DILocation(line: 152, column: 15, scope: !14329)
!14349 = !DILocation(line: 152, column: 30, scope: !14329)
!14350 = !DILocation(line: 152, column: 28, scope: !14329)
!14351 = !DILocation(line: 152, column: 45, scope: !14329)
!14352 = !DILocation(line: 152, column: 60, scope: !14329)
!14353 = !DILocation(line: 152, column: 58, scope: !14329)
!14354 = !DILocation(line: 152, column: 43, scope: !14329)
!14355 = !DILocation(line: 152, column: 74, scope: !14329)
!14356 = !DILocation(line: 151, column: 42, scope: !14329)
!14357 = !DILocation(line: 151, column: 12, scope: !14329)
!14358 = !DILocation(line: 154, column: 14, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14329, file: !1056, line: 154, column: 13)
!14360 = !DILocation(line: 154, column: 13, scope: !14329)
!14361 = !DILocation(line: 155, column: 20, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14359, file: !1056, line: 154, column: 18)
!14363 = !DILocation(line: 155, column: 13, scope: !14362)
!14364 = !DILocation(line: 155, column: 26, scope: !14362)
!14365 = !DILocation(line: 156, column: 20, scope: !14362)
!14366 = !DILocation(line: 156, column: 13, scope: !14362)
!14367 = !DILocation(line: 156, column: 26, scope: !14362)
!14368 = !DILocation(line: 157, column: 9, scope: !14362)
!14369 = !DILocalVariable(name: "temp_real", scope: !14370, file: !1056, line: 158, type: !958)
!14370 = distinct !DILexicalBlock(scope: !14359, file: !1056, line: 157, column: 16)
!14371 = !DILocation(line: 158, column: 19, scope: !14370)
!14372 = !DILocalVariable(name: "temp_im", scope: !14370, file: !1056, line: 158, type: !958)
!14373 = !DILocation(line: 158, column: 30, scope: !14370)
!14374 = !DILocation(line: 159, column: 25, scope: !14370)
!14375 = !DILocation(line: 159, column: 40, scope: !14370)
!14376 = !DILocation(line: 159, column: 38, scope: !14370)
!14377 = !DILocation(line: 160, column: 25, scope: !14370)
!14378 = !DILocation(line: 160, column: 40, scope: !14370)
!14379 = !DILocation(line: 160, column: 38, scope: !14370)
!14380 = !DILocation(line: 159, column: 53, scope: !14370)
!14381 = !DILocation(line: 161, column: 25, scope: !14370)
!14382 = !DILocation(line: 161, column: 40, scope: !14370)
!14383 = !DILocation(line: 161, column: 38, scope: !14370)
!14384 = !DILocation(line: 160, column: 53, scope: !14370)
!14385 = !DILocation(line: 159, column: 23, scope: !14370)
!14386 = !DILocation(line: 162, column: 23, scope: !14370)
!14387 = !DILocation(line: 162, column: 38, scope: !14370)
!14388 = !DILocation(line: 162, column: 36, scope: !14370)
!14389 = !DILocation(line: 163, column: 25, scope: !14370)
!14390 = !DILocation(line: 163, column: 40, scope: !14370)
!14391 = !DILocation(line: 163, column: 38, scope: !14370)
!14392 = !DILocation(line: 162, column: 51, scope: !14370)
!14393 = !DILocation(line: 164, column: 25, scope: !14370)
!14394 = !DILocation(line: 164, column: 40, scope: !14370)
!14395 = !DILocation(line: 164, column: 38, scope: !14370)
!14396 = !DILocation(line: 163, column: 53, scope: !14370)
!14397 = !DILocation(line: 162, column: 21, scope: !14370)
!14398 = !DILocation(line: 166, column: 28, scope: !14370)
!14399 = !DILocation(line: 166, column: 40, scope: !14370)
!14400 = !DILocation(line: 166, column: 38, scope: !14370)
!14401 = !DILocation(line: 166, column: 20, scope: !14370)
!14402 = !DILocation(line: 166, column: 13, scope: !14370)
!14403 = !DILocation(line: 166, column: 26, scope: !14370)
!14404 = !DILocation(line: 167, column: 28, scope: !14370)
!14405 = !DILocation(line: 167, column: 38, scope: !14370)
!14406 = !DILocation(line: 167, column: 36, scope: !14370)
!14407 = !DILocation(line: 167, column: 20, scope: !14370)
!14408 = !DILocation(line: 167, column: 13, scope: !14370)
!14409 = !DILocation(line: 167, column: 26, scope: !14370)
!14410 = !DILocation(line: 170, column: 14, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14329, file: !1056, line: 170, column: 13)
!14412 = !DILocation(line: 170, column: 13, scope: !14329)
!14413 = !DILocation(line: 171, column: 20, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14411, file: !1056, line: 170, column: 28)
!14415 = !DILocation(line: 171, column: 13, scope: !14414)
!14416 = !DILocation(line: 171, column: 26, scope: !14414)
!14417 = !DILocation(line: 172, column: 20, scope: !14414)
!14418 = !DILocation(line: 172, column: 13, scope: !14414)
!14419 = !DILocation(line: 172, column: 26, scope: !14414)
!14420 = !DILocation(line: 173, column: 9, scope: !14414)
!14421 = !DILocalVariable(name: "temp_real", scope: !14422, file: !1056, line: 174, type: !958)
!14422 = distinct !DILexicalBlock(scope: !14411, file: !1056, line: 173, column: 16)
!14423 = !DILocation(line: 174, column: 19, scope: !14422)
!14424 = !DILocalVariable(name: "temp_im", scope: !14422, file: !1056, line: 174, type: !958)
!14425 = !DILocation(line: 174, column: 30, scope: !14422)
!14426 = !DILocation(line: 175, column: 25, scope: !14422)
!14427 = !DILocation(line: 175, column: 47, scope: !14422)
!14428 = !DILocation(line: 175, column: 40, scope: !14422)
!14429 = !DILocation(line: 175, column: 55, scope: !14422)
!14430 = !DILocation(line: 175, column: 53, scope: !14422)
!14431 = !DILocation(line: 175, column: 38, scope: !14422)
!14432 = !DILocation(line: 176, column: 47, scope: !14422)
!14433 = !DILocation(line: 176, column: 40, scope: !14422)
!14434 = !DILocation(line: 176, column: 55, scope: !14422)
!14435 = !DILocation(line: 176, column: 53, scope: !14422)
!14436 = !DILocation(line: 175, column: 68, scope: !14422)
!14437 = !DILocation(line: 175, column: 23, scope: !14422)
!14438 = !DILocation(line: 177, column: 23, scope: !14422)
!14439 = !DILocation(line: 177, column: 45, scope: !14422)
!14440 = !DILocation(line: 177, column: 38, scope: !14422)
!14441 = !DILocation(line: 177, column: 53, scope: !14422)
!14442 = !DILocation(line: 177, column: 51, scope: !14422)
!14443 = !DILocation(line: 177, column: 36, scope: !14422)
!14444 = !DILocation(line: 178, column: 47, scope: !14422)
!14445 = !DILocation(line: 178, column: 40, scope: !14422)
!14446 = !DILocation(line: 178, column: 55, scope: !14422)
!14447 = !DILocation(line: 178, column: 53, scope: !14422)
!14448 = !DILocation(line: 177, column: 66, scope: !14422)
!14449 = !DILocation(line: 177, column: 21, scope: !14422)
!14450 = !DILocation(line: 180, column: 29, scope: !14422)
!14451 = !DILocation(line: 180, column: 28, scope: !14422)
!14452 = !DILocation(line: 180, column: 41, scope: !14422)
!14453 = !DILocation(line: 180, column: 39, scope: !14422)
!14454 = !DILocation(line: 180, column: 20, scope: !14422)
!14455 = !DILocation(line: 180, column: 13, scope: !14422)
!14456 = !DILocation(line: 180, column: 26, scope: !14422)
!14457 = !DILocation(line: 181, column: 29, scope: !14422)
!14458 = !DILocation(line: 181, column: 28, scope: !14422)
!14459 = !DILocation(line: 181, column: 39, scope: !14422)
!14460 = !DILocation(line: 181, column: 37, scope: !14422)
!14461 = !DILocation(line: 181, column: 20, scope: !14422)
!14462 = !DILocation(line: 181, column: 13, scope: !14422)
!14463 = !DILocation(line: 181, column: 26, scope: !14422)
!14464 = !DILocation(line: 184, column: 20, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14329, file: !1056, line: 184, column: 13)
!14466 = !DILocation(line: 184, column: 13, scope: !14465)
!14467 = !DILocation(line: 184, column: 35, scope: !14465)
!14468 = !DILocation(line: 184, column: 28, scope: !14465)
!14469 = !DILocation(line: 184, column: 26, scope: !14465)
!14470 = !DILocation(line: 184, column: 50, scope: !14465)
!14471 = !DILocation(line: 184, column: 43, scope: !14465)
!14472 = !DILocation(line: 184, column: 65, scope: !14465)
!14473 = !DILocation(line: 184, column: 58, scope: !14465)
!14474 = !DILocation(line: 184, column: 56, scope: !14465)
!14475 = !DILocation(line: 184, column: 41, scope: !14465)
!14476 = !DILocation(line: 184, column: 71, scope: !14465)
!14477 = !DILocation(line: 184, column: 80, scope: !14465)
!14478 = !DILocation(line: 185, column: 19, scope: !14465)
!14479 = !DILocation(line: 185, column: 12, scope: !14465)
!14480 = !DILocation(line: 185, column: 34, scope: !14465)
!14481 = !DILocation(line: 185, column: 27, scope: !14465)
!14482 = !DILocation(line: 185, column: 25, scope: !14465)
!14483 = !DILocation(line: 185, column: 49, scope: !14465)
!14484 = !DILocation(line: 185, column: 42, scope: !14465)
!14485 = !DILocation(line: 185, column: 64, scope: !14465)
!14486 = !DILocation(line: 185, column: 57, scope: !14465)
!14487 = !DILocation(line: 185, column: 55, scope: !14465)
!14488 = !DILocation(line: 185, column: 40, scope: !14465)
!14489 = !DILocation(line: 185, column: 70, scope: !14465)
!14490 = !DILocation(line: 184, column: 13, scope: !14491)
!14491 = !DILexicalBlockFile(scope: !14329, file: !1056, discriminator: 1)
!14492 = !DILocation(line: 186, column: 20, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14465, file: !1056, line: 185, column: 80)
!14494 = !DILocation(line: 186, column: 13, scope: !14493)
!14495 = !DILocation(line: 186, column: 26, scope: !14493)
!14496 = !DILocation(line: 187, column: 20, scope: !14493)
!14497 = !DILocation(line: 187, column: 13, scope: !14493)
!14498 = !DILocation(line: 187, column: 26, scope: !14493)
!14499 = !DILocation(line: 188, column: 20, scope: !14493)
!14500 = !DILocation(line: 188, column: 13, scope: !14493)
!14501 = !DILocation(line: 188, column: 26, scope: !14493)
!14502 = !DILocation(line: 189, column: 20, scope: !14493)
!14503 = !DILocation(line: 189, column: 13, scope: !14493)
!14504 = !DILocation(line: 189, column: 26, scope: !14493)
!14505 = !DILocation(line: 190, column: 9, scope: !14493)
!14506 = !DILocation(line: 191, column: 5, scope: !14329)
!14507 = !DILocation(line: 145, column: 26, scope: !14508)
!14508 = !DILexicalBlockFile(scope: !14324, file: !1056, discriminator: 2)
!14509 = !DILocation(line: 145, column: 5, scope: !14508)
!14510 = distinct !{!14510, !14511}
!14511 = !DILocation(line: 145, column: 5, scope: !14303)
!14512 = !DILocation(line: 192, column: 1, scope: !14303)
