; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--dca_core.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--dca_core.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DCAVLC = type { i32, i32, [7 x %struct.VLC] }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.DCACoreDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x [10 x i8]], [7 x [10 x i32]], [16 x i8], [7 x [64 x i8]], [7 x [64 x i16]], [7 x [64 x i8]], [16 x [7 x [32 x i8]]], [7 x [32 x [2 x i32]]], [7 x i8], [7 x [64 x i32]], i32, i32, [24 x i32], i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [12 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [7 x [64 x i32*]], i32, i32*, [7 x [32 x i32*]], i32*, [24 x i8], [7 x %struct.DCADSPData], %struct.DCADSPContext*, %struct.DCADCTContext, [2 x %struct.FFTContext], %struct.SynthFilterContext, %struct.AVFloatDSPContext*, %struct.AVFixedDSPContext*, i32, i8*, [32 x i32*], i32, float, [32 x i32], i32, i32, i32, i32, [16 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.DCADSPData = type { %union.anon, i32, [28 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { [1024 x float], [64 x float] }
%struct.DCADSPContext = type { void (i32**, i32*, [32 x i8]*, [2 x i32]*, i64, i64, i64, i64)*, void (i32**, i32**, i32*, i64, i64, i64, i64)*, [2 x void (float*, i32*, float*, i64)*], void (float*, float*, float*, i64)*, [2 x void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)*], void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32*, i64)*, [2 x void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)*], void (i32*, i32*, i32, i64)*, void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32, i64)*, void (i32*, i32*, i32, i64)*, void (i32*, i32, i64)*, void (i32*, i32, i64)*, void (i32*, i32*, i32*, i32*, i64)*, void ([4 x float]*, float**, float*, i64, i64)*, void (float*, float*, [4 x float]*, [2 x float]*, i64)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.DCADCTContext = type { [2 x void (i32*, i32*)*] }
%struct.SynthFilterContext = type { void (%struct.FFTContext*, float*, i32*, float*, float*, float*, float*, float)*, void (%struct.FFTContext*, float*, i32*, float*, float*, float*, float*, float)*, void (%struct.DCADCTContext*, i32*, i32*, i32*, i32*, i32*, i32*)*, void (%struct.DCADCTContext*, i32*, i32*, i32*, i32*, i32*, i32*)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.AVFixedDSPContext = type { void (i16*, i32*, i32*, i32*, i32, i8)*, void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)*, i32 (i32*, i32*, i32)*, void (i32*, i32*, i32)* }
%struct.DCACoreFrameHeader = type { i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.v = type { [2 x i64] }
%struct.DCAContext = type { %struct.AVClass*, %struct.AVCodecContext*, [16 x i8], %struct.DCACoreDecoder, %struct.DCAExssParser, [16 x i8], %struct.DCAXllDecoder, %struct.DCALbrDecoder, %struct.DCADSPContext, i32*, i8*, i32, i32, i32, i32 }
%struct.DCAExssParser = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [1 x %struct.DCAExssAsset] }
%struct.DCAExssAsset = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DCAXllDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], [3 x %struct.DCAXllChSet], i32*, i32, i32, i32, i32, i32, i32, i8*, i32, i32, %struct.DCADSPContext*, i32, [32 x i32*] }
%struct.DCAXllChSet = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i32], [16 x i32], [16 x i32], i32, [8 x i32], i32, i32, [2 x %struct.DCAXllBand], i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i8], [8 x [8 x i32]], [3 x i32], [3 x i32*], [24 x i8] }
%struct.DCAXllBand = type { i32, [8 x i32], [4 x i32], [8 x i32], i32, [8 x i32], [8 x [16 x i32]], i32, i32, [8 x i32], [8 x i32], [8 x i32*], [8 x i32*] }
%struct.DCALbrDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [32 x i8]], [32 x i8], [3 x [32 x i8]], [3 x [32 x i8]], [6 x i32], [6 x [12 x [8 x i8]]], [6 x [3 x [64 x i8]]], [6 x [28 x i8]], [6 x [28 x [8 x i8]]], [6 x i32], [6 x [32 x [8 x i8]]], [6 x [8 x [5 x i8]]], i8, [2 x [6 x [3 x [2 x [8 x float]]]]], [32 x float], [6 x [32 x float*]], float*, i32, [20 x i8], [6 x [128 x float]], [128 x float], [64 x float], [5 x [2 x float]], float, [6 x i8], [5 x [32 x [2 x i16]]], [512 x %struct.DCALbrTone], i32, %struct.FFTContext, %struct.AVFloatDSPContext*, %struct.DCADSPContext*, [8 x i8] }
%struct.DCALbrTone = type { i8, i8, i8, i8, [6 x i8], [6 x i8] }
%union.unaligned_32 = type { i32 }
%struct.anon.0 = type { [1024 x i32], [64 x i32] }
%struct.v.1 = type { [2 x i64] }

@.str = private unnamed_addr constant [29 x i8] c"Read past end of core frame\0A\00", align 1
@ff_dca_channels = external constant [16 x i8], align 16
@audio_mode_ch_mask = internal constant [10 x i8] c"\01\06\06\06\06\07FG\1E\1F", align 1
@ff_dca_fir_64bands_fixed = external constant [1024 x i32], align 16
@ff_dca_fir_32bands_perfect_fixed = external constant [512 x i32], align 16
@ff_dca_fir_32bands_nonperfect_fixed = external constant [512 x i32], align 16
@.str.1 = private unnamed_addr constant [40 x i8] c"Fixed point mode doesn't support LFF=1\0A\00", align 1
@ff_dca_lfe_fir_64_fixed = external constant [256 x i32], align 16
@.str.2 = private unnamed_addr constant [35 x i8] c"Deficit samples are not supported\0A\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"Unsupported number of PCM sample blocks (%d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Invalid core frame size (%d bytes)\0A\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"Unsupported audio channel arrangement (%d)\0A\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"Invalid core audio sampling frequency\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Reserved bit set\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"Invalid low frequency effects flag\0A\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"Invalid source PCM resolution\0A\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Unknown core frame header error\0A\00", align 1
@avpriv_dca_sample_rates = external constant [16 x i32], align 16
@ff_dca_bit_rates = external constant [32 x i32], align 16
@ff_dca_bits_per_sample = external constant [8 x i8], align 1
@.str.11 = private unnamed_addr constant [82 x i8] c"Invalid number of primary audio channels (%d) for audio channel arrangement (%d)\0A\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"Invalid XXCH channel set header checksum\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"%d XXCH channels\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Invalid XXCH speaker layout mask (%#x)\0A\00", align 1
@.str.15 = private unnamed_addr constant [57 x i8] c"XXCH speaker layout mask (%#x) overlaps with core (%#x)\0A\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"Invalid XXCH downmix scale index (%d)\0A\00", align 1
@ff_dca_inv_dmixtable = external constant [201 x i32], align 16
@.str.17 = private unnamed_addr constant [49 x i8] c"Invalid XXCH downmix channel mapping mask (%#x)\0A\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"Invalid XXCH downmix coefficient index (%d)\0A\00", align 1
@ff_dca_dmixtable = external constant [242 x i16], align 16
@.str.19 = private unnamed_addr constant [32 x i8] c"Invalid subband activity count\0A\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"Invalid joint intensity coding index\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Invalid scale factor code book\0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"Invalid bit allocation quantizer select\0A\00", align 1
@ff_dca_quant_index_sel_nbits = external constant [10 x i8], align 1
@ff_dca_quant_index_group_size = external constant [10 x i8], align 1
@ff_dca_scale_factor_adj = external constant [4 x i32], align 16
@.str.23 = private unnamed_addr constant [42 x i8] c"Read past end of XXCH channel set header\0A\00", align 1
@ff_dca_vlc_bit_allocation = external global %struct.DCAVLC, align 8
@.str.24 = private unnamed_addr constant [30 x i8] c"Invalid bit allocation index\0A\00", align 1
@ff_dca_vlc_transition_mode = external global %struct.DCAVLC, align 8
@.str.25 = private unnamed_addr constant [38 x i8] c"Invalid joint scale factor code book\0A\00", align 1
@ff_dca_scale_factor_quant7 = external constant [128 x i32], align 16
@ff_dca_scale_factor_quant6 = external constant [64 x i32], align 16
@ff_dca_vlc_scale_factor = external global %struct.DCAVLC, align 8
@.str.26 = private unnamed_addr constant [28 x i8] c"Invalid scale factor index\0A\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"Invalid joint scale factor index\0A\00", align 1
@ff_dca_joint_scale_factors = external constant [129 x i32], align 16
@.str.28 = private unnamed_addr constant [32 x i8] c"Subband sample buffer overflow\0A\00", align 1
@ff_dca_high_freq_vq = external constant [1024 x [32 x i8]], align 16
@.str.29 = private unnamed_addr constant [32 x i8] c"Invalid LFE scale factor index\0A\00", align 1
@ff_dca_lossless_quant = external constant [32 x i32], align 16
@ff_dca_lossy_quant = external constant [32 x i32], align 16
@.str.30 = private unnamed_addr constant [20 x i8] c"DSYNC check failed\0A\00", align 1
@ff_dca_vlc_quant_index = external global [10 x %struct.DCAVLC], align 16
@block_code_nbits = internal constant [7 x i8] c"\07\0A\0C\0D\0F\11\13", align 1
@ff_dca_quant_levels = external constant [32 x i32], align 16
@.str.31 = private unnamed_addr constant [32 x i8] c"Failed to decode block code(s)\0A\00", align 1
@ff_inverse = external constant [257 x i32], align 16
@ff_dca_adpcm_vb = external constant [4096 x [4 x i16]], align 16
@.str.32 = private unnamed_addr constant [25 x i8] c"XCH sync word not found\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"X96 sync word not found\0A\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"XXCH sync word not found\0A\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"Invalid auxiliary data sync word\0A\00", align 1
@.str.36 = private unnamed_addr constant [42 x i8] c"Invalid primary channel set downmix type\0A\00", align 1
@ff_dca_dmix_primary_nch = external constant [8 x i8], align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"Invalid downmix coefficient index\0A\00", align 1
@.str.38 = private unnamed_addr constant [33 x i8] c"Invalid auxiliary data checksum\0A\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"Invalid XXCH sync word\0A\00", align 1
@.str.40 = private unnamed_addr constant [36 x i8] c"Invalid XXCH frame header checksum\0A\00", align 1
@.str.41 = private unnamed_addr constant [51 x i8] c"Invalid number of bits for XXCH speaker mask (%d)\0A\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"%d XXCH channel sets\00", align 1
@.str.43 = private unnamed_addr constant [65 x i8] c"XXCH core speaker activity mask (%#x) disagrees with core (%#x)\0A\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"Read past end of XXCH frame header\0A\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"Read past end of XXCH channel set\0A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"XCH with Cs speaker already present\0A\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"Read past end of XCH frame\0A\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"Invalid XBR sync word\0A\00", align 1
@.str.49 = private unnamed_addr constant [35 x i8] c"Invalid XBR frame header checksum\0A\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"Invalid number of active XBR subbands (%d)\0A\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"Read past end of XBR frame header\0A\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"Read past end of XBR channel set\0A\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"Invalid XBR bit allocation index\0A\00", align 1
@.str.54 = private unnamed_addr constant [51 x i8] c"Invalid number of bits for XBR scale factor index\0A\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c"Invalid XBR scale factor index\0A\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"XBR-DSYNC check failed\0A\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"Invalid X96 sync word\0A\00", align 1
@.str.58 = private unnamed_addr constant [35 x i8] c"Invalid X96 frame header checksum\0A\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"Invalid X96 revision (%d)\0A\00", align 1
@.str.60 = private unnamed_addr constant [35 x i8] c"Read past end of X96 frame header\0A\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"Read past end of X96 channel set\0A\00", align 1
@.str.62 = private unnamed_addr constant [41 x i8] c"Invalid X96 channel set header checksum\0A\00", align 1
@.str.63 = private unnamed_addr constant [38 x i8] c"Invalid X96 subband start index (%d)\0A\00", align 1
@.str.64 = private unnamed_addr constant [41 x i8] c"Invalid X96 subband activity count (%d)\0A\00", align 1
@.str.65 = private unnamed_addr constant [42 x i8] c"Invalid X96 joint intensity coding index\0A\00", align 1
@.str.66 = private unnamed_addr constant [36 x i8] c"Invalid X96 scale factor code book\0A\00", align 1
@.str.67 = private unnamed_addr constant [41 x i8] c"Read past end of X96 channel set header\0A\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"Invalid X96 bit allocation index\0A\00", align 1
@.str.69 = private unnamed_addr constant [42 x i8] c"Invalid X96 joint scale factor code book\0A\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"X96-DSYNC check failed\0A\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"Read past end of X96 frame\0A\00", align 1
@prm_ch_to_spkr_map = internal constant [10 x [5 x i8]] [[5 x i8] c"\00\FF\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\00\01\02\FF\FF", [5 x i8] c"\01\02\06\FF\FF", [5 x i8] c"\00\01\02\06\FF", [5 x i8] c"\01\02\03\04\FF", [5 x i8] c"\00\01\02\03\04"], align 16
@ff_dca_fir_64bands = external constant [1024 x float], align 16
@ff_dca_fir_32bands_perfect = external constant [512 x float], align 16
@ff_dca_fir_32bands_nonperfect = external constant [512 x float], align 16
@ff_dca_lfe_fir_128 = external constant [256 x float], align 16
@ff_dca_lfe_fir_64 = external constant [256 x float], align 16

; Function Attrs: nounwind uwtable
define i32 @ff_dca_core_parse(%struct.DCACoreDecoder* %s, i8* %data, i32 %size) #0 !dbg !1091 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !2193, metadata !2194), !dbg !2195
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2196, metadata !2194), !dbg !2197
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2198, metadata !2194), !dbg !2199
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2200, metadata !2194), !dbg !2201
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2202
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 44, !dbg !2203
  store i32 0, i32* %ext_audio_mask, align 8, !dbg !2204
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2205
  %x96_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 61, !dbg !2206
  store i32 0, i32* %x96_pos, align 4, !dbg !2207
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2208
  %xxch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 54, !dbg !2209
  store i32 0, i32* %xxch_pos, align 32, !dbg !2210
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2211
  %xch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 45, !dbg !2212
  store i32 0, i32* %xch_pos, align 4, !dbg !2213
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2214
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 1, !dbg !2216
  %5 = load i8*, i8** %data.addr, align 8, !dbg !2217
  %6 = load i32, i32* %size.addr, align 4, !dbg !2218
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %5, i32 %6), !dbg !2219
  store i32 %call, i32* %ret, align 4, !dbg !2220
  %cmp = icmp slt i32 %call, 0, !dbg !2221
  br i1 %cmp, label %if.then, label %if.end, !dbg !2222

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !2223
  store i32 %7, i32* %retval, align 4, !dbg !2224
  br label %return, !dbg !2224

if.end:                                           ; preds = %entry
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2225
  %gb_in = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 2, !dbg !2226
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2227
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 1, !dbg !2228
  %10 = bitcast %struct.GetBitContext* %gb_in to i8*, !dbg !2228
  %11 = bitcast %struct.GetBitContext* %gb1 to i8*, !dbg !2228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false), !dbg !2228
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2229
  %call2 = call i32 @parse_frame_header(%struct.DCACoreDecoder* %12), !dbg !2231
  store i32 %call2, i32* %ret, align 4, !dbg !2232
  %cmp3 = icmp slt i32 %call2, 0, !dbg !2233
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2234

if.then4:                                         ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !2235
  store i32 %13, i32* %retval, align 4, !dbg !2236
  br label %return, !dbg !2236

if.end5:                                          ; preds = %if.end
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2237
  %call6 = call i32 @alloc_sample_buffer(%struct.DCACoreDecoder* %14), !dbg !2239
  store i32 %call6, i32* %ret, align 4, !dbg !2240
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2241
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2242

if.then8:                                         ; preds = %if.end5
  %15 = load i32, i32* %ret, align 4, !dbg !2243
  store i32 %15, i32* %retval, align 4, !dbg !2244
  br label %return, !dbg !2244

if.end9:                                          ; preds = %if.end5
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2245
  %call10 = call i32 @parse_frame_data(%struct.DCACoreDecoder* %16, i32 0, i32 0), !dbg !2247
  store i32 %call10, i32* %ret, align 4, !dbg !2248
  %cmp11 = icmp slt i32 %call10, 0, !dbg !2249
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2250

if.then12:                                        ; preds = %if.end9
  %17 = load i32, i32* %ret, align 4, !dbg !2251
  store i32 %17, i32* %retval, align 4, !dbg !2252
  br label %return, !dbg !2252

if.end13:                                         ; preds = %if.end9
  %18 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2253
  %call14 = call i32 @parse_optional_info(%struct.DCACoreDecoder* %18), !dbg !2255
  store i32 %call14, i32* %ret, align 4, !dbg !2256
  %cmp15 = icmp slt i32 %call14, 0, !dbg !2257
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2258

if.then16:                                        ; preds = %if.end13
  %19 = load i32, i32* %ret, align 4, !dbg !2259
  store i32 %19, i32* %retval, align 4, !dbg !2260
  br label %return, !dbg !2260

if.end17:                                         ; preds = %if.end13
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2261
  %frame_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 5, !dbg !2263
  %21 = load i32, i32* %frame_size, align 16, !dbg !2263
  %22 = load i32, i32* %size.addr, align 4, !dbg !2264
  %cmp18 = icmp sgt i32 %21, %22, !dbg !2265
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !2266

if.then19:                                        ; preds = %if.end17
  %23 = load i32, i32* %size.addr, align 4, !dbg !2267
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2268
  %frame_size20 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 5, !dbg !2269
  store i32 %23, i32* %frame_size20, align 16, !dbg !2270
  br label %if.end21, !dbg !2268

if.end21:                                         ; preds = %if.then19, %if.end17
  %25 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2271
  %gb22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %25, i32 0, i32 1, !dbg !2273
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2274
  %frame_size23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 5, !dbg !2275
  %27 = load i32, i32* %frame_size23, align 16, !dbg !2275
  %mul = mul nsw i32 %27, 8, !dbg !2276
  %call24 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb22, i32 %mul), !dbg !2277
  %tobool = icmp ne i32 %call24, 0, !dbg !2277
  br i1 %tobool, label %if.then25, label %if.end30, !dbg !2278

if.then25:                                        ; preds = %if.end21
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2279
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %28, i32 0, i32 0, !dbg !2281
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !2281
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !2279
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)), !dbg !2282
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2283
  %avctx26 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 0, !dbg !2285
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx26, align 32, !dbg !2285
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 135, !dbg !2286
  %33 = load i32, i32* %err_recognition, align 8, !dbg !2286
  %and = and i32 %33, 8, !dbg !2287
  %tobool27 = icmp ne i32 %and, 0, !dbg !2287
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !2288

if.then28:                                        ; preds = %if.then25
  store i32 -1094995529, i32* %retval, align 4, !dbg !2289
  br label %return, !dbg !2289

if.end29:                                         ; preds = %if.then25
  br label %if.end30, !dbg !2290

if.end30:                                         ; preds = %if.end29, %if.end21
  store i32 0, i32* %retval, align 4, !dbg !2291
  br label %return, !dbg !2291

return:                                           ; preds = %if.end30, %if.then28, %if.then16, %if.then12, %if.then8, %if.then4, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !2292
  ret i32 %34, !dbg !2292
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #2 !dbg !2293 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2297, metadata !2194), !dbg !2298
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2299, metadata !2194), !dbg !2300
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !2301, metadata !2194), !dbg !2302
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !2303
  %cmp = icmp sgt i32 %0, 268435455, !dbg !2305
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2306

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !2307
  %cmp1 = icmp slt i32 %1, 0, !dbg !2309
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2310

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !2311
  br label %if.end, !dbg !2312

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2313
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !2314
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !2315
  %mul = mul nsw i32 %4, 8, !dbg !2316
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !2317
  ret i32 %call, !dbg !2318
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @parse_frame_header(%struct.DCACoreDecoder* %s) #0 !dbg !2319 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %h = alloca %struct.DCACoreFrameHeader, align 2
  %err = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !2322, metadata !2194), !dbg !2323
  call void @llvm.dbg.declare(metadata %struct.DCACoreFrameHeader* %h, metadata !2324, metadata !2194), !dbg !2352
  %0 = bitcast %struct.DCACoreFrameHeader* %h to i8*, !dbg !2352
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 26, i32 2, i1 false), !dbg !2352
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2353, metadata !2194), !dbg !2354
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2355
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !2356
  %call = call i32 @ff_dca_parse_core_frame_header(%struct.DCACoreFrameHeader* %h, %struct.GetBitContext* %gb), !dbg !2357
  store i32 %call, i32* %err, align 4, !dbg !2354
  %2 = load i32, i32* %err, align 4, !dbg !2358
  %cmp = icmp slt i32 %2, 0, !dbg !2360
  br i1 %cmp, label %if.then, label %if.end, !dbg !2361

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !2362
  switch i32 %3, label %sw.default [
    i32 -2, label %sw.bb
    i32 -3, label %sw.bb1
    i32 -4, label %sw.bb12
    i32 -5, label %sw.bb15
    i32 -6, label %sw.bb18
    i32 -7, label %sw.bb20
    i32 -8, label %sw.bb22
    i32 -9, label %sw.bb24
  ], !dbg !2364

sw.bb:                                            ; preds = %if.then
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2365
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 0, !dbg !2367
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !2367
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !2365
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i32 0, i32 0)), !dbg !2368
  %normal_frame = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 0, !dbg !2369
  %7 = load i8, i8* %normal_frame, align 2, !dbg !2369
  %conv = zext i8 %7 to i32, !dbg !2370
  %tobool = icmp ne i32 %conv, 0, !dbg !2370
  %cond = select i1 %tobool, i32 -1094995529, i32 -1163346256, !dbg !2370
  store i32 %cond, i32* %retval, align 4, !dbg !2371
  br label %return, !dbg !2371

sw.bb1:                                           ; preds = %if.then
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2372
  %avctx2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 0, !dbg !2373
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 32, !dbg !2373
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !2372
  %npcmblocks = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 3, !dbg !2374
  %11 = load i8, i8* %npcmblocks, align 1, !dbg !2374
  %conv3 = zext i8 %11 to i32, !dbg !2375
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i32 0, i32 0), i32 %conv3), !dbg !2376
  %npcmblocks4 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 3, !dbg !2377
  %12 = load i8, i8* %npcmblocks4, align 1, !dbg !2377
  %conv5 = zext i8 %12 to i32, !dbg !2378
  %cmp6 = icmp slt i32 %conv5, 6, !dbg !2379
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2380

lor.rhs:                                          ; preds = %sw.bb1
  %normal_frame8 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 0, !dbg !2381
  %13 = load i8, i8* %normal_frame8, align 2, !dbg !2381
  %conv9 = zext i8 %13 to i32, !dbg !2383
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !2384
  br label %lor.end, !dbg !2384

lor.end:                                          ; preds = %lor.rhs, %sw.bb1
  %14 = phi i1 [ true, %sw.bb1 ], [ %tobool10, %lor.rhs ]
  %cond11 = select i1 %14, i32 -1094995529, i32 -1163346256, !dbg !2385
  store i32 %cond11, i32* %retval, align 4, !dbg !2387
  br label %return, !dbg !2387

sw.bb12:                                          ; preds = %if.then
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2388
  %avctx13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 0, !dbg !2389
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx13, align 32, !dbg !2389
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !2388
  %frame_size = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 4, !dbg !2390
  %18 = load i16, i16* %frame_size, align 2, !dbg !2390
  %conv14 = zext i16 %18 to i32, !dbg !2391
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i32 0, i32 0), i32 %conv14), !dbg !2392
  store i32 -1094995529, i32* %retval, align 4, !dbg !2393
  br label %return, !dbg !2393

sw.bb15:                                          ; preds = %if.then
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2394
  %avctx16 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 0, !dbg !2395
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx16, align 32, !dbg !2395
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !2394
  %audio_mode = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 5, !dbg !2396
  %22 = load i8, i8* %audio_mode, align 2, !dbg !2396
  %conv17 = zext i8 %22 to i32, !dbg !2397
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i32 0, i32 0), i32 %conv17), !dbg !2398
  store i32 -1163346256, i32* %retval, align 4, !dbg !2399
  br label %return, !dbg !2399

sw.bb18:                                          ; preds = %if.then
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2400
  %avctx19 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 0, !dbg !2401
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx19, align 32, !dbg !2401
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !2400
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0)), !dbg !2402
  store i32 -1094995529, i32* %retval, align 4, !dbg !2403
  br label %return, !dbg !2403

sw.bb20:                                          ; preds = %if.then
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2404
  %avctx21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 0, !dbg !2405
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx21, align 32, !dbg !2405
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !2404
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)), !dbg !2406
  store i32 -1094995529, i32* %retval, align 4, !dbg !2407
  br label %return, !dbg !2407

sw.bb22:                                          ; preds = %if.then
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2408
  %avctx23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 0, !dbg !2409
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx23, align 32, !dbg !2409
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !2408
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0)), !dbg !2410
  store i32 -1094995529, i32* %retval, align 4, !dbg !2411
  br label %return, !dbg !2411

sw.bb24:                                          ; preds = %if.then
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2412
  %avctx25 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 0, !dbg !2413
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx25, align 32, !dbg !2413
  %34 = bitcast %struct.AVCodecContext* %33 to i8*, !dbg !2412
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i32 0, i32 0)), !dbg !2414
  store i32 -1094995529, i32* %retval, align 4, !dbg !2415
  br label %return, !dbg !2415

sw.default:                                       ; preds = %if.then
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2416
  %avctx26 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 0, !dbg !2417
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx26, align 32, !dbg !2417
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2416
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0)), !dbg !2418
  store i32 -1094995529, i32* %retval, align 4, !dbg !2419
  br label %return, !dbg !2419

if.end:                                           ; preds = %entry
  %crc_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 2, !dbg !2420
  %38 = load i8, i8* %crc_present, align 2, !dbg !2420
  %conv27 = zext i8 %38 to i32, !dbg !2421
  %39 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2422
  %crc_present28 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %39, i32 0, i32 3, !dbg !2423
  store i32 %conv27, i32* %crc_present28, align 8, !dbg !2424
  %npcmblocks29 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 3, !dbg !2425
  %40 = load i8, i8* %npcmblocks29, align 1, !dbg !2425
  %conv30 = zext i8 %40 to i32, !dbg !2426
  %41 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2427
  %npcmblocks31 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %41, i32 0, i32 4, !dbg !2428
  store i32 %conv30, i32* %npcmblocks31, align 4, !dbg !2429
  %frame_size32 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 4, !dbg !2430
  %42 = load i16, i16* %frame_size32, align 2, !dbg !2430
  %conv33 = zext i16 %42 to i32, !dbg !2431
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2432
  %frame_size34 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 5, !dbg !2433
  store i32 %conv33, i32* %frame_size34, align 16, !dbg !2434
  %audio_mode35 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 5, !dbg !2435
  %44 = load i8, i8* %audio_mode35, align 2, !dbg !2435
  %conv36 = zext i8 %44 to i32, !dbg !2436
  %45 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2437
  %audio_mode37 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %45, i32 0, i32 6, !dbg !2438
  store i32 %conv36, i32* %audio_mode37, align 4, !dbg !2439
  %sr_code = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 6, !dbg !2440
  %46 = load i8, i8* %sr_code, align 1, !dbg !2440
  %idxprom = zext i8 %46 to i64, !dbg !2441
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_dca_sample_rates, i64 0, i64 %idxprom, !dbg !2441
  %47 = load i32, i32* %arrayidx, align 4, !dbg !2441
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2442
  %sample_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 7, !dbg !2443
  store i32 %47, i32* %sample_rate, align 8, !dbg !2444
  %br_code = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 7, !dbg !2445
  %49 = load i8, i8* %br_code, align 2, !dbg !2445
  %idxprom38 = zext i8 %49 to i64, !dbg !2446
  %arrayidx39 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_bit_rates, i64 0, i64 %idxprom38, !dbg !2446
  %50 = load i32, i32* %arrayidx39, align 4, !dbg !2446
  %51 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2447
  %bit_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %51, i32 0, i32 8, !dbg !2448
  store i32 %50, i32* %bit_rate, align 4, !dbg !2449
  %drc_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 8, !dbg !2450
  %52 = load i8, i8* %drc_present, align 1, !dbg !2450
  %conv40 = zext i8 %52 to i32, !dbg !2451
  %53 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2452
  %drc_present41 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %53, i32 0, i32 9, !dbg !2453
  store i32 %conv40, i32* %drc_present41, align 32, !dbg !2454
  %ts_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 9, !dbg !2455
  %54 = load i8, i8* %ts_present, align 2, !dbg !2455
  %conv42 = zext i8 %54 to i32, !dbg !2456
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2457
  %ts_present43 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 10, !dbg !2458
  store i32 %conv42, i32* %ts_present43, align 4, !dbg !2459
  %aux_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 10, !dbg !2460
  %56 = load i8, i8* %aux_present, align 1, !dbg !2460
  %conv44 = zext i8 %56 to i32, !dbg !2461
  %57 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2462
  %aux_present45 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %57, i32 0, i32 11, !dbg !2463
  store i32 %conv44, i32* %aux_present45, align 8, !dbg !2464
  %ext_audio_type = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 12, !dbg !2465
  %58 = load i8, i8* %ext_audio_type, align 1, !dbg !2465
  %conv46 = zext i8 %58 to i32, !dbg !2466
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2467
  %ext_audio_type47 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 12, !dbg !2468
  store i32 %conv46, i32* %ext_audio_type47, align 4, !dbg !2469
  %ext_audio_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 13, !dbg !2470
  %60 = load i8, i8* %ext_audio_present, align 2, !dbg !2470
  %conv48 = zext i8 %60 to i32, !dbg !2471
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2472
  %ext_audio_present49 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 13, !dbg !2473
  store i32 %conv48, i32* %ext_audio_present49, align 16, !dbg !2474
  %sync_ssf = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 14, !dbg !2475
  %62 = load i8, i8* %sync_ssf, align 1, !dbg !2475
  %conv50 = zext i8 %62 to i32, !dbg !2476
  %63 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2477
  %sync_ssf51 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %63, i32 0, i32 14, !dbg !2478
  store i32 %conv50, i32* %sync_ssf51, align 4, !dbg !2479
  %lfe_present = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 15, !dbg !2480
  %64 = load i8, i8* %lfe_present, align 2, !dbg !2480
  %conv52 = zext i8 %64 to i32, !dbg !2481
  %65 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2482
  %lfe_present53 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %65, i32 0, i32 15, !dbg !2483
  store i32 %conv52, i32* %lfe_present53, align 8, !dbg !2484
  %predictor_history = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 16, !dbg !2485
  %66 = load i8, i8* %predictor_history, align 1, !dbg !2485
  %conv54 = zext i8 %66 to i32, !dbg !2486
  %67 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2487
  %predictor_history55 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %67, i32 0, i32 16, !dbg !2488
  store i32 %conv54, i32* %predictor_history55, align 4, !dbg !2489
  %filter_perfect = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 17, !dbg !2490
  %68 = load i8, i8* %filter_perfect, align 2, !dbg !2490
  %conv56 = zext i8 %68 to i32, !dbg !2491
  %69 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2492
  %filter_perfect57 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %69, i32 0, i32 17, !dbg !2493
  store i32 %conv56, i32* %filter_perfect57, align 32, !dbg !2494
  %pcmr_code = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 20, !dbg !2495
  %70 = load i8, i8* %pcmr_code, align 1, !dbg !2495
  %idxprom58 = zext i8 %70 to i64, !dbg !2496
  %arrayidx59 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_dca_bits_per_sample, i64 0, i64 %idxprom58, !dbg !2496
  %71 = load i8, i8* %arrayidx59, align 1, !dbg !2496
  %conv60 = zext i8 %71 to i32, !dbg !2496
  %72 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2497
  %source_pcm_res = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %72, i32 0, i32 18, !dbg !2498
  store i32 %conv60, i32* %source_pcm_res, align 4, !dbg !2499
  %pcmr_code61 = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 20, !dbg !2500
  %73 = load i8, i8* %pcmr_code61, align 1, !dbg !2500
  %conv62 = zext i8 %73 to i32, !dbg !2501
  %and = and i32 %conv62, 1, !dbg !2502
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2503
  %es_format = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 19, !dbg !2504
  store i32 %and, i32* %es_format, align 8, !dbg !2505
  %sumdiff_front = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 21, !dbg !2506
  %75 = load i8, i8* %sumdiff_front, align 2, !dbg !2506
  %conv63 = zext i8 %75 to i32, !dbg !2507
  %76 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2508
  %sumdiff_front64 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %76, i32 0, i32 20, !dbg !2509
  store i32 %conv63, i32* %sumdiff_front64, align 4, !dbg !2510
  %sumdiff_surround = getelementptr inbounds %struct.DCACoreFrameHeader, %struct.DCACoreFrameHeader* %h, i32 0, i32 22, !dbg !2511
  %77 = load i8, i8* %sumdiff_surround, align 1, !dbg !2511
  %conv65 = zext i8 %77 to i32, !dbg !2512
  %78 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2513
  %sumdiff_surround66 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %78, i32 0, i32 21, !dbg !2514
  store i32 %conv65, i32* %sumdiff_surround66, align 16, !dbg !2515
  store i32 0, i32* %retval, align 4, !dbg !2516
  br label %return, !dbg !2516

return:                                           ; preds = %if.end, %sw.default, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb15, %sw.bb12, %lor.end, %sw.bb
  %79 = load i32, i32* %retval, align 4, !dbg !2517
  ret i32 %79, !dbg !2517
}

; Function Attrs: nounwind uwtable
define internal i32 @alloc_sample_buffer(%struct.DCACoreDecoder* %s) #0 !dbg !2518 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %nchsamples = alloca i32, align 4
  %nframesamples = alloca i32, align 4
  %nlfesamples = alloca i32, align 4
  %size = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !2519, metadata !2194), !dbg !2520
  call void @llvm.dbg.declare(metadata i32* %nchsamples, metadata !2521, metadata !2194), !dbg !2522
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2523
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 4, !dbg !2524
  %1 = load i32, i32* %npcmblocks, align 4, !dbg !2524
  %add = add nsw i32 4, %1, !dbg !2525
  store i32 %add, i32* %nchsamples, align 4, !dbg !2522
  call void @llvm.dbg.declare(metadata i32* %nframesamples, metadata !2526, metadata !2194), !dbg !2527
  %2 = load i32, i32* %nchsamples, align 4, !dbg !2528
  %mul = mul nsw i32 %2, 7, !dbg !2529
  %mul1 = mul nsw i32 %mul, 32, !dbg !2530
  store i32 %mul1, i32* %nframesamples, align 4, !dbg !2527
  call void @llvm.dbg.declare(metadata i32* %nlfesamples, metadata !2531, metadata !2194), !dbg !2532
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2533
  %npcmblocks2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 4, !dbg !2534
  %4 = load i32, i32* %npcmblocks2, align 4, !dbg !2534
  %div = sdiv i32 %4, 2, !dbg !2535
  %add3 = add nsw i32 8, %div, !dbg !2536
  store i32 %add3, i32* %nlfesamples, align 4, !dbg !2532
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2537, metadata !2194), !dbg !2538
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2539
  %subband_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 65, !dbg !2540
  %6 = load i32, i32* %subband_size, align 16, !dbg !2540
  store i32 %6, i32* %size, align 4, !dbg !2538
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2541, metadata !2194), !dbg !2542
  call void @llvm.dbg.declare(metadata i32* %band, metadata !2543, metadata !2194), !dbg !2544
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2545
  %subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 66, !dbg !2546
  %8 = bitcast i32** %subband_buffer to i8*, !dbg !2547
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2548
  %subband_size4 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 65, !dbg !2549
  %10 = load i32, i32* %nframesamples, align 4, !dbg !2550
  %11 = load i32, i32* %nlfesamples, align 4, !dbg !2551
  %add5 = add nsw i32 %10, %11, !dbg !2552
  %conv = sext i32 %add5 to i64, !dbg !2553
  %mul6 = mul i64 %conv, 4, !dbg !2554
  call void @av_fast_mallocz(i8* %8, i32* %subband_size4, i64 %mul6), !dbg !2555
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2556
  %subband_buffer7 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 66, !dbg !2558
  %13 = load i32*, i32** %subband_buffer7, align 8, !dbg !2558
  %tobool = icmp ne i32* %13, null, !dbg !2556
  br i1 %tobool, label %if.end, label %if.then, !dbg !2559

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !2560
  br label %return, !dbg !2560

if.end:                                           ; preds = %entry
  %14 = load i32, i32* %size, align 4, !dbg !2561
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2563
  %subband_size8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 65, !dbg !2564
  %16 = load i32, i32* %subband_size8, align 16, !dbg !2564
  %cmp = icmp ne i32 %14, %16, !dbg !2565
  br i1 %cmp, label %if.then10, label %if.end30, !dbg !2566

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !2567
  br label %for.cond, !dbg !2570

for.cond:                                         ; preds = %for.inc24, %if.then10
  %17 = load i32, i32* %ch, align 4, !dbg !2571
  %cmp11 = icmp slt i32 %17, 7, !dbg !2574
  br i1 %cmp11, label %for.body, label %for.end26, !dbg !2575

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %band, align 4, !dbg !2576
  br label %for.cond13, !dbg !2578

for.cond13:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %band, align 4, !dbg !2579
  %cmp14 = icmp slt i32 %18, 32, !dbg !2582
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !2583

for.body16:                                       ; preds = %for.cond13
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2584
  %subband_buffer17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 66, !dbg !2585
  %20 = load i32*, i32** %subband_buffer17, align 8, !dbg !2585
  %21 = load i32, i32* %ch, align 4, !dbg !2586
  %mul18 = mul nsw i32 %21, 32, !dbg !2587
  %22 = load i32, i32* %band, align 4, !dbg !2588
  %add19 = add nsw i32 %mul18, %22, !dbg !2589
  %23 = load i32, i32* %nchsamples, align 4, !dbg !2590
  %mul20 = mul nsw i32 %add19, %23, !dbg !2591
  %idx.ext = sext i32 %mul20 to i64, !dbg !2592
  %add.ptr = getelementptr inbounds i32, i32* %20, i64 %idx.ext, !dbg !2592
  %add.ptr21 = getelementptr inbounds i32, i32* %add.ptr, i64 4, !dbg !2593
  %24 = load i32, i32* %band, align 4, !dbg !2594
  %idxprom = sext i32 %24 to i64, !dbg !2595
  %25 = load i32, i32* %ch, align 4, !dbg !2596
  %idxprom22 = sext i32 %25 to i64, !dbg !2595
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2595
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 67, !dbg !2597
  %arrayidx = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom22, !dbg !2595
  %arrayidx23 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx, i64 0, i64 %idxprom, !dbg !2595
  store i32* %add.ptr21, i32** %arrayidx23, align 8, !dbg !2598
  br label %for.inc, !dbg !2595

for.inc:                                          ; preds = %for.body16
  %27 = load i32, i32* %band, align 4, !dbg !2599
  %inc = add nsw i32 %27, 1, !dbg !2599
  store i32 %inc, i32* %band, align 4, !dbg !2599
  br label %for.cond13, !dbg !2601, !llvm.loop !2602

for.end:                                          ; preds = %for.cond13
  br label %for.inc24, !dbg !2604

for.inc24:                                        ; preds = %for.end
  %28 = load i32, i32* %ch, align 4, !dbg !2606
  %inc25 = add nsw i32 %28, 1, !dbg !2606
  store i32 %inc25, i32* %ch, align 4, !dbg !2606
  br label %for.cond, !dbg !2608, !llvm.loop !2609

for.end26:                                        ; preds = %for.cond
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2611
  %subband_buffer27 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 66, !dbg !2612
  %30 = load i32*, i32** %subband_buffer27, align 8, !dbg !2612
  %31 = load i32, i32* %nframesamples, align 4, !dbg !2613
  %idx.ext28 = sext i32 %31 to i64, !dbg !2614
  %add.ptr29 = getelementptr inbounds i32, i32* %30, i64 %idx.ext28, !dbg !2614
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2615
  %lfe_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 68, !dbg !2616
  store i32* %add.ptr29, i32** %lfe_samples, align 32, !dbg !2617
  br label %if.end30, !dbg !2618

if.end30:                                         ; preds = %for.end26, %if.end
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2619
  %predictor_history = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 16, !dbg !2621
  %34 = load i32, i32* %predictor_history, align 4, !dbg !2621
  %tobool31 = icmp ne i32 %34, 0, !dbg !2619
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !2622

if.then32:                                        ; preds = %if.end30
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2623
  call void @erase_adpcm_history(%struct.DCACoreDecoder* %35), !dbg !2624
  br label %if.end33, !dbg !2624

if.end33:                                         ; preds = %if.then32, %if.end30
  store i32 0, i32* %retval, align 4, !dbg !2625
  br label %return, !dbg !2625

return:                                           ; preds = %if.end33, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !2626
  ret i32 %36, !dbg !2626
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_frame_data(%struct.DCACoreDecoder* %s, i32 %header, i32 %xch_base) #0 !dbg !2627 {
entry:
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !2630, metadata !2194), !dbg !2631
  %s.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i, metadata !2639, metadata !2194), !dbg !2640
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %header.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %sf = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %band = alloca i32, align 4
  %sub_pos = alloca i32, align 4
  %lfe_pos = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  %samples = alloca i32*, align 8
  %samples53 = alloca i32*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !2641, metadata !2194), !dbg !2642
  store i32 %header, i32* %header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header.addr, metadata !2643, metadata !2194), !dbg !2644
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !2645, metadata !2194), !dbg !2646
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !2647, metadata !2194), !dbg !2648
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2649, metadata !2194), !dbg !2650
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2651, metadata !2194), !dbg !2652
  call void @llvm.dbg.declare(metadata i32* %band, metadata !2653, metadata !2194), !dbg !2654
  call void @llvm.dbg.declare(metadata i32* %sub_pos, metadata !2655, metadata !2194), !dbg !2656
  call void @llvm.dbg.declare(metadata i32* %lfe_pos, metadata !2657, metadata !2194), !dbg !2658
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2659
  %1 = load i32, i32* %header.addr, align 4, !dbg !2661
  %2 = load i32, i32* %xch_base.addr, align 4, !dbg !2662
  %call = call i32 @parse_coding_header(%struct.DCACoreDecoder* %0, i32 %1, i32 %2), !dbg !2663
  store i32 %call, i32* %ret, align 4, !dbg !2664
  %cmp = icmp slt i32 %call, 0, !dbg !2665
  br i1 %cmp, label %if.then, label %if.end, !dbg !2666

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !2667
  store i32 %3, i32* %retval, align 4, !dbg !2668
  br label %return, !dbg !2668

if.end:                                           ; preds = %entry
  store i32 0, i32* %sf, align 4, !dbg !2669
  store i32 0, i32* %sub_pos, align 4, !dbg !2671
  store i32 8, i32* %lfe_pos, align 4, !dbg !2672
  br label %for.cond, !dbg !2673

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %sf, align 4, !dbg !2674
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2677
  %nsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 22, !dbg !2678
  %6 = load i32, i32* %nsubframes, align 4, !dbg !2678
  %cmp1 = icmp slt i32 %4, %6, !dbg !2679
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2680

for.body:                                         ; preds = %for.cond
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2681
  %8 = load i32, i32* %sf, align 4, !dbg !2684
  %9 = load i32, i32* %header.addr, align 4, !dbg !2685
  %10 = load i32, i32* %xch_base.addr, align 4, !dbg !2686
  %call2 = call i32 @parse_subframe_header(%struct.DCACoreDecoder* %7, i32 %8, i32 %9, i32 %10), !dbg !2687
  store i32 %call2, i32* %ret, align 4, !dbg !2688
  %cmp3 = icmp slt i32 %call2, 0, !dbg !2689
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2690

if.then4:                                         ; preds = %for.body
  %11 = load i32, i32* %ret, align 4, !dbg !2691
  store i32 %11, i32* %retval, align 4, !dbg !2692
  br label %return, !dbg !2692

if.end5:                                          ; preds = %for.body
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2693
  %13 = load i32, i32* %sf, align 4, !dbg !2695
  %14 = load i32, i32* %header.addr, align 4, !dbg !2696
  %15 = load i32, i32* %xch_base.addr, align 4, !dbg !2697
  %call6 = call i32 @parse_subframe_audio(%struct.DCACoreDecoder* %12, i32 %13, i32 %14, i32 %15, i32* %sub_pos, i32* %lfe_pos), !dbg !2698
  store i32 %call6, i32* %ret, align 4, !dbg !2699
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2700
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2701

if.then8:                                         ; preds = %if.end5
  %16 = load i32, i32* %ret, align 4, !dbg !2702
  store i32 %16, i32* %retval, align 4, !dbg !2703
  br label %return, !dbg !2703

if.end9:                                          ; preds = %if.end5
  br label %for.inc, !dbg !2704

for.inc:                                          ; preds = %if.end9
  %17 = load i32, i32* %sf, align 4, !dbg !2705
  %inc = add nsw i32 %17, 1, !dbg !2705
  store i32 %inc, i32* %sf, align 4, !dbg !2705
  br label %for.cond, !dbg !2707, !llvm.loop !2708

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %xch_base.addr, align 4, !dbg !2710
  store i32 %18, i32* %ch, align 4, !dbg !2711
  br label %for.cond10, !dbg !2712

for.cond10:                                       ; preds = %for.inc65, %for.end
  %19 = load i32, i32* %ch, align 4, !dbg !2713
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2715
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 23, !dbg !2716
  %21 = load i32, i32* %nchannels, align 8, !dbg !2716
  %cmp11 = icmp slt i32 %19, %21, !dbg !2717
  br i1 %cmp11, label %for.body12, label %for.end67, !dbg !2718

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !2719, metadata !2194), !dbg !2720
  %22 = load i32, i32* %ch, align 4, !dbg !2721
  %idxprom = sext i32 %22 to i64, !dbg !2722
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2722
  %nsubbands13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 25, !dbg !2723
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands13, i64 0, i64 %idxprom, !dbg !2722
  %24 = load i8, i8* %arrayidx, align 1, !dbg !2722
  %conv = sext i8 %24 to i32, !dbg !2722
  store i32 %conv, i32* %nsubbands, align 4, !dbg !2720
  %25 = load i32, i32* %ch, align 4, !dbg !2724
  %idxprom14 = sext i32 %25 to i64, !dbg !2726
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2726
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 27, !dbg !2727
  %arrayidx15 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom14, !dbg !2726
  %27 = load i8, i8* %arrayidx15, align 1, !dbg !2726
  %tobool = icmp ne i8 %27, 0, !dbg !2726
  br i1 %tobool, label %if.then16, label %if.end36, !dbg !2728

if.then16:                                        ; preds = %for.body12
  %28 = load i32, i32* %nsubbands, align 4, !dbg !2729
  %29 = load i32, i32* %ch, align 4, !dbg !2730
  %idxprom17 = sext i32 %29 to i64, !dbg !2731
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2731
  %joint_intensity_index18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 27, !dbg !2732
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index18, i64 0, i64 %idxprom17, !dbg !2731
  %31 = load i8, i8* %arrayidx19, align 1, !dbg !2731
  %conv20 = sext i8 %31 to i32, !dbg !2731
  %sub = sub nsw i32 %conv20, 1, !dbg !2733
  %idxprom21 = sext i32 %sub to i64, !dbg !2734
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2734
  %nsubbands22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 25, !dbg !2735
  %arrayidx23 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands22, i64 0, i64 %idxprom21, !dbg !2734
  %33 = load i8, i8* %arrayidx23, align 1, !dbg !2734
  %conv24 = sext i8 %33 to i32, !dbg !2736
  %cmp25 = icmp sgt i32 %28, %conv24, !dbg !2737
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !2738

cond.true:                                        ; preds = %if.then16
  %34 = load i32, i32* %nsubbands, align 4, !dbg !2739
  br label %cond.end, !dbg !2741

cond.false:                                       ; preds = %if.then16
  %35 = load i32, i32* %ch, align 4, !dbg !2742
  %idxprom27 = sext i32 %35 to i64, !dbg !2744
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2744
  %joint_intensity_index28 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 27, !dbg !2745
  %arrayidx29 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index28, i64 0, i64 %idxprom27, !dbg !2744
  %37 = load i8, i8* %arrayidx29, align 1, !dbg !2744
  %conv30 = sext i8 %37 to i32, !dbg !2744
  %sub31 = sub nsw i32 %conv30, 1, !dbg !2746
  %idxprom32 = sext i32 %sub31 to i64, !dbg !2747
  %38 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2747
  %nsubbands33 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %38, i32 0, i32 25, !dbg !2748
  %arrayidx34 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands33, i64 0, i64 %idxprom32, !dbg !2747
  %39 = load i8, i8* %arrayidx34, align 1, !dbg !2747
  %conv35 = sext i8 %39 to i32, !dbg !2749
  br label %cond.end, !dbg !2750

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %conv35, %cond.false ], !dbg !2751
  store i32 %cond, i32* %nsubbands, align 4, !dbg !2753
  br label %if.end36, !dbg !2754

if.end36:                                         ; preds = %cond.end, %for.body12
  store i32 0, i32* %band, align 4, !dbg !2755
  br label %for.cond37, !dbg !2756

for.cond37:                                       ; preds = %for.inc46, %if.end36
  %40 = load i32, i32* %band, align 4, !dbg !2757
  %41 = load i32, i32* %nsubbands, align 4, !dbg !2759
  %cmp38 = icmp slt i32 %40, %41, !dbg !2760
  br i1 %cmp38, label %for.body40, label %for.end48, !dbg !2761

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32** %samples, metadata !2762, metadata !2194), !dbg !2763
  %42 = load i32, i32* %band, align 4, !dbg !2764
  %idxprom41 = sext i32 %42 to i64, !dbg !2765
  %43 = load i32, i32* %ch, align 4, !dbg !2766
  %idxprom42 = sext i32 %43 to i64, !dbg !2765
  %44 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2765
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %44, i32 0, i32 67, !dbg !2767
  %arrayidx43 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom42, !dbg !2765
  %arrayidx44 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx43, i64 0, i64 %idxprom41, !dbg !2765
  %45 = load i32*, i32** %arrayidx44, align 8, !dbg !2765
  %add.ptr = getelementptr inbounds i32, i32* %45, i64 -4, !dbg !2768
  store i32* %add.ptr, i32** %samples, align 8, !dbg !2763
  %46 = load i32*, i32** %samples, align 8, !dbg !2769
  %47 = bitcast i32* %46 to i8*, !dbg !2769
  %48 = load i32*, i32** %samples, align 8, !dbg !2770
  %49 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2771
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %49, i32 0, i32 4, !dbg !2772
  %50 = load i32, i32* %npcmblocks, align 4, !dbg !2772
  %idx.ext = sext i32 %50 to i64, !dbg !2773
  %add.ptr45 = getelementptr inbounds i32, i32* %48, i64 %idx.ext, !dbg !2773
  %51 = bitcast i32* %add.ptr45 to i8*, !dbg !2770
  store i8* %47, i8** %d.addr.i, align 8, !dbg !2774
  store i8* %51, i8** %s.addr.i, align 8, !dbg !2774
  %52 = load i8*, i8** %d.addr.i, align 8, !dbg !2775
  %53 = bitcast i8* %52 to %struct.v*, !dbg !2776
  %54 = load i8*, i8** %s.addr.i, align 8, !dbg !2777
  %55 = bitcast i8* %54 to %struct.v*, !dbg !2778
  call void asm "movaps   $1, %xmm0  \0A\09movaps   %xmm0, $0  \0A\09", "=*m,*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v* %53, %struct.v* %55) #7, !dbg !2779, !srcloc !2780
  br label %for.inc46, !dbg !2781

for.inc46:                                        ; preds = %for.body40
  %56 = load i32, i32* %band, align 4, !dbg !2782
  %inc47 = add nsw i32 %56, 1, !dbg !2782
  store i32 %inc47, i32* %band, align 4, !dbg !2782
  br label %for.cond37, !dbg !2784, !llvm.loop !2785

for.end48:                                        ; preds = %for.cond37
  br label %for.cond49, !dbg !2787

for.cond49:                                       ; preds = %for.inc62, %for.end48
  %57 = load i32, i32* %band, align 4, !dbg !2788
  %cmp50 = icmp slt i32 %57, 32, !dbg !2792
  br i1 %cmp50, label %for.body52, label %for.end64, !dbg !2793

for.body52:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata i32** %samples53, metadata !2794, metadata !2194), !dbg !2796
  %58 = load i32, i32* %band, align 4, !dbg !2797
  %idxprom54 = sext i32 %58 to i64, !dbg !2798
  %59 = load i32, i32* %ch, align 4, !dbg !2799
  %idxprom55 = sext i32 %59 to i64, !dbg !2798
  %60 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2798
  %subband_samples56 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %60, i32 0, i32 67, !dbg !2800
  %arrayidx57 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples56, i64 0, i64 %idxprom55, !dbg !2798
  %arrayidx58 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx57, i64 0, i64 %idxprom54, !dbg !2798
  %61 = load i32*, i32** %arrayidx58, align 8, !dbg !2798
  %add.ptr59 = getelementptr inbounds i32, i32* %61, i64 -4, !dbg !2801
  store i32* %add.ptr59, i32** %samples53, align 8, !dbg !2796
  %62 = load i32*, i32** %samples53, align 8, !dbg !2802
  %63 = bitcast i32* %62 to i8*, !dbg !2803
  %64 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !2804
  %npcmblocks60 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %64, i32 0, i32 4, !dbg !2805
  %65 = load i32, i32* %npcmblocks60, align 4, !dbg !2805
  %add = add nsw i32 4, %65, !dbg !2806
  %conv61 = sext i32 %add to i64, !dbg !2807
  %mul = mul i64 %conv61, 4, !dbg !2808
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 %mul, i32 4, i1 false), !dbg !2803
  br label %for.inc62, !dbg !2809

for.inc62:                                        ; preds = %for.body52
  %66 = load i32, i32* %band, align 4, !dbg !2810
  %inc63 = add nsw i32 %66, 1, !dbg !2810
  store i32 %inc63, i32* %band, align 4, !dbg !2810
  br label %for.cond49, !dbg !2812, !llvm.loop !2813

for.end64:                                        ; preds = %for.cond49
  br label %for.inc65, !dbg !2814

for.inc65:                                        ; preds = %for.end64
  %67 = load i32, i32* %ch, align 4, !dbg !2815
  %inc66 = add nsw i32 %67, 1, !dbg !2815
  store i32 %inc66, i32* %ch, align 4, !dbg !2815
  br label %for.cond10, !dbg !2817, !llvm.loop !2818

for.end67:                                        ; preds = %for.cond10
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !2820, !srcloc !2826
  store i32 0, i32* %retval, align 4, !dbg !2827
  br label %return, !dbg !2827

return:                                           ; preds = %for.end67, %if.then8, %if.then4, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !2828
  ret i32 %68, !dbg !2828
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_optional_info(%struct.DCACoreDecoder* %s) #0 !dbg !2829 {
entry:
  %x.addr.i172 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i172, metadata !2830, metadata !2194), !dbg !2835
  %x.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i157, metadata !2830, metadata !2194), !dbg !2843
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2830, metadata !2194), !dbg !2848
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %dca = alloca %struct.DCAContext*, align 8
  %ret = alloca i32, align 4
  %sync_pos = alloca i32, align 4
  %last_pos = alloca i32, align 4
  %size = alloca i32, align 4
  %dist = alloca i32, align 4
  %w1 = alloca i32, align 4
  %w2 = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !2853, metadata !2194), !dbg !2854
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !2855, metadata !2194), !dbg !3123
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3124
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 0, !dbg !3125
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3125
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 6, !dbg !3126
  %2 = load i8*, i8** %priv_data, align 8, !dbg !3126
  %3 = bitcast i8* %2 to %struct.DCAContext*, !dbg !3124
  store %struct.DCAContext* %3, %struct.DCAContext** %dca, align 8, !dbg !3123
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3127, metadata !2194), !dbg !3128
  store i32 -1, i32* %ret, align 4, !dbg !3128
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3129
  %ts_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 10, !dbg !3131
  %5 = load i32, i32* %ts_present, align 4, !dbg !3131
  %tobool = icmp ne i32 %5, 0, !dbg !3129
  br i1 %tobool, label %if.then, label %if.end, !dbg !3132

if.then:                                          ; preds = %entry
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3133
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 1, !dbg !3134
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3135
  br label %if.end, !dbg !3135

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3136
  %aux_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 11, !dbg !3138
  %8 = load i32, i32* %aux_present, align 8, !dbg !3138
  %tobool1 = icmp ne i32 %8, 0, !dbg !3136
  br i1 %tobool1, label %land.lhs.true, label %if.end6, !dbg !3139

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3140
  %call = call i32 @parse_aux_data(%struct.DCACoreDecoder* %9), !dbg !3142
  store i32 %call, i32* %ret, align 4, !dbg !3143
  %cmp = icmp slt i32 %call, 0, !dbg !3144
  br i1 %cmp, label %land.lhs.true2, label %if.end6, !dbg !3145

land.lhs.true2:                                   ; preds = %land.lhs.true
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3146
  %avctx3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 0, !dbg !3147
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 32, !dbg !3147
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 135, !dbg !3148
  %12 = load i32, i32* %err_recognition, align 8, !dbg !3148
  %and = and i32 %12, 8, !dbg !3149
  %tobool4 = icmp ne i32 %and, 0, !dbg !3149
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3150

if.then5:                                         ; preds = %land.lhs.true2
  %13 = load i32, i32* %ret, align 4, !dbg !3152
  store i32 %13, i32* %retval, align 4, !dbg !3153
  br label %return, !dbg !3153

if.end6:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !3154
  %cmp7 = icmp slt i32 %14, 0, !dbg !3156
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3157

if.then8:                                         ; preds = %if.end6
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3158
  %prim_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 41, !dbg !3159
  store i32 0, i32* %prim_dmix_embedded, align 32, !dbg !3160
  br label %if.end9, !dbg !3158

if.end9:                                          ; preds = %if.then8, %if.end6
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3161
  %ext_audio_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 13, !dbg !3162
  %17 = load i32, i32* %ext_audio_present, align 16, !dbg !3162
  %tobool10 = icmp ne i32 %17, 0, !dbg !3161
  br i1 %tobool10, label %land.lhs.true11, label %if.end156, !dbg !3163

land.lhs.true11:                                  ; preds = %if.end9
  %18 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3164
  %core_only = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %18, i32 0, i32 14, !dbg !3166
  %19 = load i32, i32* %core_only, align 4, !dbg !3166
  %tobool12 = icmp ne i32 %19, 0, !dbg !3164
  br i1 %tobool12, label %if.end156, label %if.then13, !dbg !3167

if.then13:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata i32* %sync_pos, metadata !3168, metadata !2194), !dbg !3169
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3170
  %frame_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 5, !dbg !3171
  %21 = load i32, i32* %frame_size, align 16, !dbg !3171
  %div = sdiv i32 %21, 4, !dbg !3172
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3173
  %gb14 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 1, !dbg !3174
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb14, i32 0, i32 3, !dbg !3175
  %23 = load i32, i32* %size_in_bits, align 4, !dbg !3175
  %div15 = sdiv i32 %23, 32, !dbg !3176
  %cmp16 = icmp sgt i32 %div, %div15, !dbg !3177
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !3178

cond.true:                                        ; preds = %if.then13
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3179
  %gb17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 1, !dbg !3181
  %size_in_bits18 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb17, i32 0, i32 3, !dbg !3182
  %25 = load i32, i32* %size_in_bits18, align 4, !dbg !3182
  %div19 = sdiv i32 %25, 32, !dbg !3183
  br label %cond.end, !dbg !3184

cond.false:                                       ; preds = %if.then13
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3185
  %frame_size20 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 5, !dbg !3187
  %27 = load i32, i32* %frame_size20, align 16, !dbg !3187
  %div21 = sdiv i32 %27, 4, !dbg !3188
  br label %cond.end, !dbg !3189

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div19, %cond.true ], [ %div21, %cond.false ], !dbg !3190
  %sub = sub nsw i32 %cond, 1, !dbg !3192
  store i32 %sub, i32* %sync_pos, align 4, !dbg !3193
  call void @llvm.dbg.declare(metadata i32* %last_pos, metadata !3194, metadata !2194), !dbg !3195
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3196
  %gb22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %28, i32 0, i32 1, !dbg !3197
  %call23 = call i32 @get_bits_count(%struct.GetBitContext* %gb22), !dbg !3198
  %div24 = sdiv i32 %call23, 32, !dbg !3199
  store i32 %div24, i32* %last_pos, align 4, !dbg !3195
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3200, metadata !2194), !dbg !3201
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !3202, metadata !2194), !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %w1, metadata !3204, metadata !2194), !dbg !3205
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !3206, metadata !2194), !dbg !3207
  store i32 0, i32* %w2, align 4, !dbg !3207
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3208
  %ext_audio_type = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 12, !dbg !3209
  %30 = load i32, i32* %ext_audio_type, align 4, !dbg !3209
  switch i32 %30, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb61
    i32 6, label %sw.bb101
  ], !dbg !3210

sw.bb:                                            ; preds = %cond.end
  %31 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3211
  %request_channel_layout = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %31, i32 0, i32 13, !dbg !3213
  %32 = load i32, i32* %request_channel_layout, align 8, !dbg !3213
  %tobool25 = icmp ne i32 %32, 0, !dbg !3211
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !3214

if.then26:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !3215

if.end27:                                         ; preds = %sw.bb
  br label %for.cond, !dbg !3216

for.cond:                                         ; preds = %for.inc, %if.end27
  %33 = load i32, i32* %sync_pos, align 4, !dbg !3217
  %34 = load i32, i32* %last_pos, align 4, !dbg !3219
  %cmp28 = icmp sge i32 %33, %34, !dbg !3220
  br i1 %cmp28, label %for.body, label %for.end, !dbg !3221

for.body:                                         ; preds = %for.cond
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3222
  %gb29 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 1, !dbg !3223
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb29, i32 0, i32 0, !dbg !3224
  %36 = load i8*, i8** %buffer, align 8, !dbg !3224
  %37 = load i32, i32* %sync_pos, align 4, !dbg !3225
  %mul = mul nsw i32 %37, 4, !dbg !3226
  %idx.ext = sext i32 %mul to i64, !dbg !3227
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 %idx.ext, !dbg !3227
  %38 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3228
  %l = bitcast %union.unaligned_32* %38 to i32*, !dbg !3228
  %39 = load i32, i32* %l, align 1, !dbg !3228
  store i32 %39, i32* %x.addr.i, align 4, !dbg !3229
  %40 = load i32, i32* %x.addr.i, align 4, !dbg !3230
  %shl.i = shl i32 %40, 8, !dbg !3231
  %and.i = and i32 %shl.i, 65280, !dbg !3232
  %41 = load i32, i32* %x.addr.i, align 4, !dbg !3233
  %shr.i = lshr i32 %41, 8, !dbg !3234
  %and1.i = and i32 %shr.i, 255, !dbg !3235
  %or.i = or i32 %and.i, %and1.i, !dbg !3236
  %shl2.i = shl i32 %or.i, 16, !dbg !3237
  %42 = load i32, i32* %x.addr.i, align 4, !dbg !3238
  %shr3.i = lshr i32 %42, 16, !dbg !3239
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3240
  %and5.i = and i32 %shl4.i, 65280, !dbg !3241
  %43 = load i32, i32* %x.addr.i, align 4, !dbg !3242
  %shr6.i = lshr i32 %43, 16, !dbg !3243
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3244
  %and8.i = and i32 %shr7.i, 255, !dbg !3245
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3246
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3247
  store i32 %or10.i, i32* %w1, align 4, !dbg !3248
  %44 = load i32, i32* %w1, align 4, !dbg !3249
  %cmp31 = icmp eq i32 %44, 1515870810, !dbg !3251
  br i1 %cmp31, label %if.then32, label %if.end49, !dbg !3252

if.then32:                                        ; preds = %for.body
  %45 = load i32, i32* %w2, align 4, !dbg !3253
  %shr = lshr i32 %45, 22, !dbg !3255
  %add = add i32 %shr, 1, !dbg !3256
  store i32 %add, i32* %size, align 4, !dbg !3257
  %46 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3258
  %frame_size33 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %46, i32 0, i32 5, !dbg !3259
  %47 = load i32, i32* %frame_size33, align 16, !dbg !3259
  %48 = load i32, i32* %sync_pos, align 4, !dbg !3260
  %mul34 = mul nsw i32 %48, 4, !dbg !3261
  %sub35 = sub nsw i32 %47, %mul34, !dbg !3262
  store i32 %sub35, i32* %dist, align 4, !dbg !3263
  %49 = load i32, i32* %size, align 4, !dbg !3264
  %cmp36 = icmp sge i32 %49, 96, !dbg !3266
  br i1 %cmp36, label %land.lhs.true37, label %if.end48, !dbg !3267

land.lhs.true37:                                  ; preds = %if.then32
  %50 = load i32, i32* %size, align 4, !dbg !3268
  %51 = load i32, i32* %dist, align 4, !dbg !3270
  %cmp38 = icmp eq i32 %50, %51, !dbg !3271
  br i1 %cmp38, label %land.lhs.true41, label %lor.lhs.false, !dbg !3272

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %52 = load i32, i32* %size, align 4, !dbg !3273
  %sub39 = sub nsw i32 %52, 1, !dbg !3275
  %53 = load i32, i32* %dist, align 4, !dbg !3276
  %cmp40 = icmp eq i32 %sub39, %53, !dbg !3277
  br i1 %cmp40, label %land.lhs.true41, label %if.end48, !dbg !3278

land.lhs.true41:                                  ; preds = %lor.lhs.false, %land.lhs.true37
  %54 = load i32, i32* %w2, align 4, !dbg !3279
  %shr42 = lshr i32 %54, 15, !dbg !3280
  %and43 = and i32 %shr42, 127, !dbg !3281
  %cmp44 = icmp eq i32 %and43, 8, !dbg !3282
  br i1 %cmp44, label %if.then45, label %if.end48, !dbg !3283

if.then45:                                        ; preds = %land.lhs.true41
  %55 = load i32, i32* %sync_pos, align 4, !dbg !3285
  %mul46 = mul nsw i32 %55, 32, !dbg !3287
  %add47 = add nsw i32 %mul46, 49, !dbg !3288
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3289
  %xch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 45, !dbg !3290
  store i32 %add47, i32* %xch_pos, align 4, !dbg !3291
  br label %for.end, !dbg !3292

if.end48:                                         ; preds = %land.lhs.true41, %lor.lhs.false, %if.then32
  br label %if.end49, !dbg !3293

if.end49:                                         ; preds = %if.end48, %for.body
  br label %for.inc, !dbg !3294

for.inc:                                          ; preds = %if.end49
  %57 = load i32, i32* %sync_pos, align 4, !dbg !3295
  %dec = add nsw i32 %57, -1, !dbg !3295
  store i32 %dec, i32* %sync_pos, align 4, !dbg !3295
  %58 = load i32, i32* %w1, align 4, !dbg !3297
  store i32 %58, i32* %w2, align 4, !dbg !3298
  br label %for.cond, !dbg !3299, !llvm.loop !3300

for.end:                                          ; preds = %if.then45, %for.cond
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3301
  %xch_pos50 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 45, !dbg !3303
  %60 = load i32, i32* %xch_pos50, align 4, !dbg !3303
  %tobool51 = icmp ne i32 %60, 0, !dbg !3301
  br i1 %tobool51, label %if.end60, label %if.then52, !dbg !3304

if.then52:                                        ; preds = %for.end
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3305
  %avctx53 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 0, !dbg !3307
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx53, align 32, !dbg !3307
  %63 = bitcast %struct.AVCodecContext* %62 to i8*, !dbg !3305
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i32 0, i32 0)), !dbg !3308
  %64 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3309
  %avctx54 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %64, i32 0, i32 0, !dbg !3311
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 32, !dbg !3311
  %err_recognition55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 135, !dbg !3312
  %66 = load i32, i32* %err_recognition55, align 8, !dbg !3312
  %and56 = and i32 %66, 8, !dbg !3313
  %tobool57 = icmp ne i32 %and56, 0, !dbg !3313
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !3314

if.then58:                                        ; preds = %if.then52
  store i32 -1094995529, i32* %retval, align 4, !dbg !3315
  br label %return, !dbg !3315

if.end59:                                         ; preds = %if.then52
  br label %if.end60, !dbg !3316

if.end60:                                         ; preds = %if.end59, %for.end
  br label %sw.epilog, !dbg !3317

sw.bb61:                                          ; preds = %cond.end
  br label %for.cond62, !dbg !3318

for.cond62:                                       ; preds = %for.inc87, %sw.bb61
  %67 = load i32, i32* %sync_pos, align 4, !dbg !3319
  %68 = load i32, i32* %last_pos, align 4, !dbg !3321
  %cmp63 = icmp sge i32 %67, %68, !dbg !3322
  br i1 %cmp63, label %for.body64, label %for.end89, !dbg !3323

for.body64:                                       ; preds = %for.cond62
  %69 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3324
  %gb65 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %69, i32 0, i32 1, !dbg !3325
  %buffer66 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb65, i32 0, i32 0, !dbg !3326
  %70 = load i8*, i8** %buffer66, align 8, !dbg !3326
  %71 = load i32, i32* %sync_pos, align 4, !dbg !3327
  %mul67 = mul nsw i32 %71, 4, !dbg !3328
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !3329
  %add.ptr69 = getelementptr inbounds i8, i8* %70, i64 %idx.ext68, !dbg !3329
  %72 = bitcast i8* %add.ptr69 to %union.unaligned_32*, !dbg !3330
  %l70 = bitcast %union.unaligned_32* %72 to i32*, !dbg !3330
  %73 = load i32, i32* %l70, align 1, !dbg !3330
  store i32 %73, i32* %x.addr.i172, align 4, !dbg !3331
  %74 = load i32, i32* %x.addr.i172, align 4, !dbg !3332
  %shl.i173 = shl i32 %74, 8, !dbg !3333
  %and.i174 = and i32 %shl.i173, 65280, !dbg !3334
  %75 = load i32, i32* %x.addr.i172, align 4, !dbg !3335
  %shr.i175 = lshr i32 %75, 8, !dbg !3336
  %and1.i176 = and i32 %shr.i175, 255, !dbg !3337
  %or.i177 = or i32 %and.i174, %and1.i176, !dbg !3338
  %shl2.i178 = shl i32 %or.i177, 16, !dbg !3339
  %76 = load i32, i32* %x.addr.i172, align 4, !dbg !3340
  %shr3.i179 = lshr i32 %76, 16, !dbg !3341
  %shl4.i180 = shl i32 %shr3.i179, 8, !dbg !3342
  %and5.i181 = and i32 %shl4.i180, 65280, !dbg !3343
  %77 = load i32, i32* %x.addr.i172, align 4, !dbg !3344
  %shr6.i182 = lshr i32 %77, 16, !dbg !3345
  %shr7.i183 = lshr i32 %shr6.i182, 8, !dbg !3346
  %and8.i184 = and i32 %shr7.i183, 255, !dbg !3347
  %or9.i185 = or i32 %and5.i181, %and8.i184, !dbg !3348
  %or10.i186 = or i32 %shl2.i178, %or9.i185, !dbg !3349
  store i32 %or10.i186, i32* %w1, align 4, !dbg !3350
  %78 = load i32, i32* %w1, align 4, !dbg !3351
  %cmp72 = icmp eq i32 %78, 496366178, !dbg !3353
  br i1 %cmp72, label %if.then73, label %if.end86, !dbg !3354

if.then73:                                        ; preds = %for.body64
  %79 = load i32, i32* %w2, align 4, !dbg !3355
  %shr74 = lshr i32 %79, 20, !dbg !3357
  %add75 = add i32 %shr74, 1, !dbg !3358
  store i32 %add75, i32* %size, align 4, !dbg !3359
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3360
  %frame_size76 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 5, !dbg !3361
  %81 = load i32, i32* %frame_size76, align 16, !dbg !3361
  %82 = load i32, i32* %sync_pos, align 4, !dbg !3362
  %mul77 = mul nsw i32 %82, 4, !dbg !3363
  %sub78 = sub nsw i32 %81, %mul77, !dbg !3364
  store i32 %sub78, i32* %dist, align 4, !dbg !3365
  %83 = load i32, i32* %size, align 4, !dbg !3366
  %cmp79 = icmp sge i32 %83, 96, !dbg !3368
  br i1 %cmp79, label %land.lhs.true80, label %if.end85, !dbg !3369

land.lhs.true80:                                  ; preds = %if.then73
  %84 = load i32, i32* %size, align 4, !dbg !3370
  %85 = load i32, i32* %dist, align 4, !dbg !3372
  %cmp81 = icmp eq i32 %84, %85, !dbg !3373
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !3374

if.then82:                                        ; preds = %land.lhs.true80
  %86 = load i32, i32* %sync_pos, align 4, !dbg !3375
  %mul83 = mul nsw i32 %86, 32, !dbg !3377
  %add84 = add nsw i32 %mul83, 44, !dbg !3378
  %87 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3379
  %x96_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %87, i32 0, i32 61, !dbg !3380
  store i32 %add84, i32* %x96_pos, align 4, !dbg !3381
  br label %for.end89, !dbg !3382

if.end85:                                         ; preds = %land.lhs.true80, %if.then73
  br label %if.end86, !dbg !3383

if.end86:                                         ; preds = %if.end85, %for.body64
  br label %for.inc87, !dbg !3384

for.inc87:                                        ; preds = %if.end86
  %88 = load i32, i32* %sync_pos, align 4, !dbg !3385
  %dec88 = add nsw i32 %88, -1, !dbg !3385
  store i32 %dec88, i32* %sync_pos, align 4, !dbg !3385
  %89 = load i32, i32* %w1, align 4, !dbg !3387
  store i32 %89, i32* %w2, align 4, !dbg !3388
  br label %for.cond62, !dbg !3389, !llvm.loop !3390

for.end89:                                        ; preds = %if.then82, %for.cond62
  %90 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3391
  %x96_pos90 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %90, i32 0, i32 61, !dbg !3393
  %91 = load i32, i32* %x96_pos90, align 4, !dbg !3393
  %tobool91 = icmp ne i32 %91, 0, !dbg !3391
  br i1 %tobool91, label %if.end100, label %if.then92, !dbg !3394

if.then92:                                        ; preds = %for.end89
  %92 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3395
  %avctx93 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %92, i32 0, i32 0, !dbg !3397
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx93, align 32, !dbg !3397
  %94 = bitcast %struct.AVCodecContext* %93 to i8*, !dbg !3395
  call void (i8*, i32, i8*, ...) @av_log(i8* %94, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i32 0, i32 0)), !dbg !3398
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3399
  %avctx94 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 0, !dbg !3401
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx94, align 32, !dbg !3401
  %err_recognition95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 135, !dbg !3402
  %97 = load i32, i32* %err_recognition95, align 8, !dbg !3402
  %and96 = and i32 %97, 8, !dbg !3403
  %tobool97 = icmp ne i32 %and96, 0, !dbg !3403
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !3404

if.then98:                                        ; preds = %if.then92
  store i32 -1094995529, i32* %retval, align 4, !dbg !3405
  br label %return, !dbg !3405

if.end99:                                         ; preds = %if.then92
  br label %if.end100, !dbg !3406

if.end100:                                        ; preds = %if.end99, %for.end89
  br label %sw.epilog, !dbg !3407

sw.bb101:                                         ; preds = %cond.end
  %98 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3408
  %request_channel_layout102 = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %98, i32 0, i32 13, !dbg !3410
  %99 = load i32, i32* %request_channel_layout102, align 8, !dbg !3410
  %tobool103 = icmp ne i32 %99, 0, !dbg !3408
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !3411

if.then104:                                       ; preds = %sw.bb101
  br label %sw.epilog, !dbg !3412

if.end105:                                        ; preds = %sw.bb101
  br label %for.cond106, !dbg !3413

for.cond106:                                      ; preds = %for.inc142, %if.end105
  %100 = load i32, i32* %sync_pos, align 4, !dbg !3414
  %101 = load i32, i32* %last_pos, align 4, !dbg !3416
  %cmp107 = icmp sge i32 %100, %101, !dbg !3417
  br i1 %cmp107, label %for.body108, label %for.end144, !dbg !3418

for.body108:                                      ; preds = %for.cond106
  %102 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3419
  %gb109 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %102, i32 0, i32 1, !dbg !3420
  %buffer110 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb109, i32 0, i32 0, !dbg !3421
  %103 = load i8*, i8** %buffer110, align 8, !dbg !3421
  %104 = load i32, i32* %sync_pos, align 4, !dbg !3422
  %mul111 = mul nsw i32 %104, 4, !dbg !3423
  %idx.ext112 = sext i32 %mul111 to i64, !dbg !3424
  %add.ptr113 = getelementptr inbounds i8, i8* %103, i64 %idx.ext112, !dbg !3424
  %105 = bitcast i8* %add.ptr113 to %union.unaligned_32*, !dbg !3425
  %l114 = bitcast %union.unaligned_32* %105 to i32*, !dbg !3425
  %106 = load i32, i32* %l114, align 1, !dbg !3425
  store i32 %106, i32* %x.addr.i157, align 4, !dbg !3426
  %107 = load i32, i32* %x.addr.i157, align 4, !dbg !3427
  %shl.i158 = shl i32 %107, 8, !dbg !3428
  %and.i159 = and i32 %shl.i158, 65280, !dbg !3429
  %108 = load i32, i32* %x.addr.i157, align 4, !dbg !3430
  %shr.i160 = lshr i32 %108, 8, !dbg !3431
  %and1.i161 = and i32 %shr.i160, 255, !dbg !3432
  %or.i162 = or i32 %and.i159, %and1.i161, !dbg !3433
  %shl2.i163 = shl i32 %or.i162, 16, !dbg !3434
  %109 = load i32, i32* %x.addr.i157, align 4, !dbg !3435
  %shr3.i164 = lshr i32 %109, 16, !dbg !3436
  %shl4.i165 = shl i32 %shr3.i164, 8, !dbg !3437
  %and5.i166 = and i32 %shl4.i165, 65280, !dbg !3438
  %110 = load i32, i32* %x.addr.i157, align 4, !dbg !3439
  %shr6.i167 = lshr i32 %110, 16, !dbg !3440
  %shr7.i168 = lshr i32 %shr6.i167, 8, !dbg !3441
  %and8.i169 = and i32 %shr7.i168, 255, !dbg !3442
  %or9.i170 = or i32 %and5.i166, %and8.i169, !dbg !3443
  %or10.i171 = or i32 %shl2.i163, %or9.i170, !dbg !3444
  store i32 %or10.i171, i32* %w1, align 4, !dbg !3445
  %111 = load i32, i32* %w1, align 4, !dbg !3446
  %cmp116 = icmp eq i32 %111, 1191201283, !dbg !3448
  br i1 %cmp116, label %if.then117, label %if.end141, !dbg !3449

if.then117:                                       ; preds = %for.body108
  %112 = load i32, i32* %w2, align 4, !dbg !3450
  %shr118 = lshr i32 %112, 26, !dbg !3452
  %add119 = add i32 %shr118, 1, !dbg !3453
  store i32 %add119, i32* %size, align 4, !dbg !3454
  %113 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3455
  %gb120 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %113, i32 0, i32 1, !dbg !3456
  %size_in_bits121 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb120, i32 0, i32 3, !dbg !3457
  %114 = load i32, i32* %size_in_bits121, align 4, !dbg !3457
  %div122 = sdiv i32 %114, 8, !dbg !3458
  %115 = load i32, i32* %sync_pos, align 4, !dbg !3459
  %mul123 = mul nsw i32 %115, 4, !dbg !3460
  %sub124 = sub nsw i32 %div122, %mul123, !dbg !3461
  store i32 %sub124, i32* %dist, align 4, !dbg !3462
  %116 = load i32, i32* %size, align 4, !dbg !3463
  %cmp125 = icmp sge i32 %116, 11, !dbg !3465
  br i1 %cmp125, label %land.lhs.true126, label %if.end140, !dbg !3466

land.lhs.true126:                                 ; preds = %if.then117
  %117 = load i32, i32* %size, align 4, !dbg !3467
  %118 = load i32, i32* %dist, align 4, !dbg !3469
  %cmp127 = icmp sle i32 %117, %118, !dbg !3470
  br i1 %cmp127, label %land.lhs.true128, label %if.end140, !dbg !3471

land.lhs.true128:                                 ; preds = %land.lhs.true126
  %119 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3472
  %crctab = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %119, i32 0, i32 9, !dbg !3473
  %120 = load i32*, i32** %crctab, align 32, !dbg !3473
  %121 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3474
  %gb129 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %121, i32 0, i32 1, !dbg !3475
  %buffer130 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb129, i32 0, i32 0, !dbg !3476
  %122 = load i8*, i8** %buffer130, align 8, !dbg !3476
  %123 = load i32, i32* %sync_pos, align 4, !dbg !3477
  %add131 = add nsw i32 %123, 1, !dbg !3478
  %mul132 = mul nsw i32 %add131, 4, !dbg !3479
  %idx.ext133 = sext i32 %mul132 to i64, !dbg !3480
  %add.ptr134 = getelementptr inbounds i8, i8* %122, i64 %idx.ext133, !dbg !3480
  %124 = load i32, i32* %size, align 4, !dbg !3481
  %sub135 = sub nsw i32 %124, 4, !dbg !3482
  %conv = sext i32 %sub135 to i64, !dbg !3481
  %call136 = call i32 @av_crc(i32* %120, i32 65535, i8* %add.ptr134, i64 %conv) #8, !dbg !3483
  %tobool137 = icmp ne i32 %call136, 0, !dbg !3483
  br i1 %tobool137, label %if.end140, label %if.then138, !dbg !3484

if.then138:                                       ; preds = %land.lhs.true128
  %125 = load i32, i32* %sync_pos, align 4, !dbg !3486
  %mul139 = mul nsw i32 %125, 32, !dbg !3488
  %126 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3489
  %xxch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %126, i32 0, i32 54, !dbg !3490
  store i32 %mul139, i32* %xxch_pos, align 32, !dbg !3491
  br label %for.end144, !dbg !3492

if.end140:                                        ; preds = %land.lhs.true128, %land.lhs.true126, %if.then117
  br label %if.end141, !dbg !3493

if.end141:                                        ; preds = %if.end140, %for.body108
  br label %for.inc142, !dbg !3494

for.inc142:                                       ; preds = %if.end141
  %127 = load i32, i32* %sync_pos, align 4, !dbg !3495
  %dec143 = add nsw i32 %127, -1, !dbg !3495
  store i32 %dec143, i32* %sync_pos, align 4, !dbg !3495
  %128 = load i32, i32* %w1, align 4, !dbg !3497
  store i32 %128, i32* %w2, align 4, !dbg !3498
  br label %for.cond106, !dbg !3499, !llvm.loop !3500

for.end144:                                       ; preds = %if.then138, %for.cond106
  %129 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3501
  %xxch_pos145 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %129, i32 0, i32 54, !dbg !3503
  %130 = load i32, i32* %xxch_pos145, align 32, !dbg !3503
  %tobool146 = icmp ne i32 %130, 0, !dbg !3501
  br i1 %tobool146, label %if.end155, label %if.then147, !dbg !3504

if.then147:                                       ; preds = %for.end144
  %131 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3505
  %avctx148 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %131, i32 0, i32 0, !dbg !3507
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx148, align 32, !dbg !3507
  %133 = bitcast %struct.AVCodecContext* %132 to i8*, !dbg !3505
  call void (i8*, i32, i8*, ...) @av_log(i8* %133, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0)), !dbg !3508
  %134 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3509
  %avctx149 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %134, i32 0, i32 0, !dbg !3511
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx149, align 32, !dbg !3511
  %err_recognition150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %135, i32 0, i32 135, !dbg !3512
  %136 = load i32, i32* %err_recognition150, align 8, !dbg !3512
  %and151 = and i32 %136, 8, !dbg !3513
  %tobool152 = icmp ne i32 %and151, 0, !dbg !3513
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !3514

if.then153:                                       ; preds = %if.then147
  store i32 -1094995529, i32* %retval, align 4, !dbg !3515
  br label %return, !dbg !3515

if.end154:                                        ; preds = %if.then147
  br label %if.end155, !dbg !3516

if.end155:                                        ; preds = %if.end154, %for.end144
  br label %sw.epilog, !dbg !3517

sw.epilog:                                        ; preds = %cond.end, %if.end155, %if.then104, %if.end100, %if.end60, %if.then26
  br label %if.end156, !dbg !3518

if.end156:                                        ; preds = %sw.epilog, %land.lhs.true11, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !3519
  br label %return, !dbg !3519

return:                                           ; preds = %if.end156, %if.then153, %if.then98, %if.then58, %if.then5
  %137 = load i32, i32* %retval, align 4, !dbg !3520
  ret i32 %137, !dbg !3520
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_dca_seek_bits(%struct.GetBitContext* %s, i32 %p) #2 !dbg !3521 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %p.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3524, metadata !2194), !dbg !3525
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !3526, metadata !2194), !dbg !3527
  %0 = load i32, i32* %p.addr, align 4, !dbg !3528
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3530
  %call = call i32 @get_bits_count(%struct.GetBitContext* %1), !dbg !3531
  %cmp = icmp slt i32 %0, %call, !dbg !3532
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3533

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %p.addr, align 4, !dbg !3534
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3536
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 3, !dbg !3537
  %4 = load i32, i32* %size_in_bits, align 4, !dbg !3537
  %cmp1 = icmp sgt i32 %2, %4, !dbg !3538
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3539

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !3540
  br label %return, !dbg !3540

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3541
  %6 = load i32, i32* %p.addr, align 4, !dbg !3542
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3543
  %call2 = call i32 @get_bits_count(%struct.GetBitContext* %7), !dbg !3544
  %sub = sub nsw i32 %6, %call2, !dbg !3545
  call void @skip_bits_long(%struct.GetBitContext* %5, i32 %sub), !dbg !3546
  store i32 0, i32* %retval, align 4, !dbg !3548
  br label %return, !dbg !3548

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3549
  ret i32 %8, !dbg !3549
}

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: nounwind uwtable
define i32 @ff_dca_core_parse_exss(%struct.DCACoreDecoder* %s, i8* %data, %struct.DCAExssAsset* %asset) #0 !dbg !3550 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %data.addr = alloca i8*, align 8
  %asset.addr = alloca %struct.DCAExssAsset*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %dca = alloca %struct.DCAContext*, align 8
  %exss_mask = alloca i32, align 4
  %ret = alloca i32, align 4
  %ext = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !3554, metadata !2194), !dbg !3555
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3556, metadata !2194), !dbg !3557
  store %struct.DCAExssAsset* %asset, %struct.DCAExssAsset** %asset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCAExssAsset** %asset.addr, metadata !3558, metadata !2194), !dbg !3559
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !3560, metadata !2194), !dbg !3561
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3562
  %avctx1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 0, !dbg !3563
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !3563
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !3564, metadata !2194), !dbg !3565
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3566
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 6, !dbg !3567
  %3 = load i8*, i8** %priv_data, align 8, !dbg !3567
  %4 = bitcast i8* %3 to %struct.DCAContext*, !dbg !3566
  store %struct.DCAContext* %4, %struct.DCAContext** %dca, align 8, !dbg !3565
  call void @llvm.dbg.declare(metadata i32* %exss_mask, metadata !3568, metadata !2194), !dbg !3569
  %5 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3570
  %tobool = icmp ne %struct.DCAExssAsset* %5, null, !dbg !3570
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3570

cond.true:                                        ; preds = %entry
  %6 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3571
  %extension_mask = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %6, i32 0, i32 13, !dbg !3573
  %7 = load i32, i32* %extension_mask, align 4, !dbg !3573
  br label %cond.end, !dbg !3574

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !3577
  store i32 %cond, i32* %exss_mask, align 4, !dbg !3579
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3580, metadata !2194), !dbg !3581
  store i32 0, i32* %ret, align 4, !dbg !3581
  call void @llvm.dbg.declare(metadata i32* %ext, metadata !3582, metadata !2194), !dbg !3583
  store i32 0, i32* %ext, align 4, !dbg !3583
  %8 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3584
  %request_channel_layout = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %8, i32 0, i32 13, !dbg !3586
  %9 = load i32, i32* %request_channel_layout, align 8, !dbg !3586
  %tobool2 = icmp ne i32 %9, 0, !dbg !3584
  br i1 %tobool2, label %if.end41, label %if.then, !dbg !3587

if.then:                                          ; preds = %cond.end
  %10 = load i32, i32* %exss_mask, align 4, !dbg !3588
  %and = and i32 %10, 64, !dbg !3591
  %tobool3 = icmp ne i32 %and, 0, !dbg !3591
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3592

if.then4:                                         ; preds = %if.then
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3593
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 1, !dbg !3596
  %12 = load i8*, i8** %data.addr, align 8, !dbg !3597
  %13 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3598
  %xxch_offset = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %13, i32 0, i32 18, !dbg !3599
  %14 = load i32, i32* %xxch_offset, align 4, !dbg !3599
  %idx.ext = sext i32 %14 to i64, !dbg !3600
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !3600
  %15 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3601
  %xxch_size = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %15, i32 0, i32 19, !dbg !3602
  %16 = load i32, i32* %xxch_size, align 4, !dbg !3602
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %16), !dbg !3603
  store i32 %call, i32* %ret, align 4, !dbg !3604
  %cmp = icmp slt i32 %call, 0, !dbg !3605
  br i1 %cmp, label %if.then5, label %if.end, !dbg !3606

if.then5:                                         ; preds = %if.then4
  %17 = load i32, i32* %ret, align 4, !dbg !3607
  store i32 %17, i32* %retval, align 4, !dbg !3608
  br label %return, !dbg !3608

if.end:                                           ; preds = %if.then4
  %18 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3609
  %call6 = call i32 @parse_xxch_frame(%struct.DCACoreDecoder* %18), !dbg !3610
  store i32 %call6, i32* %ret, align 4, !dbg !3611
  store i32 64, i32* %ext, align 4, !dbg !3612
  br label %if.end23, !dbg !3613

if.else:                                          ; preds = %if.then
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3614
  %xxch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 54, !dbg !3617
  %20 = load i32, i32* %xxch_pos, align 32, !dbg !3617
  %tobool7 = icmp ne i32 %20, 0, !dbg !3614
  br i1 %tobool7, label %if.then8, label %if.else13, !dbg !3614

if.then8:                                         ; preds = %if.else
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3618
  %gb9 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 1, !dbg !3620
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3621
  %gb_in = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 2, !dbg !3622
  %23 = bitcast %struct.GetBitContext* %gb9 to i8*, !dbg !3622
  %24 = bitcast %struct.GetBitContext* %gb_in to i8*, !dbg !3622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 32, i32 8, i1 false), !dbg !3622
  %25 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3623
  %gb10 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %25, i32 0, i32 1, !dbg !3624
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3625
  %xxch_pos11 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 54, !dbg !3626
  %27 = load i32, i32* %xxch_pos11, align 32, !dbg !3626
  call void @skip_bits_long(%struct.GetBitContext* %gb10, i32 %27), !dbg !3627
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3628
  %call12 = call i32 @parse_xxch_frame(%struct.DCACoreDecoder* %28), !dbg !3629
  store i32 %call12, i32* %ret, align 4, !dbg !3630
  store i32 2, i32* %ext, align 4, !dbg !3631
  br label %if.end22, !dbg !3632

if.else13:                                        ; preds = %if.else
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3633
  %xch_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 45, !dbg !3636
  %30 = load i32, i32* %xch_pos, align 4, !dbg !3636
  %tobool14 = icmp ne i32 %30, 0, !dbg !3633
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !3633

if.then15:                                        ; preds = %if.else13
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3637
  %gb16 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 1, !dbg !3639
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3640
  %gb_in17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 2, !dbg !3641
  %33 = bitcast %struct.GetBitContext* %gb16 to i8*, !dbg !3641
  %34 = bitcast %struct.GetBitContext* %gb_in17 to i8*, !dbg !3641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 32, i32 8, i1 false), !dbg !3641
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3642
  %gb18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 1, !dbg !3643
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3644
  %xch_pos19 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 45, !dbg !3645
  %37 = load i32, i32* %xch_pos19, align 4, !dbg !3645
  call void @skip_bits_long(%struct.GetBitContext* %gb18, i32 %37), !dbg !3646
  %38 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3647
  %call20 = call i32 @parse_xch_frame(%struct.DCACoreDecoder* %38), !dbg !3648
  store i32 %call20, i32* %ret, align 4, !dbg !3649
  store i32 8, i32* %ext, align 4, !dbg !3650
  br label %if.end21, !dbg !3651

if.end21:                                         ; preds = %if.then15, %if.else13
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then8
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  %39 = load i32, i32* %ret, align 4, !dbg !3652
  %cmp24 = icmp slt i32 %39, 0, !dbg !3654
  br i1 %cmp24, label %if.then25, label %if.else38, !dbg !3655

if.then25:                                        ; preds = %if.end23
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3656
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 135, !dbg !3659
  %41 = load i32, i32* %err_recognition, align 8, !dbg !3659
  %and26 = and i32 %41, 8, !dbg !3660
  %tobool27 = icmp ne i32 %and26, 0, !dbg !3660
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !3661

if.then28:                                        ; preds = %if.then25
  %42 = load i32, i32* %ret, align 4, !dbg !3662
  store i32 %42, i32* %retval, align 4, !dbg !3663
  br label %return, !dbg !3663

if.end29:                                         ; preds = %if.then25
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3664
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 6, !dbg !3665
  %44 = load i32, i32* %audio_mode, align 4, !dbg !3665
  %idxprom = sext i32 %44 to i64, !dbg !3666
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom, !dbg !3666
  %45 = load i8, i8* %arrayidx, align 1, !dbg !3666
  %conv = zext i8 %45 to i32, !dbg !3666
  %46 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3667
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %46, i32 0, i32 23, !dbg !3668
  store i32 %conv, i32* %nchannels, align 8, !dbg !3669
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3670
  %audio_mode30 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 6, !dbg !3671
  %48 = load i32, i32* %audio_mode30, align 4, !dbg !3671
  %idxprom31 = sext i32 %48 to i64, !dbg !3672
  %arrayidx32 = getelementptr inbounds [10 x i8], [10 x i8]* @audio_mode_ch_mask, i64 0, i64 %idxprom31, !dbg !3672
  %49 = load i8, i8* %arrayidx32, align 1, !dbg !3672
  %conv33 = zext i8 %49 to i32, !dbg !3672
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3673
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 24, !dbg !3674
  store i32 %conv33, i32* %ch_mask, align 4, !dbg !3675
  %51 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3676
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %51, i32 0, i32 15, !dbg !3678
  %52 = load i32, i32* %lfe_present, align 8, !dbg !3678
  %tobool34 = icmp ne i32 %52, 0, !dbg !3676
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !3679

if.then35:                                        ; preds = %if.end29
  %53 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3680
  %ch_mask36 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %53, i32 0, i32 24, !dbg !3681
  %54 = load i32, i32* %ch_mask36, align 4, !dbg !3682
  %or = or i32 %54, 32, !dbg !3682
  store i32 %or, i32* %ch_mask36, align 4, !dbg !3682
  br label %if.end37, !dbg !3680

if.end37:                                         ; preds = %if.then35, %if.end29
  br label %if.end40, !dbg !3683

if.else38:                                        ; preds = %if.end23
  %55 = load i32, i32* %ext, align 4, !dbg !3684
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3686
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 44, !dbg !3687
  %57 = load i32, i32* %ext_audio_mask, align 8, !dbg !3688
  %or39 = or i32 %57, %55, !dbg !3688
  store i32 %or39, i32* %ext_audio_mask, align 8, !dbg !3688
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.end37
  br label %if.end41, !dbg !3689

if.end41:                                         ; preds = %if.end40, %cond.end
  %58 = load i32, i32* %exss_mask, align 4, !dbg !3690
  %and42 = and i32 %58, 32, !dbg !3692
  %tobool43 = icmp ne i32 %and42, 0, !dbg !3692
  br i1 %tobool43, label %if.then44, label %if.end66, !dbg !3693

if.then44:                                        ; preds = %if.end41
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3694
  %gb45 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 1, !dbg !3697
  %60 = load i8*, i8** %data.addr, align 8, !dbg !3698
  %61 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3699
  %xbr_offset = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %61, i32 0, i32 16, !dbg !3700
  %62 = load i32, i32* %xbr_offset, align 4, !dbg !3700
  %idx.ext46 = sext i32 %62 to i64, !dbg !3701
  %add.ptr47 = getelementptr inbounds i8, i8* %60, i64 %idx.ext46, !dbg !3701
  %63 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3702
  %xbr_size = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %63, i32 0, i32 17, !dbg !3703
  %64 = load i32, i32* %xbr_size, align 4, !dbg !3703
  %call48 = call i32 @init_get_bits8(%struct.GetBitContext* %gb45, i8* %add.ptr47, i32 %64), !dbg !3704
  store i32 %call48, i32* %ret, align 4, !dbg !3705
  %cmp49 = icmp slt i32 %call48, 0, !dbg !3706
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3707

if.then51:                                        ; preds = %if.then44
  %65 = load i32, i32* %ret, align 4, !dbg !3708
  store i32 %65, i32* %retval, align 4, !dbg !3709
  br label %return, !dbg !3709

if.end52:                                         ; preds = %if.then44
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3710
  %call53 = call i32 @parse_xbr_frame(%struct.DCACoreDecoder* %66), !dbg !3712
  store i32 %call53, i32* %ret, align 4, !dbg !3713
  %cmp54 = icmp slt i32 %call53, 0, !dbg !3714
  br i1 %cmp54, label %if.then56, label %if.else62, !dbg !3715

if.then56:                                        ; preds = %if.end52
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3716
  %err_recognition57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 135, !dbg !3719
  %68 = load i32, i32* %err_recognition57, align 8, !dbg !3719
  %and58 = and i32 %68, 8, !dbg !3720
  %tobool59 = icmp ne i32 %and58, 0, !dbg !3720
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !3721

if.then60:                                        ; preds = %if.then56
  %69 = load i32, i32* %ret, align 4, !dbg !3722
  store i32 %69, i32* %retval, align 4, !dbg !3723
  br label %return, !dbg !3723

if.end61:                                         ; preds = %if.then56
  br label %if.end65, !dbg !3724

if.else62:                                        ; preds = %if.end52
  %70 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3725
  %ext_audio_mask63 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %70, i32 0, i32 44, !dbg !3727
  %71 = load i32, i32* %ext_audio_mask63, align 8, !dbg !3728
  %or64 = or i32 %71, 32, !dbg !3728
  store i32 %or64, i32* %ext_audio_mask63, align 8, !dbg !3728
  br label %if.end65

if.end65:                                         ; preds = %if.else62, %if.end61
  br label %if.end66, !dbg !3729

if.end66:                                         ; preds = %if.end65, %if.end41
  %72 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !3730
  %packet = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %72, i32 0, i32 12, !dbg !3732
  %73 = load i32, i32* %packet, align 4, !dbg !3732
  %and67 = and i32 %73, 4, !dbg !3733
  %tobool68 = icmp ne i32 %and67, 0, !dbg !3733
  br i1 %tobool68, label %if.end121, label %if.then69, !dbg !3734

if.then69:                                        ; preds = %if.end66
  %74 = load i32, i32* %exss_mask, align 4, !dbg !3735
  %and70 = and i32 %74, 128, !dbg !3738
  %tobool71 = icmp ne i32 %and70, 0, !dbg !3738
  br i1 %tobool71, label %if.then72, label %if.else96, !dbg !3739

if.then72:                                        ; preds = %if.then69
  %75 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3740
  %gb73 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %75, i32 0, i32 1, !dbg !3743
  %76 = load i8*, i8** %data.addr, align 8, !dbg !3744
  %77 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3745
  %x96_offset = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %77, i32 0, i32 20, !dbg !3746
  %78 = load i32, i32* %x96_offset, align 4, !dbg !3746
  %idx.ext74 = sext i32 %78 to i64, !dbg !3747
  %add.ptr75 = getelementptr inbounds i8, i8* %76, i64 %idx.ext74, !dbg !3747
  %79 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !3748
  %x96_size = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %79, i32 0, i32 21, !dbg !3749
  %80 = load i32, i32* %x96_size, align 4, !dbg !3749
  %call76 = call i32 @init_get_bits8(%struct.GetBitContext* %gb73, i8* %add.ptr75, i32 %80), !dbg !3750
  store i32 %call76, i32* %ret, align 4, !dbg !3751
  %cmp77 = icmp slt i32 %call76, 0, !dbg !3752
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !3753

if.then79:                                        ; preds = %if.then72
  %81 = load i32, i32* %ret, align 4, !dbg !3754
  store i32 %81, i32* %retval, align 4, !dbg !3755
  br label %return, !dbg !3755

if.end80:                                         ; preds = %if.then72
  %82 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3756
  %call81 = call i32 @parse_x96_frame_exss(%struct.DCACoreDecoder* %82), !dbg !3758
  store i32 %call81, i32* %ret, align 4, !dbg !3759
  %cmp82 = icmp slt i32 %call81, 0, !dbg !3760
  br i1 %cmp82, label %if.then84, label %if.else92, !dbg !3761

if.then84:                                        ; preds = %if.end80
  %83 = load i32, i32* %ret, align 4, !dbg !3762
  %cmp85 = icmp eq i32 %83, -12, !dbg !3765
  br i1 %cmp85, label %if.then90, label %lor.lhs.false, !dbg !3766

lor.lhs.false:                                    ; preds = %if.then84
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3767
  %err_recognition87 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 135, !dbg !3769
  %85 = load i32, i32* %err_recognition87, align 8, !dbg !3769
  %and88 = and i32 %85, 8, !dbg !3770
  %tobool89 = icmp ne i32 %and88, 0, !dbg !3770
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !3771

if.then90:                                        ; preds = %lor.lhs.false, %if.then84
  %86 = load i32, i32* %ret, align 4, !dbg !3772
  store i32 %86, i32* %retval, align 4, !dbg !3773
  br label %return, !dbg !3773

if.end91:                                         ; preds = %lor.lhs.false
  br label %if.end95, !dbg !3774

if.else92:                                        ; preds = %if.end80
  %87 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3775
  %ext_audio_mask93 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %87, i32 0, i32 44, !dbg !3777
  %88 = load i32, i32* %ext_audio_mask93, align 8, !dbg !3778
  %or94 = or i32 %88, 128, !dbg !3778
  store i32 %or94, i32* %ext_audio_mask93, align 8, !dbg !3778
  br label %if.end95

if.end95:                                         ; preds = %if.else92, %if.end91
  br label %if.end120, !dbg !3779

if.else96:                                        ; preds = %if.then69
  %89 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3780
  %x96_pos = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %89, i32 0, i32 61, !dbg !3783
  %90 = load i32, i32* %x96_pos, align 4, !dbg !3783
  %tobool97 = icmp ne i32 %90, 0, !dbg !3780
  br i1 %tobool97, label %if.then98, label %if.end119, !dbg !3780

if.then98:                                        ; preds = %if.else96
  %91 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3784
  %gb99 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %91, i32 0, i32 1, !dbg !3786
  %92 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3787
  %gb_in100 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %92, i32 0, i32 2, !dbg !3788
  %93 = bitcast %struct.GetBitContext* %gb99 to i8*, !dbg !3788
  %94 = bitcast %struct.GetBitContext* %gb_in100 to i8*, !dbg !3788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 32, i32 8, i1 false), !dbg !3788
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3789
  %gb101 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 1, !dbg !3790
  %96 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3791
  %x96_pos102 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %96, i32 0, i32 61, !dbg !3792
  %97 = load i32, i32* %x96_pos102, align 4, !dbg !3792
  call void @skip_bits_long(%struct.GetBitContext* %gb101, i32 %97), !dbg !3793
  %98 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3794
  %call103 = call i32 @parse_x96_frame(%struct.DCACoreDecoder* %98), !dbg !3796
  store i32 %call103, i32* %ret, align 4, !dbg !3797
  %cmp104 = icmp slt i32 %call103, 0, !dbg !3798
  br i1 %cmp104, label %if.then106, label %if.else115, !dbg !3799

if.then106:                                       ; preds = %if.then98
  %99 = load i32, i32* %ret, align 4, !dbg !3800
  %cmp107 = icmp eq i32 %99, -12, !dbg !3803
  br i1 %cmp107, label %if.then113, label %lor.lhs.false109, !dbg !3804

lor.lhs.false109:                                 ; preds = %if.then106
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3805
  %err_recognition110 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 135, !dbg !3807
  %101 = load i32, i32* %err_recognition110, align 8, !dbg !3807
  %and111 = and i32 %101, 8, !dbg !3808
  %tobool112 = icmp ne i32 %and111, 0, !dbg !3808
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !3809

if.then113:                                       ; preds = %lor.lhs.false109, %if.then106
  %102 = load i32, i32* %ret, align 4, !dbg !3810
  store i32 %102, i32* %retval, align 4, !dbg !3811
  br label %return, !dbg !3811

if.end114:                                        ; preds = %lor.lhs.false109
  br label %if.end118, !dbg !3812

if.else115:                                       ; preds = %if.then98
  %103 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3813
  %ext_audio_mask116 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %103, i32 0, i32 44, !dbg !3815
  %104 = load i32, i32* %ext_audio_mask116, align 8, !dbg !3816
  %or117 = or i32 %104, 4, !dbg !3816
  store i32 %or117, i32* %ext_audio_mask116, align 8, !dbg !3816
  br label %if.end118

if.end118:                                        ; preds = %if.else115, %if.end114
  br label %if.end119, !dbg !3817

if.end119:                                        ; preds = %if.end118, %if.else96
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end95
  br label %if.end121, !dbg !3818

if.end121:                                        ; preds = %if.end120, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !3819
  br label %return, !dbg !3819

return:                                           ; preds = %if.end121, %if.then113, %if.then90, %if.then79, %if.then60, %if.then51, %if.then28, %if.then5
  %105 = load i32, i32* %retval, align 4, !dbg !3820
  ret i32 %105, !dbg !3820
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_xxch_frame(%struct.DCACoreDecoder* %s) #0 !dbg !3821 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %xxch_nchsets = alloca i32, align 4
  %xxch_frame_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %mask = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header_pos = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !3822, metadata !2194), !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %xxch_nchsets, metadata !3824, metadata !2194), !dbg !3825
  call void @llvm.dbg.declare(metadata i32* %xxch_frame_size, metadata !3826, metadata !2194), !dbg !3827
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3828, metadata !2194), !dbg !3829
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3830, metadata !2194), !dbg !3831
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !3832, metadata !2194), !dbg !3833
  call void @llvm.dbg.declare(metadata i32* %header_pos, metadata !3834, metadata !2194), !dbg !3835
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3836
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !3837
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3838
  store i32 %call, i32* %header_pos, align 4, !dbg !3835
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3839
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !3841
  %call2 = call i32 @get_bits_long(%struct.GetBitContext* %gb1, i32 32), !dbg !3842
  %cmp = icmp ne i32 %call2, 1191201283, !dbg !3843
  br i1 %cmp, label %if.then, label %if.end, !dbg !3844

if.then:                                          ; preds = %entry
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3845
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 0, !dbg !3847
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3847
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !3845
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i32 0, i32 0)), !dbg !3848
  store i32 -1094995529, i32* %retval, align 4, !dbg !3849
  br label %return, !dbg !3849

if.end:                                           ; preds = %entry
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3850
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 1, !dbg !3851
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 6), !dbg !3852
  %add = add i32 %call4, 1, !dbg !3853
  store i32 %add, i32* %header_size, align 4, !dbg !3854
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3855
  %avctx5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 0, !dbg !3857
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 32, !dbg !3857
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3858
  %gb6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 1, !dbg !3859
  %9 = load i32, i32* %header_pos, align 4, !dbg !3860
  %add7 = add nsw i32 %9, 32, !dbg !3861
  %10 = load i32, i32* %header_pos, align 4, !dbg !3862
  %11 = load i32, i32* %header_size, align 4, !dbg !3863
  %mul = mul nsw i32 %11, 8, !dbg !3864
  %add8 = add nsw i32 %10, %mul, !dbg !3865
  %call9 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %7, %struct.GetBitContext* %gb6, i32 %add7, i32 %add8), !dbg !3866
  %tobool = icmp ne i32 %call9, 0, !dbg !3866
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !3867

if.then10:                                        ; preds = %if.end
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3868
  %avctx11 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !3870
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 32, !dbg !3870
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !3868
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40, i32 0, i32 0)), !dbg !3871
  store i32 -1094995529, i32* %retval, align 4, !dbg !3872
  br label %return, !dbg !3872

if.end12:                                         ; preds = %if.end
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3873
  %gb13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 1, !dbg !3874
  %call14 = call i32 @get_bits1(%struct.GetBitContext* %gb13), !dbg !3875
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3876
  %xxch_crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 46, !dbg !3877
  store i32 %call14, i32* %xxch_crc_present, align 16, !dbg !3878
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3879
  %gb15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 1, !dbg !3880
  %call16 = call i32 @get_bits(%struct.GetBitContext* %gb15, i32 5), !dbg !3881
  %add17 = add i32 %call16, 1, !dbg !3882
  %18 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3883
  %xxch_mask_nbits = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %18, i32 0, i32 47, !dbg !3884
  store i32 %add17, i32* %xxch_mask_nbits, align 4, !dbg !3885
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3886
  %xxch_mask_nbits18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 47, !dbg !3888
  %20 = load i32, i32* %xxch_mask_nbits18, align 4, !dbg !3888
  %cmp19 = icmp sle i32 %20, 6, !dbg !3889
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !3890

if.then20:                                        ; preds = %if.end12
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3891
  %avctx21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 0, !dbg !3893
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx21, align 32, !dbg !3893
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !3891
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3894
  %xxch_mask_nbits22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 47, !dbg !3895
  %25 = load i32, i32* %xxch_mask_nbits22, align 4, !dbg !3895
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.41, i32 0, i32 0), i32 %25), !dbg !3896
  store i32 -1094995529, i32* %retval, align 4, !dbg !3897
  br label %return, !dbg !3897

if.end23:                                         ; preds = %if.end12
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3898
  %gb24 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 1, !dbg !3899
  %call25 = call i32 @get_bits(%struct.GetBitContext* %gb24, i32 2), !dbg !3900
  %add26 = add i32 %call25, 1, !dbg !3901
  store i32 %add26, i32* %xxch_nchsets, align 4, !dbg !3902
  %27 = load i32, i32* %xxch_nchsets, align 4, !dbg !3903
  %cmp27 = icmp sgt i32 %27, 1, !dbg !3905
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !3906

if.then28:                                        ; preds = %if.end23
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3907
  %avctx29 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %28, i32 0, i32 0, !dbg !3909
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx29, align 32, !dbg !3909
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !3907
  %31 = load i32, i32* %xxch_nchsets, align 4, !dbg !3910
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0), i32 %31), !dbg !3911
  store i32 -1163346256, i32* %retval, align 4, !dbg !3912
  br label %return, !dbg !3912

if.end30:                                         ; preds = %if.end23
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3913
  %gb31 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 1, !dbg !3914
  %call32 = call i32 @get_bits(%struct.GetBitContext* %gb31, i32 14), !dbg !3915
  %add33 = add i32 %call32, 1, !dbg !3916
  store i32 %add33, i32* %xxch_frame_size, align 4, !dbg !3917
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3918
  %gb34 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 1, !dbg !3919
  %34 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3920
  %xxch_mask_nbits35 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %34, i32 0, i32 47, !dbg !3921
  %35 = load i32, i32* %xxch_mask_nbits35, align 4, !dbg !3921
  %call36 = call i32 @get_bits_long(%struct.GetBitContext* %gb34, i32 %35), !dbg !3922
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3923
  %xxch_core_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 48, !dbg !3924
  store i32 %call36, i32* %xxch_core_mask, align 8, !dbg !3925
  %37 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3926
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %37, i32 0, i32 24, !dbg !3927
  %38 = load i32, i32* %ch_mask, align 4, !dbg !3927
  store i32 %38, i32* %mask, align 4, !dbg !3928
  %39 = load i32, i32* %mask, align 4, !dbg !3929
  %and = and i32 %39, 8, !dbg !3931
  %tobool37 = icmp ne i32 %and, 0, !dbg !3931
  br i1 %tobool37, label %land.lhs.true, label %if.end43, !dbg !3932

land.lhs.true:                                    ; preds = %if.end30
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3933
  %xxch_core_mask38 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 48, !dbg !3935
  %41 = load i32, i32* %xxch_core_mask38, align 8, !dbg !3935
  %and39 = and i32 %41, 512, !dbg !3936
  %tobool40 = icmp ne i32 %and39, 0, !dbg !3936
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !3937

if.then41:                                        ; preds = %land.lhs.true
  %42 = load i32, i32* %mask, align 4, !dbg !3938
  %and42 = and i32 %42, -9, !dbg !3939
  %or = or i32 %and42, 512, !dbg !3940
  store i32 %or, i32* %mask, align 4, !dbg !3941
  br label %if.end43, !dbg !3942

if.end43:                                         ; preds = %if.then41, %land.lhs.true, %if.end30
  %43 = load i32, i32* %mask, align 4, !dbg !3943
  %and44 = and i32 %43, 16, !dbg !3945
  %tobool45 = icmp ne i32 %and44, 0, !dbg !3945
  br i1 %tobool45, label %land.lhs.true46, label %if.end53, !dbg !3946

land.lhs.true46:                                  ; preds = %if.end43
  %44 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3947
  %xxch_core_mask47 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %44, i32 0, i32 48, !dbg !3949
  %45 = load i32, i32* %xxch_core_mask47, align 8, !dbg !3949
  %and48 = and i32 %45, 1024, !dbg !3950
  %tobool49 = icmp ne i32 %and48, 0, !dbg !3950
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !3951

if.then50:                                        ; preds = %land.lhs.true46
  %46 = load i32, i32* %mask, align 4, !dbg !3952
  %and51 = and i32 %46, -17, !dbg !3953
  %or52 = or i32 %and51, 1024, !dbg !3954
  store i32 %or52, i32* %mask, align 4, !dbg !3955
  br label %if.end53, !dbg !3956

if.end53:                                         ; preds = %if.then50, %land.lhs.true46, %if.end43
  %47 = load i32, i32* %mask, align 4, !dbg !3957
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3959
  %xxch_core_mask54 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 48, !dbg !3960
  %49 = load i32, i32* %xxch_core_mask54, align 8, !dbg !3960
  %cmp55 = icmp ne i32 %47, %49, !dbg !3961
  br i1 %cmp55, label %if.then56, label %if.end59, !dbg !3962

if.then56:                                        ; preds = %if.end53
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3963
  %avctx57 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 0, !dbg !3965
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 32, !dbg !3965
  %52 = bitcast %struct.AVCodecContext* %51 to i8*, !dbg !3963
  %53 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3966
  %xxch_core_mask58 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %53, i32 0, i32 48, !dbg !3967
  %54 = load i32, i32* %xxch_core_mask58, align 8, !dbg !3967
  %55 = load i32, i32* %mask, align 4, !dbg !3968
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.43, i32 0, i32 0), i32 %54, i32 %55), !dbg !3969
  store i32 -1094995529, i32* %retval, align 4, !dbg !3970
  br label %return, !dbg !3970

if.end59:                                         ; preds = %if.end53
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3971
  %gb60 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 1, !dbg !3973
  %57 = load i32, i32* %header_pos, align 4, !dbg !3974
  %58 = load i32, i32* %header_size, align 4, !dbg !3975
  %mul61 = mul nsw i32 %58, 8, !dbg !3976
  %add62 = add nsw i32 %57, %mul61, !dbg !3977
  %call63 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb60, i32 %add62), !dbg !3978
  %tobool64 = icmp ne i32 %call63, 0, !dbg !3978
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !3979

if.then65:                                        ; preds = %if.end59
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3980
  %avctx66 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 0, !dbg !3982
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 32, !dbg !3982
  %61 = bitcast %struct.AVCodecContext* %60 to i8*, !dbg !3980
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i32 0, i32 0)), !dbg !3983
  store i32 -1094995529, i32* %retval, align 4, !dbg !3984
  br label %return, !dbg !3984

if.end67:                                         ; preds = %if.end59
  %62 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3985
  %63 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3987
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %63, i32 0, i32 23, !dbg !3988
  %64 = load i32, i32* %nchannels, align 8, !dbg !3988
  %call68 = call i32 @parse_frame_data(%struct.DCACoreDecoder* %62, i32 2, i32 %64), !dbg !3989
  store i32 %call68, i32* %ret, align 4, !dbg !3990
  %cmp69 = icmp slt i32 %call68, 0, !dbg !3991
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !3992

if.then70:                                        ; preds = %if.end67
  %65 = load i32, i32* %ret, align 4, !dbg !3993
  store i32 %65, i32* %retval, align 4, !dbg !3994
  br label %return, !dbg !3994

if.end71:                                         ; preds = %if.end67
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !3995
  %gb72 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %66, i32 0, i32 1, !dbg !3997
  %67 = load i32, i32* %header_pos, align 4, !dbg !3998
  %68 = load i32, i32* %header_size, align 4, !dbg !3999
  %mul73 = mul nsw i32 %68, 8, !dbg !4000
  %add74 = add nsw i32 %67, %mul73, !dbg !4001
  %69 = load i32, i32* %xxch_frame_size, align 4, !dbg !4002
  %mul75 = mul nsw i32 %69, 8, !dbg !4003
  %add76 = add nsw i32 %add74, %mul75, !dbg !4004
  %call77 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb72, i32 %add76), !dbg !4005
  %tobool78 = icmp ne i32 %call77, 0, !dbg !4005
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !4006

if.then79:                                        ; preds = %if.end71
  %70 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4007
  %avctx80 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %70, i32 0, i32 0, !dbg !4009
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx80, align 32, !dbg !4009
  %72 = bitcast %struct.AVCodecContext* %71 to i8*, !dbg !4007
  call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i32 0, i32 0)), !dbg !4010
  store i32 -1094995529, i32* %retval, align 4, !dbg !4011
  br label %return, !dbg !4011

if.end81:                                         ; preds = %if.end71
  store i32 0, i32* %retval, align 4, !dbg !4012
  br label %return, !dbg !4012

return:                                           ; preds = %if.end81, %if.then79, %if.then70, %if.then65, %if.then56, %if.then28, %if.then20, %if.then10, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !4013
  ret i32 %73, !dbg !4013
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #2 !dbg !4014 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4017, metadata !2194), !dbg !4022
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4024, metadata !2194), !dbg !4025
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4026, metadata !2194), !dbg !4027
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4028, metadata !2194), !dbg !4029
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4030, metadata !2194), !dbg !4031
  %0 = load i32, i32* %n.addr, align 4, !dbg !4032
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4033
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !4034
  %2 = load i32, i32* %index, align 8, !dbg !4034
  %sub = sub nsw i32 0, %2, !dbg !4035
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4036
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !4037
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4037
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4038
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !4039
  %6 = load i32, i32* %index1, align 8, !dbg !4039
  %sub2 = sub nsw i32 %4, %6, !dbg !4040
  store i32 %0, i32* %a.addr.i, align 4, !dbg !4041
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !4041
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !4041
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !4042
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !4044
  %cmp.i = icmp slt i32 %7, %8, !dbg !4045
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4046

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !4047
  store i32 %9, i32* %retval.i, align 4, !dbg !4049
  br label %av_clip_c.exit, !dbg !4049

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !4050
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !4052
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !4053
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4054

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !4055
  store i32 %12, i32* %retval.i, align 4, !dbg !4057
  br label %av_clip_c.exit, !dbg !4057

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !4058
  store i32 %13, i32* %retval.i, align 4, !dbg !4059
  br label %av_clip_c.exit, !dbg !4059

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !4060
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4061
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4062
  %16 = load i32, i32* %index3, align 8, !dbg !4063
  %add = add nsw i32 %16, %14, !dbg !4063
  store i32 %add, i32* %index3, align 8, !dbg !4063
  ret void, !dbg !4064
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_xch_frame(%struct.DCACoreDecoder* %s) #0 !dbg !4065 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %ret = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4066, metadata !2194), !dbg !4067
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4068, metadata !2194), !dbg !4069
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4070
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 24, !dbg !4072
  %1 = load i32, i32* %ch_mask, align 4, !dbg !4072
  %and = and i32 %1, 64, !dbg !4073
  %tobool = icmp ne i32 %and, 0, !dbg !4073
  br i1 %tobool, label %if.then, label %if.end, !dbg !4074

if.then:                                          ; preds = %entry
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4075
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 0, !dbg !4077
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4077
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !4075
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46, i32 0, i32 0)), !dbg !4078
  store i32 -1094995529, i32* %retval, align 4, !dbg !4079
  br label %return, !dbg !4079

if.end:                                           ; preds = %entry
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4080
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4082
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 23, !dbg !4083
  %7 = load i32, i32* %nchannels, align 8, !dbg !4083
  %call = call i32 @parse_frame_data(%struct.DCACoreDecoder* %5, i32 1, i32 %7), !dbg !4084
  store i32 %call, i32* %ret, align 4, !dbg !4085
  %cmp = icmp slt i32 %call, 0, !dbg !4086
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4087

if.then1:                                         ; preds = %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !4088
  store i32 %8, i32* %retval, align 4, !dbg !4089
  br label %return, !dbg !4089

if.end2:                                          ; preds = %if.end
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4090
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 1, !dbg !4092
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4093
  %frame_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 5, !dbg !4094
  %11 = load i32, i32* %frame_size, align 16, !dbg !4094
  %mul = mul nsw i32 %11, 8, !dbg !4095
  %call3 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb, i32 %mul), !dbg !4096
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4096
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4097

if.then5:                                         ; preds = %if.end2
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4098
  %avctx6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !4100
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 32, !dbg !4100
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4098
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0)), !dbg !4101
  store i32 -1094995529, i32* %retval, align 4, !dbg !4102
  br label %return, !dbg !4102

if.end7:                                          ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !4103
  br label %return, !dbg !4103

return:                                           ; preds = %if.end7, %if.then5, %if.then1, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !4104
  ret i32 %15, !dbg !4104
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_xbr_frame(%struct.DCACoreDecoder* %s) #0 !dbg !4105 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %xbr_frame_size = alloca [4 x i32], align 16
  %xbr_nchannels = alloca [4 x i32], align 16
  %xbr_nsubbands = alloca [32 x i32], align 16
  %xbr_nchsets = alloca i32, align 4
  %xbr_transition_mode = alloca i32, align 4
  %xbr_band_nbits = alloca i32, align 4
  %xbr_base_ch = alloca i32, align 4
  %i = alloca i32, align 4
  %ch1 = alloca i32, align 4
  %ch2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header_pos = alloca i32, align 4
  %sf = alloca i32, align 4
  %sub_pos = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4106, metadata !2194), !dbg !4107
  call void @llvm.dbg.declare(metadata [4 x i32]* %xbr_frame_size, metadata !4108, metadata !2194), !dbg !4109
  call void @llvm.dbg.declare(metadata [4 x i32]* %xbr_nchannels, metadata !4110, metadata !2194), !dbg !4111
  call void @llvm.dbg.declare(metadata [32 x i32]* %xbr_nsubbands, metadata !4112, metadata !2194), !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %xbr_nchsets, metadata !4114, metadata !2194), !dbg !4115
  call void @llvm.dbg.declare(metadata i32* %xbr_transition_mode, metadata !4116, metadata !2194), !dbg !4117
  call void @llvm.dbg.declare(metadata i32* %xbr_band_nbits, metadata !4118, metadata !2194), !dbg !4119
  call void @llvm.dbg.declare(metadata i32* %xbr_base_ch, metadata !4120, metadata !2194), !dbg !4121
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4122, metadata !2194), !dbg !4123
  call void @llvm.dbg.declare(metadata i32* %ch1, metadata !4124, metadata !2194), !dbg !4125
  call void @llvm.dbg.declare(metadata i32* %ch2, metadata !4126, metadata !2194), !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4128, metadata !2194), !dbg !4129
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !4130, metadata !2194), !dbg !4131
  call void @llvm.dbg.declare(metadata i32* %header_pos, metadata !4132, metadata !2194), !dbg !4133
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4134
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !4135
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !4136
  store i32 %call, i32* %header_pos, align 4, !dbg !4133
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4137
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !4139
  %call2 = call i32 @get_bits_long(%struct.GetBitContext* %gb1, i32 32), !dbg !4140
  %cmp = icmp ne i32 %call2, 1700671838, !dbg !4141
  br i1 %cmp, label %if.then, label %if.end, !dbg !4142

if.then:                                          ; preds = %entry
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4143
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 0, !dbg !4145
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4145
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !4143
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i32 0, i32 0)), !dbg !4146
  store i32 -1094995529, i32* %retval, align 4, !dbg !4147
  br label %return, !dbg !4147

if.end:                                           ; preds = %entry
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4148
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 1, !dbg !4149
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 6), !dbg !4150
  %add = add i32 %call4, 1, !dbg !4151
  store i32 %add, i32* %header_size, align 4, !dbg !4152
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4153
  %avctx5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 0, !dbg !4155
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 32, !dbg !4155
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4156
  %gb6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 1, !dbg !4157
  %9 = load i32, i32* %header_pos, align 4, !dbg !4158
  %add7 = add nsw i32 %9, 32, !dbg !4159
  %10 = load i32, i32* %header_pos, align 4, !dbg !4160
  %11 = load i32, i32* %header_size, align 4, !dbg !4161
  %mul = mul nsw i32 %11, 8, !dbg !4162
  %add8 = add nsw i32 %10, %mul, !dbg !4163
  %call9 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %7, %struct.GetBitContext* %gb6, i32 %add7, i32 %add8), !dbg !4164
  %tobool = icmp ne i32 %call9, 0, !dbg !4164
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !4165

if.then10:                                        ; preds = %if.end
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4166
  %avctx11 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !4168
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 32, !dbg !4168
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4166
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.49, i32 0, i32 0)), !dbg !4169
  store i32 -1094995529, i32* %retval, align 4, !dbg !4170
  br label %return, !dbg !4170

if.end12:                                         ; preds = %if.end
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4171
  %gb13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 1, !dbg !4172
  %call14 = call i32 @get_bits(%struct.GetBitContext* %gb13, i32 2), !dbg !4173
  %add15 = add i32 %call14, 1, !dbg !4174
  store i32 %add15, i32* %xbr_nchsets, align 4, !dbg !4175
  store i32 0, i32* %i, align 4, !dbg !4176
  br label %for.cond, !dbg !4178

for.cond:                                         ; preds = %for.inc, %if.end12
  %16 = load i32, i32* %i, align 4, !dbg !4179
  %17 = load i32, i32* %xbr_nchsets, align 4, !dbg !4182
  %cmp16 = icmp slt i32 %16, %17, !dbg !4183
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4184

for.body:                                         ; preds = %for.cond
  %18 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4185
  %gb17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %18, i32 0, i32 1, !dbg !4186
  %call18 = call i32 @get_bits(%struct.GetBitContext* %gb17, i32 14), !dbg !4187
  %add19 = add i32 %call18, 1, !dbg !4188
  %19 = load i32, i32* %i, align 4, !dbg !4189
  %idxprom = sext i32 %19 to i64, !dbg !4190
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_frame_size, i64 0, i64 %idxprom, !dbg !4190
  store i32 %add19, i32* %arrayidx, align 4, !dbg !4191
  br label %for.inc, !dbg !4190

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !4192
  %inc = add nsw i32 %20, 1, !dbg !4192
  store i32 %inc, i32* %i, align 4, !dbg !4192
  br label %for.cond, !dbg !4194, !llvm.loop !4195

for.end:                                          ; preds = %for.cond
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4197
  %gb20 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 1, !dbg !4198
  %call21 = call i32 @get_bits1(%struct.GetBitContext* %gb20), !dbg !4199
  store i32 %call21, i32* %xbr_transition_mode, align 4, !dbg !4200
  store i32 0, i32* %i, align 4, !dbg !4201
  store i32 0, i32* %ch2, align 4, !dbg !4203
  br label %for.cond22, !dbg !4204

for.cond22:                                       ; preds = %for.inc55, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !4205
  %23 = load i32, i32* %xbr_nchsets, align 4, !dbg !4208
  %cmp23 = icmp slt i32 %22, %23, !dbg !4209
  br i1 %cmp23, label %for.body24, label %for.end57, !dbg !4210

for.body24:                                       ; preds = %for.cond22
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4211
  %gb25 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 1, !dbg !4213
  %call26 = call i32 @get_bits(%struct.GetBitContext* %gb25, i32 3), !dbg !4214
  %add27 = add i32 %call26, 1, !dbg !4215
  %25 = load i32, i32* %i, align 4, !dbg !4216
  %idxprom28 = sext i32 %25 to i64, !dbg !4217
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_nchannels, i64 0, i64 %idxprom28, !dbg !4217
  store i32 %add27, i32* %arrayidx29, align 4, !dbg !4218
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4219
  %gb30 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 1, !dbg !4220
  %call31 = call i32 @get_bits(%struct.GetBitContext* %gb30, i32 2), !dbg !4221
  %add32 = add i32 %call31, 5, !dbg !4222
  store i32 %add32, i32* %xbr_band_nbits, align 4, !dbg !4223
  store i32 0, i32* %ch1, align 4, !dbg !4224
  br label %for.cond33, !dbg !4226

for.cond33:                                       ; preds = %for.inc51, %for.body24
  %27 = load i32, i32* %ch1, align 4, !dbg !4227
  %28 = load i32, i32* %i, align 4, !dbg !4230
  %idxprom34 = sext i32 %28 to i64, !dbg !4231
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_nchannels, i64 0, i64 %idxprom34, !dbg !4231
  %29 = load i32, i32* %arrayidx35, align 4, !dbg !4231
  %cmp36 = icmp slt i32 %27, %29, !dbg !4232
  br i1 %cmp36, label %for.body37, label %for.end54, !dbg !4233

for.body37:                                       ; preds = %for.cond33
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4234
  %gb38 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 1, !dbg !4236
  %31 = load i32, i32* %xbr_band_nbits, align 4, !dbg !4237
  %call39 = call i32 @get_bits(%struct.GetBitContext* %gb38, i32 %31), !dbg !4238
  %add40 = add i32 %call39, 1, !dbg !4239
  %32 = load i32, i32* %ch2, align 4, !dbg !4240
  %idxprom41 = sext i32 %32 to i64, !dbg !4241
  %arrayidx42 = getelementptr inbounds [32 x i32], [32 x i32]* %xbr_nsubbands, i64 0, i64 %idxprom41, !dbg !4241
  store i32 %add40, i32* %arrayidx42, align 4, !dbg !4242
  %33 = load i32, i32* %ch2, align 4, !dbg !4243
  %idxprom43 = sext i32 %33 to i64, !dbg !4245
  %arrayidx44 = getelementptr inbounds [32 x i32], [32 x i32]* %xbr_nsubbands, i64 0, i64 %idxprom43, !dbg !4245
  %34 = load i32, i32* %arrayidx44, align 4, !dbg !4245
  %cmp45 = icmp sgt i32 %34, 32, !dbg !4246
  br i1 %cmp45, label %if.then46, label %if.end50, !dbg !4247

if.then46:                                        ; preds = %for.body37
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4248
  %avctx47 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 0, !dbg !4250
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx47, align 32, !dbg !4250
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !4248
  %38 = load i32, i32* %ch2, align 4, !dbg !4251
  %idxprom48 = sext i32 %38 to i64, !dbg !4252
  %arrayidx49 = getelementptr inbounds [32 x i32], [32 x i32]* %xbr_nsubbands, i64 0, i64 %idxprom48, !dbg !4252
  %39 = load i32, i32* %arrayidx49, align 4, !dbg !4252
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i32 0, i32 0), i32 %39), !dbg !4253
  store i32 -1094995529, i32* %retval, align 4, !dbg !4254
  br label %return, !dbg !4254

if.end50:                                         ; preds = %for.body37
  br label %for.inc51, !dbg !4255

for.inc51:                                        ; preds = %if.end50
  %40 = load i32, i32* %ch1, align 4, !dbg !4256
  %inc52 = add nsw i32 %40, 1, !dbg !4256
  store i32 %inc52, i32* %ch1, align 4, !dbg !4256
  %41 = load i32, i32* %ch2, align 4, !dbg !4258
  %inc53 = add nsw i32 %41, 1, !dbg !4258
  store i32 %inc53, i32* %ch2, align 4, !dbg !4258
  br label %for.cond33, !dbg !4259, !llvm.loop !4260

for.end54:                                        ; preds = %for.cond33
  br label %for.inc55, !dbg !4262

for.inc55:                                        ; preds = %for.end54
  %42 = load i32, i32* %i, align 4, !dbg !4263
  %inc56 = add nsw i32 %42, 1, !dbg !4263
  store i32 %inc56, i32* %i, align 4, !dbg !4263
  br label %for.cond22, !dbg !4265, !llvm.loop !4266

for.end57:                                        ; preds = %for.cond22
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4268
  %gb58 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 1, !dbg !4270
  %44 = load i32, i32* %header_pos, align 4, !dbg !4271
  %45 = load i32, i32* %header_size, align 4, !dbg !4272
  %mul59 = mul nsw i32 %45, 8, !dbg !4273
  %add60 = add nsw i32 %44, %mul59, !dbg !4274
  %call61 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb58, i32 %add60), !dbg !4275
  %tobool62 = icmp ne i32 %call61, 0, !dbg !4275
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !4276

if.then63:                                        ; preds = %for.end57
  %46 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4277
  %avctx64 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %46, i32 0, i32 0, !dbg !4279
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx64, align 32, !dbg !4279
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !4277
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0)), !dbg !4280
  store i32 -1094995529, i32* %retval, align 4, !dbg !4281
  br label %return, !dbg !4281

if.end65:                                         ; preds = %for.end57
  store i32 0, i32* %i, align 4, !dbg !4282
  store i32 0, i32* %xbr_base_ch, align 4, !dbg !4284
  br label %for.cond66, !dbg !4285

for.cond66:                                       ; preds = %for.inc103, %if.end65
  %49 = load i32, i32* %i, align 4, !dbg !4286
  %50 = load i32, i32* %xbr_nchsets, align 4, !dbg !4289
  %cmp67 = icmp slt i32 %49, %50, !dbg !4290
  br i1 %cmp67, label %for.body68, label %for.end105, !dbg !4291

for.body68:                                       ; preds = %for.cond66
  %51 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4292
  %gb69 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %51, i32 0, i32 1, !dbg !4294
  %call70 = call i32 @get_bits_count(%struct.GetBitContext* %gb69), !dbg !4295
  store i32 %call70, i32* %header_pos, align 4, !dbg !4296
  %52 = load i32, i32* %xbr_base_ch, align 4, !dbg !4297
  %53 = load i32, i32* %i, align 4, !dbg !4299
  %idxprom71 = sext i32 %53 to i64, !dbg !4300
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_nchannels, i64 0, i64 %idxprom71, !dbg !4300
  %54 = load i32, i32* %arrayidx72, align 4, !dbg !4300
  %add73 = add nsw i32 %52, %54, !dbg !4301
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4302
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 23, !dbg !4303
  %56 = load i32, i32* %nchannels, align 8, !dbg !4303
  %cmp74 = icmp sle i32 %add73, %56, !dbg !4304
  br i1 %cmp74, label %if.then75, label %if.end89, !dbg !4305

if.then75:                                        ; preds = %for.body68
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !4306, metadata !2194), !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %sub_pos, metadata !4309, metadata !2194), !dbg !4310
  store i32 0, i32* %sf, align 4, !dbg !4311
  store i32 0, i32* %sub_pos, align 4, !dbg !4313
  br label %for.cond76, !dbg !4314

for.cond76:                                       ; preds = %for.inc86, %if.then75
  %57 = load i32, i32* %sf, align 4, !dbg !4315
  %58 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4318
  %nsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %58, i32 0, i32 22, !dbg !4319
  %59 = load i32, i32* %nsubframes, align 4, !dbg !4319
  %cmp77 = icmp slt i32 %57, %59, !dbg !4320
  br i1 %cmp77, label %for.body78, label %for.end88, !dbg !4321

for.body78:                                       ; preds = %for.cond76
  %60 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4322
  %61 = load i32, i32* %xbr_base_ch, align 4, !dbg !4325
  %62 = load i32, i32* %xbr_base_ch, align 4, !dbg !4326
  %63 = load i32, i32* %i, align 4, !dbg !4327
  %idxprom79 = sext i32 %63 to i64, !dbg !4328
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_nchannels, i64 0, i64 %idxprom79, !dbg !4328
  %64 = load i32, i32* %arrayidx80, align 4, !dbg !4328
  %add81 = add nsw i32 %62, %64, !dbg !4329
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %xbr_nsubbands, i32 0, i32 0, !dbg !4330
  %65 = load i32, i32* %xbr_transition_mode, align 4, !dbg !4331
  %66 = load i32, i32* %sf, align 4, !dbg !4332
  %call82 = call i32 @parse_xbr_subframe(%struct.DCACoreDecoder* %60, i32 %61, i32 %add81, i32* %arraydecay, i32 %65, i32 %66, i32* %sub_pos), !dbg !4333
  store i32 %call82, i32* %ret, align 4, !dbg !4334
  %cmp83 = icmp slt i32 %call82, 0, !dbg !4335
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !4336

if.then84:                                        ; preds = %for.body78
  %67 = load i32, i32* %ret, align 4, !dbg !4337
  store i32 %67, i32* %retval, align 4, !dbg !4338
  br label %return, !dbg !4338

if.end85:                                         ; preds = %for.body78
  br label %for.inc86, !dbg !4339

for.inc86:                                        ; preds = %if.end85
  %68 = load i32, i32* %sf, align 4, !dbg !4340
  %inc87 = add nsw i32 %68, 1, !dbg !4340
  store i32 %inc87, i32* %sf, align 4, !dbg !4340
  br label %for.cond76, !dbg !4342, !llvm.loop !4343

for.end88:                                        ; preds = %for.cond76
  br label %if.end89, !dbg !4345

if.end89:                                         ; preds = %for.end88, %for.body68
  %69 = load i32, i32* %i, align 4, !dbg !4346
  %idxprom90 = sext i32 %69 to i64, !dbg !4347
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_nchannels, i64 0, i64 %idxprom90, !dbg !4347
  %70 = load i32, i32* %arrayidx91, align 4, !dbg !4347
  %71 = load i32, i32* %xbr_base_ch, align 4, !dbg !4348
  %add92 = add nsw i32 %71, %70, !dbg !4348
  store i32 %add92, i32* %xbr_base_ch, align 4, !dbg !4348
  %72 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4349
  %gb93 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %72, i32 0, i32 1, !dbg !4351
  %73 = load i32, i32* %header_pos, align 4, !dbg !4352
  %74 = load i32, i32* %i, align 4, !dbg !4353
  %idxprom94 = sext i32 %74 to i64, !dbg !4354
  %arrayidx95 = getelementptr inbounds [4 x i32], [4 x i32]* %xbr_frame_size, i64 0, i64 %idxprom94, !dbg !4354
  %75 = load i32, i32* %arrayidx95, align 4, !dbg !4354
  %mul96 = mul nsw i32 %75, 8, !dbg !4355
  %add97 = add nsw i32 %73, %mul96, !dbg !4356
  %call98 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb93, i32 %add97), !dbg !4357
  %tobool99 = icmp ne i32 %call98, 0, !dbg !4357
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !4358

if.then100:                                       ; preds = %if.end89
  %76 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4359
  %avctx101 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %76, i32 0, i32 0, !dbg !4361
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx101, align 32, !dbg !4361
  %78 = bitcast %struct.AVCodecContext* %77 to i8*, !dbg !4359
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i32 0, i32 0)), !dbg !4362
  store i32 -1094995529, i32* %retval, align 4, !dbg !4363
  br label %return, !dbg !4363

if.end102:                                        ; preds = %if.end89
  br label %for.inc103, !dbg !4364

for.inc103:                                       ; preds = %if.end102
  %79 = load i32, i32* %i, align 4, !dbg !4365
  %inc104 = add nsw i32 %79, 1, !dbg !4365
  store i32 %inc104, i32* %i, align 4, !dbg !4365
  br label %for.cond66, !dbg !4367, !llvm.loop !4368

for.end105:                                       ; preds = %for.cond66
  store i32 0, i32* %retval, align 4, !dbg !4370
  br label %return, !dbg !4370

return:                                           ; preds = %for.end105, %if.then100, %if.then84, %if.then63, %if.then46, %if.then10, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !4371
  ret i32 %80, !dbg !4371
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_frame_exss(%struct.DCACoreDecoder* %s) #0 !dbg !4372 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %x96_frame_size = alloca [4 x i32], align 16
  %x96_nchannels = alloca [4 x i32], align 16
  %x96_nchsets = alloca i32, align 4
  %x96_base_ch = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header_pos = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4373, metadata !2194), !dbg !4374
  call void @llvm.dbg.declare(metadata [4 x i32]* %x96_frame_size, metadata !4375, metadata !2194), !dbg !4376
  call void @llvm.dbg.declare(metadata [4 x i32]* %x96_nchannels, metadata !4377, metadata !2194), !dbg !4378
  call void @llvm.dbg.declare(metadata i32* %x96_nchsets, metadata !4379, metadata !2194), !dbg !4380
  call void @llvm.dbg.declare(metadata i32* %x96_base_ch, metadata !4381, metadata !2194), !dbg !4382
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4383, metadata !2194), !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4385, metadata !2194), !dbg !4386
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !4387, metadata !2194), !dbg !4388
  call void @llvm.dbg.declare(metadata i32* %header_pos, metadata !4389, metadata !2194), !dbg !4390
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4391
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !4392
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !4393
  store i32 %call, i32* %header_pos, align 4, !dbg !4390
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4394
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !4396
  %call2 = call i32 @get_bits_long(%struct.GetBitContext* %gb1, i32 32), !dbg !4397
  %cmp = icmp ne i32 %call2, 496366178, !dbg !4398
  br i1 %cmp, label %if.then, label %if.end, !dbg !4399

if.then:                                          ; preds = %entry
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4400
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 0, !dbg !4402
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4402
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !4400
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i32 0, i32 0)), !dbg !4403
  store i32 -1094995529, i32* %retval, align 4, !dbg !4404
  br label %return, !dbg !4404

if.end:                                           ; preds = %entry
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4405
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 1, !dbg !4406
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 6), !dbg !4407
  %add = add i32 %call4, 1, !dbg !4408
  store i32 %add, i32* %header_size, align 4, !dbg !4409
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4410
  %avctx5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 0, !dbg !4412
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 32, !dbg !4412
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4413
  %gb6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 1, !dbg !4414
  %9 = load i32, i32* %header_pos, align 4, !dbg !4415
  %add7 = add nsw i32 %9, 32, !dbg !4416
  %10 = load i32, i32* %header_pos, align 4, !dbg !4417
  %11 = load i32, i32* %header_size, align 4, !dbg !4418
  %mul = mul nsw i32 %11, 8, !dbg !4419
  %add8 = add nsw i32 %10, %mul, !dbg !4420
  %call9 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %7, %struct.GetBitContext* %gb6, i32 %add7, i32 %add8), !dbg !4421
  %tobool = icmp ne i32 %call9, 0, !dbg !4421
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !4422

if.then10:                                        ; preds = %if.end
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4423
  %avctx11 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !4425
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 32, !dbg !4425
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4423
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.58, i32 0, i32 0)), !dbg !4426
  store i32 -1094995529, i32* %retval, align 4, !dbg !4427
  br label %return, !dbg !4427

if.end12:                                         ; preds = %if.end
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4428
  %gb13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 1, !dbg !4429
  %call14 = call i32 @get_bits(%struct.GetBitContext* %gb13, i32 4), !dbg !4430
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4431
  %x96_rev_no = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 55, !dbg !4432
  store i32 %call14, i32* %x96_rev_no, align 4, !dbg !4433
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4434
  %x96_rev_no15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 55, !dbg !4436
  %18 = load i32, i32* %x96_rev_no15, align 4, !dbg !4436
  %cmp16 = icmp slt i32 %18, 1, !dbg !4437
  br i1 %cmp16, label %if.then19, label %lor.lhs.false, !dbg !4438

lor.lhs.false:                                    ; preds = %if.end12
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4439
  %x96_rev_no17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 55, !dbg !4441
  %20 = load i32, i32* %x96_rev_no17, align 4, !dbg !4441
  %cmp18 = icmp sgt i32 %20, 8, !dbg !4442
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !4443

if.then19:                                        ; preds = %lor.lhs.false, %if.end12
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4444
  %avctx20 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 0, !dbg !4446
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 32, !dbg !4446
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !4444
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4447
  %x96_rev_no21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 55, !dbg !4448
  %25 = load i32, i32* %x96_rev_no21, align 4, !dbg !4448
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i32 0, i32 0), i32 %25), !dbg !4449
  store i32 -1094995529, i32* %retval, align 4, !dbg !4450
  br label %return, !dbg !4450

if.end22:                                         ; preds = %lor.lhs.false
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4451
  %gb23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 1, !dbg !4452
  %call24 = call i32 @get_bits1(%struct.GetBitContext* %gb23), !dbg !4453
  %27 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4454
  %x96_crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %27, i32 0, i32 56, !dbg !4455
  store i32 %call24, i32* %x96_crc_present, align 8, !dbg !4456
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4457
  %gb25 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %28, i32 0, i32 1, !dbg !4458
  %call26 = call i32 @get_bits(%struct.GetBitContext* %gb25, i32 2), !dbg !4459
  %add27 = add i32 %call26, 1, !dbg !4460
  store i32 %add27, i32* %x96_nchsets, align 4, !dbg !4461
  store i32 0, i32* %i, align 4, !dbg !4462
  br label %for.cond, !dbg !4464

for.cond:                                         ; preds = %for.inc, %if.end22
  %29 = load i32, i32* %i, align 4, !dbg !4465
  %30 = load i32, i32* %x96_nchsets, align 4, !dbg !4468
  %cmp28 = icmp slt i32 %29, %30, !dbg !4469
  br i1 %cmp28, label %for.body, label %for.end, !dbg !4470

for.body:                                         ; preds = %for.cond
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4471
  %gb29 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 1, !dbg !4472
  %call30 = call i32 @get_bits(%struct.GetBitContext* %gb29, i32 12), !dbg !4473
  %add31 = add i32 %call30, 1, !dbg !4474
  %32 = load i32, i32* %i, align 4, !dbg !4475
  %idxprom = sext i32 %32 to i64, !dbg !4476
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %x96_frame_size, i64 0, i64 %idxprom, !dbg !4476
  store i32 %add31, i32* %arrayidx, align 4, !dbg !4477
  br label %for.inc, !dbg !4476

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !4478
  %inc = add nsw i32 %33, 1, !dbg !4478
  store i32 %inc, i32* %i, align 4, !dbg !4478
  br label %for.cond, !dbg !4480, !llvm.loop !4481

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4483
  br label %for.cond32, !dbg !4485

for.cond32:                                       ; preds = %for.inc40, %for.end
  %34 = load i32, i32* %i, align 4, !dbg !4486
  %35 = load i32, i32* %x96_nchsets, align 4, !dbg !4489
  %cmp33 = icmp slt i32 %34, %35, !dbg !4490
  br i1 %cmp33, label %for.body34, label %for.end42, !dbg !4491

for.body34:                                       ; preds = %for.cond32
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4492
  %gb35 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 1, !dbg !4493
  %call36 = call i32 @get_bits(%struct.GetBitContext* %gb35, i32 3), !dbg !4494
  %add37 = add i32 %call36, 1, !dbg !4495
  %37 = load i32, i32* %i, align 4, !dbg !4496
  %idxprom38 = sext i32 %37 to i64, !dbg !4497
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %x96_nchannels, i64 0, i64 %idxprom38, !dbg !4497
  store i32 %add37, i32* %arrayidx39, align 4, !dbg !4498
  br label %for.inc40, !dbg !4497

for.inc40:                                        ; preds = %for.body34
  %38 = load i32, i32* %i, align 4, !dbg !4499
  %inc41 = add nsw i32 %38, 1, !dbg !4499
  store i32 %inc41, i32* %i, align 4, !dbg !4499
  br label %for.cond32, !dbg !4501, !llvm.loop !4502

for.end42:                                        ; preds = %for.cond32
  %39 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4504
  %gb43 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %39, i32 0, i32 1, !dbg !4506
  %40 = load i32, i32* %header_pos, align 4, !dbg !4507
  %41 = load i32, i32* %header_size, align 4, !dbg !4508
  %mul44 = mul nsw i32 %41, 8, !dbg !4509
  %add45 = add nsw i32 %40, %mul44, !dbg !4510
  %call46 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb43, i32 %add45), !dbg !4511
  %tobool47 = icmp ne i32 %call46, 0, !dbg !4511
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !4512

if.then48:                                        ; preds = %for.end42
  %42 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4513
  %avctx49 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %42, i32 0, i32 0, !dbg !4515
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx49, align 32, !dbg !4515
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !4513
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.60, i32 0, i32 0)), !dbg !4516
  store i32 -1094995529, i32* %retval, align 4, !dbg !4517
  br label %return, !dbg !4517

if.end50:                                         ; preds = %for.end42
  %45 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4518
  %call51 = call i32 @alloc_x96_sample_buffer(%struct.DCACoreDecoder* %45), !dbg !4520
  store i32 %call51, i32* %ret, align 4, !dbg !4521
  %cmp52 = icmp slt i32 %call51, 0, !dbg !4522
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !4523

if.then53:                                        ; preds = %if.end50
  %46 = load i32, i32* %ret, align 4, !dbg !4524
  store i32 %46, i32* %retval, align 4, !dbg !4525
  br label %return, !dbg !4525

if.end54:                                         ; preds = %if.end50
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4526
  %x96_nchannels55 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 57, !dbg !4527
  store i32 0, i32* %x96_nchannels55, align 4, !dbg !4528
  store i32 0, i32* %i, align 4, !dbg !4529
  store i32 0, i32* %x96_base_ch, align 4, !dbg !4531
  br label %for.cond56, !dbg !4532

for.cond56:                                       ; preds = %for.inc88, %if.end54
  %48 = load i32, i32* %i, align 4, !dbg !4533
  %49 = load i32, i32* %x96_nchsets, align 4, !dbg !4536
  %cmp57 = icmp slt i32 %48, %49, !dbg !4537
  br i1 %cmp57, label %for.body58, label %for.end90, !dbg !4538

for.body58:                                       ; preds = %for.cond56
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4539
  %gb59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 1, !dbg !4541
  %call60 = call i32 @get_bits_count(%struct.GetBitContext* %gb59), !dbg !4542
  store i32 %call60, i32* %header_pos, align 4, !dbg !4543
  %51 = load i32, i32* %x96_base_ch, align 4, !dbg !4544
  %52 = load i32, i32* %i, align 4, !dbg !4546
  %idxprom61 = sext i32 %52 to i64, !dbg !4547
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %x96_nchannels, i64 0, i64 %idxprom61, !dbg !4547
  %53 = load i32, i32* %arrayidx62, align 4, !dbg !4547
  %add63 = add nsw i32 %51, %53, !dbg !4548
  %54 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4549
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %54, i32 0, i32 23, !dbg !4550
  %55 = load i32, i32* %nchannels, align 8, !dbg !4550
  %cmp64 = icmp sle i32 %add63, %55, !dbg !4551
  br i1 %cmp64, label %if.then65, label %if.end74, !dbg !4552

if.then65:                                        ; preds = %for.body58
  %56 = load i32, i32* %x96_base_ch, align 4, !dbg !4553
  %57 = load i32, i32* %i, align 4, !dbg !4555
  %idxprom66 = sext i32 %57 to i64, !dbg !4556
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %x96_nchannels, i64 0, i64 %idxprom66, !dbg !4556
  %58 = load i32, i32* %arrayidx67, align 4, !dbg !4556
  %add68 = add nsw i32 %56, %58, !dbg !4557
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4558
  %x96_nchannels69 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 57, !dbg !4559
  store i32 %add68, i32* %x96_nchannels69, align 4, !dbg !4560
  %60 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4561
  %61 = load i32, i32* %x96_base_ch, align 4, !dbg !4563
  %call70 = call i32 @parse_x96_frame_data(%struct.DCACoreDecoder* %60, i32 1, i32 %61), !dbg !4564
  store i32 %call70, i32* %ret, align 4, !dbg !4565
  %cmp71 = icmp slt i32 %call70, 0, !dbg !4566
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !4567

if.then72:                                        ; preds = %if.then65
  %62 = load i32, i32* %ret, align 4, !dbg !4568
  store i32 %62, i32* %retval, align 4, !dbg !4569
  br label %return, !dbg !4569

if.end73:                                         ; preds = %if.then65
  br label %if.end74, !dbg !4570

if.end74:                                         ; preds = %if.end73, %for.body58
  %63 = load i32, i32* %i, align 4, !dbg !4571
  %idxprom75 = sext i32 %63 to i64, !dbg !4572
  %arrayidx76 = getelementptr inbounds [4 x i32], [4 x i32]* %x96_nchannels, i64 0, i64 %idxprom75, !dbg !4572
  %64 = load i32, i32* %arrayidx76, align 4, !dbg !4572
  %65 = load i32, i32* %x96_base_ch, align 4, !dbg !4573
  %add77 = add nsw i32 %65, %64, !dbg !4573
  store i32 %add77, i32* %x96_base_ch, align 4, !dbg !4573
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4574
  %gb78 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %66, i32 0, i32 1, !dbg !4576
  %67 = load i32, i32* %header_pos, align 4, !dbg !4577
  %68 = load i32, i32* %i, align 4, !dbg !4578
  %idxprom79 = sext i32 %68 to i64, !dbg !4579
  %arrayidx80 = getelementptr inbounds [4 x i32], [4 x i32]* %x96_frame_size, i64 0, i64 %idxprom79, !dbg !4579
  %69 = load i32, i32* %arrayidx80, align 4, !dbg !4579
  %mul81 = mul nsw i32 %69, 8, !dbg !4580
  %add82 = add nsw i32 %67, %mul81, !dbg !4581
  %call83 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb78, i32 %add82), !dbg !4582
  %tobool84 = icmp ne i32 %call83, 0, !dbg !4582
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !4583

if.then85:                                        ; preds = %if.end74
  %70 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4584
  %avctx86 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %70, i32 0, i32 0, !dbg !4586
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx86, align 32, !dbg !4586
  %72 = bitcast %struct.AVCodecContext* %71 to i8*, !dbg !4584
  call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i32 0, i32 0)), !dbg !4587
  store i32 -1094995529, i32* %retval, align 4, !dbg !4588
  br label %return, !dbg !4588

if.end87:                                         ; preds = %if.end74
  br label %for.inc88, !dbg !4589

for.inc88:                                        ; preds = %if.end87
  %73 = load i32, i32* %i, align 4, !dbg !4590
  %inc89 = add nsw i32 %73, 1, !dbg !4590
  store i32 %inc89, i32* %i, align 4, !dbg !4590
  br label %for.cond56, !dbg !4592, !llvm.loop !4593

for.end90:                                        ; preds = %for.cond56
  store i32 0, i32* %retval, align 4, !dbg !4595
  br label %return, !dbg !4595

return:                                           ; preds = %for.end90, %if.then85, %if.then72, %if.then53, %if.then48, %if.then19, %if.then10, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !4596
  ret i32 %74, !dbg !4596
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_frame(%struct.DCACoreDecoder* %s) #0 !dbg !4597 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %ret = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4598, metadata !2194), !dbg !4599
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4600, metadata !2194), !dbg !4601
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4602
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !4603
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !4604
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4605
  %x96_rev_no = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 55, !dbg !4606
  store i32 %call, i32* %x96_rev_no, align 4, !dbg !4607
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4608
  %x96_rev_no1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 55, !dbg !4610
  %3 = load i32, i32* %x96_rev_no1, align 4, !dbg !4610
  %cmp = icmp slt i32 %3, 1, !dbg !4611
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4612

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4613
  %x96_rev_no2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 55, !dbg !4615
  %5 = load i32, i32* %x96_rev_no2, align 4, !dbg !4615
  %cmp3 = icmp sgt i32 %5, 8, !dbg !4616
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4617

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4618
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 0, !dbg !4620
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4620
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !4618
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4621
  %x96_rev_no4 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 55, !dbg !4622
  %10 = load i32, i32* %x96_rev_no4, align 4, !dbg !4622
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i32 0, i32 0), i32 %10), !dbg !4623
  store i32 -1094995529, i32* %retval, align 4, !dbg !4624
  br label %return, !dbg !4624

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4625
  %x96_crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 56, !dbg !4626
  store i32 0, i32* %x96_crc_present, align 8, !dbg !4627
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4628
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 23, !dbg !4629
  %13 = load i32, i32* %nchannels, align 8, !dbg !4629
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4630
  %x96_nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 57, !dbg !4631
  store i32 %13, i32* %x96_nchannels, align 4, !dbg !4632
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4633
  %call5 = call i32 @alloc_x96_sample_buffer(%struct.DCACoreDecoder* %15), !dbg !4635
  store i32 %call5, i32* %ret, align 4, !dbg !4636
  %cmp6 = icmp slt i32 %call5, 0, !dbg !4637
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4638

if.then7:                                         ; preds = %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !4639
  store i32 %16, i32* %retval, align 4, !dbg !4640
  br label %return, !dbg !4640

if.end8:                                          ; preds = %if.end
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4641
  %call9 = call i32 @parse_x96_frame_data(%struct.DCACoreDecoder* %17, i32 0, i32 0), !dbg !4643
  store i32 %call9, i32* %ret, align 4, !dbg !4644
  %cmp10 = icmp slt i32 %call9, 0, !dbg !4645
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4646

if.then11:                                        ; preds = %if.end8
  %18 = load i32, i32* %ret, align 4, !dbg !4647
  store i32 %18, i32* %retval, align 4, !dbg !4648
  br label %return, !dbg !4648

if.end12:                                         ; preds = %if.end8
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4649
  %gb13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 1, !dbg !4651
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4652
  %frame_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 5, !dbg !4653
  %21 = load i32, i32* %frame_size, align 16, !dbg !4653
  %mul = mul nsw i32 %21, 8, !dbg !4654
  %call14 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb13, i32 %mul), !dbg !4655
  %tobool = icmp ne i32 %call14, 0, !dbg !4655
  br i1 %tobool, label %if.then15, label %if.end17, !dbg !4656

if.then15:                                        ; preds = %if.end12
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4657
  %avctx16 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 0, !dbg !4659
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx16, align 32, !dbg !4659
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !4657
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i32 0, i32 0)), !dbg !4660
  store i32 -1094995529, i32* %retval, align 4, !dbg !4661
  br label %return, !dbg !4661

if.end17:                                         ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !4662
  br label %return, !dbg !4662

return:                                           ; preds = %if.end17, %if.then15, %if.then11, %if.then7, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !4663
  ret i32 %25, !dbg !4663
}

; Function Attrs: nounwind uwtable
define i32 @ff_dca_core_filter_fixed(%struct.DCACoreDecoder* %s, i32 %x96_synth) #0 !dbg !4664 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4667, metadata !2194), !dbg !4671
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %x96_synth.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %spkr = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %x96_nchannels = alloca i32, align 4
  %filter_coeff = alloca i32*, align 8
  %ptr = alloca i32*, align 8
  %samples = alloca i32*, align 8
  %nlfesamples = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4673, metadata !2194), !dbg !4674
  store i32 %x96_synth, i32* %x96_synth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x96_synth.addr, metadata !4675, metadata !2194), !dbg !4676
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4677, metadata !2194), !dbg !4678
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4679, metadata !2194), !dbg !4680
  call void @llvm.dbg.declare(metadata i32* %spkr, metadata !4681, metadata !2194), !dbg !4682
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !4683, metadata !2194), !dbg !4684
  call void @llvm.dbg.declare(metadata i32* %x96_nchannels, metadata !4685, metadata !2194), !dbg !4686
  store i32 0, i32* %x96_nchannels, align 4, !dbg !4686
  call void @llvm.dbg.declare(metadata i32** %filter_coeff, metadata !4687, metadata !2194), !dbg !4688
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !4689, metadata !2194), !dbg !4690
  %0 = load i32, i32* %x96_synth.addr, align 4, !dbg !4691
  %tobool = icmp ne i32 %0, 0, !dbg !4691
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4693

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4694
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 44, !dbg !4696
  %2 = load i32, i32* %ext_audio_mask, align 8, !dbg !4696
  %and = and i32 %2, 132, !dbg !4697
  %tobool1 = icmp ne i32 %and, 0, !dbg !4697
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4698

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4699
  %x96_nchannels2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 57, !dbg !4701
  %4 = load i32, i32* %x96_nchannels2, align 4, !dbg !4701
  store i32 %4, i32* %x96_nchannels, align 4, !dbg !4702
  store i32 1, i32* %x96_synth.addr, align 4, !dbg !4703
  br label %if.end, !dbg !4704

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %x96_synth.addr, align 4, !dbg !4705
  %cmp = icmp slt i32 %5, 0, !dbg !4707
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4708

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %x96_synth.addr, align 4, !dbg !4709
  br label %if.end4, !dbg !4710

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4711
  %sample_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 7, !dbg !4712
  %7 = load i32, i32* %sample_rate, align 8, !dbg !4712
  %8 = load i32, i32* %x96_synth.addr, align 4, !dbg !4713
  %shl = shl i32 %7, %8, !dbg !4714
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4715
  %output_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 85, !dbg !4716
  store i32 %shl, i32* %output_rate, align 8, !dbg !4717
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4718
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 4, !dbg !4719
  %11 = load i32, i32* %npcmblocks, align 4, !dbg !4719
  %mul = mul nsw i32 %11, 32, !dbg !4720
  %12 = load i32, i32* %x96_synth.addr, align 4, !dbg !4721
  %shl5 = shl i32 %mul, %12, !dbg !4722
  store i32 %shl5, i32* %nsamples, align 4, !dbg !4723
  %13 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4724
  %npcmsamples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %13, i32 0, i32 84, !dbg !4725
  store i32 %shl5, i32* %npcmsamples, align 4, !dbg !4726
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4727
  %output_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 78, !dbg !4728
  %15 = bitcast i8** %output_buffer to i8*, !dbg !4729
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4730
  %output_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 77, !dbg !4731
  %17 = load i32, i32* %nsamples, align 4, !dbg !4732
  %18 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4733
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %18, i32 0, i32 24, !dbg !4734
  %19 = load i32, i32* %ch_mask, align 4, !dbg !4734
  store i32 %19, i32* %x.addr.i, align 4, !dbg !4735
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !4736
  %shr.i = lshr i32 %20, 1, !dbg !4737
  %and.i = and i32 %shr.i, 1431655765, !dbg !4738
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !4739
  %sub.i = sub i32 %21, %and.i, !dbg !4739
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !4739
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !4740
  %and1.i = and i32 %22, 858993459, !dbg !4741
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !4742
  %shr2.i = lshr i32 %23, 2, !dbg !4743
  %and3.i = and i32 %shr2.i, 858993459, !dbg !4744
  %add.i = add i32 %and1.i, %and3.i, !dbg !4745
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !4746
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !4747
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !4748
  %shr4.i = lshr i32 %25, 4, !dbg !4749
  %add5.i = add i32 %24, %shr4.i, !dbg !4750
  %and6.i = and i32 %add5.i, 252645135, !dbg !4751
  store i32 %and6.i, i32* %x.addr.i, align 4, !dbg !4752
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !4753
  %shr7.i = lshr i32 %26, 8, !dbg !4754
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !4755
  %add8.i = add i32 %27, %shr7.i, !dbg !4755
  store i32 %add8.i, i32* %x.addr.i, align 4, !dbg !4755
  %28 = load i32, i32* %x.addr.i, align 4, !dbg !4756
  %29 = load i32, i32* %x.addr.i, align 4, !dbg !4757
  %shr9.i = lshr i32 %29, 16, !dbg !4758
  %add10.i = add i32 %28, %shr9.i, !dbg !4759
  %and11.i = and i32 %add10.i, 63, !dbg !4760
  %mul6 = mul nsw i32 %17, %and11.i, !dbg !4761
  %conv = sext i32 %mul6 to i64, !dbg !4732
  %mul7 = mul i64 %conv, 4, !dbg !4762
  call void @av_fast_malloc(i8* %15, i32* %output_size, i64 %mul7), !dbg !4763
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4764
  %output_buffer8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 78, !dbg !4766
  %31 = load i8*, i8** %output_buffer8, align 16, !dbg !4766
  %tobool9 = icmp ne i8* %31, null, !dbg !4764
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !4767

if.then10:                                        ; preds = %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !4768
  br label %return, !dbg !4768

if.end11:                                         ; preds = %if.end4
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4769
  %output_buffer12 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 78, !dbg !4770
  %33 = load i8*, i8** %output_buffer12, align 16, !dbg !4770
  %34 = bitcast i8* %33 to i32*, !dbg !4771
  store i32* %34, i32** %ptr, align 8, !dbg !4772
  store i32 0, i32* %spkr, align 4, !dbg !4773
  br label %for.cond, !dbg !4775

for.cond:                                         ; preds = %for.inc, %if.end11
  %35 = load i32, i32* %spkr, align 4, !dbg !4776
  %cmp13 = icmp slt i32 %35, 32, !dbg !4779
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4780

for.body:                                         ; preds = %for.cond
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4781
  %ch_mask15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 24, !dbg !4784
  %37 = load i32, i32* %ch_mask15, align 4, !dbg !4784
  %38 = load i32, i32* %spkr, align 4, !dbg !4785
  %shl16 = shl i32 1, %38, !dbg !4786
  %and17 = and i32 %37, %shl16, !dbg !4787
  %tobool18 = icmp ne i32 %and17, 0, !dbg !4787
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !4788

if.then19:                                        ; preds = %for.body
  %39 = load i32*, i32** %ptr, align 8, !dbg !4789
  %40 = load i32, i32* %spkr, align 4, !dbg !4791
  %idxprom = sext i32 %40 to i64, !dbg !4792
  %41 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4792
  %output_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %41, i32 0, i32 79, !dbg !4793
  %arrayidx = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples, i64 0, i64 %idxprom, !dbg !4792
  store i32* %39, i32** %arrayidx, align 8, !dbg !4794
  %42 = load i32, i32* %nsamples, align 4, !dbg !4795
  %43 = load i32*, i32** %ptr, align 8, !dbg !4796
  %idx.ext = sext i32 %42 to i64, !dbg !4796
  %add.ptr = getelementptr inbounds i32, i32* %43, i64 %idx.ext, !dbg !4796
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !4796
  br label %if.end23, !dbg !4797

if.else:                                          ; preds = %for.body
  %44 = load i32, i32* %spkr, align 4, !dbg !4798
  %idxprom20 = sext i32 %44 to i64, !dbg !4800
  %45 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4800
  %output_samples21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %45, i32 0, i32 79, !dbg !4801
  %arrayidx22 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples21, i64 0, i64 %idxprom20, !dbg !4800
  store i32* null, i32** %arrayidx22, align 8, !dbg !4802
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then19
  br label %for.inc, !dbg !4803

for.inc:                                          ; preds = %if.end23
  %46 = load i32, i32* %spkr, align 4, !dbg !4804
  %inc = add nsw i32 %46, 1, !dbg !4804
  store i32 %inc, i32* %spkr, align 4, !dbg !4804
  br label %for.cond, !dbg !4806, !llvm.loop !4807

for.end:                                          ; preds = %for.cond
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4809
  %48 = load i32, i32* %x96_synth.addr, align 4, !dbg !4810
  %or = or i32 %48, 2, !dbg !4811
  call void @set_filter_mode(%struct.DCACoreDecoder* %47, i32 %or), !dbg !4812
  %49 = load i32, i32* %x96_synth.addr, align 4, !dbg !4813
  %tobool24 = icmp ne i32 %49, 0, !dbg !4813
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !4815

if.then25:                                        ; preds = %for.end
  store i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_dca_fir_64bands_fixed, i32 0, i32 0), i32** %filter_coeff, align 8, !dbg !4816
  br label %if.end31, !dbg !4817

if.else26:                                        ; preds = %for.end
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4818
  %filter_perfect = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 17, !dbg !4820
  %51 = load i32, i32* %filter_perfect, align 32, !dbg !4820
  %tobool27 = icmp ne i32 %51, 0, !dbg !4818
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !4821

if.then28:                                        ; preds = %if.else26
  store i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_dca_fir_32bands_perfect_fixed, i32 0, i32 0), i32** %filter_coeff, align 8, !dbg !4822
  br label %if.end30, !dbg !4823

if.else29:                                        ; preds = %if.else26
  store i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_dca_fir_32bands_nonperfect_fixed, i32 0, i32 0), i32** %filter_coeff, align 8, !dbg !4824
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then28
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then25
  store i32 0, i32* %ch, align 4, !dbg !4825
  br label %for.cond32, !dbg !4827

for.cond32:                                       ; preds = %for.inc67, %if.end31
  %52 = load i32, i32* %ch, align 4, !dbg !4828
  %53 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4831
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %53, i32 0, i32 23, !dbg !4832
  %54 = load i32, i32* %nchannels, align 8, !dbg !4832
  %cmp33 = icmp slt i32 %52, %54, !dbg !4833
  br i1 %cmp33, label %for.body35, label %for.end69, !dbg !4834

for.body35:                                       ; preds = %for.cond32
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4835
  %56 = load i32, i32* %ch, align 4, !dbg !4837
  %call36 = call i32 @map_prm_ch_to_spkr(%struct.DCACoreDecoder* %55, i32 %56), !dbg !4838
  store i32 %call36, i32* %spkr, align 4, !dbg !4839
  %57 = load i32, i32* %spkr, align 4, !dbg !4840
  %cmp37 = icmp slt i32 %57, 0, !dbg !4842
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4843

if.then39:                                        ; preds = %for.body35
  store i32 -22, i32* %retval, align 4, !dbg !4844
  br label %return, !dbg !4844

if.end40:                                         ; preds = %for.body35
  %58 = load i32, i32* %x96_synth.addr, align 4, !dbg !4845
  %idxprom41 = sext i32 %58 to i64, !dbg !4846
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4846
  %dcadsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 71, !dbg !4847
  %60 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 32, !dbg !4847
  %sub_qmf_fixed = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %60, i32 0, i32 7, !dbg !4848
  %arrayidx42 = getelementptr inbounds [2 x void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)*], [2 x void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)*]* %sub_qmf_fixed, i64 0, i64 %idxprom41, !dbg !4846
  %61 = load void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)*, void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)** %arrayidx42, align 8, !dbg !4846
  %62 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4849
  %synth = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %62, i32 0, i32 74, !dbg !4850
  %63 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4851
  %dcadct = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %63, i32 0, i32 72, !dbg !4852
  %64 = load i32, i32* %spkr, align 4, !dbg !4853
  %idxprom43 = sext i32 %64 to i64, !dbg !4854
  %65 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4854
  %output_samples44 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %65, i32 0, i32 79, !dbg !4855
  %arrayidx45 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples44, i64 0, i64 %idxprom43, !dbg !4854
  %66 = load i32*, i32** %arrayidx45, align 8, !dbg !4854
  %67 = load i32, i32* %ch, align 4, !dbg !4856
  %idxprom46 = sext i32 %67 to i64, !dbg !4857
  %68 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4857
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %68, i32 0, i32 67, !dbg !4858
  %arrayidx47 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom46, !dbg !4857
  %arraydecay = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx47, i32 0, i32 0, !dbg !4857
  %69 = load i32, i32* %ch, align 4, !dbg !4859
  %70 = load i32, i32* %x96_nchannels, align 4, !dbg !4860
  %cmp48 = icmp slt i32 %69, %70, !dbg !4861
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !4859

cond.true:                                        ; preds = %if.end40
  %71 = load i32, i32* %ch, align 4, !dbg !4862
  %idxprom50 = sext i32 %71 to i64, !dbg !4864
  %72 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4864
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %72, i32 0, i32 64, !dbg !4865
  %arrayidx51 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom50, !dbg !4864
  %arraydecay52 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx51, i32 0, i32 0, !dbg !4864
  br label %cond.end, !dbg !4866

cond.false:                                       ; preds = %if.end40
  br label %cond.end, !dbg !4867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32** [ %arraydecay52, %cond.true ], [ null, %cond.false ], !dbg !4869
  %73 = load i32, i32* %ch, align 4, !dbg !4871
  %idxprom53 = sext i32 %73 to i64, !dbg !4872
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4872
  %dcadsp_data = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 70, !dbg !4873
  %arrayidx54 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data, i64 0, i64 %idxprom53, !dbg !4872
  %u = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx54, i32 0, i32 0, !dbg !4874
  %fix = bitcast %union.anon* %u to %struct.anon.0*, !dbg !4875
  %hist1 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %fix, i32 0, i32 0, !dbg !4876
  %arraydecay55 = getelementptr inbounds [1024 x i32], [1024 x i32]* %hist1, i32 0, i32 0, !dbg !4872
  %75 = load i32, i32* %ch, align 4, !dbg !4877
  %idxprom56 = sext i32 %75 to i64, !dbg !4878
  %76 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4878
  %dcadsp_data57 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %76, i32 0, i32 70, !dbg !4879
  %arrayidx58 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data57, i64 0, i64 %idxprom56, !dbg !4878
  %offset = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx58, i32 0, i32 1, !dbg !4880
  %77 = load i32, i32* %ch, align 4, !dbg !4881
  %idxprom59 = sext i32 %77 to i64, !dbg !4882
  %78 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4882
  %dcadsp_data60 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %78, i32 0, i32 70, !dbg !4883
  %arrayidx61 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data60, i64 0, i64 %idxprom59, !dbg !4882
  %u62 = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx61, i32 0, i32 0, !dbg !4884
  %fix63 = bitcast %union.anon* %u62 to %struct.anon.0*, !dbg !4885
  %hist2 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %fix63, i32 0, i32 1, !dbg !4886
  %arraydecay64 = getelementptr inbounds [64 x i32], [64 x i32]* %hist2, i32 0, i32 0, !dbg !4882
  %79 = load i32*, i32** %filter_coeff, align 8, !dbg !4887
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4888
  %npcmblocks65 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 4, !dbg !4889
  %81 = load i32, i32* %npcmblocks65, align 4, !dbg !4889
  %conv66 = sext i32 %81 to i64, !dbg !4888
  call void %61(%struct.SynthFilterContext* %synth, %struct.DCADCTContext* %dcadct, i32* %66, i32** %arraydecay, i32** %cond, i32* %arraydecay55, i32* %offset, i32* %arraydecay64, i32* %79, i64 %conv66), !dbg !4890
  br label %for.inc67, !dbg !4891

for.inc67:                                        ; preds = %cond.end
  %82 = load i32, i32* %ch, align 4, !dbg !4892
  %inc68 = add nsw i32 %82, 1, !dbg !4892
  store i32 %inc68, i32* %ch, align 4, !dbg !4892
  br label %for.cond32, !dbg !4894, !llvm.loop !4895

for.end69:                                        ; preds = %for.cond32
  %83 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4897
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %83, i32 0, i32 15, !dbg !4899
  %84 = load i32, i32* %lfe_present, align 8, !dbg !4899
  %tobool70 = icmp ne i32 %84, 0, !dbg !4897
  br i1 %tobool70, label %if.then71, label %if.end109, !dbg !4900

if.then71:                                        ; preds = %for.end69
  call void @llvm.dbg.declare(metadata i32** %samples, metadata !4901, metadata !2194), !dbg !4903
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4904
  %output_samples72 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %85, i32 0, i32 79, !dbg !4905
  %arrayidx73 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples72, i64 0, i64 5, !dbg !4904
  %86 = load i32*, i32** %arrayidx73, align 8, !dbg !4904
  store i32* %86, i32** %samples, align 8, !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %nlfesamples, metadata !4906, metadata !2194), !dbg !4907
  %87 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4908
  %npcmblocks74 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %87, i32 0, i32 4, !dbg !4909
  %88 = load i32, i32* %npcmblocks74, align 4, !dbg !4909
  %shr = ashr i32 %88, 1, !dbg !4910
  store i32 %shr, i32* %nlfesamples, align 4, !dbg !4907
  %89 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4911
  %lfe_present75 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %89, i32 0, i32 15, !dbg !4913
  %90 = load i32, i32* %lfe_present75, align 8, !dbg !4913
  %cmp76 = icmp eq i32 %90, 1, !dbg !4914
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !4915

if.then78:                                        ; preds = %if.then71
  %91 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4916
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %91, i32 0, i32 0, !dbg !4918
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4918
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !4916
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i32 0, i32 0)), !dbg !4919
  store i32 -22, i32* %retval, align 4, !dbg !4920
  br label %return, !dbg !4920

if.end79:                                         ; preds = %if.then71
  %94 = load i32, i32* %x96_synth.addr, align 4, !dbg !4921
  %tobool80 = icmp ne i32 %94, 0, !dbg !4921
  br i1 %tobool80, label %if.then81, label %if.end84, !dbg !4923

if.then81:                                        ; preds = %if.end79
  %95 = load i32, i32* %nsamples, align 4, !dbg !4924
  %div = sdiv i32 %95, 2, !dbg !4925
  %96 = load i32*, i32** %samples, align 8, !dbg !4926
  %idx.ext82 = sext i32 %div to i64, !dbg !4926
  %add.ptr83 = getelementptr inbounds i32, i32* %96, i64 %idx.ext82, !dbg !4926
  store i32* %add.ptr83, i32** %samples, align 8, !dbg !4926
  br label %if.end84, !dbg !4927

if.end84:                                         ; preds = %if.then81, %if.end79
  %97 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4928
  %dcadsp85 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %97, i32 0, i32 71, !dbg !4929
  %98 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp85, align 32, !dbg !4929
  %lfe_fir_fixed = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %98, i32 0, i32 5, !dbg !4930
  %99 = load void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32*, i64)** %lfe_fir_fixed, align 8, !dbg !4930
  %100 = load i32*, i32** %samples, align 8, !dbg !4931
  %101 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4932
  %lfe_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %101, i32 0, i32 68, !dbg !4933
  %102 = load i32*, i32** %lfe_samples, align 32, !dbg !4933
  %add.ptr86 = getelementptr inbounds i32, i32* %102, i64 8, !dbg !4934
  %103 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4935
  %npcmblocks87 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %103, i32 0, i32 4, !dbg !4936
  %104 = load i32, i32* %npcmblocks87, align 4, !dbg !4936
  %conv88 = sext i32 %104 to i64, !dbg !4935
  call void %99(i32* %100, i32* %add.ptr86, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_dca_lfe_fir_64_fixed, i32 0, i32 0), i64 %conv88), !dbg !4928
  %105 = load i32, i32* %x96_synth.addr, align 4, !dbg !4937
  %tobool89 = icmp ne i32 %105, 0, !dbg !4937
  br i1 %tobool89, label %if.then90, label %if.end96, !dbg !4939

if.then90:                                        ; preds = %if.end84
  %106 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4940
  %dcadsp91 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %106, i32 0, i32 71, !dbg !4942
  %107 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp91, align 32, !dbg !4942
  %lfe_x96_fixed = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %107, i32 0, i32 6, !dbg !4943
  %108 = load void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32*, i64)** %lfe_x96_fixed, align 8, !dbg !4943
  %109 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4944
  %output_samples92 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %109, i32 0, i32 79, !dbg !4945
  %arrayidx93 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples92, i64 0, i64 5, !dbg !4944
  %110 = load i32*, i32** %arrayidx93, align 8, !dbg !4944
  %111 = load i32*, i32** %samples, align 8, !dbg !4946
  %112 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4947
  %output_history_lfe_fixed = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %112, i32 0, i32 80, !dbg !4948
  %113 = load i32, i32* %nsamples, align 4, !dbg !4949
  %div94 = sdiv i32 %113, 2, !dbg !4950
  %conv95 = sext i32 %div94 to i64, !dbg !4949
  call void %108(i32* %110, i32* %111, i32* %output_history_lfe_fixed, i64 %conv95), !dbg !4940
  br label %if.end96, !dbg !4951

if.end96:                                         ; preds = %if.then90, %if.end84
  store i32 7, i32* %n, align 4, !dbg !4952
  br label %for.cond97, !dbg !4954

for.cond97:                                       ; preds = %for.inc107, %if.end96
  %114 = load i32, i32* %n, align 4, !dbg !4955
  %cmp98 = icmp sge i32 %114, 0, !dbg !4958
  br i1 %cmp98, label %for.body100, label %for.end108, !dbg !4959

for.body100:                                      ; preds = %for.cond97
  %115 = load i32, i32* %nlfesamples, align 4, !dbg !4960
  %116 = load i32, i32* %n, align 4, !dbg !4961
  %add = add nsw i32 %115, %116, !dbg !4962
  %idxprom101 = sext i32 %add to i64, !dbg !4963
  %117 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4963
  %lfe_samples102 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %117, i32 0, i32 68, !dbg !4964
  %118 = load i32*, i32** %lfe_samples102, align 32, !dbg !4964
  %arrayidx103 = getelementptr inbounds i32, i32* %118, i64 %idxprom101, !dbg !4963
  %119 = load i32, i32* %arrayidx103, align 4, !dbg !4963
  %120 = load i32, i32* %n, align 4, !dbg !4965
  %idxprom104 = sext i32 %120 to i64, !dbg !4966
  %121 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4966
  %lfe_samples105 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %121, i32 0, i32 68, !dbg !4967
  %122 = load i32*, i32** %lfe_samples105, align 32, !dbg !4967
  %arrayidx106 = getelementptr inbounds i32, i32* %122, i64 %idxprom104, !dbg !4966
  store i32 %119, i32* %arrayidx106, align 4, !dbg !4968
  br label %for.inc107, !dbg !4966

for.inc107:                                       ; preds = %for.body100
  %123 = load i32, i32* %n, align 4, !dbg !4969
  %dec = add nsw i32 %123, -1, !dbg !4969
  store i32 %dec, i32* %n, align 4, !dbg !4969
  br label %for.cond97, !dbg !4971, !llvm.loop !4972

for.end108:                                       ; preds = %for.cond97
  br label %if.end109, !dbg !4974

if.end109:                                        ; preds = %for.end108, %for.end69
  store i32 0, i32* %retval, align 4, !dbg !4975
  br label %return, !dbg !4975

return:                                           ; preds = %if.end109, %if.then78, %if.then39, %if.then10
  %124 = load i32, i32* %retval, align 4, !dbg !4976
  ret i32 %124, !dbg !4976
}

declare void @av_fast_malloc(i8*, i32*, i64) #4

; Function Attrs: nounwind uwtable
define internal void @set_filter_mode(%struct.DCACoreDecoder* %s, i32 %mode) #0 !dbg !4977 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !4980, metadata !2194), !dbg !4981
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4982, metadata !2194), !dbg !4983
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4984
  %filter_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 86, !dbg !4986
  %1 = load i32, i32* %filter_mode, align 4, !dbg !4986
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4987
  %cmp = icmp ne i32 %1, %2, !dbg !4988
  br i1 %cmp, label %if.then, label %if.end, !dbg !4989

if.then:                                          ; preds = %entry
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4990
  call void @erase_dsp_history(%struct.DCACoreDecoder* %3), !dbg !4992
  %4 = load i32, i32* %mode.addr, align 4, !dbg !4993
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !4994
  %filter_mode1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 86, !dbg !4995
  store i32 %4, i32* %filter_mode1, align 4, !dbg !4996
  br label %if.end, !dbg !4997

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4998
}

; Function Attrs: nounwind uwtable
define internal i32 @map_prm_ch_to_spkr(%struct.DCACoreDecoder* %s, i32 %ch) #0 !dbg !4999 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %ch.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %spkr = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !5000, metadata !2194), !dbg !5001
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !5002, metadata !2194), !dbg !5003
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5004, metadata !2194), !dbg !5005
  call void @llvm.dbg.declare(metadata i32* %spkr, metadata !5006, metadata !2194), !dbg !5007
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5008
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 6, !dbg !5009
  %1 = load i32, i32* %audio_mode, align 4, !dbg !5009
  %idxprom = sext i32 %1 to i64, !dbg !5010
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom, !dbg !5010
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5010
  %conv = zext i8 %2 to i32, !dbg !5010
  store i32 %conv, i32* %pos, align 4, !dbg !5011
  %3 = load i32, i32* %ch.addr, align 4, !dbg !5012
  %4 = load i32, i32* %pos, align 4, !dbg !5014
  %cmp = icmp slt i32 %3, %4, !dbg !5015
  br i1 %cmp, label %if.then, label %if.end28, !dbg !5016

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ch.addr, align 4, !dbg !5017
  %idxprom2 = sext i32 %5 to i64, !dbg !5019
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5020
  %audio_mode3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 6, !dbg !5021
  %7 = load i32, i32* %audio_mode3, align 4, !dbg !5021
  %idxprom4 = sext i32 %7 to i64, !dbg !5019
  %arrayidx5 = getelementptr inbounds [10 x [5 x i8]], [10 x [5 x i8]]* @prm_ch_to_spkr_map, i64 0, i64 %idxprom4, !dbg !5019
  %arrayidx6 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx5, i64 0, i64 %idxprom2, !dbg !5019
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !5019
  %conv7 = sext i8 %8 to i32, !dbg !5019
  store i32 %conv7, i32* %spkr, align 4, !dbg !5022
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5023
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 44, !dbg !5025
  %10 = load i32, i32* %ext_audio_mask, align 8, !dbg !5025
  %and = and i32 %10, 66, !dbg !5026
  %tobool = icmp ne i32 %and, 0, !dbg !5026
  br i1 %tobool, label %if.then8, label %if.end27, !dbg !5027

if.then8:                                         ; preds = %if.then
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5028
  %xxch_core_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 48, !dbg !5031
  %12 = load i32, i32* %xxch_core_mask, align 8, !dbg !5031
  %13 = load i32, i32* %spkr, align 4, !dbg !5032
  %shl = shl i32 1, %13, !dbg !5033
  %and9 = and i32 %12, %shl, !dbg !5034
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5034
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !5035

if.then11:                                        ; preds = %if.then8
  %14 = load i32, i32* %spkr, align 4, !dbg !5036
  store i32 %14, i32* %retval, align 4, !dbg !5037
  br label %return, !dbg !5037

if.end:                                           ; preds = %if.then8
  %15 = load i32, i32* %spkr, align 4, !dbg !5038
  %cmp12 = icmp eq i32 %15, 3, !dbg !5040
  br i1 %cmp12, label %land.lhs.true, label %if.end18, !dbg !5041

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5042
  %xxch_core_mask14 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 48, !dbg !5044
  %17 = load i32, i32* %xxch_core_mask14, align 8, !dbg !5044
  %and15 = and i32 %17, 512, !dbg !5045
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5045
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5046

if.then17:                                        ; preds = %land.lhs.true
  store i32 9, i32* %retval, align 4, !dbg !5047
  br label %return, !dbg !5047

if.end18:                                         ; preds = %land.lhs.true, %if.end
  %18 = load i32, i32* %spkr, align 4, !dbg !5048
  %cmp19 = icmp eq i32 %18, 4, !dbg !5050
  br i1 %cmp19, label %land.lhs.true21, label %if.end26, !dbg !5051

land.lhs.true21:                                  ; preds = %if.end18
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5052
  %xxch_core_mask22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 48, !dbg !5054
  %20 = load i32, i32* %xxch_core_mask22, align 8, !dbg !5054
  %and23 = and i32 %20, 1024, !dbg !5055
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5055
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5056

if.then25:                                        ; preds = %land.lhs.true21
  store i32 10, i32* %retval, align 4, !dbg !5057
  br label %return, !dbg !5057

if.end26:                                         ; preds = %land.lhs.true21, %if.end18
  store i32 -1, i32* %retval, align 4, !dbg !5058
  br label %return, !dbg !5058

if.end27:                                         ; preds = %if.then
  %21 = load i32, i32* %spkr, align 4, !dbg !5059
  store i32 %21, i32* %retval, align 4, !dbg !5060
  br label %return, !dbg !5060

if.end28:                                         ; preds = %entry
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5061
  %ext_audio_mask29 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 44, !dbg !5063
  %23 = load i32, i32* %ext_audio_mask29, align 8, !dbg !5063
  %and30 = and i32 %23, 8, !dbg !5064
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5064
  br i1 %tobool31, label %land.lhs.true32, label %if.end36, !dbg !5065

land.lhs.true32:                                  ; preds = %if.end28
  %24 = load i32, i32* %ch.addr, align 4, !dbg !5066
  %25 = load i32, i32* %pos, align 4, !dbg !5068
  %cmp33 = icmp eq i32 %24, %25, !dbg !5069
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5070

if.then35:                                        ; preds = %land.lhs.true32
  store i32 6, i32* %retval, align 4, !dbg !5071
  br label %return, !dbg !5071

if.end36:                                         ; preds = %land.lhs.true32, %if.end28
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5072
  %ext_audio_mask37 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 44, !dbg !5074
  %27 = load i32, i32* %ext_audio_mask37, align 8, !dbg !5074
  %and38 = and i32 %27, 66, !dbg !5075
  %tobool39 = icmp ne i32 %and38, 0, !dbg !5075
  br i1 %tobool39, label %if.then40, label %if.end53, !dbg !5076

if.then40:                                        ; preds = %if.end36
  store i32 6, i32* %spkr, align 4, !dbg !5077
  br label %for.cond, !dbg !5080

for.cond:                                         ; preds = %for.inc, %if.then40
  %28 = load i32, i32* %spkr, align 4, !dbg !5081
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5084
  %xxch_mask_nbits = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 47, !dbg !5085
  %30 = load i32, i32* %xxch_mask_nbits, align 4, !dbg !5085
  %cmp41 = icmp slt i32 %28, %30, !dbg !5086
  br i1 %cmp41, label %for.body, label %for.end, !dbg !5087

for.body:                                         ; preds = %for.cond
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5088
  %xxch_spkr_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 49, !dbg !5090
  %32 = load i32, i32* %xxch_spkr_mask, align 4, !dbg !5090
  %33 = load i32, i32* %spkr, align 4, !dbg !5091
  %shl43 = shl i32 1, %33, !dbg !5092
  %and44 = and i32 %32, %shl43, !dbg !5093
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5093
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !5094

if.then46:                                        ; preds = %for.body
  %34 = load i32, i32* %pos, align 4, !dbg !5095
  %inc = add nsw i32 %34, 1, !dbg !5095
  store i32 %inc, i32* %pos, align 4, !dbg !5095
  %35 = load i32, i32* %ch.addr, align 4, !dbg !5097
  %cmp47 = icmp eq i32 %34, %35, !dbg !5098
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5099

if.then49:                                        ; preds = %if.then46
  %36 = load i32, i32* %spkr, align 4, !dbg !5100
  store i32 %36, i32* %retval, align 4, !dbg !5101
  br label %return, !dbg !5101

if.end50:                                         ; preds = %if.then46
  br label %if.end51, !dbg !5102

if.end51:                                         ; preds = %if.end50, %for.body
  br label %for.inc, !dbg !5104

for.inc:                                          ; preds = %if.end51
  %37 = load i32, i32* %spkr, align 4, !dbg !5106
  %inc52 = add nsw i32 %37, 1, !dbg !5106
  store i32 %inc52, i32* %spkr, align 4, !dbg !5106
  br label %for.cond, !dbg !5108, !llvm.loop !5109

for.end:                                          ; preds = %for.cond
  br label %if.end53, !dbg !5111

if.end53:                                         ; preds = %for.end, %if.end36
  store i32 -1, i32* %retval, align 4, !dbg !5112
  br label %return, !dbg !5112

return:                                           ; preds = %if.end53, %if.then49, %if.then35, %if.end27, %if.end26, %if.then25, %if.then17, %if.then11
  %38 = load i32, i32* %retval, align 4, !dbg !5113
  ret i32 %38, !dbg !5113
}

; Function Attrs: nounwind uwtable
define i32 @ff_dca_core_filter_frame(%struct.DCACoreDecoder* %s, %struct.AVFrame* %frame) #0 !dbg !5114 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %dca = alloca %struct.DCAContext*, align 8
  %asset = alloca %struct.DCAExssAsset*, align 8
  %matrix_encoding = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !5117, metadata !2194), !dbg !5118
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5119, metadata !2194), !dbg !5120
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5121, metadata !2194), !dbg !5122
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5123
  %avctx1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 0, !dbg !5124
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !5124
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !5122
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !5125, metadata !2194), !dbg !5126
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5127
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 6, !dbg !5128
  %3 = load i8*, i8** %priv_data, align 8, !dbg !5128
  %4 = bitcast i8* %3 to %struct.DCAContext*, !dbg !5127
  store %struct.DCAContext* %4, %struct.DCAContext** %dca, align 8, !dbg !5126
  call void @llvm.dbg.declare(metadata %struct.DCAExssAsset** %asset, metadata !5129, metadata !2194), !dbg !5130
  %5 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !5131
  %exss = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %5, i32 0, i32 4, !dbg !5132
  %assets = getelementptr inbounds %struct.DCAExssParser, %struct.DCAExssParser* %exss, i32 0, i32 11, !dbg !5133
  %arrayidx = getelementptr inbounds [1 x %struct.DCAExssAsset], [1 x %struct.DCAExssAsset]* %assets, i64 0, i64 0, !dbg !5131
  store %struct.DCAExssAsset* %arrayidx, %struct.DCAExssAsset** %asset, align 8, !dbg !5130
  call void @llvm.dbg.declare(metadata i32* %matrix_encoding, metadata !5134, metadata !2194), !dbg !5135
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5136, metadata !2194), !dbg !5137
  %6 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !5138
  %request_channel_layout = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %6, i32 0, i32 13, !dbg !5140
  %7 = load i32, i32* %request_channel_layout, align 8, !dbg !5140
  %cmp = icmp eq i32 %7, 6, !dbg !5141
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5142

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5143
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 6, !dbg !5145
  %9 = load i32, i32* %audio_mode, align 4, !dbg !5145
  %cmp2 = icmp sgt i32 %9, 0, !dbg !5146
  br i1 %cmp2, label %land.lhs.true3, label %if.else, !dbg !5147

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5148
  %prim_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 41, !dbg !5150
  %11 = load i32, i32* %prim_dmix_embedded, align 32, !dbg !5150
  %tobool = icmp ne i32 %11, 0, !dbg !5148
  br i1 %tobool, label %land.lhs.true4, label %if.else, !dbg !5151

land.lhs.true4:                                   ; preds = %land.lhs.true3
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5152
  %prim_dmix_type = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 42, !dbg !5153
  %13 = load i32, i32* %prim_dmix_type, align 4, !dbg !5153
  %cmp5 = icmp eq i32 %13, 1, !dbg !5154
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !5155

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5156
  %prim_dmix_type6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 42, !dbg !5157
  %15 = load i32, i32* %prim_dmix_type6, align 4, !dbg !5157
  %cmp7 = icmp eq i32 %15, 2, !dbg !5158
  br i1 %cmp7, label %if.then, label %if.else, !dbg !5159

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true4
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5161
  %request_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 83, !dbg !5162
  store i32 6, i32* %request_mask, align 32, !dbg !5163
  br label %if.end, !dbg !5161

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true3, %land.lhs.true, %entry
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5164
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 24, !dbg !5165
  %18 = load i32, i32* %ch_mask, align 4, !dbg !5165
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5166
  %request_mask8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 83, !dbg !5167
  store i32 %18, i32* %request_mask8, align 32, !dbg !5168
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5169
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5171
  %ch_remap = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 82, !dbg !5172
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %ch_remap, i32 0, i32 0, !dbg !5171
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5173
  %request_mask9 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 83, !dbg !5174
  %23 = load i32, i32* %request_mask9, align 32, !dbg !5174
  %call = call i32 @ff_dca_set_channel_layout(%struct.AVCodecContext* %20, i32* %arraydecay, i32 %23), !dbg !5175
  %tobool10 = icmp ne i32 %call, 0, !dbg !5175
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !5176

if.then11:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5177
  br label %return, !dbg !5177

if.end12:                                         ; preds = %if.end
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5178
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 13, !dbg !5180
  %25 = load i32, i32* %flags, align 4, !dbg !5180
  %and = and i32 %25, 8388608, !dbg !5181
  %tobool13 = icmp ne i32 %and, 0, !dbg !5181
  br i1 %tobool13, label %if.then20, label %lor.lhs.false14, !dbg !5182

lor.lhs.false14:                                  ; preds = %if.end12
  %26 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !5183
  %packet = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %26, i32 0, i32 12, !dbg !5185
  %27 = load i32, i32* %packet, align 4, !dbg !5185
  %and15 = and i32 %27, 2, !dbg !5186
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5186
  br i1 %tobool16, label %land.lhs.true17, label %if.else22, !dbg !5187

land.lhs.true17:                                  ; preds = %lor.lhs.false14
  %28 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset, align 8, !dbg !5188
  %extension_mask = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %28, i32 0, i32 13, !dbg !5189
  %29 = load i32, i32* %extension_mask, align 4, !dbg !5189
  %and18 = and i32 %29, 512, !dbg !5190
  %tobool19 = icmp ne i32 %and18, 0, !dbg !5190
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !5191

if.then20:                                        ; preds = %land.lhs.true17, %if.end12
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5193
  %31 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5194
  %call21 = call i32 @filter_frame_fixed(%struct.DCACoreDecoder* %30, %struct.AVFrame* %31), !dbg !5195
  store i32 %call21, i32* %ret, align 4, !dbg !5196
  br label %if.end24, !dbg !5197

if.else22:                                        ; preds = %land.lhs.true17, %lor.lhs.false14
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5198
  %33 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5199
  %call23 = call i32 @filter_frame_float(%struct.DCACoreDecoder* %32, %struct.AVFrame* %33), !dbg !5200
  store i32 %call23, i32* %ret, align 4, !dbg !5201
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  %34 = load i32, i32* %ret, align 4, !dbg !5202
  %cmp25 = icmp slt i32 %34, 0, !dbg !5204
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5205

if.then26:                                        ; preds = %if.end24
  %35 = load i32, i32* %ret, align 4, !dbg !5206
  store i32 %35, i32* %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

if.end27:                                         ; preds = %if.end24
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5208
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 44, !dbg !5210
  %37 = load i32, i32* %ext_audio_mask, align 8, !dbg !5210
  %and28 = and i32 %37, 4080, !dbg !5211
  %tobool29 = icmp ne i32 %and28, 0, !dbg !5211
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !5212

if.then30:                                        ; preds = %if.end27
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5213
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 153, !dbg !5214
  store i32 50, i32* %profile, align 4, !dbg !5215
  br label %if.end47, !dbg !5213

if.else31:                                        ; preds = %if.end27
  %39 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5216
  %ext_audio_mask32 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %39, i32 0, i32 44, !dbg !5218
  %40 = load i32, i32* %ext_audio_mask32, align 8, !dbg !5218
  %and33 = and i32 %40, 10, !dbg !5219
  %tobool34 = icmp ne i32 %and33, 0, !dbg !5219
  br i1 %tobool34, label %if.then35, label %if.else37, !dbg !5220

if.then35:                                        ; preds = %if.else31
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5221
  %profile36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 153, !dbg !5222
  store i32 30, i32* %profile36, align 4, !dbg !5223
  br label %if.end46, !dbg !5221

if.else37:                                        ; preds = %if.else31
  %42 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5224
  %ext_audio_mask38 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %42, i32 0, i32 44, !dbg !5226
  %43 = load i32, i32* %ext_audio_mask38, align 8, !dbg !5226
  %and39 = and i32 %43, 4, !dbg !5227
  %tobool40 = icmp ne i32 %and39, 0, !dbg !5227
  br i1 %tobool40, label %if.then41, label %if.else43, !dbg !5228

if.then41:                                        ; preds = %if.else37
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5229
  %profile42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 153, !dbg !5230
  store i32 40, i32* %profile42, align 4, !dbg !5231
  br label %if.end45, !dbg !5229

if.else43:                                        ; preds = %if.else37
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5232
  %profile44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 153, !dbg !5233
  store i32 20, i32* %profile44, align 4, !dbg !5234
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then41
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then35
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then30
  %46 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5235
  %bit_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %46, i32 0, i32 8, !dbg !5237
  %47 = load i32, i32* %bit_rate, align 4, !dbg !5237
  %cmp48 = icmp sgt i32 %47, 3, !dbg !5238
  br i1 %cmp48, label %land.lhs.true49, label %if.else56, !dbg !5239

land.lhs.true49:                                  ; preds = %if.end47
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5240
  %ext_audio_mask50 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 44, !dbg !5242
  %49 = load i32, i32* %ext_audio_mask50, align 8, !dbg !5242
  %and51 = and i32 %49, 4080, !dbg !5243
  %tobool52 = icmp ne i32 %and51, 0, !dbg !5243
  br i1 %tobool52, label %if.else56, label %if.then53, !dbg !5244

if.then53:                                        ; preds = %land.lhs.true49
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5245
  %bit_rate54 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 8, !dbg !5246
  %51 = load i32, i32* %bit_rate54, align 4, !dbg !5246
  %conv = sext i32 %51 to i64, !dbg !5245
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5247
  %bit_rate55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 9, !dbg !5248
  store i64 %conv, i64* %bit_rate55, align 8, !dbg !5249
  br label %if.end58, !dbg !5247

if.else56:                                        ; preds = %land.lhs.true49, %if.end47
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5250
  %bit_rate57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 9, !dbg !5251
  store i64 0, i64* %bit_rate57, align 8, !dbg !5252
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then53
  %54 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5253
  %audio_mode59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %54, i32 0, i32 6, !dbg !5255
  %55 = load i32, i32* %audio_mode59, align 4, !dbg !5255
  %cmp60 = icmp eq i32 %55, 4, !dbg !5256
  br i1 %cmp60, label %if.then71, label %lor.lhs.false62, !dbg !5257

lor.lhs.false62:                                  ; preds = %if.end58
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5258
  %request_mask63 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 83, !dbg !5260
  %57 = load i32, i32* %request_mask63, align 32, !dbg !5260
  %58 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5261
  %ch_mask64 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %58, i32 0, i32 24, !dbg !5262
  %59 = load i32, i32* %ch_mask64, align 4, !dbg !5262
  %cmp65 = icmp ne i32 %57, %59, !dbg !5263
  br i1 %cmp65, label %land.lhs.true67, label %if.else72, !dbg !5264

land.lhs.true67:                                  ; preds = %lor.lhs.false62
  %60 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5265
  %prim_dmix_type68 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %60, i32 0, i32 42, !dbg !5266
  %61 = load i32, i32* %prim_dmix_type68, align 4, !dbg !5266
  %cmp69 = icmp eq i32 %61, 2, !dbg !5267
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !5268

if.then71:                                        ; preds = %land.lhs.true67, %if.end58
  store i32 1, i32* %matrix_encoding, align 4, !dbg !5269
  br label %if.end73, !dbg !5270

if.else72:                                        ; preds = %land.lhs.true67, %lor.lhs.false62
  store i32 0, i32* %matrix_encoding, align 4, !dbg !5271
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then71
  %62 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5272
  %63 = load i32, i32* %matrix_encoding, align 4, !dbg !5274
  %call74 = call i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame* %62, i32 %63), !dbg !5275
  store i32 %call74, i32* %ret, align 4, !dbg !5276
  %cmp75 = icmp slt i32 %call74, 0, !dbg !5277
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !5278

if.then77:                                        ; preds = %if.end73
  %64 = load i32, i32* %ret, align 4, !dbg !5279
  store i32 %64, i32* %retval, align 4, !dbg !5280
  br label %return, !dbg !5280

if.end78:                                         ; preds = %if.end73
  store i32 0, i32* %retval, align 4, !dbg !5281
  br label %return, !dbg !5281

return:                                           ; preds = %if.end78, %if.then77, %if.then26, %if.then11
  %65 = load i32, i32* %retval, align 4, !dbg !5282
  ret i32 %65, !dbg !5282
}

declare i32 @ff_dca_set_channel_layout(%struct.AVCodecContext*, i32*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame_fixed(%struct.DCACoreDecoder* %s, %struct.AVFrame* %frame) #0 !dbg !5283 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %dca = alloca %struct.DCAContext*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %spkr = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %scale_inv = alloca i32, align 4
  %coeff_ptr = alloca i32*, align 8
  %xch_base = alloca i32, align 4
  %src_spkr = alloca i32, align 4
  %coeff = alloca i32, align 4
  %samples = alloca i32*, align 8
  %plane = alloca i32*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !5284, metadata !2194), !dbg !5285
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5286, metadata !2194), !dbg !5287
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5288, metadata !2194), !dbg !5289
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5290
  %avctx1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 0, !dbg !5291
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !5291
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !5289
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !5292, metadata !2194), !dbg !5293
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5294
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 6, !dbg !5295
  %3 = load i8*, i8** %priv_data, align 8, !dbg !5295
  %4 = bitcast i8* %3 to %struct.DCAContext*, !dbg !5294
  store %struct.DCAContext* %4, %struct.DCAContext** %dca, align 8, !dbg !5293
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5296, metadata !2194), !dbg !5297
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5298, metadata !2194), !dbg !5299
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5300, metadata !2194), !dbg !5301
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5302, metadata !2194), !dbg !5303
  call void @llvm.dbg.declare(metadata i32* %spkr, metadata !5304, metadata !2194), !dbg !5305
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !5306, metadata !2194), !dbg !5307
  %5 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !5308
  %packet = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %5, i32 0, i32 12, !dbg !5310
  %6 = load i32, i32* %packet, align 4, !dbg !5310
  %and = and i32 %6, 4, !dbg !5311
  %tobool = icmp ne i32 %and, 0, !dbg !5311
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5312

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5313
  %call = call i32 @ff_dca_core_filter_fixed(%struct.DCACoreDecoder* %7, i32 0), !dbg !5315
  store i32 %call, i32* %ret, align 4, !dbg !5316
  %cmp = icmp slt i32 %call, 0, !dbg !5317
  br i1 %cmp, label %if.then, label %if.end, !dbg !5318

if.then:                                          ; preds = %land.lhs.true
  %8 = load i32, i32* %ret, align 4, !dbg !5319
  store i32 %8, i32* %retval, align 4, !dbg !5320
  br label %return, !dbg !5320

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5321
  %output_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 85, !dbg !5322
  %10 = load i32, i32* %output_rate, align 8, !dbg !5322
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5323
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 82, !dbg !5324
  store i32 %10, i32* %sample_rate, align 8, !dbg !5325
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5326
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 84, !dbg !5327
  store i32 7, i32* %sample_fmt, align 8, !dbg !5328
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5329
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 143, !dbg !5330
  store i32 24, i32* %bits_per_raw_sample, align 4, !dbg !5331
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5332
  %npcmsamples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 84, !dbg !5333
  %15 = load i32, i32* %npcmsamples, align 4, !dbg !5333
  store i32 %15, i32* %nsamples, align 4, !dbg !5334
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5335
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 5, !dbg !5336
  store i32 %15, i32* %nb_samples, align 8, !dbg !5337
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5338
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5340
  %call2 = call i32 @ff_get_buffer(%struct.AVCodecContext* %17, %struct.AVFrame* %18, i32 0), !dbg !5341
  store i32 %call2, i32* %ret, align 4, !dbg !5342
  %cmp3 = icmp slt i32 %call2, 0, !dbg !5343
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5344

if.then4:                                         ; preds = %if.end
  %19 = load i32, i32* %ret, align 4, !dbg !5345
  store i32 %19, i32* %retval, align 4, !dbg !5346
  br label %return, !dbg !5346

if.end5:                                          ; preds = %if.end
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5347
  %es_format = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 19, !dbg !5349
  %21 = load i32, i32* %es_format, align 8, !dbg !5349
  %tobool6 = icmp ne i32 %21, 0, !dbg !5347
  br i1 %tobool6, label %land.lhs.true7, label %if.end17, !dbg !5350

land.lhs.true7:                                   ; preds = %if.end5
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5351
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 44, !dbg !5353
  %23 = load i32, i32* %ext_audio_mask, align 8, !dbg !5353
  %and8 = and i32 %23, 8, !dbg !5354
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5354
  br i1 %tobool9, label %land.lhs.true10, label %if.end17, !dbg !5355

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5356
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 6, !dbg !5357
  %25 = load i32, i32* %audio_mode, align 4, !dbg !5357
  %cmp11 = icmp sge i32 %25, 8, !dbg !5358
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !5359

if.then12:                                        ; preds = %land.lhs.true10
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5361
  %dcadsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 71, !dbg !5363
  %27 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 32, !dbg !5363
  %dmix_sub_xch = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %27, i32 0, i32 9, !dbg !5364
  %28 = load void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32*, i64)** %dmix_sub_xch, align 8, !dbg !5364
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5365
  %output_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 79, !dbg !5366
  %arrayidx = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples, i64 0, i64 3, !dbg !5365
  %30 = load i32*, i32** %arrayidx, align 8, !dbg !5365
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5367
  %output_samples13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 79, !dbg !5368
  %arrayidx14 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples13, i64 0, i64 4, !dbg !5367
  %32 = load i32*, i32** %arrayidx14, align 8, !dbg !5367
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5369
  %output_samples15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 79, !dbg !5370
  %arrayidx16 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples15, i64 0, i64 6, !dbg !5369
  %34 = load i32*, i32** %arrayidx16, align 8, !dbg !5369
  %35 = load i32, i32* %nsamples, align 4, !dbg !5371
  %conv = sext i32 %35 to i64, !dbg !5371
  call void %28(i32* %30, i32* %32, i32* %34, i64 %conv), !dbg !5361
  br label %if.end17, !dbg !5372

if.end17:                                         ; preds = %if.then12, %land.lhs.true10, %land.lhs.true7, %if.end5
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5373
  %ext_audio_mask18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 44, !dbg !5375
  %37 = load i32, i32* %ext_audio_mask18, align 8, !dbg !5375
  %and19 = and i32 %37, 66, !dbg !5376
  %tobool20 = icmp ne i32 %and19, 0, !dbg !5376
  br i1 %tobool20, label %land.lhs.true21, label %if.end77, !dbg !5377

land.lhs.true21:                                  ; preds = %if.end17
  %38 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5378
  %xxch_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %38, i32 0, i32 50, !dbg !5380
  %39 = load i32, i32* %xxch_dmix_embedded, align 32, !dbg !5380
  %tobool22 = icmp ne i32 %39, 0, !dbg !5378
  br i1 %tobool22, label %if.then23, label %if.end77, !dbg !5381

if.then23:                                        ; preds = %land.lhs.true21
  call void @llvm.dbg.declare(metadata i32* %scale_inv, metadata !5383, metadata !2194), !dbg !5385
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5386
  %xxch_dmix_scale_inv = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 51, !dbg !5387
  %41 = load i32, i32* %xxch_dmix_scale_inv, align 4, !dbg !5387
  store i32 %41, i32* %scale_inv, align 4, !dbg !5385
  call void @llvm.dbg.declare(metadata i32** %coeff_ptr, metadata !5388, metadata !2194), !dbg !5389
  %42 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5390
  %xxch_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %42, i32 0, i32 53, !dbg !5391
  %arraydecay = getelementptr inbounds [12 x i32], [12 x i32]* %xxch_dmix_coeff, i32 0, i32 0, !dbg !5390
  store i32* %arraydecay, i32** %coeff_ptr, align 8, !dbg !5389
  call void @llvm.dbg.declare(metadata i32* %xch_base, metadata !5392, metadata !2194), !dbg !5393
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5394
  %audio_mode24 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 6, !dbg !5395
  %44 = load i32, i32* %audio_mode24, align 4, !dbg !5395
  %idxprom = sext i32 %44 to i64, !dbg !5396
  %arrayidx25 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom, !dbg !5396
  %45 = load i8, i8* %arrayidx25, align 1, !dbg !5396
  %conv26 = zext i8 %45 to i32, !dbg !5396
  store i32 %conv26, i32* %xch_base, align 4, !dbg !5393
  store i32 0, i32* %spkr, align 4, !dbg !5397
  br label %for.cond, !dbg !5399

for.cond:                                         ; preds = %for.inc, %if.then23
  %46 = load i32, i32* %spkr, align 4, !dbg !5400
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5403
  %xxch_mask_nbits = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 47, !dbg !5404
  %48 = load i32, i32* %xxch_mask_nbits, align 4, !dbg !5404
  %cmp27 = icmp slt i32 %46, %48, !dbg !5405
  br i1 %cmp27, label %for.body, label %for.end, !dbg !5406

for.body:                                         ; preds = %for.cond
  %49 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5407
  %xxch_core_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %49, i32 0, i32 48, !dbg !5410
  %50 = load i32, i32* %xxch_core_mask, align 8, !dbg !5410
  %51 = load i32, i32* %spkr, align 4, !dbg !5411
  %shl = shl i32 1, %51, !dbg !5412
  %and29 = and i32 %50, %shl, !dbg !5413
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5413
  br i1 %tobool30, label %if.then31, label %if.end37, !dbg !5414

if.then31:                                        ; preds = %for.body
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5415
  %dcadsp32 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 71, !dbg !5417
  %53 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp32, align 32, !dbg !5417
  %dmix_scale_inv = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %53, i32 0, i32 13, !dbg !5418
  %54 = load void (i32*, i32, i64)*, void (i32*, i32, i64)** %dmix_scale_inv, align 8, !dbg !5418
  %55 = load i32, i32* %spkr, align 4, !dbg !5419
  %idxprom33 = sext i32 %55 to i64, !dbg !5420
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5420
  %output_samples34 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 79, !dbg !5421
  %arrayidx35 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples34, i64 0, i64 %idxprom33, !dbg !5420
  %57 = load i32*, i32** %arrayidx35, align 8, !dbg !5420
  %58 = load i32, i32* %scale_inv, align 4, !dbg !5422
  %59 = load i32, i32* %nsamples, align 4, !dbg !5423
  %conv36 = sext i32 %59 to i64, !dbg !5423
  call void %54(i32* %57, i32 %58, i64 %conv36), !dbg !5415
  br label %if.end37, !dbg !5424

if.end37:                                         ; preds = %if.then31, %for.body
  br label %for.inc, !dbg !5425

for.inc:                                          ; preds = %if.end37
  %60 = load i32, i32* %spkr, align 4, !dbg !5426
  %inc = add nsw i32 %60, 1, !dbg !5426
  store i32 %inc, i32* %spkr, align 4, !dbg !5426
  br label %for.cond, !dbg !5428, !llvm.loop !5429

for.end:                                          ; preds = %for.cond
  %61 = load i32, i32* %xch_base, align 4, !dbg !5431
  store i32 %61, i32* %ch, align 4, !dbg !5433
  br label %for.cond38, !dbg !5434

for.cond38:                                       ; preds = %for.inc74, %for.end
  %62 = load i32, i32* %ch, align 4, !dbg !5435
  %63 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5438
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %63, i32 0, i32 23, !dbg !5439
  %64 = load i32, i32* %nchannels, align 8, !dbg !5439
  %cmp39 = icmp slt i32 %62, %64, !dbg !5440
  br i1 %cmp39, label %for.body41, label %for.end76, !dbg !5441

for.body41:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i32* %src_spkr, metadata !5442, metadata !2194), !dbg !5444
  %65 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5445
  %66 = load i32, i32* %ch, align 4, !dbg !5446
  %call42 = call i32 @map_prm_ch_to_spkr(%struct.DCACoreDecoder* %65, i32 %66), !dbg !5447
  store i32 %call42, i32* %src_spkr, align 4, !dbg !5444
  %67 = load i32, i32* %src_spkr, align 4, !dbg !5448
  %cmp43 = icmp slt i32 %67, 0, !dbg !5450
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5451

if.then45:                                        ; preds = %for.body41
  store i32 -22, i32* %retval, align 4, !dbg !5452
  br label %return, !dbg !5452

if.end46:                                         ; preds = %for.body41
  store i32 0, i32* %spkr, align 4, !dbg !5453
  br label %for.cond47, !dbg !5455

for.cond47:                                       ; preds = %for.inc71, %if.end46
  %68 = load i32, i32* %spkr, align 4, !dbg !5456
  %69 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5459
  %xxch_mask_nbits48 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %69, i32 0, i32 47, !dbg !5460
  %70 = load i32, i32* %xxch_mask_nbits48, align 4, !dbg !5460
  %cmp49 = icmp slt i32 %68, %70, !dbg !5461
  br i1 %cmp49, label %for.body51, label %for.end73, !dbg !5462

for.body51:                                       ; preds = %for.cond47
  %71 = load i32, i32* %ch, align 4, !dbg !5463
  %72 = load i32, i32* %xch_base, align 4, !dbg !5466
  %sub = sub nsw i32 %71, %72, !dbg !5467
  %idxprom52 = sext i32 %sub to i64, !dbg !5468
  %73 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5468
  %xxch_dmix_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %73, i32 0, i32 52, !dbg !5469
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %xxch_dmix_mask, i64 0, i64 %idxprom52, !dbg !5468
  %74 = load i32, i32* %arrayidx53, align 4, !dbg !5468
  %75 = load i32, i32* %spkr, align 4, !dbg !5470
  %shl54 = shl i32 1, %75, !dbg !5471
  %and55 = and i32 %74, %shl54, !dbg !5472
  %tobool56 = icmp ne i32 %and55, 0, !dbg !5472
  br i1 %tobool56, label %if.then57, label %if.end70, !dbg !5473

if.then57:                                        ; preds = %for.body51
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !5474, metadata !2194), !dbg !5476
  %76 = load i32*, i32** %coeff_ptr, align 8, !dbg !5477
  %incdec.ptr = getelementptr inbounds i32, i32* %76, i32 1, !dbg !5477
  store i32* %incdec.ptr, i32** %coeff_ptr, align 8, !dbg !5477
  %77 = load i32, i32* %76, align 4, !dbg !5478
  %78 = load i32, i32* %scale_inv, align 4, !dbg !5479
  %call58 = call i32 @mul16(i32 %77, i32 %78), !dbg !5480
  store i32 %call58, i32* %coeff, align 4, !dbg !5476
  %79 = load i32, i32* %coeff, align 4, !dbg !5481
  %tobool59 = icmp ne i32 %79, 0, !dbg !5481
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !5483

if.then60:                                        ; preds = %if.then57
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5484
  %dcadsp61 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 71, !dbg !5486
  %81 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp61, align 32, !dbg !5486
  %dmix_sub = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %81, i32 0, i32 10, !dbg !5487
  %82 = load void (i32*, i32*, i32, i64)*, void (i32*, i32*, i32, i64)** %dmix_sub, align 8, !dbg !5487
  %83 = load i32, i32* %spkr, align 4, !dbg !5488
  %idxprom62 = sext i32 %83 to i64, !dbg !5489
  %84 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5489
  %output_samples63 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %84, i32 0, i32 79, !dbg !5490
  %arrayidx64 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples63, i64 0, i64 %idxprom62, !dbg !5489
  %85 = load i32*, i32** %arrayidx64, align 8, !dbg !5489
  %86 = load i32, i32* %src_spkr, align 4, !dbg !5491
  %idxprom65 = sext i32 %86 to i64, !dbg !5492
  %87 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5492
  %output_samples66 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %87, i32 0, i32 79, !dbg !5493
  %arrayidx67 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples66, i64 0, i64 %idxprom65, !dbg !5492
  %88 = load i32*, i32** %arrayidx67, align 8, !dbg !5492
  %89 = load i32, i32* %coeff, align 4, !dbg !5494
  %90 = load i32, i32* %nsamples, align 4, !dbg !5495
  %conv68 = sext i32 %90 to i64, !dbg !5495
  call void %82(i32* %85, i32* %88, i32 %89, i64 %conv68), !dbg !5484
  br label %if.end69, !dbg !5496

if.end69:                                         ; preds = %if.then60, %if.then57
  br label %if.end70, !dbg !5497

if.end70:                                         ; preds = %if.end69, %for.body51
  br label %for.inc71, !dbg !5498

for.inc71:                                        ; preds = %if.end70
  %91 = load i32, i32* %spkr, align 4, !dbg !5499
  %inc72 = add nsw i32 %91, 1, !dbg !5499
  store i32 %inc72, i32* %spkr, align 4, !dbg !5499
  br label %for.cond47, !dbg !5501, !llvm.loop !5502

for.end73:                                        ; preds = %for.cond47
  br label %for.inc74, !dbg !5504

for.inc74:                                        ; preds = %for.end73
  %92 = load i32, i32* %ch, align 4, !dbg !5505
  %inc75 = add nsw i32 %92, 1, !dbg !5505
  store i32 %inc75, i32* %ch, align 4, !dbg !5505
  br label %for.cond38, !dbg !5507, !llvm.loop !5508

for.end76:                                        ; preds = %for.cond38
  br label %if.end77, !dbg !5510

if.end77:                                         ; preds = %for.end76, %land.lhs.true21, %if.end17
  %93 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5511
  %ext_audio_mask78 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %93, i32 0, i32 44, !dbg !5513
  %94 = load i32, i32* %ext_audio_mask78, align 8, !dbg !5513
  %and79 = and i32 %94, 74, !dbg !5514
  %tobool80 = icmp ne i32 %and79, 0, !dbg !5514
  br i1 %tobool80, label %if.end109, label %if.then81, !dbg !5515

if.then81:                                        ; preds = %if.end77
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5516
  %sumdiff_front = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 20, !dbg !5519
  %96 = load i32, i32* %sumdiff_front, align 4, !dbg !5519
  %tobool82 = icmp ne i32 %96, 0, !dbg !5516
  br i1 %tobool82, label %land.lhs.true83, label %lor.lhs.false, !dbg !5520

land.lhs.true83:                                  ; preds = %if.then81
  %97 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5521
  %audio_mode84 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %97, i32 0, i32 6, !dbg !5523
  %98 = load i32, i32* %audio_mode84, align 4, !dbg !5523
  %cmp85 = icmp sgt i32 %98, 0, !dbg !5524
  br i1 %cmp85, label %if.then90, label %lor.lhs.false, !dbg !5525

lor.lhs.false:                                    ; preds = %land.lhs.true83, %if.then81
  %99 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5526
  %audio_mode87 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %99, i32 0, i32 6, !dbg !5527
  %100 = load i32, i32* %audio_mode87, align 4, !dbg !5527
  %cmp88 = icmp eq i32 %100, 3, !dbg !5528
  br i1 %cmp88, label %if.then90, label %if.end95, !dbg !5529

if.then90:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %101 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5531
  %fixed_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %101, i32 0, i32 76, !dbg !5533
  %102 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fixed_dsp, align 32, !dbg !5533
  %butterflies_fixed = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %102, i32 0, i32 6, !dbg !5534
  %103 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %butterflies_fixed, align 8, !dbg !5534
  %104 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5535
  %output_samples91 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %104, i32 0, i32 79, !dbg !5536
  %arrayidx92 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples91, i64 0, i64 1, !dbg !5535
  %105 = load i32*, i32** %arrayidx92, align 8, !dbg !5535
  %106 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5537
  %output_samples93 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %106, i32 0, i32 79, !dbg !5538
  %arrayidx94 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples93, i64 0, i64 2, !dbg !5537
  %107 = load i32*, i32** %arrayidx94, align 8, !dbg !5537
  %108 = load i32, i32* %nsamples, align 4, !dbg !5539
  call void %103(i32* %105, i32* %107, i32 %108), !dbg !5531
  br label %if.end95, !dbg !5540

if.end95:                                         ; preds = %if.then90, %lor.lhs.false
  %109 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5541
  %sumdiff_surround = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %109, i32 0, i32 21, !dbg !5543
  %110 = load i32, i32* %sumdiff_surround, align 16, !dbg !5543
  %tobool96 = icmp ne i32 %110, 0, !dbg !5541
  br i1 %tobool96, label %land.lhs.true97, label %if.end108, !dbg !5544

land.lhs.true97:                                  ; preds = %if.end95
  %111 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5545
  %audio_mode98 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %111, i32 0, i32 6, !dbg !5547
  %112 = load i32, i32* %audio_mode98, align 4, !dbg !5547
  %cmp99 = icmp sge i32 %112, 8, !dbg !5548
  br i1 %cmp99, label %if.then101, label %if.end108, !dbg !5549

if.then101:                                       ; preds = %land.lhs.true97
  %113 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5550
  %fixed_dsp102 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %113, i32 0, i32 76, !dbg !5552
  %114 = load %struct.AVFixedDSPContext*, %struct.AVFixedDSPContext** %fixed_dsp102, align 32, !dbg !5552
  %butterflies_fixed103 = getelementptr inbounds %struct.AVFixedDSPContext, %struct.AVFixedDSPContext* %114, i32 0, i32 6, !dbg !5553
  %115 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %butterflies_fixed103, align 8, !dbg !5553
  %116 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5554
  %output_samples104 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %116, i32 0, i32 79, !dbg !5555
  %arrayidx105 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples104, i64 0, i64 3, !dbg !5554
  %117 = load i32*, i32** %arrayidx105, align 8, !dbg !5554
  %118 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5556
  %output_samples106 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %118, i32 0, i32 79, !dbg !5557
  %arrayidx107 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples106, i64 0, i64 4, !dbg !5556
  %119 = load i32*, i32** %arrayidx107, align 8, !dbg !5556
  %120 = load i32, i32* %nsamples, align 4, !dbg !5558
  call void %115(i32* %117, i32* %119, i32 %120), !dbg !5550
  br label %if.end108, !dbg !5559

if.end108:                                        ; preds = %if.then101, %land.lhs.true97, %if.end95
  br label %if.end109, !dbg !5560

if.end109:                                        ; preds = %if.end108, %if.end77
  %121 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5561
  %request_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %121, i32 0, i32 83, !dbg !5563
  %122 = load i32, i32* %request_mask, align 32, !dbg !5563
  %123 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5564
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %123, i32 0, i32 24, !dbg !5565
  %124 = load i32, i32* %ch_mask, align 4, !dbg !5565
  %cmp110 = icmp ne i32 %122, %124, !dbg !5566
  br i1 %cmp110, label %if.then112, label %if.end118, !dbg !5567

if.then112:                                       ; preds = %if.end109
  %125 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5568
  %dcadsp113 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %125, i32 0, i32 71, !dbg !5570
  %126 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp113, align 32, !dbg !5570
  %127 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5571
  %output_samples114 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %127, i32 0, i32 79, !dbg !5572
  %arraydecay115 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples114, i32 0, i32 0, !dbg !5571
  %128 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5573
  %prim_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %128, i32 0, i32 43, !dbg !5574
  %arraydecay116 = getelementptr inbounds [24 x i32], [24 x i32]* %prim_dmix_coeff, i32 0, i32 0, !dbg !5573
  %129 = load i32, i32* %nsamples, align 4, !dbg !5575
  %130 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5576
  %ch_mask117 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %130, i32 0, i32 24, !dbg !5577
  %131 = load i32, i32* %ch_mask117, align 4, !dbg !5577
  call void @ff_dca_downmix_to_stereo_fixed(%struct.DCADSPContext* %126, i32** %arraydecay115, i32* %arraydecay116, i32 %129, i32 %131), !dbg !5578
  br label %if.end118, !dbg !5579

if.end118:                                        ; preds = %if.then112, %if.end109
  store i32 0, i32* %i, align 4, !dbg !5580
  br label %for.cond119, !dbg !5582

for.cond119:                                      ; preds = %for.inc142, %if.end118
  %132 = load i32, i32* %i, align 4, !dbg !5583
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5586
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %133, i32 0, i32 83, !dbg !5587
  %134 = load i32, i32* %channels, align 4, !dbg !5587
  %cmp120 = icmp slt i32 %132, %134, !dbg !5588
  br i1 %cmp120, label %for.body122, label %for.end144, !dbg !5589

for.body122:                                      ; preds = %for.cond119
  call void @llvm.dbg.declare(metadata i32** %samples, metadata !5590, metadata !2194), !dbg !5592
  %135 = load i32, i32* %i, align 4, !dbg !5593
  %idxprom123 = sext i32 %135 to i64, !dbg !5594
  %136 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5594
  %ch_remap = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %136, i32 0, i32 82, !dbg !5595
  %arrayidx124 = getelementptr inbounds [32 x i32], [32 x i32]* %ch_remap, i64 0, i64 %idxprom123, !dbg !5594
  %137 = load i32, i32* %arrayidx124, align 4, !dbg !5594
  %idxprom125 = sext i32 %137 to i64, !dbg !5596
  %138 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5596
  %output_samples126 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %138, i32 0, i32 79, !dbg !5597
  %arrayidx127 = getelementptr inbounds [32 x i32*], [32 x i32*]* %output_samples126, i64 0, i64 %idxprom125, !dbg !5596
  %139 = load i32*, i32** %arrayidx127, align 8, !dbg !5596
  store i32* %139, i32** %samples, align 8, !dbg !5592
  call void @llvm.dbg.declare(metadata i32** %plane, metadata !5598, metadata !2194), !dbg !5599
  %140 = load i32, i32* %i, align 4, !dbg !5600
  %idxprom128 = sext i32 %140 to i64, !dbg !5601
  %141 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5601
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %141, i32 0, i32 2, !dbg !5602
  %142 = load i8**, i8*** %extended_data, align 8, !dbg !5602
  %arrayidx129 = getelementptr inbounds i8*, i8** %142, i64 %idxprom128, !dbg !5601
  %143 = load i8*, i8** %arrayidx129, align 8, !dbg !5601
  %144 = bitcast i8* %143 to i32*, !dbg !5603
  store i32* %144, i32** %plane, align 8, !dbg !5599
  store i32 0, i32* %n, align 4, !dbg !5604
  br label %for.cond130, !dbg !5606

for.cond130:                                      ; preds = %for.inc139, %for.body122
  %145 = load i32, i32* %n, align 4, !dbg !5607
  %146 = load i32, i32* %nsamples, align 4, !dbg !5610
  %cmp131 = icmp slt i32 %145, %146, !dbg !5611
  br i1 %cmp131, label %for.body133, label %for.end141, !dbg !5612

for.body133:                                      ; preds = %for.cond130
  %147 = load i32, i32* %n, align 4, !dbg !5613
  %idxprom134 = sext i32 %147 to i64, !dbg !5614
  %148 = load i32*, i32** %samples, align 8, !dbg !5614
  %arrayidx135 = getelementptr inbounds i32, i32* %148, i64 %idxprom134, !dbg !5614
  %149 = load i32, i32* %arrayidx135, align 4, !dbg !5614
  %call136 = call i32 @clip23(i32 %149), !dbg !5615
  %mul = mul nsw i32 %call136, 256, !dbg !5616
  %150 = load i32, i32* %n, align 4, !dbg !5617
  %idxprom137 = sext i32 %150 to i64, !dbg !5618
  %151 = load i32*, i32** %plane, align 8, !dbg !5618
  %arrayidx138 = getelementptr inbounds i32, i32* %151, i64 %idxprom137, !dbg !5618
  store i32 %mul, i32* %arrayidx138, align 4, !dbg !5619
  br label %for.inc139, !dbg !5618

for.inc139:                                       ; preds = %for.body133
  %152 = load i32, i32* %n, align 4, !dbg !5620
  %inc140 = add nsw i32 %152, 1, !dbg !5620
  store i32 %inc140, i32* %n, align 4, !dbg !5620
  br label %for.cond130, !dbg !5622, !llvm.loop !5623

for.end141:                                       ; preds = %for.cond130
  br label %for.inc142, !dbg !5625

for.inc142:                                       ; preds = %for.end141
  %153 = load i32, i32* %i, align 4, !dbg !5626
  %inc143 = add nsw i32 %153, 1, !dbg !5626
  store i32 %inc143, i32* %i, align 4, !dbg !5626
  br label %for.cond119, !dbg !5628, !llvm.loop !5629

for.end144:                                       ; preds = %for.cond119
  store i32 0, i32* %retval, align 4, !dbg !5631
  br label %return, !dbg !5631

return:                                           ; preds = %for.end144, %if.then45, %if.then4, %if.then
  %154 = load i32, i32* %retval, align 4, !dbg !5632
  ret i32 %154, !dbg !5632
}

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame_float(%struct.DCACoreDecoder* %s, %struct.AVFrame* %frame) #0 !dbg !5633 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4667, metadata !2194), !dbg !5634
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %x96_nchannels = alloca i32, align 4
  %x96_synth = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %spkr = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %nchannels = alloca i32, align 4
  %output_samples = alloca [32 x float*], align 16
  %ptr = alloca float*, align 8
  %filter_coeff = alloca float*, align 8
  %dec_select = alloca i32, align 4
  %samples = alloca float*, align 8
  %nlfesamples = alloca i32, align 4
  %scale_inv = alloca float, align 4
  %coeff_ptr = alloca i32*, align 8
  %xch_base = alloca i32, align 4
  %src_spkr = alloca i32, align 4
  %coeff = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !5636, metadata !2194), !dbg !5637
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5638, metadata !2194), !dbg !5639
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5640, metadata !2194), !dbg !5641
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5642
  %avctx1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 0, !dbg !5643
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !5643
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !5641
  call void @llvm.dbg.declare(metadata i32* %x96_nchannels, metadata !5644, metadata !2194), !dbg !5645
  store i32 0, i32* %x96_nchannels, align 4, !dbg !5645
  call void @llvm.dbg.declare(metadata i32* %x96_synth, metadata !5646, metadata !2194), !dbg !5647
  store i32 0, i32* %x96_synth, align 4, !dbg !5647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5648, metadata !2194), !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5650, metadata !2194), !dbg !5651
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5652, metadata !2194), !dbg !5653
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5654, metadata !2194), !dbg !5655
  call void @llvm.dbg.declare(metadata i32* %spkr, metadata !5656, metadata !2194), !dbg !5657
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !5658, metadata !2194), !dbg !5659
  call void @llvm.dbg.declare(metadata i32* %nchannels, metadata !5660, metadata !2194), !dbg !5661
  call void @llvm.dbg.declare(metadata [32 x float*]* %output_samples, metadata !5662, metadata !2194), !dbg !5664
  %2 = bitcast [32 x float*]* %output_samples to i8*, !dbg !5664
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 256, i32 16, i1 false), !dbg !5664
  call void @llvm.dbg.declare(metadata float** %ptr, metadata !5665, metadata !2194), !dbg !5666
  call void @llvm.dbg.declare(metadata float** %filter_coeff, metadata !5667, metadata !2194), !dbg !5668
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5669
  %ext_audio_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 44, !dbg !5671
  %4 = load i32, i32* %ext_audio_mask, align 8, !dbg !5671
  %and = and i32 %4, 132, !dbg !5672
  %tobool = icmp ne i32 %and, 0, !dbg !5672
  br i1 %tobool, label %if.then, label %if.end, !dbg !5673

if.then:                                          ; preds = %entry
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5674
  %x96_nchannels2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 57, !dbg !5676
  %6 = load i32, i32* %x96_nchannels2, align 4, !dbg !5676
  store i32 %6, i32* %x96_nchannels, align 4, !dbg !5677
  store i32 1, i32* %x96_synth, align 4, !dbg !5678
  br label %if.end, !dbg !5679

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5680
  %sample_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 7, !dbg !5681
  %8 = load i32, i32* %sample_rate, align 8, !dbg !5681
  %9 = load i32, i32* %x96_synth, align 4, !dbg !5682
  %shl = shl i32 %8, %9, !dbg !5683
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5684
  %sample_rate3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 82, !dbg !5685
  store i32 %shl, i32* %sample_rate3, align 8, !dbg !5686
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5687
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 84, !dbg !5688
  store i32 8, i32* %sample_fmt, align 8, !dbg !5689
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5690
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 143, !dbg !5691
  store i32 0, i32* %bits_per_raw_sample, align 4, !dbg !5692
  %13 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5693
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %13, i32 0, i32 4, !dbg !5694
  %14 = load i32, i32* %npcmblocks, align 4, !dbg !5694
  %mul = mul nsw i32 %14, 32, !dbg !5695
  %15 = load i32, i32* %x96_synth, align 4, !dbg !5696
  %shl4 = shl i32 %mul, %15, !dbg !5697
  store i32 %shl4, i32* %nsamples, align 4, !dbg !5698
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5699
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 5, !dbg !5700
  store i32 %shl4, i32* %nb_samples, align 8, !dbg !5701
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5702
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5704
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %17, %struct.AVFrame* %18, i32 0), !dbg !5705
  store i32 %call, i32* %ret, align 4, !dbg !5706
  %cmp = icmp slt i32 %call, 0, !dbg !5707
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !5708

if.then5:                                         ; preds = %if.end
  %19 = load i32, i32* %ret, align 4, !dbg !5709
  store i32 %19, i32* %retval, align 4, !dbg !5710
  br label %return, !dbg !5710

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5711
  br label %for.cond, !dbg !5713

for.cond:                                         ; preds = %for.inc, %if.end6
  %20 = load i32, i32* %i, align 4, !dbg !5714
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5717
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 83, !dbg !5718
  %22 = load i32, i32* %channels, align 4, !dbg !5718
  %cmp7 = icmp slt i32 %20, %22, !dbg !5719
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5720

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %i, align 4, !dbg !5721
  %idxprom = sext i32 %23 to i64, !dbg !5722
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5722
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 2, !dbg !5723
  %25 = load i8**, i8*** %extended_data, align 8, !dbg !5723
  %arrayidx = getelementptr inbounds i8*, i8** %25, i64 %idxprom, !dbg !5722
  %26 = load i8*, i8** %arrayidx, align 8, !dbg !5722
  %27 = bitcast i8* %26 to float*, !dbg !5724
  %28 = load i32, i32* %i, align 4, !dbg !5725
  %idxprom8 = sext i32 %28 to i64, !dbg !5726
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5726
  %ch_remap = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 82, !dbg !5727
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %ch_remap, i64 0, i64 %idxprom8, !dbg !5726
  %30 = load i32, i32* %arrayidx9, align 4, !dbg !5726
  %idxprom10 = sext i32 %30 to i64, !dbg !5728
  %arrayidx11 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom10, !dbg !5728
  store float* %27, float** %arrayidx11, align 8, !dbg !5729
  br label %for.inc, !dbg !5728

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !5730
  %inc = add nsw i32 %31, 1, !dbg !5730
  store i32 %inc, i32* %i, align 4, !dbg !5730
  br label %for.cond, !dbg !5732, !llvm.loop !5733

for.end:                                          ; preds = %for.cond
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5735
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 24, !dbg !5736
  %33 = load i32, i32* %ch_mask, align 4, !dbg !5736
  store i32 %33, i32* %x.addr.i, align 4, !dbg !5737
  %34 = load i32, i32* %x.addr.i, align 4, !dbg !5738
  %shr.i = lshr i32 %34, 1, !dbg !5739
  %and.i = and i32 %shr.i, 1431655765, !dbg !5740
  %35 = load i32, i32* %x.addr.i, align 4, !dbg !5741
  %sub.i = sub i32 %35, %and.i, !dbg !5741
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !5741
  %36 = load i32, i32* %x.addr.i, align 4, !dbg !5742
  %and1.i = and i32 %36, 858993459, !dbg !5743
  %37 = load i32, i32* %x.addr.i, align 4, !dbg !5744
  %shr2.i = lshr i32 %37, 2, !dbg !5745
  %and3.i = and i32 %shr2.i, 858993459, !dbg !5746
  %add.i = add i32 %and1.i, %and3.i, !dbg !5747
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !5748
  %38 = load i32, i32* %x.addr.i, align 4, !dbg !5749
  %39 = load i32, i32* %x.addr.i, align 4, !dbg !5750
  %shr4.i = lshr i32 %39, 4, !dbg !5751
  %add5.i = add i32 %38, %shr4.i, !dbg !5752
  %and6.i = and i32 %add5.i, 252645135, !dbg !5753
  store i32 %and6.i, i32* %x.addr.i, align 4, !dbg !5754
  %40 = load i32, i32* %x.addr.i, align 4, !dbg !5755
  %shr7.i = lshr i32 %40, 8, !dbg !5756
  %41 = load i32, i32* %x.addr.i, align 4, !dbg !5757
  %add8.i = add i32 %41, %shr7.i, !dbg !5757
  store i32 %add8.i, i32* %x.addr.i, align 4, !dbg !5757
  %42 = load i32, i32* %x.addr.i, align 4, !dbg !5758
  %43 = load i32, i32* %x.addr.i, align 4, !dbg !5759
  %shr9.i = lshr i32 %43, 16, !dbg !5760
  %add10.i = add i32 %42, %shr9.i, !dbg !5761
  %and11.i = and i32 %add10.i, 63, !dbg !5762
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5763
  %channels13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 83, !dbg !5764
  %45 = load i32, i32* %channels13, align 4, !dbg !5764
  %sub = sub nsw i32 %and11.i, %45, !dbg !5765
  store i32 %sub, i32* %nchannels, align 4, !dbg !5766
  %46 = load i32, i32* %nchannels, align 4, !dbg !5767
  %cmp14 = icmp sgt i32 %46, 0, !dbg !5769
  br i1 %cmp14, label %if.then15, label %if.end43, !dbg !5770

if.then15:                                        ; preds = %for.end
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5771
  %output_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 78, !dbg !5773
  %48 = bitcast i8** %output_buffer to i8*, !dbg !5774
  %49 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5775
  %output_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %49, i32 0, i32 77, !dbg !5776
  %50 = load i32, i32* %nsamples, align 4, !dbg !5777
  %51 = load i32, i32* %nchannels, align 4, !dbg !5778
  %mul16 = mul nsw i32 %50, %51, !dbg !5779
  %conv = sext i32 %mul16 to i64, !dbg !5777
  %mul17 = mul i64 %conv, 4, !dbg !5780
  call void @av_fast_malloc(i8* %48, i32* %output_size, i64 %mul17), !dbg !5781
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5782
  %output_buffer18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 78, !dbg !5784
  %53 = load i8*, i8** %output_buffer18, align 16, !dbg !5784
  %tobool19 = icmp ne i8* %53, null, !dbg !5782
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !5785

if.then20:                                        ; preds = %if.then15
  store i32 -12, i32* %retval, align 4, !dbg !5786
  br label %return, !dbg !5786

if.end21:                                         ; preds = %if.then15
  %54 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5787
  %output_buffer22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %54, i32 0, i32 78, !dbg !5788
  %55 = load i8*, i8** %output_buffer22, align 16, !dbg !5788
  %56 = bitcast i8* %55 to float*, !dbg !5789
  store float* %56, float** %ptr, align 8, !dbg !5790
  store i32 0, i32* %spkr, align 4, !dbg !5791
  br label %for.cond23, !dbg !5793

for.cond23:                                       ; preds = %for.inc40, %if.end21
  %57 = load i32, i32* %spkr, align 4, !dbg !5794
  %cmp24 = icmp slt i32 %57, 32, !dbg !5797
  br i1 %cmp24, label %for.body26, label %for.end42, !dbg !5798

for.body26:                                       ; preds = %for.cond23
  %58 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5799
  %ch_mask27 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %58, i32 0, i32 24, !dbg !5802
  %59 = load i32, i32* %ch_mask27, align 4, !dbg !5802
  %60 = load i32, i32* %spkr, align 4, !dbg !5803
  %shl28 = shl i32 1, %60, !dbg !5804
  %and29 = and i32 %59, %shl28, !dbg !5805
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5805
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !5806

if.then31:                                        ; preds = %for.body26
  br label %for.inc40, !dbg !5807

if.end32:                                         ; preds = %for.body26
  %61 = load i32, i32* %spkr, align 4, !dbg !5808
  %idxprom33 = sext i32 %61 to i64, !dbg !5810
  %arrayidx34 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom33, !dbg !5810
  %62 = load float*, float** %arrayidx34, align 8, !dbg !5810
  %tobool35 = icmp ne float* %62, null, !dbg !5810
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !5811

if.then36:                                        ; preds = %if.end32
  br label %for.inc40, !dbg !5812

if.end37:                                         ; preds = %if.end32
  %63 = load float*, float** %ptr, align 8, !dbg !5813
  %64 = load i32, i32* %spkr, align 4, !dbg !5814
  %idxprom38 = sext i32 %64 to i64, !dbg !5815
  %arrayidx39 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom38, !dbg !5815
  store float* %63, float** %arrayidx39, align 8, !dbg !5816
  %65 = load i32, i32* %nsamples, align 4, !dbg !5817
  %66 = load float*, float** %ptr, align 8, !dbg !5818
  %idx.ext = sext i32 %65 to i64, !dbg !5818
  %add.ptr = getelementptr inbounds float, float* %66, i64 %idx.ext, !dbg !5818
  store float* %add.ptr, float** %ptr, align 8, !dbg !5818
  br label %for.inc40, !dbg !5819

for.inc40:                                        ; preds = %if.end37, %if.then36, %if.then31
  %67 = load i32, i32* %spkr, align 4, !dbg !5820
  %inc41 = add nsw i32 %67, 1, !dbg !5820
  store i32 %inc41, i32* %spkr, align 4, !dbg !5820
  br label %for.cond23, !dbg !5822, !llvm.loop !5823

for.end42:                                        ; preds = %for.cond23
  br label %if.end43, !dbg !5825

if.end43:                                         ; preds = %for.end42, %for.end
  %68 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5826
  %69 = load i32, i32* %x96_synth, align 4, !dbg !5827
  call void @set_filter_mode(%struct.DCACoreDecoder* %68, i32 %69), !dbg !5828
  %70 = load i32, i32* %x96_synth, align 4, !dbg !5829
  %tobool44 = icmp ne i32 %70, 0, !dbg !5829
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !5831

if.then45:                                        ; preds = %if.end43
  store float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_dca_fir_64bands, i32 0, i32 0), float** %filter_coeff, align 8, !dbg !5832
  br label %if.end50, !dbg !5833

if.else:                                          ; preds = %if.end43
  %71 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5834
  %filter_perfect = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %71, i32 0, i32 17, !dbg !5836
  %72 = load i32, i32* %filter_perfect, align 32, !dbg !5836
  %tobool46 = icmp ne i32 %72, 0, !dbg !5834
  br i1 %tobool46, label %if.then47, label %if.else48, !dbg !5837

if.then47:                                        ; preds = %if.else
  store float* getelementptr inbounds ([512 x float], [512 x float]* @ff_dca_fir_32bands_perfect, i32 0, i32 0), float** %filter_coeff, align 8, !dbg !5838
  br label %if.end49, !dbg !5839

if.else48:                                        ; preds = %if.else
  store float* getelementptr inbounds ([512 x float], [512 x float]* @ff_dca_fir_32bands_nonperfect, i32 0, i32 0), float** %filter_coeff, align 8, !dbg !5840
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then45
  store i32 0, i32* %ch, align 4, !dbg !5841
  br label %for.cond51, !dbg !5843

for.cond51:                                       ; preds = %for.inc91, %if.end50
  %73 = load i32, i32* %ch, align 4, !dbg !5844
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5847
  %nchannels52 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 23, !dbg !5848
  %75 = load i32, i32* %nchannels52, align 8, !dbg !5848
  %cmp53 = icmp slt i32 %73, %75, !dbg !5849
  br i1 %cmp53, label %for.body55, label %for.end93, !dbg !5850

for.body55:                                       ; preds = %for.cond51
  %76 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5851
  %77 = load i32, i32* %ch, align 4, !dbg !5853
  %call56 = call i32 @map_prm_ch_to_spkr(%struct.DCACoreDecoder* %76, i32 %77), !dbg !5854
  store i32 %call56, i32* %spkr, align 4, !dbg !5855
  %78 = load i32, i32* %spkr, align 4, !dbg !5856
  %cmp57 = icmp slt i32 %78, 0, !dbg !5858
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !5859

if.then59:                                        ; preds = %for.body55
  store i32 -22, i32* %retval, align 4, !dbg !5860
  br label %return, !dbg !5860

if.end60:                                         ; preds = %for.body55
  %79 = load i32, i32* %x96_synth, align 4, !dbg !5861
  %idxprom61 = sext i32 %79 to i64, !dbg !5862
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5862
  %dcadsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 71, !dbg !5863
  %81 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 32, !dbg !5863
  %sub_qmf_float = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %81, i32 0, i32 4, !dbg !5864
  %arrayidx62 = getelementptr inbounds [2 x void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)*], [2 x void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)*]* %sub_qmf_float, i64 0, i64 %idxprom61, !dbg !5862
  %82 = load void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)*, void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)** %arrayidx62, align 8, !dbg !5862
  %83 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5865
  %synth = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %83, i32 0, i32 74, !dbg !5866
  %84 = load i32, i32* %x96_synth, align 4, !dbg !5867
  %idxprom63 = sext i32 %84 to i64, !dbg !5868
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5868
  %imdct = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %85, i32 0, i32 73, !dbg !5869
  %arrayidx64 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %imdct, i64 0, i64 %idxprom63, !dbg !5868
  %86 = load i32, i32* %spkr, align 4, !dbg !5870
  %idxprom65 = sext i32 %86 to i64, !dbg !5871
  %arrayidx66 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom65, !dbg !5871
  %87 = load float*, float** %arrayidx66, align 8, !dbg !5871
  %88 = load i32, i32* %ch, align 4, !dbg !5872
  %idxprom67 = sext i32 %88 to i64, !dbg !5873
  %89 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5873
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %89, i32 0, i32 67, !dbg !5874
  %arrayidx68 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom67, !dbg !5873
  %arraydecay = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx68, i32 0, i32 0, !dbg !5873
  %90 = load i32, i32* %ch, align 4, !dbg !5875
  %91 = load i32, i32* %x96_nchannels, align 4, !dbg !5876
  %cmp69 = icmp slt i32 %90, %91, !dbg !5877
  br i1 %cmp69, label %cond.true, label %cond.false, !dbg !5875

cond.true:                                        ; preds = %if.end60
  %92 = load i32, i32* %ch, align 4, !dbg !5878
  %idxprom71 = sext i32 %92 to i64, !dbg !5880
  %93 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5880
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %93, i32 0, i32 64, !dbg !5881
  %arrayidx72 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom71, !dbg !5880
  %arraydecay73 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx72, i32 0, i32 0, !dbg !5880
  br label %cond.end, !dbg !5882

cond.false:                                       ; preds = %if.end60
  br label %cond.end, !dbg !5883

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32** [ %arraydecay73, %cond.true ], [ null, %cond.false ], !dbg !5885
  %94 = load i32, i32* %ch, align 4, !dbg !5887
  %idxprom74 = sext i32 %94 to i64, !dbg !5888
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5888
  %dcadsp_data = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 70, !dbg !5889
  %arrayidx75 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data, i64 0, i64 %idxprom74, !dbg !5888
  %u = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx75, i32 0, i32 0, !dbg !5890
  %flt = bitcast %union.anon* %u to %struct.anon*, !dbg !5891
  %hist1 = getelementptr inbounds %struct.anon, %struct.anon* %flt, i32 0, i32 0, !dbg !5892
  %arraydecay76 = getelementptr inbounds [1024 x float], [1024 x float]* %hist1, i32 0, i32 0, !dbg !5888
  %96 = load i32, i32* %ch, align 4, !dbg !5893
  %idxprom77 = sext i32 %96 to i64, !dbg !5894
  %97 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5894
  %dcadsp_data78 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %97, i32 0, i32 70, !dbg !5895
  %arrayidx79 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data78, i64 0, i64 %idxprom77, !dbg !5894
  %offset = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx79, i32 0, i32 1, !dbg !5896
  %98 = load i32, i32* %ch, align 4, !dbg !5897
  %idxprom80 = sext i32 %98 to i64, !dbg !5898
  %99 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5898
  %dcadsp_data81 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %99, i32 0, i32 70, !dbg !5899
  %arrayidx82 = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data81, i64 0, i64 %idxprom80, !dbg !5898
  %u83 = getelementptr inbounds %struct.DCADSPData, %struct.DCADSPData* %arrayidx82, i32 0, i32 0, !dbg !5900
  %flt84 = bitcast %union.anon* %u83 to %struct.anon*, !dbg !5901
  %hist2 = getelementptr inbounds %struct.anon, %struct.anon* %flt84, i32 0, i32 1, !dbg !5902
  %arraydecay85 = getelementptr inbounds [64 x float], [64 x float]* %hist2, i32 0, i32 0, !dbg !5898
  %100 = load float*, float** %filter_coeff, align 8, !dbg !5903
  %101 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5904
  %npcmblocks86 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %101, i32 0, i32 4, !dbg !5905
  %102 = load i32, i32* %npcmblocks86, align 4, !dbg !5905
  %conv87 = sext i32 %102 to i64, !dbg !5904
  %103 = load i32, i32* %x96_synth, align 4, !dbg !5906
  %sub88 = sub nsw i32 17, %103, !dbg !5907
  %shl89 = shl i32 1, %sub88, !dbg !5908
  %conv90 = sitofp i32 %shl89 to float, !dbg !5909
  %div = fdiv float 1.000000e+00, %conv90, !dbg !5910
  call void %82(%struct.SynthFilterContext* %synth, %struct.FFTContext* %arrayidx64, float* %87, i32** %arraydecay, i32** %cond, float* %arraydecay76, i32* %offset, float* %arraydecay85, float* %100, i64 %conv87, float %div), !dbg !5911
  br label %for.inc91, !dbg !5912

for.inc91:                                        ; preds = %cond.end
  %104 = load i32, i32* %ch, align 4, !dbg !5913
  %inc92 = add nsw i32 %104, 1, !dbg !5913
  store i32 %inc92, i32* %ch, align 4, !dbg !5913
  br label %for.cond51, !dbg !5915, !llvm.loop !5916

for.end93:                                        ; preds = %for.cond51
  %105 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5918
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %105, i32 0, i32 15, !dbg !5920
  %106 = load i32, i32* %lfe_present, align 8, !dbg !5920
  %tobool94 = icmp ne i32 %106, 0, !dbg !5918
  br i1 %tobool94, label %if.then95, label %if.end137, !dbg !5921

if.then95:                                        ; preds = %for.end93
  call void @llvm.dbg.declare(metadata i32* %dec_select, metadata !5922, metadata !2194), !dbg !5924
  %107 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5925
  %lfe_present96 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %107, i32 0, i32 15, !dbg !5926
  %108 = load i32, i32* %lfe_present96, align 8, !dbg !5926
  %cmp97 = icmp eq i32 %108, 1, !dbg !5927
  %conv98 = zext i1 %cmp97 to i32, !dbg !5927
  store i32 %conv98, i32* %dec_select, align 4, !dbg !5924
  call void @llvm.dbg.declare(metadata float** %samples, metadata !5928, metadata !2194), !dbg !5929
  %arrayidx99 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 5, !dbg !5930
  %109 = load float*, float** %arrayidx99, align 8, !dbg !5930
  store float* %109, float** %samples, align 8, !dbg !5929
  call void @llvm.dbg.declare(metadata i32* %nlfesamples, metadata !5931, metadata !2194), !dbg !5932
  %110 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5933
  %npcmblocks100 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %110, i32 0, i32 4, !dbg !5934
  %111 = load i32, i32* %npcmblocks100, align 4, !dbg !5934
  %112 = load i32, i32* %dec_select, align 4, !dbg !5935
  %add = add nsw i32 %112, 1, !dbg !5936
  %shr = ashr i32 %111, %add, !dbg !5937
  store i32 %shr, i32* %nlfesamples, align 4, !dbg !5932
  %113 = load i32, i32* %x96_synth, align 4, !dbg !5938
  %tobool101 = icmp ne i32 %113, 0, !dbg !5938
  br i1 %tobool101, label %if.then102, label %if.end106, !dbg !5940

if.then102:                                       ; preds = %if.then95
  %114 = load i32, i32* %nsamples, align 4, !dbg !5941
  %div103 = sdiv i32 %114, 2, !dbg !5942
  %115 = load float*, float** %samples, align 8, !dbg !5943
  %idx.ext104 = sext i32 %div103 to i64, !dbg !5943
  %add.ptr105 = getelementptr inbounds float, float* %115, i64 %idx.ext104, !dbg !5943
  store float* %add.ptr105, float** %samples, align 8, !dbg !5943
  br label %if.end106, !dbg !5944

if.end106:                                        ; preds = %if.then102, %if.then95
  %116 = load i32, i32* %dec_select, align 4, !dbg !5945
  %tobool107 = icmp ne i32 %116, 0, !dbg !5945
  br i1 %tobool107, label %if.then108, label %if.else109, !dbg !5947

if.then108:                                       ; preds = %if.end106
  store float* getelementptr inbounds ([256 x float], [256 x float]* @ff_dca_lfe_fir_128, i32 0, i32 0), float** %filter_coeff, align 8, !dbg !5948
  br label %if.end110, !dbg !5949

if.else109:                                       ; preds = %if.end106
  store float* getelementptr inbounds ([256 x float], [256 x float]* @ff_dca_lfe_fir_64, i32 0, i32 0), float** %filter_coeff, align 8, !dbg !5950
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then108
  %117 = load i32, i32* %dec_select, align 4, !dbg !5951
  %idxprom111 = sext i32 %117 to i64, !dbg !5952
  %118 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5952
  %dcadsp112 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %118, i32 0, i32 71, !dbg !5953
  %119 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp112, align 32, !dbg !5953
  %lfe_fir_float = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %119, i32 0, i32 2, !dbg !5954
  %arrayidx113 = getelementptr inbounds [2 x void (float*, i32*, float*, i64)*], [2 x void (float*, i32*, float*, i64)*]* %lfe_fir_float, i64 0, i64 %idxprom111, !dbg !5952
  %120 = load void (float*, i32*, float*, i64)*, void (float*, i32*, float*, i64)** %arrayidx113, align 8, !dbg !5952
  %121 = load float*, float** %samples, align 8, !dbg !5955
  %122 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5956
  %lfe_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %122, i32 0, i32 68, !dbg !5957
  %123 = load i32*, i32** %lfe_samples, align 32, !dbg !5957
  %add.ptr114 = getelementptr inbounds i32, i32* %123, i64 8, !dbg !5958
  %124 = load float*, float** %filter_coeff, align 8, !dbg !5959
  %125 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5960
  %npcmblocks115 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %125, i32 0, i32 4, !dbg !5961
  %126 = load i32, i32* %npcmblocks115, align 4, !dbg !5961
  %conv116 = sext i32 %126 to i64, !dbg !5960
  call void %120(float* %121, i32* %add.ptr114, float* %124, i64 %conv116), !dbg !5952
  %127 = load i32, i32* %x96_synth, align 4, !dbg !5962
  %tobool117 = icmp ne i32 %127, 0, !dbg !5962
  br i1 %tobool117, label %if.then118, label %if.end123, !dbg !5964

if.then118:                                       ; preds = %if.end110
  %128 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5965
  %dcadsp119 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %128, i32 0, i32 71, !dbg !5967
  %129 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp119, align 32, !dbg !5967
  %lfe_x96_float = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %129, i32 0, i32 3, !dbg !5968
  %130 = load void (float*, float*, float*, i64)*, void (float*, float*, float*, i64)** %lfe_x96_float, align 8, !dbg !5968
  %arrayidx120 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 5, !dbg !5969
  %131 = load float*, float** %arrayidx120, align 8, !dbg !5969
  %132 = load float*, float** %samples, align 8, !dbg !5970
  %133 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5971
  %output_history_lfe_float = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %133, i32 0, i32 81, !dbg !5972
  %134 = load i32, i32* %nsamples, align 4, !dbg !5973
  %div121 = sdiv i32 %134, 2, !dbg !5974
  %conv122 = sext i32 %div121 to i64, !dbg !5973
  call void %130(float* %131, float* %132, float* %output_history_lfe_float, i64 %conv122), !dbg !5965
  br label %if.end123, !dbg !5975

if.end123:                                        ; preds = %if.then118, %if.end110
  store i32 7, i32* %n, align 4, !dbg !5976
  br label %for.cond124, !dbg !5978

for.cond124:                                      ; preds = %for.inc135, %if.end123
  %135 = load i32, i32* %n, align 4, !dbg !5979
  %cmp125 = icmp sge i32 %135, 0, !dbg !5982
  br i1 %cmp125, label %for.body127, label %for.end136, !dbg !5983

for.body127:                                      ; preds = %for.cond124
  %136 = load i32, i32* %nlfesamples, align 4, !dbg !5984
  %137 = load i32, i32* %n, align 4, !dbg !5985
  %add128 = add nsw i32 %136, %137, !dbg !5986
  %idxprom129 = sext i32 %add128 to i64, !dbg !5987
  %138 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5987
  %lfe_samples130 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %138, i32 0, i32 68, !dbg !5988
  %139 = load i32*, i32** %lfe_samples130, align 32, !dbg !5988
  %arrayidx131 = getelementptr inbounds i32, i32* %139, i64 %idxprom129, !dbg !5987
  %140 = load i32, i32* %arrayidx131, align 4, !dbg !5987
  %141 = load i32, i32* %n, align 4, !dbg !5989
  %idxprom132 = sext i32 %141 to i64, !dbg !5990
  %142 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5990
  %lfe_samples133 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %142, i32 0, i32 68, !dbg !5991
  %143 = load i32*, i32** %lfe_samples133, align 32, !dbg !5991
  %arrayidx134 = getelementptr inbounds i32, i32* %143, i64 %idxprom132, !dbg !5990
  store i32 %140, i32* %arrayidx134, align 4, !dbg !5992
  br label %for.inc135, !dbg !5990

for.inc135:                                       ; preds = %for.body127
  %144 = load i32, i32* %n, align 4, !dbg !5993
  %dec = add nsw i32 %144, -1, !dbg !5993
  store i32 %dec, i32* %n, align 4, !dbg !5993
  br label %for.cond124, !dbg !5995, !llvm.loop !5996

for.end136:                                       ; preds = %for.cond124
  br label %if.end137, !dbg !5998

if.end137:                                        ; preds = %for.end136, %for.end93
  %145 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !5999
  %es_format = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %145, i32 0, i32 19, !dbg !6001
  %146 = load i32, i32* %es_format, align 8, !dbg !6001
  %tobool138 = icmp ne i32 %146, 0, !dbg !5999
  br i1 %tobool138, label %land.lhs.true, label %if.end152, !dbg !6002

land.lhs.true:                                    ; preds = %if.end137
  %147 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6003
  %ext_audio_mask139 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %147, i32 0, i32 44, !dbg !6005
  %148 = load i32, i32* %ext_audio_mask139, align 8, !dbg !6005
  %and140 = and i32 %148, 8, !dbg !6006
  %tobool141 = icmp ne i32 %and140, 0, !dbg !6006
  br i1 %tobool141, label %land.lhs.true142, label %if.end152, !dbg !6007

land.lhs.true142:                                 ; preds = %land.lhs.true
  %149 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6008
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %149, i32 0, i32 6, !dbg !6009
  %150 = load i32, i32* %audio_mode, align 4, !dbg !6009
  %cmp143 = icmp sge i32 %150, 8, !dbg !6010
  br i1 %cmp143, label %if.then145, label %if.end152, !dbg !6011

if.then145:                                       ; preds = %land.lhs.true142
  %151 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6013
  %float_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %151, i32 0, i32 75, !dbg !6015
  %152 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp, align 8, !dbg !6015
  %vector_fmac_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %152, i32 0, i32 1, !dbg !6016
  %153 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmac_scalar, align 8, !dbg !6016
  %arrayidx146 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 3, !dbg !6017
  %154 = load float*, float** %arrayidx146, align 8, !dbg !6017
  %arrayidx147 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 6, !dbg !6018
  %155 = load float*, float** %arrayidx147, align 16, !dbg !6018
  %156 = load i32, i32* %nsamples, align 4, !dbg !6019
  call void %153(float* %154, float* %155, float 0xBFE6A09E60000000, i32 %156), !dbg !6013
  %157 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6020
  %float_dsp148 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %157, i32 0, i32 75, !dbg !6021
  %158 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp148, align 8, !dbg !6021
  %vector_fmac_scalar149 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %158, i32 0, i32 1, !dbg !6022
  %159 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmac_scalar149, align 8, !dbg !6022
  %arrayidx150 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 4, !dbg !6023
  %160 = load float*, float** %arrayidx150, align 16, !dbg !6023
  %arrayidx151 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 6, !dbg !6024
  %161 = load float*, float** %arrayidx151, align 16, !dbg !6024
  %162 = load i32, i32* %nsamples, align 4, !dbg !6025
  call void %159(float* %160, float* %161, float 0xBFE6A09E60000000, i32 %162), !dbg !6020
  br label %if.end152, !dbg !6026

if.end152:                                        ; preds = %if.then145, %land.lhs.true142, %land.lhs.true, %if.end137
  %163 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6027
  %ext_audio_mask153 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %163, i32 0, i32 44, !dbg !6029
  %164 = load i32, i32* %ext_audio_mask153, align 8, !dbg !6029
  %and154 = and i32 %164, 66, !dbg !6030
  %tobool155 = icmp ne i32 %and154, 0, !dbg !6030
  br i1 %tobool155, label %land.lhs.true156, label %if.end223, !dbg !6031

land.lhs.true156:                                 ; preds = %if.end152
  %165 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6032
  %xxch_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %165, i32 0, i32 50, !dbg !6034
  %166 = load i32, i32* %xxch_dmix_embedded, align 32, !dbg !6034
  %tobool157 = icmp ne i32 %166, 0, !dbg !6032
  br i1 %tobool157, label %if.then158, label %if.end223, !dbg !6035

if.then158:                                       ; preds = %land.lhs.true156
  call void @llvm.dbg.declare(metadata float* %scale_inv, metadata !6037, metadata !2194), !dbg !6039
  %167 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6040
  %xxch_dmix_scale_inv = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %167, i32 0, i32 51, !dbg !6041
  %168 = load i32, i32* %xxch_dmix_scale_inv, align 4, !dbg !6041
  %conv159 = sitofp i32 %168 to float, !dbg !6040
  %mul160 = fmul float %conv159, 0x3EF0000000000000, !dbg !6042
  store float %mul160, float* %scale_inv, align 4, !dbg !6039
  call void @llvm.dbg.declare(metadata i32** %coeff_ptr, metadata !6043, metadata !2194), !dbg !6044
  %169 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6045
  %xxch_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %169, i32 0, i32 53, !dbg !6046
  %arraydecay161 = getelementptr inbounds [12 x i32], [12 x i32]* %xxch_dmix_coeff, i32 0, i32 0, !dbg !6045
  store i32* %arraydecay161, i32** %coeff_ptr, align 8, !dbg !6044
  call void @llvm.dbg.declare(metadata i32* %xch_base, metadata !6047, metadata !2194), !dbg !6048
  %170 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6049
  %audio_mode162 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %170, i32 0, i32 6, !dbg !6050
  %171 = load i32, i32* %audio_mode162, align 4, !dbg !6050
  %idxprom163 = sext i32 %171 to i64, !dbg !6051
  %arrayidx164 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom163, !dbg !6051
  %172 = load i8, i8* %arrayidx164, align 1, !dbg !6051
  %conv165 = zext i8 %172 to i32, !dbg !6051
  store i32 %conv165, i32* %xch_base, align 4, !dbg !6048
  %173 = load i32, i32* %xch_base, align 4, !dbg !6052
  store i32 %173, i32* %ch, align 4, !dbg !6054
  br label %for.cond166, !dbg !6055

for.cond166:                                      ; preds = %for.inc202, %if.then158
  %174 = load i32, i32* %ch, align 4, !dbg !6056
  %175 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6059
  %nchannels167 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %175, i32 0, i32 23, !dbg !6060
  %176 = load i32, i32* %nchannels167, align 8, !dbg !6060
  %cmp168 = icmp slt i32 %174, %176, !dbg !6061
  br i1 %cmp168, label %for.body170, label %for.end204, !dbg !6062

for.body170:                                      ; preds = %for.cond166
  call void @llvm.dbg.declare(metadata i32* %src_spkr, metadata !6063, metadata !2194), !dbg !6065
  %177 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6066
  %178 = load i32, i32* %ch, align 4, !dbg !6067
  %call171 = call i32 @map_prm_ch_to_spkr(%struct.DCACoreDecoder* %177, i32 %178), !dbg !6068
  store i32 %call171, i32* %src_spkr, align 4, !dbg !6065
  %179 = load i32, i32* %src_spkr, align 4, !dbg !6069
  %cmp172 = icmp slt i32 %179, 0, !dbg !6071
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !6072

if.then174:                                       ; preds = %for.body170
  store i32 -22, i32* %retval, align 4, !dbg !6073
  br label %return, !dbg !6073

if.end175:                                        ; preds = %for.body170
  store i32 0, i32* %spkr, align 4, !dbg !6074
  br label %for.cond176, !dbg !6076

for.cond176:                                      ; preds = %for.inc199, %if.end175
  %180 = load i32, i32* %spkr, align 4, !dbg !6077
  %181 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6080
  %xxch_mask_nbits = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %181, i32 0, i32 47, !dbg !6081
  %182 = load i32, i32* %xxch_mask_nbits, align 4, !dbg !6081
  %cmp177 = icmp slt i32 %180, %182, !dbg !6082
  br i1 %cmp177, label %for.body179, label %for.end201, !dbg !6083

for.body179:                                      ; preds = %for.cond176
  %183 = load i32, i32* %ch, align 4, !dbg !6084
  %184 = load i32, i32* %xch_base, align 4, !dbg !6087
  %sub180 = sub nsw i32 %183, %184, !dbg !6088
  %idxprom181 = sext i32 %sub180 to i64, !dbg !6089
  %185 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6089
  %xxch_dmix_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %185, i32 0, i32 52, !dbg !6090
  %arrayidx182 = getelementptr inbounds [2 x i32], [2 x i32]* %xxch_dmix_mask, i64 0, i64 %idxprom181, !dbg !6089
  %186 = load i32, i32* %arrayidx182, align 4, !dbg !6089
  %187 = load i32, i32* %spkr, align 4, !dbg !6091
  %shl183 = shl i32 1, %187, !dbg !6092
  %and184 = and i32 %186, %shl183, !dbg !6093
  %tobool185 = icmp ne i32 %and184, 0, !dbg !6093
  br i1 %tobool185, label %if.then186, label %if.end198, !dbg !6094

if.then186:                                       ; preds = %for.body179
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !6095, metadata !2194), !dbg !6097
  %188 = load i32*, i32** %coeff_ptr, align 8, !dbg !6098
  %incdec.ptr = getelementptr inbounds i32, i32* %188, i32 1, !dbg !6098
  store i32* %incdec.ptr, i32** %coeff_ptr, align 8, !dbg !6098
  %189 = load i32, i32* %188, align 4, !dbg !6099
  store i32 %189, i32* %coeff, align 4, !dbg !6097
  %190 = load i32, i32* %coeff, align 4, !dbg !6100
  %tobool187 = icmp ne i32 %190, 0, !dbg !6100
  br i1 %tobool187, label %if.then188, label %if.end197, !dbg !6102

if.then188:                                       ; preds = %if.then186
  %191 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6103
  %float_dsp189 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %191, i32 0, i32 75, !dbg !6105
  %192 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp189, align 8, !dbg !6105
  %vector_fmac_scalar190 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %192, i32 0, i32 1, !dbg !6106
  %193 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmac_scalar190, align 8, !dbg !6106
  %194 = load i32, i32* %spkr, align 4, !dbg !6107
  %idxprom191 = sext i32 %194 to i64, !dbg !6108
  %arrayidx192 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom191, !dbg !6108
  %195 = load float*, float** %arrayidx192, align 8, !dbg !6108
  %196 = load i32, i32* %src_spkr, align 4, !dbg !6109
  %idxprom193 = sext i32 %196 to i64, !dbg !6110
  %arrayidx194 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom193, !dbg !6110
  %197 = load float*, float** %arrayidx194, align 8, !dbg !6110
  %198 = load i32, i32* %coeff, align 4, !dbg !6111
  %conv195 = sitofp i32 %198 to float, !dbg !6111
  %mul196 = fmul float %conv195, 0xBF00000000000000, !dbg !6112
  %199 = load i32, i32* %nsamples, align 4, !dbg !6113
  call void %193(float* %195, float* %197, float %mul196, i32 %199), !dbg !6103
  br label %if.end197, !dbg !6114

if.end197:                                        ; preds = %if.then188, %if.then186
  br label %if.end198, !dbg !6115

if.end198:                                        ; preds = %if.end197, %for.body179
  br label %for.inc199, !dbg !6116

for.inc199:                                       ; preds = %if.end198
  %200 = load i32, i32* %spkr, align 4, !dbg !6117
  %inc200 = add nsw i32 %200, 1, !dbg !6117
  store i32 %inc200, i32* %spkr, align 4, !dbg !6117
  br label %for.cond176, !dbg !6119, !llvm.loop !6120

for.end201:                                       ; preds = %for.cond176
  br label %for.inc202, !dbg !6122

for.inc202:                                       ; preds = %for.end201
  %201 = load i32, i32* %ch, align 4, !dbg !6123
  %inc203 = add nsw i32 %201, 1, !dbg !6123
  store i32 %inc203, i32* %ch, align 4, !dbg !6123
  br label %for.cond166, !dbg !6125, !llvm.loop !6126

for.end204:                                       ; preds = %for.cond166
  store i32 0, i32* %spkr, align 4, !dbg !6128
  br label %for.cond205, !dbg !6130

for.cond205:                                      ; preds = %for.inc220, %for.end204
  %202 = load i32, i32* %spkr, align 4, !dbg !6131
  %203 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6134
  %xxch_mask_nbits206 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %203, i32 0, i32 47, !dbg !6135
  %204 = load i32, i32* %xxch_mask_nbits206, align 4, !dbg !6135
  %cmp207 = icmp slt i32 %202, %204, !dbg !6136
  br i1 %cmp207, label %for.body209, label %for.end222, !dbg !6137

for.body209:                                      ; preds = %for.cond205
  %205 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6138
  %xxch_core_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %205, i32 0, i32 48, !dbg !6141
  %206 = load i32, i32* %xxch_core_mask, align 8, !dbg !6141
  %207 = load i32, i32* %spkr, align 4, !dbg !6142
  %shl210 = shl i32 1, %207, !dbg !6143
  %and211 = and i32 %206, %shl210, !dbg !6144
  %tobool212 = icmp ne i32 %and211, 0, !dbg !6144
  br i1 %tobool212, label %if.then213, label %if.end219, !dbg !6145

if.then213:                                       ; preds = %for.body209
  %208 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6146
  %float_dsp214 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %208, i32 0, i32 75, !dbg !6148
  %209 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp214, align 8, !dbg !6148
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %209, i32 0, i32 3, !dbg !6149
  %210 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !6149
  %211 = load i32, i32* %spkr, align 4, !dbg !6150
  %idxprom215 = sext i32 %211 to i64, !dbg !6151
  %arrayidx216 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom215, !dbg !6151
  %212 = load float*, float** %arrayidx216, align 8, !dbg !6151
  %213 = load i32, i32* %spkr, align 4, !dbg !6152
  %idxprom217 = sext i32 %213 to i64, !dbg !6153
  %arrayidx218 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 %idxprom217, !dbg !6153
  %214 = load float*, float** %arrayidx218, align 8, !dbg !6153
  %215 = load float, float* %scale_inv, align 4, !dbg !6154
  %216 = load i32, i32* %nsamples, align 4, !dbg !6155
  call void %210(float* %212, float* %214, float %215, i32 %216), !dbg !6146
  br label %if.end219, !dbg !6156

if.end219:                                        ; preds = %if.then213, %for.body209
  br label %for.inc220, !dbg !6157

for.inc220:                                       ; preds = %if.end219
  %217 = load i32, i32* %spkr, align 4, !dbg !6158
  %inc221 = add nsw i32 %217, 1, !dbg !6158
  store i32 %inc221, i32* %spkr, align 4, !dbg !6158
  br label %for.cond205, !dbg !6160, !llvm.loop !6161

for.end222:                                       ; preds = %for.cond205
  br label %if.end223, !dbg !6163

if.end223:                                        ; preds = %for.end222, %land.lhs.true156, %if.end152
  %218 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6164
  %ext_audio_mask224 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %218, i32 0, i32 44, !dbg !6166
  %219 = load i32, i32* %ext_audio_mask224, align 8, !dbg !6166
  %and225 = and i32 %219, 74, !dbg !6167
  %tobool226 = icmp ne i32 %and225, 0, !dbg !6167
  br i1 %tobool226, label %if.end252, label %if.then227, !dbg !6168

if.then227:                                       ; preds = %if.end223
  %220 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6169
  %sumdiff_front = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %220, i32 0, i32 20, !dbg !6172
  %221 = load i32, i32* %sumdiff_front, align 4, !dbg !6172
  %tobool228 = icmp ne i32 %221, 0, !dbg !6169
  br i1 %tobool228, label %land.lhs.true229, label %lor.lhs.false, !dbg !6173

land.lhs.true229:                                 ; preds = %if.then227
  %222 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6174
  %audio_mode230 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %222, i32 0, i32 6, !dbg !6176
  %223 = load i32, i32* %audio_mode230, align 4, !dbg !6176
  %cmp231 = icmp sgt i32 %223, 0, !dbg !6177
  br i1 %cmp231, label %if.then236, label %lor.lhs.false, !dbg !6178

lor.lhs.false:                                    ; preds = %land.lhs.true229, %if.then227
  %224 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6179
  %audio_mode233 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %224, i32 0, i32 6, !dbg !6180
  %225 = load i32, i32* %audio_mode233, align 4, !dbg !6180
  %cmp234 = icmp eq i32 %225, 3, !dbg !6181
  br i1 %cmp234, label %if.then236, label %if.end240, !dbg !6182

if.then236:                                       ; preds = %lor.lhs.false, %land.lhs.true229
  %226 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6184
  %float_dsp237 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %226, i32 0, i32 75, !dbg !6186
  %227 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp237, align 8, !dbg !6186
  %butterflies_float = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %227, i32 0, i32 8, !dbg !6187
  %228 = load void (float*, float*, i32)*, void (float*, float*, i32)** %butterflies_float, align 8, !dbg !6187
  %arrayidx238 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 1, !dbg !6188
  %229 = load float*, float** %arrayidx238, align 8, !dbg !6188
  %arrayidx239 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 2, !dbg !6189
  %230 = load float*, float** %arrayidx239, align 16, !dbg !6189
  %231 = load i32, i32* %nsamples, align 4, !dbg !6190
  call void %228(float* %229, float* %230, i32 %231), !dbg !6184
  br label %if.end240, !dbg !6191

if.end240:                                        ; preds = %if.then236, %lor.lhs.false
  %232 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6192
  %sumdiff_surround = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %232, i32 0, i32 21, !dbg !6194
  %233 = load i32, i32* %sumdiff_surround, align 16, !dbg !6194
  %tobool241 = icmp ne i32 %233, 0, !dbg !6192
  br i1 %tobool241, label %land.lhs.true242, label %if.end251, !dbg !6195

land.lhs.true242:                                 ; preds = %if.end240
  %234 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6196
  %audio_mode243 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %234, i32 0, i32 6, !dbg !6198
  %235 = load i32, i32* %audio_mode243, align 4, !dbg !6198
  %cmp244 = icmp sge i32 %235, 8, !dbg !6199
  br i1 %cmp244, label %if.then246, label %if.end251, !dbg !6200

if.then246:                                       ; preds = %land.lhs.true242
  %236 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6201
  %float_dsp247 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %236, i32 0, i32 75, !dbg !6203
  %237 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp247, align 8, !dbg !6203
  %butterflies_float248 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %237, i32 0, i32 8, !dbg !6204
  %238 = load void (float*, float*, i32)*, void (float*, float*, i32)** %butterflies_float248, align 8, !dbg !6204
  %arrayidx249 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 3, !dbg !6205
  %239 = load float*, float** %arrayidx249, align 8, !dbg !6205
  %arrayidx250 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i64 0, i64 4, !dbg !6206
  %240 = load float*, float** %arrayidx250, align 16, !dbg !6206
  %241 = load i32, i32* %nsamples, align 4, !dbg !6207
  call void %238(float* %239, float* %240, i32 %241), !dbg !6201
  br label %if.end251, !dbg !6208

if.end251:                                        ; preds = %if.then246, %land.lhs.true242, %if.end240
  br label %if.end252, !dbg !6209

if.end252:                                        ; preds = %if.end251, %if.end223
  %242 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6210
  %request_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %242, i32 0, i32 83, !dbg !6212
  %243 = load i32, i32* %request_mask, align 32, !dbg !6212
  %244 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6213
  %ch_mask253 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %244, i32 0, i32 24, !dbg !6214
  %245 = load i32, i32* %ch_mask253, align 4, !dbg !6214
  %cmp254 = icmp ne i32 %243, %245, !dbg !6215
  br i1 %cmp254, label %if.then256, label %if.end261, !dbg !6216

if.then256:                                       ; preds = %if.end252
  %246 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6217
  %float_dsp257 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %246, i32 0, i32 75, !dbg !6219
  %247 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %float_dsp257, align 8, !dbg !6219
  %arraydecay258 = getelementptr inbounds [32 x float*], [32 x float*]* %output_samples, i32 0, i32 0, !dbg !6220
  %248 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6221
  %prim_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %248, i32 0, i32 43, !dbg !6222
  %arraydecay259 = getelementptr inbounds [24 x i32], [24 x i32]* %prim_dmix_coeff, i32 0, i32 0, !dbg !6221
  %249 = load i32, i32* %nsamples, align 4, !dbg !6223
  %250 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6224
  %ch_mask260 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %250, i32 0, i32 24, !dbg !6225
  %251 = load i32, i32* %ch_mask260, align 4, !dbg !6225
  call void @ff_dca_downmix_to_stereo_float(%struct.AVFloatDSPContext* %247, float** %arraydecay258, i32* %arraydecay259, i32 %249, i32 %251), !dbg !6226
  br label %if.end261, !dbg !6227

if.end261:                                        ; preds = %if.then256, %if.end252
  store i32 0, i32* %retval, align 4, !dbg !6228
  br label %return, !dbg !6228

return:                                           ; preds = %if.end261, %if.then174, %if.then59, %if.then20, %if.then5
  %252 = load i32, i32* %retval, align 4, !dbg !6229
  ret i32 %252, !dbg !6229
}

declare i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame*, i32) #4

; Function Attrs: cold nounwind optsize uwtable
define void @ff_dca_core_flush(%struct.DCACoreDecoder* %s) #5 !dbg !6230 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6233, metadata !2194), !dbg !6234
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6235
  %subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 66, !dbg !6237
  %1 = load i32*, i32** %subband_buffer, align 8, !dbg !6237
  %tobool = icmp ne i32* %1, null, !dbg !6235
  br i1 %tobool, label %if.then, label %if.end, !dbg !6238

if.then:                                          ; preds = %entry
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6239
  call void @erase_adpcm_history(%struct.DCACoreDecoder* %2), !dbg !6241
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6242
  %lfe_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 68, !dbg !6243
  %4 = load i32*, i32** %lfe_samples, align 32, !dbg !6243
  %5 = bitcast i32* %4 to i8*, !dbg !6244
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 32, i32 4, i1 false), !dbg !6244
  br label %if.end, !dbg !6245

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6246
  %x96_subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 63, !dbg !6248
  %7 = load i32*, i32** %x96_subband_buffer, align 8, !dbg !6248
  %tobool1 = icmp ne i32* %7, null, !dbg !6246
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6249

if.then2:                                         ; preds = %if.end
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6250
  call void @erase_x96_adpcm_history(%struct.DCACoreDecoder* %8), !dbg !6251
  br label %if.end3, !dbg !6251

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6252
  call void @erase_dsp_history(%struct.DCACoreDecoder* %9), !dbg !6253
  ret void, !dbg !6254
}

; Function Attrs: nounwind uwtable
define internal void @erase_adpcm_history(%struct.DCACoreDecoder* %s) #0 !dbg !6255 {
entry:
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !6256, metadata !2194), !dbg !6257
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6263, metadata !2194), !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6265, metadata !2194), !dbg !6266
  call void @llvm.dbg.declare(metadata i32* %band, metadata !6267, metadata !2194), !dbg !6268
  store i32 0, i32* %ch, align 4, !dbg !6269
  br label %for.cond, !dbg !6270

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6271
  %cmp = icmp slt i32 %0, 7, !dbg !6273
  br i1 %cmp, label %for.body, label %for.end8, !dbg !6274

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %band, align 4, !dbg !6275
  br label %for.cond1, !dbg !6276

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %band, align 4, !dbg !6277
  %cmp2 = icmp slt i32 %1, 32, !dbg !6279
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6280

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %band, align 4, !dbg !6281
  %idxprom = sext i32 %2 to i64, !dbg !6282
  %3 = load i32, i32* %ch, align 4, !dbg !6283
  %idxprom4 = sext i32 %3 to i64, !dbg !6282
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6282
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 67, !dbg !6284
  %arrayidx = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom4, !dbg !6282
  %arrayidx5 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6282
  %5 = load i32*, i32** %arrayidx5, align 8, !dbg !6282
  %add.ptr = getelementptr inbounds i32, i32* %5, i64 -4, !dbg !6285
  %6 = bitcast i32* %add.ptr to i8*, !dbg !6282
  store i8* %6, i8** %d.addr.i, align 8, !dbg !6286
  %7 = load i8*, i8** %d.addr.i, align 8, !dbg !6287
  %8 = bitcast i8* %7 to %struct.v.1*, !dbg !6288
  call void asm "pxor %xmm0, %xmm0  \0A\09movdqa   %xmm0, $0  \0A\09", "=*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v.1* %8) #7, !dbg !6289, !srcloc !6290
  br label %for.inc, !dbg !6286

for.inc:                                          ; preds = %for.body3
  %9 = load i32, i32* %band, align 4, !dbg !6291
  %inc = add nsw i32 %9, 1, !dbg !6291
  store i32 %inc, i32* %band, align 4, !dbg !6291
  br label %for.cond1, !dbg !6293, !llvm.loop !6294

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !6296

for.inc6:                                         ; preds = %for.end
  %10 = load i32, i32* %ch, align 4, !dbg !6298
  %inc7 = add nsw i32 %10, 1, !dbg !6298
  store i32 %inc7, i32* %ch, align 4, !dbg !6298
  br label %for.cond, !dbg !6300, !llvm.loop !6301

for.end8:                                         ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6303, !srcloc !2826
  ret void, !dbg !6305
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal void @erase_x96_adpcm_history(%struct.DCACoreDecoder* %s) #0 !dbg !6306 {
entry:
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !6256, metadata !2194), !dbg !6307
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6313, metadata !2194), !dbg !6314
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6315, metadata !2194), !dbg !6316
  call void @llvm.dbg.declare(metadata i32* %band, metadata !6317, metadata !2194), !dbg !6318
  store i32 0, i32* %ch, align 4, !dbg !6319
  br label %for.cond, !dbg !6320

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6321
  %cmp = icmp slt i32 %0, 7, !dbg !6323
  br i1 %cmp, label %for.body, label %for.end8, !dbg !6324

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %band, align 4, !dbg !6325
  br label %for.cond1, !dbg !6326

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %band, align 4, !dbg !6327
  %cmp2 = icmp slt i32 %1, 64, !dbg !6329
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6330

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %band, align 4, !dbg !6331
  %idxprom = sext i32 %2 to i64, !dbg !6332
  %3 = load i32, i32* %ch, align 4, !dbg !6333
  %idxprom4 = sext i32 %3 to i64, !dbg !6332
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6332
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 64, !dbg !6334
  %arrayidx = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom4, !dbg !6332
  %arrayidx5 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6332
  %5 = load i32*, i32** %arrayidx5, align 8, !dbg !6332
  %add.ptr = getelementptr inbounds i32, i32* %5, i64 -4, !dbg !6335
  %6 = bitcast i32* %add.ptr to i8*, !dbg !6332
  store i8* %6, i8** %d.addr.i, align 8, !dbg !6336
  %7 = load i8*, i8** %d.addr.i, align 8, !dbg !6337
  %8 = bitcast i8* %7 to %struct.v.1*, !dbg !6338
  call void asm "pxor %xmm0, %xmm0  \0A\09movdqa   %xmm0, $0  \0A\09", "=*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v.1* %8) #7, !dbg !6339, !srcloc !6290
  br label %for.inc, !dbg !6336

for.inc:                                          ; preds = %for.body3
  %9 = load i32, i32* %band, align 4, !dbg !6340
  %inc = add nsw i32 %9, 1, !dbg !6340
  store i32 %inc, i32* %band, align 4, !dbg !6340
  br label %for.cond1, !dbg !6342, !llvm.loop !6343

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !6345

for.inc6:                                         ; preds = %for.end
  %10 = load i32, i32* %ch, align 4, !dbg !6347
  %inc7 = add nsw i32 %10, 1, !dbg !6347
  store i32 %inc7, i32* %ch, align 4, !dbg !6347
  br label %for.cond, !dbg !6349, !llvm.loop !6350

for.end8:                                         ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6352, !srcloc !2826
  ret void, !dbg !6354
}

; Function Attrs: nounwind uwtable
define internal void @erase_dsp_history(%struct.DCACoreDecoder* %s) #0 !dbg !6355 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6356, metadata !2194), !dbg !6357
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6358
  %dcadsp_data = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 70, !dbg !6359
  %arraydecay = getelementptr inbounds [7 x %struct.DCADSPData], [7 x %struct.DCADSPData]* %dcadsp_data, i32 0, i32 0, !dbg !6360
  %1 = bitcast %struct.DCADSPData* %arraydecay to i8*, !dbg !6360
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 30688, i32 32, i1 false), !dbg !6360
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6361
  %output_history_lfe_fixed = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 80, !dbg !6362
  store i32 0, i32* %output_history_lfe_fixed, align 8, !dbg !6363
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6364
  %output_history_lfe_float = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 81, !dbg !6365
  store float 0.000000e+00, float* %output_history_lfe_float, align 4, !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_dca_core_init(%struct.DCACoreDecoder* %s) #5 !dbg !6368 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6369, metadata !2194), !dbg !6370
  %call = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 0), !dbg !6371
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6373
  %float_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 75, !dbg !6374
  store %struct.AVFloatDSPContext* %call, %struct.AVFloatDSPContext** %float_dsp, align 8, !dbg !6375
  %tobool = icmp ne %struct.AVFloatDSPContext* %call, null, !dbg !6375
  br i1 %tobool, label %if.end, label %if.then, !dbg !6376

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6377
  br label %return, !dbg !6377

if.end:                                           ; preds = %entry
  %call1 = call %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32 0), !dbg !6378
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6380
  %fixed_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 76, !dbg !6381
  store %struct.AVFixedDSPContext* %call1, %struct.AVFixedDSPContext** %fixed_dsp, align 32, !dbg !6382
  %tobool2 = icmp ne %struct.AVFixedDSPContext* %call1, null, !dbg !6382
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6383

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !6384
  br label %return, !dbg !6384

if.end4:                                          ; preds = %if.end
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6385
  %dcadct = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 72, !dbg !6386
  call void @ff_dcadct_init(%struct.DCADCTContext* %dcadct), !dbg !6387
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6388
  %imdct = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 73, !dbg !6390
  %arrayidx = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %imdct, i64 0, i64 0, !dbg !6388
  %call5 = call i32 @ff_mdct_init(%struct.FFTContext* %arrayidx, i32 6, i32 1, double 1.000000e+00), !dbg !6391
  %cmp = icmp slt i32 %call5, 0, !dbg !6392
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6393

if.then6:                                         ; preds = %if.end4
  store i32 -1, i32* %retval, align 4, !dbg !6394
  br label %return, !dbg !6394

if.end7:                                          ; preds = %if.end4
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6395
  %imdct8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 73, !dbg !6397
  %arrayidx9 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %imdct8, i64 0, i64 1, !dbg !6395
  %call10 = call i32 @ff_mdct_init(%struct.FFTContext* %arrayidx9, i32 7, i32 1, double 1.000000e+00), !dbg !6398
  %cmp11 = icmp slt i32 %call10, 0, !dbg !6399
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6400

if.then12:                                        ; preds = %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !6401
  br label %return, !dbg !6401

if.end13:                                         ; preds = %if.end7
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6402
  %synth = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 74, !dbg !6403
  call void @ff_synth_filter_init(%struct.SynthFilterContext* %synth), !dbg !6404
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6405
  %x96_rand = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 60, !dbg !6406
  store i32 1, i32* %x96_rand, align 8, !dbg !6407
  store i32 0, i32* %retval, align 4, !dbg !6408
  br label %return, !dbg !6408

return:                                           ; preds = %if.end13, %if.then12, %if.then6, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6409
  ret i32 %7, !dbg !6409
}

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #4

declare %struct.AVFixedDSPContext* @avpriv_alloc_fixed_dsp(i32) #4

declare void @ff_dcadct_init(%struct.DCADCTContext*) #4

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #4

declare void @ff_synth_filter_init(%struct.SynthFilterContext*) #4

; Function Attrs: cold nounwind optsize uwtable
define void @ff_dca_core_close(%struct.DCACoreDecoder* %s) #5 !dbg !6410 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6411, metadata !2194), !dbg !6412
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6413
  %float_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 75, !dbg !6414
  %1 = bitcast %struct.AVFloatDSPContext** %float_dsp to i8*, !dbg !6415
  call void @av_freep(i8* %1), !dbg !6416
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6417
  %fixed_dsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 76, !dbg !6418
  %3 = bitcast %struct.AVFixedDSPContext** %fixed_dsp to i8*, !dbg !6419
  call void @av_freep(i8* %3), !dbg !6420
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6421
  %imdct = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 73, !dbg !6422
  %arrayidx = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %imdct, i64 0, i64 0, !dbg !6421
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx), !dbg !6423
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6424
  %imdct1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 73, !dbg !6425
  %arrayidx2 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %imdct1, i64 0, i64 1, !dbg !6424
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx2), !dbg !6426
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6427
  %subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 66, !dbg !6428
  %7 = bitcast i32** %subband_buffer to i8*, !dbg !6429
  call void @av_freep(i8* %7), !dbg !6430
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6431
  %subband_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 65, !dbg !6432
  store i32 0, i32* %subband_size, align 16, !dbg !6433
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6434
  %x96_subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 63, !dbg !6435
  %10 = bitcast i32** %x96_subband_buffer to i8*, !dbg !6436
  call void @av_freep(i8* %10), !dbg !6437
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6438
  %x96_subband_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 62, !dbg !6439
  store i32 0, i32* %x96_subband_size, align 32, !dbg !6440
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6441
  %output_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 78, !dbg !6442
  %13 = bitcast i8** %output_buffer to i8*, !dbg !6443
  call void @av_freep(i8* %13), !dbg !6444
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6445
  %output_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 77, !dbg !6446
  store i32 0, i32* %output_size, align 8, !dbg !6447
  ret void, !dbg !6448
}

declare void @av_freep(i8*) #4

declare void @ff_mdct_end(%struct.FFTContext*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #2 !dbg !6449 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6450, metadata !2194), !dbg !6451
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6452, metadata !2194), !dbg !6453
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !6454, metadata !2194), !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !6456, metadata !2194), !dbg !6457
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6458, metadata !2194), !dbg !6459
  store i32 0, i32* %ret, align 4, !dbg !6459
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !6460
  %cmp = icmp sge i32 %0, 2147483135, !dbg !6462
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6463

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !6464
  %cmp1 = icmp slt i32 %1, 0, !dbg !6466
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !6467

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !6468
  %tobool = icmp ne i8* %2, null, !dbg !6468
  br i1 %tobool, label %if.end, label %if.then, !dbg !6470

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !6471
  store i8* null, i8** %buffer.addr, align 8, !dbg !6473
  store i32 -1094995529, i32* %ret, align 4, !dbg !6474
  br label %if.end, !dbg !6475

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !6476
  %add = add nsw i32 %3, 7, !dbg !6477
  %shr = ashr i32 %add, 3, !dbg !6478
  store i32 %shr, i32* %buffer_size, align 4, !dbg !6479
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !6480
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6481
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !6482
  store i8* %4, i8** %buffer3, align 8, !dbg !6483
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !6484
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6485
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !6486
  store i32 %6, i32* %size_in_bits, align 4, !dbg !6487
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !6488
  %add4 = add nsw i32 %8, 8, !dbg !6489
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6490
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !6491
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !6492
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !6493
  %11 = load i32, i32* %buffer_size, align 4, !dbg !6494
  %idx.ext = sext i32 %11 to i64, !dbg !6495
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !6495
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6496
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !6497
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !6498
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6499
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !6500
  store i32 0, i32* %index, align 8, !dbg !6501
  %14 = load i32, i32* %ret, align 4, !dbg !6502
  ret i32 %14, !dbg !6503
}

declare i32 @ff_dca_parse_core_frame_header(%struct.DCACoreFrameHeader*, %struct.GetBitContext*) #4

declare void @av_fast_mallocz(i8*, i32*, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @parse_coding_header(%struct.DCACoreDecoder* %s, i32 %header, i32 %xch_base) #0 !dbg !6504 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4667, metadata !2194), !dbg !6505
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %header.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %nchannels = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header_pos = alloca i32, align 4
  %mask = alloca i32, align 4
  %index = alloca i32, align 4
  %coeff_ptr = alloca i32*, align 8
  %code = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !6509, metadata !2194), !dbg !6510
  store i32 %header, i32* %header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header.addr, metadata !6511, metadata !2194), !dbg !6512
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !6513, metadata !2194), !dbg !6514
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6515, metadata !2194), !dbg !6516
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6517, metadata !2194), !dbg !6518
  call void @llvm.dbg.declare(metadata i32* %nchannels, metadata !6519, metadata !2194), !dbg !6520
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !6521, metadata !2194), !dbg !6522
  store i32 0, i32* %header_size, align 4, !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %header_pos, metadata !6523, metadata !2194), !dbg !6524
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6525
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !6526
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !6527
  store i32 %call, i32* %header_pos, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6528, metadata !2194), !dbg !6529
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6530, metadata !2194), !dbg !6531
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6532
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !6534
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !6535
  %cmp = icmp slt i32 %call2, 0, !dbg !6536
  br i1 %cmp, label %if.then, label %if.end, !dbg !6537

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6538
  br label %return, !dbg !6538

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %header.addr, align 4, !dbg !6539
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb32
  ], !dbg !6540

sw.bb:                                            ; preds = %if.end
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6541
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 1, !dbg !6542
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 4), !dbg !6543
  %add = add i32 %call4, 1, !dbg !6544
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6545
  %nsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 22, !dbg !6546
  store i32 %add, i32* %nsubframes, align 4, !dbg !6547
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6548
  %gb5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 1, !dbg !6549
  %call6 = call i32 @get_bits(%struct.GetBitContext* %gb5, i32 3), !dbg !6550
  %add7 = add i32 %call6, 1, !dbg !6551
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6552
  %nchannels8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 23, !dbg !6553
  store i32 %add7, i32* %nchannels8, align 8, !dbg !6554
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6555
  %nchannels9 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 23, !dbg !6557
  %8 = load i32, i32* %nchannels9, align 8, !dbg !6557
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6558
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 6, !dbg !6559
  %10 = load i32, i32* %audio_mode, align 4, !dbg !6559
  %idxprom = sext i32 %10 to i64, !dbg !6560
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom, !dbg !6560
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6560
  %conv = zext i8 %11 to i32, !dbg !6560
  %cmp10 = icmp ne i32 %8, %conv, !dbg !6561
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !6562

if.then12:                                        ; preds = %sw.bb
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6563
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !6565
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6565
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !6563
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6566
  %nchannels13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 23, !dbg !6567
  %16 = load i32, i32* %nchannels13, align 8, !dbg !6567
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6568
  %audio_mode14 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 6, !dbg !6569
  %18 = load i32, i32* %audio_mode14, align 4, !dbg !6569
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.11, i32 0, i32 0), i32 %16, i32 %18), !dbg !6570
  store i32 -1094995529, i32* %retval, align 4, !dbg !6571
  br label %return, !dbg !6571

if.end15:                                         ; preds = %sw.bb
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6572
  %audio_mode16 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 6, !dbg !6573
  %20 = load i32, i32* %audio_mode16, align 4, !dbg !6573
  %idxprom17 = sext i32 %20 to i64, !dbg !6574
  %arrayidx18 = getelementptr inbounds [10 x i8], [10 x i8]* @audio_mode_ch_mask, i64 0, i64 %idxprom17, !dbg !6574
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !6574
  %conv19 = zext i8 %21 to i32, !dbg !6574
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6575
  %ch_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 24, !dbg !6576
  store i32 %conv19, i32* %ch_mask, align 4, !dbg !6577
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6578
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 15, !dbg !6580
  %24 = load i32, i32* %lfe_present, align 8, !dbg !6580
  %tobool = icmp ne i32 %24, 0, !dbg !6578
  br i1 %tobool, label %if.then20, label %if.end22, !dbg !6581

if.then20:                                        ; preds = %if.end15
  %25 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6582
  %ch_mask21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %25, i32 0, i32 24, !dbg !6583
  %26 = load i32, i32* %ch_mask21, align 4, !dbg !6584
  %or = or i32 %26, 32, !dbg !6584
  store i32 %or, i32* %ch_mask21, align 4, !dbg !6584
  br label %if.end22, !dbg !6582

if.end22:                                         ; preds = %if.then20, %if.end15
  br label %sw.epilog, !dbg !6585

sw.bb23:                                          ; preds = %if.end
  %27 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6586
  %audio_mode24 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %27, i32 0, i32 6, !dbg !6587
  %28 = load i32, i32* %audio_mode24, align 4, !dbg !6587
  %idxprom25 = sext i32 %28 to i64, !dbg !6588
  %arrayidx26 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom25, !dbg !6588
  %29 = load i8, i8* %arrayidx26, align 1, !dbg !6588
  %conv27 = zext i8 %29 to i32, !dbg !6588
  %add28 = add nsw i32 %conv27, 1, !dbg !6589
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6590
  %nchannels29 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 23, !dbg !6591
  store i32 %add28, i32* %nchannels29, align 8, !dbg !6592
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6593
  %ch_mask30 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 24, !dbg !6594
  %32 = load i32, i32* %ch_mask30, align 4, !dbg !6595
  %or31 = or i32 %32, 64, !dbg !6595
  store i32 %or31, i32* %ch_mask30, align 4, !dbg !6595
  br label %sw.epilog, !dbg !6596

sw.bb32:                                          ; preds = %if.end
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6597
  %gb33 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 1, !dbg !6598
  %call34 = call i32 @get_bits(%struct.GetBitContext* %gb33, i32 7), !dbg !6599
  %add35 = add i32 %call34, 1, !dbg !6600
  store i32 %add35, i32* %header_size, align 4, !dbg !6601
  %34 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6602
  %xxch_crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %34, i32 0, i32 46, !dbg !6604
  %35 = load i32, i32* %xxch_crc_present, align 16, !dbg !6604
  %tobool36 = icmp ne i32 %35, 0, !dbg !6602
  br i1 %tobool36, label %land.lhs.true, label %if.end44, !dbg !6605

land.lhs.true:                                    ; preds = %sw.bb32
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6606
  %avctx37 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 0, !dbg !6608
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx37, align 32, !dbg !6608
  %38 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6609
  %gb38 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %38, i32 0, i32 1, !dbg !6610
  %39 = load i32, i32* %header_pos, align 4, !dbg !6611
  %40 = load i32, i32* %header_pos, align 4, !dbg !6612
  %41 = load i32, i32* %header_size, align 4, !dbg !6613
  %mul = mul nsw i32 %41, 8, !dbg !6614
  %add39 = add nsw i32 %40, %mul, !dbg !6615
  %call40 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %37, %struct.GetBitContext* %gb38, i32 %39, i32 %add39), !dbg !6616
  %tobool41 = icmp ne i32 %call40, 0, !dbg !6616
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !6617

if.then42:                                        ; preds = %land.lhs.true
  %42 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6619
  %avctx43 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %42, i32 0, i32 0, !dbg !6621
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 32, !dbg !6621
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !6619
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i32 0, i32 0)), !dbg !6622
  store i32 -1094995529, i32* %retval, align 4, !dbg !6623
  br label %return, !dbg !6623

if.end44:                                         ; preds = %land.lhs.true, %sw.bb32
  %45 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6624
  %gb45 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %45, i32 0, i32 1, !dbg !6625
  %call46 = call i32 @get_bits(%struct.GetBitContext* %gb45, i32 3), !dbg !6626
  %add47 = add i32 %call46, 1, !dbg !6627
  store i32 %add47, i32* %nchannels, align 4, !dbg !6628
  %46 = load i32, i32* %nchannels, align 4, !dbg !6629
  %cmp48 = icmp sgt i32 %46, 2, !dbg !6631
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !6632

if.then50:                                        ; preds = %if.end44
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6633
  %avctx51 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 0, !dbg !6635
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx51, align 32, !dbg !6635
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !6633
  %50 = load i32, i32* %nchannels, align 4, !dbg !6636
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i32 %50), !dbg !6637
  store i32 -1163346256, i32* %retval, align 4, !dbg !6638
  br label %return, !dbg !6638

if.end52:                                         ; preds = %if.end44
  %51 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6639
  %audio_mode53 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %51, i32 0, i32 6, !dbg !6640
  %52 = load i32, i32* %audio_mode53, align 4, !dbg !6640
  %idxprom54 = sext i32 %52 to i64, !dbg !6641
  %arrayidx55 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom54, !dbg !6641
  %53 = load i8, i8* %arrayidx55, align 1, !dbg !6641
  %conv56 = zext i8 %53 to i32, !dbg !6641
  %54 = load i32, i32* %nchannels, align 4, !dbg !6642
  %add57 = add nsw i32 %conv56, %54, !dbg !6643
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6644
  %nchannels58 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 23, !dbg !6645
  store i32 %add57, i32* %nchannels58, align 8, !dbg !6646
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6647
  %gb59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 1, !dbg !6648
  %57 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6649
  %xxch_mask_nbits = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %57, i32 0, i32 47, !dbg !6650
  %58 = load i32, i32* %xxch_mask_nbits, align 4, !dbg !6650
  %sub = sub nsw i32 %58, 6, !dbg !6651
  %call60 = call i32 @get_bits_long(%struct.GetBitContext* %gb59, i32 %sub), !dbg !6652
  store i32 %call60, i32* %mask, align 4, !dbg !6653
  %59 = load i32, i32* %mask, align 4, !dbg !6654
  %shl = shl i32 %59, 6, !dbg !6655
  %60 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6656
  %xxch_spkr_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %60, i32 0, i32 49, !dbg !6657
  store i32 %shl, i32* %xxch_spkr_mask, align 4, !dbg !6658
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6659
  %xxch_spkr_mask61 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 49, !dbg !6660
  %62 = load i32, i32* %xxch_spkr_mask61, align 4, !dbg !6660
  store i32 %62, i32* %x.addr.i, align 4, !dbg !6661
  %63 = load i32, i32* %x.addr.i, align 4, !dbg !6662
  %shr.i = lshr i32 %63, 1, !dbg !6663
  %and.i = and i32 %shr.i, 1431655765, !dbg !6664
  %64 = load i32, i32* %x.addr.i, align 4, !dbg !6665
  %sub.i = sub i32 %64, %and.i, !dbg !6665
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !6665
  %65 = load i32, i32* %x.addr.i, align 4, !dbg !6666
  %and1.i = and i32 %65, 858993459, !dbg !6667
  %66 = load i32, i32* %x.addr.i, align 4, !dbg !6668
  %shr2.i = lshr i32 %66, 2, !dbg !6669
  %and3.i = and i32 %shr2.i, 858993459, !dbg !6670
  %add.i = add i32 %and1.i, %and3.i, !dbg !6671
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !6672
  %67 = load i32, i32* %x.addr.i, align 4, !dbg !6673
  %68 = load i32, i32* %x.addr.i, align 4, !dbg !6674
  %shr4.i = lshr i32 %68, 4, !dbg !6675
  %add5.i = add i32 %67, %shr4.i, !dbg !6676
  %and6.i = and i32 %add5.i, 252645135, !dbg !6677
  store i32 %and6.i, i32* %x.addr.i, align 4, !dbg !6678
  %69 = load i32, i32* %x.addr.i, align 4, !dbg !6679
  %shr7.i = lshr i32 %69, 8, !dbg !6680
  %70 = load i32, i32* %x.addr.i, align 4, !dbg !6681
  %add8.i = add i32 %70, %shr7.i, !dbg !6681
  store i32 %add8.i, i32* %x.addr.i, align 4, !dbg !6681
  %71 = load i32, i32* %x.addr.i, align 4, !dbg !6682
  %72 = load i32, i32* %x.addr.i, align 4, !dbg !6683
  %shr9.i = lshr i32 %72, 16, !dbg !6684
  %add10.i = add i32 %71, %shr9.i, !dbg !6685
  %and11.i = and i32 %add10.i, 63, !dbg !6686
  %73 = load i32, i32* %nchannels, align 4, !dbg !6687
  %cmp63 = icmp ne i32 %and11.i, %73, !dbg !6688
  br i1 %cmp63, label %if.then65, label %if.end68, !dbg !6689

if.then65:                                        ; preds = %if.end52
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6690
  %avctx66 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 0, !dbg !6692
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 32, !dbg !6692
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !6690
  %77 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6693
  %xxch_spkr_mask67 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %77, i32 0, i32 49, !dbg !6694
  %78 = load i32, i32* %xxch_spkr_mask67, align 4, !dbg !6694
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i32 0, i32 0), i32 %78), !dbg !6695
  store i32 -1094995529, i32* %retval, align 4, !dbg !6696
  br label %return, !dbg !6696

if.end68:                                         ; preds = %if.end52
  %79 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6697
  %xxch_core_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %79, i32 0, i32 48, !dbg !6699
  %80 = load i32, i32* %xxch_core_mask, align 8, !dbg !6699
  %81 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6700
  %xxch_spkr_mask69 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %81, i32 0, i32 49, !dbg !6701
  %82 = load i32, i32* %xxch_spkr_mask69, align 4, !dbg !6701
  %and = and i32 %80, %82, !dbg !6702
  %tobool70 = icmp ne i32 %and, 0, !dbg !6702
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !6703

if.then71:                                        ; preds = %if.end68
  %83 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6704
  %avctx72 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %83, i32 0, i32 0, !dbg !6706
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx72, align 32, !dbg !6706
  %85 = bitcast %struct.AVCodecContext* %84 to i8*, !dbg !6704
  %86 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6707
  %xxch_spkr_mask73 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %86, i32 0, i32 49, !dbg !6708
  %87 = load i32, i32* %xxch_spkr_mask73, align 4, !dbg !6708
  %88 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6709
  %xxch_core_mask74 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %88, i32 0, i32 48, !dbg !6710
  %89 = load i32, i32* %xxch_core_mask74, align 8, !dbg !6710
  call void (i8*, i32, i8*, ...) @av_log(i8* %85, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.15, i32 0, i32 0), i32 %87, i32 %89), !dbg !6711
  store i32 -1094995529, i32* %retval, align 4, !dbg !6712
  br label %return, !dbg !6712

if.end75:                                         ; preds = %if.end68
  %90 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6713
  %xxch_core_mask76 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %90, i32 0, i32 48, !dbg !6714
  %91 = load i32, i32* %xxch_core_mask76, align 8, !dbg !6714
  %92 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6715
  %xxch_spkr_mask77 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %92, i32 0, i32 49, !dbg !6716
  %93 = load i32, i32* %xxch_spkr_mask77, align 4, !dbg !6716
  %or78 = or i32 %91, %93, !dbg !6717
  %94 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6718
  %ch_mask79 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %94, i32 0, i32 24, !dbg !6719
  store i32 %or78, i32* %ch_mask79, align 4, !dbg !6720
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6721
  %gb80 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 1, !dbg !6723
  %call81 = call i32 @get_bits1(%struct.GetBitContext* %gb80), !dbg !6724
  %tobool82 = icmp ne i32 %call81, 0, !dbg !6724
  br i1 %tobool82, label %if.then83, label %if.else154, !dbg !6725

if.then83:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata i32** %coeff_ptr, metadata !6726, metadata !2194), !dbg !6728
  %96 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6729
  %xxch_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %96, i32 0, i32 53, !dbg !6730
  %arraydecay = getelementptr inbounds [12 x i32], [12 x i32]* %xxch_dmix_coeff, i32 0, i32 0, !dbg !6729
  store i32* %arraydecay, i32** %coeff_ptr, align 8, !dbg !6728
  %97 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6731
  %gb84 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %97, i32 0, i32 1, !dbg !6732
  %call85 = call i32 @get_bits1(%struct.GetBitContext* %gb84), !dbg !6733
  %98 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6734
  %xxch_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %98, i32 0, i32 50, !dbg !6735
  store i32 %call85, i32* %xxch_dmix_embedded, align 32, !dbg !6736
  %99 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6737
  %gb86 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %99, i32 0, i32 1, !dbg !6738
  %call87 = call i32 @get_bits(%struct.GetBitContext* %gb86, i32 6), !dbg !6739
  %mul88 = mul i32 %call87, 4, !dbg !6740
  %sub89 = sub i32 %mul88, 41, !dbg !6741
  %sub90 = sub i32 %sub89, 3, !dbg !6742
  store i32 %sub90, i32* %index, align 4, !dbg !6743
  %100 = load i32, i32* %index, align 4, !dbg !6744
  %cmp91 = icmp uge i32 %100, 201, !dbg !6746
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !6747

if.then93:                                        ; preds = %if.then83
  %101 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6748
  %avctx94 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %101, i32 0, i32 0, !dbg !6750
  %102 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx94, align 32, !dbg !6750
  %103 = bitcast %struct.AVCodecContext* %102 to i8*, !dbg !6748
  %104 = load i32, i32* %index, align 4, !dbg !6751
  call void (i8*, i32, i8*, ...) @av_log(i8* %103, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i32 0, i32 0), i32 %104), !dbg !6752
  store i32 -1094995529, i32* %retval, align 4, !dbg !6753
  br label %return, !dbg !6753

if.end95:                                         ; preds = %if.then83
  %105 = load i32, i32* %index, align 4, !dbg !6754
  %idxprom96 = zext i32 %105 to i64, !dbg !6755
  %arrayidx97 = getelementptr inbounds [201 x i32], [201 x i32]* @ff_dca_inv_dmixtable, i64 0, i64 %idxprom96, !dbg !6755
  %106 = load i32, i32* %arrayidx97, align 4, !dbg !6755
  %107 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6756
  %xxch_dmix_scale_inv = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %107, i32 0, i32 51, !dbg !6757
  store i32 %106, i32* %xxch_dmix_scale_inv, align 4, !dbg !6758
  store i32 0, i32* %ch, align 4, !dbg !6759
  br label %for.cond, !dbg !6761

for.cond:                                         ; preds = %for.inc, %if.end95
  %108 = load i32, i32* %ch, align 4, !dbg !6762
  %109 = load i32, i32* %nchannels, align 4, !dbg !6765
  %cmp98 = icmp slt i32 %108, %109, !dbg !6766
  br i1 %cmp98, label %for.body, label %for.end, !dbg !6767

for.body:                                         ; preds = %for.cond
  %110 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6768
  %gb100 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %110, i32 0, i32 1, !dbg !6770
  %111 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6771
  %xxch_mask_nbits101 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %111, i32 0, i32 47, !dbg !6772
  %112 = load i32, i32* %xxch_mask_nbits101, align 4, !dbg !6772
  %call102 = call i32 @get_bits_long(%struct.GetBitContext* %gb100, i32 %112), !dbg !6773
  store i32 %call102, i32* %mask, align 4, !dbg !6774
  %113 = load i32, i32* %mask, align 4, !dbg !6775
  %114 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6777
  %xxch_core_mask103 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %114, i32 0, i32 48, !dbg !6778
  %115 = load i32, i32* %xxch_core_mask103, align 8, !dbg !6778
  %and104 = and i32 %113, %115, !dbg !6779
  %116 = load i32, i32* %mask, align 4, !dbg !6780
  %cmp105 = icmp ne i32 %and104, %116, !dbg !6781
  br i1 %cmp105, label %if.then107, label %if.end109, !dbg !6782

if.then107:                                       ; preds = %for.body
  %117 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6783
  %avctx108 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %117, i32 0, i32 0, !dbg !6785
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx108, align 32, !dbg !6785
  %119 = bitcast %struct.AVCodecContext* %118 to i8*, !dbg !6783
  %120 = load i32, i32* %mask, align 4, !dbg !6786
  call void (i8*, i32, i8*, ...) @av_log(i8* %119, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i32 0, i32 0), i32 %120), !dbg !6787
  store i32 -1094995529, i32* %retval, align 4, !dbg !6788
  br label %return, !dbg !6788

if.end109:                                        ; preds = %for.body
  %121 = load i32, i32* %mask, align 4, !dbg !6789
  %122 = load i32, i32* %ch, align 4, !dbg !6790
  %idxprom110 = sext i32 %122 to i64, !dbg !6791
  %123 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6791
  %xxch_dmix_mask = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %123, i32 0, i32 52, !dbg !6792
  %arrayidx111 = getelementptr inbounds [2 x i32], [2 x i32]* %xxch_dmix_mask, i64 0, i64 %idxprom110, !dbg !6791
  store i32 %121, i32* %arrayidx111, align 4, !dbg !6793
  br label %for.inc, !dbg !6794

for.inc:                                          ; preds = %if.end109
  %124 = load i32, i32* %ch, align 4, !dbg !6795
  %inc = add nsw i32 %124, 1, !dbg !6795
  store i32 %inc, i32* %ch, align 4, !dbg !6795
  br label %for.cond, !dbg !6797, !llvm.loop !6798

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !6800
  br label %for.cond112, !dbg !6802

for.cond112:                                      ; preds = %for.inc151, %for.end
  %125 = load i32, i32* %ch, align 4, !dbg !6803
  %126 = load i32, i32* %nchannels, align 4, !dbg !6806
  %cmp113 = icmp slt i32 %125, %126, !dbg !6807
  br i1 %cmp113, label %for.body115, label %for.end153, !dbg !6808

for.body115:                                      ; preds = %for.cond112
  store i32 0, i32* %n, align 4, !dbg !6809
  br label %for.cond116, !dbg !6812

for.cond116:                                      ; preds = %for.inc148, %for.body115
  %127 = load i32, i32* %n, align 4, !dbg !6813
  %128 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6816
  %xxch_mask_nbits117 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %128, i32 0, i32 47, !dbg !6817
  %129 = load i32, i32* %xxch_mask_nbits117, align 4, !dbg !6817
  %cmp118 = icmp slt i32 %127, %129, !dbg !6818
  br i1 %cmp118, label %for.body120, label %for.end150, !dbg !6819

for.body120:                                      ; preds = %for.cond116
  %130 = load i32, i32* %ch, align 4, !dbg !6820
  %idxprom121 = sext i32 %130 to i64, !dbg !6823
  %131 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6823
  %xxch_dmix_mask122 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %131, i32 0, i32 52, !dbg !6824
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %xxch_dmix_mask122, i64 0, i64 %idxprom121, !dbg !6823
  %132 = load i32, i32* %arrayidx123, align 4, !dbg !6823
  %133 = load i32, i32* %n, align 4, !dbg !6825
  %shl124 = shl i32 1, %133, !dbg !6826
  %and125 = and i32 %132, %shl124, !dbg !6827
  %tobool126 = icmp ne i32 %and125, 0, !dbg !6827
  br i1 %tobool126, label %if.then127, label %if.end147, !dbg !6828

if.then127:                                       ; preds = %for.body120
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6829, metadata !2194), !dbg !6831
  %134 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6832
  %gb128 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %134, i32 0, i32 1, !dbg !6833
  %call129 = call i32 @get_bits(%struct.GetBitContext* %gb128, i32 7), !dbg !6834
  store i32 %call129, i32* %code, align 4, !dbg !6831
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6835, metadata !2194), !dbg !6836
  %135 = load i32, i32* %code, align 4, !dbg !6837
  %shr = ashr i32 %135, 6, !dbg !6838
  %sub130 = sub nsw i32 %shr, 1, !dbg !6839
  store i32 %sub130, i32* %sign, align 4, !dbg !6836
  %136 = load i32, i32* %code, align 4, !dbg !6840
  %and131 = and i32 %136, 63, !dbg !6840
  store i32 %and131, i32* %code, align 4, !dbg !6840
  %tobool132 = icmp ne i32 %and131, 0, !dbg !6840
  br i1 %tobool132, label %if.then133, label %if.else, !dbg !6842

if.then133:                                       ; preds = %if.then127
  %137 = load i32, i32* %code, align 4, !dbg !6843
  %mul134 = mul nsw i32 %137, 4, !dbg !6845
  %sub135 = sub nsw i32 %mul134, 3, !dbg !6846
  store i32 %sub135, i32* %index, align 4, !dbg !6847
  %138 = load i32, i32* %index, align 4, !dbg !6848
  %cmp136 = icmp uge i32 %138, 242, !dbg !6850
  br i1 %cmp136, label %if.then138, label %if.end140, !dbg !6851

if.then138:                                       ; preds = %if.then133
  %139 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6852
  %avctx139 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %139, i32 0, i32 0, !dbg !6854
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx139, align 32, !dbg !6854
  %141 = bitcast %struct.AVCodecContext* %140 to i8*, !dbg !6852
  %142 = load i32, i32* %index, align 4, !dbg !6855
  call void (i8*, i32, i8*, ...) @av_log(i8* %141, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i32 0, i32 0), i32 %142), !dbg !6856
  store i32 -1094995529, i32* %retval, align 4, !dbg !6857
  br label %return, !dbg !6857

if.end140:                                        ; preds = %if.then133
  %143 = load i32, i32* %index, align 4, !dbg !6858
  %idxprom141 = zext i32 %143 to i64, !dbg !6859
  %arrayidx142 = getelementptr inbounds [242 x i16], [242 x i16]* @ff_dca_dmixtable, i64 0, i64 %idxprom141, !dbg !6859
  %144 = load i16, i16* %arrayidx142, align 2, !dbg !6859
  %conv143 = zext i16 %144 to i32, !dbg !6859
  %145 = load i32, i32* %sign, align 4, !dbg !6860
  %xor = xor i32 %conv143, %145, !dbg !6861
  %146 = load i32, i32* %sign, align 4, !dbg !6862
  %sub144 = sub nsw i32 %xor, %146, !dbg !6863
  %147 = load i32*, i32** %coeff_ptr, align 8, !dbg !6864
  %incdec.ptr = getelementptr inbounds i32, i32* %147, i32 1, !dbg !6864
  store i32* %incdec.ptr, i32** %coeff_ptr, align 8, !dbg !6864
  store i32 %sub144, i32* %147, align 4, !dbg !6865
  br label %if.end146, !dbg !6866

if.else:                                          ; preds = %if.then127
  %148 = load i32*, i32** %coeff_ptr, align 8, !dbg !6867
  %incdec.ptr145 = getelementptr inbounds i32, i32* %148, i32 1, !dbg !6867
  store i32* %incdec.ptr145, i32** %coeff_ptr, align 8, !dbg !6867
  store i32 0, i32* %148, align 4, !dbg !6869
  br label %if.end146

if.end146:                                        ; preds = %if.else, %if.end140
  br label %if.end147, !dbg !6870

if.end147:                                        ; preds = %if.end146, %for.body120
  br label %for.inc148, !dbg !6871

for.inc148:                                       ; preds = %if.end147
  %149 = load i32, i32* %n, align 4, !dbg !6872
  %inc149 = add nsw i32 %149, 1, !dbg !6872
  store i32 %inc149, i32* %n, align 4, !dbg !6872
  br label %for.cond116, !dbg !6874, !llvm.loop !6875

for.end150:                                       ; preds = %for.cond116
  br label %for.inc151, !dbg !6877

for.inc151:                                       ; preds = %for.end150
  %150 = load i32, i32* %ch, align 4, !dbg !6878
  %inc152 = add nsw i32 %150, 1, !dbg !6878
  store i32 %inc152, i32* %ch, align 4, !dbg !6878
  br label %for.cond112, !dbg !6880, !llvm.loop !6881

for.end153:                                       ; preds = %for.cond112
  br label %if.end156, !dbg !6883

if.else154:                                       ; preds = %if.end75
  %151 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6884
  %xxch_dmix_embedded155 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %151, i32 0, i32 50, !dbg !6886
  store i32 0, i32* %xxch_dmix_embedded155, align 32, !dbg !6887
  br label %if.end156

if.end156:                                        ; preds = %if.else154, %for.end153
  br label %sw.epilog, !dbg !6888

sw.epilog:                                        ; preds = %if.end, %if.end156, %sw.bb23, %if.end22
  %152 = load i32, i32* %xch_base.addr, align 4, !dbg !6889
  store i32 %152, i32* %ch, align 4, !dbg !6891
  br label %for.cond157, !dbg !6892

for.cond157:                                      ; preds = %for.inc177, %sw.epilog
  %153 = load i32, i32* %ch, align 4, !dbg !6893
  %154 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6896
  %nchannels158 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %154, i32 0, i32 23, !dbg !6897
  %155 = load i32, i32* %nchannels158, align 8, !dbg !6897
  %cmp159 = icmp slt i32 %153, %155, !dbg !6898
  br i1 %cmp159, label %for.body161, label %for.end179, !dbg !6899

for.body161:                                      ; preds = %for.cond157
  %156 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6900
  %gb162 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %156, i32 0, i32 1, !dbg !6902
  %call163 = call i32 @get_bits(%struct.GetBitContext* %gb162, i32 5), !dbg !6903
  %add164 = add i32 %call163, 2, !dbg !6904
  %conv165 = trunc i32 %add164 to i8, !dbg !6903
  %157 = load i32, i32* %ch, align 4, !dbg !6905
  %idxprom166 = sext i32 %157 to i64, !dbg !6906
  %158 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6906
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %158, i32 0, i32 25, !dbg !6907
  %arrayidx167 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom166, !dbg !6906
  store i8 %conv165, i8* %arrayidx167, align 1, !dbg !6908
  %159 = load i32, i32* %ch, align 4, !dbg !6909
  %idxprom168 = sext i32 %159 to i64, !dbg !6911
  %160 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6911
  %nsubbands169 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %160, i32 0, i32 25, !dbg !6912
  %arrayidx170 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands169, i64 0, i64 %idxprom168, !dbg !6911
  %161 = load i8, i8* %arrayidx170, align 1, !dbg !6911
  %conv171 = sext i8 %161 to i32, !dbg !6911
  %cmp172 = icmp sgt i32 %conv171, 32, !dbg !6913
  br i1 %cmp172, label %if.then174, label %if.end176, !dbg !6914

if.then174:                                       ; preds = %for.body161
  %162 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6915
  %avctx175 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %162, i32 0, i32 0, !dbg !6917
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx175, align 32, !dbg !6917
  %164 = bitcast %struct.AVCodecContext* %163 to i8*, !dbg !6915
  call void (i8*, i32, i8*, ...) @av_log(i8* %164, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i32 0, i32 0)), !dbg !6918
  store i32 -1094995529, i32* %retval, align 4, !dbg !6919
  br label %return, !dbg !6919

if.end176:                                        ; preds = %for.body161
  br label %for.inc177, !dbg !6920

for.inc177:                                       ; preds = %if.end176
  %165 = load i32, i32* %ch, align 4, !dbg !6921
  %inc178 = add nsw i32 %165, 1, !dbg !6921
  store i32 %inc178, i32* %ch, align 4, !dbg !6921
  br label %for.cond157, !dbg !6923, !llvm.loop !6924

for.end179:                                       ; preds = %for.cond157
  %166 = load i32, i32* %xch_base.addr, align 4, !dbg !6926
  store i32 %166, i32* %ch, align 4, !dbg !6928
  br label %for.cond180, !dbg !6929

for.cond180:                                      ; preds = %for.inc191, %for.end179
  %167 = load i32, i32* %ch, align 4, !dbg !6930
  %168 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6933
  %nchannels181 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %168, i32 0, i32 23, !dbg !6934
  %169 = load i32, i32* %nchannels181, align 8, !dbg !6934
  %cmp182 = icmp slt i32 %167, %169, !dbg !6935
  br i1 %cmp182, label %for.body184, label %for.end193, !dbg !6936

for.body184:                                      ; preds = %for.cond180
  %170 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6937
  %gb185 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %170, i32 0, i32 1, !dbg !6938
  %call186 = call i32 @get_bits(%struct.GetBitContext* %gb185, i32 5), !dbg !6939
  %add187 = add i32 %call186, 1, !dbg !6940
  %conv188 = trunc i32 %add187 to i8, !dbg !6939
  %171 = load i32, i32* %ch, align 4, !dbg !6941
  %idxprom189 = sext i32 %171 to i64, !dbg !6942
  %172 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6942
  %subband_vq_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %172, i32 0, i32 26, !dbg !6943
  %arrayidx190 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start, i64 0, i64 %idxprom189, !dbg !6942
  store i8 %conv188, i8* %arrayidx190, align 1, !dbg !6944
  br label %for.inc191, !dbg !6942

for.inc191:                                       ; preds = %for.body184
  %173 = load i32, i32* %ch, align 4, !dbg !6945
  %inc192 = add nsw i32 %173, 1, !dbg !6945
  store i32 %inc192, i32* %ch, align 4, !dbg !6945
  br label %for.cond180, !dbg !6947, !llvm.loop !6948

for.end193:                                       ; preds = %for.cond180
  %174 = load i32, i32* %xch_base.addr, align 4, !dbg !6950
  store i32 %174, i32* %ch, align 4, !dbg !6952
  br label %for.cond194, !dbg !6953

for.cond194:                                      ; preds = %for.inc218, %for.end193
  %175 = load i32, i32* %ch, align 4, !dbg !6954
  %176 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6957
  %nchannels195 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %176, i32 0, i32 23, !dbg !6958
  %177 = load i32, i32* %nchannels195, align 8, !dbg !6958
  %cmp196 = icmp slt i32 %175, %177, !dbg !6959
  br i1 %cmp196, label %for.body198, label %for.end220, !dbg !6960

for.body198:                                      ; preds = %for.cond194
  %178 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6961
  %gb199 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %178, i32 0, i32 1, !dbg !6964
  %call200 = call i32 @get_bits(%struct.GetBitContext* %gb199, i32 3), !dbg !6965
  store i32 %call200, i32* %n, align 4, !dbg !6966
  %tobool201 = icmp ne i32 %call200, 0, !dbg !6966
  br i1 %tobool201, label %land.lhs.true202, label %if.end208, !dbg !6967

land.lhs.true202:                                 ; preds = %for.body198
  %179 = load i32, i32* %header.addr, align 4, !dbg !6968
  %cmp203 = icmp eq i32 %179, 2, !dbg !6970
  br i1 %cmp203, label %if.then205, label %if.end208, !dbg !6971

if.then205:                                       ; preds = %land.lhs.true202
  %180 = load i32, i32* %xch_base.addr, align 4, !dbg !6972
  %sub206 = sub nsw i32 %180, 1, !dbg !6973
  %181 = load i32, i32* %n, align 4, !dbg !6974
  %add207 = add nsw i32 %181, %sub206, !dbg !6974
  store i32 %add207, i32* %n, align 4, !dbg !6974
  br label %if.end208, !dbg !6975

if.end208:                                        ; preds = %if.then205, %land.lhs.true202, %for.body198
  %182 = load i32, i32* %n, align 4, !dbg !6976
  %183 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6978
  %nchannels209 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %183, i32 0, i32 23, !dbg !6979
  %184 = load i32, i32* %nchannels209, align 8, !dbg !6979
  %cmp210 = icmp sgt i32 %182, %184, !dbg !6980
  br i1 %cmp210, label %if.then212, label %if.end214, !dbg !6981

if.then212:                                       ; preds = %if.end208
  %185 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6982
  %avctx213 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %185, i32 0, i32 0, !dbg !6984
  %186 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx213, align 32, !dbg !6984
  %187 = bitcast %struct.AVCodecContext* %186 to i8*, !dbg !6982
  call void (i8*, i32, i8*, ...) @av_log(i8* %187, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0)), !dbg !6985
  store i32 -1094995529, i32* %retval, align 4, !dbg !6986
  br label %return, !dbg !6986

if.end214:                                        ; preds = %if.end208
  %188 = load i32, i32* %n, align 4, !dbg !6987
  %conv215 = trunc i32 %188 to i8, !dbg !6987
  %189 = load i32, i32* %ch, align 4, !dbg !6988
  %idxprom216 = sext i32 %189 to i64, !dbg !6989
  %190 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !6989
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %190, i32 0, i32 27, !dbg !6990
  %arrayidx217 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom216, !dbg !6989
  store i8 %conv215, i8* %arrayidx217, align 1, !dbg !6991
  br label %for.inc218, !dbg !6992

for.inc218:                                       ; preds = %if.end214
  %191 = load i32, i32* %ch, align 4, !dbg !6993
  %inc219 = add nsw i32 %191, 1, !dbg !6993
  store i32 %inc219, i32* %ch, align 4, !dbg !6993
  br label %for.cond194, !dbg !6995, !llvm.loop !6996

for.end220:                                       ; preds = %for.cond194
  %192 = load i32, i32* %xch_base.addr, align 4, !dbg !6998
  store i32 %192, i32* %ch, align 4, !dbg !7000
  br label %for.cond221, !dbg !7001

for.cond221:                                      ; preds = %for.inc231, %for.end220
  %193 = load i32, i32* %ch, align 4, !dbg !7002
  %194 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7005
  %nchannels222 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %194, i32 0, i32 23, !dbg !7006
  %195 = load i32, i32* %nchannels222, align 8, !dbg !7006
  %cmp223 = icmp slt i32 %193, %195, !dbg !7007
  br i1 %cmp223, label %for.body225, label %for.end233, !dbg !7008

for.body225:                                      ; preds = %for.cond221
  %196 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7009
  %gb226 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %196, i32 0, i32 1, !dbg !7010
  %call227 = call i32 @get_bits(%struct.GetBitContext* %gb226, i32 2), !dbg !7011
  %conv228 = trunc i32 %call227 to i8, !dbg !7011
  %197 = load i32, i32* %ch, align 4, !dbg !7012
  %idxprom229 = sext i32 %197 to i64, !dbg !7013
  %198 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7013
  %transition_mode_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %198, i32 0, i32 28, !dbg !7014
  %arrayidx230 = getelementptr inbounds [7 x i8], [7 x i8]* %transition_mode_sel, i64 0, i64 %idxprom229, !dbg !7013
  store i8 %conv228, i8* %arrayidx230, align 1, !dbg !7015
  br label %for.inc231, !dbg !7013

for.inc231:                                       ; preds = %for.body225
  %199 = load i32, i32* %ch, align 4, !dbg !7016
  %inc232 = add nsw i32 %199, 1, !dbg !7016
  store i32 %inc232, i32* %ch, align 4, !dbg !7016
  br label %for.cond221, !dbg !7018, !llvm.loop !7019

for.end233:                                       ; preds = %for.cond221
  %200 = load i32, i32* %xch_base.addr, align 4, !dbg !7021
  store i32 %200, i32* %ch, align 4, !dbg !7023
  br label %for.cond234, !dbg !7024

for.cond234:                                      ; preds = %for.inc253, %for.end233
  %201 = load i32, i32* %ch, align 4, !dbg !7025
  %202 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7028
  %nchannels235 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %202, i32 0, i32 23, !dbg !7029
  %203 = load i32, i32* %nchannels235, align 8, !dbg !7029
  %cmp236 = icmp slt i32 %201, %203, !dbg !7030
  br i1 %cmp236, label %for.body238, label %for.end255, !dbg !7031

for.body238:                                      ; preds = %for.cond234
  %204 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7032
  %gb239 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %204, i32 0, i32 1, !dbg !7034
  %call240 = call i32 @get_bits(%struct.GetBitContext* %gb239, i32 3), !dbg !7035
  %conv241 = trunc i32 %call240 to i8, !dbg !7035
  %205 = load i32, i32* %ch, align 4, !dbg !7036
  %idxprom242 = sext i32 %205 to i64, !dbg !7037
  %206 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7037
  %scale_factor_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %206, i32 0, i32 29, !dbg !7038
  %arrayidx243 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel, i64 0, i64 %idxprom242, !dbg !7037
  store i8 %conv241, i8* %arrayidx243, align 1, !dbg !7039
  %207 = load i32, i32* %ch, align 4, !dbg !7040
  %idxprom244 = sext i32 %207 to i64, !dbg !7042
  %208 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7042
  %scale_factor_sel245 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %208, i32 0, i32 29, !dbg !7043
  %arrayidx246 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel245, i64 0, i64 %idxprom244, !dbg !7042
  %209 = load i8, i8* %arrayidx246, align 1, !dbg !7042
  %conv247 = sext i8 %209 to i32, !dbg !7042
  %cmp248 = icmp eq i32 %conv247, 7, !dbg !7044
  br i1 %cmp248, label %if.then250, label %if.end252, !dbg !7045

if.then250:                                       ; preds = %for.body238
  %210 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7046
  %avctx251 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %210, i32 0, i32 0, !dbg !7048
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx251, align 32, !dbg !7048
  %212 = bitcast %struct.AVCodecContext* %211 to i8*, !dbg !7046
  call void (i8*, i32, i8*, ...) @av_log(i8* %212, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !7049
  store i32 -1094995529, i32* %retval, align 4, !dbg !7050
  br label %return, !dbg !7050

if.end252:                                        ; preds = %for.body238
  br label %for.inc253, !dbg !7051

for.inc253:                                       ; preds = %if.end252
  %213 = load i32, i32* %ch, align 4, !dbg !7052
  %inc254 = add nsw i32 %213, 1, !dbg !7052
  store i32 %inc254, i32* %ch, align 4, !dbg !7052
  br label %for.cond234, !dbg !7054, !llvm.loop !7055

for.end255:                                       ; preds = %for.cond234
  %214 = load i32, i32* %xch_base.addr, align 4, !dbg !7057
  store i32 %214, i32* %ch, align 4, !dbg !7059
  br label %for.cond256, !dbg !7060

for.cond256:                                      ; preds = %for.inc275, %for.end255
  %215 = load i32, i32* %ch, align 4, !dbg !7061
  %216 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7064
  %nchannels257 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %216, i32 0, i32 23, !dbg !7065
  %217 = load i32, i32* %nchannels257, align 8, !dbg !7065
  %cmp258 = icmp slt i32 %215, %217, !dbg !7066
  br i1 %cmp258, label %for.body260, label %for.end277, !dbg !7067

for.body260:                                      ; preds = %for.cond256
  %218 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7068
  %gb261 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %218, i32 0, i32 1, !dbg !7070
  %call262 = call i32 @get_bits(%struct.GetBitContext* %gb261, i32 3), !dbg !7071
  %conv263 = trunc i32 %call262 to i8, !dbg !7071
  %219 = load i32, i32* %ch, align 4, !dbg !7072
  %idxprom264 = sext i32 %219 to i64, !dbg !7073
  %220 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7073
  %bit_allocation_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %220, i32 0, i32 30, !dbg !7074
  %arrayidx265 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_allocation_sel, i64 0, i64 %idxprom264, !dbg !7073
  store i8 %conv263, i8* %arrayidx265, align 1, !dbg !7075
  %221 = load i32, i32* %ch, align 4, !dbg !7076
  %idxprom266 = sext i32 %221 to i64, !dbg !7078
  %222 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7078
  %bit_allocation_sel267 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %222, i32 0, i32 30, !dbg !7079
  %arrayidx268 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_allocation_sel267, i64 0, i64 %idxprom266, !dbg !7078
  %223 = load i8, i8* %arrayidx268, align 1, !dbg !7078
  %conv269 = sext i8 %223 to i32, !dbg !7078
  %cmp270 = icmp eq i32 %conv269, 7, !dbg !7080
  br i1 %cmp270, label %if.then272, label %if.end274, !dbg !7081

if.then272:                                       ; preds = %for.body260
  %224 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7082
  %avctx273 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %224, i32 0, i32 0, !dbg !7084
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx273, align 32, !dbg !7084
  %226 = bitcast %struct.AVCodecContext* %225 to i8*, !dbg !7082
  call void (i8*, i32, i8*, ...) @av_log(i8* %226, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i32 0, i32 0)), !dbg !7085
  store i32 -1094995529, i32* %retval, align 4, !dbg !7086
  br label %return, !dbg !7086

if.end274:                                        ; preds = %for.body260
  br label %for.inc275, !dbg !7087

for.inc275:                                       ; preds = %if.end274
  %227 = load i32, i32* %ch, align 4, !dbg !7088
  %inc276 = add nsw i32 %227, 1, !dbg !7088
  store i32 %inc276, i32* %ch, align 4, !dbg !7088
  br label %for.cond256, !dbg !7090, !llvm.loop !7091

for.end277:                                       ; preds = %for.cond256
  store i32 0, i32* %n, align 4, !dbg !7093
  br label %for.cond278, !dbg !7095

for.cond278:                                      ; preds = %for.inc300, %for.end277
  %228 = load i32, i32* %n, align 4, !dbg !7096
  %cmp279 = icmp slt i32 %228, 10, !dbg !7099
  br i1 %cmp279, label %for.body281, label %for.end302, !dbg !7100

for.body281:                                      ; preds = %for.cond278
  %229 = load i32, i32* %xch_base.addr, align 4, !dbg !7101
  store i32 %229, i32* %ch, align 4, !dbg !7103
  br label %for.cond282, !dbg !7104

for.cond282:                                      ; preds = %for.inc297, %for.body281
  %230 = load i32, i32* %ch, align 4, !dbg !7105
  %231 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7108
  %nchannels283 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %231, i32 0, i32 23, !dbg !7109
  %232 = load i32, i32* %nchannels283, align 8, !dbg !7109
  %cmp284 = icmp slt i32 %230, %232, !dbg !7110
  br i1 %cmp284, label %for.body286, label %for.end299, !dbg !7111

for.body286:                                      ; preds = %for.cond282
  %233 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7112
  %gb287 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %233, i32 0, i32 1, !dbg !7113
  %234 = load i32, i32* %n, align 4, !dbg !7114
  %idxprom288 = sext i32 %234 to i64, !dbg !7115
  %arrayidx289 = getelementptr inbounds [10 x i8], [10 x i8]* @ff_dca_quant_index_sel_nbits, i64 0, i64 %idxprom288, !dbg !7115
  %235 = load i8, i8* %arrayidx289, align 1, !dbg !7115
  %conv290 = zext i8 %235 to i32, !dbg !7115
  %call291 = call i32 @get_bits(%struct.GetBitContext* %gb287, i32 %conv290), !dbg !7116
  %conv292 = trunc i32 %call291 to i8, !dbg !7116
  %236 = load i32, i32* %n, align 4, !dbg !7117
  %idxprom293 = sext i32 %236 to i64, !dbg !7118
  %237 = load i32, i32* %ch, align 4, !dbg !7119
  %idxprom294 = sext i32 %237 to i64, !dbg !7118
  %238 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7118
  %quant_index_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %238, i32 0, i32 31, !dbg !7120
  %arrayidx295 = getelementptr inbounds [7 x [10 x i8]], [7 x [10 x i8]]* %quant_index_sel, i64 0, i64 %idxprom294, !dbg !7118
  %arrayidx296 = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx295, i64 0, i64 %idxprom293, !dbg !7118
  store i8 %conv292, i8* %arrayidx296, align 1, !dbg !7121
  br label %for.inc297, !dbg !7118

for.inc297:                                       ; preds = %for.body286
  %239 = load i32, i32* %ch, align 4, !dbg !7122
  %inc298 = add nsw i32 %239, 1, !dbg !7122
  store i32 %inc298, i32* %ch, align 4, !dbg !7122
  br label %for.cond282, !dbg !7124, !llvm.loop !7125

for.end299:                                       ; preds = %for.cond282
  br label %for.inc300, !dbg !7127

for.inc300:                                       ; preds = %for.end299
  %240 = load i32, i32* %n, align 4, !dbg !7129
  %inc301 = add nsw i32 %240, 1, !dbg !7129
  store i32 %inc301, i32* %n, align 4, !dbg !7129
  br label %for.cond278, !dbg !7131, !llvm.loop !7132

for.end302:                                       ; preds = %for.cond278
  store i32 0, i32* %n, align 4, !dbg !7134
  br label %for.cond303, !dbg !7136

for.cond303:                                      ; preds = %for.inc336, %for.end302
  %241 = load i32, i32* %n, align 4, !dbg !7137
  %cmp304 = icmp slt i32 %241, 10, !dbg !7140
  br i1 %cmp304, label %for.body306, label %for.end338, !dbg !7141

for.body306:                                      ; preds = %for.cond303
  %242 = load i32, i32* %xch_base.addr, align 4, !dbg !7142
  store i32 %242, i32* %ch, align 4, !dbg !7144
  br label %for.cond307, !dbg !7145

for.cond307:                                      ; preds = %for.inc333, %for.body306
  %243 = load i32, i32* %ch, align 4, !dbg !7146
  %244 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7149
  %nchannels308 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %244, i32 0, i32 23, !dbg !7150
  %245 = load i32, i32* %nchannels308, align 8, !dbg !7150
  %cmp309 = icmp slt i32 %243, %245, !dbg !7151
  br i1 %cmp309, label %for.body311, label %for.end335, !dbg !7152

for.body311:                                      ; preds = %for.cond307
  %246 = load i32, i32* %n, align 4, !dbg !7153
  %idxprom312 = sext i32 %246 to i64, !dbg !7155
  %247 = load i32, i32* %ch, align 4, !dbg !7156
  %idxprom313 = sext i32 %247 to i64, !dbg !7155
  %248 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7155
  %quant_index_sel314 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %248, i32 0, i32 31, !dbg !7157
  %arrayidx315 = getelementptr inbounds [7 x [10 x i8]], [7 x [10 x i8]]* %quant_index_sel314, i64 0, i64 %idxprom313, !dbg !7155
  %arrayidx316 = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx315, i64 0, i64 %idxprom312, !dbg !7155
  %249 = load i8, i8* %arrayidx316, align 1, !dbg !7155
  %conv317 = sext i8 %249 to i32, !dbg !7155
  %250 = load i32, i32* %n, align 4, !dbg !7158
  %idxprom318 = sext i32 %250 to i64, !dbg !7159
  %arrayidx319 = getelementptr inbounds [10 x i8], [10 x i8]* @ff_dca_quant_index_group_size, i64 0, i64 %idxprom318, !dbg !7159
  %251 = load i8, i8* %arrayidx319, align 1, !dbg !7159
  %conv320 = zext i8 %251 to i32, !dbg !7159
  %cmp321 = icmp slt i32 %conv317, %conv320, !dbg !7160
  br i1 %cmp321, label %if.then323, label %if.end332, !dbg !7161

if.then323:                                       ; preds = %for.body311
  %252 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7162
  %gb324 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %252, i32 0, i32 1, !dbg !7163
  %call325 = call i32 @get_bits(%struct.GetBitContext* %gb324, i32 2), !dbg !7164
  %idxprom326 = zext i32 %call325 to i64, !dbg !7165
  %arrayidx327 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_dca_scale_factor_adj, i64 0, i64 %idxprom326, !dbg !7165
  %253 = load i32, i32* %arrayidx327, align 4, !dbg !7165
  %254 = load i32, i32* %n, align 4, !dbg !7166
  %idxprom328 = sext i32 %254 to i64, !dbg !7167
  %255 = load i32, i32* %ch, align 4, !dbg !7168
  %idxprom329 = sext i32 %255 to i64, !dbg !7167
  %256 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7167
  %scale_factor_adj = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %256, i32 0, i32 32, !dbg !7169
  %arrayidx330 = getelementptr inbounds [7 x [10 x i32]], [7 x [10 x i32]]* %scale_factor_adj, i64 0, i64 %idxprom329, !dbg !7167
  %arrayidx331 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx330, i64 0, i64 %idxprom328, !dbg !7167
  store i32 %253, i32* %arrayidx331, align 4, !dbg !7170
  br label %if.end332, !dbg !7167

if.end332:                                        ; preds = %if.then323, %for.body311
  br label %for.inc333, !dbg !7171

for.inc333:                                       ; preds = %if.end332
  %257 = load i32, i32* %ch, align 4, !dbg !7173
  %inc334 = add nsw i32 %257, 1, !dbg !7173
  store i32 %inc334, i32* %ch, align 4, !dbg !7173
  br label %for.cond307, !dbg !7175, !llvm.loop !7176

for.end335:                                       ; preds = %for.cond307
  br label %for.inc336, !dbg !7178

for.inc336:                                       ; preds = %for.end335
  %258 = load i32, i32* %n, align 4, !dbg !7180
  %inc337 = add nsw i32 %258, 1, !dbg !7180
  store i32 %inc337, i32* %n, align 4, !dbg !7180
  br label %for.cond303, !dbg !7182, !llvm.loop !7183

for.end338:                                       ; preds = %for.cond303
  %259 = load i32, i32* %header.addr, align 4, !dbg !7185
  %cmp339 = icmp eq i32 %259, 2, !dbg !7187
  br i1 %cmp339, label %if.then341, label %if.else350, !dbg !7188

if.then341:                                       ; preds = %for.end338
  %260 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7189
  %gb342 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %260, i32 0, i32 1, !dbg !7192
  %261 = load i32, i32* %header_pos, align 4, !dbg !7193
  %262 = load i32, i32* %header_size, align 4, !dbg !7194
  %mul343 = mul nsw i32 %262, 8, !dbg !7195
  %add344 = add nsw i32 %261, %mul343, !dbg !7196
  %call345 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb342, i32 %add344), !dbg !7197
  %tobool346 = icmp ne i32 %call345, 0, !dbg !7197
  br i1 %tobool346, label %if.then347, label %if.end349, !dbg !7198

if.then347:                                       ; preds = %if.then341
  %263 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7199
  %avctx348 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %263, i32 0, i32 0, !dbg !7201
  %264 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx348, align 32, !dbg !7201
  %265 = bitcast %struct.AVCodecContext* %264 to i8*, !dbg !7199
  call void (i8*, i32, i8*, ...) @av_log(i8* %265, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0)), !dbg !7202
  store i32 -1094995529, i32* %retval, align 4, !dbg !7203
  br label %return, !dbg !7203

if.end349:                                        ; preds = %if.then341
  br label %if.end355, !dbg !7204

if.else350:                                       ; preds = %for.end338
  %266 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7205
  %crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %266, i32 0, i32 3, !dbg !7208
  %267 = load i32, i32* %crc_present, align 8, !dbg !7208
  %tobool351 = icmp ne i32 %267, 0, !dbg !7205
  br i1 %tobool351, label %if.then352, label %if.end354, !dbg !7209

if.then352:                                       ; preds = %if.else350
  %268 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7210
  %gb353 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %268, i32 0, i32 1, !dbg !7211
  call void @skip_bits(%struct.GetBitContext* %gb353, i32 16), !dbg !7212
  br label %if.end354, !dbg !7212

if.end354:                                        ; preds = %if.then352, %if.else350
  br label %if.end355

if.end355:                                        ; preds = %if.end354, %if.end349
  store i32 0, i32* %retval, align 4, !dbg !7213
  br label %return, !dbg !7213

return:                                           ; preds = %if.end355, %if.then347, %if.then272, %if.then250, %if.then212, %if.then174, %if.then138, %if.then107, %if.then93, %if.then71, %if.then65, %if.then50, %if.then42, %if.then12, %if.then
  %269 = load i32, i32* %retval, align 4, !dbg !7214
  ret i32 %269, !dbg !7214
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_subframe_header(%struct.DCACoreDecoder* %s, i32 %sf, i32 %header, i32 %xch_base) #0 !dbg !7215 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %sf.addr = alloca i32, align 4
  %header.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  %ret = alloca i32, align 4
  %sel = alloca i32, align 4
  %abits = alloca i32, align 4
  %sel113 = alloca i32, align 4
  %sel155 = alloca i32, align 4
  %scale_index = alloca i32, align 4
  %src_ch = alloca i32, align 4
  %sel285 = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !7218, metadata !2194), !dbg !7219
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !7220, metadata !2194), !dbg !7221
  store i32 %header, i32* %header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header.addr, metadata !7222, metadata !2194), !dbg !7223
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !7224, metadata !2194), !dbg !7225
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7226, metadata !2194), !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %band, metadata !7228, metadata !2194), !dbg !7229
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7230, metadata !2194), !dbg !7231
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7232
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !7234
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !7235
  %cmp = icmp slt i32 %call, 0, !dbg !7236
  br i1 %cmp, label %if.then, label %if.end, !dbg !7237

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !7238
  br label %return, !dbg !7238

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %header.addr, align 4, !dbg !7239
  %cmp1 = icmp eq i32 %1, 0, !dbg !7241
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7242

if.then2:                                         ; preds = %if.end
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7243
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 1, !dbg !7245
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 2), !dbg !7246
  %add = add i32 %call4, 1, !dbg !7247
  %conv = trunc i32 %add to i8, !dbg !7246
  %3 = load i32, i32* %sf.addr, align 4, !dbg !7248
  %idxprom = sext i32 %3 to i64, !dbg !7249
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7249
  %nsubsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 33, !dbg !7250
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes, i64 0, i64 %idxprom, !dbg !7249
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7251
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7252
  %gb5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 1, !dbg !7253
  call void @skip_bits(%struct.GetBitContext* %gb5, i32 3), !dbg !7254
  br label %if.end6, !dbg !7255

if.end6:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %xch_base.addr, align 4, !dbg !7256
  store i32 %6, i32* %ch, align 4, !dbg !7258
  br label %for.cond, !dbg !7259

for.cond:                                         ; preds = %for.inc23, %if.end6
  %7 = load i32, i32* %ch, align 4, !dbg !7260
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7263
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 23, !dbg !7264
  %9 = load i32, i32* %nchannels, align 8, !dbg !7264
  %cmp7 = icmp slt i32 %7, %9, !dbg !7265
  br i1 %cmp7, label %for.body, label %for.end25, !dbg !7266

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %band, align 4, !dbg !7267
  br label %for.cond9, !dbg !7269

for.cond9:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %band, align 4, !dbg !7270
  %11 = load i32, i32* %ch, align 4, !dbg !7273
  %idxprom10 = sext i32 %11 to i64, !dbg !7274
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7274
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 25, !dbg !7275
  %arrayidx11 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom10, !dbg !7274
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !7274
  %conv12 = sext i8 %13 to i32, !dbg !7274
  %cmp13 = icmp slt i32 %10, %conv12, !dbg !7276
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !7277

for.body15:                                       ; preds = %for.cond9
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7278
  %gb16 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 1, !dbg !7279
  %call17 = call i32 @get_bits1(%struct.GetBitContext* %gb16), !dbg !7280
  %conv18 = trunc i32 %call17 to i8, !dbg !7280
  %15 = load i32, i32* %band, align 4, !dbg !7281
  %idxprom19 = sext i32 %15 to i64, !dbg !7282
  %16 = load i32, i32* %ch, align 4, !dbg !7283
  %idxprom20 = sext i32 %16 to i64, !dbg !7282
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7282
  %prediction_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 34, !dbg !7284
  %arrayidx21 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode, i64 0, i64 %idxprom20, !dbg !7282
  %arrayidx22 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !7282
  store i8 %conv18, i8* %arrayidx22, align 1, !dbg !7285
  br label %for.inc, !dbg !7282

for.inc:                                          ; preds = %for.body15
  %18 = load i32, i32* %band, align 4, !dbg !7286
  %inc = add nsw i32 %18, 1, !dbg !7286
  store i32 %inc, i32* %band, align 4, !dbg !7286
  br label %for.cond9, !dbg !7288, !llvm.loop !7289

for.end:                                          ; preds = %for.cond9
  br label %for.inc23, !dbg !7291

for.inc23:                                        ; preds = %for.end
  %19 = load i32, i32* %ch, align 4, !dbg !7293
  %inc24 = add nsw i32 %19, 1, !dbg !7293
  store i32 %inc24, i32* %ch, align 4, !dbg !7293
  br label %for.cond, !dbg !7295, !llvm.loop !7296

for.end25:                                        ; preds = %for.cond
  %20 = load i32, i32* %xch_base.addr, align 4, !dbg !7298
  store i32 %20, i32* %ch, align 4, !dbg !7300
  br label %for.cond26, !dbg !7301

for.cond26:                                       ; preds = %for.inc56, %for.end25
  %21 = load i32, i32* %ch, align 4, !dbg !7302
  %22 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7305
  %nchannels27 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %22, i32 0, i32 23, !dbg !7306
  %23 = load i32, i32* %nchannels27, align 8, !dbg !7306
  %cmp28 = icmp slt i32 %21, %23, !dbg !7307
  br i1 %cmp28, label %for.body30, label %for.end58, !dbg !7308

for.body30:                                       ; preds = %for.cond26
  store i32 0, i32* %band, align 4, !dbg !7309
  br label %for.cond31, !dbg !7311

for.cond31:                                       ; preds = %for.inc53, %for.body30
  %24 = load i32, i32* %band, align 4, !dbg !7312
  %25 = load i32, i32* %ch, align 4, !dbg !7315
  %idxprom32 = sext i32 %25 to i64, !dbg !7316
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7316
  %nsubbands33 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 25, !dbg !7317
  %arrayidx34 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands33, i64 0, i64 %idxprom32, !dbg !7316
  %27 = load i8, i8* %arrayidx34, align 1, !dbg !7316
  %conv35 = sext i8 %27 to i32, !dbg !7316
  %cmp36 = icmp slt i32 %24, %conv35, !dbg !7318
  br i1 %cmp36, label %for.body38, label %for.end55, !dbg !7319

for.body38:                                       ; preds = %for.cond31
  %28 = load i32, i32* %band, align 4, !dbg !7320
  %idxprom39 = sext i32 %28 to i64, !dbg !7322
  %29 = load i32, i32* %ch, align 4, !dbg !7323
  %idxprom40 = sext i32 %29 to i64, !dbg !7322
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7322
  %prediction_mode41 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 34, !dbg !7324
  %arrayidx42 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode41, i64 0, i64 %idxprom40, !dbg !7322
  %arrayidx43 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx42, i64 0, i64 %idxprom39, !dbg !7322
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !7322
  %tobool = icmp ne i8 %31, 0, !dbg !7322
  br i1 %tobool, label %if.then44, label %if.end52, !dbg !7325

if.then44:                                        ; preds = %for.body38
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7326
  %gb45 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 1, !dbg !7327
  %call46 = call i32 @get_bits(%struct.GetBitContext* %gb45, i32 12), !dbg !7328
  %conv47 = trunc i32 %call46 to i16, !dbg !7328
  %33 = load i32, i32* %band, align 4, !dbg !7329
  %idxprom48 = sext i32 %33 to i64, !dbg !7330
  %34 = load i32, i32* %ch, align 4, !dbg !7331
  %idxprom49 = sext i32 %34 to i64, !dbg !7330
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7330
  %prediction_vq_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 35, !dbg !7332
  %arrayidx50 = getelementptr inbounds [7 x [64 x i16]], [7 x [64 x i16]]* %prediction_vq_index, i64 0, i64 %idxprom49, !dbg !7330
  %arrayidx51 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx50, i64 0, i64 %idxprom48, !dbg !7330
  store i16 %conv47, i16* %arrayidx51, align 2, !dbg !7333
  br label %if.end52, !dbg !7330

if.end52:                                         ; preds = %if.then44, %for.body38
  br label %for.inc53, !dbg !7334

for.inc53:                                        ; preds = %if.end52
  %36 = load i32, i32* %band, align 4, !dbg !7336
  %inc54 = add nsw i32 %36, 1, !dbg !7336
  store i32 %inc54, i32* %band, align 4, !dbg !7336
  br label %for.cond31, !dbg !7338, !llvm.loop !7339

for.end55:                                        ; preds = %for.cond31
  br label %for.inc56, !dbg !7341

for.inc56:                                        ; preds = %for.end55
  %37 = load i32, i32* %ch, align 4, !dbg !7343
  %inc57 = add nsw i32 %37, 1, !dbg !7343
  store i32 %inc57, i32* %ch, align 4, !dbg !7343
  br label %for.cond26, !dbg !7345, !llvm.loop !7346

for.end58:                                        ; preds = %for.cond26
  %38 = load i32, i32* %xch_base.addr, align 4, !dbg !7348
  store i32 %38, i32* %ch, align 4, !dbg !7350
  br label %for.cond59, !dbg !7351

for.cond59:                                       ; preds = %for.inc94, %for.end58
  %39 = load i32, i32* %ch, align 4, !dbg !7352
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7355
  %nchannels60 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 23, !dbg !7356
  %41 = load i32, i32* %nchannels60, align 8, !dbg !7356
  %cmp61 = icmp slt i32 %39, %41, !dbg !7357
  br i1 %cmp61, label %for.body63, label %for.end96, !dbg !7358

for.body63:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !7359, metadata !2194), !dbg !7361
  %42 = load i32, i32* %ch, align 4, !dbg !7362
  %idxprom64 = sext i32 %42 to i64, !dbg !7363
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7363
  %bit_allocation_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 30, !dbg !7364
  %arrayidx65 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_allocation_sel, i64 0, i64 %idxprom64, !dbg !7363
  %44 = load i8, i8* %arrayidx65, align 1, !dbg !7363
  %conv66 = sext i8 %44 to i32, !dbg !7363
  store i32 %conv66, i32* %sel, align 4, !dbg !7361
  store i32 0, i32* %band, align 4, !dbg !7365
  br label %for.cond67, !dbg !7367

for.cond67:                                       ; preds = %for.inc91, %for.body63
  %45 = load i32, i32* %band, align 4, !dbg !7368
  %46 = load i32, i32* %ch, align 4, !dbg !7371
  %idxprom68 = sext i32 %46 to i64, !dbg !7372
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7372
  %subband_vq_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 26, !dbg !7373
  %arrayidx69 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start, i64 0, i64 %idxprom68, !dbg !7372
  %48 = load i8, i8* %arrayidx69, align 1, !dbg !7372
  %conv70 = sext i8 %48 to i32, !dbg !7372
  %cmp71 = icmp slt i32 %45, %conv70, !dbg !7374
  br i1 %cmp71, label %for.body73, label %for.end93, !dbg !7375

for.body73:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %abits, metadata !7376, metadata !2194), !dbg !7378
  %49 = load i32, i32* %sel, align 4, !dbg !7379
  %cmp74 = icmp slt i32 %49, 5, !dbg !7381
  br i1 %cmp74, label %if.then76, label %if.else, !dbg !7382

if.then76:                                        ; preds = %for.body73
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7383
  %gb77 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 1, !dbg !7384
  %51 = load i32, i32* %sel, align 4, !dbg !7385
  %call78 = call i32 @dca_get_vlc(%struct.GetBitContext* %gb77, %struct.DCAVLC* @ff_dca_vlc_bit_allocation, i32 %51), !dbg !7386
  store i32 %call78, i32* %abits, align 4, !dbg !7387
  br label %if.end81, !dbg !7388

if.else:                                          ; preds = %for.body73
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7389
  %gb79 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 1, !dbg !7390
  %53 = load i32, i32* %sel, align 4, !dbg !7391
  %sub = sub nsw i32 %53, 1, !dbg !7392
  %call80 = call i32 @get_bits(%struct.GetBitContext* %gb79, i32 %sub), !dbg !7393
  store i32 %call80, i32* %abits, align 4, !dbg !7394
  br label %if.end81

if.end81:                                         ; preds = %if.else, %if.then76
  %54 = load i32, i32* %abits, align 4, !dbg !7395
  %cmp82 = icmp sgt i32 %54, 26, !dbg !7397
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !7398

if.then84:                                        ; preds = %if.end81
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7399
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 0, !dbg !7401
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7401
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !7399
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0)), !dbg !7402
  store i32 -1094995529, i32* %retval, align 4, !dbg !7403
  br label %return, !dbg !7403

if.end85:                                         ; preds = %if.end81
  %58 = load i32, i32* %abits, align 4, !dbg !7404
  %conv86 = trunc i32 %58 to i8, !dbg !7404
  %59 = load i32, i32* %band, align 4, !dbg !7405
  %idxprom87 = sext i32 %59 to i64, !dbg !7406
  %60 = load i32, i32* %ch, align 4, !dbg !7407
  %idxprom88 = sext i32 %60 to i64, !dbg !7406
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7406
  %bit_allocation = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 36, !dbg !7408
  %arrayidx89 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation, i64 0, i64 %idxprom88, !dbg !7406
  %arrayidx90 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx89, i64 0, i64 %idxprom87, !dbg !7406
  store i8 %conv86, i8* %arrayidx90, align 1, !dbg !7409
  br label %for.inc91, !dbg !7410

for.inc91:                                        ; preds = %if.end85
  %62 = load i32, i32* %band, align 4, !dbg !7411
  %inc92 = add nsw i32 %62, 1, !dbg !7411
  store i32 %inc92, i32* %band, align 4, !dbg !7411
  br label %for.cond67, !dbg !7413, !llvm.loop !7414

for.end93:                                        ; preds = %for.cond67
  br label %for.inc94, !dbg !7416

for.inc94:                                        ; preds = %for.end93
  %63 = load i32, i32* %ch, align 4, !dbg !7417
  %inc95 = add nsw i32 %63, 1, !dbg !7417
  store i32 %inc95, i32* %ch, align 4, !dbg !7417
  br label %for.cond59, !dbg !7419, !llvm.loop !7420

for.end96:                                        ; preds = %for.cond59
  %64 = load i32, i32* %xch_base.addr, align 4, !dbg !7422
  store i32 %64, i32* %ch, align 4, !dbg !7424
  br label %for.cond97, !dbg !7425

for.cond97:                                       ; preds = %for.inc147, %for.end96
  %65 = load i32, i32* %ch, align 4, !dbg !7426
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7429
  %nchannels98 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %66, i32 0, i32 23, !dbg !7430
  %67 = load i32, i32* %nchannels98, align 8, !dbg !7430
  %cmp99 = icmp slt i32 %65, %67, !dbg !7431
  br i1 %cmp99, label %for.body101, label %for.end149, !dbg !7432

for.body101:                                      ; preds = %for.cond97
  %68 = load i32, i32* %ch, align 4, !dbg !7433
  %idxprom102 = sext i32 %68 to i64, !dbg !7435
  %69 = load i32, i32* %sf.addr, align 4, !dbg !7436
  %idxprom103 = sext i32 %69 to i64, !dbg !7435
  %70 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7435
  %transition_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %70, i32 0, i32 37, !dbg !7437
  %arrayidx104 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode, i64 0, i64 %idxprom103, !dbg !7435
  %arrayidx105 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx104, i64 0, i64 %idxprom102, !dbg !7435
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx105, i32 0, i32 0, !dbg !7438
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 32, i32 8, i1 false), !dbg !7438
  %71 = load i32, i32* %sf.addr, align 4, !dbg !7439
  %idxprom106 = sext i32 %71 to i64, !dbg !7441
  %72 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7441
  %nsubsubframes107 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %72, i32 0, i32 33, !dbg !7442
  %arrayidx108 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes107, i64 0, i64 %idxprom106, !dbg !7441
  %73 = load i8, i8* %arrayidx108, align 1, !dbg !7441
  %conv109 = sext i8 %73 to i32, !dbg !7441
  %cmp110 = icmp sgt i32 %conv109, 1, !dbg !7443
  br i1 %cmp110, label %if.then112, label %if.end146, !dbg !7444

if.then112:                                       ; preds = %for.body101
  call void @llvm.dbg.declare(metadata i32* %sel113, metadata !7445, metadata !2194), !dbg !7447
  %74 = load i32, i32* %ch, align 4, !dbg !7448
  %idxprom114 = sext i32 %74 to i64, !dbg !7449
  %75 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7449
  %transition_mode_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %75, i32 0, i32 28, !dbg !7450
  %arrayidx115 = getelementptr inbounds [7 x i8], [7 x i8]* %transition_mode_sel, i64 0, i64 %idxprom114, !dbg !7449
  %76 = load i8, i8* %arrayidx115, align 1, !dbg !7449
  %conv116 = sext i8 %76 to i32, !dbg !7449
  store i32 %conv116, i32* %sel113, align 4, !dbg !7447
  store i32 0, i32* %band, align 4, !dbg !7451
  br label %for.cond117, !dbg !7453

for.cond117:                                      ; preds = %for.inc143, %if.then112
  %77 = load i32, i32* %band, align 4, !dbg !7454
  %78 = load i32, i32* %ch, align 4, !dbg !7457
  %idxprom118 = sext i32 %78 to i64, !dbg !7458
  %79 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7458
  %subband_vq_start119 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %79, i32 0, i32 26, !dbg !7459
  %arrayidx120 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start119, i64 0, i64 %idxprom118, !dbg !7458
  %80 = load i8, i8* %arrayidx120, align 1, !dbg !7458
  %conv121 = sext i8 %80 to i32, !dbg !7458
  %cmp122 = icmp slt i32 %77, %conv121, !dbg !7460
  br i1 %cmp122, label %for.body124, label %for.end145, !dbg !7461

for.body124:                                      ; preds = %for.cond117
  %81 = load i32, i32* %band, align 4, !dbg !7462
  %idxprom125 = sext i32 %81 to i64, !dbg !7464
  %82 = load i32, i32* %ch, align 4, !dbg !7465
  %idxprom126 = sext i32 %82 to i64, !dbg !7464
  %83 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7464
  %bit_allocation127 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %83, i32 0, i32 36, !dbg !7466
  %arrayidx128 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation127, i64 0, i64 %idxprom126, !dbg !7464
  %arrayidx129 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx128, i64 0, i64 %idxprom125, !dbg !7464
  %84 = load i8, i8* %arrayidx129, align 1, !dbg !7464
  %tobool130 = icmp ne i8 %84, 0, !dbg !7464
  br i1 %tobool130, label %if.then131, label %if.end142, !dbg !7467

if.then131:                                       ; preds = %for.body124
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7468
  %gb132 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %85, i32 0, i32 1, !dbg !7469
  %86 = load i32, i32* %sel113, align 4, !dbg !7470
  %call133 = call i32 @dca_get_vlc(%struct.GetBitContext* %gb132, %struct.DCAVLC* @ff_dca_vlc_transition_mode, i32 %86), !dbg !7471
  %conv134 = trunc i32 %call133 to i8, !dbg !7471
  %87 = load i32, i32* %band, align 4, !dbg !7472
  %idxprom135 = sext i32 %87 to i64, !dbg !7473
  %88 = load i32, i32* %ch, align 4, !dbg !7474
  %idxprom136 = sext i32 %88 to i64, !dbg !7473
  %89 = load i32, i32* %sf.addr, align 4, !dbg !7475
  %idxprom137 = sext i32 %89 to i64, !dbg !7473
  %90 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7473
  %transition_mode138 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %90, i32 0, i32 37, !dbg !7476
  %arrayidx139 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode138, i64 0, i64 %idxprom137, !dbg !7473
  %arrayidx140 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx139, i64 0, i64 %idxprom136, !dbg !7473
  %arrayidx141 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx140, i64 0, i64 %idxprom135, !dbg !7473
  store i8 %conv134, i8* %arrayidx141, align 1, !dbg !7477
  br label %if.end142, !dbg !7473

if.end142:                                        ; preds = %if.then131, %for.body124
  br label %for.inc143, !dbg !7478

for.inc143:                                       ; preds = %if.end142
  %91 = load i32, i32* %band, align 4, !dbg !7480
  %inc144 = add nsw i32 %91, 1, !dbg !7480
  store i32 %inc144, i32* %band, align 4, !dbg !7480
  br label %for.cond117, !dbg !7482, !llvm.loop !7483

for.end145:                                       ; preds = %for.cond117
  br label %if.end146, !dbg !7485

if.end146:                                        ; preds = %for.end145, %for.body101
  br label %for.inc147, !dbg !7486

for.inc147:                                       ; preds = %if.end146
  %92 = load i32, i32* %ch, align 4, !dbg !7487
  %inc148 = add nsw i32 %92, 1, !dbg !7487
  store i32 %inc148, i32* %ch, align 4, !dbg !7487
  br label %for.cond97, !dbg !7489, !llvm.loop !7490

for.end149:                                       ; preds = %for.cond97
  %93 = load i32, i32* %xch_base.addr, align 4, !dbg !7492
  store i32 %93, i32* %ch, align 4, !dbg !7494
  br label %for.cond150, !dbg !7495

for.cond150:                                      ; preds = %for.inc242, %for.end149
  %94 = load i32, i32* %ch, align 4, !dbg !7496
  %95 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7499
  %nchannels151 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %95, i32 0, i32 23, !dbg !7500
  %96 = load i32, i32* %nchannels151, align 8, !dbg !7500
  %cmp152 = icmp slt i32 %94, %96, !dbg !7501
  br i1 %cmp152, label %for.body154, label %for.end244, !dbg !7502

for.body154:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata i32* %sel155, metadata !7503, metadata !2194), !dbg !7505
  %97 = load i32, i32* %ch, align 4, !dbg !7506
  %idxprom156 = sext i32 %97 to i64, !dbg !7507
  %98 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7507
  %scale_factor_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %98, i32 0, i32 29, !dbg !7508
  %arrayidx157 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel, i64 0, i64 %idxprom156, !dbg !7507
  %99 = load i8, i8* %arrayidx157, align 1, !dbg !7507
  %conv158 = sext i8 %99 to i32, !dbg !7507
  store i32 %conv158, i32* %sel155, align 4, !dbg !7505
  call void @llvm.dbg.declare(metadata i32* %scale_index, metadata !7509, metadata !2194), !dbg !7510
  store i32 0, i32* %scale_index, align 4, !dbg !7510
  store i32 0, i32* %band, align 4, !dbg !7511
  br label %for.cond159, !dbg !7513

for.cond159:                                      ; preds = %for.inc213, %for.body154
  %100 = load i32, i32* %band, align 4, !dbg !7514
  %101 = load i32, i32* %ch, align 4, !dbg !7517
  %idxprom160 = sext i32 %101 to i64, !dbg !7518
  %102 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7518
  %subband_vq_start161 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %102, i32 0, i32 26, !dbg !7519
  %arrayidx162 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start161, i64 0, i64 %idxprom160, !dbg !7518
  %103 = load i8, i8* %arrayidx162, align 1, !dbg !7518
  %conv163 = sext i8 %103 to i32, !dbg !7518
  %cmp164 = icmp slt i32 %100, %conv163, !dbg !7520
  br i1 %cmp164, label %for.body166, label %for.end215, !dbg !7521

for.body166:                                      ; preds = %for.cond159
  %104 = load i32, i32* %band, align 4, !dbg !7522
  %idxprom167 = sext i32 %104 to i64, !dbg !7525
  %105 = load i32, i32* %ch, align 4, !dbg !7526
  %idxprom168 = sext i32 %105 to i64, !dbg !7525
  %106 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7525
  %bit_allocation169 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %106, i32 0, i32 36, !dbg !7527
  %arrayidx170 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation169, i64 0, i64 %idxprom168, !dbg !7525
  %arrayidx171 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx170, i64 0, i64 %idxprom167, !dbg !7525
  %107 = load i8, i8* %arrayidx171, align 1, !dbg !7525
  %tobool172 = icmp ne i8 %107, 0, !dbg !7525
  br i1 %tobool172, label %if.then173, label %if.else205, !dbg !7528

if.then173:                                       ; preds = %for.body166
  %108 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7529
  %109 = load i32, i32* %sel155, align 4, !dbg !7532
  %call174 = call i32 @parse_scale(%struct.DCACoreDecoder* %108, i32* %scale_index, i32 %109), !dbg !7533
  store i32 %call174, i32* %ret, align 4, !dbg !7534
  %cmp175 = icmp slt i32 %call174, 0, !dbg !7535
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !7536

if.then177:                                       ; preds = %if.then173
  %110 = load i32, i32* %ret, align 4, !dbg !7537
  store i32 %110, i32* %retval, align 4, !dbg !7538
  br label %return, !dbg !7538

if.end178:                                        ; preds = %if.then173
  %111 = load i32, i32* %ret, align 4, !dbg !7539
  %112 = load i32, i32* %band, align 4, !dbg !7540
  %idxprom179 = sext i32 %112 to i64, !dbg !7541
  %113 = load i32, i32* %ch, align 4, !dbg !7542
  %idxprom180 = sext i32 %113 to i64, !dbg !7541
  %114 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7541
  %scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %114, i32 0, i32 38, !dbg !7543
  %arrayidx181 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors, i64 0, i64 %idxprom180, !dbg !7541
  %arrayidx182 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx181, i64 0, i64 %idxprom179, !dbg !7541
  %arrayidx183 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx182, i64 0, i64 0, !dbg !7541
  store i32 %111, i32* %arrayidx183, align 8, !dbg !7544
  %115 = load i32, i32* %band, align 4, !dbg !7545
  %idxprom184 = sext i32 %115 to i64, !dbg !7547
  %116 = load i32, i32* %ch, align 4, !dbg !7548
  %idxprom185 = sext i32 %116 to i64, !dbg !7547
  %117 = load i32, i32* %sf.addr, align 4, !dbg !7549
  %idxprom186 = sext i32 %117 to i64, !dbg !7547
  %118 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7547
  %transition_mode187 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %118, i32 0, i32 37, !dbg !7550
  %arrayidx188 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode187, i64 0, i64 %idxprom186, !dbg !7547
  %arrayidx189 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx188, i64 0, i64 %idxprom185, !dbg !7547
  %arrayidx190 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx189, i64 0, i64 %idxprom184, !dbg !7547
  %119 = load i8, i8* %arrayidx190, align 1, !dbg !7547
  %tobool191 = icmp ne i8 %119, 0, !dbg !7547
  br i1 %tobool191, label %if.then192, label %if.end204, !dbg !7551

if.then192:                                       ; preds = %if.end178
  %120 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7552
  %121 = load i32, i32* %sel155, align 4, !dbg !7555
  %call193 = call i32 @parse_scale(%struct.DCACoreDecoder* %120, i32* %scale_index, i32 %121), !dbg !7556
  store i32 %call193, i32* %ret, align 4, !dbg !7557
  %cmp194 = icmp slt i32 %call193, 0, !dbg !7558
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !7559

if.then196:                                       ; preds = %if.then192
  %122 = load i32, i32* %ret, align 4, !dbg !7560
  store i32 %122, i32* %retval, align 4, !dbg !7561
  br label %return, !dbg !7561

if.end197:                                        ; preds = %if.then192
  %123 = load i32, i32* %ret, align 4, !dbg !7562
  %124 = load i32, i32* %band, align 4, !dbg !7563
  %idxprom198 = sext i32 %124 to i64, !dbg !7564
  %125 = load i32, i32* %ch, align 4, !dbg !7565
  %idxprom199 = sext i32 %125 to i64, !dbg !7564
  %126 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7564
  %scale_factors200 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %126, i32 0, i32 38, !dbg !7566
  %arrayidx201 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors200, i64 0, i64 %idxprom199, !dbg !7564
  %arrayidx202 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx201, i64 0, i64 %idxprom198, !dbg !7564
  %arrayidx203 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx202, i64 0, i64 1, !dbg !7564
  store i32 %123, i32* %arrayidx203, align 4, !dbg !7567
  br label %if.end204, !dbg !7568

if.end204:                                        ; preds = %if.end197, %if.end178
  br label %if.end212, !dbg !7569

if.else205:                                       ; preds = %for.body166
  %127 = load i32, i32* %band, align 4, !dbg !7570
  %idxprom206 = sext i32 %127 to i64, !dbg !7572
  %128 = load i32, i32* %ch, align 4, !dbg !7573
  %idxprom207 = sext i32 %128 to i64, !dbg !7572
  %129 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7572
  %scale_factors208 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %129, i32 0, i32 38, !dbg !7574
  %arrayidx209 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors208, i64 0, i64 %idxprom207, !dbg !7572
  %arrayidx210 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx209, i64 0, i64 %idxprom206, !dbg !7572
  %arrayidx211 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx210, i64 0, i64 0, !dbg !7572
  store i32 0, i32* %arrayidx211, align 8, !dbg !7575
  br label %if.end212

if.end212:                                        ; preds = %if.else205, %if.end204
  br label %for.inc213, !dbg !7576

for.inc213:                                       ; preds = %if.end212
  %130 = load i32, i32* %band, align 4, !dbg !7577
  %inc214 = add nsw i32 %130, 1, !dbg !7577
  store i32 %inc214, i32* %band, align 4, !dbg !7577
  br label %for.cond159, !dbg !7579, !llvm.loop !7580

for.end215:                                       ; preds = %for.cond159
  %131 = load i32, i32* %ch, align 4, !dbg !7582
  %idxprom216 = sext i32 %131 to i64, !dbg !7584
  %132 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7584
  %subband_vq_start217 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %132, i32 0, i32 26, !dbg !7585
  %arrayidx218 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start217, i64 0, i64 %idxprom216, !dbg !7584
  %133 = load i8, i8* %arrayidx218, align 1, !dbg !7584
  %conv219 = sext i8 %133 to i32, !dbg !7584
  store i32 %conv219, i32* %band, align 4, !dbg !7586
  br label %for.cond220, !dbg !7587

for.cond220:                                      ; preds = %for.inc239, %for.end215
  %134 = load i32, i32* %band, align 4, !dbg !7588
  %135 = load i32, i32* %ch, align 4, !dbg !7591
  %idxprom221 = sext i32 %135 to i64, !dbg !7592
  %136 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7592
  %nsubbands222 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %136, i32 0, i32 25, !dbg !7593
  %arrayidx223 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands222, i64 0, i64 %idxprom221, !dbg !7592
  %137 = load i8, i8* %arrayidx223, align 1, !dbg !7592
  %conv224 = sext i8 %137 to i32, !dbg !7592
  %cmp225 = icmp slt i32 %134, %conv224, !dbg !7594
  br i1 %cmp225, label %for.body227, label %for.end241, !dbg !7595

for.body227:                                      ; preds = %for.cond220
  %138 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7596
  %139 = load i32, i32* %sel155, align 4, !dbg !7599
  %call228 = call i32 @parse_scale(%struct.DCACoreDecoder* %138, i32* %scale_index, i32 %139), !dbg !7600
  store i32 %call228, i32* %ret, align 4, !dbg !7601
  %cmp229 = icmp slt i32 %call228, 0, !dbg !7602
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !7603

if.then231:                                       ; preds = %for.body227
  %140 = load i32, i32* %ret, align 4, !dbg !7604
  store i32 %140, i32* %retval, align 4, !dbg !7605
  br label %return, !dbg !7605

if.end232:                                        ; preds = %for.body227
  %141 = load i32, i32* %ret, align 4, !dbg !7606
  %142 = load i32, i32* %band, align 4, !dbg !7607
  %idxprom233 = sext i32 %142 to i64, !dbg !7608
  %143 = load i32, i32* %ch, align 4, !dbg !7609
  %idxprom234 = sext i32 %143 to i64, !dbg !7608
  %144 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7608
  %scale_factors235 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %144, i32 0, i32 38, !dbg !7610
  %arrayidx236 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors235, i64 0, i64 %idxprom234, !dbg !7608
  %arrayidx237 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx236, i64 0, i64 %idxprom233, !dbg !7608
  %arrayidx238 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx237, i64 0, i64 0, !dbg !7608
  store i32 %141, i32* %arrayidx238, align 8, !dbg !7611
  br label %for.inc239, !dbg !7612

for.inc239:                                       ; preds = %if.end232
  %145 = load i32, i32* %band, align 4, !dbg !7613
  %inc240 = add nsw i32 %145, 1, !dbg !7613
  store i32 %inc240, i32* %band, align 4, !dbg !7613
  br label %for.cond220, !dbg !7615, !llvm.loop !7616

for.end241:                                       ; preds = %for.cond220
  br label %for.inc242, !dbg !7618

for.inc242:                                       ; preds = %for.end241
  %146 = load i32, i32* %ch, align 4, !dbg !7619
  %inc243 = add nsw i32 %146, 1, !dbg !7619
  store i32 %inc243, i32* %ch, align 4, !dbg !7619
  br label %for.cond150, !dbg !7621, !llvm.loop !7622

for.end244:                                       ; preds = %for.cond150
  %147 = load i32, i32* %xch_base.addr, align 4, !dbg !7624
  store i32 %147, i32* %ch, align 4, !dbg !7626
  br label %for.cond245, !dbg !7627

for.cond245:                                      ; preds = %for.inc269, %for.end244
  %148 = load i32, i32* %ch, align 4, !dbg !7628
  %149 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7631
  %nchannels246 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %149, i32 0, i32 23, !dbg !7632
  %150 = load i32, i32* %nchannels246, align 8, !dbg !7632
  %cmp247 = icmp slt i32 %148, %150, !dbg !7633
  br i1 %cmp247, label %for.body249, label %for.end271, !dbg !7634

for.body249:                                      ; preds = %for.cond245
  %151 = load i32, i32* %ch, align 4, !dbg !7635
  %idxprom250 = sext i32 %151 to i64, !dbg !7638
  %152 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7638
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %152, i32 0, i32 27, !dbg !7639
  %arrayidx251 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom250, !dbg !7638
  %153 = load i8, i8* %arrayidx251, align 1, !dbg !7638
  %tobool252 = icmp ne i8 %153, 0, !dbg !7638
  br i1 %tobool252, label %if.then253, label %if.end268, !dbg !7640

if.then253:                                       ; preds = %for.body249
  %154 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7641
  %gb254 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %154, i32 0, i32 1, !dbg !7643
  %call255 = call i32 @get_bits(%struct.GetBitContext* %gb254, i32 3), !dbg !7644
  %conv256 = trunc i32 %call255 to i8, !dbg !7644
  %155 = load i32, i32* %ch, align 4, !dbg !7645
  %idxprom257 = sext i32 %155 to i64, !dbg !7646
  %156 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7646
  %joint_scale_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %156, i32 0, i32 39, !dbg !7647
  %arrayidx258 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel, i64 0, i64 %idxprom257, !dbg !7646
  store i8 %conv256, i8* %arrayidx258, align 1, !dbg !7648
  %157 = load i32, i32* %ch, align 4, !dbg !7649
  %idxprom259 = sext i32 %157 to i64, !dbg !7651
  %158 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7651
  %joint_scale_sel260 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %158, i32 0, i32 39, !dbg !7652
  %arrayidx261 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel260, i64 0, i64 %idxprom259, !dbg !7651
  %159 = load i8, i8* %arrayidx261, align 1, !dbg !7651
  %conv262 = sext i8 %159 to i32, !dbg !7651
  %cmp263 = icmp eq i32 %conv262, 7, !dbg !7653
  br i1 %cmp263, label %if.then265, label %if.end267, !dbg !7654

if.then265:                                       ; preds = %if.then253
  %160 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7655
  %avctx266 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %160, i32 0, i32 0, !dbg !7657
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx266, align 32, !dbg !7657
  %162 = bitcast %struct.AVCodecContext* %161 to i8*, !dbg !7655
  call void (i8*, i32, i8*, ...) @av_log(i8* %162, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i32 0, i32 0)), !dbg !7658
  store i32 -1094995529, i32* %retval, align 4, !dbg !7659
  br label %return, !dbg !7659

if.end267:                                        ; preds = %if.then253
  br label %if.end268, !dbg !7660

if.end268:                                        ; preds = %if.end267, %for.body249
  br label %for.inc269, !dbg !7661

for.inc269:                                       ; preds = %if.end268
  %163 = load i32, i32* %ch, align 4, !dbg !7662
  %inc270 = add nsw i32 %163, 1, !dbg !7662
  store i32 %inc270, i32* %ch, align 4, !dbg !7662
  br label %for.cond245, !dbg !7664, !llvm.loop !7665

for.end271:                                       ; preds = %for.cond245
  %164 = load i32, i32* %xch_base.addr, align 4, !dbg !7667
  store i32 %164, i32* %ch, align 4, !dbg !7669
  br label %for.cond272, !dbg !7670

for.cond272:                                      ; preds = %for.inc315, %for.end271
  %165 = load i32, i32* %ch, align 4, !dbg !7671
  %166 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7674
  %nchannels273 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %166, i32 0, i32 23, !dbg !7675
  %167 = load i32, i32* %nchannels273, align 8, !dbg !7675
  %cmp274 = icmp slt i32 %165, %167, !dbg !7676
  br i1 %cmp274, label %for.body276, label %for.end317, !dbg !7677

for.body276:                                      ; preds = %for.cond272
  call void @llvm.dbg.declare(metadata i32* %src_ch, metadata !7678, metadata !2194), !dbg !7680
  %168 = load i32, i32* %ch, align 4, !dbg !7681
  %idxprom277 = sext i32 %168 to i64, !dbg !7682
  %169 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7682
  %joint_intensity_index278 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %169, i32 0, i32 27, !dbg !7683
  %arrayidx279 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index278, i64 0, i64 %idxprom277, !dbg !7682
  %170 = load i8, i8* %arrayidx279, align 1, !dbg !7682
  %conv280 = sext i8 %170 to i32, !dbg !7682
  %sub281 = sub nsw i32 %conv280, 1, !dbg !7684
  store i32 %sub281, i32* %src_ch, align 4, !dbg !7680
  %171 = load i32, i32* %src_ch, align 4, !dbg !7685
  %cmp282 = icmp sge i32 %171, 0, !dbg !7687
  br i1 %cmp282, label %if.then284, label %if.end314, !dbg !7688

if.then284:                                       ; preds = %for.body276
  call void @llvm.dbg.declare(metadata i32* %sel285, metadata !7689, metadata !2194), !dbg !7691
  %172 = load i32, i32* %ch, align 4, !dbg !7692
  %idxprom286 = sext i32 %172 to i64, !dbg !7693
  %173 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7693
  %joint_scale_sel287 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %173, i32 0, i32 39, !dbg !7694
  %arrayidx288 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel287, i64 0, i64 %idxprom286, !dbg !7693
  %174 = load i8, i8* %arrayidx288, align 1, !dbg !7693
  %conv289 = sext i8 %174 to i32, !dbg !7693
  store i32 %conv289, i32* %sel285, align 4, !dbg !7691
  %175 = load i32, i32* %ch, align 4, !dbg !7695
  %idxprom290 = sext i32 %175 to i64, !dbg !7697
  %176 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7697
  %nsubbands291 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %176, i32 0, i32 25, !dbg !7698
  %arrayidx292 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands291, i64 0, i64 %idxprom290, !dbg !7697
  %177 = load i8, i8* %arrayidx292, align 1, !dbg !7697
  %conv293 = sext i8 %177 to i32, !dbg !7697
  store i32 %conv293, i32* %band, align 4, !dbg !7699
  br label %for.cond294, !dbg !7700

for.cond294:                                      ; preds = %for.inc311, %if.then284
  %178 = load i32, i32* %band, align 4, !dbg !7701
  %179 = load i32, i32* %src_ch, align 4, !dbg !7704
  %idxprom295 = sext i32 %179 to i64, !dbg !7705
  %180 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7705
  %nsubbands296 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %180, i32 0, i32 25, !dbg !7706
  %arrayidx297 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands296, i64 0, i64 %idxprom295, !dbg !7705
  %181 = load i8, i8* %arrayidx297, align 1, !dbg !7705
  %conv298 = sext i8 %181 to i32, !dbg !7705
  %cmp299 = icmp slt i32 %178, %conv298, !dbg !7707
  br i1 %cmp299, label %for.body301, label %for.end313, !dbg !7708

for.body301:                                      ; preds = %for.cond294
  %182 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7709
  %183 = load i32, i32* %sel285, align 4, !dbg !7712
  %call302 = call i32 @parse_joint_scale(%struct.DCACoreDecoder* %182, i32 %183), !dbg !7713
  store i32 %call302, i32* %ret, align 4, !dbg !7714
  %cmp303 = icmp slt i32 %call302, 0, !dbg !7715
  br i1 %cmp303, label %if.then305, label %if.end306, !dbg !7716

if.then305:                                       ; preds = %for.body301
  %184 = load i32, i32* %ret, align 4, !dbg !7717
  store i32 %184, i32* %retval, align 4, !dbg !7718
  br label %return, !dbg !7718

if.end306:                                        ; preds = %for.body301
  %185 = load i32, i32* %ret, align 4, !dbg !7719
  %186 = load i32, i32* %band, align 4, !dbg !7720
  %idxprom307 = sext i32 %186 to i64, !dbg !7721
  %187 = load i32, i32* %ch, align 4, !dbg !7722
  %idxprom308 = sext i32 %187 to i64, !dbg !7721
  %188 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7721
  %joint_scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %188, i32 0, i32 40, !dbg !7723
  %arrayidx309 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %joint_scale_factors, i64 0, i64 %idxprom308, !dbg !7721
  %arrayidx310 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx309, i64 0, i64 %idxprom307, !dbg !7721
  store i32 %185, i32* %arrayidx310, align 4, !dbg !7724
  br label %for.inc311, !dbg !7725

for.inc311:                                       ; preds = %if.end306
  %189 = load i32, i32* %band, align 4, !dbg !7726
  %inc312 = add nsw i32 %189, 1, !dbg !7726
  store i32 %inc312, i32* %band, align 4, !dbg !7726
  br label %for.cond294, !dbg !7728, !llvm.loop !7729

for.end313:                                       ; preds = %for.cond294
  br label %if.end314, !dbg !7731

if.end314:                                        ; preds = %for.end313, %for.body276
  br label %for.inc315, !dbg !7732

for.inc315:                                       ; preds = %if.end314
  %190 = load i32, i32* %ch, align 4, !dbg !7733
  %inc316 = add nsw i32 %190, 1, !dbg !7733
  store i32 %inc316, i32* %ch, align 4, !dbg !7733
  br label %for.cond272, !dbg !7735, !llvm.loop !7736

for.end317:                                       ; preds = %for.cond272
  %191 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7738
  %drc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %191, i32 0, i32 9, !dbg !7740
  %192 = load i32, i32* %drc_present, align 32, !dbg !7740
  %tobool318 = icmp ne i32 %192, 0, !dbg !7738
  br i1 %tobool318, label %land.lhs.true, label %if.end323, !dbg !7741

land.lhs.true:                                    ; preds = %for.end317
  %193 = load i32, i32* %header.addr, align 4, !dbg !7742
  %cmp319 = icmp eq i32 %193, 0, !dbg !7744
  br i1 %cmp319, label %if.then321, label %if.end323, !dbg !7745

if.then321:                                       ; preds = %land.lhs.true
  %194 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7746
  %gb322 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %194, i32 0, i32 1, !dbg !7747
  call void @skip_bits(%struct.GetBitContext* %gb322, i32 8), !dbg !7748
  br label %if.end323, !dbg !7748

if.end323:                                        ; preds = %if.then321, %land.lhs.true, %for.end317
  %195 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7749
  %crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %195, i32 0, i32 3, !dbg !7751
  %196 = load i32, i32* %crc_present, align 8, !dbg !7751
  %tobool324 = icmp ne i32 %196, 0, !dbg !7749
  br i1 %tobool324, label %if.then325, label %if.end327, !dbg !7752

if.then325:                                       ; preds = %if.end323
  %197 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7753
  %gb326 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %197, i32 0, i32 1, !dbg !7754
  call void @skip_bits(%struct.GetBitContext* %gb326, i32 16), !dbg !7755
  br label %if.end327, !dbg !7755

if.end327:                                        ; preds = %if.then325, %if.end323
  store i32 0, i32* %retval, align 4, !dbg !7756
  br label %return, !dbg !7756

return:                                           ; preds = %if.end327, %if.then305, %if.then265, %if.then231, %if.then196, %if.then177, %if.then84, %if.then
  %198 = load i32, i32* %retval, align 4, !dbg !7757
  ret i32 %198, !dbg !7757
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_subframe_audio(%struct.DCACoreDecoder* %s, i32 %sf, i32 %header, i32 %xch_base, i32* %sub_pos, i32* %lfe_pos) #0 !dbg !7758 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %sf.addr = alloca i32, align 4
  %header.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %sub_pos.addr = alloca i32*, align 8
  %lfe_pos.addr = alloca i32*, align 8
  %audio = alloca [16 x i32], align 16
  %scale = alloca i32, align 4
  %n = alloca i32, align 4
  %ssf = alloca i32, align 4
  %ofs = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %vq_index = alloca [32 x i32], align 16
  %index = alloca i32, align 4
  %nlfesamples = alloca i32, align 4
  %ret = alloca i32, align 4
  %trans_ssf = alloca i32, align 4
  %abits = alloca i32, align 4
  %step_size = alloca i32, align 4
  %adj = alloca i64, align 8
  %src_ch = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !7761, metadata !2194), !dbg !7762
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !7763, metadata !2194), !dbg !7764
  store i32 %header, i32* %header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %header.addr, metadata !7765, metadata !2194), !dbg !7766
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !7767, metadata !2194), !dbg !7768
  store i32* %sub_pos, i32** %sub_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sub_pos.addr, metadata !7769, metadata !2194), !dbg !7770
  store i32* %lfe_pos, i32** %lfe_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lfe_pos.addr, metadata !7771, metadata !2194), !dbg !7772
  call void @llvm.dbg.declare(metadata [16 x i32]* %audio, metadata !7773, metadata !2194), !dbg !7775
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !7776, metadata !2194), !dbg !7777
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7778, metadata !2194), !dbg !7779
  call void @llvm.dbg.declare(metadata i32* %ssf, metadata !7780, metadata !2194), !dbg !7781
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !7782, metadata !2194), !dbg !7783
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7784, metadata !2194), !dbg !7785
  call void @llvm.dbg.declare(metadata i32* %band, metadata !7786, metadata !2194), !dbg !7787
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !7788, metadata !2194), !dbg !7789
  %0 = load i32, i32* %sf.addr, align 4, !dbg !7790
  %idxprom = sext i32 %0 to i64, !dbg !7791
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7791
  %nsubsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 33, !dbg !7792
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes, i64 0, i64 %idxprom, !dbg !7791
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7791
  %conv = sext i8 %2 to i32, !dbg !7791
  %mul = mul nsw i32 %conv, 8, !dbg !7793
  store i32 %mul, i32* %nsamples, align 4, !dbg !7789
  %3 = load i32*, i32** %sub_pos.addr, align 8, !dbg !7794
  %4 = load i32, i32* %3, align 4, !dbg !7796
  %5 = load i32, i32* %nsamples, align 4, !dbg !7797
  %add = add nsw i32 %4, %5, !dbg !7798
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7799
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 4, !dbg !7800
  %7 = load i32, i32* %npcmblocks, align 4, !dbg !7800
  %cmp = icmp sgt i32 %add, %7, !dbg !7801
  br i1 %cmp, label %if.then, label %if.end, !dbg !7802

if.then:                                          ; preds = %entry
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7803
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 0, !dbg !7805
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7805
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !7803
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i32 0, i32 0)), !dbg !7806
  store i32 -1094995529, i32* %retval, align 4, !dbg !7807
  br label %return, !dbg !7807

if.end:                                           ; preds = %entry
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7808
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 1, !dbg !7810
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !7811
  %cmp2 = icmp slt i32 %call, 0, !dbg !7812
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !7813

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !7814
  br label %return, !dbg !7814

if.end5:                                          ; preds = %if.end
  %12 = load i32, i32* %xch_base.addr, align 4, !dbg !7815
  store i32 %12, i32* %ch, align 4, !dbg !7817
  br label %for.cond, !dbg !7818

for.cond:                                         ; preds = %for.inc50, %if.end5
  %13 = load i32, i32* %ch, align 4, !dbg !7819
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7822
  %nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 23, !dbg !7823
  %15 = load i32, i32* %nchannels, align 8, !dbg !7823
  %cmp6 = icmp slt i32 %13, %15, !dbg !7824
  br i1 %cmp6, label %for.body, label %for.end52, !dbg !7825

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [32 x i32]* %vq_index, metadata !7826, metadata !2194), !dbg !7829
  %16 = load i32, i32* %ch, align 4, !dbg !7830
  %idxprom8 = sext i32 %16 to i64, !dbg !7832
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7832
  %subband_vq_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 26, !dbg !7833
  %arrayidx9 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start, i64 0, i64 %idxprom8, !dbg !7832
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !7832
  %conv10 = sext i8 %18 to i32, !dbg !7832
  store i32 %conv10, i32* %band, align 4, !dbg !7834
  br label %for.cond11, !dbg !7835

for.cond11:                                       ; preds = %for.inc, %for.body
  %19 = load i32, i32* %band, align 4, !dbg !7836
  %20 = load i32, i32* %ch, align 4, !dbg !7839
  %idxprom12 = sext i32 %20 to i64, !dbg !7840
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7840
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 25, !dbg !7841
  %arrayidx13 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom12, !dbg !7840
  %22 = load i8, i8* %arrayidx13, align 1, !dbg !7840
  %conv14 = sext i8 %22 to i32, !dbg !7840
  %cmp15 = icmp slt i32 %19, %conv14, !dbg !7842
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !7843

for.body17:                                       ; preds = %for.cond11
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7844
  %gb18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 1, !dbg !7845
  %call19 = call i32 @get_bits(%struct.GetBitContext* %gb18, i32 10), !dbg !7846
  %24 = load i32, i32* %band, align 4, !dbg !7847
  %idxprom20 = sext i32 %24 to i64, !dbg !7848
  %arrayidx21 = getelementptr inbounds [32 x i32], [32 x i32]* %vq_index, i64 0, i64 %idxprom20, !dbg !7848
  store i32 %call19, i32* %arrayidx21, align 4, !dbg !7849
  br label %for.inc, !dbg !7848

for.inc:                                          ; preds = %for.body17
  %25 = load i32, i32* %band, align 4, !dbg !7850
  %inc = add nsw i32 %25, 1, !dbg !7850
  store i32 %inc, i32* %band, align 4, !dbg !7850
  br label %for.cond11, !dbg !7852, !llvm.loop !7853

for.end:                                          ; preds = %for.cond11
  %26 = load i32, i32* %ch, align 4, !dbg !7855
  %idxprom22 = sext i32 %26 to i64, !dbg !7857
  %27 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7857
  %subband_vq_start23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %27, i32 0, i32 26, !dbg !7858
  %arrayidx24 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start23, i64 0, i64 %idxprom22, !dbg !7857
  %28 = load i8, i8* %arrayidx24, align 1, !dbg !7857
  %conv25 = sext i8 %28 to i32, !dbg !7857
  %29 = load i32, i32* %ch, align 4, !dbg !7859
  %idxprom26 = sext i32 %29 to i64, !dbg !7860
  %30 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7860
  %nsubbands27 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %30, i32 0, i32 25, !dbg !7861
  %arrayidx28 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands27, i64 0, i64 %idxprom26, !dbg !7860
  %31 = load i8, i8* %arrayidx28, align 1, !dbg !7860
  %conv29 = sext i8 %31 to i32, !dbg !7860
  %cmp30 = icmp slt i32 %conv25, %conv29, !dbg !7862
  br i1 %cmp30, label %if.then32, label %if.end49, !dbg !7863

if.then32:                                        ; preds = %for.end
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7864
  %dcadsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 71, !dbg !7866
  %33 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 32, !dbg !7866
  %decode_hf = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %33, i32 0, i32 0, !dbg !7867
  %34 = load void (i32**, i32*, [32 x i8]*, [2 x i32]*, i64, i64, i64, i64)*, void (i32**, i32*, [32 x i8]*, [2 x i32]*, i64, i64, i64, i64)** %decode_hf, align 8, !dbg !7867
  %35 = load i32, i32* %ch, align 4, !dbg !7868
  %idxprom33 = sext i32 %35 to i64, !dbg !7869
  %36 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7869
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %36, i32 0, i32 67, !dbg !7870
  %arrayidx34 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom33, !dbg !7869
  %arraydecay = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx34, i32 0, i32 0, !dbg !7869
  %arraydecay35 = getelementptr inbounds [32 x i32], [32 x i32]* %vq_index, i32 0, i32 0, !dbg !7871
  %37 = load i32, i32* %ch, align 4, !dbg !7872
  %idxprom36 = sext i32 %37 to i64, !dbg !7873
  %38 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7873
  %scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %38, i32 0, i32 38, !dbg !7874
  %arrayidx37 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors, i64 0, i64 %idxprom36, !dbg !7873
  %arraydecay38 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx37, i32 0, i32 0, !dbg !7873
  %39 = load i32, i32* %ch, align 4, !dbg !7875
  %idxprom39 = sext i32 %39 to i64, !dbg !7876
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7876
  %subband_vq_start40 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 26, !dbg !7877
  %arrayidx41 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start40, i64 0, i64 %idxprom39, !dbg !7876
  %41 = load i8, i8* %arrayidx41, align 1, !dbg !7876
  %conv42 = sext i8 %41 to i64, !dbg !7876
  %42 = load i32, i32* %ch, align 4, !dbg !7878
  %idxprom43 = sext i32 %42 to i64, !dbg !7879
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7879
  %nsubbands44 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 25, !dbg !7880
  %arrayidx45 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands44, i64 0, i64 %idxprom43, !dbg !7879
  %44 = load i8, i8* %arrayidx45, align 1, !dbg !7879
  %conv46 = sext i8 %44 to i64, !dbg !7879
  %45 = load i32*, i32** %sub_pos.addr, align 8, !dbg !7881
  %46 = load i32, i32* %45, align 4, !dbg !7882
  %conv47 = sext i32 %46 to i64, !dbg !7882
  %47 = load i32, i32* %nsamples, align 4, !dbg !7883
  %conv48 = sext i32 %47 to i64, !dbg !7883
  call void %34(i32** %arraydecay, i32* %arraydecay35, [32 x i8]* getelementptr inbounds ([1024 x [32 x i8]], [1024 x [32 x i8]]* @ff_dca_high_freq_vq, i32 0, i32 0), [2 x i32]* %arraydecay38, i64 %conv42, i64 %conv46, i64 %conv47, i64 %conv48), !dbg !7864
  br label %if.end49, !dbg !7884

if.end49:                                         ; preds = %if.then32, %for.end
  br label %for.inc50, !dbg !7885

for.inc50:                                        ; preds = %if.end49
  %48 = load i32, i32* %ch, align 4, !dbg !7886
  %inc51 = add nsw i32 %48, 1, !dbg !7886
  store i32 %inc51, i32* %ch, align 4, !dbg !7886
  br label %for.cond, !dbg !7888, !llvm.loop !7889

for.end52:                                        ; preds = %for.cond
  %49 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7891
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %49, i32 0, i32 15, !dbg !7893
  %50 = load i32, i32* %lfe_present, align 8, !dbg !7893
  %tobool = icmp ne i32 %50, 0, !dbg !7891
  br i1 %tobool, label %land.lhs.true, label %if.end90, !dbg !7894

land.lhs.true:                                    ; preds = %for.end52
  %51 = load i32, i32* %header.addr, align 4, !dbg !7895
  %cmp53 = icmp eq i32 %51, 0, !dbg !7897
  br i1 %cmp53, label %if.then55, label %if.end90, !dbg !7898

if.then55:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7899, metadata !2194), !dbg !7901
  call void @llvm.dbg.declare(metadata i32* %nlfesamples, metadata !7902, metadata !2194), !dbg !7903
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7904
  %lfe_present56 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 15, !dbg !7905
  %53 = load i32, i32* %lfe_present56, align 8, !dbg !7905
  %mul57 = mul nsw i32 2, %53, !dbg !7906
  %54 = load i32, i32* %sf.addr, align 4, !dbg !7907
  %idxprom58 = sext i32 %54 to i64, !dbg !7908
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7908
  %nsubsubframes59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 33, !dbg !7909
  %arrayidx60 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes59, i64 0, i64 %idxprom58, !dbg !7908
  %56 = load i8, i8* %arrayidx60, align 1, !dbg !7908
  %conv61 = sext i8 %56 to i32, !dbg !7908
  %mul62 = mul nsw i32 %mul57, %conv61, !dbg !7910
  store i32 %mul62, i32* %nlfesamples, align 4, !dbg !7903
  %57 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7911
  %gb63 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %57, i32 0, i32 1, !dbg !7912
  %arraydecay64 = getelementptr inbounds [16 x i32], [16 x i32]* %audio, i32 0, i32 0, !dbg !7913
  %58 = load i32, i32* %nlfesamples, align 4, !dbg !7914
  call void @get_array(%struct.GetBitContext* %gb63, i32* %arraydecay64, i32 %58, i32 8), !dbg !7915
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7916
  %gb65 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 1, !dbg !7917
  %call66 = call i32 @get_bits(%struct.GetBitContext* %gb65, i32 8), !dbg !7918
  store i32 %call66, i32* %index, align 4, !dbg !7919
  %60 = load i32, i32* %index, align 4, !dbg !7920
  %conv67 = zext i32 %60 to i64, !dbg !7920
  %cmp68 = icmp uge i64 %conv67, 128, !dbg !7922
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !7923

if.then70:                                        ; preds = %if.then55
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7924
  %avctx71 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 0, !dbg !7926
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx71, align 32, !dbg !7926
  %63 = bitcast %struct.AVCodecContext* %62 to i8*, !dbg !7924
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0)), !dbg !7927
  store i32 -1094995529, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

if.end72:                                         ; preds = %if.then55
  %64 = load i32, i32* %index, align 4, !dbg !7929
  %idxprom73 = zext i32 %64 to i64, !dbg !7930
  %arrayidx74 = getelementptr inbounds [128 x i32], [128 x i32]* @ff_dca_scale_factor_quant7, i64 0, i64 %idxprom73, !dbg !7930
  %65 = load i32, i32* %arrayidx74, align 4, !dbg !7930
  store i32 %65, i32* %scale, align 4, !dbg !7931
  %66 = load i32, i32* %scale, align 4, !dbg !7932
  %call75 = call i32 @mul23(i32 4697620, i32 %66), !dbg !7933
  store i32 %call75, i32* %scale, align 4, !dbg !7934
  store i32 0, i32* %n, align 4, !dbg !7935
  %67 = load i32*, i32** %lfe_pos.addr, align 8, !dbg !7937
  %68 = load i32, i32* %67, align 4, !dbg !7938
  store i32 %68, i32* %ofs, align 4, !dbg !7939
  br label %for.cond76, !dbg !7940

for.cond76:                                       ; preds = %for.inc86, %if.end72
  %69 = load i32, i32* %n, align 4, !dbg !7941
  %70 = load i32, i32* %nlfesamples, align 4, !dbg !7944
  %cmp77 = icmp slt i32 %69, %70, !dbg !7945
  br i1 %cmp77, label %for.body79, label %for.end89, !dbg !7946

for.body79:                                       ; preds = %for.cond76
  %71 = load i32, i32* %n, align 4, !dbg !7947
  %idxprom80 = sext i32 %71 to i64, !dbg !7948
  %arrayidx81 = getelementptr inbounds [16 x i32], [16 x i32]* %audio, i64 0, i64 %idxprom80, !dbg !7948
  %72 = load i32, i32* %arrayidx81, align 4, !dbg !7948
  %73 = load i32, i32* %scale, align 4, !dbg !7949
  %mul82 = mul nsw i32 %72, %73, !dbg !7950
  %shr = ashr i32 %mul82, 4, !dbg !7951
  %call83 = call i32 @clip23(i32 %shr), !dbg !7952
  %74 = load i32, i32* %ofs, align 4, !dbg !7953
  %idxprom84 = sext i32 %74 to i64, !dbg !7954
  %75 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7954
  %lfe_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %75, i32 0, i32 68, !dbg !7955
  %76 = load i32*, i32** %lfe_samples, align 32, !dbg !7955
  %arrayidx85 = getelementptr inbounds i32, i32* %76, i64 %idxprom84, !dbg !7954
  store i32 %call83, i32* %arrayidx85, align 4, !dbg !7956
  br label %for.inc86, !dbg !7954

for.inc86:                                        ; preds = %for.body79
  %77 = load i32, i32* %n, align 4, !dbg !7957
  %inc87 = add nsw i32 %77, 1, !dbg !7957
  store i32 %inc87, i32* %n, align 4, !dbg !7957
  %78 = load i32, i32* %ofs, align 4, !dbg !7959
  %inc88 = add nsw i32 %78, 1, !dbg !7959
  store i32 %inc88, i32* %ofs, align 4, !dbg !7959
  br label %for.cond76, !dbg !7960, !llvm.loop !7961

for.end89:                                        ; preds = %for.cond76
  %79 = load i32, i32* %ofs, align 4, !dbg !7963
  %80 = load i32*, i32** %lfe_pos.addr, align 8, !dbg !7964
  store i32 %79, i32* %80, align 4, !dbg !7965
  br label %if.end90, !dbg !7966

if.end90:                                         ; preds = %for.end89, %land.lhs.true, %for.end52
  store i32 0, i32* %ssf, align 4, !dbg !7967
  %81 = load i32*, i32** %sub_pos.addr, align 8, !dbg !7969
  %82 = load i32, i32* %81, align 4, !dbg !7970
  store i32 %82, i32* %ofs, align 4, !dbg !7971
  br label %for.cond91, !dbg !7972

for.cond91:                                       ; preds = %for.inc207, %if.end90
  %83 = load i32, i32* %ssf, align 4, !dbg !7973
  %84 = load i32, i32* %sf.addr, align 4, !dbg !7976
  %idxprom92 = sext i32 %84 to i64, !dbg !7977
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7977
  %nsubsubframes93 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %85, i32 0, i32 33, !dbg !7978
  %arrayidx94 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes93, i64 0, i64 %idxprom92, !dbg !7977
  %86 = load i8, i8* %arrayidx94, align 1, !dbg !7977
  %conv95 = sext i8 %86 to i32, !dbg !7977
  %cmp96 = icmp slt i32 %83, %conv95, !dbg !7979
  br i1 %cmp96, label %for.body98, label %for.end209, !dbg !7980

for.body98:                                       ; preds = %for.cond91
  %87 = load i32, i32* %xch_base.addr, align 4, !dbg !7981
  store i32 %87, i32* %ch, align 4, !dbg !7984
  br label %for.cond99, !dbg !7985

for.cond99:                                       ; preds = %for.inc186, %for.body98
  %88 = load i32, i32* %ch, align 4, !dbg !7986
  %89 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7989
  %nchannels100 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %89, i32 0, i32 23, !dbg !7990
  %90 = load i32, i32* %nchannels100, align 8, !dbg !7990
  %cmp101 = icmp slt i32 %88, %90, !dbg !7991
  br i1 %cmp101, label %for.body103, label %for.end188, !dbg !7992

for.body103:                                      ; preds = %for.cond99
  %91 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !7993
  %gb104 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %91, i32 0, i32 1, !dbg !7996
  %call105 = call i32 @get_bits_left(%struct.GetBitContext* %gb104), !dbg !7997
  %cmp106 = icmp slt i32 %call105, 0, !dbg !7998
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !7999

if.then108:                                       ; preds = %for.body103
  store i32 -1094995529, i32* %retval, align 4, !dbg !8000
  br label %return, !dbg !8000

if.end109:                                        ; preds = %for.body103
  store i32 0, i32* %band, align 4, !dbg !8001
  br label %for.cond110, !dbg !8003

for.cond110:                                      ; preds = %for.inc183, %if.end109
  %92 = load i32, i32* %band, align 4, !dbg !8004
  %93 = load i32, i32* %ch, align 4, !dbg !8007
  %idxprom111 = sext i32 %93 to i64, !dbg !8008
  %94 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8008
  %subband_vq_start112 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %94, i32 0, i32 26, !dbg !8009
  %arrayidx113 = getelementptr inbounds [7 x i8], [7 x i8]* %subband_vq_start112, i64 0, i64 %idxprom111, !dbg !8008
  %95 = load i8, i8* %arrayidx113, align 1, !dbg !8008
  %conv114 = sext i8 %95 to i32, !dbg !8008
  %cmp115 = icmp slt i32 %92, %conv114, !dbg !8010
  br i1 %cmp115, label %for.body117, label %for.end185, !dbg !8011

for.body117:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8012, metadata !2194), !dbg !8014
  call void @llvm.dbg.declare(metadata i32* %trans_ssf, metadata !8015, metadata !2194), !dbg !8016
  call void @llvm.dbg.declare(metadata i32* %abits, metadata !8017, metadata !2194), !dbg !8018
  %96 = load i32, i32* %band, align 4, !dbg !8019
  %idxprom118 = sext i32 %96 to i64, !dbg !8020
  %97 = load i32, i32* %ch, align 4, !dbg !8021
  %idxprom119 = sext i32 %97 to i64, !dbg !8020
  %98 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8020
  %bit_allocation = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %98, i32 0, i32 36, !dbg !8022
  %arrayidx120 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation, i64 0, i64 %idxprom119, !dbg !8020
  %arrayidx121 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx120, i64 0, i64 %idxprom118, !dbg !8020
  %99 = load i8, i8* %arrayidx121, align 1, !dbg !8020
  %conv122 = sext i8 %99 to i32, !dbg !8020
  store i32 %conv122, i32* %abits, align 4, !dbg !8018
  call void @llvm.dbg.declare(metadata i32* %step_size, metadata !8023, metadata !2194), !dbg !8024
  %100 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8025
  %arraydecay123 = getelementptr inbounds [16 x i32], [16 x i32]* %audio, i32 0, i32 0, !dbg !8027
  %101 = load i32, i32* %abits, align 4, !dbg !8028
  %102 = load i32, i32* %ch, align 4, !dbg !8029
  %call124 = call i32 @extract_audio(%struct.DCACoreDecoder* %100, i32* %arraydecay123, i32 %101, i32 %102), !dbg !8030
  store i32 %call124, i32* %ret, align 4, !dbg !8031
  %cmp125 = icmp slt i32 %call124, 0, !dbg !8032
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !8033

if.then127:                                       ; preds = %for.body117
  %103 = load i32, i32* %ret, align 4, !dbg !8034
  store i32 %103, i32* %retval, align 4, !dbg !8035
  br label %return, !dbg !8035

if.end128:                                        ; preds = %for.body117
  %104 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8036
  %bit_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %104, i32 0, i32 8, !dbg !8038
  %105 = load i32, i32* %bit_rate, align 4, !dbg !8038
  %cmp129 = icmp eq i32 %105, 3, !dbg !8039
  br i1 %cmp129, label %if.then131, label %if.else, !dbg !8040

if.then131:                                       ; preds = %if.end128
  %106 = load i32, i32* %abits, align 4, !dbg !8041
  %idxprom132 = sext i32 %106 to i64, !dbg !8042
  %arrayidx133 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_lossless_quant, i64 0, i64 %idxprom132, !dbg !8042
  %107 = load i32, i32* %arrayidx133, align 4, !dbg !8042
  store i32 %107, i32* %step_size, align 4, !dbg !8043
  br label %if.end136, !dbg !8044

if.else:                                          ; preds = %if.end128
  %108 = load i32, i32* %abits, align 4, !dbg !8045
  %idxprom134 = sext i32 %108 to i64, !dbg !8046
  %arrayidx135 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_lossy_quant, i64 0, i64 %idxprom134, !dbg !8046
  %109 = load i32, i32* %arrayidx135, align 4, !dbg !8046
  store i32 %109, i32* %step_size, align 4, !dbg !8047
  br label %if.end136

if.end136:                                        ; preds = %if.else, %if.then131
  %110 = load i32, i32* %band, align 4, !dbg !8048
  %idxprom137 = sext i32 %110 to i64, !dbg !8049
  %111 = load i32, i32* %ch, align 4, !dbg !8050
  %idxprom138 = sext i32 %111 to i64, !dbg !8049
  %112 = load i32, i32* %sf.addr, align 4, !dbg !8051
  %idxprom139 = sext i32 %112 to i64, !dbg !8049
  %113 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8049
  %transition_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %113, i32 0, i32 37, !dbg !8052
  %arrayidx140 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode, i64 0, i64 %idxprom139, !dbg !8049
  %arrayidx141 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx140, i64 0, i64 %idxprom138, !dbg !8049
  %arrayidx142 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx141, i64 0, i64 %idxprom137, !dbg !8049
  %114 = load i8, i8* %arrayidx142, align 1, !dbg !8049
  %conv143 = sext i8 %114 to i32, !dbg !8049
  store i32 %conv143, i32* %trans_ssf, align 4, !dbg !8053
  %115 = load i32, i32* %trans_ssf, align 4, !dbg !8054
  %cmp144 = icmp eq i32 %115, 0, !dbg !8056
  br i1 %cmp144, label %if.then148, label %lor.lhs.false, !dbg !8057

lor.lhs.false:                                    ; preds = %if.end136
  %116 = load i32, i32* %ssf, align 4, !dbg !8058
  %117 = load i32, i32* %trans_ssf, align 4, !dbg !8060
  %cmp146 = icmp slt i32 %116, %117, !dbg !8061
  br i1 %cmp146, label %if.then148, label %if.else155, !dbg !8062

if.then148:                                       ; preds = %lor.lhs.false, %if.end136
  %118 = load i32, i32* %band, align 4, !dbg !8063
  %idxprom149 = sext i32 %118 to i64, !dbg !8064
  %119 = load i32, i32* %ch, align 4, !dbg !8065
  %idxprom150 = sext i32 %119 to i64, !dbg !8064
  %120 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8064
  %scale_factors151 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %120, i32 0, i32 38, !dbg !8066
  %arrayidx152 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors151, i64 0, i64 %idxprom150, !dbg !8064
  %arrayidx153 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx152, i64 0, i64 %idxprom149, !dbg !8064
  %arrayidx154 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx153, i64 0, i64 0, !dbg !8064
  %121 = load i32, i32* %arrayidx154, align 8, !dbg !8064
  store i32 %121, i32* %scale, align 4, !dbg !8067
  br label %if.end162, !dbg !8068

if.else155:                                       ; preds = %lor.lhs.false
  %122 = load i32, i32* %band, align 4, !dbg !8069
  %idxprom156 = sext i32 %122 to i64, !dbg !8070
  %123 = load i32, i32* %ch, align 4, !dbg !8071
  %idxprom157 = sext i32 %123 to i64, !dbg !8070
  %124 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8070
  %scale_factors158 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %124, i32 0, i32 38, !dbg !8072
  %arrayidx159 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors158, i64 0, i64 %idxprom157, !dbg !8070
  %arrayidx160 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx159, i64 0, i64 %idxprom156, !dbg !8070
  %arrayidx161 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx160, i64 0, i64 1, !dbg !8070
  %125 = load i32, i32* %arrayidx161, align 4, !dbg !8070
  store i32 %125, i32* %scale, align 4, !dbg !8073
  br label %if.end162

if.end162:                                        ; preds = %if.else155, %if.then148
  %126 = load i32, i32* %ret, align 4, !dbg !8074
  %cmp163 = icmp sgt i32 %126, 0, !dbg !8076
  br i1 %cmp163, label %if.then165, label %if.end176, !dbg !8077

if.then165:                                       ; preds = %if.end162
  call void @llvm.dbg.declare(metadata i64* %adj, metadata !8078, metadata !2194), !dbg !8080
  %127 = load i32, i32* %abits, align 4, !dbg !8081
  %sub = sub nsw i32 %127, 1, !dbg !8082
  %idxprom166 = sext i32 %sub to i64, !dbg !8083
  %128 = load i32, i32* %ch, align 4, !dbg !8084
  %idxprom167 = sext i32 %128 to i64, !dbg !8083
  %129 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8083
  %scale_factor_adj = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %129, i32 0, i32 32, !dbg !8085
  %arrayidx168 = getelementptr inbounds [7 x [10 x i32]], [7 x [10 x i32]]* %scale_factor_adj, i64 0, i64 %idxprom167, !dbg !8083
  %arrayidx169 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx168, i64 0, i64 %idxprom166, !dbg !8083
  %130 = load i32, i32* %arrayidx169, align 4, !dbg !8083
  %conv170 = sext i32 %130 to i64, !dbg !8083
  store i64 %conv170, i64* %adj, align 8, !dbg !8080
  %131 = load i64, i64* %adj, align 8, !dbg !8086
  %132 = load i32, i32* %scale, align 4, !dbg !8087
  %conv171 = sext i32 %132 to i64, !dbg !8087
  %mul172 = mul nsw i64 %131, %conv171, !dbg !8088
  %shr173 = ashr i64 %mul172, 22, !dbg !8089
  %conv174 = trunc i64 %shr173 to i32, !dbg !8086
  %call175 = call i32 @clip23(i32 %conv174), !dbg !8090
  store i32 %call175, i32* %scale, align 4, !dbg !8091
  br label %if.end176, !dbg !8092

if.end176:                                        ; preds = %if.then165, %if.end162
  %133 = load i32, i32* %band, align 4, !dbg !8093
  %idxprom177 = sext i32 %133 to i64, !dbg !8094
  %134 = load i32, i32* %ch, align 4, !dbg !8095
  %idxprom178 = sext i32 %134 to i64, !dbg !8094
  %135 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8094
  %subband_samples179 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %135, i32 0, i32 67, !dbg !8096
  %arrayidx180 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples179, i64 0, i64 %idxprom178, !dbg !8094
  %arrayidx181 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx180, i64 0, i64 %idxprom177, !dbg !8094
  %136 = load i32*, i32** %arrayidx181, align 8, !dbg !8094
  %137 = load i32, i32* %ofs, align 4, !dbg !8097
  %idx.ext = sext i32 %137 to i64, !dbg !8098
  %add.ptr = getelementptr inbounds i32, i32* %136, i64 %idx.ext, !dbg !8098
  %arraydecay182 = getelementptr inbounds [16 x i32], [16 x i32]* %audio, i32 0, i32 0, !dbg !8099
  %138 = load i32, i32* %step_size, align 4, !dbg !8100
  %139 = load i32, i32* %scale, align 4, !dbg !8101
  call void @ff_dca_core_dequantize(i32* %add.ptr, i32* %arraydecay182, i32 %138, i32 %139, i32 0, i32 8), !dbg !8102
  br label %for.inc183, !dbg !8103

for.inc183:                                       ; preds = %if.end176
  %140 = load i32, i32* %band, align 4, !dbg !8104
  %inc184 = add nsw i32 %140, 1, !dbg !8104
  store i32 %inc184, i32* %band, align 4, !dbg !8104
  br label %for.cond110, !dbg !8106, !llvm.loop !8107

for.end185:                                       ; preds = %for.cond110
  br label %for.inc186, !dbg !8109

for.inc186:                                       ; preds = %for.end185
  %141 = load i32, i32* %ch, align 4, !dbg !8110
  %inc187 = add nsw i32 %141, 1, !dbg !8110
  store i32 %inc187, i32* %ch, align 4, !dbg !8110
  br label %for.cond99, !dbg !8112, !llvm.loop !8113

for.end188:                                       ; preds = %for.cond99
  %142 = load i32, i32* %ssf, align 4, !dbg !8115
  %143 = load i32, i32* %sf.addr, align 4, !dbg !8117
  %idxprom189 = sext i32 %143 to i64, !dbg !8118
  %144 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8118
  %nsubsubframes190 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %144, i32 0, i32 33, !dbg !8119
  %arrayidx191 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes190, i64 0, i64 %idxprom189, !dbg !8118
  %145 = load i8, i8* %arrayidx191, align 1, !dbg !8118
  %conv192 = sext i8 %145 to i32, !dbg !8118
  %sub193 = sub nsw i32 %conv192, 1, !dbg !8120
  %cmp194 = icmp eq i32 %142, %sub193, !dbg !8121
  br i1 %cmp194, label %land.lhs.true198, label %lor.lhs.false196, !dbg !8122

lor.lhs.false196:                                 ; preds = %for.end188
  %146 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8123
  %sync_ssf = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %146, i32 0, i32 14, !dbg !8125
  %147 = load i32, i32* %sync_ssf, align 4, !dbg !8125
  %tobool197 = icmp ne i32 %147, 0, !dbg !8123
  br i1 %tobool197, label %land.lhs.true198, label %if.end205, !dbg !8126

land.lhs.true198:                                 ; preds = %lor.lhs.false196, %for.end188
  %148 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8127
  %gb199 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %148, i32 0, i32 1, !dbg !8129
  %call200 = call i32 @get_bits(%struct.GetBitContext* %gb199, i32 16), !dbg !8130
  %cmp201 = icmp ne i32 %call200, 65535, !dbg !8131
  br i1 %cmp201, label %if.then203, label %if.end205, !dbg !8132

if.then203:                                       ; preds = %land.lhs.true198
  %149 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8133
  %avctx204 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %149, i32 0, i32 0, !dbg !8135
  %150 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx204, align 32, !dbg !8135
  %151 = bitcast %struct.AVCodecContext* %150 to i8*, !dbg !8133
  call void (i8*, i32, i8*, ...) @av_log(i8* %151, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0)), !dbg !8136
  store i32 -1094995529, i32* %retval, align 4, !dbg !8137
  br label %return, !dbg !8137

if.end205:                                        ; preds = %land.lhs.true198, %lor.lhs.false196
  %152 = load i32, i32* %ofs, align 4, !dbg !8138
  %add206 = add nsw i32 %152, 8, !dbg !8138
  store i32 %add206, i32* %ofs, align 4, !dbg !8138
  br label %for.inc207, !dbg !8139

for.inc207:                                       ; preds = %if.end205
  %153 = load i32, i32* %ssf, align 4, !dbg !8140
  %inc208 = add nsw i32 %153, 1, !dbg !8140
  store i32 %inc208, i32* %ssf, align 4, !dbg !8140
  br label %for.cond91, !dbg !8142, !llvm.loop !8143

for.end209:                                       ; preds = %for.cond91
  %154 = load i32, i32* %xch_base.addr, align 4, !dbg !8145
  store i32 %154, i32* %ch, align 4, !dbg !8147
  br label %for.cond210, !dbg !8148

for.cond210:                                      ; preds = %for.inc229, %for.end209
  %155 = load i32, i32* %ch, align 4, !dbg !8149
  %156 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8152
  %nchannels211 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %156, i32 0, i32 23, !dbg !8153
  %157 = load i32, i32* %nchannels211, align 8, !dbg !8153
  %cmp212 = icmp slt i32 %155, %157, !dbg !8154
  br i1 %cmp212, label %for.body214, label %for.end231, !dbg !8155

for.body214:                                      ; preds = %for.cond210
  %158 = load i32, i32* %ch, align 4, !dbg !8156
  %idxprom215 = sext i32 %158 to i64, !dbg !8158
  %159 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8158
  %subband_samples216 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %159, i32 0, i32 67, !dbg !8159
  %arrayidx217 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples216, i64 0, i64 %idxprom215, !dbg !8158
  %arraydecay218 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx217, i32 0, i32 0, !dbg !8158
  %160 = load i32, i32* %ch, align 4, !dbg !8160
  %idxprom219 = sext i32 %160 to i64, !dbg !8161
  %161 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8161
  %prediction_vq_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %161, i32 0, i32 35, !dbg !8162
  %arrayidx220 = getelementptr inbounds [7 x [64 x i16]], [7 x [64 x i16]]* %prediction_vq_index, i64 0, i64 %idxprom219, !dbg !8161
  %arraydecay221 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx220, i32 0, i32 0, !dbg !8161
  %162 = load i32, i32* %ch, align 4, !dbg !8163
  %idxprom222 = sext i32 %162 to i64, !dbg !8164
  %163 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8164
  %prediction_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %163, i32 0, i32 34, !dbg !8165
  %arrayidx223 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode, i64 0, i64 %idxprom222, !dbg !8164
  %arraydecay224 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx223, i32 0, i32 0, !dbg !8164
  %164 = load i32, i32* %ch, align 4, !dbg !8166
  %idxprom225 = sext i32 %164 to i64, !dbg !8167
  %165 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8167
  %nsubbands226 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %165, i32 0, i32 25, !dbg !8168
  %arrayidx227 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands226, i64 0, i64 %idxprom225, !dbg !8167
  %166 = load i8, i8* %arrayidx227, align 1, !dbg !8167
  %conv228 = sext i8 %166 to i32, !dbg !8167
  %167 = load i32*, i32** %sub_pos.addr, align 8, !dbg !8169
  %168 = load i32, i32* %167, align 4, !dbg !8170
  %169 = load i32, i32* %nsamples, align 4, !dbg !8171
  call void @inverse_adpcm(i32** %arraydecay218, i16* %arraydecay221, i8* %arraydecay224, i32 0, i32 %conv228, i32 %168, i32 %169), !dbg !8172
  br label %for.inc229, !dbg !8173

for.inc229:                                       ; preds = %for.body214
  %170 = load i32, i32* %ch, align 4, !dbg !8174
  %inc230 = add nsw i32 %170, 1, !dbg !8174
  store i32 %inc230, i32* %ch, align 4, !dbg !8174
  br label %for.cond210, !dbg !8176, !llvm.loop !8177

for.end231:                                       ; preds = %for.cond210
  %171 = load i32, i32* %xch_base.addr, align 4, !dbg !8179
  store i32 %171, i32* %ch, align 4, !dbg !8181
  br label %for.cond232, !dbg !8182

for.cond232:                                      ; preds = %for.inc267, %for.end231
  %172 = load i32, i32* %ch, align 4, !dbg !8183
  %173 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8186
  %nchannels233 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %173, i32 0, i32 23, !dbg !8187
  %174 = load i32, i32* %nchannels233, align 8, !dbg !8187
  %cmp234 = icmp slt i32 %172, %174, !dbg !8188
  br i1 %cmp234, label %for.body236, label %for.end269, !dbg !8189

for.body236:                                      ; preds = %for.cond232
  call void @llvm.dbg.declare(metadata i32* %src_ch, metadata !8190, metadata !2194), !dbg !8192
  %175 = load i32, i32* %ch, align 4, !dbg !8193
  %idxprom237 = sext i32 %175 to i64, !dbg !8194
  %176 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8194
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %176, i32 0, i32 27, !dbg !8195
  %arrayidx238 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom237, !dbg !8194
  %177 = load i8, i8* %arrayidx238, align 1, !dbg !8194
  %conv239 = sext i8 %177 to i32, !dbg !8194
  %sub240 = sub nsw i32 %conv239, 1, !dbg !8196
  store i32 %sub240, i32* %src_ch, align 4, !dbg !8192
  %178 = load i32, i32* %src_ch, align 4, !dbg !8197
  %cmp241 = icmp sge i32 %178, 0, !dbg !8199
  br i1 %cmp241, label %if.then243, label %if.end266, !dbg !8200

if.then243:                                       ; preds = %for.body236
  %179 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8201
  %dcadsp244 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %179, i32 0, i32 71, !dbg !8203
  %180 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp244, align 32, !dbg !8203
  %decode_joint = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %180, i32 0, i32 1, !dbg !8204
  %181 = load void (i32**, i32**, i32*, i64, i64, i64, i64)*, void (i32**, i32**, i32*, i64, i64, i64, i64)** %decode_joint, align 8, !dbg !8204
  %182 = load i32, i32* %ch, align 4, !dbg !8205
  %idxprom245 = sext i32 %182 to i64, !dbg !8206
  %183 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8206
  %subband_samples246 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %183, i32 0, i32 67, !dbg !8207
  %arrayidx247 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples246, i64 0, i64 %idxprom245, !dbg !8206
  %arraydecay248 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx247, i32 0, i32 0, !dbg !8206
  %184 = load i32, i32* %src_ch, align 4, !dbg !8208
  %idxprom249 = sext i32 %184 to i64, !dbg !8209
  %185 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8209
  %subband_samples250 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %185, i32 0, i32 67, !dbg !8210
  %arrayidx251 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples250, i64 0, i64 %idxprom249, !dbg !8209
  %arraydecay252 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx251, i32 0, i32 0, !dbg !8209
  %186 = load i32, i32* %ch, align 4, !dbg !8211
  %idxprom253 = sext i32 %186 to i64, !dbg !8212
  %187 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8212
  %joint_scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %187, i32 0, i32 40, !dbg !8213
  %arrayidx254 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %joint_scale_factors, i64 0, i64 %idxprom253, !dbg !8212
  %arraydecay255 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx254, i32 0, i32 0, !dbg !8212
  %188 = load i32, i32* %ch, align 4, !dbg !8214
  %idxprom256 = sext i32 %188 to i64, !dbg !8215
  %189 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8215
  %nsubbands257 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %189, i32 0, i32 25, !dbg !8216
  %arrayidx258 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands257, i64 0, i64 %idxprom256, !dbg !8215
  %190 = load i8, i8* %arrayidx258, align 1, !dbg !8215
  %conv259 = sext i8 %190 to i64, !dbg !8215
  %191 = load i32, i32* %src_ch, align 4, !dbg !8217
  %idxprom260 = sext i32 %191 to i64, !dbg !8218
  %192 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8218
  %nsubbands261 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %192, i32 0, i32 25, !dbg !8219
  %arrayidx262 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands261, i64 0, i64 %idxprom260, !dbg !8218
  %193 = load i8, i8* %arrayidx262, align 1, !dbg !8218
  %conv263 = sext i8 %193 to i64, !dbg !8218
  %194 = load i32*, i32** %sub_pos.addr, align 8, !dbg !8220
  %195 = load i32, i32* %194, align 4, !dbg !8221
  %conv264 = sext i32 %195 to i64, !dbg !8221
  %196 = load i32, i32* %nsamples, align 4, !dbg !8222
  %conv265 = sext i32 %196 to i64, !dbg !8222
  call void %181(i32** %arraydecay248, i32** %arraydecay252, i32* %arraydecay255, i64 %conv259, i64 %conv263, i64 %conv264, i64 %conv265), !dbg !8201
  br label %if.end266, !dbg !8223

if.end266:                                        ; preds = %if.then243, %for.body236
  br label %for.inc267, !dbg !8224

for.inc267:                                       ; preds = %if.end266
  %197 = load i32, i32* %ch, align 4, !dbg !8225
  %inc268 = add nsw i32 %197, 1, !dbg !8225
  store i32 %inc268, i32* %ch, align 4, !dbg !8225
  br label %for.cond232, !dbg !8227, !llvm.loop !8228

for.end269:                                       ; preds = %for.cond232
  %198 = load i32, i32* %ofs, align 4, !dbg !8230
  %199 = load i32*, i32** %sub_pos.addr, align 8, !dbg !8231
  store i32 %198, i32* %199, align 4, !dbg !8232
  store i32 0, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

return:                                           ; preds = %for.end269, %if.then203, %if.then127, %if.then108, %if.then70, %if.then4, %if.then
  %200 = load i32, i32* %retval, align 4, !dbg !8234
  ret i32 %200, !dbg !8234
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #2 !dbg !8235 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8240, metadata !2194), !dbg !8241
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8242
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8243
  %1 = load i32, i32* %index, align 8, !dbg !8243
  ret i32 %1, !dbg !8244
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #2 !dbg !8245 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8248, metadata !2194), !dbg !8249
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8250
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !8251
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !8251
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8252
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !8253
  %sub = sub nsw i32 %1, %call, !dbg !8254
  ret i32 %sub, !dbg !8255
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8256 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2830, metadata !2194), !dbg !8259
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8261, metadata !2194), !dbg !8262
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8263, metadata !2194), !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8265, metadata !2194), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8267, metadata !2194), !dbg !8268
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8269
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8270
  %1 = load i32, i32* %index, align 8, !dbg !8270
  store i32 %1, i32* %re_index, align 4, !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8271, metadata !2194), !dbg !8272
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !8273, metadata !2194), !dbg !8274
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8275
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !8276
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8276
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !8274
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8277
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !8278
  %5 = load i8*, i8** %buffer, align 8, !dbg !8278
  %6 = load i32, i32* %re_index, align 4, !dbg !8279
  %shr = lshr i32 %6, 3, !dbg !8280
  %idx.ext = zext i32 %shr to i64, !dbg !8281
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !8281
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !8282
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !8282
  %8 = load i32, i32* %l, align 1, !dbg !8282
  store i32 %8, i32* %x.addr.i, align 4, !dbg !8283
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8284
  %shl.i = shl i32 %9, 8, !dbg !8285
  %and.i = and i32 %shl.i, 65280, !dbg !8286
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !8287
  %shr.i = lshr i32 %10, 8, !dbg !8288
  %and1.i = and i32 %shr.i, 255, !dbg !8289
  %or.i = or i32 %and.i, %and1.i, !dbg !8290
  %shl2.i = shl i32 %or.i, 16, !dbg !8291
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !8292
  %shr3.i = lshr i32 %11, 16, !dbg !8293
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8294
  %and5.i = and i32 %shl4.i, 65280, !dbg !8295
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !8296
  %shr6.i = lshr i32 %12, 16, !dbg !8297
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8298
  %and8.i = and i32 %shr7.i, 255, !dbg !8299
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8300
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8301
  %13 = load i32, i32* %re_index, align 4, !dbg !8302
  %and = and i32 %13, 7, !dbg !8303
  %shl = shl i32 %or10.i, %and, !dbg !8304
  store i32 %shl, i32* %re_cache, align 4, !dbg !8305
  %14 = load i32, i32* %re_cache, align 4, !dbg !8306
  %15 = load i32, i32* %n.addr, align 4, !dbg !8307
  %conv = trunc i32 %15 to i8, !dbg !8307
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !8308
  store i32 %call4, i32* %tmp, align 4, !dbg !8309
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !8310
  %17 = load i32, i32* %re_index, align 4, !dbg !8311
  %18 = load i32, i32* %n.addr, align 4, !dbg !8312
  %add = add i32 %17, %18, !dbg !8313
  %cmp = icmp ugt i32 %16, %add, !dbg !8314
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8315

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !8316
  %20 = load i32, i32* %n.addr, align 4, !dbg !8318
  %add6 = add i32 %19, %20, !dbg !8319
  br label %cond.end, !dbg !8320

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !8321
  br label %cond.end, !dbg !8323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !8324
  store i32 %cond, i32* %re_index, align 4, !dbg !8326
  %22 = load i32, i32* %re_index, align 4, !dbg !8327
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8328
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !8329
  store i32 %22, i32* %index7, align 8, !dbg !8330
  %24 = load i32, i32* %tmp, align 4, !dbg !8331
  ret i32 %24, !dbg !8332
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_dca_check_crc(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %s, i32 %p1, i32 %p2) #2 !dbg !8333 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.GetBitContext*, align 8
  %p1.addr = alloca i32, align 4
  %p2.addr = alloca i32, align 4
  %dca = alloca %struct.DCAContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8336, metadata !2194), !dbg !8337
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8338, metadata !2194), !dbg !8339
  store i32 %p1, i32* %p1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p1.addr, metadata !8340, metadata !2194), !dbg !8341
  store i32 %p2, i32* %p2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p2.addr, metadata !8342, metadata !2194), !dbg !8343
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !8344, metadata !2194), !dbg !8345
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8346
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !8347
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8347
  %2 = bitcast i8* %1 to %struct.DCAContext*, !dbg !8346
  store %struct.DCAContext* %2, %struct.DCAContext** %dca, align 8, !dbg !8345
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8348
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 135, !dbg !8350
  %4 = load i32, i32* %err_recognition, align 8, !dbg !8350
  %and = and i32 %4, 65537, !dbg !8351
  %tobool = icmp ne i32 %and, 0, !dbg !8351
  br i1 %tobool, label %if.end, label %if.then, !dbg !8352

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8353
  br label %return, !dbg !8353

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %p1.addr, align 4, !dbg !8354
  %6 = load i32, i32* %p2.addr, align 4, !dbg !8356
  %or = or i32 %5, %6, !dbg !8357
  %and1 = and i32 %or, 7, !dbg !8358
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8358
  br i1 %tobool2, label %if.then7, label %lor.lhs.false, !dbg !8359

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %p1.addr, align 4, !dbg !8360
  %cmp = icmp slt i32 %7, 0, !dbg !8362
  br i1 %cmp, label %if.then7, label %lor.lhs.false3, !dbg !8363

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %p2.addr, align 4, !dbg !8364
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8366
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 3, !dbg !8367
  %10 = load i32, i32* %size_in_bits, align 4, !dbg !8367
  %cmp4 = icmp sgt i32 %8, %10, !dbg !8368
  br i1 %cmp4, label %if.then7, label %lor.lhs.false5, !dbg !8369

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %11 = load i32, i32* %p2.addr, align 4, !dbg !8370
  %12 = load i32, i32* %p1.addr, align 4, !dbg !8372
  %sub = sub nsw i32 %11, %12, !dbg !8373
  %cmp6 = icmp slt i32 %sub, 16, !dbg !8374
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8375

if.then7:                                         ; preds = %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !8376
  br label %return, !dbg !8376

if.end8:                                          ; preds = %lor.lhs.false5
  %13 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !8377
  %crctab = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %13, i32 0, i32 9, !dbg !8379
  %14 = load i32*, i32** %crctab, align 32, !dbg !8379
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8380
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 0, !dbg !8381
  %16 = load i8*, i8** %buffer, align 8, !dbg !8381
  %17 = load i32, i32* %p1.addr, align 4, !dbg !8382
  %div = sdiv i32 %17, 8, !dbg !8383
  %idx.ext = sext i32 %div to i64, !dbg !8384
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !8384
  %18 = load i32, i32* %p2.addr, align 4, !dbg !8385
  %19 = load i32, i32* %p1.addr, align 4, !dbg !8386
  %sub9 = sub nsw i32 %18, %19, !dbg !8387
  %div10 = sdiv i32 %sub9, 8, !dbg !8388
  %conv = sext i32 %div10 to i64, !dbg !8389
  %call = call i32 @av_crc(i32* %14, i32 65535, i8* %add.ptr, i64 %conv) #8, !dbg !8390
  %tobool11 = icmp ne i32 %call, 0, !dbg !8390
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8391

if.then12:                                        ; preds = %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !8392
  br label %return, !dbg !8392

if.end13:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !8393
  br label %return, !dbg !8393

return:                                           ; preds = %if.end13, %if.then12, %if.then7, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8394
  ret i32 %20, !dbg !8394
}

declare void @avpriv_request_sample(i8*, i8*, ...) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8395 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8396, metadata !2194), !dbg !8397
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8398, metadata !2194), !dbg !8399
  %0 = load i32, i32* %n.addr, align 4, !dbg !8400
  %tobool = icmp ne i32 %0, 0, !dbg !8400
  br i1 %tobool, label %if.else, label %if.then, !dbg !8402

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8403
  br label %return, !dbg !8403

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !8405
  %cmp = icmp sle i32 %1, 25, !dbg !8407
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !8408

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8409
  %3 = load i32, i32* %n.addr, align 4, !dbg !8411
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !8412
  store i32 %call, i32* %retval, align 4, !dbg !8413
  br label %return, !dbg !8413

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8414, metadata !2194), !dbg !8416
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8417
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !8418
  %5 = load i32, i32* %n.addr, align 4, !dbg !8419
  %sub = sub nsw i32 %5, 16, !dbg !8420
  %shl = shl i32 %call3, %sub, !dbg !8421
  store i32 %shl, i32* %ret, align 4, !dbg !8416
  %6 = load i32, i32* %ret, align 4, !dbg !8422
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8423
  %8 = load i32, i32* %n.addr, align 4, !dbg !8424
  %sub4 = sub nsw i32 %8, 16, !dbg !8425
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !8426
  %or = or i32 %6, %call5, !dbg !8427
  store i32 %or, i32* %retval, align 4, !dbg !8428
  br label %return, !dbg !8428

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8429
  ret i32 %9, !dbg !8429
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #2 !dbg !8430 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8433, metadata !2194), !dbg !8434
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8435, metadata !2194), !dbg !8436
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8437
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8438
  %1 = load i32, i32* %index1, align 8, !dbg !8438
  store i32 %1, i32* %index, align 4, !dbg !8436
  call void @llvm.dbg.declare(metadata i8* %result, metadata !8439, metadata !2194), !dbg !8440
  %2 = load i32, i32* %index, align 4, !dbg !8441
  %shr = lshr i32 %2, 3, !dbg !8442
  %idxprom = zext i32 %shr to i64, !dbg !8443
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8443
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !8444
  %4 = load i8*, i8** %buffer, align 8, !dbg !8444
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8443
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8443
  store i8 %5, i8* %result, align 1, !dbg !8440
  %6 = load i32, i32* %index, align 4, !dbg !8445
  %and = and i32 %6, 7, !dbg !8446
  %7 = load i8, i8* %result, align 1, !dbg !8447
  %conv = zext i8 %7 to i32, !dbg !8447
  %shl = shl i32 %conv, %and, !dbg !8447
  %conv2 = trunc i32 %shl to i8, !dbg !8447
  store i8 %conv2, i8* %result, align 1, !dbg !8447
  %8 = load i8, i8* %result, align 1, !dbg !8448
  %conv3 = zext i8 %8 to i32, !dbg !8448
  %shr4 = ashr i32 %conv3, 7, !dbg !8448
  %conv5 = trunc i32 %shr4 to i8, !dbg !8448
  store i8 %conv5, i8* %result, align 1, !dbg !8448
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8449
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !8451
  %10 = load i32, i32* %index6, align 8, !dbg !8451
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8452
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !8453
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8453
  %cmp = icmp slt i32 %10, %12, !dbg !8454
  br i1 %cmp, label %if.then, label %if.end, !dbg !8455

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !8456
  %inc = add i32 %13, 1, !dbg !8456
  store i32 %inc, i32* %index, align 4, !dbg !8456
  br label %if.end, !dbg !8457

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !8458
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8459
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8460
  store i32 %14, i32* %index8, align 8, !dbg !8461
  %16 = load i8, i8* %result, align 1, !dbg !8462
  %conv9 = zext i8 %16 to i32, !dbg !8462
  ret i32 %conv9, !dbg !8463
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8464 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8465, metadata !2194), !dbg !8466
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8467, metadata !2194), !dbg !8468
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8469, metadata !2194), !dbg !8470
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8471
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8472
  %1 = load i32, i32* %index, align 8, !dbg !8472
  store i32 %1, i32* %re_index, align 4, !dbg !8470
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8473, metadata !2194), !dbg !8474
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !8475, metadata !2194), !dbg !8476
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8477
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !8478
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8478
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !8476
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !8479
  %5 = load i32, i32* %re_index, align 4, !dbg !8480
  %6 = load i32, i32* %n.addr, align 4, !dbg !8481
  %add = add i32 %5, %6, !dbg !8482
  %cmp = icmp ugt i32 %4, %add, !dbg !8483
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8484

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !8485
  %8 = load i32, i32* %n.addr, align 4, !dbg !8487
  %add1 = add i32 %7, %8, !dbg !8488
  br label %cond.end, !dbg !8489

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !8490
  br label %cond.end, !dbg !8492

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !8493
  store i32 %cond, i32* %re_index, align 4, !dbg !8495
  %10 = load i32, i32* %re_index, align 4, !dbg !8496
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8497
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !8498
  store i32 %10, i32* %index2, align 8, !dbg !8499
  ret void, !dbg !8500
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #2 !dbg !8501 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8505, metadata !2194), !dbg !8506
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !8507, metadata !2194), !dbg !8508
  %0 = load i32, i32* %a.addr, align 4, !dbg !8509
  %1 = load i8, i8* %s.addr, align 1, !dbg !8510
  %conv = sext i8 %1 to i32, !dbg !8510
  %sub = sub nsw i32 0, %conv, !dbg !8511
  %conv1 = trunc i32 %sub to i8, !dbg !8512
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !8509, !srcloc !8513
  store i32 %2, i32* %a.addr, align 4, !dbg !8509
  %3 = load i32, i32* %a.addr, align 4, !dbg !8514
  ret i32 %3, !dbg !8515
}

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #6

; Function Attrs: nounwind uwtable
define internal i32 @dca_get_vlc(%struct.GetBitContext* %s, %struct.DCAVLC* %v, i32 %i) #0 !dbg !8516 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2830, metadata !2194), !dbg !8538
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2830, metadata !2194), !dbg !8550
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2830, metadata !2194), !dbg !8553
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !8555, metadata !2194), !dbg !8556
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !8557, metadata !2194), !dbg !8558
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !8559, metadata !2194), !dbg !8560
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !8561, metadata !2194), !dbg !8562
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !8563, metadata !2194), !dbg !8564
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !8565, metadata !2194), !dbg !8566
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !8567, metadata !2194), !dbg !8568
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !8569, metadata !2194), !dbg !8570
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !8571, metadata !2194), !dbg !8572
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !8573, metadata !2194), !dbg !8574
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !8575, metadata !2194), !dbg !8576
  %s.addr = alloca %struct.GetBitContext*, align 8
  %v.addr = alloca %struct.DCAVLC*, align 8
  %i.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8577, metadata !2194), !dbg !8578
  store %struct.DCAVLC* %v, %struct.DCAVLC** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCAVLC** %v.addr, metadata !8579, metadata !2194), !dbg !8580
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8581, metadata !2194), !dbg !8582
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8583
  %1 = load i32, i32* %i.addr, align 4, !dbg !8584
  %idxprom = sext i32 %1 to i64, !dbg !8585
  %2 = load %struct.DCAVLC*, %struct.DCAVLC** %v.addr, align 8, !dbg !8585
  %vlc = getelementptr inbounds %struct.DCAVLC, %struct.DCAVLC* %2, i32 0, i32 2, !dbg !8586
  %arrayidx = getelementptr inbounds [7 x %struct.VLC], [7 x %struct.VLC]* %vlc, i64 0, i64 %idxprom, !dbg !8585
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !8587
  %3 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !8587
  %4 = load i32, i32* %i.addr, align 4, !dbg !8588
  %idxprom1 = sext i32 %4 to i64, !dbg !8589
  %5 = load %struct.DCAVLC*, %struct.DCAVLC** %v.addr, align 8, !dbg !8589
  %vlc2 = getelementptr inbounds %struct.DCAVLC, %struct.DCAVLC* %5, i32 0, i32 2, !dbg !8590
  %arrayidx3 = getelementptr inbounds [7 x %struct.VLC], [7 x %struct.VLC]* %vlc2, i64 0, i64 %idxprom1, !dbg !8589
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx3, i32 0, i32 0, !dbg !8591
  %6 = load i32, i32* %bits, align 8, !dbg !8591
  %7 = load %struct.DCAVLC*, %struct.DCAVLC** %v.addr, align 8, !dbg !8592
  %max_depth = getelementptr inbounds %struct.DCAVLC, %struct.DCAVLC* %7, i32 0, i32 1, !dbg !8593
  %8 = load i32, i32* %max_depth, align 4, !dbg !8593
  store %struct.GetBitContext* %0, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8594
  store [2 x i16]* %3, [2 x i16]** %table.addr.i, align 8, !dbg !8594
  store i32 %6, i32* %bits.addr.i, align 4, !dbg !8594
  store i32 %8, i32* %max_depth.addr.i, align 4, !dbg !8594
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8595
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !8596
  %10 = load i32, i32* %index.i, align 8, !dbg !8596
  store i32 %10, i32* %re_index.i, align 4, !dbg !8566
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8597
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !8598
  %12 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !8598
  store i32 %12, i32* %re_size_plus8.i, align 4, !dbg !8570
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8599
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 0, !dbg !8600
  %14 = load i8*, i8** %buffer.i, align 8, !dbg !8600
  %15 = load i32, i32* %re_index.i, align 4, !dbg !8601
  %shr.i = lshr i32 %15, 3, !dbg !8602
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !8603
  %add.ptr.i = getelementptr inbounds i8, i8* %14, i64 %idx.ext.i, !dbg !8603
  %16 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !8604
  %l.i = bitcast %union.unaligned_32* %16 to i32*, !dbg !8604
  %17 = load i32, i32* %l.i, align 1, !dbg !8604
  store i32 %17, i32* %x.addr.i.i, align 4, !dbg !8605
  %18 = load i32, i32* %x.addr.i.i, align 4, !dbg !8606
  %shl.i.i = shl i32 %18, 8, !dbg !8607
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !8608
  %19 = load i32, i32* %x.addr.i.i, align 4, !dbg !8609
  %shr.i.i = lshr i32 %19, 8, !dbg !8610
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !8611
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !8612
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !8613
  %20 = load i32, i32* %x.addr.i.i, align 4, !dbg !8614
  %shr3.i.i = lshr i32 %20, 16, !dbg !8615
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !8616
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !8617
  %21 = load i32, i32* %x.addr.i.i, align 4, !dbg !8618
  %shr6.i.i = lshr i32 %21, 16, !dbg !8619
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !8620
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !8621
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !8622
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !8623
  %22 = load i32, i32* %re_index.i, align 4, !dbg !8624
  %and.i = and i32 %22, 7, !dbg !8625
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !8626
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !8627
  %23 = load i32, i32* %re_cache.i, align 4, !dbg !8628
  %24 = load i32, i32* %bits.addr.i, align 4, !dbg !8630
  %conv.i = trunc i32 %24 to i8, !dbg !8630
  %call2.i = call i32 @NEG_USR32(i32 %23, i8 signext %conv.i) #7, !dbg !8631
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !8632
  %25 = load i32, i32* %index1.i, align 4, !dbg !8633
  %idxprom.i = zext i32 %25 to i64, !dbg !8634
  %26 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8634
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %26, i64 %idxprom.i, !dbg !8634
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !8634
  %27 = load i16, i16* %arrayidx3.i, align 2, !dbg !8634
  %conv4.i = sext i16 %27 to i32, !dbg !8634
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !8635
  %28 = load i32, i32* %index1.i, align 4, !dbg !8636
  %idxprom5.i = zext i32 %28 to i64, !dbg !8637
  %29 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8637
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %29, i64 %idxprom5.i, !dbg !8637
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !8637
  %30 = load i16, i16* %arrayidx7.i, align 2, !dbg !8637
  %conv8.i = sext i16 %30 to i32, !dbg !8637
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !8638
  %31 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8639
  %cmp.i = icmp sgt i32 %31, 1, !dbg !8640
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !8641

land.lhs.true.i:                                  ; preds = %entry
  %32 = load i32, i32* %n.i, align 4, !dbg !8642
  %cmp10.i = icmp slt i32 %32, 0, !dbg !8644
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !8645

if.then.i:                                        ; preds = %land.lhs.true.i
  %33 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8646
  %34 = load i32, i32* %re_index.i, align 4, !dbg !8648
  %35 = load i32, i32* %bits.addr.i, align 4, !dbg !8649
  %add.i = add i32 %34, %35, !dbg !8650
  %cmp12.i = icmp ugt i32 %33, %add.i, !dbg !8651
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !8652

cond.true.i:                                      ; preds = %if.then.i
  %36 = load i32, i32* %re_index.i, align 4, !dbg !8653
  %37 = load i32, i32* %bits.addr.i, align 4, !dbg !8655
  %add14.i = add i32 %36, %37, !dbg !8656
  br label %cond.end.i, !dbg !8657

cond.false.i:                                     ; preds = %if.then.i
  %38 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8658
  br label %cond.end.i, !dbg !8660

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %38, %cond.false.i ], !dbg !8661
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !8662
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8663
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %39, i32 0, i32 0, !dbg !8664
  %40 = load i8*, i8** %buffer15.i, align 8, !dbg !8664
  %41 = load i32, i32* %re_index.i, align 4, !dbg !8665
  %shr16.i = lshr i32 %41, 3, !dbg !8666
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !8667
  %add.ptr18.i = getelementptr inbounds i8, i8* %40, i64 %idx.ext17.i, !dbg !8667
  %42 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !8668
  %l19.i = bitcast %union.unaligned_32* %42 to i32*, !dbg !8668
  %43 = load i32, i32* %l19.i, align 1, !dbg !8668
  store i32 %43, i32* %x.addr.i81.i, align 4, !dbg !8669
  %44 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8670
  %shl.i82.i = shl i32 %44, 8, !dbg !8671
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !8672
  %45 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8673
  %shr.i84.i = lshr i32 %45, 8, !dbg !8674
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !8675
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !8676
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !8677
  %46 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8678
  %shr3.i88.i = lshr i32 %46, 16, !dbg !8679
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !8680
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !8681
  %47 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8682
  %shr6.i91.i = lshr i32 %47, 16, !dbg !8683
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !8684
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !8685
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !8686
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !8687
  %48 = load i32, i32* %re_index.i, align 4, !dbg !8688
  %and21.i = and i32 %48, 7, !dbg !8689
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !8690
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !8691
  %49 = load i32, i32* %n.i, align 4, !dbg !8692
  %sub.i = sub nsw i32 0, %49, !dbg !8693
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !8694
  %50 = load i32, i32* %re_cache.i, align 4, !dbg !8695
  %51 = load i32, i32* %nb_bits.i, align 4, !dbg !8696
  %conv23.i = trunc i32 %51 to i8, !dbg !8696
  %call24.i = call i32 @NEG_USR32(i32 %50, i8 signext %conv23.i) #7, !dbg !8697
  %52 = load i32, i32* %code.i, align 4, !dbg !8699
  %add25.i = add i32 %call24.i, %52, !dbg !8700
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !8701
  %53 = load i32, i32* %index1.i, align 4, !dbg !8702
  %idxprom26.i = zext i32 %53 to i64, !dbg !8703
  %54 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8703
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %54, i64 %idxprom26.i, !dbg !8703
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !8703
  %55 = load i16, i16* %arrayidx28.i, align 2, !dbg !8703
  %conv29.i = sext i16 %55 to i32, !dbg !8703
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !8704
  %56 = load i32, i32* %index1.i, align 4, !dbg !8705
  %idxprom30.i = zext i32 %56 to i64, !dbg !8706
  %57 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8706
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %57, i64 %idxprom30.i, !dbg !8706
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !8706
  %58 = load i16, i16* %arrayidx32.i, align 2, !dbg !8706
  %conv33.i = sext i16 %58 to i32, !dbg !8706
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !8707
  %59 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8708
  %cmp34.i = icmp sgt i32 %59, 2, !dbg !8709
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !8710

land.lhs.true36.i:                                ; preds = %cond.end.i
  %60 = load i32, i32* %n.i, align 4, !dbg !8711
  %cmp37.i = icmp slt i32 %60, 0, !dbg !8713
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !8714

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %61 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8715
  %62 = load i32, i32* %re_index.i, align 4, !dbg !8717
  %63 = load i32, i32* %nb_bits.i, align 4, !dbg !8718
  %add40.i = add i32 %62, %63, !dbg !8719
  %cmp41.i = icmp ugt i32 %61, %add40.i, !dbg !8720
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !8721

cond.true43.i:                                    ; preds = %if.then39.i
  %64 = load i32, i32* %re_index.i, align 4, !dbg !8722
  %65 = load i32, i32* %nb_bits.i, align 4, !dbg !8724
  %add44.i = add i32 %64, %65, !dbg !8725
  br label %cond.end46.i, !dbg !8726

cond.false45.i:                                   ; preds = %if.then39.i
  %66 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8727
  br label %cond.end46.i, !dbg !8729

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %66, %cond.false45.i ], !dbg !8730
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !8731
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8732
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %67, i32 0, i32 0, !dbg !8733
  %68 = load i8*, i8** %buffer48.i, align 8, !dbg !8733
  %69 = load i32, i32* %re_index.i, align 4, !dbg !8734
  %shr49.i = lshr i32 %69, 3, !dbg !8735
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !8736
  %add.ptr51.i = getelementptr inbounds i8, i8* %68, i64 %idx.ext50.i, !dbg !8736
  %70 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !8737
  %l52.i = bitcast %union.unaligned_32* %70 to i32*, !dbg !8737
  %71 = load i32, i32* %l52.i, align 1, !dbg !8737
  store i32 %71, i32* %x.addr.i96.i, align 4, !dbg !8738
  %72 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8739
  %shl.i97.i = shl i32 %72, 8, !dbg !8740
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !8741
  %73 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8742
  %shr.i99.i = lshr i32 %73, 8, !dbg !8743
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !8744
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !8745
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !8746
  %74 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8747
  %shr3.i103.i = lshr i32 %74, 16, !dbg !8748
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !8749
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !8750
  %75 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8751
  %shr6.i106.i = lshr i32 %75, 16, !dbg !8752
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !8753
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !8754
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !8755
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !8756
  %76 = load i32, i32* %re_index.i, align 4, !dbg !8757
  %and54.i = and i32 %76, 7, !dbg !8758
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !8759
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !8760
  %77 = load i32, i32* %n.i, align 4, !dbg !8761
  %sub56.i = sub nsw i32 0, %77, !dbg !8762
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !8763
  %78 = load i32, i32* %re_cache.i, align 4, !dbg !8764
  %79 = load i32, i32* %nb_bits.i, align 4, !dbg !8765
  %conv57.i = trunc i32 %79 to i8, !dbg !8765
  %call58.i = call i32 @NEG_USR32(i32 %78, i8 signext %conv57.i) #7, !dbg !8766
  %80 = load i32, i32* %code.i, align 4, !dbg !8768
  %add59.i = add i32 %call58.i, %80, !dbg !8769
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !8770
  %81 = load i32, i32* %index1.i, align 4, !dbg !8771
  %idxprom60.i = zext i32 %81 to i64, !dbg !8772
  %82 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8772
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %82, i64 %idxprom60.i, !dbg !8772
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !8772
  %83 = load i16, i16* %arrayidx62.i, align 2, !dbg !8772
  %conv63.i = sext i16 %83 to i32, !dbg !8772
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !8773
  %84 = load i32, i32* %index1.i, align 4, !dbg !8774
  %idxprom64.i = zext i32 %84 to i64, !dbg !8775
  %85 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8775
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %85, i64 %idxprom64.i, !dbg !8775
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !8775
  %86 = load i16, i16* %arrayidx66.i, align 2, !dbg !8775
  %conv67.i = sext i16 %86 to i32, !dbg !8775
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !8776
  br label %if.end.i, !dbg !8777

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !8778

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %87 = load i32, i32* %n.i, align 4, !dbg !8780
  %88 = load i32, i32* %re_cache.i, align 4, !dbg !8783
  %shl70.i = shl i32 %88, %87, !dbg !8783
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !8783
  %89 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8784
  %90 = load i32, i32* %re_index.i, align 4, !dbg !8785
  %91 = load i32, i32* %n.i, align 4, !dbg !8786
  %add71.i = add i32 %90, %91, !dbg !8787
  %cmp72.i = icmp ugt i32 %89, %add71.i, !dbg !8788
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !8789

cond.true74.i:                                    ; preds = %if.end68.i
  %92 = load i32, i32* %re_index.i, align 4, !dbg !8790
  %93 = load i32, i32* %n.i, align 4, !dbg !8792
  %add75.i = add i32 %92, %93, !dbg !8793
  br label %get_vlc2.exit, !dbg !8794

cond.false76.i:                                   ; preds = %if.end68.i
  %94 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8795
  br label %get_vlc2.exit, !dbg !8797

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %94, %cond.false76.i ], !dbg !8798
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !8800
  %95 = load i32, i32* %re_index.i, align 4, !dbg !8801
  %96 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8802
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %96, i32 0, i32 2, !dbg !8803
  store i32 %95, i32* %index80.i, align 8, !dbg !8804
  %97 = load i32, i32* %code.i, align 4, !dbg !8805
  %98 = load %struct.DCAVLC*, %struct.DCAVLC** %v.addr, align 8, !dbg !8806
  %offset = getelementptr inbounds %struct.DCAVLC, %struct.DCAVLC* %98, i32 0, i32 0, !dbg !8807
  %99 = load i32, i32* %offset, align 8, !dbg !8807
  %add = add nsw i32 %97, %99, !dbg !8808
  ret i32 %add, !dbg !8809
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_scale(%struct.DCACoreDecoder* %s, i32* %scale_index, i32 %sel) #2 !dbg !8810 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %scale_index.addr = alloca i32*, align 8
  %sel.addr = alloca i32, align 4
  %scale_table = alloca i32*, align 8
  %scale_size = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !8813, metadata !2194), !dbg !8814
  store i32* %scale_index, i32** %scale_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %scale_index.addr, metadata !8815, metadata !2194), !dbg !8816
  store i32 %sel, i32* %sel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sel.addr, metadata !8817, metadata !2194), !dbg !8818
  call void @llvm.dbg.declare(metadata i32** %scale_table, metadata !8819, metadata !2194), !dbg !8822
  call void @llvm.dbg.declare(metadata i32* %scale_size, metadata !8823, metadata !2194), !dbg !8824
  %0 = load i32, i32* %sel.addr, align 4, !dbg !8825
  %cmp = icmp sgt i32 %0, 5, !dbg !8827
  br i1 %cmp, label %if.then, label %if.else, !dbg !8828

if.then:                                          ; preds = %entry
  store i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_dca_scale_factor_quant7, i32 0, i32 0), i32** %scale_table, align 8, !dbg !8829
  store i32 128, i32* %scale_size, align 4, !dbg !8831
  br label %if.end, !dbg !8832

if.else:                                          ; preds = %entry
  store i32* getelementptr inbounds ([64 x i32], [64 x i32]* @ff_dca_scale_factor_quant6, i32 0, i32 0), i32** %scale_table, align 8, !dbg !8833
  store i32 64, i32* %scale_size, align 4, !dbg !8835
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* %sel.addr, align 4, !dbg !8836
  %cmp1 = icmp slt i32 %1, 5, !dbg !8838
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !8839

if.then2:                                         ; preds = %if.end
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8840
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 1, !dbg !8841
  %3 = load i32, i32* %sel.addr, align 4, !dbg !8842
  %call = call i32 @dca_get_vlc(%struct.GetBitContext* %gb, %struct.DCAVLC* @ff_dca_vlc_scale_factor, i32 %3), !dbg !8843
  %4 = load i32*, i32** %scale_index.addr, align 8, !dbg !8844
  %5 = load i32, i32* %4, align 4, !dbg !8845
  %add = add nsw i32 %5, %call, !dbg !8845
  store i32 %add, i32* %4, align 4, !dbg !8845
  br label %if.end7, !dbg !8846

if.else3:                                         ; preds = %if.end
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8847
  %gb4 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 1, !dbg !8848
  %7 = load i32, i32* %sel.addr, align 4, !dbg !8849
  %add5 = add nsw i32 %7, 1, !dbg !8850
  %call6 = call i32 @get_bits(%struct.GetBitContext* %gb4, i32 %add5), !dbg !8851
  %8 = load i32*, i32** %scale_index.addr, align 8, !dbg !8852
  store i32 %call6, i32* %8, align 4, !dbg !8853
  br label %if.end7

if.end7:                                          ; preds = %if.else3, %if.then2
  %9 = load i32*, i32** %scale_index.addr, align 8, !dbg !8854
  %10 = load i32, i32* %9, align 4, !dbg !8856
  %11 = load i32, i32* %scale_size, align 4, !dbg !8857
  %cmp8 = icmp uge i32 %10, %11, !dbg !8858
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8859

if.then9:                                         ; preds = %if.end7
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8860
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !8862
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !8862
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !8860
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0)), !dbg !8863
  store i32 -1094995529, i32* %retval, align 4, !dbg !8864
  br label %return, !dbg !8864

if.end10:                                         ; preds = %if.end7
  %15 = load i32*, i32** %scale_index.addr, align 8, !dbg !8865
  %16 = load i32, i32* %15, align 4, !dbg !8866
  %idxprom = sext i32 %16 to i64, !dbg !8867
  %17 = load i32*, i32** %scale_table, align 8, !dbg !8867
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 %idxprom, !dbg !8867
  %18 = load i32, i32* %arrayidx, align 4, !dbg !8867
  store i32 %18, i32* %retval, align 4, !dbg !8868
  br label %return, !dbg !8868

return:                                           ; preds = %if.end10, %if.then9
  %19 = load i32, i32* %retval, align 4, !dbg !8869
  ret i32 %19, !dbg !8869
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_joint_scale(%struct.DCACoreDecoder* %s, i32 %sel) #2 !dbg !8870 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %sel.addr = alloca i32, align 4
  %scale_index = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !8871, metadata !2194), !dbg !8872
  store i32 %sel, i32* %sel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sel.addr, metadata !8873, metadata !2194), !dbg !8874
  call void @llvm.dbg.declare(metadata i32* %scale_index, metadata !8875, metadata !2194), !dbg !8876
  %0 = load i32, i32* %sel.addr, align 4, !dbg !8877
  %cmp = icmp slt i32 %0, 5, !dbg !8879
  br i1 %cmp, label %if.then, label %if.else, !dbg !8880

if.then:                                          ; preds = %entry
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8881
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !8882
  %2 = load i32, i32* %sel.addr, align 4, !dbg !8883
  %call = call i32 @dca_get_vlc(%struct.GetBitContext* %gb, %struct.DCAVLC* @ff_dca_vlc_scale_factor, i32 %2), !dbg !8884
  store i32 %call, i32* %scale_index, align 4, !dbg !8885
  br label %if.end, !dbg !8886

if.else:                                          ; preds = %entry
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8887
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 1, !dbg !8888
  %4 = load i32, i32* %sel.addr, align 4, !dbg !8889
  %add = add nsw i32 %4, 1, !dbg !8890
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 %add), !dbg !8891
  store i32 %call2, i32* %scale_index, align 4, !dbg !8892
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %scale_index, align 4, !dbg !8893
  %add3 = add nsw i32 %5, 64, !dbg !8893
  store i32 %add3, i32* %scale_index, align 4, !dbg !8893
  %6 = load i32, i32* %scale_index, align 4, !dbg !8894
  %conv = zext i32 %6 to i64, !dbg !8896
  %cmp4 = icmp uge i64 %conv, 129, !dbg !8897
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !8898

if.then6:                                         ; preds = %if.end
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !8899
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 0, !dbg !8901
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !8901
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !8899
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i32 0, i32 0)), !dbg !8902
  store i32 -1094995529, i32* %retval, align 4, !dbg !8903
  br label %return, !dbg !8903

if.end7:                                          ; preds = %if.end
  %10 = load i32, i32* %scale_index, align 4, !dbg !8904
  %idxprom = sext i32 %10 to i64, !dbg !8905
  %arrayidx = getelementptr inbounds [129 x i32], [129 x i32]* @ff_dca_joint_scale_factors, i64 0, i64 %idxprom, !dbg !8905
  %11 = load i32, i32* %arrayidx, align 4, !dbg !8905
  store i32 %11, i32* %retval, align 4, !dbg !8906
  br label %return, !dbg !8906

return:                                           ; preds = %if.end7, %if.then6
  %12 = load i32, i32* %retval, align 4, !dbg !8907
  ret i32 %12, !dbg !8907
}

; Function Attrs: nounwind uwtable
define internal void @get_array(%struct.GetBitContext* %s, i32* %array, i32 %size, i32 %n) #0 !dbg !8908 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %array.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8911, metadata !2194), !dbg !8912
  store i32* %array, i32** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %array.addr, metadata !8913, metadata !2194), !dbg !8914
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8915, metadata !2194), !dbg !8916
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8917, metadata !2194), !dbg !8918
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8919, metadata !2194), !dbg !8920
  store i32 0, i32* %i, align 4, !dbg !8921
  br label %for.cond, !dbg !8923

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8924
  %1 = load i32, i32* %size.addr, align 4, !dbg !8927
  %cmp = icmp slt i32 %0, %1, !dbg !8928
  br i1 %cmp, label %for.body, label %for.end, !dbg !8929

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8930
  %3 = load i32, i32* %n.addr, align 4, !dbg !8931
  %call = call i32 @get_sbits(%struct.GetBitContext* %2, i32 %3), !dbg !8932
  %4 = load i32, i32* %i, align 4, !dbg !8933
  %idxprom = sext i32 %4 to i64, !dbg !8934
  %5 = load i32*, i32** %array.addr, align 8, !dbg !8934
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !8934
  store i32 %call, i32* %arrayidx, align 4, !dbg !8935
  br label %for.inc, !dbg !8934

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !8936
  %inc = add nsw i32 %6, 1, !dbg !8936
  store i32 %inc, i32* %i, align 4, !dbg !8936
  br label %for.cond, !dbg !8938, !llvm.loop !8939

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8941
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mul23(i32 %a, i32 %b) #2 !dbg !8942 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8946, metadata !2194), !dbg !8947
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8948, metadata !2194), !dbg !8949
  %0 = load i32, i32* %a.addr, align 4, !dbg !8950
  %1 = load i32, i32* %b.addr, align 4, !dbg !8951
  %call = call i32 @mul__(i32 %0, i32 %1, i32 23), !dbg !8952
  ret i32 %call, !dbg !8953
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @clip23(i32 %a) #2 !dbg !8954 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8957, metadata !2194), !dbg !8961
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !8963, metadata !2194), !dbg !8964
  %a.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8965, metadata !2194), !dbg !8966
  %0 = load i32, i32* %a.addr, align 4, !dbg !8967
  store i32 %0, i32* %a.addr.i, align 4, !dbg !8968
  store i32 23, i32* %p.addr.i, align 4, !dbg !8968
  %1 = load i32, i32* %a.addr.i, align 4, !dbg !8969
  %2 = load i32, i32* %p.addr.i, align 4, !dbg !8971
  %shl.i = shl i32 1, %2, !dbg !8972
  %add.i = add i32 %1, %shl.i, !dbg !8973
  %3 = load i32, i32* %p.addr.i, align 4, !dbg !8974
  %shl1.i = shl i32 2, %3, !dbg !8975
  %sub.i = sub nsw i32 %shl1.i, 1, !dbg !8976
  %neg.i = xor i32 %sub.i, -1, !dbg !8977
  %and.i = and i32 %add.i, %neg.i, !dbg !8978
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !8978
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !8979

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !8980
  %shr.i = ashr i32 %4, 31, !dbg !8981
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !8982
  %shl2.i = shl i32 1, %5, !dbg !8983
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !8984
  %xor.i = xor i32 %shr.i, %sub3.i, !dbg !8985
  store i32 %xor.i, i32* %retval.i, align 4, !dbg !8986
  br label %av_clip_intp2_c.exit, !dbg !8986

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %a.addr.i, align 4, !dbg !8987
  store i32 %6, i32* %retval.i, align 4, !dbg !8988
  br label %av_clip_intp2_c.exit, !dbg !8988

av_clip_intp2_c.exit:                             ; preds = %if.then.i, %if.else.i
  %7 = load i32, i32* %retval.i, align 4, !dbg !8989
  ret i32 %7, !dbg !8990
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @extract_audio(%struct.DCACoreDecoder* %s, i32* %audio, i32 %abits, i32 %ch) #2 !dbg !8991 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %audio.addr = alloca i32*, align 8
  %abits.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !8994, metadata !2194), !dbg !8995
  store i32* %audio, i32** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %audio.addr, metadata !8996, metadata !2194), !dbg !8997
  store i32 %abits, i32* %abits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %abits.addr, metadata !8998, metadata !2194), !dbg !8999
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9000, metadata !2194), !dbg !9001
  %0 = load i32, i32* %abits.addr, align 4, !dbg !9002
  %cmp = icmp eq i32 %0, 0, !dbg !9004
  br i1 %cmp, label %if.then, label %if.end, !dbg !9005

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %audio.addr, align 8, !dbg !9006
  %2 = bitcast i32* %1 to i8*, !dbg !9008
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 32, i32 4, i1 false), !dbg !9008
  store i32 0, i32* %retval, align 4, !dbg !9009
  br label %return, !dbg !9009

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %abits.addr, align 4, !dbg !9010
  %cmp1 = icmp sle i32 %3, 10, !dbg !9012
  br i1 %cmp1, label %if.then2, label %if.end18, !dbg !9013

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !9014, metadata !2194), !dbg !9016
  %4 = load i32, i32* %abits.addr, align 4, !dbg !9017
  %sub = sub nsw i32 %4, 1, !dbg !9018
  %idxprom = sext i32 %sub to i64, !dbg !9019
  %5 = load i32, i32* %ch.addr, align 4, !dbg !9020
  %idxprom3 = sext i32 %5 to i64, !dbg !9019
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9019
  %quant_index_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 31, !dbg !9021
  %arrayidx = getelementptr inbounds [7 x [10 x i8]], [7 x [10 x i8]]* %quant_index_sel, i64 0, i64 %idxprom3, !dbg !9019
  %arrayidx4 = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !9019
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !9019
  %conv = sext i8 %7 to i32, !dbg !9019
  store i32 %conv, i32* %sel, align 4, !dbg !9016
  %8 = load i32, i32* %sel, align 4, !dbg !9022
  %9 = load i32, i32* %abits.addr, align 4, !dbg !9024
  %sub5 = sub nsw i32 %9, 1, !dbg !9025
  %idxprom6 = sext i32 %sub5 to i64, !dbg !9026
  %arrayidx7 = getelementptr inbounds [10 x i8], [10 x i8]* @ff_dca_quant_index_group_size, i64 0, i64 %idxprom6, !dbg !9026
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !9026
  %conv8 = zext i8 %10 to i32, !dbg !9026
  %cmp9 = icmp slt i32 %8, %conv8, !dbg !9027
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9028

if.then11:                                        ; preds = %if.then2
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9029
  %12 = load i32*, i32** %audio.addr, align 8, !dbg !9031
  %13 = load i32, i32* %abits.addr, align 4, !dbg !9032
  %14 = load i32, i32* %sel, align 4, !dbg !9033
  %call = call i32 @parse_huffman_codes(%struct.DCACoreDecoder* %11, i32* %12, i32 %13, i32 %14), !dbg !9034
  store i32 %call, i32* %retval, align 4, !dbg !9035
  br label %return, !dbg !9035

if.end12:                                         ; preds = %if.then2
  %15 = load i32, i32* %abits.addr, align 4, !dbg !9036
  %cmp13 = icmp sle i32 %15, 7, !dbg !9038
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !9039

if.then15:                                        ; preds = %if.end12
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9040
  %17 = load i32*, i32** %audio.addr, align 8, !dbg !9042
  %18 = load i32, i32* %abits.addr, align 4, !dbg !9043
  %call16 = call i32 @parse_block_codes(%struct.DCACoreDecoder* %16, i32* %17, i32 %18), !dbg !9044
  store i32 %call16, i32* %retval, align 4, !dbg !9045
  br label %return, !dbg !9045

if.end17:                                         ; preds = %if.end12
  br label %if.end18, !dbg !9046

if.end18:                                         ; preds = %if.end17, %if.end
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9047
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 1, !dbg !9048
  %20 = load i32*, i32** %audio.addr, align 8, !dbg !9049
  %21 = load i32, i32* %abits.addr, align 4, !dbg !9050
  %sub19 = sub nsw i32 %21, 3, !dbg !9051
  call void @get_array(%struct.GetBitContext* %gb, i32* %20, i32 8, i32 %sub19), !dbg !9052
  store i32 0, i32* %retval, align 4, !dbg !9053
  br label %return, !dbg !9053

return:                                           ; preds = %if.end18, %if.then15, %if.then11, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9054
  ret i32 %22, !dbg !9054
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_dca_core_dequantize(i32* %output, i32* %input, i32 %step_size, i32 %scale, i32 %residual, i32 %len) #2 !dbg !9055 {
entry:
  %output.addr = alloca i32*, align 8
  %input.addr = alloca i32*, align 8
  %step_size.addr = alloca i32, align 4
  %scale.addr = alloca i32, align 4
  %residual.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %step_scale = alloca i64, align 8
  %n = alloca i32, align 4
  %shift = alloca i32, align 4
  store i32* %output, i32** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %output.addr, metadata !9058, metadata !2194), !dbg !9059
  store i32* %input, i32** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %input.addr, metadata !9060, metadata !2194), !dbg !9061
  store i32 %step_size, i32* %step_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step_size.addr, metadata !9062, metadata !2194), !dbg !9063
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !9064, metadata !2194), !dbg !9065
  store i32 %residual, i32* %residual.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %residual.addr, metadata !9066, metadata !2194), !dbg !9067
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9068, metadata !2194), !dbg !9069
  call void @llvm.dbg.declare(metadata i64* %step_scale, metadata !9070, metadata !2194), !dbg !9071
  %0 = load i32, i32* %step_size.addr, align 4, !dbg !9072
  %conv = sext i32 %0 to i64, !dbg !9073
  %1 = load i32, i32* %scale.addr, align 4, !dbg !9074
  %conv1 = sext i32 %1 to i64, !dbg !9074
  %mul = mul nsw i64 %conv, %conv1, !dbg !9075
  store i64 %mul, i64* %step_scale, align 8, !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9076, metadata !2194), !dbg !9077
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !9078, metadata !2194), !dbg !9079
  store i32 0, i32* %shift, align 4, !dbg !9079
  %2 = load i64, i64* %step_scale, align 8, !dbg !9080
  %cmp = icmp sgt i64 %2, 8388608, !dbg !9082
  br i1 %cmp, label %if.then, label %if.end, !dbg !9083

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %step_scale, align 8, !dbg !9084
  %shr = ashr i64 %3, 23, !dbg !9086
  %or = or i64 %shr, 1, !dbg !9087
  %conv3 = trunc i64 %or to i32, !dbg !9088
  %4 = call i32 @llvm.ctlz.i32(i32 %conv3, i1 true), !dbg !9089
  %sub = sub nsw i32 31, %4, !dbg !9090
  %add = add nsw i32 %sub, 1, !dbg !9091
  store i32 %add, i32* %shift, align 4, !dbg !9092
  %5 = load i32, i32* %shift, align 4, !dbg !9093
  %6 = load i64, i64* %step_scale, align 8, !dbg !9094
  %sh_prom = zext i32 %5 to i64, !dbg !9094
  %shr4 = ashr i64 %6, %sh_prom, !dbg !9094
  store i64 %shr4, i64* %step_scale, align 8, !dbg !9094
  br label %if.end, !dbg !9095

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %residual.addr, align 4, !dbg !9096
  %tobool = icmp ne i32 %7, 0, !dbg !9096
  br i1 %tobool, label %if.then5, label %if.else, !dbg !9098

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %n, align 4, !dbg !9099
  br label %for.cond, !dbg !9102

for.cond:                                         ; preds = %for.inc, %if.then5
  %8 = load i32, i32* %n, align 4, !dbg !9103
  %9 = load i32, i32* %len.addr, align 4, !dbg !9106
  %cmp6 = icmp slt i32 %8, %9, !dbg !9107
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9108

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %n, align 4, !dbg !9109
  %idxprom = sext i32 %10 to i64, !dbg !9110
  %11 = load i32*, i32** %input.addr, align 8, !dbg !9110
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !9110
  %12 = load i32, i32* %arrayidx, align 4, !dbg !9110
  %conv8 = sext i32 %12 to i64, !dbg !9110
  %13 = load i64, i64* %step_scale, align 8, !dbg !9111
  %mul9 = mul nsw i64 %conv8, %13, !dbg !9112
  %14 = load i32, i32* %shift, align 4, !dbg !9113
  %sub10 = sub nsw i32 22, %14, !dbg !9114
  %call = call i32 @norm__(i64 %mul9, i32 %sub10), !dbg !9115
  %call11 = call i32 @clip23(i32 %call), !dbg !9116
  %15 = load i32, i32* %n, align 4, !dbg !9117
  %idxprom12 = sext i32 %15 to i64, !dbg !9118
  %16 = load i32*, i32** %output.addr, align 8, !dbg !9118
  %arrayidx13 = getelementptr inbounds i32, i32* %16, i64 %idxprom12, !dbg !9118
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !9119
  %add14 = add nsw i32 %17, %call11, !dbg !9119
  store i32 %add14, i32* %arrayidx13, align 4, !dbg !9119
  br label %for.inc, !dbg !9118

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %n, align 4, !dbg !9120
  %inc = add nsw i32 %18, 1, !dbg !9120
  store i32 %inc, i32* %n, align 4, !dbg !9120
  br label %for.cond, !dbg !9122, !llvm.loop !9123

for.end:                                          ; preds = %for.cond
  br label %if.end31, !dbg !9125

if.else:                                          ; preds = %if.end
  store i32 0, i32* %n, align 4, !dbg !9126
  br label %for.cond15, !dbg !9129

for.cond15:                                       ; preds = %for.inc28, %if.else
  %19 = load i32, i32* %n, align 4, !dbg !9130
  %20 = load i32, i32* %len.addr, align 4, !dbg !9133
  %cmp16 = icmp slt i32 %19, %20, !dbg !9134
  br i1 %cmp16, label %for.body18, label %for.end30, !dbg !9135

for.body18:                                       ; preds = %for.cond15
  %21 = load i32, i32* %n, align 4, !dbg !9136
  %idxprom19 = sext i32 %21 to i64, !dbg !9137
  %22 = load i32*, i32** %input.addr, align 8, !dbg !9137
  %arrayidx20 = getelementptr inbounds i32, i32* %22, i64 %idxprom19, !dbg !9137
  %23 = load i32, i32* %arrayidx20, align 4, !dbg !9137
  %conv21 = sext i32 %23 to i64, !dbg !9137
  %24 = load i64, i64* %step_scale, align 8, !dbg !9138
  %mul22 = mul nsw i64 %conv21, %24, !dbg !9139
  %25 = load i32, i32* %shift, align 4, !dbg !9140
  %sub23 = sub nsw i32 22, %25, !dbg !9141
  %call24 = call i32 @norm__(i64 %mul22, i32 %sub23), !dbg !9142
  %call25 = call i32 @clip23(i32 %call24), !dbg !9143
  %26 = load i32, i32* %n, align 4, !dbg !9144
  %idxprom26 = sext i32 %26 to i64, !dbg !9145
  %27 = load i32*, i32** %output.addr, align 8, !dbg !9145
  %arrayidx27 = getelementptr inbounds i32, i32* %27, i64 %idxprom26, !dbg !9145
  store i32 %call25, i32* %arrayidx27, align 4, !dbg !9146
  br label %for.inc28, !dbg !9145

for.inc28:                                        ; preds = %for.body18
  %28 = load i32, i32* %n, align 4, !dbg !9147
  %inc29 = add nsw i32 %28, 1, !dbg !9147
  store i32 %inc29, i32* %n, align 4, !dbg !9147
  br label %for.cond15, !dbg !9149, !llvm.loop !9150

for.end30:                                        ; preds = %for.cond15
  br label %if.end31

if.end31:                                         ; preds = %for.end30, %for.end
  ret void, !dbg !9152
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @inverse_adpcm(i32** %subband_samples, i16* %vq_index, i8* %prediction_mode, i32 %sb_start, i32 %sb_end, i32 %ofs, i32 %len) #2 !dbg !9153 {
entry:
  %subband_samples.addr = alloca i32**, align 8
  %vq_index.addr = alloca i16*, align 8
  %prediction_mode.addr = alloca i8*, align 8
  %sb_start.addr = alloca i32, align 4
  %sb_end.addr = alloca i32, align 4
  %ofs.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pred_id = alloca i32, align 4
  %ptr = alloca i32*, align 8
  %x = alloca i32, align 4
  store i32** %subband_samples, i32*** %subband_samples.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %subband_samples.addr, metadata !9159, metadata !2194), !dbg !9160
  store i16* %vq_index, i16** %vq_index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vq_index.addr, metadata !9161, metadata !2194), !dbg !9162
  store i8* %prediction_mode, i8** %prediction_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prediction_mode.addr, metadata !9163, metadata !2194), !dbg !9164
  store i32 %sb_start, i32* %sb_start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_start.addr, metadata !9165, metadata !2194), !dbg !9166
  store i32 %sb_end, i32* %sb_end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_end.addr, metadata !9167, metadata !2194), !dbg !9168
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !9169, metadata !2194), !dbg !9170
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9171, metadata !2194), !dbg !9172
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9173, metadata !2194), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9175, metadata !2194), !dbg !9176
  %0 = load i32, i32* %sb_start.addr, align 4, !dbg !9177
  store i32 %0, i32* %i, align 4, !dbg !9179
  br label %for.cond, !dbg !9180

for.cond:                                         ; preds = %for.inc18, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9181
  %2 = load i32, i32* %sb_end.addr, align 4, !dbg !9184
  %cmp = icmp slt i32 %1, %2, !dbg !9185
  br i1 %cmp, label %for.body, label %for.end20, !dbg !9186

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !9187
  %idxprom = sext i32 %3 to i64, !dbg !9190
  %4 = load i8*, i8** %prediction_mode.addr, align 8, !dbg !9190
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !9190
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9190
  %tobool = icmp ne i8 %5, 0, !dbg !9190
  br i1 %tobool, label %if.then, label %if.end, !dbg !9191

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %pred_id, metadata !9192, metadata !2194), !dbg !9194
  %6 = load i32, i32* %i, align 4, !dbg !9195
  %idxprom1 = sext i32 %6 to i64, !dbg !9196
  %7 = load i16*, i16** %vq_index.addr, align 8, !dbg !9196
  %arrayidx2 = getelementptr inbounds i16, i16* %7, i64 %idxprom1, !dbg !9196
  %8 = load i16, i16* %arrayidx2, align 2, !dbg !9196
  %conv = sext i16 %8 to i32, !dbg !9196
  store i32 %conv, i32* %pred_id, align 4, !dbg !9194
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !9197, metadata !2194), !dbg !9198
  %9 = load i32, i32* %i, align 4, !dbg !9199
  %idxprom3 = sext i32 %9 to i64, !dbg !9200
  %10 = load i32**, i32*** %subband_samples.addr, align 8, !dbg !9200
  %arrayidx4 = getelementptr inbounds i32*, i32** %10, i64 %idxprom3, !dbg !9200
  %11 = load i32*, i32** %arrayidx4, align 8, !dbg !9200
  %12 = load i32, i32* %ofs.addr, align 4, !dbg !9201
  %idx.ext = sext i32 %12 to i64, !dbg !9202
  %add.ptr = getelementptr inbounds i32, i32* %11, i64 %idx.ext, !dbg !9202
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !9198
  store i32 0, i32* %j, align 4, !dbg !9203
  br label %for.cond5, !dbg !9205

for.cond5:                                        ; preds = %for.inc, %if.then
  %13 = load i32, i32* %j, align 4, !dbg !9206
  %14 = load i32, i32* %len.addr, align 4, !dbg !9209
  %cmp6 = icmp slt i32 %13, %14, !dbg !9210
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !9211

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9212, metadata !2194), !dbg !9214
  %15 = load i32, i32* %pred_id, align 4, !dbg !9215
  %16 = load i32*, i32** %ptr, align 8, !dbg !9216
  %17 = load i32, i32* %j, align 4, !dbg !9217
  %idx.ext9 = sext i32 %17 to i64, !dbg !9218
  %add.ptr10 = getelementptr inbounds i32, i32* %16, i64 %idx.ext9, !dbg !9218
  %add.ptr11 = getelementptr inbounds i32, i32* %add.ptr10, i64 -4, !dbg !9219
  %call = call i64 @ff_dcaadpcm_predict(i32 %15, i32* %add.ptr11), !dbg !9220
  %conv12 = trunc i64 %call to i32, !dbg !9220
  store i32 %conv12, i32* %x, align 4, !dbg !9214
  %18 = load i32, i32* %j, align 4, !dbg !9221
  %idxprom13 = sext i32 %18 to i64, !dbg !9222
  %19 = load i32*, i32** %ptr, align 8, !dbg !9222
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 %idxprom13, !dbg !9222
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !9222
  %21 = load i32, i32* %x, align 4, !dbg !9223
  %add = add nsw i32 %20, %21, !dbg !9224
  %call15 = call i32 @clip23(i32 %add), !dbg !9225
  %22 = load i32, i32* %j, align 4, !dbg !9226
  %idxprom16 = sext i32 %22 to i64, !dbg !9227
  %23 = load i32*, i32** %ptr, align 8, !dbg !9227
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom16, !dbg !9227
  store i32 %call15, i32* %arrayidx17, align 4, !dbg !9228
  br label %for.inc, !dbg !9229

for.inc:                                          ; preds = %for.body8
  %24 = load i32, i32* %j, align 4, !dbg !9230
  %inc = add nsw i32 %24, 1, !dbg !9230
  store i32 %inc, i32* %j, align 4, !dbg !9230
  br label %for.cond5, !dbg !9232, !llvm.loop !9233

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !9235

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc18, !dbg !9236

for.inc18:                                        ; preds = %if.end
  %25 = load i32, i32* %i, align 4, !dbg !9237
  %inc19 = add nsw i32 %25, 1, !dbg !9237
  store i32 %inc19, i32* %i, align 4, !dbg !9237
  br label %for.cond, !dbg !9239, !llvm.loop !9240

for.end20:                                        ; preds = %for.cond
  ret void, !dbg !9242
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !9243 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2830, metadata !2194), !dbg !9244
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9246, metadata !2194), !dbg !9247
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9248, metadata !2194), !dbg !9249
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9250, metadata !2194), !dbg !9251
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !9252, metadata !2194), !dbg !9253
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9254
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9255
  %1 = load i32, i32* %index, align 8, !dbg !9255
  store i32 %1, i32* %re_index, align 4, !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !9256, metadata !2194), !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !9258, metadata !2194), !dbg !9259
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9260
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !9261
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !9261
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !9259
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9262
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !9263
  %5 = load i8*, i8** %buffer, align 8, !dbg !9263
  %6 = load i32, i32* %re_index, align 4, !dbg !9264
  %shr = lshr i32 %6, 3, !dbg !9265
  %idx.ext = zext i32 %shr to i64, !dbg !9266
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9266
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !9267
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !9267
  %8 = load i32, i32* %l, align 1, !dbg !9267
  store i32 %8, i32* %x.addr.i, align 4, !dbg !9268
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !9269
  %shl.i = shl i32 %9, 8, !dbg !9270
  %and.i = and i32 %shl.i, 65280, !dbg !9271
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !9272
  %shr.i = lshr i32 %10, 8, !dbg !9273
  %and1.i = and i32 %shr.i, 255, !dbg !9274
  %or.i = or i32 %and.i, %and1.i, !dbg !9275
  %shl2.i = shl i32 %or.i, 16, !dbg !9276
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !9277
  %shr3.i = lshr i32 %11, 16, !dbg !9278
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9279
  %and5.i = and i32 %shl4.i, 65280, !dbg !9280
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !9281
  %shr6.i = lshr i32 %12, 16, !dbg !9282
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9283
  %and8.i = and i32 %shr7.i, 255, !dbg !9284
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9285
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9286
  %13 = load i32, i32* %re_index, align 4, !dbg !9287
  %and = and i32 %13, 7, !dbg !9288
  %shl = shl i32 %or10.i, %and, !dbg !9289
  store i32 %shl, i32* %re_cache, align 4, !dbg !9290
  %14 = load i32, i32* %re_cache, align 4, !dbg !9291
  %15 = load i32, i32* %n.addr, align 4, !dbg !9292
  %conv = trunc i32 %15 to i8, !dbg !9292
  %call4 = call i32 @NEG_SSR32(i32 %14, i8 signext %conv), !dbg !9293
  store i32 %call4, i32* %tmp, align 4, !dbg !9294
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !9295
  %17 = load i32, i32* %re_index, align 4, !dbg !9296
  %18 = load i32, i32* %n.addr, align 4, !dbg !9297
  %add = add i32 %17, %18, !dbg !9298
  %cmp = icmp ugt i32 %16, %add, !dbg !9299
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9300

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !9301
  %20 = load i32, i32* %n.addr, align 4, !dbg !9303
  %add6 = add i32 %19, %20, !dbg !9304
  br label %cond.end, !dbg !9305

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !9306
  br label %cond.end, !dbg !9308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !9309
  store i32 %cond, i32* %re_index, align 4, !dbg !9311
  %22 = load i32, i32* %re_index, align 4, !dbg !9312
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9313
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !9314
  store i32 %22, i32* %index7, align 8, !dbg !9315
  %24 = load i32, i32* %tmp, align 4, !dbg !9316
  ret i32 %24, !dbg !9317
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_SSR32(i32 %a, i8 signext %s) #2 !dbg !9318 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9321, metadata !2194), !dbg !9322
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !9323, metadata !2194), !dbg !9324
  %0 = load i32, i32* %a.addr, align 4, !dbg !9325
  %1 = load i8, i8* %s.addr, align 1, !dbg !9326
  %conv = sext i8 %1 to i32, !dbg !9326
  %sub = sub nsw i32 0, %conv, !dbg !9327
  %conv1 = trunc i32 %sub to i8, !dbg !9328
  %2 = call i32 asm "sarl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !9325, !srcloc !9329
  store i32 %2, i32* %a.addr, align 4, !dbg !9325
  %3 = load i32, i32* %a.addr, align 4, !dbg !9330
  ret i32 %3, !dbg !9331
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mul__(i32 %a, i32 %b, i32 %bits) #2 !dbg !9332 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9335, metadata !2194), !dbg !9336
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9337, metadata !2194), !dbg !9338
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !9339, metadata !2194), !dbg !9340
  %0 = load i32, i32* %a.addr, align 4, !dbg !9341
  %conv = sext i32 %0 to i64, !dbg !9342
  %1 = load i32, i32* %b.addr, align 4, !dbg !9343
  %conv1 = sext i32 %1 to i64, !dbg !9343
  %mul = mul nsw i64 %conv, %conv1, !dbg !9344
  %2 = load i32, i32* %bits.addr, align 4, !dbg !9345
  %call = call i32 @norm__(i64 %mul, i32 %2), !dbg !9346
  ret i32 %call, !dbg !9347
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @norm__(i64 %a, i32 %bits) #2 !dbg !9348 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i64, align 8
  %bits.addr = alloca i32, align 4
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9351, metadata !2194), !dbg !9352
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !9353, metadata !2194), !dbg !9354
  %0 = load i32, i32* %bits.addr, align 4, !dbg !9355
  %cmp = icmp sgt i32 %0, 0, !dbg !9357
  br i1 %cmp, label %if.then, label %if.else, !dbg !9358

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %a.addr, align 8, !dbg !9359
  %2 = load i32, i32* %bits.addr, align 4, !dbg !9360
  %sub = sub nsw i32 %2, 1, !dbg !9361
  %sh_prom = zext i32 %sub to i64, !dbg !9362
  %shl = shl i64 1, %sh_prom, !dbg !9362
  %add = add nsw i64 %1, %shl, !dbg !9363
  %3 = load i32, i32* %bits.addr, align 4, !dbg !9364
  %sh_prom1 = zext i32 %3 to i64, !dbg !9365
  %shr = ashr i64 %add, %sh_prom1, !dbg !9365
  %conv = trunc i64 %shr to i32, !dbg !9366
  store i32 %conv, i32* %retval, align 4, !dbg !9367
  br label %return, !dbg !9367

if.else:                                          ; preds = %entry
  %4 = load i64, i64* %a.addr, align 8, !dbg !9368
  %conv2 = trunc i64 %4 to i32, !dbg !9369
  store i32 %conv2, i32* %retval, align 4, !dbg !9370
  br label %return, !dbg !9370

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9371
  ret i32 %5, !dbg !9371
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_huffman_codes(%struct.DCACoreDecoder* %s, i32* %audio, i32 %abits, i32 %sel) #2 !dbg !9372 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %audio.addr = alloca i32*, align 8
  %abits.addr = alloca i32, align 4
  %sel.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !9373, metadata !2194), !dbg !9374
  store i32* %audio, i32** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %audio.addr, metadata !9375, metadata !2194), !dbg !9376
  store i32 %abits, i32* %abits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %abits.addr, metadata !9377, metadata !2194), !dbg !9378
  store i32 %sel, i32* %sel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sel.addr, metadata !9379, metadata !2194), !dbg !9380
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9381, metadata !2194), !dbg !9382
  store i32 0, i32* %i, align 4, !dbg !9383
  br label %for.cond, !dbg !9385

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9386
  %cmp = icmp slt i32 %0, 8, !dbg !9389
  br i1 %cmp, label %for.body, label %for.end, !dbg !9390

for.body:                                         ; preds = %for.cond
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9391
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !9392
  %2 = load i32, i32* %abits.addr, align 4, !dbg !9393
  %sub = sub nsw i32 %2, 1, !dbg !9394
  %idxprom = sext i32 %sub to i64, !dbg !9395
  %arrayidx = getelementptr inbounds [10 x %struct.DCAVLC], [10 x %struct.DCAVLC]* @ff_dca_vlc_quant_index, i64 0, i64 %idxprom, !dbg !9395
  %3 = load i32, i32* %sel.addr, align 4, !dbg !9396
  %call = call i32 @dca_get_vlc(%struct.GetBitContext* %gb, %struct.DCAVLC* %arrayidx, i32 %3), !dbg !9397
  %4 = load i32, i32* %i, align 4, !dbg !9398
  %idxprom1 = sext i32 %4 to i64, !dbg !9399
  %5 = load i32*, i32** %audio.addr, align 8, !dbg !9399
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom1, !dbg !9399
  store i32 %call, i32* %arrayidx2, align 4, !dbg !9400
  br label %for.inc, !dbg !9399

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9401
  %inc = add nsw i32 %6, 1, !dbg !9401
  store i32 %inc, i32* %i, align 4, !dbg !9401
  br label %for.cond, !dbg !9403, !llvm.loop !9404

for.end:                                          ; preds = %for.cond
  ret i32 1, !dbg !9406
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_block_codes(%struct.DCACoreDecoder* %s, i32* %audio, i32 %abits) #2 !dbg !9407 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %audio.addr = alloca i32*, align 8
  %abits.addr = alloca i32, align 4
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %levels = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !9410, metadata !2194), !dbg !9411
  store i32* %audio, i32** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %audio.addr, metadata !9412, metadata !2194), !dbg !9413
  store i32 %abits, i32* %abits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %abits.addr, metadata !9414, metadata !2194), !dbg !9415
  call void @llvm.dbg.declare(metadata i32* %code1, metadata !9416, metadata !2194), !dbg !9417
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9418
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !9419
  %1 = load i32, i32* %abits.addr, align 4, !dbg !9420
  %sub = sub nsw i32 %1, 1, !dbg !9421
  %idxprom = sext i32 %sub to i64, !dbg !9422
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @block_code_nbits, i64 0, i64 %idxprom, !dbg !9422
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9422
  %conv = zext i8 %2 to i32, !dbg !9422
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %conv), !dbg !9423
  store i32 %call, i32* %code1, align 4, !dbg !9417
  call void @llvm.dbg.declare(metadata i32* %code2, metadata !9424, metadata !2194), !dbg !9425
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9426
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 1, !dbg !9427
  %4 = load i32, i32* %abits.addr, align 4, !dbg !9428
  %sub2 = sub nsw i32 %4, 1, !dbg !9429
  %idxprom3 = sext i32 %sub2 to i64, !dbg !9430
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* @block_code_nbits, i64 0, i64 %idxprom3, !dbg !9430
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9430
  %conv5 = zext i8 %5 to i32, !dbg !9430
  %call6 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 %conv5), !dbg !9431
  store i32 %call6, i32* %code2, align 4, !dbg !9425
  call void @llvm.dbg.declare(metadata i32* %levels, metadata !9432, metadata !2194), !dbg !9433
  %6 = load i32, i32* %abits.addr, align 4, !dbg !9434
  %idxprom7 = sext i32 %6 to i64, !dbg !9435
  %arrayidx8 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_quant_levels, i64 0, i64 %idxprom7, !dbg !9435
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !9435
  store i32 %7, i32* %levels, align 4, !dbg !9433
  %8 = load i32, i32* %code1, align 4, !dbg !9436
  %9 = load i32, i32* %code2, align 4, !dbg !9438
  %10 = load i32, i32* %levels, align 4, !dbg !9439
  %11 = load i32*, i32** %audio.addr, align 8, !dbg !9440
  %call9 = call i32 @decode_blockcodes(i32 %8, i32 %9, i32 %10, i32* %11), !dbg !9441
  %tobool = icmp ne i32 %call9, 0, !dbg !9441
  br i1 %tobool, label %if.then, label %if.end, !dbg !9442

if.then:                                          ; preds = %entry
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9443
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !9445
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !9445
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !9443
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i32 0, i32 0)), !dbg !9446
  store i32 -1094995529, i32* %retval, align 4, !dbg !9447
  br label %return, !dbg !9447

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9448
  br label %return, !dbg !9448

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9449
  ret i32 %15, !dbg !9449
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @decode_blockcodes(i32 %code1, i32 %code2, i32 %levels, i32* %audio) #2 !dbg !9450 {
entry:
  %code1.addr = alloca i32, align 4
  %code2.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  %audio.addr = alloca i32*, align 8
  %offset = alloca i32, align 4
  %n = alloca i32, align 4
  %div1 = alloca i32, align 4
  store i32 %code1, i32* %code1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code1.addr, metadata !9453, metadata !2194), !dbg !9454
  store i32 %code2, i32* %code2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code2.addr, metadata !9455, metadata !2194), !dbg !9456
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !9457, metadata !2194), !dbg !9458
  store i32* %audio, i32** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %audio.addr, metadata !9459, metadata !2194), !dbg !9460
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9461, metadata !2194), !dbg !9462
  %0 = load i32, i32* %levels.addr, align 4, !dbg !9463
  %sub = sub nsw i32 %0, 1, !dbg !9464
  %div = sdiv i32 %sub, 2, !dbg !9465
  store i32 %div, i32* %offset, align 4, !dbg !9462
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9466, metadata !2194), !dbg !9467
  call void @llvm.dbg.declare(metadata i32* %div1, metadata !9468, metadata !2194), !dbg !9469
  store i32 0, i32* %n, align 4, !dbg !9470
  br label %for.cond, !dbg !9472

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %n, align 4, !dbg !9473
  %cmp = icmp slt i32 %1, 4, !dbg !9476
  br i1 %cmp, label %for.body, label %for.end, !dbg !9477

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %code1.addr, align 4, !dbg !9478
  %conv = sext i32 %2 to i64, !dbg !9480
  %3 = load i32, i32* %levels.addr, align 4, !dbg !9481
  %idxprom = sext i32 %3 to i64, !dbg !9482
  %arrayidx = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %idxprom, !dbg !9482
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9482
  %conv2 = zext i32 %4 to i64, !dbg !9482
  %mul = mul i64 %conv, %conv2, !dbg !9483
  %shr = lshr i64 %mul, 32, !dbg !9484
  %conv3 = trunc i64 %shr to i32, !dbg !9485
  store i32 %conv3, i32* %div1, align 4, !dbg !9486
  %5 = load i32, i32* %code1.addr, align 4, !dbg !9487
  %6 = load i32, i32* %div1, align 4, !dbg !9488
  %7 = load i32, i32* %levels.addr, align 4, !dbg !9489
  %mul4 = mul nsw i32 %6, %7, !dbg !9490
  %sub5 = sub nsw i32 %5, %mul4, !dbg !9491
  %8 = load i32, i32* %offset, align 4, !dbg !9492
  %sub6 = sub nsw i32 %sub5, %8, !dbg !9493
  %9 = load i32, i32* %n, align 4, !dbg !9494
  %idxprom7 = sext i32 %9 to i64, !dbg !9495
  %10 = load i32*, i32** %audio.addr, align 8, !dbg !9495
  %arrayidx8 = getelementptr inbounds i32, i32* %10, i64 %idxprom7, !dbg !9495
  store i32 %sub6, i32* %arrayidx8, align 4, !dbg !9496
  %11 = load i32, i32* %div1, align 4, !dbg !9497
  store i32 %11, i32* %code1.addr, align 4, !dbg !9498
  br label %for.inc, !dbg !9499

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %n, align 4, !dbg !9500
  %inc = add nsw i32 %12, 1, !dbg !9500
  store i32 %inc, i32* %n, align 4, !dbg !9500
  br label %for.cond, !dbg !9502, !llvm.loop !9503

for.end:                                          ; preds = %for.cond
  br label %for.cond9, !dbg !9505

for.cond9:                                        ; preds = %for.inc25, %for.end
  %13 = load i32, i32* %n, align 4, !dbg !9506
  %cmp10 = icmp slt i32 %13, 8, !dbg !9510
  br i1 %cmp10, label %for.body12, label %for.end27, !dbg !9511

for.body12:                                       ; preds = %for.cond9
  %14 = load i32, i32* %code2.addr, align 4, !dbg !9512
  %conv13 = sext i32 %14 to i64, !dbg !9514
  %15 = load i32, i32* %levels.addr, align 4, !dbg !9515
  %idxprom14 = sext i32 %15 to i64, !dbg !9516
  %arrayidx15 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %idxprom14, !dbg !9516
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !9516
  %conv16 = zext i32 %16 to i64, !dbg !9516
  %mul17 = mul i64 %conv13, %conv16, !dbg !9517
  %shr18 = lshr i64 %mul17, 32, !dbg !9518
  %conv19 = trunc i64 %shr18 to i32, !dbg !9519
  store i32 %conv19, i32* %div1, align 4, !dbg !9520
  %17 = load i32, i32* %code2.addr, align 4, !dbg !9521
  %18 = load i32, i32* %div1, align 4, !dbg !9522
  %19 = load i32, i32* %levels.addr, align 4, !dbg !9523
  %mul20 = mul nsw i32 %18, %19, !dbg !9524
  %sub21 = sub nsw i32 %17, %mul20, !dbg !9525
  %20 = load i32, i32* %offset, align 4, !dbg !9526
  %sub22 = sub nsw i32 %sub21, %20, !dbg !9527
  %21 = load i32, i32* %n, align 4, !dbg !9528
  %idxprom23 = sext i32 %21 to i64, !dbg !9529
  %22 = load i32*, i32** %audio.addr, align 8, !dbg !9529
  %arrayidx24 = getelementptr inbounds i32, i32* %22, i64 %idxprom23, !dbg !9529
  store i32 %sub22, i32* %arrayidx24, align 4, !dbg !9530
  %23 = load i32, i32* %div1, align 4, !dbg !9531
  store i32 %23, i32* %code2.addr, align 4, !dbg !9532
  br label %for.inc25, !dbg !9533

for.inc25:                                        ; preds = %for.body12
  %24 = load i32, i32* %n, align 4, !dbg !9534
  %inc26 = add nsw i32 %24, 1, !dbg !9534
  store i32 %inc26, i32* %n, align 4, !dbg !9534
  br label %for.cond9, !dbg !9536, !llvm.loop !9537

for.end27:                                        ; preds = %for.cond9
  %25 = load i32, i32* %code1.addr, align 4, !dbg !9538
  %26 = load i32, i32* %code2.addr, align 4, !dbg !9539
  %or = or i32 %25, %26, !dbg !9540
  ret i32 %or, !dbg !9541
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @ff_dcaadpcm_predict(i32 %pred_vq_index, i32* %input) #2 !dbg !9542 {
entry:
  %pred_vq_index.addr = alloca i32, align 4
  %input.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %coeff = alloca i16*, align 8
  %pred = alloca i64, align 8
  store i32 %pred_vq_index, i32* %pred_vq_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pred_vq_index.addr, metadata !9546, metadata !2194), !dbg !9547
  store i32* %input, i32** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %input.addr, metadata !9548, metadata !2194), !dbg !9549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9550, metadata !2194), !dbg !9551
  call void @llvm.dbg.declare(metadata i16** %coeff, metadata !9552, metadata !2194), !dbg !9553
  %0 = load i32, i32* %pred_vq_index.addr, align 4, !dbg !9554
  %idxprom = sext i32 %0 to i64, !dbg !9555
  %arrayidx = getelementptr inbounds [4096 x [4 x i16]], [4096 x [4 x i16]]* @ff_dca_adpcm_vb, i64 0, i64 %idxprom, !dbg !9555
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx, i32 0, i32 0, !dbg !9555
  store i16* %arraydecay, i16** %coeff, align 8, !dbg !9553
  call void @llvm.dbg.declare(metadata i64* %pred, metadata !9556, metadata !2194), !dbg !9557
  store i64 0, i64* %pred, align 8, !dbg !9557
  store i32 0, i32* %i, align 4, !dbg !9558
  br label %for.cond, !dbg !9560

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9561
  %cmp = icmp slt i32 %1, 4, !dbg !9564
  br i1 %cmp, label %for.body, label %for.end, !dbg !9565

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9566
  %sub = sub nsw i32 3, %2, !dbg !9567
  %idxprom1 = sext i32 %sub to i64, !dbg !9568
  %3 = load i32*, i32** %input.addr, align 8, !dbg !9568
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 %idxprom1, !dbg !9568
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !9568
  %conv = sext i32 %4 to i64, !dbg !9569
  %5 = load i32, i32* %i, align 4, !dbg !9570
  %idxprom3 = sext i32 %5 to i64, !dbg !9571
  %6 = load i16*, i16** %coeff, align 8, !dbg !9571
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 %idxprom3, !dbg !9571
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !9571
  %conv5 = sext i16 %7 to i64, !dbg !9571
  %mul = mul nsw i64 %conv, %conv5, !dbg !9572
  %8 = load i64, i64* %pred, align 8, !dbg !9573
  %add = add nsw i64 %8, %mul, !dbg !9573
  store i64 %add, i64* %pred, align 8, !dbg !9573
  br label %for.inc, !dbg !9574

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9575
  %inc = add nsw i32 %9, 1, !dbg !9575
  store i32 %inc, i32* %i, align 4, !dbg !9575
  br label %for.cond, !dbg !9577, !llvm.loop !9578

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %pred, align 8, !dbg !9580
  %call = call i32 @norm13(i64 %10), !dbg !9581
  %call6 = call i32 @clip23(i32 %call), !dbg !9582
  %conv7 = sext i32 %call6 to i64, !dbg !9584
  ret i64 %conv7, !dbg !9585
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @norm13(i64 %a) #2 !dbg !9586 {
entry:
  %a.addr = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9589, metadata !2194), !dbg !9590
  %0 = load i64, i64* %a.addr, align 8, !dbg !9591
  %call = call i32 @norm__(i64 %0, i32 13), !dbg !9592
  ret i32 %call, !dbg !9593
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_aux_data(%struct.DCACoreDecoder* %s) #0 !dbg !9594 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %aux_pos = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %code = alloca i32, align 4
  %sign = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !9595, metadata !2194), !dbg !9596
  call void @llvm.dbg.declare(metadata i32* %aux_pos, metadata !9597, metadata !2194), !dbg !9598
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9599
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !9601
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !9602
  %cmp = icmp slt i32 %call, 0, !dbg !9603
  br i1 %cmp, label %if.then, label %if.end, !dbg !9604

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !9605
  br label %return, !dbg !9605

if.end:                                           ; preds = %entry
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9606
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !9607
  call void @skip_bits(%struct.GetBitContext* %gb1, i32 6), !dbg !9608
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9609
  %gb2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 1, !dbg !9610
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9611
  %gb3 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 1, !dbg !9612
  %call4 = call i32 @get_bits_count(%struct.GetBitContext* %gb3), !dbg !9613
  %sub = sub nsw i32 0, %call4, !dbg !9614
  %and = and i32 %sub, 31, !dbg !9615
  call void @skip_bits_long(%struct.GetBitContext* %gb2, i32 %and), !dbg !9616
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9618
  %gb5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 1, !dbg !9620
  %call6 = call i32 @get_bits_long(%struct.GetBitContext* %gb5, i32 32), !dbg !9621
  %cmp7 = icmp ne i32 %call6, -1710160480, !dbg !9622
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9623

if.then8:                                         ; preds = %if.end
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9624
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 0, !dbg !9626
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !9626
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !9624
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i32 0, i32 0)), !dbg !9627
  store i32 -1094995529, i32* %retval, align 4, !dbg !9628
  br label %return, !dbg !9628

if.end9:                                          ; preds = %if.end
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9629
  %gb10 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 1, !dbg !9630
  %call11 = call i32 @get_bits_count(%struct.GetBitContext* %gb10), !dbg !9631
  store i32 %call11, i32* %aux_pos, align 4, !dbg !9632
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9633
  %gb12 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 1, !dbg !9635
  %call13 = call i32 @get_bits1(%struct.GetBitContext* %gb12), !dbg !9636
  %tobool = icmp ne i32 %call13, 0, !dbg !9636
  br i1 %tobool, label %if.then14, label %if.end16, !dbg !9637

if.then14:                                        ; preds = %if.end9
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9638
  %gb15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 1, !dbg !9639
  call void @skip_bits_long(%struct.GetBitContext* %gb15, i32 47), !dbg !9640
  br label %if.end16, !dbg !9640

if.end16:                                         ; preds = %if.then14, %if.end9
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9641
  %gb17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 1, !dbg !9643
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %gb17), !dbg !9644
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9645
  %prim_dmix_embedded = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 41, !dbg !9646
  store i32 %call18, i32* %prim_dmix_embedded, align 32, !dbg !9647
  %tobool19 = icmp ne i32 %call18, 0, !dbg !9647
  br i1 %tobool19, label %if.then20, label %if.end51, !dbg !9648

if.then20:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9649, metadata !2194), !dbg !9651
  call void @llvm.dbg.declare(metadata i32* %m, metadata !9652, metadata !2194), !dbg !9653
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9654, metadata !2194), !dbg !9655
  %13 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9656
  %gb21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %13, i32 0, i32 1, !dbg !9657
  %call22 = call i32 @get_bits(%struct.GetBitContext* %gb21, i32 3), !dbg !9658
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9659
  %prim_dmix_type = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 42, !dbg !9660
  store i32 %call22, i32* %prim_dmix_type, align 4, !dbg !9661
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9662
  %prim_dmix_type23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 42, !dbg !9664
  %16 = load i32, i32* %prim_dmix_type23, align 4, !dbg !9664
  %cmp24 = icmp sge i32 %16, 7, !dbg !9665
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !9666

if.then25:                                        ; preds = %if.then20
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9667
  %avctx26 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 0, !dbg !9669
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx26, align 32, !dbg !9669
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !9667
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.36, i32 0, i32 0)), !dbg !9670
  store i32 -1094995529, i32* %retval, align 4, !dbg !9671
  br label %return, !dbg !9671

if.end27:                                         ; preds = %if.then20
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9672
  %prim_dmix_type28 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 42, !dbg !9673
  %21 = load i32, i32* %prim_dmix_type28, align 4, !dbg !9673
  %idxprom = sext i32 %21 to i64, !dbg !9674
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @ff_dca_dmix_primary_nch, i64 0, i64 %idxprom, !dbg !9674
  %22 = load i8, i8* %arrayidx, align 1, !dbg !9674
  %conv = zext i8 %22 to i32, !dbg !9674
  store i32 %conv, i32* %m, align 4, !dbg !9675
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9676
  %audio_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 6, !dbg !9677
  %24 = load i32, i32* %audio_mode, align 4, !dbg !9677
  %idxprom29 = sext i32 %24 to i64, !dbg !9678
  %arrayidx30 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_channels, i64 0, i64 %idxprom29, !dbg !9678
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !9678
  %conv31 = zext i8 %25 to i32, !dbg !9678
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9679
  %lfe_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 15, !dbg !9680
  %27 = load i32, i32* %lfe_present, align 8, !dbg !9680
  %tobool32 = icmp ne i32 %27, 0, !dbg !9681
  %lnot = xor i1 %tobool32, true, !dbg !9681
  %lnot33 = xor i1 %lnot, true, !dbg !9682
  %lnot.ext = zext i1 %lnot33 to i32, !dbg !9682
  %add = add nsw i32 %conv31, %lnot.ext, !dbg !9683
  store i32 %add, i32* %n, align 4, !dbg !9684
  store i32 0, i32* %i, align 4, !dbg !9685
  br label %for.cond, !dbg !9687

for.cond:                                         ; preds = %for.inc, %if.end27
  %28 = load i32, i32* %i, align 4, !dbg !9688
  %29 = load i32, i32* %m, align 4, !dbg !9691
  %30 = load i32, i32* %n, align 4, !dbg !9692
  %mul = mul nsw i32 %29, %30, !dbg !9693
  %cmp34 = icmp slt i32 %28, %mul, !dbg !9694
  br i1 %cmp34, label %for.body, label %for.end, !dbg !9695

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9696, metadata !2194), !dbg !9698
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9699
  %gb36 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 1, !dbg !9700
  %call37 = call i32 @get_bits(%struct.GetBitContext* %gb36, i32 9), !dbg !9701
  store i32 %call37, i32* %code, align 4, !dbg !9698
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !9702, metadata !2194), !dbg !9703
  %32 = load i32, i32* %code, align 4, !dbg !9704
  %shr = ashr i32 %32, 8, !dbg !9705
  %sub38 = sub nsw i32 %shr, 1, !dbg !9706
  store i32 %sub38, i32* %sign, align 4, !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9707, metadata !2194), !dbg !9708
  %33 = load i32, i32* %code, align 4, !dbg !9709
  %and39 = and i32 %33, 255, !dbg !9710
  store i32 %and39, i32* %index, align 4, !dbg !9708
  %34 = load i32, i32* %index, align 4, !dbg !9711
  %cmp40 = icmp uge i32 %34, 242, !dbg !9713
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !9714

if.then42:                                        ; preds = %for.body
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9715
  %avctx43 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 0, !dbg !9717
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 32, !dbg !9717
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !9715
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i32 0, i32 0)), !dbg !9718
  store i32 -1094995529, i32* %retval, align 4, !dbg !9719
  br label %return, !dbg !9719

if.end44:                                         ; preds = %for.body
  %38 = load i32, i32* %index, align 4, !dbg !9720
  %idxprom45 = zext i32 %38 to i64, !dbg !9721
  %arrayidx46 = getelementptr inbounds [242 x i16], [242 x i16]* @ff_dca_dmixtable, i64 0, i64 %idxprom45, !dbg !9721
  %39 = load i16, i16* %arrayidx46, align 2, !dbg !9721
  %conv47 = zext i16 %39 to i32, !dbg !9721
  %40 = load i32, i32* %sign, align 4, !dbg !9722
  %xor = xor i32 %conv47, %40, !dbg !9723
  %41 = load i32, i32* %sign, align 4, !dbg !9724
  %sub48 = sub nsw i32 %xor, %41, !dbg !9725
  %42 = load i32, i32* %i, align 4, !dbg !9726
  %idxprom49 = sext i32 %42 to i64, !dbg !9727
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9727
  %prim_dmix_coeff = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 43, !dbg !9728
  %arrayidx50 = getelementptr inbounds [24 x i32], [24 x i32]* %prim_dmix_coeff, i64 0, i64 %idxprom49, !dbg !9727
  store i32 %sub48, i32* %arrayidx50, align 4, !dbg !9729
  br label %for.inc, !dbg !9730

for.inc:                                          ; preds = %if.end44
  %44 = load i32, i32* %i, align 4, !dbg !9731
  %inc = add nsw i32 %44, 1, !dbg !9731
  store i32 %inc, i32* %i, align 4, !dbg !9731
  br label %for.cond, !dbg !9733, !llvm.loop !9734

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !9736

if.end51:                                         ; preds = %for.end, %if.end16
  %45 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9737
  %gb52 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %45, i32 0, i32 1, !dbg !9738
  %46 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9739
  %gb53 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %46, i32 0, i32 1, !dbg !9740
  %call54 = call i32 @get_bits_count(%struct.GetBitContext* %gb53), !dbg !9741
  %sub55 = sub nsw i32 0, %call54, !dbg !9742
  %and56 = and i32 %sub55, 7, !dbg !9743
  call void @skip_bits(%struct.GetBitContext* %gb52, i32 %and56), !dbg !9744
  %47 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9745
  %gb57 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %47, i32 0, i32 1, !dbg !9746
  call void @skip_bits(%struct.GetBitContext* %gb57, i32 16), !dbg !9747
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9748
  %avctx58 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 0, !dbg !9750
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx58, align 32, !dbg !9750
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9751
  %gb59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 1, !dbg !9752
  %51 = load i32, i32* %aux_pos, align 4, !dbg !9753
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9754
  %gb60 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 1, !dbg !9755
  %call61 = call i32 @get_bits_count(%struct.GetBitContext* %gb60), !dbg !9756
  %call62 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %49, %struct.GetBitContext* %gb59, i32 %51, i32 %call61), !dbg !9757
  %tobool63 = icmp ne i32 %call62, 0, !dbg !9759
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !9760

if.then64:                                        ; preds = %if.end51
  %53 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9761
  %avctx65 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %53, i32 0, i32 0, !dbg !9763
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx65, align 32, !dbg !9763
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !9761
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38, i32 0, i32 0)), !dbg !9764
  store i32 -1094995529, i32* %retval, align 4, !dbg !9765
  br label %return, !dbg !9765

if.end66:                                         ; preds = %if.end51
  store i32 0, i32* %retval, align 4, !dbg !9766
  br label %return, !dbg !9766

return:                                           ; preds = %if.end66, %if.then64, %if.then42, %if.then25, %if.then8, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !9767
  ret i32 %56, !dbg !9767
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_xbr_subframe(%struct.DCACoreDecoder* %s, i32 %xbr_base_ch, i32 %xbr_nchannels, i32* %xbr_nsubbands, i32 %xbr_transition_mode, i32 %sf, i32* %sub_pos) #0 !dbg !9768 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %xbr_base_ch.addr = alloca i32, align 4
  %xbr_nchannels.addr = alloca i32, align 4
  %xbr_nsubbands.addr = alloca i32*, align 8
  %xbr_transition_mode.addr = alloca i32, align 4
  %sf.addr = alloca i32, align 4
  %sub_pos.addr = alloca i32*, align 8
  %xbr_nabits = alloca [7 x i32], align 16
  %xbr_bit_allocation = alloca [7 x [32 x i32]], align 16
  %xbr_scale_nbits = alloca [7 x i32], align 16
  %xbr_scale_factors = alloca [7 x [32 x [2 x i32]]], align 16
  %ssf = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  %ofs = alloca i32, align 4
  %scale_table = alloca i32*, align 8
  %scale_size = alloca i32, align 4
  %scale_index = alloca i32, align 4
  %ret = alloca i32, align 4
  %trans_ssf = alloca i32, align 4
  %abits = alloca i32, align 4
  %audio = alloca [8 x i32], align 16
  %step_size = alloca i32, align 4
  %scale = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !9771, metadata !2194), !dbg !9772
  store i32 %xbr_base_ch, i32* %xbr_base_ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xbr_base_ch.addr, metadata !9773, metadata !2194), !dbg !9774
  store i32 %xbr_nchannels, i32* %xbr_nchannels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xbr_nchannels.addr, metadata !9775, metadata !2194), !dbg !9776
  store i32* %xbr_nsubbands, i32** %xbr_nsubbands.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xbr_nsubbands.addr, metadata !9777, metadata !2194), !dbg !9778
  store i32 %xbr_transition_mode, i32* %xbr_transition_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xbr_transition_mode.addr, metadata !9779, metadata !2194), !dbg !9780
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !9781, metadata !2194), !dbg !9782
  store i32* %sub_pos, i32** %sub_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sub_pos.addr, metadata !9783, metadata !2194), !dbg !9784
  call void @llvm.dbg.declare(metadata [7 x i32]* %xbr_nabits, metadata !9785, metadata !2194), !dbg !9787
  call void @llvm.dbg.declare(metadata [7 x [32 x i32]]* %xbr_bit_allocation, metadata !9788, metadata !2194), !dbg !9790
  call void @llvm.dbg.declare(metadata [7 x i32]* %xbr_scale_nbits, metadata !9791, metadata !2194), !dbg !9792
  call void @llvm.dbg.declare(metadata [7 x [32 x [2 x i32]]]* %xbr_scale_factors, metadata !9793, metadata !2194), !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %ssf, metadata !9795, metadata !2194), !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9797, metadata !2194), !dbg !9798
  call void @llvm.dbg.declare(metadata i32* %band, metadata !9799, metadata !2194), !dbg !9800
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !9801, metadata !2194), !dbg !9802
  %0 = load i32*, i32** %sub_pos.addr, align 8, !dbg !9803
  %1 = load i32, i32* %0, align 4, !dbg !9805
  %2 = load i32, i32* %sf.addr, align 4, !dbg !9806
  %idxprom = sext i32 %2 to i64, !dbg !9807
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9807
  %nsubsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 33, !dbg !9808
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes, i64 0, i64 %idxprom, !dbg !9807
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9807
  %conv = sext i8 %4 to i32, !dbg !9807
  %mul = mul nsw i32 %conv, 8, !dbg !9809
  %add = add nsw i32 %1, %mul, !dbg !9810
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9811
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 4, !dbg !9812
  %6 = load i32, i32* %npcmblocks, align 4, !dbg !9812
  %cmp = icmp sgt i32 %add, %6, !dbg !9813
  br i1 %cmp, label %if.then, label %if.end, !dbg !9814

if.then:                                          ; preds = %entry
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9815
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 0, !dbg !9817
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !9817
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !9815
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i32 0, i32 0)), !dbg !9818
  store i32 -1094995529, i32* %retval, align 4, !dbg !9819
  br label %return, !dbg !9819

if.end:                                           ; preds = %entry
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9820
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %10, i32 0, i32 1, !dbg !9822
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !9823
  %cmp2 = icmp slt i32 %call, 0, !dbg !9824
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !9825

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !9826
  br label %return, !dbg !9826

if.end5:                                          ; preds = %if.end
  %11 = load i32, i32* %xbr_base_ch.addr, align 4, !dbg !9827
  store i32 %11, i32* %ch, align 4, !dbg !9829
  br label %for.cond, !dbg !9830

for.cond:                                         ; preds = %for.inc, %if.end5
  %12 = load i32, i32* %ch, align 4, !dbg !9831
  %13 = load i32, i32* %xbr_nchannels.addr, align 4, !dbg !9834
  %cmp6 = icmp slt i32 %12, %13, !dbg !9835
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9836

for.body:                                         ; preds = %for.cond
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9837
  %gb8 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 1, !dbg !9838
  %call9 = call i32 @get_bits(%struct.GetBitContext* %gb8, i32 2), !dbg !9839
  %add10 = add i32 %call9, 2, !dbg !9840
  %15 = load i32, i32* %ch, align 4, !dbg !9841
  %idxprom11 = sext i32 %15 to i64, !dbg !9842
  %arrayidx12 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_nabits, i64 0, i64 %idxprom11, !dbg !9842
  store i32 %add10, i32* %arrayidx12, align 4, !dbg !9843
  br label %for.inc, !dbg !9842

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %ch, align 4, !dbg !9844
  %inc = add nsw i32 %16, 1, !dbg !9844
  store i32 %inc, i32* %ch, align 4, !dbg !9844
  br label %for.cond, !dbg !9846, !llvm.loop !9847

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %xbr_base_ch.addr, align 4, !dbg !9849
  store i32 %17, i32* %ch, align 4, !dbg !9851
  br label %for.cond13, !dbg !9852

for.cond13:                                       ; preds = %for.inc43, %for.end
  %18 = load i32, i32* %ch, align 4, !dbg !9853
  %19 = load i32, i32* %xbr_nchannels.addr, align 4, !dbg !9856
  %cmp14 = icmp slt i32 %18, %19, !dbg !9857
  br i1 %cmp14, label %for.body16, label %for.end45, !dbg !9858

for.body16:                                       ; preds = %for.cond13
  store i32 0, i32* %band, align 4, !dbg !9859
  br label %for.cond17, !dbg !9862

for.cond17:                                       ; preds = %for.inc40, %for.body16
  %20 = load i32, i32* %band, align 4, !dbg !9863
  %21 = load i32, i32* %ch, align 4, !dbg !9866
  %idxprom18 = sext i32 %21 to i64, !dbg !9867
  %22 = load i32*, i32** %xbr_nsubbands.addr, align 8, !dbg !9867
  %arrayidx19 = getelementptr inbounds i32, i32* %22, i64 %idxprom18, !dbg !9867
  %23 = load i32, i32* %arrayidx19, align 4, !dbg !9867
  %cmp20 = icmp slt i32 %20, %23, !dbg !9868
  br i1 %cmp20, label %for.body22, label %for.end42, !dbg !9869

for.body22:                                       ; preds = %for.cond17
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9870
  %gb23 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 1, !dbg !9872
  %25 = load i32, i32* %ch, align 4, !dbg !9873
  %idxprom24 = sext i32 %25 to i64, !dbg !9874
  %arrayidx25 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_nabits, i64 0, i64 %idxprom24, !dbg !9874
  %26 = load i32, i32* %arrayidx25, align 4, !dbg !9874
  %call26 = call i32 @get_bits(%struct.GetBitContext* %gb23, i32 %26), !dbg !9875
  %27 = load i32, i32* %band, align 4, !dbg !9876
  %idxprom27 = sext i32 %27 to i64, !dbg !9877
  %28 = load i32, i32* %ch, align 4, !dbg !9878
  %idxprom28 = sext i32 %28 to i64, !dbg !9877
  %arrayidx29 = getelementptr inbounds [7 x [32 x i32]], [7 x [32 x i32]]* %xbr_bit_allocation, i64 0, i64 %idxprom28, !dbg !9877
  %arrayidx30 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx29, i64 0, i64 %idxprom27, !dbg !9877
  store i32 %call26, i32* %arrayidx30, align 4, !dbg !9879
  %29 = load i32, i32* %band, align 4, !dbg !9880
  %idxprom31 = sext i32 %29 to i64, !dbg !9882
  %30 = load i32, i32* %ch, align 4, !dbg !9883
  %idxprom32 = sext i32 %30 to i64, !dbg !9882
  %arrayidx33 = getelementptr inbounds [7 x [32 x i32]], [7 x [32 x i32]]* %xbr_bit_allocation, i64 0, i64 %idxprom32, !dbg !9882
  %arrayidx34 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx33, i64 0, i64 %idxprom31, !dbg !9882
  %31 = load i32, i32* %arrayidx34, align 4, !dbg !9882
  %cmp35 = icmp sgt i32 %31, 26, !dbg !9884
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !9885

if.then37:                                        ; preds = %for.body22
  %32 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9886
  %avctx38 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %32, i32 0, i32 0, !dbg !9888
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx38, align 32, !dbg !9888
  %34 = bitcast %struct.AVCodecContext* %33 to i8*, !dbg !9886
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i32 0, i32 0)), !dbg !9889
  store i32 -1094995529, i32* %retval, align 4, !dbg !9890
  br label %return, !dbg !9890

if.end39:                                         ; preds = %for.body22
  br label %for.inc40, !dbg !9891

for.inc40:                                        ; preds = %if.end39
  %35 = load i32, i32* %band, align 4, !dbg !9892
  %inc41 = add nsw i32 %35, 1, !dbg !9892
  store i32 %inc41, i32* %band, align 4, !dbg !9892
  br label %for.cond17, !dbg !9894, !llvm.loop !9895

for.end42:                                        ; preds = %for.cond17
  br label %for.inc43, !dbg !9897

for.inc43:                                        ; preds = %for.end42
  %36 = load i32, i32* %ch, align 4, !dbg !9898
  %inc44 = add nsw i32 %36, 1, !dbg !9898
  store i32 %inc44, i32* %ch, align 4, !dbg !9898
  br label %for.cond13, !dbg !9900, !llvm.loop !9901

for.end45:                                        ; preds = %for.cond13
  %37 = load i32, i32* %xbr_base_ch.addr, align 4, !dbg !9903
  store i32 %37, i32* %ch, align 4, !dbg !9905
  br label %for.cond46, !dbg !9906

for.cond46:                                       ; preds = %for.inc59, %for.end45
  %38 = load i32, i32* %ch, align 4, !dbg !9907
  %39 = load i32, i32* %xbr_nchannels.addr, align 4, !dbg !9910
  %cmp47 = icmp slt i32 %38, %39, !dbg !9911
  br i1 %cmp47, label %for.body49, label %for.end61, !dbg !9912

for.body49:                                       ; preds = %for.cond46
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9913
  %gb50 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 1, !dbg !9915
  %call51 = call i32 @get_bits(%struct.GetBitContext* %gb50, i32 3), !dbg !9916
  %41 = load i32, i32* %ch, align 4, !dbg !9917
  %idxprom52 = sext i32 %41 to i64, !dbg !9918
  %arrayidx53 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_scale_nbits, i64 0, i64 %idxprom52, !dbg !9918
  store i32 %call51, i32* %arrayidx53, align 4, !dbg !9919
  %42 = load i32, i32* %ch, align 4, !dbg !9920
  %idxprom54 = sext i32 %42 to i64, !dbg !9922
  %arrayidx55 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_scale_nbits, i64 0, i64 %idxprom54, !dbg !9922
  %43 = load i32, i32* %arrayidx55, align 4, !dbg !9922
  %tobool = icmp ne i32 %43, 0, !dbg !9922
  br i1 %tobool, label %if.end58, label %if.then56, !dbg !9923

if.then56:                                        ; preds = %for.body49
  %44 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9924
  %avctx57 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %44, i32 0, i32 0, !dbg !9926
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 32, !dbg !9926
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !9924
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.54, i32 0, i32 0)), !dbg !9927
  store i32 -1094995529, i32* %retval, align 4, !dbg !9928
  br label %return, !dbg !9928

if.end58:                                         ; preds = %for.body49
  br label %for.inc59, !dbg !9929

for.inc59:                                        ; preds = %if.end58
  %47 = load i32, i32* %ch, align 4, !dbg !9930
  %inc60 = add nsw i32 %47, 1, !dbg !9930
  store i32 %inc60, i32* %ch, align 4, !dbg !9930
  br label %for.cond46, !dbg !9932, !llvm.loop !9933

for.end61:                                        ; preds = %for.cond46
  %48 = load i32, i32* %xbr_base_ch.addr, align 4, !dbg !9935
  store i32 %48, i32* %ch, align 4, !dbg !9937
  br label %for.cond62, !dbg !9938

for.cond62:                                       ; preds = %for.inc132, %for.end61
  %49 = load i32, i32* %ch, align 4, !dbg !9939
  %50 = load i32, i32* %xbr_nchannels.addr, align 4, !dbg !9942
  %cmp63 = icmp slt i32 %49, %50, !dbg !9943
  br i1 %cmp63, label %for.body65, label %for.end134, !dbg !9944

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i32** %scale_table, metadata !9945, metadata !2194), !dbg !9947
  call void @llvm.dbg.declare(metadata i32* %scale_size, metadata !9948, metadata !2194), !dbg !9949
  %51 = load i32, i32* %ch, align 4, !dbg !9950
  %idxprom66 = sext i32 %51 to i64, !dbg !9952
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9952
  %scale_factor_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 29, !dbg !9953
  %arrayidx67 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel, i64 0, i64 %idxprom66, !dbg !9952
  %53 = load i8, i8* %arrayidx67, align 1, !dbg !9952
  %conv68 = sext i8 %53 to i32, !dbg !9952
  %cmp69 = icmp sgt i32 %conv68, 5, !dbg !9954
  br i1 %cmp69, label %if.then71, label %if.else, !dbg !9955

if.then71:                                        ; preds = %for.body65
  store i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_dca_scale_factor_quant7, i32 0, i32 0), i32** %scale_table, align 8, !dbg !9956
  store i32 128, i32* %scale_size, align 4, !dbg !9958
  br label %if.end72, !dbg !9959

if.else:                                          ; preds = %for.body65
  store i32* getelementptr inbounds ([64 x i32], [64 x i32]* @ff_dca_scale_factor_quant6, i32 0, i32 0), i32** %scale_table, align 8, !dbg !9960
  store i32 64, i32* %scale_size, align 4, !dbg !9962
  br label %if.end72

if.end72:                                         ; preds = %if.else, %if.then71
  store i32 0, i32* %band, align 4, !dbg !9963
  br label %for.cond73, !dbg !9965

for.cond73:                                       ; preds = %for.inc129, %if.end72
  %54 = load i32, i32* %band, align 4, !dbg !9966
  %55 = load i32, i32* %ch, align 4, !dbg !9969
  %idxprom74 = sext i32 %55 to i64, !dbg !9970
  %56 = load i32*, i32** %xbr_nsubbands.addr, align 8, !dbg !9970
  %arrayidx75 = getelementptr inbounds i32, i32* %56, i64 %idxprom74, !dbg !9970
  %57 = load i32, i32* %arrayidx75, align 4, !dbg !9970
  %cmp76 = icmp slt i32 %54, %57, !dbg !9971
  br i1 %cmp76, label %for.body78, label %for.end131, !dbg !9972

for.body78:                                       ; preds = %for.cond73
  %58 = load i32, i32* %band, align 4, !dbg !9973
  %idxprom79 = sext i32 %58 to i64, !dbg !9976
  %59 = load i32, i32* %ch, align 4, !dbg !9977
  %idxprom80 = sext i32 %59 to i64, !dbg !9976
  %arrayidx81 = getelementptr inbounds [7 x [32 x i32]], [7 x [32 x i32]]* %xbr_bit_allocation, i64 0, i64 %idxprom80, !dbg !9976
  %arrayidx82 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx81, i64 0, i64 %idxprom79, !dbg !9976
  %60 = load i32, i32* %arrayidx82, align 4, !dbg !9976
  %tobool83 = icmp ne i32 %60, 0, !dbg !9976
  br i1 %tobool83, label %if.then84, label %if.end128, !dbg !9978

if.then84:                                        ; preds = %for.body78
  call void @llvm.dbg.declare(metadata i32* %scale_index, metadata !9979, metadata !2194), !dbg !9981
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9982
  %gb85 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 1, !dbg !9983
  %62 = load i32, i32* %ch, align 4, !dbg !9984
  %idxprom86 = sext i32 %62 to i64, !dbg !9985
  %arrayidx87 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_scale_nbits, i64 0, i64 %idxprom86, !dbg !9985
  %63 = load i32, i32* %arrayidx87, align 4, !dbg !9985
  %call88 = call i32 @get_bits(%struct.GetBitContext* %gb85, i32 %63), !dbg !9986
  store i32 %call88, i32* %scale_index, align 4, !dbg !9981
  %64 = load i32, i32* %scale_index, align 4, !dbg !9987
  %65 = load i32, i32* %scale_size, align 4, !dbg !9989
  %cmp89 = icmp sge i32 %64, %65, !dbg !9990
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !9991

if.then91:                                        ; preds = %if.then84
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !9992
  %avctx92 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %66, i32 0, i32 0, !dbg !9994
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx92, align 32, !dbg !9994
  %68 = bitcast %struct.AVCodecContext* %67 to i8*, !dbg !9992
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0)), !dbg !9995
  store i32 -1094995529, i32* %retval, align 4, !dbg !9996
  br label %return, !dbg !9996

if.end93:                                         ; preds = %if.then84
  %69 = load i32, i32* %scale_index, align 4, !dbg !9997
  %idxprom94 = sext i32 %69 to i64, !dbg !9998
  %70 = load i32*, i32** %scale_table, align 8, !dbg !9998
  %arrayidx95 = getelementptr inbounds i32, i32* %70, i64 %idxprom94, !dbg !9998
  %71 = load i32, i32* %arrayidx95, align 4, !dbg !9998
  %72 = load i32, i32* %band, align 4, !dbg !9999
  %idxprom96 = sext i32 %72 to i64, !dbg !10000
  %73 = load i32, i32* %ch, align 4, !dbg !10001
  %idxprom97 = sext i32 %73 to i64, !dbg !10000
  %arrayidx98 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %xbr_scale_factors, i64 0, i64 %idxprom97, !dbg !10000
  %arrayidx99 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx98, i64 0, i64 %idxprom96, !dbg !10000
  %arrayidx100 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx99, i64 0, i64 0, !dbg !10000
  store i32 %71, i32* %arrayidx100, align 8, !dbg !10002
  %74 = load i32, i32* %xbr_transition_mode.addr, align 4, !dbg !10003
  %tobool101 = icmp ne i32 %74, 0, !dbg !10003
  br i1 %tobool101, label %land.lhs.true, label %if.end127, !dbg !10005

land.lhs.true:                                    ; preds = %if.end93
  %75 = load i32, i32* %band, align 4, !dbg !10006
  %idxprom102 = sext i32 %75 to i64, !dbg !10008
  %76 = load i32, i32* %ch, align 4, !dbg !10009
  %idxprom103 = sext i32 %76 to i64, !dbg !10008
  %77 = load i32, i32* %sf.addr, align 4, !dbg !10010
  %idxprom104 = sext i32 %77 to i64, !dbg !10008
  %78 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10008
  %transition_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %78, i32 0, i32 37, !dbg !10011
  %arrayidx105 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode, i64 0, i64 %idxprom104, !dbg !10008
  %arrayidx106 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx105, i64 0, i64 %idxprom103, !dbg !10008
  %arrayidx107 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx106, i64 0, i64 %idxprom102, !dbg !10008
  %79 = load i8, i8* %arrayidx107, align 1, !dbg !10008
  %conv108 = sext i8 %79 to i32, !dbg !10008
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !10008
  br i1 %tobool109, label %if.then110, label %if.end127, !dbg !10012

if.then110:                                       ; preds = %land.lhs.true
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10013
  %gb111 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 1, !dbg !10015
  %81 = load i32, i32* %ch, align 4, !dbg !10016
  %idxprom112 = sext i32 %81 to i64, !dbg !10017
  %arrayidx113 = getelementptr inbounds [7 x i32], [7 x i32]* %xbr_scale_nbits, i64 0, i64 %idxprom112, !dbg !10017
  %82 = load i32, i32* %arrayidx113, align 4, !dbg !10017
  %call114 = call i32 @get_bits(%struct.GetBitContext* %gb111, i32 %82), !dbg !10018
  store i32 %call114, i32* %scale_index, align 4, !dbg !10019
  %83 = load i32, i32* %scale_index, align 4, !dbg !10020
  %84 = load i32, i32* %scale_size, align 4, !dbg !10022
  %cmp115 = icmp sge i32 %83, %84, !dbg !10023
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !10024

if.then117:                                       ; preds = %if.then110
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10025
  %avctx118 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %85, i32 0, i32 0, !dbg !10027
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx118, align 32, !dbg !10027
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !10025
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0)), !dbg !10028
  store i32 -1094995529, i32* %retval, align 4, !dbg !10029
  br label %return, !dbg !10029

if.end119:                                        ; preds = %if.then110
  %88 = load i32, i32* %scale_index, align 4, !dbg !10030
  %idxprom120 = sext i32 %88 to i64, !dbg !10031
  %89 = load i32*, i32** %scale_table, align 8, !dbg !10031
  %arrayidx121 = getelementptr inbounds i32, i32* %89, i64 %idxprom120, !dbg !10031
  %90 = load i32, i32* %arrayidx121, align 4, !dbg !10031
  %91 = load i32, i32* %band, align 4, !dbg !10032
  %idxprom122 = sext i32 %91 to i64, !dbg !10033
  %92 = load i32, i32* %ch, align 4, !dbg !10034
  %idxprom123 = sext i32 %92 to i64, !dbg !10033
  %arrayidx124 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %xbr_scale_factors, i64 0, i64 %idxprom123, !dbg !10033
  %arrayidx125 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx124, i64 0, i64 %idxprom122, !dbg !10033
  %arrayidx126 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx125, i64 0, i64 1, !dbg !10033
  store i32 %90, i32* %arrayidx126, align 4, !dbg !10035
  br label %if.end127, !dbg !10036

if.end127:                                        ; preds = %if.end119, %land.lhs.true, %if.end93
  br label %if.end128, !dbg !10037

if.end128:                                        ; preds = %if.end127, %for.body78
  br label %for.inc129, !dbg !10038

for.inc129:                                       ; preds = %if.end128
  %93 = load i32, i32* %band, align 4, !dbg !10039
  %inc130 = add nsw i32 %93, 1, !dbg !10039
  store i32 %inc130, i32* %band, align 4, !dbg !10039
  br label %for.cond73, !dbg !10041, !llvm.loop !10042

for.end131:                                       ; preds = %for.cond73
  br label %for.inc132, !dbg !10044

for.inc132:                                       ; preds = %for.end131
  %94 = load i32, i32* %ch, align 4, !dbg !10045
  %inc133 = add nsw i32 %94, 1, !dbg !10045
  store i32 %inc133, i32* %ch, align 4, !dbg !10045
  br label %for.cond62, !dbg !10047, !llvm.loop !10048

for.end134:                                       ; preds = %for.cond62
  store i32 0, i32* %ssf, align 4, !dbg !10050
  %95 = load i32*, i32** %sub_pos.addr, align 8, !dbg !10052
  %96 = load i32, i32* %95, align 4, !dbg !10053
  store i32 %96, i32* %ofs, align 4, !dbg !10054
  br label %for.cond135, !dbg !10055

for.cond135:                                      ; preds = %for.inc240, %for.end134
  %97 = load i32, i32* %ssf, align 4, !dbg !10056
  %98 = load i32, i32* %sf.addr, align 4, !dbg !10059
  %idxprom136 = sext i32 %98 to i64, !dbg !10060
  %99 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10060
  %nsubsubframes137 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %99, i32 0, i32 33, !dbg !10061
  %arrayidx138 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes137, i64 0, i64 %idxprom136, !dbg !10060
  %100 = load i8, i8* %arrayidx138, align 1, !dbg !10060
  %conv139 = sext i8 %100 to i32, !dbg !10060
  %cmp140 = icmp slt i32 %97, %conv139, !dbg !10062
  br i1 %cmp140, label %for.body142, label %for.end242, !dbg !10063

for.body142:                                      ; preds = %for.cond135
  %101 = load i32, i32* %xbr_base_ch.addr, align 4, !dbg !10064
  store i32 %101, i32* %ch, align 4, !dbg !10067
  br label %for.cond143, !dbg !10068

for.cond143:                                      ; preds = %for.inc219, %for.body142
  %102 = load i32, i32* %ch, align 4, !dbg !10069
  %103 = load i32, i32* %xbr_nchannels.addr, align 4, !dbg !10072
  %cmp144 = icmp slt i32 %102, %103, !dbg !10073
  br i1 %cmp144, label %for.body146, label %for.end221, !dbg !10074

for.body146:                                      ; preds = %for.cond143
  %104 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10075
  %gb147 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %104, i32 0, i32 1, !dbg !10078
  %call148 = call i32 @get_bits_left(%struct.GetBitContext* %gb147), !dbg !10079
  %cmp149 = icmp slt i32 %call148, 0, !dbg !10080
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !10081

if.then151:                                       ; preds = %for.body146
  store i32 -1094995529, i32* %retval, align 4, !dbg !10082
  br label %return, !dbg !10082

if.end152:                                        ; preds = %for.body146
  store i32 0, i32* %band, align 4, !dbg !10083
  br label %for.cond153, !dbg !10085

for.cond153:                                      ; preds = %for.inc216, %if.end152
  %105 = load i32, i32* %band, align 4, !dbg !10086
  %106 = load i32, i32* %ch, align 4, !dbg !10089
  %idxprom154 = sext i32 %106 to i64, !dbg !10090
  %107 = load i32*, i32** %xbr_nsubbands.addr, align 8, !dbg !10090
  %arrayidx155 = getelementptr inbounds i32, i32* %107, i64 %idxprom154, !dbg !10090
  %108 = load i32, i32* %arrayidx155, align 4, !dbg !10090
  %cmp156 = icmp slt i32 %105, %108, !dbg !10091
  br i1 %cmp156, label %for.body158, label %for.end218, !dbg !10092

for.body158:                                      ; preds = %for.cond153
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10093, metadata !2194), !dbg !10095
  call void @llvm.dbg.declare(metadata i32* %trans_ssf, metadata !10096, metadata !2194), !dbg !10097
  call void @llvm.dbg.declare(metadata i32* %abits, metadata !10098, metadata !2194), !dbg !10099
  %109 = load i32, i32* %band, align 4, !dbg !10100
  %idxprom159 = sext i32 %109 to i64, !dbg !10101
  %110 = load i32, i32* %ch, align 4, !dbg !10102
  %idxprom160 = sext i32 %110 to i64, !dbg !10101
  %arrayidx161 = getelementptr inbounds [7 x [32 x i32]], [7 x [32 x i32]]* %xbr_bit_allocation, i64 0, i64 %idxprom160, !dbg !10101
  %arrayidx162 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx161, i64 0, i64 %idxprom159, !dbg !10101
  %111 = load i32, i32* %arrayidx162, align 4, !dbg !10101
  store i32 %111, i32* %abits, align 4, !dbg !10099
  call void @llvm.dbg.declare(metadata [8 x i32]* %audio, metadata !10103, metadata !2194), !dbg !10105
  call void @llvm.dbg.declare(metadata i32* %step_size, metadata !10106, metadata !2194), !dbg !10107
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !10108, metadata !2194), !dbg !10109
  %112 = load i32, i32* %abits, align 4, !dbg !10110
  %cmp163 = icmp sgt i32 %112, 7, !dbg !10112
  br i1 %cmp163, label %if.then165, label %if.else167, !dbg !10113

if.then165:                                       ; preds = %for.body158
  %113 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10114
  %gb166 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %113, i32 0, i32 1, !dbg !10116
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %audio, i32 0, i32 0, !dbg !10117
  %114 = load i32, i32* %abits, align 4, !dbg !10118
  %sub = sub nsw i32 %114, 3, !dbg !10119
  call void @get_array(%struct.GetBitContext* %gb166, i32* %arraydecay, i32 8, i32 %sub), !dbg !10120
  br label %if.end179, !dbg !10121

if.else167:                                       ; preds = %for.body158
  %115 = load i32, i32* %abits, align 4, !dbg !10122
  %cmp168 = icmp sgt i32 %115, 0, !dbg !10125
  br i1 %cmp168, label %if.then170, label %if.else177, !dbg !10122

if.then170:                                       ; preds = %if.else167
  %116 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10126
  %arraydecay171 = getelementptr inbounds [8 x i32], [8 x i32]* %audio, i32 0, i32 0, !dbg !10129
  %117 = load i32, i32* %abits, align 4, !dbg !10130
  %call172 = call i32 @parse_block_codes(%struct.DCACoreDecoder* %116, i32* %arraydecay171, i32 %117), !dbg !10131
  store i32 %call172, i32* %ret, align 4, !dbg !10132
  %cmp173 = icmp slt i32 %call172, 0, !dbg !10133
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !10134

if.then175:                                       ; preds = %if.then170
  %118 = load i32, i32* %ret, align 4, !dbg !10135
  store i32 %118, i32* %retval, align 4, !dbg !10136
  br label %return, !dbg !10136

if.end176:                                        ; preds = %if.then170
  br label %if.end178, !dbg !10137

if.else177:                                       ; preds = %if.else167
  br label %for.inc216, !dbg !10138

if.end178:                                        ; preds = %if.end176
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then165
  %119 = load i32, i32* %abits, align 4, !dbg !10140
  %idxprom180 = sext i32 %119 to i64, !dbg !10141
  %arrayidx181 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_lossless_quant, i64 0, i64 %idxprom180, !dbg !10141
  %120 = load i32, i32* %arrayidx181, align 4, !dbg !10141
  store i32 %120, i32* %step_size, align 4, !dbg !10142
  %121 = load i32, i32* %xbr_transition_mode.addr, align 4, !dbg !10143
  %tobool182 = icmp ne i32 %121, 0, !dbg !10143
  br i1 %tobool182, label %if.then183, label %if.else192, !dbg !10145

if.then183:                                       ; preds = %if.end179
  %122 = load i32, i32* %band, align 4, !dbg !10146
  %idxprom184 = sext i32 %122 to i64, !dbg !10147
  %123 = load i32, i32* %ch, align 4, !dbg !10148
  %idxprom185 = sext i32 %123 to i64, !dbg !10147
  %124 = load i32, i32* %sf.addr, align 4, !dbg !10149
  %idxprom186 = sext i32 %124 to i64, !dbg !10147
  %125 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10147
  %transition_mode187 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %125, i32 0, i32 37, !dbg !10150
  %arrayidx188 = getelementptr inbounds [16 x [7 x [32 x i8]]], [16 x [7 x [32 x i8]]]* %transition_mode187, i64 0, i64 %idxprom186, !dbg !10147
  %arrayidx189 = getelementptr inbounds [7 x [32 x i8]], [7 x [32 x i8]]* %arrayidx188, i64 0, i64 %idxprom185, !dbg !10147
  %arrayidx190 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx189, i64 0, i64 %idxprom184, !dbg !10147
  %126 = load i8, i8* %arrayidx190, align 1, !dbg !10147
  %conv191 = sext i8 %126 to i32, !dbg !10147
  store i32 %conv191, i32* %trans_ssf, align 4, !dbg !10151
  br label %if.end193, !dbg !10152

if.else192:                                       ; preds = %if.end179
  store i32 0, i32* %trans_ssf, align 4, !dbg !10153
  br label %if.end193

if.end193:                                        ; preds = %if.else192, %if.then183
  %127 = load i32, i32* %trans_ssf, align 4, !dbg !10154
  %cmp194 = icmp eq i32 %127, 0, !dbg !10156
  br i1 %cmp194, label %if.then198, label %lor.lhs.false, !dbg !10157

lor.lhs.false:                                    ; preds = %if.end193
  %128 = load i32, i32* %ssf, align 4, !dbg !10158
  %129 = load i32, i32* %trans_ssf, align 4, !dbg !10160
  %cmp196 = icmp slt i32 %128, %129, !dbg !10161
  br i1 %cmp196, label %if.then198, label %if.else204, !dbg !10162

if.then198:                                       ; preds = %lor.lhs.false, %if.end193
  %130 = load i32, i32* %band, align 4, !dbg !10163
  %idxprom199 = sext i32 %130 to i64, !dbg !10164
  %131 = load i32, i32* %ch, align 4, !dbg !10165
  %idxprom200 = sext i32 %131 to i64, !dbg !10164
  %arrayidx201 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %xbr_scale_factors, i64 0, i64 %idxprom200, !dbg !10164
  %arrayidx202 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx201, i64 0, i64 %idxprom199, !dbg !10164
  %arrayidx203 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx202, i64 0, i64 0, !dbg !10164
  %132 = load i32, i32* %arrayidx203, align 8, !dbg !10164
  store i32 %132, i32* %scale, align 4, !dbg !10166
  br label %if.end210, !dbg !10167

if.else204:                                       ; preds = %lor.lhs.false
  %133 = load i32, i32* %band, align 4, !dbg !10168
  %idxprom205 = sext i32 %133 to i64, !dbg !10169
  %134 = load i32, i32* %ch, align 4, !dbg !10170
  %idxprom206 = sext i32 %134 to i64, !dbg !10169
  %arrayidx207 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %xbr_scale_factors, i64 0, i64 %idxprom206, !dbg !10169
  %arrayidx208 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx207, i64 0, i64 %idxprom205, !dbg !10169
  %arrayidx209 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx208, i64 0, i64 1, !dbg !10169
  %135 = load i32, i32* %arrayidx209, align 4, !dbg !10169
  store i32 %135, i32* %scale, align 4, !dbg !10171
  br label %if.end210

if.end210:                                        ; preds = %if.else204, %if.then198
  %136 = load i32, i32* %band, align 4, !dbg !10172
  %idxprom211 = sext i32 %136 to i64, !dbg !10173
  %137 = load i32, i32* %ch, align 4, !dbg !10174
  %idxprom212 = sext i32 %137 to i64, !dbg !10173
  %138 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10173
  %subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %138, i32 0, i32 67, !dbg !10175
  %arrayidx213 = getelementptr inbounds [7 x [32 x i32*]], [7 x [32 x i32*]]* %subband_samples, i64 0, i64 %idxprom212, !dbg !10173
  %arrayidx214 = getelementptr inbounds [32 x i32*], [32 x i32*]* %arrayidx213, i64 0, i64 %idxprom211, !dbg !10173
  %139 = load i32*, i32** %arrayidx214, align 8, !dbg !10173
  %140 = load i32, i32* %ofs, align 4, !dbg !10176
  %idx.ext = sext i32 %140 to i64, !dbg !10177
  %add.ptr = getelementptr inbounds i32, i32* %139, i64 %idx.ext, !dbg !10177
  %arraydecay215 = getelementptr inbounds [8 x i32], [8 x i32]* %audio, i32 0, i32 0, !dbg !10178
  %141 = load i32, i32* %step_size, align 4, !dbg !10179
  %142 = load i32, i32* %scale, align 4, !dbg !10180
  call void @ff_dca_core_dequantize(i32* %add.ptr, i32* %arraydecay215, i32 %141, i32 %142, i32 1, i32 8), !dbg !10181
  br label %for.inc216, !dbg !10182

for.inc216:                                       ; preds = %if.end210, %if.else177
  %143 = load i32, i32* %band, align 4, !dbg !10183
  %inc217 = add nsw i32 %143, 1, !dbg !10183
  store i32 %inc217, i32* %band, align 4, !dbg !10183
  br label %for.cond153, !dbg !10185, !llvm.loop !10186

for.end218:                                       ; preds = %for.cond153
  br label %for.inc219, !dbg !10188

for.inc219:                                       ; preds = %for.end218
  %144 = load i32, i32* %ch, align 4, !dbg !10189
  %inc220 = add nsw i32 %144, 1, !dbg !10189
  store i32 %inc220, i32* %ch, align 4, !dbg !10189
  br label %for.cond143, !dbg !10191, !llvm.loop !10192

for.end221:                                       ; preds = %for.cond143
  %145 = load i32, i32* %ssf, align 4, !dbg !10194
  %146 = load i32, i32* %sf.addr, align 4, !dbg !10196
  %idxprom222 = sext i32 %146 to i64, !dbg !10197
  %147 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10197
  %nsubsubframes223 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %147, i32 0, i32 33, !dbg !10198
  %arrayidx224 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes223, i64 0, i64 %idxprom222, !dbg !10197
  %148 = load i8, i8* %arrayidx224, align 1, !dbg !10197
  %conv225 = sext i8 %148 to i32, !dbg !10197
  %sub226 = sub nsw i32 %conv225, 1, !dbg !10199
  %cmp227 = icmp eq i32 %145, %sub226, !dbg !10200
  br i1 %cmp227, label %land.lhs.true231, label %lor.lhs.false229, !dbg !10201

lor.lhs.false229:                                 ; preds = %for.end221
  %149 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10202
  %sync_ssf = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %149, i32 0, i32 14, !dbg !10204
  %150 = load i32, i32* %sync_ssf, align 4, !dbg !10204
  %tobool230 = icmp ne i32 %150, 0, !dbg !10202
  br i1 %tobool230, label %land.lhs.true231, label %if.end238, !dbg !10205

land.lhs.true231:                                 ; preds = %lor.lhs.false229, %for.end221
  %151 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10206
  %gb232 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %151, i32 0, i32 1, !dbg !10208
  %call233 = call i32 @get_bits(%struct.GetBitContext* %gb232, i32 16), !dbg !10209
  %cmp234 = icmp ne i32 %call233, 65535, !dbg !10210
  br i1 %cmp234, label %if.then236, label %if.end238, !dbg !10211

if.then236:                                       ; preds = %land.lhs.true231
  %152 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10212
  %avctx237 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %152, i32 0, i32 0, !dbg !10214
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx237, align 32, !dbg !10214
  %154 = bitcast %struct.AVCodecContext* %153 to i8*, !dbg !10212
  call void (i8*, i32, i8*, ...) @av_log(i8* %154, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i32 0, i32 0)), !dbg !10215
  store i32 -1094995529, i32* %retval, align 4, !dbg !10216
  br label %return, !dbg !10216

if.end238:                                        ; preds = %land.lhs.true231, %lor.lhs.false229
  %155 = load i32, i32* %ofs, align 4, !dbg !10217
  %add239 = add nsw i32 %155, 8, !dbg !10217
  store i32 %add239, i32* %ofs, align 4, !dbg !10217
  br label %for.inc240, !dbg !10218

for.inc240:                                       ; preds = %if.end238
  %156 = load i32, i32* %ssf, align 4, !dbg !10219
  %inc241 = add nsw i32 %156, 1, !dbg !10219
  store i32 %inc241, i32* %ssf, align 4, !dbg !10219
  br label %for.cond135, !dbg !10221, !llvm.loop !10222

for.end242:                                       ; preds = %for.cond135
  %157 = load i32, i32* %ofs, align 4, !dbg !10224
  %158 = load i32*, i32** %sub_pos.addr, align 8, !dbg !10225
  store i32 %157, i32* %158, align 4, !dbg !10226
  store i32 0, i32* %retval, align 4, !dbg !10227
  br label %return, !dbg !10227

return:                                           ; preds = %for.end242, %if.then236, %if.then175, %if.then151, %if.then117, %if.then91, %if.then56, %if.then37, %if.then4, %if.then
  %159 = load i32, i32* %retval, align 4, !dbg !10228
  ret i32 %159, !dbg !10228
}

; Function Attrs: nounwind uwtable
define internal i32 @alloc_x96_sample_buffer(%struct.DCACoreDecoder* %s) #0 !dbg !10229 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %nchsamples = alloca i32, align 4
  %nframesamples = alloca i32, align 4
  %size = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !10230, metadata !2194), !dbg !10231
  call void @llvm.dbg.declare(metadata i32* %nchsamples, metadata !10232, metadata !2194), !dbg !10233
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10234
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 4, !dbg !10235
  %1 = load i32, i32* %npcmblocks, align 4, !dbg !10235
  %add = add nsw i32 4, %1, !dbg !10236
  store i32 %add, i32* %nchsamples, align 4, !dbg !10233
  call void @llvm.dbg.declare(metadata i32* %nframesamples, metadata !10237, metadata !2194), !dbg !10238
  %2 = load i32, i32* %nchsamples, align 4, !dbg !10239
  %mul = mul nsw i32 %2, 7, !dbg !10240
  %mul1 = mul nsw i32 %mul, 64, !dbg !10241
  store i32 %mul1, i32* %nframesamples, align 4, !dbg !10238
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10242, metadata !2194), !dbg !10243
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10244
  %x96_subband_size = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 62, !dbg !10245
  %4 = load i32, i32* %x96_subband_size, align 32, !dbg !10245
  store i32 %4, i32* %size, align 4, !dbg !10243
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10246, metadata !2194), !dbg !10247
  call void @llvm.dbg.declare(metadata i32* %band, metadata !10248, metadata !2194), !dbg !10249
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10250
  %x96_subband_buffer = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 63, !dbg !10251
  %6 = bitcast i32** %x96_subband_buffer to i8*, !dbg !10252
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10253
  %x96_subband_size2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %7, i32 0, i32 62, !dbg !10254
  %8 = load i32, i32* %nframesamples, align 4, !dbg !10255
  %conv = sext i32 %8 to i64, !dbg !10255
  %mul3 = mul i64 %conv, 4, !dbg !10256
  call void @av_fast_mallocz(i8* %6, i32* %x96_subband_size2, i64 %mul3), !dbg !10257
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10258
  %x96_subband_buffer4 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 63, !dbg !10260
  %10 = load i32*, i32** %x96_subband_buffer4, align 8, !dbg !10260
  %tobool = icmp ne i32* %10, null, !dbg !10258
  br i1 %tobool, label %if.end, label %if.then, !dbg !10261

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10262
  br label %return, !dbg !10262

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %size, align 4, !dbg !10263
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10265
  %x96_subband_size5 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 62, !dbg !10266
  %13 = load i32, i32* %x96_subband_size5, align 32, !dbg !10266
  %cmp = icmp ne i32 %11, %13, !dbg !10267
  br i1 %cmp, label %if.then7, label %if.end24, !dbg !10268

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !10269
  br label %for.cond, !dbg !10272

for.cond:                                         ; preds = %for.inc21, %if.then7
  %14 = load i32, i32* %ch, align 4, !dbg !10273
  %cmp8 = icmp slt i32 %14, 7, !dbg !10276
  br i1 %cmp8, label %for.body, label %for.end23, !dbg !10277

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %band, align 4, !dbg !10278
  br label %for.cond10, !dbg !10280

for.cond10:                                       ; preds = %for.inc, %for.body
  %15 = load i32, i32* %band, align 4, !dbg !10281
  %cmp11 = icmp slt i32 %15, 64, !dbg !10284
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !10285

for.body13:                                       ; preds = %for.cond10
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10286
  %x96_subband_buffer14 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 63, !dbg !10287
  %17 = load i32*, i32** %x96_subband_buffer14, align 8, !dbg !10287
  %18 = load i32, i32* %ch, align 4, !dbg !10288
  %mul15 = mul nsw i32 %18, 64, !dbg !10289
  %19 = load i32, i32* %band, align 4, !dbg !10290
  %add16 = add nsw i32 %mul15, %19, !dbg !10291
  %20 = load i32, i32* %nchsamples, align 4, !dbg !10292
  %mul17 = mul nsw i32 %add16, %20, !dbg !10293
  %idx.ext = sext i32 %mul17 to i64, !dbg !10294
  %add.ptr = getelementptr inbounds i32, i32* %17, i64 %idx.ext, !dbg !10294
  %add.ptr18 = getelementptr inbounds i32, i32* %add.ptr, i64 4, !dbg !10295
  %21 = load i32, i32* %band, align 4, !dbg !10296
  %idxprom = sext i32 %21 to i64, !dbg !10297
  %22 = load i32, i32* %ch, align 4, !dbg !10298
  %idxprom19 = sext i32 %22 to i64, !dbg !10297
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10297
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 64, !dbg !10299
  %arrayidx = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom19, !dbg !10297
  %arrayidx20 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx, i64 0, i64 %idxprom, !dbg !10297
  store i32* %add.ptr18, i32** %arrayidx20, align 8, !dbg !10300
  br label %for.inc, !dbg !10297

for.inc:                                          ; preds = %for.body13
  %24 = load i32, i32* %band, align 4, !dbg !10301
  %inc = add nsw i32 %24, 1, !dbg !10301
  store i32 %inc, i32* %band, align 4, !dbg !10301
  br label %for.cond10, !dbg !10303, !llvm.loop !10304

for.end:                                          ; preds = %for.cond10
  br label %for.inc21, !dbg !10306

for.inc21:                                        ; preds = %for.end
  %25 = load i32, i32* %ch, align 4, !dbg !10308
  %inc22 = add nsw i32 %25, 1, !dbg !10308
  store i32 %inc22, i32* %ch, align 4, !dbg !10308
  br label %for.cond, !dbg !10310, !llvm.loop !10311

for.end23:                                        ; preds = %for.cond
  br label %if.end24, !dbg !10313

if.end24:                                         ; preds = %for.end23, %if.end
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10314
  %predictor_history = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 16, !dbg !10316
  %27 = load i32, i32* %predictor_history, align 4, !dbg !10316
  %tobool25 = icmp ne i32 %27, 0, !dbg !10314
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !10317

if.then26:                                        ; preds = %if.end24
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10318
  call void @erase_x96_adpcm_history(%struct.DCACoreDecoder* %28), !dbg !10319
  br label %if.end27, !dbg !10319

if.end27:                                         ; preds = %if.then26, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !10320
  br label %return, !dbg !10320

return:                                           ; preds = %if.end27, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !10321
  ret i32 %29, !dbg !10321
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_frame_data(%struct.DCACoreDecoder* %s, i32 %exss, i32 %xch_base) #0 !dbg !10322 {
entry:
  %d.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr.i, metadata !2630, metadata !2194), !dbg !10325
  %s.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr.i, metadata !2639, metadata !2194), !dbg !10334
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %exss.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %sf = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %band = alloca i32, align 4
  %sub_pos = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  %samples = alloca i32*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !10335, metadata !2194), !dbg !10336
  store i32 %exss, i32* %exss.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exss.addr, metadata !10337, metadata !2194), !dbg !10338
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !10339, metadata !2194), !dbg !10340
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !10341, metadata !2194), !dbg !10342
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10343, metadata !2194), !dbg !10344
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10345, metadata !2194), !dbg !10346
  call void @llvm.dbg.declare(metadata i32* %band, metadata !10347, metadata !2194), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %sub_pos, metadata !10349, metadata !2194), !dbg !10350
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10351
  %1 = load i32, i32* %exss.addr, align 4, !dbg !10353
  %2 = load i32, i32* %xch_base.addr, align 4, !dbg !10354
  %call = call i32 @parse_x96_coding_header(%struct.DCACoreDecoder* %0, i32 %1, i32 %2), !dbg !10355
  store i32 %call, i32* %ret, align 4, !dbg !10356
  %cmp = icmp slt i32 %call, 0, !dbg !10357
  br i1 %cmp, label %if.then, label %if.end, !dbg !10358

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !10359
  store i32 %3, i32* %retval, align 4, !dbg !10360
  br label %return, !dbg !10360

if.end:                                           ; preds = %entry
  store i32 0, i32* %sf, align 4, !dbg !10361
  store i32 0, i32* %sub_pos, align 4, !dbg !10363
  br label %for.cond, !dbg !10364

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %sf, align 4, !dbg !10365
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10368
  %nsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 22, !dbg !10369
  %6 = load i32, i32* %nsubframes, align 4, !dbg !10369
  %cmp1 = icmp slt i32 %4, %6, !dbg !10370
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10371

for.body:                                         ; preds = %for.cond
  %7 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10372
  %8 = load i32, i32* %xch_base.addr, align 4, !dbg !10375
  %call2 = call i32 @parse_x96_subframe_header(%struct.DCACoreDecoder* %7, i32 %8), !dbg !10376
  store i32 %call2, i32* %ret, align 4, !dbg !10377
  %cmp3 = icmp slt i32 %call2, 0, !dbg !10378
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10379

if.then4:                                         ; preds = %for.body
  %9 = load i32, i32* %ret, align 4, !dbg !10380
  store i32 %9, i32* %retval, align 4, !dbg !10381
  br label %return, !dbg !10381

if.end5:                                          ; preds = %for.body
  %10 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10382
  %11 = load i32, i32* %sf, align 4, !dbg !10384
  %12 = load i32, i32* %xch_base.addr, align 4, !dbg !10385
  %call6 = call i32 @parse_x96_subframe_audio(%struct.DCACoreDecoder* %10, i32 %11, i32 %12, i32* %sub_pos), !dbg !10386
  store i32 %call6, i32* %ret, align 4, !dbg !10387
  %cmp7 = icmp slt i32 %call6, 0, !dbg !10388
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10389

if.then8:                                         ; preds = %if.end5
  %13 = load i32, i32* %ret, align 4, !dbg !10390
  store i32 %13, i32* %retval, align 4, !dbg !10391
  br label %return, !dbg !10391

if.end9:                                          ; preds = %if.end5
  br label %for.inc, !dbg !10392

for.inc:                                          ; preds = %if.end9
  %14 = load i32, i32* %sf, align 4, !dbg !10393
  %inc = add nsw i32 %14, 1, !dbg !10393
  store i32 %inc, i32* %sf, align 4, !dbg !10393
  br label %for.cond, !dbg !10395, !llvm.loop !10396

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %xch_base.addr, align 4, !dbg !10398
  store i32 %15, i32* %ch, align 4, !dbg !10399
  br label %for.cond10, !dbg !10400

for.cond10:                                       ; preds = %for.inc57, %for.end
  %16 = load i32, i32* %ch, align 4, !dbg !10401
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10403
  %x96_nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 57, !dbg !10404
  %18 = load i32, i32* %x96_nchannels, align 4, !dbg !10404
  %cmp11 = icmp slt i32 %16, %18, !dbg !10405
  br i1 %cmp11, label %for.body12, label %for.end59, !dbg !10406

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !10407, metadata !2194), !dbg !10408
  %19 = load i32, i32* %ch, align 4, !dbg !10409
  %idxprom = sext i32 %19 to i64, !dbg !10410
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10410
  %nsubbands13 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 25, !dbg !10411
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands13, i64 0, i64 %idxprom, !dbg !10410
  %21 = load i8, i8* %arrayidx, align 1, !dbg !10410
  %conv = sext i8 %21 to i32, !dbg !10410
  store i32 %conv, i32* %nsubbands, align 4, !dbg !10408
  %22 = load i32, i32* %ch, align 4, !dbg !10412
  %idxprom14 = sext i32 %22 to i64, !dbg !10414
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10414
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 27, !dbg !10415
  %arrayidx15 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom14, !dbg !10414
  %24 = load i8, i8* %arrayidx15, align 1, !dbg !10414
  %tobool = icmp ne i8 %24, 0, !dbg !10414
  br i1 %tobool, label %if.then16, label %if.end36, !dbg !10416

if.then16:                                        ; preds = %for.body12
  %25 = load i32, i32* %nsubbands, align 4, !dbg !10417
  %26 = load i32, i32* %ch, align 4, !dbg !10418
  %idxprom17 = sext i32 %26 to i64, !dbg !10419
  %27 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10419
  %joint_intensity_index18 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %27, i32 0, i32 27, !dbg !10420
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index18, i64 0, i64 %idxprom17, !dbg !10419
  %28 = load i8, i8* %arrayidx19, align 1, !dbg !10419
  %conv20 = sext i8 %28 to i32, !dbg !10419
  %sub = sub nsw i32 %conv20, 1, !dbg !10421
  %idxprom21 = sext i32 %sub to i64, !dbg !10422
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10422
  %nsubbands22 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 25, !dbg !10423
  %arrayidx23 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands22, i64 0, i64 %idxprom21, !dbg !10422
  %30 = load i8, i8* %arrayidx23, align 1, !dbg !10422
  %conv24 = sext i8 %30 to i32, !dbg !10424
  %cmp25 = icmp sgt i32 %25, %conv24, !dbg !10425
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !10426

cond.true:                                        ; preds = %if.then16
  %31 = load i32, i32* %nsubbands, align 4, !dbg !10427
  br label %cond.end, !dbg !10429

cond.false:                                       ; preds = %if.then16
  %32 = load i32, i32* %ch, align 4, !dbg !10430
  %idxprom27 = sext i32 %32 to i64, !dbg !10432
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10432
  %joint_intensity_index28 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 27, !dbg !10433
  %arrayidx29 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index28, i64 0, i64 %idxprom27, !dbg !10432
  %34 = load i8, i8* %arrayidx29, align 1, !dbg !10432
  %conv30 = sext i8 %34 to i32, !dbg !10432
  %sub31 = sub nsw i32 %conv30, 1, !dbg !10434
  %idxprom32 = sext i32 %sub31 to i64, !dbg !10435
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10435
  %nsubbands33 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 25, !dbg !10436
  %arrayidx34 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands33, i64 0, i64 %idxprom32, !dbg !10435
  %36 = load i8, i8* %arrayidx34, align 1, !dbg !10435
  %conv35 = sext i8 %36 to i32, !dbg !10437
  br label %cond.end, !dbg !10438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %conv35, %cond.false ], !dbg !10439
  store i32 %cond, i32* %nsubbands, align 4, !dbg !10441
  br label %if.end36, !dbg !10442

if.end36:                                         ; preds = %cond.end, %for.body12
  store i32 0, i32* %band, align 4, !dbg !10443
  br label %for.cond37, !dbg !10444

for.cond37:                                       ; preds = %for.inc54, %if.end36
  %37 = load i32, i32* %band, align 4, !dbg !10445
  %cmp38 = icmp slt i32 %37, 64, !dbg !10447
  br i1 %cmp38, label %for.body40, label %for.end56, !dbg !10448

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32** %samples, metadata !10449, metadata !2194), !dbg !10450
  %38 = load i32, i32* %band, align 4, !dbg !10451
  %idxprom41 = sext i32 %38 to i64, !dbg !10452
  %39 = load i32, i32* %ch, align 4, !dbg !10453
  %idxprom42 = sext i32 %39 to i64, !dbg !10452
  %40 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10452
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %40, i32 0, i32 64, !dbg !10454
  %arrayidx43 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom42, !dbg !10452
  %arrayidx44 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx43, i64 0, i64 %idxprom41, !dbg !10452
  %41 = load i32*, i32** %arrayidx44, align 8, !dbg !10452
  %add.ptr = getelementptr inbounds i32, i32* %41, i64 -4, !dbg !10455
  store i32* %add.ptr, i32** %samples, align 8, !dbg !10450
  %42 = load i32, i32* %band, align 4, !dbg !10456
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10457
  %x96_subband_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 59, !dbg !10458
  %44 = load i32, i32* %x96_subband_start, align 4, !dbg !10458
  %cmp45 = icmp sge i32 %42, %44, !dbg !10459
  br i1 %cmp45, label %land.lhs.true, label %if.else, !dbg !10460

land.lhs.true:                                    ; preds = %for.body40
  %45 = load i32, i32* %band, align 4, !dbg !10461
  %46 = load i32, i32* %nsubbands, align 4, !dbg !10463
  %cmp47 = icmp slt i32 %45, %46, !dbg !10464
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !10465

if.then49:                                        ; preds = %land.lhs.true
  %47 = load i32*, i32** %samples, align 8, !dbg !10466
  %48 = bitcast i32* %47 to i8*, !dbg !10466
  %49 = load i32*, i32** %samples, align 8, !dbg !10467
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10468
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 4, !dbg !10469
  %51 = load i32, i32* %npcmblocks, align 4, !dbg !10469
  %idx.ext = sext i32 %51 to i64, !dbg !10470
  %add.ptr50 = getelementptr inbounds i32, i32* %49, i64 %idx.ext, !dbg !10470
  %52 = bitcast i32* %add.ptr50 to i8*, !dbg !10467
  store i8* %48, i8** %d.addr.i, align 8, !dbg !10471
  store i8* %52, i8** %s.addr.i, align 8, !dbg !10471
  %53 = load i8*, i8** %d.addr.i, align 8, !dbg !10472
  %54 = bitcast i8* %53 to %struct.v*, !dbg !10473
  %55 = load i8*, i8** %s.addr.i, align 8, !dbg !10474
  %56 = bitcast i8* %55 to %struct.v*, !dbg !10475
  call void asm "movaps   $1, %xmm0  \0A\09movaps   %xmm0, $0  \0A\09", "=*m,*m,~{xmm0},~{dirflag},~{fpsr},~{flags}"(%struct.v* %54, %struct.v* %56) #7, !dbg !10476, !srcloc !2780
  br label %if.end53, !dbg !10471

if.else:                                          ; preds = %land.lhs.true, %for.body40
  %57 = load i32*, i32** %samples, align 8, !dbg !10477
  %58 = bitcast i32* %57 to i8*, !dbg !10478
  %59 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10479
  %npcmblocks51 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %59, i32 0, i32 4, !dbg !10480
  %60 = load i32, i32* %npcmblocks51, align 4, !dbg !10480
  %add = add nsw i32 4, %60, !dbg !10481
  %conv52 = sext i32 %add to i64, !dbg !10482
  %mul = mul i64 %conv52, 4, !dbg !10483
  call void @llvm.memset.p0i8.i64(i8* %58, i8 0, i64 %mul, i32 4, i1 false), !dbg !10478
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then49
  br label %for.inc54, !dbg !10484

for.inc54:                                        ; preds = %if.end53
  %61 = load i32, i32* %band, align 4, !dbg !10485
  %inc55 = add nsw i32 %61, 1, !dbg !10485
  store i32 %inc55, i32* %band, align 4, !dbg !10485
  br label %for.cond37, !dbg !10487, !llvm.loop !10488

for.end56:                                        ; preds = %for.cond37
  br label %for.inc57, !dbg !10490

for.inc57:                                        ; preds = %for.end56
  %62 = load i32, i32* %ch, align 4, !dbg !10491
  %inc58 = add nsw i32 %62, 1, !dbg !10491
  store i32 %inc58, i32* %ch, align 4, !dbg !10491
  br label %for.cond10, !dbg !10493, !llvm.loop !10494

for.end59:                                        ; preds = %for.cond10
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10496, !srcloc !2826
  store i32 0, i32* %retval, align 4, !dbg !10498
  br label %return, !dbg !10498

return:                                           ; preds = %for.end59, %if.then8, %if.then4, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !10499
  ret i32 %63, !dbg !10499
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_coding_header(%struct.DCACoreDecoder* %s, i32 %exss, i32 %xch_base) #0 !dbg !10500 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %exss.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header_pos = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !10501, metadata !2194), !dbg !10502
  store i32 %exss, i32* %exss.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exss.addr, metadata !10503, metadata !2194), !dbg !10504
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !10505, metadata !2194), !dbg !10506
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10507, metadata !2194), !dbg !10508
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10509, metadata !2194), !dbg !10510
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !10511, metadata !2194), !dbg !10512
  store i32 0, i32* %header_size, align 4, !dbg !10512
  call void @llvm.dbg.declare(metadata i32* %header_pos, metadata !10513, metadata !2194), !dbg !10514
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10515
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !10516
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !10517
  store i32 %call, i32* %header_pos, align 4, !dbg !10514
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10518
  %gb1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 1, !dbg !10520
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %gb1), !dbg !10521
  %cmp = icmp slt i32 %call2, 0, !dbg !10522
  br i1 %cmp, label %if.then, label %if.end, !dbg !10523

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !10524
  br label %return, !dbg !10524

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %exss.addr, align 4, !dbg !10525
  %tobool = icmp ne i32 %2, 0, !dbg !10525
  br i1 %tobool, label %if.then3, label %if.end14, !dbg !10527

if.then3:                                         ; preds = %if.end
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10528
  %gb4 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 1, !dbg !10530
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb4, i32 7), !dbg !10531
  %add = add i32 %call5, 1, !dbg !10532
  store i32 %add, i32* %header_size, align 4, !dbg !10533
  %4 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10534
  %x96_crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %4, i32 0, i32 56, !dbg !10536
  %5 = load i32, i32* %x96_crc_present, align 8, !dbg !10536
  %tobool6 = icmp ne i32 %5, 0, !dbg !10534
  br i1 %tobool6, label %land.lhs.true, label %if.end13, !dbg !10537

land.lhs.true:                                    ; preds = %if.then3
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10538
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 0, !dbg !10540
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !10540
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10541
  %gb7 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 1, !dbg !10542
  %9 = load i32, i32* %header_pos, align 4, !dbg !10543
  %10 = load i32, i32* %header_pos, align 4, !dbg !10544
  %11 = load i32, i32* %header_size, align 4, !dbg !10545
  %mul = mul nsw i32 %11, 8, !dbg !10546
  %add8 = add nsw i32 %10, %mul, !dbg !10547
  %call9 = call i32 @ff_dca_check_crc(%struct.AVCodecContext* %7, %struct.GetBitContext* %gb7, i32 %9, i32 %add8), !dbg !10548
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10548
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !10549

if.then11:                                        ; preds = %land.lhs.true
  %12 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10551
  %avctx12 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %12, i32 0, i32 0, !dbg !10553
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 32, !dbg !10553
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !10551
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.62, i32 0, i32 0)), !dbg !10554
  store i32 -1094995529, i32* %retval, align 4, !dbg !10555
  br label %return, !dbg !10555

if.end13:                                         ; preds = %land.lhs.true, %if.then3
  br label %if.end14, !dbg !10556

if.end14:                                         ; preds = %if.end13, %if.end
  %15 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10557
  %gb15 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %15, i32 0, i32 1, !dbg !10558
  %call16 = call i32 @get_bits1(%struct.GetBitContext* %gb15), !dbg !10559
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10560
  %x96_high_res = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 58, !dbg !10561
  store i32 %call16, i32* %x96_high_res, align 16, !dbg !10562
  %17 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10563
  %x96_rev_no = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %17, i32 0, i32 55, !dbg !10565
  %18 = load i32, i32* %x96_rev_no, align 4, !dbg !10565
  %cmp17 = icmp slt i32 %18, 8, !dbg !10566
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !10567

if.then18:                                        ; preds = %if.end14
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10568
  %gb19 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 1, !dbg !10570
  %call20 = call i32 @get_bits(%struct.GetBitContext* %gb19, i32 5), !dbg !10571
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10572
  %x96_subband_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 59, !dbg !10573
  store i32 %call20, i32* %x96_subband_start, align 4, !dbg !10574
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10575
  %x96_subband_start21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 59, !dbg !10577
  %22 = load i32, i32* %x96_subband_start21, align 4, !dbg !10577
  %cmp22 = icmp sgt i32 %22, 27, !dbg !10578
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !10579

if.then23:                                        ; preds = %if.then18
  %23 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10580
  %avctx24 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %23, i32 0, i32 0, !dbg !10582
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx24, align 32, !dbg !10582
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !10580
  %26 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10583
  %x96_subband_start25 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %26, i32 0, i32 59, !dbg !10584
  %27 = load i32, i32* %x96_subband_start25, align 4, !dbg !10584
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i32 0, i32 0), i32 %27), !dbg !10585
  store i32 -1094995529, i32* %retval, align 4, !dbg !10586
  br label %return, !dbg !10586

if.end26:                                         ; preds = %if.then18
  br label %if.end28, !dbg !10587

if.else:                                          ; preds = %if.end14
  %28 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10588
  %x96_subband_start27 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %28, i32 0, i32 59, !dbg !10590
  store i32 32, i32* %x96_subband_start27, align 4, !dbg !10591
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end26
  %29 = load i32, i32* %xch_base.addr, align 4, !dbg !10592
  store i32 %29, i32* %ch, align 4, !dbg !10594
  br label %for.cond, !dbg !10595

for.cond:                                         ; preds = %for.inc, %if.end28
  %30 = load i32, i32* %ch, align 4, !dbg !10596
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10599
  %x96_nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 57, !dbg !10600
  %32 = load i32, i32* %x96_nchannels, align 4, !dbg !10600
  %cmp29 = icmp slt i32 %30, %32, !dbg !10601
  br i1 %cmp29, label %for.body, label %for.end, !dbg !10602

for.body:                                         ; preds = %for.cond
  %33 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10603
  %gb30 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %33, i32 0, i32 1, !dbg !10605
  %call31 = call i32 @get_bits(%struct.GetBitContext* %gb30, i32 6), !dbg !10606
  %add32 = add i32 %call31, 1, !dbg !10607
  %conv = trunc i32 %add32 to i8, !dbg !10606
  %34 = load i32, i32* %ch, align 4, !dbg !10608
  %idxprom = sext i32 %34 to i64, !dbg !10609
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10609
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 25, !dbg !10610
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom, !dbg !10609
  store i8 %conv, i8* %arrayidx, align 1, !dbg !10611
  %36 = load i32, i32* %ch, align 4, !dbg !10612
  %idxprom33 = sext i32 %36 to i64, !dbg !10614
  %37 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10614
  %nsubbands34 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %37, i32 0, i32 25, !dbg !10615
  %arrayidx35 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands34, i64 0, i64 %idxprom33, !dbg !10614
  %38 = load i8, i8* %arrayidx35, align 1, !dbg !10614
  %conv36 = sext i8 %38 to i32, !dbg !10614
  %cmp37 = icmp slt i32 %conv36, 32, !dbg !10616
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !10617

if.then39:                                        ; preds = %for.body
  %39 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10618
  %avctx40 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %39, i32 0, i32 0, !dbg !10620
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx40, align 32, !dbg !10620
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !10618
  %42 = load i32, i32* %ch, align 4, !dbg !10621
  %idxprom41 = sext i32 %42 to i64, !dbg !10622
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10622
  %nsubbands42 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %43, i32 0, i32 25, !dbg !10623
  %arrayidx43 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands42, i64 0, i64 %idxprom41, !dbg !10622
  %44 = load i8, i8* %arrayidx43, align 1, !dbg !10622
  %conv44 = sext i8 %44 to i32, !dbg !10622
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.64, i32 0, i32 0), i32 %conv44), !dbg !10624
  store i32 -1094995529, i32* %retval, align 4, !dbg !10625
  br label %return, !dbg !10625

if.end45:                                         ; preds = %for.body
  br label %for.inc, !dbg !10626

for.inc:                                          ; preds = %if.end45
  %45 = load i32, i32* %ch, align 4, !dbg !10627
  %inc = add nsw i32 %45, 1, !dbg !10627
  store i32 %inc, i32* %ch, align 4, !dbg !10627
  br label %for.cond, !dbg !10629, !llvm.loop !10630

for.end:                                          ; preds = %for.cond
  %46 = load i32, i32* %xch_base.addr, align 4, !dbg !10632
  store i32 %46, i32* %ch, align 4, !dbg !10634
  br label %for.cond46, !dbg !10635

for.cond46:                                       ; preds = %for.inc68, %for.end
  %47 = load i32, i32* %ch, align 4, !dbg !10636
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10639
  %x96_nchannels47 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 57, !dbg !10640
  %49 = load i32, i32* %x96_nchannels47, align 4, !dbg !10640
  %cmp48 = icmp slt i32 %47, %49, !dbg !10641
  br i1 %cmp48, label %for.body50, label %for.end70, !dbg !10642

for.body50:                                       ; preds = %for.cond46
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10643
  %gb51 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 1, !dbg !10646
  %call52 = call i32 @get_bits(%struct.GetBitContext* %gb51, i32 3), !dbg !10647
  store i32 %call52, i32* %n, align 4, !dbg !10648
  %tobool53 = icmp ne i32 %call52, 0, !dbg !10648
  br i1 %tobool53, label %land.lhs.true54, label %if.end58, !dbg !10649

land.lhs.true54:                                  ; preds = %for.body50
  %51 = load i32, i32* %xch_base.addr, align 4, !dbg !10650
  %tobool55 = icmp ne i32 %51, 0, !dbg !10650
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !10652

if.then56:                                        ; preds = %land.lhs.true54
  %52 = load i32, i32* %xch_base.addr, align 4, !dbg !10653
  %sub = sub nsw i32 %52, 1, !dbg !10654
  %53 = load i32, i32* %n, align 4, !dbg !10655
  %add57 = add nsw i32 %53, %sub, !dbg !10655
  store i32 %add57, i32* %n, align 4, !dbg !10655
  br label %if.end58, !dbg !10656

if.end58:                                         ; preds = %if.then56, %land.lhs.true54, %for.body50
  %54 = load i32, i32* %n, align 4, !dbg !10657
  %55 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10659
  %x96_nchannels59 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %55, i32 0, i32 57, !dbg !10660
  %56 = load i32, i32* %x96_nchannels59, align 4, !dbg !10660
  %cmp60 = icmp sgt i32 %54, %56, !dbg !10661
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !10662

if.then62:                                        ; preds = %if.end58
  %57 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10663
  %avctx63 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %57, i32 0, i32 0, !dbg !10665
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx63, align 32, !dbg !10665
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !10663
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i32 0, i32 0)), !dbg !10666
  store i32 -1094995529, i32* %retval, align 4, !dbg !10667
  br label %return, !dbg !10667

if.end64:                                         ; preds = %if.end58
  %60 = load i32, i32* %n, align 4, !dbg !10668
  %conv65 = trunc i32 %60 to i8, !dbg !10668
  %61 = load i32, i32* %ch, align 4, !dbg !10669
  %idxprom66 = sext i32 %61 to i64, !dbg !10670
  %62 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10670
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %62, i32 0, i32 27, !dbg !10671
  %arrayidx67 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom66, !dbg !10670
  store i8 %conv65, i8* %arrayidx67, align 1, !dbg !10672
  br label %for.inc68, !dbg !10673

for.inc68:                                        ; preds = %if.end64
  %63 = load i32, i32* %ch, align 4, !dbg !10674
  %inc69 = add nsw i32 %63, 1, !dbg !10674
  store i32 %inc69, i32* %ch, align 4, !dbg !10674
  br label %for.cond46, !dbg !10676, !llvm.loop !10677

for.end70:                                        ; preds = %for.cond46
  %64 = load i32, i32* %xch_base.addr, align 4, !dbg !10679
  store i32 %64, i32* %ch, align 4, !dbg !10681
  br label %for.cond71, !dbg !10682

for.cond71:                                       ; preds = %for.inc90, %for.end70
  %65 = load i32, i32* %ch, align 4, !dbg !10683
  %66 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10686
  %x96_nchannels72 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %66, i32 0, i32 57, !dbg !10687
  %67 = load i32, i32* %x96_nchannels72, align 4, !dbg !10687
  %cmp73 = icmp slt i32 %65, %67, !dbg !10688
  br i1 %cmp73, label %for.body75, label %for.end92, !dbg !10689

for.body75:                                       ; preds = %for.cond71
  %68 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10690
  %gb76 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %68, i32 0, i32 1, !dbg !10692
  %call77 = call i32 @get_bits(%struct.GetBitContext* %gb76, i32 3), !dbg !10693
  %conv78 = trunc i32 %call77 to i8, !dbg !10693
  %69 = load i32, i32* %ch, align 4, !dbg !10694
  %idxprom79 = sext i32 %69 to i64, !dbg !10695
  %70 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10695
  %scale_factor_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %70, i32 0, i32 29, !dbg !10696
  %arrayidx80 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel, i64 0, i64 %idxprom79, !dbg !10695
  store i8 %conv78, i8* %arrayidx80, align 1, !dbg !10697
  %71 = load i32, i32* %ch, align 4, !dbg !10698
  %idxprom81 = sext i32 %71 to i64, !dbg !10700
  %72 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10700
  %scale_factor_sel82 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %72, i32 0, i32 29, !dbg !10701
  %arrayidx83 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel82, i64 0, i64 %idxprom81, !dbg !10700
  %73 = load i8, i8* %arrayidx83, align 1, !dbg !10700
  %conv84 = sext i8 %73 to i32, !dbg !10700
  %cmp85 = icmp sge i32 %conv84, 6, !dbg !10702
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !10703

if.then87:                                        ; preds = %for.body75
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10704
  %avctx88 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 0, !dbg !10706
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 32, !dbg !10706
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !10704
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.66, i32 0, i32 0)), !dbg !10707
  store i32 -1094995529, i32* %retval, align 4, !dbg !10708
  br label %return, !dbg !10708

if.end89:                                         ; preds = %for.body75
  br label %for.inc90, !dbg !10709

for.inc90:                                        ; preds = %if.end89
  %77 = load i32, i32* %ch, align 4, !dbg !10710
  %inc91 = add nsw i32 %77, 1, !dbg !10710
  store i32 %inc91, i32* %ch, align 4, !dbg !10710
  br label %for.cond71, !dbg !10712, !llvm.loop !10713

for.end92:                                        ; preds = %for.cond71
  %78 = load i32, i32* %xch_base.addr, align 4, !dbg !10715
  store i32 %78, i32* %ch, align 4, !dbg !10717
  br label %for.cond93, !dbg !10718

for.cond93:                                       ; preds = %for.inc103, %for.end92
  %79 = load i32, i32* %ch, align 4, !dbg !10719
  %80 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10722
  %x96_nchannels94 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %80, i32 0, i32 57, !dbg !10723
  %81 = load i32, i32* %x96_nchannels94, align 4, !dbg !10723
  %cmp95 = icmp slt i32 %79, %81, !dbg !10724
  br i1 %cmp95, label %for.body97, label %for.end105, !dbg !10725

for.body97:                                       ; preds = %for.cond93
  %82 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10726
  %gb98 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %82, i32 0, i32 1, !dbg !10727
  %call99 = call i32 @get_bits(%struct.GetBitContext* %gb98, i32 3), !dbg !10728
  %conv100 = trunc i32 %call99 to i8, !dbg !10728
  %83 = load i32, i32* %ch, align 4, !dbg !10729
  %idxprom101 = sext i32 %83 to i64, !dbg !10730
  %84 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10730
  %bit_allocation_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %84, i32 0, i32 30, !dbg !10731
  %arrayidx102 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_allocation_sel, i64 0, i64 %idxprom101, !dbg !10730
  store i8 %conv100, i8* %arrayidx102, align 1, !dbg !10732
  br label %for.inc103, !dbg !10730

for.inc103:                                       ; preds = %for.body97
  %85 = load i32, i32* %ch, align 4, !dbg !10733
  %inc104 = add nsw i32 %85, 1, !dbg !10733
  store i32 %inc104, i32* %ch, align 4, !dbg !10733
  br label %for.cond93, !dbg !10735, !llvm.loop !10736

for.end105:                                       ; preds = %for.cond93
  store i32 0, i32* %n, align 4, !dbg !10738
  br label %for.cond106, !dbg !10740

for.cond106:                                      ; preds = %for.inc131, %for.end105
  %86 = load i32, i32* %n, align 4, !dbg !10741
  %87 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10744
  %x96_high_res107 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %87, i32 0, i32 58, !dbg !10745
  %88 = load i32, i32* %x96_high_res107, align 16, !dbg !10745
  %mul108 = mul nsw i32 4, %88, !dbg !10746
  %add109 = add nsw i32 6, %mul108, !dbg !10747
  %cmp110 = icmp slt i32 %86, %add109, !dbg !10748
  br i1 %cmp110, label %for.body112, label %for.end133, !dbg !10749

for.body112:                                      ; preds = %for.cond106
  %89 = load i32, i32* %xch_base.addr, align 4, !dbg !10750
  store i32 %89, i32* %ch, align 4, !dbg !10752
  br label %for.cond113, !dbg !10753

for.cond113:                                      ; preds = %for.inc128, %for.body112
  %90 = load i32, i32* %ch, align 4, !dbg !10754
  %91 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10757
  %x96_nchannels114 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %91, i32 0, i32 57, !dbg !10758
  %92 = load i32, i32* %x96_nchannels114, align 4, !dbg !10758
  %cmp115 = icmp slt i32 %90, %92, !dbg !10759
  br i1 %cmp115, label %for.body117, label %for.end130, !dbg !10760

for.body117:                                      ; preds = %for.cond113
  %93 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10761
  %gb118 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %93, i32 0, i32 1, !dbg !10762
  %94 = load i32, i32* %n, align 4, !dbg !10763
  %idxprom119 = sext i32 %94 to i64, !dbg !10764
  %arrayidx120 = getelementptr inbounds [10 x i8], [10 x i8]* @ff_dca_quant_index_sel_nbits, i64 0, i64 %idxprom119, !dbg !10764
  %95 = load i8, i8* %arrayidx120, align 1, !dbg !10764
  %conv121 = zext i8 %95 to i32, !dbg !10764
  %call122 = call i32 @get_bits(%struct.GetBitContext* %gb118, i32 %conv121), !dbg !10765
  %conv123 = trunc i32 %call122 to i8, !dbg !10765
  %96 = load i32, i32* %n, align 4, !dbg !10766
  %idxprom124 = sext i32 %96 to i64, !dbg !10767
  %97 = load i32, i32* %ch, align 4, !dbg !10768
  %idxprom125 = sext i32 %97 to i64, !dbg !10767
  %98 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10767
  %quant_index_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %98, i32 0, i32 31, !dbg !10769
  %arrayidx126 = getelementptr inbounds [7 x [10 x i8]], [7 x [10 x i8]]* %quant_index_sel, i64 0, i64 %idxprom125, !dbg !10767
  %arrayidx127 = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx126, i64 0, i64 %idxprom124, !dbg !10767
  store i8 %conv123, i8* %arrayidx127, align 1, !dbg !10770
  br label %for.inc128, !dbg !10767

for.inc128:                                       ; preds = %for.body117
  %99 = load i32, i32* %ch, align 4, !dbg !10771
  %inc129 = add nsw i32 %99, 1, !dbg !10771
  store i32 %inc129, i32* %ch, align 4, !dbg !10771
  br label %for.cond113, !dbg !10773, !llvm.loop !10774

for.end130:                                       ; preds = %for.cond113
  br label %for.inc131, !dbg !10776

for.inc131:                                       ; preds = %for.end130
  %100 = load i32, i32* %n, align 4, !dbg !10778
  %inc132 = add nsw i32 %100, 1, !dbg !10778
  store i32 %inc132, i32* %n, align 4, !dbg !10778
  br label %for.cond106, !dbg !10780, !llvm.loop !10781

for.end133:                                       ; preds = %for.cond106
  %101 = load i32, i32* %exss.addr, align 4, !dbg !10783
  %tobool134 = icmp ne i32 %101, 0, !dbg !10783
  br i1 %tobool134, label %if.then135, label %if.else144, !dbg !10785

if.then135:                                       ; preds = %for.end133
  %102 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10786
  %gb136 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %102, i32 0, i32 1, !dbg !10789
  %103 = load i32, i32* %header_pos, align 4, !dbg !10790
  %104 = load i32, i32* %header_size, align 4, !dbg !10791
  %mul137 = mul nsw i32 %104, 8, !dbg !10792
  %add138 = add nsw i32 %103, %mul137, !dbg !10793
  %call139 = call i32 @ff_dca_seek_bits(%struct.GetBitContext* %gb136, i32 %add138), !dbg !10794
  %tobool140 = icmp ne i32 %call139, 0, !dbg !10794
  br i1 %tobool140, label %if.then141, label %if.end143, !dbg !10795

if.then141:                                       ; preds = %if.then135
  %105 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10796
  %avctx142 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %105, i32 0, i32 0, !dbg !10798
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx142, align 32, !dbg !10798
  %107 = bitcast %struct.AVCodecContext* %106 to i8*, !dbg !10796
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.67, i32 0, i32 0)), !dbg !10799
  store i32 -1094995529, i32* %retval, align 4, !dbg !10800
  br label %return, !dbg !10800

if.end143:                                        ; preds = %if.then135
  br label %if.end149, !dbg !10801

if.else144:                                       ; preds = %for.end133
  %108 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10802
  %crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %108, i32 0, i32 3, !dbg !10805
  %109 = load i32, i32* %crc_present, align 8, !dbg !10805
  %tobool145 = icmp ne i32 %109, 0, !dbg !10802
  br i1 %tobool145, label %if.then146, label %if.end148, !dbg !10806

if.then146:                                       ; preds = %if.else144
  %110 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10807
  %gb147 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %110, i32 0, i32 1, !dbg !10808
  call void @skip_bits(%struct.GetBitContext* %gb147, i32 16), !dbg !10809
  br label %if.end148, !dbg !10809

if.end148:                                        ; preds = %if.then146, %if.else144
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end143
  store i32 0, i32* %retval, align 4, !dbg !10810
  br label %return, !dbg !10810

return:                                           ; preds = %if.end149, %if.then141, %if.then87, %if.then62, %if.then39, %if.then23, %if.then11, %if.then
  %111 = load i32, i32* %retval, align 4, !dbg !10811
  ret i32 %111, !dbg !10811
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_subframe_header(%struct.DCACoreDecoder* %s, i32 %xch_base) #0 !dbg !10812 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %xch_base.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  %ret = alloca i32, align 4
  %sel = alloca i32, align 4
  %abits = alloca i32, align 4
  %sel105 = alloca i32, align 4
  %scale_index = alloca i32, align 4
  %src_ch = alloca i32, align 4
  %sel174 = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !10813, metadata !2194), !dbg !10814
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !10815, metadata !2194), !dbg !10816
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10817, metadata !2194), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %band, metadata !10819, metadata !2194), !dbg !10820
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10821, metadata !2194), !dbg !10822
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10823
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 1, !dbg !10825
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !10826
  %cmp = icmp slt i32 %call, 0, !dbg !10827
  br i1 %cmp, label %if.then, label %if.end, !dbg !10828

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !10829
  br label %return, !dbg !10829

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %xch_base.addr, align 4, !dbg !10830
  store i32 %1, i32* %ch, align 4, !dbg !10832
  br label %for.cond, !dbg !10833

for.cond:                                         ; preds = %for.inc13, %if.end
  %2 = load i32, i32* %ch, align 4, !dbg !10834
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10837
  %x96_nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 57, !dbg !10838
  %4 = load i32, i32* %x96_nchannels, align 4, !dbg !10838
  %cmp1 = icmp slt i32 %2, %4, !dbg !10839
  br i1 %cmp1, label %for.body, label %for.end15, !dbg !10840

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10841
  %x96_subband_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %5, i32 0, i32 59, !dbg !10843
  %6 = load i32, i32* %x96_subband_start, align 4, !dbg !10843
  store i32 %6, i32* %band, align 4, !dbg !10844
  br label %for.cond2, !dbg !10845

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %band, align 4, !dbg !10846
  %8 = load i32, i32* %ch, align 4, !dbg !10849
  %idxprom = sext i32 %8 to i64, !dbg !10850
  %9 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10850
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %9, i32 0, i32 25, !dbg !10851
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom, !dbg !10850
  %10 = load i8, i8* %arrayidx, align 1, !dbg !10850
  %conv = sext i8 %10 to i32, !dbg !10850
  %cmp3 = icmp slt i32 %7, %conv, !dbg !10852
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !10853

for.body5:                                        ; preds = %for.cond2
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10854
  %gb6 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 1, !dbg !10855
  %call7 = call i32 @get_bits1(%struct.GetBitContext* %gb6), !dbg !10856
  %conv8 = trunc i32 %call7 to i8, !dbg !10856
  %12 = load i32, i32* %band, align 4, !dbg !10857
  %idxprom9 = sext i32 %12 to i64, !dbg !10858
  %13 = load i32, i32* %ch, align 4, !dbg !10859
  %idxprom10 = sext i32 %13 to i64, !dbg !10858
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10858
  %prediction_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 34, !dbg !10860
  %arrayidx11 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode, i64 0, i64 %idxprom10, !dbg !10858
  %arrayidx12 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !10858
  store i8 %conv8, i8* %arrayidx12, align 1, !dbg !10861
  br label %for.inc, !dbg !10858

for.inc:                                          ; preds = %for.body5
  %15 = load i32, i32* %band, align 4, !dbg !10862
  %inc = add nsw i32 %15, 1, !dbg !10862
  store i32 %inc, i32* %band, align 4, !dbg !10862
  br label %for.cond2, !dbg !10864, !llvm.loop !10865

for.end:                                          ; preds = %for.cond2
  br label %for.inc13, !dbg !10867

for.inc13:                                        ; preds = %for.end
  %16 = load i32, i32* %ch, align 4, !dbg !10869
  %inc14 = add nsw i32 %16, 1, !dbg !10869
  store i32 %inc14, i32* %ch, align 4, !dbg !10869
  br label %for.cond, !dbg !10871, !llvm.loop !10872

for.end15:                                        ; preds = %for.cond
  %17 = load i32, i32* %xch_base.addr, align 4, !dbg !10874
  store i32 %17, i32* %ch, align 4, !dbg !10876
  br label %for.cond16, !dbg !10877

for.cond16:                                       ; preds = %for.inc47, %for.end15
  %18 = load i32, i32* %ch, align 4, !dbg !10878
  %19 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10881
  %x96_nchannels17 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %19, i32 0, i32 57, !dbg !10882
  %20 = load i32, i32* %x96_nchannels17, align 4, !dbg !10882
  %cmp18 = icmp slt i32 %18, %20, !dbg !10883
  br i1 %cmp18, label %for.body20, label %for.end49, !dbg !10884

for.body20:                                       ; preds = %for.cond16
  %21 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10885
  %x96_subband_start21 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %21, i32 0, i32 59, !dbg !10887
  %22 = load i32, i32* %x96_subband_start21, align 4, !dbg !10887
  store i32 %22, i32* %band, align 4, !dbg !10888
  br label %for.cond22, !dbg !10889

for.cond22:                                       ; preds = %for.inc44, %for.body20
  %23 = load i32, i32* %band, align 4, !dbg !10890
  %24 = load i32, i32* %ch, align 4, !dbg !10893
  %idxprom23 = sext i32 %24 to i64, !dbg !10894
  %25 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10894
  %nsubbands24 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %25, i32 0, i32 25, !dbg !10895
  %arrayidx25 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands24, i64 0, i64 %idxprom23, !dbg !10894
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !10894
  %conv26 = sext i8 %26 to i32, !dbg !10894
  %cmp27 = icmp slt i32 %23, %conv26, !dbg !10896
  br i1 %cmp27, label %for.body29, label %for.end46, !dbg !10897

for.body29:                                       ; preds = %for.cond22
  %27 = load i32, i32* %band, align 4, !dbg !10898
  %idxprom30 = sext i32 %27 to i64, !dbg !10900
  %28 = load i32, i32* %ch, align 4, !dbg !10901
  %idxprom31 = sext i32 %28 to i64, !dbg !10900
  %29 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10900
  %prediction_mode32 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %29, i32 0, i32 34, !dbg !10902
  %arrayidx33 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode32, i64 0, i64 %idxprom31, !dbg !10900
  %arrayidx34 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !10900
  %30 = load i8, i8* %arrayidx34, align 1, !dbg !10900
  %tobool = icmp ne i8 %30, 0, !dbg !10900
  br i1 %tobool, label %if.then35, label %if.end43, !dbg !10903

if.then35:                                        ; preds = %for.body29
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10904
  %gb36 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 1, !dbg !10905
  %call37 = call i32 @get_bits(%struct.GetBitContext* %gb36, i32 12), !dbg !10906
  %conv38 = trunc i32 %call37 to i16, !dbg !10906
  %32 = load i32, i32* %band, align 4, !dbg !10907
  %idxprom39 = sext i32 %32 to i64, !dbg !10908
  %33 = load i32, i32* %ch, align 4, !dbg !10909
  %idxprom40 = sext i32 %33 to i64, !dbg !10908
  %34 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10908
  %prediction_vq_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %34, i32 0, i32 35, !dbg !10910
  %arrayidx41 = getelementptr inbounds [7 x [64 x i16]], [7 x [64 x i16]]* %prediction_vq_index, i64 0, i64 %idxprom40, !dbg !10908
  %arrayidx42 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx41, i64 0, i64 %idxprom39, !dbg !10908
  store i16 %conv38, i16* %arrayidx42, align 2, !dbg !10911
  br label %if.end43, !dbg !10908

if.end43:                                         ; preds = %if.then35, %for.body29
  br label %for.inc44, !dbg !10912

for.inc44:                                        ; preds = %if.end43
  %35 = load i32, i32* %band, align 4, !dbg !10914
  %inc45 = add nsw i32 %35, 1, !dbg !10914
  store i32 %inc45, i32* %band, align 4, !dbg !10914
  br label %for.cond22, !dbg !10916, !llvm.loop !10917

for.end46:                                        ; preds = %for.cond22
  br label %for.inc47, !dbg !10919

for.inc47:                                        ; preds = %for.end46
  %36 = load i32, i32* %ch, align 4, !dbg !10921
  %inc48 = add nsw i32 %36, 1, !dbg !10921
  store i32 %inc48, i32* %ch, align 4, !dbg !10921
  br label %for.cond16, !dbg !10923, !llvm.loop !10924

for.end49:                                        ; preds = %for.cond16
  %37 = load i32, i32* %xch_base.addr, align 4, !dbg !10926
  store i32 %37, i32* %ch, align 4, !dbg !10928
  br label %for.cond50, !dbg !10929

for.cond50:                                       ; preds = %for.inc97, %for.end49
  %38 = load i32, i32* %ch, align 4, !dbg !10930
  %39 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10933
  %x96_nchannels51 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %39, i32 0, i32 57, !dbg !10934
  %40 = load i32, i32* %x96_nchannels51, align 4, !dbg !10934
  %cmp52 = icmp slt i32 %38, %40, !dbg !10935
  br i1 %cmp52, label %for.body54, label %for.end99, !dbg !10936

for.body54:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !10937, metadata !2194), !dbg !10939
  %41 = load i32, i32* %ch, align 4, !dbg !10940
  %idxprom55 = sext i32 %41 to i64, !dbg !10941
  %42 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10941
  %bit_allocation_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %42, i32 0, i32 30, !dbg !10942
  %arrayidx56 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_allocation_sel, i64 0, i64 %idxprom55, !dbg !10941
  %43 = load i8, i8* %arrayidx56, align 1, !dbg !10941
  %conv57 = sext i8 %43 to i32, !dbg !10941
  store i32 %conv57, i32* %sel, align 4, !dbg !10939
  call void @llvm.dbg.declare(metadata i32* %abits, metadata !10943, metadata !2194), !dbg !10944
  store i32 0, i32* %abits, align 4, !dbg !10944
  %44 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10945
  %x96_subband_start58 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %44, i32 0, i32 59, !dbg !10947
  %45 = load i32, i32* %x96_subband_start58, align 4, !dbg !10947
  store i32 %45, i32* %band, align 4, !dbg !10948
  br label %for.cond59, !dbg !10949

for.cond59:                                       ; preds = %for.inc94, %for.body54
  %46 = load i32, i32* %band, align 4, !dbg !10950
  %47 = load i32, i32* %ch, align 4, !dbg !10953
  %idxprom60 = sext i32 %47 to i64, !dbg !10954
  %48 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10954
  %nsubbands61 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %48, i32 0, i32 25, !dbg !10955
  %arrayidx62 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands61, i64 0, i64 %idxprom60, !dbg !10954
  %49 = load i8, i8* %arrayidx62, align 1, !dbg !10954
  %conv63 = sext i8 %49 to i32, !dbg !10954
  %cmp64 = icmp slt i32 %46, %conv63, !dbg !10956
  br i1 %cmp64, label %for.body66, label %for.end96, !dbg !10957

for.body66:                                       ; preds = %for.cond59
  %50 = load i32, i32* %sel, align 4, !dbg !10958
  %cmp67 = icmp slt i32 %50, 7, !dbg !10961
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !10962

if.then69:                                        ; preds = %for.body66
  %51 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10963
  %gb70 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %51, i32 0, i32 1, !dbg !10964
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10965
  %x96_high_res = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 58, !dbg !10966
  %53 = load i32, i32* %x96_high_res, align 16, !dbg !10966
  %mul = mul nsw i32 2, %53, !dbg !10967
  %add = add nsw i32 5, %mul, !dbg !10968
  %idxprom71 = sext i32 %add to i64, !dbg !10969
  %arrayidx72 = getelementptr inbounds [10 x %struct.DCAVLC], [10 x %struct.DCAVLC]* @ff_dca_vlc_quant_index, i64 0, i64 %idxprom71, !dbg !10969
  %54 = load i32, i32* %sel, align 4, !dbg !10970
  %call73 = call i32 @dca_get_vlc(%struct.GetBitContext* %gb70, %struct.DCAVLC* %arrayidx72, i32 %54), !dbg !10971
  %55 = load i32, i32* %abits, align 4, !dbg !10972
  %add74 = add nsw i32 %55, %call73, !dbg !10972
  store i32 %add74, i32* %abits, align 4, !dbg !10972
  br label %if.end79, !dbg !10973

if.else:                                          ; preds = %for.body66
  %56 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10974
  %gb75 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %56, i32 0, i32 1, !dbg !10975
  %57 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10976
  %x96_high_res76 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %57, i32 0, i32 58, !dbg !10977
  %58 = load i32, i32* %x96_high_res76, align 16, !dbg !10977
  %add77 = add nsw i32 3, %58, !dbg !10978
  %call78 = call i32 @get_bits(%struct.GetBitContext* %gb75, i32 %add77), !dbg !10979
  store i32 %call78, i32* %abits, align 4, !dbg !10980
  br label %if.end79

if.end79:                                         ; preds = %if.else, %if.then69
  %59 = load i32, i32* %abits, align 4, !dbg !10981
  %cmp80 = icmp slt i32 %59, 0, !dbg !10983
  br i1 %cmp80, label %if.then87, label %lor.lhs.false, !dbg !10984

lor.lhs.false:                                    ; preds = %if.end79
  %60 = load i32, i32* %abits, align 4, !dbg !10985
  %61 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10987
  %x96_high_res82 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %61, i32 0, i32 58, !dbg !10988
  %62 = load i32, i32* %x96_high_res82, align 16, !dbg !10988
  %mul83 = mul nsw i32 8, %62, !dbg !10989
  %add84 = add nsw i32 7, %mul83, !dbg !10990
  %cmp85 = icmp sgt i32 %60, %add84, !dbg !10991
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !10992

if.then87:                                        ; preds = %lor.lhs.false, %if.end79
  %63 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !10993
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %63, i32 0, i32 0, !dbg !10995
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !10995
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !10993
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0)), !dbg !10996
  store i32 -1094995529, i32* %retval, align 4, !dbg !10997
  br label %return, !dbg !10997

if.end88:                                         ; preds = %lor.lhs.false
  %66 = load i32, i32* %abits, align 4, !dbg !10998
  %conv89 = trunc i32 %66 to i8, !dbg !10998
  %67 = load i32, i32* %band, align 4, !dbg !10999
  %idxprom90 = sext i32 %67 to i64, !dbg !11000
  %68 = load i32, i32* %ch, align 4, !dbg !11001
  %idxprom91 = sext i32 %68 to i64, !dbg !11000
  %69 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11000
  %bit_allocation = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %69, i32 0, i32 36, !dbg !11002
  %arrayidx92 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation, i64 0, i64 %idxprom91, !dbg !11000
  %arrayidx93 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx92, i64 0, i64 %idxprom90, !dbg !11000
  store i8 %conv89, i8* %arrayidx93, align 1, !dbg !11003
  br label %for.inc94, !dbg !11004

for.inc94:                                        ; preds = %if.end88
  %70 = load i32, i32* %band, align 4, !dbg !11005
  %inc95 = add nsw i32 %70, 1, !dbg !11005
  store i32 %inc95, i32* %band, align 4, !dbg !11005
  br label %for.cond59, !dbg !11007, !llvm.loop !11008

for.end96:                                        ; preds = %for.cond59
  br label %for.inc97, !dbg !11010

for.inc97:                                        ; preds = %for.end96
  %71 = load i32, i32* %ch, align 4, !dbg !11011
  %inc98 = add nsw i32 %71, 1, !dbg !11011
  store i32 %inc98, i32* %ch, align 4, !dbg !11011
  br label %for.cond50, !dbg !11013, !llvm.loop !11014

for.end99:                                        ; preds = %for.cond50
  %72 = load i32, i32* %xch_base.addr, align 4, !dbg !11016
  store i32 %72, i32* %ch, align 4, !dbg !11018
  br label %for.cond100, !dbg !11019

for.cond100:                                      ; preds = %for.inc132, %for.end99
  %73 = load i32, i32* %ch, align 4, !dbg !11020
  %74 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11023
  %x96_nchannels101 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %74, i32 0, i32 57, !dbg !11024
  %75 = load i32, i32* %x96_nchannels101, align 4, !dbg !11024
  %cmp102 = icmp slt i32 %73, %75, !dbg !11025
  br i1 %cmp102, label %for.body104, label %for.end134, !dbg !11026

for.body104:                                      ; preds = %for.cond100
  call void @llvm.dbg.declare(metadata i32* %sel105, metadata !11027, metadata !2194), !dbg !11029
  %76 = load i32, i32* %ch, align 4, !dbg !11030
  %idxprom106 = sext i32 %76 to i64, !dbg !11031
  %77 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11031
  %scale_factor_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %77, i32 0, i32 29, !dbg !11032
  %arrayidx107 = getelementptr inbounds [7 x i8], [7 x i8]* %scale_factor_sel, i64 0, i64 %idxprom106, !dbg !11031
  %78 = load i8, i8* %arrayidx107, align 1, !dbg !11031
  %conv108 = sext i8 %78 to i32, !dbg !11031
  store i32 %conv108, i32* %sel105, align 4, !dbg !11029
  call void @llvm.dbg.declare(metadata i32* %scale_index, metadata !11033, metadata !2194), !dbg !11034
  store i32 0, i32* %scale_index, align 4, !dbg !11034
  %79 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11035
  %x96_subband_start109 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %79, i32 0, i32 59, !dbg !11037
  %80 = load i32, i32* %x96_subband_start109, align 4, !dbg !11037
  store i32 %80, i32* %band, align 4, !dbg !11038
  br label %for.cond110, !dbg !11039

for.cond110:                                      ; preds = %for.inc129, %for.body104
  %81 = load i32, i32* %band, align 4, !dbg !11040
  %82 = load i32, i32* %ch, align 4, !dbg !11043
  %idxprom111 = sext i32 %82 to i64, !dbg !11044
  %83 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11044
  %nsubbands112 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %83, i32 0, i32 25, !dbg !11045
  %arrayidx113 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands112, i64 0, i64 %idxprom111, !dbg !11044
  %84 = load i8, i8* %arrayidx113, align 1, !dbg !11044
  %conv114 = sext i8 %84 to i32, !dbg !11044
  %cmp115 = icmp slt i32 %81, %conv114, !dbg !11046
  br i1 %cmp115, label %for.body117, label %for.end131, !dbg !11047

for.body117:                                      ; preds = %for.cond110
  %85 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11048
  %86 = load i32, i32* %sel105, align 4, !dbg !11051
  %call118 = call i32 @parse_scale(%struct.DCACoreDecoder* %85, i32* %scale_index, i32 %86), !dbg !11052
  store i32 %call118, i32* %ret, align 4, !dbg !11053
  %cmp119 = icmp slt i32 %call118, 0, !dbg !11054
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !11055

if.then121:                                       ; preds = %for.body117
  %87 = load i32, i32* %ret, align 4, !dbg !11056
  store i32 %87, i32* %retval, align 4, !dbg !11057
  br label %return, !dbg !11057

if.end122:                                        ; preds = %for.body117
  %88 = load i32, i32* %ret, align 4, !dbg !11058
  %89 = load i32, i32* %band, align 4, !dbg !11059
  %and = and i32 %89, 1, !dbg !11060
  %idxprom123 = sext i32 %and to i64, !dbg !11061
  %90 = load i32, i32* %band, align 4, !dbg !11062
  %shr = ashr i32 %90, 1, !dbg !11063
  %idxprom124 = sext i32 %shr to i64, !dbg !11061
  %91 = load i32, i32* %ch, align 4, !dbg !11064
  %idxprom125 = sext i32 %91 to i64, !dbg !11061
  %92 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11061
  %scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %92, i32 0, i32 38, !dbg !11065
  %arrayidx126 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors, i64 0, i64 %idxprom125, !dbg !11061
  %arrayidx127 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx126, i64 0, i64 %idxprom124, !dbg !11061
  %arrayidx128 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx127, i64 0, i64 %idxprom123, !dbg !11061
  store i32 %88, i32* %arrayidx128, align 4, !dbg !11066
  br label %for.inc129, !dbg !11067

for.inc129:                                       ; preds = %if.end122
  %93 = load i32, i32* %band, align 4, !dbg !11068
  %inc130 = add nsw i32 %93, 1, !dbg !11068
  store i32 %inc130, i32* %band, align 4, !dbg !11068
  br label %for.cond110, !dbg !11070, !llvm.loop !11071

for.end131:                                       ; preds = %for.cond110
  br label %for.inc132, !dbg !11073

for.inc132:                                       ; preds = %for.end131
  %94 = load i32, i32* %ch, align 4, !dbg !11074
  %inc133 = add nsw i32 %94, 1, !dbg !11074
  store i32 %inc133, i32* %ch, align 4, !dbg !11074
  br label %for.cond100, !dbg !11076, !llvm.loop !11077

for.end134:                                       ; preds = %for.cond100
  %95 = load i32, i32* %xch_base.addr, align 4, !dbg !11079
  store i32 %95, i32* %ch, align 4, !dbg !11081
  br label %for.cond135, !dbg !11082

for.cond135:                                      ; preds = %for.inc159, %for.end134
  %96 = load i32, i32* %ch, align 4, !dbg !11083
  %97 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11086
  %x96_nchannels136 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %97, i32 0, i32 57, !dbg !11087
  %98 = load i32, i32* %x96_nchannels136, align 4, !dbg !11087
  %cmp137 = icmp slt i32 %96, %98, !dbg !11088
  br i1 %cmp137, label %for.body139, label %for.end161, !dbg !11089

for.body139:                                      ; preds = %for.cond135
  %99 = load i32, i32* %ch, align 4, !dbg !11090
  %idxprom140 = sext i32 %99 to i64, !dbg !11093
  %100 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11093
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %100, i32 0, i32 27, !dbg !11094
  %arrayidx141 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom140, !dbg !11093
  %101 = load i8, i8* %arrayidx141, align 1, !dbg !11093
  %tobool142 = icmp ne i8 %101, 0, !dbg !11093
  br i1 %tobool142, label %if.then143, label %if.end158, !dbg !11095

if.then143:                                       ; preds = %for.body139
  %102 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11096
  %gb144 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %102, i32 0, i32 1, !dbg !11098
  %call145 = call i32 @get_bits(%struct.GetBitContext* %gb144, i32 3), !dbg !11099
  %conv146 = trunc i32 %call145 to i8, !dbg !11099
  %103 = load i32, i32* %ch, align 4, !dbg !11100
  %idxprom147 = sext i32 %103 to i64, !dbg !11101
  %104 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11101
  %joint_scale_sel = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %104, i32 0, i32 39, !dbg !11102
  %arrayidx148 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel, i64 0, i64 %idxprom147, !dbg !11101
  store i8 %conv146, i8* %arrayidx148, align 1, !dbg !11103
  %105 = load i32, i32* %ch, align 4, !dbg !11104
  %idxprom149 = sext i32 %105 to i64, !dbg !11106
  %106 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11106
  %joint_scale_sel150 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %106, i32 0, i32 39, !dbg !11107
  %arrayidx151 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel150, i64 0, i64 %idxprom149, !dbg !11106
  %107 = load i8, i8* %arrayidx151, align 1, !dbg !11106
  %conv152 = sext i8 %107 to i32, !dbg !11106
  %cmp153 = icmp eq i32 %conv152, 7, !dbg !11108
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !11109

if.then155:                                       ; preds = %if.then143
  %108 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11110
  %avctx156 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %108, i32 0, i32 0, !dbg !11112
  %109 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx156, align 32, !dbg !11112
  %110 = bitcast %struct.AVCodecContext* %109 to i8*, !dbg !11110
  call void (i8*, i32, i8*, ...) @av_log(i8* %110, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.69, i32 0, i32 0)), !dbg !11113
  store i32 -1094995529, i32* %retval, align 4, !dbg !11114
  br label %return, !dbg !11114

if.end157:                                        ; preds = %if.then143
  br label %if.end158, !dbg !11115

if.end158:                                        ; preds = %if.end157, %for.body139
  br label %for.inc159, !dbg !11116

for.inc159:                                       ; preds = %if.end158
  %111 = load i32, i32* %ch, align 4, !dbg !11117
  %inc160 = add nsw i32 %111, 1, !dbg !11117
  store i32 %inc160, i32* %ch, align 4, !dbg !11117
  br label %for.cond135, !dbg !11119, !llvm.loop !11120

for.end161:                                       ; preds = %for.cond135
  %112 = load i32, i32* %xch_base.addr, align 4, !dbg !11122
  store i32 %112, i32* %ch, align 4, !dbg !11124
  br label %for.cond162, !dbg !11125

for.cond162:                                      ; preds = %for.inc204, %for.end161
  %113 = load i32, i32* %ch, align 4, !dbg !11126
  %114 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11129
  %x96_nchannels163 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %114, i32 0, i32 57, !dbg !11130
  %115 = load i32, i32* %x96_nchannels163, align 4, !dbg !11130
  %cmp164 = icmp slt i32 %113, %115, !dbg !11131
  br i1 %cmp164, label %for.body166, label %for.end206, !dbg !11132

for.body166:                                      ; preds = %for.cond162
  call void @llvm.dbg.declare(metadata i32* %src_ch, metadata !11133, metadata !2194), !dbg !11135
  %116 = load i32, i32* %ch, align 4, !dbg !11136
  %idxprom167 = sext i32 %116 to i64, !dbg !11137
  %117 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11137
  %joint_intensity_index168 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %117, i32 0, i32 27, !dbg !11138
  %arrayidx169 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index168, i64 0, i64 %idxprom167, !dbg !11137
  %118 = load i8, i8* %arrayidx169, align 1, !dbg !11137
  %conv170 = sext i8 %118 to i32, !dbg !11137
  %sub = sub nsw i32 %conv170, 1, !dbg !11139
  store i32 %sub, i32* %src_ch, align 4, !dbg !11135
  %119 = load i32, i32* %src_ch, align 4, !dbg !11140
  %cmp171 = icmp sge i32 %119, 0, !dbg !11142
  br i1 %cmp171, label %if.then173, label %if.end203, !dbg !11143

if.then173:                                       ; preds = %for.body166
  call void @llvm.dbg.declare(metadata i32* %sel174, metadata !11144, metadata !2194), !dbg !11146
  %120 = load i32, i32* %ch, align 4, !dbg !11147
  %idxprom175 = sext i32 %120 to i64, !dbg !11148
  %121 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11148
  %joint_scale_sel176 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %121, i32 0, i32 39, !dbg !11149
  %arrayidx177 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_scale_sel176, i64 0, i64 %idxprom175, !dbg !11148
  %122 = load i8, i8* %arrayidx177, align 1, !dbg !11148
  %conv178 = sext i8 %122 to i32, !dbg !11148
  store i32 %conv178, i32* %sel174, align 4, !dbg !11146
  %123 = load i32, i32* %ch, align 4, !dbg !11150
  %idxprom179 = sext i32 %123 to i64, !dbg !11152
  %124 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11152
  %nsubbands180 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %124, i32 0, i32 25, !dbg !11153
  %arrayidx181 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands180, i64 0, i64 %idxprom179, !dbg !11152
  %125 = load i8, i8* %arrayidx181, align 1, !dbg !11152
  %conv182 = sext i8 %125 to i32, !dbg !11152
  store i32 %conv182, i32* %band, align 4, !dbg !11154
  br label %for.cond183, !dbg !11155

for.cond183:                                      ; preds = %for.inc200, %if.then173
  %126 = load i32, i32* %band, align 4, !dbg !11156
  %127 = load i32, i32* %src_ch, align 4, !dbg !11159
  %idxprom184 = sext i32 %127 to i64, !dbg !11160
  %128 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11160
  %nsubbands185 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %128, i32 0, i32 25, !dbg !11161
  %arrayidx186 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands185, i64 0, i64 %idxprom184, !dbg !11160
  %129 = load i8, i8* %arrayidx186, align 1, !dbg !11160
  %conv187 = sext i8 %129 to i32, !dbg !11160
  %cmp188 = icmp slt i32 %126, %conv187, !dbg !11162
  br i1 %cmp188, label %for.body190, label %for.end202, !dbg !11163

for.body190:                                      ; preds = %for.cond183
  %130 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11164
  %131 = load i32, i32* %sel174, align 4, !dbg !11167
  %call191 = call i32 @parse_joint_scale(%struct.DCACoreDecoder* %130, i32 %131), !dbg !11168
  store i32 %call191, i32* %ret, align 4, !dbg !11169
  %cmp192 = icmp slt i32 %call191, 0, !dbg !11170
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !11171

if.then194:                                       ; preds = %for.body190
  %132 = load i32, i32* %ret, align 4, !dbg !11172
  store i32 %132, i32* %retval, align 4, !dbg !11173
  br label %return, !dbg !11173

if.end195:                                        ; preds = %for.body190
  %133 = load i32, i32* %ret, align 4, !dbg !11174
  %134 = load i32, i32* %band, align 4, !dbg !11175
  %idxprom196 = sext i32 %134 to i64, !dbg !11176
  %135 = load i32, i32* %ch, align 4, !dbg !11177
  %idxprom197 = sext i32 %135 to i64, !dbg !11176
  %136 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11176
  %joint_scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %136, i32 0, i32 40, !dbg !11178
  %arrayidx198 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %joint_scale_factors, i64 0, i64 %idxprom197, !dbg !11176
  %arrayidx199 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx198, i64 0, i64 %idxprom196, !dbg !11176
  store i32 %133, i32* %arrayidx199, align 4, !dbg !11179
  br label %for.inc200, !dbg !11180

for.inc200:                                       ; preds = %if.end195
  %137 = load i32, i32* %band, align 4, !dbg !11181
  %inc201 = add nsw i32 %137, 1, !dbg !11181
  store i32 %inc201, i32* %band, align 4, !dbg !11181
  br label %for.cond183, !dbg !11183, !llvm.loop !11184

for.end202:                                       ; preds = %for.cond183
  br label %if.end203, !dbg !11186

if.end203:                                        ; preds = %for.end202, %for.body166
  br label %for.inc204, !dbg !11187

for.inc204:                                       ; preds = %if.end203
  %138 = load i32, i32* %ch, align 4, !dbg !11188
  %inc205 = add nsw i32 %138, 1, !dbg !11188
  store i32 %inc205, i32* %ch, align 4, !dbg !11188
  br label %for.cond162, !dbg !11190, !llvm.loop !11191

for.end206:                                       ; preds = %for.cond162
  %139 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11193
  %crc_present = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %139, i32 0, i32 3, !dbg !11195
  %140 = load i32, i32* %crc_present, align 8, !dbg !11195
  %tobool207 = icmp ne i32 %140, 0, !dbg !11193
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !11196

if.then208:                                       ; preds = %for.end206
  %141 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11197
  %gb209 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %141, i32 0, i32 1, !dbg !11198
  call void @skip_bits(%struct.GetBitContext* %gb209, i32 16), !dbg !11199
  br label %if.end210, !dbg !11199

if.end210:                                        ; preds = %if.then208, %for.end206
  store i32 0, i32* %retval, align 4, !dbg !11200
  br label %return, !dbg !11200

return:                                           ; preds = %if.end210, %if.then194, %if.then155, %if.then121, %if.then87, %if.then
  %142 = load i32, i32* %retval, align 4, !dbg !11201
  ret i32 %142, !dbg !11201
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_x96_subframe_audio(%struct.DCACoreDecoder* %s, i32 %sf, i32 %xch_base, i32* %sub_pos) #0 !dbg !11202 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  %sf.addr = alloca i32, align 4
  %xch_base.addr = alloca i32, align 4
  %sub_pos.addr = alloca i32*, align 8
  %n = alloca i32, align 4
  %ssf = alloca i32, align 4
  %ch = alloca i32, align 4
  %band = alloca i32, align 4
  %ofs = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %samples = alloca i32*, align 8
  %scale = alloca i32, align 4
  %vq_samples = alloca i8*, align 8
  %ret = alloca i32, align 4
  %abits = alloca i32, align 4
  %audio = alloca [8 x i32], align 16
  %step_size = alloca i32, align 4
  %scale121 = alloca i32, align 4
  %src_ch = alloca i32, align 4
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !11205, metadata !2194), !dbg !11206
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !11207, metadata !2194), !dbg !11208
  store i32 %xch_base, i32* %xch_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xch_base.addr, metadata !11209, metadata !2194), !dbg !11210
  store i32* %sub_pos, i32** %sub_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sub_pos.addr, metadata !11211, metadata !2194), !dbg !11212
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11213, metadata !2194), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %ssf, metadata !11215, metadata !2194), !dbg !11216
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !11217, metadata !2194), !dbg !11218
  call void @llvm.dbg.declare(metadata i32* %band, metadata !11219, metadata !2194), !dbg !11220
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !11221, metadata !2194), !dbg !11222
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !11223, metadata !2194), !dbg !11224
  %0 = load i32, i32* %sf.addr, align 4, !dbg !11225
  %idxprom = sext i32 %0 to i64, !dbg !11226
  %1 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11226
  %nsubsubframes = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %1, i32 0, i32 33, !dbg !11227
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes, i64 0, i64 %idxprom, !dbg !11226
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11226
  %conv = sext i8 %2 to i32, !dbg !11226
  %mul = mul nsw i32 %conv, 8, !dbg !11228
  store i32 %mul, i32* %nsamples, align 4, !dbg !11224
  %3 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11229
  %4 = load i32, i32* %3, align 4, !dbg !11231
  %5 = load i32, i32* %nsamples, align 4, !dbg !11232
  %add = add nsw i32 %4, %5, !dbg !11233
  %6 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11234
  %npcmblocks = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %6, i32 0, i32 4, !dbg !11235
  %7 = load i32, i32* %npcmblocks, align 4, !dbg !11235
  %cmp = icmp sgt i32 %add, %7, !dbg !11236
  br i1 %cmp, label %if.then, label %if.end, !dbg !11237

if.then:                                          ; preds = %entry
  %8 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11238
  %avctx = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %8, i32 0, i32 0, !dbg !11240
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !11240
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !11238
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i32 0, i32 0)), !dbg !11241
  store i32 -1094995529, i32* %retval, align 4, !dbg !11242
  br label %return, !dbg !11242

if.end:                                           ; preds = %entry
  %11 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11243
  %gb = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %11, i32 0, i32 1, !dbg !11245
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !11246
  %cmp2 = icmp slt i32 %call, 0, !dbg !11247
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !11248

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !11249
  br label %return, !dbg !11249

if.end5:                                          ; preds = %if.end
  %12 = load i32, i32* %xch_base.addr, align 4, !dbg !11250
  store i32 %12, i32* %ch, align 4, !dbg !11252
  br label %for.cond, !dbg !11253

for.cond:                                         ; preds = %for.inc83, %if.end5
  %13 = load i32, i32* %ch, align 4, !dbg !11254
  %14 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11257
  %x96_nchannels = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %14, i32 0, i32 57, !dbg !11258
  %15 = load i32, i32* %x96_nchannels, align 4, !dbg !11258
  %cmp6 = icmp slt i32 %13, %15, !dbg !11259
  br i1 %cmp6, label %for.body, label %for.end85, !dbg !11260

for.body:                                         ; preds = %for.cond
  %16 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11261
  %x96_subband_start = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %16, i32 0, i32 59, !dbg !11264
  %17 = load i32, i32* %x96_subband_start, align 4, !dbg !11264
  store i32 %17, i32* %band, align 4, !dbg !11265
  br label %for.cond8, !dbg !11266

for.cond8:                                        ; preds = %for.inc80, %for.body
  %18 = load i32, i32* %band, align 4, !dbg !11267
  %19 = load i32, i32* %ch, align 4, !dbg !11270
  %idxprom9 = sext i32 %19 to i64, !dbg !11271
  %20 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11271
  %nsubbands = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %20, i32 0, i32 25, !dbg !11272
  %arrayidx10 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands, i64 0, i64 %idxprom9, !dbg !11271
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !11271
  %conv11 = sext i8 %21 to i32, !dbg !11271
  %cmp12 = icmp slt i32 %18, %conv11, !dbg !11273
  br i1 %cmp12, label %for.body14, label %for.end82, !dbg !11274

for.body14:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32** %samples, metadata !11275, metadata !2194), !dbg !11277
  %22 = load i32, i32* %band, align 4, !dbg !11278
  %idxprom15 = sext i32 %22 to i64, !dbg !11279
  %23 = load i32, i32* %ch, align 4, !dbg !11280
  %idxprom16 = sext i32 %23 to i64, !dbg !11279
  %24 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11279
  %x96_subband_samples = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %24, i32 0, i32 64, !dbg !11281
  %arrayidx17 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples, i64 0, i64 %idxprom16, !dbg !11279
  %arrayidx18 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !11279
  %25 = load i32*, i32** %arrayidx18, align 8, !dbg !11279
  %26 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11282
  %27 = load i32, i32* %26, align 4, !dbg !11283
  %idx.ext = sext i32 %27 to i64, !dbg !11284
  %add.ptr = getelementptr inbounds i32, i32* %25, i64 %idx.ext, !dbg !11284
  store i32* %add.ptr, i32** %samples, align 8, !dbg !11277
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !11285, metadata !2194), !dbg !11286
  %28 = load i32, i32* %band, align 4, !dbg !11287
  %and = and i32 %28, 1, !dbg !11288
  %idxprom19 = sext i32 %and to i64, !dbg !11289
  %29 = load i32, i32* %band, align 4, !dbg !11290
  %shr = ashr i32 %29, 1, !dbg !11291
  %idxprom20 = sext i32 %shr to i64, !dbg !11289
  %30 = load i32, i32* %ch, align 4, !dbg !11292
  %idxprom21 = sext i32 %30 to i64, !dbg !11289
  %31 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11289
  %scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %31, i32 0, i32 38, !dbg !11293
  %arrayidx22 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors, i64 0, i64 %idxprom21, !dbg !11289
  %arrayidx23 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !11289
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx23, i64 0, i64 %idxprom19, !dbg !11289
  %32 = load i32, i32* %arrayidx24, align 4, !dbg !11289
  store i32 %32, i32* %scale, align 4, !dbg !11286
  %33 = load i32, i32* %band, align 4, !dbg !11294
  %idxprom25 = sext i32 %33 to i64, !dbg !11295
  %34 = load i32, i32* %ch, align 4, !dbg !11296
  %idxprom26 = sext i32 %34 to i64, !dbg !11295
  %35 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11295
  %bit_allocation = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %35, i32 0, i32 36, !dbg !11297
  %arrayidx27 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation, i64 0, i64 %idxprom26, !dbg !11295
  %arrayidx28 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx27, i64 0, i64 %idxprom25, !dbg !11295
  %36 = load i8, i8* %arrayidx28, align 1, !dbg !11295
  %conv29 = sext i8 %36 to i32, !dbg !11295
  switch i32 %conv29, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb44
  ], !dbg !11298

sw.bb:                                            ; preds = %for.body14
  %37 = load i32, i32* %scale, align 4, !dbg !11299
  %cmp30 = icmp sle i32 %37, 1, !dbg !11302
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !11303

if.then32:                                        ; preds = %sw.bb
  %38 = load i32*, i32** %samples, align 8, !dbg !11304
  %39 = bitcast i32* %38 to i8*, !dbg !11305
  %40 = load i32, i32* %nsamples, align 4, !dbg !11306
  %conv33 = sext i32 %40 to i64, !dbg !11306
  %mul34 = mul i64 %conv33, 4, !dbg !11307
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 %mul34, i32 4, i1 false), !dbg !11305
  br label %if.end43, !dbg !11305

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %n, align 4, !dbg !11308
  br label %for.cond35, !dbg !11310

for.cond35:                                       ; preds = %for.inc, %if.else
  %41 = load i32, i32* %n, align 4, !dbg !11311
  %42 = load i32, i32* %nsamples, align 4, !dbg !11314
  %cmp36 = icmp slt i32 %41, %42, !dbg !11315
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !11316

for.body38:                                       ; preds = %for.cond35
  %43 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11317
  %call39 = call i32 @rand_x96(%struct.DCACoreDecoder* %43), !dbg !11318
  %44 = load i32, i32* %scale, align 4, !dbg !11319
  %call40 = call i32 @mul31(i32 %call39, i32 %44), !dbg !11320
  %45 = load i32, i32* %n, align 4, !dbg !11321
  %idxprom41 = sext i32 %45 to i64, !dbg !11322
  %46 = load i32*, i32** %samples, align 8, !dbg !11322
  %arrayidx42 = getelementptr inbounds i32, i32* %46, i64 %idxprom41, !dbg !11322
  store i32 %call40, i32* %arrayidx42, align 4, !dbg !11323
  br label %for.inc, !dbg !11322

for.inc:                                          ; preds = %for.body38
  %47 = load i32, i32* %n, align 4, !dbg !11324
  %inc = add nsw i32 %47, 1, !dbg !11324
  store i32 %inc, i32* %n, align 4, !dbg !11324
  br label %for.cond35, !dbg !11326, !llvm.loop !11327

for.end:                                          ; preds = %for.cond35
  br label %if.end43

if.end43:                                         ; preds = %for.end, %if.then32
  br label %sw.epilog, !dbg !11329

sw.bb44:                                          ; preds = %for.body14
  store i32 0, i32* %ssf, align 4, !dbg !11330
  br label %for.cond45, !dbg !11332

for.cond45:                                       ; preds = %for.inc77, %sw.bb44
  %48 = load i32, i32* %ssf, align 4, !dbg !11333
  %49 = load i32, i32* %sf.addr, align 4, !dbg !11336
  %idxprom46 = sext i32 %49 to i64, !dbg !11337
  %50 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11337
  %nsubsubframes47 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %50, i32 0, i32 33, !dbg !11338
  %arrayidx48 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes47, i64 0, i64 %idxprom46, !dbg !11337
  %51 = load i8, i8* %arrayidx48, align 1, !dbg !11337
  %conv49 = sext i8 %51 to i32, !dbg !11337
  %add50 = add nsw i32 %conv49, 1, !dbg !11339
  %div = sdiv i32 %add50, 2, !dbg !11340
  %cmp51 = icmp slt i32 %48, %div, !dbg !11341
  br i1 %cmp51, label %for.body53, label %for.end79, !dbg !11342

for.body53:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i8** %vq_samples, metadata !11343, metadata !2194), !dbg !11345
  %52 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11346
  %gb54 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %52, i32 0, i32 1, !dbg !11347
  %call55 = call i32 @get_bits(%struct.GetBitContext* %gb54, i32 10), !dbg !11348
  %idxprom56 = zext i32 %call55 to i64, !dbg !11349
  %arrayidx57 = getelementptr inbounds [1024 x [32 x i8]], [1024 x [32 x i8]]* @ff_dca_high_freq_vq, i64 0, i64 %idxprom56, !dbg !11349
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx57, i32 0, i32 0, !dbg !11349
  store i8* %arraydecay, i8** %vq_samples, align 8, !dbg !11345
  store i32 0, i32* %n, align 4, !dbg !11350
  br label %for.cond58, !dbg !11352

for.cond58:                                       ; preds = %for.inc74, %for.body53
  %53 = load i32, i32* %n, align 4, !dbg !11353
  %54 = load i32, i32* %nsamples, align 4, !dbg !11356
  %55 = load i32, i32* %ssf, align 4, !dbg !11357
  %mul59 = mul nsw i32 %55, 16, !dbg !11358
  %sub = sub nsw i32 %54, %mul59, !dbg !11359
  %cmp60 = icmp sgt i32 %sub, 16, !dbg !11360
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !11361

cond.true:                                        ; preds = %for.cond58
  br label %cond.end, !dbg !11362

cond.false:                                       ; preds = %for.cond58
  %56 = load i32, i32* %nsamples, align 4, !dbg !11364
  %57 = load i32, i32* %ssf, align 4, !dbg !11366
  %mul62 = mul nsw i32 %57, 16, !dbg !11367
  %sub63 = sub nsw i32 %56, %mul62, !dbg !11368
  br label %cond.end, !dbg !11369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 16, %cond.true ], [ %sub63, %cond.false ], !dbg !11370
  %cmp64 = icmp slt i32 %53, %cond, !dbg !11372
  br i1 %cmp64, label %for.body66, label %for.end76, !dbg !11373

for.body66:                                       ; preds = %cond.end
  %58 = load i32, i32* %n, align 4, !dbg !11374
  %idxprom67 = sext i32 %58 to i64, !dbg !11375
  %59 = load i8*, i8** %vq_samples, align 8, !dbg !11375
  %arrayidx68 = getelementptr inbounds i8, i8* %59, i64 %idxprom67, !dbg !11375
  %60 = load i8, i8* %arrayidx68, align 1, !dbg !11375
  %conv69 = sext i8 %60 to i32, !dbg !11375
  %61 = load i32, i32* %scale, align 4, !dbg !11376
  %mul70 = mul nsw i32 %conv69, %61, !dbg !11377
  %add71 = add nsw i32 %mul70, 8, !dbg !11378
  %shr72 = ashr i32 %add71, 4, !dbg !11379
  %call73 = call i32 @clip23(i32 %shr72), !dbg !11380
  %62 = load i32*, i32** %samples, align 8, !dbg !11381
  %incdec.ptr = getelementptr inbounds i32, i32* %62, i32 1, !dbg !11381
  store i32* %incdec.ptr, i32** %samples, align 8, !dbg !11381
  store i32 %call73, i32* %62, align 4, !dbg !11382
  br label %for.inc74, !dbg !11383

for.inc74:                                        ; preds = %for.body66
  %63 = load i32, i32* %n, align 4, !dbg !11384
  %inc75 = add nsw i32 %63, 1, !dbg !11384
  store i32 %inc75, i32* %n, align 4, !dbg !11384
  br label %for.cond58, !dbg !11386, !llvm.loop !11387

for.end76:                                        ; preds = %cond.end
  br label %for.inc77, !dbg !11389

for.inc77:                                        ; preds = %for.end76
  %64 = load i32, i32* %ssf, align 4, !dbg !11390
  %inc78 = add nsw i32 %64, 1, !dbg !11390
  store i32 %inc78, i32* %ssf, align 4, !dbg !11390
  br label %for.cond45, !dbg !11392, !llvm.loop !11393

for.end79:                                        ; preds = %for.cond45
  br label %sw.epilog, !dbg !11395

sw.epilog:                                        ; preds = %for.body14, %for.end79, %if.end43
  br label %for.inc80, !dbg !11396

for.inc80:                                        ; preds = %sw.epilog
  %65 = load i32, i32* %band, align 4, !dbg !11397
  %inc81 = add nsw i32 %65, 1, !dbg !11397
  store i32 %inc81, i32* %band, align 4, !dbg !11397
  br label %for.cond8, !dbg !11399, !llvm.loop !11400

for.end82:                                        ; preds = %for.cond8
  br label %for.inc83, !dbg !11402

for.inc83:                                        ; preds = %for.end82
  %66 = load i32, i32* %ch, align 4, !dbg !11403
  %inc84 = add nsw i32 %66, 1, !dbg !11403
  store i32 %inc84, i32* %ch, align 4, !dbg !11403
  br label %for.cond, !dbg !11405, !llvm.loop !11406

for.end85:                                        ; preds = %for.cond
  store i32 0, i32* %ssf, align 4, !dbg !11408
  %67 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11410
  %68 = load i32, i32* %67, align 4, !dbg !11411
  store i32 %68, i32* %ofs, align 4, !dbg !11412
  br label %for.cond86, !dbg !11413

for.cond86:                                       ; preds = %for.inc179, %for.end85
  %69 = load i32, i32* %ssf, align 4, !dbg !11414
  %70 = load i32, i32* %sf.addr, align 4, !dbg !11417
  %idxprom87 = sext i32 %70 to i64, !dbg !11418
  %71 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11418
  %nsubsubframes88 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %71, i32 0, i32 33, !dbg !11419
  %arrayidx89 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes88, i64 0, i64 %idxprom87, !dbg !11418
  %72 = load i8, i8* %arrayidx89, align 1, !dbg !11418
  %conv90 = sext i8 %72 to i32, !dbg !11418
  %cmp91 = icmp slt i32 %69, %conv90, !dbg !11420
  br i1 %cmp91, label %for.body93, label %for.end181, !dbg !11421

for.body93:                                       ; preds = %for.cond86
  %73 = load i32, i32* %xch_base.addr, align 4, !dbg !11422
  store i32 %73, i32* %ch, align 4, !dbg !11425
  br label %for.cond94, !dbg !11426

for.cond94:                                       ; preds = %for.inc161, %for.body93
  %74 = load i32, i32* %ch, align 4, !dbg !11427
  %75 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11430
  %x96_nchannels95 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %75, i32 0, i32 57, !dbg !11431
  %76 = load i32, i32* %x96_nchannels95, align 4, !dbg !11431
  %cmp96 = icmp slt i32 %74, %76, !dbg !11432
  br i1 %cmp96, label %for.body98, label %for.end163, !dbg !11433

for.body98:                                       ; preds = %for.cond94
  %77 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11434
  %gb99 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %77, i32 0, i32 1, !dbg !11437
  %call100 = call i32 @get_bits_left(%struct.GetBitContext* %gb99), !dbg !11438
  %cmp101 = icmp slt i32 %call100, 0, !dbg !11439
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !11440

if.then103:                                       ; preds = %for.body98
  store i32 -1094995529, i32* %retval, align 4, !dbg !11441
  br label %return, !dbg !11441

if.end104:                                        ; preds = %for.body98
  %78 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11442
  %x96_subband_start105 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %78, i32 0, i32 59, !dbg !11444
  %79 = load i32, i32* %x96_subband_start105, align 4, !dbg !11444
  store i32 %79, i32* %band, align 4, !dbg !11445
  br label %for.cond106, !dbg !11446

for.cond106:                                      ; preds = %for.inc158, %if.end104
  %80 = load i32, i32* %band, align 4, !dbg !11447
  %81 = load i32, i32* %ch, align 4, !dbg !11450
  %idxprom107 = sext i32 %81 to i64, !dbg !11451
  %82 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11451
  %nsubbands108 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %82, i32 0, i32 25, !dbg !11452
  %arrayidx109 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands108, i64 0, i64 %idxprom107, !dbg !11451
  %83 = load i8, i8* %arrayidx109, align 1, !dbg !11451
  %conv110 = sext i8 %83 to i32, !dbg !11451
  %cmp111 = icmp slt i32 %80, %conv110, !dbg !11453
  br i1 %cmp111, label %for.body113, label %for.end160, !dbg !11454

for.body113:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11455, metadata !2194), !dbg !11457
  call void @llvm.dbg.declare(metadata i32* %abits, metadata !11458, metadata !2194), !dbg !11459
  %84 = load i32, i32* %band, align 4, !dbg !11460
  %idxprom114 = sext i32 %84 to i64, !dbg !11461
  %85 = load i32, i32* %ch, align 4, !dbg !11462
  %idxprom115 = sext i32 %85 to i64, !dbg !11461
  %86 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11461
  %bit_allocation116 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %86, i32 0, i32 36, !dbg !11463
  %arrayidx117 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %bit_allocation116, i64 0, i64 %idxprom115, !dbg !11461
  %arrayidx118 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx117, i64 0, i64 %idxprom114, !dbg !11461
  %87 = load i8, i8* %arrayidx118, align 1, !dbg !11461
  %conv119 = sext i8 %87 to i32, !dbg !11461
  %sub120 = sub nsw i32 %conv119, 1, !dbg !11464
  store i32 %sub120, i32* %abits, align 4, !dbg !11459
  call void @llvm.dbg.declare(metadata [8 x i32]* %audio, metadata !11465, metadata !2194), !dbg !11466
  call void @llvm.dbg.declare(metadata i32* %step_size, metadata !11467, metadata !2194), !dbg !11468
  call void @llvm.dbg.declare(metadata i32* %scale121, metadata !11469, metadata !2194), !dbg !11470
  %88 = load i32, i32* %abits, align 4, !dbg !11471
  %cmp122 = icmp slt i32 %88, 1, !dbg !11473
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !11474

if.then124:                                       ; preds = %for.body113
  br label %for.inc158, !dbg !11475

if.end125:                                        ; preds = %for.body113
  %89 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11476
  %arraydecay126 = getelementptr inbounds [8 x i32], [8 x i32]* %audio, i32 0, i32 0, !dbg !11478
  %90 = load i32, i32* %abits, align 4, !dbg !11479
  %91 = load i32, i32* %ch, align 4, !dbg !11480
  %call127 = call i32 @extract_audio(%struct.DCACoreDecoder* %89, i32* %arraydecay126, i32 %90, i32 %91), !dbg !11481
  store i32 %call127, i32* %ret, align 4, !dbg !11482
  %cmp128 = icmp slt i32 %call127, 0, !dbg !11483
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !11484

if.then130:                                       ; preds = %if.end125
  %92 = load i32, i32* %ret, align 4, !dbg !11485
  store i32 %92, i32* %retval, align 4, !dbg !11486
  br label %return, !dbg !11486

if.end131:                                        ; preds = %if.end125
  %93 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11487
  %bit_rate = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %93, i32 0, i32 8, !dbg !11489
  %94 = load i32, i32* %bit_rate, align 4, !dbg !11489
  %cmp132 = icmp eq i32 %94, 3, !dbg !11490
  br i1 %cmp132, label %if.then134, label %if.else137, !dbg !11491

if.then134:                                       ; preds = %if.end131
  %95 = load i32, i32* %abits, align 4, !dbg !11492
  %idxprom135 = sext i32 %95 to i64, !dbg !11493
  %arrayidx136 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_lossless_quant, i64 0, i64 %idxprom135, !dbg !11493
  %96 = load i32, i32* %arrayidx136, align 4, !dbg !11493
  store i32 %96, i32* %step_size, align 4, !dbg !11494
  br label %if.end140, !dbg !11495

if.else137:                                       ; preds = %if.end131
  %97 = load i32, i32* %abits, align 4, !dbg !11496
  %idxprom138 = sext i32 %97 to i64, !dbg !11497
  %arrayidx139 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_dca_lossy_quant, i64 0, i64 %idxprom138, !dbg !11497
  %98 = load i32, i32* %arrayidx139, align 4, !dbg !11497
  store i32 %98, i32* %step_size, align 4, !dbg !11498
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.then134
  %99 = load i32, i32* %band, align 4, !dbg !11499
  %and141 = and i32 %99, 1, !dbg !11500
  %idxprom142 = sext i32 %and141 to i64, !dbg !11501
  %100 = load i32, i32* %band, align 4, !dbg !11502
  %shr143 = ashr i32 %100, 1, !dbg !11503
  %idxprom144 = sext i32 %shr143 to i64, !dbg !11501
  %101 = load i32, i32* %ch, align 4, !dbg !11504
  %idxprom145 = sext i32 %101 to i64, !dbg !11501
  %102 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11501
  %scale_factors146 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %102, i32 0, i32 38, !dbg !11505
  %arrayidx147 = getelementptr inbounds [7 x [32 x [2 x i32]]], [7 x [32 x [2 x i32]]]* %scale_factors146, i64 0, i64 %idxprom145, !dbg !11501
  %arrayidx148 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx147, i64 0, i64 %idxprom144, !dbg !11501
  %arrayidx149 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx148, i64 0, i64 %idxprom142, !dbg !11501
  %103 = load i32, i32* %arrayidx149, align 4, !dbg !11501
  store i32 %103, i32* %scale121, align 4, !dbg !11506
  %104 = load i32, i32* %band, align 4, !dbg !11507
  %idxprom150 = sext i32 %104 to i64, !dbg !11508
  %105 = load i32, i32* %ch, align 4, !dbg !11509
  %idxprom151 = sext i32 %105 to i64, !dbg !11508
  %106 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11508
  %x96_subband_samples152 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %106, i32 0, i32 64, !dbg !11510
  %arrayidx153 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples152, i64 0, i64 %idxprom151, !dbg !11508
  %arrayidx154 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx153, i64 0, i64 %idxprom150, !dbg !11508
  %107 = load i32*, i32** %arrayidx154, align 8, !dbg !11508
  %108 = load i32, i32* %ofs, align 4, !dbg !11511
  %idx.ext155 = sext i32 %108 to i64, !dbg !11512
  %add.ptr156 = getelementptr inbounds i32, i32* %107, i64 %idx.ext155, !dbg !11512
  %arraydecay157 = getelementptr inbounds [8 x i32], [8 x i32]* %audio, i32 0, i32 0, !dbg !11513
  %109 = load i32, i32* %step_size, align 4, !dbg !11514
  %110 = load i32, i32* %scale121, align 4, !dbg !11515
  call void @ff_dca_core_dequantize(i32* %add.ptr156, i32* %arraydecay157, i32 %109, i32 %110, i32 0, i32 8), !dbg !11516
  br label %for.inc158, !dbg !11517

for.inc158:                                       ; preds = %if.end140, %if.then124
  %111 = load i32, i32* %band, align 4, !dbg !11518
  %inc159 = add nsw i32 %111, 1, !dbg !11518
  store i32 %inc159, i32* %band, align 4, !dbg !11518
  br label %for.cond106, !dbg !11520, !llvm.loop !11521

for.end160:                                       ; preds = %for.cond106
  br label %for.inc161, !dbg !11523

for.inc161:                                       ; preds = %for.end160
  %112 = load i32, i32* %ch, align 4, !dbg !11524
  %inc162 = add nsw i32 %112, 1, !dbg !11524
  store i32 %inc162, i32* %ch, align 4, !dbg !11524
  br label %for.cond94, !dbg !11526, !llvm.loop !11527

for.end163:                                       ; preds = %for.cond94
  %113 = load i32, i32* %ssf, align 4, !dbg !11529
  %114 = load i32, i32* %sf.addr, align 4, !dbg !11531
  %idxprom164 = sext i32 %114 to i64, !dbg !11532
  %115 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11532
  %nsubsubframes165 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %115, i32 0, i32 33, !dbg !11533
  %arrayidx166 = getelementptr inbounds [16 x i8], [16 x i8]* %nsubsubframes165, i64 0, i64 %idxprom164, !dbg !11532
  %116 = load i8, i8* %arrayidx166, align 1, !dbg !11532
  %conv167 = sext i8 %116 to i32, !dbg !11532
  %sub168 = sub nsw i32 %conv167, 1, !dbg !11534
  %cmp169 = icmp eq i32 %113, %sub168, !dbg !11535
  br i1 %cmp169, label %land.lhs.true, label %lor.lhs.false, !dbg !11536

lor.lhs.false:                                    ; preds = %for.end163
  %117 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11537
  %sync_ssf = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %117, i32 0, i32 14, !dbg !11539
  %118 = load i32, i32* %sync_ssf, align 4, !dbg !11539
  %tobool = icmp ne i32 %118, 0, !dbg !11537
  br i1 %tobool, label %land.lhs.true, label %if.end177, !dbg !11540

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.end163
  %119 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11541
  %gb171 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %119, i32 0, i32 1, !dbg !11543
  %call172 = call i32 @get_bits(%struct.GetBitContext* %gb171, i32 16), !dbg !11544
  %cmp173 = icmp ne i32 %call172, 65535, !dbg !11545
  br i1 %cmp173, label %if.then175, label %if.end177, !dbg !11546

if.then175:                                       ; preds = %land.lhs.true
  %120 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11547
  %avctx176 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %120, i32 0, i32 0, !dbg !11549
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx176, align 32, !dbg !11549
  %122 = bitcast %struct.AVCodecContext* %121 to i8*, !dbg !11547
  call void (i8*, i32, i8*, ...) @av_log(i8* %122, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i32 0, i32 0)), !dbg !11550
  store i32 -1094995529, i32* %retval, align 4, !dbg !11551
  br label %return, !dbg !11551

if.end177:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %123 = load i32, i32* %ofs, align 4, !dbg !11552
  %add178 = add nsw i32 %123, 8, !dbg !11552
  store i32 %add178, i32* %ofs, align 4, !dbg !11552
  br label %for.inc179, !dbg !11553

for.inc179:                                       ; preds = %if.end177
  %124 = load i32, i32* %ssf, align 4, !dbg !11554
  %inc180 = add nsw i32 %124, 1, !dbg !11554
  store i32 %inc180, i32* %ssf, align 4, !dbg !11554
  br label %for.cond86, !dbg !11556, !llvm.loop !11557

for.end181:                                       ; preds = %for.cond86
  %125 = load i32, i32* %xch_base.addr, align 4, !dbg !11559
  store i32 %125, i32* %ch, align 4, !dbg !11561
  br label %for.cond182, !dbg !11562

for.cond182:                                      ; preds = %for.inc202, %for.end181
  %126 = load i32, i32* %ch, align 4, !dbg !11563
  %127 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11566
  %x96_nchannels183 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %127, i32 0, i32 57, !dbg !11567
  %128 = load i32, i32* %x96_nchannels183, align 4, !dbg !11567
  %cmp184 = icmp slt i32 %126, %128, !dbg !11568
  br i1 %cmp184, label %for.body186, label %for.end204, !dbg !11569

for.body186:                                      ; preds = %for.cond182
  %129 = load i32, i32* %ch, align 4, !dbg !11570
  %idxprom187 = sext i32 %129 to i64, !dbg !11572
  %130 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11572
  %x96_subband_samples188 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %130, i32 0, i32 64, !dbg !11573
  %arrayidx189 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples188, i64 0, i64 %idxprom187, !dbg !11572
  %arraydecay190 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx189, i32 0, i32 0, !dbg !11572
  %131 = load i32, i32* %ch, align 4, !dbg !11574
  %idxprom191 = sext i32 %131 to i64, !dbg !11575
  %132 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11575
  %prediction_vq_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %132, i32 0, i32 35, !dbg !11576
  %arrayidx192 = getelementptr inbounds [7 x [64 x i16]], [7 x [64 x i16]]* %prediction_vq_index, i64 0, i64 %idxprom191, !dbg !11575
  %arraydecay193 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx192, i32 0, i32 0, !dbg !11575
  %133 = load i32, i32* %ch, align 4, !dbg !11577
  %idxprom194 = sext i32 %133 to i64, !dbg !11578
  %134 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11578
  %prediction_mode = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %134, i32 0, i32 34, !dbg !11579
  %arrayidx195 = getelementptr inbounds [7 x [64 x i8]], [7 x [64 x i8]]* %prediction_mode, i64 0, i64 %idxprom194, !dbg !11578
  %arraydecay196 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx195, i32 0, i32 0, !dbg !11578
  %135 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11580
  %x96_subband_start197 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %135, i32 0, i32 59, !dbg !11581
  %136 = load i32, i32* %x96_subband_start197, align 4, !dbg !11581
  %137 = load i32, i32* %ch, align 4, !dbg !11582
  %idxprom198 = sext i32 %137 to i64, !dbg !11583
  %138 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11583
  %nsubbands199 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %138, i32 0, i32 25, !dbg !11584
  %arrayidx200 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands199, i64 0, i64 %idxprom198, !dbg !11583
  %139 = load i8, i8* %arrayidx200, align 1, !dbg !11583
  %conv201 = sext i8 %139 to i32, !dbg !11583
  %140 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11585
  %141 = load i32, i32* %140, align 4, !dbg !11586
  %142 = load i32, i32* %nsamples, align 4, !dbg !11587
  call void @inverse_adpcm(i32** %arraydecay190, i16* %arraydecay193, i8* %arraydecay196, i32 %136, i32 %conv201, i32 %141, i32 %142), !dbg !11588
  br label %for.inc202, !dbg !11589

for.inc202:                                       ; preds = %for.body186
  %143 = load i32, i32* %ch, align 4, !dbg !11590
  %inc203 = add nsw i32 %143, 1, !dbg !11590
  store i32 %inc203, i32* %ch, align 4, !dbg !11590
  br label %for.cond182, !dbg !11592, !llvm.loop !11593

for.end204:                                       ; preds = %for.cond182
  %144 = load i32, i32* %xch_base.addr, align 4, !dbg !11595
  store i32 %144, i32* %ch, align 4, !dbg !11597
  br label %for.cond205, !dbg !11598

for.cond205:                                      ; preds = %for.inc239, %for.end204
  %145 = load i32, i32* %ch, align 4, !dbg !11599
  %146 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11602
  %x96_nchannels206 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %146, i32 0, i32 57, !dbg !11603
  %147 = load i32, i32* %x96_nchannels206, align 4, !dbg !11603
  %cmp207 = icmp slt i32 %145, %147, !dbg !11604
  br i1 %cmp207, label %for.body209, label %for.end241, !dbg !11605

for.body209:                                      ; preds = %for.cond205
  call void @llvm.dbg.declare(metadata i32* %src_ch, metadata !11606, metadata !2194), !dbg !11608
  %148 = load i32, i32* %ch, align 4, !dbg !11609
  %idxprom210 = sext i32 %148 to i64, !dbg !11610
  %149 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11610
  %joint_intensity_index = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %149, i32 0, i32 27, !dbg !11611
  %arrayidx211 = getelementptr inbounds [7 x i8], [7 x i8]* %joint_intensity_index, i64 0, i64 %idxprom210, !dbg !11610
  %150 = load i8, i8* %arrayidx211, align 1, !dbg !11610
  %conv212 = sext i8 %150 to i32, !dbg !11610
  %sub213 = sub nsw i32 %conv212, 1, !dbg !11612
  store i32 %sub213, i32* %src_ch, align 4, !dbg !11608
  %151 = load i32, i32* %src_ch, align 4, !dbg !11613
  %cmp214 = icmp sge i32 %151, 0, !dbg !11615
  br i1 %cmp214, label %if.then216, label %if.end238, !dbg !11616

if.then216:                                       ; preds = %for.body209
  %152 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11617
  %dcadsp = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %152, i32 0, i32 71, !dbg !11619
  %153 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 32, !dbg !11619
  %decode_joint = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %153, i32 0, i32 1, !dbg !11620
  %154 = load void (i32**, i32**, i32*, i64, i64, i64, i64)*, void (i32**, i32**, i32*, i64, i64, i64, i64)** %decode_joint, align 8, !dbg !11620
  %155 = load i32, i32* %ch, align 4, !dbg !11621
  %idxprom217 = sext i32 %155 to i64, !dbg !11622
  %156 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11622
  %x96_subband_samples218 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %156, i32 0, i32 64, !dbg !11623
  %arrayidx219 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples218, i64 0, i64 %idxprom217, !dbg !11622
  %arraydecay220 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx219, i32 0, i32 0, !dbg !11622
  %157 = load i32, i32* %src_ch, align 4, !dbg !11624
  %idxprom221 = sext i32 %157 to i64, !dbg !11625
  %158 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11625
  %x96_subband_samples222 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %158, i32 0, i32 64, !dbg !11626
  %arrayidx223 = getelementptr inbounds [7 x [64 x i32*]], [7 x [64 x i32*]]* %x96_subband_samples222, i64 0, i64 %idxprom221, !dbg !11625
  %arraydecay224 = getelementptr inbounds [64 x i32*], [64 x i32*]* %arrayidx223, i32 0, i32 0, !dbg !11625
  %159 = load i32, i32* %ch, align 4, !dbg !11627
  %idxprom225 = sext i32 %159 to i64, !dbg !11628
  %160 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11628
  %joint_scale_factors = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %160, i32 0, i32 40, !dbg !11629
  %arrayidx226 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* %joint_scale_factors, i64 0, i64 %idxprom225, !dbg !11628
  %arraydecay227 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx226, i32 0, i32 0, !dbg !11628
  %161 = load i32, i32* %ch, align 4, !dbg !11630
  %idxprom228 = sext i32 %161 to i64, !dbg !11631
  %162 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11631
  %nsubbands229 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %162, i32 0, i32 25, !dbg !11632
  %arrayidx230 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands229, i64 0, i64 %idxprom228, !dbg !11631
  %163 = load i8, i8* %arrayidx230, align 1, !dbg !11631
  %conv231 = sext i8 %163 to i64, !dbg !11631
  %164 = load i32, i32* %src_ch, align 4, !dbg !11633
  %idxprom232 = sext i32 %164 to i64, !dbg !11634
  %165 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11634
  %nsubbands233 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %165, i32 0, i32 25, !dbg !11635
  %arrayidx234 = getelementptr inbounds [7 x i8], [7 x i8]* %nsubbands233, i64 0, i64 %idxprom232, !dbg !11634
  %166 = load i8, i8* %arrayidx234, align 1, !dbg !11634
  %conv235 = sext i8 %166 to i64, !dbg !11634
  %167 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11636
  %168 = load i32, i32* %167, align 4, !dbg !11637
  %conv236 = sext i32 %168 to i64, !dbg !11637
  %169 = load i32, i32* %nsamples, align 4, !dbg !11638
  %conv237 = sext i32 %169 to i64, !dbg !11638
  call void %154(i32** %arraydecay220, i32** %arraydecay224, i32* %arraydecay227, i64 %conv231, i64 %conv235, i64 %conv236, i64 %conv237), !dbg !11617
  br label %if.end238, !dbg !11639

if.end238:                                        ; preds = %if.then216, %for.body209
  br label %for.inc239, !dbg !11640

for.inc239:                                       ; preds = %if.end238
  %170 = load i32, i32* %ch, align 4, !dbg !11641
  %inc240 = add nsw i32 %170, 1, !dbg !11641
  store i32 %inc240, i32* %ch, align 4, !dbg !11641
  br label %for.cond205, !dbg !11643, !llvm.loop !11644

for.end241:                                       ; preds = %for.cond205
  %171 = load i32, i32* %ofs, align 4, !dbg !11646
  %172 = load i32*, i32** %sub_pos.addr, align 8, !dbg !11647
  store i32 %171, i32* %172, align 4, !dbg !11648
  store i32 0, i32* %retval, align 4, !dbg !11649
  br label %return, !dbg !11649

return:                                           ; preds = %for.end241, %if.then175, %if.then130, %if.then103, %if.then4, %if.then
  %173 = load i32, i32* %retval, align 4, !dbg !11650
  ret i32 %173, !dbg !11650
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mul31(i32 %a, i32 %b) #2 !dbg !11651 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11652, metadata !2194), !dbg !11653
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !11654, metadata !2194), !dbg !11655
  %0 = load i32, i32* %a.addr, align 4, !dbg !11656
  %1 = load i32, i32* %b.addr, align 4, !dbg !11657
  %call = call i32 @mul__(i32 %0, i32 %1, i32 31), !dbg !11658
  ret i32 %call, !dbg !11659
}

; Function Attrs: nounwind uwtable
define internal i32 @rand_x96(%struct.DCACoreDecoder* %s) #0 !dbg !11660 {
entry:
  %s.addr = alloca %struct.DCACoreDecoder*, align 8
  store %struct.DCACoreDecoder* %s, %struct.DCACoreDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCACoreDecoder** %s.addr, metadata !11661, metadata !2194), !dbg !11662
  %0 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11663
  %x96_rand = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %0, i32 0, i32 60, !dbg !11664
  %1 = load i32, i32* %x96_rand, align 8, !dbg !11664
  %mul = mul i32 1103515245, %1, !dbg !11665
  %add = add i32 %mul, 12345, !dbg !11666
  %2 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11667
  %x96_rand1 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %2, i32 0, i32 60, !dbg !11668
  store i32 %add, i32* %x96_rand1, align 8, !dbg !11669
  %3 = load %struct.DCACoreDecoder*, %struct.DCACoreDecoder** %s.addr, align 8, !dbg !11670
  %x96_rand2 = getelementptr inbounds %struct.DCACoreDecoder, %struct.DCACoreDecoder* %3, i32 0, i32 60, !dbg !11671
  %4 = load i32, i32* %x96_rand2, align 8, !dbg !11671
  %and = and i32 %4, 2147483647, !dbg !11672
  %sub = sub nsw i32 %and, 1073741824, !dbg !11673
  ret i32 %sub, !dbg !11674
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mul16(i32 %a, i32 %b) #2 !dbg !11675 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11676, metadata !2194), !dbg !11677
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !11678, metadata !2194), !dbg !11679
  %0 = load i32, i32* %a.addr, align 4, !dbg !11680
  %1 = load i32, i32* %b.addr, align 4, !dbg !11681
  %call = call i32 @mul__(i32 %0, i32 %1, i32 16), !dbg !11682
  ret i32 %call, !dbg !11683
}

declare void @ff_dca_downmix_to_stereo_fixed(%struct.DCADSPContext*, i32**, i32*, i32, i32) #4

declare void @ff_dca_downmix_to_stereo_float(%struct.AVFloatDSPContext*, float**, i32*, i32, i32) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1088, !1089}
!llvm.ident = !{!1090}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1026, globals: !1071)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--dca_core.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !897, !903, !920, !950, !985, !992, !1003, !1016}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HeaderType", file: !898, line: 32, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/dca_core.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902}
!900 = !DIEnumerator(name: "HEADER_CORE", value: 0)
!901 = !DIEnumerator(name: "HEADER_XCH", value: 1)
!902 = !DIEnumerator(name: "HEADER_XXCH", value: 2)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCAExtensionMask", file: !904, line: 169, size: 32, align: 32, elements: !905)
!904 = !DIFile(filename: "libavcodec/dca.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!905 = !{!906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919}
!906 = !DIEnumerator(name: "DCA_CSS_CORE", value: 1)
!907 = !DIEnumerator(name: "DCA_CSS_XXCH", value: 2)
!908 = !DIEnumerator(name: "DCA_CSS_X96", value: 4)
!909 = !DIEnumerator(name: "DCA_CSS_XCH", value: 8)
!910 = !DIEnumerator(name: "DCA_CSS_MASK", value: 15)
!911 = !DIEnumerator(name: "DCA_EXSS_CORE", value: 16)
!912 = !DIEnumerator(name: "DCA_EXSS_XBR", value: 32)
!913 = !DIEnumerator(name: "DCA_EXSS_XXCH", value: 64)
!914 = !DIEnumerator(name: "DCA_EXSS_X96", value: 128)
!915 = !DIEnumerator(name: "DCA_EXSS_LBR", value: 256)
!916 = !DIEnumerator(name: "DCA_EXSS_XLL", value: 512)
!917 = !DIEnumerator(name: "DCA_EXSS_RSV1", value: 1024)
!918 = !DIEnumerator(name: "DCA_EXSS_RSV2", value: 2048)
!919 = !DIEnumerator(name: "DCA_EXSS_MASK", value: 4080)
!920 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCASpeakerMask", file: !904, line: 91, size: 32, align: 32, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!922 = !DIEnumerator(name: "DCA_SPEAKER_MASK_C", value: 1)
!923 = !DIEnumerator(name: "DCA_SPEAKER_MASK_L", value: 2)
!924 = !DIEnumerator(name: "DCA_SPEAKER_MASK_R", value: 4)
!925 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ls", value: 8)
!926 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rs", value: 16)
!927 = !DIEnumerator(name: "DCA_SPEAKER_MASK_LFE1", value: 32)
!928 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Cs", value: 64)
!929 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lsr", value: 128)
!930 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rsr", value: 256)
!931 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lss", value: 512)
!932 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rss", value: 1024)
!933 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lc", value: 2048)
!934 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rc", value: 4096)
!935 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lh", value: 8192)
!936 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ch", value: 16384)
!937 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rh", value: 32768)
!938 = !DIEnumerator(name: "DCA_SPEAKER_MASK_LFE2", value: 65536)
!939 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lw", value: 131072)
!940 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rw", value: 262144)
!941 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Oh", value: 524288)
!942 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lhs", value: 1048576)
!943 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rhs", value: 2097152)
!944 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Chr", value: 4194304)
!945 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lhr", value: 8388608)
!946 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rhr", value: 16777216)
!947 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Cl", value: 33554432)
!948 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ll", value: 67108864)
!949 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rl", value: 134217728)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCASpeaker", file: !904, line: 78, size: 32, align: 32, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984}
!952 = !DIEnumerator(name: "DCA_SPEAKER_C", value: 0)
!953 = !DIEnumerator(name: "DCA_SPEAKER_L", value: 1)
!954 = !DIEnumerator(name: "DCA_SPEAKER_R", value: 2)
!955 = !DIEnumerator(name: "DCA_SPEAKER_Ls", value: 3)
!956 = !DIEnumerator(name: "DCA_SPEAKER_Rs", value: 4)
!957 = !DIEnumerator(name: "DCA_SPEAKER_LFE1", value: 5)
!958 = !DIEnumerator(name: "DCA_SPEAKER_Cs", value: 6)
!959 = !DIEnumerator(name: "DCA_SPEAKER_Lsr", value: 7)
!960 = !DIEnumerator(name: "DCA_SPEAKER_Rsr", value: 8)
!961 = !DIEnumerator(name: "DCA_SPEAKER_Lss", value: 9)
!962 = !DIEnumerator(name: "DCA_SPEAKER_Rss", value: 10)
!963 = !DIEnumerator(name: "DCA_SPEAKER_Lc", value: 11)
!964 = !DIEnumerator(name: "DCA_SPEAKER_Rc", value: 12)
!965 = !DIEnumerator(name: "DCA_SPEAKER_Lh", value: 13)
!966 = !DIEnumerator(name: "DCA_SPEAKER_Ch", value: 14)
!967 = !DIEnumerator(name: "DCA_SPEAKER_Rh", value: 15)
!968 = !DIEnumerator(name: "DCA_SPEAKER_LFE2", value: 16)
!969 = !DIEnumerator(name: "DCA_SPEAKER_Lw", value: 17)
!970 = !DIEnumerator(name: "DCA_SPEAKER_Rw", value: 18)
!971 = !DIEnumerator(name: "DCA_SPEAKER_Oh", value: 19)
!972 = !DIEnumerator(name: "DCA_SPEAKER_Lhs", value: 20)
!973 = !DIEnumerator(name: "DCA_SPEAKER_Rhs", value: 21)
!974 = !DIEnumerator(name: "DCA_SPEAKER_Chr", value: 22)
!975 = !DIEnumerator(name: "DCA_SPEAKER_Lhr", value: 23)
!976 = !DIEnumerator(name: "DCA_SPEAKER_Rhr", value: 24)
!977 = !DIEnumerator(name: "DCA_SPEAKER_Cl", value: 25)
!978 = !DIEnumerator(name: "DCA_SPEAKER_Ll", value: 26)
!979 = !DIEnumerator(name: "DCA_SPEAKER_Rl", value: 27)
!980 = !DIEnumerator(name: "DCA_SPEAKER_RSV1", value: 28)
!981 = !DIEnumerator(name: "DCA_SPEAKER_RSV2", value: 29)
!982 = !DIEnumerator(name: "DCA_SPEAKER_RSV3", value: 30)
!983 = !DIEnumerator(name: "DCA_SPEAKER_RSV4", value: 31)
!984 = !DIEnumerator(name: "DCA_SPEAKER_COUNT", value: 32)
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCACoreLFEFlag", file: !986, line: 80, size: 32, align: 32, elements: !987)
!986 = !DIFile(filename: "libavcodec/dca_core.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!987 = !{!988, !989, !990, !991}
!988 = !DIEnumerator(name: "DCA_LFE_FLAG_NONE", value: 0)
!989 = !DIEnumerator(name: "DCA_LFE_FLAG_128", value: 1)
!990 = !DIEnumerator(name: "DCA_LFE_FLAG_64", value: 2)
!991 = !DIEnumerator(name: "DCA_LFE_FLAG_INVALID", value: 3)
!992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMatrixEncoding", file: !993, line: 114, size: 32, align: 32, elements: !994)
!993 = !DIFile(filename: "./libavutil/channel_layout.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002}
!995 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NONE", value: 0)
!996 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBY", value: 1)
!997 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLII", value: 2)
!998 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIX", value: 3)
!999 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIZ", value: 4)
!1000 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYEX", value: 5)
!1001 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYHEADPHONE", value: 6)
!1002 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NB", value: 7)
!1003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCACoreAudioMode", file: !986, line: 59, size: 32, align: 32, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015}
!1005 = !DIEnumerator(name: "DCA_AMODE_MONO", value: 0)
!1006 = !DIEnumerator(name: "DCA_AMODE_MONO_DUAL", value: 1)
!1007 = !DIEnumerator(name: "DCA_AMODE_STEREO", value: 2)
!1008 = !DIEnumerator(name: "DCA_AMODE_STEREO_SUMDIFF", value: 3)
!1009 = !DIEnumerator(name: "DCA_AMODE_STEREO_TOTAL", value: 4)
!1010 = !DIEnumerator(name: "DCA_AMODE_3F", value: 5)
!1011 = !DIEnumerator(name: "DCA_AMODE_2F1R", value: 6)
!1012 = !DIEnumerator(name: "DCA_AMODE_3F1R", value: 7)
!1013 = !DIEnumerator(name: "DCA_AMODE_2F2R", value: 8)
!1014 = !DIEnumerator(name: "DCA_AMODE_3F2R", value: 9)
!1015 = !DIEnumerator(name: "DCA_AMODE_COUNT", value: 10)
!1016 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCADownMixType", file: !904, line: 186, size: 32, align: 32, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!1018 = !DIEnumerator(name: "DCA_DMIX_TYPE_1_0", value: 0)
!1019 = !DIEnumerator(name: "DCA_DMIX_TYPE_LoRo", value: 1)
!1020 = !DIEnumerator(name: "DCA_DMIX_TYPE_LtRt", value: 2)
!1021 = !DIEnumerator(name: "DCA_DMIX_TYPE_3_0", value: 3)
!1022 = !DIEnumerator(name: "DCA_DMIX_TYPE_2_1", value: 4)
!1023 = !DIEnumerator(name: "DCA_DMIX_TYPE_2_2", value: 5)
!1024 = !DIEnumerator(name: "DCA_DMIX_TYPE_3_1", value: 6)
!1025 = !DIEnumerator(name: "DCA_DMIX_TYPE_COUNT", value: 7)
!1026 = !{!1027, !1028, !1029, !1032, !1039, !1041, !1030, !1038, !1043, !1045, !1060, !1062, !1064}
!1027 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1028 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1031, line: 38, baseType: !1027)
!1031 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1035, line: 221, size: 32, align: 8, elements: !1036)
!1035 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1034, file: !1035, line: 221, baseType: !1038, size: 32, align: 32)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1031, line: 51, baseType: !1028)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1031, line: 48, baseType: !1040)
!1040 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1031, line: 40, baseType: !1042)
!1042 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1031, line: 55, baseType: !1044)
!1044 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "v", scope: !1048, file: !1047, line: 69, size: 128, align: 64, elements: !1055)
!1047 = !DIFile(filename: "./libavutil/x86/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1048 = distinct !DISubprogram(name: "AV_COPY128", scope: !1047, file: !1047, line: 67, type: !1049, isLocal: true, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1054 = !{}
!1055 = !{!1056}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1046, file: !1047, line: 69, baseType: !1057, size: 128, align: 64)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 128, align: 64, elements: !1058)
!1058 = !{!1059}
!1059 = !DISubrange(count: 2)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "v", scope: !1066, file: !1047, line: 85, size: 128, align: 64, elements: !1069)
!1066 = distinct !DISubprogram(name: "AV_ZERO128", scope: !1047, file: !1047, line: 83, type: !1067, isLocal: true, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1051}
!1069 = !{!1070}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1065, file: !1047, line: 85, baseType: !1057, size: 128, align: 64)
!1071 = !{!1072, !1077, !1081}
!1072 = distinct !DIGlobalVariable(name: "block_code_nbits", scope: !0, file: !898, line: 64, type: !1073, isLocal: true, isDefinition: true, variable: [7 x i8]* @block_code_nbits)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1074, size: 56, align: 8, elements: !1075)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1075 = !{!1076}
!1076 = !DISubrange(count: 7)
!1077 = distinct !DIGlobalVariable(name: "audio_mode_ch_mask", scope: !0, file: !898, line: 51, type: !1078, isLocal: true, isDefinition: true, variable: [10 x i8]* @audio_mode_ch_mask)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1074, size: 80, align: 8, elements: !1079)
!1079 = !{!1080}
!1080 = !DISubrange(count: 10)
!1081 = distinct !DIGlobalVariable(name: "prm_ch_to_spkr_map", scope: !0, file: !898, line: 38, type: !1082, isLocal: true, isDefinition: true, variable: [10 x [5 x i8]]* @prm_ch_to_spkr_map)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 400, align: 8, elements: !1086)
!1083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1031, line: 36, baseType: !1085)
!1085 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1086 = !{!1080, !1087}
!1087 = !DISubrange(count: 5)
!1088 = !{i32 2, !"Dwarf Version", i32 4}
!1089 = !{i32 2, !"Debug Info Version", i32 3}
!1090 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1091 = distinct !DISubprogram(name: "ff_dca_core_parse", scope: !898, file: !898, line: 1798, type: !1092, isLocal: false, isDefinition: true, scopeLine: 1799, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!1027, !1094, !1223, !1027}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCACoreDecoder", file: !986, line: 214, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCACoreDecoder", file: !986, line: 101, size: 372992, align: 256, elements: !1097)
!1097 = !{!1098, !1816, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1851, !1852, !1853, !1854, !1855, !1856, !1859, !1861, !1865, !1869, !1873, !1874, !1878, !1881, !1882, !1884, !1885, !1886, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1900, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1916, !1917, !1918, !1921, !1922, !1948, !2101, !2102, !2104, !2105, !2148, !2181, !2182, !2183, !2185, !2186, !2187, !2189, !2190, !2191, !2192}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1096, file: !986, line: 102, baseType: !1099, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1102)
!1102 = !{!1103, !1147, !1148, !1149, !1415, !1416, !1417, !1418, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1571, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1754, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1101, file: !35, line: 1561, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1108)
!1108 = !{!1109, !1113, !1117, !1121, !1122, !1123, !1124, !1128, !1134, !1136, !1140}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1107, file: !4, line: 72, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1107, file: !4, line: 78, baseType: !1114, size: 64, align: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64, align: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!1110, !1051}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1107, file: !4, line: 85, baseType: !1118, size: 64, align: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1107, file: !4, line: 93, baseType: !1027, size: 32, align: 32, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1107, file: !4, line: 99, baseType: !1027, size: 32, align: 32, offset: 224)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1107, file: !4, line: 108, baseType: !1027, size: 32, align: 32, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1107, file: !4, line: 113, baseType: !1125, size: 64, align: 64, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1051, !1051, !1051}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1107, file: !4, line: 123, baseType: !1129, size: 64, align: 64, offset: 384)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!1132, !1132}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1107, file: !4, line: 130, baseType: !1135, size: 32, align: 32, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1107, file: !4, line: 136, baseType: !1137, size: 64, align: 64, offset: 512)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!1135, !1051}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1107, file: !4, line: 142, baseType: !1141, size: 64, align: 64, offset: 576)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!1027, !1144, !1051, !1110, !1027}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64, align: 64)
!1146 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1101, file: !35, line: 1562, baseType: !1027, size: 32, align: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1101, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1101, file: !35, line: 1565, baseType: !1150, size: 64, align: 64, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158, !1159, !1168, !1171, !1174, !1177, !1180, !1181, !1182, !1190, !1191, !1192, !1194, !1198, !1204, !1214, !1218, !1219, !1267, !1386, !1390, !1391, !1395, !1399, !1404, !1408, !1409, !1410}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1152, file: !35, line: 3475, baseType: !1110, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1152, file: !35, line: 3480, baseType: !1110, size: 64, align: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1152, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1152, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1152, file: !35, line: 3487, baseType: !1027, size: 32, align: 32, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1152, file: !35, line: 3488, baseType: !1160, size: 64, align: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1163, line: 61, baseType: !1164)
!1163 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1163, line: 58, size: 64, align: 32, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1164, file: !1163, line: 59, baseType: !1027, size: 32, align: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1164, file: !1163, line: 60, baseType: !1027, size: 32, align: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1152, file: !35, line: 3489, baseType: !1169, size: 64, align: 64, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1152, file: !35, line: 3490, baseType: !1172, size: 64, align: 64, offset: 384)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1152, file: !35, line: 3491, baseType: !1175, size: 64, align: 64, offset: 448)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1152, file: !35, line: 3492, baseType: !1178, size: 64, align: 64, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1152, file: !35, line: 3493, baseType: !1039, size: 8, align: 8, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1152, file: !35, line: 3494, baseType: !1104, size: 64, align: 64, offset: 640)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1152, file: !35, line: 3495, baseType: !1183, size: 64, align: 64, offset: 704)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1186, file: !35, line: 3402, baseType: !1027, size: 32, align: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1186, file: !35, line: 3403, baseType: !1110, size: 64, align: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1152, file: !35, line: 3507, baseType: !1110, size: 64, align: 64, offset: 768)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1152, file: !35, line: 3516, baseType: !1027, size: 32, align: 32, offset: 832)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1152, file: !35, line: 3517, baseType: !1193, size: 64, align: 64, offset: 896)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1152, file: !35, line: 3527, baseType: !1195, size: 64, align: 64, offset: 960)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!1027, !1099}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1152, file: !35, line: 3535, baseType: !1199, size: 64, align: 64, offset: 1024)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!1027, !1099, !1202}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1152, file: !35, line: 3541, baseType: !1205, size: 64, align: 64, offset: 1088)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1209, line: 223, size: 128, align: 64, elements: !1210)
!1209 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1210 = !{!1211, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1208, file: !1209, line: 224, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1208, file: !1209, line: 225, baseType: !1212, size: 64, align: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1152, file: !35, line: 3549, baseType: !1215, size: 64, align: 64, offset: 1152)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !1193}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1152, file: !35, line: 3551, baseType: !1195, size: 64, align: 64, offset: 1216)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1152, file: !35, line: 3552, baseType: !1220, size: 64, align: 64, offset: 1280)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!1027, !1099, !1223, !1027, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1227)
!1227 = !{!1228, !1231, !1232, !1233, !1234, !1266}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1226, file: !35, line: 3921, baseType: !1229, size: 16, align: 16)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1031, line: 49, baseType: !1230)
!1230 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1226, file: !35, line: 3922, baseType: !1038, size: 32, align: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1226, file: !35, line: 3923, baseType: !1038, size: 32, align: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1226, file: !35, line: 3924, baseType: !1028, size: 32, align: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1226, file: !35, line: 3925, baseType: !1235, size: 64, align: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1255, !1259, !1261, !1262, !1264, !1265}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1238, file: !35, line: 3886, baseType: !1027, size: 32, align: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1238, file: !35, line: 3887, baseType: !1027, size: 32, align: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1238, file: !35, line: 3888, baseType: !1027, size: 32, align: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1238, file: !35, line: 3889, baseType: !1027, size: 32, align: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1238, file: !35, line: 3890, baseType: !1027, size: 32, align: 32, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1238, file: !35, line: 3897, baseType: !1246, size: 768, align: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1248)
!1248 = !{!1249, !1253}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1247, file: !35, line: 3855, baseType: !1250, size: 512, align: 64)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 512, align: 64, elements: !1251)
!1251 = !{!1252}
!1252 = !DISubrange(count: 8)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1247, file: !35, line: 3857, baseType: !1254, size: 256, align: 32, offset: 512)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 256, align: 32, elements: !1251)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1238, file: !35, line: 3903, baseType: !1256, size: 256, align: 64, offset: 960)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 256, align: 64, elements: !1257)
!1257 = !{!1258}
!1258 = !DISubrange(count: 4)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1238, file: !35, line: 3904, baseType: !1260, size: 128, align: 32, offset: 1216)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 128, align: 32, elements: !1257)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1238, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1238, file: !35, line: 3908, baseType: !1263, size: 64, align: 64, offset: 1408)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1238, file: !35, line: 3915, baseType: !1263, size: 64, align: 64, offset: 1472)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1238, file: !35, line: 3917, baseType: !1027, size: 32, align: 32, offset: 1536)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1226, file: !35, line: 3926, baseType: !1041, size: 64, align: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1152, file: !35, line: 3564, baseType: !1268, size: 64, align: 64, offset: 1344)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!1027, !1099, !1271, !1305, !1385}
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1274)
!1274 = !{!1275, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1301, !1302, !1303, !1304}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1273, file: !35, line: 1451, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1278, line: 94, baseType: !1279)
!1278 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1278, line: 81, size: 192, align: 64, elements: !1280)
!1280 = !{!1281, !1285, !1286}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1279, file: !1278, line: 82, baseType: !1282, size: 64, align: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1278, line: 73, baseType: !1284)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1278, line: 73, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1279, file: !1278, line: 89, baseType: !1223, size: 64, align: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1279, file: !1278, line: 93, baseType: !1027, size: 32, align: 32, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1273, file: !35, line: 1461, baseType: !1041, size: 64, align: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1273, file: !35, line: 1467, baseType: !1041, size: 64, align: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1273, file: !35, line: 1468, baseType: !1223, size: 64, align: 64, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1273, file: !35, line: 1469, baseType: !1027, size: 32, align: 32, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1273, file: !35, line: 1470, baseType: !1027, size: 32, align: 32, offset: 288)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1273, file: !35, line: 1474, baseType: !1027, size: 32, align: 32, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1273, file: !35, line: 1479, baseType: !1294, size: 64, align: 64, offset: 384)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1297)
!1297 = !{!1298, !1299, !1300}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1296, file: !35, line: 1412, baseType: !1223, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1296, file: !35, line: 1413, baseType: !1027, size: 32, align: 32, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1296, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1273, file: !35, line: 1480, baseType: !1027, size: 32, align: 32, offset: 448)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1273, file: !35, line: 1486, baseType: !1041, size: 64, align: 64, offset: 512)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1273, file: !35, line: 1488, baseType: !1041, size: 64, align: 64, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1273, file: !35, line: 1497, baseType: !1041, size: 64, align: 64, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1339, !1341, !1342, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1373, !1374, !1375, !1376, !1377, !1378, !1381, !1382, !1383, !1384}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1308, file: !758, line: 282, baseType: !1250, size: 512, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1308, file: !758, line: 299, baseType: !1254, size: 256, align: 32, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1308, file: !758, line: 315, baseType: !1313, size: 64, align: 64, offset: 768)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1308, file: !758, line: 326, baseType: !1027, size: 32, align: 32, offset: 832)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1308, file: !758, line: 326, baseType: !1027, size: 32, align: 32, offset: 864)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1308, file: !758, line: 334, baseType: !1027, size: 32, align: 32, offset: 896)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1308, file: !758, line: 341, baseType: !1027, size: 32, align: 32, offset: 928)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1308, file: !758, line: 346, baseType: !1027, size: 32, align: 32, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1308, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1308, file: !758, line: 356, baseType: !1162, size: 64, align: 32, offset: 1024)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1308, file: !758, line: 361, baseType: !1041, size: 64, align: 64, offset: 1088)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1308, file: !758, line: 369, baseType: !1041, size: 64, align: 64, offset: 1152)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1308, file: !758, line: 377, baseType: !1041, size: 64, align: 64, offset: 1216)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1308, file: !758, line: 382, baseType: !1027, size: 32, align: 32, offset: 1280)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1308, file: !758, line: 386, baseType: !1027, size: 32, align: 32, offset: 1312)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1308, file: !758, line: 391, baseType: !1027, size: 32, align: 32, offset: 1344)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1308, file: !758, line: 396, baseType: !1051, size: 64, align: 64, offset: 1408)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1308, file: !758, line: 403, baseType: !1329, size: 512, align: 64, offset: 1472)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 512, align: 64, elements: !1251)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1308, file: !758, line: 410, baseType: !1027, size: 32, align: 32, offset: 1984)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1308, file: !758, line: 415, baseType: !1027, size: 32, align: 32, offset: 2016)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1308, file: !758, line: 420, baseType: !1027, size: 32, align: 32, offset: 2048)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1308, file: !758, line: 425, baseType: !1027, size: 32, align: 32, offset: 2080)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1308, file: !758, line: 435, baseType: !1041, size: 64, align: 64, offset: 2112)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1308, file: !758, line: 440, baseType: !1027, size: 32, align: 32, offset: 2176)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1308, file: !758, line: 445, baseType: !1043, size: 64, align: 64, offset: 2240)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1308, file: !758, line: 459, baseType: !1338, size: 512, align: 64, offset: 2304)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 512, align: 64, elements: !1251)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1308, file: !758, line: 473, baseType: !1340, size: 64, align: 64, offset: 2816)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1308, file: !758, line: 477, baseType: !1027, size: 32, align: 32, offset: 2880)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1308, file: !758, line: 479, baseType: !1343, size: 64, align: 64, offset: 2944)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1356}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1346, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1346, file: !758, line: 203, baseType: !1223, size: 64, align: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1346, file: !758, line: 204, baseType: !1027, size: 32, align: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1346, file: !758, line: 205, baseType: !1352, size: 64, align: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1354, line: 86, baseType: !1355)
!1354 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1354, line: 86, flags: DIFlagFwdDecl)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1346, file: !758, line: 206, baseType: !1276, size: 64, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1308, file: !758, line: 480, baseType: !1027, size: 32, align: 32, offset: 3008)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1308, file: !758, line: 505, baseType: !1027, size: 32, align: 32, offset: 3040)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1308, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1308, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1308, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1308, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1308, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1308, file: !758, line: 532, baseType: !1041, size: 64, align: 64, offset: 3264)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1308, file: !758, line: 539, baseType: !1041, size: 64, align: 64, offset: 3328)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1308, file: !758, line: 547, baseType: !1041, size: 64, align: 64, offset: 3392)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1308, file: !758, line: 554, baseType: !1352, size: 64, align: 64, offset: 3456)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1308, file: !758, line: 563, baseType: !1027, size: 32, align: 32, offset: 3520)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1308, file: !758, line: 572, baseType: !1027, size: 32, align: 32, offset: 3552)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1308, file: !758, line: 581, baseType: !1027, size: 32, align: 32, offset: 3584)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1308, file: !758, line: 588, baseType: !1372, size: 64, align: 64, offset: 3648)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1308, file: !758, line: 593, baseType: !1027, size: 32, align: 32, offset: 3712)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1308, file: !758, line: 596, baseType: !1027, size: 32, align: 32, offset: 3744)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1308, file: !758, line: 599, baseType: !1276, size: 64, align: 64, offset: 3776)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1308, file: !758, line: 605, baseType: !1276, size: 64, align: 64, offset: 3840)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1308, file: !758, line: 616, baseType: !1276, size: 64, align: 64, offset: 3904)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1308, file: !758, line: 626, baseType: !1379, size: 64, align: 64, offset: 3968)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1380, line: 216, baseType: !1044)
!1380 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1308, file: !758, line: 627, baseType: !1379, size: 64, align: 64, offset: 4032)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1308, file: !758, line: 628, baseType: !1379, size: 64, align: 64, offset: 4096)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1308, file: !758, line: 629, baseType: !1379, size: 64, align: 64, offset: 4160)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1308, file: !758, line: 645, baseType: !1276, size: 64, align: 64, offset: 4224)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1152, file: !35, line: 3566, baseType: !1387, size: 64, align: 64, offset: 1408)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!1027, !1099, !1051, !1385, !1271}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1152, file: !35, line: 3567, baseType: !1195, size: 64, align: 64, offset: 1472)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1152, file: !35, line: 3576, baseType: !1392, size: 64, align: 64, offset: 1536)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64, align: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!1027, !1099, !1305}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1152, file: !35, line: 3577, baseType: !1396, size: 64, align: 64, offset: 1600)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64, align: 64)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!1027, !1099, !1271}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1152, file: !35, line: 3584, baseType: !1400, size: 64, align: 64, offset: 1664)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64, align: 64)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!1027, !1099, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1152, file: !35, line: 3589, baseType: !1405, size: 64, align: 64, offset: 1728)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{null, !1099}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1152, file: !35, line: 3594, baseType: !1027, size: 32, align: 32, offset: 1792)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1152, file: !35, line: 3600, baseType: !1110, size: 64, align: 64, offset: 1856)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1152, file: !35, line: 3609, baseType: !1411, size: 64, align: 64, offset: 1920)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1101, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1101, file: !35, line: 1581, baseType: !1028, size: 32, align: 32, offset: 224)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1101, file: !35, line: 1583, baseType: !1051, size: 64, align: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1101, file: !35, line: 1591, baseType: !1419, size: 64, align: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64, align: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1209, line: 129, size: 1664, align: 64, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425, !1426, !1444, !1445, !1451, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1420, file: !1209, line: 136, baseType: !1027, size: 32, align: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1420, file: !1209, line: 151, baseType: !1027, size: 32, align: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1420, file: !1209, line: 157, baseType: !1027, size: 32, align: 32, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1420, file: !1209, line: 159, baseType: !1403, size: 64, align: 64, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1420, file: !1209, line: 161, baseType: !1427, size: 64, align: 64, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64, align: 64)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1209, line: 117, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1209, line: 100, size: 832, align: 64, elements: !1430)
!1430 = !{!1431, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1429, file: !1209, line: 105, baseType: !1432, size: 256, align: 64)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 256, align: 64, elements: !1257)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1278, line: 238, baseType: !1435)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1278, line: 238, flags: DIFlagFwdDecl)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1429, file: !1209, line: 110, baseType: !1027, size: 32, align: 32, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1429, file: !1209, line: 111, baseType: !1027, size: 32, align: 32, offset: 288)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1429, file: !1209, line: 111, baseType: !1027, size: 32, align: 32, offset: 320)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1429, file: !1209, line: 112, baseType: !1254, size: 256, align: 32, offset: 352)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1429, file: !1209, line: 113, baseType: !1260, size: 128, align: 32, offset: 608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1429, file: !1209, line: 114, baseType: !1027, size: 32, align: 32, offset: 736)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1429, file: !1209, line: 115, baseType: !1027, size: 32, align: 32, offset: 768)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1429, file: !1209, line: 116, baseType: !1027, size: 32, align: 32, offset: 800)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1420, file: !1209, line: 163, baseType: !1051, size: 64, align: 64, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1420, file: !1209, line: 165, baseType: !1446, size: 128, align: 64, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1209, line: 122, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1209, line: 119, size: 128, align: 64, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1447, file: !1209, line: 120, baseType: !1271, size: 64, align: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1447, file: !1209, line: 121, baseType: !1403, size: 64, align: 64, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1420, file: !1209, line: 166, baseType: !1452, size: 128, align: 64, offset: 448)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1209, line: 127, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1209, line: 124, size: 128, align: 64, elements: !1454)
!1454 = !{!1455, !1528}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1453, file: !1209, line: 125, baseType: !1456, size: 64, align: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1460)
!1460 = !{!1461, !1462, !1486, !1490, !1491, !1525, !1526, !1527}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1459, file: !35, line: 5751, baseType: !1104, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1459, file: !35, line: 5756, baseType: !1463, size: 64, align: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1466)
!1466 = !{!1467, !1468, !1471, !1472, !1473, !1477, !1481, !1485}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1465, file: !35, line: 5797, baseType: !1110, size: 64, align: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1465, file: !35, line: 5804, baseType: !1469, size: 64, align: 64, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1465, file: !35, line: 5815, baseType: !1104, size: 64, align: 64, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1465, file: !35, line: 5825, baseType: !1027, size: 32, align: 32, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1465, file: !35, line: 5826, baseType: !1474, size: 64, align: 64, offset: 256)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!1027, !1457}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1465, file: !35, line: 5827, baseType: !1478, size: 64, align: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!1027, !1457, !1271}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1465, file: !35, line: 5828, baseType: !1482, size: 64, align: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !1457}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1465, file: !35, line: 5829, baseType: !1482, size: 64, align: 64, offset: 448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1459, file: !35, line: 5762, baseType: !1487, size: 64, align: 64, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1489)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1459, file: !35, line: 5768, baseType: !1051, size: 64, align: 64, offset: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1459, file: !35, line: 5775, baseType: !1492, size: 64, align: 64, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64, align: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1494, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1494, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1494, file: !35, line: 3948, baseType: !1038, size: 32, align: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1494, file: !35, line: 3958, baseType: !1223, size: 64, align: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1494, file: !35, line: 3962, baseType: !1027, size: 32, align: 32, offset: 192)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1494, file: !35, line: 3968, baseType: !1027, size: 32, align: 32, offset: 224)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1494, file: !35, line: 3973, baseType: !1041, size: 64, align: 64, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1494, file: !35, line: 3986, baseType: !1027, size: 32, align: 32, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1494, file: !35, line: 3999, baseType: !1027, size: 32, align: 32, offset: 352)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1494, file: !35, line: 4004, baseType: !1027, size: 32, align: 32, offset: 384)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1494, file: !35, line: 4005, baseType: !1027, size: 32, align: 32, offset: 416)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1494, file: !35, line: 4010, baseType: !1027, size: 32, align: 32, offset: 448)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1494, file: !35, line: 4011, baseType: !1027, size: 32, align: 32, offset: 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1494, file: !35, line: 4020, baseType: !1162, size: 64, align: 32, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1494, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1494, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1494, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1494, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1494, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1494, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1494, file: !35, line: 4039, baseType: !1027, size: 32, align: 32, offset: 768)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1494, file: !35, line: 4046, baseType: !1043, size: 64, align: 64, offset: 832)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1494, file: !35, line: 4050, baseType: !1027, size: 32, align: 32, offset: 896)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1494, file: !35, line: 4054, baseType: !1027, size: 32, align: 32, offset: 928)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1494, file: !35, line: 4061, baseType: !1027, size: 32, align: 32, offset: 960)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1494, file: !35, line: 4065, baseType: !1027, size: 32, align: 32, offset: 992)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1494, file: !35, line: 4073, baseType: !1027, size: 32, align: 32, offset: 1024)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1494, file: !35, line: 4080, baseType: !1027, size: 32, align: 32, offset: 1056)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1494, file: !35, line: 4084, baseType: !1027, size: 32, align: 32, offset: 1088)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1459, file: !35, line: 5781, baseType: !1492, size: 64, align: 64, offset: 320)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1459, file: !35, line: 5787, baseType: !1162, size: 64, align: 32, offset: 384)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1459, file: !35, line: 5793, baseType: !1162, size: 64, align: 32, offset: 448)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1453, file: !1209, line: 126, baseType: !1027, size: 32, align: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1420, file: !1209, line: 172, baseType: !1271, size: 64, align: 64, offset: 576)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1420, file: !1209, line: 177, baseType: !1223, size: 64, align: 64, offset: 640)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1420, file: !1209, line: 178, baseType: !1028, size: 32, align: 32, offset: 704)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1420, file: !1209, line: 180, baseType: !1051, size: 64, align: 64, offset: 768)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1420, file: !1209, line: 185, baseType: !1027, size: 32, align: 32, offset: 832)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1420, file: !1209, line: 190, baseType: !1051, size: 64, align: 64, offset: 896)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1420, file: !1209, line: 195, baseType: !1027, size: 32, align: 32, offset: 960)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1420, file: !1209, line: 200, baseType: !1271, size: 64, align: 64, offset: 1024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1420, file: !1209, line: 201, baseType: !1027, size: 32, align: 32, offset: 1088)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1420, file: !1209, line: 202, baseType: !1403, size: 64, align: 64, offset: 1152)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1420, file: !1209, line: 203, baseType: !1027, size: 32, align: 32, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1420, file: !1209, line: 205, baseType: !1027, size: 32, align: 32, offset: 1248)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1420, file: !1209, line: 206, baseType: !1027, size: 32, align: 32, offset: 1280)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1420, file: !1209, line: 209, baseType: !1379, size: 64, align: 64, offset: 1344)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1420, file: !1209, line: 212, baseType: !1379, size: 64, align: 64, offset: 1408)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1420, file: !1209, line: 213, baseType: !1403, size: 64, align: 64, offset: 1472)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1420, file: !1209, line: 215, baseType: !1027, size: 32, align: 32, offset: 1536)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1420, file: !1209, line: 217, baseType: !1027, size: 32, align: 32, offset: 1568)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1420, file: !1209, line: 220, baseType: !1027, size: 32, align: 32, offset: 1600)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1101, file: !35, line: 1598, baseType: !1051, size: 64, align: 64, offset: 384)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1101, file: !35, line: 1606, baseType: !1041, size: 64, align: 64, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1101, file: !35, line: 1614, baseType: !1027, size: 32, align: 32, offset: 512)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1101, file: !35, line: 1622, baseType: !1027, size: 32, align: 32, offset: 544)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1101, file: !35, line: 1628, baseType: !1027, size: 32, align: 32, offset: 576)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1101, file: !35, line: 1636, baseType: !1027, size: 32, align: 32, offset: 608)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1101, file: !35, line: 1643, baseType: !1027, size: 32, align: 32, offset: 640)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1101, file: !35, line: 1657, baseType: !1223, size: 64, align: 64, offset: 704)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1101, file: !35, line: 1658, baseType: !1027, size: 32, align: 32, offset: 768)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1101, file: !35, line: 1679, baseType: !1162, size: 64, align: 32, offset: 800)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1101, file: !35, line: 1688, baseType: !1027, size: 32, align: 32, offset: 864)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1101, file: !35, line: 1712, baseType: !1027, size: 32, align: 32, offset: 896)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1101, file: !35, line: 1729, baseType: !1027, size: 32, align: 32, offset: 928)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1101, file: !35, line: 1729, baseType: !1027, size: 32, align: 32, offset: 960)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1101, file: !35, line: 1744, baseType: !1027, size: 32, align: 32, offset: 992)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1101, file: !35, line: 1744, baseType: !1027, size: 32, align: 32, offset: 1024)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1101, file: !35, line: 1751, baseType: !1027, size: 32, align: 32, offset: 1056)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1101, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1101, file: !35, line: 1791, baseType: !1567, size: 64, align: 64, offset: 1152)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1570, !1305, !1385, !1027, !1027, !1027}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1101, file: !35, line: 1808, baseType: !1572, size: 64, align: 64, offset: 1216)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!494, !1570, !1169}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1101, file: !35, line: 1816, baseType: !1027, size: 32, align: 32, offset: 1280)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1101, file: !35, line: 1825, baseType: !1063, size: 32, align: 32, offset: 1312)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1101, file: !35, line: 1830, baseType: !1027, size: 32, align: 32, offset: 1344)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1101, file: !35, line: 1838, baseType: !1063, size: 32, align: 32, offset: 1376)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1101, file: !35, line: 1846, baseType: !1027, size: 32, align: 32, offset: 1408)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1101, file: !35, line: 1851, baseType: !1027, size: 32, align: 32, offset: 1440)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1101, file: !35, line: 1861, baseType: !1063, size: 32, align: 32, offset: 1472)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1101, file: !35, line: 1868, baseType: !1063, size: 32, align: 32, offset: 1504)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1101, file: !35, line: 1875, baseType: !1063, size: 32, align: 32, offset: 1536)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1101, file: !35, line: 1882, baseType: !1063, size: 32, align: 32, offset: 1568)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1101, file: !35, line: 1889, baseType: !1063, size: 32, align: 32, offset: 1600)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1101, file: !35, line: 1896, baseType: !1063, size: 32, align: 32, offset: 1632)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1101, file: !35, line: 1903, baseType: !1063, size: 32, align: 32, offset: 1664)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1101, file: !35, line: 1910, baseType: !1027, size: 32, align: 32, offset: 1696)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1101, file: !35, line: 1915, baseType: !1027, size: 32, align: 32, offset: 1728)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1101, file: !35, line: 1926, baseType: !1385, size: 64, align: 64, offset: 1792)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1101, file: !35, line: 1935, baseType: !1162, size: 64, align: 32, offset: 1856)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1101, file: !35, line: 1942, baseType: !1027, size: 32, align: 32, offset: 1920)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1101, file: !35, line: 1948, baseType: !1027, size: 32, align: 32, offset: 1952)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1101, file: !35, line: 1954, baseType: !1027, size: 32, align: 32, offset: 1984)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1101, file: !35, line: 1960, baseType: !1027, size: 32, align: 32, offset: 2016)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1101, file: !35, line: 1984, baseType: !1027, size: 32, align: 32, offset: 2048)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1101, file: !35, line: 1991, baseType: !1027, size: 32, align: 32, offset: 2080)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1101, file: !35, line: 1996, baseType: !1027, size: 32, align: 32, offset: 2112)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1101, file: !35, line: 2004, baseType: !1027, size: 32, align: 32, offset: 2144)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1101, file: !35, line: 2011, baseType: !1027, size: 32, align: 32, offset: 2176)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1101, file: !35, line: 2018, baseType: !1027, size: 32, align: 32, offset: 2208)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1101, file: !35, line: 2027, baseType: !1027, size: 32, align: 32, offset: 2240)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1101, file: !35, line: 2034, baseType: !1027, size: 32, align: 32, offset: 2272)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1101, file: !35, line: 2044, baseType: !1027, size: 32, align: 32, offset: 2304)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1101, file: !35, line: 2054, baseType: !1606, size: 64, align: 64, offset: 2368)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1101, file: !35, line: 2061, baseType: !1606, size: 64, align: 64, offset: 2432)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1101, file: !35, line: 2066, baseType: !1027, size: 32, align: 32, offset: 2496)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1101, file: !35, line: 2070, baseType: !1027, size: 32, align: 32, offset: 2528)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1101, file: !35, line: 2078, baseType: !1027, size: 32, align: 32, offset: 2560)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1101, file: !35, line: 2085, baseType: !1027, size: 32, align: 32, offset: 2592)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1101, file: !35, line: 2092, baseType: !1027, size: 32, align: 32, offset: 2624)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1101, file: !35, line: 2099, baseType: !1027, size: 32, align: 32, offset: 2656)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1101, file: !35, line: 2106, baseType: !1027, size: 32, align: 32, offset: 2688)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1101, file: !35, line: 2113, baseType: !1027, size: 32, align: 32, offset: 2720)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1101, file: !35, line: 2120, baseType: !1027, size: 32, align: 32, offset: 2752)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1101, file: !35, line: 2125, baseType: !1027, size: 32, align: 32, offset: 2784)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1101, file: !35, line: 2133, baseType: !1027, size: 32, align: 32, offset: 2816)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1101, file: !35, line: 2140, baseType: !1027, size: 32, align: 32, offset: 2848)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1101, file: !35, line: 2145, baseType: !1027, size: 32, align: 32, offset: 2880)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1101, file: !35, line: 2153, baseType: !1027, size: 32, align: 32, offset: 2912)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1101, file: !35, line: 2158, baseType: !1027, size: 32, align: 32, offset: 2944)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1101, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1101, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1101, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1101, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1101, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1101, file: !35, line: 2203, baseType: !1027, size: 32, align: 32, offset: 3136)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1101, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1101, file: !35, line: 2212, baseType: !1027, size: 32, align: 32, offset: 3200)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1101, file: !35, line: 2213, baseType: !1027, size: 32, align: 32, offset: 3232)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1101, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1101, file: !35, line: 2232, baseType: !1027, size: 32, align: 32, offset: 3296)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1101, file: !35, line: 2243, baseType: !1027, size: 32, align: 32, offset: 3328)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1101, file: !35, line: 2249, baseType: !1027, size: 32, align: 32, offset: 3360)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1101, file: !35, line: 2256, baseType: !1027, size: 32, align: 32, offset: 3392)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1101, file: !35, line: 2263, baseType: !1043, size: 64, align: 64, offset: 3456)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1101, file: !35, line: 2270, baseType: !1043, size: 64, align: 64, offset: 3520)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1101, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1101, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1101, file: !35, line: 2367, baseType: !1642, size: 64, align: 64, offset: 3648)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!1027, !1570, !1403, !1027}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1101, file: !35, line: 2383, baseType: !1027, size: 32, align: 32, offset: 3712)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1101, file: !35, line: 2386, baseType: !1063, size: 32, align: 32, offset: 3744)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1101, file: !35, line: 2387, baseType: !1063, size: 32, align: 32, offset: 3776)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1101, file: !35, line: 2394, baseType: !1027, size: 32, align: 32, offset: 3808)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1101, file: !35, line: 2401, baseType: !1027, size: 32, align: 32, offset: 3840)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1101, file: !35, line: 2408, baseType: !1027, size: 32, align: 32, offset: 3872)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1101, file: !35, line: 2415, baseType: !1027, size: 32, align: 32, offset: 3904)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1101, file: !35, line: 2422, baseType: !1027, size: 32, align: 32, offset: 3936)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1101, file: !35, line: 2423, baseType: !1654, size: 64, align: 64, offset: 3968)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1656, file: !35, line: 827, baseType: !1027, size: 32, align: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1656, file: !35, line: 828, baseType: !1027, size: 32, align: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1656, file: !35, line: 829, baseType: !1027, size: 32, align: 32, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1656, file: !35, line: 830, baseType: !1063, size: 32, align: 32, offset: 96)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1101, file: !35, line: 2430, baseType: !1041, size: 64, align: 64, offset: 4032)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1101, file: !35, line: 2437, baseType: !1041, size: 64, align: 64, offset: 4096)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1101, file: !35, line: 2444, baseType: !1063, size: 32, align: 32, offset: 4160)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1101, file: !35, line: 2451, baseType: !1063, size: 32, align: 32, offset: 4192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1101, file: !35, line: 2458, baseType: !1027, size: 32, align: 32, offset: 4224)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1101, file: !35, line: 2469, baseType: !1027, size: 32, align: 32, offset: 4256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1101, file: !35, line: 2475, baseType: !1027, size: 32, align: 32, offset: 4288)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1101, file: !35, line: 2481, baseType: !1027, size: 32, align: 32, offset: 4320)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1101, file: !35, line: 2485, baseType: !1027, size: 32, align: 32, offset: 4352)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1101, file: !35, line: 2489, baseType: !1027, size: 32, align: 32, offset: 4384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1101, file: !35, line: 2493, baseType: !1027, size: 32, align: 32, offset: 4416)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1101, file: !35, line: 2501, baseType: !1027, size: 32, align: 32, offset: 4448)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1101, file: !35, line: 2506, baseType: !1027, size: 32, align: 32, offset: 4480)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1101, file: !35, line: 2510, baseType: !1027, size: 32, align: 32, offset: 4512)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1101, file: !35, line: 2514, baseType: !1041, size: 64, align: 64, offset: 4544)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1101, file: !35, line: 2528, baseType: !1678, size: 64, align: 64, offset: 4608)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{null, !1570, !1051, !1027, !1027}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1101, file: !35, line: 2534, baseType: !1027, size: 32, align: 32, offset: 4672)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1101, file: !35, line: 2545, baseType: !1027, size: 32, align: 32, offset: 4704)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1101, file: !35, line: 2547, baseType: !1027, size: 32, align: 32, offset: 4736)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1101, file: !35, line: 2549, baseType: !1027, size: 32, align: 32, offset: 4768)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1101, file: !35, line: 2551, baseType: !1027, size: 32, align: 32, offset: 4800)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1101, file: !35, line: 2553, baseType: !1027, size: 32, align: 32, offset: 4832)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1101, file: !35, line: 2555, baseType: !1027, size: 32, align: 32, offset: 4864)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1101, file: !35, line: 2557, baseType: !1027, size: 32, align: 32, offset: 4896)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1101, file: !35, line: 2559, baseType: !1027, size: 32, align: 32, offset: 4928)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1101, file: !35, line: 2563, baseType: !1027, size: 32, align: 32, offset: 4960)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1101, file: !35, line: 2571, baseType: !1263, size: 64, align: 64, offset: 4992)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1101, file: !35, line: 2579, baseType: !1263, size: 64, align: 64, offset: 5056)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1101, file: !35, line: 2586, baseType: !1027, size: 32, align: 32, offset: 5120)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1101, file: !35, line: 2615, baseType: !1027, size: 32, align: 32, offset: 5152)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1101, file: !35, line: 2627, baseType: !1027, size: 32, align: 32, offset: 5184)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1101, file: !35, line: 2637, baseType: !1027, size: 32, align: 32, offset: 5216)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1101, file: !35, line: 2681, baseType: !1027, size: 32, align: 32, offset: 5248)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1101, file: !35, line: 2709, baseType: !1041, size: 64, align: 64, offset: 5312)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1101, file: !35, line: 2716, baseType: !1700, size: 64, align: 64, offset: 5376)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1714, !1718, !1719, !1720, !1721, !1727, !1728, !1729, !1730, !1731}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1702, file: !35, line: 3642, baseType: !1110, size: 64, align: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1702, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1702, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1702, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1702, file: !35, line: 3669, baseType: !1027, size: 32, align: 32, offset: 160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1702, file: !35, line: 3682, baseType: !1400, size: 64, align: 64, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1702, file: !35, line: 3698, baseType: !1711, size: 64, align: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!1027, !1099, !1212, !1038}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1702, file: !35, line: 3712, baseType: !1715, size: 64, align: 64, offset: 320)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!1027, !1099, !1027, !1212, !1038}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1702, file: !35, line: 3726, baseType: !1711, size: 64, align: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1702, file: !35, line: 3737, baseType: !1195, size: 64, align: 64, offset: 448)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1702, file: !35, line: 3746, baseType: !1027, size: 32, align: 32, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1702, file: !35, line: 3757, baseType: !1722, size: 64, align: 64, offset: 576)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64, align: 64)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{null, !1725}
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1726 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1702, file: !35, line: 3766, baseType: !1195, size: 64, align: 64, offset: 640)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1702, file: !35, line: 3774, baseType: !1195, size: 64, align: 64, offset: 704)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1702, file: !35, line: 3780, baseType: !1027, size: 32, align: 32, offset: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1702, file: !35, line: 3785, baseType: !1027, size: 32, align: 32, offset: 800)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1702, file: !35, line: 3795, baseType: !1732, size: 64, align: 64, offset: 832)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!1027, !1099, !1276}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1101, file: !35, line: 2728, baseType: !1051, size: 64, align: 64, offset: 5440)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1101, file: !35, line: 2735, baseType: !1329, size: 512, align: 64, offset: 5504)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1101, file: !35, line: 2742, baseType: !1027, size: 32, align: 32, offset: 6016)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1101, file: !35, line: 2755, baseType: !1027, size: 32, align: 32, offset: 6048)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1101, file: !35, line: 2776, baseType: !1027, size: 32, align: 32, offset: 6080)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1101, file: !35, line: 2783, baseType: !1027, size: 32, align: 32, offset: 6112)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1101, file: !35, line: 2791, baseType: !1027, size: 32, align: 32, offset: 6144)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1101, file: !35, line: 2802, baseType: !1403, size: 64, align: 64, offset: 6208)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1101, file: !35, line: 2811, baseType: !1027, size: 32, align: 32, offset: 6272)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1101, file: !35, line: 2821, baseType: !1027, size: 32, align: 32, offset: 6304)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1101, file: !35, line: 2830, baseType: !1027, size: 32, align: 32, offset: 6336)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1101, file: !35, line: 2840, baseType: !1027, size: 32, align: 32, offset: 6368)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1101, file: !35, line: 2851, baseType: !1748, size: 64, align: 64, offset: 6400)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64, align: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!1027, !1570, !1751, !1051, !1385, !1027, !1027}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!1027, !1570, !1051}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1101, file: !35, line: 2871, baseType: !1755, size: 64, align: 64, offset: 6464)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!1027, !1570, !1758, !1051, !1385, !1027}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!1027, !1570, !1051, !1027, !1027}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1101, file: !35, line: 2878, baseType: !1027, size: 32, align: 32, offset: 6528)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1101, file: !35, line: 2885, baseType: !1027, size: 32, align: 32, offset: 6560)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1101, file: !35, line: 3005, baseType: !1027, size: 32, align: 32, offset: 6592)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1101, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1101, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1101, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1101, file: !35, line: 3037, baseType: !1223, size: 64, align: 64, offset: 6720)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1101, file: !35, line: 3038, baseType: !1027, size: 32, align: 32, offset: 6784)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1101, file: !35, line: 3050, baseType: !1043, size: 64, align: 64, offset: 6848)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1101, file: !35, line: 3065, baseType: !1027, size: 32, align: 32, offset: 6912)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1101, file: !35, line: 3083, baseType: !1027, size: 32, align: 32, offset: 6944)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1101, file: !35, line: 3092, baseType: !1162, size: 64, align: 32, offset: 6976)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1101, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1101, file: !35, line: 3106, baseType: !1162, size: 64, align: 32, offset: 7072)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1101, file: !35, line: 3113, baseType: !1776, size: 64, align: 64, offset: 7168)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64, align: 64)
!1777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1780)
!1780 = !{!1781, !1782, !1783, !1784, !1785, !1786, !1789}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1779, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1779, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1779, file: !35, line: 720, baseType: !1110, size: 64, align: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1779, file: !35, line: 724, baseType: !1110, size: 64, align: 64, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1779, file: !35, line: 728, baseType: !1027, size: 32, align: 32, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1779, file: !35, line: 734, baseType: !1787, size: 64, align: 64, offset: 256)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1779, file: !35, line: 739, baseType: !1790, size: 64, align: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64, align: 64)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1101, file: !35, line: 3129, baseType: !1041, size: 64, align: 64, offset: 7232)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1101, file: !35, line: 3130, baseType: !1041, size: 64, align: 64, offset: 7296)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1101, file: !35, line: 3131, baseType: !1041, size: 64, align: 64, offset: 7360)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1101, file: !35, line: 3132, baseType: !1041, size: 64, align: 64, offset: 7424)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1101, file: !35, line: 3139, baseType: !1263, size: 64, align: 64, offset: 7488)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1101, file: !35, line: 3147, baseType: !1027, size: 32, align: 32, offset: 7552)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1101, file: !35, line: 3165, baseType: !1027, size: 32, align: 32, offset: 7584)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1101, file: !35, line: 3172, baseType: !1027, size: 32, align: 32, offset: 7616)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1101, file: !35, line: 3180, baseType: !1027, size: 32, align: 32, offset: 7648)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1101, file: !35, line: 3191, baseType: !1606, size: 64, align: 64, offset: 7680)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1101, file: !35, line: 3199, baseType: !1223, size: 64, align: 64, offset: 7744)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1101, file: !35, line: 3207, baseType: !1263, size: 64, align: 64, offset: 7808)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1101, file: !35, line: 3214, baseType: !1028, size: 32, align: 32, offset: 7872)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1101, file: !35, line: 3224, baseType: !1294, size: 64, align: 64, offset: 7936)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1101, file: !35, line: 3225, baseType: !1027, size: 32, align: 32, offset: 8000)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1101, file: !35, line: 3249, baseType: !1276, size: 64, align: 64, offset: 8064)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1101, file: !35, line: 3256, baseType: !1027, size: 32, align: 32, offset: 8128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1101, file: !35, line: 3271, baseType: !1027, size: 32, align: 32, offset: 8160)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1101, file: !35, line: 3279, baseType: !1041, size: 64, align: 64, offset: 8192)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1101, file: !35, line: 3301, baseType: !1276, size: 64, align: 64, offset: 8256)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1101, file: !35, line: 3310, baseType: !1027, size: 32, align: 32, offset: 8320)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1101, file: !35, line: 3337, baseType: !1027, size: 32, align: 32, offset: 8352)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1101, file: !35, line: 3351, baseType: !1027, size: 32, align: 32, offset: 8384)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1101, file: !35, line: 3359, baseType: !1027, size: 32, align: 32, offset: 8416)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1096, file: !986, line: 103, baseType: !1817, size: 256, align: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1818, line: 70, baseType: !1819)
!1818 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1818, line: 61, size: 256, align: 64, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1819, file: !1818, line: 62, baseType: !1212, size: 64, align: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1819, file: !1818, line: 62, baseType: !1212, size: 64, align: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1819, file: !1818, line: 67, baseType: !1027, size: 32, align: 32, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1819, file: !1818, line: 68, baseType: !1027, size: 32, align: 32, offset: 160)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1819, file: !1818, line: 69, baseType: !1027, size: 32, align: 32, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "gb_in", scope: !1096, file: !986, line: 104, baseType: !1817, size: 256, align: 64, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "crc_present", scope: !1096, file: !986, line: 107, baseType: !1027, size: 32, align: 32, offset: 576)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "npcmblocks", scope: !1096, file: !986, line: 108, baseType: !1027, size: 32, align: 32, offset: 608)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1096, file: !986, line: 109, baseType: !1027, size: 32, align: 32, offset: 640)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mode", scope: !1096, file: !986, line: 110, baseType: !1027, size: 32, align: 32, offset: 672)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1096, file: !986, line: 111, baseType: !1027, size: 32, align: 32, offset: 704)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1096, file: !986, line: 112, baseType: !1027, size: 32, align: 32, offset: 736)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "drc_present", scope: !1096, file: !986, line: 113, baseType: !1027, size: 32, align: 32, offset: 768)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "ts_present", scope: !1096, file: !986, line: 114, baseType: !1027, size: 32, align: 32, offset: 800)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "aux_present", scope: !1096, file: !986, line: 115, baseType: !1027, size: 32, align: 32, offset: 832)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_type", scope: !1096, file: !986, line: 116, baseType: !1027, size: 32, align: 32, offset: 864)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_present", scope: !1096, file: !986, line: 117, baseType: !1027, size: 32, align: 32, offset: 896)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sync_ssf", scope: !1096, file: !986, line: 118, baseType: !1027, size: 32, align: 32, offset: 928)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_present", scope: !1096, file: !986, line: 119, baseType: !1027, size: 32, align: 32, offset: 960)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_history", scope: !1096, file: !986, line: 120, baseType: !1027, size: 32, align: 32, offset: 992)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "filter_perfect", scope: !1096, file: !986, line: 121, baseType: !1027, size: 32, align: 32, offset: 1024)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "source_pcm_res", scope: !1096, file: !986, line: 122, baseType: !1027, size: 32, align: 32, offset: 1056)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "es_format", scope: !1096, file: !986, line: 123, baseType: !1027, size: 32, align: 32, offset: 1088)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_front", scope: !1096, file: !986, line: 124, baseType: !1027, size: 32, align: 32, offset: 1120)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_surround", scope: !1096, file: !986, line: 125, baseType: !1027, size: 32, align: 32, offset: 1152)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "nsubframes", scope: !1096, file: !986, line: 128, baseType: !1027, size: 32, align: 32, offset: 1184)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !1096, file: !986, line: 129, baseType: !1027, size: 32, align: 32, offset: 1216)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !1096, file: !986, line: 130, baseType: !1027, size: 32, align: 32, offset: 1248)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "nsubbands", scope: !1096, file: !986, line: 131, baseType: !1850, size: 56, align: 8, offset: 1280)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 56, align: 8, elements: !1075)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "subband_vq_start", scope: !1096, file: !986, line: 132, baseType: !1850, size: 56, align: 8, offset: 1336)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "joint_intensity_index", scope: !1096, file: !986, line: 133, baseType: !1850, size: 56, align: 8, offset: 1392)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "transition_mode_sel", scope: !1096, file: !986, line: 134, baseType: !1850, size: 56, align: 8, offset: 1448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_sel", scope: !1096, file: !986, line: 135, baseType: !1850, size: 56, align: 8, offset: 1504)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation_sel", scope: !1096, file: !986, line: 136, baseType: !1850, size: 56, align: 8, offset: 1560)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "quant_index_sel", scope: !1096, file: !986, line: 137, baseType: !1857, size: 560, align: 8, offset: 1616)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 560, align: 8, elements: !1858)
!1858 = !{!1076, !1080}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_adj", scope: !1096, file: !986, line: 138, baseType: !1860, size: 2240, align: 32, offset: 2176)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2240, align: 32, elements: !1858)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "nsubsubframes", scope: !1096, file: !986, line: 141, baseType: !1862, size: 128, align: 8, offset: 4416)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 128, align: 8, elements: !1863)
!1863 = !{!1864}
!1864 = !DISubrange(count: 16)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_mode", scope: !1096, file: !986, line: 142, baseType: !1866, size: 3584, align: 8, offset: 4544)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 3584, align: 8, elements: !1867)
!1867 = !{!1076, !1868}
!1868 = !DISubrange(count: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_vq_index", scope: !1096, file: !986, line: 143, baseType: !1870, size: 7168, align: 16, offset: 8128)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 7168, align: 16, elements: !1867)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1031, line: 37, baseType: !1872)
!1872 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation", scope: !1096, file: !986, line: 144, baseType: !1866, size: 3584, align: 8, offset: 15296)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "transition_mode", scope: !1096, file: !986, line: 145, baseType: !1875, size: 28672, align: 8, offset: 18880)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 28672, align: 8, elements: !1876)
!1876 = !{!1864, !1076, !1877}
!1877 = !DISubrange(count: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factors", scope: !1096, file: !986, line: 146, baseType: !1879, size: 14336, align: 32, offset: 47552)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 14336, align: 32, elements: !1880)
!1880 = !{!1076, !1877, !1059}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "joint_scale_sel", scope: !1096, file: !986, line: 147, baseType: !1850, size: 56, align: 8, offset: 61888)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "joint_scale_factors", scope: !1096, file: !986, line: 148, baseType: !1883, size: 14336, align: 32, offset: 61952)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 14336, align: 32, elements: !1867)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_embedded", scope: !1096, file: !986, line: 151, baseType: !1027, size: 32, align: 32, offset: 76288)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_type", scope: !1096, file: !986, line: 152, baseType: !1027, size: 32, align: 32, offset: 76320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_coeff", scope: !1096, file: !986, line: 153, baseType: !1887, size: 768, align: 32, offset: 76352)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 768, align: 32, elements: !1888)
!1888 = !{!1889}
!1889 = !DISubrange(count: 24)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_mask", scope: !1096, file: !986, line: 156, baseType: !1027, size: 32, align: 32, offset: 77120)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "xch_pos", scope: !1096, file: !986, line: 159, baseType: !1027, size: 32, align: 32, offset: 77152)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_crc_present", scope: !1096, file: !986, line: 162, baseType: !1027, size: 32, align: 32, offset: 77184)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_mask_nbits", scope: !1096, file: !986, line: 163, baseType: !1027, size: 32, align: 32, offset: 77216)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_core_mask", scope: !1096, file: !986, line: 164, baseType: !1027, size: 32, align: 32, offset: 77248)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_spkr_mask", scope: !1096, file: !986, line: 165, baseType: !1027, size: 32, align: 32, offset: 77280)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_embedded", scope: !1096, file: !986, line: 166, baseType: !1027, size: 32, align: 32, offset: 77312)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_scale_inv", scope: !1096, file: !986, line: 167, baseType: !1027, size: 32, align: 32, offset: 77344)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_mask", scope: !1096, file: !986, line: 168, baseType: !1899, size: 64, align: 32, offset: 77376)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 64, align: 32, elements: !1058)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_coeff", scope: !1096, file: !986, line: 169, baseType: !1901, size: 384, align: 32, offset: 77440)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 384, align: 32, elements: !1902)
!1902 = !{!1903}
!1903 = !DISubrange(count: 12)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_pos", scope: !1096, file: !986, line: 170, baseType: !1027, size: 32, align: 32, offset: 77824)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "x96_rev_no", scope: !1096, file: !986, line: 173, baseType: !1027, size: 32, align: 32, offset: 77856)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "x96_crc_present", scope: !1096, file: !986, line: 174, baseType: !1027, size: 32, align: 32, offset: 77888)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "x96_nchannels", scope: !1096, file: !986, line: 175, baseType: !1027, size: 32, align: 32, offset: 77920)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "x96_high_res", scope: !1096, file: !986, line: 176, baseType: !1027, size: 32, align: 32, offset: 77952)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_start", scope: !1096, file: !986, line: 177, baseType: !1027, size: 32, align: 32, offset: 77984)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "x96_rand", scope: !1096, file: !986, line: 178, baseType: !1027, size: 32, align: 32, offset: 78016)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "x96_pos", scope: !1096, file: !986, line: 179, baseType: !1027, size: 32, align: 32, offset: 78048)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_size", scope: !1096, file: !986, line: 182, baseType: !1028, size: 32, align: 32, offset: 78080)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_buffer", scope: !1096, file: !986, line: 183, baseType: !1029, size: 64, align: 64, offset: 78144)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_samples", scope: !1096, file: !986, line: 184, baseType: !1915, size: 28672, align: 64, offset: 78208)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 28672, align: 64, elements: !1867)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "subband_size", scope: !1096, file: !986, line: 186, baseType: !1028, size: 32, align: 32, offset: 106880)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "subband_buffer", scope: !1096, file: !986, line: 187, baseType: !1029, size: 64, align: 64, offset: 106944)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "subband_samples", scope: !1096, file: !986, line: 188, baseType: !1919, size: 14336, align: 64, offset: 107008)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 14336, align: 64, elements: !1920)
!1920 = !{!1076, !1877}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_samples", scope: !1096, file: !986, line: 189, baseType: !1029, size: 64, align: 64, offset: 121344)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp_data", scope: !1096, file: !986, line: 192, baseType: !1923, size: 245504, align: 256, offset: 121600)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 245504, align: 256, elements: !1075)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADSPData", file: !986, line: 99, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADSPData", file: !986, line: 87, size: 35072, align: 256, elements: !1926)
!1926 = !{!1927, !1947}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1925, file: !986, line: 97, baseType: !1928, size: 34816, align: 256)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !986, line: 88, size: 34816, align: 256, elements: !1929)
!1929 = !{!1930, !1940}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flt", scope: !1928, file: !986, line: 92, baseType: !1931, size: 34816, align: 256)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1928, file: !986, line: 89, size: 34816, align: 256, elements: !1932)
!1932 = !{!1933, !1937}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "hist1", scope: !1931, file: !986, line: 90, baseType: !1934, size: 32768, align: 32)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 32768, align: 32, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 1024)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "hist2", scope: !1931, file: !986, line: 91, baseType: !1938, size: 2048, align: 32, offset: 32768)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 2048, align: 32, elements: !1939)
!1939 = !{!1868}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "fix", scope: !1928, file: !986, line: 96, baseType: !1941, size: 34816, align: 256)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1928, file: !986, line: 93, size: 34816, align: 256, elements: !1942)
!1942 = !{!1943, !1945}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "hist1", scope: !1941, file: !986, line: 94, baseType: !1944, size: 32768, align: 32)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 32768, align: 32, elements: !1935)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "hist2", scope: !1941, file: !986, line: 95, baseType: !1946, size: 2048, align: 32, offset: 32768)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2048, align: 32, elements: !1939)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1925, file: !986, line: 98, baseType: !1027, size: 32, align: 32, offset: 34816)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !1096, file: !986, line: 193, baseType: !1949, size: 64, align: 64, offset: 367104)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADSPContext", file: !1951, line: 94, baseType: !1952)
!1951 = !DIFile(filename: "libavcodec/dcadsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADSPContext", file: !1951, line: 30, size: 1280, align: 64, elements: !1953)
!1953 = !{!1954, !1967, !1971, !1978, !1982, !2057, !2061, !2065, !2070, !2074, !2075, !2076, !2077, !2081, !2082, !2086, !2093}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "decode_hf", scope: !1952, file: !1951, line: 31, baseType: !1955, size: 64, align: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64, align: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !1958, !1959, !1961, !1964, !1966, !1966, !1966, !1966}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64, align: 64)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64, align: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 256, align: 8, elements: !1963)
!1963 = !{!1877}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 64, align: 32, elements: !1058)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1380, line: 149, baseType: !1042)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "decode_joint", scope: !1952, file: !1951, line: 38, baseType: !1968, size: 64, align: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64, align: 64)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1958, !1958, !1959, !1966, !1966, !1966, !1966}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_fir_float", scope: !1952, file: !1951, line: 43, baseType: !1972, size: 128, align: 64, offset: 128)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 128, align: 64, elements: !1058)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64, align: 64)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{null, !1062, !1029, !1976, !1966}
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64, align: 64)
!1977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_x96_float", scope: !1952, file: !1951, line: 46, baseType: !1979, size: 64, align: 64, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64, align: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1062, !1976, !1062, !1966}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "sub_qmf_float", scope: !1952, file: !1951, line: 49, baseType: !1983, size: 128, align: 64, offset: 320)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1984, size: 128, align: 64, elements: !1058)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64, align: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1987, !1996, !1062, !1958, !1958, !1062, !1385, !1062, !1976, !1966, !1063}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64, align: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "SynthFilterContext", file: !1989, line: 45, baseType: !1990)
!1989 = !DIFile(filename: "libavcodec/synth_filter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SynthFilterContext", file: !1989, line: 27, size: 256, align: 64, elements: !1991)
!1991 = !{!1992, !2041, !2042, !2056}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_float", scope: !1990, file: !1989, line: 28, baseType: !1993, size: 64, align: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64, align: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{null, !1996, !1062, !1385, !1062, !1976, !1062, !1976, !1063}
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64, align: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1998, line: 41, baseType: !1999)
!1998 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2012, !2013, !2014, !2016, !2017, !2022, !2023, !2029, !2030, !2031, !2037, !2038, !2039}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1999, file: !888, line: 89, baseType: !1027, size: 32, align: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1999, file: !888, line: 90, baseType: !1027, size: 32, align: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1999, file: !888, line: 91, baseType: !1606, size: 64, align: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1999, file: !888, line: 92, baseType: !2005, size: 64, align: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1998, line: 39, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1998, line: 37, size: 64, align: 32, elements: !2008)
!2008 = !{!2009, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2007, file: !1998, line: 38, baseType: !2010, size: 32, align: 32)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1998, line: 35, baseType: !1063)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2007, file: !1998, line: 38, baseType: !2010, size: 32, align: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1999, file: !888, line: 93, baseType: !1027, size: 32, align: 32, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1999, file: !888, line: 94, baseType: !1027, size: 32, align: 32, offset: 224)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1999, file: !888, line: 96, baseType: !2015, size: 64, align: 64, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64, align: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1999, file: !888, line: 97, baseType: !2015, size: 64, align: 64, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1999, file: !888, line: 101, baseType: !2018, size: 64, align: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64, align: 64)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !2021, !2005}
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1999, file: !888, line: 106, baseType: !2018, size: 64, align: 64, offset: 448)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1999, file: !888, line: 107, baseType: !2024, size: 64, align: 64, offset: 512)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64, align: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{null, !2021, !2015, !2027}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2010)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1999, file: !888, line: 108, baseType: !2024, size: 64, align: 64, offset: 576)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1999, file: !888, line: 109, baseType: !2024, size: 64, align: 64, offset: 640)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1999, file: !888, line: 110, baseType: !2032, size: 64, align: 64, offset: 704)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64, align: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !2021, !2035, !2027}
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64, align: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !1063)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1999, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1999, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1999, file: !888, line: 113, baseType: !2040, size: 64, align: 64, offset: 832)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_float_64", scope: !1990, file: !1989, line: 33, baseType: !1993, size: 64, align: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_fixed", scope: !1990, file: !1989, line: 37, baseType: !2043, size: 64, align: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64, align: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{null, !2046, !1029, !1385, !1029, !1959, !1029, !1959}
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64, align: 64)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADCTContext", file: !2048, line: 28, baseType: !2049)
!2048 = !DIFile(filename: "libavcodec/dcadct.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADCTContext", file: !2048, line: 26, size: 128, align: 64, elements: !2050)
!2050 = !{!2051}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2049, file: !2048, line: 27, baseType: !2052, size: 128, align: 64)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2053, size: 128, align: 64, elements: !1058)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64, align: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{null, !1029, !1959}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_fixed_64", scope: !1990, file: !1989, line: 41, baseType: !2043, size: 64, align: 64, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_fir_fixed", scope: !1952, file: !1951, line: 58, baseType: !2058, size: 64, align: 64, offset: 448)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64, align: 64)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !1029, !1029, !1959, !1966}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_x96_fixed", scope: !1952, file: !1951, line: 61, baseType: !2062, size: 64, align: 64, offset: 512)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64, align: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{null, !1029, !1959, !1029, !1966}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "sub_qmf_fixed", scope: !1952, file: !1951, line: 64, baseType: !2066, size: 128, align: 64, offset: 576)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 128, align: 64, elements: !1058)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64, align: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{null, !1987, !2046, !1029, !1958, !1958, !1029, !1385, !1029, !1959, !1966}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "decor", scope: !1952, file: !1951, line: 72, baseType: !2071, size: 64, align: 64, offset: 704)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64, align: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !1029, !1959, !1027, !1966}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_sub_xch", scope: !1952, file: !1951, line: 74, baseType: !2058, size: 64, align: 64, offset: 768)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_sub", scope: !1952, file: !1951, line: 77, baseType: !2071, size: 64, align: 64, offset: 832)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_add", scope: !1952, file: !1951, line: 79, baseType: !2071, size: 64, align: 64, offset: 896)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale", scope: !1952, file: !1951, line: 81, baseType: !2078, size: 64, align: 64, offset: 960)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64, align: 64)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{null, !1029, !1027, !1966}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale_inv", scope: !1952, file: !1951, line: 83, baseType: !2078, size: 64, align: 64, offset: 1024)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "assemble_freq_bands", scope: !1952, file: !1951, line: 85, baseType: !2083, size: 64, align: 64, offset: 1088)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64, align: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !1029, !1029, !1029, !1959, !1966}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_bank", scope: !1952, file: !1951, line: 88, baseType: !2087, size: 64, align: 64, offset: 1152)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64, align: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !2090, !2092, !1976, !1966, !1966}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64, align: 64)
!2091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 128, align: 32, elements: !1257)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64, align: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_iir", scope: !1952, file: !1951, line: 91, baseType: !2094, size: 64, align: 64, offset: 1216)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64, align: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !1062, !1976, !2097, !2099, !1966}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1977, size: 128, align: 32, elements: !1257)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64, align: 64)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 64, align: 32, elements: !1058)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dcadct", scope: !1096, file: !986, line: 194, baseType: !2047, size: 128, align: 64, offset: 367168)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !1096, file: !986, line: 195, baseType: !2103, size: 1792, align: 64, offset: 367296)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1997, size: 1792, align: 64, elements: !1058)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "synth", scope: !1096, file: !986, line: 196, baseType: !1988, size: 256, align: 64, offset: 369088)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "float_dsp", scope: !1096, file: !986, line: 197, baseType: !2106, size: 64, align: 64, offset: 369344)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !2108, line: 192, baseType: !2109)
!2108 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !2108, line: 24, size: 704, align: 64, elements: !2110)
!2110 = !{!2111, !2115, !2119, !2127, !2128, !2129, !2133, !2134, !2135, !2140, !2144}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2109, file: !2108, line: 38, baseType: !2112, size: 64, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64, align: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{null, !1062, !1976, !1976, !1027}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !2109, file: !2108, line: 54, baseType: !2116, size: 64, align: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64, align: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{null, !1062, !1976, !1063, !1027}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !2109, file: !2108, line: 70, baseType: !2120, size: 64, align: 64, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64, align: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{null, !2123, !2125, !2124, !1027}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64, align: 64)
!2124 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64, align: 64)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2124)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !2109, file: !2108, line: 85, baseType: !2116, size: 64, align: 64, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !2109, file: !2108, line: 100, baseType: !2120, size: 64, align: 64, offset: 256)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2109, file: !2108, line: 119, baseType: !2130, size: 64, align: 64, offset: 320)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64, align: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !1062, !1976, !1976, !1976, !1027}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2109, file: !2108, line: 137, baseType: !2130, size: 64, align: 64, offset: 384)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2109, file: !2108, line: 154, baseType: !2112, size: 64, align: 64, offset: 448)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !2109, file: !2108, line: 164, baseType: !2136, size: 64, align: 64, offset: 512)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64, align: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !2139, !2139, !1027}
!2139 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1062)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !2109, file: !2108, line: 175, baseType: !2141, size: 64, align: 64, offset: 576)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64, align: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!1063, !1976, !1976, !1027}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !2109, file: !2108, line: 190, baseType: !2145, size: 64, align: 64, offset: 640)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64, align: 64)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{null, !2123, !2125, !2125, !1027}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dsp", scope: !1096, file: !986, line: 198, baseType: !2149, size: 64, align: 64, offset: 369408)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64, align: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFixedDSPContext", file: !2151, line: 154, baseType: !2152)
!2151 = !DIFile(filename: "./libavutil/fixed_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFixedDSPContext", file: !2151, line: 56, size: 448, align: 64, elements: !2153)
!2153 = !{!2154, !2159, !2163, !2167, !2168, !2172, !2176}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window_scaled", scope: !2152, file: !2151, line: 80, baseType: !2155, size: 64, align: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64, align: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{null, !2158, !1959, !1959, !1959, !1027, !1039}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64, align: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2152, file: !2151, line: 98, baseType: !2160, size: 64, align: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{null, !1029, !1959, !1959, !1959, !1027}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2152, file: !2151, line: 113, baseType: !2164, size: 64, align: 64, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64, align: 64)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !1385, !1172, !1172, !1027}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2152, file: !2151, line: 116, baseType: !2164, size: 64, align: 64, offset: 192)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2152, file: !2151, line: 132, baseType: !2169, size: 64, align: 64, offset: 256)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64, align: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !1385, !1172, !1172, !1172, !1027}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_fixed", scope: !2152, file: !2151, line: 144, baseType: !2173, size: 64, align: 64, offset: 320)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64, align: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!1027, !1172, !1172, !1027}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_fixed", scope: !2152, file: !2151, line: 153, baseType: !2177, size: 64, align: 64, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64, align: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !2180, !2180, !1027}
!2180 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1385)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "output_size", scope: !1096, file: !986, line: 201, baseType: !1028, size: 32, align: 32, offset: 369472)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "output_buffer", scope: !1096, file: !986, line: 202, baseType: !1051, size: 64, align: 64, offset: 369536)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "output_samples", scope: !1096, file: !986, line: 203, baseType: !2184, size: 2048, align: 64, offset: 369600)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 2048, align: 64, elements: !1963)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "output_history_lfe_fixed", scope: !1096, file: !986, line: 204, baseType: !1030, size: 32, align: 32, offset: 371648)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "output_history_lfe_float", scope: !1096, file: !986, line: 205, baseType: !1063, size: 32, align: 32, offset: 371680)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ch_remap", scope: !1096, file: !986, line: 207, baseType: !2188, size: 1024, align: 32, offset: 371712)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 1024, align: 32, elements: !1963)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "request_mask", scope: !1096, file: !986, line: 208, baseType: !1027, size: 32, align: 32, offset: 372736)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "npcmsamples", scope: !1096, file: !986, line: 210, baseType: !1027, size: 32, align: 32, offset: 372768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "output_rate", scope: !1096, file: !986, line: 211, baseType: !1027, size: 32, align: 32, offset: 372800)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "filter_mode", scope: !1096, file: !986, line: 213, baseType: !1027, size: 32, align: 32, offset: 372832)
!2193 = !DILocalVariable(name: "s", arg: 1, scope: !1091, file: !898, line: 1798, type: !1094)
!2194 = !DIExpression()
!2195 = !DILocation(line: 1798, column: 39, scope: !1091)
!2196 = !DILocalVariable(name: "data", arg: 2, scope: !1091, file: !898, line: 1798, type: !1223)
!2197 = !DILocation(line: 1798, column: 51, scope: !1091)
!2198 = !DILocalVariable(name: "size", arg: 3, scope: !1091, file: !898, line: 1798, type: !1027)
!2199 = !DILocation(line: 1798, column: 61, scope: !1091)
!2200 = !DILocalVariable(name: "ret", scope: !1091, file: !898, line: 1800, type: !1027)
!2201 = !DILocation(line: 1800, column: 9, scope: !1091)
!2202 = !DILocation(line: 1802, column: 5, scope: !1091)
!2203 = !DILocation(line: 1802, column: 8, scope: !1091)
!2204 = !DILocation(line: 1802, column: 23, scope: !1091)
!2205 = !DILocation(line: 1803, column: 32, scope: !1091)
!2206 = !DILocation(line: 1803, column: 35, scope: !1091)
!2207 = !DILocation(line: 1803, column: 43, scope: !1091)
!2208 = !DILocation(line: 1803, column: 18, scope: !1091)
!2209 = !DILocation(line: 1803, column: 21, scope: !1091)
!2210 = !DILocation(line: 1803, column: 30, scope: !1091)
!2211 = !DILocation(line: 1803, column: 5, scope: !1091)
!2212 = !DILocation(line: 1803, column: 8, scope: !1091)
!2213 = !DILocation(line: 1803, column: 16, scope: !1091)
!2214 = !DILocation(line: 1805, column: 32, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1805, column: 9)
!2216 = !DILocation(line: 1805, column: 35, scope: !2215)
!2217 = !DILocation(line: 1805, column: 39, scope: !2215)
!2218 = !DILocation(line: 1805, column: 45, scope: !2215)
!2219 = !DILocation(line: 1805, column: 16, scope: !2215)
!2220 = !DILocation(line: 1805, column: 14, scope: !2215)
!2221 = !DILocation(line: 1805, column: 52, scope: !2215)
!2222 = !DILocation(line: 1805, column: 9, scope: !1091)
!2223 = !DILocation(line: 1806, column: 16, scope: !2215)
!2224 = !DILocation(line: 1806, column: 9, scope: !2215)
!2225 = !DILocation(line: 1807, column: 5, scope: !1091)
!2226 = !DILocation(line: 1807, column: 8, scope: !1091)
!2227 = !DILocation(line: 1807, column: 16, scope: !1091)
!2228 = !DILocation(line: 1807, column: 19, scope: !1091)
!2229 = !DILocation(line: 1809, column: 35, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1809, column: 9)
!2231 = !DILocation(line: 1809, column: 16, scope: !2230)
!2232 = !DILocation(line: 1809, column: 14, scope: !2230)
!2233 = !DILocation(line: 1809, column: 39, scope: !2230)
!2234 = !DILocation(line: 1809, column: 9, scope: !1091)
!2235 = !DILocation(line: 1810, column: 16, scope: !2230)
!2236 = !DILocation(line: 1810, column: 9, scope: !2230)
!2237 = !DILocation(line: 1811, column: 36, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1811, column: 9)
!2239 = !DILocation(line: 1811, column: 16, scope: !2238)
!2240 = !DILocation(line: 1811, column: 14, scope: !2238)
!2241 = !DILocation(line: 1811, column: 40, scope: !2238)
!2242 = !DILocation(line: 1811, column: 9, scope: !1091)
!2243 = !DILocation(line: 1812, column: 16, scope: !2238)
!2244 = !DILocation(line: 1812, column: 9, scope: !2238)
!2245 = !DILocation(line: 1813, column: 33, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1813, column: 9)
!2247 = !DILocation(line: 1813, column: 16, scope: !2246)
!2248 = !DILocation(line: 1813, column: 14, scope: !2246)
!2249 = !DILocation(line: 1813, column: 53, scope: !2246)
!2250 = !DILocation(line: 1813, column: 9, scope: !1091)
!2251 = !DILocation(line: 1814, column: 16, scope: !2246)
!2252 = !DILocation(line: 1814, column: 9, scope: !2246)
!2253 = !DILocation(line: 1815, column: 36, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1815, column: 9)
!2255 = !DILocation(line: 1815, column: 16, scope: !2254)
!2256 = !DILocation(line: 1815, column: 14, scope: !2254)
!2257 = !DILocation(line: 1815, column: 40, scope: !2254)
!2258 = !DILocation(line: 1815, column: 9, scope: !1091)
!2259 = !DILocation(line: 1816, column: 16, scope: !2254)
!2260 = !DILocation(line: 1816, column: 9, scope: !2254)
!2261 = !DILocation(line: 1819, column: 9, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1819, column: 9)
!2263 = !DILocation(line: 1819, column: 12, scope: !2262)
!2264 = !DILocation(line: 1819, column: 25, scope: !2262)
!2265 = !DILocation(line: 1819, column: 23, scope: !2262)
!2266 = !DILocation(line: 1819, column: 9, scope: !1091)
!2267 = !DILocation(line: 1820, column: 25, scope: !2262)
!2268 = !DILocation(line: 1820, column: 9, scope: !2262)
!2269 = !DILocation(line: 1820, column: 12, scope: !2262)
!2270 = !DILocation(line: 1820, column: 23, scope: !2262)
!2271 = !DILocation(line: 1822, column: 27, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !1091, file: !898, line: 1822, column: 9)
!2273 = !DILocation(line: 1822, column: 30, scope: !2272)
!2274 = !DILocation(line: 1822, column: 34, scope: !2272)
!2275 = !DILocation(line: 1822, column: 37, scope: !2272)
!2276 = !DILocation(line: 1822, column: 48, scope: !2272)
!2277 = !DILocation(line: 1822, column: 9, scope: !2272)
!2278 = !DILocation(line: 1822, column: 9, scope: !1091)
!2279 = !DILocation(line: 1823, column: 16, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2272, file: !898, line: 1822, column: 54)
!2281 = !DILocation(line: 1823, column: 19, scope: !2280)
!2282 = !DILocation(line: 1823, column: 9, scope: !2280)
!2283 = !DILocation(line: 1824, column: 13, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2280, file: !898, line: 1824, column: 13)
!2285 = !DILocation(line: 1824, column: 16, scope: !2284)
!2286 = !DILocation(line: 1824, column: 23, scope: !2284)
!2287 = !DILocation(line: 1824, column: 39, scope: !2284)
!2288 = !DILocation(line: 1824, column: 13, scope: !2280)
!2289 = !DILocation(line: 1825, column: 13, scope: !2284)
!2290 = !DILocation(line: 1826, column: 5, scope: !2280)
!2291 = !DILocation(line: 1828, column: 5, scope: !1091)
!2292 = !DILocation(line: 1829, column: 1, scope: !1091)
!2293 = distinct !DISubprogram(name: "init_get_bits8", scope: !1818, file: !1818, line: 650, type: !2294, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!1027, !2296, !1212, !1027}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!2297 = !DILocalVariable(name: "s", arg: 1, scope: !2293, file: !1818, line: 650, type: !2296)
!2298 = !DILocation(line: 650, column: 49, scope: !2293)
!2299 = !DILocalVariable(name: "buffer", arg: 2, scope: !2293, file: !1818, line: 650, type: !1212)
!2300 = !DILocation(line: 650, column: 67, scope: !2293)
!2301 = !DILocalVariable(name: "byte_size", arg: 3, scope: !2293, file: !1818, line: 651, type: !1027)
!2302 = !DILocation(line: 651, column: 38, scope: !2293)
!2303 = !DILocation(line: 653, column: 9, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2293, file: !1818, line: 653, column: 9)
!2305 = !DILocation(line: 653, column: 19, scope: !2304)
!2306 = !DILocation(line: 653, column: 36, scope: !2304)
!2307 = !DILocation(line: 653, column: 39, scope: !2308)
!2308 = !DILexicalBlockFile(scope: !2304, file: !1818, discriminator: 1)
!2309 = !DILocation(line: 653, column: 49, scope: !2308)
!2310 = !DILocation(line: 653, column: 9, scope: !2308)
!2311 = !DILocation(line: 654, column: 19, scope: !2304)
!2312 = !DILocation(line: 654, column: 9, scope: !2304)
!2313 = !DILocation(line: 655, column: 26, scope: !2293)
!2314 = !DILocation(line: 655, column: 29, scope: !2293)
!2315 = !DILocation(line: 655, column: 37, scope: !2293)
!2316 = !DILocation(line: 655, column: 47, scope: !2293)
!2317 = !DILocation(line: 655, column: 12, scope: !2293)
!2318 = !DILocation(line: 655, column: 5, scope: !2293)
!2319 = distinct !DISubprogram(name: "parse_frame_header", scope: !898, file: !898, line: 82, type: !2320, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!1027, !1094}
!2322 = !DILocalVariable(name: "s", arg: 1, scope: !2319, file: !898, line: 82, type: !1094)
!2323 = !DILocation(line: 82, column: 47, scope: !2319)
!2324 = !DILocalVariable(name: "h", scope: !2319, file: !898, line: 84, type: !2325)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCACoreFrameHeader", file: !904, line: 76, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCACoreFrameHeader", file: !904, line: 51, size: 208, align: 16, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "normal_frame", scope: !2326, file: !904, line: 52, baseType: !1039, size: 8, align: 8)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "deficit_samples", scope: !2326, file: !904, line: 53, baseType: !1039, size: 8, align: 8, offset: 8)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "crc_present", scope: !2326, file: !904, line: 54, baseType: !1039, size: 8, align: 8, offset: 16)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "npcmblocks", scope: !2326, file: !904, line: 55, baseType: !1039, size: 8, align: 8, offset: 24)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2326, file: !904, line: 56, baseType: !1229, size: 16, align: 16, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mode", scope: !2326, file: !904, line: 57, baseType: !1039, size: 8, align: 8, offset: 48)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !2326, file: !904, line: 58, baseType: !1039, size: 8, align: 8, offset: 56)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "br_code", scope: !2326, file: !904, line: 59, baseType: !1039, size: 8, align: 8, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "drc_present", scope: !2326, file: !904, line: 60, baseType: !1039, size: 8, align: 8, offset: 72)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ts_present", scope: !2326, file: !904, line: 61, baseType: !1039, size: 8, align: 8, offset: 80)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "aux_present", scope: !2326, file: !904, line: 62, baseType: !1039, size: 8, align: 8, offset: 88)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "hdcd_master", scope: !2326, file: !904, line: 63, baseType: !1039, size: 8, align: 8, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_type", scope: !2326, file: !904, line: 64, baseType: !1039, size: 8, align: 8, offset: 104)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_present", scope: !2326, file: !904, line: 65, baseType: !1039, size: 8, align: 8, offset: 112)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sync_ssf", scope: !2326, file: !904, line: 66, baseType: !1039, size: 8, align: 8, offset: 120)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_present", scope: !2326, file: !904, line: 67, baseType: !1039, size: 8, align: 8, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_history", scope: !2326, file: !904, line: 68, baseType: !1039, size: 8, align: 8, offset: 136)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "filter_perfect", scope: !2326, file: !904, line: 69, baseType: !1039, size: 8, align: 8, offset: 144)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_rev", scope: !2326, file: !904, line: 70, baseType: !1039, size: 8, align: 8, offset: 152)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "copy_hist", scope: !2326, file: !904, line: 71, baseType: !1039, size: 8, align: 8, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pcmr_code", scope: !2326, file: !904, line: 72, baseType: !1039, size: 8, align: 8, offset: 168)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_front", scope: !2326, file: !904, line: 73, baseType: !1039, size: 8, align: 8, offset: 176)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_surround", scope: !2326, file: !904, line: 74, baseType: !1039, size: 8, align: 8, offset: 184)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "dn_code", scope: !2326, file: !904, line: 75, baseType: !1039, size: 8, align: 8, offset: 192)
!2352 = !DILocation(line: 84, column: 24, scope: !2319)
!2353 = !DILocalVariable(name: "err", scope: !2319, file: !898, line: 85, type: !1027)
!2354 = !DILocation(line: 85, column: 9, scope: !2319)
!2355 = !DILocation(line: 85, column: 51, scope: !2319)
!2356 = !DILocation(line: 85, column: 54, scope: !2319)
!2357 = !DILocation(line: 85, column: 15, scope: !2319)
!2358 = !DILocation(line: 87, column: 9, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2319, file: !898, line: 87, column: 9)
!2360 = !DILocation(line: 87, column: 13, scope: !2359)
!2361 = !DILocation(line: 87, column: 9, scope: !2319)
!2362 = !DILocation(line: 88, column: 17, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !898, line: 87, column: 18)
!2364 = !DILocation(line: 88, column: 9, scope: !2363)
!2365 = !DILocation(line: 90, column: 20, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2363, file: !898, line: 88, column: 22)
!2367 = !DILocation(line: 90, column: 23, scope: !2366)
!2368 = !DILocation(line: 90, column: 13, scope: !2366)
!2369 = !DILocation(line: 91, column: 22, scope: !2366)
!2370 = !DILocation(line: 91, column: 20, scope: !2366)
!2371 = !DILocation(line: 91, column: 13, scope: !2366)
!2372 = !DILocation(line: 94, column: 20, scope: !2366)
!2373 = !DILocation(line: 94, column: 23, scope: !2366)
!2374 = !DILocation(line: 94, column: 86, scope: !2366)
!2375 = !DILocation(line: 94, column: 84, scope: !2366)
!2376 = !DILocation(line: 94, column: 13, scope: !2366)
!2377 = !DILocation(line: 95, column: 23, scope: !2366)
!2378 = !DILocation(line: 95, column: 21, scope: !2366)
!2379 = !DILocation(line: 95, column: 34, scope: !2366)
!2380 = !DILocation(line: 95, column: 38, scope: !2366)
!2381 = !DILocation(line: 95, column: 43, scope: !2382)
!2382 = !DILexicalBlockFile(scope: !2366, file: !898, discriminator: 1)
!2383 = !DILocation(line: 95, column: 41, scope: !2382)
!2384 = !DILocation(line: 95, column: 38, scope: !2382)
!2385 = !DILocation(line: 95, column: 20, scope: !2386)
!2386 = !DILexicalBlockFile(scope: !2366, file: !898, discriminator: 2)
!2387 = !DILocation(line: 95, column: 13, scope: !2386)
!2388 = !DILocation(line: 98, column: 20, scope: !2366)
!2389 = !DILocation(line: 98, column: 23, scope: !2366)
!2390 = !DILocation(line: 98, column: 76, scope: !2366)
!2391 = !DILocation(line: 98, column: 74, scope: !2366)
!2392 = !DILocation(line: 98, column: 13, scope: !2366)
!2393 = !DILocation(line: 99, column: 13, scope: !2366)
!2394 = !DILocation(line: 102, column: 20, scope: !2366)
!2395 = !DILocation(line: 102, column: 23, scope: !2366)
!2396 = !DILocation(line: 102, column: 84, scope: !2366)
!2397 = !DILocation(line: 102, column: 82, scope: !2366)
!2398 = !DILocation(line: 102, column: 13, scope: !2366)
!2399 = !DILocation(line: 103, column: 13, scope: !2366)
!2400 = !DILocation(line: 106, column: 20, scope: !2366)
!2401 = !DILocation(line: 106, column: 23, scope: !2366)
!2402 = !DILocation(line: 106, column: 13, scope: !2366)
!2403 = !DILocation(line: 107, column: 13, scope: !2366)
!2404 = !DILocation(line: 110, column: 20, scope: !2366)
!2405 = !DILocation(line: 110, column: 23, scope: !2366)
!2406 = !DILocation(line: 110, column: 13, scope: !2366)
!2407 = !DILocation(line: 111, column: 13, scope: !2366)
!2408 = !DILocation(line: 114, column: 20, scope: !2366)
!2409 = !DILocation(line: 114, column: 23, scope: !2366)
!2410 = !DILocation(line: 114, column: 13, scope: !2366)
!2411 = !DILocation(line: 115, column: 13, scope: !2366)
!2412 = !DILocation(line: 118, column: 20, scope: !2366)
!2413 = !DILocation(line: 118, column: 23, scope: !2366)
!2414 = !DILocation(line: 118, column: 13, scope: !2366)
!2415 = !DILocation(line: 119, column: 13, scope: !2366)
!2416 = !DILocation(line: 122, column: 20, scope: !2366)
!2417 = !DILocation(line: 122, column: 23, scope: !2366)
!2418 = !DILocation(line: 122, column: 13, scope: !2366)
!2419 = !DILocation(line: 123, column: 13, scope: !2366)
!2420 = !DILocation(line: 127, column: 24, scope: !2319)
!2421 = !DILocation(line: 127, column: 22, scope: !2319)
!2422 = !DILocation(line: 127, column: 5, scope: !2319)
!2423 = !DILocation(line: 127, column: 8, scope: !2319)
!2424 = !DILocation(line: 127, column: 20, scope: !2319)
!2425 = !DILocation(line: 128, column: 23, scope: !2319)
!2426 = !DILocation(line: 128, column: 21, scope: !2319)
!2427 = !DILocation(line: 128, column: 5, scope: !2319)
!2428 = !DILocation(line: 128, column: 8, scope: !2319)
!2429 = !DILocation(line: 128, column: 19, scope: !2319)
!2430 = !DILocation(line: 129, column: 23, scope: !2319)
!2431 = !DILocation(line: 129, column: 21, scope: !2319)
!2432 = !DILocation(line: 129, column: 5, scope: !2319)
!2433 = !DILocation(line: 129, column: 8, scope: !2319)
!2434 = !DILocation(line: 129, column: 19, scope: !2319)
!2435 = !DILocation(line: 130, column: 23, scope: !2319)
!2436 = !DILocation(line: 130, column: 21, scope: !2319)
!2437 = !DILocation(line: 130, column: 5, scope: !2319)
!2438 = !DILocation(line: 130, column: 8, scope: !2319)
!2439 = !DILocation(line: 130, column: 19, scope: !2319)
!2440 = !DILocation(line: 131, column: 48, scope: !2319)
!2441 = !DILocation(line: 131, column: 22, scope: !2319)
!2442 = !DILocation(line: 131, column: 5, scope: !2319)
!2443 = !DILocation(line: 131, column: 8, scope: !2319)
!2444 = !DILocation(line: 131, column: 20, scope: !2319)
!2445 = !DILocation(line: 132, column: 38, scope: !2319)
!2446 = !DILocation(line: 132, column: 19, scope: !2319)
!2447 = !DILocation(line: 132, column: 5, scope: !2319)
!2448 = !DILocation(line: 132, column: 8, scope: !2319)
!2449 = !DILocation(line: 132, column: 17, scope: !2319)
!2450 = !DILocation(line: 133, column: 24, scope: !2319)
!2451 = !DILocation(line: 133, column: 22, scope: !2319)
!2452 = !DILocation(line: 133, column: 5, scope: !2319)
!2453 = !DILocation(line: 133, column: 8, scope: !2319)
!2454 = !DILocation(line: 133, column: 20, scope: !2319)
!2455 = !DILocation(line: 134, column: 23, scope: !2319)
!2456 = !DILocation(line: 134, column: 21, scope: !2319)
!2457 = !DILocation(line: 134, column: 5, scope: !2319)
!2458 = !DILocation(line: 134, column: 8, scope: !2319)
!2459 = !DILocation(line: 134, column: 19, scope: !2319)
!2460 = !DILocation(line: 135, column: 24, scope: !2319)
!2461 = !DILocation(line: 135, column: 22, scope: !2319)
!2462 = !DILocation(line: 135, column: 5, scope: !2319)
!2463 = !DILocation(line: 135, column: 8, scope: !2319)
!2464 = !DILocation(line: 135, column: 20, scope: !2319)
!2465 = !DILocation(line: 136, column: 27, scope: !2319)
!2466 = !DILocation(line: 136, column: 25, scope: !2319)
!2467 = !DILocation(line: 136, column: 5, scope: !2319)
!2468 = !DILocation(line: 136, column: 8, scope: !2319)
!2469 = !DILocation(line: 136, column: 23, scope: !2319)
!2470 = !DILocation(line: 137, column: 30, scope: !2319)
!2471 = !DILocation(line: 137, column: 28, scope: !2319)
!2472 = !DILocation(line: 137, column: 5, scope: !2319)
!2473 = !DILocation(line: 137, column: 8, scope: !2319)
!2474 = !DILocation(line: 137, column: 26, scope: !2319)
!2475 = !DILocation(line: 138, column: 21, scope: !2319)
!2476 = !DILocation(line: 138, column: 19, scope: !2319)
!2477 = !DILocation(line: 138, column: 5, scope: !2319)
!2478 = !DILocation(line: 138, column: 8, scope: !2319)
!2479 = !DILocation(line: 138, column: 17, scope: !2319)
!2480 = !DILocation(line: 139, column: 24, scope: !2319)
!2481 = !DILocation(line: 139, column: 22, scope: !2319)
!2482 = !DILocation(line: 139, column: 5, scope: !2319)
!2483 = !DILocation(line: 139, column: 8, scope: !2319)
!2484 = !DILocation(line: 139, column: 20, scope: !2319)
!2485 = !DILocation(line: 140, column: 30, scope: !2319)
!2486 = !DILocation(line: 140, column: 28, scope: !2319)
!2487 = !DILocation(line: 140, column: 5, scope: !2319)
!2488 = !DILocation(line: 140, column: 8, scope: !2319)
!2489 = !DILocation(line: 140, column: 26, scope: !2319)
!2490 = !DILocation(line: 141, column: 27, scope: !2319)
!2491 = !DILocation(line: 141, column: 25, scope: !2319)
!2492 = !DILocation(line: 141, column: 5, scope: !2319)
!2493 = !DILocation(line: 141, column: 8, scope: !2319)
!2494 = !DILocation(line: 141, column: 23, scope: !2319)
!2495 = !DILocation(line: 142, column: 50, scope: !2319)
!2496 = !DILocation(line: 142, column: 25, scope: !2319)
!2497 = !DILocation(line: 142, column: 5, scope: !2319)
!2498 = !DILocation(line: 142, column: 8, scope: !2319)
!2499 = !DILocation(line: 142, column: 23, scope: !2319)
!2500 = !DILocation(line: 143, column: 22, scope: !2319)
!2501 = !DILocation(line: 143, column: 20, scope: !2319)
!2502 = !DILocation(line: 143, column: 32, scope: !2319)
!2503 = !DILocation(line: 143, column: 5, scope: !2319)
!2504 = !DILocation(line: 143, column: 8, scope: !2319)
!2505 = !DILocation(line: 143, column: 18, scope: !2319)
!2506 = !DILocation(line: 144, column: 26, scope: !2319)
!2507 = !DILocation(line: 144, column: 24, scope: !2319)
!2508 = !DILocation(line: 144, column: 5, scope: !2319)
!2509 = !DILocation(line: 144, column: 8, scope: !2319)
!2510 = !DILocation(line: 144, column: 22, scope: !2319)
!2511 = !DILocation(line: 145, column: 29, scope: !2319)
!2512 = !DILocation(line: 145, column: 27, scope: !2319)
!2513 = !DILocation(line: 145, column: 5, scope: !2319)
!2514 = !DILocation(line: 145, column: 8, scope: !2319)
!2515 = !DILocation(line: 145, column: 25, scope: !2319)
!2516 = !DILocation(line: 147, column: 5, scope: !2319)
!2517 = !DILocation(line: 148, column: 1, scope: !2319)
!2518 = distinct !DISubprogram(name: "alloc_sample_buffer", scope: !898, file: !898, line: 771, type: !2320, isLocal: true, isDefinition: true, scopeLine: 772, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2519 = !DILocalVariable(name: "s", arg: 1, scope: !2518, file: !898, line: 771, type: !1094)
!2520 = !DILocation(line: 771, column: 48, scope: !2518)
!2521 = !DILocalVariable(name: "nchsamples", scope: !2518, file: !898, line: 773, type: !1027)
!2522 = !DILocation(line: 773, column: 9, scope: !2518)
!2523 = !DILocation(line: 773, column: 26, scope: !2518)
!2524 = !DILocation(line: 773, column: 29, scope: !2518)
!2525 = !DILocation(line: 773, column: 24, scope: !2518)
!2526 = !DILocalVariable(name: "nframesamples", scope: !2518, file: !898, line: 774, type: !1027)
!2527 = !DILocation(line: 774, column: 9, scope: !2518)
!2528 = !DILocation(line: 774, column: 25, scope: !2518)
!2529 = !DILocation(line: 774, column: 36, scope: !2518)
!2530 = !DILocation(line: 774, column: 40, scope: !2518)
!2531 = !DILocalVariable(name: "nlfesamples", scope: !2518, file: !898, line: 775, type: !1027)
!2532 = !DILocation(line: 775, column: 9, scope: !2518)
!2533 = !DILocation(line: 775, column: 27, scope: !2518)
!2534 = !DILocation(line: 775, column: 30, scope: !2518)
!2535 = !DILocation(line: 775, column: 41, scope: !2518)
!2536 = !DILocation(line: 775, column: 25, scope: !2518)
!2537 = !DILocalVariable(name: "size", scope: !2518, file: !898, line: 776, type: !1028)
!2538 = !DILocation(line: 776, column: 18, scope: !2518)
!2539 = !DILocation(line: 776, column: 25, scope: !2518)
!2540 = !DILocation(line: 776, column: 28, scope: !2518)
!2541 = !DILocalVariable(name: "ch", scope: !2518, file: !898, line: 777, type: !1027)
!2542 = !DILocation(line: 777, column: 9, scope: !2518)
!2543 = !DILocalVariable(name: "band", scope: !2518, file: !898, line: 777, type: !1027)
!2544 = !DILocation(line: 777, column: 13, scope: !2518)
!2545 = !DILocation(line: 780, column: 22, scope: !2518)
!2546 = !DILocation(line: 780, column: 25, scope: !2518)
!2547 = !DILocation(line: 780, column: 21, scope: !2518)
!2548 = !DILocation(line: 780, column: 42, scope: !2518)
!2549 = !DILocation(line: 780, column: 45, scope: !2518)
!2550 = !DILocation(line: 781, column: 22, scope: !2518)
!2551 = !DILocation(line: 781, column: 38, scope: !2518)
!2552 = !DILocation(line: 781, column: 36, scope: !2518)
!2553 = !DILocation(line: 781, column: 21, scope: !2518)
!2554 = !DILocation(line: 781, column: 51, scope: !2518)
!2555 = !DILocation(line: 780, column: 5, scope: !2518)
!2556 = !DILocation(line: 782, column: 10, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2518, file: !898, line: 782, column: 9)
!2558 = !DILocation(line: 782, column: 13, scope: !2557)
!2559 = !DILocation(line: 782, column: 9, scope: !2518)
!2560 = !DILocation(line: 783, column: 9, scope: !2557)
!2561 = !DILocation(line: 785, column: 9, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2518, file: !898, line: 785, column: 9)
!2563 = !DILocation(line: 785, column: 17, scope: !2562)
!2564 = !DILocation(line: 785, column: 20, scope: !2562)
!2565 = !DILocation(line: 785, column: 14, scope: !2562)
!2566 = !DILocation(line: 785, column: 9, scope: !2518)
!2567 = !DILocation(line: 786, column: 17, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2569, file: !898, line: 786, column: 9)
!2569 = distinct !DILexicalBlock(scope: !2562, file: !898, line: 785, column: 34)
!2570 = !DILocation(line: 786, column: 14, scope: !2568)
!2571 = !DILocation(line: 786, column: 22, scope: !2572)
!2572 = !DILexicalBlockFile(scope: !2573, file: !898, discriminator: 1)
!2573 = distinct !DILexicalBlock(scope: !2568, file: !898, line: 786, column: 9)
!2574 = !DILocation(line: 786, column: 25, scope: !2572)
!2575 = !DILocation(line: 786, column: 9, scope: !2572)
!2576 = !DILocation(line: 787, column: 23, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2573, file: !898, line: 787, column: 13)
!2578 = !DILocation(line: 787, column: 18, scope: !2577)
!2579 = !DILocation(line: 787, column: 28, scope: !2580)
!2580 = !DILexicalBlockFile(scope: !2581, file: !898, discriminator: 1)
!2581 = distinct !DILexicalBlock(scope: !2577, file: !898, line: 787, column: 13)
!2582 = !DILocation(line: 787, column: 33, scope: !2580)
!2583 = !DILocation(line: 787, column: 13, scope: !2580)
!2584 = !DILocation(line: 788, column: 48, scope: !2581)
!2585 = !DILocation(line: 788, column: 51, scope: !2581)
!2586 = !DILocation(line: 789, column: 22, scope: !2581)
!2587 = !DILocation(line: 789, column: 25, scope: !2581)
!2588 = !DILocation(line: 789, column: 32, scope: !2581)
!2589 = !DILocation(line: 789, column: 30, scope: !2581)
!2590 = !DILocation(line: 789, column: 40, scope: !2581)
!2591 = !DILocation(line: 789, column: 38, scope: !2581)
!2592 = !DILocation(line: 788, column: 66, scope: !2581)
!2593 = !DILocation(line: 789, column: 51, scope: !2581)
!2594 = !DILocation(line: 788, column: 40, scope: !2581)
!2595 = !DILocation(line: 788, column: 17, scope: !2581)
!2596 = !DILocation(line: 788, column: 36, scope: !2581)
!2597 = !DILocation(line: 788, column: 20, scope: !2581)
!2598 = !DILocation(line: 788, column: 46, scope: !2581)
!2599 = !DILocation(line: 787, column: 43, scope: !2600)
!2600 = !DILexicalBlockFile(scope: !2581, file: !898, discriminator: 2)
!2601 = !DILocation(line: 787, column: 13, scope: !2600)
!2602 = distinct !{!2602, !2603}
!2603 = !DILocation(line: 787, column: 13, scope: !2573)
!2604 = !DILocation(line: 789, column: 53, scope: !2605)
!2605 = !DILexicalBlockFile(scope: !2577, file: !898, discriminator: 1)
!2606 = !DILocation(line: 786, column: 32, scope: !2607)
!2607 = !DILexicalBlockFile(scope: !2573, file: !898, discriminator: 2)
!2608 = !DILocation(line: 786, column: 9, scope: !2607)
!2609 = distinct !{!2609, !2610}
!2610 = !DILocation(line: 786, column: 9, scope: !2569)
!2611 = !DILocation(line: 790, column: 26, scope: !2569)
!2612 = !DILocation(line: 790, column: 29, scope: !2569)
!2613 = !DILocation(line: 790, column: 46, scope: !2569)
!2614 = !DILocation(line: 790, column: 44, scope: !2569)
!2615 = !DILocation(line: 790, column: 9, scope: !2569)
!2616 = !DILocation(line: 790, column: 12, scope: !2569)
!2617 = !DILocation(line: 790, column: 24, scope: !2569)
!2618 = !DILocation(line: 791, column: 5, scope: !2569)
!2619 = !DILocation(line: 793, column: 10, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2518, file: !898, line: 793, column: 9)
!2621 = !DILocation(line: 793, column: 13, scope: !2620)
!2622 = !DILocation(line: 793, column: 9, scope: !2518)
!2623 = !DILocation(line: 794, column: 29, scope: !2620)
!2624 = !DILocation(line: 794, column: 9, scope: !2620)
!2625 = !DILocation(line: 796, column: 5, scope: !2518)
!2626 = !DILocation(line: 797, column: 1, scope: !2518)
!2627 = distinct !DISubprogram(name: "parse_frame_data", scope: !898, file: !898, line: 799, type: !2628, isLocal: true, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!1027, !1094, !897, !1027}
!2630 = !DILocalVariable(name: "d", arg: 1, scope: !1048, file: !1047, line: 67, type: !1051)
!2631 = !DILocation(line: 67, column: 68, scope: !1048, inlinedAt: !2632)
!2632 = distinct !DILocation(line: 822, column: 13, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2634, file: !898, line: 820, column: 50)
!2634 = distinct !DILexicalBlock(scope: !2635, file: !898, line: 820, column: 9)
!2635 = distinct !DILexicalBlock(scope: !2636, file: !898, line: 820, column: 9)
!2636 = distinct !DILexicalBlock(scope: !2637, file: !898, line: 813, column: 50)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !898, line: 813, column: 5)
!2638 = distinct !DILexicalBlock(scope: !2627, file: !898, line: 813, column: 5)
!2639 = !DILocalVariable(name: "s", arg: 2, scope: !1048, file: !1047, line: 67, type: !1052)
!2640 = !DILocation(line: 67, column: 83, scope: !1048, inlinedAt: !2632)
!2641 = !DILocalVariable(name: "s", arg: 1, scope: !2627, file: !898, line: 799, type: !1094)
!2642 = !DILocation(line: 799, column: 45, scope: !2627)
!2643 = !DILocalVariable(name: "header", arg: 2, scope: !2627, file: !898, line: 799, type: !897)
!2644 = !DILocation(line: 799, column: 64, scope: !2627)
!2645 = !DILocalVariable(name: "xch_base", arg: 3, scope: !2627, file: !898, line: 799, type: !1027)
!2646 = !DILocation(line: 799, column: 76, scope: !2627)
!2647 = !DILocalVariable(name: "sf", scope: !2627, file: !898, line: 801, type: !1027)
!2648 = !DILocation(line: 801, column: 9, scope: !2627)
!2649 = !DILocalVariable(name: "ch", scope: !2627, file: !898, line: 801, type: !1027)
!2650 = !DILocation(line: 801, column: 13, scope: !2627)
!2651 = !DILocalVariable(name: "ret", scope: !2627, file: !898, line: 801, type: !1027)
!2652 = !DILocation(line: 801, column: 17, scope: !2627)
!2653 = !DILocalVariable(name: "band", scope: !2627, file: !898, line: 801, type: !1027)
!2654 = !DILocation(line: 801, column: 22, scope: !2627)
!2655 = !DILocalVariable(name: "sub_pos", scope: !2627, file: !898, line: 801, type: !1027)
!2656 = !DILocation(line: 801, column: 28, scope: !2627)
!2657 = !DILocalVariable(name: "lfe_pos", scope: !2627, file: !898, line: 801, type: !1027)
!2658 = !DILocation(line: 801, column: 37, scope: !2627)
!2659 = !DILocation(line: 803, column: 36, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2627, file: !898, line: 803, column: 9)
!2661 = !DILocation(line: 803, column: 39, scope: !2660)
!2662 = !DILocation(line: 803, column: 47, scope: !2660)
!2663 = !DILocation(line: 803, column: 16, scope: !2660)
!2664 = !DILocation(line: 803, column: 14, scope: !2660)
!2665 = !DILocation(line: 803, column: 58, scope: !2660)
!2666 = !DILocation(line: 803, column: 9, scope: !2627)
!2667 = !DILocation(line: 804, column: 16, scope: !2660)
!2668 = !DILocation(line: 804, column: 9, scope: !2660)
!2669 = !DILocation(line: 806, column: 13, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2627, file: !898, line: 806, column: 5)
!2671 = !DILocation(line: 806, column: 26, scope: !2670)
!2672 = !DILocation(line: 806, column: 39, scope: !2670)
!2673 = !DILocation(line: 806, column: 10, scope: !2670)
!2674 = !DILocation(line: 806, column: 44, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2676, file: !898, discriminator: 1)
!2676 = distinct !DILexicalBlock(scope: !2670, file: !898, line: 806, column: 5)
!2677 = !DILocation(line: 806, column: 49, scope: !2675)
!2678 = !DILocation(line: 806, column: 52, scope: !2675)
!2679 = !DILocation(line: 806, column: 47, scope: !2675)
!2680 = !DILocation(line: 806, column: 5, scope: !2675)
!2681 = !DILocation(line: 807, column: 42, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !898, line: 807, column: 13)
!2683 = distinct !DILexicalBlock(scope: !2676, file: !898, line: 806, column: 70)
!2684 = !DILocation(line: 807, column: 45, scope: !2682)
!2685 = !DILocation(line: 807, column: 49, scope: !2682)
!2686 = !DILocation(line: 807, column: 57, scope: !2682)
!2687 = !DILocation(line: 807, column: 20, scope: !2682)
!2688 = !DILocation(line: 807, column: 18, scope: !2682)
!2689 = !DILocation(line: 807, column: 68, scope: !2682)
!2690 = !DILocation(line: 807, column: 13, scope: !2683)
!2691 = !DILocation(line: 808, column: 20, scope: !2682)
!2692 = !DILocation(line: 808, column: 13, scope: !2682)
!2693 = !DILocation(line: 809, column: 41, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2683, file: !898, line: 809, column: 13)
!2695 = !DILocation(line: 809, column: 44, scope: !2694)
!2696 = !DILocation(line: 809, column: 48, scope: !2694)
!2697 = !DILocation(line: 809, column: 56, scope: !2694)
!2698 = !DILocation(line: 809, column: 20, scope: !2694)
!2699 = !DILocation(line: 809, column: 18, scope: !2694)
!2700 = !DILocation(line: 809, column: 87, scope: !2694)
!2701 = !DILocation(line: 809, column: 13, scope: !2683)
!2702 = !DILocation(line: 810, column: 20, scope: !2694)
!2703 = !DILocation(line: 810, column: 13, scope: !2694)
!2704 = !DILocation(line: 811, column: 5, scope: !2683)
!2705 = !DILocation(line: 806, column: 66, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2676, file: !898, discriminator: 2)
!2707 = !DILocation(line: 806, column: 5, scope: !2706)
!2708 = distinct !{!2708, !2709}
!2709 = !DILocation(line: 806, column: 5, scope: !2627)
!2710 = !DILocation(line: 813, column: 15, scope: !2638)
!2711 = !DILocation(line: 813, column: 13, scope: !2638)
!2712 = !DILocation(line: 813, column: 10, scope: !2638)
!2713 = !DILocation(line: 813, column: 25, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2637, file: !898, discriminator: 1)
!2715 = !DILocation(line: 813, column: 30, scope: !2714)
!2716 = !DILocation(line: 813, column: 33, scope: !2714)
!2717 = !DILocation(line: 813, column: 28, scope: !2714)
!2718 = !DILocation(line: 813, column: 5, scope: !2714)
!2719 = !DILocalVariable(name: "nsubbands", scope: !2636, file: !898, line: 815, type: !1027)
!2720 = !DILocation(line: 815, column: 13, scope: !2636)
!2721 = !DILocation(line: 815, column: 38, scope: !2636)
!2722 = !DILocation(line: 815, column: 25, scope: !2636)
!2723 = !DILocation(line: 815, column: 28, scope: !2636)
!2724 = !DILocation(line: 816, column: 38, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2636, file: !898, line: 816, column: 13)
!2726 = !DILocation(line: 816, column: 13, scope: !2725)
!2727 = !DILocation(line: 816, column: 16, scope: !2725)
!2728 = !DILocation(line: 816, column: 13, scope: !2636)
!2729 = !DILocation(line: 817, column: 27, scope: !2725)
!2730 = !DILocation(line: 817, column: 79, scope: !2725)
!2731 = !DILocation(line: 817, column: 54, scope: !2725)
!2732 = !DILocation(line: 817, column: 57, scope: !2725)
!2733 = !DILocation(line: 817, column: 83, scope: !2725)
!2734 = !DILocation(line: 817, column: 41, scope: !2725)
!2735 = !DILocation(line: 817, column: 44, scope: !2725)
!2736 = !DILocation(line: 817, column: 40, scope: !2725)
!2737 = !DILocation(line: 817, column: 38, scope: !2725)
!2738 = !DILocation(line: 817, column: 26, scope: !2725)
!2739 = !DILocation(line: 817, column: 92, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2725, file: !898, discriminator: 1)
!2741 = !DILocation(line: 817, column: 26, scope: !2740)
!2742 = !DILocation(line: 817, column: 144, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2725, file: !898, discriminator: 2)
!2744 = !DILocation(line: 817, column: 119, scope: !2743)
!2745 = !DILocation(line: 817, column: 122, scope: !2743)
!2746 = !DILocation(line: 817, column: 148, scope: !2743)
!2747 = !DILocation(line: 817, column: 106, scope: !2743)
!2748 = !DILocation(line: 817, column: 109, scope: !2743)
!2749 = !DILocation(line: 817, column: 105, scope: !2743)
!2750 = !DILocation(line: 817, column: 26, scope: !2743)
!2751 = !DILocation(line: 817, column: 26, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !2725, file: !898, discriminator: 3)
!2753 = !DILocation(line: 817, column: 23, scope: !2752)
!2754 = !DILocation(line: 817, column: 13, scope: !2752)
!2755 = !DILocation(line: 820, column: 19, scope: !2635)
!2756 = !DILocation(line: 820, column: 14, scope: !2635)
!2757 = !DILocation(line: 820, column: 24, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !2634, file: !898, discriminator: 1)
!2759 = !DILocation(line: 820, column: 31, scope: !2758)
!2760 = !DILocation(line: 820, column: 29, scope: !2758)
!2761 = !DILocation(line: 820, column: 9, scope: !2758)
!2762 = !DILocalVariable(name: "samples", scope: !2633, file: !898, line: 821, type: !1029)
!2763 = !DILocation(line: 821, column: 22, scope: !2633)
!2764 = !DILocation(line: 821, column: 55, scope: !2633)
!2765 = !DILocation(line: 821, column: 32, scope: !2633)
!2766 = !DILocation(line: 821, column: 51, scope: !2633)
!2767 = !DILocation(line: 821, column: 35, scope: !2633)
!2768 = !DILocation(line: 821, column: 61, scope: !2633)
!2769 = !DILocation(line: 822, column: 24, scope: !2633)
!2770 = !DILocation(line: 822, column: 33, scope: !2633)
!2771 = !DILocation(line: 822, column: 43, scope: !2633)
!2772 = !DILocation(line: 822, column: 46, scope: !2633)
!2773 = !DILocation(line: 822, column: 41, scope: !2633)
!2774 = !DILocation(line: 822, column: 13, scope: !2633)
!2775 = !DILocation(line: 73, column: 32, scope: !1048, inlinedAt: !2632)
!2776 = !DILocation(line: 73, column: 21, scope: !1048, inlinedAt: !2632)
!2777 = !DILocation(line: 74, column: 38, scope: !1048, inlinedAt: !2632)
!2778 = !DILocation(line: 74, column: 21, scope: !1048, inlinedAt: !2632)
!2779 = !DILocation(line: 71, column: 5, scope: !1048, inlinedAt: !2632)
!2780 = !{i32 177689, i32 177713, i32 177753}
!2781 = !DILocation(line: 823, column: 9, scope: !2633)
!2782 = !DILocation(line: 820, column: 46, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2634, file: !898, discriminator: 2)
!2784 = !DILocation(line: 820, column: 9, scope: !2783)
!2785 = distinct !{!2785, !2786}
!2786 = !DILocation(line: 820, column: 9, scope: !2636)
!2787 = !DILocation(line: 826, column: 9, scope: !2636)
!2788 = !DILocation(line: 826, column: 16, scope: !2789)
!2789 = !DILexicalBlockFile(scope: !2790, file: !898, discriminator: 1)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !898, line: 826, column: 9)
!2791 = distinct !DILexicalBlock(scope: !2636, file: !898, line: 826, column: 9)
!2792 = !DILocation(line: 826, column: 21, scope: !2789)
!2793 = !DILocation(line: 826, column: 9, scope: !2789)
!2794 = !DILocalVariable(name: "samples", scope: !2795, file: !898, line: 827, type: !1029)
!2795 = distinct !DILexicalBlock(scope: !2790, file: !898, line: 826, column: 35)
!2796 = !DILocation(line: 827, column: 22, scope: !2795)
!2797 = !DILocation(line: 827, column: 55, scope: !2795)
!2798 = !DILocation(line: 827, column: 32, scope: !2795)
!2799 = !DILocation(line: 827, column: 51, scope: !2795)
!2800 = !DILocation(line: 827, column: 35, scope: !2795)
!2801 = !DILocation(line: 827, column: 61, scope: !2795)
!2802 = !DILocation(line: 828, column: 20, scope: !2795)
!2803 = !DILocation(line: 828, column: 13, scope: !2795)
!2804 = !DILocation(line: 828, column: 37, scope: !2795)
!2805 = !DILocation(line: 828, column: 40, scope: !2795)
!2806 = !DILocation(line: 828, column: 35, scope: !2795)
!2807 = !DILocation(line: 828, column: 32, scope: !2795)
!2808 = !DILocation(line: 828, column: 52, scope: !2795)
!2809 = !DILocation(line: 829, column: 9, scope: !2795)
!2810 = !DILocation(line: 826, column: 31, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2790, file: !898, discriminator: 2)
!2812 = !DILocation(line: 826, column: 9, scope: !2811)
!2813 = distinct !{!2813, !2787}
!2814 = !DILocation(line: 830, column: 5, scope: !2636)
!2815 = !DILocation(line: 813, column: 46, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !2637, file: !898, discriminator: 2)
!2817 = !DILocation(line: 813, column: 5, scope: !2816)
!2818 = distinct !{!2818, !2819}
!2819 = !DILocation(line: 813, column: 5, scope: !2627)
!2820 = !DILocation(line: 46, column: 9, scope: !2821, inlinedAt: !2825)
!2821 = distinct !DISubprogram(name: "emms_c", scope: !2822, file: !2822, line: 37, type: !2823, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2822 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2823 = !DISubroutineType(types: !2824)
!2824 = !{null}
!2825 = distinct !DILocation(line: 832, column: 5, scope: !2627)
!2826 = !{i32 105138}
!2827 = !DILocation(line: 834, column: 5, scope: !2627)
!2828 = !DILocation(line: 835, column: 1, scope: !2627)
!2829 = distinct !DISubprogram(name: "parse_optional_info", scope: !898, file: !898, line: 1685, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1686, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2830 = !DILocalVariable(name: "x", arg: 1, scope: !2831, file: !2832, line: 66, type: !1038)
!2831 = distinct !DISubprogram(name: "av_bswap32", scope: !2832, file: !2832, line: 66, type: !2833, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!2832 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!1038, !1038}
!2835 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !2836)
!2836 = distinct !DILocation(line: 1748, column: 22, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !898, line: 1747, column: 63)
!2838 = distinct !DILexicalBlock(scope: !2839, file: !898, line: 1747, column: 13)
!2839 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1747, column: 13)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !898, line: 1712, column: 36)
!2841 = distinct !DILexicalBlock(scope: !2842, file: !898, line: 1703, column: 50)
!2842 = distinct !DILexicalBlock(scope: !2829, file: !898, line: 1703, column: 9)
!2843 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !2844)
!2844 = distinct !DILocation(line: 1773, column: 22, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2846, file: !898, line: 1772, column: 63)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !898, line: 1772, column: 13)
!2847 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1772, column: 13)
!2848 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !2849)
!2849 = distinct !DILocation(line: 1723, column: 22, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2851, file: !898, line: 1722, column: 63)
!2851 = distinct !DILexicalBlock(scope: !2852, file: !898, line: 1722, column: 13)
!2852 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1722, column: 13)
!2853 = !DILocalVariable(name: "s", arg: 1, scope: !2829, file: !898, line: 1685, type: !1094)
!2854 = !DILocation(line: 1685, column: 48, scope: !2829)
!2855 = !DILocalVariable(name: "dca", scope: !2829, file: !898, line: 1687, type: !2856)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64, align: 64)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAContext", file: !2858, line: 66, baseType: !2859)
!2858 = !DIFile(filename: "libavcodec/dcadec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAContext", file: !2858, line: 46, size: 627968, align: 256, elements: !2860)
!2860 = !{!2861, !2862, !2863, !2864, !2917, !3012, !3112, !3113, !3118, !3119, !3120, !3121, !3122}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2859, file: !2858, line: 47, baseType: !1104, size: 64, align: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2859, file: !2858, line: 48, baseType: !1099, size: 64, align: 64, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2859, file: !2858, line: 50, baseType: !1095, size: 372992, align: 256, offset: 256)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "exss", scope: !2859, file: !2858, line: 51, baseType: !2865, size: 1664, align: 64, offset: 373248)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAExssParser", file: !2866, line: 88, baseType: !2867)
!2866 = !DIFile(filename: "libavcodec/dca_exss.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAExssParser", file: !2866, line: 71, size: 1664, align: 64, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2867, file: !2866, line: 72, baseType: !1099, size: 64, align: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !2867, file: !2866, line: 73, baseType: !1817, size: 256, align: 64, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "exss_index", scope: !2867, file: !2866, line: 75, baseType: !1027, size: 32, align: 32, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "exss_size_nbits", scope: !2867, file: !2866, line: 76, baseType: !1027, size: 32, align: 32, offset: 352)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "exss_size", scope: !2867, file: !2866, line: 77, baseType: !1027, size: 32, align: 32, offset: 384)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "static_fields_present", scope: !2867, file: !2866, line: 79, baseType: !1027, size: 32, align: 32, offset: 416)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "npresents", scope: !2867, file: !2866, line: 80, baseType: !1027, size: 32, align: 32, offset: 448)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "nassets", scope: !2867, file: !2866, line: 81, baseType: !1027, size: 32, align: 32, offset: 480)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "mix_metadata_enabled", scope: !2867, file: !2866, line: 83, baseType: !1027, size: 32, align: 32, offset: 512)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "nmixoutconfigs", scope: !2867, file: !2866, line: 84, baseType: !1027, size: 32, align: 32, offset: 544)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "nmixoutchs", scope: !2867, file: !2866, line: 85, baseType: !1260, size: 128, align: 32, offset: 576)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "assets", scope: !2867, file: !2866, line: 87, baseType: !2881, size: 960, align: 32, offset: 704)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2882, size: 960, align: 32, elements: !2915)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAExssAsset", file: !2866, line: 69, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAExssAsset", file: !2866, line: 29, size: 960, align: 32, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "asset_offset", scope: !2883, file: !2866, line: 30, baseType: !1027, size: 32, align: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "asset_size", scope: !2883, file: !2866, line: 31, baseType: !1027, size: 32, align: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "asset_index", scope: !2883, file: !2866, line: 32, baseType: !1027, size: 32, align: 32, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_bit_res", scope: !2883, file: !2866, line: 34, baseType: !1027, size: 32, align: 32, offset: 96)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "max_sample_rate", scope: !2883, file: !2866, line: 35, baseType: !1027, size: 32, align: 32, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels_total", scope: !2883, file: !2866, line: 36, baseType: !1027, size: 32, align: 32, offset: 160)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "one_to_one_map_ch_to_spkr", scope: !2883, file: !2866, line: 37, baseType: !1027, size: 32, align: 32, offset: 192)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_stereo", scope: !2883, file: !2866, line: 38, baseType: !1027, size: 32, align: 32, offset: 224)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_6ch", scope: !2883, file: !2866, line: 39, baseType: !1027, size: 32, align: 32, offset: 256)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "spkr_mask_enabled", scope: !2883, file: !2866, line: 40, baseType: !1027, size: 32, align: 32, offset: 288)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "spkr_mask", scope: !2883, file: !2866, line: 41, baseType: !1027, size: 32, align: 32, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "representation_type", scope: !2883, file: !2866, line: 42, baseType: !1027, size: 32, align: 32, offset: 352)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "coding_mode", scope: !2883, file: !2866, line: 44, baseType: !1027, size: 32, align: 32, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "extension_mask", scope: !2883, file: !2866, line: 45, baseType: !1027, size: 32, align: 32, offset: 416)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "core_offset", scope: !2883, file: !2866, line: 47, baseType: !1027, size: 32, align: 32, offset: 448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "core_size", scope: !2883, file: !2866, line: 48, baseType: !1027, size: 32, align: 32, offset: 480)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "xbr_offset", scope: !2883, file: !2866, line: 50, baseType: !1027, size: 32, align: 32, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "xbr_size", scope: !2883, file: !2866, line: 51, baseType: !1027, size: 32, align: 32, offset: 544)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_offset", scope: !2883, file: !2866, line: 53, baseType: !1027, size: 32, align: 32, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_size", scope: !2883, file: !2866, line: 54, baseType: !1027, size: 32, align: 32, offset: 608)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "x96_offset", scope: !2883, file: !2866, line: 56, baseType: !1027, size: 32, align: 32, offset: 640)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "x96_size", scope: !2883, file: !2866, line: 57, baseType: !1027, size: 32, align: 32, offset: 672)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_offset", scope: !2883, file: !2866, line: 59, baseType: !1027, size: 32, align: 32, offset: 704)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_size", scope: !2883, file: !2866, line: 60, baseType: !1027, size: 32, align: 32, offset: 736)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "xll_offset", scope: !2883, file: !2866, line: 62, baseType: !1027, size: 32, align: 32, offset: 768)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "xll_size", scope: !2883, file: !2866, line: 63, baseType: !1027, size: 32, align: 32, offset: 800)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "xll_sync_present", scope: !2883, file: !2866, line: 64, baseType: !1027, size: 32, align: 32, offset: 832)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "xll_delay_nframes", scope: !2883, file: !2866, line: 65, baseType: !1027, size: 32, align: 32, offset: 864)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "xll_sync_offset", scope: !2883, file: !2866, line: 66, baseType: !1027, size: 32, align: 32, offset: 896)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "hd_stream_id", scope: !2883, file: !2866, line: 68, baseType: !1027, size: 32, align: 32, offset: 928)
!2915 = !{!2916}
!2916 = !DISubrange(count: 1)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "xll", scope: !2859, file: !2858, line: 52, baseType: !2918, size: 72448, align: 256, offset: 375040)
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllDecoder", file: !2919, line: 142, baseType: !2920)
!2919 = !DIFile(filename: "libavcodec/dca_xll.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllDecoder", file: !2919, line: 105, size: 72448, align: 256, elements: !2921)
!2921 = !{!2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2920, file: !2919, line: 106, baseType: !1099, size: 64, align: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !2920, file: !2919, line: 107, baseType: !1817, size: 256, align: 64, offset: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2920, file: !2919, line: 109, baseType: !1027, size: 32, align: 32, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "nchsets", scope: !2920, file: !2919, line: 110, baseType: !1027, size: 32, align: 32, offset: 352)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "nframesegs", scope: !2920, file: !2919, line: 111, baseType: !1027, size: 32, align: 32, offset: 384)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "nsegsamples_log2", scope: !2920, file: !2919, line: 112, baseType: !1027, size: 32, align: 32, offset: 416)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "nsegsamples", scope: !2920, file: !2919, line: 113, baseType: !1027, size: 32, align: 32, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "nframesamples_log2", scope: !2920, file: !2919, line: 114, baseType: !1027, size: 32, align: 32, offset: 480)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "nframesamples", scope: !2920, file: !2919, line: 115, baseType: !1027, size: 32, align: 32, offset: 512)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "seg_size_nbits", scope: !2920, file: !2919, line: 116, baseType: !1027, size: 32, align: 32, offset: 544)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "band_crc_present", scope: !2920, file: !2919, line: 117, baseType: !1027, size: 32, align: 32, offset: 576)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "scalable_lsbs", scope: !2920, file: !2919, line: 118, baseType: !1027, size: 32, align: 32, offset: 608)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask_nbits", scope: !2920, file: !2919, line: 119, baseType: !1027, size: 32, align: 32, offset: 640)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_lsb_width", scope: !2920, file: !2919, line: 120, baseType: !1027, size: 32, align: 32, offset: 672)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "chset", scope: !2920, file: !2919, line: 122, baseType: !2937, size: 69120, align: 256, offset: 768)
!2937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2938, size: 69120, align: 256, elements: !2995)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllChSet", file: !2919, line: 103, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllChSet", file: !2919, line: 64, size: 23040, align: 256, elements: !2940)
!2940 = !{!2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2956, !2958, !2959, !2960, !2961, !2962, !2963, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2993, !2997}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !2939, file: !2919, line: 66, baseType: !1027, size: 32, align: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "residual_encode", scope: !2939, file: !2919, line: 67, baseType: !1027, size: 32, align: 32, offset: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_bit_res", scope: !2939, file: !2919, line: 68, baseType: !1027, size: 32, align: 32, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "storage_bit_res", scope: !2939, file: !2919, line: 69, baseType: !1027, size: 32, align: 32, offset: 96)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !2939, file: !2919, line: 70, baseType: !1027, size: 32, align: 32, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "primary_chset", scope: !2939, file: !2919, line: 72, baseType: !1027, size: 32, align: 32, offset: 160)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_coeffs_present", scope: !2939, file: !2919, line: 73, baseType: !1027, size: 32, align: 32, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_embedded", scope: !2939, file: !2919, line: 74, baseType: !1027, size: 32, align: 32, offset: 224)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_type", scope: !2939, file: !2919, line: 75, baseType: !1027, size: 32, align: 32, offset: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "hier_chset", scope: !2939, file: !2919, line: 76, baseType: !1027, size: 32, align: 32, offset: 288)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "hier_ofs", scope: !2939, file: !2919, line: 77, baseType: !1027, size: 32, align: 32, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_coeff", scope: !2939, file: !2919, line: 78, baseType: !2953, size: 4096, align: 32, offset: 352)
!2953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 4096, align: 32, elements: !2954)
!2954 = !{!2955}
!2955 = !DISubrange(count: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale", scope: !2939, file: !2919, line: 79, baseType: !2957, size: 512, align: 32, offset: 4448)
!2957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 512, align: 32, elements: !1863)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale_inv", scope: !2939, file: !2919, line: 80, baseType: !2957, size: 512, align: 32, offset: 4960)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !2939, file: !2919, line: 81, baseType: !1027, size: 32, align: 32, offset: 5472)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ch_remap", scope: !2939, file: !2919, line: 82, baseType: !1254, size: 256, align: 32, offset: 5504)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "nfreqbands", scope: !2939, file: !2919, line: 84, baseType: !1027, size: 32, align: 32, offset: 5760)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "nabits", scope: !2939, file: !2919, line: 85, baseType: !1027, size: 32, align: 32, offset: 5792)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !2939, file: !2919, line: 87, baseType: !2964, size: 13312, align: 64, offset: 5824)
!2964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2965, size: 13312, align: 64, elements: !1058)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllBand", file: !2919, line: 62, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllBand", file: !2919, line: 44, size: 6656, align: 64, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971, !2972, !2973, !2974, !2977, !2978, !2979, !2980, !2981, !2983}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "decor_enabled", scope: !2966, file: !2919, line: 45, baseType: !1027, size: 32, align: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "orig_order", scope: !2966, file: !2919, line: 46, baseType: !1254, size: 256, align: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "decor_coeff", scope: !2966, file: !2919, line: 47, baseType: !1260, size: 128, align: 32, offset: 288)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pred_order", scope: !2966, file: !2919, line: 49, baseType: !1254, size: 256, align: 32, offset: 416)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "highest_pred_order", scope: !2966, file: !2919, line: 50, baseType: !1027, size: 32, align: 32, offset: 672)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_pred_order", scope: !2966, file: !2919, line: 51, baseType: !1254, size: 256, align: 32, offset: 704)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_refl_coeff", scope: !2966, file: !2919, line: 52, baseType: !2975, size: 4096, align: 32, offset: 960)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 4096, align: 32, elements: !2976)
!2976 = !{!1252, !1864}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_embedded", scope: !2966, file: !2919, line: 54, baseType: !1027, size: 32, align: 32, offset: 5056)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lsb_section_size", scope: !2966, file: !2919, line: 56, baseType: !1027, size: 32, align: 32, offset: 5088)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "nscalablelsbs", scope: !2966, file: !2919, line: 57, baseType: !1254, size: 256, align: 32, offset: 5120)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width_adjust", scope: !2966, file: !2919, line: 58, baseType: !1254, size: 256, align: 32, offset: 5376)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "msb_sample_buffer", scope: !2966, file: !2919, line: 60, baseType: !2982, size: 512, align: 64, offset: 5632)
!2982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 512, align: 64, elements: !1251)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "lsb_sample_buffer", scope: !2966, file: !2919, line: 61, baseType: !2982, size: 512, align: 64, offset: 6144)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "seg_common", scope: !2939, file: !2919, line: 90, baseType: !1027, size: 32, align: 32, offset: 19136)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "rice_code_flag", scope: !2939, file: !2919, line: 91, baseType: !1254, size: 256, align: 32, offset: 19168)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_hybrid_linear", scope: !2939, file: !2919, line: 92, baseType: !1254, size: 256, align: 32, offset: 19424)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_part_a", scope: !2939, file: !2919, line: 93, baseType: !1254, size: 256, align: 32, offset: 19680)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_part_b", scope: !2939, file: !2919, line: 94, baseType: !1254, size: 256, align: 32, offset: 19936)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "nsamples_part_a", scope: !2939, file: !2919, line: 95, baseType: !1254, size: 256, align: 32, offset: 20192)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "deci_history", scope: !2939, file: !2919, line: 98, baseType: !2991, size: 2048, align: 32, offset: 20480)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 2048, align: 32, elements: !2992)
!2992 = !{!1252, !1252}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !2939, file: !2919, line: 101, baseType: !2994, size: 96, align: 32, offset: 22528)
!2994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 96, align: 32, elements: !2995)
!2995 = !{!2996}
!2996 = !DISubrange(count: 3)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "sample_buffer", scope: !2939, file: !2919, line: 102, baseType: !2998, size: 192, align: 64, offset: 22656)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 192, align: 64, elements: !2995)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "navi", scope: !2920, file: !2919, line: 124, baseType: !1385, size: 64, align: 64, offset: 69888)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "navi_size", scope: !2920, file: !2919, line: 125, baseType: !1028, size: 32, align: 32, offset: 69952)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "nfreqbands", scope: !2920, file: !2919, line: 127, baseType: !1027, size: 32, align: 32, offset: 69984)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !2920, file: !2919, line: 128, baseType: !1027, size: 32, align: 32, offset: 70016)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "nreschsets", scope: !2920, file: !2919, line: 129, baseType: !1027, size: 32, align: 32, offset: 70048)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "nactivechsets", scope: !2920, file: !2919, line: 130, baseType: !1027, size: 32, align: 32, offset: 70080)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "hd_stream_id", scope: !2920, file: !2919, line: 132, baseType: !1027, size: 32, align: 32, offset: 70112)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_buffer", scope: !2920, file: !2919, line: 134, baseType: !1223, size: 64, align: 64, offset: 70144)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_length", scope: !2920, file: !2919, line: 135, baseType: !1027, size: 32, align: 32, offset: 70208)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_delay", scope: !2920, file: !2919, line: 136, baseType: !1027, size: 32, align: 32, offset: 70240)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !2920, file: !2919, line: 138, baseType: !1949, size: 64, align: 64, offset: 70272)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "output_mask", scope: !2920, file: !2919, line: 140, baseType: !1027, size: 32, align: 32, offset: 70336)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "output_samples", scope: !2920, file: !2919, line: 141, baseType: !2184, size: 2048, align: 64, offset: 70400)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "lbr", scope: !2859, file: !2858, line: 53, baseType: !3013, size: 178944, align: 256, offset: 447488)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCALbrDecoder", file: !3014, line: 127, baseType: !3015)
!3014 = !DIFile(filename: "libavcodec/dca_lbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCALbrDecoder", file: !3014, line: 58, size: 178944, align: 256, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3041, !3043, !3044, !3045, !3049, !3052, !3055, !3059, !3062, !3063, !3066, !3069, !3070, !3073, !3075, !3078, !3079, !3080, !3083, !3085, !3086, !3089, !3090, !3092, !3095, !3108, !3109, !3110, !3111}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !3015, file: !3014, line: 59, baseType: !1099, size: 64, align: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !3015, file: !3014, line: 60, baseType: !1817, size: 256, align: 64, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !3015, file: !3014, line: 62, baseType: !1027, size: 32, align: 32, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !3015, file: !3014, line: 63, baseType: !1027, size: 32, align: 32, offset: 352)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3015, file: !3014, line: 64, baseType: !1027, size: 32, align: 32, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_orig", scope: !3015, file: !3014, line: 65, baseType: !1027, size: 32, align: 32, offset: 416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_scaled", scope: !3015, file: !3014, line: 66, baseType: !1027, size: 32, align: 32, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !3015, file: !3014, line: 68, baseType: !1027, size: 32, align: 32, offset: 480)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels_total", scope: !3015, file: !3014, line: 69, baseType: !1027, size: 32, align: 32, offset: 512)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "freq_range", scope: !3015, file: !3014, line: 70, baseType: !1027, size: 32, align: 32, offset: 544)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "band_limit", scope: !3015, file: !3014, line: 71, baseType: !1027, size: 32, align: 32, offset: 576)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "limited_rate", scope: !3015, file: !3014, line: 72, baseType: !1027, size: 32, align: 32, offset: 608)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "limited_range", scope: !3015, file: !3014, line: 73, baseType: !1027, size: 32, align: 32, offset: 640)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "res_profile", scope: !3015, file: !3014, line: 74, baseType: !1027, size: 32, align: 32, offset: 672)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "nsubbands", scope: !3015, file: !3014, line: 75, baseType: !1027, size: 32, align: 32, offset: 704)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "g3_avg_only_start_sb", scope: !3015, file: !3014, line: 76, baseType: !1027, size: 32, align: 32, offset: 736)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "min_mono_subband", scope: !3015, file: !3014, line: 77, baseType: !1027, size: 32, align: 32, offset: 768)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "max_mono_subband", scope: !3015, file: !3014, line: 78, baseType: !1027, size: 32, align: 32, offset: 800)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "framenum", scope: !3015, file: !3014, line: 80, baseType: !1027, size: 32, align: 32, offset: 832)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_rand", scope: !3015, file: !3014, line: 81, baseType: !1027, size: 32, align: 32, offset: 864)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3015, file: !3014, line: 82, baseType: !1027, size: 32, align: 32, offset: 896)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "quant_levels", scope: !3015, file: !3014, line: 84, baseType: !3039, size: 768, align: 8, offset: 928)
!3039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 768, align: 8, elements: !3040)
!3040 = !{!2996, !1877}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "sb_indices", scope: !3015, file: !3014, line: 85, baseType: !3042, size: 256, align: 8, offset: 1696)
!3042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 256, align: 8, elements: !1963)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "sec_ch_sbms", scope: !3015, file: !3014, line: 87, baseType: !3039, size: 768, align: 8, offset: 1952)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "sec_ch_lrms", scope: !3015, file: !3014, line: 88, baseType: !3039, size: 768, align: 8, offset: 2720)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ch_pres", scope: !3015, file: !3014, line: 89, baseType: !3046, size: 192, align: 32, offset: 3488)
!3046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, align: 32, elements: !3047)
!3047 = !{!3048}
!3048 = !DISubrange(count: 6)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "grid_1_scf", scope: !3015, file: !3014, line: 91, baseType: !3050, size: 4608, align: 8, offset: 3680)
!3050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 4608, align: 8, elements: !3051)
!3051 = !{!3048, !1903, !1252}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "grid_2_scf", scope: !3015, file: !3014, line: 92, baseType: !3053, size: 9216, align: 8, offset: 8288)
!3053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 9216, align: 8, elements: !3054)
!3054 = !{!3048, !2996, !1868}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_avg", scope: !3015, file: !3014, line: 94, baseType: !3056, size: 1344, align: 8, offset: 17504)
!3056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 1344, align: 8, elements: !3057)
!3057 = !{!3048, !3058}
!3058 = !DISubrange(count: 28)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_scf", scope: !3015, file: !3014, line: 95, baseType: !3060, size: 10752, align: 8, offset: 18848)
!3060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 10752, align: 8, elements: !3061)
!3061 = !{!3048, !3058, !1252}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_pres", scope: !3015, file: !3014, line: 96, baseType: !3046, size: 192, align: 32, offset: 29600)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "high_res_scf", scope: !3015, file: !3014, line: 98, baseType: !3064, size: 12288, align: 8, offset: 29792)
!3064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 12288, align: 8, elements: !3065)
!3065 = !{!3048, !1877, !1252}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "part_stereo", scope: !3015, file: !3014, line: 100, baseType: !3067, size: 1920, align: 8, offset: 42080)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 1920, align: 8, elements: !3068)
!3068 = !{!3048, !1252, !1087}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "part_stereo_pres", scope: !3015, file: !3014, line: 101, baseType: !1039, size: 8, align: 8, offset: 44000)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_coeff", scope: !3015, file: !3014, line: 103, baseType: !3071, size: 18432, align: 32, offset: 44032)
!3071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 18432, align: 32, elements: !3072)
!3072 = !{!1059, !3048, !2996, !1059, !1252}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "sb_scf", scope: !3015, file: !3014, line: 105, baseType: !3074, size: 1024, align: 32, offset: 62464)
!3074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 1024, align: 32, elements: !1963)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "time_samples", scope: !3015, file: !3014, line: 107, baseType: !3076, size: 12288, align: 64, offset: 63488)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 12288, align: 64, elements: !3077)
!3077 = !{!3048, !1877}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "ts_buffer", scope: !3015, file: !3014, line: 109, baseType: !1062, size: 64, align: 64, offset: 75776)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ts_size", scope: !3015, file: !3014, line: 110, baseType: !1028, size: 32, align: 32, offset: 75840)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !3015, file: !3014, line: 112, baseType: !3081, size: 24576, align: 32, offset: 76032)
!3081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 24576, align: 32, elements: !3082)
!3082 = !{!3048, !2955}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !3015, file: !3014, line: 113, baseType: !3084, size: 4096, align: 32, offset: 100608)
!3084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 4096, align: 32, elements: !2954)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_data", scope: !3015, file: !3014, line: 115, baseType: !1938, size: 2048, align: 32, offset: 104704)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_history", scope: !3015, file: !3014, line: 116, baseType: !3087, size: 320, align: 32, offset: 106752)
!3087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 320, align: 32, elements: !3088)
!3088 = !{!1087, !1059}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_scale", scope: !3015, file: !3014, line: 117, baseType: !1063, size: 32, align: 32, offset: 107072)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "tonal_scf", scope: !3015, file: !3014, line: 119, baseType: !3091, size: 48, align: 8, offset: 107104)
!3091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 48, align: 8, elements: !3047)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "tonal_bounds", scope: !3015, file: !3014, line: 120, baseType: !3093, size: 5120, align: 16, offset: 107152)
!3093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1229, size: 5120, align: 16, elements: !3094)
!3094 = !{!1087, !1877, !1059}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "tones", scope: !3015, file: !3014, line: 121, baseType: !3096, size: 65536, align: 8, offset: 112272)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3097, size: 65536, align: 8, elements: !3106)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCALbrTone", file: !3014, line: 56, baseType: !3098)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCALbrTone", file: !3014, line: 49, size: 128, align: 8, elements: !3099)
!3099 = !{!3100, !3101, !3102, !3103, !3104, !3105}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "x_freq", scope: !3098, file: !3014, line: 50, baseType: !1039, size: 8, align: 8)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "f_delt", scope: !3098, file: !3014, line: 51, baseType: !1039, size: 8, align: 8, offset: 8)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "ph_rot", scope: !3098, file: !3014, line: 52, baseType: !1039, size: 8, align: 8, offset: 16)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3098, file: !3014, line: 53, baseType: !1039, size: 8, align: 8, offset: 24)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !3098, file: !3014, line: 54, baseType: !3091, size: 48, align: 8, offset: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "phs", scope: !3098, file: !3014, line: 55, baseType: !3091, size: 48, align: 8, offset: 80)
!3106 = !{!3107}
!3107 = !DISubrange(count: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "ntones", scope: !3015, file: !3014, line: 122, baseType: !1027, size: 32, align: 32, offset: 177824)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !3015, file: !3014, line: 124, baseType: !1997, size: 896, align: 64, offset: 177856)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !3015, file: !3014, line: 125, baseType: !2106, size: 64, align: 64, offset: 178752)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !3015, file: !3014, line: 126, baseType: !1949, size: 64, align: 64, offset: 178816)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !2859, file: !2858, line: 55, baseType: !1950, size: 1280, align: 64, offset: 626432)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "crctab", scope: !2859, file: !2858, line: 57, baseType: !3114, size: 64, align: 64, offset: 627712)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64, align: 64)
!3115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3116)
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCRC", file: !3117, line: 47, baseType: !1038)
!3117 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2859, file: !2858, line: 59, baseType: !1223, size: 64, align: 64, offset: 627776)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2859, file: !2858, line: 60, baseType: !1028, size: 32, align: 32, offset: 627840)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2859, file: !2858, line: 62, baseType: !1027, size: 32, align: 32, offset: 627872)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !2859, file: !2858, line: 64, baseType: !1027, size: 32, align: 32, offset: 627904)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "core_only", scope: !2859, file: !2858, line: 65, baseType: !1027, size: 32, align: 32, offset: 627936)
!3123 = !DILocation(line: 1687, column: 17, scope: !2829)
!3124 = !DILocation(line: 1687, column: 23, scope: !2829)
!3125 = !DILocation(line: 1687, column: 26, scope: !2829)
!3126 = !DILocation(line: 1687, column: 33, scope: !2829)
!3127 = !DILocalVariable(name: "ret", scope: !2829, file: !898, line: 1688, type: !1027)
!3128 = !DILocation(line: 1688, column: 9, scope: !2829)
!3129 = !DILocation(line: 1691, column: 9, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !2829, file: !898, line: 1691, column: 9)
!3131 = !DILocation(line: 1691, column: 12, scope: !3130)
!3132 = !DILocation(line: 1691, column: 9, scope: !2829)
!3133 = !DILocation(line: 1692, column: 25, scope: !3130)
!3134 = !DILocation(line: 1692, column: 28, scope: !3130)
!3135 = !DILocation(line: 1692, column: 9, scope: !3130)
!3136 = !DILocation(line: 1695, column: 9, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !2829, file: !898, line: 1695, column: 9)
!3138 = !DILocation(line: 1695, column: 12, scope: !3137)
!3139 = !DILocation(line: 1695, column: 24, scope: !3137)
!3140 = !DILocation(line: 1695, column: 49, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3137, file: !898, discriminator: 1)
!3142 = !DILocation(line: 1695, column: 34, scope: !3141)
!3143 = !DILocation(line: 1695, column: 32, scope: !3141)
!3144 = !DILocation(line: 1695, column: 53, scope: !3141)
!3145 = !DILocation(line: 1696, column: 9, scope: !3137)
!3146 = !DILocation(line: 1696, column: 13, scope: !3141)
!3147 = !DILocation(line: 1696, column: 16, scope: !3141)
!3148 = !DILocation(line: 1696, column: 23, scope: !3141)
!3149 = !DILocation(line: 1696, column: 39, scope: !3141)
!3150 = !DILocation(line: 1695, column: 9, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !2829, file: !898, discriminator: 2)
!3152 = !DILocation(line: 1697, column: 16, scope: !3137)
!3153 = !DILocation(line: 1697, column: 9, scope: !3137)
!3154 = !DILocation(line: 1699, column: 9, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !2829, file: !898, line: 1699, column: 9)
!3156 = !DILocation(line: 1699, column: 13, scope: !3155)
!3157 = !DILocation(line: 1699, column: 9, scope: !2829)
!3158 = !DILocation(line: 1700, column: 9, scope: !3155)
!3159 = !DILocation(line: 1700, column: 12, scope: !3155)
!3160 = !DILocation(line: 1700, column: 31, scope: !3155)
!3161 = !DILocation(line: 1703, column: 9, scope: !2842)
!3162 = !DILocation(line: 1703, column: 12, scope: !2842)
!3163 = !DILocation(line: 1703, column: 30, scope: !2842)
!3164 = !DILocation(line: 1703, column: 34, scope: !3165)
!3165 = !DILexicalBlockFile(scope: !2842, file: !898, discriminator: 1)
!3166 = !DILocation(line: 1703, column: 39, scope: !3165)
!3167 = !DILocation(line: 1703, column: 9, scope: !3165)
!3168 = !DILocalVariable(name: "sync_pos", scope: !2841, file: !898, line: 1704, type: !1027)
!3169 = !DILocation(line: 1704, column: 13, scope: !2841)
!3170 = !DILocation(line: 1704, column: 26, scope: !2841)
!3171 = !DILocation(line: 1704, column: 29, scope: !2841)
!3172 = !DILocation(line: 1704, column: 40, scope: !2841)
!3173 = !DILocation(line: 1704, column: 48, scope: !2841)
!3174 = !DILocation(line: 1704, column: 51, scope: !2841)
!3175 = !DILocation(line: 1704, column: 54, scope: !2841)
!3176 = !DILocation(line: 1704, column: 67, scope: !2841)
!3177 = !DILocation(line: 1704, column: 45, scope: !2841)
!3178 = !DILocation(line: 1704, column: 25, scope: !2841)
!3179 = !DILocation(line: 1704, column: 76, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !2841, file: !898, discriminator: 1)
!3181 = !DILocation(line: 1704, column: 79, scope: !3180)
!3182 = !DILocation(line: 1704, column: 82, scope: !3180)
!3183 = !DILocation(line: 1704, column: 95, scope: !3180)
!3184 = !DILocation(line: 1704, column: 25, scope: !3180)
!3185 = !DILocation(line: 1704, column: 104, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !2841, file: !898, discriminator: 2)
!3187 = !DILocation(line: 1704, column: 107, scope: !3186)
!3188 = !DILocation(line: 1704, column: 118, scope: !3186)
!3189 = !DILocation(line: 1704, column: 25, scope: !3186)
!3190 = !DILocation(line: 1704, column: 25, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !2841, file: !898, discriminator: 3)
!3192 = !DILocation(line: 1704, column: 124, scope: !3191)
!3193 = !DILocation(line: 1704, column: 13, scope: !3191)
!3194 = !DILocalVariable(name: "last_pos", scope: !2841, file: !898, line: 1705, type: !1027)
!3195 = !DILocation(line: 1705, column: 13, scope: !2841)
!3196 = !DILocation(line: 1705, column: 40, scope: !2841)
!3197 = !DILocation(line: 1705, column: 43, scope: !2841)
!3198 = !DILocation(line: 1705, column: 24, scope: !2841)
!3199 = !DILocation(line: 1705, column: 47, scope: !2841)
!3200 = !DILocalVariable(name: "size", scope: !2841, file: !898, line: 1706, type: !1027)
!3201 = !DILocation(line: 1706, column: 13, scope: !2841)
!3202 = !DILocalVariable(name: "dist", scope: !2841, file: !898, line: 1706, type: !1027)
!3203 = !DILocation(line: 1706, column: 19, scope: !2841)
!3204 = !DILocalVariable(name: "w1", scope: !2841, file: !898, line: 1707, type: !1038)
!3205 = !DILocation(line: 1707, column: 18, scope: !2841)
!3206 = !DILocalVariable(name: "w2", scope: !2841, file: !898, line: 1707, type: !1038)
!3207 = !DILocation(line: 1707, column: 22, scope: !2841)
!3208 = !DILocation(line: 1712, column: 17, scope: !2841)
!3209 = !DILocation(line: 1712, column: 20, scope: !2841)
!3210 = !DILocation(line: 1712, column: 9, scope: !2841)
!3211 = !DILocation(line: 1714, column: 17, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1714, column: 17)
!3213 = !DILocation(line: 1714, column: 22, scope: !3212)
!3214 = !DILocation(line: 1714, column: 17, scope: !2840)
!3215 = !DILocation(line: 1715, column: 17, scope: !3212)
!3216 = !DILocation(line: 1722, column: 13, scope: !2840)
!3217 = !DILocation(line: 1722, column: 20, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !2851, file: !898, discriminator: 1)
!3219 = !DILocation(line: 1722, column: 32, scope: !3218)
!3220 = !DILocation(line: 1722, column: 29, scope: !3218)
!3221 = !DILocation(line: 1722, column: 13, scope: !3218)
!3222 = !DILocation(line: 1723, column: 65, scope: !2850)
!3223 = !DILocation(line: 1723, column: 68, scope: !2850)
!3224 = !DILocation(line: 1723, column: 71, scope: !2850)
!3225 = !DILocation(line: 1723, column: 80, scope: !2850)
!3226 = !DILocation(line: 1723, column: 89, scope: !2850)
!3227 = !DILocation(line: 1723, column: 78, scope: !2850)
!3228 = !DILocation(line: 1723, column: 96, scope: !2850)
!3229 = !DILocation(line: 1723, column: 22, scope: !2850)
!3230 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !2849)
!3231 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !2849)
!3232 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !2849)
!3233 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !2849)
!3234 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !2849)
!3235 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !2849)
!3236 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !2849)
!3237 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !2849)
!3238 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !2849)
!3239 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !2849)
!3240 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !2849)
!3241 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !2849)
!3242 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !2849)
!3243 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !2849)
!3244 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !2849)
!3245 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !2849)
!3246 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !2849)
!3247 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !2849)
!3248 = !DILocation(line: 1723, column: 20, scope: !2850)
!3249 = !DILocation(line: 1724, column: 21, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !2850, file: !898, line: 1724, column: 21)
!3251 = !DILocation(line: 1724, column: 24, scope: !3250)
!3252 = !DILocation(line: 1724, column: 21, scope: !2850)
!3253 = !DILocation(line: 1725, column: 29, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !898, line: 1724, column: 40)
!3255 = !DILocation(line: 1725, column: 32, scope: !3254)
!3256 = !DILocation(line: 1725, column: 39, scope: !3254)
!3257 = !DILocation(line: 1725, column: 26, scope: !3254)
!3258 = !DILocation(line: 1726, column: 28, scope: !3254)
!3259 = !DILocation(line: 1726, column: 31, scope: !3254)
!3260 = !DILocation(line: 1726, column: 44, scope: !3254)
!3261 = !DILocation(line: 1726, column: 53, scope: !3254)
!3262 = !DILocation(line: 1726, column: 42, scope: !3254)
!3263 = !DILocation(line: 1726, column: 26, scope: !3254)
!3264 = !DILocation(line: 1727, column: 25, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3254, file: !898, line: 1727, column: 25)
!3266 = !DILocation(line: 1727, column: 30, scope: !3265)
!3267 = !DILocation(line: 1728, column: 25, scope: !3265)
!3268 = !DILocation(line: 1728, column: 29, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3265, file: !898, discriminator: 1)
!3270 = !DILocation(line: 1728, column: 37, scope: !3269)
!3271 = !DILocation(line: 1728, column: 34, scope: !3269)
!3272 = !DILocation(line: 1728, column: 42, scope: !3269)
!3273 = !DILocation(line: 1728, column: 45, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3265, file: !898, discriminator: 2)
!3275 = !DILocation(line: 1728, column: 50, scope: !3274)
!3276 = !DILocation(line: 1728, column: 57, scope: !3274)
!3277 = !DILocation(line: 1728, column: 54, scope: !3274)
!3278 = !DILocation(line: 1729, column: 25, scope: !3265)
!3279 = !DILocation(line: 1729, column: 29, scope: !3269)
!3280 = !DILocation(line: 1729, column: 32, scope: !3269)
!3281 = !DILocation(line: 1729, column: 38, scope: !3269)
!3282 = !DILocation(line: 1729, column: 46, scope: !3269)
!3283 = !DILocation(line: 1727, column: 25, scope: !3284)
!3284 = !DILexicalBlockFile(scope: !3254, file: !898, discriminator: 1)
!3285 = !DILocation(line: 1730, column: 38, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3265, file: !898, line: 1729, column: 55)
!3287 = !DILocation(line: 1730, column: 47, scope: !3286)
!3288 = !DILocation(line: 1730, column: 52, scope: !3286)
!3289 = !DILocation(line: 1730, column: 25, scope: !3286)
!3290 = !DILocation(line: 1730, column: 28, scope: !3286)
!3291 = !DILocation(line: 1730, column: 36, scope: !3286)
!3292 = !DILocation(line: 1731, column: 25, scope: !3286)
!3293 = !DILocation(line: 1733, column: 17, scope: !3254)
!3294 = !DILocation(line: 1734, column: 13, scope: !2850)
!3295 = !DILocation(line: 1722, column: 50, scope: !3296)
!3296 = !DILexicalBlockFile(scope: !2851, file: !898, discriminator: 2)
!3297 = !DILocation(line: 1722, column: 59, scope: !3296)
!3298 = !DILocation(line: 1722, column: 57, scope: !3296)
!3299 = !DILocation(line: 1722, column: 13, scope: !3296)
!3300 = distinct !{!3300, !3216}
!3301 = !DILocation(line: 1736, column: 18, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1736, column: 17)
!3303 = !DILocation(line: 1736, column: 21, scope: !3302)
!3304 = !DILocation(line: 1736, column: 17, scope: !2840)
!3305 = !DILocation(line: 1737, column: 24, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3302, file: !898, line: 1736, column: 30)
!3307 = !DILocation(line: 1737, column: 27, scope: !3306)
!3308 = !DILocation(line: 1737, column: 17, scope: !3306)
!3309 = !DILocation(line: 1738, column: 21, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3306, file: !898, line: 1738, column: 21)
!3311 = !DILocation(line: 1738, column: 24, scope: !3310)
!3312 = !DILocation(line: 1738, column: 31, scope: !3310)
!3313 = !DILocation(line: 1738, column: 47, scope: !3310)
!3314 = !DILocation(line: 1738, column: 21, scope: !3306)
!3315 = !DILocation(line: 1739, column: 21, scope: !3310)
!3316 = !DILocation(line: 1740, column: 13, scope: !3306)
!3317 = !DILocation(line: 1741, column: 13, scope: !2840)
!3318 = !DILocation(line: 1747, column: 13, scope: !2840)
!3319 = !DILocation(line: 1747, column: 20, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !2838, file: !898, discriminator: 1)
!3321 = !DILocation(line: 1747, column: 32, scope: !3320)
!3322 = !DILocation(line: 1747, column: 29, scope: !3320)
!3323 = !DILocation(line: 1747, column: 13, scope: !3320)
!3324 = !DILocation(line: 1748, column: 65, scope: !2837)
!3325 = !DILocation(line: 1748, column: 68, scope: !2837)
!3326 = !DILocation(line: 1748, column: 71, scope: !2837)
!3327 = !DILocation(line: 1748, column: 80, scope: !2837)
!3328 = !DILocation(line: 1748, column: 89, scope: !2837)
!3329 = !DILocation(line: 1748, column: 78, scope: !2837)
!3330 = !DILocation(line: 1748, column: 96, scope: !2837)
!3331 = !DILocation(line: 1748, column: 22, scope: !2837)
!3332 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !2836)
!3333 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !2836)
!3334 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !2836)
!3335 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !2836)
!3336 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !2836)
!3337 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !2836)
!3338 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !2836)
!3339 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !2836)
!3340 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !2836)
!3341 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !2836)
!3342 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !2836)
!3343 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !2836)
!3344 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !2836)
!3345 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !2836)
!3346 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !2836)
!3347 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !2836)
!3348 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !2836)
!3349 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !2836)
!3350 = !DILocation(line: 1748, column: 20, scope: !2837)
!3351 = !DILocation(line: 1749, column: 21, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !2837, file: !898, line: 1749, column: 21)
!3353 = !DILocation(line: 1749, column: 24, scope: !3352)
!3354 = !DILocation(line: 1749, column: 21, scope: !2837)
!3355 = !DILocation(line: 1750, column: 29, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !898, line: 1749, column: 40)
!3357 = !DILocation(line: 1750, column: 32, scope: !3356)
!3358 = !DILocation(line: 1750, column: 39, scope: !3356)
!3359 = !DILocation(line: 1750, column: 26, scope: !3356)
!3360 = !DILocation(line: 1751, column: 28, scope: !3356)
!3361 = !DILocation(line: 1751, column: 31, scope: !3356)
!3362 = !DILocation(line: 1751, column: 44, scope: !3356)
!3363 = !DILocation(line: 1751, column: 53, scope: !3356)
!3364 = !DILocation(line: 1751, column: 42, scope: !3356)
!3365 = !DILocation(line: 1751, column: 26, scope: !3356)
!3366 = !DILocation(line: 1752, column: 25, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3356, file: !898, line: 1752, column: 25)
!3368 = !DILocation(line: 1752, column: 30, scope: !3367)
!3369 = !DILocation(line: 1752, column: 36, scope: !3367)
!3370 = !DILocation(line: 1752, column: 39, scope: !3371)
!3371 = !DILexicalBlockFile(scope: !3367, file: !898, discriminator: 1)
!3372 = !DILocation(line: 1752, column: 47, scope: !3371)
!3373 = !DILocation(line: 1752, column: 44, scope: !3371)
!3374 = !DILocation(line: 1752, column: 25, scope: !3371)
!3375 = !DILocation(line: 1753, column: 38, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3367, file: !898, line: 1752, column: 53)
!3377 = !DILocation(line: 1753, column: 47, scope: !3376)
!3378 = !DILocation(line: 1753, column: 52, scope: !3376)
!3379 = !DILocation(line: 1753, column: 25, scope: !3376)
!3380 = !DILocation(line: 1753, column: 28, scope: !3376)
!3381 = !DILocation(line: 1753, column: 36, scope: !3376)
!3382 = !DILocation(line: 1754, column: 25, scope: !3376)
!3383 = !DILocation(line: 1756, column: 17, scope: !3356)
!3384 = !DILocation(line: 1757, column: 13, scope: !2837)
!3385 = !DILocation(line: 1747, column: 50, scope: !3386)
!3386 = !DILexicalBlockFile(scope: !2838, file: !898, discriminator: 2)
!3387 = !DILocation(line: 1747, column: 59, scope: !3386)
!3388 = !DILocation(line: 1747, column: 57, scope: !3386)
!3389 = !DILocation(line: 1747, column: 13, scope: !3386)
!3390 = distinct !{!3390, !3318}
!3391 = !DILocation(line: 1759, column: 18, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1759, column: 17)
!3393 = !DILocation(line: 1759, column: 21, scope: !3392)
!3394 = !DILocation(line: 1759, column: 17, scope: !2840)
!3395 = !DILocation(line: 1760, column: 24, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !898, line: 1759, column: 30)
!3397 = !DILocation(line: 1760, column: 27, scope: !3396)
!3398 = !DILocation(line: 1760, column: 17, scope: !3396)
!3399 = !DILocation(line: 1761, column: 21, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3396, file: !898, line: 1761, column: 21)
!3401 = !DILocation(line: 1761, column: 24, scope: !3400)
!3402 = !DILocation(line: 1761, column: 31, scope: !3400)
!3403 = !DILocation(line: 1761, column: 47, scope: !3400)
!3404 = !DILocation(line: 1761, column: 21, scope: !3396)
!3405 = !DILocation(line: 1762, column: 21, scope: !3400)
!3406 = !DILocation(line: 1763, column: 13, scope: !3396)
!3407 = !DILocation(line: 1764, column: 13, scope: !2840)
!3408 = !DILocation(line: 1767, column: 17, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1767, column: 17)
!3410 = !DILocation(line: 1767, column: 22, scope: !3409)
!3411 = !DILocation(line: 1767, column: 17, scope: !2840)
!3412 = !DILocation(line: 1768, column: 17, scope: !3409)
!3413 = !DILocation(line: 1772, column: 13, scope: !2840)
!3414 = !DILocation(line: 1772, column: 20, scope: !3415)
!3415 = !DILexicalBlockFile(scope: !2846, file: !898, discriminator: 1)
!3416 = !DILocation(line: 1772, column: 32, scope: !3415)
!3417 = !DILocation(line: 1772, column: 29, scope: !3415)
!3418 = !DILocation(line: 1772, column: 13, scope: !3415)
!3419 = !DILocation(line: 1773, column: 65, scope: !2845)
!3420 = !DILocation(line: 1773, column: 68, scope: !2845)
!3421 = !DILocation(line: 1773, column: 71, scope: !2845)
!3422 = !DILocation(line: 1773, column: 80, scope: !2845)
!3423 = !DILocation(line: 1773, column: 89, scope: !2845)
!3424 = !DILocation(line: 1773, column: 78, scope: !2845)
!3425 = !DILocation(line: 1773, column: 96, scope: !2845)
!3426 = !DILocation(line: 1773, column: 22, scope: !2845)
!3427 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !2844)
!3428 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !2844)
!3429 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !2844)
!3430 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !2844)
!3431 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !2844)
!3432 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !2844)
!3433 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !2844)
!3434 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !2844)
!3435 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !2844)
!3436 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !2844)
!3437 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !2844)
!3438 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !2844)
!3439 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !2844)
!3440 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !2844)
!3441 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !2844)
!3442 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !2844)
!3443 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !2844)
!3444 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !2844)
!3445 = !DILocation(line: 1773, column: 20, scope: !2845)
!3446 = !DILocation(line: 1774, column: 21, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !2845, file: !898, line: 1774, column: 21)
!3448 = !DILocation(line: 1774, column: 24, scope: !3447)
!3449 = !DILocation(line: 1774, column: 21, scope: !2845)
!3450 = !DILocation(line: 1775, column: 29, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3447, file: !898, line: 1774, column: 40)
!3452 = !DILocation(line: 1775, column: 32, scope: !3451)
!3453 = !DILocation(line: 1775, column: 39, scope: !3451)
!3454 = !DILocation(line: 1775, column: 26, scope: !3451)
!3455 = !DILocation(line: 1776, column: 28, scope: !3451)
!3456 = !DILocation(line: 1776, column: 31, scope: !3451)
!3457 = !DILocation(line: 1776, column: 34, scope: !3451)
!3458 = !DILocation(line: 1776, column: 47, scope: !3451)
!3459 = !DILocation(line: 1776, column: 53, scope: !3451)
!3460 = !DILocation(line: 1776, column: 62, scope: !3451)
!3461 = !DILocation(line: 1776, column: 51, scope: !3451)
!3462 = !DILocation(line: 1776, column: 26, scope: !3451)
!3463 = !DILocation(line: 1777, column: 25, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3451, file: !898, line: 1777, column: 25)
!3465 = !DILocation(line: 1777, column: 30, scope: !3464)
!3466 = !DILocation(line: 1777, column: 36, scope: !3464)
!3467 = !DILocation(line: 1777, column: 39, scope: !3468)
!3468 = !DILexicalBlockFile(scope: !3464, file: !898, discriminator: 1)
!3469 = !DILocation(line: 1777, column: 47, scope: !3468)
!3470 = !DILocation(line: 1777, column: 44, scope: !3468)
!3471 = !DILocation(line: 1777, column: 52, scope: !3468)
!3472 = !DILocation(line: 1778, column: 33, scope: !3464)
!3473 = !DILocation(line: 1778, column: 38, scope: !3464)
!3474 = !DILocation(line: 1778, column: 54, scope: !3464)
!3475 = !DILocation(line: 1778, column: 57, scope: !3464)
!3476 = !DILocation(line: 1778, column: 60, scope: !3464)
!3477 = !DILocation(line: 1779, column: 34, scope: !3464)
!3478 = !DILocation(line: 1779, column: 43, scope: !3464)
!3479 = !DILocation(line: 1779, column: 48, scope: !3464)
!3480 = !DILocation(line: 1778, column: 67, scope: !3464)
!3481 = !DILocation(line: 1779, column: 53, scope: !3464)
!3482 = !DILocation(line: 1779, column: 58, scope: !3464)
!3483 = !DILocation(line: 1778, column: 26, scope: !3464)
!3484 = !DILocation(line: 1777, column: 25, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3451, file: !898, discriminator: 2)
!3486 = !DILocation(line: 1780, column: 39, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3464, file: !898, line: 1779, column: 64)
!3488 = !DILocation(line: 1780, column: 48, scope: !3487)
!3489 = !DILocation(line: 1780, column: 25, scope: !3487)
!3490 = !DILocation(line: 1780, column: 28, scope: !3487)
!3491 = !DILocation(line: 1780, column: 37, scope: !3487)
!3492 = !DILocation(line: 1781, column: 25, scope: !3487)
!3493 = !DILocation(line: 1783, column: 17, scope: !3451)
!3494 = !DILocation(line: 1784, column: 13, scope: !2845)
!3495 = !DILocation(line: 1772, column: 50, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !2846, file: !898, discriminator: 2)
!3497 = !DILocation(line: 1772, column: 59, scope: !3496)
!3498 = !DILocation(line: 1772, column: 57, scope: !3496)
!3499 = !DILocation(line: 1772, column: 13, scope: !3496)
!3500 = distinct !{!3500, !3413}
!3501 = !DILocation(line: 1786, column: 18, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !2840, file: !898, line: 1786, column: 17)
!3503 = !DILocation(line: 1786, column: 21, scope: !3502)
!3504 = !DILocation(line: 1786, column: 17, scope: !2840)
!3505 = !DILocation(line: 1787, column: 24, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3502, file: !898, line: 1786, column: 31)
!3507 = !DILocation(line: 1787, column: 27, scope: !3506)
!3508 = !DILocation(line: 1787, column: 17, scope: !3506)
!3509 = !DILocation(line: 1788, column: 21, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3506, file: !898, line: 1788, column: 21)
!3511 = !DILocation(line: 1788, column: 24, scope: !3510)
!3512 = !DILocation(line: 1788, column: 31, scope: !3510)
!3513 = !DILocation(line: 1788, column: 47, scope: !3510)
!3514 = !DILocation(line: 1788, column: 21, scope: !3506)
!3515 = !DILocation(line: 1789, column: 21, scope: !3510)
!3516 = !DILocation(line: 1790, column: 13, scope: !3506)
!3517 = !DILocation(line: 1791, column: 13, scope: !2840)
!3518 = !DILocation(line: 1793, column: 5, scope: !2841)
!3519 = !DILocation(line: 1795, column: 5, scope: !2829)
!3520 = !DILocation(line: 1796, column: 1, scope: !2829)
!3521 = distinct !DISubprogram(name: "ff_dca_seek_bits", scope: !2858, file: !2858, line: 89, type: !3522, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!1027, !2296, !1027}
!3524 = !DILocalVariable(name: "s", arg: 1, scope: !3521, file: !2858, line: 89, type: !2296)
!3525 = !DILocation(line: 89, column: 51, scope: !3521)
!3526 = !DILocalVariable(name: "p", arg: 2, scope: !3521, file: !2858, line: 89, type: !1027)
!3527 = !DILocation(line: 89, column: 58, scope: !3521)
!3528 = !DILocation(line: 91, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3521, file: !2858, line: 91, column: 9)
!3530 = !DILocation(line: 91, column: 28, scope: !3529)
!3531 = !DILocation(line: 91, column: 13, scope: !3529)
!3532 = !DILocation(line: 91, column: 11, scope: !3529)
!3533 = !DILocation(line: 91, column: 31, scope: !3529)
!3534 = !DILocation(line: 91, column: 34, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !3529, file: !2858, discriminator: 1)
!3536 = !DILocation(line: 91, column: 38, scope: !3535)
!3537 = !DILocation(line: 91, column: 41, scope: !3535)
!3538 = !DILocation(line: 91, column: 36, scope: !3535)
!3539 = !DILocation(line: 91, column: 9, scope: !3535)
!3540 = !DILocation(line: 92, column: 9, scope: !3529)
!3541 = !DILocation(line: 93, column: 20, scope: !3521)
!3542 = !DILocation(line: 93, column: 23, scope: !3521)
!3543 = !DILocation(line: 93, column: 42, scope: !3521)
!3544 = !DILocation(line: 93, column: 27, scope: !3521)
!3545 = !DILocation(line: 93, column: 25, scope: !3521)
!3546 = !DILocation(line: 93, column: 5, scope: !3547)
!3547 = !DILexicalBlockFile(scope: !3521, file: !2858, discriminator: 1)
!3548 = !DILocation(line: 94, column: 5, scope: !3521)
!3549 = !DILocation(line: 95, column: 1, scope: !3521)
!3550 = distinct !DISubprogram(name: "ff_dca_core_parse_exss", scope: !898, file: !898, line: 1831, type: !3551, isLocal: false, isDefinition: true, scopeLine: 1832, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!1027, !1094, !1223, !3553}
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64, align: 64)
!3554 = !DILocalVariable(name: "s", arg: 1, scope: !3550, file: !898, line: 1831, type: !1094)
!3555 = !DILocation(line: 1831, column: 44, scope: !3550)
!3556 = !DILocalVariable(name: "data", arg: 2, scope: !3550, file: !898, line: 1831, type: !1223)
!3557 = !DILocation(line: 1831, column: 56, scope: !3550)
!3558 = !DILocalVariable(name: "asset", arg: 3, scope: !3550, file: !898, line: 1831, type: !3553)
!3559 = !DILocation(line: 1831, column: 76, scope: !3550)
!3560 = !DILocalVariable(name: "avctx", scope: !3550, file: !898, line: 1833, type: !1099)
!3561 = !DILocation(line: 1833, column: 21, scope: !3550)
!3562 = !DILocation(line: 1833, column: 29, scope: !3550)
!3563 = !DILocation(line: 1833, column: 32, scope: !3550)
!3564 = !DILocalVariable(name: "dca", scope: !3550, file: !898, line: 1834, type: !2856)
!3565 = !DILocation(line: 1834, column: 17, scope: !3550)
!3566 = !DILocation(line: 1834, column: 23, scope: !3550)
!3567 = !DILocation(line: 1834, column: 30, scope: !3550)
!3568 = !DILocalVariable(name: "exss_mask", scope: !3550, file: !898, line: 1835, type: !1027)
!3569 = !DILocation(line: 1835, column: 9, scope: !3550)
!3570 = !DILocation(line: 1835, column: 21, scope: !3550)
!3571 = !DILocation(line: 1835, column: 29, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3550, file: !898, discriminator: 1)
!3573 = !DILocation(line: 1835, column: 36, scope: !3572)
!3574 = !DILocation(line: 1835, column: 21, scope: !3572)
!3575 = !DILocation(line: 1835, column: 21, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3550, file: !898, discriminator: 2)
!3577 = !DILocation(line: 1835, column: 21, scope: !3578)
!3578 = !DILexicalBlockFile(scope: !3550, file: !898, discriminator: 3)
!3579 = !DILocation(line: 1835, column: 9, scope: !3578)
!3580 = !DILocalVariable(name: "ret", scope: !3550, file: !898, line: 1836, type: !1027)
!3581 = !DILocation(line: 1836, column: 9, scope: !3550)
!3582 = !DILocalVariable(name: "ext", scope: !3550, file: !898, line: 1836, type: !1027)
!3583 = !DILocation(line: 1836, column: 18, scope: !3550)
!3584 = !DILocation(line: 1839, column: 10, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3550, file: !898, line: 1839, column: 9)
!3586 = !DILocation(line: 1839, column: 15, scope: !3585)
!3587 = !DILocation(line: 1839, column: 9, scope: !3550)
!3588 = !DILocation(line: 1840, column: 13, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !898, line: 1840, column: 13)
!3590 = distinct !DILexicalBlock(scope: !3585, file: !898, line: 1839, column: 39)
!3591 = !DILocation(line: 1840, column: 23, scope: !3589)
!3592 = !DILocation(line: 1840, column: 13, scope: !3590)
!3593 = !DILocation(line: 1841, column: 40, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !898, line: 1841, column: 17)
!3595 = distinct !DILexicalBlock(scope: !3589, file: !898, line: 1840, column: 40)
!3596 = !DILocation(line: 1841, column: 43, scope: !3594)
!3597 = !DILocation(line: 1841, column: 47, scope: !3594)
!3598 = !DILocation(line: 1841, column: 54, scope: !3594)
!3599 = !DILocation(line: 1841, column: 61, scope: !3594)
!3600 = !DILocation(line: 1841, column: 52, scope: !3594)
!3601 = !DILocation(line: 1841, column: 74, scope: !3594)
!3602 = !DILocation(line: 1841, column: 81, scope: !3594)
!3603 = !DILocation(line: 1841, column: 24, scope: !3594)
!3604 = !DILocation(line: 1841, column: 22, scope: !3594)
!3605 = !DILocation(line: 1841, column: 93, scope: !3594)
!3606 = !DILocation(line: 1841, column: 17, scope: !3595)
!3607 = !DILocation(line: 1842, column: 24, scope: !3594)
!3608 = !DILocation(line: 1842, column: 17, scope: !3594)
!3609 = !DILocation(line: 1843, column: 36, scope: !3595)
!3610 = !DILocation(line: 1843, column: 19, scope: !3595)
!3611 = !DILocation(line: 1843, column: 17, scope: !3595)
!3612 = !DILocation(line: 1844, column: 17, scope: !3595)
!3613 = !DILocation(line: 1845, column: 9, scope: !3595)
!3614 = !DILocation(line: 1845, column: 20, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3616, file: !898, discriminator: 1)
!3616 = distinct !DILexicalBlock(scope: !3589, file: !898, line: 1845, column: 20)
!3617 = !DILocation(line: 1845, column: 23, scope: !3615)
!3618 = !DILocation(line: 1846, column: 13, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !898, line: 1845, column: 33)
!3620 = !DILocation(line: 1846, column: 16, scope: !3619)
!3621 = !DILocation(line: 1846, column: 21, scope: !3619)
!3622 = !DILocation(line: 1846, column: 24, scope: !3619)
!3623 = !DILocation(line: 1847, column: 29, scope: !3619)
!3624 = !DILocation(line: 1847, column: 32, scope: !3619)
!3625 = !DILocation(line: 1847, column: 36, scope: !3619)
!3626 = !DILocation(line: 1847, column: 39, scope: !3619)
!3627 = !DILocation(line: 1847, column: 13, scope: !3619)
!3628 = !DILocation(line: 1848, column: 36, scope: !3619)
!3629 = !DILocation(line: 1848, column: 19, scope: !3619)
!3630 = !DILocation(line: 1848, column: 17, scope: !3619)
!3631 = !DILocation(line: 1849, column: 17, scope: !3619)
!3632 = !DILocation(line: 1850, column: 9, scope: !3619)
!3633 = !DILocation(line: 1850, column: 20, scope: !3634)
!3634 = !DILexicalBlockFile(scope: !3635, file: !898, discriminator: 1)
!3635 = distinct !DILexicalBlock(scope: !3616, file: !898, line: 1850, column: 20)
!3636 = !DILocation(line: 1850, column: 23, scope: !3634)
!3637 = !DILocation(line: 1851, column: 13, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3635, file: !898, line: 1850, column: 32)
!3639 = !DILocation(line: 1851, column: 16, scope: !3638)
!3640 = !DILocation(line: 1851, column: 21, scope: !3638)
!3641 = !DILocation(line: 1851, column: 24, scope: !3638)
!3642 = !DILocation(line: 1852, column: 29, scope: !3638)
!3643 = !DILocation(line: 1852, column: 32, scope: !3638)
!3644 = !DILocation(line: 1852, column: 36, scope: !3638)
!3645 = !DILocation(line: 1852, column: 39, scope: !3638)
!3646 = !DILocation(line: 1852, column: 13, scope: !3638)
!3647 = !DILocation(line: 1853, column: 35, scope: !3638)
!3648 = !DILocation(line: 1853, column: 19, scope: !3638)
!3649 = !DILocation(line: 1853, column: 17, scope: !3638)
!3650 = !DILocation(line: 1854, column: 17, scope: !3638)
!3651 = !DILocation(line: 1855, column: 9, scope: !3638)
!3652 = !DILocation(line: 1858, column: 13, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3590, file: !898, line: 1858, column: 13)
!3654 = !DILocation(line: 1858, column: 17, scope: !3653)
!3655 = !DILocation(line: 1858, column: 13, scope: !3590)
!3656 = !DILocation(line: 1859, column: 17, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !898, line: 1859, column: 17)
!3658 = distinct !DILexicalBlock(scope: !3653, file: !898, line: 1858, column: 22)
!3659 = !DILocation(line: 1859, column: 24, scope: !3657)
!3660 = !DILocation(line: 1859, column: 40, scope: !3657)
!3661 = !DILocation(line: 1859, column: 17, scope: !3658)
!3662 = !DILocation(line: 1860, column: 24, scope: !3657)
!3663 = !DILocation(line: 1860, column: 17, scope: !3657)
!3664 = !DILocation(line: 1861, column: 44, scope: !3658)
!3665 = !DILocation(line: 1861, column: 47, scope: !3658)
!3666 = !DILocation(line: 1861, column: 28, scope: !3658)
!3667 = !DILocation(line: 1861, column: 13, scope: !3658)
!3668 = !DILocation(line: 1861, column: 16, scope: !3658)
!3669 = !DILocation(line: 1861, column: 26, scope: !3658)
!3670 = !DILocation(line: 1862, column: 45, scope: !3658)
!3671 = !DILocation(line: 1862, column: 48, scope: !3658)
!3672 = !DILocation(line: 1862, column: 26, scope: !3658)
!3673 = !DILocation(line: 1862, column: 13, scope: !3658)
!3674 = !DILocation(line: 1862, column: 16, scope: !3658)
!3675 = !DILocation(line: 1862, column: 24, scope: !3658)
!3676 = !DILocation(line: 1863, column: 17, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3658, file: !898, line: 1863, column: 17)
!3678 = !DILocation(line: 1863, column: 20, scope: !3677)
!3679 = !DILocation(line: 1863, column: 17, scope: !3658)
!3680 = !DILocation(line: 1864, column: 17, scope: !3677)
!3681 = !DILocation(line: 1864, column: 20, scope: !3677)
!3682 = !DILocation(line: 1864, column: 28, scope: !3677)
!3683 = !DILocation(line: 1865, column: 9, scope: !3658)
!3684 = !DILocation(line: 1866, column: 34, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3653, file: !898, line: 1865, column: 16)
!3686 = !DILocation(line: 1866, column: 13, scope: !3685)
!3687 = !DILocation(line: 1866, column: 16, scope: !3685)
!3688 = !DILocation(line: 1866, column: 31, scope: !3685)
!3689 = !DILocation(line: 1868, column: 5, scope: !3590)
!3690 = !DILocation(line: 1871, column: 9, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3550, file: !898, line: 1871, column: 9)
!3692 = !DILocation(line: 1871, column: 19, scope: !3691)
!3693 = !DILocation(line: 1871, column: 9, scope: !3550)
!3694 = !DILocation(line: 1872, column: 36, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !898, line: 1872, column: 13)
!3696 = distinct !DILexicalBlock(scope: !3691, file: !898, line: 1871, column: 35)
!3697 = !DILocation(line: 1872, column: 39, scope: !3695)
!3698 = !DILocation(line: 1872, column: 43, scope: !3695)
!3699 = !DILocation(line: 1872, column: 50, scope: !3695)
!3700 = !DILocation(line: 1872, column: 57, scope: !3695)
!3701 = !DILocation(line: 1872, column: 48, scope: !3695)
!3702 = !DILocation(line: 1872, column: 69, scope: !3695)
!3703 = !DILocation(line: 1872, column: 76, scope: !3695)
!3704 = !DILocation(line: 1872, column: 20, scope: !3695)
!3705 = !DILocation(line: 1872, column: 18, scope: !3695)
!3706 = !DILocation(line: 1872, column: 87, scope: !3695)
!3707 = !DILocation(line: 1872, column: 13, scope: !3696)
!3708 = !DILocation(line: 1873, column: 20, scope: !3695)
!3709 = !DILocation(line: 1873, column: 13, scope: !3695)
!3710 = !DILocation(line: 1874, column: 36, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3696, file: !898, line: 1874, column: 13)
!3712 = !DILocation(line: 1874, column: 20, scope: !3711)
!3713 = !DILocation(line: 1874, column: 18, scope: !3711)
!3714 = !DILocation(line: 1874, column: 40, scope: !3711)
!3715 = !DILocation(line: 1874, column: 13, scope: !3696)
!3716 = !DILocation(line: 1875, column: 17, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !898, line: 1875, column: 17)
!3718 = distinct !DILexicalBlock(scope: !3711, file: !898, line: 1874, column: 45)
!3719 = !DILocation(line: 1875, column: 24, scope: !3717)
!3720 = !DILocation(line: 1875, column: 40, scope: !3717)
!3721 = !DILocation(line: 1875, column: 17, scope: !3718)
!3722 = !DILocation(line: 1876, column: 24, scope: !3717)
!3723 = !DILocation(line: 1876, column: 17, scope: !3717)
!3724 = !DILocation(line: 1877, column: 9, scope: !3718)
!3725 = !DILocation(line: 1878, column: 13, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3711, file: !898, line: 1877, column: 16)
!3727 = !DILocation(line: 1878, column: 16, scope: !3726)
!3728 = !DILocation(line: 1878, column: 31, scope: !3726)
!3729 = !DILocation(line: 1880, column: 5, scope: !3696)
!3730 = !DILocation(line: 1883, column: 11, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3550, file: !898, line: 1883, column: 9)
!3732 = !DILocation(line: 1883, column: 16, scope: !3731)
!3733 = !DILocation(line: 1883, column: 23, scope: !3731)
!3734 = !DILocation(line: 1883, column: 9, scope: !3550)
!3735 = !DILocation(line: 1884, column: 13, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !898, line: 1884, column: 13)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !898, line: 1883, column: 32)
!3738 = !DILocation(line: 1884, column: 23, scope: !3736)
!3739 = !DILocation(line: 1884, column: 13, scope: !3737)
!3740 = !DILocation(line: 1885, column: 40, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !898, line: 1885, column: 17)
!3742 = distinct !DILexicalBlock(scope: !3736, file: !898, line: 1884, column: 39)
!3743 = !DILocation(line: 1885, column: 43, scope: !3741)
!3744 = !DILocation(line: 1885, column: 47, scope: !3741)
!3745 = !DILocation(line: 1885, column: 54, scope: !3741)
!3746 = !DILocation(line: 1885, column: 61, scope: !3741)
!3747 = !DILocation(line: 1885, column: 52, scope: !3741)
!3748 = !DILocation(line: 1885, column: 73, scope: !3741)
!3749 = !DILocation(line: 1885, column: 80, scope: !3741)
!3750 = !DILocation(line: 1885, column: 24, scope: !3741)
!3751 = !DILocation(line: 1885, column: 22, scope: !3741)
!3752 = !DILocation(line: 1885, column: 91, scope: !3741)
!3753 = !DILocation(line: 1885, column: 17, scope: !3742)
!3754 = !DILocation(line: 1886, column: 24, scope: !3741)
!3755 = !DILocation(line: 1886, column: 17, scope: !3741)
!3756 = !DILocation(line: 1887, column: 45, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3742, file: !898, line: 1887, column: 17)
!3758 = !DILocation(line: 1887, column: 24, scope: !3757)
!3759 = !DILocation(line: 1887, column: 22, scope: !3757)
!3760 = !DILocation(line: 1887, column: 49, scope: !3757)
!3761 = !DILocation(line: 1887, column: 17, scope: !3742)
!3762 = !DILocation(line: 1888, column: 21, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !898, line: 1888, column: 21)
!3764 = distinct !DILexicalBlock(scope: !3757, file: !898, line: 1887, column: 54)
!3765 = !DILocation(line: 1888, column: 25, scope: !3763)
!3766 = !DILocation(line: 1888, column: 30, scope: !3763)
!3767 = !DILocation(line: 1888, column: 34, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3763, file: !898, discriminator: 1)
!3769 = !DILocation(line: 1888, column: 41, scope: !3768)
!3770 = !DILocation(line: 1888, column: 57, scope: !3768)
!3771 = !DILocation(line: 1888, column: 21, scope: !3768)
!3772 = !DILocation(line: 1889, column: 28, scope: !3763)
!3773 = !DILocation(line: 1889, column: 21, scope: !3763)
!3774 = !DILocation(line: 1890, column: 13, scope: !3764)
!3775 = !DILocation(line: 1891, column: 17, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3757, file: !898, line: 1890, column: 20)
!3777 = !DILocation(line: 1891, column: 20, scope: !3776)
!3778 = !DILocation(line: 1891, column: 35, scope: !3776)
!3779 = !DILocation(line: 1893, column: 9, scope: !3742)
!3780 = !DILocation(line: 1893, column: 20, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3782, file: !898, discriminator: 1)
!3782 = distinct !DILexicalBlock(scope: !3736, file: !898, line: 1893, column: 20)
!3783 = !DILocation(line: 1893, column: 23, scope: !3781)
!3784 = !DILocation(line: 1894, column: 13, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !898, line: 1893, column: 32)
!3786 = !DILocation(line: 1894, column: 16, scope: !3785)
!3787 = !DILocation(line: 1894, column: 21, scope: !3785)
!3788 = !DILocation(line: 1894, column: 24, scope: !3785)
!3789 = !DILocation(line: 1895, column: 29, scope: !3785)
!3790 = !DILocation(line: 1895, column: 32, scope: !3785)
!3791 = !DILocation(line: 1895, column: 36, scope: !3785)
!3792 = !DILocation(line: 1895, column: 39, scope: !3785)
!3793 = !DILocation(line: 1895, column: 13, scope: !3785)
!3794 = !DILocation(line: 1896, column: 40, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3785, file: !898, line: 1896, column: 17)
!3796 = !DILocation(line: 1896, column: 24, scope: !3795)
!3797 = !DILocation(line: 1896, column: 22, scope: !3795)
!3798 = !DILocation(line: 1896, column: 44, scope: !3795)
!3799 = !DILocation(line: 1896, column: 17, scope: !3785)
!3800 = !DILocation(line: 1897, column: 21, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !898, line: 1897, column: 21)
!3802 = distinct !DILexicalBlock(scope: !3795, file: !898, line: 1896, column: 49)
!3803 = !DILocation(line: 1897, column: 25, scope: !3801)
!3804 = !DILocation(line: 1897, column: 30, scope: !3801)
!3805 = !DILocation(line: 1897, column: 34, scope: !3806)
!3806 = !DILexicalBlockFile(scope: !3801, file: !898, discriminator: 1)
!3807 = !DILocation(line: 1897, column: 41, scope: !3806)
!3808 = !DILocation(line: 1897, column: 57, scope: !3806)
!3809 = !DILocation(line: 1897, column: 21, scope: !3806)
!3810 = !DILocation(line: 1898, column: 28, scope: !3801)
!3811 = !DILocation(line: 1898, column: 21, scope: !3801)
!3812 = !DILocation(line: 1899, column: 13, scope: !3802)
!3813 = !DILocation(line: 1900, column: 17, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3795, file: !898, line: 1899, column: 20)
!3815 = !DILocation(line: 1900, column: 20, scope: !3814)
!3816 = !DILocation(line: 1900, column: 35, scope: !3814)
!3817 = !DILocation(line: 1902, column: 9, scope: !3785)
!3818 = !DILocation(line: 1903, column: 5, scope: !3737)
!3819 = !DILocation(line: 1905, column: 5, scope: !3550)
!3820 = !DILocation(line: 1906, column: 1, scope: !3550)
!3821 = distinct !DISubprogram(name: "parse_xxch_frame", scope: !898, file: !898, line: 858, type: !2320, isLocal: true, isDefinition: true, scopeLine: 859, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!3822 = !DILocalVariable(name: "s", arg: 1, scope: !3821, file: !898, line: 858, type: !1094)
!3823 = !DILocation(line: 858, column: 45, scope: !3821)
!3824 = !DILocalVariable(name: "xxch_nchsets", scope: !3821, file: !898, line: 860, type: !1027)
!3825 = !DILocation(line: 860, column: 9, scope: !3821)
!3826 = !DILocalVariable(name: "xxch_frame_size", scope: !3821, file: !898, line: 860, type: !1027)
!3827 = !DILocation(line: 860, column: 23, scope: !3821)
!3828 = !DILocalVariable(name: "ret", scope: !3821, file: !898, line: 861, type: !1027)
!3829 = !DILocation(line: 861, column: 9, scope: !3821)
!3830 = !DILocalVariable(name: "mask", scope: !3821, file: !898, line: 861, type: !1027)
!3831 = !DILocation(line: 861, column: 14, scope: !3821)
!3832 = !DILocalVariable(name: "header_size", scope: !3821, file: !898, line: 861, type: !1027)
!3833 = !DILocation(line: 861, column: 20, scope: !3821)
!3834 = !DILocalVariable(name: "header_pos", scope: !3821, file: !898, line: 861, type: !1027)
!3835 = !DILocation(line: 861, column: 33, scope: !3821)
!3836 = !DILocation(line: 861, column: 62, scope: !3821)
!3837 = !DILocation(line: 861, column: 65, scope: !3821)
!3838 = !DILocation(line: 861, column: 46, scope: !3821)
!3839 = !DILocation(line: 864, column: 24, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 864, column: 9)
!3841 = !DILocation(line: 864, column: 27, scope: !3840)
!3842 = !DILocation(line: 864, column: 9, scope: !3840)
!3843 = !DILocation(line: 864, column: 35, scope: !3840)
!3844 = !DILocation(line: 864, column: 9, scope: !3821)
!3845 = !DILocation(line: 865, column: 16, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3840, file: !898, line: 864, column: 51)
!3847 = !DILocation(line: 865, column: 19, scope: !3846)
!3848 = !DILocation(line: 865, column: 9, scope: !3846)
!3849 = !DILocation(line: 866, column: 9, scope: !3846)
!3850 = !DILocation(line: 870, column: 29, scope: !3821)
!3851 = !DILocation(line: 870, column: 32, scope: !3821)
!3852 = !DILocation(line: 870, column: 19, scope: !3821)
!3853 = !DILocation(line: 870, column: 39, scope: !3821)
!3854 = !DILocation(line: 870, column: 17, scope: !3821)
!3855 = !DILocation(line: 873, column: 26, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 873, column: 9)
!3857 = !DILocation(line: 873, column: 29, scope: !3856)
!3858 = !DILocation(line: 873, column: 37, scope: !3856)
!3859 = !DILocation(line: 873, column: 40, scope: !3856)
!3860 = !DILocation(line: 873, column: 44, scope: !3856)
!3861 = !DILocation(line: 873, column: 55, scope: !3856)
!3862 = !DILocation(line: 873, column: 61, scope: !3856)
!3863 = !DILocation(line: 873, column: 74, scope: !3856)
!3864 = !DILocation(line: 873, column: 86, scope: !3856)
!3865 = !DILocation(line: 873, column: 72, scope: !3856)
!3866 = !DILocation(line: 873, column: 9, scope: !3856)
!3867 = !DILocation(line: 873, column: 9, scope: !3821)
!3868 = !DILocation(line: 874, column: 16, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3856, file: !898, line: 873, column: 92)
!3870 = !DILocation(line: 874, column: 19, scope: !3869)
!3871 = !DILocation(line: 874, column: 9, scope: !3869)
!3872 = !DILocation(line: 875, column: 9, scope: !3869)
!3873 = !DILocation(line: 879, column: 38, scope: !3821)
!3874 = !DILocation(line: 879, column: 41, scope: !3821)
!3875 = !DILocation(line: 879, column: 27, scope: !3821)
!3876 = !DILocation(line: 879, column: 5, scope: !3821)
!3877 = !DILocation(line: 879, column: 8, scope: !3821)
!3878 = !DILocation(line: 879, column: 25, scope: !3821)
!3879 = !DILocation(line: 882, column: 36, scope: !3821)
!3880 = !DILocation(line: 882, column: 39, scope: !3821)
!3881 = !DILocation(line: 882, column: 26, scope: !3821)
!3882 = !DILocation(line: 882, column: 46, scope: !3821)
!3883 = !DILocation(line: 882, column: 5, scope: !3821)
!3884 = !DILocation(line: 882, column: 8, scope: !3821)
!3885 = !DILocation(line: 882, column: 24, scope: !3821)
!3886 = !DILocation(line: 883, column: 9, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 883, column: 9)
!3888 = !DILocation(line: 883, column: 12, scope: !3887)
!3889 = !DILocation(line: 883, column: 28, scope: !3887)
!3890 = !DILocation(line: 883, column: 9, scope: !3821)
!3891 = !DILocation(line: 884, column: 16, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3887, file: !898, line: 883, column: 47)
!3893 = !DILocation(line: 884, column: 19, scope: !3892)
!3894 = !DILocation(line: 884, column: 85, scope: !3892)
!3895 = !DILocation(line: 884, column: 88, scope: !3892)
!3896 = !DILocation(line: 884, column: 9, scope: !3892)
!3897 = !DILocation(line: 885, column: 9, scope: !3892)
!3898 = !DILocation(line: 889, column: 30, scope: !3821)
!3899 = !DILocation(line: 889, column: 33, scope: !3821)
!3900 = !DILocation(line: 889, column: 20, scope: !3821)
!3901 = !DILocation(line: 889, column: 40, scope: !3821)
!3902 = !DILocation(line: 889, column: 18, scope: !3821)
!3903 = !DILocation(line: 890, column: 9, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 890, column: 9)
!3905 = !DILocation(line: 890, column: 22, scope: !3904)
!3906 = !DILocation(line: 890, column: 9, scope: !3821)
!3907 = !DILocation(line: 891, column: 31, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !898, line: 890, column: 27)
!3909 = !DILocation(line: 891, column: 34, scope: !3908)
!3910 = !DILocation(line: 891, column: 65, scope: !3908)
!3911 = !DILocation(line: 891, column: 9, scope: !3908)
!3912 = !DILocation(line: 892, column: 9, scope: !3908)
!3913 = !DILocation(line: 896, column: 33, scope: !3821)
!3914 = !DILocation(line: 896, column: 36, scope: !3821)
!3915 = !DILocation(line: 896, column: 23, scope: !3821)
!3916 = !DILocation(line: 896, column: 44, scope: !3821)
!3917 = !DILocation(line: 896, column: 21, scope: !3821)
!3918 = !DILocation(line: 899, column: 40, scope: !3821)
!3919 = !DILocation(line: 899, column: 43, scope: !3821)
!3920 = !DILocation(line: 899, column: 47, scope: !3821)
!3921 = !DILocation(line: 899, column: 50, scope: !3821)
!3922 = !DILocation(line: 899, column: 25, scope: !3821)
!3923 = !DILocation(line: 899, column: 5, scope: !3821)
!3924 = !DILocation(line: 899, column: 8, scope: !3821)
!3925 = !DILocation(line: 899, column: 23, scope: !3821)
!3926 = !DILocation(line: 902, column: 12, scope: !3821)
!3927 = !DILocation(line: 902, column: 15, scope: !3821)
!3928 = !DILocation(line: 902, column: 10, scope: !3821)
!3929 = !DILocation(line: 904, column: 10, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 904, column: 9)
!3931 = !DILocation(line: 904, column: 15, scope: !3930)
!3932 = !DILocation(line: 904, column: 38, scope: !3930)
!3933 = !DILocation(line: 904, column: 42, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3930, file: !898, discriminator: 1)
!3935 = !DILocation(line: 904, column: 45, scope: !3934)
!3936 = !DILocation(line: 904, column: 60, scope: !3934)
!3937 = !DILocation(line: 904, column: 9, scope: !3934)
!3938 = !DILocation(line: 905, column: 17, scope: !3930)
!3939 = !DILocation(line: 905, column: 22, scope: !3930)
!3940 = !DILocation(line: 905, column: 46, scope: !3930)
!3941 = !DILocation(line: 905, column: 14, scope: !3930)
!3942 = !DILocation(line: 905, column: 9, scope: !3930)
!3943 = !DILocation(line: 907, column: 10, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 907, column: 9)
!3945 = !DILocation(line: 907, column: 15, scope: !3944)
!3946 = !DILocation(line: 907, column: 38, scope: !3944)
!3947 = !DILocation(line: 907, column: 42, scope: !3948)
!3948 = !DILexicalBlockFile(scope: !3944, file: !898, discriminator: 1)
!3949 = !DILocation(line: 907, column: 45, scope: !3948)
!3950 = !DILocation(line: 907, column: 60, scope: !3948)
!3951 = !DILocation(line: 907, column: 9, scope: !3948)
!3952 = !DILocation(line: 908, column: 17, scope: !3944)
!3953 = !DILocation(line: 908, column: 22, scope: !3944)
!3954 = !DILocation(line: 908, column: 46, scope: !3944)
!3955 = !DILocation(line: 908, column: 14, scope: !3944)
!3956 = !DILocation(line: 908, column: 9, scope: !3944)
!3957 = !DILocation(line: 910, column: 9, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 910, column: 9)
!3959 = !DILocation(line: 910, column: 17, scope: !3958)
!3960 = !DILocation(line: 910, column: 20, scope: !3958)
!3961 = !DILocation(line: 910, column: 14, scope: !3958)
!3962 = !DILocation(line: 910, column: 9, scope: !3821)
!3963 = !DILocation(line: 911, column: 16, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3958, file: !898, line: 910, column: 36)
!3965 = !DILocation(line: 911, column: 19, scope: !3964)
!3966 = !DILocation(line: 911, column: 99, scope: !3964)
!3967 = !DILocation(line: 911, column: 102, scope: !3964)
!3968 = !DILocation(line: 911, column: 118, scope: !3964)
!3969 = !DILocation(line: 911, column: 9, scope: !3964)
!3970 = !DILocation(line: 912, column: 9, scope: !3964)
!3971 = !DILocation(line: 918, column: 27, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 918, column: 9)
!3973 = !DILocation(line: 918, column: 30, scope: !3972)
!3974 = !DILocation(line: 918, column: 34, scope: !3972)
!3975 = !DILocation(line: 918, column: 47, scope: !3972)
!3976 = !DILocation(line: 918, column: 59, scope: !3972)
!3977 = !DILocation(line: 918, column: 45, scope: !3972)
!3978 = !DILocation(line: 918, column: 9, scope: !3972)
!3979 = !DILocation(line: 918, column: 9, scope: !3821)
!3980 = !DILocation(line: 919, column: 16, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3972, file: !898, line: 918, column: 65)
!3982 = !DILocation(line: 919, column: 19, scope: !3981)
!3983 = !DILocation(line: 919, column: 9, scope: !3981)
!3984 = !DILocation(line: 920, column: 9, scope: !3981)
!3985 = !DILocation(line: 924, column: 33, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 924, column: 9)
!3987 = !DILocation(line: 924, column: 49, scope: !3986)
!3988 = !DILocation(line: 924, column: 52, scope: !3986)
!3989 = !DILocation(line: 924, column: 16, scope: !3986)
!3990 = !DILocation(line: 924, column: 14, scope: !3986)
!3991 = !DILocation(line: 924, column: 64, scope: !3986)
!3992 = !DILocation(line: 924, column: 9, scope: !3821)
!3993 = !DILocation(line: 925, column: 16, scope: !3986)
!3994 = !DILocation(line: 925, column: 9, scope: !3986)
!3995 = !DILocation(line: 927, column: 27, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3821, file: !898, line: 927, column: 9)
!3997 = !DILocation(line: 927, column: 30, scope: !3996)
!3998 = !DILocation(line: 927, column: 34, scope: !3996)
!3999 = !DILocation(line: 927, column: 47, scope: !3996)
!4000 = !DILocation(line: 927, column: 59, scope: !3996)
!4001 = !DILocation(line: 927, column: 45, scope: !3996)
!4002 = !DILocation(line: 927, column: 65, scope: !3996)
!4003 = !DILocation(line: 927, column: 81, scope: !3996)
!4004 = !DILocation(line: 927, column: 63, scope: !3996)
!4005 = !DILocation(line: 927, column: 9, scope: !3996)
!4006 = !DILocation(line: 927, column: 9, scope: !3821)
!4007 = !DILocation(line: 928, column: 16, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3996, file: !898, line: 927, column: 87)
!4009 = !DILocation(line: 928, column: 19, scope: !4008)
!4010 = !DILocation(line: 928, column: 9, scope: !4008)
!4011 = !DILocation(line: 929, column: 9, scope: !4008)
!4012 = !DILocation(line: 932, column: 5, scope: !3821)
!4013 = !DILocation(line: 933, column: 1, scope: !3821)
!4014 = distinct !DISubprogram(name: "skip_bits_long", scope: !1818, file: !1818, line: 293, type: !4015, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{null, !2296, !1027}
!4017 = !DILocalVariable(name: "a", arg: 1, scope: !4018, file: !4019, line: 127, type: !1027)
!4018 = distinct !DISubprogram(name: "av_clip_c", scope: !4019, file: !4019, line: 127, type: !4020, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4019 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!1027, !1027, !1027, !1027}
!4022 = !DILocation(line: 127, column: 87, scope: !4018, inlinedAt: !4023)
!4023 = distinct !DILocation(line: 301, column: 17, scope: !4014)
!4024 = !DILocalVariable(name: "amin", arg: 2, scope: !4018, file: !4019, line: 127, type: !1027)
!4025 = !DILocation(line: 127, column: 94, scope: !4018, inlinedAt: !4023)
!4026 = !DILocalVariable(name: "amax", arg: 3, scope: !4018, file: !4019, line: 127, type: !1027)
!4027 = !DILocation(line: 127, column: 104, scope: !4018, inlinedAt: !4023)
!4028 = !DILocalVariable(name: "s", arg: 1, scope: !4014, file: !1818, line: 293, type: !2296)
!4029 = !DILocation(line: 293, column: 50, scope: !4014)
!4030 = !DILocalVariable(name: "n", arg: 2, scope: !4014, file: !1818, line: 293, type: !1027)
!4031 = !DILocation(line: 293, column: 57, scope: !4014)
!4032 = !DILocation(line: 301, column: 27, scope: !4014)
!4033 = !DILocation(line: 301, column: 31, scope: !4014)
!4034 = !DILocation(line: 301, column: 34, scope: !4014)
!4035 = !DILocation(line: 301, column: 30, scope: !4014)
!4036 = !DILocation(line: 301, column: 41, scope: !4014)
!4037 = !DILocation(line: 301, column: 44, scope: !4014)
!4038 = !DILocation(line: 301, column: 65, scope: !4014)
!4039 = !DILocation(line: 301, column: 68, scope: !4014)
!4040 = !DILocation(line: 301, column: 63, scope: !4014)
!4041 = !DILocation(line: 301, column: 17, scope: !4014)
!4042 = !DILocation(line: 132, column: 9, scope: !4043, inlinedAt: !4023)
!4043 = distinct !DILexicalBlock(scope: !4018, file: !4019, line: 132, column: 9)
!4044 = !DILocation(line: 132, column: 13, scope: !4043, inlinedAt: !4023)
!4045 = !DILocation(line: 132, column: 11, scope: !4043, inlinedAt: !4023)
!4046 = !DILocation(line: 132, column: 9, scope: !4018, inlinedAt: !4023)
!4047 = !DILocation(line: 132, column: 26, scope: !4048, inlinedAt: !4023)
!4048 = !DILexicalBlockFile(scope: !4043, file: !4019, discriminator: 1)
!4049 = !DILocation(line: 132, column: 19, scope: !4048, inlinedAt: !4023)
!4050 = !DILocation(line: 133, column: 14, scope: !4051, inlinedAt: !4023)
!4051 = distinct !DILexicalBlock(scope: !4043, file: !4019, line: 133, column: 14)
!4052 = !DILocation(line: 133, column: 18, scope: !4051, inlinedAt: !4023)
!4053 = !DILocation(line: 133, column: 16, scope: !4051, inlinedAt: !4023)
!4054 = !DILocation(line: 133, column: 14, scope: !4043, inlinedAt: !4023)
!4055 = !DILocation(line: 133, column: 31, scope: !4056, inlinedAt: !4023)
!4056 = !DILexicalBlockFile(scope: !4051, file: !4019, discriminator: 1)
!4057 = !DILocation(line: 133, column: 24, scope: !4056, inlinedAt: !4023)
!4058 = !DILocation(line: 134, column: 17, scope: !4051, inlinedAt: !4023)
!4059 = !DILocation(line: 134, column: 10, scope: !4051, inlinedAt: !4023)
!4060 = !DILocation(line: 135, column: 1, scope: !4018, inlinedAt: !4023)
!4061 = !DILocation(line: 301, column: 5, scope: !4014)
!4062 = !DILocation(line: 301, column: 8, scope: !4014)
!4063 = !DILocation(line: 301, column: 14, scope: !4014)
!4064 = !DILocation(line: 304, column: 1, scope: !4014)
!4065 = distinct !DISubprogram(name: "parse_xch_frame", scope: !898, file: !898, line: 837, type: !2320, isLocal: true, isDefinition: true, scopeLine: 838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4066 = !DILocalVariable(name: "s", arg: 1, scope: !4065, file: !898, line: 837, type: !1094)
!4067 = !DILocation(line: 837, column: 44, scope: !4065)
!4068 = !DILocalVariable(name: "ret", scope: !4065, file: !898, line: 839, type: !1027)
!4069 = !DILocation(line: 839, column: 9, scope: !4065)
!4070 = !DILocation(line: 841, column: 9, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4065, file: !898, line: 841, column: 9)
!4072 = !DILocation(line: 841, column: 12, scope: !4071)
!4073 = !DILocation(line: 841, column: 20, scope: !4071)
!4074 = !DILocation(line: 841, column: 9, scope: !4065)
!4075 = !DILocation(line: 842, column: 16, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4071, file: !898, line: 841, column: 43)
!4077 = !DILocation(line: 842, column: 19, scope: !4076)
!4078 = !DILocation(line: 842, column: 9, scope: !4076)
!4079 = !DILocation(line: 843, column: 9, scope: !4076)
!4080 = !DILocation(line: 846, column: 33, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4065, file: !898, line: 846, column: 9)
!4082 = !DILocation(line: 846, column: 48, scope: !4081)
!4083 = !DILocation(line: 846, column: 51, scope: !4081)
!4084 = !DILocation(line: 846, column: 16, scope: !4081)
!4085 = !DILocation(line: 846, column: 14, scope: !4081)
!4086 = !DILocation(line: 846, column: 63, scope: !4081)
!4087 = !DILocation(line: 846, column: 9, scope: !4065)
!4088 = !DILocation(line: 847, column: 16, scope: !4081)
!4089 = !DILocation(line: 847, column: 9, scope: !4081)
!4090 = !DILocation(line: 850, column: 27, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4065, file: !898, line: 850, column: 9)
!4092 = !DILocation(line: 850, column: 30, scope: !4091)
!4093 = !DILocation(line: 850, column: 34, scope: !4091)
!4094 = !DILocation(line: 850, column: 37, scope: !4091)
!4095 = !DILocation(line: 850, column: 48, scope: !4091)
!4096 = !DILocation(line: 850, column: 9, scope: !4091)
!4097 = !DILocation(line: 850, column: 9, scope: !4065)
!4098 = !DILocation(line: 851, column: 16, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4091, file: !898, line: 850, column: 54)
!4100 = !DILocation(line: 851, column: 19, scope: !4099)
!4101 = !DILocation(line: 851, column: 9, scope: !4099)
!4102 = !DILocation(line: 852, column: 9, scope: !4099)
!4103 = !DILocation(line: 855, column: 5, scope: !4065)
!4104 = !DILocation(line: 856, column: 1, scope: !4065)
!4105 = distinct !DISubprogram(name: "parse_xbr_frame", scope: !898, file: !898, line: 1070, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1071, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4106 = !DILocalVariable(name: "s", arg: 1, scope: !4105, file: !898, line: 1070, type: !1094)
!4107 = !DILocation(line: 1070, column: 44, scope: !4105)
!4108 = !DILocalVariable(name: "xbr_frame_size", scope: !4105, file: !898, line: 1072, type: !1260)
!4109 = !DILocation(line: 1072, column: 9, scope: !4105)
!4110 = !DILocalVariable(name: "xbr_nchannels", scope: !4105, file: !898, line: 1073, type: !1260)
!4111 = !DILocation(line: 1073, column: 9, scope: !4105)
!4112 = !DILocalVariable(name: "xbr_nsubbands", scope: !4105, file: !898, line: 1074, type: !2188)
!4113 = !DILocation(line: 1074, column: 9, scope: !4105)
!4114 = !DILocalVariable(name: "xbr_nchsets", scope: !4105, file: !898, line: 1075, type: !1027)
!4115 = !DILocation(line: 1075, column: 9, scope: !4105)
!4116 = !DILocalVariable(name: "xbr_transition_mode", scope: !4105, file: !898, line: 1075, type: !1027)
!4117 = !DILocation(line: 1075, column: 22, scope: !4105)
!4118 = !DILocalVariable(name: "xbr_band_nbits", scope: !4105, file: !898, line: 1075, type: !1027)
!4119 = !DILocation(line: 1075, column: 43, scope: !4105)
!4120 = !DILocalVariable(name: "xbr_base_ch", scope: !4105, file: !898, line: 1075, type: !1027)
!4121 = !DILocation(line: 1075, column: 59, scope: !4105)
!4122 = !DILocalVariable(name: "i", scope: !4105, file: !898, line: 1076, type: !1027)
!4123 = !DILocation(line: 1076, column: 9, scope: !4105)
!4124 = !DILocalVariable(name: "ch1", scope: !4105, file: !898, line: 1076, type: !1027)
!4125 = !DILocation(line: 1076, column: 12, scope: !4105)
!4126 = !DILocalVariable(name: "ch2", scope: !4105, file: !898, line: 1076, type: !1027)
!4127 = !DILocation(line: 1076, column: 17, scope: !4105)
!4128 = !DILocalVariable(name: "ret", scope: !4105, file: !898, line: 1076, type: !1027)
!4129 = !DILocation(line: 1076, column: 22, scope: !4105)
!4130 = !DILocalVariable(name: "header_size", scope: !4105, file: !898, line: 1076, type: !1027)
!4131 = !DILocation(line: 1076, column: 27, scope: !4105)
!4132 = !DILocalVariable(name: "header_pos", scope: !4105, file: !898, line: 1076, type: !1027)
!4133 = !DILocation(line: 1076, column: 40, scope: !4105)
!4134 = !DILocation(line: 1076, column: 69, scope: !4105)
!4135 = !DILocation(line: 1076, column: 72, scope: !4105)
!4136 = !DILocation(line: 1076, column: 53, scope: !4105)
!4137 = !DILocation(line: 1079, column: 24, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1079, column: 9)
!4139 = !DILocation(line: 1079, column: 27, scope: !4138)
!4140 = !DILocation(line: 1079, column: 9, scope: !4138)
!4141 = !DILocation(line: 1079, column: 35, scope: !4138)
!4142 = !DILocation(line: 1079, column: 9, scope: !4105)
!4143 = !DILocation(line: 1080, column: 16, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4138, file: !898, line: 1079, column: 51)
!4145 = !DILocation(line: 1080, column: 19, scope: !4144)
!4146 = !DILocation(line: 1080, column: 9, scope: !4144)
!4147 = !DILocation(line: 1081, column: 9, scope: !4144)
!4148 = !DILocation(line: 1085, column: 29, scope: !4105)
!4149 = !DILocation(line: 1085, column: 32, scope: !4105)
!4150 = !DILocation(line: 1085, column: 19, scope: !4105)
!4151 = !DILocation(line: 1085, column: 39, scope: !4105)
!4152 = !DILocation(line: 1085, column: 17, scope: !4105)
!4153 = !DILocation(line: 1088, column: 26, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1088, column: 9)
!4155 = !DILocation(line: 1088, column: 29, scope: !4154)
!4156 = !DILocation(line: 1088, column: 37, scope: !4154)
!4157 = !DILocation(line: 1088, column: 40, scope: !4154)
!4158 = !DILocation(line: 1088, column: 44, scope: !4154)
!4159 = !DILocation(line: 1088, column: 55, scope: !4154)
!4160 = !DILocation(line: 1088, column: 61, scope: !4154)
!4161 = !DILocation(line: 1088, column: 74, scope: !4154)
!4162 = !DILocation(line: 1088, column: 86, scope: !4154)
!4163 = !DILocation(line: 1088, column: 72, scope: !4154)
!4164 = !DILocation(line: 1088, column: 9, scope: !4154)
!4165 = !DILocation(line: 1088, column: 9, scope: !4105)
!4166 = !DILocation(line: 1089, column: 16, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4154, file: !898, line: 1088, column: 92)
!4168 = !DILocation(line: 1089, column: 19, scope: !4167)
!4169 = !DILocation(line: 1089, column: 9, scope: !4167)
!4170 = !DILocation(line: 1090, column: 9, scope: !4167)
!4171 = !DILocation(line: 1094, column: 29, scope: !4105)
!4172 = !DILocation(line: 1094, column: 32, scope: !4105)
!4173 = !DILocation(line: 1094, column: 19, scope: !4105)
!4174 = !DILocation(line: 1094, column: 39, scope: !4105)
!4175 = !DILocation(line: 1094, column: 17, scope: !4105)
!4176 = !DILocation(line: 1097, column: 12, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1097, column: 5)
!4178 = !DILocation(line: 1097, column: 10, scope: !4177)
!4179 = !DILocation(line: 1097, column: 17, scope: !4180)
!4180 = !DILexicalBlockFile(scope: !4181, file: !898, discriminator: 1)
!4181 = distinct !DILexicalBlock(scope: !4177, file: !898, line: 1097, column: 5)
!4182 = !DILocation(line: 1097, column: 21, scope: !4180)
!4183 = !DILocation(line: 1097, column: 19, scope: !4180)
!4184 = !DILocation(line: 1097, column: 5, scope: !4180)
!4185 = !DILocation(line: 1098, column: 39, scope: !4181)
!4186 = !DILocation(line: 1098, column: 42, scope: !4181)
!4187 = !DILocation(line: 1098, column: 29, scope: !4181)
!4188 = !DILocation(line: 1098, column: 50, scope: !4181)
!4189 = !DILocation(line: 1098, column: 24, scope: !4181)
!4190 = !DILocation(line: 1098, column: 9, scope: !4181)
!4191 = !DILocation(line: 1098, column: 27, scope: !4181)
!4192 = !DILocation(line: 1097, column: 35, scope: !4193)
!4193 = !DILexicalBlockFile(scope: !4181, file: !898, discriminator: 2)
!4194 = !DILocation(line: 1097, column: 5, scope: !4193)
!4195 = distinct !{!4195, !4196}
!4196 = !DILocation(line: 1097, column: 5, scope: !4105)
!4197 = !DILocation(line: 1101, column: 38, scope: !4105)
!4198 = !DILocation(line: 1101, column: 41, scope: !4105)
!4199 = !DILocation(line: 1101, column: 27, scope: !4105)
!4200 = !DILocation(line: 1101, column: 25, scope: !4105)
!4201 = !DILocation(line: 1104, column: 12, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1104, column: 5)
!4203 = !DILocation(line: 1104, column: 21, scope: !4202)
!4204 = !DILocation(line: 1104, column: 10, scope: !4202)
!4205 = !DILocation(line: 1104, column: 26, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4207, file: !898, discriminator: 1)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !898, line: 1104, column: 5)
!4208 = !DILocation(line: 1104, column: 30, scope: !4206)
!4209 = !DILocation(line: 1104, column: 28, scope: !4206)
!4210 = !DILocation(line: 1104, column: 5, scope: !4206)
!4211 = !DILocation(line: 1105, column: 38, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !898, line: 1104, column: 48)
!4213 = !DILocation(line: 1105, column: 41, scope: !4212)
!4214 = !DILocation(line: 1105, column: 28, scope: !4212)
!4215 = !DILocation(line: 1105, column: 48, scope: !4212)
!4216 = !DILocation(line: 1105, column: 23, scope: !4212)
!4217 = !DILocation(line: 1105, column: 9, scope: !4212)
!4218 = !DILocation(line: 1105, column: 26, scope: !4212)
!4219 = !DILocation(line: 1106, column: 36, scope: !4212)
!4220 = !DILocation(line: 1106, column: 39, scope: !4212)
!4221 = !DILocation(line: 1106, column: 26, scope: !4212)
!4222 = !DILocation(line: 1106, column: 46, scope: !4212)
!4223 = !DILocation(line: 1106, column: 24, scope: !4212)
!4224 = !DILocation(line: 1107, column: 18, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4212, file: !898, line: 1107, column: 9)
!4226 = !DILocation(line: 1107, column: 14, scope: !4225)
!4227 = !DILocation(line: 1107, column: 23, scope: !4228)
!4228 = !DILexicalBlockFile(scope: !4229, file: !898, discriminator: 1)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !898, line: 1107, column: 9)
!4230 = !DILocation(line: 1107, column: 43, scope: !4228)
!4231 = !DILocation(line: 1107, column: 29, scope: !4228)
!4232 = !DILocation(line: 1107, column: 27, scope: !4228)
!4233 = !DILocation(line: 1107, column: 9, scope: !4228)
!4234 = !DILocation(line: 1108, column: 44, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4229, file: !898, line: 1107, column: 61)
!4236 = !DILocation(line: 1108, column: 47, scope: !4235)
!4237 = !DILocation(line: 1108, column: 51, scope: !4235)
!4238 = !DILocation(line: 1108, column: 34, scope: !4235)
!4239 = !DILocation(line: 1108, column: 67, scope: !4235)
!4240 = !DILocation(line: 1108, column: 27, scope: !4235)
!4241 = !DILocation(line: 1108, column: 13, scope: !4235)
!4242 = !DILocation(line: 1108, column: 32, scope: !4235)
!4243 = !DILocation(line: 1109, column: 31, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4235, file: !898, line: 1109, column: 17)
!4245 = !DILocation(line: 1109, column: 17, scope: !4244)
!4246 = !DILocation(line: 1109, column: 36, scope: !4244)
!4247 = !DILocation(line: 1109, column: 17, scope: !4235)
!4248 = !DILocation(line: 1110, column: 24, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4244, file: !898, line: 1109, column: 42)
!4250 = !DILocation(line: 1110, column: 27, scope: !4249)
!4251 = !DILocation(line: 1110, column: 100, scope: !4249)
!4252 = !DILocation(line: 1110, column: 86, scope: !4249)
!4253 = !DILocation(line: 1110, column: 17, scope: !4249)
!4254 = !DILocation(line: 1111, column: 17, scope: !4249)
!4255 = !DILocation(line: 1113, column: 9, scope: !4235)
!4256 = !DILocation(line: 1107, column: 50, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !4229, file: !898, discriminator: 2)
!4258 = !DILocation(line: 1107, column: 57, scope: !4257)
!4259 = !DILocation(line: 1107, column: 9, scope: !4257)
!4260 = distinct !{!4260, !4261}
!4261 = !DILocation(line: 1107, column: 9, scope: !4212)
!4262 = !DILocation(line: 1114, column: 5, scope: !4212)
!4263 = !DILocation(line: 1104, column: 44, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4207, file: !898, discriminator: 2)
!4265 = !DILocation(line: 1104, column: 5, scope: !4264)
!4266 = distinct !{!4266, !4267}
!4267 = !DILocation(line: 1104, column: 5, scope: !4105)
!4268 = !DILocation(line: 1119, column: 27, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1119, column: 9)
!4270 = !DILocation(line: 1119, column: 30, scope: !4269)
!4271 = !DILocation(line: 1119, column: 34, scope: !4269)
!4272 = !DILocation(line: 1119, column: 47, scope: !4269)
!4273 = !DILocation(line: 1119, column: 59, scope: !4269)
!4274 = !DILocation(line: 1119, column: 45, scope: !4269)
!4275 = !DILocation(line: 1119, column: 9, scope: !4269)
!4276 = !DILocation(line: 1119, column: 9, scope: !4105)
!4277 = !DILocation(line: 1120, column: 16, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4269, file: !898, line: 1119, column: 65)
!4279 = !DILocation(line: 1120, column: 19, scope: !4278)
!4280 = !DILocation(line: 1120, column: 9, scope: !4278)
!4281 = !DILocation(line: 1121, column: 9, scope: !4278)
!4282 = !DILocation(line: 1125, column: 12, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4105, file: !898, line: 1125, column: 5)
!4284 = !DILocation(line: 1125, column: 29, scope: !4283)
!4285 = !DILocation(line: 1125, column: 10, scope: !4283)
!4286 = !DILocation(line: 1125, column: 34, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !4288, file: !898, discriminator: 1)
!4288 = distinct !DILexicalBlock(scope: !4283, file: !898, line: 1125, column: 5)
!4289 = !DILocation(line: 1125, column: 38, scope: !4287)
!4290 = !DILocation(line: 1125, column: 36, scope: !4287)
!4291 = !DILocation(line: 1125, column: 5, scope: !4287)
!4292 = !DILocation(line: 1126, column: 38, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4288, file: !898, line: 1125, column: 56)
!4294 = !DILocation(line: 1126, column: 41, scope: !4293)
!4295 = !DILocation(line: 1126, column: 22, scope: !4293)
!4296 = !DILocation(line: 1126, column: 20, scope: !4293)
!4297 = !DILocation(line: 1128, column: 13, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4293, file: !898, line: 1128, column: 13)
!4299 = !DILocation(line: 1128, column: 41, scope: !4298)
!4300 = !DILocation(line: 1128, column: 27, scope: !4298)
!4301 = !DILocation(line: 1128, column: 25, scope: !4298)
!4302 = !DILocation(line: 1128, column: 47, scope: !4298)
!4303 = !DILocation(line: 1128, column: 50, scope: !4298)
!4304 = !DILocation(line: 1128, column: 44, scope: !4298)
!4305 = !DILocation(line: 1128, column: 13, scope: !4293)
!4306 = !DILocalVariable(name: "sf", scope: !4307, file: !898, line: 1129, type: !1027)
!4307 = distinct !DILexicalBlock(scope: !4298, file: !898, line: 1128, column: 61)
!4308 = !DILocation(line: 1129, column: 17, scope: !4307)
!4309 = !DILocalVariable(name: "sub_pos", scope: !4307, file: !898, line: 1129, type: !1027)
!4310 = !DILocation(line: 1129, column: 21, scope: !4307)
!4311 = !DILocation(line: 1131, column: 21, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4307, file: !898, line: 1131, column: 13)
!4313 = !DILocation(line: 1131, column: 34, scope: !4312)
!4314 = !DILocation(line: 1131, column: 18, scope: !4312)
!4315 = !DILocation(line: 1131, column: 39, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !4317, file: !898, discriminator: 1)
!4317 = distinct !DILexicalBlock(scope: !4312, file: !898, line: 1131, column: 13)
!4318 = !DILocation(line: 1131, column: 44, scope: !4316)
!4319 = !DILocation(line: 1131, column: 47, scope: !4316)
!4320 = !DILocation(line: 1131, column: 42, scope: !4316)
!4321 = !DILocation(line: 1131, column: 13, scope: !4316)
!4322 = !DILocation(line: 1132, column: 47, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !898, line: 1132, column: 21)
!4324 = distinct !DILexicalBlock(scope: !4317, file: !898, line: 1131, column: 65)
!4325 = !DILocation(line: 1132, column: 50, scope: !4323)
!4326 = !DILocation(line: 1133, column: 47, scope: !4323)
!4327 = !DILocation(line: 1133, column: 75, scope: !4323)
!4328 = !DILocation(line: 1133, column: 61, scope: !4323)
!4329 = !DILocation(line: 1133, column: 59, scope: !4323)
!4330 = !DILocation(line: 1134, column: 47, scope: !4323)
!4331 = !DILocation(line: 1134, column: 62, scope: !4323)
!4332 = !DILocation(line: 1135, column: 47, scope: !4323)
!4333 = !DILocation(line: 1132, column: 28, scope: !4323)
!4334 = !DILocation(line: 1132, column: 26, scope: !4323)
!4335 = !DILocation(line: 1135, column: 62, scope: !4323)
!4336 = !DILocation(line: 1132, column: 21, scope: !4324)
!4337 = !DILocation(line: 1136, column: 28, scope: !4323)
!4338 = !DILocation(line: 1136, column: 21, scope: !4323)
!4339 = !DILocation(line: 1137, column: 13, scope: !4324)
!4340 = !DILocation(line: 1131, column: 61, scope: !4341)
!4341 = !DILexicalBlockFile(scope: !4317, file: !898, discriminator: 2)
!4342 = !DILocation(line: 1131, column: 13, scope: !4341)
!4343 = distinct !{!4343, !4344}
!4344 = !DILocation(line: 1131, column: 13, scope: !4307)
!4345 = !DILocation(line: 1138, column: 9, scope: !4307)
!4346 = !DILocation(line: 1140, column: 38, scope: !4293)
!4347 = !DILocation(line: 1140, column: 24, scope: !4293)
!4348 = !DILocation(line: 1140, column: 21, scope: !4293)
!4349 = !DILocation(line: 1142, column: 31, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4293, file: !898, line: 1142, column: 13)
!4351 = !DILocation(line: 1142, column: 34, scope: !4350)
!4352 = !DILocation(line: 1142, column: 38, scope: !4350)
!4353 = !DILocation(line: 1142, column: 66, scope: !4350)
!4354 = !DILocation(line: 1142, column: 51, scope: !4350)
!4355 = !DILocation(line: 1142, column: 69, scope: !4350)
!4356 = !DILocation(line: 1142, column: 49, scope: !4350)
!4357 = !DILocation(line: 1142, column: 13, scope: !4350)
!4358 = !DILocation(line: 1142, column: 13, scope: !4293)
!4359 = !DILocation(line: 1143, column: 20, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4350, file: !898, line: 1142, column: 75)
!4361 = !DILocation(line: 1143, column: 23, scope: !4360)
!4362 = !DILocation(line: 1143, column: 13, scope: !4360)
!4363 = !DILocation(line: 1144, column: 13, scope: !4360)
!4364 = !DILocation(line: 1146, column: 5, scope: !4293)
!4365 = !DILocation(line: 1125, column: 52, scope: !4366)
!4366 = !DILexicalBlockFile(scope: !4288, file: !898, discriminator: 2)
!4367 = !DILocation(line: 1125, column: 5, scope: !4366)
!4368 = distinct !{!4368, !4369}
!4369 = !DILocation(line: 1125, column: 5, scope: !4105)
!4370 = !DILocation(line: 1148, column: 5, scope: !4105)
!4371 = !DILocation(line: 1149, column: 1, scope: !4105)
!4372 = distinct !DISubprogram(name: "parse_x96_frame_exss", scope: !898, file: !898, line: 1541, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1542, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4373 = !DILocalVariable(name: "s", arg: 1, scope: !4372, file: !898, line: 1541, type: !1094)
!4374 = !DILocation(line: 1541, column: 49, scope: !4372)
!4375 = !DILocalVariable(name: "x96_frame_size", scope: !4372, file: !898, line: 1543, type: !1260)
!4376 = !DILocation(line: 1543, column: 9, scope: !4372)
!4377 = !DILocalVariable(name: "x96_nchannels", scope: !4372, file: !898, line: 1544, type: !1260)
!4378 = !DILocation(line: 1544, column: 9, scope: !4372)
!4379 = !DILocalVariable(name: "x96_nchsets", scope: !4372, file: !898, line: 1545, type: !1027)
!4380 = !DILocation(line: 1545, column: 9, scope: !4372)
!4381 = !DILocalVariable(name: "x96_base_ch", scope: !4372, file: !898, line: 1545, type: !1027)
!4382 = !DILocation(line: 1545, column: 22, scope: !4372)
!4383 = !DILocalVariable(name: "i", scope: !4372, file: !898, line: 1546, type: !1027)
!4384 = !DILocation(line: 1546, column: 9, scope: !4372)
!4385 = !DILocalVariable(name: "ret", scope: !4372, file: !898, line: 1546, type: !1027)
!4386 = !DILocation(line: 1546, column: 12, scope: !4372)
!4387 = !DILocalVariable(name: "header_size", scope: !4372, file: !898, line: 1546, type: !1027)
!4388 = !DILocation(line: 1546, column: 17, scope: !4372)
!4389 = !DILocalVariable(name: "header_pos", scope: !4372, file: !898, line: 1546, type: !1027)
!4390 = !DILocation(line: 1546, column: 30, scope: !4372)
!4391 = !DILocation(line: 1546, column: 59, scope: !4372)
!4392 = !DILocation(line: 1546, column: 62, scope: !4372)
!4393 = !DILocation(line: 1546, column: 43, scope: !4372)
!4394 = !DILocation(line: 1549, column: 24, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1549, column: 9)
!4396 = !DILocation(line: 1549, column: 27, scope: !4395)
!4397 = !DILocation(line: 1549, column: 9, scope: !4395)
!4398 = !DILocation(line: 1549, column: 35, scope: !4395)
!4399 = !DILocation(line: 1549, column: 9, scope: !4372)
!4400 = !DILocation(line: 1550, column: 16, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4395, file: !898, line: 1549, column: 51)
!4402 = !DILocation(line: 1550, column: 19, scope: !4401)
!4403 = !DILocation(line: 1550, column: 9, scope: !4401)
!4404 = !DILocation(line: 1551, column: 9, scope: !4401)
!4405 = !DILocation(line: 1555, column: 29, scope: !4372)
!4406 = !DILocation(line: 1555, column: 32, scope: !4372)
!4407 = !DILocation(line: 1555, column: 19, scope: !4372)
!4408 = !DILocation(line: 1555, column: 39, scope: !4372)
!4409 = !DILocation(line: 1555, column: 17, scope: !4372)
!4410 = !DILocation(line: 1558, column: 26, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1558, column: 9)
!4412 = !DILocation(line: 1558, column: 29, scope: !4411)
!4413 = !DILocation(line: 1558, column: 37, scope: !4411)
!4414 = !DILocation(line: 1558, column: 40, scope: !4411)
!4415 = !DILocation(line: 1558, column: 44, scope: !4411)
!4416 = !DILocation(line: 1558, column: 55, scope: !4411)
!4417 = !DILocation(line: 1558, column: 61, scope: !4411)
!4418 = !DILocation(line: 1558, column: 74, scope: !4411)
!4419 = !DILocation(line: 1558, column: 86, scope: !4411)
!4420 = !DILocation(line: 1558, column: 72, scope: !4411)
!4421 = !DILocation(line: 1558, column: 9, scope: !4411)
!4422 = !DILocation(line: 1558, column: 9, scope: !4372)
!4423 = !DILocation(line: 1559, column: 16, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4411, file: !898, line: 1558, column: 92)
!4425 = !DILocation(line: 1559, column: 19, scope: !4424)
!4426 = !DILocation(line: 1559, column: 9, scope: !4424)
!4427 = !DILocation(line: 1560, column: 9, scope: !4424)
!4428 = !DILocation(line: 1564, column: 31, scope: !4372)
!4429 = !DILocation(line: 1564, column: 34, scope: !4372)
!4430 = !DILocation(line: 1564, column: 21, scope: !4372)
!4431 = !DILocation(line: 1564, column: 5, scope: !4372)
!4432 = !DILocation(line: 1564, column: 8, scope: !4372)
!4433 = !DILocation(line: 1564, column: 19, scope: !4372)
!4434 = !DILocation(line: 1565, column: 9, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1565, column: 9)
!4436 = !DILocation(line: 1565, column: 12, scope: !4435)
!4437 = !DILocation(line: 1565, column: 23, scope: !4435)
!4438 = !DILocation(line: 1565, column: 27, scope: !4435)
!4439 = !DILocation(line: 1565, column: 30, scope: !4440)
!4440 = !DILexicalBlockFile(scope: !4435, file: !898, discriminator: 1)
!4441 = !DILocation(line: 1565, column: 33, scope: !4440)
!4442 = !DILocation(line: 1565, column: 44, scope: !4440)
!4443 = !DILocation(line: 1565, column: 9, scope: !4440)
!4444 = !DILocation(line: 1566, column: 16, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4435, file: !898, line: 1565, column: 49)
!4446 = !DILocation(line: 1566, column: 19, scope: !4445)
!4447 = !DILocation(line: 1566, column: 61, scope: !4445)
!4448 = !DILocation(line: 1566, column: 64, scope: !4445)
!4449 = !DILocation(line: 1566, column: 9, scope: !4445)
!4450 = !DILocation(line: 1567, column: 9, scope: !4445)
!4451 = !DILocation(line: 1571, column: 37, scope: !4372)
!4452 = !DILocation(line: 1571, column: 40, scope: !4372)
!4453 = !DILocation(line: 1571, column: 26, scope: !4372)
!4454 = !DILocation(line: 1571, column: 5, scope: !4372)
!4455 = !DILocation(line: 1571, column: 8, scope: !4372)
!4456 = !DILocation(line: 1571, column: 24, scope: !4372)
!4457 = !DILocation(line: 1574, column: 29, scope: !4372)
!4458 = !DILocation(line: 1574, column: 32, scope: !4372)
!4459 = !DILocation(line: 1574, column: 19, scope: !4372)
!4460 = !DILocation(line: 1574, column: 39, scope: !4372)
!4461 = !DILocation(line: 1574, column: 17, scope: !4372)
!4462 = !DILocation(line: 1577, column: 12, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1577, column: 5)
!4464 = !DILocation(line: 1577, column: 10, scope: !4463)
!4465 = !DILocation(line: 1577, column: 17, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !4467, file: !898, discriminator: 1)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !898, line: 1577, column: 5)
!4468 = !DILocation(line: 1577, column: 21, scope: !4466)
!4469 = !DILocation(line: 1577, column: 19, scope: !4466)
!4470 = !DILocation(line: 1577, column: 5, scope: !4466)
!4471 = !DILocation(line: 1578, column: 39, scope: !4467)
!4472 = !DILocation(line: 1578, column: 42, scope: !4467)
!4473 = !DILocation(line: 1578, column: 29, scope: !4467)
!4474 = !DILocation(line: 1578, column: 50, scope: !4467)
!4475 = !DILocation(line: 1578, column: 24, scope: !4467)
!4476 = !DILocation(line: 1578, column: 9, scope: !4467)
!4477 = !DILocation(line: 1578, column: 27, scope: !4467)
!4478 = !DILocation(line: 1577, column: 35, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !4467, file: !898, discriminator: 2)
!4480 = !DILocation(line: 1577, column: 5, scope: !4479)
!4481 = distinct !{!4481, !4482}
!4482 = !DILocation(line: 1577, column: 5, scope: !4372)
!4483 = !DILocation(line: 1581, column: 12, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1581, column: 5)
!4485 = !DILocation(line: 1581, column: 10, scope: !4484)
!4486 = !DILocation(line: 1581, column: 17, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4488, file: !898, discriminator: 1)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !898, line: 1581, column: 5)
!4489 = !DILocation(line: 1581, column: 21, scope: !4487)
!4490 = !DILocation(line: 1581, column: 19, scope: !4487)
!4491 = !DILocation(line: 1581, column: 5, scope: !4487)
!4492 = !DILocation(line: 1582, column: 38, scope: !4488)
!4493 = !DILocation(line: 1582, column: 41, scope: !4488)
!4494 = !DILocation(line: 1582, column: 28, scope: !4488)
!4495 = !DILocation(line: 1582, column: 48, scope: !4488)
!4496 = !DILocation(line: 1582, column: 23, scope: !4488)
!4497 = !DILocation(line: 1582, column: 9, scope: !4488)
!4498 = !DILocation(line: 1582, column: 26, scope: !4488)
!4499 = !DILocation(line: 1581, column: 35, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !4488, file: !898, discriminator: 2)
!4501 = !DILocation(line: 1581, column: 5, scope: !4500)
!4502 = distinct !{!4502, !4503}
!4503 = !DILocation(line: 1581, column: 5, scope: !4372)
!4504 = !DILocation(line: 1587, column: 27, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1587, column: 9)
!4506 = !DILocation(line: 1587, column: 30, scope: !4505)
!4507 = !DILocation(line: 1587, column: 34, scope: !4505)
!4508 = !DILocation(line: 1587, column: 47, scope: !4505)
!4509 = !DILocation(line: 1587, column: 59, scope: !4505)
!4510 = !DILocation(line: 1587, column: 45, scope: !4505)
!4511 = !DILocation(line: 1587, column: 9, scope: !4505)
!4512 = !DILocation(line: 1587, column: 9, scope: !4372)
!4513 = !DILocation(line: 1588, column: 16, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4505, file: !898, line: 1587, column: 65)
!4515 = !DILocation(line: 1588, column: 19, scope: !4514)
!4516 = !DILocation(line: 1588, column: 9, scope: !4514)
!4517 = !DILocation(line: 1589, column: 9, scope: !4514)
!4518 = !DILocation(line: 1592, column: 40, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1592, column: 9)
!4520 = !DILocation(line: 1592, column: 16, scope: !4519)
!4521 = !DILocation(line: 1592, column: 14, scope: !4519)
!4522 = !DILocation(line: 1592, column: 44, scope: !4519)
!4523 = !DILocation(line: 1592, column: 9, scope: !4372)
!4524 = !DILocation(line: 1593, column: 16, scope: !4519)
!4525 = !DILocation(line: 1593, column: 9, scope: !4519)
!4526 = !DILocation(line: 1596, column: 5, scope: !4372)
!4527 = !DILocation(line: 1596, column: 8, scope: !4372)
!4528 = !DILocation(line: 1596, column: 22, scope: !4372)
!4529 = !DILocation(line: 1597, column: 12, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4372, file: !898, line: 1597, column: 5)
!4531 = !DILocation(line: 1597, column: 29, scope: !4530)
!4532 = !DILocation(line: 1597, column: 10, scope: !4530)
!4533 = !DILocation(line: 1597, column: 34, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !4535, file: !898, discriminator: 1)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !898, line: 1597, column: 5)
!4536 = !DILocation(line: 1597, column: 38, scope: !4534)
!4537 = !DILocation(line: 1597, column: 36, scope: !4534)
!4538 = !DILocation(line: 1597, column: 5, scope: !4534)
!4539 = !DILocation(line: 1598, column: 38, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !898, line: 1597, column: 56)
!4541 = !DILocation(line: 1598, column: 41, scope: !4540)
!4542 = !DILocation(line: 1598, column: 22, scope: !4540)
!4543 = !DILocation(line: 1598, column: 20, scope: !4540)
!4544 = !DILocation(line: 1600, column: 13, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4540, file: !898, line: 1600, column: 13)
!4546 = !DILocation(line: 1600, column: 41, scope: !4545)
!4547 = !DILocation(line: 1600, column: 27, scope: !4545)
!4548 = !DILocation(line: 1600, column: 25, scope: !4545)
!4549 = !DILocation(line: 1600, column: 47, scope: !4545)
!4550 = !DILocation(line: 1600, column: 50, scope: !4545)
!4551 = !DILocation(line: 1600, column: 44, scope: !4545)
!4552 = !DILocation(line: 1600, column: 13, scope: !4540)
!4553 = !DILocation(line: 1601, column: 32, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4545, file: !898, line: 1600, column: 61)
!4555 = !DILocation(line: 1601, column: 60, scope: !4554)
!4556 = !DILocation(line: 1601, column: 46, scope: !4554)
!4557 = !DILocation(line: 1601, column: 44, scope: !4554)
!4558 = !DILocation(line: 1601, column: 13, scope: !4554)
!4559 = !DILocation(line: 1601, column: 16, scope: !4554)
!4560 = !DILocation(line: 1601, column: 30, scope: !4554)
!4561 = !DILocation(line: 1602, column: 45, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4554, file: !898, line: 1602, column: 17)
!4563 = !DILocation(line: 1602, column: 51, scope: !4562)
!4564 = !DILocation(line: 1602, column: 24, scope: !4562)
!4565 = !DILocation(line: 1602, column: 22, scope: !4562)
!4566 = !DILocation(line: 1602, column: 65, scope: !4562)
!4567 = !DILocation(line: 1602, column: 17, scope: !4554)
!4568 = !DILocation(line: 1603, column: 24, scope: !4562)
!4569 = !DILocation(line: 1603, column: 17, scope: !4562)
!4570 = !DILocation(line: 1604, column: 9, scope: !4554)
!4571 = !DILocation(line: 1606, column: 38, scope: !4540)
!4572 = !DILocation(line: 1606, column: 24, scope: !4540)
!4573 = !DILocation(line: 1606, column: 21, scope: !4540)
!4574 = !DILocation(line: 1608, column: 31, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4540, file: !898, line: 1608, column: 13)
!4576 = !DILocation(line: 1608, column: 34, scope: !4575)
!4577 = !DILocation(line: 1608, column: 38, scope: !4575)
!4578 = !DILocation(line: 1608, column: 66, scope: !4575)
!4579 = !DILocation(line: 1608, column: 51, scope: !4575)
!4580 = !DILocation(line: 1608, column: 69, scope: !4575)
!4581 = !DILocation(line: 1608, column: 49, scope: !4575)
!4582 = !DILocation(line: 1608, column: 13, scope: !4575)
!4583 = !DILocation(line: 1608, column: 13, scope: !4540)
!4584 = !DILocation(line: 1609, column: 20, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4575, file: !898, line: 1608, column: 75)
!4586 = !DILocation(line: 1609, column: 23, scope: !4585)
!4587 = !DILocation(line: 1609, column: 13, scope: !4585)
!4588 = !DILocation(line: 1610, column: 13, scope: !4585)
!4589 = !DILocation(line: 1612, column: 5, scope: !4540)
!4590 = !DILocation(line: 1597, column: 52, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !4535, file: !898, discriminator: 2)
!4592 = !DILocation(line: 1597, column: 5, scope: !4591)
!4593 = distinct !{!4593, !4594}
!4594 = !DILocation(line: 1597, column: 5, scope: !4372)
!4595 = !DILocation(line: 1614, column: 5, scope: !4372)
!4596 = !DILocation(line: 1615, column: 1, scope: !4372)
!4597 = distinct !DISubprogram(name: "parse_x96_frame", scope: !898, file: !898, line: 1512, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1513, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4598 = !DILocalVariable(name: "s", arg: 1, scope: !4597, file: !898, line: 1512, type: !1094)
!4599 = !DILocation(line: 1512, column: 44, scope: !4597)
!4600 = !DILocalVariable(name: "ret", scope: !4597, file: !898, line: 1514, type: !1027)
!4601 = !DILocation(line: 1514, column: 9, scope: !4597)
!4602 = !DILocation(line: 1517, column: 31, scope: !4597)
!4603 = !DILocation(line: 1517, column: 34, scope: !4597)
!4604 = !DILocation(line: 1517, column: 21, scope: !4597)
!4605 = !DILocation(line: 1517, column: 5, scope: !4597)
!4606 = !DILocation(line: 1517, column: 8, scope: !4597)
!4607 = !DILocation(line: 1517, column: 19, scope: !4597)
!4608 = !DILocation(line: 1518, column: 9, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4597, file: !898, line: 1518, column: 9)
!4610 = !DILocation(line: 1518, column: 12, scope: !4609)
!4611 = !DILocation(line: 1518, column: 23, scope: !4609)
!4612 = !DILocation(line: 1518, column: 27, scope: !4609)
!4613 = !DILocation(line: 1518, column: 30, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4609, file: !898, discriminator: 1)
!4615 = !DILocation(line: 1518, column: 33, scope: !4614)
!4616 = !DILocation(line: 1518, column: 44, scope: !4614)
!4617 = !DILocation(line: 1518, column: 9, scope: !4614)
!4618 = !DILocation(line: 1519, column: 16, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4609, file: !898, line: 1518, column: 49)
!4620 = !DILocation(line: 1519, column: 19, scope: !4619)
!4621 = !DILocation(line: 1519, column: 61, scope: !4619)
!4622 = !DILocation(line: 1519, column: 64, scope: !4619)
!4623 = !DILocation(line: 1519, column: 9, scope: !4619)
!4624 = !DILocation(line: 1520, column: 9, scope: !4619)
!4625 = !DILocation(line: 1523, column: 5, scope: !4597)
!4626 = !DILocation(line: 1523, column: 8, scope: !4597)
!4627 = !DILocation(line: 1523, column: 24, scope: !4597)
!4628 = !DILocation(line: 1524, column: 24, scope: !4597)
!4629 = !DILocation(line: 1524, column: 27, scope: !4597)
!4630 = !DILocation(line: 1524, column: 5, scope: !4597)
!4631 = !DILocation(line: 1524, column: 8, scope: !4597)
!4632 = !DILocation(line: 1524, column: 22, scope: !4597)
!4633 = !DILocation(line: 1526, column: 40, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4597, file: !898, line: 1526, column: 9)
!4635 = !DILocation(line: 1526, column: 16, scope: !4634)
!4636 = !DILocation(line: 1526, column: 14, scope: !4634)
!4637 = !DILocation(line: 1526, column: 44, scope: !4634)
!4638 = !DILocation(line: 1526, column: 9, scope: !4597)
!4639 = !DILocation(line: 1527, column: 16, scope: !4634)
!4640 = !DILocation(line: 1527, column: 9, scope: !4634)
!4641 = !DILocation(line: 1529, column: 37, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4597, file: !898, line: 1529, column: 9)
!4643 = !DILocation(line: 1529, column: 16, scope: !4642)
!4644 = !DILocation(line: 1529, column: 14, scope: !4642)
!4645 = !DILocation(line: 1529, column: 47, scope: !4642)
!4646 = !DILocation(line: 1529, column: 9, scope: !4597)
!4647 = !DILocation(line: 1530, column: 16, scope: !4642)
!4648 = !DILocation(line: 1530, column: 9, scope: !4642)
!4649 = !DILocation(line: 1533, column: 27, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4597, file: !898, line: 1533, column: 9)
!4651 = !DILocation(line: 1533, column: 30, scope: !4650)
!4652 = !DILocation(line: 1533, column: 34, scope: !4650)
!4653 = !DILocation(line: 1533, column: 37, scope: !4650)
!4654 = !DILocation(line: 1533, column: 48, scope: !4650)
!4655 = !DILocation(line: 1533, column: 9, scope: !4650)
!4656 = !DILocation(line: 1533, column: 9, scope: !4597)
!4657 = !DILocation(line: 1534, column: 16, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4650, file: !898, line: 1533, column: 54)
!4659 = !DILocation(line: 1534, column: 19, scope: !4658)
!4660 = !DILocation(line: 1534, column: 9, scope: !4658)
!4661 = !DILocation(line: 1535, column: 9, scope: !4658)
!4662 = !DILocation(line: 1538, column: 5, scope: !4597)
!4663 = !DILocation(line: 1539, column: 1, scope: !4597)
!4664 = distinct !DISubprogram(name: "ff_dca_core_filter_fixed", scope: !898, file: !898, line: 1959, type: !4665, isLocal: false, isDefinition: true, scopeLine: 1960, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!1027, !1094, !1027}
!4667 = !DILocalVariable(name: "x", arg: 1, scope: !4668, file: !4019, line: 342, type: !1038)
!4668 = distinct !DISubprogram(name: "av_popcount_c", scope: !4019, file: !4019, line: 342, type: !4669, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!1027, !1038}
!4671 = !DILocation(line: 342, column: 96, scope: !4668, inlinedAt: !4672)
!4672 = distinct !DILocation(line: 1981, column: 31, scope: !4664)
!4673 = !DILocalVariable(name: "s", arg: 1, scope: !4664, file: !898, line: 1959, type: !1094)
!4674 = !DILocation(line: 1959, column: 46, scope: !4664)
!4675 = !DILocalVariable(name: "x96_synth", arg: 2, scope: !4664, file: !898, line: 1959, type: !1027)
!4676 = !DILocation(line: 1959, column: 53, scope: !4664)
!4677 = !DILocalVariable(name: "n", scope: !4664, file: !898, line: 1961, type: !1027)
!4678 = !DILocation(line: 1961, column: 9, scope: !4664)
!4679 = !DILocalVariable(name: "ch", scope: !4664, file: !898, line: 1961, type: !1027)
!4680 = !DILocation(line: 1961, column: 12, scope: !4664)
!4681 = !DILocalVariable(name: "spkr", scope: !4664, file: !898, line: 1961, type: !1027)
!4682 = !DILocation(line: 1961, column: 16, scope: !4664)
!4683 = !DILocalVariable(name: "nsamples", scope: !4664, file: !898, line: 1961, type: !1027)
!4684 = !DILocation(line: 1961, column: 22, scope: !4664)
!4685 = !DILocalVariable(name: "x96_nchannels", scope: !4664, file: !898, line: 1961, type: !1027)
!4686 = !DILocation(line: 1961, column: 32, scope: !4664)
!4687 = !DILocalVariable(name: "filter_coeff", scope: !4664, file: !898, line: 1962, type: !1959)
!4688 = !DILocation(line: 1962, column: 20, scope: !4664)
!4689 = !DILocalVariable(name: "ptr", scope: !4664, file: !898, line: 1963, type: !1029)
!4690 = !DILocation(line: 1963, column: 14, scope: !4664)
!4691 = !DILocation(line: 1969, column: 10, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 1969, column: 9)
!4693 = !DILocation(line: 1969, column: 20, scope: !4692)
!4694 = !DILocation(line: 1969, column: 24, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4692, file: !898, discriminator: 1)
!4696 = !DILocation(line: 1969, column: 27, scope: !4695)
!4697 = !DILocation(line: 1969, column: 42, scope: !4695)
!4698 = !DILocation(line: 1969, column: 9, scope: !4695)
!4699 = !DILocation(line: 1970, column: 25, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4692, file: !898, line: 1969, column: 75)
!4701 = !DILocation(line: 1970, column: 28, scope: !4700)
!4702 = !DILocation(line: 1970, column: 23, scope: !4700)
!4703 = !DILocation(line: 1971, column: 19, scope: !4700)
!4704 = !DILocation(line: 1972, column: 5, scope: !4700)
!4705 = !DILocation(line: 1973, column: 9, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 1973, column: 9)
!4707 = !DILocation(line: 1973, column: 19, scope: !4706)
!4708 = !DILocation(line: 1973, column: 9, scope: !4664)
!4709 = !DILocation(line: 1974, column: 19, scope: !4706)
!4710 = !DILocation(line: 1974, column: 9, scope: !4706)
!4711 = !DILocation(line: 1976, column: 22, scope: !4664)
!4712 = !DILocation(line: 1976, column: 25, scope: !4664)
!4713 = !DILocation(line: 1976, column: 40, scope: !4664)
!4714 = !DILocation(line: 1976, column: 37, scope: !4664)
!4715 = !DILocation(line: 1976, column: 5, scope: !4664)
!4716 = !DILocation(line: 1976, column: 8, scope: !4664)
!4717 = !DILocation(line: 1976, column: 20, scope: !4664)
!4718 = !DILocation(line: 1977, column: 34, scope: !4664)
!4719 = !DILocation(line: 1977, column: 37, scope: !4664)
!4720 = !DILocation(line: 1977, column: 48, scope: !4664)
!4721 = !DILocation(line: 1977, column: 57, scope: !4664)
!4722 = !DILocation(line: 1977, column: 54, scope: !4664)
!4723 = !DILocation(line: 1977, column: 31, scope: !4664)
!4724 = !DILocation(line: 1977, column: 5, scope: !4664)
!4725 = !DILocation(line: 1977, column: 8, scope: !4664)
!4726 = !DILocation(line: 1977, column: 20, scope: !4664)
!4727 = !DILocation(line: 1980, column: 21, scope: !4664)
!4728 = !DILocation(line: 1980, column: 24, scope: !4664)
!4729 = !DILocation(line: 1980, column: 20, scope: !4664)
!4730 = !DILocation(line: 1980, column: 40, scope: !4664)
!4731 = !DILocation(line: 1980, column: 43, scope: !4664)
!4732 = !DILocation(line: 1981, column: 20, scope: !4664)
!4733 = !DILocation(line: 1981, column: 45, scope: !4664)
!4734 = !DILocation(line: 1981, column: 48, scope: !4664)
!4735 = !DILocation(line: 1981, column: 31, scope: !4664)
!4736 = !DILocation(line: 344, column: 11, scope: !4668, inlinedAt: !4672)
!4737 = !DILocation(line: 344, column: 13, scope: !4668, inlinedAt: !4672)
!4738 = !DILocation(line: 344, column: 19, scope: !4668, inlinedAt: !4672)
!4739 = !DILocation(line: 344, column: 7, scope: !4668, inlinedAt: !4672)
!4740 = !DILocation(line: 345, column: 10, scope: !4668, inlinedAt: !4672)
!4741 = !DILocation(line: 345, column: 12, scope: !4668, inlinedAt: !4672)
!4742 = !DILocation(line: 345, column: 30, scope: !4668, inlinedAt: !4672)
!4743 = !DILocation(line: 345, column: 32, scope: !4668, inlinedAt: !4672)
!4744 = !DILocation(line: 345, column: 38, scope: !4668, inlinedAt: !4672)
!4745 = !DILocation(line: 345, column: 26, scope: !4668, inlinedAt: !4672)
!4746 = !DILocation(line: 345, column: 7, scope: !4668, inlinedAt: !4672)
!4747 = !DILocation(line: 346, column: 10, scope: !4668, inlinedAt: !4672)
!4748 = !DILocation(line: 346, column: 15, scope: !4668, inlinedAt: !4672)
!4749 = !DILocation(line: 346, column: 17, scope: !4668, inlinedAt: !4672)
!4750 = !DILocation(line: 346, column: 12, scope: !4668, inlinedAt: !4672)
!4751 = !DILocation(line: 346, column: 24, scope: !4668, inlinedAt: !4672)
!4752 = !DILocation(line: 346, column: 7, scope: !4668, inlinedAt: !4672)
!4753 = !DILocation(line: 347, column: 10, scope: !4668, inlinedAt: !4672)
!4754 = !DILocation(line: 347, column: 12, scope: !4668, inlinedAt: !4672)
!4755 = !DILocation(line: 347, column: 7, scope: !4668, inlinedAt: !4672)
!4756 = !DILocation(line: 348, column: 13, scope: !4668, inlinedAt: !4672)
!4757 = !DILocation(line: 348, column: 18, scope: !4668, inlinedAt: !4672)
!4758 = !DILocation(line: 348, column: 20, scope: !4668, inlinedAt: !4672)
!4759 = !DILocation(line: 348, column: 15, scope: !4668, inlinedAt: !4672)
!4760 = !DILocation(line: 348, column: 28, scope: !4668, inlinedAt: !4672)
!4761 = !DILocation(line: 1981, column: 29, scope: !4664)
!4762 = !DILocation(line: 1981, column: 57, scope: !4664)
!4763 = !DILocation(line: 1980, column: 5, scope: !4664)
!4764 = !DILocation(line: 1982, column: 10, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 1982, column: 9)
!4766 = !DILocation(line: 1982, column: 13, scope: !4765)
!4767 = !DILocation(line: 1982, column: 9, scope: !4664)
!4768 = !DILocation(line: 1983, column: 9, scope: !4765)
!4769 = !DILocation(line: 1985, column: 22, scope: !4664)
!4770 = !DILocation(line: 1985, column: 25, scope: !4664)
!4771 = !DILocation(line: 1985, column: 11, scope: !4664)
!4772 = !DILocation(line: 1985, column: 9, scope: !4664)
!4773 = !DILocation(line: 1986, column: 15, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 1986, column: 5)
!4775 = !DILocation(line: 1986, column: 10, scope: !4774)
!4776 = !DILocation(line: 1986, column: 20, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4778, file: !898, discriminator: 1)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !898, line: 1986, column: 5)
!4779 = !DILocation(line: 1986, column: 25, scope: !4777)
!4780 = !DILocation(line: 1986, column: 5, scope: !4777)
!4781 = !DILocation(line: 1987, column: 13, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !898, line: 1987, column: 13)
!4783 = distinct !DILexicalBlock(scope: !4778, file: !898, line: 1986, column: 54)
!4784 = !DILocation(line: 1987, column: 16, scope: !4782)
!4785 = !DILocation(line: 1987, column: 33, scope: !4782)
!4786 = !DILocation(line: 1987, column: 30, scope: !4782)
!4787 = !DILocation(line: 1987, column: 24, scope: !4782)
!4788 = !DILocation(line: 1987, column: 13, scope: !4783)
!4789 = !DILocation(line: 1988, column: 39, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4782, file: !898, line: 1987, column: 40)
!4791 = !DILocation(line: 1988, column: 31, scope: !4790)
!4792 = !DILocation(line: 1988, column: 13, scope: !4790)
!4793 = !DILocation(line: 1988, column: 16, scope: !4790)
!4794 = !DILocation(line: 1988, column: 37, scope: !4790)
!4795 = !DILocation(line: 1989, column: 20, scope: !4790)
!4796 = !DILocation(line: 1989, column: 17, scope: !4790)
!4797 = !DILocation(line: 1990, column: 9, scope: !4790)
!4798 = !DILocation(line: 1991, column: 31, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4782, file: !898, line: 1990, column: 16)
!4800 = !DILocation(line: 1991, column: 13, scope: !4799)
!4801 = !DILocation(line: 1991, column: 16, scope: !4799)
!4802 = !DILocation(line: 1991, column: 37, scope: !4799)
!4803 = !DILocation(line: 1993, column: 5, scope: !4783)
!4804 = !DILocation(line: 1986, column: 50, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4778, file: !898, discriminator: 2)
!4806 = !DILocation(line: 1986, column: 5, scope: !4805)
!4807 = distinct !{!4807, !4808}
!4808 = !DILocation(line: 1986, column: 5, scope: !4664)
!4809 = !DILocation(line: 1996, column: 21, scope: !4664)
!4810 = !DILocation(line: 1996, column: 24, scope: !4664)
!4811 = !DILocation(line: 1996, column: 34, scope: !4664)
!4812 = !DILocation(line: 1996, column: 5, scope: !4664)
!4813 = !DILocation(line: 1999, column: 9, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 1999, column: 9)
!4815 = !DILocation(line: 1999, column: 9, scope: !4664)
!4816 = !DILocation(line: 2000, column: 22, scope: !4814)
!4817 = !DILocation(line: 2000, column: 9, scope: !4814)
!4818 = !DILocation(line: 2001, column: 14, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4814, file: !898, line: 2001, column: 14)
!4820 = !DILocation(line: 2001, column: 17, scope: !4819)
!4821 = !DILocation(line: 2001, column: 14, scope: !4814)
!4822 = !DILocation(line: 2002, column: 22, scope: !4819)
!4823 = !DILocation(line: 2002, column: 9, scope: !4819)
!4824 = !DILocation(line: 2004, column: 22, scope: !4819)
!4825 = !DILocation(line: 2007, column: 13, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 2007, column: 5)
!4827 = !DILocation(line: 2007, column: 10, scope: !4826)
!4828 = !DILocation(line: 2007, column: 18, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4830, file: !898, discriminator: 1)
!4830 = distinct !DILexicalBlock(scope: !4826, file: !898, line: 2007, column: 5)
!4831 = !DILocation(line: 2007, column: 23, scope: !4829)
!4832 = !DILocation(line: 2007, column: 26, scope: !4829)
!4833 = !DILocation(line: 2007, column: 21, scope: !4829)
!4834 = !DILocation(line: 2007, column: 5, scope: !4829)
!4835 = !DILocation(line: 2009, column: 35, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4830, file: !898, line: 2007, column: 43)
!4837 = !DILocation(line: 2009, column: 38, scope: !4836)
!4838 = !DILocation(line: 2009, column: 16, scope: !4836)
!4839 = !DILocation(line: 2009, column: 14, scope: !4836)
!4840 = !DILocation(line: 2010, column: 13, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !898, line: 2010, column: 13)
!4842 = !DILocation(line: 2010, column: 18, scope: !4841)
!4843 = !DILocation(line: 2010, column: 13, scope: !4836)
!4844 = !DILocation(line: 2011, column: 13, scope: !4841)
!4845 = !DILocation(line: 2014, column: 34, scope: !4836)
!4846 = !DILocation(line: 2014, column: 9, scope: !4836)
!4847 = !DILocation(line: 2014, column: 12, scope: !4836)
!4848 = !DILocation(line: 2014, column: 20, scope: !4836)
!4849 = !DILocation(line: 2015, column: 14, scope: !4836)
!4850 = !DILocation(line: 2015, column: 17, scope: !4836)
!4851 = !DILocation(line: 2016, column: 14, scope: !4836)
!4852 = !DILocation(line: 2016, column: 17, scope: !4836)
!4853 = !DILocation(line: 2017, column: 31, scope: !4836)
!4854 = !DILocation(line: 2017, column: 13, scope: !4836)
!4855 = !DILocation(line: 2017, column: 16, scope: !4836)
!4856 = !DILocation(line: 2018, column: 32, scope: !4836)
!4857 = !DILocation(line: 2018, column: 13, scope: !4836)
!4858 = !DILocation(line: 2018, column: 16, scope: !4836)
!4859 = !DILocation(line: 2019, column: 13, scope: !4836)
!4860 = !DILocation(line: 2019, column: 18, scope: !4836)
!4861 = !DILocation(line: 2019, column: 16, scope: !4836)
!4862 = !DILocation(line: 2019, column: 57, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4836, file: !898, discriminator: 1)
!4864 = !DILocation(line: 2019, column: 34, scope: !4863)
!4865 = !DILocation(line: 2019, column: 37, scope: !4863)
!4866 = !DILocation(line: 2019, column: 13, scope: !4863)
!4867 = !DILocation(line: 2019, column: 13, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !4836, file: !898, discriminator: 2)
!4869 = !DILocation(line: 2019, column: 13, scope: !4870)
!4870 = !DILexicalBlockFile(scope: !4836, file: !898, discriminator: 3)
!4871 = !DILocation(line: 2020, column: 28, scope: !4836)
!4872 = !DILocation(line: 2020, column: 13, scope: !4836)
!4873 = !DILocation(line: 2020, column: 16, scope: !4836)
!4874 = !DILocation(line: 2020, column: 32, scope: !4836)
!4875 = !DILocation(line: 2020, column: 34, scope: !4836)
!4876 = !DILocation(line: 2020, column: 38, scope: !4836)
!4877 = !DILocation(line: 2021, column: 29, scope: !4836)
!4878 = !DILocation(line: 2021, column: 14, scope: !4836)
!4879 = !DILocation(line: 2021, column: 17, scope: !4836)
!4880 = !DILocation(line: 2021, column: 33, scope: !4836)
!4881 = !DILocation(line: 2022, column: 28, scope: !4836)
!4882 = !DILocation(line: 2022, column: 13, scope: !4836)
!4883 = !DILocation(line: 2022, column: 16, scope: !4836)
!4884 = !DILocation(line: 2022, column: 32, scope: !4836)
!4885 = !DILocation(line: 2022, column: 34, scope: !4836)
!4886 = !DILocation(line: 2022, column: 38, scope: !4836)
!4887 = !DILocation(line: 2023, column: 13, scope: !4836)
!4888 = !DILocation(line: 2024, column: 13, scope: !4836)
!4889 = !DILocation(line: 2024, column: 16, scope: !4836)
!4890 = !DILocation(line: 2014, column: 9, scope: !4863)
!4891 = !DILocation(line: 2025, column: 5, scope: !4836)
!4892 = !DILocation(line: 2007, column: 39, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4830, file: !898, discriminator: 2)
!4894 = !DILocation(line: 2007, column: 5, scope: !4893)
!4895 = distinct !{!4895, !4896}
!4896 = !DILocation(line: 2007, column: 5, scope: !4664)
!4897 = !DILocation(line: 2028, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4664, file: !898, line: 2028, column: 9)
!4899 = !DILocation(line: 2028, column: 12, scope: !4898)
!4900 = !DILocation(line: 2028, column: 9, scope: !4664)
!4901 = !DILocalVariable(name: "samples", scope: !4902, file: !898, line: 2029, type: !1029)
!4902 = distinct !DILexicalBlock(scope: !4898, file: !898, line: 2028, column: 25)
!4903 = !DILocation(line: 2029, column: 18, scope: !4902)
!4904 = !DILocation(line: 2029, column: 28, scope: !4902)
!4905 = !DILocation(line: 2029, column: 31, scope: !4902)
!4906 = !DILocalVariable(name: "nlfesamples", scope: !4902, file: !898, line: 2030, type: !1027)
!4907 = !DILocation(line: 2030, column: 13, scope: !4902)
!4908 = !DILocation(line: 2030, column: 27, scope: !4902)
!4909 = !DILocation(line: 2030, column: 30, scope: !4902)
!4910 = !DILocation(line: 2030, column: 41, scope: !4902)
!4911 = !DILocation(line: 2033, column: 13, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4902, file: !898, line: 2033, column: 13)
!4913 = !DILocation(line: 2033, column: 16, scope: !4912)
!4914 = !DILocation(line: 2033, column: 28, scope: !4912)
!4915 = !DILocation(line: 2033, column: 13, scope: !4902)
!4916 = !DILocation(line: 2034, column: 20, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !898, line: 2033, column: 49)
!4918 = !DILocation(line: 2034, column: 23, scope: !4917)
!4919 = !DILocation(line: 2034, column: 13, scope: !4917)
!4920 = !DILocation(line: 2035, column: 13, scope: !4917)
!4921 = !DILocation(line: 2039, column: 13, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4902, file: !898, line: 2039, column: 13)
!4923 = !DILocation(line: 2039, column: 13, scope: !4902)
!4924 = !DILocation(line: 2040, column: 24, scope: !4922)
!4925 = !DILocation(line: 2040, column: 33, scope: !4922)
!4926 = !DILocation(line: 2040, column: 21, scope: !4922)
!4927 = !DILocation(line: 2040, column: 13, scope: !4922)
!4928 = !DILocation(line: 2043, column: 9, scope: !4902)
!4929 = !DILocation(line: 2043, column: 12, scope: !4902)
!4930 = !DILocation(line: 2043, column: 20, scope: !4902)
!4931 = !DILocation(line: 2043, column: 34, scope: !4902)
!4932 = !DILocation(line: 2043, column: 43, scope: !4902)
!4933 = !DILocation(line: 2043, column: 46, scope: !4902)
!4934 = !DILocation(line: 2043, column: 58, scope: !4902)
!4935 = !DILocation(line: 2044, column: 59, scope: !4902)
!4936 = !DILocation(line: 2044, column: 62, scope: !4902)
!4937 = !DILocation(line: 2046, column: 13, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4902, file: !898, line: 2046, column: 13)
!4939 = !DILocation(line: 2046, column: 13, scope: !4902)
!4940 = !DILocation(line: 2049, column: 13, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !898, line: 2046, column: 24)
!4942 = !DILocation(line: 2049, column: 16, scope: !4941)
!4943 = !DILocation(line: 2049, column: 24, scope: !4941)
!4944 = !DILocation(line: 2049, column: 38, scope: !4941)
!4945 = !DILocation(line: 2049, column: 41, scope: !4941)
!4946 = !DILocation(line: 2050, column: 38, scope: !4941)
!4947 = !DILocation(line: 2050, column: 48, scope: !4941)
!4948 = !DILocation(line: 2050, column: 51, scope: !4941)
!4949 = !DILocation(line: 2051, column: 38, scope: !4941)
!4950 = !DILocation(line: 2051, column: 47, scope: !4941)
!4951 = !DILocation(line: 2053, column: 9, scope: !4941)
!4952 = !DILocation(line: 2056, column: 16, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4902, file: !898, line: 2056, column: 9)
!4954 = !DILocation(line: 2056, column: 14, scope: !4953)
!4955 = !DILocation(line: 2056, column: 25, scope: !4956)
!4956 = !DILexicalBlockFile(scope: !4957, file: !898, discriminator: 1)
!4957 = distinct !DILexicalBlock(scope: !4953, file: !898, line: 2056, column: 9)
!4958 = !DILocation(line: 2056, column: 27, scope: !4956)
!4959 = !DILocation(line: 2056, column: 9, scope: !4956)
!4960 = !DILocation(line: 2057, column: 48, scope: !4957)
!4961 = !DILocation(line: 2057, column: 62, scope: !4957)
!4962 = !DILocation(line: 2057, column: 60, scope: !4957)
!4963 = !DILocation(line: 2057, column: 33, scope: !4957)
!4964 = !DILocation(line: 2057, column: 36, scope: !4957)
!4965 = !DILocation(line: 2057, column: 28, scope: !4957)
!4966 = !DILocation(line: 2057, column: 13, scope: !4957)
!4967 = !DILocation(line: 2057, column: 16, scope: !4957)
!4968 = !DILocation(line: 2057, column: 31, scope: !4957)
!4969 = !DILocation(line: 2056, column: 34, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !4957, file: !898, discriminator: 2)
!4971 = !DILocation(line: 2056, column: 9, scope: !4970)
!4972 = distinct !{!4972, !4973}
!4973 = !DILocation(line: 2056, column: 9, scope: !4902)
!4974 = !DILocation(line: 2058, column: 5, scope: !4902)
!4975 = !DILocation(line: 2060, column: 5, scope: !4664)
!4976 = !DILocation(line: 2061, column: 1, scope: !4664)
!4977 = distinct !DISubprogram(name: "set_filter_mode", scope: !898, file: !898, line: 1951, type: !4978, isLocal: true, isDefinition: true, scopeLine: 1952, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !1094, !1027}
!4980 = !DILocalVariable(name: "s", arg: 1, scope: !4977, file: !898, line: 1951, type: !1094)
!4981 = !DILocation(line: 1951, column: 45, scope: !4977)
!4982 = !DILocalVariable(name: "mode", arg: 2, scope: !4977, file: !898, line: 1951, type: !1027)
!4983 = !DILocation(line: 1951, column: 52, scope: !4977)
!4984 = !DILocation(line: 1953, column: 9, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4977, file: !898, line: 1953, column: 9)
!4986 = !DILocation(line: 1953, column: 12, scope: !4985)
!4987 = !DILocation(line: 1953, column: 27, scope: !4985)
!4988 = !DILocation(line: 1953, column: 24, scope: !4985)
!4989 = !DILocation(line: 1953, column: 9, scope: !4977)
!4990 = !DILocation(line: 1954, column: 27, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4985, file: !898, line: 1953, column: 33)
!4992 = !DILocation(line: 1954, column: 9, scope: !4991)
!4993 = !DILocation(line: 1955, column: 26, scope: !4991)
!4994 = !DILocation(line: 1955, column: 9, scope: !4991)
!4995 = !DILocation(line: 1955, column: 12, scope: !4991)
!4996 = !DILocation(line: 1955, column: 24, scope: !4991)
!4997 = !DILocation(line: 1956, column: 5, scope: !4991)
!4998 = !DILocation(line: 1957, column: 1, scope: !4977)
!4999 = distinct !DISubprogram(name: "map_prm_ch_to_spkr", scope: !898, file: !898, line: 1908, type: !4665, isLocal: true, isDefinition: true, scopeLine: 1909, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!5000 = !DILocalVariable(name: "s", arg: 1, scope: !4999, file: !898, line: 1908, type: !1094)
!5001 = !DILocation(line: 1908, column: 47, scope: !4999)
!5002 = !DILocalVariable(name: "ch", arg: 2, scope: !4999, file: !898, line: 1908, type: !1027)
!5003 = !DILocation(line: 1908, column: 54, scope: !4999)
!5004 = !DILocalVariable(name: "pos", scope: !4999, file: !898, line: 1910, type: !1027)
!5005 = !DILocation(line: 1910, column: 9, scope: !4999)
!5006 = !DILocalVariable(name: "spkr", scope: !4999, file: !898, line: 1910, type: !1027)
!5007 = !DILocation(line: 1910, column: 14, scope: !4999)
!5008 = !DILocation(line: 1913, column: 27, scope: !4999)
!5009 = !DILocation(line: 1913, column: 30, scope: !4999)
!5010 = !DILocation(line: 1913, column: 11, scope: !4999)
!5011 = !DILocation(line: 1913, column: 9, scope: !4999)
!5012 = !DILocation(line: 1914, column: 9, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4999, file: !898, line: 1914, column: 9)
!5014 = !DILocation(line: 1914, column: 14, scope: !5013)
!5015 = !DILocation(line: 1914, column: 12, scope: !5013)
!5016 = !DILocation(line: 1914, column: 9, scope: !4999)
!5017 = !DILocation(line: 1915, column: 50, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5013, file: !898, line: 1914, column: 19)
!5019 = !DILocation(line: 1915, column: 16, scope: !5018)
!5020 = !DILocation(line: 1915, column: 35, scope: !5018)
!5021 = !DILocation(line: 1915, column: 38, scope: !5018)
!5022 = !DILocation(line: 1915, column: 14, scope: !5018)
!5023 = !DILocation(line: 1916, column: 13, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5018, file: !898, line: 1916, column: 13)
!5025 = !DILocation(line: 1916, column: 16, scope: !5024)
!5026 = !DILocation(line: 1916, column: 31, scope: !5024)
!5027 = !DILocation(line: 1916, column: 13, scope: !5018)
!5028 = !DILocation(line: 1917, column: 17, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !898, line: 1917, column: 17)
!5030 = distinct !DILexicalBlock(scope: !5024, file: !898, line: 1916, column: 65)
!5031 = !DILocation(line: 1917, column: 20, scope: !5029)
!5032 = !DILocation(line: 1917, column: 44, scope: !5029)
!5033 = !DILocation(line: 1917, column: 41, scope: !5029)
!5034 = !DILocation(line: 1917, column: 35, scope: !5029)
!5035 = !DILocation(line: 1917, column: 17, scope: !5030)
!5036 = !DILocation(line: 1918, column: 24, scope: !5029)
!5037 = !DILocation(line: 1918, column: 17, scope: !5029)
!5038 = !DILocation(line: 1919, column: 17, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5030, file: !898, line: 1919, column: 17)
!5040 = !DILocation(line: 1919, column: 22, scope: !5039)
!5041 = !DILocation(line: 1919, column: 40, scope: !5039)
!5042 = !DILocation(line: 1919, column: 44, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !5039, file: !898, discriminator: 1)
!5044 = !DILocation(line: 1919, column: 47, scope: !5043)
!5045 = !DILocation(line: 1919, column: 62, scope: !5043)
!5046 = !DILocation(line: 1919, column: 17, scope: !5043)
!5047 = !DILocation(line: 1920, column: 17, scope: !5039)
!5048 = !DILocation(line: 1921, column: 17, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5030, file: !898, line: 1921, column: 17)
!5050 = !DILocation(line: 1921, column: 22, scope: !5049)
!5051 = !DILocation(line: 1921, column: 40, scope: !5049)
!5052 = !DILocation(line: 1921, column: 44, scope: !5053)
!5053 = !DILexicalBlockFile(scope: !5049, file: !898, discriminator: 1)
!5054 = !DILocation(line: 1921, column: 47, scope: !5053)
!5055 = !DILocation(line: 1921, column: 62, scope: !5053)
!5056 = !DILocation(line: 1921, column: 17, scope: !5053)
!5057 = !DILocation(line: 1922, column: 17, scope: !5049)
!5058 = !DILocation(line: 1923, column: 13, scope: !5030)
!5059 = !DILocation(line: 1925, column: 16, scope: !5018)
!5060 = !DILocation(line: 1925, column: 9, scope: !5018)
!5061 = !DILocation(line: 1929, column: 10, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4999, file: !898, line: 1929, column: 9)
!5063 = !DILocation(line: 1929, column: 13, scope: !5062)
!5064 = !DILocation(line: 1929, column: 28, scope: !5062)
!5065 = !DILocation(line: 1929, column: 43, scope: !5062)
!5066 = !DILocation(line: 1929, column: 46, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !5062, file: !898, discriminator: 1)
!5068 = !DILocation(line: 1929, column: 52, scope: !5067)
!5069 = !DILocation(line: 1929, column: 49, scope: !5067)
!5070 = !DILocation(line: 1929, column: 9, scope: !5067)
!5071 = !DILocation(line: 1930, column: 9, scope: !5062)
!5072 = !DILocation(line: 1933, column: 9, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4999, file: !898, line: 1933, column: 9)
!5074 = !DILocation(line: 1933, column: 12, scope: !5073)
!5075 = !DILocation(line: 1933, column: 27, scope: !5073)
!5076 = !DILocation(line: 1933, column: 9, scope: !4999)
!5077 = !DILocation(line: 1934, column: 19, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !898, line: 1934, column: 9)
!5079 = distinct !DILexicalBlock(scope: !5073, file: !898, line: 1933, column: 61)
!5080 = !DILocation(line: 1934, column: 14, scope: !5078)
!5081 = !DILocation(line: 1934, column: 37, scope: !5082)
!5082 = !DILexicalBlockFile(scope: !5083, file: !898, discriminator: 1)
!5083 = distinct !DILexicalBlock(scope: !5078, file: !898, line: 1934, column: 9)
!5084 = !DILocation(line: 1934, column: 44, scope: !5082)
!5085 = !DILocation(line: 1934, column: 47, scope: !5082)
!5086 = !DILocation(line: 1934, column: 42, scope: !5082)
!5087 = !DILocation(line: 1934, column: 9, scope: !5082)
!5088 = !DILocation(line: 1935, column: 17, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !898, line: 1935, column: 17)
!5090 = !DILocation(line: 1935, column: 20, scope: !5089)
!5091 = !DILocation(line: 1935, column: 44, scope: !5089)
!5092 = !DILocation(line: 1935, column: 41, scope: !5089)
!5093 = !DILocation(line: 1935, column: 35, scope: !5089)
!5094 = !DILocation(line: 1935, column: 17, scope: !5083)
!5095 = !DILocation(line: 1936, column: 24, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5089, file: !898, line: 1936, column: 21)
!5097 = !DILocation(line: 1936, column: 30, scope: !5096)
!5098 = !DILocation(line: 1936, column: 27, scope: !5096)
!5099 = !DILocation(line: 1936, column: 21, scope: !5089)
!5100 = !DILocation(line: 1937, column: 28, scope: !5096)
!5101 = !DILocation(line: 1937, column: 21, scope: !5096)
!5102 = !DILocation(line: 1936, column: 30, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5096, file: !898, discriminator: 1)
!5104 = !DILocation(line: 1935, column: 48, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5089, file: !898, discriminator: 1)
!5106 = !DILocation(line: 1934, column: 68, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !5083, file: !898, discriminator: 2)
!5108 = !DILocation(line: 1934, column: 9, scope: !5107)
!5109 = distinct !{!5109, !5110}
!5110 = !DILocation(line: 1934, column: 9, scope: !5079)
!5111 = !DILocation(line: 1938, column: 5, scope: !5079)
!5112 = !DILocation(line: 1941, column: 5, scope: !4999)
!5113 = !DILocation(line: 1942, column: 1, scope: !4999)
!5114 = distinct !DISubprogram(name: "ff_dca_core_filter_frame", scope: !898, file: !898, line: 2345, type: !5115, isLocal: false, isDefinition: true, scopeLine: 2346, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!1027, !1094, !1403}
!5117 = !DILocalVariable(name: "s", arg: 1, scope: !5114, file: !898, line: 2345, type: !1094)
!5118 = !DILocation(line: 2345, column: 46, scope: !5114)
!5119 = !DILocalVariable(name: "frame", arg: 2, scope: !5114, file: !898, line: 2345, type: !1403)
!5120 = !DILocation(line: 2345, column: 58, scope: !5114)
!5121 = !DILocalVariable(name: "avctx", scope: !5114, file: !898, line: 2347, type: !1099)
!5122 = !DILocation(line: 2347, column: 21, scope: !5114)
!5123 = !DILocation(line: 2347, column: 29, scope: !5114)
!5124 = !DILocation(line: 2347, column: 32, scope: !5114)
!5125 = !DILocalVariable(name: "dca", scope: !5114, file: !898, line: 2348, type: !2856)
!5126 = !DILocation(line: 2348, column: 17, scope: !5114)
!5127 = !DILocation(line: 2348, column: 23, scope: !5114)
!5128 = !DILocation(line: 2348, column: 30, scope: !5114)
!5129 = !DILocalVariable(name: "asset", scope: !5114, file: !898, line: 2349, type: !3553)
!5130 = !DILocation(line: 2349, column: 19, scope: !5114)
!5131 = !DILocation(line: 2349, column: 28, scope: !5114)
!5132 = !DILocation(line: 2349, column: 33, scope: !5114)
!5133 = !DILocation(line: 2349, column: 38, scope: !5114)
!5134 = !DILocalVariable(name: "matrix_encoding", scope: !5114, file: !898, line: 2350, type: !992)
!5135 = !DILocation(line: 2350, column: 27, scope: !5114)
!5136 = !DILocalVariable(name: "ret", scope: !5114, file: !898, line: 2351, type: !1027)
!5137 = !DILocation(line: 2351, column: 9, scope: !5114)
!5138 = !DILocation(line: 2354, column: 9, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2354, column: 9)
!5140 = !DILocation(line: 2354, column: 14, scope: !5139)
!5141 = !DILocation(line: 2354, column: 37, scope: !5139)
!5142 = !DILocation(line: 2355, column: 9, scope: !5139)
!5143 = !DILocation(line: 2355, column: 12, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !5139, file: !898, discriminator: 1)
!5145 = !DILocation(line: 2355, column: 15, scope: !5144)
!5146 = !DILocation(line: 2355, column: 26, scope: !5144)
!5147 = !DILocation(line: 2355, column: 43, scope: !5144)
!5148 = !DILocation(line: 2355, column: 46, scope: !5149)
!5149 = !DILexicalBlockFile(scope: !5139, file: !898, discriminator: 2)
!5150 = !DILocation(line: 2355, column: 49, scope: !5149)
!5151 = !DILocation(line: 2356, column: 9, scope: !5139)
!5152 = !DILocation(line: 2356, column: 13, scope: !5144)
!5153 = !DILocation(line: 2356, column: 16, scope: !5144)
!5154 = !DILocation(line: 2356, column: 31, scope: !5144)
!5155 = !DILocation(line: 2356, column: 53, scope: !5144)
!5156 = !DILocation(line: 2357, column: 13, scope: !5139)
!5157 = !DILocation(line: 2357, column: 16, scope: !5139)
!5158 = !DILocation(line: 2357, column: 31, scope: !5139)
!5159 = !DILocation(line: 2354, column: 9, scope: !5160)
!5160 = !DILexicalBlockFile(scope: !5114, file: !898, discriminator: 1)
!5161 = !DILocation(line: 2358, column: 9, scope: !5139)
!5162 = !DILocation(line: 2358, column: 12, scope: !5139)
!5163 = !DILocation(line: 2358, column: 25, scope: !5139)
!5164 = !DILocation(line: 2360, column: 27, scope: !5139)
!5165 = !DILocation(line: 2360, column: 30, scope: !5139)
!5166 = !DILocation(line: 2360, column: 9, scope: !5139)
!5167 = !DILocation(line: 2360, column: 12, scope: !5139)
!5168 = !DILocation(line: 2360, column: 25, scope: !5139)
!5169 = !DILocation(line: 2361, column: 36, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2361, column: 9)
!5171 = !DILocation(line: 2361, column: 43, scope: !5170)
!5172 = !DILocation(line: 2361, column: 46, scope: !5170)
!5173 = !DILocation(line: 2361, column: 56, scope: !5170)
!5174 = !DILocation(line: 2361, column: 59, scope: !5170)
!5175 = !DILocation(line: 2361, column: 10, scope: !5170)
!5176 = !DILocation(line: 2361, column: 9, scope: !5114)
!5177 = !DILocation(line: 2362, column: 9, scope: !5170)
!5178 = !DILocation(line: 2365, column: 10, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2365, column: 9)
!5180 = !DILocation(line: 2365, column: 17, scope: !5179)
!5181 = !DILocation(line: 2365, column: 23, scope: !5179)
!5182 = !DILocation(line: 2365, column: 36, scope: !5179)
!5183 = !DILocation(line: 2365, column: 41, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !5179, file: !898, discriminator: 1)
!5185 = !DILocation(line: 2365, column: 46, scope: !5184)
!5186 = !DILocation(line: 2365, column: 53, scope: !5184)
!5187 = !DILocation(line: 2366, column: 53, scope: !5179)
!5188 = !DILocation(line: 2366, column: 57, scope: !5184)
!5189 = !DILocation(line: 2366, column: 64, scope: !5184)
!5190 = !DILocation(line: 2366, column: 79, scope: !5184)
!5191 = !DILocation(line: 2365, column: 9, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5114, file: !898, discriminator: 2)
!5193 = !DILocation(line: 2367, column: 34, scope: !5179)
!5194 = !DILocation(line: 2367, column: 37, scope: !5179)
!5195 = !DILocation(line: 2367, column: 15, scope: !5179)
!5196 = !DILocation(line: 2367, column: 13, scope: !5179)
!5197 = !DILocation(line: 2367, column: 9, scope: !5179)
!5198 = !DILocation(line: 2369, column: 34, scope: !5179)
!5199 = !DILocation(line: 2369, column: 37, scope: !5179)
!5200 = !DILocation(line: 2369, column: 15, scope: !5179)
!5201 = !DILocation(line: 2369, column: 13, scope: !5179)
!5202 = !DILocation(line: 2370, column: 9, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2370, column: 9)
!5204 = !DILocation(line: 2370, column: 13, scope: !5203)
!5205 = !DILocation(line: 2370, column: 9, scope: !5114)
!5206 = !DILocation(line: 2371, column: 16, scope: !5203)
!5207 = !DILocation(line: 2371, column: 9, scope: !5203)
!5208 = !DILocation(line: 2374, column: 9, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2374, column: 9)
!5210 = !DILocation(line: 2374, column: 12, scope: !5209)
!5211 = !DILocation(line: 2374, column: 27, scope: !5209)
!5212 = !DILocation(line: 2374, column: 9, scope: !5114)
!5213 = !DILocation(line: 2375, column: 9, scope: !5209)
!5214 = !DILocation(line: 2375, column: 16, scope: !5209)
!5215 = !DILocation(line: 2375, column: 24, scope: !5209)
!5216 = !DILocation(line: 2376, column: 14, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !898, line: 2376, column: 14)
!5218 = !DILocation(line: 2376, column: 17, scope: !5217)
!5219 = !DILocation(line: 2376, column: 32, scope: !5217)
!5220 = !DILocation(line: 2376, column: 14, scope: !5209)
!5221 = !DILocation(line: 2377, column: 9, scope: !5217)
!5222 = !DILocation(line: 2377, column: 16, scope: !5217)
!5223 = !DILocation(line: 2377, column: 24, scope: !5217)
!5224 = !DILocation(line: 2378, column: 14, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5217, file: !898, line: 2378, column: 14)
!5226 = !DILocation(line: 2378, column: 17, scope: !5225)
!5227 = !DILocation(line: 2378, column: 32, scope: !5225)
!5228 = !DILocation(line: 2378, column: 14, scope: !5217)
!5229 = !DILocation(line: 2379, column: 9, scope: !5225)
!5230 = !DILocation(line: 2379, column: 16, scope: !5225)
!5231 = !DILocation(line: 2379, column: 24, scope: !5225)
!5232 = !DILocation(line: 2381, column: 9, scope: !5225)
!5233 = !DILocation(line: 2381, column: 16, scope: !5225)
!5234 = !DILocation(line: 2381, column: 24, scope: !5225)
!5235 = !DILocation(line: 2383, column: 9, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2383, column: 9)
!5237 = !DILocation(line: 2383, column: 12, scope: !5236)
!5238 = !DILocation(line: 2383, column: 21, scope: !5236)
!5239 = !DILocation(line: 2383, column: 25, scope: !5236)
!5240 = !DILocation(line: 2383, column: 30, scope: !5241)
!5241 = !DILexicalBlockFile(scope: !5236, file: !898, discriminator: 1)
!5242 = !DILocation(line: 2383, column: 33, scope: !5241)
!5243 = !DILocation(line: 2383, column: 48, scope: !5241)
!5244 = !DILocation(line: 2383, column: 9, scope: !5241)
!5245 = !DILocation(line: 2384, column: 27, scope: !5236)
!5246 = !DILocation(line: 2384, column: 30, scope: !5236)
!5247 = !DILocation(line: 2384, column: 9, scope: !5236)
!5248 = !DILocation(line: 2384, column: 16, scope: !5236)
!5249 = !DILocation(line: 2384, column: 25, scope: !5236)
!5250 = !DILocation(line: 2386, column: 9, scope: !5236)
!5251 = !DILocation(line: 2386, column: 16, scope: !5236)
!5252 = !DILocation(line: 2386, column: 25, scope: !5236)
!5253 = !DILocation(line: 2388, column: 9, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2388, column: 9)
!5255 = !DILocation(line: 2388, column: 12, scope: !5254)
!5256 = !DILocation(line: 2388, column: 23, scope: !5254)
!5257 = !DILocation(line: 2388, column: 49, scope: !5254)
!5258 = !DILocation(line: 2388, column: 53, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5254, file: !898, discriminator: 1)
!5260 = !DILocation(line: 2388, column: 56, scope: !5259)
!5261 = !DILocation(line: 2388, column: 72, scope: !5259)
!5262 = !DILocation(line: 2388, column: 75, scope: !5259)
!5263 = !DILocation(line: 2388, column: 69, scope: !5259)
!5264 = !DILocation(line: 2388, column: 83, scope: !5259)
!5265 = !DILocation(line: 2389, column: 53, scope: !5254)
!5266 = !DILocation(line: 2389, column: 56, scope: !5254)
!5267 = !DILocation(line: 2389, column: 71, scope: !5254)
!5268 = !DILocation(line: 2388, column: 9, scope: !5192)
!5269 = !DILocation(line: 2390, column: 25, scope: !5254)
!5270 = !DILocation(line: 2390, column: 9, scope: !5254)
!5271 = !DILocation(line: 2392, column: 25, scope: !5254)
!5272 = !DILocation(line: 2393, column: 52, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5114, file: !898, line: 2393, column: 9)
!5274 = !DILocation(line: 2393, column: 59, scope: !5273)
!5275 = !DILocation(line: 2393, column: 16, scope: !5273)
!5276 = !DILocation(line: 2393, column: 14, scope: !5273)
!5277 = !DILocation(line: 2393, column: 77, scope: !5273)
!5278 = !DILocation(line: 2393, column: 9, scope: !5114)
!5279 = !DILocation(line: 2394, column: 16, scope: !5273)
!5280 = !DILocation(line: 2394, column: 9, scope: !5273)
!5281 = !DILocation(line: 2396, column: 5, scope: !5114)
!5282 = !DILocation(line: 2397, column: 1, scope: !5114)
!5283 = distinct !DISubprogram(name: "filter_frame_fixed", scope: !898, file: !898, line: 2063, type: !5115, isLocal: true, isDefinition: true, scopeLine: 2064, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!5284 = !DILocalVariable(name: "s", arg: 1, scope: !5283, file: !898, line: 2063, type: !1094)
!5285 = !DILocation(line: 2063, column: 47, scope: !5283)
!5286 = !DILocalVariable(name: "frame", arg: 2, scope: !5283, file: !898, line: 2063, type: !1403)
!5287 = !DILocation(line: 2063, column: 59, scope: !5283)
!5288 = !DILocalVariable(name: "avctx", scope: !5283, file: !898, line: 2065, type: !1099)
!5289 = !DILocation(line: 2065, column: 21, scope: !5283)
!5290 = !DILocation(line: 2065, column: 29, scope: !5283)
!5291 = !DILocation(line: 2065, column: 32, scope: !5283)
!5292 = !DILocalVariable(name: "dca", scope: !5283, file: !898, line: 2066, type: !2856)
!5293 = !DILocation(line: 2066, column: 17, scope: !5283)
!5294 = !DILocation(line: 2066, column: 23, scope: !5283)
!5295 = !DILocation(line: 2066, column: 30, scope: !5283)
!5296 = !DILocalVariable(name: "i", scope: !5283, file: !898, line: 2067, type: !1027)
!5297 = !DILocation(line: 2067, column: 9, scope: !5283)
!5298 = !DILocalVariable(name: "n", scope: !5283, file: !898, line: 2067, type: !1027)
!5299 = !DILocation(line: 2067, column: 12, scope: !5283)
!5300 = !DILocalVariable(name: "ch", scope: !5283, file: !898, line: 2067, type: !1027)
!5301 = !DILocation(line: 2067, column: 15, scope: !5283)
!5302 = !DILocalVariable(name: "ret", scope: !5283, file: !898, line: 2067, type: !1027)
!5303 = !DILocation(line: 2067, column: 19, scope: !5283)
!5304 = !DILocalVariable(name: "spkr", scope: !5283, file: !898, line: 2067, type: !1027)
!5305 = !DILocation(line: 2067, column: 24, scope: !5283)
!5306 = !DILocalVariable(name: "nsamples", scope: !5283, file: !898, line: 2067, type: !1027)
!5307 = !DILocation(line: 2067, column: 30, scope: !5283)
!5308 = !DILocation(line: 2070, column: 11, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2070, column: 9)
!5310 = !DILocation(line: 2070, column: 16, scope: !5309)
!5311 = !DILocation(line: 2070, column: 23, scope: !5309)
!5312 = !DILocation(line: 2070, column: 31, scope: !5309)
!5313 = !DILocation(line: 2070, column: 66, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5309, file: !898, discriminator: 1)
!5315 = !DILocation(line: 2070, column: 41, scope: !5314)
!5316 = !DILocation(line: 2070, column: 39, scope: !5314)
!5317 = !DILocation(line: 2070, column: 73, scope: !5314)
!5318 = !DILocation(line: 2070, column: 9, scope: !5314)
!5319 = !DILocation(line: 2071, column: 16, scope: !5309)
!5320 = !DILocation(line: 2071, column: 9, scope: !5309)
!5321 = !DILocation(line: 2073, column: 26, scope: !5283)
!5322 = !DILocation(line: 2073, column: 29, scope: !5283)
!5323 = !DILocation(line: 2073, column: 5, scope: !5283)
!5324 = !DILocation(line: 2073, column: 12, scope: !5283)
!5325 = !DILocation(line: 2073, column: 24, scope: !5283)
!5326 = !DILocation(line: 2074, column: 5, scope: !5283)
!5327 = !DILocation(line: 2074, column: 12, scope: !5283)
!5328 = !DILocation(line: 2074, column: 23, scope: !5283)
!5329 = !DILocation(line: 2075, column: 5, scope: !5283)
!5330 = !DILocation(line: 2075, column: 12, scope: !5283)
!5331 = !DILocation(line: 2075, column: 32, scope: !5283)
!5332 = !DILocation(line: 2077, column: 36, scope: !5283)
!5333 = !DILocation(line: 2077, column: 39, scope: !5283)
!5334 = !DILocation(line: 2077, column: 34, scope: !5283)
!5335 = !DILocation(line: 2077, column: 5, scope: !5283)
!5336 = !DILocation(line: 2077, column: 12, scope: !5283)
!5337 = !DILocation(line: 2077, column: 23, scope: !5283)
!5338 = !DILocation(line: 2078, column: 30, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2078, column: 9)
!5340 = !DILocation(line: 2078, column: 37, scope: !5339)
!5341 = !DILocation(line: 2078, column: 16, scope: !5339)
!5342 = !DILocation(line: 2078, column: 14, scope: !5339)
!5343 = !DILocation(line: 2078, column: 48, scope: !5339)
!5344 = !DILocation(line: 2078, column: 9, scope: !5283)
!5345 = !DILocation(line: 2079, column: 16, scope: !5339)
!5346 = !DILocation(line: 2079, column: 9, scope: !5339)
!5347 = !DILocation(line: 2082, column: 9, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2082, column: 9)
!5349 = !DILocation(line: 2082, column: 12, scope: !5348)
!5350 = !DILocation(line: 2082, column: 22, scope: !5348)
!5351 = !DILocation(line: 2082, column: 26, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !5348, file: !898, discriminator: 1)
!5353 = !DILocation(line: 2082, column: 29, scope: !5352)
!5354 = !DILocation(line: 2082, column: 44, scope: !5352)
!5355 = !DILocation(line: 2083, column: 9, scope: !5348)
!5356 = !DILocation(line: 2083, column: 12, scope: !5352)
!5357 = !DILocation(line: 2083, column: 15, scope: !5352)
!5358 = !DILocation(line: 2083, column: 26, scope: !5352)
!5359 = !DILocation(line: 2082, column: 9, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !5283, file: !898, discriminator: 2)
!5361 = !DILocation(line: 2084, column: 9, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5348, file: !898, line: 2083, column: 45)
!5363 = !DILocation(line: 2084, column: 12, scope: !5362)
!5364 = !DILocation(line: 2084, column: 20, scope: !5362)
!5365 = !DILocation(line: 2084, column: 33, scope: !5362)
!5366 = !DILocation(line: 2084, column: 36, scope: !5362)
!5367 = !DILocation(line: 2085, column: 33, scope: !5362)
!5368 = !DILocation(line: 2085, column: 36, scope: !5362)
!5369 = !DILocation(line: 2086, column: 33, scope: !5362)
!5370 = !DILocation(line: 2086, column: 36, scope: !5362)
!5371 = !DILocation(line: 2087, column: 33, scope: !5362)
!5372 = !DILocation(line: 2089, column: 5, scope: !5362)
!5373 = !DILocation(line: 2092, column: 10, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2092, column: 9)
!5375 = !DILocation(line: 2092, column: 13, scope: !5374)
!5376 = !DILocation(line: 2092, column: 28, scope: !5374)
!5377 = !DILocation(line: 2093, column: 9, scope: !5374)
!5378 = !DILocation(line: 2093, column: 12, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !5374, file: !898, discriminator: 1)
!5380 = !DILocation(line: 2093, column: 15, scope: !5379)
!5381 = !DILocation(line: 2092, column: 9, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5283, file: !898, discriminator: 1)
!5383 = !DILocalVariable(name: "scale_inv", scope: !5384, file: !898, line: 2094, type: !1027)
!5384 = distinct !DILexicalBlock(scope: !5374, file: !898, line: 2093, column: 35)
!5385 = !DILocation(line: 2094, column: 13, scope: !5384)
!5386 = !DILocation(line: 2094, column: 25, scope: !5384)
!5387 = !DILocation(line: 2094, column: 28, scope: !5384)
!5388 = !DILocalVariable(name: "coeff_ptr", scope: !5384, file: !898, line: 2095, type: !1385)
!5389 = !DILocation(line: 2095, column: 14, scope: !5384)
!5390 = !DILocation(line: 2095, column: 26, scope: !5384)
!5391 = !DILocation(line: 2095, column: 29, scope: !5384)
!5392 = !DILocalVariable(name: "xch_base", scope: !5384, file: !898, line: 2096, type: !1027)
!5393 = !DILocation(line: 2096, column: 13, scope: !5384)
!5394 = !DILocation(line: 2096, column: 40, scope: !5384)
!5395 = !DILocation(line: 2096, column: 43, scope: !5384)
!5396 = !DILocation(line: 2096, column: 24, scope: !5384)
!5397 = !DILocation(line: 2100, column: 19, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5384, file: !898, line: 2100, column: 9)
!5399 = !DILocation(line: 2100, column: 14, scope: !5398)
!5400 = !DILocation(line: 2100, column: 24, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5402, file: !898, discriminator: 1)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !898, line: 2100, column: 9)
!5403 = !DILocation(line: 2100, column: 31, scope: !5401)
!5404 = !DILocation(line: 2100, column: 34, scope: !5401)
!5405 = !DILocation(line: 2100, column: 29, scope: !5401)
!5406 = !DILocation(line: 2100, column: 9, scope: !5401)
!5407 = !DILocation(line: 2101, column: 17, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !898, line: 2101, column: 17)
!5409 = distinct !DILexicalBlock(scope: !5402, file: !898, line: 2100, column: 59)
!5410 = !DILocation(line: 2101, column: 20, scope: !5408)
!5411 = !DILocation(line: 2101, column: 44, scope: !5408)
!5412 = !DILocation(line: 2101, column: 41, scope: !5408)
!5413 = !DILocation(line: 2101, column: 35, scope: !5408)
!5414 = !DILocation(line: 2101, column: 17, scope: !5409)
!5415 = !DILocation(line: 2102, column: 17, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5408, file: !898, line: 2101, column: 51)
!5417 = !DILocation(line: 2102, column: 20, scope: !5416)
!5418 = !DILocation(line: 2102, column: 28, scope: !5416)
!5419 = !DILocation(line: 2102, column: 61, scope: !5416)
!5420 = !DILocation(line: 2102, column: 43, scope: !5416)
!5421 = !DILocation(line: 2102, column: 46, scope: !5416)
!5422 = !DILocation(line: 2103, column: 43, scope: !5416)
!5423 = !DILocation(line: 2103, column: 54, scope: !5416)
!5424 = !DILocation(line: 2104, column: 13, scope: !5416)
!5425 = !DILocation(line: 2105, column: 9, scope: !5409)
!5426 = !DILocation(line: 2100, column: 55, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !5402, file: !898, discriminator: 2)
!5428 = !DILocation(line: 2100, column: 9, scope: !5427)
!5429 = distinct !{!5429, !5430}
!5430 = !DILocation(line: 2100, column: 9, scope: !5384)
!5431 = !DILocation(line: 2108, column: 19, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5384, file: !898, line: 2108, column: 9)
!5433 = !DILocation(line: 2108, column: 17, scope: !5432)
!5434 = !DILocation(line: 2108, column: 14, scope: !5432)
!5435 = !DILocation(line: 2108, column: 29, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5437, file: !898, discriminator: 1)
!5437 = distinct !DILexicalBlock(scope: !5432, file: !898, line: 2108, column: 9)
!5438 = !DILocation(line: 2108, column: 34, scope: !5436)
!5439 = !DILocation(line: 2108, column: 37, scope: !5436)
!5440 = !DILocation(line: 2108, column: 32, scope: !5436)
!5441 = !DILocation(line: 2108, column: 9, scope: !5436)
!5442 = !DILocalVariable(name: "src_spkr", scope: !5443, file: !898, line: 2109, type: !1027)
!5443 = distinct !DILexicalBlock(scope: !5437, file: !898, line: 2108, column: 54)
!5444 = !DILocation(line: 2109, column: 17, scope: !5443)
!5445 = !DILocation(line: 2109, column: 47, scope: !5443)
!5446 = !DILocation(line: 2109, column: 50, scope: !5443)
!5447 = !DILocation(line: 2109, column: 28, scope: !5443)
!5448 = !DILocation(line: 2110, column: 17, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5443, file: !898, line: 2110, column: 17)
!5450 = !DILocation(line: 2110, column: 26, scope: !5449)
!5451 = !DILocation(line: 2110, column: 17, scope: !5443)
!5452 = !DILocation(line: 2111, column: 17, scope: !5449)
!5453 = !DILocation(line: 2112, column: 23, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5443, file: !898, line: 2112, column: 13)
!5455 = !DILocation(line: 2112, column: 18, scope: !5454)
!5456 = !DILocation(line: 2112, column: 28, scope: !5457)
!5457 = !DILexicalBlockFile(scope: !5458, file: !898, discriminator: 1)
!5458 = distinct !DILexicalBlock(scope: !5454, file: !898, line: 2112, column: 13)
!5459 = !DILocation(line: 2112, column: 35, scope: !5457)
!5460 = !DILocation(line: 2112, column: 38, scope: !5457)
!5461 = !DILocation(line: 2112, column: 33, scope: !5457)
!5462 = !DILocation(line: 2112, column: 13, scope: !5457)
!5463 = !DILocation(line: 2113, column: 39, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !898, line: 2113, column: 21)
!5465 = distinct !DILexicalBlock(scope: !5458, file: !898, line: 2112, column: 63)
!5466 = !DILocation(line: 2113, column: 44, scope: !5464)
!5467 = !DILocation(line: 2113, column: 42, scope: !5464)
!5468 = !DILocation(line: 2113, column: 21, scope: !5464)
!5469 = !DILocation(line: 2113, column: 24, scope: !5464)
!5470 = !DILocation(line: 2113, column: 63, scope: !5464)
!5471 = !DILocation(line: 2113, column: 60, scope: !5464)
!5472 = !DILocation(line: 2113, column: 54, scope: !5464)
!5473 = !DILocation(line: 2113, column: 21, scope: !5465)
!5474 = !DILocalVariable(name: "coeff", scope: !5475, file: !898, line: 2114, type: !1027)
!5475 = distinct !DILexicalBlock(scope: !5464, file: !898, line: 2113, column: 70)
!5476 = !DILocation(line: 2114, column: 25, scope: !5475)
!5477 = !DILocation(line: 2114, column: 49, scope: !5475)
!5478 = !DILocation(line: 2114, column: 39, scope: !5475)
!5479 = !DILocation(line: 2114, column: 53, scope: !5475)
!5480 = !DILocation(line: 2114, column: 33, scope: !5475)
!5481 = !DILocation(line: 2115, column: 25, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5475, file: !898, line: 2115, column: 25)
!5483 = !DILocation(line: 2115, column: 25, scope: !5475)
!5484 = !DILocation(line: 2116, column: 25, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5482, file: !898, line: 2115, column: 32)
!5486 = !DILocation(line: 2116, column: 28, scope: !5485)
!5487 = !DILocation(line: 2116, column: 36, scope: !5485)
!5488 = !DILocation(line: 2116, column: 63, scope: !5485)
!5489 = !DILocation(line: 2116, column: 45, scope: !5485)
!5490 = !DILocation(line: 2116, column: 48, scope: !5485)
!5491 = !DILocation(line: 2117, column: 63, scope: !5485)
!5492 = !DILocation(line: 2117, column: 45, scope: !5485)
!5493 = !DILocation(line: 2117, column: 48, scope: !5485)
!5494 = !DILocation(line: 2118, column: 45, scope: !5485)
!5495 = !DILocation(line: 2118, column: 52, scope: !5485)
!5496 = !DILocation(line: 2119, column: 21, scope: !5485)
!5497 = !DILocation(line: 2120, column: 17, scope: !5475)
!5498 = !DILocation(line: 2121, column: 13, scope: !5465)
!5499 = !DILocation(line: 2112, column: 59, scope: !5500)
!5500 = !DILexicalBlockFile(scope: !5458, file: !898, discriminator: 2)
!5501 = !DILocation(line: 2112, column: 13, scope: !5500)
!5502 = distinct !{!5502, !5503}
!5503 = !DILocation(line: 2112, column: 13, scope: !5443)
!5504 = !DILocation(line: 2122, column: 9, scope: !5443)
!5505 = !DILocation(line: 2108, column: 50, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5437, file: !898, discriminator: 2)
!5507 = !DILocation(line: 2108, column: 9, scope: !5506)
!5508 = distinct !{!5508, !5509}
!5509 = !DILocation(line: 2108, column: 9, scope: !5384)
!5510 = !DILocation(line: 2123, column: 5, scope: !5384)
!5511 = !DILocation(line: 2125, column: 11, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2125, column: 9)
!5513 = !DILocation(line: 2125, column: 14, scope: !5512)
!5514 = !DILocation(line: 2125, column: 29, scope: !5512)
!5515 = !DILocation(line: 2125, column: 9, scope: !5283)
!5516 = !DILocation(line: 2127, column: 14, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !898, line: 2127, column: 13)
!5518 = distinct !DILexicalBlock(scope: !5512, file: !898, line: 2125, column: 78)
!5519 = !DILocation(line: 2127, column: 17, scope: !5517)
!5520 = !DILocation(line: 2127, column: 31, scope: !5517)
!5521 = !DILocation(line: 2127, column: 34, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5517, file: !898, discriminator: 1)
!5523 = !DILocation(line: 2127, column: 37, scope: !5522)
!5524 = !DILocation(line: 2127, column: 48, scope: !5522)
!5525 = !DILocation(line: 2128, column: 13, scope: !5517)
!5526 = !DILocation(line: 2128, column: 16, scope: !5522)
!5527 = !DILocation(line: 2128, column: 19, scope: !5522)
!5528 = !DILocation(line: 2128, column: 30, scope: !5522)
!5529 = !DILocation(line: 2127, column: 13, scope: !5530)
!5530 = !DILexicalBlockFile(scope: !5518, file: !898, discriminator: 2)
!5531 = !DILocation(line: 2129, column: 13, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5517, file: !898, line: 2128, column: 59)
!5533 = !DILocation(line: 2129, column: 16, scope: !5532)
!5534 = !DILocation(line: 2129, column: 27, scope: !5532)
!5535 = !DILocation(line: 2129, column: 45, scope: !5532)
!5536 = !DILocation(line: 2129, column: 48, scope: !5532)
!5537 = !DILocation(line: 2130, column: 45, scope: !5532)
!5538 = !DILocation(line: 2130, column: 48, scope: !5532)
!5539 = !DILocation(line: 2131, column: 45, scope: !5532)
!5540 = !DILocation(line: 2132, column: 9, scope: !5532)
!5541 = !DILocation(line: 2135, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5518, file: !898, line: 2135, column: 13)
!5543 = !DILocation(line: 2135, column: 16, scope: !5542)
!5544 = !DILocation(line: 2135, column: 33, scope: !5542)
!5545 = !DILocation(line: 2135, column: 36, scope: !5546)
!5546 = !DILexicalBlockFile(scope: !5542, file: !898, discriminator: 1)
!5547 = !DILocation(line: 2135, column: 39, scope: !5546)
!5548 = !DILocation(line: 2135, column: 50, scope: !5546)
!5549 = !DILocation(line: 2135, column: 13, scope: !5546)
!5550 = !DILocation(line: 2136, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5542, file: !898, line: 2135, column: 69)
!5552 = !DILocation(line: 2136, column: 16, scope: !5551)
!5553 = !DILocation(line: 2136, column: 27, scope: !5551)
!5554 = !DILocation(line: 2136, column: 45, scope: !5551)
!5555 = !DILocation(line: 2136, column: 48, scope: !5551)
!5556 = !DILocation(line: 2137, column: 45, scope: !5551)
!5557 = !DILocation(line: 2137, column: 48, scope: !5551)
!5558 = !DILocation(line: 2138, column: 45, scope: !5551)
!5559 = !DILocation(line: 2139, column: 9, scope: !5551)
!5560 = !DILocation(line: 2140, column: 5, scope: !5518)
!5561 = !DILocation(line: 2143, column: 9, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2143, column: 9)
!5563 = !DILocation(line: 2143, column: 12, scope: !5562)
!5564 = !DILocation(line: 2143, column: 28, scope: !5562)
!5565 = !DILocation(line: 2143, column: 31, scope: !5562)
!5566 = !DILocation(line: 2143, column: 25, scope: !5562)
!5567 = !DILocation(line: 2143, column: 9, scope: !5283)
!5568 = !DILocation(line: 2144, column: 40, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5562, file: !898, line: 2143, column: 40)
!5570 = !DILocation(line: 2144, column: 43, scope: !5569)
!5571 = !DILocation(line: 2145, column: 40, scope: !5569)
!5572 = !DILocation(line: 2145, column: 43, scope: !5569)
!5573 = !DILocation(line: 2146, column: 40, scope: !5569)
!5574 = !DILocation(line: 2146, column: 43, scope: !5569)
!5575 = !DILocation(line: 2147, column: 40, scope: !5569)
!5576 = !DILocation(line: 2147, column: 50, scope: !5569)
!5577 = !DILocation(line: 2147, column: 53, scope: !5569)
!5578 = !DILocation(line: 2144, column: 9, scope: !5569)
!5579 = !DILocation(line: 2148, column: 5, scope: !5569)
!5580 = !DILocation(line: 2150, column: 12, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5283, file: !898, line: 2150, column: 5)
!5582 = !DILocation(line: 2150, column: 10, scope: !5581)
!5583 = !DILocation(line: 2150, column: 17, scope: !5584)
!5584 = !DILexicalBlockFile(scope: !5585, file: !898, discriminator: 1)
!5585 = distinct !DILexicalBlock(scope: !5581, file: !898, line: 2150, column: 5)
!5586 = !DILocation(line: 2150, column: 21, scope: !5584)
!5587 = !DILocation(line: 2150, column: 28, scope: !5584)
!5588 = !DILocation(line: 2150, column: 19, scope: !5584)
!5589 = !DILocation(line: 2150, column: 5, scope: !5584)
!5590 = !DILocalVariable(name: "samples", scope: !5591, file: !898, line: 2151, type: !1029)
!5591 = distinct !DILexicalBlock(scope: !5585, file: !898, line: 2150, column: 43)
!5592 = !DILocation(line: 2151, column: 18, scope: !5591)
!5593 = !DILocation(line: 2151, column: 58, scope: !5591)
!5594 = !DILocation(line: 2151, column: 46, scope: !5591)
!5595 = !DILocation(line: 2151, column: 49, scope: !5591)
!5596 = !DILocation(line: 2151, column: 28, scope: !5591)
!5597 = !DILocation(line: 2151, column: 31, scope: !5591)
!5598 = !DILocalVariable(name: "plane", scope: !5591, file: !898, line: 2152, type: !1029)
!5599 = !DILocation(line: 2152, column: 18, scope: !5591)
!5600 = !DILocation(line: 2152, column: 58, scope: !5591)
!5601 = !DILocation(line: 2152, column: 37, scope: !5591)
!5602 = !DILocation(line: 2152, column: 44, scope: !5591)
!5603 = !DILocation(line: 2152, column: 26, scope: !5591)
!5604 = !DILocation(line: 2153, column: 16, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5591, file: !898, line: 2153, column: 9)
!5606 = !DILocation(line: 2153, column: 14, scope: !5605)
!5607 = !DILocation(line: 2153, column: 21, scope: !5608)
!5608 = !DILexicalBlockFile(scope: !5609, file: !898, discriminator: 1)
!5609 = distinct !DILexicalBlock(scope: !5605, file: !898, line: 2153, column: 9)
!5610 = !DILocation(line: 2153, column: 25, scope: !5608)
!5611 = !DILocation(line: 2153, column: 23, scope: !5608)
!5612 = !DILocation(line: 2153, column: 9, scope: !5608)
!5613 = !DILocation(line: 2154, column: 39, scope: !5609)
!5614 = !DILocation(line: 2154, column: 31, scope: !5609)
!5615 = !DILocation(line: 2154, column: 24, scope: !5609)
!5616 = !DILocation(line: 2154, column: 43, scope: !5609)
!5617 = !DILocation(line: 2154, column: 19, scope: !5609)
!5618 = !DILocation(line: 2154, column: 13, scope: !5609)
!5619 = !DILocation(line: 2154, column: 22, scope: !5609)
!5620 = !DILocation(line: 2153, column: 36, scope: !5621)
!5621 = !DILexicalBlockFile(scope: !5609, file: !898, discriminator: 2)
!5622 = !DILocation(line: 2153, column: 9, scope: !5621)
!5623 = distinct !{!5623, !5624}
!5624 = !DILocation(line: 2153, column: 9, scope: !5591)
!5625 = !DILocation(line: 2155, column: 5, scope: !5591)
!5626 = !DILocation(line: 2150, column: 39, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5585, file: !898, discriminator: 2)
!5628 = !DILocation(line: 2150, column: 5, scope: !5627)
!5629 = distinct !{!5629, !5630}
!5630 = !DILocation(line: 2150, column: 5, scope: !5283)
!5631 = !DILocation(line: 2157, column: 5, scope: !5283)
!5632 = !DILocation(line: 2158, column: 1, scope: !5283)
!5633 = distinct !DISubprogram(name: "filter_frame_float", scope: !898, file: !898, line: 2160, type: !5115, isLocal: true, isDefinition: true, scopeLine: 2161, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!5634 = !DILocation(line: 342, column: 96, scope: !4668, inlinedAt: !5635)
!5635 = distinct !DILocation(line: 2186, column: 17, scope: !5633)
!5636 = !DILocalVariable(name: "s", arg: 1, scope: !5633, file: !898, line: 2160, type: !1094)
!5637 = !DILocation(line: 2160, column: 47, scope: !5633)
!5638 = !DILocalVariable(name: "frame", arg: 2, scope: !5633, file: !898, line: 2160, type: !1403)
!5639 = !DILocation(line: 2160, column: 59, scope: !5633)
!5640 = !DILocalVariable(name: "avctx", scope: !5633, file: !898, line: 2162, type: !1099)
!5641 = !DILocation(line: 2162, column: 21, scope: !5633)
!5642 = !DILocation(line: 2162, column: 29, scope: !5633)
!5643 = !DILocation(line: 2162, column: 32, scope: !5633)
!5644 = !DILocalVariable(name: "x96_nchannels", scope: !5633, file: !898, line: 2163, type: !1027)
!5645 = !DILocation(line: 2163, column: 9, scope: !5633)
!5646 = !DILocalVariable(name: "x96_synth", scope: !5633, file: !898, line: 2163, type: !1027)
!5647 = !DILocation(line: 2163, column: 28, scope: !5633)
!5648 = !DILocalVariable(name: "i", scope: !5633, file: !898, line: 2164, type: !1027)
!5649 = !DILocation(line: 2164, column: 9, scope: !5633)
!5650 = !DILocalVariable(name: "n", scope: !5633, file: !898, line: 2164, type: !1027)
!5651 = !DILocation(line: 2164, column: 12, scope: !5633)
!5652 = !DILocalVariable(name: "ch", scope: !5633, file: !898, line: 2164, type: !1027)
!5653 = !DILocation(line: 2164, column: 15, scope: !5633)
!5654 = !DILocalVariable(name: "ret", scope: !5633, file: !898, line: 2164, type: !1027)
!5655 = !DILocation(line: 2164, column: 19, scope: !5633)
!5656 = !DILocalVariable(name: "spkr", scope: !5633, file: !898, line: 2164, type: !1027)
!5657 = !DILocation(line: 2164, column: 24, scope: !5633)
!5658 = !DILocalVariable(name: "nsamples", scope: !5633, file: !898, line: 2164, type: !1027)
!5659 = !DILocation(line: 2164, column: 30, scope: !5633)
!5660 = !DILocalVariable(name: "nchannels", scope: !5633, file: !898, line: 2164, type: !1027)
!5661 = !DILocation(line: 2164, column: 40, scope: !5633)
!5662 = !DILocalVariable(name: "output_samples", scope: !5633, file: !898, line: 2165, type: !5663)
!5663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 2048, align: 64, elements: !1963)
!5664 = !DILocation(line: 2165, column: 12, scope: !5633)
!5665 = !DILocalVariable(name: "ptr", scope: !5633, file: !898, line: 2165, type: !1062)
!5666 = !DILocation(line: 2165, column: 58, scope: !5633)
!5667 = !DILocalVariable(name: "filter_coeff", scope: !5633, file: !898, line: 2166, type: !1976)
!5668 = !DILocation(line: 2166, column: 18, scope: !5633)
!5669 = !DILocation(line: 2168, column: 9, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2168, column: 9)
!5671 = !DILocation(line: 2168, column: 12, scope: !5670)
!5672 = !DILocation(line: 2168, column: 27, scope: !5670)
!5673 = !DILocation(line: 2168, column: 9, scope: !5633)
!5674 = !DILocation(line: 2169, column: 25, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !898, line: 2168, column: 59)
!5676 = !DILocation(line: 2169, column: 28, scope: !5675)
!5677 = !DILocation(line: 2169, column: 23, scope: !5675)
!5678 = !DILocation(line: 2170, column: 19, scope: !5675)
!5679 = !DILocation(line: 2171, column: 5, scope: !5675)
!5680 = !DILocation(line: 2173, column: 26, scope: !5633)
!5681 = !DILocation(line: 2173, column: 29, scope: !5633)
!5682 = !DILocation(line: 2173, column: 44, scope: !5633)
!5683 = !DILocation(line: 2173, column: 41, scope: !5633)
!5684 = !DILocation(line: 2173, column: 5, scope: !5633)
!5685 = !DILocation(line: 2173, column: 12, scope: !5633)
!5686 = !DILocation(line: 2173, column: 24, scope: !5633)
!5687 = !DILocation(line: 2174, column: 5, scope: !5633)
!5688 = !DILocation(line: 2174, column: 12, scope: !5633)
!5689 = !DILocation(line: 2174, column: 23, scope: !5633)
!5690 = !DILocation(line: 2175, column: 5, scope: !5633)
!5691 = !DILocation(line: 2175, column: 12, scope: !5633)
!5692 = !DILocation(line: 2175, column: 32, scope: !5633)
!5693 = !DILocation(line: 2177, column: 37, scope: !5633)
!5694 = !DILocation(line: 2177, column: 40, scope: !5633)
!5695 = !DILocation(line: 2177, column: 51, scope: !5633)
!5696 = !DILocation(line: 2177, column: 60, scope: !5633)
!5697 = !DILocation(line: 2177, column: 57, scope: !5633)
!5698 = !DILocation(line: 2177, column: 34, scope: !5633)
!5699 = !DILocation(line: 2177, column: 5, scope: !5633)
!5700 = !DILocation(line: 2177, column: 12, scope: !5633)
!5701 = !DILocation(line: 2177, column: 23, scope: !5633)
!5702 = !DILocation(line: 2178, column: 30, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2178, column: 9)
!5704 = !DILocation(line: 2178, column: 37, scope: !5703)
!5705 = !DILocation(line: 2178, column: 16, scope: !5703)
!5706 = !DILocation(line: 2178, column: 14, scope: !5703)
!5707 = !DILocation(line: 2178, column: 48, scope: !5703)
!5708 = !DILocation(line: 2178, column: 9, scope: !5633)
!5709 = !DILocation(line: 2179, column: 16, scope: !5703)
!5710 = !DILocation(line: 2179, column: 9, scope: !5703)
!5711 = !DILocation(line: 2182, column: 12, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2182, column: 5)
!5713 = !DILocation(line: 2182, column: 10, scope: !5712)
!5714 = !DILocation(line: 2182, column: 17, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5716, file: !898, discriminator: 1)
!5716 = distinct !DILexicalBlock(scope: !5712, file: !898, line: 2182, column: 5)
!5717 = !DILocation(line: 2182, column: 21, scope: !5715)
!5718 = !DILocation(line: 2182, column: 28, scope: !5715)
!5719 = !DILocation(line: 2182, column: 19, scope: !5715)
!5720 = !DILocation(line: 2182, column: 5, scope: !5715)
!5721 = !DILocation(line: 2183, column: 72, scope: !5716)
!5722 = !DILocation(line: 2183, column: 51, scope: !5716)
!5723 = !DILocation(line: 2183, column: 58, scope: !5716)
!5724 = !DILocation(line: 2183, column: 42, scope: !5716)
!5725 = !DILocation(line: 2183, column: 36, scope: !5716)
!5726 = !DILocation(line: 2183, column: 24, scope: !5716)
!5727 = !DILocation(line: 2183, column: 27, scope: !5716)
!5728 = !DILocation(line: 2183, column: 9, scope: !5716)
!5729 = !DILocation(line: 2183, column: 40, scope: !5716)
!5730 = !DILocation(line: 2182, column: 39, scope: !5731)
!5731 = !DILexicalBlockFile(scope: !5716, file: !898, discriminator: 2)
!5732 = !DILocation(line: 2182, column: 5, scope: !5731)
!5733 = distinct !{!5733, !5734}
!5734 = !DILocation(line: 2182, column: 5, scope: !5633)
!5735 = !DILocation(line: 2186, column: 31, scope: !5633)
!5736 = !DILocation(line: 2186, column: 34, scope: !5633)
!5737 = !DILocation(line: 2186, column: 17, scope: !5633)
!5738 = !DILocation(line: 344, column: 11, scope: !4668, inlinedAt: !5635)
!5739 = !DILocation(line: 344, column: 13, scope: !4668, inlinedAt: !5635)
!5740 = !DILocation(line: 344, column: 19, scope: !4668, inlinedAt: !5635)
!5741 = !DILocation(line: 344, column: 7, scope: !4668, inlinedAt: !5635)
!5742 = !DILocation(line: 345, column: 10, scope: !4668, inlinedAt: !5635)
!5743 = !DILocation(line: 345, column: 12, scope: !4668, inlinedAt: !5635)
!5744 = !DILocation(line: 345, column: 30, scope: !4668, inlinedAt: !5635)
!5745 = !DILocation(line: 345, column: 32, scope: !4668, inlinedAt: !5635)
!5746 = !DILocation(line: 345, column: 38, scope: !4668, inlinedAt: !5635)
!5747 = !DILocation(line: 345, column: 26, scope: !4668, inlinedAt: !5635)
!5748 = !DILocation(line: 345, column: 7, scope: !4668, inlinedAt: !5635)
!5749 = !DILocation(line: 346, column: 10, scope: !4668, inlinedAt: !5635)
!5750 = !DILocation(line: 346, column: 15, scope: !4668, inlinedAt: !5635)
!5751 = !DILocation(line: 346, column: 17, scope: !4668, inlinedAt: !5635)
!5752 = !DILocation(line: 346, column: 12, scope: !4668, inlinedAt: !5635)
!5753 = !DILocation(line: 346, column: 24, scope: !4668, inlinedAt: !5635)
!5754 = !DILocation(line: 346, column: 7, scope: !4668, inlinedAt: !5635)
!5755 = !DILocation(line: 347, column: 10, scope: !4668, inlinedAt: !5635)
!5756 = !DILocation(line: 347, column: 12, scope: !4668, inlinedAt: !5635)
!5757 = !DILocation(line: 347, column: 7, scope: !4668, inlinedAt: !5635)
!5758 = !DILocation(line: 348, column: 13, scope: !4668, inlinedAt: !5635)
!5759 = !DILocation(line: 348, column: 18, scope: !4668, inlinedAt: !5635)
!5760 = !DILocation(line: 348, column: 20, scope: !4668, inlinedAt: !5635)
!5761 = !DILocation(line: 348, column: 15, scope: !4668, inlinedAt: !5635)
!5762 = !DILocation(line: 348, column: 28, scope: !4668, inlinedAt: !5635)
!5763 = !DILocation(line: 2186, column: 45, scope: !5633)
!5764 = !DILocation(line: 2186, column: 52, scope: !5633)
!5765 = !DILocation(line: 2186, column: 43, scope: !5633)
!5766 = !DILocation(line: 2186, column: 15, scope: !5633)
!5767 = !DILocation(line: 2187, column: 9, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2187, column: 9)
!5769 = !DILocation(line: 2187, column: 19, scope: !5768)
!5770 = !DILocation(line: 2187, column: 9, scope: !5633)
!5771 = !DILocation(line: 2188, column: 25, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !898, line: 2187, column: 24)
!5773 = !DILocation(line: 2188, column: 28, scope: !5772)
!5774 = !DILocation(line: 2188, column: 24, scope: !5772)
!5775 = !DILocation(line: 2188, column: 44, scope: !5772)
!5776 = !DILocation(line: 2188, column: 47, scope: !5772)
!5777 = !DILocation(line: 2189, column: 24, scope: !5772)
!5778 = !DILocation(line: 2189, column: 35, scope: !5772)
!5779 = !DILocation(line: 2189, column: 33, scope: !5772)
!5780 = !DILocation(line: 2189, column: 45, scope: !5772)
!5781 = !DILocation(line: 2188, column: 9, scope: !5772)
!5782 = !DILocation(line: 2190, column: 14, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5772, file: !898, line: 2190, column: 13)
!5784 = !DILocation(line: 2190, column: 17, scope: !5783)
!5785 = !DILocation(line: 2190, column: 13, scope: !5772)
!5786 = !DILocation(line: 2191, column: 13, scope: !5783)
!5787 = !DILocation(line: 2193, column: 24, scope: !5772)
!5788 = !DILocation(line: 2193, column: 27, scope: !5772)
!5789 = !DILocation(line: 2193, column: 15, scope: !5772)
!5790 = !DILocation(line: 2193, column: 13, scope: !5772)
!5791 = !DILocation(line: 2194, column: 19, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5772, file: !898, line: 2194, column: 9)
!5793 = !DILocation(line: 2194, column: 14, scope: !5792)
!5794 = !DILocation(line: 2194, column: 24, scope: !5795)
!5795 = !DILexicalBlockFile(scope: !5796, file: !898, discriminator: 1)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !898, line: 2194, column: 9)
!5797 = !DILocation(line: 2194, column: 29, scope: !5795)
!5798 = !DILocation(line: 2194, column: 9, scope: !5795)
!5799 = !DILocation(line: 2195, column: 19, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !898, line: 2195, column: 17)
!5801 = distinct !DILexicalBlock(scope: !5796, file: !898, line: 2194, column: 58)
!5802 = !DILocation(line: 2195, column: 22, scope: !5800)
!5803 = !DILocation(line: 2195, column: 39, scope: !5800)
!5804 = !DILocation(line: 2195, column: 36, scope: !5800)
!5805 = !DILocation(line: 2195, column: 30, scope: !5800)
!5806 = !DILocation(line: 2195, column: 17, scope: !5801)
!5807 = !DILocation(line: 2196, column: 17, scope: !5800)
!5808 = !DILocation(line: 2197, column: 32, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5801, file: !898, line: 2197, column: 17)
!5810 = !DILocation(line: 2197, column: 17, scope: !5809)
!5811 = !DILocation(line: 2197, column: 17, scope: !5801)
!5812 = !DILocation(line: 2198, column: 17, scope: !5809)
!5813 = !DILocation(line: 2199, column: 36, scope: !5801)
!5814 = !DILocation(line: 2199, column: 28, scope: !5801)
!5815 = !DILocation(line: 2199, column: 13, scope: !5801)
!5816 = !DILocation(line: 2199, column: 34, scope: !5801)
!5817 = !DILocation(line: 2200, column: 20, scope: !5801)
!5818 = !DILocation(line: 2200, column: 17, scope: !5801)
!5819 = !DILocation(line: 2201, column: 9, scope: !5801)
!5820 = !DILocation(line: 2194, column: 54, scope: !5821)
!5821 = !DILexicalBlockFile(scope: !5796, file: !898, discriminator: 2)
!5822 = !DILocation(line: 2194, column: 9, scope: !5821)
!5823 = distinct !{!5823, !5824}
!5824 = !DILocation(line: 2194, column: 9, scope: !5772)
!5825 = !DILocation(line: 2202, column: 5, scope: !5772)
!5826 = !DILocation(line: 2205, column: 21, scope: !5633)
!5827 = !DILocation(line: 2205, column: 24, scope: !5633)
!5828 = !DILocation(line: 2205, column: 5, scope: !5633)
!5829 = !DILocation(line: 2208, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2208, column: 9)
!5831 = !DILocation(line: 2208, column: 9, scope: !5633)
!5832 = !DILocation(line: 2209, column: 22, scope: !5830)
!5833 = !DILocation(line: 2209, column: 9, scope: !5830)
!5834 = !DILocation(line: 2210, column: 14, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !898, line: 2210, column: 14)
!5836 = !DILocation(line: 2210, column: 17, scope: !5835)
!5837 = !DILocation(line: 2210, column: 14, scope: !5830)
!5838 = !DILocation(line: 2211, column: 22, scope: !5835)
!5839 = !DILocation(line: 2211, column: 9, scope: !5835)
!5840 = !DILocation(line: 2213, column: 22, scope: !5835)
!5841 = !DILocation(line: 2216, column: 13, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2216, column: 5)
!5843 = !DILocation(line: 2216, column: 10, scope: !5842)
!5844 = !DILocation(line: 2216, column: 18, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !5846, file: !898, discriminator: 1)
!5846 = distinct !DILexicalBlock(scope: !5842, file: !898, line: 2216, column: 5)
!5847 = !DILocation(line: 2216, column: 23, scope: !5845)
!5848 = !DILocation(line: 2216, column: 26, scope: !5845)
!5849 = !DILocation(line: 2216, column: 21, scope: !5845)
!5850 = !DILocation(line: 2216, column: 5, scope: !5845)
!5851 = !DILocation(line: 2218, column: 35, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5846, file: !898, line: 2216, column: 43)
!5853 = !DILocation(line: 2218, column: 38, scope: !5852)
!5854 = !DILocation(line: 2218, column: 16, scope: !5852)
!5855 = !DILocation(line: 2218, column: 14, scope: !5852)
!5856 = !DILocation(line: 2219, column: 13, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5852, file: !898, line: 2219, column: 13)
!5858 = !DILocation(line: 2219, column: 18, scope: !5857)
!5859 = !DILocation(line: 2219, column: 13, scope: !5852)
!5860 = !DILocation(line: 2220, column: 13, scope: !5857)
!5861 = !DILocation(line: 2223, column: 34, scope: !5852)
!5862 = !DILocation(line: 2223, column: 9, scope: !5852)
!5863 = !DILocation(line: 2223, column: 12, scope: !5852)
!5864 = !DILocation(line: 2223, column: 20, scope: !5852)
!5865 = !DILocation(line: 2224, column: 14, scope: !5852)
!5866 = !DILocation(line: 2224, column: 17, scope: !5852)
!5867 = !DILocation(line: 2225, column: 23, scope: !5852)
!5868 = !DILocation(line: 2225, column: 14, scope: !5852)
!5869 = !DILocation(line: 2225, column: 17, scope: !5852)
!5870 = !DILocation(line: 2226, column: 28, scope: !5852)
!5871 = !DILocation(line: 2226, column: 13, scope: !5852)
!5872 = !DILocation(line: 2227, column: 32, scope: !5852)
!5873 = !DILocation(line: 2227, column: 13, scope: !5852)
!5874 = !DILocation(line: 2227, column: 16, scope: !5852)
!5875 = !DILocation(line: 2228, column: 13, scope: !5852)
!5876 = !DILocation(line: 2228, column: 18, scope: !5852)
!5877 = !DILocation(line: 2228, column: 16, scope: !5852)
!5878 = !DILocation(line: 2228, column: 57, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5852, file: !898, discriminator: 1)
!5880 = !DILocation(line: 2228, column: 34, scope: !5879)
!5881 = !DILocation(line: 2228, column: 37, scope: !5879)
!5882 = !DILocation(line: 2228, column: 13, scope: !5879)
!5883 = !DILocation(line: 2228, column: 13, scope: !5884)
!5884 = !DILexicalBlockFile(scope: !5852, file: !898, discriminator: 2)
!5885 = !DILocation(line: 2228, column: 13, scope: !5886)
!5886 = !DILexicalBlockFile(scope: !5852, file: !898, discriminator: 3)
!5887 = !DILocation(line: 2229, column: 28, scope: !5852)
!5888 = !DILocation(line: 2229, column: 13, scope: !5852)
!5889 = !DILocation(line: 2229, column: 16, scope: !5852)
!5890 = !DILocation(line: 2229, column: 32, scope: !5852)
!5891 = !DILocation(line: 2229, column: 34, scope: !5852)
!5892 = !DILocation(line: 2229, column: 38, scope: !5852)
!5893 = !DILocation(line: 2230, column: 29, scope: !5852)
!5894 = !DILocation(line: 2230, column: 14, scope: !5852)
!5895 = !DILocation(line: 2230, column: 17, scope: !5852)
!5896 = !DILocation(line: 2230, column: 33, scope: !5852)
!5897 = !DILocation(line: 2231, column: 28, scope: !5852)
!5898 = !DILocation(line: 2231, column: 13, scope: !5852)
!5899 = !DILocation(line: 2231, column: 16, scope: !5852)
!5900 = !DILocation(line: 2231, column: 32, scope: !5852)
!5901 = !DILocation(line: 2231, column: 34, scope: !5852)
!5902 = !DILocation(line: 2231, column: 38, scope: !5852)
!5903 = !DILocation(line: 2232, column: 13, scope: !5852)
!5904 = !DILocation(line: 2233, column: 13, scope: !5852)
!5905 = !DILocation(line: 2233, column: 16, scope: !5852)
!5906 = !DILocation(line: 2234, column: 32, scope: !5852)
!5907 = !DILocation(line: 2234, column: 30, scope: !5852)
!5908 = !DILocation(line: 2234, column: 23, scope: !5852)
!5909 = !DILocation(line: 2234, column: 20, scope: !5852)
!5910 = !DILocation(line: 2234, column: 18, scope: !5852)
!5911 = !DILocation(line: 2223, column: 9, scope: !5879)
!5912 = !DILocation(line: 2235, column: 5, scope: !5852)
!5913 = !DILocation(line: 2216, column: 39, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !5846, file: !898, discriminator: 2)
!5915 = !DILocation(line: 2216, column: 5, scope: !5914)
!5916 = distinct !{!5916, !5917}
!5917 = !DILocation(line: 2216, column: 5, scope: !5633)
!5918 = !DILocation(line: 2238, column: 9, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2238, column: 9)
!5920 = !DILocation(line: 2238, column: 12, scope: !5919)
!5921 = !DILocation(line: 2238, column: 9, scope: !5633)
!5922 = !DILocalVariable(name: "dec_select", scope: !5923, file: !898, line: 2239, type: !1027)
!5923 = distinct !DILexicalBlock(scope: !5919, file: !898, line: 2238, column: 25)
!5924 = !DILocation(line: 2239, column: 13, scope: !5923)
!5925 = !DILocation(line: 2239, column: 27, scope: !5923)
!5926 = !DILocation(line: 2239, column: 30, scope: !5923)
!5927 = !DILocation(line: 2239, column: 42, scope: !5923)
!5928 = !DILocalVariable(name: "samples", scope: !5923, file: !898, line: 2240, type: !1062)
!5929 = !DILocation(line: 2240, column: 16, scope: !5923)
!5930 = !DILocation(line: 2240, column: 26, scope: !5923)
!5931 = !DILocalVariable(name: "nlfesamples", scope: !5923, file: !898, line: 2241, type: !1027)
!5932 = !DILocation(line: 2241, column: 13, scope: !5923)
!5933 = !DILocation(line: 2241, column: 27, scope: !5923)
!5934 = !DILocation(line: 2241, column: 30, scope: !5923)
!5935 = !DILocation(line: 2241, column: 45, scope: !5923)
!5936 = !DILocation(line: 2241, column: 56, scope: !5923)
!5937 = !DILocation(line: 2241, column: 41, scope: !5923)
!5938 = !DILocation(line: 2244, column: 13, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5923, file: !898, line: 2244, column: 13)
!5940 = !DILocation(line: 2244, column: 13, scope: !5923)
!5941 = !DILocation(line: 2245, column: 24, scope: !5939)
!5942 = !DILocation(line: 2245, column: 33, scope: !5939)
!5943 = !DILocation(line: 2245, column: 21, scope: !5939)
!5944 = !DILocation(line: 2245, column: 13, scope: !5939)
!5945 = !DILocation(line: 2248, column: 13, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5923, file: !898, line: 2248, column: 13)
!5947 = !DILocation(line: 2248, column: 13, scope: !5923)
!5948 = !DILocation(line: 2249, column: 26, scope: !5946)
!5949 = !DILocation(line: 2249, column: 13, scope: !5946)
!5950 = !DILocation(line: 2251, column: 26, scope: !5946)
!5951 = !DILocation(line: 2254, column: 34, scope: !5923)
!5952 = !DILocation(line: 2254, column: 9, scope: !5923)
!5953 = !DILocation(line: 2254, column: 12, scope: !5923)
!5954 = !DILocation(line: 2254, column: 20, scope: !5923)
!5955 = !DILocation(line: 2255, column: 13, scope: !5923)
!5956 = !DILocation(line: 2255, column: 22, scope: !5923)
!5957 = !DILocation(line: 2255, column: 25, scope: !5923)
!5958 = !DILocation(line: 2255, column: 37, scope: !5923)
!5959 = !DILocation(line: 2256, column: 13, scope: !5923)
!5960 = !DILocation(line: 2256, column: 27, scope: !5923)
!5961 = !DILocation(line: 2256, column: 30, scope: !5923)
!5962 = !DILocation(line: 2258, column: 13, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5923, file: !898, line: 2258, column: 13)
!5964 = !DILocation(line: 2258, column: 13, scope: !5923)
!5965 = !DILocation(line: 2261, column: 13, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5963, file: !898, line: 2258, column: 24)
!5967 = !DILocation(line: 2261, column: 16, scope: !5966)
!5968 = !DILocation(line: 2261, column: 24, scope: !5966)
!5969 = !DILocation(line: 2261, column: 38, scope: !5966)
!5970 = !DILocation(line: 2262, column: 38, scope: !5966)
!5971 = !DILocation(line: 2262, column: 48, scope: !5966)
!5972 = !DILocation(line: 2262, column: 51, scope: !5966)
!5973 = !DILocation(line: 2263, column: 38, scope: !5966)
!5974 = !DILocation(line: 2263, column: 47, scope: !5966)
!5975 = !DILocation(line: 2264, column: 9, scope: !5966)
!5976 = !DILocation(line: 2267, column: 16, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5923, file: !898, line: 2267, column: 9)
!5978 = !DILocation(line: 2267, column: 14, scope: !5977)
!5979 = !DILocation(line: 2267, column: 25, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !5981, file: !898, discriminator: 1)
!5981 = distinct !DILexicalBlock(scope: !5977, file: !898, line: 2267, column: 9)
!5982 = !DILocation(line: 2267, column: 27, scope: !5980)
!5983 = !DILocation(line: 2267, column: 9, scope: !5980)
!5984 = !DILocation(line: 2268, column: 48, scope: !5981)
!5985 = !DILocation(line: 2268, column: 62, scope: !5981)
!5986 = !DILocation(line: 2268, column: 60, scope: !5981)
!5987 = !DILocation(line: 2268, column: 33, scope: !5981)
!5988 = !DILocation(line: 2268, column: 36, scope: !5981)
!5989 = !DILocation(line: 2268, column: 28, scope: !5981)
!5990 = !DILocation(line: 2268, column: 13, scope: !5981)
!5991 = !DILocation(line: 2268, column: 16, scope: !5981)
!5992 = !DILocation(line: 2268, column: 31, scope: !5981)
!5993 = !DILocation(line: 2267, column: 34, scope: !5994)
!5994 = !DILexicalBlockFile(scope: !5981, file: !898, discriminator: 2)
!5995 = !DILocation(line: 2267, column: 9, scope: !5994)
!5996 = distinct !{!5996, !5997}
!5997 = !DILocation(line: 2267, column: 9, scope: !5923)
!5998 = !DILocation(line: 2269, column: 5, scope: !5923)
!5999 = !DILocation(line: 2272, column: 9, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2272, column: 9)
!6001 = !DILocation(line: 2272, column: 12, scope: !6000)
!6002 = !DILocation(line: 2272, column: 22, scope: !6000)
!6003 = !DILocation(line: 2272, column: 26, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !6000, file: !898, discriminator: 1)
!6005 = !DILocation(line: 2272, column: 29, scope: !6004)
!6006 = !DILocation(line: 2272, column: 44, scope: !6004)
!6007 = !DILocation(line: 2273, column: 9, scope: !6000)
!6008 = !DILocation(line: 2273, column: 12, scope: !6004)
!6009 = !DILocation(line: 2273, column: 15, scope: !6004)
!6010 = !DILocation(line: 2273, column: 26, scope: !6004)
!6011 = !DILocation(line: 2272, column: 9, scope: !6012)
!6012 = !DILexicalBlockFile(scope: !5633, file: !898, discriminator: 2)
!6013 = !DILocation(line: 2274, column: 9, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6000, file: !898, line: 2273, column: 45)
!6015 = !DILocation(line: 2274, column: 12, scope: !6014)
!6016 = !DILocation(line: 2274, column: 23, scope: !6014)
!6017 = !DILocation(line: 2274, column: 42, scope: !6014)
!6018 = !DILocation(line: 2275, column: 42, scope: !6014)
!6019 = !DILocation(line: 2276, column: 53, scope: !6014)
!6020 = !DILocation(line: 2277, column: 9, scope: !6014)
!6021 = !DILocation(line: 2277, column: 12, scope: !6014)
!6022 = !DILocation(line: 2277, column: 23, scope: !6014)
!6023 = !DILocation(line: 2277, column: 42, scope: !6014)
!6024 = !DILocation(line: 2278, column: 42, scope: !6014)
!6025 = !DILocation(line: 2279, column: 53, scope: !6014)
!6026 = !DILocation(line: 2280, column: 5, scope: !6014)
!6027 = !DILocation(line: 2283, column: 10, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2283, column: 9)
!6029 = !DILocation(line: 2283, column: 13, scope: !6028)
!6030 = !DILocation(line: 2283, column: 28, scope: !6028)
!6031 = !DILocation(line: 2284, column: 9, scope: !6028)
!6032 = !DILocation(line: 2284, column: 12, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !6028, file: !898, discriminator: 1)
!6034 = !DILocation(line: 2284, column: 15, scope: !6033)
!6035 = !DILocation(line: 2283, column: 9, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !5633, file: !898, discriminator: 1)
!6037 = !DILocalVariable(name: "scale_inv", scope: !6038, file: !898, line: 2285, type: !1063)
!6038 = distinct !DILexicalBlock(scope: !6028, file: !898, line: 2284, column: 35)
!6039 = !DILocation(line: 2285, column: 15, scope: !6038)
!6040 = !DILocation(line: 2285, column: 27, scope: !6038)
!6041 = !DILocation(line: 2285, column: 30, scope: !6038)
!6042 = !DILocation(line: 2285, column: 50, scope: !6038)
!6043 = !DILocalVariable(name: "coeff_ptr", scope: !6038, file: !898, line: 2286, type: !1385)
!6044 = !DILocation(line: 2286, column: 14, scope: !6038)
!6045 = !DILocation(line: 2286, column: 26, scope: !6038)
!6046 = !DILocation(line: 2286, column: 29, scope: !6038)
!6047 = !DILocalVariable(name: "xch_base", scope: !6038, file: !898, line: 2287, type: !1027)
!6048 = !DILocation(line: 2287, column: 13, scope: !6038)
!6049 = !DILocation(line: 2287, column: 40, scope: !6038)
!6050 = !DILocation(line: 2287, column: 43, scope: !6038)
!6051 = !DILocation(line: 2287, column: 24, scope: !6038)
!6052 = !DILocation(line: 2291, column: 19, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6038, file: !898, line: 2291, column: 9)
!6054 = !DILocation(line: 2291, column: 17, scope: !6053)
!6055 = !DILocation(line: 2291, column: 14, scope: !6053)
!6056 = !DILocation(line: 2291, column: 29, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !6058, file: !898, discriminator: 1)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !898, line: 2291, column: 9)
!6059 = !DILocation(line: 2291, column: 34, scope: !6057)
!6060 = !DILocation(line: 2291, column: 37, scope: !6057)
!6061 = !DILocation(line: 2291, column: 32, scope: !6057)
!6062 = !DILocation(line: 2291, column: 9, scope: !6057)
!6063 = !DILocalVariable(name: "src_spkr", scope: !6064, file: !898, line: 2292, type: !1027)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !898, line: 2291, column: 54)
!6065 = !DILocation(line: 2292, column: 17, scope: !6064)
!6066 = !DILocation(line: 2292, column: 47, scope: !6064)
!6067 = !DILocation(line: 2292, column: 50, scope: !6064)
!6068 = !DILocation(line: 2292, column: 28, scope: !6064)
!6069 = !DILocation(line: 2293, column: 17, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6064, file: !898, line: 2293, column: 17)
!6071 = !DILocation(line: 2293, column: 26, scope: !6070)
!6072 = !DILocation(line: 2293, column: 17, scope: !6064)
!6073 = !DILocation(line: 2294, column: 17, scope: !6070)
!6074 = !DILocation(line: 2295, column: 23, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6064, file: !898, line: 2295, column: 13)
!6076 = !DILocation(line: 2295, column: 18, scope: !6075)
!6077 = !DILocation(line: 2295, column: 28, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !6079, file: !898, discriminator: 1)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !898, line: 2295, column: 13)
!6080 = !DILocation(line: 2295, column: 35, scope: !6078)
!6081 = !DILocation(line: 2295, column: 38, scope: !6078)
!6082 = !DILocation(line: 2295, column: 33, scope: !6078)
!6083 = !DILocation(line: 2295, column: 13, scope: !6078)
!6084 = !DILocation(line: 2296, column: 39, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !898, line: 2296, column: 21)
!6086 = distinct !DILexicalBlock(scope: !6079, file: !898, line: 2295, column: 63)
!6087 = !DILocation(line: 2296, column: 44, scope: !6085)
!6088 = !DILocation(line: 2296, column: 42, scope: !6085)
!6089 = !DILocation(line: 2296, column: 21, scope: !6085)
!6090 = !DILocation(line: 2296, column: 24, scope: !6085)
!6091 = !DILocation(line: 2296, column: 63, scope: !6085)
!6092 = !DILocation(line: 2296, column: 60, scope: !6085)
!6093 = !DILocation(line: 2296, column: 54, scope: !6085)
!6094 = !DILocation(line: 2296, column: 21, scope: !6086)
!6095 = !DILocalVariable(name: "coeff", scope: !6096, file: !898, line: 2297, type: !1027)
!6096 = distinct !DILexicalBlock(scope: !6085, file: !898, line: 2296, column: 70)
!6097 = !DILocation(line: 2297, column: 25, scope: !6096)
!6098 = !DILocation(line: 2297, column: 43, scope: !6096)
!6099 = !DILocation(line: 2297, column: 33, scope: !6096)
!6100 = !DILocation(line: 2298, column: 25, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6096, file: !898, line: 2298, column: 25)
!6102 = !DILocation(line: 2298, column: 25, scope: !6096)
!6103 = !DILocation(line: 2299, column: 25, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !898, line: 2298, column: 32)
!6105 = !DILocation(line: 2299, column: 28, scope: !6104)
!6106 = !DILocation(line: 2299, column: 39, scope: !6104)
!6107 = !DILocation(line: 2299, column: 74, scope: !6104)
!6108 = !DILocation(line: 2299, column: 58, scope: !6104)
!6109 = !DILocation(line: 2300, column: 73, scope: !6104)
!6110 = !DILocation(line: 2300, column: 58, scope: !6104)
!6111 = !DILocation(line: 2301, column: 58, scope: !6104)
!6112 = !DILocation(line: 2301, column: 64, scope: !6104)
!6113 = !DILocation(line: 2302, column: 58, scope: !6104)
!6114 = !DILocation(line: 2303, column: 21, scope: !6104)
!6115 = !DILocation(line: 2304, column: 17, scope: !6096)
!6116 = !DILocation(line: 2305, column: 13, scope: !6086)
!6117 = !DILocation(line: 2295, column: 59, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !6079, file: !898, discriminator: 2)
!6119 = !DILocation(line: 2295, column: 13, scope: !6118)
!6120 = distinct !{!6120, !6121}
!6121 = !DILocation(line: 2295, column: 13, scope: !6064)
!6122 = !DILocation(line: 2306, column: 9, scope: !6064)
!6123 = !DILocation(line: 2291, column: 50, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !6058, file: !898, discriminator: 2)
!6125 = !DILocation(line: 2291, column: 9, scope: !6124)
!6126 = distinct !{!6126, !6127}
!6127 = !DILocation(line: 2291, column: 9, scope: !6038)
!6128 = !DILocation(line: 2309, column: 19, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6038, file: !898, line: 2309, column: 9)
!6130 = !DILocation(line: 2309, column: 14, scope: !6129)
!6131 = !DILocation(line: 2309, column: 24, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6133, file: !898, discriminator: 1)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !898, line: 2309, column: 9)
!6134 = !DILocation(line: 2309, column: 31, scope: !6132)
!6135 = !DILocation(line: 2309, column: 34, scope: !6132)
!6136 = !DILocation(line: 2309, column: 29, scope: !6132)
!6137 = !DILocation(line: 2309, column: 9, scope: !6132)
!6138 = !DILocation(line: 2310, column: 17, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !898, line: 2310, column: 17)
!6140 = distinct !DILexicalBlock(scope: !6133, file: !898, line: 2309, column: 59)
!6141 = !DILocation(line: 2310, column: 20, scope: !6139)
!6142 = !DILocation(line: 2310, column: 44, scope: !6139)
!6143 = !DILocation(line: 2310, column: 41, scope: !6139)
!6144 = !DILocation(line: 2310, column: 35, scope: !6139)
!6145 = !DILocation(line: 2310, column: 17, scope: !6140)
!6146 = !DILocation(line: 2311, column: 17, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6139, file: !898, line: 2310, column: 51)
!6148 = !DILocation(line: 2311, column: 20, scope: !6147)
!6149 = !DILocation(line: 2311, column: 31, scope: !6147)
!6150 = !DILocation(line: 2311, column: 65, scope: !6147)
!6151 = !DILocation(line: 2311, column: 50, scope: !6147)
!6152 = !DILocation(line: 2312, column: 65, scope: !6147)
!6153 = !DILocation(line: 2312, column: 50, scope: !6147)
!6154 = !DILocation(line: 2313, column: 50, scope: !6147)
!6155 = !DILocation(line: 2313, column: 61, scope: !6147)
!6156 = !DILocation(line: 2314, column: 13, scope: !6147)
!6157 = !DILocation(line: 2315, column: 9, scope: !6140)
!6158 = !DILocation(line: 2309, column: 55, scope: !6159)
!6159 = !DILexicalBlockFile(scope: !6133, file: !898, discriminator: 2)
!6160 = !DILocation(line: 2309, column: 9, scope: !6159)
!6161 = distinct !{!6161, !6162}
!6162 = !DILocation(line: 2309, column: 9, scope: !6038)
!6163 = !DILocation(line: 2316, column: 5, scope: !6038)
!6164 = !DILocation(line: 2318, column: 11, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2318, column: 9)
!6166 = !DILocation(line: 2318, column: 14, scope: !6165)
!6167 = !DILocation(line: 2318, column: 29, scope: !6165)
!6168 = !DILocation(line: 2318, column: 9, scope: !5633)
!6169 = !DILocation(line: 2320, column: 14, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !898, line: 2320, column: 13)
!6171 = distinct !DILexicalBlock(scope: !6165, file: !898, line: 2318, column: 78)
!6172 = !DILocation(line: 2320, column: 17, scope: !6170)
!6173 = !DILocation(line: 2320, column: 31, scope: !6170)
!6174 = !DILocation(line: 2320, column: 34, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6170, file: !898, discriminator: 1)
!6176 = !DILocation(line: 2320, column: 37, scope: !6175)
!6177 = !DILocation(line: 2320, column: 48, scope: !6175)
!6178 = !DILocation(line: 2321, column: 13, scope: !6170)
!6179 = !DILocation(line: 2321, column: 16, scope: !6175)
!6180 = !DILocation(line: 2321, column: 19, scope: !6175)
!6181 = !DILocation(line: 2321, column: 30, scope: !6175)
!6182 = !DILocation(line: 2320, column: 13, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !6171, file: !898, discriminator: 2)
!6184 = !DILocation(line: 2322, column: 13, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6170, file: !898, line: 2321, column: 59)
!6186 = !DILocation(line: 2322, column: 16, scope: !6185)
!6187 = !DILocation(line: 2322, column: 27, scope: !6185)
!6188 = !DILocation(line: 2322, column: 45, scope: !6185)
!6189 = !DILocation(line: 2323, column: 45, scope: !6185)
!6190 = !DILocation(line: 2324, column: 45, scope: !6185)
!6191 = !DILocation(line: 2325, column: 9, scope: !6185)
!6192 = !DILocation(line: 2328, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6171, file: !898, line: 2328, column: 13)
!6194 = !DILocation(line: 2328, column: 16, scope: !6193)
!6195 = !DILocation(line: 2328, column: 33, scope: !6193)
!6196 = !DILocation(line: 2328, column: 36, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6193, file: !898, discriminator: 1)
!6198 = !DILocation(line: 2328, column: 39, scope: !6197)
!6199 = !DILocation(line: 2328, column: 50, scope: !6197)
!6200 = !DILocation(line: 2328, column: 13, scope: !6197)
!6201 = !DILocation(line: 2329, column: 13, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6193, file: !898, line: 2328, column: 69)
!6203 = !DILocation(line: 2329, column: 16, scope: !6202)
!6204 = !DILocation(line: 2329, column: 27, scope: !6202)
!6205 = !DILocation(line: 2329, column: 45, scope: !6202)
!6206 = !DILocation(line: 2330, column: 45, scope: !6202)
!6207 = !DILocation(line: 2331, column: 45, scope: !6202)
!6208 = !DILocation(line: 2332, column: 9, scope: !6202)
!6209 = !DILocation(line: 2333, column: 5, scope: !6171)
!6210 = !DILocation(line: 2336, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !5633, file: !898, line: 2336, column: 9)
!6212 = !DILocation(line: 2336, column: 12, scope: !6211)
!6213 = !DILocation(line: 2336, column: 28, scope: !6211)
!6214 = !DILocation(line: 2336, column: 31, scope: !6211)
!6215 = !DILocation(line: 2336, column: 25, scope: !6211)
!6216 = !DILocation(line: 2336, column: 9, scope: !5633)
!6217 = !DILocation(line: 2337, column: 40, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6211, file: !898, line: 2336, column: 40)
!6219 = !DILocation(line: 2337, column: 43, scope: !6218)
!6220 = !DILocation(line: 2337, column: 54, scope: !6218)
!6221 = !DILocation(line: 2338, column: 40, scope: !6218)
!6222 = !DILocation(line: 2338, column: 43, scope: !6218)
!6223 = !DILocation(line: 2339, column: 40, scope: !6218)
!6224 = !DILocation(line: 2339, column: 50, scope: !6218)
!6225 = !DILocation(line: 2339, column: 53, scope: !6218)
!6226 = !DILocation(line: 2337, column: 9, scope: !6218)
!6227 = !DILocation(line: 2340, column: 5, scope: !6218)
!6228 = !DILocation(line: 2342, column: 5, scope: !5633)
!6229 = !DILocation(line: 2343, column: 1, scope: !5633)
!6230 = distinct !DISubprogram(name: "ff_dca_core_flush", scope: !898, file: !898, line: 2399, type: !6231, isLocal: false, isDefinition: true, scopeLine: 2400, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{null, !1094}
!6233 = !DILocalVariable(name: "s", arg: 1, scope: !6230, file: !898, line: 2399, type: !1094)
!6234 = !DILocation(line: 2399, column: 62, scope: !6230)
!6235 = !DILocation(line: 2401, column: 9, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6230, file: !898, line: 2401, column: 9)
!6237 = !DILocation(line: 2401, column: 12, scope: !6236)
!6238 = !DILocation(line: 2401, column: 9, scope: !6230)
!6239 = !DILocation(line: 2402, column: 29, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6236, file: !898, line: 2401, column: 28)
!6241 = !DILocation(line: 2402, column: 9, scope: !6240)
!6242 = !DILocation(line: 2403, column: 16, scope: !6240)
!6243 = !DILocation(line: 2403, column: 19, scope: !6240)
!6244 = !DILocation(line: 2403, column: 9, scope: !6240)
!6245 = !DILocation(line: 2404, column: 5, scope: !6240)
!6246 = !DILocation(line: 2406, column: 9, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6230, file: !898, line: 2406, column: 9)
!6248 = !DILocation(line: 2406, column: 12, scope: !6247)
!6249 = !DILocation(line: 2406, column: 9, scope: !6230)
!6250 = !DILocation(line: 2407, column: 33, scope: !6247)
!6251 = !DILocation(line: 2407, column: 9, scope: !6247)
!6252 = !DILocation(line: 2409, column: 23, scope: !6230)
!6253 = !DILocation(line: 2409, column: 5, scope: !6230)
!6254 = !DILocation(line: 2410, column: 1, scope: !6230)
!6255 = distinct !DISubprogram(name: "erase_adpcm_history", scope: !898, file: !898, line: 758, type: !6231, isLocal: true, isDefinition: true, scopeLine: 759, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6256 = !DILocalVariable(name: "d", arg: 1, scope: !1066, file: !1047, line: 83, type: !1051)
!6257 = !DILocation(line: 83, column: 68, scope: !1066, inlinedAt: !6258)
!6258 = distinct !DILocation(line: 766, column: 13, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !898, line: 765, column: 9)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !898, line: 765, column: 9)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !898, line: 764, column: 5)
!6262 = distinct !DILexicalBlock(scope: !6255, file: !898, line: 764, column: 5)
!6263 = !DILocalVariable(name: "s", arg: 1, scope: !6255, file: !898, line: 758, type: !1094)
!6264 = !DILocation(line: 758, column: 49, scope: !6255)
!6265 = !DILocalVariable(name: "ch", scope: !6255, file: !898, line: 760, type: !1027)
!6266 = !DILocation(line: 760, column: 9, scope: !6255)
!6267 = !DILocalVariable(name: "band", scope: !6255, file: !898, line: 760, type: !1027)
!6268 = !DILocation(line: 760, column: 13, scope: !6255)
!6269 = !DILocation(line: 764, column: 13, scope: !6262)
!6270 = !DILocation(line: 764, column: 10, scope: !6262)
!6271 = !DILocation(line: 764, column: 18, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !6261, file: !898, discriminator: 1)
!6273 = !DILocation(line: 764, column: 21, scope: !6272)
!6274 = !DILocation(line: 764, column: 5, scope: !6272)
!6275 = !DILocation(line: 765, column: 19, scope: !6260)
!6276 = !DILocation(line: 765, column: 14, scope: !6260)
!6277 = !DILocation(line: 765, column: 24, scope: !6278)
!6278 = !DILexicalBlockFile(scope: !6259, file: !898, discriminator: 1)
!6279 = !DILocation(line: 765, column: 29, scope: !6278)
!6280 = !DILocation(line: 765, column: 9, scope: !6278)
!6281 = !DILocation(line: 766, column: 47, scope: !6259)
!6282 = !DILocation(line: 766, column: 24, scope: !6259)
!6283 = !DILocation(line: 766, column: 43, scope: !6259)
!6284 = !DILocation(line: 766, column: 27, scope: !6259)
!6285 = !DILocation(line: 766, column: 53, scope: !6259)
!6286 = !DILocation(line: 766, column: 13, scope: !6259)
!6287 = !DILocation(line: 89, column: 32, scope: !1066, inlinedAt: !6258)
!6288 = !DILocation(line: 89, column: 21, scope: !1066, inlinedAt: !6258)
!6289 = !DILocation(line: 87, column: 5, scope: !1066, inlinedAt: !6258)
!6290 = !{i32 177978, i32 178002, i32 178042}
!6291 = !DILocation(line: 765, column: 39, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !6259, file: !898, discriminator: 2)
!6293 = !DILocation(line: 765, column: 9, scope: !6292)
!6294 = distinct !{!6294, !6295}
!6295 = !DILocation(line: 765, column: 9, scope: !6261)
!6296 = !DILocation(line: 766, column: 56, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6260, file: !898, discriminator: 1)
!6298 = !DILocation(line: 764, column: 28, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6261, file: !898, discriminator: 2)
!6300 = !DILocation(line: 764, column: 5, scope: !6299)
!6301 = distinct !{!6301, !6302}
!6302 = !DILocation(line: 764, column: 5, scope: !6255)
!6303 = !DILocation(line: 46, column: 9, scope: !2821, inlinedAt: !6304)
!6304 = distinct !DILocation(line: 768, column: 5, scope: !6255)
!6305 = !DILocation(line: 769, column: 1, scope: !6255)
!6306 = distinct !DISubprogram(name: "erase_x96_adpcm_history", scope: !898, file: !898, line: 1267, type: !6231, isLocal: true, isDefinition: true, scopeLine: 1268, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6307 = !DILocation(line: 83, column: 68, scope: !1066, inlinedAt: !6308)
!6308 = distinct !DILocation(line: 1275, column: 13, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !898, line: 1274, column: 9)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !898, line: 1274, column: 9)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !898, line: 1273, column: 5)
!6312 = distinct !DILexicalBlock(scope: !6306, file: !898, line: 1273, column: 5)
!6313 = !DILocalVariable(name: "s", arg: 1, scope: !6306, file: !898, line: 1267, type: !1094)
!6314 = !DILocation(line: 1267, column: 53, scope: !6306)
!6315 = !DILocalVariable(name: "ch", scope: !6306, file: !898, line: 1269, type: !1027)
!6316 = !DILocation(line: 1269, column: 9, scope: !6306)
!6317 = !DILocalVariable(name: "band", scope: !6306, file: !898, line: 1269, type: !1027)
!6318 = !DILocation(line: 1269, column: 13, scope: !6306)
!6319 = !DILocation(line: 1273, column: 13, scope: !6312)
!6320 = !DILocation(line: 1273, column: 10, scope: !6312)
!6321 = !DILocation(line: 1273, column: 18, scope: !6322)
!6322 = !DILexicalBlockFile(scope: !6311, file: !898, discriminator: 1)
!6323 = !DILocation(line: 1273, column: 21, scope: !6322)
!6324 = !DILocation(line: 1273, column: 5, scope: !6322)
!6325 = !DILocation(line: 1274, column: 19, scope: !6310)
!6326 = !DILocation(line: 1274, column: 14, scope: !6310)
!6327 = !DILocation(line: 1274, column: 24, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6309, file: !898, discriminator: 1)
!6329 = !DILocation(line: 1274, column: 29, scope: !6328)
!6330 = !DILocation(line: 1274, column: 9, scope: !6328)
!6331 = !DILocation(line: 1275, column: 51, scope: !6309)
!6332 = !DILocation(line: 1275, column: 24, scope: !6309)
!6333 = !DILocation(line: 1275, column: 47, scope: !6309)
!6334 = !DILocation(line: 1275, column: 27, scope: !6309)
!6335 = !DILocation(line: 1275, column: 57, scope: !6309)
!6336 = !DILocation(line: 1275, column: 13, scope: !6309)
!6337 = !DILocation(line: 89, column: 32, scope: !1066, inlinedAt: !6308)
!6338 = !DILocation(line: 89, column: 21, scope: !1066, inlinedAt: !6308)
!6339 = !DILocation(line: 87, column: 5, scope: !1066, inlinedAt: !6308)
!6340 = !DILocation(line: 1274, column: 39, scope: !6341)
!6341 = !DILexicalBlockFile(scope: !6309, file: !898, discriminator: 2)
!6342 = !DILocation(line: 1274, column: 9, scope: !6341)
!6343 = distinct !{!6343, !6344}
!6344 = !DILocation(line: 1274, column: 9, scope: !6311)
!6345 = !DILocation(line: 1275, column: 60, scope: !6346)
!6346 = !DILexicalBlockFile(scope: !6310, file: !898, discriminator: 1)
!6347 = !DILocation(line: 1273, column: 28, scope: !6348)
!6348 = !DILexicalBlockFile(scope: !6311, file: !898, discriminator: 2)
!6349 = !DILocation(line: 1273, column: 5, scope: !6348)
!6350 = distinct !{!6350, !6351}
!6351 = !DILocation(line: 1273, column: 5, scope: !6306)
!6352 = !DILocation(line: 46, column: 9, scope: !2821, inlinedAt: !6353)
!6353 = distinct !DILocation(line: 1277, column: 5, scope: !6306)
!6354 = !DILocation(line: 1278, column: 1, scope: !6306)
!6355 = distinct !DISubprogram(name: "erase_dsp_history", scope: !898, file: !898, line: 1944, type: !6231, isLocal: true, isDefinition: true, scopeLine: 1945, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6356 = !DILocalVariable(name: "s", arg: 1, scope: !6355, file: !898, line: 1944, type: !1094)
!6357 = !DILocation(line: 1944, column: 47, scope: !6355)
!6358 = !DILocation(line: 1946, column: 12, scope: !6355)
!6359 = !DILocation(line: 1946, column: 15, scope: !6355)
!6360 = !DILocation(line: 1946, column: 5, scope: !6355)
!6361 = !DILocation(line: 1947, column: 5, scope: !6355)
!6362 = !DILocation(line: 1947, column: 8, scope: !6355)
!6363 = !DILocation(line: 1947, column: 33, scope: !6355)
!6364 = !DILocation(line: 1948, column: 5, scope: !6355)
!6365 = !DILocation(line: 1948, column: 8, scope: !6355)
!6366 = !DILocation(line: 1948, column: 33, scope: !6355)
!6367 = !DILocation(line: 1949, column: 1, scope: !6355)
!6368 = distinct !DISubprogram(name: "ff_dca_core_init", scope: !898, file: !898, line: 2412, type: !2320, isLocal: false, isDefinition: true, scopeLine: 2413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6369 = !DILocalVariable(name: "s", arg: 1, scope: !6368, file: !898, line: 2412, type: !1094)
!6370 = !DILocation(line: 2412, column: 60, scope: !6368)
!6371 = !DILocation(line: 2414, column: 26, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !898, line: 2414, column: 9)
!6373 = !DILocation(line: 2414, column: 11, scope: !6372)
!6374 = !DILocation(line: 2414, column: 14, scope: !6372)
!6375 = !DILocation(line: 2414, column: 24, scope: !6372)
!6376 = !DILocation(line: 2414, column: 9, scope: !6368)
!6377 = !DILocation(line: 2415, column: 9, scope: !6372)
!6378 = !DILocation(line: 2416, column: 26, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6368, file: !898, line: 2416, column: 9)
!6380 = !DILocation(line: 2416, column: 11, scope: !6379)
!6381 = !DILocation(line: 2416, column: 14, scope: !6379)
!6382 = !DILocation(line: 2416, column: 24, scope: !6379)
!6383 = !DILocation(line: 2416, column: 9, scope: !6368)
!6384 = !DILocation(line: 2417, column: 9, scope: !6379)
!6385 = !DILocation(line: 2419, column: 21, scope: !6368)
!6386 = !DILocation(line: 2419, column: 24, scope: !6368)
!6387 = !DILocation(line: 2419, column: 5, scope: !6368)
!6388 = !DILocation(line: 2420, column: 23, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6368, file: !898, line: 2420, column: 9)
!6390 = !DILocation(line: 2420, column: 26, scope: !6389)
!6391 = !DILocation(line: 2420, column: 9, scope: !6389)
!6392 = !DILocation(line: 2420, column: 47, scope: !6389)
!6393 = !DILocation(line: 2420, column: 9, scope: !6368)
!6394 = !DILocation(line: 2421, column: 9, scope: !6389)
!6395 = !DILocation(line: 2422, column: 23, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6368, file: !898, line: 2422, column: 9)
!6397 = !DILocation(line: 2422, column: 26, scope: !6396)
!6398 = !DILocation(line: 2422, column: 9, scope: !6396)
!6399 = !DILocation(line: 2422, column: 47, scope: !6396)
!6400 = !DILocation(line: 2422, column: 9, scope: !6368)
!6401 = !DILocation(line: 2423, column: 9, scope: !6396)
!6402 = !DILocation(line: 2424, column: 27, scope: !6368)
!6403 = !DILocation(line: 2424, column: 30, scope: !6368)
!6404 = !DILocation(line: 2424, column: 5, scope: !6368)
!6405 = !DILocation(line: 2426, column: 5, scope: !6368)
!6406 = !DILocation(line: 2426, column: 8, scope: !6368)
!6407 = !DILocation(line: 2426, column: 17, scope: !6368)
!6408 = !DILocation(line: 2427, column: 5, scope: !6368)
!6409 = !DILocation(line: 2428, column: 1, scope: !6368)
!6410 = distinct !DISubprogram(name: "ff_dca_core_close", scope: !898, file: !898, line: 2430, type: !6231, isLocal: false, isDefinition: true, scopeLine: 2431, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6411 = !DILocalVariable(name: "s", arg: 1, scope: !6410, file: !898, line: 2430, type: !1094)
!6412 = !DILocation(line: 2430, column: 62, scope: !6410)
!6413 = !DILocation(line: 2432, column: 15, scope: !6410)
!6414 = !DILocation(line: 2432, column: 18, scope: !6410)
!6415 = !DILocation(line: 2432, column: 14, scope: !6410)
!6416 = !DILocation(line: 2432, column: 5, scope: !6410)
!6417 = !DILocation(line: 2433, column: 15, scope: !6410)
!6418 = !DILocation(line: 2433, column: 18, scope: !6410)
!6419 = !DILocation(line: 2433, column: 14, scope: !6410)
!6420 = !DILocation(line: 2433, column: 5, scope: !6410)
!6421 = !DILocation(line: 2435, column: 18, scope: !6410)
!6422 = !DILocation(line: 2435, column: 21, scope: !6410)
!6423 = !DILocation(line: 2435, column: 5, scope: !6410)
!6424 = !DILocation(line: 2436, column: 18, scope: !6410)
!6425 = !DILocation(line: 2436, column: 21, scope: !6410)
!6426 = !DILocation(line: 2436, column: 5, scope: !6410)
!6427 = !DILocation(line: 2438, column: 15, scope: !6410)
!6428 = !DILocation(line: 2438, column: 18, scope: !6410)
!6429 = !DILocation(line: 2438, column: 14, scope: !6410)
!6430 = !DILocation(line: 2438, column: 5, scope: !6410)
!6431 = !DILocation(line: 2439, column: 5, scope: !6410)
!6432 = !DILocation(line: 2439, column: 8, scope: !6410)
!6433 = !DILocation(line: 2439, column: 21, scope: !6410)
!6434 = !DILocation(line: 2441, column: 15, scope: !6410)
!6435 = !DILocation(line: 2441, column: 18, scope: !6410)
!6436 = !DILocation(line: 2441, column: 14, scope: !6410)
!6437 = !DILocation(line: 2441, column: 5, scope: !6410)
!6438 = !DILocation(line: 2442, column: 5, scope: !6410)
!6439 = !DILocation(line: 2442, column: 8, scope: !6410)
!6440 = !DILocation(line: 2442, column: 25, scope: !6410)
!6441 = !DILocation(line: 2444, column: 15, scope: !6410)
!6442 = !DILocation(line: 2444, column: 18, scope: !6410)
!6443 = !DILocation(line: 2444, column: 14, scope: !6410)
!6444 = !DILocation(line: 2444, column: 5, scope: !6410)
!6445 = !DILocation(line: 2445, column: 5, scope: !6410)
!6446 = !DILocation(line: 2445, column: 8, scope: !6410)
!6447 = !DILocation(line: 2445, column: 20, scope: !6410)
!6448 = !DILocation(line: 2446, column: 1, scope: !6410)
!6449 = distinct !DISubprogram(name: "init_get_bits", scope: !1818, file: !1818, line: 615, type: !2294, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6450 = !DILocalVariable(name: "s", arg: 1, scope: !6449, file: !1818, line: 615, type: !2296)
!6451 = !DILocation(line: 615, column: 48, scope: !6449)
!6452 = !DILocalVariable(name: "buffer", arg: 2, scope: !6449, file: !1818, line: 615, type: !1212)
!6453 = !DILocation(line: 615, column: 66, scope: !6449)
!6454 = !DILocalVariable(name: "bit_size", arg: 3, scope: !6449, file: !1818, line: 616, type: !1027)
!6455 = !DILocation(line: 616, column: 37, scope: !6449)
!6456 = !DILocalVariable(name: "buffer_size", scope: !6449, file: !1818, line: 618, type: !1027)
!6457 = !DILocation(line: 618, column: 9, scope: !6449)
!6458 = !DILocalVariable(name: "ret", scope: !6449, file: !1818, line: 619, type: !1027)
!6459 = !DILocation(line: 619, column: 9, scope: !6449)
!6460 = !DILocation(line: 621, column: 9, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6449, file: !1818, line: 621, column: 9)
!6462 = !DILocation(line: 621, column: 18, scope: !6461)
!6463 = !DILocation(line: 621, column: 64, scope: !6461)
!6464 = !DILocation(line: 621, column: 67, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6461, file: !1818, discriminator: 1)
!6466 = !DILocation(line: 621, column: 76, scope: !6465)
!6467 = !DILocation(line: 621, column: 80, scope: !6465)
!6468 = !DILocation(line: 621, column: 84, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6461, file: !1818, discriminator: 2)
!6470 = !DILocation(line: 621, column: 9, scope: !6469)
!6471 = !DILocation(line: 622, column: 18, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6461, file: !1818, line: 621, column: 92)
!6473 = !DILocation(line: 623, column: 16, scope: !6472)
!6474 = !DILocation(line: 624, column: 13, scope: !6472)
!6475 = !DILocation(line: 625, column: 5, scope: !6472)
!6476 = !DILocation(line: 627, column: 20, scope: !6449)
!6477 = !DILocation(line: 627, column: 29, scope: !6449)
!6478 = !DILocation(line: 627, column: 34, scope: !6449)
!6479 = !DILocation(line: 627, column: 17, scope: !6449)
!6480 = !DILocation(line: 629, column: 17, scope: !6449)
!6481 = !DILocation(line: 629, column: 5, scope: !6449)
!6482 = !DILocation(line: 629, column: 8, scope: !6449)
!6483 = !DILocation(line: 629, column: 15, scope: !6449)
!6484 = !DILocation(line: 630, column: 23, scope: !6449)
!6485 = !DILocation(line: 630, column: 5, scope: !6449)
!6486 = !DILocation(line: 630, column: 8, scope: !6449)
!6487 = !DILocation(line: 630, column: 21, scope: !6449)
!6488 = !DILocation(line: 631, column: 29, scope: !6449)
!6489 = !DILocation(line: 631, column: 38, scope: !6449)
!6490 = !DILocation(line: 631, column: 5, scope: !6449)
!6491 = !DILocation(line: 631, column: 8, scope: !6449)
!6492 = !DILocation(line: 631, column: 27, scope: !6449)
!6493 = !DILocation(line: 632, column: 21, scope: !6449)
!6494 = !DILocation(line: 632, column: 30, scope: !6449)
!6495 = !DILocation(line: 632, column: 28, scope: !6449)
!6496 = !DILocation(line: 632, column: 5, scope: !6449)
!6497 = !DILocation(line: 632, column: 8, scope: !6449)
!6498 = !DILocation(line: 632, column: 19, scope: !6449)
!6499 = !DILocation(line: 633, column: 5, scope: !6449)
!6500 = !DILocation(line: 633, column: 8, scope: !6449)
!6501 = !DILocation(line: 633, column: 14, scope: !6449)
!6502 = !DILocation(line: 639, column: 12, scope: !6449)
!6503 = !DILocation(line: 639, column: 5, scope: !6449)
!6504 = distinct !DISubprogram(name: "parse_coding_header", scope: !898, file: !898, line: 151, type: !2628, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!6505 = !DILocation(line: 342, column: 96, scope: !4668, inlinedAt: !6506)
!6506 = distinct !DILocation(line: 209, column: 13, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 209, column: 13)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 159, column: 21)
!6509 = !DILocalVariable(name: "s", arg: 1, scope: !6504, file: !898, line: 151, type: !1094)
!6510 = !DILocation(line: 151, column: 48, scope: !6504)
!6511 = !DILocalVariable(name: "header", arg: 2, scope: !6504, file: !898, line: 151, type: !897)
!6512 = !DILocation(line: 151, column: 67, scope: !6504)
!6513 = !DILocalVariable(name: "xch_base", arg: 3, scope: !6504, file: !898, line: 151, type: !1027)
!6514 = !DILocation(line: 151, column: 79, scope: !6504)
!6515 = !DILocalVariable(name: "n", scope: !6504, file: !898, line: 153, type: !1027)
!6516 = !DILocation(line: 153, column: 9, scope: !6504)
!6517 = !DILocalVariable(name: "ch", scope: !6504, file: !898, line: 153, type: !1027)
!6518 = !DILocation(line: 153, column: 12, scope: !6504)
!6519 = !DILocalVariable(name: "nchannels", scope: !6504, file: !898, line: 153, type: !1027)
!6520 = !DILocation(line: 153, column: 16, scope: !6504)
!6521 = !DILocalVariable(name: "header_size", scope: !6504, file: !898, line: 153, type: !1027)
!6522 = !DILocation(line: 153, column: 27, scope: !6504)
!6523 = !DILocalVariable(name: "header_pos", scope: !6504, file: !898, line: 153, type: !1027)
!6524 = !DILocation(line: 153, column: 44, scope: !6504)
!6525 = !DILocation(line: 153, column: 73, scope: !6504)
!6526 = !DILocation(line: 153, column: 76, scope: !6504)
!6527 = !DILocation(line: 153, column: 57, scope: !6504)
!6528 = !DILocalVariable(name: "mask", scope: !6504, file: !898, line: 154, type: !1028)
!6529 = !DILocation(line: 154, column: 18, scope: !6504)
!6530 = !DILocalVariable(name: "index", scope: !6504, file: !898, line: 154, type: !1028)
!6531 = !DILocation(line: 154, column: 24, scope: !6504)
!6532 = !DILocation(line: 156, column: 24, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 156, column: 9)
!6534 = !DILocation(line: 156, column: 27, scope: !6533)
!6535 = !DILocation(line: 156, column: 9, scope: !6533)
!6536 = !DILocation(line: 156, column: 31, scope: !6533)
!6537 = !DILocation(line: 156, column: 9, scope: !6504)
!6538 = !DILocation(line: 157, column: 9, scope: !6533)
!6539 = !DILocation(line: 159, column: 13, scope: !6504)
!6540 = !DILocation(line: 159, column: 5, scope: !6504)
!6541 = !DILocation(line: 162, column: 35, scope: !6508)
!6542 = !DILocation(line: 162, column: 38, scope: !6508)
!6543 = !DILocation(line: 162, column: 25, scope: !6508)
!6544 = !DILocation(line: 162, column: 45, scope: !6508)
!6545 = !DILocation(line: 162, column: 9, scope: !6508)
!6546 = !DILocation(line: 162, column: 12, scope: !6508)
!6547 = !DILocation(line: 162, column: 23, scope: !6508)
!6548 = !DILocation(line: 165, column: 34, scope: !6508)
!6549 = !DILocation(line: 165, column: 37, scope: !6508)
!6550 = !DILocation(line: 165, column: 24, scope: !6508)
!6551 = !DILocation(line: 165, column: 44, scope: !6508)
!6552 = !DILocation(line: 165, column: 9, scope: !6508)
!6553 = !DILocation(line: 165, column: 12, scope: !6508)
!6554 = !DILocation(line: 165, column: 22, scope: !6508)
!6555 = !DILocation(line: 166, column: 13, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 166, column: 13)
!6557 = !DILocation(line: 166, column: 16, scope: !6556)
!6558 = !DILocation(line: 166, column: 45, scope: !6556)
!6559 = !DILocation(line: 166, column: 48, scope: !6556)
!6560 = !DILocation(line: 166, column: 29, scope: !6556)
!6561 = !DILocation(line: 166, column: 26, scope: !6556)
!6562 = !DILocation(line: 166, column: 13, scope: !6508)
!6563 = !DILocation(line: 167, column: 20, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6556, file: !898, line: 166, column: 61)
!6565 = !DILocation(line: 167, column: 23, scope: !6564)
!6566 = !DILocation(line: 167, column: 120, scope: !6564)
!6567 = !DILocation(line: 167, column: 123, scope: !6564)
!6568 = !DILocation(line: 167, column: 134, scope: !6564)
!6569 = !DILocation(line: 167, column: 137, scope: !6564)
!6570 = !DILocation(line: 167, column: 13, scope: !6564)
!6571 = !DILocation(line: 168, column: 13, scope: !6564)
!6572 = !DILocation(line: 172, column: 41, scope: !6508)
!6573 = !DILocation(line: 172, column: 44, scope: !6508)
!6574 = !DILocation(line: 172, column: 22, scope: !6508)
!6575 = !DILocation(line: 172, column: 9, scope: !6508)
!6576 = !DILocation(line: 172, column: 12, scope: !6508)
!6577 = !DILocation(line: 172, column: 20, scope: !6508)
!6578 = !DILocation(line: 175, column: 13, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 175, column: 13)
!6580 = !DILocation(line: 175, column: 16, scope: !6579)
!6581 = !DILocation(line: 175, column: 13, scope: !6508)
!6582 = !DILocation(line: 176, column: 13, scope: !6579)
!6583 = !DILocation(line: 176, column: 16, scope: !6579)
!6584 = !DILocation(line: 176, column: 24, scope: !6579)
!6585 = !DILocation(line: 177, column: 9, scope: !6508)
!6586 = !DILocation(line: 180, column: 40, scope: !6508)
!6587 = !DILocation(line: 180, column: 43, scope: !6508)
!6588 = !DILocation(line: 180, column: 24, scope: !6508)
!6589 = !DILocation(line: 180, column: 55, scope: !6508)
!6590 = !DILocation(line: 180, column: 9, scope: !6508)
!6591 = !DILocation(line: 180, column: 12, scope: !6508)
!6592 = !DILocation(line: 180, column: 22, scope: !6508)
!6593 = !DILocation(line: 182, column: 9, scope: !6508)
!6594 = !DILocation(line: 182, column: 12, scope: !6508)
!6595 = !DILocation(line: 182, column: 20, scope: !6508)
!6596 = !DILocation(line: 183, column: 9, scope: !6508)
!6597 = !DILocation(line: 187, column: 33, scope: !6508)
!6598 = !DILocation(line: 187, column: 36, scope: !6508)
!6599 = !DILocation(line: 187, column: 23, scope: !6508)
!6600 = !DILocation(line: 187, column: 43, scope: !6508)
!6601 = !DILocation(line: 187, column: 21, scope: !6508)
!6602 = !DILocation(line: 190, column: 13, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 190, column: 13)
!6604 = !DILocation(line: 190, column: 16, scope: !6603)
!6605 = !DILocation(line: 191, column: 13, scope: !6603)
!6606 = !DILocation(line: 191, column: 33, scope: !6607)
!6607 = !DILexicalBlockFile(scope: !6603, file: !898, discriminator: 1)
!6608 = !DILocation(line: 191, column: 36, scope: !6607)
!6609 = !DILocation(line: 191, column: 44, scope: !6607)
!6610 = !DILocation(line: 191, column: 47, scope: !6607)
!6611 = !DILocation(line: 191, column: 51, scope: !6607)
!6612 = !DILocation(line: 191, column: 63, scope: !6607)
!6613 = !DILocation(line: 191, column: 76, scope: !6607)
!6614 = !DILocation(line: 191, column: 88, scope: !6607)
!6615 = !DILocation(line: 191, column: 74, scope: !6607)
!6616 = !DILocation(line: 191, column: 16, scope: !6607)
!6617 = !DILocation(line: 190, column: 13, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6508, file: !898, discriminator: 1)
!6619 = !DILocation(line: 192, column: 20, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6603, file: !898, line: 191, column: 94)
!6621 = !DILocation(line: 192, column: 23, scope: !6620)
!6622 = !DILocation(line: 192, column: 13, scope: !6620)
!6623 = !DILocation(line: 193, column: 13, scope: !6620)
!6624 = !DILocation(line: 197, column: 31, scope: !6508)
!6625 = !DILocation(line: 197, column: 34, scope: !6508)
!6626 = !DILocation(line: 197, column: 21, scope: !6508)
!6627 = !DILocation(line: 197, column: 41, scope: !6508)
!6628 = !DILocation(line: 197, column: 19, scope: !6508)
!6629 = !DILocation(line: 198, column: 13, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 198, column: 13)
!6631 = !DILocation(line: 198, column: 23, scope: !6630)
!6632 = !DILocation(line: 198, column: 13, scope: !6508)
!6633 = !DILocation(line: 199, column: 35, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !898, line: 198, column: 28)
!6635 = !DILocation(line: 199, column: 38, scope: !6634)
!6636 = !DILocation(line: 199, column: 65, scope: !6634)
!6637 = !DILocation(line: 199, column: 13, scope: !6634)
!6638 = !DILocation(line: 200, column: 13, scope: !6634)
!6639 = !DILocation(line: 202, column: 40, scope: !6508)
!6640 = !DILocation(line: 202, column: 43, scope: !6508)
!6641 = !DILocation(line: 202, column: 24, scope: !6508)
!6642 = !DILocation(line: 202, column: 57, scope: !6508)
!6643 = !DILocation(line: 202, column: 55, scope: !6508)
!6644 = !DILocation(line: 202, column: 9, scope: !6508)
!6645 = !DILocation(line: 202, column: 12, scope: !6508)
!6646 = !DILocation(line: 202, column: 22, scope: !6508)
!6647 = !DILocation(line: 206, column: 31, scope: !6508)
!6648 = !DILocation(line: 206, column: 34, scope: !6508)
!6649 = !DILocation(line: 206, column: 38, scope: !6508)
!6650 = !DILocation(line: 206, column: 41, scope: !6508)
!6651 = !DILocation(line: 206, column: 57, scope: !6508)
!6652 = !DILocation(line: 206, column: 16, scope: !6508)
!6653 = !DILocation(line: 206, column: 14, scope: !6508)
!6654 = !DILocation(line: 207, column: 29, scope: !6508)
!6655 = !DILocation(line: 207, column: 34, scope: !6508)
!6656 = !DILocation(line: 207, column: 9, scope: !6508)
!6657 = !DILocation(line: 207, column: 12, scope: !6508)
!6658 = !DILocation(line: 207, column: 27, scope: !6508)
!6659 = !DILocation(line: 209, column: 27, scope: !6507)
!6660 = !DILocation(line: 209, column: 30, scope: !6507)
!6661 = !DILocation(line: 209, column: 13, scope: !6507)
!6662 = !DILocation(line: 344, column: 11, scope: !4668, inlinedAt: !6506)
!6663 = !DILocation(line: 344, column: 13, scope: !4668, inlinedAt: !6506)
!6664 = !DILocation(line: 344, column: 19, scope: !4668, inlinedAt: !6506)
!6665 = !DILocation(line: 344, column: 7, scope: !4668, inlinedAt: !6506)
!6666 = !DILocation(line: 345, column: 10, scope: !4668, inlinedAt: !6506)
!6667 = !DILocation(line: 345, column: 12, scope: !4668, inlinedAt: !6506)
!6668 = !DILocation(line: 345, column: 30, scope: !4668, inlinedAt: !6506)
!6669 = !DILocation(line: 345, column: 32, scope: !4668, inlinedAt: !6506)
!6670 = !DILocation(line: 345, column: 38, scope: !4668, inlinedAt: !6506)
!6671 = !DILocation(line: 345, column: 26, scope: !4668, inlinedAt: !6506)
!6672 = !DILocation(line: 345, column: 7, scope: !4668, inlinedAt: !6506)
!6673 = !DILocation(line: 346, column: 10, scope: !4668, inlinedAt: !6506)
!6674 = !DILocation(line: 346, column: 15, scope: !4668, inlinedAt: !6506)
!6675 = !DILocation(line: 346, column: 17, scope: !4668, inlinedAt: !6506)
!6676 = !DILocation(line: 346, column: 12, scope: !4668, inlinedAt: !6506)
!6677 = !DILocation(line: 346, column: 24, scope: !4668, inlinedAt: !6506)
!6678 = !DILocation(line: 346, column: 7, scope: !4668, inlinedAt: !6506)
!6679 = !DILocation(line: 347, column: 10, scope: !4668, inlinedAt: !6506)
!6680 = !DILocation(line: 347, column: 12, scope: !4668, inlinedAt: !6506)
!6681 = !DILocation(line: 347, column: 7, scope: !4668, inlinedAt: !6506)
!6682 = !DILocation(line: 348, column: 13, scope: !4668, inlinedAt: !6506)
!6683 = !DILocation(line: 348, column: 18, scope: !4668, inlinedAt: !6506)
!6684 = !DILocation(line: 348, column: 20, scope: !4668, inlinedAt: !6506)
!6685 = !DILocation(line: 348, column: 15, scope: !4668, inlinedAt: !6506)
!6686 = !DILocation(line: 348, column: 28, scope: !4668, inlinedAt: !6506)
!6687 = !DILocation(line: 209, column: 49, scope: !6507)
!6688 = !DILocation(line: 209, column: 46, scope: !6507)
!6689 = !DILocation(line: 209, column: 13, scope: !6508)
!6690 = !DILocation(line: 210, column: 20, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6507, file: !898, line: 209, column: 60)
!6692 = !DILocation(line: 210, column: 23, scope: !6691)
!6693 = !DILocation(line: 210, column: 78, scope: !6691)
!6694 = !DILocation(line: 210, column: 81, scope: !6691)
!6695 = !DILocation(line: 210, column: 13, scope: !6691)
!6696 = !DILocation(line: 211, column: 13, scope: !6691)
!6697 = !DILocation(line: 214, column: 13, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 214, column: 13)
!6699 = !DILocation(line: 214, column: 16, scope: !6698)
!6700 = !DILocation(line: 214, column: 33, scope: !6698)
!6701 = !DILocation(line: 214, column: 36, scope: !6698)
!6702 = !DILocation(line: 214, column: 31, scope: !6698)
!6703 = !DILocation(line: 214, column: 13, scope: !6508)
!6704 = !DILocation(line: 215, column: 20, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6698, file: !898, line: 214, column: 52)
!6706 = !DILocation(line: 215, column: 23, scope: !6705)
!6707 = !DILocation(line: 215, column: 95, scope: !6705)
!6708 = !DILocation(line: 215, column: 98, scope: !6705)
!6709 = !DILocation(line: 215, column: 114, scope: !6705)
!6710 = !DILocation(line: 215, column: 117, scope: !6705)
!6711 = !DILocation(line: 215, column: 13, scope: !6705)
!6712 = !DILocation(line: 216, column: 13, scope: !6705)
!6713 = !DILocation(line: 220, column: 22, scope: !6508)
!6714 = !DILocation(line: 220, column: 25, scope: !6508)
!6715 = !DILocation(line: 220, column: 42, scope: !6508)
!6716 = !DILocation(line: 220, column: 45, scope: !6508)
!6717 = !DILocation(line: 220, column: 40, scope: !6508)
!6718 = !DILocation(line: 220, column: 9, scope: !6508)
!6719 = !DILocation(line: 220, column: 12, scope: !6508)
!6720 = !DILocation(line: 220, column: 20, scope: !6508)
!6721 = !DILocation(line: 223, column: 24, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6508, file: !898, line: 223, column: 13)
!6723 = !DILocation(line: 223, column: 27, scope: !6722)
!6724 = !DILocation(line: 223, column: 13, scope: !6722)
!6725 = !DILocation(line: 223, column: 13, scope: !6508)
!6726 = !DILocalVariable(name: "coeff_ptr", scope: !6727, file: !898, line: 224, type: !1385)
!6727 = distinct !DILexicalBlock(scope: !6722, file: !898, line: 223, column: 32)
!6728 = !DILocation(line: 224, column: 18, scope: !6727)
!6729 = !DILocation(line: 224, column: 30, scope: !6727)
!6730 = !DILocation(line: 224, column: 33, scope: !6727)
!6731 = !DILocation(line: 227, column: 48, scope: !6727)
!6732 = !DILocation(line: 227, column: 51, scope: !6727)
!6733 = !DILocation(line: 227, column: 37, scope: !6727)
!6734 = !DILocation(line: 227, column: 13, scope: !6727)
!6735 = !DILocation(line: 227, column: 16, scope: !6727)
!6736 = !DILocation(line: 227, column: 35, scope: !6727)
!6737 = !DILocation(line: 230, column: 31, scope: !6727)
!6738 = !DILocation(line: 230, column: 34, scope: !6727)
!6739 = !DILocation(line: 230, column: 21, scope: !6727)
!6740 = !DILocation(line: 230, column: 41, scope: !6727)
!6741 = !DILocation(line: 230, column: 45, scope: !6727)
!6742 = !DILocation(line: 230, column: 61, scope: !6727)
!6743 = !DILocation(line: 230, column: 19, scope: !6727)
!6744 = !DILocation(line: 231, column: 17, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6727, file: !898, line: 231, column: 17)
!6746 = !DILocation(line: 231, column: 23, scope: !6745)
!6747 = !DILocation(line: 231, column: 17, scope: !6727)
!6748 = !DILocation(line: 232, column: 24, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !898, line: 231, column: 32)
!6750 = !DILocation(line: 232, column: 27, scope: !6749)
!6751 = !DILocation(line: 232, column: 81, scope: !6749)
!6752 = !DILocation(line: 232, column: 17, scope: !6749)
!6753 = !DILocation(line: 233, column: 17, scope: !6749)
!6754 = !DILocation(line: 235, column: 59, scope: !6727)
!6755 = !DILocation(line: 235, column: 38, scope: !6727)
!6756 = !DILocation(line: 235, column: 13, scope: !6727)
!6757 = !DILocation(line: 235, column: 16, scope: !6727)
!6758 = !DILocation(line: 235, column: 36, scope: !6727)
!6759 = !DILocation(line: 238, column: 21, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6727, file: !898, line: 238, column: 13)
!6761 = !DILocation(line: 238, column: 18, scope: !6760)
!6762 = !DILocation(line: 238, column: 26, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6764, file: !898, discriminator: 1)
!6764 = distinct !DILexicalBlock(scope: !6760, file: !898, line: 238, column: 13)
!6765 = !DILocation(line: 238, column: 31, scope: !6763)
!6766 = !DILocation(line: 238, column: 29, scope: !6763)
!6767 = !DILocation(line: 238, column: 13, scope: !6763)
!6768 = !DILocation(line: 239, column: 39, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !898, line: 238, column: 48)
!6770 = !DILocation(line: 239, column: 42, scope: !6769)
!6771 = !DILocation(line: 239, column: 46, scope: !6769)
!6772 = !DILocation(line: 239, column: 49, scope: !6769)
!6773 = !DILocation(line: 239, column: 24, scope: !6769)
!6774 = !DILocation(line: 239, column: 22, scope: !6769)
!6775 = !DILocation(line: 240, column: 22, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6769, file: !898, line: 240, column: 21)
!6777 = !DILocation(line: 240, column: 29, scope: !6776)
!6778 = !DILocation(line: 240, column: 32, scope: !6776)
!6779 = !DILocation(line: 240, column: 27, scope: !6776)
!6780 = !DILocation(line: 240, column: 51, scope: !6776)
!6781 = !DILocation(line: 240, column: 48, scope: !6776)
!6782 = !DILocation(line: 240, column: 21, scope: !6769)
!6783 = !DILocation(line: 241, column: 28, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6776, file: !898, line: 240, column: 57)
!6785 = !DILocation(line: 241, column: 31, scope: !6784)
!6786 = !DILocation(line: 241, column: 95, scope: !6784)
!6787 = !DILocation(line: 241, column: 21, scope: !6784)
!6788 = !DILocation(line: 242, column: 21, scope: !6784)
!6789 = !DILocation(line: 244, column: 41, scope: !6769)
!6790 = !DILocation(line: 244, column: 35, scope: !6769)
!6791 = !DILocation(line: 244, column: 17, scope: !6769)
!6792 = !DILocation(line: 244, column: 20, scope: !6769)
!6793 = !DILocation(line: 244, column: 39, scope: !6769)
!6794 = !DILocation(line: 245, column: 13, scope: !6769)
!6795 = !DILocation(line: 238, column: 44, scope: !6796)
!6796 = !DILexicalBlockFile(scope: !6764, file: !898, discriminator: 2)
!6797 = !DILocation(line: 238, column: 13, scope: !6796)
!6798 = distinct !{!6798, !6799}
!6799 = !DILocation(line: 238, column: 13, scope: !6727)
!6800 = !DILocation(line: 248, column: 21, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6727, file: !898, line: 248, column: 13)
!6802 = !DILocation(line: 248, column: 18, scope: !6801)
!6803 = !DILocation(line: 248, column: 26, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6805, file: !898, discriminator: 1)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !898, line: 248, column: 13)
!6806 = !DILocation(line: 248, column: 31, scope: !6804)
!6807 = !DILocation(line: 248, column: 29, scope: !6804)
!6808 = !DILocation(line: 248, column: 13, scope: !6804)
!6809 = !DILocation(line: 249, column: 24, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !898, line: 249, column: 17)
!6811 = distinct !DILexicalBlock(scope: !6805, file: !898, line: 248, column: 48)
!6812 = !DILocation(line: 249, column: 22, scope: !6810)
!6813 = !DILocation(line: 249, column: 29, scope: !6814)
!6814 = !DILexicalBlockFile(scope: !6815, file: !898, discriminator: 1)
!6815 = distinct !DILexicalBlock(scope: !6810, file: !898, line: 249, column: 17)
!6816 = !DILocation(line: 249, column: 33, scope: !6814)
!6817 = !DILocation(line: 249, column: 36, scope: !6814)
!6818 = !DILocation(line: 249, column: 31, scope: !6814)
!6819 = !DILocation(line: 249, column: 17, scope: !6814)
!6820 = !DILocation(line: 250, column: 43, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !898, line: 250, column: 25)
!6822 = distinct !DILexicalBlock(scope: !6815, file: !898, line: 249, column: 58)
!6823 = !DILocation(line: 250, column: 25, scope: !6821)
!6824 = !DILocation(line: 250, column: 28, scope: !6821)
!6825 = !DILocation(line: 250, column: 56, scope: !6821)
!6826 = !DILocation(line: 250, column: 53, scope: !6821)
!6827 = !DILocation(line: 250, column: 47, scope: !6821)
!6828 = !DILocation(line: 250, column: 25, scope: !6822)
!6829 = !DILocalVariable(name: "code", scope: !6830, file: !898, line: 251, type: !1027)
!6830 = distinct !DILexicalBlock(scope: !6821, file: !898, line: 250, column: 60)
!6831 = !DILocation(line: 251, column: 29, scope: !6830)
!6832 = !DILocation(line: 251, column: 46, scope: !6830)
!6833 = !DILocation(line: 251, column: 49, scope: !6830)
!6834 = !DILocation(line: 251, column: 36, scope: !6830)
!6835 = !DILocalVariable(name: "sign", scope: !6830, file: !898, line: 252, type: !1027)
!6836 = !DILocation(line: 252, column: 29, scope: !6830)
!6837 = !DILocation(line: 252, column: 37, scope: !6830)
!6838 = !DILocation(line: 252, column: 42, scope: !6830)
!6839 = !DILocation(line: 252, column: 48, scope: !6830)
!6840 = !DILocation(line: 253, column: 34, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6830, file: !898, line: 253, column: 29)
!6842 = !DILocation(line: 253, column: 29, scope: !6830)
!6843 = !DILocation(line: 254, column: 37, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6841, file: !898, line: 253, column: 41)
!6845 = !DILocation(line: 254, column: 42, scope: !6844)
!6846 = !DILocation(line: 254, column: 46, scope: !6844)
!6847 = !DILocation(line: 254, column: 35, scope: !6844)
!6848 = !DILocation(line: 255, column: 33, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !898, line: 255, column: 33)
!6850 = !DILocation(line: 255, column: 39, scope: !6849)
!6851 = !DILocation(line: 255, column: 33, scope: !6844)
!6852 = !DILocation(line: 256, column: 40, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !898, line: 255, column: 48)
!6854 = !DILocation(line: 256, column: 43, scope: !6853)
!6855 = !DILocation(line: 256, column: 103, scope: !6853)
!6856 = !DILocation(line: 256, column: 33, scope: !6853)
!6857 = !DILocation(line: 257, column: 33, scope: !6853)
!6858 = !DILocation(line: 259, column: 62, scope: !6844)
!6859 = !DILocation(line: 259, column: 45, scope: !6844)
!6860 = !DILocation(line: 259, column: 71, scope: !6844)
!6861 = !DILocation(line: 259, column: 69, scope: !6844)
!6862 = !DILocation(line: 259, column: 79, scope: !6844)
!6863 = !DILocation(line: 259, column: 77, scope: !6844)
!6864 = !DILocation(line: 259, column: 39, scope: !6844)
!6865 = !DILocation(line: 259, column: 42, scope: !6844)
!6866 = !DILocation(line: 260, column: 25, scope: !6844)
!6867 = !DILocation(line: 261, column: 39, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6841, file: !898, line: 260, column: 32)
!6869 = !DILocation(line: 261, column: 42, scope: !6868)
!6870 = !DILocation(line: 263, column: 21, scope: !6830)
!6871 = !DILocation(line: 264, column: 17, scope: !6822)
!6872 = !DILocation(line: 249, column: 54, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !6815, file: !898, discriminator: 2)
!6874 = !DILocation(line: 249, column: 17, scope: !6873)
!6875 = distinct !{!6875, !6876}
!6876 = !DILocation(line: 249, column: 17, scope: !6811)
!6877 = !DILocation(line: 265, column: 13, scope: !6811)
!6878 = !DILocation(line: 248, column: 44, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !6805, file: !898, discriminator: 2)
!6880 = !DILocation(line: 248, column: 13, scope: !6879)
!6881 = distinct !{!6881, !6882}
!6882 = !DILocation(line: 248, column: 13, scope: !6727)
!6883 = !DILocation(line: 266, column: 9, scope: !6727)
!6884 = !DILocation(line: 267, column: 13, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6722, file: !898, line: 266, column: 16)
!6886 = !DILocation(line: 267, column: 16, scope: !6885)
!6887 = !DILocation(line: 267, column: 35, scope: !6885)
!6888 = !DILocation(line: 270, column: 9, scope: !6508)
!6889 = !DILocation(line: 274, column: 15, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 274, column: 5)
!6891 = !DILocation(line: 274, column: 13, scope: !6890)
!6892 = !DILocation(line: 274, column: 10, scope: !6890)
!6893 = !DILocation(line: 274, column: 25, scope: !6894)
!6894 = !DILexicalBlockFile(scope: !6895, file: !898, discriminator: 1)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !898, line: 274, column: 5)
!6896 = !DILocation(line: 274, column: 30, scope: !6894)
!6897 = !DILocation(line: 274, column: 33, scope: !6894)
!6898 = !DILocation(line: 274, column: 28, scope: !6894)
!6899 = !DILocation(line: 274, column: 5, scope: !6894)
!6900 = !DILocation(line: 275, column: 38, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6895, file: !898, line: 274, column: 50)
!6902 = !DILocation(line: 275, column: 41, scope: !6901)
!6903 = !DILocation(line: 275, column: 28, scope: !6901)
!6904 = !DILocation(line: 275, column: 48, scope: !6901)
!6905 = !DILocation(line: 275, column: 22, scope: !6901)
!6906 = !DILocation(line: 275, column: 9, scope: !6901)
!6907 = !DILocation(line: 275, column: 12, scope: !6901)
!6908 = !DILocation(line: 275, column: 26, scope: !6901)
!6909 = !DILocation(line: 276, column: 26, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6901, file: !898, line: 276, column: 13)
!6911 = !DILocation(line: 276, column: 13, scope: !6910)
!6912 = !DILocation(line: 276, column: 16, scope: !6910)
!6913 = !DILocation(line: 276, column: 30, scope: !6910)
!6914 = !DILocation(line: 276, column: 13, scope: !6901)
!6915 = !DILocation(line: 277, column: 20, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6910, file: !898, line: 276, column: 36)
!6917 = !DILocation(line: 277, column: 23, scope: !6916)
!6918 = !DILocation(line: 277, column: 13, scope: !6916)
!6919 = !DILocation(line: 278, column: 13, scope: !6916)
!6920 = !DILocation(line: 280, column: 5, scope: !6901)
!6921 = !DILocation(line: 274, column: 46, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !6895, file: !898, discriminator: 2)
!6923 = !DILocation(line: 274, column: 5, scope: !6922)
!6924 = distinct !{!6924, !6925}
!6925 = !DILocation(line: 274, column: 5, scope: !6504)
!6926 = !DILocation(line: 283, column: 15, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 283, column: 5)
!6928 = !DILocation(line: 283, column: 13, scope: !6927)
!6929 = !DILocation(line: 283, column: 10, scope: !6927)
!6930 = !DILocation(line: 283, column: 25, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6932, file: !898, discriminator: 1)
!6932 = distinct !DILexicalBlock(scope: !6927, file: !898, line: 283, column: 5)
!6933 = !DILocation(line: 283, column: 30, scope: !6931)
!6934 = !DILocation(line: 283, column: 33, scope: !6931)
!6935 = !DILocation(line: 283, column: 28, scope: !6931)
!6936 = !DILocation(line: 283, column: 5, scope: !6931)
!6937 = !DILocation(line: 284, column: 45, scope: !6932)
!6938 = !DILocation(line: 284, column: 48, scope: !6932)
!6939 = !DILocation(line: 284, column: 35, scope: !6932)
!6940 = !DILocation(line: 284, column: 55, scope: !6932)
!6941 = !DILocation(line: 284, column: 29, scope: !6932)
!6942 = !DILocation(line: 284, column: 9, scope: !6932)
!6943 = !DILocation(line: 284, column: 12, scope: !6932)
!6944 = !DILocation(line: 284, column: 33, scope: !6932)
!6945 = !DILocation(line: 283, column: 46, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6932, file: !898, discriminator: 2)
!6947 = !DILocation(line: 283, column: 5, scope: !6946)
!6948 = distinct !{!6948, !6949}
!6949 = !DILocation(line: 283, column: 5, scope: !6504)
!6950 = !DILocation(line: 287, column: 15, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 287, column: 5)
!6952 = !DILocation(line: 287, column: 13, scope: !6951)
!6953 = !DILocation(line: 287, column: 10, scope: !6951)
!6954 = !DILocation(line: 287, column: 25, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6956, file: !898, discriminator: 1)
!6956 = distinct !DILexicalBlock(scope: !6951, file: !898, line: 287, column: 5)
!6957 = !DILocation(line: 287, column: 30, scope: !6955)
!6958 = !DILocation(line: 287, column: 33, scope: !6955)
!6959 = !DILocation(line: 287, column: 28, scope: !6955)
!6960 = !DILocation(line: 287, column: 5, scope: !6955)
!6961 = !DILocation(line: 288, column: 28, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !898, line: 288, column: 13)
!6963 = distinct !DILexicalBlock(scope: !6956, file: !898, line: 287, column: 50)
!6964 = !DILocation(line: 288, column: 31, scope: !6962)
!6965 = !DILocation(line: 288, column: 18, scope: !6962)
!6966 = !DILocation(line: 288, column: 16, scope: !6962)
!6967 = !DILocation(line: 288, column: 39, scope: !6962)
!6968 = !DILocation(line: 288, column: 42, scope: !6969)
!6969 = !DILexicalBlockFile(scope: !6962, file: !898, discriminator: 1)
!6970 = !DILocation(line: 288, column: 49, scope: !6969)
!6971 = !DILocation(line: 288, column: 13, scope: !6969)
!6972 = !DILocation(line: 289, column: 18, scope: !6962)
!6973 = !DILocation(line: 289, column: 27, scope: !6962)
!6974 = !DILocation(line: 289, column: 15, scope: !6962)
!6975 = !DILocation(line: 289, column: 13, scope: !6962)
!6976 = !DILocation(line: 290, column: 13, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6963, file: !898, line: 290, column: 13)
!6978 = !DILocation(line: 290, column: 17, scope: !6977)
!6979 = !DILocation(line: 290, column: 20, scope: !6977)
!6980 = !DILocation(line: 290, column: 15, scope: !6977)
!6981 = !DILocation(line: 290, column: 13, scope: !6963)
!6982 = !DILocation(line: 291, column: 20, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6977, file: !898, line: 290, column: 31)
!6984 = !DILocation(line: 291, column: 23, scope: !6983)
!6985 = !DILocation(line: 291, column: 13, scope: !6983)
!6986 = !DILocation(line: 292, column: 13, scope: !6983)
!6987 = !DILocation(line: 294, column: 40, scope: !6963)
!6988 = !DILocation(line: 294, column: 34, scope: !6963)
!6989 = !DILocation(line: 294, column: 9, scope: !6963)
!6990 = !DILocation(line: 294, column: 12, scope: !6963)
!6991 = !DILocation(line: 294, column: 38, scope: !6963)
!6992 = !DILocation(line: 295, column: 5, scope: !6963)
!6993 = !DILocation(line: 287, column: 46, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6956, file: !898, discriminator: 2)
!6995 = !DILocation(line: 287, column: 5, scope: !6994)
!6996 = distinct !{!6996, !6997}
!6997 = !DILocation(line: 287, column: 5, scope: !6504)
!6998 = !DILocation(line: 298, column: 15, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 298, column: 5)
!7000 = !DILocation(line: 298, column: 13, scope: !6999)
!7001 = !DILocation(line: 298, column: 10, scope: !6999)
!7002 = !DILocation(line: 298, column: 25, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !7004, file: !898, discriminator: 1)
!7004 = distinct !DILexicalBlock(scope: !6999, file: !898, line: 298, column: 5)
!7005 = !DILocation(line: 298, column: 30, scope: !7003)
!7006 = !DILocation(line: 298, column: 33, scope: !7003)
!7007 = !DILocation(line: 298, column: 28, scope: !7003)
!7008 = !DILocation(line: 298, column: 5, scope: !7003)
!7009 = !DILocation(line: 299, column: 48, scope: !7004)
!7010 = !DILocation(line: 299, column: 51, scope: !7004)
!7011 = !DILocation(line: 299, column: 38, scope: !7004)
!7012 = !DILocation(line: 299, column: 32, scope: !7004)
!7013 = !DILocation(line: 299, column: 9, scope: !7004)
!7014 = !DILocation(line: 299, column: 12, scope: !7004)
!7015 = !DILocation(line: 299, column: 36, scope: !7004)
!7016 = !DILocation(line: 298, column: 46, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7004, file: !898, discriminator: 2)
!7018 = !DILocation(line: 298, column: 5, scope: !7017)
!7019 = distinct !{!7019, !7020}
!7020 = !DILocation(line: 298, column: 5, scope: !6504)
!7021 = !DILocation(line: 302, column: 15, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 302, column: 5)
!7023 = !DILocation(line: 302, column: 13, scope: !7022)
!7024 = !DILocation(line: 302, column: 10, scope: !7022)
!7025 = !DILocation(line: 302, column: 25, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !7027, file: !898, discriminator: 1)
!7027 = distinct !DILexicalBlock(scope: !7022, file: !898, line: 302, column: 5)
!7028 = !DILocation(line: 302, column: 30, scope: !7026)
!7029 = !DILocation(line: 302, column: 33, scope: !7026)
!7030 = !DILocation(line: 302, column: 28, scope: !7026)
!7031 = !DILocation(line: 302, column: 5, scope: !7026)
!7032 = !DILocation(line: 303, column: 45, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !898, line: 302, column: 50)
!7034 = !DILocation(line: 303, column: 48, scope: !7033)
!7035 = !DILocation(line: 303, column: 35, scope: !7033)
!7036 = !DILocation(line: 303, column: 29, scope: !7033)
!7037 = !DILocation(line: 303, column: 9, scope: !7033)
!7038 = !DILocation(line: 303, column: 12, scope: !7033)
!7039 = !DILocation(line: 303, column: 33, scope: !7033)
!7040 = !DILocation(line: 304, column: 33, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7033, file: !898, line: 304, column: 13)
!7042 = !DILocation(line: 304, column: 13, scope: !7041)
!7043 = !DILocation(line: 304, column: 16, scope: !7041)
!7044 = !DILocation(line: 304, column: 37, scope: !7041)
!7045 = !DILocation(line: 304, column: 13, scope: !7033)
!7046 = !DILocation(line: 305, column: 20, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7041, file: !898, line: 304, column: 43)
!7048 = !DILocation(line: 305, column: 23, scope: !7047)
!7049 = !DILocation(line: 305, column: 13, scope: !7047)
!7050 = !DILocation(line: 306, column: 13, scope: !7047)
!7051 = !DILocation(line: 308, column: 5, scope: !7033)
!7052 = !DILocation(line: 302, column: 46, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !7027, file: !898, discriminator: 2)
!7054 = !DILocation(line: 302, column: 5, scope: !7053)
!7055 = distinct !{!7055, !7056}
!7056 = !DILocation(line: 302, column: 5, scope: !6504)
!7057 = !DILocation(line: 311, column: 15, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 311, column: 5)
!7059 = !DILocation(line: 311, column: 13, scope: !7058)
!7060 = !DILocation(line: 311, column: 10, scope: !7058)
!7061 = !DILocation(line: 311, column: 25, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7063, file: !898, discriminator: 1)
!7063 = distinct !DILexicalBlock(scope: !7058, file: !898, line: 311, column: 5)
!7064 = !DILocation(line: 311, column: 30, scope: !7062)
!7065 = !DILocation(line: 311, column: 33, scope: !7062)
!7066 = !DILocation(line: 311, column: 28, scope: !7062)
!7067 = !DILocation(line: 311, column: 5, scope: !7062)
!7068 = !DILocation(line: 312, column: 47, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7063, file: !898, line: 311, column: 50)
!7070 = !DILocation(line: 312, column: 50, scope: !7069)
!7071 = !DILocation(line: 312, column: 37, scope: !7069)
!7072 = !DILocation(line: 312, column: 31, scope: !7069)
!7073 = !DILocation(line: 312, column: 9, scope: !7069)
!7074 = !DILocation(line: 312, column: 12, scope: !7069)
!7075 = !DILocation(line: 312, column: 35, scope: !7069)
!7076 = !DILocation(line: 313, column: 35, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7069, file: !898, line: 313, column: 13)
!7078 = !DILocation(line: 313, column: 13, scope: !7077)
!7079 = !DILocation(line: 313, column: 16, scope: !7077)
!7080 = !DILocation(line: 313, column: 39, scope: !7077)
!7081 = !DILocation(line: 313, column: 13, scope: !7069)
!7082 = !DILocation(line: 314, column: 20, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7077, file: !898, line: 313, column: 45)
!7084 = !DILocation(line: 314, column: 23, scope: !7083)
!7085 = !DILocation(line: 314, column: 13, scope: !7083)
!7086 = !DILocation(line: 315, column: 13, scope: !7083)
!7087 = !DILocation(line: 317, column: 5, scope: !7069)
!7088 = !DILocation(line: 311, column: 46, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !7063, file: !898, discriminator: 2)
!7090 = !DILocation(line: 311, column: 5, scope: !7089)
!7091 = distinct !{!7091, !7092}
!7092 = !DILocation(line: 311, column: 5, scope: !6504)
!7093 = !DILocation(line: 320, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 320, column: 5)
!7095 = !DILocation(line: 320, column: 10, scope: !7094)
!7096 = !DILocation(line: 320, column: 17, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7098, file: !898, discriminator: 1)
!7098 = distinct !DILexicalBlock(scope: !7094, file: !898, line: 320, column: 5)
!7099 = !DILocation(line: 320, column: 19, scope: !7097)
!7100 = !DILocation(line: 320, column: 5, scope: !7097)
!7101 = !DILocation(line: 321, column: 19, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7098, file: !898, line: 321, column: 9)
!7103 = !DILocation(line: 321, column: 17, scope: !7102)
!7104 = !DILocation(line: 321, column: 14, scope: !7102)
!7105 = !DILocation(line: 321, column: 29, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !7107, file: !898, discriminator: 1)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !898, line: 321, column: 9)
!7108 = !DILocation(line: 321, column: 34, scope: !7106)
!7109 = !DILocation(line: 321, column: 37, scope: !7106)
!7110 = !DILocation(line: 321, column: 32, scope: !7106)
!7111 = !DILocation(line: 321, column: 9, scope: !7106)
!7112 = !DILocation(line: 322, column: 51, scope: !7107)
!7113 = !DILocation(line: 322, column: 54, scope: !7107)
!7114 = !DILocation(line: 322, column: 87, scope: !7107)
!7115 = !DILocation(line: 322, column: 58, scope: !7107)
!7116 = !DILocation(line: 322, column: 41, scope: !7107)
!7117 = !DILocation(line: 322, column: 36, scope: !7107)
!7118 = !DILocation(line: 322, column: 13, scope: !7107)
!7119 = !DILocation(line: 322, column: 32, scope: !7107)
!7120 = !DILocation(line: 322, column: 16, scope: !7107)
!7121 = !DILocation(line: 322, column: 39, scope: !7107)
!7122 = !DILocation(line: 321, column: 50, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7107, file: !898, discriminator: 2)
!7124 = !DILocation(line: 321, column: 9, scope: !7123)
!7125 = distinct !{!7125, !7126}
!7126 = !DILocation(line: 321, column: 9, scope: !7098)
!7127 = !DILocation(line: 322, column: 89, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !7102, file: !898, discriminator: 1)
!7129 = !DILocation(line: 320, column: 26, scope: !7130)
!7130 = !DILexicalBlockFile(scope: !7098, file: !898, discriminator: 2)
!7131 = !DILocation(line: 320, column: 5, scope: !7130)
!7132 = distinct !{!7132, !7133}
!7133 = !DILocation(line: 320, column: 5, scope: !6504)
!7134 = !DILocation(line: 325, column: 12, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 325, column: 5)
!7136 = !DILocation(line: 325, column: 10, scope: !7135)
!7137 = !DILocation(line: 325, column: 17, scope: !7138)
!7138 = !DILexicalBlockFile(scope: !7139, file: !898, discriminator: 1)
!7139 = distinct !DILexicalBlock(scope: !7135, file: !898, line: 325, column: 5)
!7140 = !DILocation(line: 325, column: 19, scope: !7138)
!7141 = !DILocation(line: 325, column: 5, scope: !7138)
!7142 = !DILocation(line: 326, column: 19, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !898, line: 326, column: 9)
!7144 = !DILocation(line: 326, column: 17, scope: !7143)
!7145 = !DILocation(line: 326, column: 14, scope: !7143)
!7146 = !DILocation(line: 326, column: 29, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !7148, file: !898, discriminator: 1)
!7148 = distinct !DILexicalBlock(scope: !7143, file: !898, line: 326, column: 9)
!7149 = !DILocation(line: 326, column: 34, scope: !7147)
!7150 = !DILocation(line: 326, column: 37, scope: !7147)
!7151 = !DILocation(line: 326, column: 32, scope: !7147)
!7152 = !DILocation(line: 326, column: 9, scope: !7147)
!7153 = !DILocation(line: 327, column: 40, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7148, file: !898, line: 327, column: 17)
!7155 = !DILocation(line: 327, column: 17, scope: !7154)
!7156 = !DILocation(line: 327, column: 36, scope: !7154)
!7157 = !DILocation(line: 327, column: 20, scope: !7154)
!7158 = !DILocation(line: 327, column: 75, scope: !7154)
!7159 = !DILocation(line: 327, column: 45, scope: !7154)
!7160 = !DILocation(line: 327, column: 43, scope: !7154)
!7161 = !DILocation(line: 327, column: 17, scope: !7148)
!7162 = !DILocation(line: 328, column: 80, scope: !7154)
!7163 = !DILocation(line: 328, column: 83, scope: !7154)
!7164 = !DILocation(line: 328, column: 70, scope: !7154)
!7165 = !DILocation(line: 328, column: 46, scope: !7154)
!7166 = !DILocation(line: 328, column: 41, scope: !7154)
!7167 = !DILocation(line: 328, column: 17, scope: !7154)
!7168 = !DILocation(line: 328, column: 37, scope: !7154)
!7169 = !DILocation(line: 328, column: 20, scope: !7154)
!7170 = !DILocation(line: 328, column: 44, scope: !7154)
!7171 = !DILocation(line: 327, column: 76, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !7154, file: !898, discriminator: 1)
!7173 = !DILocation(line: 326, column: 50, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !7148, file: !898, discriminator: 2)
!7175 = !DILocation(line: 326, column: 9, scope: !7174)
!7176 = distinct !{!7176, !7177}
!7177 = !DILocation(line: 326, column: 9, scope: !7139)
!7178 = !DILocation(line: 328, column: 89, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !7143, file: !898, discriminator: 1)
!7180 = !DILocation(line: 325, column: 26, scope: !7181)
!7181 = !DILexicalBlockFile(scope: !7139, file: !898, discriminator: 2)
!7182 = !DILocation(line: 325, column: 5, scope: !7181)
!7183 = distinct !{!7183, !7184}
!7184 = !DILocation(line: 325, column: 5, scope: !6504)
!7185 = !DILocation(line: 330, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !6504, file: !898, line: 330, column: 9)
!7187 = !DILocation(line: 330, column: 16, scope: !7186)
!7188 = !DILocation(line: 330, column: 9, scope: !6504)
!7189 = !DILocation(line: 334, column: 31, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !898, line: 334, column: 13)
!7191 = distinct !DILexicalBlock(scope: !7186, file: !898, line: 330, column: 32)
!7192 = !DILocation(line: 334, column: 34, scope: !7190)
!7193 = !DILocation(line: 334, column: 38, scope: !7190)
!7194 = !DILocation(line: 334, column: 51, scope: !7190)
!7195 = !DILocation(line: 334, column: 63, scope: !7190)
!7196 = !DILocation(line: 334, column: 49, scope: !7190)
!7197 = !DILocation(line: 334, column: 13, scope: !7190)
!7198 = !DILocation(line: 334, column: 13, scope: !7191)
!7199 = !DILocation(line: 335, column: 20, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7190, file: !898, line: 334, column: 69)
!7201 = !DILocation(line: 335, column: 23, scope: !7200)
!7202 = !DILocation(line: 335, column: 13, scope: !7200)
!7203 = !DILocation(line: 336, column: 13, scope: !7200)
!7204 = !DILocation(line: 338, column: 5, scope: !7191)
!7205 = !DILocation(line: 340, column: 13, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !898, line: 340, column: 13)
!7207 = distinct !DILexicalBlock(scope: !7186, file: !898, line: 338, column: 12)
!7208 = !DILocation(line: 340, column: 16, scope: !7206)
!7209 = !DILocation(line: 340, column: 13, scope: !7207)
!7210 = !DILocation(line: 341, column: 24, scope: !7206)
!7211 = !DILocation(line: 341, column: 27, scope: !7206)
!7212 = !DILocation(line: 341, column: 13, scope: !7206)
!7213 = !DILocation(line: 344, column: 5, scope: !6504)
!7214 = !DILocation(line: 345, column: 1, scope: !6504)
!7215 = distinct !DISubprogram(name: "parse_subframe_header", scope: !898, file: !898, line: 399, type: !7216, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!1027, !1094, !1027, !897, !1027}
!7218 = !DILocalVariable(name: "s", arg: 1, scope: !7215, file: !898, line: 399, type: !1094)
!7219 = !DILocation(line: 399, column: 50, scope: !7215)
!7220 = !DILocalVariable(name: "sf", arg: 2, scope: !7215, file: !898, line: 399, type: !1027)
!7221 = !DILocation(line: 399, column: 57, scope: !7215)
!7222 = !DILocalVariable(name: "header", arg: 3, scope: !7215, file: !898, line: 400, type: !897)
!7223 = !DILocation(line: 400, column: 50, scope: !7215)
!7224 = !DILocalVariable(name: "xch_base", arg: 4, scope: !7215, file: !898, line: 400, type: !1027)
!7225 = !DILocation(line: 400, column: 62, scope: !7215)
!7226 = !DILocalVariable(name: "ch", scope: !7215, file: !898, line: 402, type: !1027)
!7227 = !DILocation(line: 402, column: 9, scope: !7215)
!7228 = !DILocalVariable(name: "band", scope: !7215, file: !898, line: 402, type: !1027)
!7229 = !DILocation(line: 402, column: 13, scope: !7215)
!7230 = !DILocalVariable(name: "ret", scope: !7215, file: !898, line: 402, type: !1027)
!7231 = !DILocation(line: 402, column: 19, scope: !7215)
!7232 = !DILocation(line: 404, column: 24, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 404, column: 9)
!7234 = !DILocation(line: 404, column: 27, scope: !7233)
!7235 = !DILocation(line: 404, column: 9, scope: !7233)
!7236 = !DILocation(line: 404, column: 31, scope: !7233)
!7237 = !DILocation(line: 404, column: 9, scope: !7215)
!7238 = !DILocation(line: 405, column: 9, scope: !7233)
!7239 = !DILocation(line: 407, column: 9, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 407, column: 9)
!7241 = !DILocation(line: 407, column: 16, scope: !7240)
!7242 = !DILocation(line: 407, column: 9, scope: !7215)
!7243 = !DILocation(line: 409, column: 42, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7240, file: !898, line: 407, column: 32)
!7245 = !DILocation(line: 409, column: 45, scope: !7244)
!7246 = !DILocation(line: 409, column: 32, scope: !7244)
!7247 = !DILocation(line: 409, column: 52, scope: !7244)
!7248 = !DILocation(line: 409, column: 26, scope: !7244)
!7249 = !DILocation(line: 409, column: 9, scope: !7244)
!7250 = !DILocation(line: 409, column: 12, scope: !7244)
!7251 = !DILocation(line: 409, column: 30, scope: !7244)
!7252 = !DILocation(line: 412, column: 20, scope: !7244)
!7253 = !DILocation(line: 412, column: 23, scope: !7244)
!7254 = !DILocation(line: 412, column: 9, scope: !7244)
!7255 = !DILocation(line: 413, column: 5, scope: !7244)
!7256 = !DILocation(line: 416, column: 15, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 416, column: 5)
!7258 = !DILocation(line: 416, column: 13, scope: !7257)
!7259 = !DILocation(line: 416, column: 10, scope: !7257)
!7260 = !DILocation(line: 416, column: 25, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !7262, file: !898, discriminator: 1)
!7262 = distinct !DILexicalBlock(scope: !7257, file: !898, line: 416, column: 5)
!7263 = !DILocation(line: 416, column: 30, scope: !7261)
!7264 = !DILocation(line: 416, column: 33, scope: !7261)
!7265 = !DILocation(line: 416, column: 28, scope: !7261)
!7266 = !DILocation(line: 416, column: 5, scope: !7261)
!7267 = !DILocation(line: 417, column: 19, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7262, file: !898, line: 417, column: 9)
!7269 = !DILocation(line: 417, column: 14, scope: !7268)
!7270 = !DILocation(line: 417, column: 24, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7272, file: !898, discriminator: 1)
!7272 = distinct !DILexicalBlock(scope: !7268, file: !898, line: 417, column: 9)
!7273 = !DILocation(line: 417, column: 44, scope: !7271)
!7274 = !DILocation(line: 417, column: 31, scope: !7271)
!7275 = !DILocation(line: 417, column: 34, scope: !7271)
!7276 = !DILocation(line: 417, column: 29, scope: !7271)
!7277 = !DILocation(line: 417, column: 9, scope: !7271)
!7278 = !DILocation(line: 418, column: 55, scope: !7272)
!7279 = !DILocation(line: 418, column: 58, scope: !7272)
!7280 = !DILocation(line: 418, column: 44, scope: !7272)
!7281 = !DILocation(line: 418, column: 36, scope: !7272)
!7282 = !DILocation(line: 418, column: 13, scope: !7272)
!7283 = !DILocation(line: 418, column: 32, scope: !7272)
!7284 = !DILocation(line: 418, column: 16, scope: !7272)
!7285 = !DILocation(line: 418, column: 42, scope: !7272)
!7286 = !DILocation(line: 417, column: 53, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !7272, file: !898, discriminator: 2)
!7288 = !DILocation(line: 417, column: 9, scope: !7287)
!7289 = distinct !{!7289, !7290}
!7290 = !DILocation(line: 417, column: 9, scope: !7262)
!7291 = !DILocation(line: 418, column: 60, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7268, file: !898, discriminator: 1)
!7293 = !DILocation(line: 416, column: 46, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7262, file: !898, discriminator: 2)
!7295 = !DILocation(line: 416, column: 5, scope: !7294)
!7296 = distinct !{!7296, !7297}
!7297 = !DILocation(line: 416, column: 5, scope: !7215)
!7298 = !DILocation(line: 421, column: 15, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 421, column: 5)
!7300 = !DILocation(line: 421, column: 13, scope: !7299)
!7301 = !DILocation(line: 421, column: 10, scope: !7299)
!7302 = !DILocation(line: 421, column: 25, scope: !7303)
!7303 = !DILexicalBlockFile(scope: !7304, file: !898, discriminator: 1)
!7304 = distinct !DILexicalBlock(scope: !7299, file: !898, line: 421, column: 5)
!7305 = !DILocation(line: 421, column: 30, scope: !7303)
!7306 = !DILocation(line: 421, column: 33, scope: !7303)
!7307 = !DILocation(line: 421, column: 28, scope: !7303)
!7308 = !DILocation(line: 421, column: 5, scope: !7303)
!7309 = !DILocation(line: 422, column: 19, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7304, file: !898, line: 422, column: 9)
!7311 = !DILocation(line: 422, column: 14, scope: !7310)
!7312 = !DILocation(line: 422, column: 24, scope: !7313)
!7313 = !DILexicalBlockFile(scope: !7314, file: !898, discriminator: 1)
!7314 = distinct !DILexicalBlock(scope: !7310, file: !898, line: 422, column: 9)
!7315 = !DILocation(line: 422, column: 44, scope: !7313)
!7316 = !DILocation(line: 422, column: 31, scope: !7313)
!7317 = !DILocation(line: 422, column: 34, scope: !7313)
!7318 = !DILocation(line: 422, column: 29, scope: !7313)
!7319 = !DILocation(line: 422, column: 9, scope: !7313)
!7320 = !DILocation(line: 423, column: 40, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7314, file: !898, line: 423, column: 17)
!7322 = !DILocation(line: 423, column: 17, scope: !7321)
!7323 = !DILocation(line: 423, column: 36, scope: !7321)
!7324 = !DILocation(line: 423, column: 20, scope: !7321)
!7325 = !DILocation(line: 423, column: 17, scope: !7314)
!7326 = !DILocation(line: 424, column: 62, scope: !7321)
!7327 = !DILocation(line: 424, column: 65, scope: !7321)
!7328 = !DILocation(line: 424, column: 52, scope: !7321)
!7329 = !DILocation(line: 424, column: 44, scope: !7321)
!7330 = !DILocation(line: 424, column: 17, scope: !7321)
!7331 = !DILocation(line: 424, column: 40, scope: !7321)
!7332 = !DILocation(line: 424, column: 20, scope: !7321)
!7333 = !DILocation(line: 424, column: 50, scope: !7321)
!7334 = !DILocation(line: 423, column: 44, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7321, file: !898, discriminator: 1)
!7336 = !DILocation(line: 422, column: 53, scope: !7337)
!7337 = !DILexicalBlockFile(scope: !7314, file: !898, discriminator: 2)
!7338 = !DILocation(line: 422, column: 9, scope: !7337)
!7339 = distinct !{!7339, !7340}
!7340 = !DILocation(line: 422, column: 9, scope: !7304)
!7341 = !DILocation(line: 424, column: 71, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !7310, file: !898, discriminator: 1)
!7343 = !DILocation(line: 421, column: 46, scope: !7344)
!7344 = !DILexicalBlockFile(scope: !7304, file: !898, discriminator: 2)
!7345 = !DILocation(line: 421, column: 5, scope: !7344)
!7346 = distinct !{!7346, !7347}
!7347 = !DILocation(line: 421, column: 5, scope: !7215)
!7348 = !DILocation(line: 427, column: 15, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 427, column: 5)
!7350 = !DILocation(line: 427, column: 13, scope: !7349)
!7351 = !DILocation(line: 427, column: 10, scope: !7349)
!7352 = !DILocation(line: 427, column: 25, scope: !7353)
!7353 = !DILexicalBlockFile(scope: !7354, file: !898, discriminator: 1)
!7354 = distinct !DILexicalBlock(scope: !7349, file: !898, line: 427, column: 5)
!7355 = !DILocation(line: 427, column: 30, scope: !7353)
!7356 = !DILocation(line: 427, column: 33, scope: !7353)
!7357 = !DILocation(line: 427, column: 28, scope: !7353)
!7358 = !DILocation(line: 427, column: 5, scope: !7353)
!7359 = !DILocalVariable(name: "sel", scope: !7360, file: !898, line: 428, type: !1027)
!7360 = distinct !DILexicalBlock(scope: !7354, file: !898, line: 427, column: 50)
!7361 = !DILocation(line: 428, column: 13, scope: !7360)
!7362 = !DILocation(line: 428, column: 41, scope: !7360)
!7363 = !DILocation(line: 428, column: 19, scope: !7360)
!7364 = !DILocation(line: 428, column: 22, scope: !7360)
!7365 = !DILocation(line: 430, column: 19, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7360, file: !898, line: 430, column: 9)
!7367 = !DILocation(line: 430, column: 14, scope: !7366)
!7368 = !DILocation(line: 430, column: 24, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7370, file: !898, discriminator: 1)
!7370 = distinct !DILexicalBlock(scope: !7366, file: !898, line: 430, column: 9)
!7371 = !DILocation(line: 430, column: 51, scope: !7369)
!7372 = !DILocation(line: 430, column: 31, scope: !7369)
!7373 = !DILocation(line: 430, column: 34, scope: !7369)
!7374 = !DILocation(line: 430, column: 29, scope: !7369)
!7375 = !DILocation(line: 430, column: 9, scope: !7369)
!7376 = !DILocalVariable(name: "abits", scope: !7377, file: !898, line: 431, type: !1027)
!7377 = distinct !DILexicalBlock(scope: !7370, file: !898, line: 430, column: 64)
!7378 = !DILocation(line: 431, column: 17, scope: !7377)
!7379 = !DILocation(line: 433, column: 17, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7377, file: !898, line: 433, column: 17)
!7381 = !DILocation(line: 433, column: 21, scope: !7380)
!7382 = !DILocation(line: 433, column: 17, scope: !7377)
!7383 = !DILocation(line: 434, column: 38, scope: !7380)
!7384 = !DILocation(line: 434, column: 41, scope: !7380)
!7385 = !DILocation(line: 434, column: 73, scope: !7380)
!7386 = !DILocation(line: 434, column: 25, scope: !7380)
!7387 = !DILocation(line: 434, column: 23, scope: !7380)
!7388 = !DILocation(line: 434, column: 17, scope: !7380)
!7389 = !DILocation(line: 436, column: 35, scope: !7380)
!7390 = !DILocation(line: 436, column: 38, scope: !7380)
!7391 = !DILocation(line: 436, column: 42, scope: !7380)
!7392 = !DILocation(line: 436, column: 46, scope: !7380)
!7393 = !DILocation(line: 436, column: 25, scope: !7380)
!7394 = !DILocation(line: 436, column: 23, scope: !7380)
!7395 = !DILocation(line: 438, column: 17, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7377, file: !898, line: 438, column: 17)
!7397 = !DILocation(line: 438, column: 23, scope: !7396)
!7398 = !DILocation(line: 438, column: 17, scope: !7377)
!7399 = !DILocation(line: 439, column: 24, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !898, line: 438, column: 29)
!7401 = !DILocation(line: 439, column: 27, scope: !7400)
!7402 = !DILocation(line: 439, column: 17, scope: !7400)
!7403 = !DILocation(line: 440, column: 17, scope: !7400)
!7404 = !DILocation(line: 443, column: 43, scope: !7377)
!7405 = !DILocation(line: 443, column: 35, scope: !7377)
!7406 = !DILocation(line: 443, column: 13, scope: !7377)
!7407 = !DILocation(line: 443, column: 31, scope: !7377)
!7408 = !DILocation(line: 443, column: 16, scope: !7377)
!7409 = !DILocation(line: 443, column: 41, scope: !7377)
!7410 = !DILocation(line: 444, column: 9, scope: !7377)
!7411 = !DILocation(line: 430, column: 60, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7370, file: !898, discriminator: 2)
!7413 = !DILocation(line: 430, column: 9, scope: !7412)
!7414 = distinct !{!7414, !7415}
!7415 = !DILocation(line: 430, column: 9, scope: !7360)
!7416 = !DILocation(line: 445, column: 5, scope: !7360)
!7417 = !DILocation(line: 427, column: 46, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !7354, file: !898, discriminator: 2)
!7419 = !DILocation(line: 427, column: 5, scope: !7418)
!7420 = distinct !{!7420, !7421}
!7421 = !DILocation(line: 427, column: 5, scope: !7215)
!7422 = !DILocation(line: 448, column: 15, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 448, column: 5)
!7424 = !DILocation(line: 448, column: 13, scope: !7423)
!7425 = !DILocation(line: 448, column: 10, scope: !7423)
!7426 = !DILocation(line: 448, column: 25, scope: !7427)
!7427 = !DILexicalBlockFile(scope: !7428, file: !898, discriminator: 1)
!7428 = distinct !DILexicalBlock(scope: !7423, file: !898, line: 448, column: 5)
!7429 = !DILocation(line: 448, column: 30, scope: !7427)
!7430 = !DILocation(line: 448, column: 33, scope: !7427)
!7431 = !DILocation(line: 448, column: 28, scope: !7427)
!7432 = !DILocation(line: 448, column: 5, scope: !7427)
!7433 = !DILocation(line: 450, column: 39, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7428, file: !898, line: 448, column: 50)
!7435 = !DILocation(line: 450, column: 16, scope: !7434)
!7436 = !DILocation(line: 450, column: 35, scope: !7434)
!7437 = !DILocation(line: 450, column: 19, scope: !7434)
!7438 = !DILocation(line: 450, column: 9, scope: !7434)
!7439 = !DILocation(line: 453, column: 30, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7434, file: !898, line: 453, column: 13)
!7441 = !DILocation(line: 453, column: 13, scope: !7440)
!7442 = !DILocation(line: 453, column: 16, scope: !7440)
!7443 = !DILocation(line: 453, column: 34, scope: !7440)
!7444 = !DILocation(line: 453, column: 13, scope: !7434)
!7445 = !DILocalVariable(name: "sel", scope: !7446, file: !898, line: 454, type: !1027)
!7446 = distinct !DILexicalBlock(scope: !7440, file: !898, line: 453, column: 39)
!7447 = !DILocation(line: 454, column: 17, scope: !7446)
!7448 = !DILocation(line: 454, column: 46, scope: !7446)
!7449 = !DILocation(line: 454, column: 23, scope: !7446)
!7450 = !DILocation(line: 454, column: 26, scope: !7446)
!7451 = !DILocation(line: 455, column: 23, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7446, file: !898, line: 455, column: 13)
!7453 = !DILocation(line: 455, column: 18, scope: !7452)
!7454 = !DILocation(line: 455, column: 28, scope: !7455)
!7455 = !DILexicalBlockFile(scope: !7456, file: !898, discriminator: 1)
!7456 = distinct !DILexicalBlock(scope: !7452, file: !898, line: 455, column: 13)
!7457 = !DILocation(line: 455, column: 55, scope: !7455)
!7458 = !DILocation(line: 455, column: 35, scope: !7455)
!7459 = !DILocation(line: 455, column: 38, scope: !7455)
!7460 = !DILocation(line: 455, column: 33, scope: !7455)
!7461 = !DILocation(line: 455, column: 13, scope: !7455)
!7462 = !DILocation(line: 456, column: 43, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7456, file: !898, line: 456, column: 21)
!7464 = !DILocation(line: 456, column: 21, scope: !7463)
!7465 = !DILocation(line: 456, column: 39, scope: !7463)
!7466 = !DILocation(line: 456, column: 24, scope: !7463)
!7467 = !DILocation(line: 456, column: 21, scope: !7456)
!7468 = !DILocation(line: 457, column: 69, scope: !7463)
!7469 = !DILocation(line: 457, column: 72, scope: !7463)
!7470 = !DILocation(line: 457, column: 105, scope: !7463)
!7471 = !DILocation(line: 457, column: 56, scope: !7463)
!7472 = !DILocation(line: 457, column: 48, scope: !7463)
!7473 = !DILocation(line: 457, column: 21, scope: !7463)
!7474 = !DILocation(line: 457, column: 44, scope: !7463)
!7475 = !DILocation(line: 457, column: 40, scope: !7463)
!7476 = !DILocation(line: 457, column: 24, scope: !7463)
!7477 = !DILocation(line: 457, column: 54, scope: !7463)
!7478 = !DILocation(line: 456, column: 47, scope: !7479)
!7479 = !DILexicalBlockFile(scope: !7463, file: !898, discriminator: 1)
!7480 = !DILocation(line: 455, column: 64, scope: !7481)
!7481 = !DILexicalBlockFile(scope: !7456, file: !898, discriminator: 2)
!7482 = !DILocation(line: 455, column: 13, scope: !7481)
!7483 = distinct !{!7483, !7484}
!7484 = !DILocation(line: 455, column: 13, scope: !7446)
!7485 = !DILocation(line: 458, column: 9, scope: !7446)
!7486 = !DILocation(line: 459, column: 5, scope: !7434)
!7487 = !DILocation(line: 448, column: 46, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7428, file: !898, discriminator: 2)
!7489 = !DILocation(line: 448, column: 5, scope: !7488)
!7490 = distinct !{!7490, !7491}
!7491 = !DILocation(line: 448, column: 5, scope: !7215)
!7492 = !DILocation(line: 462, column: 15, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 462, column: 5)
!7494 = !DILocation(line: 462, column: 13, scope: !7493)
!7495 = !DILocation(line: 462, column: 10, scope: !7493)
!7496 = !DILocation(line: 462, column: 25, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7498, file: !898, discriminator: 1)
!7498 = distinct !DILexicalBlock(scope: !7493, file: !898, line: 462, column: 5)
!7499 = !DILocation(line: 462, column: 30, scope: !7497)
!7500 = !DILocation(line: 462, column: 33, scope: !7497)
!7501 = !DILocation(line: 462, column: 28, scope: !7497)
!7502 = !DILocation(line: 462, column: 5, scope: !7497)
!7503 = !DILocalVariable(name: "sel", scope: !7504, file: !898, line: 463, type: !1027)
!7504 = distinct !DILexicalBlock(scope: !7498, file: !898, line: 462, column: 50)
!7505 = !DILocation(line: 463, column: 13, scope: !7504)
!7506 = !DILocation(line: 463, column: 39, scope: !7504)
!7507 = !DILocation(line: 463, column: 19, scope: !7504)
!7508 = !DILocation(line: 463, column: 22, scope: !7504)
!7509 = !DILocalVariable(name: "scale_index", scope: !7504, file: !898, line: 464, type: !1027)
!7510 = !DILocation(line: 464, column: 13, scope: !7504)
!7511 = !DILocation(line: 467, column: 19, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7504, file: !898, line: 467, column: 9)
!7513 = !DILocation(line: 467, column: 14, scope: !7512)
!7514 = !DILocation(line: 467, column: 24, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7516, file: !898, discriminator: 1)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !898, line: 467, column: 9)
!7517 = !DILocation(line: 467, column: 51, scope: !7515)
!7518 = !DILocation(line: 467, column: 31, scope: !7515)
!7519 = !DILocation(line: 467, column: 34, scope: !7515)
!7520 = !DILocation(line: 467, column: 29, scope: !7515)
!7521 = !DILocation(line: 467, column: 9, scope: !7515)
!7522 = !DILocation(line: 468, column: 39, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !898, line: 468, column: 17)
!7524 = distinct !DILexicalBlock(scope: !7516, file: !898, line: 467, column: 64)
!7525 = !DILocation(line: 468, column: 17, scope: !7523)
!7526 = !DILocation(line: 468, column: 35, scope: !7523)
!7527 = !DILocation(line: 468, column: 20, scope: !7523)
!7528 = !DILocation(line: 468, column: 17, scope: !7524)
!7529 = !DILocation(line: 469, column: 40, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !898, line: 469, column: 21)
!7531 = distinct !DILexicalBlock(scope: !7523, file: !898, line: 468, column: 46)
!7532 = !DILocation(line: 469, column: 57, scope: !7530)
!7533 = !DILocation(line: 469, column: 28, scope: !7530)
!7534 = !DILocation(line: 469, column: 26, scope: !7530)
!7535 = !DILocation(line: 469, column: 63, scope: !7530)
!7536 = !DILocation(line: 469, column: 21, scope: !7531)
!7537 = !DILocation(line: 470, column: 28, scope: !7530)
!7538 = !DILocation(line: 470, column: 21, scope: !7530)
!7539 = !DILocation(line: 471, column: 49, scope: !7531)
!7540 = !DILocation(line: 471, column: 38, scope: !7531)
!7541 = !DILocation(line: 471, column: 17, scope: !7531)
!7542 = !DILocation(line: 471, column: 34, scope: !7531)
!7543 = !DILocation(line: 471, column: 20, scope: !7531)
!7544 = !DILocation(line: 471, column: 47, scope: !7531)
!7545 = !DILocation(line: 472, column: 48, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7531, file: !898, line: 472, column: 21)
!7547 = !DILocation(line: 472, column: 21, scope: !7546)
!7548 = !DILocation(line: 472, column: 44, scope: !7546)
!7549 = !DILocation(line: 472, column: 40, scope: !7546)
!7550 = !DILocation(line: 472, column: 24, scope: !7546)
!7551 = !DILocation(line: 472, column: 21, scope: !7531)
!7552 = !DILocation(line: 473, column: 44, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !898, line: 473, column: 25)
!7554 = distinct !DILexicalBlock(scope: !7546, file: !898, line: 472, column: 55)
!7555 = !DILocation(line: 473, column: 61, scope: !7553)
!7556 = !DILocation(line: 473, column: 32, scope: !7553)
!7557 = !DILocation(line: 473, column: 30, scope: !7553)
!7558 = !DILocation(line: 473, column: 67, scope: !7553)
!7559 = !DILocation(line: 473, column: 25, scope: !7554)
!7560 = !DILocation(line: 474, column: 32, scope: !7553)
!7561 = !DILocation(line: 474, column: 25, scope: !7553)
!7562 = !DILocation(line: 475, column: 53, scope: !7554)
!7563 = !DILocation(line: 475, column: 42, scope: !7554)
!7564 = !DILocation(line: 475, column: 21, scope: !7554)
!7565 = !DILocation(line: 475, column: 38, scope: !7554)
!7566 = !DILocation(line: 475, column: 24, scope: !7554)
!7567 = !DILocation(line: 475, column: 51, scope: !7554)
!7568 = !DILocation(line: 476, column: 17, scope: !7554)
!7569 = !DILocation(line: 477, column: 13, scope: !7531)
!7570 = !DILocation(line: 478, column: 38, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7523, file: !898, line: 477, column: 20)
!7572 = !DILocation(line: 478, column: 17, scope: !7571)
!7573 = !DILocation(line: 478, column: 34, scope: !7571)
!7574 = !DILocation(line: 478, column: 20, scope: !7571)
!7575 = !DILocation(line: 478, column: 47, scope: !7571)
!7576 = !DILocation(line: 480, column: 9, scope: !7524)
!7577 = !DILocation(line: 467, column: 60, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7516, file: !898, discriminator: 2)
!7579 = !DILocation(line: 467, column: 9, scope: !7578)
!7580 = distinct !{!7580, !7581}
!7581 = !DILocation(line: 467, column: 9, scope: !7504)
!7582 = !DILocation(line: 483, column: 41, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7504, file: !898, line: 483, column: 9)
!7584 = !DILocation(line: 483, column: 21, scope: !7583)
!7585 = !DILocation(line: 483, column: 24, scope: !7583)
!7586 = !DILocation(line: 483, column: 19, scope: !7583)
!7587 = !DILocation(line: 483, column: 14, scope: !7583)
!7588 = !DILocation(line: 483, column: 46, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !7590, file: !898, discriminator: 1)
!7590 = distinct !DILexicalBlock(scope: !7583, file: !898, line: 483, column: 9)
!7591 = !DILocation(line: 483, column: 66, scope: !7589)
!7592 = !DILocation(line: 483, column: 53, scope: !7589)
!7593 = !DILocation(line: 483, column: 56, scope: !7589)
!7594 = !DILocation(line: 483, column: 51, scope: !7589)
!7595 = !DILocation(line: 483, column: 9, scope: !7589)
!7596 = !DILocation(line: 484, column: 36, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !898, line: 484, column: 17)
!7598 = distinct !DILexicalBlock(scope: !7590, file: !898, line: 483, column: 79)
!7599 = !DILocation(line: 484, column: 53, scope: !7597)
!7600 = !DILocation(line: 484, column: 24, scope: !7597)
!7601 = !DILocation(line: 484, column: 22, scope: !7597)
!7602 = !DILocation(line: 484, column: 59, scope: !7597)
!7603 = !DILocation(line: 484, column: 17, scope: !7598)
!7604 = !DILocation(line: 485, column: 24, scope: !7597)
!7605 = !DILocation(line: 485, column: 17, scope: !7597)
!7606 = !DILocation(line: 486, column: 45, scope: !7598)
!7607 = !DILocation(line: 486, column: 34, scope: !7598)
!7608 = !DILocation(line: 486, column: 13, scope: !7598)
!7609 = !DILocation(line: 486, column: 30, scope: !7598)
!7610 = !DILocation(line: 486, column: 16, scope: !7598)
!7611 = !DILocation(line: 486, column: 43, scope: !7598)
!7612 = !DILocation(line: 487, column: 9, scope: !7598)
!7613 = !DILocation(line: 483, column: 75, scope: !7614)
!7614 = !DILexicalBlockFile(scope: !7590, file: !898, discriminator: 2)
!7615 = !DILocation(line: 483, column: 9, scope: !7614)
!7616 = distinct !{!7616, !7617}
!7617 = !DILocation(line: 483, column: 9, scope: !7504)
!7618 = !DILocation(line: 488, column: 5, scope: !7504)
!7619 = !DILocation(line: 462, column: 46, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7498, file: !898, discriminator: 2)
!7621 = !DILocation(line: 462, column: 5, scope: !7620)
!7622 = distinct !{!7622, !7623}
!7623 = !DILocation(line: 462, column: 5, scope: !7215)
!7624 = !DILocation(line: 491, column: 15, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 491, column: 5)
!7626 = !DILocation(line: 491, column: 13, scope: !7625)
!7627 = !DILocation(line: 491, column: 10, scope: !7625)
!7628 = !DILocation(line: 491, column: 25, scope: !7629)
!7629 = !DILexicalBlockFile(scope: !7630, file: !898, discriminator: 1)
!7630 = distinct !DILexicalBlock(scope: !7625, file: !898, line: 491, column: 5)
!7631 = !DILocation(line: 491, column: 30, scope: !7629)
!7632 = !DILocation(line: 491, column: 33, scope: !7629)
!7633 = !DILocation(line: 491, column: 28, scope: !7629)
!7634 = !DILocation(line: 491, column: 5, scope: !7629)
!7635 = !DILocation(line: 492, column: 38, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !898, line: 492, column: 13)
!7637 = distinct !DILexicalBlock(scope: !7630, file: !898, line: 491, column: 50)
!7638 = !DILocation(line: 492, column: 13, scope: !7636)
!7639 = !DILocation(line: 492, column: 16, scope: !7636)
!7640 = !DILocation(line: 492, column: 13, scope: !7637)
!7641 = !DILocation(line: 493, column: 48, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7636, file: !898, line: 492, column: 43)
!7643 = !DILocation(line: 493, column: 51, scope: !7642)
!7644 = !DILocation(line: 493, column: 38, scope: !7642)
!7645 = !DILocation(line: 493, column: 32, scope: !7642)
!7646 = !DILocation(line: 493, column: 13, scope: !7642)
!7647 = !DILocation(line: 493, column: 16, scope: !7642)
!7648 = !DILocation(line: 493, column: 36, scope: !7642)
!7649 = !DILocation(line: 494, column: 36, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7642, file: !898, line: 494, column: 17)
!7651 = !DILocation(line: 494, column: 17, scope: !7650)
!7652 = !DILocation(line: 494, column: 20, scope: !7650)
!7653 = !DILocation(line: 494, column: 40, scope: !7650)
!7654 = !DILocation(line: 494, column: 17, scope: !7642)
!7655 = !DILocation(line: 495, column: 24, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7650, file: !898, line: 494, column: 46)
!7657 = !DILocation(line: 495, column: 27, scope: !7656)
!7658 = !DILocation(line: 495, column: 17, scope: !7656)
!7659 = !DILocation(line: 496, column: 17, scope: !7656)
!7660 = !DILocation(line: 498, column: 9, scope: !7642)
!7661 = !DILocation(line: 499, column: 5, scope: !7637)
!7662 = !DILocation(line: 491, column: 46, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !7630, file: !898, discriminator: 2)
!7664 = !DILocation(line: 491, column: 5, scope: !7663)
!7665 = distinct !{!7665, !7666}
!7666 = !DILocation(line: 491, column: 5, scope: !7215)
!7667 = !DILocation(line: 502, column: 15, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 502, column: 5)
!7669 = !DILocation(line: 502, column: 13, scope: !7668)
!7670 = !DILocation(line: 502, column: 10, scope: !7668)
!7671 = !DILocation(line: 502, column: 25, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7673, file: !898, discriminator: 1)
!7673 = distinct !DILexicalBlock(scope: !7668, file: !898, line: 502, column: 5)
!7674 = !DILocation(line: 502, column: 30, scope: !7672)
!7675 = !DILocation(line: 502, column: 33, scope: !7672)
!7676 = !DILocation(line: 502, column: 28, scope: !7672)
!7677 = !DILocation(line: 502, column: 5, scope: !7672)
!7678 = !DILocalVariable(name: "src_ch", scope: !7679, file: !898, line: 503, type: !1027)
!7679 = distinct !DILexicalBlock(scope: !7673, file: !898, line: 502, column: 50)
!7680 = !DILocation(line: 503, column: 13, scope: !7679)
!7681 = !DILocation(line: 503, column: 47, scope: !7679)
!7682 = !DILocation(line: 503, column: 22, scope: !7679)
!7683 = !DILocation(line: 503, column: 25, scope: !7679)
!7684 = !DILocation(line: 503, column: 51, scope: !7679)
!7685 = !DILocation(line: 504, column: 13, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7679, file: !898, line: 504, column: 13)
!7687 = !DILocation(line: 504, column: 20, scope: !7686)
!7688 = !DILocation(line: 504, column: 13, scope: !7679)
!7689 = !DILocalVariable(name: "sel", scope: !7690, file: !898, line: 505, type: !1027)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !898, line: 504, column: 26)
!7691 = !DILocation(line: 505, column: 17, scope: !7690)
!7692 = !DILocation(line: 505, column: 42, scope: !7690)
!7693 = !DILocation(line: 505, column: 23, scope: !7690)
!7694 = !DILocation(line: 505, column: 26, scope: !7690)
!7695 = !DILocation(line: 506, column: 38, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7690, file: !898, line: 506, column: 13)
!7697 = !DILocation(line: 506, column: 25, scope: !7696)
!7698 = !DILocation(line: 506, column: 28, scope: !7696)
!7699 = !DILocation(line: 506, column: 23, scope: !7696)
!7700 = !DILocation(line: 506, column: 18, scope: !7696)
!7701 = !DILocation(line: 506, column: 43, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7703, file: !898, discriminator: 1)
!7703 = distinct !DILexicalBlock(scope: !7696, file: !898, line: 506, column: 13)
!7704 = !DILocation(line: 506, column: 63, scope: !7702)
!7705 = !DILocation(line: 506, column: 50, scope: !7702)
!7706 = !DILocation(line: 506, column: 53, scope: !7702)
!7707 = !DILocation(line: 506, column: 48, scope: !7702)
!7708 = !DILocation(line: 506, column: 13, scope: !7702)
!7709 = !DILocation(line: 507, column: 46, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !898, line: 507, column: 21)
!7711 = distinct !DILexicalBlock(scope: !7703, file: !898, line: 506, column: 80)
!7712 = !DILocation(line: 507, column: 49, scope: !7710)
!7713 = !DILocation(line: 507, column: 28, scope: !7710)
!7714 = !DILocation(line: 507, column: 26, scope: !7710)
!7715 = !DILocation(line: 507, column: 55, scope: !7710)
!7716 = !DILocation(line: 507, column: 21, scope: !7711)
!7717 = !DILocation(line: 508, column: 28, scope: !7710)
!7718 = !DILocation(line: 508, column: 21, scope: !7710)
!7719 = !DILocation(line: 509, column: 52, scope: !7711)
!7720 = !DILocation(line: 509, column: 44, scope: !7711)
!7721 = !DILocation(line: 509, column: 17, scope: !7711)
!7722 = !DILocation(line: 509, column: 40, scope: !7711)
!7723 = !DILocation(line: 509, column: 20, scope: !7711)
!7724 = !DILocation(line: 509, column: 50, scope: !7711)
!7725 = !DILocation(line: 510, column: 13, scope: !7711)
!7726 = !DILocation(line: 506, column: 76, scope: !7727)
!7727 = !DILexicalBlockFile(scope: !7703, file: !898, discriminator: 2)
!7728 = !DILocation(line: 506, column: 13, scope: !7727)
!7729 = distinct !{!7729, !7730}
!7730 = !DILocation(line: 506, column: 13, scope: !7690)
!7731 = !DILocation(line: 511, column: 9, scope: !7690)
!7732 = !DILocation(line: 512, column: 5, scope: !7679)
!7733 = !DILocation(line: 502, column: 46, scope: !7734)
!7734 = !DILexicalBlockFile(scope: !7673, file: !898, discriminator: 2)
!7735 = !DILocation(line: 502, column: 5, scope: !7734)
!7736 = distinct !{!7736, !7737}
!7737 = !DILocation(line: 502, column: 5, scope: !7215)
!7738 = !DILocation(line: 515, column: 9, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 515, column: 9)
!7740 = !DILocation(line: 515, column: 12, scope: !7739)
!7741 = !DILocation(line: 515, column: 24, scope: !7739)
!7742 = !DILocation(line: 515, column: 27, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7739, file: !898, discriminator: 1)
!7744 = !DILocation(line: 515, column: 34, scope: !7743)
!7745 = !DILocation(line: 515, column: 9, scope: !7743)
!7746 = !DILocation(line: 516, column: 20, scope: !7739)
!7747 = !DILocation(line: 516, column: 23, scope: !7739)
!7748 = !DILocation(line: 516, column: 9, scope: !7739)
!7749 = !DILocation(line: 519, column: 9, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7215, file: !898, line: 519, column: 9)
!7751 = !DILocation(line: 519, column: 12, scope: !7750)
!7752 = !DILocation(line: 519, column: 9, scope: !7215)
!7753 = !DILocation(line: 520, column: 20, scope: !7750)
!7754 = !DILocation(line: 520, column: 23, scope: !7750)
!7755 = !DILocation(line: 520, column: 9, scope: !7750)
!7756 = !DILocation(line: 522, column: 5, scope: !7215)
!7757 = !DILocation(line: 523, column: 1, scope: !7215)
!7758 = distinct !DISubprogram(name: "parse_subframe_audio", scope: !898, file: !898, line: 621, type: !7759, isLocal: true, isDefinition: true, scopeLine: 623, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{!1027, !1094, !1027, !897, !1027, !1385, !1385}
!7761 = !DILocalVariable(name: "s", arg: 1, scope: !7758, file: !898, line: 621, type: !1094)
!7762 = !DILocation(line: 621, column: 49, scope: !7758)
!7763 = !DILocalVariable(name: "sf", arg: 2, scope: !7758, file: !898, line: 621, type: !1027)
!7764 = !DILocation(line: 621, column: 56, scope: !7758)
!7765 = !DILocalVariable(name: "header", arg: 3, scope: !7758, file: !898, line: 621, type: !897)
!7766 = !DILocation(line: 621, column: 76, scope: !7758)
!7767 = !DILocalVariable(name: "xch_base", arg: 4, scope: !7758, file: !898, line: 622, type: !1027)
!7768 = !DILocation(line: 622, column: 37, scope: !7758)
!7769 = !DILocalVariable(name: "sub_pos", arg: 5, scope: !7758, file: !898, line: 622, type: !1385)
!7770 = !DILocation(line: 622, column: 52, scope: !7758)
!7771 = !DILocalVariable(name: "lfe_pos", arg: 6, scope: !7758, file: !898, line: 622, type: !1385)
!7772 = !DILocation(line: 622, column: 66, scope: !7758)
!7773 = !DILocalVariable(name: "audio", scope: !7758, file: !898, line: 624, type: !7774)
!7774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 512, align: 32, elements: !1863)
!7775 = !DILocation(line: 624, column: 13, scope: !7758)
!7776 = !DILocalVariable(name: "scale", scope: !7758, file: !898, line: 624, type: !1030)
!7777 = !DILocation(line: 624, column: 24, scope: !7758)
!7778 = !DILocalVariable(name: "n", scope: !7758, file: !898, line: 625, type: !1027)
!7779 = !DILocation(line: 625, column: 9, scope: !7758)
!7780 = !DILocalVariable(name: "ssf", scope: !7758, file: !898, line: 625, type: !1027)
!7781 = !DILocation(line: 625, column: 12, scope: !7758)
!7782 = !DILocalVariable(name: "ofs", scope: !7758, file: !898, line: 625, type: !1027)
!7783 = !DILocation(line: 625, column: 17, scope: !7758)
!7784 = !DILocalVariable(name: "ch", scope: !7758, file: !898, line: 625, type: !1027)
!7785 = !DILocation(line: 625, column: 22, scope: !7758)
!7786 = !DILocalVariable(name: "band", scope: !7758, file: !898, line: 625, type: !1027)
!7787 = !DILocation(line: 625, column: 26, scope: !7758)
!7788 = !DILocalVariable(name: "nsamples", scope: !7758, file: !898, line: 628, type: !1027)
!7789 = !DILocation(line: 628, column: 9, scope: !7758)
!7790 = !DILocation(line: 628, column: 37, scope: !7758)
!7791 = !DILocation(line: 628, column: 20, scope: !7758)
!7792 = !DILocation(line: 628, column: 23, scope: !7758)
!7793 = !DILocation(line: 628, column: 41, scope: !7758)
!7794 = !DILocation(line: 629, column: 10, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 629, column: 9)
!7796 = !DILocation(line: 629, column: 9, scope: !7795)
!7797 = !DILocation(line: 629, column: 20, scope: !7795)
!7798 = !DILocation(line: 629, column: 18, scope: !7795)
!7799 = !DILocation(line: 629, column: 31, scope: !7795)
!7800 = !DILocation(line: 629, column: 34, scope: !7795)
!7801 = !DILocation(line: 629, column: 29, scope: !7795)
!7802 = !DILocation(line: 629, column: 9, scope: !7758)
!7803 = !DILocation(line: 630, column: 16, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7795, file: !898, line: 629, column: 46)
!7805 = !DILocation(line: 630, column: 19, scope: !7804)
!7806 = !DILocation(line: 630, column: 9, scope: !7804)
!7807 = !DILocation(line: 631, column: 9, scope: !7804)
!7808 = !DILocation(line: 634, column: 24, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 634, column: 9)
!7810 = !DILocation(line: 634, column: 27, scope: !7809)
!7811 = !DILocation(line: 634, column: 9, scope: !7809)
!7812 = !DILocation(line: 634, column: 31, scope: !7809)
!7813 = !DILocation(line: 634, column: 9, scope: !7758)
!7814 = !DILocation(line: 635, column: 9, scope: !7809)
!7815 = !DILocation(line: 638, column: 15, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 638, column: 5)
!7817 = !DILocation(line: 638, column: 13, scope: !7816)
!7818 = !DILocation(line: 638, column: 10, scope: !7816)
!7819 = !DILocation(line: 638, column: 25, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !7821, file: !898, discriminator: 1)
!7821 = distinct !DILexicalBlock(scope: !7816, file: !898, line: 638, column: 5)
!7822 = !DILocation(line: 638, column: 30, scope: !7820)
!7823 = !DILocation(line: 638, column: 33, scope: !7820)
!7824 = !DILocation(line: 638, column: 28, scope: !7820)
!7825 = !DILocation(line: 638, column: 5, scope: !7820)
!7826 = !DILocalVariable(name: "vq_index", scope: !7827, file: !898, line: 639, type: !7828)
!7827 = distinct !DILexicalBlock(scope: !7821, file: !898, line: 638, column: 50)
!7828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 1024, align: 32, elements: !1963)
!7829 = !DILocation(line: 639, column: 17, scope: !7827)
!7830 = !DILocation(line: 641, column: 41, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !898, line: 641, column: 9)
!7832 = !DILocation(line: 641, column: 21, scope: !7831)
!7833 = !DILocation(line: 641, column: 24, scope: !7831)
!7834 = !DILocation(line: 641, column: 19, scope: !7831)
!7835 = !DILocation(line: 641, column: 14, scope: !7831)
!7836 = !DILocation(line: 641, column: 46, scope: !7837)
!7837 = !DILexicalBlockFile(scope: !7838, file: !898, discriminator: 1)
!7838 = distinct !DILexicalBlock(scope: !7831, file: !898, line: 641, column: 9)
!7839 = !DILocation(line: 641, column: 66, scope: !7837)
!7840 = !DILocation(line: 641, column: 53, scope: !7837)
!7841 = !DILocation(line: 641, column: 56, scope: !7837)
!7842 = !DILocation(line: 641, column: 51, scope: !7837)
!7843 = !DILocation(line: 641, column: 9, scope: !7837)
!7844 = !DILocation(line: 643, column: 40, scope: !7838)
!7845 = !DILocation(line: 643, column: 43, scope: !7838)
!7846 = !DILocation(line: 643, column: 30, scope: !7838)
!7847 = !DILocation(line: 643, column: 22, scope: !7838)
!7848 = !DILocation(line: 643, column: 13, scope: !7838)
!7849 = !DILocation(line: 643, column: 28, scope: !7838)
!7850 = !DILocation(line: 641, column: 75, scope: !7851)
!7851 = !DILexicalBlockFile(scope: !7838, file: !898, discriminator: 2)
!7852 = !DILocation(line: 641, column: 9, scope: !7851)
!7853 = distinct !{!7853, !7854}
!7854 = !DILocation(line: 641, column: 9, scope: !7827)
!7855 = !DILocation(line: 645, column: 33, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7827, file: !898, line: 645, column: 13)
!7857 = !DILocation(line: 645, column: 13, scope: !7856)
!7858 = !DILocation(line: 645, column: 16, scope: !7856)
!7859 = !DILocation(line: 645, column: 52, scope: !7856)
!7860 = !DILocation(line: 645, column: 39, scope: !7856)
!7861 = !DILocation(line: 645, column: 42, scope: !7856)
!7862 = !DILocation(line: 645, column: 37, scope: !7856)
!7863 = !DILocation(line: 645, column: 13, scope: !7827)
!7864 = !DILocation(line: 646, column: 13, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7856, file: !898, line: 645, column: 57)
!7866 = !DILocation(line: 646, column: 16, scope: !7865)
!7867 = !DILocation(line: 646, column: 24, scope: !7865)
!7868 = !DILocation(line: 646, column: 53, scope: !7865)
!7869 = !DILocation(line: 646, column: 34, scope: !7865)
!7870 = !DILocation(line: 646, column: 37, scope: !7865)
!7871 = !DILocation(line: 646, column: 58, scope: !7865)
!7872 = !DILocation(line: 647, column: 72, scope: !7865)
!7873 = !DILocation(line: 647, column: 55, scope: !7865)
!7874 = !DILocation(line: 647, column: 58, scope: !7865)
!7875 = !DILocation(line: 648, column: 54, scope: !7865)
!7876 = !DILocation(line: 648, column: 34, scope: !7865)
!7877 = !DILocation(line: 648, column: 37, scope: !7865)
!7878 = !DILocation(line: 648, column: 72, scope: !7865)
!7879 = !DILocation(line: 648, column: 59, scope: !7865)
!7880 = !DILocation(line: 648, column: 62, scope: !7865)
!7881 = !DILocation(line: 649, column: 35, scope: !7865)
!7882 = !DILocation(line: 649, column: 34, scope: !7865)
!7883 = !DILocation(line: 649, column: 44, scope: !7865)
!7884 = !DILocation(line: 650, column: 9, scope: !7865)
!7885 = !DILocation(line: 651, column: 5, scope: !7827)
!7886 = !DILocation(line: 638, column: 46, scope: !7887)
!7887 = !DILexicalBlockFile(scope: !7821, file: !898, discriminator: 2)
!7888 = !DILocation(line: 638, column: 5, scope: !7887)
!7889 = distinct !{!7889, !7890}
!7890 = !DILocation(line: 638, column: 5, scope: !7758)
!7891 = !DILocation(line: 654, column: 9, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 654, column: 9)
!7893 = !DILocation(line: 654, column: 12, scope: !7892)
!7894 = !DILocation(line: 654, column: 24, scope: !7892)
!7895 = !DILocation(line: 654, column: 27, scope: !7896)
!7896 = !DILexicalBlockFile(scope: !7892, file: !898, discriminator: 1)
!7897 = !DILocation(line: 654, column: 34, scope: !7896)
!7898 = !DILocation(line: 654, column: 9, scope: !7896)
!7899 = !DILocalVariable(name: "index", scope: !7900, file: !898, line: 655, type: !1028)
!7900 = distinct !DILexicalBlock(scope: !7892, file: !898, line: 654, column: 50)
!7901 = !DILocation(line: 655, column: 22, scope: !7900)
!7902 = !DILocalVariable(name: "nlfesamples", scope: !7900, file: !898, line: 658, type: !1027)
!7903 = !DILocation(line: 658, column: 13, scope: !7900)
!7904 = !DILocation(line: 658, column: 31, scope: !7900)
!7905 = !DILocation(line: 658, column: 34, scope: !7900)
!7906 = !DILocation(line: 658, column: 29, scope: !7900)
!7907 = !DILocation(line: 658, column: 65, scope: !7900)
!7908 = !DILocation(line: 658, column: 48, scope: !7900)
!7909 = !DILocation(line: 658, column: 51, scope: !7900)
!7910 = !DILocation(line: 658, column: 46, scope: !7900)
!7911 = !DILocation(line: 662, column: 20, scope: !7900)
!7912 = !DILocation(line: 662, column: 23, scope: !7900)
!7913 = !DILocation(line: 662, column: 27, scope: !7900)
!7914 = !DILocation(line: 662, column: 34, scope: !7900)
!7915 = !DILocation(line: 662, column: 9, scope: !7900)
!7916 = !DILocation(line: 665, column: 27, scope: !7900)
!7917 = !DILocation(line: 665, column: 30, scope: !7900)
!7918 = !DILocation(line: 665, column: 17, scope: !7900)
!7919 = !DILocation(line: 665, column: 15, scope: !7900)
!7920 = !DILocation(line: 666, column: 13, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7900, file: !898, line: 666, column: 13)
!7922 = !DILocation(line: 666, column: 19, scope: !7921)
!7923 = !DILocation(line: 666, column: 13, scope: !7900)
!7924 = !DILocation(line: 667, column: 20, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !898, line: 666, column: 102)
!7926 = !DILocation(line: 667, column: 23, scope: !7925)
!7927 = !DILocation(line: 667, column: 13, scope: !7925)
!7928 = !DILocation(line: 668, column: 13, scope: !7925)
!7929 = !DILocation(line: 672, column: 44, scope: !7900)
!7930 = !DILocation(line: 672, column: 17, scope: !7900)
!7931 = !DILocation(line: 672, column: 15, scope: !7900)
!7932 = !DILocation(line: 675, column: 33, scope: !7900)
!7933 = !DILocation(line: 675, column: 17, scope: !7900)
!7934 = !DILocation(line: 675, column: 15, scope: !7900)
!7935 = !DILocation(line: 678, column: 16, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7900, file: !898, line: 678, column: 9)
!7937 = !DILocation(line: 678, column: 28, scope: !7936)
!7938 = !DILocation(line: 678, column: 27, scope: !7936)
!7939 = !DILocation(line: 678, column: 25, scope: !7936)
!7940 = !DILocation(line: 678, column: 14, scope: !7936)
!7941 = !DILocation(line: 678, column: 37, scope: !7942)
!7942 = !DILexicalBlockFile(scope: !7943, file: !898, discriminator: 1)
!7943 = distinct !DILexicalBlock(scope: !7936, file: !898, line: 678, column: 9)
!7944 = !DILocation(line: 678, column: 41, scope: !7942)
!7945 = !DILocation(line: 678, column: 39, scope: !7942)
!7946 = !DILocation(line: 678, column: 9, scope: !7942)
!7947 = !DILocation(line: 679, column: 48, scope: !7943)
!7948 = !DILocation(line: 679, column: 42, scope: !7943)
!7949 = !DILocation(line: 679, column: 53, scope: !7943)
!7950 = !DILocation(line: 679, column: 51, scope: !7943)
!7951 = !DILocation(line: 679, column: 59, scope: !7943)
!7952 = !DILocation(line: 679, column: 35, scope: !7943)
!7953 = !DILocation(line: 679, column: 28, scope: !7943)
!7954 = !DILocation(line: 679, column: 13, scope: !7943)
!7955 = !DILocation(line: 679, column: 16, scope: !7943)
!7956 = !DILocation(line: 679, column: 33, scope: !7943)
!7957 = !DILocation(line: 678, column: 55, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !7943, file: !898, discriminator: 2)
!7959 = !DILocation(line: 678, column: 62, scope: !7958)
!7960 = !DILocation(line: 678, column: 9, scope: !7958)
!7961 = distinct !{!7961, !7962}
!7962 = !DILocation(line: 678, column: 9, scope: !7900)
!7963 = !DILocation(line: 682, column: 20, scope: !7900)
!7964 = !DILocation(line: 682, column: 10, scope: !7900)
!7965 = !DILocation(line: 682, column: 18, scope: !7900)
!7966 = !DILocation(line: 683, column: 5, scope: !7900)
!7967 = !DILocation(line: 686, column: 14, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 686, column: 5)
!7969 = !DILocation(line: 686, column: 26, scope: !7968)
!7970 = !DILocation(line: 686, column: 25, scope: !7968)
!7971 = !DILocation(line: 686, column: 23, scope: !7968)
!7972 = !DILocation(line: 686, column: 10, scope: !7968)
!7973 = !DILocation(line: 686, column: 35, scope: !7974)
!7974 = !DILexicalBlockFile(scope: !7975, file: !898, discriminator: 1)
!7975 = distinct !DILexicalBlock(scope: !7968, file: !898, line: 686, column: 5)
!7976 = !DILocation(line: 686, column: 58, scope: !7974)
!7977 = !DILocation(line: 686, column: 41, scope: !7974)
!7978 = !DILocation(line: 686, column: 44, scope: !7974)
!7979 = !DILocation(line: 686, column: 39, scope: !7974)
!7980 = !DILocation(line: 686, column: 5, scope: !7974)
!7981 = !DILocation(line: 687, column: 19, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !898, line: 687, column: 9)
!7983 = distinct !DILexicalBlock(scope: !7975, file: !898, line: 686, column: 70)
!7984 = !DILocation(line: 687, column: 17, scope: !7982)
!7985 = !DILocation(line: 687, column: 14, scope: !7982)
!7986 = !DILocation(line: 687, column: 29, scope: !7987)
!7987 = !DILexicalBlockFile(scope: !7988, file: !898, discriminator: 1)
!7988 = distinct !DILexicalBlock(scope: !7982, file: !898, line: 687, column: 9)
!7989 = !DILocation(line: 687, column: 34, scope: !7987)
!7990 = !DILocation(line: 687, column: 37, scope: !7987)
!7991 = !DILocation(line: 687, column: 32, scope: !7987)
!7992 = !DILocation(line: 687, column: 9, scope: !7987)
!7993 = !DILocation(line: 688, column: 32, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !898, line: 688, column: 17)
!7995 = distinct !DILexicalBlock(scope: !7988, file: !898, line: 687, column: 54)
!7996 = !DILocation(line: 688, column: 35, scope: !7994)
!7997 = !DILocation(line: 688, column: 17, scope: !7994)
!7998 = !DILocation(line: 688, column: 39, scope: !7994)
!7999 = !DILocation(line: 688, column: 17, scope: !7995)
!8000 = !DILocation(line: 689, column: 17, scope: !7994)
!8001 = !DILocation(line: 692, column: 23, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7995, file: !898, line: 692, column: 13)
!8003 = !DILocation(line: 692, column: 18, scope: !8002)
!8004 = !DILocation(line: 692, column: 28, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !8006, file: !898, discriminator: 1)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !898, line: 692, column: 13)
!8007 = !DILocation(line: 692, column: 55, scope: !8005)
!8008 = !DILocation(line: 692, column: 35, scope: !8005)
!8009 = !DILocation(line: 692, column: 38, scope: !8005)
!8010 = !DILocation(line: 692, column: 33, scope: !8005)
!8011 = !DILocation(line: 692, column: 13, scope: !8005)
!8012 = !DILocalVariable(name: "ret", scope: !8013, file: !898, line: 693, type: !1027)
!8013 = distinct !DILexicalBlock(scope: !8006, file: !898, line: 692, column: 68)
!8014 = !DILocation(line: 693, column: 21, scope: !8013)
!8015 = !DILocalVariable(name: "trans_ssf", scope: !8013, file: !898, line: 693, type: !1027)
!8016 = !DILocation(line: 693, column: 26, scope: !8013)
!8017 = !DILocalVariable(name: "abits", scope: !8013, file: !898, line: 693, type: !1027)
!8018 = !DILocation(line: 693, column: 37, scope: !8013)
!8019 = !DILocation(line: 693, column: 67, scope: !8013)
!8020 = !DILocation(line: 693, column: 45, scope: !8013)
!8021 = !DILocation(line: 693, column: 63, scope: !8013)
!8022 = !DILocation(line: 693, column: 48, scope: !8013)
!8023 = !DILocalVariable(name: "step_size", scope: !8013, file: !898, line: 694, type: !1030)
!8024 = !DILocation(line: 694, column: 25, scope: !8013)
!8025 = !DILocation(line: 697, column: 42, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8013, file: !898, line: 697, column: 21)
!8027 = !DILocation(line: 697, column: 45, scope: !8026)
!8028 = !DILocation(line: 697, column: 52, scope: !8026)
!8029 = !DILocation(line: 697, column: 59, scope: !8026)
!8030 = !DILocation(line: 697, column: 28, scope: !8026)
!8031 = !DILocation(line: 697, column: 26, scope: !8026)
!8032 = !DILocation(line: 697, column: 64, scope: !8026)
!8033 = !DILocation(line: 697, column: 21, scope: !8013)
!8034 = !DILocation(line: 698, column: 28, scope: !8026)
!8035 = !DILocation(line: 698, column: 21, scope: !8026)
!8036 = !DILocation(line: 702, column: 21, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8013, file: !898, line: 702, column: 21)
!8038 = !DILocation(line: 702, column: 24, scope: !8037)
!8039 = !DILocation(line: 702, column: 33, scope: !8037)
!8040 = !DILocation(line: 702, column: 21, scope: !8013)
!8041 = !DILocation(line: 703, column: 55, scope: !8037)
!8042 = !DILocation(line: 703, column: 33, scope: !8037)
!8043 = !DILocation(line: 703, column: 31, scope: !8037)
!8044 = !DILocation(line: 703, column: 21, scope: !8037)
!8045 = !DILocation(line: 705, column: 52, scope: !8037)
!8046 = !DILocation(line: 705, column: 33, scope: !8037)
!8047 = !DILocation(line: 705, column: 31, scope: !8037)
!8048 = !DILocation(line: 708, column: 56, scope: !8013)
!8049 = !DILocation(line: 708, column: 29, scope: !8013)
!8050 = !DILocation(line: 708, column: 52, scope: !8013)
!8051 = !DILocation(line: 708, column: 48, scope: !8013)
!8052 = !DILocation(line: 708, column: 32, scope: !8013)
!8053 = !DILocation(line: 708, column: 27, scope: !8013)
!8054 = !DILocation(line: 711, column: 21, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8013, file: !898, line: 711, column: 21)
!8056 = !DILocation(line: 711, column: 31, scope: !8055)
!8057 = !DILocation(line: 711, column: 36, scope: !8055)
!8058 = !DILocation(line: 711, column: 39, scope: !8059)
!8059 = !DILexicalBlockFile(scope: !8055, file: !898, discriminator: 1)
!8060 = !DILocation(line: 711, column: 45, scope: !8059)
!8061 = !DILocation(line: 711, column: 43, scope: !8059)
!8062 = !DILocation(line: 711, column: 21, scope: !8059)
!8063 = !DILocation(line: 712, column: 50, scope: !8055)
!8064 = !DILocation(line: 712, column: 29, scope: !8055)
!8065 = !DILocation(line: 712, column: 46, scope: !8055)
!8066 = !DILocation(line: 712, column: 32, scope: !8055)
!8067 = !DILocation(line: 712, column: 27, scope: !8055)
!8068 = !DILocation(line: 712, column: 21, scope: !8055)
!8069 = !DILocation(line: 714, column: 50, scope: !8055)
!8070 = !DILocation(line: 714, column: 29, scope: !8055)
!8071 = !DILocation(line: 714, column: 46, scope: !8055)
!8072 = !DILocation(line: 714, column: 32, scope: !8055)
!8073 = !DILocation(line: 714, column: 27, scope: !8055)
!8074 = !DILocation(line: 717, column: 21, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8013, file: !898, line: 717, column: 21)
!8076 = !DILocation(line: 717, column: 25, scope: !8075)
!8077 = !DILocation(line: 717, column: 21, scope: !8013)
!8078 = !DILocalVariable(name: "adj", scope: !8079, file: !898, line: 718, type: !1041)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !898, line: 717, column: 30)
!8080 = !DILocation(line: 718, column: 29, scope: !8079)
!8081 = !DILocation(line: 718, column: 59, scope: !8079)
!8082 = !DILocation(line: 718, column: 65, scope: !8079)
!8083 = !DILocation(line: 718, column: 35, scope: !8079)
!8084 = !DILocation(line: 718, column: 55, scope: !8079)
!8085 = !DILocation(line: 718, column: 38, scope: !8079)
!8086 = !DILocation(line: 719, column: 36, scope: !8079)
!8087 = !DILocation(line: 719, column: 42, scope: !8079)
!8088 = !DILocation(line: 719, column: 40, scope: !8079)
!8089 = !DILocation(line: 719, column: 48, scope: !8079)
!8090 = !DILocation(line: 719, column: 29, scope: !8079)
!8091 = !DILocation(line: 719, column: 27, scope: !8079)
!8092 = !DILocation(line: 720, column: 17, scope: !8079)
!8093 = !DILocation(line: 722, column: 63, scope: !8013)
!8094 = !DILocation(line: 722, column: 40, scope: !8013)
!8095 = !DILocation(line: 722, column: 59, scope: !8013)
!8096 = !DILocation(line: 722, column: 43, scope: !8013)
!8097 = !DILocation(line: 722, column: 71, scope: !8013)
!8098 = !DILocation(line: 722, column: 69, scope: !8013)
!8099 = !DILocation(line: 723, column: 28, scope: !8013)
!8100 = !DILocation(line: 723, column: 35, scope: !8013)
!8101 = !DILocation(line: 723, column: 46, scope: !8013)
!8102 = !DILocation(line: 722, column: 17, scope: !8013)
!8103 = !DILocation(line: 724, column: 13, scope: !8013)
!8104 = !DILocation(line: 692, column: 64, scope: !8105)
!8105 = !DILexicalBlockFile(scope: !8006, file: !898, discriminator: 2)
!8106 = !DILocation(line: 692, column: 13, scope: !8105)
!8107 = distinct !{!8107, !8108}
!8108 = !DILocation(line: 692, column: 13, scope: !7995)
!8109 = !DILocation(line: 725, column: 9, scope: !7995)
!8110 = !DILocation(line: 687, column: 50, scope: !8111)
!8111 = !DILexicalBlockFile(scope: !7988, file: !898, discriminator: 2)
!8112 = !DILocation(line: 687, column: 9, scope: !8111)
!8113 = distinct !{!8113, !8114}
!8114 = !DILocation(line: 687, column: 9, scope: !7983)
!8115 = !DILocation(line: 728, column: 14, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !7983, file: !898, line: 728, column: 13)
!8117 = !DILocation(line: 728, column: 38, scope: !8116)
!8118 = !DILocation(line: 728, column: 21, scope: !8116)
!8119 = !DILocation(line: 728, column: 24, scope: !8116)
!8120 = !DILocation(line: 728, column: 42, scope: !8116)
!8121 = !DILocation(line: 728, column: 18, scope: !8116)
!8122 = !DILocation(line: 728, column: 46, scope: !8116)
!8123 = !DILocation(line: 728, column: 49, scope: !8124)
!8124 = !DILexicalBlockFile(scope: !8116, file: !898, discriminator: 1)
!8125 = !DILocation(line: 728, column: 52, scope: !8124)
!8126 = !DILocation(line: 728, column: 62, scope: !8124)
!8127 = !DILocation(line: 728, column: 75, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !8116, file: !898, discriminator: 2)
!8129 = !DILocation(line: 728, column: 78, scope: !8128)
!8130 = !DILocation(line: 728, column: 65, scope: !8128)
!8131 = !DILocation(line: 728, column: 86, scope: !8128)
!8132 = !DILocation(line: 728, column: 13, scope: !8128)
!8133 = !DILocation(line: 729, column: 20, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8116, file: !898, line: 728, column: 97)
!8135 = !DILocation(line: 729, column: 23, scope: !8134)
!8136 = !DILocation(line: 729, column: 13, scope: !8134)
!8137 = !DILocation(line: 730, column: 13, scope: !8134)
!8138 = !DILocation(line: 733, column: 13, scope: !7983)
!8139 = !DILocation(line: 734, column: 5, scope: !7983)
!8140 = !DILocation(line: 686, column: 66, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !7975, file: !898, discriminator: 2)
!8142 = !DILocation(line: 686, column: 5, scope: !8141)
!8143 = distinct !{!8143, !8144}
!8144 = !DILocation(line: 686, column: 5, scope: !7758)
!8145 = !DILocation(line: 737, column: 15, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 737, column: 5)
!8147 = !DILocation(line: 737, column: 13, scope: !8146)
!8148 = !DILocation(line: 737, column: 10, scope: !8146)
!8149 = !DILocation(line: 737, column: 25, scope: !8150)
!8150 = !DILexicalBlockFile(scope: !8151, file: !898, discriminator: 1)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !898, line: 737, column: 5)
!8152 = !DILocation(line: 737, column: 30, scope: !8150)
!8153 = !DILocation(line: 737, column: 33, scope: !8150)
!8154 = !DILocation(line: 737, column: 28, scope: !8150)
!8155 = !DILocation(line: 737, column: 5, scope: !8150)
!8156 = !DILocation(line: 738, column: 42, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8151, file: !898, line: 737, column: 50)
!8158 = !DILocation(line: 738, column: 23, scope: !8157)
!8159 = !DILocation(line: 738, column: 26, scope: !8157)
!8160 = !DILocation(line: 738, column: 70, scope: !8157)
!8161 = !DILocation(line: 738, column: 47, scope: !8157)
!8162 = !DILocation(line: 738, column: 50, scope: !8157)
!8163 = !DILocation(line: 739, column: 42, scope: !8157)
!8164 = !DILocation(line: 739, column: 23, scope: !8157)
!8165 = !DILocation(line: 739, column: 26, scope: !8157)
!8166 = !DILocation(line: 739, column: 63, scope: !8157)
!8167 = !DILocation(line: 739, column: 50, scope: !8157)
!8168 = !DILocation(line: 739, column: 53, scope: !8157)
!8169 = !DILocation(line: 740, column: 24, scope: !8157)
!8170 = !DILocation(line: 740, column: 23, scope: !8157)
!8171 = !DILocation(line: 740, column: 33, scope: !8157)
!8172 = !DILocation(line: 738, column: 9, scope: !8157)
!8173 = !DILocation(line: 741, column: 5, scope: !8157)
!8174 = !DILocation(line: 737, column: 46, scope: !8175)
!8175 = !DILexicalBlockFile(scope: !8151, file: !898, discriminator: 2)
!8176 = !DILocation(line: 737, column: 5, scope: !8175)
!8177 = distinct !{!8177, !8178}
!8178 = !DILocation(line: 737, column: 5, scope: !7758)
!8179 = !DILocation(line: 744, column: 15, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !7758, file: !898, line: 744, column: 5)
!8181 = !DILocation(line: 744, column: 13, scope: !8180)
!8182 = !DILocation(line: 744, column: 10, scope: !8180)
!8183 = !DILocation(line: 744, column: 25, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8185, file: !898, discriminator: 1)
!8185 = distinct !DILexicalBlock(scope: !8180, file: !898, line: 744, column: 5)
!8186 = !DILocation(line: 744, column: 30, scope: !8184)
!8187 = !DILocation(line: 744, column: 33, scope: !8184)
!8188 = !DILocation(line: 744, column: 28, scope: !8184)
!8189 = !DILocation(line: 744, column: 5, scope: !8184)
!8190 = !DILocalVariable(name: "src_ch", scope: !8191, file: !898, line: 745, type: !1027)
!8191 = distinct !DILexicalBlock(scope: !8185, file: !898, line: 744, column: 50)
!8192 = !DILocation(line: 745, column: 13, scope: !8191)
!8193 = !DILocation(line: 745, column: 47, scope: !8191)
!8194 = !DILocation(line: 745, column: 22, scope: !8191)
!8195 = !DILocation(line: 745, column: 25, scope: !8191)
!8196 = !DILocation(line: 745, column: 51, scope: !8191)
!8197 = !DILocation(line: 746, column: 13, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8191, file: !898, line: 746, column: 13)
!8199 = !DILocation(line: 746, column: 20, scope: !8198)
!8200 = !DILocation(line: 746, column: 13, scope: !8191)
!8201 = !DILocation(line: 747, column: 13, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !898, line: 746, column: 26)
!8203 = !DILocation(line: 747, column: 16, scope: !8202)
!8204 = !DILocation(line: 747, column: 24, scope: !8202)
!8205 = !DILocation(line: 747, column: 56, scope: !8202)
!8206 = !DILocation(line: 747, column: 37, scope: !8202)
!8207 = !DILocation(line: 747, column: 40, scope: !8202)
!8208 = !DILocation(line: 747, column: 80, scope: !8202)
!8209 = !DILocation(line: 747, column: 61, scope: !8202)
!8210 = !DILocation(line: 747, column: 64, scope: !8202)
!8211 = !DILocation(line: 748, column: 60, scope: !8202)
!8212 = !DILocation(line: 748, column: 37, scope: !8202)
!8213 = !DILocation(line: 748, column: 40, scope: !8202)
!8214 = !DILocation(line: 748, column: 78, scope: !8202)
!8215 = !DILocation(line: 748, column: 65, scope: !8202)
!8216 = !DILocation(line: 748, column: 68, scope: !8202)
!8217 = !DILocation(line: 749, column: 50, scope: !8202)
!8218 = !DILocation(line: 749, column: 37, scope: !8202)
!8219 = !DILocation(line: 749, column: 40, scope: !8202)
!8220 = !DILocation(line: 749, column: 60, scope: !8202)
!8221 = !DILocation(line: 749, column: 59, scope: !8202)
!8222 = !DILocation(line: 749, column: 69, scope: !8202)
!8223 = !DILocation(line: 750, column: 9, scope: !8202)
!8224 = !DILocation(line: 751, column: 5, scope: !8191)
!8225 = !DILocation(line: 744, column: 46, scope: !8226)
!8226 = !DILexicalBlockFile(scope: !8185, file: !898, discriminator: 2)
!8227 = !DILocation(line: 744, column: 5, scope: !8226)
!8228 = distinct !{!8228, !8229}
!8229 = !DILocation(line: 744, column: 5, scope: !7758)
!8230 = !DILocation(line: 754, column: 16, scope: !7758)
!8231 = !DILocation(line: 754, column: 6, scope: !7758)
!8232 = !DILocation(line: 754, column: 14, scope: !7758)
!8233 = !DILocation(line: 755, column: 5, scope: !7758)
!8234 = !DILocation(line: 756, column: 1, scope: !7758)
!8235 = distinct !DISubprogram(name: "get_bits_count", scope: !1818, file: !1818, line: 219, type: !8236, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!1027, !8238}
!8238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8239, size: 64, align: 64)
!8239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!8240 = !DILocalVariable(name: "s", arg: 1, scope: !8235, file: !1818, line: 219, type: !8238)
!8241 = !DILocation(line: 219, column: 55, scope: !8235)
!8242 = !DILocation(line: 224, column: 12, scope: !8235)
!8243 = !DILocation(line: 224, column: 15, scope: !8235)
!8244 = !DILocation(line: 224, column: 5, scope: !8235)
!8245 = distinct !DISubprogram(name: "get_bits_left", scope: !1818, file: !1818, line: 814, type: !8246, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!1027, !2296}
!8248 = !DILocalVariable(name: "gb", arg: 1, scope: !8245, file: !1818, line: 814, type: !2296)
!8249 = !DILocation(line: 814, column: 48, scope: !8245)
!8250 = !DILocation(line: 816, column: 12, scope: !8245)
!8251 = !DILocation(line: 816, column: 16, scope: !8245)
!8252 = !DILocation(line: 816, column: 46, scope: !8245)
!8253 = !DILocation(line: 816, column: 31, scope: !8245)
!8254 = !DILocation(line: 816, column: 29, scope: !8245)
!8255 = !DILocation(line: 816, column: 5, scope: !8245)
!8256 = distinct !DISubprogram(name: "get_bits", scope: !1818, file: !1818, line: 381, type: !8257, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!1028, !2296, !1027}
!8259 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !8260)
!8260 = distinct !DILocation(line: 401, column: 16, scope: !8256)
!8261 = !DILocalVariable(name: "s", arg: 1, scope: !8256, file: !1818, line: 381, type: !2296)
!8262 = !DILocation(line: 381, column: 52, scope: !8256)
!8263 = !DILocalVariable(name: "n", arg: 2, scope: !8256, file: !1818, line: 381, type: !1027)
!8264 = !DILocation(line: 381, column: 59, scope: !8256)
!8265 = !DILocalVariable(name: "tmp", scope: !8256, file: !1818, line: 383, type: !1027)
!8266 = !DILocation(line: 383, column: 18, scope: !8256)
!8267 = !DILocalVariable(name: "re_index", scope: !8256, file: !1818, line: 399, type: !1028)
!8268 = !DILocation(line: 399, column: 18, scope: !8256)
!8269 = !DILocation(line: 399, column: 30, scope: !8256)
!8270 = !DILocation(line: 399, column: 34, scope: !8256)
!8271 = !DILocalVariable(name: "re_cache", scope: !8256, file: !1818, line: 399, type: !1028)
!8272 = !DILocation(line: 399, column: 78, scope: !8256)
!8273 = !DILocalVariable(name: "re_size_plus8", scope: !8256, file: !1818, line: 399, type: !1028)
!8274 = !DILocation(line: 399, column: 101, scope: !8256)
!8275 = !DILocation(line: 399, column: 118, scope: !8256)
!8276 = !DILocation(line: 399, column: 122, scope: !8256)
!8277 = !DILocation(line: 401, column: 60, scope: !8256)
!8278 = !DILocation(line: 401, column: 64, scope: !8256)
!8279 = !DILocation(line: 401, column: 74, scope: !8256)
!8280 = !DILocation(line: 401, column: 83, scope: !8256)
!8281 = !DILocation(line: 401, column: 71, scope: !8256)
!8282 = !DILocation(line: 401, column: 92, scope: !8256)
!8283 = !DILocation(line: 401, column: 16, scope: !8256)
!8284 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !8260)
!8285 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !8260)
!8286 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !8260)
!8287 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !8260)
!8288 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !8260)
!8289 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !8260)
!8290 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !8260)
!8291 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !8260)
!8292 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !8260)
!8293 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !8260)
!8294 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !8260)
!8295 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !8260)
!8296 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !8260)
!8297 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !8260)
!8298 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !8260)
!8299 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !8260)
!8300 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !8260)
!8301 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !8260)
!8302 = !DILocation(line: 401, column: 100, scope: !8256)
!8303 = !DILocation(line: 401, column: 109, scope: !8256)
!8304 = !DILocation(line: 401, column: 96, scope: !8256)
!8305 = !DILocation(line: 401, column: 14, scope: !8256)
!8306 = !DILocation(line: 402, column: 21, scope: !8256)
!8307 = !DILocation(line: 402, column: 31, scope: !8256)
!8308 = !DILocation(line: 402, column: 11, scope: !8256)
!8309 = !DILocation(line: 402, column: 9, scope: !8256)
!8310 = !DILocation(line: 403, column: 18, scope: !8256)
!8311 = !DILocation(line: 403, column: 36, scope: !8256)
!8312 = !DILocation(line: 403, column: 48, scope: !8256)
!8313 = !DILocation(line: 403, column: 45, scope: !8256)
!8314 = !DILocation(line: 403, column: 33, scope: !8256)
!8315 = !DILocation(line: 403, column: 17, scope: !8256)
!8316 = !DILocation(line: 403, column: 55, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8256, file: !1818, discriminator: 1)
!8318 = !DILocation(line: 403, column: 67, scope: !8317)
!8319 = !DILocation(line: 403, column: 64, scope: !8317)
!8320 = !DILocation(line: 403, column: 17, scope: !8317)
!8321 = !DILocation(line: 403, column: 74, scope: !8322)
!8322 = !DILexicalBlockFile(scope: !8256, file: !1818, discriminator: 2)
!8323 = !DILocation(line: 403, column: 17, scope: !8322)
!8324 = !DILocation(line: 403, column: 17, scope: !8325)
!8325 = !DILexicalBlockFile(scope: !8256, file: !1818, discriminator: 3)
!8326 = !DILocation(line: 403, column: 14, scope: !8325)
!8327 = !DILocation(line: 404, column: 18, scope: !8256)
!8328 = !DILocation(line: 404, column: 6, scope: !8256)
!8329 = !DILocation(line: 404, column: 10, scope: !8256)
!8330 = !DILocation(line: 404, column: 16, scope: !8256)
!8331 = !DILocation(line: 406, column: 12, scope: !8256)
!8332 = !DILocation(line: 406, column: 5, scope: !8256)
!8333 = distinct !DISubprogram(name: "ff_dca_check_crc", scope: !2858, file: !2858, line: 75, type: !8334, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{!1027, !1099, !2296, !1027, !1027}
!8336 = !DILocalVariable(name: "avctx", arg: 1, scope: !8333, file: !2858, line: 75, type: !1099)
!8337 = !DILocation(line: 75, column: 52, scope: !8333)
!8338 = !DILocalVariable(name: "s", arg: 2, scope: !8333, file: !2858, line: 75, type: !2296)
!8339 = !DILocation(line: 75, column: 74, scope: !8333)
!8340 = !DILocalVariable(name: "p1", arg: 3, scope: !8333, file: !2858, line: 76, type: !1027)
!8341 = !DILocation(line: 76, column: 40, scope: !8333)
!8342 = !DILocalVariable(name: "p2", arg: 4, scope: !8333, file: !2858, line: 76, type: !1027)
!8343 = !DILocation(line: 76, column: 48, scope: !8333)
!8344 = !DILocalVariable(name: "dca", scope: !8333, file: !2858, line: 78, type: !2856)
!8345 = !DILocation(line: 78, column: 17, scope: !8333)
!8346 = !DILocation(line: 78, column: 23, scope: !8333)
!8347 = !DILocation(line: 78, column: 30, scope: !8333)
!8348 = !DILocation(line: 80, column: 11, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8333, file: !2858, line: 80, column: 9)
!8350 = !DILocation(line: 80, column: 18, scope: !8349)
!8351 = !DILocation(line: 80, column: 34, scope: !8349)
!8352 = !DILocation(line: 80, column: 9, scope: !8333)
!8353 = !DILocation(line: 81, column: 9, scope: !8349)
!8354 = !DILocation(line: 82, column: 11, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8333, file: !2858, line: 82, column: 9)
!8356 = !DILocation(line: 82, column: 16, scope: !8355)
!8357 = !DILocation(line: 82, column: 14, scope: !8355)
!8358 = !DILocation(line: 82, column: 20, scope: !8355)
!8359 = !DILocation(line: 82, column: 25, scope: !8355)
!8360 = !DILocation(line: 82, column: 28, scope: !8361)
!8361 = !DILexicalBlockFile(scope: !8355, file: !2858, discriminator: 1)
!8362 = !DILocation(line: 82, column: 31, scope: !8361)
!8363 = !DILocation(line: 82, column: 35, scope: !8361)
!8364 = !DILocation(line: 82, column: 38, scope: !8365)
!8365 = !DILexicalBlockFile(scope: !8355, file: !2858, discriminator: 2)
!8366 = !DILocation(line: 82, column: 43, scope: !8365)
!8367 = !DILocation(line: 82, column: 46, scope: !8365)
!8368 = !DILocation(line: 82, column: 41, scope: !8365)
!8369 = !DILocation(line: 82, column: 59, scope: !8365)
!8370 = !DILocation(line: 82, column: 62, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !8355, file: !2858, discriminator: 3)
!8372 = !DILocation(line: 82, column: 67, scope: !8371)
!8373 = !DILocation(line: 82, column: 65, scope: !8371)
!8374 = !DILocation(line: 82, column: 70, scope: !8371)
!8375 = !DILocation(line: 82, column: 9, scope: !8371)
!8376 = !DILocation(line: 83, column: 9, scope: !8355)
!8377 = !DILocation(line: 84, column: 16, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8333, file: !2858, line: 84, column: 9)
!8379 = !DILocation(line: 84, column: 21, scope: !8378)
!8380 = !DILocation(line: 84, column: 37, scope: !8378)
!8381 = !DILocation(line: 84, column: 40, scope: !8378)
!8382 = !DILocation(line: 84, column: 49, scope: !8378)
!8383 = !DILocation(line: 84, column: 52, scope: !8378)
!8384 = !DILocation(line: 84, column: 47, scope: !8378)
!8385 = !DILocation(line: 84, column: 58, scope: !8378)
!8386 = !DILocation(line: 84, column: 63, scope: !8378)
!8387 = !DILocation(line: 84, column: 61, scope: !8378)
!8388 = !DILocation(line: 84, column: 67, scope: !8378)
!8389 = !DILocation(line: 84, column: 57, scope: !8378)
!8390 = !DILocation(line: 84, column: 9, scope: !8378)
!8391 = !DILocation(line: 84, column: 9, scope: !8333)
!8392 = !DILocation(line: 85, column: 9, scope: !8378)
!8393 = !DILocation(line: 86, column: 5, scope: !8333)
!8394 = !DILocation(line: 87, column: 1, scope: !8333)
!8395 = distinct !DISubprogram(name: "get_bits_long", scope: !1818, file: !1818, line: 531, type: !8257, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8396 = !DILocalVariable(name: "s", arg: 1, scope: !8395, file: !1818, line: 531, type: !2296)
!8397 = !DILocation(line: 531, column: 57, scope: !8395)
!8398 = !DILocalVariable(name: "n", arg: 2, scope: !8395, file: !1818, line: 531, type: !1027)
!8399 = !DILocation(line: 531, column: 64, scope: !8395)
!8400 = !DILocation(line: 534, column: 10, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8395, file: !1818, line: 534, column: 9)
!8402 = !DILocation(line: 534, column: 9, scope: !8395)
!8403 = !DILocation(line: 535, column: 9, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !1818, line: 534, column: 13)
!8405 = !DILocation(line: 540, column: 16, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8401, file: !1818, line: 540, column: 16)
!8407 = !DILocation(line: 540, column: 18, scope: !8406)
!8408 = !DILocation(line: 540, column: 16, scope: !8401)
!8409 = !DILocation(line: 541, column: 25, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !1818, line: 540, column: 25)
!8411 = !DILocation(line: 541, column: 28, scope: !8410)
!8412 = !DILocation(line: 541, column: 16, scope: !8410)
!8413 = !DILocation(line: 541, column: 9, scope: !8410)
!8414 = !DILocalVariable(name: "ret", scope: !8415, file: !1818, line: 547, type: !1028)
!8415 = distinct !DILexicalBlock(scope: !8406, file: !1818, line: 542, column: 12)
!8416 = !DILocation(line: 547, column: 18, scope: !8415)
!8417 = !DILocation(line: 547, column: 33, scope: !8415)
!8418 = !DILocation(line: 547, column: 24, scope: !8415)
!8419 = !DILocation(line: 547, column: 44, scope: !8415)
!8420 = !DILocation(line: 547, column: 46, scope: !8415)
!8421 = !DILocation(line: 547, column: 40, scope: !8415)
!8422 = !DILocation(line: 548, column: 16, scope: !8415)
!8423 = !DILocation(line: 548, column: 31, scope: !8415)
!8424 = !DILocation(line: 548, column: 34, scope: !8415)
!8425 = !DILocation(line: 548, column: 36, scope: !8415)
!8426 = !DILocation(line: 548, column: 22, scope: !8415)
!8427 = !DILocation(line: 548, column: 20, scope: !8415)
!8428 = !DILocation(line: 548, column: 9, scope: !8415)
!8429 = !DILocation(line: 552, column: 1, scope: !8395)
!8430 = distinct !DISubprogram(name: "get_bits1", scope: !1818, file: !1818, line: 487, type: !8431, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{!1028, !2296}
!8433 = !DILocalVariable(name: "s", arg: 1, scope: !8430, file: !1818, line: 487, type: !2296)
!8434 = !DILocation(line: 487, column: 53, scope: !8430)
!8435 = !DILocalVariable(name: "index", scope: !8430, file: !1818, line: 499, type: !1028)
!8436 = !DILocation(line: 499, column: 18, scope: !8430)
!8437 = !DILocation(line: 499, column: 26, scope: !8430)
!8438 = !DILocation(line: 499, column: 29, scope: !8430)
!8439 = !DILocalVariable(name: "result", scope: !8430, file: !1818, line: 500, type: !1039)
!8440 = !DILocation(line: 500, column: 13, scope: !8430)
!8441 = !DILocation(line: 500, column: 32, scope: !8430)
!8442 = !DILocation(line: 500, column: 38, scope: !8430)
!8443 = !DILocation(line: 500, column: 22, scope: !8430)
!8444 = !DILocation(line: 500, column: 25, scope: !8430)
!8445 = !DILocation(line: 505, column: 16, scope: !8430)
!8446 = !DILocation(line: 505, column: 22, scope: !8430)
!8447 = !DILocation(line: 505, column: 12, scope: !8430)
!8448 = !DILocation(line: 506, column: 12, scope: !8430)
!8449 = !DILocation(line: 509, column: 9, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8430, file: !1818, line: 509, column: 9)
!8451 = !DILocation(line: 509, column: 12, scope: !8450)
!8452 = !DILocation(line: 509, column: 20, scope: !8450)
!8453 = !DILocation(line: 509, column: 23, scope: !8450)
!8454 = !DILocation(line: 509, column: 18, scope: !8450)
!8455 = !DILocation(line: 509, column: 9, scope: !8430)
!8456 = !DILocation(line: 511, column: 14, scope: !8450)
!8457 = !DILocation(line: 511, column: 9, scope: !8450)
!8458 = !DILocation(line: 512, column: 16, scope: !8430)
!8459 = !DILocation(line: 512, column: 5, scope: !8430)
!8460 = !DILocation(line: 512, column: 8, scope: !8430)
!8461 = !DILocation(line: 512, column: 14, scope: !8430)
!8462 = !DILocation(line: 514, column: 12, scope: !8430)
!8463 = !DILocation(line: 514, column: 5, scope: !8430)
!8464 = distinct !DISubprogram(name: "skip_bits", scope: !1818, file: !1818, line: 460, type: !4015, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8465 = !DILocalVariable(name: "s", arg: 1, scope: !8464, file: !1818, line: 460, type: !2296)
!8466 = !DILocation(line: 460, column: 45, scope: !8464)
!8467 = !DILocalVariable(name: "n", arg: 2, scope: !8464, file: !1818, line: 460, type: !1027)
!8468 = !DILocation(line: 460, column: 52, scope: !8464)
!8469 = !DILocalVariable(name: "re_index", scope: !8464, file: !1818, line: 481, type: !1028)
!8470 = !DILocation(line: 481, column: 18, scope: !8464)
!8471 = !DILocation(line: 481, column: 30, scope: !8464)
!8472 = !DILocation(line: 481, column: 34, scope: !8464)
!8473 = !DILocalVariable(name: "re_cache", scope: !8464, file: !1818, line: 481, type: !1028)
!8474 = !DILocation(line: 481, column: 78, scope: !8464)
!8475 = !DILocalVariable(name: "re_size_plus8", scope: !8464, file: !1818, line: 481, type: !1028)
!8476 = !DILocation(line: 481, column: 101, scope: !8464)
!8477 = !DILocation(line: 481, column: 118, scope: !8464)
!8478 = !DILocation(line: 481, column: 122, scope: !8464)
!8479 = !DILocation(line: 482, column: 18, scope: !8464)
!8480 = !DILocation(line: 482, column: 36, scope: !8464)
!8481 = !DILocation(line: 482, column: 48, scope: !8464)
!8482 = !DILocation(line: 482, column: 45, scope: !8464)
!8483 = !DILocation(line: 482, column: 33, scope: !8464)
!8484 = !DILocation(line: 482, column: 17, scope: !8464)
!8485 = !DILocation(line: 482, column: 55, scope: !8486)
!8486 = !DILexicalBlockFile(scope: !8464, file: !1818, discriminator: 1)
!8487 = !DILocation(line: 482, column: 67, scope: !8486)
!8488 = !DILocation(line: 482, column: 64, scope: !8486)
!8489 = !DILocation(line: 482, column: 17, scope: !8486)
!8490 = !DILocation(line: 482, column: 74, scope: !8491)
!8491 = !DILexicalBlockFile(scope: !8464, file: !1818, discriminator: 2)
!8492 = !DILocation(line: 482, column: 17, scope: !8491)
!8493 = !DILocation(line: 482, column: 17, scope: !8494)
!8494 = !DILexicalBlockFile(scope: !8464, file: !1818, discriminator: 3)
!8495 = !DILocation(line: 482, column: 14, scope: !8494)
!8496 = !DILocation(line: 483, column: 18, scope: !8464)
!8497 = !DILocation(line: 483, column: 6, scope: !8464)
!8498 = !DILocation(line: 483, column: 10, scope: !8464)
!8499 = !DILocation(line: 483, column: 16, scope: !8464)
!8500 = !DILocation(line: 485, column: 1, scope: !8464)
!8501 = distinct !DISubprogram(name: "NEG_USR32", scope: !8502, file: !8502, line: 124, type: !8503, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8502 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!1038, !1038, !1084}
!8505 = !DILocalVariable(name: "a", arg: 1, scope: !8501, file: !8502, line: 124, type: !1038)
!8506 = !DILocation(line: 124, column: 43, scope: !8501)
!8507 = !DILocalVariable(name: "s", arg: 2, scope: !8501, file: !8502, line: 124, type: !1084)
!8508 = !DILocation(line: 124, column: 53, scope: !8501)
!8509 = !DILocation(line: 125, column: 5, scope: !8501)
!8510 = !DILocation(line: 127, column: 29, scope: !8501)
!8511 = !DILocation(line: 127, column: 28, scope: !8501)
!8512 = !DILocation(line: 127, column: 18, scope: !8501)
!8513 = !{i32 180137, i32 180151}
!8514 = !DILocation(line: 129, column: 12, scope: !8501)
!8515 = !DILocation(line: 129, column: 5, scope: !8501)
!8516 = distinct !DISubprogram(name: "dca_get_vlc", scope: !898, file: !898, line: 68, type: !8517, isLocal: true, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!1027, !2296, !8519, !1027}
!8519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8520, size: 64, align: 64)
!8520 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAVLC", file: !8521, line: 39, baseType: !8522)
!8521 = !DIFile(filename: "libavcodec/dcahuff.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAVLC", file: !8521, line: 35, size: 1408, align: 64, elements: !8523)
!8523 = !{!8524, !8525, !8526}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8522, file: !8521, line: 36, baseType: !1027, size: 32, align: 32)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !8522, file: !8521, line: 37, baseType: !1027, size: 32, align: 32, offset: 32)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "vlc", scope: !8522, file: !8521, line: 38, baseType: !8527, size: 1344, align: 64, offset: 64)
!8527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8528, size: 1344, align: 64, elements: !1075)
!8528 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !8529, line: 30, baseType: !8530)
!8529 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !8529, line: 26, size: 192, align: 64, elements: !8531)
!8531 = !{!8532, !8533, !8536, !8537}
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !8530, file: !8529, line: 27, baseType: !1027, size: 32, align: 32)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !8530, file: !8529, line: 28, baseType: !8534, size: 64, align: 64, offset: 64)
!8534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8535, size: 64, align: 64)
!8535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 32, align: 16, elements: !1058)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !8530, file: !8529, line: 29, baseType: !1027, size: 32, align: 32, offset: 128)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !8530, file: !8529, line: 29, baseType: !1027, size: 32, align: 32, offset: 160)
!8538 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !8539)
!8539 = distinct !DILocation(line: 788, column: 601, scope: !8540, inlinedAt: !8549)
!8540 = !DILexicalBlockFile(scope: !8541, file: !1818, discriminator: 11)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !1818, line: 788, column: 490)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !1818, line: 788, column: 466)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !1818, line: 788, column: 154)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !1818, line: 788, column: 130)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !1818, line: 788, column: 8)
!8546 = distinct !DISubprogram(name: "get_vlc2", scope: !1818, file: !1818, line: 762, type: !8547, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!1027, !2296, !8534, !1027, !1027}
!8549 = distinct !DILocation(line: 70, column: 12, scope: !8516)
!8550 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !8551)
!8551 = distinct !DILocation(line: 788, column: 259, scope: !8552, inlinedAt: !8549)
!8552 = !DILexicalBlockFile(scope: !8543, file: !1818, discriminator: 6)
!8553 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !8554)
!8554 = distinct !DILocation(line: 786, column: 16, scope: !8546, inlinedAt: !8549)
!8555 = !DILocalVariable(name: "s", arg: 1, scope: !8546, file: !1818, line: 762, type: !2296)
!8556 = !DILocation(line: 762, column: 74, scope: !8546, inlinedAt: !8549)
!8557 = !DILocalVariable(name: "table", arg: 2, scope: !8546, file: !1818, line: 762, type: !8534)
!8558 = !DILocation(line: 762, column: 87, scope: !8546, inlinedAt: !8549)
!8559 = !DILocalVariable(name: "bits", arg: 3, scope: !8546, file: !1818, line: 763, type: !1027)
!8560 = !DILocation(line: 763, column: 42, scope: !8546, inlinedAt: !8549)
!8561 = !DILocalVariable(name: "max_depth", arg: 4, scope: !8546, file: !1818, line: 763, type: !1027)
!8562 = !DILocation(line: 763, column: 52, scope: !8546, inlinedAt: !8549)
!8563 = !DILocalVariable(name: "code", scope: !8546, file: !1818, line: 783, type: !1027)
!8564 = !DILocation(line: 783, column: 9, scope: !8546, inlinedAt: !8549)
!8565 = !DILocalVariable(name: "re_index", scope: !8546, file: !1818, line: 785, type: !1028)
!8566 = !DILocation(line: 785, column: 18, scope: !8546, inlinedAt: !8549)
!8567 = !DILocalVariable(name: "re_cache", scope: !8546, file: !1818, line: 785, type: !1028)
!8568 = !DILocation(line: 785, column: 78, scope: !8546, inlinedAt: !8549)
!8569 = !DILocalVariable(name: "re_size_plus8", scope: !8546, file: !1818, line: 785, type: !1028)
!8570 = !DILocation(line: 785, column: 101, scope: !8546, inlinedAt: !8549)
!8571 = !DILocalVariable(name: "n", scope: !8545, file: !1818, line: 788, type: !1027)
!8572 = !DILocation(line: 788, column: 14, scope: !8545, inlinedAt: !8549)
!8573 = !DILocalVariable(name: "nb_bits", scope: !8545, file: !1818, line: 788, type: !1027)
!8574 = !DILocation(line: 788, column: 17, scope: !8545, inlinedAt: !8549)
!8575 = !DILocalVariable(name: "index", scope: !8545, file: !1818, line: 788, type: !1028)
!8576 = !DILocation(line: 788, column: 39, scope: !8545, inlinedAt: !8549)
!8577 = !DILocalVariable(name: "s", arg: 1, scope: !8516, file: !898, line: 68, type: !2296)
!8578 = !DILocation(line: 68, column: 39, scope: !8516)
!8579 = !DILocalVariable(name: "v", arg: 2, scope: !8516, file: !898, line: 68, type: !8519)
!8580 = !DILocation(line: 68, column: 50, scope: !8516)
!8581 = !DILocalVariable(name: "i", arg: 3, scope: !8516, file: !898, line: 68, type: !1027)
!8582 = !DILocation(line: 68, column: 57, scope: !8516)
!8583 = !DILocation(line: 70, column: 21, scope: !8516)
!8584 = !DILocation(line: 70, column: 31, scope: !8516)
!8585 = !DILocation(line: 70, column: 24, scope: !8516)
!8586 = !DILocation(line: 70, column: 27, scope: !8516)
!8587 = !DILocation(line: 70, column: 34, scope: !8516)
!8588 = !DILocation(line: 70, column: 48, scope: !8516)
!8589 = !DILocation(line: 70, column: 41, scope: !8516)
!8590 = !DILocation(line: 70, column: 44, scope: !8516)
!8591 = !DILocation(line: 70, column: 51, scope: !8516)
!8592 = !DILocation(line: 70, column: 57, scope: !8516)
!8593 = !DILocation(line: 70, column: 60, scope: !8516)
!8594 = !DILocation(line: 70, column: 12, scope: !8516)
!8595 = !DILocation(line: 785, column: 30, scope: !8546, inlinedAt: !8549)
!8596 = !DILocation(line: 785, column: 34, scope: !8546, inlinedAt: !8549)
!8597 = !DILocation(line: 785, column: 118, scope: !8546, inlinedAt: !8549)
!8598 = !DILocation(line: 785, column: 122, scope: !8546, inlinedAt: !8549)
!8599 = !DILocation(line: 786, column: 60, scope: !8546, inlinedAt: !8549)
!8600 = !DILocation(line: 786, column: 64, scope: !8546, inlinedAt: !8549)
!8601 = !DILocation(line: 786, column: 74, scope: !8546, inlinedAt: !8549)
!8602 = !DILocation(line: 786, column: 83, scope: !8546, inlinedAt: !8549)
!8603 = !DILocation(line: 786, column: 71, scope: !8546, inlinedAt: !8549)
!8604 = !DILocation(line: 786, column: 92, scope: !8546, inlinedAt: !8549)
!8605 = !DILocation(line: 786, column: 16, scope: !8546, inlinedAt: !8549)
!8606 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !8554)
!8607 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !8554)
!8608 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !8554)
!8609 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !8554)
!8610 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !8554)
!8611 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !8554)
!8612 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !8554)
!8613 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !8554)
!8614 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !8554)
!8615 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !8554)
!8616 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !8554)
!8617 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !8554)
!8618 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !8554)
!8619 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !8554)
!8620 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !8554)
!8621 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !8554)
!8622 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !8554)
!8623 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !8554)
!8624 = !DILocation(line: 786, column: 100, scope: !8546, inlinedAt: !8549)
!8625 = !DILocation(line: 786, column: 109, scope: !8546, inlinedAt: !8549)
!8626 = !DILocation(line: 786, column: 96, scope: !8546, inlinedAt: !8549)
!8627 = !DILocation(line: 786, column: 14, scope: !8546, inlinedAt: !8549)
!8628 = !DILocation(line: 788, column: 64, scope: !8629, inlinedAt: !8549)
!8629 = !DILexicalBlockFile(scope: !8545, file: !1818, discriminator: 1)
!8630 = !DILocation(line: 788, column: 74, scope: !8629, inlinedAt: !8549)
!8631 = !DILocation(line: 788, column: 54, scope: !8629, inlinedAt: !8549)
!8632 = !DILocation(line: 788, column: 52, scope: !8629, inlinedAt: !8549)
!8633 = !DILocation(line: 788, column: 94, scope: !8629, inlinedAt: !8549)
!8634 = !DILocation(line: 788, column: 88, scope: !8629, inlinedAt: !8549)
!8635 = !DILocation(line: 788, column: 86, scope: !8629, inlinedAt: !8549)
!8636 = !DILocation(line: 788, column: 115, scope: !8629, inlinedAt: !8549)
!8637 = !DILocation(line: 788, column: 109, scope: !8629, inlinedAt: !8549)
!8638 = !DILocation(line: 788, column: 107, scope: !8629, inlinedAt: !8549)
!8639 = !DILocation(line: 788, column: 130, scope: !8629, inlinedAt: !8549)
!8640 = !DILocation(line: 788, column: 140, scope: !8629, inlinedAt: !8549)
!8641 = !DILocation(line: 788, column: 144, scope: !8629, inlinedAt: !8549)
!8642 = !DILocation(line: 788, column: 147, scope: !8643, inlinedAt: !8549)
!8643 = !DILexicalBlockFile(scope: !8544, file: !1818, discriminator: 2)
!8644 = !DILocation(line: 788, column: 149, scope: !8643, inlinedAt: !8549)
!8645 = !DILocation(line: 788, column: 130, scope: !8643, inlinedAt: !8549)
!8646 = !DILocation(line: 788, column: 169, scope: !8647, inlinedAt: !8549)
!8647 = !DILexicalBlockFile(scope: !8543, file: !1818, discriminator: 3)
!8648 = !DILocation(line: 788, column: 187, scope: !8647, inlinedAt: !8549)
!8649 = !DILocation(line: 788, column: 199, scope: !8647, inlinedAt: !8549)
!8650 = !DILocation(line: 788, column: 196, scope: !8647, inlinedAt: !8549)
!8651 = !DILocation(line: 788, column: 184, scope: !8647, inlinedAt: !8549)
!8652 = !DILocation(line: 788, column: 168, scope: !8647, inlinedAt: !8549)
!8653 = !DILocation(line: 788, column: 209, scope: !8654, inlinedAt: !8549)
!8654 = !DILexicalBlockFile(scope: !8543, file: !1818, discriminator: 4)
!8655 = !DILocation(line: 788, column: 221, scope: !8654, inlinedAt: !8549)
!8656 = !DILocation(line: 788, column: 218, scope: !8654, inlinedAt: !8549)
!8657 = !DILocation(line: 788, column: 168, scope: !8654, inlinedAt: !8549)
!8658 = !DILocation(line: 788, column: 231, scope: !8659, inlinedAt: !8549)
!8659 = !DILexicalBlockFile(scope: !8543, file: !1818, discriminator: 5)
!8660 = !DILocation(line: 788, column: 168, scope: !8659, inlinedAt: !8549)
!8661 = !DILocation(line: 788, column: 168, scope: !8552, inlinedAt: !8549)
!8662 = !DILocation(line: 788, column: 165, scope: !8552, inlinedAt: !8549)
!8663 = !DILocation(line: 788, column: 303, scope: !8552, inlinedAt: !8549)
!8664 = !DILocation(line: 788, column: 307, scope: !8552, inlinedAt: !8549)
!8665 = !DILocation(line: 788, column: 317, scope: !8552, inlinedAt: !8549)
!8666 = !DILocation(line: 788, column: 326, scope: !8552, inlinedAt: !8549)
!8667 = !DILocation(line: 788, column: 314, scope: !8552, inlinedAt: !8549)
!8668 = !DILocation(line: 788, column: 335, scope: !8552, inlinedAt: !8549)
!8669 = !DILocation(line: 788, column: 259, scope: !8552, inlinedAt: !8549)
!8670 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !8551)
!8671 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !8551)
!8672 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !8551)
!8673 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !8551)
!8674 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !8551)
!8675 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !8551)
!8676 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !8551)
!8677 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !8551)
!8678 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !8551)
!8679 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !8551)
!8680 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !8551)
!8681 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !8551)
!8682 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !8551)
!8683 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !8551)
!8684 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !8551)
!8685 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !8551)
!8686 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !8551)
!8687 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !8551)
!8688 = !DILocation(line: 788, column: 343, scope: !8552, inlinedAt: !8549)
!8689 = !DILocation(line: 788, column: 352, scope: !8552, inlinedAt: !8549)
!8690 = !DILocation(line: 788, column: 339, scope: !8552, inlinedAt: !8549)
!8691 = !DILocation(line: 788, column: 257, scope: !8552, inlinedAt: !8549)
!8692 = !DILocation(line: 788, column: 369, scope: !8552, inlinedAt: !8549)
!8693 = !DILocation(line: 788, column: 368, scope: !8552, inlinedAt: !8549)
!8694 = !DILocation(line: 788, column: 366, scope: !8552, inlinedAt: !8549)
!8695 = !DILocation(line: 788, column: 390, scope: !8552, inlinedAt: !8549)
!8696 = !DILocation(line: 788, column: 400, scope: !8552, inlinedAt: !8549)
!8697 = !DILocation(line: 788, column: 380, scope: !8698, inlinedAt: !8549)
!8698 = !DILexicalBlockFile(scope: !8552, file: !1818, discriminator: 19)
!8699 = !DILocation(line: 788, column: 411, scope: !8552, inlinedAt: !8549)
!8700 = !DILocation(line: 788, column: 409, scope: !8552, inlinedAt: !8549)
!8701 = !DILocation(line: 788, column: 378, scope: !8552, inlinedAt: !8549)
!8702 = !DILocation(line: 788, column: 430, scope: !8552, inlinedAt: !8549)
!8703 = !DILocation(line: 788, column: 424, scope: !8552, inlinedAt: !8549)
!8704 = !DILocation(line: 788, column: 422, scope: !8552, inlinedAt: !8549)
!8705 = !DILocation(line: 788, column: 451, scope: !8552, inlinedAt: !8549)
!8706 = !DILocation(line: 788, column: 445, scope: !8552, inlinedAt: !8549)
!8707 = !DILocation(line: 788, column: 443, scope: !8552, inlinedAt: !8549)
!8708 = !DILocation(line: 788, column: 466, scope: !8552, inlinedAt: !8549)
!8709 = !DILocation(line: 788, column: 476, scope: !8552, inlinedAt: !8549)
!8710 = !DILocation(line: 788, column: 480, scope: !8552, inlinedAt: !8549)
!8711 = !DILocation(line: 788, column: 483, scope: !8712, inlinedAt: !8549)
!8712 = !DILexicalBlockFile(scope: !8542, file: !1818, discriminator: 7)
!8713 = !DILocation(line: 788, column: 485, scope: !8712, inlinedAt: !8549)
!8714 = !DILocation(line: 788, column: 466, scope: !8712, inlinedAt: !8549)
!8715 = !DILocation(line: 788, column: 505, scope: !8716, inlinedAt: !8549)
!8716 = !DILexicalBlockFile(scope: !8541, file: !1818, discriminator: 8)
!8717 = !DILocation(line: 788, column: 523, scope: !8716, inlinedAt: !8549)
!8718 = !DILocation(line: 788, column: 535, scope: !8716, inlinedAt: !8549)
!8719 = !DILocation(line: 788, column: 532, scope: !8716, inlinedAt: !8549)
!8720 = !DILocation(line: 788, column: 520, scope: !8716, inlinedAt: !8549)
!8721 = !DILocation(line: 788, column: 504, scope: !8716, inlinedAt: !8549)
!8722 = !DILocation(line: 788, column: 548, scope: !8723, inlinedAt: !8549)
!8723 = !DILexicalBlockFile(scope: !8541, file: !1818, discriminator: 9)
!8724 = !DILocation(line: 788, column: 560, scope: !8723, inlinedAt: !8549)
!8725 = !DILocation(line: 788, column: 557, scope: !8723, inlinedAt: !8549)
!8726 = !DILocation(line: 788, column: 504, scope: !8723, inlinedAt: !8549)
!8727 = !DILocation(line: 788, column: 573, scope: !8728, inlinedAt: !8549)
!8728 = !DILexicalBlockFile(scope: !8541, file: !1818, discriminator: 10)
!8729 = !DILocation(line: 788, column: 504, scope: !8728, inlinedAt: !8549)
!8730 = !DILocation(line: 788, column: 504, scope: !8540, inlinedAt: !8549)
!8731 = !DILocation(line: 788, column: 501, scope: !8540, inlinedAt: !8549)
!8732 = !DILocation(line: 788, column: 645, scope: !8540, inlinedAt: !8549)
!8733 = !DILocation(line: 788, column: 649, scope: !8540, inlinedAt: !8549)
!8734 = !DILocation(line: 788, column: 659, scope: !8540, inlinedAt: !8549)
!8735 = !DILocation(line: 788, column: 668, scope: !8540, inlinedAt: !8549)
!8736 = !DILocation(line: 788, column: 656, scope: !8540, inlinedAt: !8549)
!8737 = !DILocation(line: 788, column: 677, scope: !8540, inlinedAt: !8549)
!8738 = !DILocation(line: 788, column: 601, scope: !8540, inlinedAt: !8549)
!8739 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !8539)
!8740 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !8539)
!8741 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !8539)
!8742 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !8539)
!8743 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !8539)
!8744 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !8539)
!8745 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !8539)
!8746 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !8539)
!8747 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !8539)
!8748 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !8539)
!8749 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !8539)
!8750 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !8539)
!8751 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !8539)
!8752 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !8539)
!8753 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !8539)
!8754 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !8539)
!8755 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !8539)
!8756 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !8539)
!8757 = !DILocation(line: 788, column: 685, scope: !8540, inlinedAt: !8549)
!8758 = !DILocation(line: 788, column: 694, scope: !8540, inlinedAt: !8549)
!8759 = !DILocation(line: 788, column: 681, scope: !8540, inlinedAt: !8549)
!8760 = !DILocation(line: 788, column: 599, scope: !8540, inlinedAt: !8549)
!8761 = !DILocation(line: 788, column: 711, scope: !8540, inlinedAt: !8549)
!8762 = !DILocation(line: 788, column: 710, scope: !8540, inlinedAt: !8549)
!8763 = !DILocation(line: 788, column: 708, scope: !8540, inlinedAt: !8549)
!8764 = !DILocation(line: 788, column: 732, scope: !8540, inlinedAt: !8549)
!8765 = !DILocation(line: 788, column: 742, scope: !8540, inlinedAt: !8549)
!8766 = !DILocation(line: 788, column: 722, scope: !8767, inlinedAt: !8549)
!8767 = !DILexicalBlockFile(scope: !8540, file: !1818, discriminator: 20)
!8768 = !DILocation(line: 788, column: 753, scope: !8540, inlinedAt: !8549)
!8769 = !DILocation(line: 788, column: 751, scope: !8540, inlinedAt: !8549)
!8770 = !DILocation(line: 788, column: 720, scope: !8540, inlinedAt: !8549)
!8771 = !DILocation(line: 788, column: 772, scope: !8540, inlinedAt: !8549)
!8772 = !DILocation(line: 788, column: 766, scope: !8540, inlinedAt: !8549)
!8773 = !DILocation(line: 788, column: 764, scope: !8540, inlinedAt: !8549)
!8774 = !DILocation(line: 788, column: 793, scope: !8540, inlinedAt: !8549)
!8775 = !DILocation(line: 788, column: 787, scope: !8540, inlinedAt: !8549)
!8776 = !DILocation(line: 788, column: 785, scope: !8540, inlinedAt: !8549)
!8777 = !DILocation(line: 788, column: 804, scope: !8540, inlinedAt: !8549)
!8778 = !DILocation(line: 788, column: 806, scope: !8779, inlinedAt: !8549)
!8779 = !DILexicalBlockFile(scope: !8543, file: !1818, discriminator: 12)
!8780 = !DILocation(line: 788, column: 827, scope: !8781, inlinedAt: !8549)
!8781 = !DILexicalBlockFile(scope: !8782, file: !1818, discriminator: 14)
!8782 = distinct !DILexicalBlock(scope: !8545, file: !1818, line: 788, column: 811)
!8783 = !DILocation(line: 788, column: 822, scope: !8781, inlinedAt: !8549)
!8784 = !DILocation(line: 788, column: 844, scope: !8781, inlinedAt: !8549)
!8785 = !DILocation(line: 788, column: 862, scope: !8781, inlinedAt: !8549)
!8786 = !DILocation(line: 788, column: 874, scope: !8781, inlinedAt: !8549)
!8787 = !DILocation(line: 788, column: 871, scope: !8781, inlinedAt: !8549)
!8788 = !DILocation(line: 788, column: 859, scope: !8781, inlinedAt: !8549)
!8789 = !DILocation(line: 788, column: 843, scope: !8781, inlinedAt: !8549)
!8790 = !DILocation(line: 788, column: 881, scope: !8791, inlinedAt: !8549)
!8791 = !DILexicalBlockFile(scope: !8782, file: !1818, discriminator: 15)
!8792 = !DILocation(line: 788, column: 893, scope: !8791, inlinedAt: !8549)
!8793 = !DILocation(line: 788, column: 890, scope: !8791, inlinedAt: !8549)
!8794 = !DILocation(line: 788, column: 843, scope: !8791, inlinedAt: !8549)
!8795 = !DILocation(line: 788, column: 900, scope: !8796, inlinedAt: !8549)
!8796 = !DILexicalBlockFile(scope: !8782, file: !1818, discriminator: 16)
!8797 = !DILocation(line: 788, column: 843, scope: !8796, inlinedAt: !8549)
!8798 = !DILocation(line: 788, column: 843, scope: !8799, inlinedAt: !8549)
!8799 = !DILexicalBlockFile(scope: !8782, file: !1818, discriminator: 17)
!8800 = !DILocation(line: 788, column: 840, scope: !8799, inlinedAt: !8549)
!8801 = !DILocation(line: 790, column: 18, scope: !8546, inlinedAt: !8549)
!8802 = !DILocation(line: 790, column: 6, scope: !8546, inlinedAt: !8549)
!8803 = !DILocation(line: 790, column: 10, scope: !8546, inlinedAt: !8549)
!8804 = !DILocation(line: 790, column: 16, scope: !8546, inlinedAt: !8549)
!8805 = !DILocation(line: 792, column: 12, scope: !8546, inlinedAt: !8549)
!8806 = !DILocation(line: 70, column: 73, scope: !8516)
!8807 = !DILocation(line: 70, column: 76, scope: !8516)
!8808 = !DILocation(line: 70, column: 71, scope: !8516)
!8809 = !DILocation(line: 70, column: 5, scope: !8516)
!8810 = distinct !DISubprogram(name: "parse_scale", scope: !898, file: !898, line: 347, type: !8811, isLocal: true, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!1027, !1094, !1385, !1027}
!8813 = !DILocalVariable(name: "s", arg: 1, scope: !8810, file: !898, line: 347, type: !1094)
!8814 = !DILocation(line: 347, column: 47, scope: !8810)
!8815 = !DILocalVariable(name: "scale_index", arg: 2, scope: !8810, file: !898, line: 347, type: !1385)
!8816 = !DILocation(line: 347, column: 55, scope: !8810)
!8817 = !DILocalVariable(name: "sel", arg: 3, scope: !8810, file: !898, line: 347, type: !1027)
!8818 = !DILocation(line: 347, column: 72, scope: !8810)
!8819 = !DILocalVariable(name: "scale_table", scope: !8810, file: !898, line: 349, type: !8820)
!8820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8821, size: 64, align: 64)
!8821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!8822 = !DILocation(line: 349, column: 21, scope: !8810)
!8823 = !DILocalVariable(name: "scale_size", scope: !8810, file: !898, line: 350, type: !1028)
!8824 = !DILocation(line: 350, column: 18, scope: !8810)
!8825 = !DILocation(line: 353, column: 9, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8810, file: !898, line: 353, column: 9)
!8827 = !DILocation(line: 353, column: 13, scope: !8826)
!8828 = !DILocation(line: 353, column: 9, scope: !8810)
!8829 = !DILocation(line: 354, column: 21, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8826, file: !898, line: 353, column: 18)
!8831 = !DILocation(line: 355, column: 20, scope: !8830)
!8832 = !DILocation(line: 356, column: 5, scope: !8830)
!8833 = !DILocation(line: 357, column: 21, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8826, file: !898, line: 356, column: 12)
!8835 = !DILocation(line: 358, column: 20, scope: !8834)
!8836 = !DILocation(line: 362, column: 9, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8810, file: !898, line: 362, column: 9)
!8838 = !DILocation(line: 362, column: 13, scope: !8837)
!8839 = !DILocation(line: 362, column: 9, scope: !8810)
!8840 = !DILocation(line: 363, column: 38, scope: !8837)
!8841 = !DILocation(line: 363, column: 41, scope: !8837)
!8842 = !DILocation(line: 363, column: 71, scope: !8837)
!8843 = !DILocation(line: 363, column: 25, scope: !8837)
!8844 = !DILocation(line: 363, column: 10, scope: !8837)
!8845 = !DILocation(line: 363, column: 22, scope: !8837)
!8846 = !DILocation(line: 363, column: 9, scope: !8837)
!8847 = !DILocation(line: 365, column: 34, scope: !8837)
!8848 = !DILocation(line: 365, column: 37, scope: !8837)
!8849 = !DILocation(line: 365, column: 41, scope: !8837)
!8850 = !DILocation(line: 365, column: 45, scope: !8837)
!8851 = !DILocation(line: 365, column: 24, scope: !8837)
!8852 = !DILocation(line: 365, column: 10, scope: !8837)
!8853 = !DILocation(line: 365, column: 22, scope: !8837)
!8854 = !DILocation(line: 368, column: 24, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8810, file: !898, line: 368, column: 9)
!8856 = !DILocation(line: 368, column: 23, scope: !8855)
!8857 = !DILocation(line: 368, column: 39, scope: !8855)
!8858 = !DILocation(line: 368, column: 36, scope: !8855)
!8859 = !DILocation(line: 368, column: 9, scope: !8810)
!8860 = !DILocation(line: 369, column: 16, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8855, file: !898, line: 368, column: 51)
!8862 = !DILocation(line: 369, column: 19, scope: !8861)
!8863 = !DILocation(line: 369, column: 9, scope: !8861)
!8864 = !DILocation(line: 370, column: 9, scope: !8861)
!8865 = !DILocation(line: 373, column: 25, scope: !8810)
!8866 = !DILocation(line: 373, column: 24, scope: !8810)
!8867 = !DILocation(line: 373, column: 12, scope: !8810)
!8868 = !DILocation(line: 373, column: 5, scope: !8810)
!8869 = !DILocation(line: 374, column: 1, scope: !8810)
!8870 = distinct !DISubprogram(name: "parse_joint_scale", scope: !898, file: !898, line: 376, type: !4665, isLocal: true, isDefinition: true, scopeLine: 377, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8871 = !DILocalVariable(name: "s", arg: 1, scope: !8870, file: !898, line: 376, type: !1094)
!8872 = !DILocation(line: 376, column: 53, scope: !8870)
!8873 = !DILocalVariable(name: "sel", arg: 2, scope: !8870, file: !898, line: 376, type: !1027)
!8874 = !DILocation(line: 376, column: 60, scope: !8870)
!8875 = !DILocalVariable(name: "scale_index", scope: !8870, file: !898, line: 378, type: !1027)
!8876 = !DILocation(line: 378, column: 9, scope: !8870)
!8877 = !DILocation(line: 381, column: 9, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8870, file: !898, line: 381, column: 9)
!8879 = !DILocation(line: 381, column: 13, scope: !8878)
!8880 = !DILocation(line: 381, column: 9, scope: !8870)
!8881 = !DILocation(line: 382, column: 36, scope: !8878)
!8882 = !DILocation(line: 382, column: 39, scope: !8878)
!8883 = !DILocation(line: 382, column: 69, scope: !8878)
!8884 = !DILocation(line: 382, column: 23, scope: !8878)
!8885 = !DILocation(line: 382, column: 21, scope: !8878)
!8886 = !DILocation(line: 382, column: 9, scope: !8878)
!8887 = !DILocation(line: 384, column: 33, scope: !8878)
!8888 = !DILocation(line: 384, column: 36, scope: !8878)
!8889 = !DILocation(line: 384, column: 40, scope: !8878)
!8890 = !DILocation(line: 384, column: 44, scope: !8878)
!8891 = !DILocation(line: 384, column: 23, scope: !8878)
!8892 = !DILocation(line: 384, column: 21, scope: !8878)
!8893 = !DILocation(line: 387, column: 17, scope: !8870)
!8894 = !DILocation(line: 390, column: 23, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8870, file: !898, line: 390, column: 9)
!8896 = !DILocation(line: 390, column: 9, scope: !8895)
!8897 = !DILocation(line: 390, column: 35, scope: !8895)
!8898 = !DILocation(line: 390, column: 9, scope: !8870)
!8899 = !DILocation(line: 391, column: 16, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8895, file: !898, line: 390, column: 118)
!8901 = !DILocation(line: 391, column: 19, scope: !8900)
!8902 = !DILocation(line: 391, column: 9, scope: !8900)
!8903 = !DILocation(line: 392, column: 9, scope: !8900)
!8904 = !DILocation(line: 395, column: 39, scope: !8870)
!8905 = !DILocation(line: 395, column: 12, scope: !8870)
!8906 = !DILocation(line: 395, column: 5, scope: !8870)
!8907 = !DILocation(line: 396, column: 1, scope: !8870)
!8908 = distinct !DISubprogram(name: "get_array", scope: !898, file: !898, line: 73, type: !8909, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{null, !2296, !1029, !1027, !1027}
!8911 = !DILocalVariable(name: "s", arg: 1, scope: !8908, file: !898, line: 73, type: !2296)
!8912 = !DILocation(line: 73, column: 38, scope: !8908)
!8913 = !DILocalVariable(name: "array", arg: 2, scope: !8908, file: !898, line: 73, type: !1029)
!8914 = !DILocation(line: 73, column: 50, scope: !8908)
!8915 = !DILocalVariable(name: "size", arg: 3, scope: !8908, file: !898, line: 73, type: !1027)
!8916 = !DILocation(line: 73, column: 61, scope: !8908)
!8917 = !DILocalVariable(name: "n", arg: 4, scope: !8908, file: !898, line: 73, type: !1027)
!8918 = !DILocation(line: 73, column: 71, scope: !8908)
!8919 = !DILocalVariable(name: "i", scope: !8908, file: !898, line: 75, type: !1027)
!8920 = !DILocation(line: 75, column: 9, scope: !8908)
!8921 = !DILocation(line: 77, column: 12, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8908, file: !898, line: 77, column: 5)
!8923 = !DILocation(line: 77, column: 10, scope: !8922)
!8924 = !DILocation(line: 77, column: 17, scope: !8925)
!8925 = !DILexicalBlockFile(scope: !8926, file: !898, discriminator: 1)
!8926 = distinct !DILexicalBlock(scope: !8922, file: !898, line: 77, column: 5)
!8927 = !DILocation(line: 77, column: 21, scope: !8925)
!8928 = !DILocation(line: 77, column: 19, scope: !8925)
!8929 = !DILocation(line: 77, column: 5, scope: !8925)
!8930 = !DILocation(line: 78, column: 30, scope: !8926)
!8931 = !DILocation(line: 78, column: 33, scope: !8926)
!8932 = !DILocation(line: 78, column: 20, scope: !8926)
!8933 = !DILocation(line: 78, column: 15, scope: !8926)
!8934 = !DILocation(line: 78, column: 9, scope: !8926)
!8935 = !DILocation(line: 78, column: 18, scope: !8926)
!8936 = !DILocation(line: 77, column: 28, scope: !8937)
!8937 = !DILexicalBlockFile(scope: !8926, file: !898, discriminator: 2)
!8938 = !DILocation(line: 77, column: 5, scope: !8937)
!8939 = distinct !{!8939, !8940}
!8940 = !DILocation(line: 77, column: 5, scope: !8908)
!8941 = !DILocation(line: 79, column: 1, scope: !8908)
!8942 = distinct !DISubprogram(name: "mul23", scope: !8943, file: !8943, line: 50, type: !8944, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8943 = !DIFile(filename: "libavcodec/dcamath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!1030, !1030, !1030}
!8946 = !DILocalVariable(name: "a", arg: 1, scope: !8942, file: !8943, line: 50, type: !1030)
!8947 = !DILocation(line: 50, column: 37, scope: !8942)
!8948 = !DILocalVariable(name: "b", arg: 2, scope: !8942, file: !8943, line: 50, type: !1030)
!8949 = !DILocation(line: 50, column: 48, scope: !8942)
!8950 = !DILocation(line: 50, column: 66, scope: !8942)
!8951 = !DILocation(line: 50, column: 69, scope: !8942)
!8952 = !DILocation(line: 50, column: 60, scope: !8942)
!8953 = !DILocation(line: 50, column: 53, scope: !8942)
!8954 = distinct !DISubprogram(name: "clip23", scope: !8943, file: !8943, line: 54, type: !8955, isLocal: true, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!1030, !1030}
!8957 = !DILocalVariable(name: "a", arg: 1, scope: !8958, file: !4019, line: 215, type: !1027)
!8958 = distinct !DISubprogram(name: "av_clip_intp2_c", scope: !4019, file: !4019, line: 215, type: !8959, isLocal: true, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{!1027, !1027, !1027}
!8961 = !DILocation(line: 215, column: 93, scope: !8958, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 54, column: 50, scope: !8954)
!8963 = !DILocalVariable(name: "p", arg: 2, scope: !8958, file: !4019, line: 215, type: !1027)
!8964 = !DILocation(line: 215, column: 100, scope: !8958, inlinedAt: !8962)
!8965 = !DILocalVariable(name: "a", arg: 1, scope: !8954, file: !8943, line: 54, type: !1030)
!8966 = !DILocation(line: 54, column: 38, scope: !8954)
!8967 = !DILocation(line: 54, column: 66, scope: !8954)
!8968 = !DILocation(line: 54, column: 50, scope: !8954)
!8969 = !DILocation(line: 217, column: 20, scope: !8970, inlinedAt: !8962)
!8970 = distinct !DILexicalBlock(scope: !8958, file: !4019, line: 217, column: 9)
!8971 = !DILocation(line: 217, column: 30, scope: !8970, inlinedAt: !8962)
!8972 = !DILocation(line: 217, column: 27, scope: !8970, inlinedAt: !8962)
!8973 = !DILocation(line: 217, column: 22, scope: !8970, inlinedAt: !8962)
!8974 = !DILocation(line: 217, column: 44, scope: !8970, inlinedAt: !8962)
!8975 = !DILocation(line: 217, column: 41, scope: !8970, inlinedAt: !8962)
!8976 = !DILocation(line: 217, column: 47, scope: !8970, inlinedAt: !8962)
!8977 = !DILocation(line: 217, column: 36, scope: !8970, inlinedAt: !8962)
!8978 = !DILocation(line: 217, column: 34, scope: !8970, inlinedAt: !8962)
!8979 = !DILocation(line: 217, column: 9, scope: !8958, inlinedAt: !8962)
!8980 = !DILocation(line: 218, column: 17, scope: !8970, inlinedAt: !8962)
!8981 = !DILocation(line: 218, column: 19, scope: !8970, inlinedAt: !8962)
!8982 = !DILocation(line: 218, column: 35, scope: !8970, inlinedAt: !8962)
!8983 = !DILocation(line: 218, column: 32, scope: !8970, inlinedAt: !8962)
!8984 = !DILocation(line: 218, column: 38, scope: !8970, inlinedAt: !8962)
!8985 = !DILocation(line: 218, column: 26, scope: !8970, inlinedAt: !8962)
!8986 = !DILocation(line: 218, column: 9, scope: !8970, inlinedAt: !8962)
!8987 = !DILocation(line: 220, column: 16, scope: !8970, inlinedAt: !8962)
!8988 = !DILocation(line: 220, column: 9, scope: !8970, inlinedAt: !8962)
!8989 = !DILocation(line: 221, column: 1, scope: !8958, inlinedAt: !8962)
!8990 = !DILocation(line: 54, column: 43, scope: !8954)
!8991 = distinct !DISubprogram(name: "extract_audio", scope: !898, file: !898, line: 573, type: !8992, isLocal: true, isDefinition: true, scopeLine: 574, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{!1027, !1094, !1029, !1027, !1027}
!8994 = !DILocalVariable(name: "s", arg: 1, scope: !8991, file: !898, line: 573, type: !1094)
!8995 = !DILocation(line: 573, column: 49, scope: !8991)
!8996 = !DILocalVariable(name: "audio", arg: 2, scope: !8991, file: !898, line: 573, type: !1029)
!8997 = !DILocation(line: 573, column: 61, scope: !8991)
!8998 = !DILocalVariable(name: "abits", arg: 3, scope: !8991, file: !898, line: 573, type: !1027)
!8999 = !DILocation(line: 573, column: 72, scope: !8991)
!9000 = !DILocalVariable(name: "ch", arg: 4, scope: !8991, file: !898, line: 573, type: !1027)
!9001 = !DILocation(line: 573, column: 83, scope: !8991)
!9002 = !DILocation(line: 577, column: 9, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8991, file: !898, line: 577, column: 9)
!9004 = !DILocation(line: 577, column: 15, scope: !9003)
!9005 = !DILocation(line: 577, column: 9, scope: !8991)
!9006 = !DILocation(line: 579, column: 16, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9003, file: !898, line: 577, column: 21)
!9008 = !DILocation(line: 579, column: 9, scope: !9007)
!9009 = !DILocation(line: 580, column: 9, scope: !9007)
!9010 = !DILocation(line: 583, column: 9, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8991, file: !898, line: 583, column: 9)
!9012 = !DILocation(line: 583, column: 15, scope: !9011)
!9013 = !DILocation(line: 583, column: 9, scope: !8991)
!9014 = !DILocalVariable(name: "sel", scope: !9015, file: !898, line: 584, type: !1027)
!9015 = distinct !DILexicalBlock(scope: !9011, file: !898, line: 583, column: 22)
!9016 = !DILocation(line: 584, column: 13, scope: !9015)
!9017 = !DILocation(line: 584, column: 42, scope: !9015)
!9018 = !DILocation(line: 584, column: 48, scope: !9015)
!9019 = !DILocation(line: 584, column: 19, scope: !9015)
!9020 = !DILocation(line: 584, column: 38, scope: !9015)
!9021 = !DILocation(line: 584, column: 22, scope: !9015)
!9022 = !DILocation(line: 585, column: 13, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9015, file: !898, line: 585, column: 13)
!9024 = !DILocation(line: 585, column: 49, scope: !9023)
!9025 = !DILocation(line: 585, column: 55, scope: !9023)
!9026 = !DILocation(line: 585, column: 19, scope: !9023)
!9027 = !DILocation(line: 585, column: 17, scope: !9023)
!9028 = !DILocation(line: 585, column: 13, scope: !9015)
!9029 = !DILocation(line: 587, column: 40, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9023, file: !898, line: 585, column: 61)
!9031 = !DILocation(line: 587, column: 43, scope: !9030)
!9032 = !DILocation(line: 587, column: 50, scope: !9030)
!9033 = !DILocation(line: 587, column: 57, scope: !9030)
!9034 = !DILocation(line: 587, column: 20, scope: !9030)
!9035 = !DILocation(line: 587, column: 13, scope: !9030)
!9036 = !DILocation(line: 589, column: 13, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9015, file: !898, line: 589, column: 13)
!9038 = !DILocation(line: 589, column: 19, scope: !9037)
!9039 = !DILocation(line: 589, column: 13, scope: !9015)
!9040 = !DILocation(line: 591, column: 38, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !898, line: 589, column: 25)
!9042 = !DILocation(line: 591, column: 41, scope: !9041)
!9043 = !DILocation(line: 591, column: 48, scope: !9041)
!9044 = !DILocation(line: 591, column: 20, scope: !9041)
!9045 = !DILocation(line: 591, column: 13, scope: !9041)
!9046 = !DILocation(line: 593, column: 5, scope: !9015)
!9047 = !DILocation(line: 596, column: 16, scope: !8991)
!9048 = !DILocation(line: 596, column: 19, scope: !8991)
!9049 = !DILocation(line: 596, column: 23, scope: !8991)
!9050 = !DILocation(line: 596, column: 33, scope: !8991)
!9051 = !DILocation(line: 596, column: 39, scope: !8991)
!9052 = !DILocation(line: 596, column: 5, scope: !8991)
!9053 = !DILocation(line: 597, column: 5, scope: !8991)
!9054 = !DILocation(line: 598, column: 1, scope: !8991)
!9055 = distinct !DISubprogram(name: "ff_dca_core_dequantize", scope: !986, file: !986, line: 227, type: !9056, isLocal: true, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{null, !1029, !1959, !1030, !1030, !1027, !1027}
!9058 = !DILocalVariable(name: "output", arg: 1, scope: !9055, file: !986, line: 227, type: !1029)
!9059 = !DILocation(line: 227, column: 52, scope: !9055)
!9060 = !DILocalVariable(name: "input", arg: 2, scope: !9055, file: !986, line: 227, type: !1959)
!9061 = !DILocation(line: 227, column: 75, scope: !9055)
!9062 = !DILocalVariable(name: "step_size", arg: 3, scope: !9055, file: !986, line: 228, type: !1030)
!9063 = !DILocation(line: 228, column: 51, scope: !9055)
!9064 = !DILocalVariable(name: "scale", arg: 4, scope: !9055, file: !986, line: 228, type: !1030)
!9065 = !DILocation(line: 228, column: 70, scope: !9055)
!9066 = !DILocalVariable(name: "residual", arg: 5, scope: !9055, file: !986, line: 228, type: !1027)
!9067 = !DILocation(line: 228, column: 81, scope: !9055)
!9068 = !DILocalVariable(name: "len", arg: 6, scope: !9055, file: !986, line: 228, type: !1027)
!9069 = !DILocation(line: 228, column: 95, scope: !9055)
!9070 = !DILocalVariable(name: "step_scale", scope: !9055, file: !986, line: 231, type: !1041)
!9071 = !DILocation(line: 231, column: 13, scope: !9055)
!9072 = !DILocation(line: 231, column: 35, scope: !9055)
!9073 = !DILocation(line: 231, column: 26, scope: !9055)
!9074 = !DILocation(line: 231, column: 47, scope: !9055)
!9075 = !DILocation(line: 231, column: 45, scope: !9055)
!9076 = !DILocalVariable(name: "n", scope: !9055, file: !986, line: 232, type: !1027)
!9077 = !DILocation(line: 232, column: 9, scope: !9055)
!9078 = !DILocalVariable(name: "shift", scope: !9055, file: !986, line: 232, type: !1027)
!9079 = !DILocation(line: 232, column: 12, scope: !9055)
!9080 = !DILocation(line: 235, column: 9, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9055, file: !986, line: 235, column: 9)
!9082 = !DILocation(line: 235, column: 20, scope: !9081)
!9083 = !DILocation(line: 235, column: 9, scope: !9055)
!9084 = !DILocation(line: 236, column: 38, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !986, line: 235, column: 33)
!9086 = !DILocation(line: 236, column: 49, scope: !9085)
!9087 = !DILocation(line: 236, column: 55, scope: !9085)
!9088 = !DILocation(line: 236, column: 37, scope: !9085)
!9089 = !DILocation(line: 236, column: 23, scope: !9085)
!9090 = !DILocation(line: 236, column: 21, scope: !9085)
!9091 = !DILocation(line: 236, column: 60, scope: !9085)
!9092 = !DILocation(line: 236, column: 15, scope: !9085)
!9093 = !DILocation(line: 237, column: 24, scope: !9085)
!9094 = !DILocation(line: 237, column: 20, scope: !9085)
!9095 = !DILocation(line: 238, column: 5, scope: !9085)
!9096 = !DILocation(line: 241, column: 9, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9055, file: !986, line: 241, column: 9)
!9098 = !DILocation(line: 241, column: 9, scope: !9055)
!9099 = !DILocation(line: 242, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !986, line: 242, column: 9)
!9101 = distinct !DILexicalBlock(scope: !9097, file: !986, line: 241, column: 19)
!9102 = !DILocation(line: 242, column: 14, scope: !9100)
!9103 = !DILocation(line: 242, column: 21, scope: !9104)
!9104 = !DILexicalBlockFile(scope: !9105, file: !986, discriminator: 1)
!9105 = distinct !DILexicalBlock(scope: !9100, file: !986, line: 242, column: 9)
!9106 = !DILocation(line: 242, column: 25, scope: !9104)
!9107 = !DILocation(line: 242, column: 23, scope: !9104)
!9108 = !DILocation(line: 242, column: 9, scope: !9104)
!9109 = !DILocation(line: 243, column: 46, scope: !9105)
!9110 = !DILocation(line: 243, column: 40, scope: !9105)
!9111 = !DILocation(line: 243, column: 51, scope: !9105)
!9112 = !DILocation(line: 243, column: 49, scope: !9105)
!9113 = !DILocation(line: 243, column: 68, scope: !9105)
!9114 = !DILocation(line: 243, column: 66, scope: !9105)
!9115 = !DILocation(line: 243, column: 33, scope: !9105)
!9116 = !DILocation(line: 243, column: 26, scope: !9104)
!9117 = !DILocation(line: 243, column: 20, scope: !9105)
!9118 = !DILocation(line: 243, column: 13, scope: !9105)
!9119 = !DILocation(line: 243, column: 23, scope: !9105)
!9120 = !DILocation(line: 242, column: 31, scope: !9121)
!9121 = !DILexicalBlockFile(scope: !9105, file: !986, discriminator: 2)
!9122 = !DILocation(line: 242, column: 9, scope: !9121)
!9123 = distinct !{!9123, !9124}
!9124 = !DILocation(line: 242, column: 9, scope: !9101)
!9125 = !DILocation(line: 244, column: 5, scope: !9101)
!9126 = !DILocation(line: 245, column: 16, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !986, line: 245, column: 9)
!9128 = distinct !DILexicalBlock(scope: !9097, file: !986, line: 244, column: 12)
!9129 = !DILocation(line: 245, column: 14, scope: !9127)
!9130 = !DILocation(line: 245, column: 21, scope: !9131)
!9131 = !DILexicalBlockFile(scope: !9132, file: !986, discriminator: 1)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !986, line: 245, column: 9)
!9133 = !DILocation(line: 245, column: 25, scope: !9131)
!9134 = !DILocation(line: 245, column: 23, scope: !9131)
!9135 = !DILocation(line: 245, column: 9, scope: !9131)
!9136 = !DILocation(line: 246, column: 45, scope: !9132)
!9137 = !DILocation(line: 246, column: 39, scope: !9132)
!9138 = !DILocation(line: 246, column: 50, scope: !9132)
!9139 = !DILocation(line: 246, column: 48, scope: !9132)
!9140 = !DILocation(line: 246, column: 67, scope: !9132)
!9141 = !DILocation(line: 246, column: 65, scope: !9132)
!9142 = !DILocation(line: 246, column: 32, scope: !9132)
!9143 = !DILocation(line: 246, column: 25, scope: !9131)
!9144 = !DILocation(line: 246, column: 20, scope: !9132)
!9145 = !DILocation(line: 246, column: 13, scope: !9132)
!9146 = !DILocation(line: 246, column: 23, scope: !9132)
!9147 = !DILocation(line: 245, column: 31, scope: !9148)
!9148 = !DILexicalBlockFile(scope: !9132, file: !986, discriminator: 2)
!9149 = !DILocation(line: 245, column: 9, scope: !9148)
!9150 = distinct !{!9150, !9151}
!9151 = !DILocation(line: 245, column: 9, scope: !9128)
!9152 = !DILocation(line: 248, column: 1, scope: !9055)
!9153 = distinct !DISubprogram(name: "inverse_adpcm", scope: !898, file: !898, line: 600, type: !9154, isLocal: true, isDefinition: true, scopeLine: 605, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{null, !1958, !9156, !9158, !1027, !1027, !1027, !1027}
!9156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9157, size: 64, align: 64)
!9157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!9158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64, align: 64)
!9159 = !DILocalVariable(name: "subband_samples", arg: 1, scope: !9153, file: !898, line: 600, type: !1958)
!9160 = !DILocation(line: 600, column: 44, scope: !9153)
!9161 = !DILocalVariable(name: "vq_index", arg: 2, scope: !9153, file: !898, line: 601, type: !9156)
!9162 = !DILocation(line: 601, column: 49, scope: !9153)
!9163 = !DILocalVariable(name: "prediction_mode", arg: 3, scope: !9153, file: !898, line: 602, type: !9158)
!9164 = !DILocation(line: 602, column: 48, scope: !9153)
!9165 = !DILocalVariable(name: "sb_start", arg: 4, scope: !9153, file: !898, line: 603, type: !1027)
!9166 = !DILocation(line: 603, column: 38, scope: !9153)
!9167 = !DILocalVariable(name: "sb_end", arg: 5, scope: !9153, file: !898, line: 603, type: !1027)
!9168 = !DILocation(line: 603, column: 52, scope: !9153)
!9169 = !DILocalVariable(name: "ofs", arg: 6, scope: !9153, file: !898, line: 604, type: !1027)
!9170 = !DILocation(line: 604, column: 38, scope: !9153)
!9171 = !DILocalVariable(name: "len", arg: 7, scope: !9153, file: !898, line: 604, type: !1027)
!9172 = !DILocation(line: 604, column: 47, scope: !9153)
!9173 = !DILocalVariable(name: "i", scope: !9153, file: !898, line: 606, type: !1027)
!9174 = !DILocation(line: 606, column: 9, scope: !9153)
!9175 = !DILocalVariable(name: "j", scope: !9153, file: !898, line: 606, type: !1027)
!9176 = !DILocation(line: 606, column: 12, scope: !9153)
!9177 = !DILocation(line: 608, column: 14, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9153, file: !898, line: 608, column: 5)
!9179 = !DILocation(line: 608, column: 12, scope: !9178)
!9180 = !DILocation(line: 608, column: 10, scope: !9178)
!9181 = !DILocation(line: 608, column: 24, scope: !9182)
!9182 = !DILexicalBlockFile(scope: !9183, file: !898, discriminator: 1)
!9183 = distinct !DILexicalBlock(scope: !9178, file: !898, line: 608, column: 5)
!9184 = !DILocation(line: 608, column: 28, scope: !9182)
!9185 = !DILocation(line: 608, column: 26, scope: !9182)
!9186 = !DILocation(line: 608, column: 5, scope: !9182)
!9187 = !DILocation(line: 609, column: 29, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !898, line: 609, column: 13)
!9189 = distinct !DILexicalBlock(scope: !9183, file: !898, line: 608, column: 41)
!9190 = !DILocation(line: 609, column: 13, scope: !9188)
!9191 = !DILocation(line: 609, column: 13, scope: !9189)
!9192 = !DILocalVariable(name: "pred_id", scope: !9193, file: !898, line: 610, type: !1173)
!9193 = distinct !DILexicalBlock(scope: !9188, file: !898, line: 609, column: 33)
!9194 = !DILocation(line: 610, column: 23, scope: !9193)
!9195 = !DILocation(line: 610, column: 42, scope: !9193)
!9196 = !DILocation(line: 610, column: 33, scope: !9193)
!9197 = !DILocalVariable(name: "ptr", scope: !9193, file: !898, line: 611, type: !1029)
!9198 = !DILocation(line: 611, column: 22, scope: !9193)
!9199 = !DILocation(line: 611, column: 44, scope: !9193)
!9200 = !DILocation(line: 611, column: 28, scope: !9193)
!9201 = !DILocation(line: 611, column: 49, scope: !9193)
!9202 = !DILocation(line: 611, column: 47, scope: !9193)
!9203 = !DILocation(line: 612, column: 20, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9193, file: !898, line: 612, column: 13)
!9205 = !DILocation(line: 612, column: 18, scope: !9204)
!9206 = !DILocation(line: 612, column: 25, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !9208, file: !898, discriminator: 1)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !898, line: 612, column: 13)
!9209 = !DILocation(line: 612, column: 29, scope: !9207)
!9210 = !DILocation(line: 612, column: 27, scope: !9207)
!9211 = !DILocation(line: 612, column: 13, scope: !9207)
!9212 = !DILocalVariable(name: "x", scope: !9213, file: !898, line: 613, type: !1030)
!9213 = distinct !DILexicalBlock(scope: !9208, file: !898, line: 612, column: 39)
!9214 = !DILocation(line: 613, column: 25, scope: !9213)
!9215 = !DILocation(line: 613, column: 49, scope: !9213)
!9216 = !DILocation(line: 613, column: 58, scope: !9213)
!9217 = !DILocation(line: 613, column: 64, scope: !9213)
!9218 = !DILocation(line: 613, column: 62, scope: !9213)
!9219 = !DILocation(line: 613, column: 66, scope: !9213)
!9220 = !DILocation(line: 613, column: 29, scope: !9213)
!9221 = !DILocation(line: 614, column: 37, scope: !9213)
!9222 = !DILocation(line: 614, column: 33, scope: !9213)
!9223 = !DILocation(line: 614, column: 42, scope: !9213)
!9224 = !DILocation(line: 614, column: 40, scope: !9213)
!9225 = !DILocation(line: 614, column: 26, scope: !9213)
!9226 = !DILocation(line: 614, column: 21, scope: !9213)
!9227 = !DILocation(line: 614, column: 17, scope: !9213)
!9228 = !DILocation(line: 614, column: 24, scope: !9213)
!9229 = !DILocation(line: 615, column: 13, scope: !9213)
!9230 = !DILocation(line: 612, column: 35, scope: !9231)
!9231 = !DILexicalBlockFile(scope: !9208, file: !898, discriminator: 2)
!9232 = !DILocation(line: 612, column: 13, scope: !9231)
!9233 = distinct !{!9233, !9234}
!9234 = !DILocation(line: 612, column: 13, scope: !9193)
!9235 = !DILocation(line: 616, column: 9, scope: !9193)
!9236 = !DILocation(line: 617, column: 5, scope: !9189)
!9237 = !DILocation(line: 608, column: 37, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !9183, file: !898, discriminator: 2)
!9239 = !DILocation(line: 608, column: 5, scope: !9238)
!9240 = distinct !{!9240, !9241}
!9241 = !DILocation(line: 608, column: 5, scope: !9153)
!9242 = !DILocation(line: 618, column: 1, scope: !9153)
!9243 = distinct !DISubprogram(name: "get_sbits", scope: !1818, file: !1818, line: 361, type: !3522, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9244 = !DILocation(line: 66, column: 98, scope: !2831, inlinedAt: !9245)
!9245 = distinct !DILocation(line: 370, column: 16, scope: !9243)
!9246 = !DILocalVariable(name: "s", arg: 1, scope: !9243, file: !1818, line: 361, type: !2296)
!9247 = !DILocation(line: 361, column: 44, scope: !9243)
!9248 = !DILocalVariable(name: "n", arg: 2, scope: !9243, file: !1818, line: 361, type: !1027)
!9249 = !DILocation(line: 361, column: 51, scope: !9243)
!9250 = !DILocalVariable(name: "tmp", scope: !9243, file: !1818, line: 363, type: !1027)
!9251 = !DILocation(line: 363, column: 18, scope: !9243)
!9252 = !DILocalVariable(name: "re_index", scope: !9243, file: !1818, line: 368, type: !1028)
!9253 = !DILocation(line: 368, column: 18, scope: !9243)
!9254 = !DILocation(line: 368, column: 30, scope: !9243)
!9255 = !DILocation(line: 368, column: 34, scope: !9243)
!9256 = !DILocalVariable(name: "re_cache", scope: !9243, file: !1818, line: 368, type: !1028)
!9257 = !DILocation(line: 368, column: 78, scope: !9243)
!9258 = !DILocalVariable(name: "re_size_plus8", scope: !9243, file: !1818, line: 368, type: !1028)
!9259 = !DILocation(line: 368, column: 101, scope: !9243)
!9260 = !DILocation(line: 368, column: 118, scope: !9243)
!9261 = !DILocation(line: 368, column: 122, scope: !9243)
!9262 = !DILocation(line: 370, column: 60, scope: !9243)
!9263 = !DILocation(line: 370, column: 64, scope: !9243)
!9264 = !DILocation(line: 370, column: 74, scope: !9243)
!9265 = !DILocation(line: 370, column: 83, scope: !9243)
!9266 = !DILocation(line: 370, column: 71, scope: !9243)
!9267 = !DILocation(line: 370, column: 92, scope: !9243)
!9268 = !DILocation(line: 370, column: 16, scope: !9243)
!9269 = !DILocation(line: 68, column: 16, scope: !2831, inlinedAt: !9245)
!9270 = !DILocation(line: 68, column: 19, scope: !2831, inlinedAt: !9245)
!9271 = !DILocation(line: 68, column: 24, scope: !2831, inlinedAt: !9245)
!9272 = !DILocation(line: 68, column: 38, scope: !2831, inlinedAt: !9245)
!9273 = !DILocation(line: 68, column: 41, scope: !2831, inlinedAt: !9245)
!9274 = !DILocation(line: 68, column: 46, scope: !2831, inlinedAt: !9245)
!9275 = !DILocation(line: 68, column: 34, scope: !2831, inlinedAt: !9245)
!9276 = !DILocation(line: 68, column: 57, scope: !2831, inlinedAt: !9245)
!9277 = !DILocation(line: 68, column: 69, scope: !2831, inlinedAt: !9245)
!9278 = !DILocation(line: 68, column: 72, scope: !2831, inlinedAt: !9245)
!9279 = !DILocation(line: 68, column: 79, scope: !2831, inlinedAt: !9245)
!9280 = !DILocation(line: 68, column: 84, scope: !2831, inlinedAt: !9245)
!9281 = !DILocation(line: 68, column: 99, scope: !2831, inlinedAt: !9245)
!9282 = !DILocation(line: 68, column: 102, scope: !2831, inlinedAt: !9245)
!9283 = !DILocation(line: 68, column: 109, scope: !2831, inlinedAt: !9245)
!9284 = !DILocation(line: 68, column: 114, scope: !2831, inlinedAt: !9245)
!9285 = !DILocation(line: 68, column: 94, scope: !2831, inlinedAt: !9245)
!9286 = !DILocation(line: 68, column: 63, scope: !2831, inlinedAt: !9245)
!9287 = !DILocation(line: 370, column: 100, scope: !9243)
!9288 = !DILocation(line: 370, column: 109, scope: !9243)
!9289 = !DILocation(line: 370, column: 96, scope: !9243)
!9290 = !DILocation(line: 370, column: 14, scope: !9243)
!9291 = !DILocation(line: 371, column: 21, scope: !9243)
!9292 = !DILocation(line: 371, column: 31, scope: !9243)
!9293 = !DILocation(line: 371, column: 11, scope: !9243)
!9294 = !DILocation(line: 371, column: 9, scope: !9243)
!9295 = !DILocation(line: 372, column: 18, scope: !9243)
!9296 = !DILocation(line: 372, column: 36, scope: !9243)
!9297 = !DILocation(line: 372, column: 48, scope: !9243)
!9298 = !DILocation(line: 372, column: 45, scope: !9243)
!9299 = !DILocation(line: 372, column: 33, scope: !9243)
!9300 = !DILocation(line: 372, column: 17, scope: !9243)
!9301 = !DILocation(line: 372, column: 55, scope: !9302)
!9302 = !DILexicalBlockFile(scope: !9243, file: !1818, discriminator: 1)
!9303 = !DILocation(line: 372, column: 67, scope: !9302)
!9304 = !DILocation(line: 372, column: 64, scope: !9302)
!9305 = !DILocation(line: 372, column: 17, scope: !9302)
!9306 = !DILocation(line: 372, column: 74, scope: !9307)
!9307 = !DILexicalBlockFile(scope: !9243, file: !1818, discriminator: 2)
!9308 = !DILocation(line: 372, column: 17, scope: !9307)
!9309 = !DILocation(line: 372, column: 17, scope: !9310)
!9310 = !DILexicalBlockFile(scope: !9243, file: !1818, discriminator: 3)
!9311 = !DILocation(line: 372, column: 14, scope: !9310)
!9312 = !DILocation(line: 373, column: 18, scope: !9243)
!9313 = !DILocation(line: 373, column: 6, scope: !9243)
!9314 = !DILocation(line: 373, column: 10, scope: !9243)
!9315 = !DILocation(line: 373, column: 16, scope: !9243)
!9316 = !DILocation(line: 375, column: 12, scope: !9243)
!9317 = !DILocation(line: 375, column: 5, scope: !9243)
!9318 = distinct !DISubprogram(name: "NEG_SSR32", scope: !8502, file: !8502, line: 115, type: !9319, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{!1030, !1030, !1084}
!9321 = !DILocalVariable(name: "a", arg: 1, scope: !9318, file: !8502, line: 115, type: !1030)
!9322 = !DILocation(line: 115, column: 42, scope: !9318)
!9323 = !DILocalVariable(name: "s", arg: 2, scope: !9318, file: !8502, line: 115, type: !1084)
!9324 = !DILocation(line: 115, column: 52, scope: !9318)
!9325 = !DILocation(line: 116, column: 5, scope: !9318)
!9326 = !DILocation(line: 118, column: 29, scope: !9318)
!9327 = !DILocation(line: 118, column: 28, scope: !9318)
!9328 = !DILocation(line: 118, column: 18, scope: !9318)
!9329 = !{i32 179973, i32 179987}
!9330 = !DILocation(line: 120, column: 12, scope: !9318)
!9331 = !DILocation(line: 120, column: 5, scope: !9318)
!9332 = distinct !DISubprogram(name: "mul__", scope: !8943, file: !8943, line: 35, type: !9333, isLocal: true, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9333 = !DISubroutineType(types: !9334)
!9334 = !{!1030, !1030, !1030, !1027}
!9335 = !DILocalVariable(name: "a", arg: 1, scope: !9332, file: !8943, line: 35, type: !1030)
!9336 = !DILocation(line: 35, column: 37, scope: !9332)
!9337 = !DILocalVariable(name: "b", arg: 2, scope: !9332, file: !8943, line: 35, type: !1030)
!9338 = !DILocation(line: 35, column: 48, scope: !9332)
!9339 = !DILocalVariable(name: "bits", arg: 3, scope: !9332, file: !8943, line: 35, type: !1027)
!9340 = !DILocation(line: 35, column: 55, scope: !9332)
!9341 = !DILocation(line: 37, column: 28, scope: !9332)
!9342 = !DILocation(line: 37, column: 19, scope: !9332)
!9343 = !DILocation(line: 37, column: 32, scope: !9332)
!9344 = !DILocation(line: 37, column: 30, scope: !9332)
!9345 = !DILocation(line: 37, column: 35, scope: !9332)
!9346 = !DILocation(line: 37, column: 12, scope: !9332)
!9347 = !DILocation(line: 37, column: 5, scope: !9332)
!9348 = distinct !DISubprogram(name: "norm__", scope: !8943, file: !8943, line: 27, type: !9349, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!1030, !1041, !1027}
!9351 = !DILocalVariable(name: "a", arg: 1, scope: !9348, file: !8943, line: 27, type: !1041)
!9352 = !DILocation(line: 27, column: 38, scope: !9348)
!9353 = !DILocalVariable(name: "bits", arg: 2, scope: !9348, file: !8943, line: 27, type: !1027)
!9354 = !DILocation(line: 27, column: 45, scope: !9348)
!9355 = !DILocation(line: 29, column: 9, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9348, file: !8943, line: 29, column: 9)
!9357 = !DILocation(line: 29, column: 14, scope: !9356)
!9358 = !DILocation(line: 29, column: 9, scope: !9348)
!9359 = !DILocation(line: 30, column: 27, scope: !9356)
!9360 = !DILocation(line: 30, column: 39, scope: !9356)
!9361 = !DILocation(line: 30, column: 44, scope: !9356)
!9362 = !DILocation(line: 30, column: 35, scope: !9356)
!9363 = !DILocation(line: 30, column: 29, scope: !9356)
!9364 = !DILocation(line: 30, column: 54, scope: !9356)
!9365 = !DILocation(line: 30, column: 51, scope: !9356)
!9366 = !DILocation(line: 30, column: 16, scope: !9356)
!9367 = !DILocation(line: 30, column: 9, scope: !9356)
!9368 = !DILocation(line: 32, column: 25, scope: !9356)
!9369 = !DILocation(line: 32, column: 16, scope: !9356)
!9370 = !DILocation(line: 32, column: 9, scope: !9356)
!9371 = !DILocation(line: 33, column: 1, scope: !9348)
!9372 = distinct !DISubprogram(name: "parse_huffman_codes", scope: !898, file: !898, line: 562, type: !8992, isLocal: true, isDefinition: true, scopeLine: 563, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9373 = !DILocalVariable(name: "s", arg: 1, scope: !9372, file: !898, line: 562, type: !1094)
!9374 = !DILocation(line: 562, column: 55, scope: !9372)
!9375 = !DILocalVariable(name: "audio", arg: 2, scope: !9372, file: !898, line: 562, type: !1029)
!9376 = !DILocation(line: 562, column: 67, scope: !9372)
!9377 = !DILocalVariable(name: "abits", arg: 3, scope: !9372, file: !898, line: 562, type: !1027)
!9378 = !DILocation(line: 562, column: 78, scope: !9372)
!9379 = !DILocalVariable(name: "sel", arg: 4, scope: !9372, file: !898, line: 562, type: !1027)
!9380 = !DILocation(line: 562, column: 89, scope: !9372)
!9381 = !DILocalVariable(name: "i", scope: !9372, file: !898, line: 564, type: !1027)
!9382 = !DILocation(line: 564, column: 9, scope: !9372)
!9383 = !DILocation(line: 567, column: 12, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9372, file: !898, line: 567, column: 5)
!9385 = !DILocation(line: 567, column: 10, scope: !9384)
!9386 = !DILocation(line: 567, column: 17, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9388, file: !898, discriminator: 1)
!9388 = distinct !DILexicalBlock(scope: !9384, file: !898, line: 567, column: 5)
!9389 = !DILocation(line: 567, column: 19, scope: !9387)
!9390 = !DILocation(line: 567, column: 5, scope: !9387)
!9391 = !DILocation(line: 568, column: 33, scope: !9388)
!9392 = !DILocation(line: 568, column: 36, scope: !9388)
!9393 = !DILocation(line: 568, column: 64, scope: !9388)
!9394 = !DILocation(line: 568, column: 70, scope: !9388)
!9395 = !DILocation(line: 568, column: 41, scope: !9388)
!9396 = !DILocation(line: 568, column: 76, scope: !9388)
!9397 = !DILocation(line: 568, column: 20, scope: !9388)
!9398 = !DILocation(line: 568, column: 15, scope: !9388)
!9399 = !DILocation(line: 568, column: 9, scope: !9388)
!9400 = !DILocation(line: 568, column: 18, scope: !9388)
!9401 = !DILocation(line: 567, column: 25, scope: !9402)
!9402 = !DILexicalBlockFile(scope: !9388, file: !898, discriminator: 2)
!9403 = !DILocation(line: 567, column: 5, scope: !9402)
!9404 = distinct !{!9404, !9405}
!9405 = !DILocation(line: 567, column: 5, scope: !9372)
!9406 = !DILocation(line: 570, column: 5, scope: !9372)
!9407 = distinct !DISubprogram(name: "parse_block_codes", scope: !898, file: !898, line: 546, type: !9408, isLocal: true, isDefinition: true, scopeLine: 547, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!1027, !1094, !1029, !1027}
!9410 = !DILocalVariable(name: "s", arg: 1, scope: !9407, file: !898, line: 546, type: !1094)
!9411 = !DILocation(line: 546, column: 53, scope: !9407)
!9412 = !DILocalVariable(name: "audio", arg: 2, scope: !9407, file: !898, line: 546, type: !1029)
!9413 = !DILocation(line: 546, column: 65, scope: !9407)
!9414 = !DILocalVariable(name: "abits", arg: 3, scope: !9407, file: !898, line: 546, type: !1027)
!9415 = !DILocation(line: 546, column: 76, scope: !9407)
!9416 = !DILocalVariable(name: "code1", scope: !9407, file: !898, line: 549, type: !1027)
!9417 = !DILocation(line: 549, column: 9, scope: !9407)
!9418 = !DILocation(line: 549, column: 27, scope: !9407)
!9419 = !DILocation(line: 549, column: 30, scope: !9407)
!9420 = !DILocation(line: 549, column: 51, scope: !9407)
!9421 = !DILocation(line: 549, column: 57, scope: !9407)
!9422 = !DILocation(line: 549, column: 34, scope: !9407)
!9423 = !DILocation(line: 549, column: 17, scope: !9407)
!9424 = !DILocalVariable(name: "code2", scope: !9407, file: !898, line: 550, type: !1027)
!9425 = !DILocation(line: 550, column: 9, scope: !9407)
!9426 = !DILocation(line: 550, column: 27, scope: !9407)
!9427 = !DILocation(line: 550, column: 30, scope: !9407)
!9428 = !DILocation(line: 550, column: 51, scope: !9407)
!9429 = !DILocation(line: 550, column: 57, scope: !9407)
!9430 = !DILocation(line: 550, column: 34, scope: !9407)
!9431 = !DILocation(line: 550, column: 17, scope: !9407)
!9432 = !DILocalVariable(name: "levels", scope: !9407, file: !898, line: 551, type: !1027)
!9433 = !DILocation(line: 551, column: 9, scope: !9407)
!9434 = !DILocation(line: 551, column: 38, scope: !9407)
!9435 = !DILocation(line: 551, column: 18, scope: !9407)
!9436 = !DILocation(line: 554, column: 27, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9407, file: !898, line: 554, column: 9)
!9438 = !DILocation(line: 554, column: 34, scope: !9437)
!9439 = !DILocation(line: 554, column: 41, scope: !9437)
!9440 = !DILocation(line: 554, column: 49, scope: !9437)
!9441 = !DILocation(line: 554, column: 9, scope: !9437)
!9442 = !DILocation(line: 554, column: 9, scope: !9407)
!9443 = !DILocation(line: 555, column: 16, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9437, file: !898, line: 554, column: 57)
!9445 = !DILocation(line: 555, column: 19, scope: !9444)
!9446 = !DILocation(line: 555, column: 9, scope: !9444)
!9447 = !DILocation(line: 556, column: 9, scope: !9444)
!9448 = !DILocation(line: 559, column: 5, scope: !9407)
!9449 = !DILocation(line: 560, column: 1, scope: !9407)
!9450 = distinct !DISubprogram(name: "decode_blockcodes", scope: !898, file: !898, line: 526, type: !9451, isLocal: true, isDefinition: true, scopeLine: 527, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!1027, !1027, !1027, !1027, !1029}
!9453 = !DILocalVariable(name: "code1", arg: 1, scope: !9450, file: !898, line: 526, type: !1027)
!9454 = !DILocation(line: 526, column: 41, scope: !9450)
!9455 = !DILocalVariable(name: "code2", arg: 2, scope: !9450, file: !898, line: 526, type: !1027)
!9456 = !DILocation(line: 526, column: 52, scope: !9450)
!9457 = !DILocalVariable(name: "levels", arg: 3, scope: !9450, file: !898, line: 526, type: !1027)
!9458 = !DILocation(line: 526, column: 63, scope: !9450)
!9459 = !DILocalVariable(name: "audio", arg: 4, scope: !9450, file: !898, line: 526, type: !1029)
!9460 = !DILocation(line: 526, column: 80, scope: !9450)
!9461 = !DILocalVariable(name: "offset", scope: !9450, file: !898, line: 528, type: !1027)
!9462 = !DILocation(line: 528, column: 9, scope: !9450)
!9463 = !DILocation(line: 528, column: 19, scope: !9450)
!9464 = !DILocation(line: 528, column: 26, scope: !9450)
!9465 = !DILocation(line: 528, column: 31, scope: !9450)
!9466 = !DILocalVariable(name: "n", scope: !9450, file: !898, line: 529, type: !1027)
!9467 = !DILocation(line: 529, column: 9, scope: !9450)
!9468 = !DILocalVariable(name: "div", scope: !9450, file: !898, line: 529, type: !1027)
!9469 = !DILocation(line: 529, column: 12, scope: !9450)
!9470 = !DILocation(line: 531, column: 12, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9450, file: !898, line: 531, column: 5)
!9472 = !DILocation(line: 531, column: 10, scope: !9471)
!9473 = !DILocation(line: 531, column: 17, scope: !9474)
!9474 = !DILexicalBlockFile(scope: !9475, file: !898, discriminator: 1)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !898, line: 531, column: 5)
!9476 = !DILocation(line: 531, column: 19, scope: !9474)
!9477 = !DILocation(line: 531, column: 5, scope: !9474)
!9478 = !DILocation(line: 532, column: 39, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !898, line: 531, column: 33)
!9480 = !DILocation(line: 532, column: 29, scope: !9479)
!9481 = !DILocation(line: 532, column: 59, scope: !9479)
!9482 = !DILocation(line: 532, column: 48, scope: !9479)
!9483 = !DILocation(line: 532, column: 46, scope: !9479)
!9484 = !DILocation(line: 532, column: 68, scope: !9479)
!9485 = !DILocation(line: 532, column: 16, scope: !9479)
!9486 = !DILocation(line: 532, column: 13, scope: !9479)
!9487 = !DILocation(line: 533, column: 20, scope: !9479)
!9488 = !DILocation(line: 533, column: 28, scope: !9479)
!9489 = !DILocation(line: 533, column: 34, scope: !9479)
!9490 = !DILocation(line: 533, column: 32, scope: !9479)
!9491 = !DILocation(line: 533, column: 26, scope: !9479)
!9492 = !DILocation(line: 533, column: 43, scope: !9479)
!9493 = !DILocation(line: 533, column: 41, scope: !9479)
!9494 = !DILocation(line: 533, column: 15, scope: !9479)
!9495 = !DILocation(line: 533, column: 9, scope: !9479)
!9496 = !DILocation(line: 533, column: 18, scope: !9479)
!9497 = !DILocation(line: 534, column: 17, scope: !9479)
!9498 = !DILocation(line: 534, column: 15, scope: !9479)
!9499 = !DILocation(line: 535, column: 5, scope: !9479)
!9500 = !DILocation(line: 531, column: 29, scope: !9501)
!9501 = !DILexicalBlockFile(scope: !9475, file: !898, discriminator: 2)
!9502 = !DILocation(line: 531, column: 5, scope: !9501)
!9503 = distinct !{!9503, !9504}
!9504 = !DILocation(line: 531, column: 5, scope: !9450)
!9505 = !DILocation(line: 536, column: 5, scope: !9450)
!9506 = !DILocation(line: 536, column: 12, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !9508, file: !898, discriminator: 1)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !898, line: 536, column: 5)
!9509 = distinct !DILexicalBlock(scope: !9450, file: !898, line: 536, column: 5)
!9510 = !DILocation(line: 536, column: 14, scope: !9507)
!9511 = !DILocation(line: 536, column: 5, scope: !9507)
!9512 = !DILocation(line: 537, column: 39, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9508, file: !898, line: 536, column: 24)
!9514 = !DILocation(line: 537, column: 29, scope: !9513)
!9515 = !DILocation(line: 537, column: 59, scope: !9513)
!9516 = !DILocation(line: 537, column: 48, scope: !9513)
!9517 = !DILocation(line: 537, column: 46, scope: !9513)
!9518 = !DILocation(line: 537, column: 68, scope: !9513)
!9519 = !DILocation(line: 537, column: 16, scope: !9513)
!9520 = !DILocation(line: 537, column: 13, scope: !9513)
!9521 = !DILocation(line: 538, column: 20, scope: !9513)
!9522 = !DILocation(line: 538, column: 28, scope: !9513)
!9523 = !DILocation(line: 538, column: 34, scope: !9513)
!9524 = !DILocation(line: 538, column: 32, scope: !9513)
!9525 = !DILocation(line: 538, column: 26, scope: !9513)
!9526 = !DILocation(line: 538, column: 43, scope: !9513)
!9527 = !DILocation(line: 538, column: 41, scope: !9513)
!9528 = !DILocation(line: 538, column: 15, scope: !9513)
!9529 = !DILocation(line: 538, column: 9, scope: !9513)
!9530 = !DILocation(line: 538, column: 18, scope: !9513)
!9531 = !DILocation(line: 539, column: 17, scope: !9513)
!9532 = !DILocation(line: 539, column: 15, scope: !9513)
!9533 = !DILocation(line: 540, column: 5, scope: !9513)
!9534 = !DILocation(line: 536, column: 20, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !9508, file: !898, discriminator: 2)
!9536 = !DILocation(line: 536, column: 5, scope: !9535)
!9537 = distinct !{!9537, !9505}
!9538 = !DILocation(line: 542, column: 12, scope: !9450)
!9539 = !DILocation(line: 542, column: 20, scope: !9450)
!9540 = !DILocation(line: 542, column: 18, scope: !9450)
!9541 = !DILocation(line: 542, column: 5, scope: !9450)
!9542 = distinct !DISubprogram(name: "ff_dcaadpcm_predict", scope: !9543, file: !9543, line: 33, type: !9544, isLocal: true, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9543 = !DIFile(filename: "libavcodec/dcaadpcm.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9544 = !DISubroutineType(types: !9545)
!9545 = !{!1041, !1027, !1959}
!9546 = !DILocalVariable(name: "pred_vq_index", arg: 1, scope: !9542, file: !9543, line: 33, type: !1027)
!9547 = !DILocation(line: 33, column: 47, scope: !9542)
!9548 = !DILocalVariable(name: "input", arg: 2, scope: !9542, file: !9543, line: 33, type: !1959)
!9549 = !DILocation(line: 33, column: 77, scope: !9542)
!9550 = !DILocalVariable(name: "i", scope: !9542, file: !9543, line: 35, type: !1027)
!9551 = !DILocation(line: 35, column: 9, scope: !9542)
!9552 = !DILocalVariable(name: "coeff", scope: !9542, file: !9543, line: 36, type: !9156)
!9553 = !DILocation(line: 36, column: 20, scope: !9542)
!9554 = !DILocation(line: 36, column: 44, scope: !9542)
!9555 = !DILocation(line: 36, column: 28, scope: !9542)
!9556 = !DILocalVariable(name: "pred", scope: !9542, file: !9543, line: 37, type: !1041)
!9557 = !DILocation(line: 37, column: 13, scope: !9542)
!9558 = !DILocation(line: 38, column: 12, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9542, file: !9543, line: 38, column: 5)
!9560 = !DILocation(line: 38, column: 10, scope: !9559)
!9561 = !DILocation(line: 38, column: 17, scope: !9562)
!9562 = !DILexicalBlockFile(scope: !9563, file: !9543, discriminator: 1)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !9543, line: 38, column: 5)
!9564 = !DILocation(line: 38, column: 19, scope: !9562)
!9565 = !DILocation(line: 38, column: 5, scope: !9562)
!9566 = !DILocation(line: 39, column: 40, scope: !9563)
!9567 = !DILocation(line: 39, column: 38, scope: !9563)
!9568 = !DILocation(line: 39, column: 26, scope: !9563)
!9569 = !DILocation(line: 39, column: 17, scope: !9563)
!9570 = !DILocation(line: 39, column: 51, scope: !9563)
!9571 = !DILocation(line: 39, column: 45, scope: !9563)
!9572 = !DILocation(line: 39, column: 43, scope: !9563)
!9573 = !DILocation(line: 39, column: 14, scope: !9563)
!9574 = !DILocation(line: 39, column: 9, scope: !9563)
!9575 = !DILocation(line: 38, column: 25, scope: !9576)
!9576 = !DILexicalBlockFile(scope: !9563, file: !9543, discriminator: 2)
!9577 = !DILocation(line: 38, column: 5, scope: !9576)
!9578 = distinct !{!9578, !9579}
!9579 = !DILocation(line: 38, column: 5, scope: !9542)
!9580 = !DILocation(line: 41, column: 26, scope: !9542)
!9581 = !DILocation(line: 41, column: 19, scope: !9542)
!9582 = !DILocation(line: 41, column: 12, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9542, file: !9543, discriminator: 1)
!9584 = !DILocation(line: 41, column: 12, scope: !9542)
!9585 = !DILocation(line: 41, column: 5, scope: !9542)
!9586 = distinct !DISubprogram(name: "norm13", scope: !8943, file: !8943, line: 40, type: !9587, isLocal: true, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9587 = !DISubroutineType(types: !9588)
!9588 = !{!1030, !1041}
!9589 = !DILocalVariable(name: "a", arg: 1, scope: !9586, file: !8943, line: 40, type: !1041)
!9590 = !DILocation(line: 40, column: 38, scope: !9586)
!9591 = !DILocation(line: 40, column: 57, scope: !9586)
!9592 = !DILocation(line: 40, column: 50, scope: !9586)
!9593 = !DILocation(line: 40, column: 43, scope: !9586)
!9594 = distinct !DISubprogram(name: "parse_aux_data", scope: !898, file: !898, line: 1617, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1618, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9595 = !DILocalVariable(name: "s", arg: 1, scope: !9594, file: !898, line: 1617, type: !1094)
!9596 = !DILocation(line: 1617, column: 43, scope: !9594)
!9597 = !DILocalVariable(name: "aux_pos", scope: !9594, file: !898, line: 1619, type: !1027)
!9598 = !DILocation(line: 1619, column: 9, scope: !9594)
!9599 = !DILocation(line: 1621, column: 24, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9594, file: !898, line: 1621, column: 9)
!9601 = !DILocation(line: 1621, column: 27, scope: !9600)
!9602 = !DILocation(line: 1621, column: 9, scope: !9600)
!9603 = !DILocation(line: 1621, column: 31, scope: !9600)
!9604 = !DILocation(line: 1621, column: 9, scope: !9594)
!9605 = !DILocation(line: 1622, column: 9, scope: !9600)
!9606 = !DILocation(line: 1625, column: 16, scope: !9594)
!9607 = !DILocation(line: 1625, column: 19, scope: !9594)
!9608 = !DILocation(line: 1625, column: 5, scope: !9594)
!9609 = !DILocation(line: 1628, column: 21, scope: !9594)
!9610 = !DILocation(line: 1628, column: 24, scope: !9594)
!9611 = !DILocation(line: 1628, column: 45, scope: !9594)
!9612 = !DILocation(line: 1628, column: 48, scope: !9594)
!9613 = !DILocation(line: 1628, column: 29, scope: !9594)
!9614 = !DILocation(line: 1628, column: 28, scope: !9594)
!9615 = !DILocation(line: 1628, column: 52, scope: !9594)
!9616 = !DILocation(line: 1628, column: 5, scope: !9617)
!9617 = !DILexicalBlockFile(scope: !9594, file: !898, discriminator: 1)
!9618 = !DILocation(line: 1631, column: 24, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9594, file: !898, line: 1631, column: 9)
!9620 = !DILocation(line: 1631, column: 27, scope: !9619)
!9621 = !DILocation(line: 1631, column: 9, scope: !9619)
!9622 = !DILocation(line: 1631, column: 35, scope: !9619)
!9623 = !DILocation(line: 1631, column: 9, scope: !9594)
!9624 = !DILocation(line: 1632, column: 16, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9619, file: !898, line: 1631, column: 51)
!9626 = !DILocation(line: 1632, column: 19, scope: !9625)
!9627 = !DILocation(line: 1632, column: 9, scope: !9625)
!9628 = !DILocation(line: 1633, column: 9, scope: !9625)
!9629 = !DILocation(line: 1636, column: 31, scope: !9594)
!9630 = !DILocation(line: 1636, column: 34, scope: !9594)
!9631 = !DILocation(line: 1636, column: 15, scope: !9594)
!9632 = !DILocation(line: 1636, column: 13, scope: !9594)
!9633 = !DILocation(line: 1639, column: 20, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9594, file: !898, line: 1639, column: 9)
!9635 = !DILocation(line: 1639, column: 23, scope: !9634)
!9636 = !DILocation(line: 1639, column: 9, scope: !9634)
!9637 = !DILocation(line: 1639, column: 9, scope: !9594)
!9638 = !DILocation(line: 1640, column: 25, scope: !9634)
!9639 = !DILocation(line: 1640, column: 28, scope: !9634)
!9640 = !DILocation(line: 1640, column: 9, scope: !9634)
!9641 = !DILocation(line: 1643, column: 44, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9594, file: !898, line: 1643, column: 9)
!9643 = !DILocation(line: 1643, column: 47, scope: !9642)
!9644 = !DILocation(line: 1643, column: 33, scope: !9642)
!9645 = !DILocation(line: 1643, column: 9, scope: !9642)
!9646 = !DILocation(line: 1643, column: 12, scope: !9642)
!9647 = !DILocation(line: 1643, column: 31, scope: !9642)
!9648 = !DILocation(line: 1643, column: 9, scope: !9594)
!9649 = !DILocalVariable(name: "i", scope: !9650, file: !898, line: 1644, type: !1027)
!9650 = distinct !DILexicalBlock(scope: !9642, file: !898, line: 1643, column: 52)
!9651 = !DILocation(line: 1644, column: 13, scope: !9650)
!9652 = !DILocalVariable(name: "m", scope: !9650, file: !898, line: 1644, type: !1027)
!9653 = !DILocation(line: 1644, column: 16, scope: !9650)
!9654 = !DILocalVariable(name: "n", scope: !9650, file: !898, line: 1644, type: !1027)
!9655 = !DILocation(line: 1644, column: 19, scope: !9650)
!9656 = !DILocation(line: 1647, column: 39, scope: !9650)
!9657 = !DILocation(line: 1647, column: 42, scope: !9650)
!9658 = !DILocation(line: 1647, column: 29, scope: !9650)
!9659 = !DILocation(line: 1647, column: 9, scope: !9650)
!9660 = !DILocation(line: 1647, column: 12, scope: !9650)
!9661 = !DILocation(line: 1647, column: 27, scope: !9650)
!9662 = !DILocation(line: 1648, column: 13, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9650, file: !898, line: 1648, column: 13)
!9664 = !DILocation(line: 1648, column: 16, scope: !9663)
!9665 = !DILocation(line: 1648, column: 31, scope: !9663)
!9666 = !DILocation(line: 1648, column: 13, scope: !9650)
!9667 = !DILocation(line: 1649, column: 20, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9663, file: !898, line: 1648, column: 55)
!9669 = !DILocation(line: 1649, column: 23, scope: !9668)
!9670 = !DILocation(line: 1649, column: 13, scope: !9668)
!9671 = !DILocation(line: 1650, column: 13, scope: !9668)
!9672 = !DILocation(line: 1654, column: 37, scope: !9650)
!9673 = !DILocation(line: 1654, column: 40, scope: !9650)
!9674 = !DILocation(line: 1654, column: 13, scope: !9650)
!9675 = !DILocation(line: 1654, column: 11, scope: !9650)
!9676 = !DILocation(line: 1655, column: 29, scope: !9650)
!9677 = !DILocation(line: 1655, column: 32, scope: !9650)
!9678 = !DILocation(line: 1655, column: 13, scope: !9650)
!9679 = !DILocation(line: 1655, column: 48, scope: !9650)
!9680 = !DILocation(line: 1655, column: 51, scope: !9650)
!9681 = !DILocation(line: 1655, column: 47, scope: !9650)
!9682 = !DILocation(line: 1655, column: 46, scope: !9650)
!9683 = !DILocation(line: 1655, column: 44, scope: !9650)
!9684 = !DILocation(line: 1655, column: 11, scope: !9650)
!9685 = !DILocation(line: 1658, column: 16, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9650, file: !898, line: 1658, column: 9)
!9687 = !DILocation(line: 1658, column: 14, scope: !9686)
!9688 = !DILocation(line: 1658, column: 21, scope: !9689)
!9689 = !DILexicalBlockFile(scope: !9690, file: !898, discriminator: 1)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !898, line: 1658, column: 9)
!9691 = !DILocation(line: 1658, column: 25, scope: !9689)
!9692 = !DILocation(line: 1658, column: 29, scope: !9689)
!9693 = !DILocation(line: 1658, column: 27, scope: !9689)
!9694 = !DILocation(line: 1658, column: 23, scope: !9689)
!9695 = !DILocation(line: 1658, column: 9, scope: !9689)
!9696 = !DILocalVariable(name: "code", scope: !9697, file: !898, line: 1659, type: !1027)
!9697 = distinct !DILexicalBlock(scope: !9690, file: !898, line: 1658, column: 37)
!9698 = !DILocation(line: 1659, column: 17, scope: !9697)
!9699 = !DILocation(line: 1659, column: 34, scope: !9697)
!9700 = !DILocation(line: 1659, column: 37, scope: !9697)
!9701 = !DILocation(line: 1659, column: 24, scope: !9697)
!9702 = !DILocalVariable(name: "sign", scope: !9697, file: !898, line: 1660, type: !1027)
!9703 = !DILocation(line: 1660, column: 17, scope: !9697)
!9704 = !DILocation(line: 1660, column: 25, scope: !9697)
!9705 = !DILocation(line: 1660, column: 30, scope: !9697)
!9706 = !DILocation(line: 1660, column: 36, scope: !9697)
!9707 = !DILocalVariable(name: "index", scope: !9697, file: !898, line: 1661, type: !1028)
!9708 = !DILocation(line: 1661, column: 26, scope: !9697)
!9709 = !DILocation(line: 1661, column: 34, scope: !9697)
!9710 = !DILocation(line: 1661, column: 39, scope: !9697)
!9711 = !DILocation(line: 1662, column: 17, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9697, file: !898, line: 1662, column: 17)
!9713 = !DILocation(line: 1662, column: 23, scope: !9712)
!9714 = !DILocation(line: 1662, column: 17, scope: !9697)
!9715 = !DILocation(line: 1663, column: 24, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9712, file: !898, line: 1662, column: 32)
!9717 = !DILocation(line: 1663, column: 27, scope: !9716)
!9718 = !DILocation(line: 1663, column: 17, scope: !9716)
!9719 = !DILocation(line: 1664, column: 17, scope: !9716)
!9720 = !DILocation(line: 1666, column: 55, scope: !9697)
!9721 = !DILocation(line: 1666, column: 38, scope: !9697)
!9722 = !DILocation(line: 1666, column: 64, scope: !9697)
!9723 = !DILocation(line: 1666, column: 62, scope: !9697)
!9724 = !DILocation(line: 1666, column: 72, scope: !9697)
!9725 = !DILocation(line: 1666, column: 70, scope: !9697)
!9726 = !DILocation(line: 1666, column: 32, scope: !9697)
!9727 = !DILocation(line: 1666, column: 13, scope: !9697)
!9728 = !DILocation(line: 1666, column: 16, scope: !9697)
!9729 = !DILocation(line: 1666, column: 35, scope: !9697)
!9730 = !DILocation(line: 1667, column: 9, scope: !9697)
!9731 = !DILocation(line: 1658, column: 33, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !9690, file: !898, discriminator: 2)
!9733 = !DILocation(line: 1658, column: 9, scope: !9732)
!9734 = distinct !{!9734, !9735}
!9735 = !DILocation(line: 1658, column: 9, scope: !9650)
!9736 = !DILocation(line: 1668, column: 5, scope: !9650)
!9737 = !DILocation(line: 1671, column: 16, scope: !9594)
!9738 = !DILocation(line: 1671, column: 19, scope: !9594)
!9739 = !DILocation(line: 1671, column: 40, scope: !9594)
!9740 = !DILocation(line: 1671, column: 43, scope: !9594)
!9741 = !DILocation(line: 1671, column: 24, scope: !9594)
!9742 = !DILocation(line: 1671, column: 23, scope: !9594)
!9743 = !DILocation(line: 1671, column: 47, scope: !9594)
!9744 = !DILocation(line: 1671, column: 5, scope: !9617)
!9745 = !DILocation(line: 1674, column: 16, scope: !9594)
!9746 = !DILocation(line: 1674, column: 19, scope: !9594)
!9747 = !DILocation(line: 1674, column: 5, scope: !9594)
!9748 = !DILocation(line: 1677, column: 26, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9594, file: !898, line: 1677, column: 9)
!9750 = !DILocation(line: 1677, column: 29, scope: !9749)
!9751 = !DILocation(line: 1677, column: 37, scope: !9749)
!9752 = !DILocation(line: 1677, column: 40, scope: !9749)
!9753 = !DILocation(line: 1677, column: 44, scope: !9749)
!9754 = !DILocation(line: 1677, column: 69, scope: !9749)
!9755 = !DILocation(line: 1677, column: 72, scope: !9749)
!9756 = !DILocation(line: 1677, column: 53, scope: !9749)
!9757 = !DILocation(line: 1677, column: 9, scope: !9758)
!9758 = !DILexicalBlockFile(scope: !9749, file: !898, discriminator: 1)
!9759 = !DILocation(line: 1677, column: 9, scope: !9749)
!9760 = !DILocation(line: 1677, column: 9, scope: !9594)
!9761 = !DILocation(line: 1678, column: 16, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9749, file: !898, line: 1677, column: 78)
!9763 = !DILocation(line: 1678, column: 19, scope: !9762)
!9764 = !DILocation(line: 1678, column: 9, scope: !9762)
!9765 = !DILocation(line: 1679, column: 9, scope: !9762)
!9766 = !DILocation(line: 1682, column: 5, scope: !9594)
!9767 = !DILocation(line: 1683, column: 1, scope: !9594)
!9768 = distinct !DISubprogram(name: "parse_xbr_subframe", scope: !898, file: !898, line: 935, type: !9769, isLocal: true, isDefinition: true, scopeLine: 937, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!1027, !1094, !1027, !1027, !1385, !1027, !1027, !1385}
!9771 = !DILocalVariable(name: "s", arg: 1, scope: !9768, file: !898, line: 935, type: !1094)
!9772 = !DILocation(line: 935, column: 47, scope: !9768)
!9773 = !DILocalVariable(name: "xbr_base_ch", arg: 2, scope: !9768, file: !898, line: 935, type: !1027)
!9774 = !DILocation(line: 935, column: 54, scope: !9768)
!9775 = !DILocalVariable(name: "xbr_nchannels", arg: 3, scope: !9768, file: !898, line: 935, type: !1027)
!9776 = !DILocation(line: 935, column: 71, scope: !9768)
!9777 = !DILocalVariable(name: "xbr_nsubbands", arg: 4, scope: !9768, file: !898, line: 936, type: !1385)
!9778 = !DILocation(line: 936, column: 36, scope: !9768)
!9779 = !DILocalVariable(name: "xbr_transition_mode", arg: 5, scope: !9768, file: !898, line: 936, type: !1027)
!9780 = !DILocation(line: 936, column: 55, scope: !9768)
!9781 = !DILocalVariable(name: "sf", arg: 6, scope: !9768, file: !898, line: 936, type: !1027)
!9782 = !DILocation(line: 936, column: 80, scope: !9768)
!9783 = !DILocalVariable(name: "sub_pos", arg: 7, scope: !9768, file: !898, line: 936, type: !1385)
!9784 = !DILocation(line: 936, column: 89, scope: !9768)
!9785 = !DILocalVariable(name: "xbr_nabits", scope: !9768, file: !898, line: 938, type: !9786)
!9786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 224, align: 32, elements: !1075)
!9787 = !DILocation(line: 938, column: 9, scope: !9768)
!9788 = !DILocalVariable(name: "xbr_bit_allocation", scope: !9768, file: !898, line: 939, type: !9789)
!9789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 7168, align: 32, elements: !1920)
!9790 = !DILocation(line: 939, column: 9, scope: !9768)
!9791 = !DILocalVariable(name: "xbr_scale_nbits", scope: !9768, file: !898, line: 940, type: !9786)
!9792 = !DILocation(line: 940, column: 9, scope: !9768)
!9793 = !DILocalVariable(name: "xbr_scale_factors", scope: !9768, file: !898, line: 941, type: !1879)
!9794 = !DILocation(line: 941, column: 13, scope: !9768)
!9795 = !DILocalVariable(name: "ssf", scope: !9768, file: !898, line: 942, type: !1027)
!9796 = !DILocation(line: 942, column: 9, scope: !9768)
!9797 = !DILocalVariable(name: "ch", scope: !9768, file: !898, line: 942, type: !1027)
!9798 = !DILocation(line: 942, column: 14, scope: !9768)
!9799 = !DILocalVariable(name: "band", scope: !9768, file: !898, line: 942, type: !1027)
!9800 = !DILocation(line: 942, column: 18, scope: !9768)
!9801 = !DILocalVariable(name: "ofs", scope: !9768, file: !898, line: 942, type: !1027)
!9802 = !DILocation(line: 942, column: 24, scope: !9768)
!9803 = !DILocation(line: 945, column: 10, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 945, column: 9)
!9805 = !DILocation(line: 945, column: 9, scope: !9804)
!9806 = !DILocation(line: 945, column: 37, scope: !9804)
!9807 = !DILocation(line: 945, column: 20, scope: !9804)
!9808 = !DILocation(line: 945, column: 23, scope: !9804)
!9809 = !DILocation(line: 945, column: 41, scope: !9804)
!9810 = !DILocation(line: 945, column: 18, scope: !9804)
!9811 = !DILocation(line: 945, column: 47, scope: !9804)
!9812 = !DILocation(line: 945, column: 50, scope: !9804)
!9813 = !DILocation(line: 945, column: 45, scope: !9804)
!9814 = !DILocation(line: 945, column: 9, scope: !9768)
!9815 = !DILocation(line: 946, column: 16, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9804, file: !898, line: 945, column: 62)
!9817 = !DILocation(line: 946, column: 19, scope: !9816)
!9818 = !DILocation(line: 946, column: 9, scope: !9816)
!9819 = !DILocation(line: 947, column: 9, scope: !9816)
!9820 = !DILocation(line: 950, column: 24, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 950, column: 9)
!9822 = !DILocation(line: 950, column: 27, scope: !9821)
!9823 = !DILocation(line: 950, column: 9, scope: !9821)
!9824 = !DILocation(line: 950, column: 31, scope: !9821)
!9825 = !DILocation(line: 950, column: 9, scope: !9768)
!9826 = !DILocation(line: 951, column: 9, scope: !9821)
!9827 = !DILocation(line: 954, column: 15, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 954, column: 5)
!9829 = !DILocation(line: 954, column: 13, scope: !9828)
!9830 = !DILocation(line: 954, column: 10, scope: !9828)
!9831 = !DILocation(line: 954, column: 28, scope: !9832)
!9832 = !DILexicalBlockFile(scope: !9833, file: !898, discriminator: 1)
!9833 = distinct !DILexicalBlock(scope: !9828, file: !898, line: 954, column: 5)
!9834 = !DILocation(line: 954, column: 33, scope: !9832)
!9835 = !DILocation(line: 954, column: 31, scope: !9832)
!9836 = !DILocation(line: 954, column: 5, scope: !9832)
!9837 = !DILocation(line: 955, column: 36, scope: !9833)
!9838 = !DILocation(line: 955, column: 39, scope: !9833)
!9839 = !DILocation(line: 955, column: 26, scope: !9833)
!9840 = !DILocation(line: 955, column: 46, scope: !9833)
!9841 = !DILocation(line: 955, column: 20, scope: !9833)
!9842 = !DILocation(line: 955, column: 9, scope: !9833)
!9843 = !DILocation(line: 955, column: 24, scope: !9833)
!9844 = !DILocation(line: 954, column: 50, scope: !9845)
!9845 = !DILexicalBlockFile(scope: !9833, file: !898, discriminator: 2)
!9846 = !DILocation(line: 954, column: 5, scope: !9845)
!9847 = distinct !{!9847, !9848}
!9848 = !DILocation(line: 954, column: 5, scope: !9768)
!9849 = !DILocation(line: 958, column: 15, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 958, column: 5)
!9851 = !DILocation(line: 958, column: 13, scope: !9850)
!9852 = !DILocation(line: 958, column: 10, scope: !9850)
!9853 = !DILocation(line: 958, column: 28, scope: !9854)
!9854 = !DILexicalBlockFile(scope: !9855, file: !898, discriminator: 1)
!9855 = distinct !DILexicalBlock(scope: !9850, file: !898, line: 958, column: 5)
!9856 = !DILocation(line: 958, column: 33, scope: !9854)
!9857 = !DILocation(line: 958, column: 31, scope: !9854)
!9858 = !DILocation(line: 958, column: 5, scope: !9854)
!9859 = !DILocation(line: 959, column: 19, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !898, line: 959, column: 9)
!9861 = distinct !DILexicalBlock(scope: !9855, file: !898, line: 958, column: 54)
!9862 = !DILocation(line: 959, column: 14, scope: !9860)
!9863 = !DILocation(line: 959, column: 24, scope: !9864)
!9864 = !DILexicalBlockFile(scope: !9865, file: !898, discriminator: 1)
!9865 = distinct !DILexicalBlock(scope: !9860, file: !898, line: 959, column: 9)
!9866 = !DILocation(line: 959, column: 45, scope: !9864)
!9867 = !DILocation(line: 959, column: 31, scope: !9864)
!9868 = !DILocation(line: 959, column: 29, scope: !9864)
!9869 = !DILocation(line: 959, column: 9, scope: !9864)
!9870 = !DILocation(line: 960, column: 54, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9865, file: !898, line: 959, column: 58)
!9872 = !DILocation(line: 960, column: 57, scope: !9871)
!9873 = !DILocation(line: 960, column: 72, scope: !9871)
!9874 = !DILocation(line: 960, column: 61, scope: !9871)
!9875 = !DILocation(line: 960, column: 44, scope: !9871)
!9876 = !DILocation(line: 960, column: 36, scope: !9871)
!9877 = !DILocation(line: 960, column: 13, scope: !9871)
!9878 = !DILocation(line: 960, column: 32, scope: !9871)
!9879 = !DILocation(line: 960, column: 42, scope: !9871)
!9880 = !DILocation(line: 961, column: 40, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9871, file: !898, line: 961, column: 17)
!9882 = !DILocation(line: 961, column: 17, scope: !9881)
!9883 = !DILocation(line: 961, column: 36, scope: !9881)
!9884 = !DILocation(line: 961, column: 46, scope: !9881)
!9885 = !DILocation(line: 961, column: 17, scope: !9871)
!9886 = !DILocation(line: 962, column: 24, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9881, file: !898, line: 961, column: 52)
!9888 = !DILocation(line: 962, column: 27, scope: !9887)
!9889 = !DILocation(line: 962, column: 17, scope: !9887)
!9890 = !DILocation(line: 963, column: 17, scope: !9887)
!9891 = !DILocation(line: 965, column: 9, scope: !9871)
!9892 = !DILocation(line: 959, column: 54, scope: !9893)
!9893 = !DILexicalBlockFile(scope: !9865, file: !898, discriminator: 2)
!9894 = !DILocation(line: 959, column: 9, scope: !9893)
!9895 = distinct !{!9895, !9896}
!9896 = !DILocation(line: 959, column: 9, scope: !9861)
!9897 = !DILocation(line: 966, column: 5, scope: !9861)
!9898 = !DILocation(line: 958, column: 50, scope: !9899)
!9899 = !DILexicalBlockFile(scope: !9855, file: !898, discriminator: 2)
!9900 = !DILocation(line: 958, column: 5, scope: !9899)
!9901 = distinct !{!9901, !9902}
!9902 = !DILocation(line: 958, column: 5, scope: !9768)
!9903 = !DILocation(line: 969, column: 15, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 969, column: 5)
!9905 = !DILocation(line: 969, column: 13, scope: !9904)
!9906 = !DILocation(line: 969, column: 10, scope: !9904)
!9907 = !DILocation(line: 969, column: 28, scope: !9908)
!9908 = !DILexicalBlockFile(scope: !9909, file: !898, discriminator: 1)
!9909 = distinct !DILexicalBlock(scope: !9904, file: !898, line: 969, column: 5)
!9910 = !DILocation(line: 969, column: 33, scope: !9908)
!9911 = !DILocation(line: 969, column: 31, scope: !9908)
!9912 = !DILocation(line: 969, column: 5, scope: !9908)
!9913 = !DILocation(line: 970, column: 41, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9909, file: !898, line: 969, column: 54)
!9915 = !DILocation(line: 970, column: 44, scope: !9914)
!9916 = !DILocation(line: 970, column: 31, scope: !9914)
!9917 = !DILocation(line: 970, column: 25, scope: !9914)
!9918 = !DILocation(line: 970, column: 9, scope: !9914)
!9919 = !DILocation(line: 970, column: 29, scope: !9914)
!9920 = !DILocation(line: 971, column: 30, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9914, file: !898, line: 971, column: 13)
!9922 = !DILocation(line: 971, column: 14, scope: !9921)
!9923 = !DILocation(line: 971, column: 13, scope: !9914)
!9924 = !DILocation(line: 972, column: 20, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9921, file: !898, line: 971, column: 35)
!9926 = !DILocation(line: 972, column: 23, scope: !9925)
!9927 = !DILocation(line: 972, column: 13, scope: !9925)
!9928 = !DILocation(line: 973, column: 13, scope: !9925)
!9929 = !DILocation(line: 975, column: 5, scope: !9914)
!9930 = !DILocation(line: 969, column: 50, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !9909, file: !898, discriminator: 2)
!9932 = !DILocation(line: 969, column: 5, scope: !9931)
!9933 = distinct !{!9933, !9934}
!9934 = !DILocation(line: 969, column: 5, scope: !9768)
!9935 = !DILocation(line: 978, column: 15, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 978, column: 5)
!9937 = !DILocation(line: 978, column: 13, scope: !9936)
!9938 = !DILocation(line: 978, column: 10, scope: !9936)
!9939 = !DILocation(line: 978, column: 28, scope: !9940)
!9940 = !DILexicalBlockFile(scope: !9941, file: !898, discriminator: 1)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !898, line: 978, column: 5)
!9942 = !DILocation(line: 978, column: 33, scope: !9940)
!9943 = !DILocation(line: 978, column: 31, scope: !9940)
!9944 = !DILocation(line: 978, column: 5, scope: !9940)
!9945 = !DILocalVariable(name: "scale_table", scope: !9946, file: !898, line: 979, type: !8820)
!9946 = distinct !DILexicalBlock(scope: !9941, file: !898, line: 978, column: 54)
!9947 = !DILocation(line: 979, column: 25, scope: !9946)
!9948 = !DILocalVariable(name: "scale_size", scope: !9946, file: !898, line: 980, type: !1027)
!9949 = !DILocation(line: 980, column: 13, scope: !9946)
!9950 = !DILocation(line: 983, column: 33, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9946, file: !898, line: 983, column: 13)
!9952 = !DILocation(line: 983, column: 13, scope: !9951)
!9953 = !DILocation(line: 983, column: 16, scope: !9951)
!9954 = !DILocation(line: 983, column: 37, scope: !9951)
!9955 = !DILocation(line: 983, column: 13, scope: !9946)
!9956 = !DILocation(line: 984, column: 25, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9951, file: !898, line: 983, column: 42)
!9958 = !DILocation(line: 985, column: 24, scope: !9957)
!9959 = !DILocation(line: 986, column: 9, scope: !9957)
!9960 = !DILocation(line: 987, column: 25, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9951, file: !898, line: 986, column: 16)
!9962 = !DILocation(line: 988, column: 24, scope: !9961)
!9963 = !DILocation(line: 993, column: 19, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9946, file: !898, line: 993, column: 9)
!9965 = !DILocation(line: 993, column: 14, scope: !9964)
!9966 = !DILocation(line: 993, column: 24, scope: !9967)
!9967 = !DILexicalBlockFile(scope: !9968, file: !898, discriminator: 1)
!9968 = distinct !DILexicalBlock(scope: !9964, file: !898, line: 993, column: 9)
!9969 = !DILocation(line: 993, column: 45, scope: !9967)
!9970 = !DILocation(line: 993, column: 31, scope: !9967)
!9971 = !DILocation(line: 993, column: 29, scope: !9967)
!9972 = !DILocation(line: 993, column: 9, scope: !9967)
!9973 = !DILocation(line: 994, column: 40, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !898, line: 994, column: 17)
!9975 = distinct !DILexicalBlock(scope: !9968, file: !898, line: 993, column: 58)
!9976 = !DILocation(line: 994, column: 17, scope: !9974)
!9977 = !DILocation(line: 994, column: 36, scope: !9974)
!9978 = !DILocation(line: 994, column: 17, scope: !9975)
!9979 = !DILocalVariable(name: "scale_index", scope: !9980, file: !898, line: 995, type: !1027)
!9980 = distinct !DILexicalBlock(scope: !9974, file: !898, line: 994, column: 47)
!9981 = !DILocation(line: 995, column: 21, scope: !9980)
!9982 = !DILocation(line: 995, column: 45, scope: !9980)
!9983 = !DILocation(line: 995, column: 48, scope: !9980)
!9984 = !DILocation(line: 995, column: 68, scope: !9980)
!9985 = !DILocation(line: 995, column: 52, scope: !9980)
!9986 = !DILocation(line: 995, column: 35, scope: !9980)
!9987 = !DILocation(line: 996, column: 21, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9980, file: !898, line: 996, column: 21)
!9989 = !DILocation(line: 996, column: 36, scope: !9988)
!9990 = !DILocation(line: 996, column: 33, scope: !9988)
!9991 = !DILocation(line: 996, column: 21, scope: !9980)
!9992 = !DILocation(line: 997, column: 28, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9988, file: !898, line: 996, column: 48)
!9994 = !DILocation(line: 997, column: 31, scope: !9993)
!9995 = !DILocation(line: 997, column: 21, scope: !9993)
!9996 = !DILocation(line: 998, column: 21, scope: !9993)
!9997 = !DILocation(line: 1000, column: 62, scope: !9980)
!9998 = !DILocation(line: 1000, column: 50, scope: !9980)
!9999 = !DILocation(line: 1000, column: 39, scope: !9980)
!10000 = !DILocation(line: 1000, column: 17, scope: !9980)
!10001 = !DILocation(line: 1000, column: 35, scope: !9980)
!10002 = !DILocation(line: 1000, column: 48, scope: !9980)
!10003 = !DILocation(line: 1001, column: 21, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9980, file: !898, line: 1001, column: 21)
!10005 = !DILocation(line: 1001, column: 41, scope: !10004)
!10006 = !DILocation(line: 1001, column: 71, scope: !10007)
!10007 = !DILexicalBlockFile(scope: !10004, file: !898, discriminator: 1)
!10008 = !DILocation(line: 1001, column: 44, scope: !10007)
!10009 = !DILocation(line: 1001, column: 67, scope: !10007)
!10010 = !DILocation(line: 1001, column: 63, scope: !10007)
!10011 = !DILocation(line: 1001, column: 47, scope: !10007)
!10012 = !DILocation(line: 1001, column: 21, scope: !10007)
!10013 = !DILocation(line: 1002, column: 45, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10004, file: !898, line: 1001, column: 78)
!10015 = !DILocation(line: 1002, column: 48, scope: !10014)
!10016 = !DILocation(line: 1002, column: 68, scope: !10014)
!10017 = !DILocation(line: 1002, column: 52, scope: !10014)
!10018 = !DILocation(line: 1002, column: 35, scope: !10014)
!10019 = !DILocation(line: 1002, column: 33, scope: !10014)
!10020 = !DILocation(line: 1003, column: 25, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10014, file: !898, line: 1003, column: 25)
!10022 = !DILocation(line: 1003, column: 40, scope: !10021)
!10023 = !DILocation(line: 1003, column: 37, scope: !10021)
!10024 = !DILocation(line: 1003, column: 25, scope: !10014)
!10025 = !DILocation(line: 1004, column: 32, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10021, file: !898, line: 1003, column: 52)
!10027 = !DILocation(line: 1004, column: 35, scope: !10026)
!10028 = !DILocation(line: 1004, column: 25, scope: !10026)
!10029 = !DILocation(line: 1005, column: 25, scope: !10026)
!10030 = !DILocation(line: 1007, column: 66, scope: !10014)
!10031 = !DILocation(line: 1007, column: 54, scope: !10014)
!10032 = !DILocation(line: 1007, column: 43, scope: !10014)
!10033 = !DILocation(line: 1007, column: 21, scope: !10014)
!10034 = !DILocation(line: 1007, column: 39, scope: !10014)
!10035 = !DILocation(line: 1007, column: 52, scope: !10014)
!10036 = !DILocation(line: 1008, column: 17, scope: !10014)
!10037 = !DILocation(line: 1009, column: 13, scope: !9980)
!10038 = !DILocation(line: 1010, column: 9, scope: !9975)
!10039 = !DILocation(line: 993, column: 54, scope: !10040)
!10040 = !DILexicalBlockFile(scope: !9968, file: !898, discriminator: 2)
!10041 = !DILocation(line: 993, column: 9, scope: !10040)
!10042 = distinct !{!10042, !10043}
!10043 = !DILocation(line: 993, column: 9, scope: !9946)
!10044 = !DILocation(line: 1011, column: 5, scope: !9946)
!10045 = !DILocation(line: 978, column: 50, scope: !10046)
!10046 = !DILexicalBlockFile(scope: !9941, file: !898, discriminator: 2)
!10047 = !DILocation(line: 978, column: 5, scope: !10046)
!10048 = distinct !{!10048, !10049}
!10049 = !DILocation(line: 978, column: 5, scope: !9768)
!10050 = !DILocation(line: 1014, column: 14, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !9768, file: !898, line: 1014, column: 5)
!10052 = !DILocation(line: 1014, column: 26, scope: !10051)
!10053 = !DILocation(line: 1014, column: 25, scope: !10051)
!10054 = !DILocation(line: 1014, column: 23, scope: !10051)
!10055 = !DILocation(line: 1014, column: 10, scope: !10051)
!10056 = !DILocation(line: 1014, column: 35, scope: !10057)
!10057 = !DILexicalBlockFile(scope: !10058, file: !898, discriminator: 1)
!10058 = distinct !DILexicalBlock(scope: !10051, file: !898, line: 1014, column: 5)
!10059 = !DILocation(line: 1014, column: 58, scope: !10057)
!10060 = !DILocation(line: 1014, column: 41, scope: !10057)
!10061 = !DILocation(line: 1014, column: 44, scope: !10057)
!10062 = !DILocation(line: 1014, column: 39, scope: !10057)
!10063 = !DILocation(line: 1014, column: 5, scope: !10057)
!10064 = !DILocation(line: 1015, column: 19, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !898, line: 1015, column: 9)
!10066 = distinct !DILexicalBlock(scope: !10058, file: !898, line: 1014, column: 70)
!10067 = !DILocation(line: 1015, column: 17, scope: !10065)
!10068 = !DILocation(line: 1015, column: 14, scope: !10065)
!10069 = !DILocation(line: 1015, column: 32, scope: !10070)
!10070 = !DILexicalBlockFile(scope: !10071, file: !898, discriminator: 1)
!10071 = distinct !DILexicalBlock(scope: !10065, file: !898, line: 1015, column: 9)
!10072 = !DILocation(line: 1015, column: 37, scope: !10070)
!10073 = !DILocation(line: 1015, column: 35, scope: !10070)
!10074 = !DILocation(line: 1015, column: 9, scope: !10070)
!10075 = !DILocation(line: 1016, column: 32, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !898, line: 1016, column: 17)
!10077 = distinct !DILexicalBlock(scope: !10071, file: !898, line: 1015, column: 58)
!10078 = !DILocation(line: 1016, column: 35, scope: !10076)
!10079 = !DILocation(line: 1016, column: 17, scope: !10076)
!10080 = !DILocation(line: 1016, column: 39, scope: !10076)
!10081 = !DILocation(line: 1016, column: 17, scope: !10077)
!10082 = !DILocation(line: 1017, column: 17, scope: !10076)
!10083 = !DILocation(line: 1019, column: 23, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10077, file: !898, line: 1019, column: 13)
!10085 = !DILocation(line: 1019, column: 18, scope: !10084)
!10086 = !DILocation(line: 1019, column: 28, scope: !10087)
!10087 = !DILexicalBlockFile(scope: !10088, file: !898, discriminator: 1)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !898, line: 1019, column: 13)
!10089 = !DILocation(line: 1019, column: 49, scope: !10087)
!10090 = !DILocation(line: 1019, column: 35, scope: !10087)
!10091 = !DILocation(line: 1019, column: 33, scope: !10087)
!10092 = !DILocation(line: 1019, column: 13, scope: !10087)
!10093 = !DILocalVariable(name: "ret", scope: !10094, file: !898, line: 1020, type: !1027)
!10094 = distinct !DILexicalBlock(scope: !10088, file: !898, line: 1019, column: 62)
!10095 = !DILocation(line: 1020, column: 21, scope: !10094)
!10096 = !DILocalVariable(name: "trans_ssf", scope: !10094, file: !898, line: 1020, type: !1027)
!10097 = !DILocation(line: 1020, column: 26, scope: !10094)
!10098 = !DILocalVariable(name: "abits", scope: !10094, file: !898, line: 1020, type: !1027)
!10099 = !DILocation(line: 1020, column: 37, scope: !10094)
!10100 = !DILocation(line: 1020, column: 68, scope: !10094)
!10101 = !DILocation(line: 1020, column: 45, scope: !10094)
!10102 = !DILocation(line: 1020, column: 64, scope: !10094)
!10103 = !DILocalVariable(name: "audio", scope: !10094, file: !898, line: 1021, type: !10104)
!10104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 256, align: 32, elements: !1251)
!10105 = !DILocation(line: 1021, column: 25, scope: !10094)
!10106 = !DILocalVariable(name: "step_size", scope: !10094, file: !898, line: 1021, type: !1030)
!10107 = !DILocation(line: 1021, column: 35, scope: !10094)
!10108 = !DILocalVariable(name: "scale", scope: !10094, file: !898, line: 1021, type: !1030)
!10109 = !DILocation(line: 1021, column: 46, scope: !10094)
!10110 = !DILocation(line: 1024, column: 21, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10094, file: !898, line: 1024, column: 21)
!10112 = !DILocation(line: 1024, column: 27, scope: !10111)
!10113 = !DILocation(line: 1024, column: 21, scope: !10094)
!10114 = !DILocation(line: 1026, column: 32, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10111, file: !898, line: 1024, column: 32)
!10116 = !DILocation(line: 1026, column: 35, scope: !10115)
!10117 = !DILocation(line: 1026, column: 39, scope: !10115)
!10118 = !DILocation(line: 1026, column: 49, scope: !10115)
!10119 = !DILocation(line: 1026, column: 55, scope: !10115)
!10120 = !DILocation(line: 1026, column: 21, scope: !10115)
!10121 = !DILocation(line: 1027, column: 17, scope: !10115)
!10122 = !DILocation(line: 1027, column: 28, scope: !10123)
!10123 = !DILexicalBlockFile(scope: !10124, file: !898, discriminator: 1)
!10124 = distinct !DILexicalBlock(scope: !10111, file: !898, line: 1027, column: 28)
!10125 = !DILocation(line: 1027, column: 34, scope: !10123)
!10126 = !DILocation(line: 1029, column: 50, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !898, line: 1029, column: 25)
!10128 = distinct !DILexicalBlock(scope: !10124, file: !898, line: 1027, column: 39)
!10129 = !DILocation(line: 1029, column: 53, scope: !10127)
!10130 = !DILocation(line: 1029, column: 60, scope: !10127)
!10131 = !DILocation(line: 1029, column: 32, scope: !10127)
!10132 = !DILocation(line: 1029, column: 30, scope: !10127)
!10133 = !DILocation(line: 1029, column: 68, scope: !10127)
!10134 = !DILocation(line: 1029, column: 25, scope: !10128)
!10135 = !DILocation(line: 1030, column: 32, scope: !10127)
!10136 = !DILocation(line: 1030, column: 25, scope: !10127)
!10137 = !DILocation(line: 1031, column: 17, scope: !10128)
!10138 = !DILocation(line: 1033, column: 21, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10124, file: !898, line: 1031, column: 24)
!10140 = !DILocation(line: 1037, column: 51, scope: !10094)
!10141 = !DILocation(line: 1037, column: 29, scope: !10094)
!10142 = !DILocation(line: 1037, column: 27, scope: !10094)
!10143 = !DILocation(line: 1040, column: 21, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10094, file: !898, line: 1040, column: 21)
!10145 = !DILocation(line: 1040, column: 21, scope: !10094)
!10146 = !DILocation(line: 1041, column: 60, scope: !10144)
!10147 = !DILocation(line: 1041, column: 33, scope: !10144)
!10148 = !DILocation(line: 1041, column: 56, scope: !10144)
!10149 = !DILocation(line: 1041, column: 52, scope: !10144)
!10150 = !DILocation(line: 1041, column: 36, scope: !10144)
!10151 = !DILocation(line: 1041, column: 31, scope: !10144)
!10152 = !DILocation(line: 1041, column: 21, scope: !10144)
!10153 = !DILocation(line: 1043, column: 31, scope: !10144)
!10154 = !DILocation(line: 1046, column: 21, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10094, file: !898, line: 1046, column: 21)
!10156 = !DILocation(line: 1046, column: 31, scope: !10155)
!10157 = !DILocation(line: 1046, column: 36, scope: !10155)
!10158 = !DILocation(line: 1046, column: 39, scope: !10159)
!10159 = !DILexicalBlockFile(scope: !10155, file: !898, discriminator: 1)
!10160 = !DILocation(line: 1046, column: 45, scope: !10159)
!10161 = !DILocation(line: 1046, column: 43, scope: !10159)
!10162 = !DILocation(line: 1046, column: 21, scope: !10159)
!10163 = !DILocation(line: 1047, column: 51, scope: !10155)
!10164 = !DILocation(line: 1047, column: 29, scope: !10155)
!10165 = !DILocation(line: 1047, column: 47, scope: !10155)
!10166 = !DILocation(line: 1047, column: 27, scope: !10155)
!10167 = !DILocation(line: 1047, column: 21, scope: !10155)
!10168 = !DILocation(line: 1049, column: 51, scope: !10155)
!10169 = !DILocation(line: 1049, column: 29, scope: !10155)
!10170 = !DILocation(line: 1049, column: 47, scope: !10155)
!10171 = !DILocation(line: 1049, column: 27, scope: !10155)
!10172 = !DILocation(line: 1051, column: 63, scope: !10094)
!10173 = !DILocation(line: 1051, column: 40, scope: !10094)
!10174 = !DILocation(line: 1051, column: 59, scope: !10094)
!10175 = !DILocation(line: 1051, column: 43, scope: !10094)
!10176 = !DILocation(line: 1051, column: 71, scope: !10094)
!10177 = !DILocation(line: 1051, column: 69, scope: !10094)
!10178 = !DILocation(line: 1052, column: 28, scope: !10094)
!10179 = !DILocation(line: 1052, column: 35, scope: !10094)
!10180 = !DILocation(line: 1052, column: 46, scope: !10094)
!10181 = !DILocation(line: 1051, column: 17, scope: !10094)
!10182 = !DILocation(line: 1053, column: 13, scope: !10094)
!10183 = !DILocation(line: 1019, column: 58, scope: !10184)
!10184 = !DILexicalBlockFile(scope: !10088, file: !898, discriminator: 2)
!10185 = !DILocation(line: 1019, column: 13, scope: !10184)
!10186 = distinct !{!10186, !10187}
!10187 = !DILocation(line: 1019, column: 13, scope: !10077)
!10188 = !DILocation(line: 1054, column: 9, scope: !10077)
!10189 = !DILocation(line: 1015, column: 54, scope: !10190)
!10190 = !DILexicalBlockFile(scope: !10071, file: !898, discriminator: 2)
!10191 = !DILocation(line: 1015, column: 9, scope: !10190)
!10192 = distinct !{!10192, !10193}
!10193 = !DILocation(line: 1015, column: 9, scope: !10066)
!10194 = !DILocation(line: 1057, column: 14, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10066, file: !898, line: 1057, column: 13)
!10196 = !DILocation(line: 1057, column: 38, scope: !10195)
!10197 = !DILocation(line: 1057, column: 21, scope: !10195)
!10198 = !DILocation(line: 1057, column: 24, scope: !10195)
!10199 = !DILocation(line: 1057, column: 42, scope: !10195)
!10200 = !DILocation(line: 1057, column: 18, scope: !10195)
!10201 = !DILocation(line: 1057, column: 46, scope: !10195)
!10202 = !DILocation(line: 1057, column: 49, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !10195, file: !898, discriminator: 1)
!10204 = !DILocation(line: 1057, column: 52, scope: !10203)
!10205 = !DILocation(line: 1057, column: 62, scope: !10203)
!10206 = !DILocation(line: 1057, column: 75, scope: !10207)
!10207 = !DILexicalBlockFile(scope: !10195, file: !898, discriminator: 2)
!10208 = !DILocation(line: 1057, column: 78, scope: !10207)
!10209 = !DILocation(line: 1057, column: 65, scope: !10207)
!10210 = !DILocation(line: 1057, column: 86, scope: !10207)
!10211 = !DILocation(line: 1057, column: 13, scope: !10207)
!10212 = !DILocation(line: 1058, column: 20, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10195, file: !898, line: 1057, column: 97)
!10214 = !DILocation(line: 1058, column: 23, scope: !10213)
!10215 = !DILocation(line: 1058, column: 13, scope: !10213)
!10216 = !DILocation(line: 1059, column: 13, scope: !10213)
!10217 = !DILocation(line: 1062, column: 13, scope: !10066)
!10218 = !DILocation(line: 1063, column: 5, scope: !10066)
!10219 = !DILocation(line: 1014, column: 66, scope: !10220)
!10220 = !DILexicalBlockFile(scope: !10058, file: !898, discriminator: 2)
!10221 = !DILocation(line: 1014, column: 5, scope: !10220)
!10222 = distinct !{!10222, !10223}
!10223 = !DILocation(line: 1014, column: 5, scope: !9768)
!10224 = !DILocation(line: 1066, column: 16, scope: !9768)
!10225 = !DILocation(line: 1066, column: 6, scope: !9768)
!10226 = !DILocation(line: 1066, column: 14, scope: !9768)
!10227 = !DILocation(line: 1067, column: 5, scope: !9768)
!10228 = !DILocation(line: 1068, column: 1, scope: !9768)
!10229 = distinct !DISubprogram(name: "alloc_x96_sample_buffer", scope: !898, file: !898, line: 1280, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1281, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!10230 = !DILocalVariable(name: "s", arg: 1, scope: !10229, file: !898, line: 1280, type: !1094)
!10231 = !DILocation(line: 1280, column: 52, scope: !10229)
!10232 = !DILocalVariable(name: "nchsamples", scope: !10229, file: !898, line: 1282, type: !1027)
!10233 = !DILocation(line: 1282, column: 9, scope: !10229)
!10234 = !DILocation(line: 1282, column: 26, scope: !10229)
!10235 = !DILocation(line: 1282, column: 29, scope: !10229)
!10236 = !DILocation(line: 1282, column: 24, scope: !10229)
!10237 = !DILocalVariable(name: "nframesamples", scope: !10229, file: !898, line: 1283, type: !1027)
!10238 = !DILocation(line: 1283, column: 9, scope: !10229)
!10239 = !DILocation(line: 1283, column: 25, scope: !10229)
!10240 = !DILocation(line: 1283, column: 36, scope: !10229)
!10241 = !DILocation(line: 1283, column: 40, scope: !10229)
!10242 = !DILocalVariable(name: "size", scope: !10229, file: !898, line: 1284, type: !1028)
!10243 = !DILocation(line: 1284, column: 18, scope: !10229)
!10244 = !DILocation(line: 1284, column: 25, scope: !10229)
!10245 = !DILocation(line: 1284, column: 28, scope: !10229)
!10246 = !DILocalVariable(name: "ch", scope: !10229, file: !898, line: 1285, type: !1027)
!10247 = !DILocation(line: 1285, column: 9, scope: !10229)
!10248 = !DILocalVariable(name: "band", scope: !10229, file: !898, line: 1285, type: !1027)
!10249 = !DILocation(line: 1285, column: 13, scope: !10229)
!10250 = !DILocation(line: 1288, column: 22, scope: !10229)
!10251 = !DILocation(line: 1288, column: 25, scope: !10229)
!10252 = !DILocation(line: 1288, column: 21, scope: !10229)
!10253 = !DILocation(line: 1288, column: 46, scope: !10229)
!10254 = !DILocation(line: 1288, column: 49, scope: !10229)
!10255 = !DILocation(line: 1289, column: 21, scope: !10229)
!10256 = !DILocation(line: 1289, column: 35, scope: !10229)
!10257 = !DILocation(line: 1288, column: 5, scope: !10229)
!10258 = !DILocation(line: 1290, column: 10, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10229, file: !898, line: 1290, column: 9)
!10260 = !DILocation(line: 1290, column: 13, scope: !10259)
!10261 = !DILocation(line: 1290, column: 9, scope: !10229)
!10262 = !DILocation(line: 1291, column: 9, scope: !10259)
!10263 = !DILocation(line: 1293, column: 9, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10229, file: !898, line: 1293, column: 9)
!10265 = !DILocation(line: 1293, column: 17, scope: !10264)
!10266 = !DILocation(line: 1293, column: 20, scope: !10264)
!10267 = !DILocation(line: 1293, column: 14, scope: !10264)
!10268 = !DILocation(line: 1293, column: 9, scope: !10229)
!10269 = !DILocation(line: 1294, column: 17, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !898, line: 1294, column: 9)
!10271 = distinct !DILexicalBlock(scope: !10264, file: !898, line: 1293, column: 38)
!10272 = !DILocation(line: 1294, column: 14, scope: !10270)
!10273 = !DILocation(line: 1294, column: 22, scope: !10274)
!10274 = !DILexicalBlockFile(scope: !10275, file: !898, discriminator: 1)
!10275 = distinct !DILexicalBlock(scope: !10270, file: !898, line: 1294, column: 9)
!10276 = !DILocation(line: 1294, column: 25, scope: !10274)
!10277 = !DILocation(line: 1294, column: 9, scope: !10274)
!10278 = !DILocation(line: 1295, column: 23, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10275, file: !898, line: 1295, column: 13)
!10280 = !DILocation(line: 1295, column: 18, scope: !10279)
!10281 = !DILocation(line: 1295, column: 28, scope: !10282)
!10282 = !DILexicalBlockFile(scope: !10283, file: !898, discriminator: 1)
!10283 = distinct !DILexicalBlock(scope: !10279, file: !898, line: 1295, column: 13)
!10284 = !DILocation(line: 1295, column: 33, scope: !10282)
!10285 = !DILocation(line: 1295, column: 13, scope: !10282)
!10286 = !DILocation(line: 1296, column: 52, scope: !10283)
!10287 = !DILocation(line: 1296, column: 55, scope: !10283)
!10288 = !DILocation(line: 1297, column: 22, scope: !10283)
!10289 = !DILocation(line: 1297, column: 25, scope: !10283)
!10290 = !DILocation(line: 1297, column: 32, scope: !10283)
!10291 = !DILocation(line: 1297, column: 30, scope: !10283)
!10292 = !DILocation(line: 1297, column: 40, scope: !10283)
!10293 = !DILocation(line: 1297, column: 38, scope: !10283)
!10294 = !DILocation(line: 1296, column: 74, scope: !10283)
!10295 = !DILocation(line: 1297, column: 51, scope: !10283)
!10296 = !DILocation(line: 1296, column: 44, scope: !10283)
!10297 = !DILocation(line: 1296, column: 17, scope: !10283)
!10298 = !DILocation(line: 1296, column: 40, scope: !10283)
!10299 = !DILocation(line: 1296, column: 20, scope: !10283)
!10300 = !DILocation(line: 1296, column: 50, scope: !10283)
!10301 = !DILocation(line: 1295, column: 43, scope: !10302)
!10302 = !DILexicalBlockFile(scope: !10283, file: !898, discriminator: 2)
!10303 = !DILocation(line: 1295, column: 13, scope: !10302)
!10304 = distinct !{!10304, !10305}
!10305 = !DILocation(line: 1295, column: 13, scope: !10275)
!10306 = !DILocation(line: 1297, column: 53, scope: !10307)
!10307 = !DILexicalBlockFile(scope: !10279, file: !898, discriminator: 1)
!10308 = !DILocation(line: 1294, column: 32, scope: !10309)
!10309 = !DILexicalBlockFile(scope: !10275, file: !898, discriminator: 2)
!10310 = !DILocation(line: 1294, column: 9, scope: !10309)
!10311 = distinct !{!10311, !10312}
!10312 = !DILocation(line: 1294, column: 9, scope: !10271)
!10313 = !DILocation(line: 1298, column: 5, scope: !10271)
!10314 = !DILocation(line: 1300, column: 10, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10229, file: !898, line: 1300, column: 9)
!10316 = !DILocation(line: 1300, column: 13, scope: !10315)
!10317 = !DILocation(line: 1300, column: 9, scope: !10229)
!10318 = !DILocation(line: 1301, column: 33, scope: !10315)
!10319 = !DILocation(line: 1301, column: 9, scope: !10315)
!10320 = !DILocation(line: 1303, column: 5, scope: !10229)
!10321 = !DILocation(line: 1304, column: 1, scope: !10229)
!10322 = distinct !DISubprogram(name: "parse_x96_frame_data", scope: !898, file: !898, line: 1477, type: !10323, isLocal: true, isDefinition: true, scopeLine: 1478, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!10323 = !DISubroutineType(types: !10324)
!10324 = !{!1027, !1094, !1027, !1027}
!10325 = !DILocation(line: 67, column: 68, scope: !1048, inlinedAt: !10326)
!10326 = distinct !DILocation(line: 1501, column: 17, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10328, file: !898, line: 1500, column: 17)
!10328 = distinct !DILexicalBlock(scope: !10329, file: !898, line: 1498, column: 43)
!10329 = distinct !DILexicalBlock(scope: !10330, file: !898, line: 1498, column: 9)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !898, line: 1498, column: 9)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !898, line: 1491, column: 54)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !898, line: 1491, column: 5)
!10333 = distinct !DILexicalBlock(scope: !10322, file: !898, line: 1491, column: 5)
!10334 = !DILocation(line: 67, column: 83, scope: !1048, inlinedAt: !10326)
!10335 = !DILocalVariable(name: "s", arg: 1, scope: !10322, file: !898, line: 1477, type: !1094)
!10336 = !DILocation(line: 1477, column: 49, scope: !10322)
!10337 = !DILocalVariable(name: "exss", arg: 2, scope: !10322, file: !898, line: 1477, type: !1027)
!10338 = !DILocation(line: 1477, column: 56, scope: !10322)
!10339 = !DILocalVariable(name: "xch_base", arg: 3, scope: !10322, file: !898, line: 1477, type: !1027)
!10340 = !DILocation(line: 1477, column: 66, scope: !10322)
!10341 = !DILocalVariable(name: "sf", scope: !10322, file: !898, line: 1479, type: !1027)
!10342 = !DILocation(line: 1479, column: 9, scope: !10322)
!10343 = !DILocalVariable(name: "ch", scope: !10322, file: !898, line: 1479, type: !1027)
!10344 = !DILocation(line: 1479, column: 13, scope: !10322)
!10345 = !DILocalVariable(name: "ret", scope: !10322, file: !898, line: 1479, type: !1027)
!10346 = !DILocation(line: 1479, column: 17, scope: !10322)
!10347 = !DILocalVariable(name: "band", scope: !10322, file: !898, line: 1479, type: !1027)
!10348 = !DILocation(line: 1479, column: 22, scope: !10322)
!10349 = !DILocalVariable(name: "sub_pos", scope: !10322, file: !898, line: 1479, type: !1027)
!10350 = !DILocation(line: 1479, column: 28, scope: !10322)
!10351 = !DILocation(line: 1481, column: 40, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10322, file: !898, line: 1481, column: 9)
!10353 = !DILocation(line: 1481, column: 43, scope: !10352)
!10354 = !DILocation(line: 1481, column: 49, scope: !10352)
!10355 = !DILocation(line: 1481, column: 16, scope: !10352)
!10356 = !DILocation(line: 1481, column: 14, scope: !10352)
!10357 = !DILocation(line: 1481, column: 60, scope: !10352)
!10358 = !DILocation(line: 1481, column: 9, scope: !10322)
!10359 = !DILocation(line: 1482, column: 16, scope: !10352)
!10360 = !DILocation(line: 1482, column: 9, scope: !10352)
!10361 = !DILocation(line: 1484, column: 13, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10322, file: !898, line: 1484, column: 5)
!10363 = !DILocation(line: 1484, column: 26, scope: !10362)
!10364 = !DILocation(line: 1484, column: 10, scope: !10362)
!10365 = !DILocation(line: 1484, column: 31, scope: !10366)
!10366 = !DILexicalBlockFile(scope: !10367, file: !898, discriminator: 1)
!10367 = distinct !DILexicalBlock(scope: !10362, file: !898, line: 1484, column: 5)
!10368 = !DILocation(line: 1484, column: 36, scope: !10366)
!10369 = !DILocation(line: 1484, column: 39, scope: !10366)
!10370 = !DILocation(line: 1484, column: 34, scope: !10366)
!10371 = !DILocation(line: 1484, column: 5, scope: !10366)
!10372 = !DILocation(line: 1485, column: 46, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !898, line: 1485, column: 13)
!10374 = distinct !DILexicalBlock(scope: !10367, file: !898, line: 1484, column: 57)
!10375 = !DILocation(line: 1485, column: 49, scope: !10373)
!10376 = !DILocation(line: 1485, column: 20, scope: !10373)
!10377 = !DILocation(line: 1485, column: 18, scope: !10373)
!10378 = !DILocation(line: 1485, column: 60, scope: !10373)
!10379 = !DILocation(line: 1485, column: 13, scope: !10374)
!10380 = !DILocation(line: 1486, column: 20, scope: !10373)
!10381 = !DILocation(line: 1486, column: 13, scope: !10373)
!10382 = !DILocation(line: 1487, column: 45, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10374, file: !898, line: 1487, column: 13)
!10384 = !DILocation(line: 1487, column: 48, scope: !10383)
!10385 = !DILocation(line: 1487, column: 52, scope: !10383)
!10386 = !DILocation(line: 1487, column: 20, scope: !10383)
!10387 = !DILocation(line: 1487, column: 18, scope: !10383)
!10388 = !DILocation(line: 1487, column: 73, scope: !10383)
!10389 = !DILocation(line: 1487, column: 13, scope: !10374)
!10390 = !DILocation(line: 1488, column: 20, scope: !10383)
!10391 = !DILocation(line: 1488, column: 13, scope: !10383)
!10392 = !DILocation(line: 1489, column: 5, scope: !10374)
!10393 = !DILocation(line: 1484, column: 53, scope: !10394)
!10394 = !DILexicalBlockFile(scope: !10367, file: !898, discriminator: 2)
!10395 = !DILocation(line: 1484, column: 5, scope: !10394)
!10396 = distinct !{!10396, !10397}
!10397 = !DILocation(line: 1484, column: 5, scope: !10322)
!10398 = !DILocation(line: 1491, column: 15, scope: !10333)
!10399 = !DILocation(line: 1491, column: 13, scope: !10333)
!10400 = !DILocation(line: 1491, column: 10, scope: !10333)
!10401 = !DILocation(line: 1491, column: 25, scope: !10402)
!10402 = !DILexicalBlockFile(scope: !10332, file: !898, discriminator: 1)
!10403 = !DILocation(line: 1491, column: 30, scope: !10402)
!10404 = !DILocation(line: 1491, column: 33, scope: !10402)
!10405 = !DILocation(line: 1491, column: 28, scope: !10402)
!10406 = !DILocation(line: 1491, column: 5, scope: !10402)
!10407 = !DILocalVariable(name: "nsubbands", scope: !10331, file: !898, line: 1493, type: !1027)
!10408 = !DILocation(line: 1493, column: 13, scope: !10331)
!10409 = !DILocation(line: 1493, column: 38, scope: !10331)
!10410 = !DILocation(line: 1493, column: 25, scope: !10331)
!10411 = !DILocation(line: 1493, column: 28, scope: !10331)
!10412 = !DILocation(line: 1494, column: 38, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10331, file: !898, line: 1494, column: 13)
!10414 = !DILocation(line: 1494, column: 13, scope: !10413)
!10415 = !DILocation(line: 1494, column: 16, scope: !10413)
!10416 = !DILocation(line: 1494, column: 13, scope: !10331)
!10417 = !DILocation(line: 1495, column: 27, scope: !10413)
!10418 = !DILocation(line: 1495, column: 79, scope: !10413)
!10419 = !DILocation(line: 1495, column: 54, scope: !10413)
!10420 = !DILocation(line: 1495, column: 57, scope: !10413)
!10421 = !DILocation(line: 1495, column: 83, scope: !10413)
!10422 = !DILocation(line: 1495, column: 41, scope: !10413)
!10423 = !DILocation(line: 1495, column: 44, scope: !10413)
!10424 = !DILocation(line: 1495, column: 40, scope: !10413)
!10425 = !DILocation(line: 1495, column: 38, scope: !10413)
!10426 = !DILocation(line: 1495, column: 26, scope: !10413)
!10427 = !DILocation(line: 1495, column: 92, scope: !10428)
!10428 = !DILexicalBlockFile(scope: !10413, file: !898, discriminator: 1)
!10429 = !DILocation(line: 1495, column: 26, scope: !10428)
!10430 = !DILocation(line: 1495, column: 144, scope: !10431)
!10431 = !DILexicalBlockFile(scope: !10413, file: !898, discriminator: 2)
!10432 = !DILocation(line: 1495, column: 119, scope: !10431)
!10433 = !DILocation(line: 1495, column: 122, scope: !10431)
!10434 = !DILocation(line: 1495, column: 148, scope: !10431)
!10435 = !DILocation(line: 1495, column: 106, scope: !10431)
!10436 = !DILocation(line: 1495, column: 109, scope: !10431)
!10437 = !DILocation(line: 1495, column: 105, scope: !10431)
!10438 = !DILocation(line: 1495, column: 26, scope: !10431)
!10439 = !DILocation(line: 1495, column: 26, scope: !10440)
!10440 = !DILexicalBlockFile(scope: !10413, file: !898, discriminator: 3)
!10441 = !DILocation(line: 1495, column: 23, scope: !10440)
!10442 = !DILocation(line: 1495, column: 13, scope: !10440)
!10443 = !DILocation(line: 1498, column: 19, scope: !10330)
!10444 = !DILocation(line: 1498, column: 14, scope: !10330)
!10445 = !DILocation(line: 1498, column: 24, scope: !10446)
!10446 = !DILexicalBlockFile(scope: !10329, file: !898, discriminator: 1)
!10447 = !DILocation(line: 1498, column: 29, scope: !10446)
!10448 = !DILocation(line: 1498, column: 9, scope: !10446)
!10449 = !DILocalVariable(name: "samples", scope: !10328, file: !898, line: 1499, type: !1029)
!10450 = !DILocation(line: 1499, column: 22, scope: !10328)
!10451 = !DILocation(line: 1499, column: 59, scope: !10328)
!10452 = !DILocation(line: 1499, column: 32, scope: !10328)
!10453 = !DILocation(line: 1499, column: 55, scope: !10328)
!10454 = !DILocation(line: 1499, column: 35, scope: !10328)
!10455 = !DILocation(line: 1499, column: 65, scope: !10328)
!10456 = !DILocation(line: 1500, column: 17, scope: !10327)
!10457 = !DILocation(line: 1500, column: 25, scope: !10327)
!10458 = !DILocation(line: 1500, column: 28, scope: !10327)
!10459 = !DILocation(line: 1500, column: 22, scope: !10327)
!10460 = !DILocation(line: 1500, column: 46, scope: !10327)
!10461 = !DILocation(line: 1500, column: 49, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !10327, file: !898, discriminator: 1)
!10463 = !DILocation(line: 1500, column: 56, scope: !10462)
!10464 = !DILocation(line: 1500, column: 54, scope: !10462)
!10465 = !DILocation(line: 1500, column: 17, scope: !10462)
!10466 = !DILocation(line: 1501, column: 28, scope: !10327)
!10467 = !DILocation(line: 1501, column: 37, scope: !10327)
!10468 = !DILocation(line: 1501, column: 47, scope: !10327)
!10469 = !DILocation(line: 1501, column: 50, scope: !10327)
!10470 = !DILocation(line: 1501, column: 45, scope: !10327)
!10471 = !DILocation(line: 1501, column: 17, scope: !10327)
!10472 = !DILocation(line: 73, column: 32, scope: !1048, inlinedAt: !10326)
!10473 = !DILocation(line: 73, column: 21, scope: !1048, inlinedAt: !10326)
!10474 = !DILocation(line: 74, column: 38, scope: !1048, inlinedAt: !10326)
!10475 = !DILocation(line: 74, column: 21, scope: !1048, inlinedAt: !10326)
!10476 = !DILocation(line: 71, column: 5, scope: !1048, inlinedAt: !10326)
!10477 = !DILocation(line: 1503, column: 24, scope: !10327)
!10478 = !DILocation(line: 1503, column: 17, scope: !10327)
!10479 = !DILocation(line: 1503, column: 41, scope: !10327)
!10480 = !DILocation(line: 1503, column: 44, scope: !10327)
!10481 = !DILocation(line: 1503, column: 39, scope: !10327)
!10482 = !DILocation(line: 1503, column: 36, scope: !10327)
!10483 = !DILocation(line: 1503, column: 56, scope: !10327)
!10484 = !DILocation(line: 1504, column: 9, scope: !10328)
!10485 = !DILocation(line: 1498, column: 39, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !10329, file: !898, discriminator: 2)
!10487 = !DILocation(line: 1498, column: 9, scope: !10486)
!10488 = distinct !{!10488, !10489}
!10489 = !DILocation(line: 1498, column: 9, scope: !10331)
!10490 = !DILocation(line: 1505, column: 5, scope: !10331)
!10491 = !DILocation(line: 1491, column: 50, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10332, file: !898, discriminator: 2)
!10493 = !DILocation(line: 1491, column: 5, scope: !10492)
!10494 = distinct !{!10494, !10495}
!10495 = !DILocation(line: 1491, column: 5, scope: !10322)
!10496 = !DILocation(line: 46, column: 9, scope: !2821, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 1507, column: 5, scope: !10322)
!10498 = !DILocation(line: 1509, column: 5, scope: !10322)
!10499 = !DILocation(line: 1510, column: 1, scope: !10322)
!10500 = distinct !DISubprogram(name: "parse_x96_coding_header", scope: !898, file: !898, line: 1390, type: !10323, isLocal: true, isDefinition: true, scopeLine: 1391, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!10501 = !DILocalVariable(name: "s", arg: 1, scope: !10500, file: !898, line: 1390, type: !1094)
!10502 = !DILocation(line: 1390, column: 52, scope: !10500)
!10503 = !DILocalVariable(name: "exss", arg: 2, scope: !10500, file: !898, line: 1390, type: !1027)
!10504 = !DILocation(line: 1390, column: 59, scope: !10500)
!10505 = !DILocalVariable(name: "xch_base", arg: 3, scope: !10500, file: !898, line: 1390, type: !1027)
!10506 = !DILocation(line: 1390, column: 69, scope: !10500)
!10507 = !DILocalVariable(name: "n", scope: !10500, file: !898, line: 1392, type: !1027)
!10508 = !DILocation(line: 1392, column: 9, scope: !10500)
!10509 = !DILocalVariable(name: "ch", scope: !10500, file: !898, line: 1392, type: !1027)
!10510 = !DILocation(line: 1392, column: 12, scope: !10500)
!10511 = !DILocalVariable(name: "header_size", scope: !10500, file: !898, line: 1392, type: !1027)
!10512 = !DILocation(line: 1392, column: 16, scope: !10500)
!10513 = !DILocalVariable(name: "header_pos", scope: !10500, file: !898, line: 1392, type: !1027)
!10514 = !DILocation(line: 1392, column: 33, scope: !10500)
!10515 = !DILocation(line: 1392, column: 62, scope: !10500)
!10516 = !DILocation(line: 1392, column: 65, scope: !10500)
!10517 = !DILocation(line: 1392, column: 46, scope: !10500)
!10518 = !DILocation(line: 1394, column: 24, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1394, column: 9)
!10520 = !DILocation(line: 1394, column: 27, scope: !10519)
!10521 = !DILocation(line: 1394, column: 9, scope: !10519)
!10522 = !DILocation(line: 1394, column: 31, scope: !10519)
!10523 = !DILocation(line: 1394, column: 9, scope: !10500)
!10524 = !DILocation(line: 1395, column: 9, scope: !10519)
!10525 = !DILocation(line: 1397, column: 9, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1397, column: 9)
!10527 = !DILocation(line: 1397, column: 9, scope: !10500)
!10528 = !DILocation(line: 1399, column: 33, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10526, file: !898, line: 1397, column: 15)
!10530 = !DILocation(line: 1399, column: 36, scope: !10529)
!10531 = !DILocation(line: 1399, column: 23, scope: !10529)
!10532 = !DILocation(line: 1399, column: 43, scope: !10529)
!10533 = !DILocation(line: 1399, column: 21, scope: !10529)
!10534 = !DILocation(line: 1402, column: 13, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10529, file: !898, line: 1402, column: 13)
!10536 = !DILocation(line: 1402, column: 16, scope: !10535)
!10537 = !DILocation(line: 1403, column: 13, scope: !10535)
!10538 = !DILocation(line: 1403, column: 33, scope: !10539)
!10539 = !DILexicalBlockFile(scope: !10535, file: !898, discriminator: 1)
!10540 = !DILocation(line: 1403, column: 36, scope: !10539)
!10541 = !DILocation(line: 1403, column: 44, scope: !10539)
!10542 = !DILocation(line: 1403, column: 47, scope: !10539)
!10543 = !DILocation(line: 1403, column: 51, scope: !10539)
!10544 = !DILocation(line: 1403, column: 63, scope: !10539)
!10545 = !DILocation(line: 1403, column: 76, scope: !10539)
!10546 = !DILocation(line: 1403, column: 88, scope: !10539)
!10547 = !DILocation(line: 1403, column: 74, scope: !10539)
!10548 = !DILocation(line: 1403, column: 16, scope: !10539)
!10549 = !DILocation(line: 1402, column: 13, scope: !10550)
!10550 = !DILexicalBlockFile(scope: !10529, file: !898, discriminator: 1)
!10551 = !DILocation(line: 1404, column: 20, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10535, file: !898, line: 1403, column: 94)
!10553 = !DILocation(line: 1404, column: 23, scope: !10552)
!10554 = !DILocation(line: 1404, column: 13, scope: !10552)
!10555 = !DILocation(line: 1405, column: 13, scope: !10552)
!10556 = !DILocation(line: 1407, column: 5, scope: !10529)
!10557 = !DILocation(line: 1410, column: 34, scope: !10500)
!10558 = !DILocation(line: 1410, column: 37, scope: !10500)
!10559 = !DILocation(line: 1410, column: 23, scope: !10500)
!10560 = !DILocation(line: 1410, column: 5, scope: !10500)
!10561 = !DILocation(line: 1410, column: 8, scope: !10500)
!10562 = !DILocation(line: 1410, column: 21, scope: !10500)
!10563 = !DILocation(line: 1413, column: 9, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1413, column: 9)
!10565 = !DILocation(line: 1413, column: 12, scope: !10564)
!10566 = !DILocation(line: 1413, column: 23, scope: !10564)
!10567 = !DILocation(line: 1413, column: 9, scope: !10500)
!10568 = !DILocation(line: 1414, column: 42, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10564, file: !898, line: 1413, column: 28)
!10570 = !DILocation(line: 1414, column: 45, scope: !10569)
!10571 = !DILocation(line: 1414, column: 32, scope: !10569)
!10572 = !DILocation(line: 1414, column: 9, scope: !10569)
!10573 = !DILocation(line: 1414, column: 12, scope: !10569)
!10574 = !DILocation(line: 1414, column: 30, scope: !10569)
!10575 = !DILocation(line: 1415, column: 13, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10569, file: !898, line: 1415, column: 13)
!10577 = !DILocation(line: 1415, column: 16, scope: !10576)
!10578 = !DILocation(line: 1415, column: 34, scope: !10576)
!10579 = !DILocation(line: 1415, column: 13, scope: !10569)
!10580 = !DILocation(line: 1416, column: 20, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10576, file: !898, line: 1415, column: 40)
!10582 = !DILocation(line: 1416, column: 23, scope: !10581)
!10583 = !DILocation(line: 1416, column: 76, scope: !10581)
!10584 = !DILocation(line: 1416, column: 79, scope: !10581)
!10585 = !DILocation(line: 1416, column: 13, scope: !10581)
!10586 = !DILocation(line: 1417, column: 13, scope: !10581)
!10587 = !DILocation(line: 1419, column: 5, scope: !10569)
!10588 = !DILocation(line: 1420, column: 9, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10564, file: !898, line: 1419, column: 12)
!10590 = !DILocation(line: 1420, column: 12, scope: !10589)
!10591 = !DILocation(line: 1420, column: 30, scope: !10589)
!10592 = !DILocation(line: 1424, column: 15, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1424, column: 5)
!10594 = !DILocation(line: 1424, column: 13, scope: !10593)
!10595 = !DILocation(line: 1424, column: 10, scope: !10593)
!10596 = !DILocation(line: 1424, column: 25, scope: !10597)
!10597 = !DILexicalBlockFile(scope: !10598, file: !898, discriminator: 1)
!10598 = distinct !DILexicalBlock(scope: !10593, file: !898, line: 1424, column: 5)
!10599 = !DILocation(line: 1424, column: 30, scope: !10597)
!10600 = !DILocation(line: 1424, column: 33, scope: !10597)
!10601 = !DILocation(line: 1424, column: 28, scope: !10597)
!10602 = !DILocation(line: 1424, column: 5, scope: !10597)
!10603 = !DILocation(line: 1425, column: 38, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10598, file: !898, line: 1424, column: 54)
!10605 = !DILocation(line: 1425, column: 41, scope: !10604)
!10606 = !DILocation(line: 1425, column: 28, scope: !10604)
!10607 = !DILocation(line: 1425, column: 48, scope: !10604)
!10608 = !DILocation(line: 1425, column: 22, scope: !10604)
!10609 = !DILocation(line: 1425, column: 9, scope: !10604)
!10610 = !DILocation(line: 1425, column: 12, scope: !10604)
!10611 = !DILocation(line: 1425, column: 26, scope: !10604)
!10612 = !DILocation(line: 1426, column: 26, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10604, file: !898, line: 1426, column: 13)
!10614 = !DILocation(line: 1426, column: 13, scope: !10613)
!10615 = !DILocation(line: 1426, column: 16, scope: !10613)
!10616 = !DILocation(line: 1426, column: 30, scope: !10613)
!10617 = !DILocation(line: 1426, column: 13, scope: !10604)
!10618 = !DILocation(line: 1427, column: 20, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10613, file: !898, line: 1426, column: 36)
!10620 = !DILocation(line: 1427, column: 23, scope: !10619)
!10621 = !DILocation(line: 1427, column: 92, scope: !10619)
!10622 = !DILocation(line: 1427, column: 79, scope: !10619)
!10623 = !DILocation(line: 1427, column: 82, scope: !10619)
!10624 = !DILocation(line: 1427, column: 13, scope: !10619)
!10625 = !DILocation(line: 1428, column: 13, scope: !10619)
!10626 = !DILocation(line: 1430, column: 5, scope: !10604)
!10627 = !DILocation(line: 1424, column: 50, scope: !10628)
!10628 = !DILexicalBlockFile(scope: !10598, file: !898, discriminator: 2)
!10629 = !DILocation(line: 1424, column: 5, scope: !10628)
!10630 = distinct !{!10630, !10631}
!10631 = !DILocation(line: 1424, column: 5, scope: !10500)
!10632 = !DILocation(line: 1433, column: 15, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1433, column: 5)
!10634 = !DILocation(line: 1433, column: 13, scope: !10633)
!10635 = !DILocation(line: 1433, column: 10, scope: !10633)
!10636 = !DILocation(line: 1433, column: 25, scope: !10637)
!10637 = !DILexicalBlockFile(scope: !10638, file: !898, discriminator: 1)
!10638 = distinct !DILexicalBlock(scope: !10633, file: !898, line: 1433, column: 5)
!10639 = !DILocation(line: 1433, column: 30, scope: !10637)
!10640 = !DILocation(line: 1433, column: 33, scope: !10637)
!10641 = !DILocation(line: 1433, column: 28, scope: !10637)
!10642 = !DILocation(line: 1433, column: 5, scope: !10637)
!10643 = !DILocation(line: 1434, column: 28, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !898, line: 1434, column: 13)
!10645 = distinct !DILexicalBlock(scope: !10638, file: !898, line: 1433, column: 54)
!10646 = !DILocation(line: 1434, column: 31, scope: !10644)
!10647 = !DILocation(line: 1434, column: 18, scope: !10644)
!10648 = !DILocation(line: 1434, column: 16, scope: !10644)
!10649 = !DILocation(line: 1434, column: 39, scope: !10644)
!10650 = !DILocation(line: 1434, column: 42, scope: !10651)
!10651 = !DILexicalBlockFile(scope: !10644, file: !898, discriminator: 1)
!10652 = !DILocation(line: 1434, column: 13, scope: !10651)
!10653 = !DILocation(line: 1435, column: 18, scope: !10644)
!10654 = !DILocation(line: 1435, column: 27, scope: !10644)
!10655 = !DILocation(line: 1435, column: 15, scope: !10644)
!10656 = !DILocation(line: 1435, column: 13, scope: !10644)
!10657 = !DILocation(line: 1436, column: 13, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10645, file: !898, line: 1436, column: 13)
!10659 = !DILocation(line: 1436, column: 17, scope: !10658)
!10660 = !DILocation(line: 1436, column: 20, scope: !10658)
!10661 = !DILocation(line: 1436, column: 15, scope: !10658)
!10662 = !DILocation(line: 1436, column: 13, scope: !10645)
!10663 = !DILocation(line: 1437, column: 20, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10658, file: !898, line: 1436, column: 35)
!10665 = !DILocation(line: 1437, column: 23, scope: !10664)
!10666 = !DILocation(line: 1437, column: 13, scope: !10664)
!10667 = !DILocation(line: 1438, column: 13, scope: !10664)
!10668 = !DILocation(line: 1440, column: 40, scope: !10645)
!10669 = !DILocation(line: 1440, column: 34, scope: !10645)
!10670 = !DILocation(line: 1440, column: 9, scope: !10645)
!10671 = !DILocation(line: 1440, column: 12, scope: !10645)
!10672 = !DILocation(line: 1440, column: 38, scope: !10645)
!10673 = !DILocation(line: 1441, column: 5, scope: !10645)
!10674 = !DILocation(line: 1433, column: 50, scope: !10675)
!10675 = !DILexicalBlockFile(scope: !10638, file: !898, discriminator: 2)
!10676 = !DILocation(line: 1433, column: 5, scope: !10675)
!10677 = distinct !{!10677, !10678}
!10678 = !DILocation(line: 1433, column: 5, scope: !10500)
!10679 = !DILocation(line: 1444, column: 15, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1444, column: 5)
!10681 = !DILocation(line: 1444, column: 13, scope: !10680)
!10682 = !DILocation(line: 1444, column: 10, scope: !10680)
!10683 = !DILocation(line: 1444, column: 25, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !10685, file: !898, discriminator: 1)
!10685 = distinct !DILexicalBlock(scope: !10680, file: !898, line: 1444, column: 5)
!10686 = !DILocation(line: 1444, column: 30, scope: !10684)
!10687 = !DILocation(line: 1444, column: 33, scope: !10684)
!10688 = !DILocation(line: 1444, column: 28, scope: !10684)
!10689 = !DILocation(line: 1444, column: 5, scope: !10684)
!10690 = !DILocation(line: 1445, column: 45, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10685, file: !898, line: 1444, column: 54)
!10692 = !DILocation(line: 1445, column: 48, scope: !10691)
!10693 = !DILocation(line: 1445, column: 35, scope: !10691)
!10694 = !DILocation(line: 1445, column: 29, scope: !10691)
!10695 = !DILocation(line: 1445, column: 9, scope: !10691)
!10696 = !DILocation(line: 1445, column: 12, scope: !10691)
!10697 = !DILocation(line: 1445, column: 33, scope: !10691)
!10698 = !DILocation(line: 1446, column: 33, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10691, file: !898, line: 1446, column: 13)
!10700 = !DILocation(line: 1446, column: 13, scope: !10699)
!10701 = !DILocation(line: 1446, column: 16, scope: !10699)
!10702 = !DILocation(line: 1446, column: 37, scope: !10699)
!10703 = !DILocation(line: 1446, column: 13, scope: !10691)
!10704 = !DILocation(line: 1447, column: 20, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10699, file: !898, line: 1446, column: 43)
!10706 = !DILocation(line: 1447, column: 23, scope: !10705)
!10707 = !DILocation(line: 1447, column: 13, scope: !10705)
!10708 = !DILocation(line: 1448, column: 13, scope: !10705)
!10709 = !DILocation(line: 1450, column: 5, scope: !10691)
!10710 = !DILocation(line: 1444, column: 50, scope: !10711)
!10711 = !DILexicalBlockFile(scope: !10685, file: !898, discriminator: 2)
!10712 = !DILocation(line: 1444, column: 5, scope: !10711)
!10713 = distinct !{!10713, !10714}
!10714 = !DILocation(line: 1444, column: 5, scope: !10500)
!10715 = !DILocation(line: 1453, column: 15, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1453, column: 5)
!10717 = !DILocation(line: 1453, column: 13, scope: !10716)
!10718 = !DILocation(line: 1453, column: 10, scope: !10716)
!10719 = !DILocation(line: 1453, column: 25, scope: !10720)
!10720 = !DILexicalBlockFile(scope: !10721, file: !898, discriminator: 1)
!10721 = distinct !DILexicalBlock(scope: !10716, file: !898, line: 1453, column: 5)
!10722 = !DILocation(line: 1453, column: 30, scope: !10720)
!10723 = !DILocation(line: 1453, column: 33, scope: !10720)
!10724 = !DILocation(line: 1453, column: 28, scope: !10720)
!10725 = !DILocation(line: 1453, column: 5, scope: !10720)
!10726 = !DILocation(line: 1454, column: 47, scope: !10721)
!10727 = !DILocation(line: 1454, column: 50, scope: !10721)
!10728 = !DILocation(line: 1454, column: 37, scope: !10721)
!10729 = !DILocation(line: 1454, column: 31, scope: !10721)
!10730 = !DILocation(line: 1454, column: 9, scope: !10721)
!10731 = !DILocation(line: 1454, column: 12, scope: !10721)
!10732 = !DILocation(line: 1454, column: 35, scope: !10721)
!10733 = !DILocation(line: 1453, column: 50, scope: !10734)
!10734 = !DILexicalBlockFile(scope: !10721, file: !898, discriminator: 2)
!10735 = !DILocation(line: 1453, column: 5, scope: !10734)
!10736 = distinct !{!10736, !10737}
!10737 = !DILocation(line: 1453, column: 5, scope: !10500)
!10738 = !DILocation(line: 1457, column: 12, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1457, column: 5)
!10740 = !DILocation(line: 1457, column: 10, scope: !10739)
!10741 = !DILocation(line: 1457, column: 17, scope: !10742)
!10742 = !DILexicalBlockFile(scope: !10743, file: !898, discriminator: 1)
!10743 = distinct !DILexicalBlock(scope: !10739, file: !898, line: 1457, column: 5)
!10744 = !DILocation(line: 1457, column: 29, scope: !10742)
!10745 = !DILocation(line: 1457, column: 32, scope: !10742)
!10746 = !DILocation(line: 1457, column: 27, scope: !10742)
!10747 = !DILocation(line: 1457, column: 23, scope: !10742)
!10748 = !DILocation(line: 1457, column: 19, scope: !10742)
!10749 = !DILocation(line: 1457, column: 5, scope: !10742)
!10750 = !DILocation(line: 1458, column: 19, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10743, file: !898, line: 1458, column: 9)
!10752 = !DILocation(line: 1458, column: 17, scope: !10751)
!10753 = !DILocation(line: 1458, column: 14, scope: !10751)
!10754 = !DILocation(line: 1458, column: 29, scope: !10755)
!10755 = !DILexicalBlockFile(scope: !10756, file: !898, discriminator: 1)
!10756 = distinct !DILexicalBlock(scope: !10751, file: !898, line: 1458, column: 9)
!10757 = !DILocation(line: 1458, column: 34, scope: !10755)
!10758 = !DILocation(line: 1458, column: 37, scope: !10755)
!10759 = !DILocation(line: 1458, column: 32, scope: !10755)
!10760 = !DILocation(line: 1458, column: 9, scope: !10755)
!10761 = !DILocation(line: 1459, column: 51, scope: !10756)
!10762 = !DILocation(line: 1459, column: 54, scope: !10756)
!10763 = !DILocation(line: 1459, column: 87, scope: !10756)
!10764 = !DILocation(line: 1459, column: 58, scope: !10756)
!10765 = !DILocation(line: 1459, column: 41, scope: !10756)
!10766 = !DILocation(line: 1459, column: 36, scope: !10756)
!10767 = !DILocation(line: 1459, column: 13, scope: !10756)
!10768 = !DILocation(line: 1459, column: 32, scope: !10756)
!10769 = !DILocation(line: 1459, column: 16, scope: !10756)
!10770 = !DILocation(line: 1459, column: 39, scope: !10756)
!10771 = !DILocation(line: 1458, column: 54, scope: !10772)
!10772 = !DILexicalBlockFile(scope: !10756, file: !898, discriminator: 2)
!10773 = !DILocation(line: 1458, column: 9, scope: !10772)
!10774 = distinct !{!10774, !10775}
!10775 = !DILocation(line: 1458, column: 9, scope: !10743)
!10776 = !DILocation(line: 1459, column: 89, scope: !10777)
!10777 = !DILexicalBlockFile(scope: !10751, file: !898, discriminator: 1)
!10778 = !DILocation(line: 1457, column: 47, scope: !10779)
!10779 = !DILexicalBlockFile(scope: !10743, file: !898, discriminator: 2)
!10780 = !DILocation(line: 1457, column: 5, scope: !10779)
!10781 = distinct !{!10781, !10782}
!10782 = !DILocation(line: 1457, column: 5, scope: !10500)
!10783 = !DILocation(line: 1461, column: 9, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10500, file: !898, line: 1461, column: 9)
!10785 = !DILocation(line: 1461, column: 9, scope: !10500)
!10786 = !DILocation(line: 1465, column: 31, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10788, file: !898, line: 1465, column: 13)
!10788 = distinct !DILexicalBlock(scope: !10784, file: !898, line: 1461, column: 15)
!10789 = !DILocation(line: 1465, column: 34, scope: !10787)
!10790 = !DILocation(line: 1465, column: 38, scope: !10787)
!10791 = !DILocation(line: 1465, column: 51, scope: !10787)
!10792 = !DILocation(line: 1465, column: 63, scope: !10787)
!10793 = !DILocation(line: 1465, column: 49, scope: !10787)
!10794 = !DILocation(line: 1465, column: 13, scope: !10787)
!10795 = !DILocation(line: 1465, column: 13, scope: !10788)
!10796 = !DILocation(line: 1466, column: 20, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10787, file: !898, line: 1465, column: 69)
!10798 = !DILocation(line: 1466, column: 23, scope: !10797)
!10799 = !DILocation(line: 1466, column: 13, scope: !10797)
!10800 = !DILocation(line: 1467, column: 13, scope: !10797)
!10801 = !DILocation(line: 1469, column: 5, scope: !10788)
!10802 = !DILocation(line: 1470, column: 13, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !898, line: 1470, column: 13)
!10804 = distinct !DILexicalBlock(scope: !10784, file: !898, line: 1469, column: 12)
!10805 = !DILocation(line: 1470, column: 16, scope: !10803)
!10806 = !DILocation(line: 1470, column: 13, scope: !10804)
!10807 = !DILocation(line: 1471, column: 24, scope: !10803)
!10808 = !DILocation(line: 1471, column: 27, scope: !10803)
!10809 = !DILocation(line: 1471, column: 13, scope: !10803)
!10810 = !DILocation(line: 1474, column: 5, scope: !10500)
!10811 = !DILocation(line: 1475, column: 1, scope: !10500)
!10812 = distinct !DISubprogram(name: "parse_x96_subframe_header", scope: !898, file: !898, line: 1306, type: !4665, isLocal: true, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!10813 = !DILocalVariable(name: "s", arg: 1, scope: !10812, file: !898, line: 1306, type: !1094)
!10814 = !DILocation(line: 1306, column: 54, scope: !10812)
!10815 = !DILocalVariable(name: "xch_base", arg: 2, scope: !10812, file: !898, line: 1306, type: !1027)
!10816 = !DILocation(line: 1306, column: 61, scope: !10812)
!10817 = !DILocalVariable(name: "ch", scope: !10812, file: !898, line: 1308, type: !1027)
!10818 = !DILocation(line: 1308, column: 9, scope: !10812)
!10819 = !DILocalVariable(name: "band", scope: !10812, file: !898, line: 1308, type: !1027)
!10820 = !DILocation(line: 1308, column: 13, scope: !10812)
!10821 = !DILocalVariable(name: "ret", scope: !10812, file: !898, line: 1308, type: !1027)
!10822 = !DILocation(line: 1308, column: 19, scope: !10812)
!10823 = !DILocation(line: 1310, column: 24, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1310, column: 9)
!10825 = !DILocation(line: 1310, column: 27, scope: !10824)
!10826 = !DILocation(line: 1310, column: 9, scope: !10824)
!10827 = !DILocation(line: 1310, column: 31, scope: !10824)
!10828 = !DILocation(line: 1310, column: 9, scope: !10812)
!10829 = !DILocation(line: 1311, column: 9, scope: !10824)
!10830 = !DILocation(line: 1314, column: 15, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1314, column: 5)
!10832 = !DILocation(line: 1314, column: 13, scope: !10831)
!10833 = !DILocation(line: 1314, column: 10, scope: !10831)
!10834 = !DILocation(line: 1314, column: 25, scope: !10835)
!10835 = !DILexicalBlockFile(scope: !10836, file: !898, discriminator: 1)
!10836 = distinct !DILexicalBlock(scope: !10831, file: !898, line: 1314, column: 5)
!10837 = !DILocation(line: 1314, column: 30, scope: !10835)
!10838 = !DILocation(line: 1314, column: 33, scope: !10835)
!10839 = !DILocation(line: 1314, column: 28, scope: !10835)
!10840 = !DILocation(line: 1314, column: 5, scope: !10835)
!10841 = !DILocation(line: 1315, column: 21, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10836, file: !898, line: 1315, column: 9)
!10843 = !DILocation(line: 1315, column: 24, scope: !10842)
!10844 = !DILocation(line: 1315, column: 19, scope: !10842)
!10845 = !DILocation(line: 1315, column: 14, scope: !10842)
!10846 = !DILocation(line: 1315, column: 43, scope: !10847)
!10847 = !DILexicalBlockFile(scope: !10848, file: !898, discriminator: 1)
!10848 = distinct !DILexicalBlock(scope: !10842, file: !898, line: 1315, column: 9)
!10849 = !DILocation(line: 1315, column: 63, scope: !10847)
!10850 = !DILocation(line: 1315, column: 50, scope: !10847)
!10851 = !DILocation(line: 1315, column: 53, scope: !10847)
!10852 = !DILocation(line: 1315, column: 48, scope: !10847)
!10853 = !DILocation(line: 1315, column: 9, scope: !10847)
!10854 = !DILocation(line: 1316, column: 55, scope: !10848)
!10855 = !DILocation(line: 1316, column: 58, scope: !10848)
!10856 = !DILocation(line: 1316, column: 44, scope: !10848)
!10857 = !DILocation(line: 1316, column: 36, scope: !10848)
!10858 = !DILocation(line: 1316, column: 13, scope: !10848)
!10859 = !DILocation(line: 1316, column: 32, scope: !10848)
!10860 = !DILocation(line: 1316, column: 16, scope: !10848)
!10861 = !DILocation(line: 1316, column: 42, scope: !10848)
!10862 = !DILocation(line: 1315, column: 72, scope: !10863)
!10863 = !DILexicalBlockFile(scope: !10848, file: !898, discriminator: 2)
!10864 = !DILocation(line: 1315, column: 9, scope: !10863)
!10865 = distinct !{!10865, !10866}
!10866 = !DILocation(line: 1315, column: 9, scope: !10836)
!10867 = !DILocation(line: 1316, column: 60, scope: !10868)
!10868 = !DILexicalBlockFile(scope: !10842, file: !898, discriminator: 1)
!10869 = !DILocation(line: 1314, column: 50, scope: !10870)
!10870 = !DILexicalBlockFile(scope: !10836, file: !898, discriminator: 2)
!10871 = !DILocation(line: 1314, column: 5, scope: !10870)
!10872 = distinct !{!10872, !10873}
!10873 = !DILocation(line: 1314, column: 5, scope: !10812)
!10874 = !DILocation(line: 1319, column: 15, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1319, column: 5)
!10876 = !DILocation(line: 1319, column: 13, scope: !10875)
!10877 = !DILocation(line: 1319, column: 10, scope: !10875)
!10878 = !DILocation(line: 1319, column: 25, scope: !10879)
!10879 = !DILexicalBlockFile(scope: !10880, file: !898, discriminator: 1)
!10880 = distinct !DILexicalBlock(scope: !10875, file: !898, line: 1319, column: 5)
!10881 = !DILocation(line: 1319, column: 30, scope: !10879)
!10882 = !DILocation(line: 1319, column: 33, scope: !10879)
!10883 = !DILocation(line: 1319, column: 28, scope: !10879)
!10884 = !DILocation(line: 1319, column: 5, scope: !10879)
!10885 = !DILocation(line: 1320, column: 21, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10880, file: !898, line: 1320, column: 9)
!10887 = !DILocation(line: 1320, column: 24, scope: !10886)
!10888 = !DILocation(line: 1320, column: 19, scope: !10886)
!10889 = !DILocation(line: 1320, column: 14, scope: !10886)
!10890 = !DILocation(line: 1320, column: 43, scope: !10891)
!10891 = !DILexicalBlockFile(scope: !10892, file: !898, discriminator: 1)
!10892 = distinct !DILexicalBlock(scope: !10886, file: !898, line: 1320, column: 9)
!10893 = !DILocation(line: 1320, column: 63, scope: !10891)
!10894 = !DILocation(line: 1320, column: 50, scope: !10891)
!10895 = !DILocation(line: 1320, column: 53, scope: !10891)
!10896 = !DILocation(line: 1320, column: 48, scope: !10891)
!10897 = !DILocation(line: 1320, column: 9, scope: !10891)
!10898 = !DILocation(line: 1321, column: 40, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10892, file: !898, line: 1321, column: 17)
!10900 = !DILocation(line: 1321, column: 17, scope: !10899)
!10901 = !DILocation(line: 1321, column: 36, scope: !10899)
!10902 = !DILocation(line: 1321, column: 20, scope: !10899)
!10903 = !DILocation(line: 1321, column: 17, scope: !10892)
!10904 = !DILocation(line: 1322, column: 62, scope: !10899)
!10905 = !DILocation(line: 1322, column: 65, scope: !10899)
!10906 = !DILocation(line: 1322, column: 52, scope: !10899)
!10907 = !DILocation(line: 1322, column: 44, scope: !10899)
!10908 = !DILocation(line: 1322, column: 17, scope: !10899)
!10909 = !DILocation(line: 1322, column: 40, scope: !10899)
!10910 = !DILocation(line: 1322, column: 20, scope: !10899)
!10911 = !DILocation(line: 1322, column: 50, scope: !10899)
!10912 = !DILocation(line: 1321, column: 44, scope: !10913)
!10913 = !DILexicalBlockFile(scope: !10899, file: !898, discriminator: 1)
!10914 = !DILocation(line: 1320, column: 72, scope: !10915)
!10915 = !DILexicalBlockFile(scope: !10892, file: !898, discriminator: 2)
!10916 = !DILocation(line: 1320, column: 9, scope: !10915)
!10917 = distinct !{!10917, !10918}
!10918 = !DILocation(line: 1320, column: 9, scope: !10880)
!10919 = !DILocation(line: 1322, column: 71, scope: !10920)
!10920 = !DILexicalBlockFile(scope: !10886, file: !898, discriminator: 1)
!10921 = !DILocation(line: 1319, column: 50, scope: !10922)
!10922 = !DILexicalBlockFile(scope: !10880, file: !898, discriminator: 2)
!10923 = !DILocation(line: 1319, column: 5, scope: !10922)
!10924 = distinct !{!10924, !10925}
!10925 = !DILocation(line: 1319, column: 5, scope: !10812)
!10926 = !DILocation(line: 1325, column: 15, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1325, column: 5)
!10928 = !DILocation(line: 1325, column: 13, scope: !10927)
!10929 = !DILocation(line: 1325, column: 10, scope: !10927)
!10930 = !DILocation(line: 1325, column: 25, scope: !10931)
!10931 = !DILexicalBlockFile(scope: !10932, file: !898, discriminator: 1)
!10932 = distinct !DILexicalBlock(scope: !10927, file: !898, line: 1325, column: 5)
!10933 = !DILocation(line: 1325, column: 30, scope: !10931)
!10934 = !DILocation(line: 1325, column: 33, scope: !10931)
!10935 = !DILocation(line: 1325, column: 28, scope: !10931)
!10936 = !DILocation(line: 1325, column: 5, scope: !10931)
!10937 = !DILocalVariable(name: "sel", scope: !10938, file: !898, line: 1326, type: !1027)
!10938 = distinct !DILexicalBlock(scope: !10932, file: !898, line: 1325, column: 54)
!10939 = !DILocation(line: 1326, column: 13, scope: !10938)
!10940 = !DILocation(line: 1326, column: 41, scope: !10938)
!10941 = !DILocation(line: 1326, column: 19, scope: !10938)
!10942 = !DILocation(line: 1326, column: 22, scope: !10938)
!10943 = !DILocalVariable(name: "abits", scope: !10938, file: !898, line: 1327, type: !1027)
!10944 = !DILocation(line: 1327, column: 13, scope: !10938)
!10945 = !DILocation(line: 1329, column: 21, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10938, file: !898, line: 1329, column: 9)
!10947 = !DILocation(line: 1329, column: 24, scope: !10946)
!10948 = !DILocation(line: 1329, column: 19, scope: !10946)
!10949 = !DILocation(line: 1329, column: 14, scope: !10946)
!10950 = !DILocation(line: 1329, column: 43, scope: !10951)
!10951 = !DILexicalBlockFile(scope: !10952, file: !898, discriminator: 1)
!10952 = distinct !DILexicalBlock(scope: !10946, file: !898, line: 1329, column: 9)
!10953 = !DILocation(line: 1329, column: 63, scope: !10951)
!10954 = !DILocation(line: 1329, column: 50, scope: !10951)
!10955 = !DILocation(line: 1329, column: 53, scope: !10951)
!10956 = !DILocation(line: 1329, column: 48, scope: !10951)
!10957 = !DILocation(line: 1329, column: 9, scope: !10951)
!10958 = !DILocation(line: 1331, column: 17, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !898, line: 1331, column: 17)
!10960 = distinct !DILexicalBlock(scope: !10952, file: !898, line: 1329, column: 76)
!10961 = !DILocation(line: 1331, column: 21, scope: !10959)
!10962 = !DILocation(line: 1331, column: 17, scope: !10960)
!10963 = !DILocation(line: 1332, column: 39, scope: !10959)
!10964 = !DILocation(line: 1332, column: 42, scope: !10959)
!10965 = !DILocation(line: 1332, column: 78, scope: !10959)
!10966 = !DILocation(line: 1332, column: 81, scope: !10959)
!10967 = !DILocation(line: 1332, column: 76, scope: !10959)
!10968 = !DILocation(line: 1332, column: 72, scope: !10959)
!10969 = !DILocation(line: 1332, column: 47, scope: !10959)
!10970 = !DILocation(line: 1332, column: 96, scope: !10959)
!10971 = !DILocation(line: 1332, column: 26, scope: !10959)
!10972 = !DILocation(line: 1332, column: 23, scope: !10959)
!10973 = !DILocation(line: 1332, column: 17, scope: !10959)
!10974 = !DILocation(line: 1334, column: 35, scope: !10959)
!10975 = !DILocation(line: 1334, column: 38, scope: !10959)
!10976 = !DILocation(line: 1334, column: 46, scope: !10959)
!10977 = !DILocation(line: 1334, column: 49, scope: !10959)
!10978 = !DILocation(line: 1334, column: 44, scope: !10959)
!10979 = !DILocation(line: 1334, column: 25, scope: !10959)
!10980 = !DILocation(line: 1334, column: 23, scope: !10959)
!10981 = !DILocation(line: 1336, column: 17, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10960, file: !898, line: 1336, column: 17)
!10983 = !DILocation(line: 1336, column: 23, scope: !10982)
!10984 = !DILocation(line: 1336, column: 27, scope: !10982)
!10985 = !DILocation(line: 1336, column: 30, scope: !10986)
!10986 = !DILexicalBlockFile(scope: !10982, file: !898, discriminator: 1)
!10987 = !DILocation(line: 1336, column: 46, scope: !10986)
!10988 = !DILocation(line: 1336, column: 49, scope: !10986)
!10989 = !DILocation(line: 1336, column: 44, scope: !10986)
!10990 = !DILocation(line: 1336, column: 40, scope: !10986)
!10991 = !DILocation(line: 1336, column: 36, scope: !10986)
!10992 = !DILocation(line: 1336, column: 17, scope: !10986)
!10993 = !DILocation(line: 1337, column: 24, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10982, file: !898, line: 1336, column: 63)
!10995 = !DILocation(line: 1337, column: 27, scope: !10994)
!10996 = !DILocation(line: 1337, column: 17, scope: !10994)
!10997 = !DILocation(line: 1338, column: 17, scope: !10994)
!10998 = !DILocation(line: 1341, column: 43, scope: !10960)
!10999 = !DILocation(line: 1341, column: 35, scope: !10960)
!11000 = !DILocation(line: 1341, column: 13, scope: !10960)
!11001 = !DILocation(line: 1341, column: 31, scope: !10960)
!11002 = !DILocation(line: 1341, column: 16, scope: !10960)
!11003 = !DILocation(line: 1341, column: 41, scope: !10960)
!11004 = !DILocation(line: 1342, column: 9, scope: !10960)
!11005 = !DILocation(line: 1329, column: 72, scope: !11006)
!11006 = !DILexicalBlockFile(scope: !10952, file: !898, discriminator: 2)
!11007 = !DILocation(line: 1329, column: 9, scope: !11006)
!11008 = distinct !{!11008, !11009}
!11009 = !DILocation(line: 1329, column: 9, scope: !10938)
!11010 = !DILocation(line: 1343, column: 5, scope: !10938)
!11011 = !DILocation(line: 1325, column: 50, scope: !11012)
!11012 = !DILexicalBlockFile(scope: !10932, file: !898, discriminator: 2)
!11013 = !DILocation(line: 1325, column: 5, scope: !11012)
!11014 = distinct !{!11014, !11015}
!11015 = !DILocation(line: 1325, column: 5, scope: !10812)
!11016 = !DILocation(line: 1346, column: 15, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1346, column: 5)
!11018 = !DILocation(line: 1346, column: 13, scope: !11017)
!11019 = !DILocation(line: 1346, column: 10, scope: !11017)
!11020 = !DILocation(line: 1346, column: 25, scope: !11021)
!11021 = !DILexicalBlockFile(scope: !11022, file: !898, discriminator: 1)
!11022 = distinct !DILexicalBlock(scope: !11017, file: !898, line: 1346, column: 5)
!11023 = !DILocation(line: 1346, column: 30, scope: !11021)
!11024 = !DILocation(line: 1346, column: 33, scope: !11021)
!11025 = !DILocation(line: 1346, column: 28, scope: !11021)
!11026 = !DILocation(line: 1346, column: 5, scope: !11021)
!11027 = !DILocalVariable(name: "sel", scope: !11028, file: !898, line: 1347, type: !1027)
!11028 = distinct !DILexicalBlock(scope: !11022, file: !898, line: 1346, column: 54)
!11029 = !DILocation(line: 1347, column: 13, scope: !11028)
!11030 = !DILocation(line: 1347, column: 39, scope: !11028)
!11031 = !DILocation(line: 1347, column: 19, scope: !11028)
!11032 = !DILocation(line: 1347, column: 22, scope: !11028)
!11033 = !DILocalVariable(name: "scale_index", scope: !11028, file: !898, line: 1348, type: !1027)
!11034 = !DILocation(line: 1348, column: 13, scope: !11028)
!11035 = !DILocation(line: 1352, column: 21, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11028, file: !898, line: 1352, column: 9)
!11037 = !DILocation(line: 1352, column: 24, scope: !11036)
!11038 = !DILocation(line: 1352, column: 19, scope: !11036)
!11039 = !DILocation(line: 1352, column: 14, scope: !11036)
!11040 = !DILocation(line: 1352, column: 43, scope: !11041)
!11041 = !DILexicalBlockFile(scope: !11042, file: !898, discriminator: 1)
!11042 = distinct !DILexicalBlock(scope: !11036, file: !898, line: 1352, column: 9)
!11043 = !DILocation(line: 1352, column: 63, scope: !11041)
!11044 = !DILocation(line: 1352, column: 50, scope: !11041)
!11045 = !DILocation(line: 1352, column: 53, scope: !11041)
!11046 = !DILocation(line: 1352, column: 48, scope: !11041)
!11047 = !DILocation(line: 1352, column: 9, scope: !11041)
!11048 = !DILocation(line: 1353, column: 36, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !898, line: 1353, column: 17)
!11050 = distinct !DILexicalBlock(scope: !11042, file: !898, line: 1352, column: 76)
!11051 = !DILocation(line: 1353, column: 53, scope: !11049)
!11052 = !DILocation(line: 1353, column: 24, scope: !11049)
!11053 = !DILocation(line: 1353, column: 22, scope: !11049)
!11054 = !DILocation(line: 1353, column: 59, scope: !11049)
!11055 = !DILocation(line: 1353, column: 17, scope: !11050)
!11056 = !DILocation(line: 1354, column: 24, scope: !11049)
!11057 = !DILocation(line: 1354, column: 17, scope: !11049)
!11058 = !DILocation(line: 1355, column: 57, scope: !11050)
!11059 = !DILocation(line: 1355, column: 45, scope: !11050)
!11060 = !DILocation(line: 1355, column: 50, scope: !11050)
!11061 = !DILocation(line: 1355, column: 13, scope: !11050)
!11062 = !DILocation(line: 1355, column: 34, scope: !11050)
!11063 = !DILocation(line: 1355, column: 39, scope: !11050)
!11064 = !DILocation(line: 1355, column: 30, scope: !11050)
!11065 = !DILocation(line: 1355, column: 16, scope: !11050)
!11066 = !DILocation(line: 1355, column: 55, scope: !11050)
!11067 = !DILocation(line: 1356, column: 9, scope: !11050)
!11068 = !DILocation(line: 1352, column: 72, scope: !11069)
!11069 = !DILexicalBlockFile(scope: !11042, file: !898, discriminator: 2)
!11070 = !DILocation(line: 1352, column: 9, scope: !11069)
!11071 = distinct !{!11071, !11072}
!11072 = !DILocation(line: 1352, column: 9, scope: !11028)
!11073 = !DILocation(line: 1357, column: 5, scope: !11028)
!11074 = !DILocation(line: 1346, column: 50, scope: !11075)
!11075 = !DILexicalBlockFile(scope: !11022, file: !898, discriminator: 2)
!11076 = !DILocation(line: 1346, column: 5, scope: !11075)
!11077 = distinct !{!11077, !11078}
!11078 = !DILocation(line: 1346, column: 5, scope: !10812)
!11079 = !DILocation(line: 1360, column: 15, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1360, column: 5)
!11081 = !DILocation(line: 1360, column: 13, scope: !11080)
!11082 = !DILocation(line: 1360, column: 10, scope: !11080)
!11083 = !DILocation(line: 1360, column: 25, scope: !11084)
!11084 = !DILexicalBlockFile(scope: !11085, file: !898, discriminator: 1)
!11085 = distinct !DILexicalBlock(scope: !11080, file: !898, line: 1360, column: 5)
!11086 = !DILocation(line: 1360, column: 30, scope: !11084)
!11087 = !DILocation(line: 1360, column: 33, scope: !11084)
!11088 = !DILocation(line: 1360, column: 28, scope: !11084)
!11089 = !DILocation(line: 1360, column: 5, scope: !11084)
!11090 = !DILocation(line: 1361, column: 38, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11092, file: !898, line: 1361, column: 13)
!11092 = distinct !DILexicalBlock(scope: !11085, file: !898, line: 1360, column: 54)
!11093 = !DILocation(line: 1361, column: 13, scope: !11091)
!11094 = !DILocation(line: 1361, column: 16, scope: !11091)
!11095 = !DILocation(line: 1361, column: 13, scope: !11092)
!11096 = !DILocation(line: 1362, column: 48, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11091, file: !898, line: 1361, column: 43)
!11098 = !DILocation(line: 1362, column: 51, scope: !11097)
!11099 = !DILocation(line: 1362, column: 38, scope: !11097)
!11100 = !DILocation(line: 1362, column: 32, scope: !11097)
!11101 = !DILocation(line: 1362, column: 13, scope: !11097)
!11102 = !DILocation(line: 1362, column: 16, scope: !11097)
!11103 = !DILocation(line: 1362, column: 36, scope: !11097)
!11104 = !DILocation(line: 1363, column: 36, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11097, file: !898, line: 1363, column: 17)
!11106 = !DILocation(line: 1363, column: 17, scope: !11105)
!11107 = !DILocation(line: 1363, column: 20, scope: !11105)
!11108 = !DILocation(line: 1363, column: 40, scope: !11105)
!11109 = !DILocation(line: 1363, column: 17, scope: !11097)
!11110 = !DILocation(line: 1364, column: 24, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11105, file: !898, line: 1363, column: 46)
!11112 = !DILocation(line: 1364, column: 27, scope: !11111)
!11113 = !DILocation(line: 1364, column: 17, scope: !11111)
!11114 = !DILocation(line: 1365, column: 17, scope: !11111)
!11115 = !DILocation(line: 1367, column: 9, scope: !11097)
!11116 = !DILocation(line: 1368, column: 5, scope: !11092)
!11117 = !DILocation(line: 1360, column: 50, scope: !11118)
!11118 = !DILexicalBlockFile(scope: !11085, file: !898, discriminator: 2)
!11119 = !DILocation(line: 1360, column: 5, scope: !11118)
!11120 = distinct !{!11120, !11121}
!11121 = !DILocation(line: 1360, column: 5, scope: !10812)
!11122 = !DILocation(line: 1371, column: 15, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1371, column: 5)
!11124 = !DILocation(line: 1371, column: 13, scope: !11123)
!11125 = !DILocation(line: 1371, column: 10, scope: !11123)
!11126 = !DILocation(line: 1371, column: 25, scope: !11127)
!11127 = !DILexicalBlockFile(scope: !11128, file: !898, discriminator: 1)
!11128 = distinct !DILexicalBlock(scope: !11123, file: !898, line: 1371, column: 5)
!11129 = !DILocation(line: 1371, column: 30, scope: !11127)
!11130 = !DILocation(line: 1371, column: 33, scope: !11127)
!11131 = !DILocation(line: 1371, column: 28, scope: !11127)
!11132 = !DILocation(line: 1371, column: 5, scope: !11127)
!11133 = !DILocalVariable(name: "src_ch", scope: !11134, file: !898, line: 1372, type: !1027)
!11134 = distinct !DILexicalBlock(scope: !11128, file: !898, line: 1371, column: 54)
!11135 = !DILocation(line: 1372, column: 13, scope: !11134)
!11136 = !DILocation(line: 1372, column: 47, scope: !11134)
!11137 = !DILocation(line: 1372, column: 22, scope: !11134)
!11138 = !DILocation(line: 1372, column: 25, scope: !11134)
!11139 = !DILocation(line: 1372, column: 51, scope: !11134)
!11140 = !DILocation(line: 1373, column: 13, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11134, file: !898, line: 1373, column: 13)
!11142 = !DILocation(line: 1373, column: 20, scope: !11141)
!11143 = !DILocation(line: 1373, column: 13, scope: !11134)
!11144 = !DILocalVariable(name: "sel", scope: !11145, file: !898, line: 1374, type: !1027)
!11145 = distinct !DILexicalBlock(scope: !11141, file: !898, line: 1373, column: 26)
!11146 = !DILocation(line: 1374, column: 17, scope: !11145)
!11147 = !DILocation(line: 1374, column: 42, scope: !11145)
!11148 = !DILocation(line: 1374, column: 23, scope: !11145)
!11149 = !DILocation(line: 1374, column: 26, scope: !11145)
!11150 = !DILocation(line: 1375, column: 38, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11145, file: !898, line: 1375, column: 13)
!11152 = !DILocation(line: 1375, column: 25, scope: !11151)
!11153 = !DILocation(line: 1375, column: 28, scope: !11151)
!11154 = !DILocation(line: 1375, column: 23, scope: !11151)
!11155 = !DILocation(line: 1375, column: 18, scope: !11151)
!11156 = !DILocation(line: 1375, column: 43, scope: !11157)
!11157 = !DILexicalBlockFile(scope: !11158, file: !898, discriminator: 1)
!11158 = distinct !DILexicalBlock(scope: !11151, file: !898, line: 1375, column: 13)
!11159 = !DILocation(line: 1375, column: 63, scope: !11157)
!11160 = !DILocation(line: 1375, column: 50, scope: !11157)
!11161 = !DILocation(line: 1375, column: 53, scope: !11157)
!11162 = !DILocation(line: 1375, column: 48, scope: !11157)
!11163 = !DILocation(line: 1375, column: 13, scope: !11157)
!11164 = !DILocation(line: 1376, column: 46, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !898, line: 1376, column: 21)
!11166 = distinct !DILexicalBlock(scope: !11158, file: !898, line: 1375, column: 80)
!11167 = !DILocation(line: 1376, column: 49, scope: !11165)
!11168 = !DILocation(line: 1376, column: 28, scope: !11165)
!11169 = !DILocation(line: 1376, column: 26, scope: !11165)
!11170 = !DILocation(line: 1376, column: 55, scope: !11165)
!11171 = !DILocation(line: 1376, column: 21, scope: !11166)
!11172 = !DILocation(line: 1377, column: 28, scope: !11165)
!11173 = !DILocation(line: 1377, column: 21, scope: !11165)
!11174 = !DILocation(line: 1378, column: 52, scope: !11166)
!11175 = !DILocation(line: 1378, column: 44, scope: !11166)
!11176 = !DILocation(line: 1378, column: 17, scope: !11166)
!11177 = !DILocation(line: 1378, column: 40, scope: !11166)
!11178 = !DILocation(line: 1378, column: 20, scope: !11166)
!11179 = !DILocation(line: 1378, column: 50, scope: !11166)
!11180 = !DILocation(line: 1379, column: 13, scope: !11166)
!11181 = !DILocation(line: 1375, column: 76, scope: !11182)
!11182 = !DILexicalBlockFile(scope: !11158, file: !898, discriminator: 2)
!11183 = !DILocation(line: 1375, column: 13, scope: !11182)
!11184 = distinct !{!11184, !11185}
!11185 = !DILocation(line: 1375, column: 13, scope: !11145)
!11186 = !DILocation(line: 1380, column: 9, scope: !11145)
!11187 = !DILocation(line: 1381, column: 5, scope: !11134)
!11188 = !DILocation(line: 1371, column: 50, scope: !11189)
!11189 = !DILexicalBlockFile(scope: !11128, file: !898, discriminator: 2)
!11190 = !DILocation(line: 1371, column: 5, scope: !11189)
!11191 = distinct !{!11191, !11192}
!11192 = !DILocation(line: 1371, column: 5, scope: !10812)
!11193 = !DILocation(line: 1384, column: 9, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !10812, file: !898, line: 1384, column: 9)
!11195 = !DILocation(line: 1384, column: 12, scope: !11194)
!11196 = !DILocation(line: 1384, column: 9, scope: !10812)
!11197 = !DILocation(line: 1385, column: 20, scope: !11194)
!11198 = !DILocation(line: 1385, column: 23, scope: !11194)
!11199 = !DILocation(line: 1385, column: 9, scope: !11194)
!11200 = !DILocation(line: 1387, column: 5, scope: !10812)
!11201 = !DILocation(line: 1388, column: 1, scope: !10812)
!11202 = distinct !DISubprogram(name: "parse_x96_subframe_audio", scope: !898, file: !898, line: 1159, type: !11203, isLocal: true, isDefinition: true, scopeLine: 1160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{!1027, !1094, !1027, !1027, !1385}
!11205 = !DILocalVariable(name: "s", arg: 1, scope: !11202, file: !898, line: 1159, type: !1094)
!11206 = !DILocation(line: 1159, column: 53, scope: !11202)
!11207 = !DILocalVariable(name: "sf", arg: 2, scope: !11202, file: !898, line: 1159, type: !1027)
!11208 = !DILocation(line: 1159, column: 60, scope: !11202)
!11209 = !DILocalVariable(name: "xch_base", arg: 3, scope: !11202, file: !898, line: 1159, type: !1027)
!11210 = !DILocation(line: 1159, column: 68, scope: !11202)
!11211 = !DILocalVariable(name: "sub_pos", arg: 4, scope: !11202, file: !898, line: 1159, type: !1385)
!11212 = !DILocation(line: 1159, column: 83, scope: !11202)
!11213 = !DILocalVariable(name: "n", scope: !11202, file: !898, line: 1161, type: !1027)
!11214 = !DILocation(line: 1161, column: 9, scope: !11202)
!11215 = !DILocalVariable(name: "ssf", scope: !11202, file: !898, line: 1161, type: !1027)
!11216 = !DILocation(line: 1161, column: 12, scope: !11202)
!11217 = !DILocalVariable(name: "ch", scope: !11202, file: !898, line: 1161, type: !1027)
!11218 = !DILocation(line: 1161, column: 17, scope: !11202)
!11219 = !DILocalVariable(name: "band", scope: !11202, file: !898, line: 1161, type: !1027)
!11220 = !DILocation(line: 1161, column: 21, scope: !11202)
!11221 = !DILocalVariable(name: "ofs", scope: !11202, file: !898, line: 1161, type: !1027)
!11222 = !DILocation(line: 1161, column: 27, scope: !11202)
!11223 = !DILocalVariable(name: "nsamples", scope: !11202, file: !898, line: 1164, type: !1027)
!11224 = !DILocation(line: 1164, column: 9, scope: !11202)
!11225 = !DILocation(line: 1164, column: 37, scope: !11202)
!11226 = !DILocation(line: 1164, column: 20, scope: !11202)
!11227 = !DILocation(line: 1164, column: 23, scope: !11202)
!11228 = !DILocation(line: 1164, column: 41, scope: !11202)
!11229 = !DILocation(line: 1165, column: 10, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1165, column: 9)
!11231 = !DILocation(line: 1165, column: 9, scope: !11230)
!11232 = !DILocation(line: 1165, column: 20, scope: !11230)
!11233 = !DILocation(line: 1165, column: 18, scope: !11230)
!11234 = !DILocation(line: 1165, column: 31, scope: !11230)
!11235 = !DILocation(line: 1165, column: 34, scope: !11230)
!11236 = !DILocation(line: 1165, column: 29, scope: !11230)
!11237 = !DILocation(line: 1165, column: 9, scope: !11202)
!11238 = !DILocation(line: 1166, column: 16, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11230, file: !898, line: 1165, column: 46)
!11240 = !DILocation(line: 1166, column: 19, scope: !11239)
!11241 = !DILocation(line: 1166, column: 9, scope: !11239)
!11242 = !DILocation(line: 1167, column: 9, scope: !11239)
!11243 = !DILocation(line: 1170, column: 24, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1170, column: 9)
!11245 = !DILocation(line: 1170, column: 27, scope: !11244)
!11246 = !DILocation(line: 1170, column: 9, scope: !11244)
!11247 = !DILocation(line: 1170, column: 31, scope: !11244)
!11248 = !DILocation(line: 1170, column: 9, scope: !11202)
!11249 = !DILocation(line: 1171, column: 9, scope: !11244)
!11250 = !DILocation(line: 1174, column: 15, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1174, column: 5)
!11252 = !DILocation(line: 1174, column: 13, scope: !11251)
!11253 = !DILocation(line: 1174, column: 10, scope: !11251)
!11254 = !DILocation(line: 1174, column: 25, scope: !11255)
!11255 = !DILexicalBlockFile(scope: !11256, file: !898, discriminator: 1)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !898, line: 1174, column: 5)
!11257 = !DILocation(line: 1174, column: 30, scope: !11255)
!11258 = !DILocation(line: 1174, column: 33, scope: !11255)
!11259 = !DILocation(line: 1174, column: 28, scope: !11255)
!11260 = !DILocation(line: 1174, column: 5, scope: !11255)
!11261 = !DILocation(line: 1175, column: 21, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !898, line: 1175, column: 9)
!11263 = distinct !DILexicalBlock(scope: !11256, file: !898, line: 1174, column: 54)
!11264 = !DILocation(line: 1175, column: 24, scope: !11262)
!11265 = !DILocation(line: 1175, column: 19, scope: !11262)
!11266 = !DILocation(line: 1175, column: 14, scope: !11262)
!11267 = !DILocation(line: 1175, column: 43, scope: !11268)
!11268 = !DILexicalBlockFile(scope: !11269, file: !898, discriminator: 1)
!11269 = distinct !DILexicalBlock(scope: !11262, file: !898, line: 1175, column: 9)
!11270 = !DILocation(line: 1175, column: 63, scope: !11268)
!11271 = !DILocation(line: 1175, column: 50, scope: !11268)
!11272 = !DILocation(line: 1175, column: 53, scope: !11268)
!11273 = !DILocation(line: 1175, column: 48, scope: !11268)
!11274 = !DILocation(line: 1175, column: 9, scope: !11268)
!11275 = !DILocalVariable(name: "samples", scope: !11276, file: !898, line: 1177, type: !1029)
!11276 = distinct !DILexicalBlock(scope: !11269, file: !898, line: 1175, column: 76)
!11277 = !DILocation(line: 1177, column: 22, scope: !11276)
!11278 = !DILocation(line: 1177, column: 59, scope: !11276)
!11279 = !DILocation(line: 1177, column: 32, scope: !11276)
!11280 = !DILocation(line: 1177, column: 55, scope: !11276)
!11281 = !DILocation(line: 1177, column: 35, scope: !11276)
!11282 = !DILocation(line: 1177, column: 68, scope: !11276)
!11283 = !DILocation(line: 1177, column: 67, scope: !11276)
!11284 = !DILocation(line: 1177, column: 65, scope: !11276)
!11285 = !DILocalVariable(name: "scale", scope: !11276, file: !898, line: 1178, type: !1030)
!11286 = !DILocation(line: 1178, column: 21, scope: !11276)
!11287 = !DILocation(line: 1178, column: 61, scope: !11276)
!11288 = !DILocation(line: 1178, column: 66, scope: !11276)
!11289 = !DILocation(line: 1178, column: 29, scope: !11276)
!11290 = !DILocation(line: 1178, column: 50, scope: !11276)
!11291 = !DILocation(line: 1178, column: 55, scope: !11276)
!11292 = !DILocation(line: 1178, column: 46, scope: !11276)
!11293 = !DILocation(line: 1178, column: 32, scope: !11276)
!11294 = !DILocation(line: 1180, column: 43, scope: !11276)
!11295 = !DILocation(line: 1180, column: 21, scope: !11276)
!11296 = !DILocation(line: 1180, column: 39, scope: !11276)
!11297 = !DILocation(line: 1180, column: 24, scope: !11276)
!11298 = !DILocation(line: 1180, column: 13, scope: !11276)
!11299 = !DILocation(line: 1182, column: 21, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !898, line: 1182, column: 21)
!11301 = distinct !DILexicalBlock(scope: !11276, file: !898, line: 1180, column: 50)
!11302 = !DILocation(line: 1182, column: 27, scope: !11300)
!11303 = !DILocation(line: 1182, column: 21, scope: !11301)
!11304 = !DILocation(line: 1183, column: 28, scope: !11300)
!11305 = !DILocation(line: 1183, column: 21, scope: !11300)
!11306 = !DILocation(line: 1183, column: 40, scope: !11300)
!11307 = !DILocation(line: 1183, column: 49, scope: !11300)
!11308 = !DILocation(line: 1184, column: 29, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11300, file: !898, line: 1184, column: 22)
!11310 = !DILocation(line: 1184, column: 27, scope: !11309)
!11311 = !DILocation(line: 1184, column: 34, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !11313, file: !898, discriminator: 1)
!11313 = distinct !DILexicalBlock(scope: !11309, file: !898, line: 1184, column: 22)
!11314 = !DILocation(line: 1184, column: 38, scope: !11312)
!11315 = !DILocation(line: 1184, column: 36, scope: !11312)
!11316 = !DILocation(line: 1184, column: 22, scope: !11312)
!11317 = !DILocation(line: 1186, column: 49, scope: !11313)
!11318 = !DILocation(line: 1186, column: 40, scope: !11313)
!11319 = !DILocation(line: 1186, column: 53, scope: !11313)
!11320 = !DILocation(line: 1186, column: 34, scope: !11312)
!11321 = !DILocation(line: 1186, column: 29, scope: !11313)
!11322 = !DILocation(line: 1186, column: 21, scope: !11313)
!11323 = !DILocation(line: 1186, column: 32, scope: !11313)
!11324 = !DILocation(line: 1184, column: 49, scope: !11325)
!11325 = !DILexicalBlockFile(scope: !11313, file: !898, discriminator: 2)
!11326 = !DILocation(line: 1184, column: 22, scope: !11325)
!11327 = distinct !{!11327, !11328}
!11328 = !DILocation(line: 1184, column: 22, scope: !11300)
!11329 = !DILocation(line: 1187, column: 17, scope: !11301)
!11330 = !DILocation(line: 1190, column: 26, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11301, file: !898, line: 1190, column: 17)
!11332 = !DILocation(line: 1190, column: 22, scope: !11331)
!11333 = !DILocation(line: 1190, column: 31, scope: !11334)
!11334 = !DILexicalBlockFile(scope: !11335, file: !898, discriminator: 1)
!11335 = distinct !DILexicalBlock(scope: !11331, file: !898, line: 1190, column: 17)
!11336 = !DILocation(line: 1190, column: 55, scope: !11334)
!11337 = !DILocation(line: 1190, column: 38, scope: !11334)
!11338 = !DILocation(line: 1190, column: 41, scope: !11334)
!11339 = !DILocation(line: 1190, column: 59, scope: !11334)
!11340 = !DILocation(line: 1190, column: 64, scope: !11334)
!11341 = !DILocation(line: 1190, column: 35, scope: !11334)
!11342 = !DILocation(line: 1190, column: 17, scope: !11334)
!11343 = !DILocalVariable(name: "vq_samples", scope: !11344, file: !898, line: 1193, type: !9158)
!11344 = distinct !DILexicalBlock(scope: !11335, file: !898, line: 1190, column: 76)
!11345 = !DILocation(line: 1193, column: 35, scope: !11344)
!11346 = !DILocation(line: 1193, column: 78, scope: !11344)
!11347 = !DILocation(line: 1193, column: 81, scope: !11344)
!11348 = !DILocation(line: 1193, column: 68, scope: !11344)
!11349 = !DILocation(line: 1193, column: 48, scope: !11344)
!11350 = !DILocation(line: 1195, column: 28, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11344, file: !898, line: 1195, column: 21)
!11352 = !DILocation(line: 1195, column: 26, scope: !11351)
!11353 = !DILocation(line: 1195, column: 33, scope: !11354)
!11354 = !DILexicalBlockFile(scope: !11355, file: !898, discriminator: 1)
!11355 = distinct !DILexicalBlock(scope: !11351, file: !898, line: 1195, column: 21)
!11356 = !DILocation(line: 1195, column: 39, scope: !11354)
!11357 = !DILocation(line: 1195, column: 50, scope: !11354)
!11358 = !DILocation(line: 1195, column: 54, scope: !11354)
!11359 = !DILocation(line: 1195, column: 48, scope: !11354)
!11360 = !DILocation(line: 1195, column: 60, scope: !11354)
!11361 = !DILocation(line: 1195, column: 38, scope: !11354)
!11362 = !DILocation(line: 1195, column: 38, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11355, file: !898, discriminator: 2)
!11364 = !DILocation(line: 1195, column: 77, scope: !11365)
!11365 = !DILexicalBlockFile(scope: !11355, file: !898, discriminator: 3)
!11366 = !DILocation(line: 1195, column: 88, scope: !11365)
!11367 = !DILocation(line: 1195, column: 92, scope: !11365)
!11368 = !DILocation(line: 1195, column: 86, scope: !11365)
!11369 = !DILocation(line: 1195, column: 38, scope: !11365)
!11370 = !DILocation(line: 1195, column: 38, scope: !11371)
!11371 = !DILexicalBlockFile(scope: !11355, file: !898, discriminator: 4)
!11372 = !DILocation(line: 1195, column: 35, scope: !11371)
!11373 = !DILocation(line: 1195, column: 21, scope: !11371)
!11374 = !DILocation(line: 1196, column: 56, scope: !11355)
!11375 = !DILocation(line: 1196, column: 45, scope: !11355)
!11376 = !DILocation(line: 1196, column: 61, scope: !11355)
!11377 = !DILocation(line: 1196, column: 59, scope: !11355)
!11378 = !DILocation(line: 1196, column: 67, scope: !11355)
!11379 = !DILocation(line: 1196, column: 78, scope: !11355)
!11380 = !DILocation(line: 1196, column: 38, scope: !11355)
!11381 = !DILocation(line: 1196, column: 33, scope: !11355)
!11382 = !DILocation(line: 1196, column: 36, scope: !11355)
!11383 = !DILocation(line: 1196, column: 25, scope: !11355)
!11384 = !DILocation(line: 1195, column: 101, scope: !11385)
!11385 = !DILexicalBlockFile(scope: !11355, file: !898, discriminator: 5)
!11386 = !DILocation(line: 1195, column: 21, scope: !11385)
!11387 = distinct !{!11387, !11388}
!11388 = !DILocation(line: 1195, column: 21, scope: !11344)
!11389 = !DILocation(line: 1197, column: 17, scope: !11344)
!11390 = !DILocation(line: 1190, column: 72, scope: !11391)
!11391 = !DILexicalBlockFile(scope: !11335, file: !898, discriminator: 2)
!11392 = !DILocation(line: 1190, column: 17, scope: !11391)
!11393 = distinct !{!11393, !11394}
!11394 = !DILocation(line: 1190, column: 17, scope: !11301)
!11395 = !DILocation(line: 1198, column: 17, scope: !11301)
!11396 = !DILocation(line: 1200, column: 9, scope: !11276)
!11397 = !DILocation(line: 1175, column: 72, scope: !11398)
!11398 = !DILexicalBlockFile(scope: !11269, file: !898, discriminator: 2)
!11399 = !DILocation(line: 1175, column: 9, scope: !11398)
!11400 = distinct !{!11400, !11401}
!11401 = !DILocation(line: 1175, column: 9, scope: !11263)
!11402 = !DILocation(line: 1201, column: 5, scope: !11263)
!11403 = !DILocation(line: 1174, column: 50, scope: !11404)
!11404 = !DILexicalBlockFile(scope: !11256, file: !898, discriminator: 2)
!11405 = !DILocation(line: 1174, column: 5, scope: !11404)
!11406 = distinct !{!11406, !11407}
!11407 = !DILocation(line: 1174, column: 5, scope: !11202)
!11408 = !DILocation(line: 1204, column: 14, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1204, column: 5)
!11410 = !DILocation(line: 1204, column: 26, scope: !11409)
!11411 = !DILocation(line: 1204, column: 25, scope: !11409)
!11412 = !DILocation(line: 1204, column: 23, scope: !11409)
!11413 = !DILocation(line: 1204, column: 10, scope: !11409)
!11414 = !DILocation(line: 1204, column: 35, scope: !11415)
!11415 = !DILexicalBlockFile(scope: !11416, file: !898, discriminator: 1)
!11416 = distinct !DILexicalBlock(scope: !11409, file: !898, line: 1204, column: 5)
!11417 = !DILocation(line: 1204, column: 58, scope: !11415)
!11418 = !DILocation(line: 1204, column: 41, scope: !11415)
!11419 = !DILocation(line: 1204, column: 44, scope: !11415)
!11420 = !DILocation(line: 1204, column: 39, scope: !11415)
!11421 = !DILocation(line: 1204, column: 5, scope: !11415)
!11422 = !DILocation(line: 1205, column: 19, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !898, line: 1205, column: 9)
!11424 = distinct !DILexicalBlock(scope: !11416, file: !898, line: 1204, column: 70)
!11425 = !DILocation(line: 1205, column: 17, scope: !11423)
!11426 = !DILocation(line: 1205, column: 14, scope: !11423)
!11427 = !DILocation(line: 1205, column: 29, scope: !11428)
!11428 = !DILexicalBlockFile(scope: !11429, file: !898, discriminator: 1)
!11429 = distinct !DILexicalBlock(scope: !11423, file: !898, line: 1205, column: 9)
!11430 = !DILocation(line: 1205, column: 34, scope: !11428)
!11431 = !DILocation(line: 1205, column: 37, scope: !11428)
!11432 = !DILocation(line: 1205, column: 32, scope: !11428)
!11433 = !DILocation(line: 1205, column: 9, scope: !11428)
!11434 = !DILocation(line: 1206, column: 32, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !898, line: 1206, column: 17)
!11436 = distinct !DILexicalBlock(scope: !11429, file: !898, line: 1205, column: 58)
!11437 = !DILocation(line: 1206, column: 35, scope: !11435)
!11438 = !DILocation(line: 1206, column: 17, scope: !11435)
!11439 = !DILocation(line: 1206, column: 39, scope: !11435)
!11440 = !DILocation(line: 1206, column: 17, scope: !11436)
!11441 = !DILocation(line: 1207, column: 17, scope: !11435)
!11442 = !DILocation(line: 1209, column: 25, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11436, file: !898, line: 1209, column: 13)
!11444 = !DILocation(line: 1209, column: 28, scope: !11443)
!11445 = !DILocation(line: 1209, column: 23, scope: !11443)
!11446 = !DILocation(line: 1209, column: 18, scope: !11443)
!11447 = !DILocation(line: 1209, column: 47, scope: !11448)
!11448 = !DILexicalBlockFile(scope: !11449, file: !898, discriminator: 1)
!11449 = distinct !DILexicalBlock(scope: !11443, file: !898, line: 1209, column: 13)
!11450 = !DILocation(line: 1209, column: 67, scope: !11448)
!11451 = !DILocation(line: 1209, column: 54, scope: !11448)
!11452 = !DILocation(line: 1209, column: 57, scope: !11448)
!11453 = !DILocation(line: 1209, column: 52, scope: !11448)
!11454 = !DILocation(line: 1209, column: 13, scope: !11448)
!11455 = !DILocalVariable(name: "ret", scope: !11456, file: !898, line: 1210, type: !1027)
!11456 = distinct !DILexicalBlock(scope: !11449, file: !898, line: 1209, column: 80)
!11457 = !DILocation(line: 1210, column: 21, scope: !11456)
!11458 = !DILocalVariable(name: "abits", scope: !11456, file: !898, line: 1210, type: !1027)
!11459 = !DILocation(line: 1210, column: 26, scope: !11456)
!11460 = !DILocation(line: 1210, column: 56, scope: !11456)
!11461 = !DILocation(line: 1210, column: 34, scope: !11456)
!11462 = !DILocation(line: 1210, column: 52, scope: !11456)
!11463 = !DILocation(line: 1210, column: 37, scope: !11456)
!11464 = !DILocation(line: 1210, column: 62, scope: !11456)
!11465 = !DILocalVariable(name: "audio", scope: !11456, file: !898, line: 1211, type: !10104)
!11466 = !DILocation(line: 1211, column: 25, scope: !11456)
!11467 = !DILocalVariable(name: "step_size", scope: !11456, file: !898, line: 1211, type: !1030)
!11468 = !DILocation(line: 1211, column: 35, scope: !11456)
!11469 = !DILocalVariable(name: "scale", scope: !11456, file: !898, line: 1211, type: !1030)
!11470 = !DILocation(line: 1211, column: 46, scope: !11456)
!11471 = !DILocation(line: 1214, column: 21, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11456, file: !898, line: 1214, column: 21)
!11473 = !DILocation(line: 1214, column: 27, scope: !11472)
!11474 = !DILocation(line: 1214, column: 21, scope: !11456)
!11475 = !DILocation(line: 1215, column: 21, scope: !11472)
!11476 = !DILocation(line: 1218, column: 42, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11456, file: !898, line: 1218, column: 21)
!11478 = !DILocation(line: 1218, column: 45, scope: !11477)
!11479 = !DILocation(line: 1218, column: 52, scope: !11477)
!11480 = !DILocation(line: 1218, column: 59, scope: !11477)
!11481 = !DILocation(line: 1218, column: 28, scope: !11477)
!11482 = !DILocation(line: 1218, column: 26, scope: !11477)
!11483 = !DILocation(line: 1218, column: 64, scope: !11477)
!11484 = !DILocation(line: 1218, column: 21, scope: !11456)
!11485 = !DILocation(line: 1219, column: 28, scope: !11477)
!11486 = !DILocation(line: 1219, column: 21, scope: !11477)
!11487 = !DILocation(line: 1223, column: 21, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11456, file: !898, line: 1223, column: 21)
!11489 = !DILocation(line: 1223, column: 24, scope: !11488)
!11490 = !DILocation(line: 1223, column: 33, scope: !11488)
!11491 = !DILocation(line: 1223, column: 21, scope: !11456)
!11492 = !DILocation(line: 1224, column: 55, scope: !11488)
!11493 = !DILocation(line: 1224, column: 33, scope: !11488)
!11494 = !DILocation(line: 1224, column: 31, scope: !11488)
!11495 = !DILocation(line: 1224, column: 21, scope: !11488)
!11496 = !DILocation(line: 1226, column: 52, scope: !11488)
!11497 = !DILocation(line: 1226, column: 33, scope: !11488)
!11498 = !DILocation(line: 1226, column: 31, scope: !11488)
!11499 = !DILocation(line: 1229, column: 57, scope: !11456)
!11500 = !DILocation(line: 1229, column: 62, scope: !11456)
!11501 = !DILocation(line: 1229, column: 25, scope: !11456)
!11502 = !DILocation(line: 1229, column: 46, scope: !11456)
!11503 = !DILocation(line: 1229, column: 51, scope: !11456)
!11504 = !DILocation(line: 1229, column: 42, scope: !11456)
!11505 = !DILocation(line: 1229, column: 28, scope: !11456)
!11506 = !DILocation(line: 1229, column: 23, scope: !11456)
!11507 = !DILocation(line: 1231, column: 67, scope: !11456)
!11508 = !DILocation(line: 1231, column: 40, scope: !11456)
!11509 = !DILocation(line: 1231, column: 63, scope: !11456)
!11510 = !DILocation(line: 1231, column: 43, scope: !11456)
!11511 = !DILocation(line: 1231, column: 75, scope: !11456)
!11512 = !DILocation(line: 1231, column: 73, scope: !11456)
!11513 = !DILocation(line: 1232, column: 28, scope: !11456)
!11514 = !DILocation(line: 1232, column: 35, scope: !11456)
!11515 = !DILocation(line: 1232, column: 46, scope: !11456)
!11516 = !DILocation(line: 1231, column: 17, scope: !11456)
!11517 = !DILocation(line: 1233, column: 13, scope: !11456)
!11518 = !DILocation(line: 1209, column: 76, scope: !11519)
!11519 = !DILexicalBlockFile(scope: !11449, file: !898, discriminator: 2)
!11520 = !DILocation(line: 1209, column: 13, scope: !11519)
!11521 = distinct !{!11521, !11522}
!11522 = !DILocation(line: 1209, column: 13, scope: !11436)
!11523 = !DILocation(line: 1234, column: 9, scope: !11436)
!11524 = !DILocation(line: 1205, column: 54, scope: !11525)
!11525 = !DILexicalBlockFile(scope: !11429, file: !898, discriminator: 2)
!11526 = !DILocation(line: 1205, column: 9, scope: !11525)
!11527 = distinct !{!11527, !11528}
!11528 = !DILocation(line: 1205, column: 9, scope: !11424)
!11529 = !DILocation(line: 1237, column: 14, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11424, file: !898, line: 1237, column: 13)
!11531 = !DILocation(line: 1237, column: 38, scope: !11530)
!11532 = !DILocation(line: 1237, column: 21, scope: !11530)
!11533 = !DILocation(line: 1237, column: 24, scope: !11530)
!11534 = !DILocation(line: 1237, column: 42, scope: !11530)
!11535 = !DILocation(line: 1237, column: 18, scope: !11530)
!11536 = !DILocation(line: 1237, column: 46, scope: !11530)
!11537 = !DILocation(line: 1237, column: 49, scope: !11538)
!11538 = !DILexicalBlockFile(scope: !11530, file: !898, discriminator: 1)
!11539 = !DILocation(line: 1237, column: 52, scope: !11538)
!11540 = !DILocation(line: 1237, column: 62, scope: !11538)
!11541 = !DILocation(line: 1237, column: 75, scope: !11542)
!11542 = !DILexicalBlockFile(scope: !11530, file: !898, discriminator: 2)
!11543 = !DILocation(line: 1237, column: 78, scope: !11542)
!11544 = !DILocation(line: 1237, column: 65, scope: !11542)
!11545 = !DILocation(line: 1237, column: 86, scope: !11542)
!11546 = !DILocation(line: 1237, column: 13, scope: !11542)
!11547 = !DILocation(line: 1238, column: 20, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11530, file: !898, line: 1237, column: 97)
!11549 = !DILocation(line: 1238, column: 23, scope: !11548)
!11550 = !DILocation(line: 1238, column: 13, scope: !11548)
!11551 = !DILocation(line: 1239, column: 13, scope: !11548)
!11552 = !DILocation(line: 1242, column: 13, scope: !11424)
!11553 = !DILocation(line: 1243, column: 5, scope: !11424)
!11554 = !DILocation(line: 1204, column: 66, scope: !11555)
!11555 = !DILexicalBlockFile(scope: !11416, file: !898, discriminator: 2)
!11556 = !DILocation(line: 1204, column: 5, scope: !11555)
!11557 = distinct !{!11557, !11558}
!11558 = !DILocation(line: 1204, column: 5, scope: !11202)
!11559 = !DILocation(line: 1246, column: 15, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1246, column: 5)
!11561 = !DILocation(line: 1246, column: 13, scope: !11560)
!11562 = !DILocation(line: 1246, column: 10, scope: !11560)
!11563 = !DILocation(line: 1246, column: 25, scope: !11564)
!11564 = !DILexicalBlockFile(scope: !11565, file: !898, discriminator: 1)
!11565 = distinct !DILexicalBlock(scope: !11560, file: !898, line: 1246, column: 5)
!11566 = !DILocation(line: 1246, column: 30, scope: !11564)
!11567 = !DILocation(line: 1246, column: 33, scope: !11564)
!11568 = !DILocation(line: 1246, column: 28, scope: !11564)
!11569 = !DILocation(line: 1246, column: 5, scope: !11564)
!11570 = !DILocation(line: 1247, column: 46, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11565, file: !898, line: 1246, column: 54)
!11572 = !DILocation(line: 1247, column: 23, scope: !11571)
!11573 = !DILocation(line: 1247, column: 26, scope: !11571)
!11574 = !DILocation(line: 1247, column: 74, scope: !11571)
!11575 = !DILocation(line: 1247, column: 51, scope: !11571)
!11576 = !DILocation(line: 1247, column: 54, scope: !11571)
!11577 = !DILocation(line: 1248, column: 42, scope: !11571)
!11578 = !DILocation(line: 1248, column: 23, scope: !11571)
!11579 = !DILocation(line: 1248, column: 26, scope: !11571)
!11580 = !DILocation(line: 1248, column: 47, scope: !11571)
!11581 = !DILocation(line: 1248, column: 50, scope: !11571)
!11582 = !DILocation(line: 1248, column: 82, scope: !11571)
!11583 = !DILocation(line: 1248, column: 69, scope: !11571)
!11584 = !DILocation(line: 1248, column: 72, scope: !11571)
!11585 = !DILocation(line: 1249, column: 24, scope: !11571)
!11586 = !DILocation(line: 1249, column: 23, scope: !11571)
!11587 = !DILocation(line: 1249, column: 33, scope: !11571)
!11588 = !DILocation(line: 1247, column: 9, scope: !11571)
!11589 = !DILocation(line: 1250, column: 5, scope: !11571)
!11590 = !DILocation(line: 1246, column: 50, scope: !11591)
!11591 = !DILexicalBlockFile(scope: !11565, file: !898, discriminator: 2)
!11592 = !DILocation(line: 1246, column: 5, scope: !11591)
!11593 = distinct !{!11593, !11594}
!11594 = !DILocation(line: 1246, column: 5, scope: !11202)
!11595 = !DILocation(line: 1253, column: 15, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11202, file: !898, line: 1253, column: 5)
!11597 = !DILocation(line: 1253, column: 13, scope: !11596)
!11598 = !DILocation(line: 1253, column: 10, scope: !11596)
!11599 = !DILocation(line: 1253, column: 25, scope: !11600)
!11600 = !DILexicalBlockFile(scope: !11601, file: !898, discriminator: 1)
!11601 = distinct !DILexicalBlock(scope: !11596, file: !898, line: 1253, column: 5)
!11602 = !DILocation(line: 1253, column: 30, scope: !11600)
!11603 = !DILocation(line: 1253, column: 33, scope: !11600)
!11604 = !DILocation(line: 1253, column: 28, scope: !11600)
!11605 = !DILocation(line: 1253, column: 5, scope: !11600)
!11606 = !DILocalVariable(name: "src_ch", scope: !11607, file: !898, line: 1254, type: !1027)
!11607 = distinct !DILexicalBlock(scope: !11601, file: !898, line: 1253, column: 54)
!11608 = !DILocation(line: 1254, column: 13, scope: !11607)
!11609 = !DILocation(line: 1254, column: 47, scope: !11607)
!11610 = !DILocation(line: 1254, column: 22, scope: !11607)
!11611 = !DILocation(line: 1254, column: 25, scope: !11607)
!11612 = !DILocation(line: 1254, column: 51, scope: !11607)
!11613 = !DILocation(line: 1255, column: 13, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11607, file: !898, line: 1255, column: 13)
!11615 = !DILocation(line: 1255, column: 20, scope: !11614)
!11616 = !DILocation(line: 1255, column: 13, scope: !11607)
!11617 = !DILocation(line: 1256, column: 13, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11614, file: !898, line: 1255, column: 26)
!11619 = !DILocation(line: 1256, column: 16, scope: !11618)
!11620 = !DILocation(line: 1256, column: 24, scope: !11618)
!11621 = !DILocation(line: 1256, column: 60, scope: !11618)
!11622 = !DILocation(line: 1256, column: 37, scope: !11618)
!11623 = !DILocation(line: 1256, column: 40, scope: !11618)
!11624 = !DILocation(line: 1256, column: 88, scope: !11618)
!11625 = !DILocation(line: 1256, column: 65, scope: !11618)
!11626 = !DILocation(line: 1256, column: 68, scope: !11618)
!11627 = !DILocation(line: 1257, column: 60, scope: !11618)
!11628 = !DILocation(line: 1257, column: 37, scope: !11618)
!11629 = !DILocation(line: 1257, column: 40, scope: !11618)
!11630 = !DILocation(line: 1257, column: 78, scope: !11618)
!11631 = !DILocation(line: 1257, column: 65, scope: !11618)
!11632 = !DILocation(line: 1257, column: 68, scope: !11618)
!11633 = !DILocation(line: 1258, column: 50, scope: !11618)
!11634 = !DILocation(line: 1258, column: 37, scope: !11618)
!11635 = !DILocation(line: 1258, column: 40, scope: !11618)
!11636 = !DILocation(line: 1258, column: 60, scope: !11618)
!11637 = !DILocation(line: 1258, column: 59, scope: !11618)
!11638 = !DILocation(line: 1258, column: 69, scope: !11618)
!11639 = !DILocation(line: 1259, column: 9, scope: !11618)
!11640 = !DILocation(line: 1260, column: 5, scope: !11607)
!11641 = !DILocation(line: 1253, column: 50, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !11601, file: !898, discriminator: 2)
!11643 = !DILocation(line: 1253, column: 5, scope: !11642)
!11644 = distinct !{!11644, !11645}
!11645 = !DILocation(line: 1253, column: 5, scope: !11202)
!11646 = !DILocation(line: 1263, column: 16, scope: !11202)
!11647 = !DILocation(line: 1263, column: 6, scope: !11202)
!11648 = !DILocation(line: 1263, column: 14, scope: !11202)
!11649 = !DILocation(line: 1264, column: 5, scope: !11202)
!11650 = !DILocation(line: 1265, column: 1, scope: !11202)
!11651 = distinct !DISubprogram(name: "mul31", scope: !8943, file: !8943, line: 51, type: !8944, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!11652 = !DILocalVariable(name: "a", arg: 1, scope: !11651, file: !8943, line: 51, type: !1030)
!11653 = !DILocation(line: 51, column: 37, scope: !11651)
!11654 = !DILocalVariable(name: "b", arg: 2, scope: !11651, file: !8943, line: 51, type: !1030)
!11655 = !DILocation(line: 51, column: 48, scope: !11651)
!11656 = !DILocation(line: 51, column: 66, scope: !11651)
!11657 = !DILocation(line: 51, column: 69, scope: !11651)
!11658 = !DILocation(line: 51, column: 60, scope: !11651)
!11659 = !DILocation(line: 51, column: 53, scope: !11651)
!11660 = distinct !DISubprogram(name: "rand_x96", scope: !898, file: !898, line: 1153, type: !2320, isLocal: true, isDefinition: true, scopeLine: 1154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!11661 = !DILocalVariable(name: "s", arg: 1, scope: !11660, file: !898, line: 1153, type: !1094)
!11662 = !DILocation(line: 1153, column: 37, scope: !11660)
!11663 = !DILocation(line: 1155, column: 33, scope: !11660)
!11664 = !DILocation(line: 1155, column: 36, scope: !11660)
!11665 = !DILocation(line: 1155, column: 31, scope: !11660)
!11666 = !DILocation(line: 1155, column: 45, scope: !11660)
!11667 = !DILocation(line: 1155, column: 5, scope: !11660)
!11668 = !DILocation(line: 1155, column: 8, scope: !11660)
!11669 = !DILocation(line: 1155, column: 17, scope: !11660)
!11670 = !DILocation(line: 1156, column: 13, scope: !11660)
!11671 = !DILocation(line: 1156, column: 16, scope: !11660)
!11672 = !DILocation(line: 1156, column: 25, scope: !11660)
!11673 = !DILocation(line: 1156, column: 39, scope: !11660)
!11674 = !DILocation(line: 1156, column: 5, scope: !11660)
!11675 = distinct !DISubprogram(name: "mul16", scope: !8943, file: !8943, line: 47, type: !8944, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1054)
!11676 = !DILocalVariable(name: "a", arg: 1, scope: !11675, file: !8943, line: 47, type: !1030)
!11677 = !DILocation(line: 47, column: 37, scope: !11675)
!11678 = !DILocalVariable(name: "b", arg: 2, scope: !11675, file: !8943, line: 47, type: !1030)
!11679 = !DILocation(line: 47, column: 48, scope: !11675)
!11680 = !DILocation(line: 47, column: 66, scope: !11675)
!11681 = !DILocation(line: 47, column: 69, scope: !11675)
!11682 = !DILocation(line: 47, column: 60, scope: !11675)
!11683 = !DILocation(line: 47, column: 53, scope: !11675)
