; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opustab.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opustab.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ff_opus_default_coupled_streams = constant [8 x i8] c"\00\01\01\02\02\02\02\03", align 1
@ff_celt_band_end = constant [5 x i8] c"\0D\11\11\13\15", align 1
@ff_silk_model_stereo_s1 = constant [26 x i16] [i16 256, i16 7, i16 9, i16 10, i16 11, i16 12, i16 22, i16 46, i16 54, i16 55, i16 56, i16 59, i16 82, i16 174, i16 197, i16 200, i16 201, i16 202, i16 210, i16 234, i16 244, i16 245, i16 246, i16 247, i16 249, i16 256], align 16
@ff_silk_model_stereo_s2 = constant [4 x i16] [i16 256, i16 85, i16 171, i16 256], align 2
@ff_silk_model_stereo_s3 = constant [6 x i16] [i16 256, i16 51, i16 102, i16 154, i16 205, i16 256], align 2
@ff_silk_model_mid_only = constant [3 x i16] [i16 256, i16 192, i16 256], align 2
@ff_silk_model_frame_type_inactive = constant [3 x i16] [i16 256, i16 26, i16 256], align 2
@ff_silk_model_frame_type_active = constant [5 x i16] [i16 256, i16 24, i16 98, i16 246, i16 256], align 2
@ff_silk_model_gain_highbits = constant [3 x [9 x i16]] [[9 x i16] [i16 256, i16 32, i16 144, i16 212, i16 241, i16 253, i16 254, i16 255, i16 256], [9 x i16] [i16 256, i16 2, i16 19, i16 64, i16 124, i16 186, i16 233, i16 252, i16 256], [9 x i16] [i16 256, i16 1, i16 4, i16 30, i16 101, i16 195, i16 245, i16 254, i16 256]], align 16
@ff_silk_model_gain_lowbits = constant [9 x i16] [i16 256, i16 32, i16 64, i16 96, i16 128, i16 160, i16 192, i16 224, i16 256], align 16
@ff_silk_model_gain_delta = constant [42 x i16] [i16 256, i16 6, i16 11, i16 22, i16 53, i16 185, i16 206, i16 214, i16 218, i16 221, i16 223, i16 225, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], align 16
@ff_silk_model_lsf_s1 = constant [2 x [2 x [33 x i16]]] [[2 x [33 x i16]] [[33 x i16] [i16 256, i16 44, i16 78, i16 108, i16 127, i16 148, i16 160, i16 171, i16 174, i16 177, i16 179, i16 195, i16 197, i16 199, i16 200, i16 205, i16 207, i16 208, i16 211, i16 214, i16 215, i16 216, i16 218, i16 220, i16 222, i16 225, i16 226, i16 235, i16 244, i16 246, i16 253, i16 255, i16 256], [33 x i16] [i16 256, i16 1, i16 11, i16 12, i16 20, i16 23, i16 31, i16 39, i16 53, i16 66, i16 80, i16 81, i16 95, i16 107, i16 120, i16 131, i16 142, i16 154, i16 165, i16 175, i16 185, i16 196, i16 204, i16 213, i16 221, i16 228, i16 236, i16 237, i16 238, i16 244, i16 245, i16 251, i16 256]], [2 x [33 x i16]] [[33 x i16] [i16 256, i16 31, i16 52, i16 55, i16 72, i16 73, i16 81, i16 98, i16 102, i16 103, i16 121, i16 137, i16 141, i16 143, i16 146, i16 147, i16 157, i16 158, i16 161, i16 177, i16 188, i16 204, i16 206, i16 208, i16 211, i16 213, i16 224, i16 225, i16 229, i16 238, i16 246, i16 253, i16 256], [33 x i16] [i16 256, i16 1, i16 5, i16 21, i16 26, i16 44, i16 55, i16 60, i16 74, i16 89, i16 90, i16 93, i16 105, i16 118, i16 132, i16 146, i16 152, i16 166, i16 178, i16 180, i16 186, i16 187, i16 199, i16 211, i16 222, i16 232, i16 235, i16 245, i16 250, i16 251, i16 252, i16 253, i16 256]]], align 16
@ff_silk_model_lsf_s2 = constant [32 x [10 x i16]] [[10 x i16] [i16 256, i16 1, i16 2, i16 3, i16 18, i16 242, i16 253, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 4, i16 38, i16 221, i16 253, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 6, i16 48, i16 197, i16 252, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 10, i16 62, i16 185, i16 246, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 4, i16 20, i16 73, i16 174, i16 248, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 4, i16 21, i16 76, i16 166, i16 239, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 8, i16 32, i16 85, i16 159, i16 226, i16 252, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 20, i16 83, i16 161, i16 219, i16 249, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 3, i16 12, i16 244, i16 253, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 4, i16 32, i16 218, i16 253, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 5, i16 47, i16 199, i16 252, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 12, i16 61, i16 187, i16 252, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 5, i16 24, i16 72, i16 172, i16 249, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 16, i16 70, i16 170, i16 242, i16 254, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 2, i16 17, i16 78, i16 165, i16 226, i16 251, i16 255, i16 256], [10 x i16] [i16 256, i16 1, i16 8, i16 29, i16 79, i16 156, i16 237, i16 254, i16 255, i16 256], [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer, [10 x i16] zeroinitializer], align 16
@ff_silk_model_lsf_s2_ext = constant [8 x i16] [i16 256, i16 156, i16 216, i16 240, i16 249, i16 253, i16 255, i16 256], align 16
@ff_silk_model_lsf_interpolation_offset = constant [6 x i16] [i16 256, i16 13, i16 35, i16 64, i16 75, i16 256], align 2
@ff_silk_model_pitch_highbits = constant [33 x i16] [i16 256, i16 3, i16 6, i16 12, i16 23, i16 44, i16 74, i16 106, i16 125, i16 136, i16 146, i16 158, i16 171, i16 184, i16 196, i16 207, i16 216, i16 224, i16 231, i16 237, i16 241, i16 243, i16 245, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], align 16
@ff_silk_model_pitch_lowbits_nb = constant [5 x i16] [i16 256, i16 64, i16 128, i16 192, i16 256], align 2
@ff_silk_model_pitch_lowbits_mb = constant [7 x i16] [i16 256, i16 43, i16 85, i16 128, i16 171, i16 213, i16 256], align 2
@ff_silk_model_pitch_lowbits_wb = constant [9 x i16] [i16 256, i16 32, i16 64, i16 96, i16 128, i16 160, i16 192, i16 224, i16 256], align 16
@ff_silk_model_pitch_delta = constant [22 x i16] [i16 256, i16 46, i16 48, i16 50, i16 53, i16 57, i16 63, i16 73, i16 88, i16 114, i16 152, i16 182, i16 204, i16 219, i16 229, i16 236, i16 242, i16 246, i16 250, i16 252, i16 254, i16 256], align 16
@ff_silk_model_pitch_contour_nb10ms = constant [4 x i16] [i16 256, i16 143, i16 193, i16 256], align 2
@ff_silk_model_pitch_contour_nb20ms = constant [12 x i16] [i16 256, i16 68, i16 80, i16 101, i16 118, i16 137, i16 159, i16 189, i16 213, i16 230, i16 246, i16 256], align 16
@ff_silk_model_pitch_contour_mbwb10ms = constant [13 x i16] [i16 256, i16 91, i16 137, i16 176, i16 195, i16 209, i16 221, i16 229, i16 236, i16 242, i16 247, i16 252, i16 256], align 16
@ff_silk_model_pitch_contour_mbwb20ms = constant [35 x i16] [i16 256, i16 33, i16 55, i16 73, i16 89, i16 104, i16 118, i16 132, i16 145, i16 158, i16 168, i16 177, i16 186, i16 194, i16 200, i16 206, i16 212, i16 217, i16 221, i16 225, i16 229, i16 232, i16 235, i16 238, i16 240, i16 242, i16 244, i16 246, i16 248, i16 250, i16 252, i16 253, i16 254, i16 255, i16 256], align 16
@ff_silk_model_ltp_filter = constant [4 x i16] [i16 256, i16 77, i16 157, i16 256], align 2
@ff_silk_model_ltp_filter0_sel = constant [9 x i16] [i16 256, i16 185, i16 200, i16 213, i16 226, i16 235, i16 244, i16 250, i16 256], align 16
@ff_silk_model_ltp_filter1_sel = constant [17 x i16] [i16 256, i16 57, i16 91, i16 112, i16 132, i16 147, i16 160, i16 172, i16 185, i16 195, i16 205, i16 214, i16 224, i16 233, i16 241, i16 248, i16 256], align 16
@ff_silk_model_ltp_filter2_sel = constant [33 x i16] [i16 256, i16 15, i16 31, i16 45, i16 57, i16 69, i16 81, i16 92, i16 103, i16 114, i16 124, i16 133, i16 142, i16 151, i16 160, i16 168, i16 176, i16 184, i16 192, i16 199, i16 206, i16 212, i16 218, i16 223, i16 227, i16 232, i16 236, i16 240, i16 244, i16 247, i16 251, i16 254, i16 256], align 16
@ff_silk_model_ltp_scale_index = constant [4 x i16] [i16 256, i16 128, i16 192, i16 256], align 2
@ff_silk_model_lcg_seed = constant [5 x i16] [i16 256, i16 64, i16 128, i16 192, i16 256], align 2
@ff_silk_model_exc_rate = constant [2 x [10 x i16]] [[10 x i16] [i16 256, i16 15, i16 66, i16 78, i16 124, i16 169, i16 182, i16 215, i16 242, i16 256], [10 x i16] [i16 256, i16 33, i16 63, i16 99, i16 116, i16 150, i16 199, i16 217, i16 238, i16 256]], align 16
@ff_silk_model_pulse_count = constant [11 x [19 x i16]] [[19 x i16] [i16 256, i16 131, i16 205, i16 230, i16 238, i16 241, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], [19 x i16] [i16 256, i16 58, i16 151, i16 211, i16 234, i16 241, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], [19 x i16] [i16 256, i16 43, i16 94, i16 140, i16 173, i16 197, i16 213, i16 224, i16 232, i16 238, i16 241, i16 244, i16 247, i16 249, i16 250, i16 251, i16 253, i16 254, i16 256], [19 x i16] [i16 256, i16 17, i16 69, i16 140, i16 197, i16 228, i16 240, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], [19 x i16] [i16 256, i16 6, i16 27, i16 68, i16 121, i16 170, i16 205, i16 226, i16 237, i16 243, i16 246, i16 248, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], [19 x i16] [i16 256, i16 7, i16 21, i16 43, i16 71, i16 100, i16 128, i16 153, i16 173, i16 190, i16 203, i16 214, i16 223, i16 230, i16 235, i16 239, i16 243, i16 246, i16 256], [19 x i16] [i16 256, i16 2, i16 7, i16 21, i16 50, i16 92, i16 138, i16 179, i16 210, i16 229, i16 240, i16 246, i16 249, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256], [19 x i16] [i16 256, i16 1, i16 3, i16 7, i16 17, i16 36, i16 65, i16 100, i16 137, i16 171, i16 199, i16 219, i16 233, i16 241, i16 246, i16 250, i16 252, i16 254, i16 256], [19 x i16] [i16 256, i16 1, i16 3, i16 5, i16 10, i16 19, i16 33, i16 53, i16 77, i16 104, i16 132, i16 158, i16 181, i16 201, i16 216, i16 227, i16 235, i16 241, i16 256], [19 x i16] [i16 256, i16 1, i16 2, i16 3, i16 9, i16 36, i16 94, i16 150, i16 189, i16 214, i16 228, i16 238, i16 244, i16 247, i16 250, i16 252, i16 253, i16 254, i16 256], [19 x i16] [i16 256, i16 2, i16 3, i16 9, i16 36, i16 94, i16 150, i16 189, i16 214, i16 228, i16 238, i16 244, i16 247, i16 250, i16 252, i16 253, i16 254, i16 256, i16 256]], align 16
@ff_silk_model_pulse_location = constant [4 x [168 x i16]] [[168 x i16] [i16 256, i16 126, i16 256, i16 256, i16 56, i16 198, i16 256, i16 256, i16 25, i16 126, i16 230, i16 256, i16 256, i16 12, i16 72, i16 180, i16 244, i16 256, i16 256, i16 7, i16 42, i16 126, i16 213, i16 250, i16 256, i16 256, i16 4, i16 24, i16 83, i16 169, i16 232, i16 253, i16 256, i16 256, i16 3, i16 15, i16 53, i16 125, i16 200, i16 242, i16 254, i16 256, i16 256, i16 2, i16 10, i16 35, i16 89, i16 162, i16 221, i16 248, i16 255, i16 256, i16 256, i16 2, i16 7, i16 24, i16 63, i16 126, i16 191, i16 233, i16 251, i16 255, i16 256, i16 256, i16 1, i16 5, i16 17, i16 45, i16 94, i16 157, i16 211, i16 241, i16 252, i16 255, i16 256, i16 256, i16 1, i16 5, i16 13, i16 33, i16 70, i16 125, i16 182, i16 223, i16 245, i16 253, i16 255, i16 256, i16 256, i16 1, i16 4, i16 11, i16 26, i16 54, i16 98, i16 151, i16 199, i16 232, i16 248, i16 254, i16 255, i16 256, i16 256, i16 1, i16 3, i16 9, i16 21, i16 42, i16 77, i16 124, i16 172, i16 212, i16 237, i16 249, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 6, i16 16, i16 33, i16 60, i16 97, i16 144, i16 187, i16 220, i16 241, i16 250, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 3, i16 11, i16 25, i16 47, i16 80, i16 120, i16 163, i16 201, i16 229, i16 245, i16 253, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 3, i16 4, i16 17, i16 35, i16 62, i16 98, i16 139, i16 180, i16 214, i16 238, i16 252, i16 253, i16 254, i16 255, i16 256], [168 x i16] [i16 256, i16 127, i16 256, i16 256, i16 53, i16 202, i16 256, i16 256, i16 22, i16 127, i16 233, i16 256, i16 256, i16 11, i16 72, i16 183, i16 246, i16 256, i16 256, i16 6, i16 41, i16 127, i16 215, i16 251, i16 256, i16 256, i16 4, i16 24, i16 83, i16 170, i16 232, i16 253, i16 256, i16 256, i16 3, i16 16, i16 56, i16 127, i16 200, i16 241, i16 254, i16 256, i16 256, i16 3, i16 12, i16 39, i16 92, i16 162, i16 218, i16 246, i16 255, i16 256, i16 256, i16 3, i16 11, i16 30, i16 67, i16 124, i16 185, i16 229, i16 249, i16 255, i16 256, i16 256, i16 3, i16 10, i16 25, i16 53, i16 97, i16 151, i16 200, i16 233, i16 250, i16 255, i16 256, i16 256, i16 1, i16 8, i16 21, i16 43, i16 77, i16 123, i16 171, i16 209, i16 237, i16 251, i16 255, i16 256, i16 256, i16 1, i16 2, i16 13, i16 35, i16 62, i16 97, i16 139, i16 186, i16 219, i16 244, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 8, i16 22, i16 48, i16 85, i16 128, i16 171, i16 208, i16 234, i16 248, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 6, i16 16, i16 36, i16 67, i16 107, i16 149, i16 189, i16 220, i16 240, i16 250, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 5, i16 13, i16 29, i16 55, i16 90, i16 128, i16 166, i16 201, i16 227, i16 243, i16 251, i16 254, i16 255, i16 256, i16 256, i16 1, i16 2, i16 4, i16 10, i16 22, i16 43, i16 73, i16 109, i16 147, i16 183, i16 213, i16 234, i16 246, i16 252, i16 254, i16 255, i16 256], [168 x i16] [i16 256, i16 127, i16 256, i16 256, i16 49, i16 206, i16 256, i16 256, i16 20, i16 127, i16 236, i16 256, i16 256, i16 11, i16 71, i16 184, i16 246, i16 256, i16 256, i16 7, i16 43, i16 127, i16 214, i16 250, i16 256, i16 256, i16 6, i16 30, i16 87, i16 169, i16 229, i16 252, i16 256, i16 256, i16 5, i16 23, i16 62, i16 126, i16 194, i16 236, i16 252, i16 256, i16 256, i16 6, i16 20, i16 49, i16 96, i16 157, i16 209, i16 239, i16 253, i16 256, i16 256, i16 1, i16 16, i16 39, i16 74, i16 125, i16 175, i16 215, i16 245, i16 255, i16 256, i16 256, i16 1, i16 2, i16 23, i16 55, i16 97, i16 149, i16 195, i16 236, i16 254, i16 255, i16 256, i16 256, i16 1, i16 7, i16 23, i16 50, i16 86, i16 128, i16 170, i16 206, i16 233, i16 249, i16 255, i16 256, i16 256, i16 1, i16 6, i16 18, i16 39, i16 70, i16 108, i16 148, i16 186, i16 217, i16 238, i16 250, i16 255, i16 256, i16 256, i16 1, i16 4, i16 13, i16 30, i16 56, i16 90, i16 128, i16 166, i16 200, i16 226, i16 243, i16 252, i16 255, i16 256, i16 256, i16 1, i16 4, i16 11, i16 25, i16 47, i16 76, i16 110, i16 146, i16 180, i16 209, i16 231, i16 245, i16 252, i16 255, i16 256, i16 256, i16 1, i16 3, i16 8, i16 19, i16 37, i16 62, i16 93, i16 128, i16 163, i16 194, i16 219, i16 237, i16 248, i16 253, i16 255, i16 256, i16 256, i16 1, i16 2, i16 6, i16 15, i16 30, i16 51, i16 79, i16 111, i16 145, i16 177, i16 205, i16 226, i16 241, i16 250, i16 254, i16 255, i16 256], [168 x i16] [i16 256, i16 128, i16 256, i16 256, i16 42, i16 214, i16 256, i16 256, i16 21, i16 128, i16 235, i16 256, i16 256, i16 12, i16 72, i16 184, i16 245, i16 256, i16 256, i16 8, i16 42, i16 128, i16 214, i16 249, i16 256, i16 256, i16 8, i16 31, i16 86, i16 176, i16 231, i16 251, i16 256, i16 256, i16 5, i16 20, i16 58, i16 130, i16 202, i16 238, i16 253, i16 256, i16 256, i16 6, i16 18, i16 45, i16 97, i16 174, i16 221, i16 241, i16 251, i16 256, i16 256, i16 6, i16 25, i16 53, i16 88, i16 128, i16 168, i16 203, i16 231, i16 250, i16 256, i16 256, i16 4, i16 18, i16 40, i16 71, i16 108, i16 148, i16 185, i16 216, i16 238, i16 252, i16 256, i16 256, i16 3, i16 13, i16 31, i16 57, i16 90, i16 128, i16 166, i16 199, i16 225, i16 243, i16 253, i16 256, i16 256, i16 2, i16 10, i16 23, i16 44, i16 73, i16 109, i16 147, i16 183, i16 212, i16 233, i16 246, i16 254, i16 256, i16 256, i16 1, i16 6, i16 16, i16 33, i16 58, i16 90, i16 128, i16 166, i16 198, i16 223, i16 240, i16 250, i16 255, i16 256, i16 256, i16 1, i16 5, i16 12, i16 25, i16 46, i16 75, i16 110, i16 146, i16 181, i16 210, i16 231, i16 244, i16 251, i16 255, i16 256, i16 256, i16 1, i16 3, i16 8, i16 18, i16 35, i16 60, i16 92, i16 128, i16 164, i16 196, i16 221, i16 238, i16 248, i16 253, i16 255, i16 256, i16 256, i16 1, i16 3, i16 7, i16 14, i16 27, i16 48, i16 76, i16 110, i16 146, i16 180, i16 208, i16 229, i16 242, i16 249, i16 253, i16 255, i16 256]], align 16
@ff_silk_model_excitation_lsb = constant [3 x i16] [i16 256, i16 136, i16 256], align 2
@ff_silk_model_excitation_sign = constant [3 x [2 x [7 x [3 x i16]]]] [[2 x [7 x [3 x i16]]] [[7 x [3 x i16]] [[3 x i16] [i16 256, i16 2, i16 256], [3 x i16] [i16 256, i16 207, i16 256], [3 x i16] [i16 256, i16 189, i16 256], [3 x i16] [i16 256, i16 179, i16 256], [3 x i16] [i16 256, i16 174, i16 256], [3 x i16] [i16 256, i16 163, i16 256], [3 x i16] [i16 256, i16 157, i16 256]], [7 x [3 x i16]] [[3 x i16] [i16 256, i16 58, i16 256], [3 x i16] [i16 256, i16 245, i16 256], [3 x i16] [i16 256, i16 238, i16 256], [3 x i16] [i16 256, i16 232, i16 256], [3 x i16] [i16 256, i16 225, i16 256], [3 x i16] [i16 256, i16 220, i16 256], [3 x i16] [i16 256, i16 211, i16 256]]], [2 x [7 x [3 x i16]]] [[7 x [3 x i16]] [[3 x i16] [i16 256, i16 1, i16 256], [3 x i16] [i16 256, i16 210, i16 256], [3 x i16] [i16 256, i16 190, i16 256], [3 x i16] [i16 256, i16 178, i16 256], [3 x i16] [i16 256, i16 169, i16 256], [3 x i16] [i16 256, i16 162, i16 256], [3 x i16] [i16 256, i16 152, i16 256]], [7 x [3 x i16]] [[3 x i16] [i16 256, i16 48, i16 256], [3 x i16] [i16 256, i16 242, i16 256], [3 x i16] [i16 256, i16 235, i16 256], [3 x i16] [i16 256, i16 224, i16 256], [3 x i16] [i16 256, i16 214, i16 256], [3 x i16] [i16 256, i16 205, i16 256], [3 x i16] [i16 256, i16 190, i16 256]]], [2 x [7 x [3 x i16]]] [[7 x [3 x i16]] [[3 x i16] [i16 256, i16 1, i16 256], [3 x i16] [i16 256, i16 162, i16 256], [3 x i16] [i16 256, i16 152, i16 256], [3 x i16] [i16 256, i16 147, i16 256], [3 x i16] [i16 256, i16 144, i16 256], [3 x i16] [i16 256, i16 141, i16 256], [3 x i16] [i16 256, i16 138, i16 256]], [7 x [3 x i16]] [[3 x i16] [i16 256, i16 8, i16 256], [3 x i16] [i16 256, i16 203, i16 256], [3 x i16] [i16 256, i16 187, i16 256], [3 x i16] [i16 256, i16 176, i16 256], [3 x i16] [i16 256, i16 168, i16 256], [3 x i16] [i16 256, i16 161, i16 256], [3 x i16] [i16 256, i16 154, i16 256]]]], align 16
@ff_silk_stereo_weights = constant [16 x i16] [i16 -13732, i16 -10050, i16 -8266, i16 -7526, i16 -6500, i16 -5000, i16 -2950, i16 -820, i16 820, i16 2950, i16 5000, i16 6500, i16 7526, i16 8266, i16 10050, i16 13732], align 16
@ff_silk_lsf_s2_model_sel_nbmb = constant [32 x [10 x i8]] [[10 x i8] zeroinitializer, [10 x i8] c"\01\03\01\02\02\01\02\01\01\01", [10 x i8] c"\02\01\01\01\01\01\01\01\01\01", [10 x i8] c"\01\02\02\02\02\01\02\01\01\01", [10 x i8] c"\02\03\03\03\03\02\02\02\02\02", [10 x i8] c"\00\05\03\03\02\02\02\02\01\01", [10 x i8] c"\00\02\02\02\02\02\02\02\02\01", [10 x i8] c"\02\03\06\04\04\04\05\04\05\05", [10 x i8] c"\02\04\05\05\04\05\04\06\04\04", [10 x i8] c"\02\04\04\07\04\05\04\05\05\04", [10 x i8] c"\04\03\03\03\02\03\02\02\02\02", [10 x i8] c"\01\05\05\06\04\05\04\05\05\05", [10 x i8] c"\02\07\04\06\05\05\05\05\05\05", [10 x i8] c"\02\07\05\05\05\05\05\06\05\04", [10 x i8] c"\03\03\05\04\04\05\04\05\04\04", [10 x i8] c"\02\03\03\05\05\04\04\04\04\04", [10 x i8] c"\02\04\04\06\04\05\04\05\05\05", [10 x i8] c"\02\05\04\06\05\05\05\04\05\04", [10 x i8] c"\02\07\04\05\04\05\04\05\05\05", [10 x i8] c"\02\05\04\06\07\06\05\06\05\04", [10 x i8] c"\03\06\07\04\06\05\05\06\04\05", [10 x i8] c"\02\07\06\04\04\04\05\04\05\05", [10 x i8] c"\04\05\05\04\06\06\05\06\05\04", [10 x i8] c"\02\05\05\06\05\06\04\06\04\04", [10 x i8] c"\04\05\05\05\03\07\04\05\05\04", [10 x i8] c"\02\03\04\05\05\06\04\05\05\04", [10 x i8] c"\02\03\02\03\03\04\02\03\03\03", [10 x i8] c"\01\01\02\02\02\02\02\03\02\02", [10 x i8] c"\04\05\05\06\06\06\05\06\04\05", [10 x i8] c"\03\05\05\04\04\04\04\03\03\02", [10 x i8] c"\02\05\03\07\05\05\04\04\05\04", [10 x i8] c"\04\04\05\04\05\06\05\06\05\04"], align 16
@ff_silk_lsf_s2_model_sel_wb = constant [32 x [16 x i8]] [[16 x i8] c"\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08", [16 x i8] c"\0A\0B\0B\0B\0B\0B\0A\0A\0A\0A\0A\09\09\09\08\0B", [16 x i8] c"\0A\0D\0D\0B\0F\0C\0C\0D\0A\0D\0C\0D\0D\0C\0B\0B", [16 x i8] c"\08\0A\09\0A\0A\09\09\09\09\09\08\08\08\08\08\09", [16 x i8] c"\08\0E\0D\0C\0E\0C\0F\0D\0C\0C\0C\0D\0D\0C\0C\0B", [16 x i8] c"\08\0B\0D\0D\0C\0B\0B\0D\0B\0B\0B\0B\0B\0B\0A\0C", [16 x i8] c"\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08", [16 x i8] c"\08\0A\0E\0B\0F\0A\0D\0B\0C\0D\0D\0C\0B\0B\0A\0B", [16 x i8] c"\08\0E\0A\0E\0E\0C\0D\0C\0E\0D\0C\0C\0D\0B\0B\0B", [16 x i8] c"\0A\09\08\08\08\08\08\08\08\08\08\08\08\08\08\08", [16 x i8] c"\08\09\08\08\08\08\08\08\08\08\08\08\08\08\08\09", [16 x i8] c"\0A\0A\0B\0C\0D\0B\0B\0B\0B\0B\0B\0B\0A\0A\09\0B", [16 x i8] c"\0A\0A\0B\0B\0C\0B\0B\0B\0B\0B\0B\0B\0B\0A\09\0B", [16 x i8] c"\0B\0C\0C\0C\0E\0C\0C\0D\0B\0D\0C\0C\0D\0C\0B\0C", [16 x i8] c"\08\0E\0C\0D\0C\0F\0D\0A\0E\0D\0F\0C\0C\0B\0D\0B", [16 x i8] c"\08\09\08\09\09\09\09\09\09\09\08\08\08\08\09\08", [16 x i8] c"\09\0E\0D\0F\0D\0C\0D\0B\0C\0D\0C\0C\0C\0B\0B\0C", [16 x i8] c"\09\0B\0B\0C\0C\0B\0B\0D\0A\0B\0B\0D\0D\0D\0B\0C", [16 x i8] c"\0A\0B\0B\0A\0A\0A\0B\0A\09\0A\09\0A\09\09\09\0C", [16 x i8] c"\08\0A\0B\0D\0B\0B\0A\0A\0A\09\09\08\08\08\08\08", [16 x i8] c"\0B\0C\0B\0D\0B\0B\0A\0A\09\09\09\09\09\0A\0A\0C", [16 x i8] c"\0A\0E\0B\0F\0F\0C\0D\0C\0D\0B\0D\0B\0B\0A\0B\0B", [16 x i8] c"\0A\0B\0D\0E\0E\0B\0D\0B\0C\0C\0B\0B\0B\0B\0A\0C", [16 x i8] c"\09\0B\0B\0C\0C\0C\0C\0B\0D\0D\0D\0B\09\09\09\09", [16 x i8] c"\0A\0D\0B\0E\0E\0C\0F\0C\0C\0D\0B\0C\0C\0B\0B\0B", [16 x i8] c"\08\0E\09\09\08\08\08\08\08\08\08\08\08\08\08\08", [16 x i8] c"\08\0E\0E\0B\0D\0A\0D\0D\0B\0C\0C\0F\0F\0C\0C\0C", [16 x i8] c"\0B\0B\0F\0B\0D\0C\0B\0B\0B\0A\0A\0B\0B\0B\0A\0B", [16 x i8] c"\08\08\09\08\08\08\0A\09\0A\09\09\0A\0A\0A\09\09", [16 x i8] c"\08\0B\0A\0D\0B\0B\0A\0B\0A\09\08\08\09\08\08\09", [16 x i8] c"\0B\0D\0D\0C\0F\0D\0B\0B\0A\0B\0A\0A\09\08\09\08", [16 x i8] c"\0A\0B\0D\0B\0C\0B\0B\0B\0A\09\0A\0E\0C\08\08\08"], align 16
@ff_silk_lsf_pred_weights_nbmb = constant [2 x [9 x i8]] [[9 x i8] c"\B3\8A\8C\94\97\95\99\97\A3", [9 x i8] c"tCR;\5CHdY\5C"], align 16
@ff_silk_lsf_pred_weights_wb = constant [2 x [15 x i8]] [[15 x i8] c"\AF\94\A0\B0\B2\AD\AE\A4\B1\AE\C4\B6\C6\C0\B6", [15 x i8] c"D>B<HuUZv\88\97\8E\A0\8E\9B"], align 16
@ff_silk_lsf_weight_sel_nbmb = constant [32 x [9 x i8]] [[9 x i8] c"\00\01\00\00\00\00\00\00\00", [9 x i8] c"\01\00\00\00\00\00\00\00\00", [9 x i8] zeroinitializer, [9 x i8] c"\01\01\01\00\00\00\00\01\00", [9 x i8] c"\00\01\00\00\00\00\00\00\00", [9 x i8] c"\00\01\00\00\00\00\00\00\00", [9 x i8] c"\01\00\01\01\00\00\00\01\00", [9 x i8] c"\00\01\01\00\00\01\01\00\00", [9 x i8] c"\00\00\01\01\00\01\00\01\01", [9 x i8] c"\00\00\01\01\00\00\01\01\01", [9 x i8] zeroinitializer, [9 x i8] c"\00\01\00\01\01\01\01\01\00", [9 x i8] c"\00\01\00\01\01\01\01\01\00", [9 x i8] c"\00\01\01\01\01\01\01\01\00", [9 x i8] c"\01\00\01\01\00\01\01\01\01", [9 x i8] c"\00\01\01\01\01\01\00\01\00", [9 x i8] c"\00\00\01\01\00\01\00\01\00", [9 x i8] c"\00\00\01\01\01\00\01\01\01", [9 x i8] c"\00\01\01\00\00\01\01\01\00", [9 x i8] c"\00\00\00\01\01\01\00\01\00", [9 x i8] c"\00\01\01\00\00\01\00\01\00", [9 x i8] c"\00\01\01\00\00\00\01\01\00", [9 x i8] c"\00\00\00\00\00\01\01\01\01", [9 x i8] c"\00\00\01\01\00\00\00\01\01", [9 x i8] c"\00\00\00\01\00\01\01\01\01", [9 x i8] c"\00\01\01\01\01\01\01\01\00", [9 x i8] zeroinitializer, [9 x i8] zeroinitializer, [9 x i8] c"\00\00\01\00\01\01\00\01\00", [9 x i8] c"\01\00\00\01\00\00\00\00\00", [9 x i8] c"\00\00\00\01\01\00\01\00\01", [9 x i8] c"\01\00\01\01\00\01\01\01\01"], align 16
@ff_silk_lsf_weight_sel_wb = constant [32 x [15 x i8]] [[15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] zeroinitializer, [15 x i8] c"\00\00\01\00\00\01\01\01\00\01\01\01\01\00\00", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00", [15 x i8] c"\00\01\01\00\01\00\01\01\00\01\01\01\01\01\00", [15 x i8] c"\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00", [15 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\01\00\01\00", [15 x i8] c"\00\01\01\00\00\00\01\00\01\01\01\00\01\00\01", [15 x i8] c"\00\01\00\01\01\00\01\00\01\00\01\01\01\01\01", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] c"\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00", [15 x i8] c"\00\00\01\00\01\01\01\01\01\01\01\00\01\00\00", [15 x i8] c"\00\00\01\00\00\01\00\01\00\01\00\00\01\00\00", [15 x i8] c"\00\00\00\00\01\01\00\01\00\01\01\01\01\00\00", [15 x i8] c"\00\01\00\00\00\01\01\00\01\01\01\00\01\01\01", [15 x i8] c"\00\00\01\01\00\00\00\00\00\00\00\00\01\01\00", [15 x i8] c"\00\01\01\00\01\00\01\01\01\01\01\00\01\00\00", [15 x i8] c"\00\00\01\00\00\00\00\01\00\00\01\01\01\00\00", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00", [15 x i8] zeroinitializer, [15 x i8] c"\00\01\00\01\00\01\01\00\01\00\01\00\01\01\00", [15 x i8] c"\00\00\01\01\01\01\00\01\01\00\00\01\01\00\00", [15 x i8] c"\00\01\01\00\01\00\01\00\01\00\00\00\00\01\00", [15 x i8] c"\00\00\00\01\01\00\01\00\01\01\01\01\01\01\01", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] c"\00\01\01\00\00\00\01\01\00\00\01\01\01\01\01", [15 x i8] c"\00\00\00\00\00\01\00\01\01\01\01\00\01\01\01", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [15 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\01\00\00\00", [15 x i8] c"\00\00\01\00\00\01\01\01\00\00\01\00\00\01\00"], align 16
@ff_silk_lsf_codebook_nbmb = constant [32 x [10 x i8]] [[10 x i8] c"\0C#<Sl\84\9D\B4\CE\E4", [10 x i8] c"\0F 7Me}\97\AF\C9\E1", [10 x i8] c"\13*BYr\89\A2\B8\D1\E6", [10 x i8] c"\0C\192Hax\93\AC\C8\DF", [10 x i8] c"\1A,EZr\87\9F\B4\CD\E1", [10 x i8] c"\0D\165Pj\82\9C\B4\CD\E4", [10 x i8] c"\0F\19,@Zs\8E\A8\C4\DE", [10 x i8] c"\13\18>Rdx\91\A8\BE\D6", [10 x i8] c"\16\1F2Ogx\97\AA\CB\E3", [10 x i8] c"\15\1D-Aj|\96\AB\C4\E0", [10 x i8] c"\1E1Kay\8E\A5\BA\D1\E5", [10 x i8] c"\13\194F]t\8F\A6\C0\DB", [10 x i8] c"\1A\22>Kav\91\A7\C2\D9", [10 x i8] c"\19!8F[q\8F\A5\C4\DF", [10 x i8] c"\15\223Hau\91\AB\C4\DE", [10 x i8] c"\14\1D2CZu\90\A8\C5\DD", [10 x i8] c"\16\1F0B_u\92\A8\C4\DE", [10 x i8] c"\18!3Mt\86\9E\B4\C8\E0", [10 x i8] c"\15\1CFWj|\95\AA\C2\D9", [10 x i8] c"\1A!5@Su\98\AD\CC\E1", [10 x i8] c"\1B\22A_l\81\9B\AE\D2\E1", [10 x i8] c"\14\1AHcq\83\9A\B0\C8\DB", [10 x i8] c"\22+=N]r\9B\B1\CD\E5", [10 x i8] c"\17\1D6a|\8A\A3\B3\D1\E5", [10 x i8] c"\1E&8Yv\81\9E\B2\C8\E7", [10 x i8] c"\15\1D1?Uo\8E\A3\C1\DE", [10 x i8] c"\1B0Mg\85\9E\B3\C4\D7\E8", [10 x i8] c"\1D/Jc|\97\B0\C6\DC\ED", [10 x i8] c"!*=L]y\9B\AE\CF\E1", [10 x i8] c"\1D5Wp\88\9A\AA\BC\D0\E3", [10 x i8] c"\18\1E4T\83\96\A6\BA\CB\E5", [10 x i8] c"%0@Thv\9C\B1\C9\E6"], align 16
@ff_silk_lsf_codebook_wb = constant [32 x [16 x i8]] [[16 x i8] c"\07\17&6EUdt\83\93\A2\B2\C1\D0\DF\EF", [16 x i8] c"\0D\19)7ESbp\7F\8E\9D\AB\BB\CB\DC\EC", [16 x i8] c"\0F\15\223=N\5Cj~\88\98\A7\B9\CD\E1\F0", [16 x i8] c"\0A\15$2?O_n~\8D\9D\AD\BD\CD\DD\ED", [16 x i8] c"\11\14%3;NYk{\86\96\A4\B8\CD\E0\F0", [16 x i8] c"\0A\0F 3CQ`p\81\8E\9E\AD\BD\CC\DC\EC", [16 x i8] c"\08\15%3AObq~\8A\9B\A8\B3\C0\D1\DA", [16 x i8] c"\0C\0F\227?NWlv\83\94\A7\B9\CB\DB\EC", [16 x i8] c"\10\13 $8O[lv\88\9A\AB\BA\CC\DC\ED", [16 x i8] c"\0B\1C+:JYix\87\96\A5\B4\C4\D3\E2\F1", [16 x i8] c"\06\10!.<K\5Ck{\89\9C\A9\B9\C7\D6\E1", [16 x i8] c"\0B\13\1E,9JYiy\87\98\A9\BA\CA\DA\EA", [16 x i8] c"\0C\13\1D.9GXdx\84\94\A5\B6\C7\D8\E9", [16 x i8] c"\11\17#.8M\5Cj{\86\98\A7\B9\CC\DE\ED", [16 x i8] c"\0E\11-5?KYks\84\97\AB\BC\CE\DD\F0", [16 x i8] c"\09\10\1D(8GXgw\89\9A\AB\BD\CD\DE\ED", [16 x i8] c"\10\13$09LWiv\84\96\A7\B9\CA\DA\EC", [16 x i8] c"\0C\11\1D6GQ^h~\88\95\A4\B6\C9\DD\ED", [16 x i8] c"\0F\1C/>Oas\81\8E\9B\A8\B4\C2\D0\DF\EE", [16 x i8] c"\08\0E\1E->N^o\7F\8F\9F\AF\C0\CF\DF\EF", [16 x i8] c"\11\1E1>O\5Ckw\84\91\A0\AE\BE\CC\DC\EB", [16 x i8] c"\0E\13$-=L[ly\8A\9A\AC\BD\CD\DE\EE", [16 x i8] c"\0C\12\1F-<L[k{\8A\9A\AB\BB\CC\DD\EC", [16 x i8] c"\0D\11\1F+5FSgr\83\95\A7\B9\CB\DC\ED", [16 x i8] c"\11\16#*:N]n}\8B\9B\AA\BC\CE\E0\F0", [16 x i8] c"\08\0F\222CScs\83\92\A2\B2\C1\D1\E0\EF", [16 x i8] c"\0D\10)BIV_o\80\89\96\A3\B7\CE\E1\F1", [16 x i8] c"\11\19%4?K\5Cfw\84\90\A0\AF\BF\D4\E7", [16 x i8] c"\13\1F1ASdu\85\93\A1\AE\BB\C8\D5\E3\F2", [16 x i8] c"\12\1F4DXgu~\8A\95\A3\B1\C0\CF\DF\EF", [16 x i8] c"\10\1D/=LZjw\85\93\A1\B0\C1\D1\E0\F0", [16 x i8] c"\0F\15#2=IVanw\81\8D\AF\C6\DA\ED"], align 16
@ff_silk_lsf_min_spacing_nbmb = constant [11 x i16] [i16 250, i16 3, i16 6, i16 3, i16 3, i16 3, i16 4, i16 3, i16 3, i16 3, i16 461], align 16
@ff_silk_lsf_min_spacing_wb = constant [17 x i16] [i16 100, i16 3, i16 40, i16 3, i16 3, i16 3, i16 5, i16 14, i16 14, i16 10, i16 11, i16 3, i16 8, i16 9, i16 7, i16 3, i16 347], align 16
@ff_silk_lsf_ordering_nbmb = constant [10 x i8] c"\00\09\06\03\04\05\08\01\02\07", align 1
@ff_silk_lsf_ordering_wb = constant [16 x i8] c"\00\0F\08\07\04\0B\0C\03\02\0D\0A\05\06\09\0E\01", align 16
@ff_silk_cosine = constant [129 x i16] [i16 4096, i16 4095, i16 4091, i16 4085, i16 4076, i16 4065, i16 4052, i16 4036, i16 4017, i16 3997, i16 3973, i16 3948, i16 3920, i16 3889, i16 3857, i16 3822, i16 3784, i16 3745, i16 3703, i16 3659, i16 3613, i16 3564, i16 3513, i16 3461, i16 3406, i16 3349, i16 3290, i16 3229, i16 3166, i16 3102, i16 3035, i16 2967, i16 2896, i16 2824, i16 2751, i16 2676, i16 2599, i16 2520, i16 2440, i16 2359, i16 2276, i16 2191, i16 2106, i16 2019, i16 1931, i16 1842, i16 1751, i16 1660, i16 1568, i16 1474, i16 1380, i16 1285, i16 1189, i16 1093, i16 995, i16 897, i16 799, i16 700, i16 601, i16 501, i16 401, i16 301, i16 201, i16 101, i16 0, i16 -101, i16 -201, i16 -301, i16 -401, i16 -501, i16 -601, i16 -700, i16 -799, i16 -897, i16 -995, i16 -1093, i16 -1189, i16 -1285, i16 -1380, i16 -1474, i16 -1568, i16 -1660, i16 -1751, i16 -1842, i16 -1931, i16 -2019, i16 -2106, i16 -2191, i16 -2276, i16 -2359, i16 -2440, i16 -2520, i16 -2599, i16 -2676, i16 -2751, i16 -2824, i16 -2896, i16 -2967, i16 -3035, i16 -3102, i16 -3166, i16 -3229, i16 -3290, i16 -3349, i16 -3406, i16 -3461, i16 -3513, i16 -3564, i16 -3613, i16 -3659, i16 -3703, i16 -3745, i16 -3784, i16 -3822, i16 -3857, i16 -3889, i16 -3920, i16 -3948, i16 -3973, i16 -3997, i16 -4017, i16 -4036, i16 -4052, i16 -4065, i16 -4076, i16 -4085, i16 -4091, i16 -4095, i16 -4096], align 16
@ff_silk_pitch_scale = constant [3 x i16] [i16 4, i16 6, i16 8], align 2
@ff_silk_pitch_min_lag = constant [3 x i16] [i16 16, i16 24, i16 32], align 2
@ff_silk_pitch_max_lag = constant [3 x i16] [i16 144, i16 216, i16 288], align 2
@ff_silk_pitch_offset_nb10ms = constant [3 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01"], align 1
@ff_silk_pitch_offset_nb20ms = constant [11 x [4 x i8]] [[4 x i8] zeroinitializer, [4 x i8] c"\02\01\00\FF", [4 x i8] c"\FF\00\01\02", [4 x i8] c"\FF\00\00\01", [4 x i8] c"\FF\00\00\00", [4 x i8] c"\00\00\00\01", [4 x i8] c"\00\00\01\01", [4 x i8] c"\01\01\00\00", [4 x i8] c"\01\00\00\00", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\01\00\00\FF"], align 16
@ff_silk_pitch_offset_mbwb10ms = constant [12 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\FF\01", [2 x i8] c"\01\FF", [2 x i8] c"\FF\02", [2 x i8] c"\02\FF", [2 x i8] c"\FE\02", [2 x i8] c"\02\FE", [2 x i8] c"\FE\03", [2 x i8] c"\03\FE", [2 x i8] c"\FD\03"], align 16
@ff_silk_pitch_offset_mbwb20ms = constant [34 x [4 x i8]] [[4 x i8] zeroinitializer, [4 x i8] c"\00\00\01\01", [4 x i8] c"\01\01\00\00", [4 x i8] c"\FF\00\00\00", [4 x i8] c"\00\00\00\01", [4 x i8] c"\01\00\00\00", [4 x i8] c"\FF\00\00\01", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\00\01\02", [4 x i8] c"\01\00\00\FF", [4 x i8] c"\FE\FF\01\02", [4 x i8] c"\02\01\00\FF", [4 x i8] c"\FE\00\00\02", [4 x i8] c"\FE\00\01\03", [4 x i8] c"\02\01\FF\FE", [4 x i8] c"\FD\FF\01\03", [4 x i8] c"\02\00\00\FE", [4 x i8] c"\03\01\00\FE", [4 x i8] c"\FD\FF\02\04", [4 x i8] c"\FC\FF\01\04", [4 x i8] c"\03\01\FF\FD", [4 x i8] c"\FC\FF\02\05", [4 x i8] c"\04\02\FF\FD", [4 x i8] c"\04\01\FF\FC", [4 x i8] c"\FB\FF\02\06", [4 x i8] c"\05\02\FF\FC", [4 x i8] c"\FA\FE\02\06", [4 x i8] c"\FB\FE\02\05", [4 x i8] c"\06\02\FF\FB", [4 x i8] c"\F9\FE\03\08", [4 x i8] c"\06\02\FE\FA", [4 x i8] c"\05\02\FE\FB", [4 x i8] c"\08\03\FE\F9", [4 x i8] c"\F7\FD\03\09"], align 16
@ff_silk_ltp_filter0_taps = constant [8 x [5 x i8]] [[5 x i8] c"\04\06\18\07\05", [5 x i8] c"\00\00\02\00\00", [5 x i8] c"\0C\1C)\0D\FC", [5 x i8] c"\F7\0F*\19\0E", [5 x i8] c"\01\FE>)\F7", [5 x i8] c"\F6%A\FC\03", [5 x i8] c"\FA\04B\07\F8", [5 x i8] c"\10\0E&\FD!"], align 16
@ff_silk_ltp_filter1_taps = constant [16 x [5 x i8]] [[5 x i8] c"\0D\16'\17\0C", [5 x i8] c"\FF$@\1B\FA", [5 x i8] c"\F9\0A7+\11", [5 x i8] c"\01\01\08\01\01", [5 x i8] c"\06\F5J5\F7", [5 x i8] c"\F47L\F4\08", [5 x i8] c"\FD\03]\1B\FC", [5 x i8] c"\1A';\03\F8", [5 x i8] c"\02\00M\0B\09", [5 x i8] c"\F8\16,\FA\07", [5 x i8] c"(\09\1A\03\09", [5 x i8] c"\F9\14e\F9\04", [5 x i8] c"\03\F8*\1A\00", [5 x i8] c"\F1!D\02\17", [5 x i8] c"\FE7.\FE\0F", [5 x i8] c"\03\FF\15\10)"], align 16
@ff_silk_ltp_filter2_taps = constant [32 x [5 x i8]] [[5 x i8] c"\FA\1B='\05", [5 x i8] c"\F5*X\04\01", [5 x i8] c"\FE<A\06\FC", [5 x i8] c"\FF\FBI8\01", [5 x i8] c"\F7\13^\1D\F7", [5 x i8] c"\00\0Cc\06\04", [5 x i8] c"\08\EDf.\F3", [5 x i8] c"\03\02\0D\03\02", [5 x i8] c"\09\EBTH\EE", [5 x i8] c"\F5.h\EA\08", [5 x i8] c"\12&0\17\00", [5 x i8] c"\F0FS\EB\0B", [5 x i8] c"\05\F5u\16\F8", [5 x i8] c"\FA\17u\F4\03", [5 x i8] c"\03\F8_\1C\04", [5 x i8] c"\F6\0FM<\F1", [5 x i8] c"\FF\04|\02\FC", [5 x i8] c"\03&T\18\E7", [5 x i8] c"\02\0D*\0D\1F", [5 x i8] c"\15\FC8.\FF", [5 x i8] c"\FF#O\F3\13", [5 x i8] c"\F9AX\F7\F2", [5 x i8] c"\14\04Q1\E3", [5 x i8] c"\14\00K\03\EF", [5 x i8] c"\05\F7,\5C\F8", [5 x i8] c"\01\FD\16E\1F", [5 x i8] c"\FA_)\F4\05", [5 x i8] c"'C\10\FC\01", [5 x i8] c"\00\FAx7\DC", [5 x i8] c"\F3,z\04\E8", [5 x i8] c"Q\05\0B\03\07", [5 x i8] c"\02\00\09\0AX"], align 16
@ff_silk_ltp_scale_factor = constant [3 x i16] [i16 15565, i16 12288, i16 8192], align 2
@ff_silk_shell_blocks = constant [3 x [2 x i8]] [[2 x i8] c"\05\0A", [2 x i8] c"\08\0F", [2 x i8] c"\0A\14"], align 1
@ff_silk_quant_offset = constant [2 x [2 x i8]] [[2 x i8] c"\19<", [2 x i8] c"\08\19"], align 1
@ff_silk_stereo_interp_len = constant [3 x i32] [i32 64, i32 96, i32 128], align 4
@ff_celt_model_tapset = constant [4 x i16] [i16 4, i16 2, i16 3, i16 4], align 2
@ff_celt_model_spread = constant [5 x i16] [i16 32, i16 7, i16 9, i16 30, i16 32], align 2
@ff_celt_model_alloc_trim = constant [12 x i16] [i16 128, i16 2, i16 4, i16 9, i16 19, i16 41, i16 87, i16 109, i16 119, i16 124, i16 126, i16 128], align 16
@ff_celt_model_energy_small = constant [4 x i16] [i16 4, i16 2, i16 3, i16 4], align 2
@ff_celt_freq_bands = constant [22 x i8] c"\00\01\02\03\04\05\06\07\08\0A\0C\0E\10\14\18\1C\22(0<Nd", align 16
@ff_celt_freq_range = constant [21 x i8] c"\01\01\01\01\01\01\01\01\02\02\02\02\04\04\04\06\06\08\0C\12\16", align 16
@ff_celt_log_freq_range = constant [21 x i8] c"\00\00\00\00\00\00\00\00\08\08\08\08\10\10\10\15\15\18\1D\22$", align 16
@ff_celt_tf_select = constant [4 x [2 x [2 x [2 x i8]]]] [[2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\00\FF", [2 x i8] c"\00\FF"], [2 x [2 x i8]] [[2 x i8] c"\00\FF", [2 x i8] c"\00\FF"]], [2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\00\FF", [2 x i8] c"\00\FE"], [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\01\FF"]], [2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\00\FE", [2 x i8] c"\00\FD"], [2 x [2 x i8]] [[2 x i8] c"\02\00", [2 x i8] c"\01\FF"]], [2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\00\FE", [2 x i8] c"\00\FD"], [2 x [2 x i8]] [[2 x i8] c"\03\00", [2 x i8] c"\01\FF"]]], align 16
@ff_celt_mean_energy = constant [25 x float] [float 6.437500e+00, float 6.250000e+00, float 5.750000e+00, float 5.312500e+00, float 5.062500e+00, float 4.812500e+00, float 4.500000e+00, float 4.375000e+00, float 4.875000e+00, float 4.687500e+00, float 4.562500e+00, float 4.437500e+00, float 4.875000e+00, float 4.625000e+00, float 4.312500e+00, float 4.500000e+00, float 4.375000e+00, float 4.625000e+00, float 4.750000e+00, float 4.437500e+00, float 3.750000e+00, float 3.750000e+00, float 3.750000e+00, float 3.750000e+00, float 3.750000e+00], align 16
@ff_celt_alpha_coef = constant [4 x float] [float 8.984375e-01, float 7.968750e-01, float 6.484375e-01, float 5.000000e-01], align 16
@ff_celt_beta_coef = constant [4 x float] [float 0x3FB47A0000000000, float 0x3FD47B0000000000, float 0x3FE4290000000000, float 0x3FE9998000000000], align 16
@ff_celt_coarse_energy_dist = constant [4 x [2 x [42 x i8]]] [[2 x [42 x i8]] [[42 x i8] c"H\7FA\81B\80A\80@\80>\80@\80@\80\5CN\5CO\5CNZOt)s(r(\84\1A\84\1A\91\11\A1\0C\B0\0A\B1\0B", [42 x i8] c"\18\B30\8A6\876\845\868\857\847\84=rF`JXKXWJYB[Cd;l2x(z%a+N2"], [2 x [42 x i8]] [[42 x i8] c"SNTQXKVJWGZI]J]Jm(r$u\22u\22\8F\11\91\12\92\13\A2\0C\A5\0A\B2\07\BD\06\BE\08\B1\09", [42 x i8] c"\17\B26s?fBbEcJYG[I[NYVP\5CB]@f;g<h<u4{,\8A#\85\1Fa&M-"], [2 x [42 x i8]] [[42 x i8] c"=Z]<i*k)n-t&q&p&|\1A\84\1B\88\13\8C\14\9B\0E\9F\10\9E\12\AA\0D\B1\0A\BB\08\C0\06\AF\09\9F\0A", [42 x i8] c"\15\B2;nGVKUTS[BXIWH\5CKbHi:k6s4r7p8\813\84(\96!\8C\1Db#M*"], [2 x [42 x i8]] [[42 x i8] c"*y`Bl+o(u,{ x$w!\7F!\86\22\8B\15\93\17\98\14\9E\19\9A\1A\A6\15\AD\10\B8\0D\B8\0A\96\0D\8B\0F", [42 x i8] c"\16\B2?rJRTS\5CRg>`H`CeIkHq7v4}4v4u7\871\89'\9D \91\1Da!M("]], align 16
@ff_celt_static_alloc = constant [11 x [21 x i8]] [[21 x i8] zeroinitializer, [21 x i8] c"ZPKE?81(\22\1D\14\12\0A\00\00\00\00\00\00\00\00", [21 x i8] c"ndZTNGA:3-' \1A\14\0C\00\00\00\00\00\00", [21 x i8] c"vng]VPKFA;5/(\1F\17\0F\04\00\00\00\00", [21 x i8] c"~wph_YSNHB<6/' \19\11\0C\01\00\00", [21 x i8] c"\86\7Fxrga[UNHB<6/)#\1D\17\10\0A\01", [21 x i8] c"\90\89\82|qke_XRLF@93-'!\1A\0F\01", [21 x i8] c"\98\91\8A\84{uoib\5CVPJC=71+$\14\01", [21 x i8] c"\A2\9B\94\8E\85\7Fyslf`ZTMGA;5.\1E\01", [21 x i8] c"\AC\A5\9E\98\8F\89\83}vpjd^WQKE?8-\14", [21 x i8] c"\C8\C8\C8\C8\C8\C8\C8\C8\C6\C1\BC\B7\B2\AD\A8\A3\9E\99\94\81h"], align 16
@ff_celt_static_caps = constant [4 x [2 x [21 x i8]]] [[2 x [21 x i8]] [[21 x i8] c"\E0\E0\E0\E0\E0\E0\E0\E0\A0\A0\A0\A0\B9\B9\B9\B2\B2\A8\86=%", [21 x i8] c"\E0\E0\E0\E0\E0\E0\E0\E0\F0\F0\F0\F0\CF\CF\CF\C6\C6\B7\90B("], [2 x [21 x i8]] [[21 x i8] c"\A0\A0\A0\A0\A0\A0\A0\A0\B9\B9\B9\B9\C1\C1\C1\B7\B7\AC\8A@&", [21 x i8] c"\F0\F0\F0\F0\F0\F0\F0\F0\CF\CF\CF\CF\CC\CC\CC\C1\C1\B4\8FB("], [2 x [21 x i8]] [[21 x i8] c"\B9\B9\B9\B9\B9\B9\B9\B9\C1\C1\C1\C1\C1\C1\C1\B7\B7\AC\8AA'", [21 x i8] c"\CF\CF\CF\CF\CF\CF\CF\CF\CC\CC\CC\CC\C9\C9\C9\BC\BC\B0\8DB("], [2 x [21 x i8]] [[21 x i8] c"\C1\C1\C1\C1\C1\C1\C1\C1\C1\C1\C1\C1\C2\C2\C2\B8\B8\AD\8BA'", [21 x i8] c"\CC\CC\CC\CC\CC\CC\CC\CC\C9\C9\C9\C9\C6\C6\C6\BB\BB\AF\8CB("]], align 16
@ff_celt_cache_bits = constant [392 x i8] c"(\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07(\0F\17\1C\1F\22$&')*+,-.//123456779:;<=>??ABCDEFGG(\14!)059=@BEGIKLNPRUWY[\5C^`begiklnpruwy{|~\80(\17'3<CIOSW[^adfikosvy|~\81\83\87\8B\8E\91\94\96\99\9B\9F\A3\A6\A9\AC\AE\B1\B3#\1C1ANYckrx~\84\88\8D\91\95\99\9F\A5\AB\B0\B4\B9\BD\C0\C7\CD\D3\D8\DC\E1\E5\E8\EF\F5\FB\15!:Oap}\89\94\9D\A6\AE\B6\BD\C3\C9\CF\D9\E3\EB\F3\FB\11#?Vj{\8B\98\A5\B1\BB\C5\CE\D6\DE\E6\ED\FA\19\1F7K[iu\80\8A\92\9A\A1\A8\AE\B4\B9\BE\C8\D0\D7\DE\E5\EB\F0\F5\FF\10$AYn\80\90\9F\AD\B9\C4\CF\D9\E2\EA\F2\FA\0B)Jg\80\97\AC\BF\D1\E1\F1\FF\09+On\8A\A3\BA\CF\E3\F6\0C'Gc{\90\A4\B6\C6\D6\E4\F1\FD\09,Qq\8E\A8\C0\D6\EB\FF\071Z\7F\A0\BF\DC\F7\063_\86\AA\CB\EA\07/W{\9B\B8\D4\ED\064a\89\AE\D0\F0\059j\97\C0\E7\05;o\9E\CA\F3\057g\93\BB\E0\05<q\A1\CE\F8\04Az\AF\E0\04C\7F\B6\EA", align 16
@ff_celt_cache_index = constant [105 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 0, i16 0, i16 41, i16 41, i16 41, i16 82, i16 82, i16 123, i16 164, i16 200, i16 222, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 41, i16 41, i16 41, i16 41, i16 123, i16 123, i16 123, i16 164, i16 164, i16 240, i16 266, i16 283, i16 295, i16 41, i16 41, i16 41, i16 41, i16 41, i16 41, i16 41, i16 41, i16 123, i16 123, i16 123, i16 123, i16 240, i16 240, i16 240, i16 266, i16 266, i16 305, i16 318, i16 328, i16 336, i16 123, i16 123, i16 123, i16 123, i16 123, i16 123, i16 123, i16 123, i16 240, i16 240, i16 240, i16 240, i16 305, i16 305, i16 305, i16 318, i16 318, i16 343, i16 351, i16 358, i16 364, i16 240, i16 240, i16 240, i16 240, i16 240, i16 240, i16 240, i16 240, i16 305, i16 305, i16 305, i16 305, i16 343, i16 343, i16 343, i16 351, i16 351, i16 370, i16 376, i16 382, i16 387], align 16
@ff_celt_log2_frac = constant [24 x i8] c"\00\08\0D\10\13\15\17\18\1A\1B\1C\1D\1E\1F  !\22\22#$$%%", align 16
@ff_celt_bit_interleave = constant [16 x i8] c"\00\01\01\01\02\03\03\03\02\03\03\03\02\03\03\03", align 16
@ff_celt_bit_deinterleave = constant [16 x i8] c"\00\03\0C\0F03<?\C0\C3\CC\CF\F0\F3\FC\FF", align 16
@ff_celt_hadamard_order = constant [46 x i8] c"\01\00\03\00\02\01\07\00\04\03\06\01\05\02\0F\00\08\07\0C\03\0B\04\0E\01\09\06\0D\02\0A\05\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 16
@ff_celt_qn_exp2 = constant [8 x i16] [i16 16384, i16 17866, i16 19483, i16 21247, i16 23170, i16 25267, i16 27554, i16 30048], align 16
@ff_celt_pvq_u = constant [1272 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63, i32 65, i32 67, i32 69, i32 71, i32 73, i32 75, i32 77, i32 79, i32 81, i32 83, i32 85, i32 87, i32 89, i32 91, i32 93, i32 95, i32 97, i32 99, i32 101, i32 103, i32 105, i32 107, i32 109, i32 111, i32 113, i32 115, i32 117, i32 119, i32 121, i32 123, i32 125, i32 127, i32 129, i32 131, i32 133, i32 135, i32 137, i32 139, i32 141, i32 143, i32 145, i32 147, i32 149, i32 151, i32 153, i32 155, i32 157, i32 159, i32 161, i32 163, i32 165, i32 167, i32 169, i32 171, i32 173, i32 175, i32 177, i32 179, i32 181, i32 183, i32 185, i32 187, i32 189, i32 191, i32 193, i32 195, i32 197, i32 199, i32 201, i32 203, i32 205, i32 207, i32 209, i32 211, i32 213, i32 215, i32 217, i32 219, i32 221, i32 223, i32 225, i32 227, i32 229, i32 231, i32 233, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 249, i32 251, i32 253, i32 255, i32 257, i32 259, i32 261, i32 263, i32 265, i32 267, i32 269, i32 271, i32 273, i32 275, i32 277, i32 279, i32 281, i32 283, i32 285, i32 287, i32 289, i32 291, i32 293, i32 295, i32 297, i32 299, i32 301, i32 303, i32 305, i32 307, i32 309, i32 311, i32 313, i32 315, i32 317, i32 319, i32 321, i32 323, i32 325, i32 327, i32 329, i32 331, i32 333, i32 335, i32 337, i32 339, i32 341, i32 343, i32 345, i32 347, i32 349, i32 351, i32 13, i32 25, i32 41, i32 61, i32 85, i32 113, i32 145, i32 181, i32 221, i32 265, i32 313, i32 365, i32 421, i32 481, i32 545, i32 613, i32 685, i32 761, i32 841, i32 925, i32 1013, i32 1105, i32 1201, i32 1301, i32 1405, i32 1513, i32 1625, i32 1741, i32 1861, i32 1985, i32 2113, i32 2245, i32 2381, i32 2521, i32 2665, i32 2813, i32 2965, i32 3121, i32 3281, i32 3445, i32 3613, i32 3785, i32 3961, i32 4141, i32 4325, i32 4513, i32 4705, i32 4901, i32 5101, i32 5305, i32 5513, i32 5725, i32 5941, i32 6161, i32 6385, i32 6613, i32 6845, i32 7081, i32 7321, i32 7565, i32 7813, i32 8065, i32 8321, i32 8581, i32 8845, i32 9113, i32 9385, i32 9661, i32 9941, i32 10225, i32 10513, i32 10805, i32 11101, i32 11401, i32 11705, i32 12013, i32 12325, i32 12641, i32 12961, i32 13285, i32 13613, i32 13945, i32 14281, i32 14621, i32 14965, i32 15313, i32 15665, i32 16021, i32 16381, i32 16745, i32 17113, i32 17485, i32 17861, i32 18241, i32 18625, i32 19013, i32 19405, i32 19801, i32 20201, i32 20605, i32 21013, i32 21425, i32 21841, i32 22261, i32 22685, i32 23113, i32 23545, i32 23981, i32 24421, i32 24865, i32 25313, i32 25765, i32 26221, i32 26681, i32 27145, i32 27613, i32 28085, i32 28561, i32 29041, i32 29525, i32 30013, i32 30505, i32 31001, i32 31501, i32 32005, i32 32513, i32 33025, i32 33541, i32 34061, i32 34585, i32 35113, i32 35645, i32 36181, i32 36721, i32 37265, i32 37813, i32 38365, i32 38921, i32 39481, i32 40045, i32 40613, i32 41185, i32 41761, i32 42341, i32 42925, i32 43513, i32 44105, i32 44701, i32 45301, i32 45905, i32 46513, i32 47125, i32 47741, i32 48361, i32 48985, i32 49613, i32 50245, i32 50881, i32 51521, i32 52165, i32 52813, i32 53465, i32 54121, i32 54781, i32 55445, i32 56113, i32 56785, i32 57461, i32 58141, i32 58825, i32 59513, i32 60205, i32 60901, i32 61601, i32 63, i32 129, i32 231, i32 377, i32 575, i32 833, i32 1159, i32 1561, i32 2047, i32 2625, i32 3303, i32 4089, i32 4991, i32 6017, i32 7175, i32 8473, i32 9919, i32 11521, i32 13287, i32 15225, i32 17343, i32 19649, i32 22151, i32 24857, i32 27775, i32 30913, i32 34279, i32 37881, i32 41727, i32 45825, i32 50183, i32 54809, i32 59711, i32 64897, i32 70375, i32 76153, i32 82239, i32 88641, i32 95367, i32 102425, i32 109823, i32 117569, i32 125671, i32 134137, i32 142975, i32 152193, i32 161799, i32 171801, i32 182207, i32 193025, i32 204263, i32 215929, i32 228031, i32 240577, i32 253575, i32 267033, i32 280959, i32 295361, i32 310247, i32 325625, i32 341503, i32 357889, i32 374791, i32 392217, i32 410175, i32 428673, i32 447719, i32 467321, i32 487487, i32 508225, i32 529543, i32 551449, i32 573951, i32 597057, i32 620775, i32 645113, i32 670079, i32 695681, i32 721927, i32 748825, i32 776383, i32 804609, i32 833511, i32 863097, i32 893375, i32 924353, i32 956039, i32 988441, i32 1021567, i32 1055425, i32 1090023, i32 1125369, i32 1161471, i32 1198337, i32 1235975, i32 1274393, i32 1313599, i32 1353601, i32 1394407, i32 1436025, i32 1478463, i32 1521729, i32 1565831, i32 1610777, i32 1656575, i32 1703233, i32 1750759, i32 1799161, i32 1848447, i32 1898625, i32 1949703, i32 2001689, i32 2054591, i32 2108417, i32 2163175, i32 2218873, i32 2275519, i32 2333121, i32 2391687, i32 2451225, i32 2511743, i32 2573249, i32 2635751, i32 2699257, i32 2763775, i32 2829313, i32 2895879, i32 2963481, i32 3032127, i32 3101825, i32 3172583, i32 3244409, i32 3317311, i32 3391297, i32 3466375, i32 3542553, i32 3619839, i32 3698241, i32 3777767, i32 3858425, i32 3940223, i32 4023169, i32 4107271, i32 4192537, i32 4278975, i32 4366593, i32 4455399, i32 4545401, i32 4636607, i32 4729025, i32 4822663, i32 4917529, i32 5013631, i32 5110977, i32 5209575, i32 5309433, i32 5410559, i32 5512961, i32 5616647, i32 5721625, i32 5827903, i32 5935489, i32 6044391, i32 6154617, i32 6266175, i32 6379073, i32 6493319, i32 6608921, i32 6725887, i32 6844225, i32 6963943, i32 7085049, i32 7207551, i32 321, i32 681, i32 1289, i32 2241, i32 3649, i32 5641, i32 8361, i32 11969, i32 16641, i32 22569, i32 29961, i32 39041, i32 50049, i32 63241, i32 78889, i32 97281, i32 118721, i32 143529, i32 172041, i32 204609, i32 241601, i32 283401, i32 330409, i32 383041, i32 441729, i32 506921, i32 579081, i32 658689, i32 746241, i32 842249, i32 947241, i32 1061761, i32 1186369, i32 1321641, i32 1468169, i32 1626561, i32 1797441, i32 1981449, i32 2179241, i32 2391489, i32 2618881, i32 2862121, i32 3121929, i32 3399041, i32 3694209, i32 4008201, i32 4341801, i32 4695809, i32 5071041, i32 5468329, i32 5888521, i32 6332481, i32 6801089, i32 7295241, i32 7815849, i32 8363841, i32 8940161, i32 9545769, i32 10181641, i32 10848769, i32 11548161, i32 12280841, i32 13047849, i32 13850241, i32 14689089, i32 15565481, i32 16480521, i32 17435329, i32 18431041, i32 19468809, i32 20549801, i32 21675201, i32 22846209, i32 24064041, i32 25329929, i32 26645121, i32 28010881, i32 29428489, i32 30899241, i32 32424449, i32 34005441, i32 35643561, i32 37340169, i32 39096641, i32 40914369, i32 42794761, i32 44739241, i32 46749249, i32 48826241, i32 50971689, i32 53187081, i32 55473921, i32 57833729, i32 60268041, i32 62778409, i32 65366401, i32 68033601, i32 70781609, i32 73612041, i32 76526529, i32 79526721, i32 82614281, i32 85790889, i32 89058241, i32 92418049, i32 95872041, i32 99421961, i32 103069569, i32 106816641, i32 110664969, i32 114616361, i32 118672641, i32 122835649, i32 127107241, i32 131489289, i32 135983681, i32 140592321, i32 145317129, i32 150160041, i32 155123009, i32 160208001, i32 165417001, i32 170752009, i32 176215041, i32 181808129, i32 187533321, i32 193392681, i32 199388289, i32 205522241, i32 211796649, i32 218213641, i32 224775361, i32 231483969, i32 238341641, i32 245350569, i32 252512961, i32 259831041, i32 267307049, i32 274943241, i32 282741889, i32 290705281, i32 298835721, i32 307135529, i32 315607041, i32 324252609, i32 333074601, i32 342075401, i32 351257409, i32 360623041, i32 370174729, i32 379914921, i32 389846081, i32 399970689, i32 410291241, i32 420810249, i32 431530241, i32 442453761, i32 453583369, i32 464921641, i32 476471169, i32 488234561, i32 500214441, i32 512413449, i32 524834241, i32 537479489, i32 550351881, i32 563454121, i32 576788929, i32 590359041, i32 604167209, i32 618216201, i32 632508801, i32 1683, i32 3653, i32 7183, i32 13073, i32 22363, i32 36365, i32 56695, i32 85305, i32 124515, i32 177045, i32 246047, i32 335137, i32 448427, i32 590557, i32 766727, i32 982729, i32 1244979, i32 1560549, i32 1937199, i32 2383409, i32 2908411, i32 3522221, i32 4235671, i32 5060441, i32 6009091, i32 7095093, i32 8332863, i32 9737793, i32 11326283, i32 13115773, i32 15124775, i32 17372905, i32 19880915, i32 22670725, i32 25765455, i32 29189457, i32 32968347, i32 37129037, i32 41699767, i32 46710137, i32 52191139, i32 58175189, i32 64696159, i32 71789409, i32 79491819, i32 87841821, i32 96879431, i32 106646281, i32 117185651, i32 128542501, i32 140763503, i32 153897073, i32 167993403, i32 183104493, i32 199284183, i32 216588185, i32 235074115, i32 254801525, i32 275831935, i32 298228865, i32 322057867, i32 347386557, i32 374284647, i32 402823977, i32 433078547, i32 465124549, i32 499040399, i32 534906769, i32 572806619, i32 612825229, i32 655050231, i32 699571641, i32 746481891, i32 795875861, i32 847850911, i32 902506913, i32 959946283, i32 1020274013, i32 1083597703, i32 1150027593, i32 1219676595, i32 1292660325, i32 1369097135, i32 1449108145, i32 1532817275, i32 1620351277, i32 1711839767, i32 1807415257, i32 1907213187, i32 2011371957, i32 2120032959, i32 8989, i32 19825, i32 40081, i32 75517, i32 134245, i32 227305, i32 369305, i32 579125, i32 880685, i32 1303777, i32 1884961, i32 2668525, i32 3707509, i32 5064793, i32 6814249, i32 9041957, i32 11847485, i32 15345233, i32 19665841, i32 24957661, i32 31388293, i32 39146185, i32 48442297, i32 59511829, i32 72616013, i32 88043969, i32 106114625, i32 127178701, i32 151620757, i32 179861305, i32 212358985, i32 249612805, i32 292164445, i32 340600625, i32 395555537, i32 457713341, i32 527810725, i32 606639529, i32 695049433, i32 793950709, i32 904317037, i32 1027188385, i32 1163673953, i32 1314955181, i32 1482288821, i32 1667010073, i32 1870535785, i32 2094367717, i32 48639, i32 108545, i32 224143, i32 433905, i32 795455, i32 1392065, i32 2340495, i32 3800305, i32 5984767, i32 9173505, i32 13726991, i32 20103025, i32 28875327, i32 40754369, i32 56610575, i32 77500017, i32 104692735, i32 139703809, i32 184327311, i32 240673265, i32 311207743, i32 398796225, i32 506750351, i32 638878193, i32 799538175, i32 993696769, i32 1226990095, i32 1505789553, i32 1837271615, i32 -2065475391, i32 265729, i32 598417, i32 1256465, i32 2485825, i32 4673345, i32 8405905, i32 14546705, i32 24331777, i32 39490049, i32 62390545, i32 96220561, i32 145198913, i32 214828609, i32 312193553, i32 446304145, i32 628496897, i32 872893441, i32 1196924561, i32 1621925137, i32 -2121161151, i32 1462563, i32 3317445, i32 7059735, i32 14218905, i32 27298155, i32 50250765, i32 89129247, i32 152951073, i32 254831667, i32 413442773, i32 654862247, i32 1014889769, i32 1541911931, i32 -1994557667, i32 -919756625, i32 8097453, i32 18474633, i32 39753273, i32 81270333, i32 158819253, i32 298199265, i32 540279585, i32 948062325, i32 1616336765, i32 45046719, i32 103274625, i32 224298231, i32 464387817, i32 921406335, i32 1759885185, i32 -1046740201, i32 251595969, i32 579168825, i32 1267854873, i32 -1641318271, i32 1409933619], align 16
@ff_celt_postfilter_taps = constant [3 x [3 x float]] [[3 x float] [float 0x3FD3A00000000000, float 0x3FCBC80000000000, float 0x3FC0980000000000], [3 x float] [float 0x3FDDB00000000000, float 0x3FD1280000000000, float 0.000000e+00], [3 x float] [float 0x3FE9980000000000, float 0x3FB9A00000000000, float 0.000000e+00]], align 16
@ff_celt_window_padded = internal constant [136 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F11A38D40000000, float 0x3F43D76A40000000, float 0x3F5B8D2100000000, float 0x3F6AFDB040000000, float 0x3F764C7120000000, float 0x3F80A54060000000, float 0x3F873B8600000000, float 0x3F8EE7D680000000, float 0x3F93D46380000000, float 0x3F98BE5A20000000, float 0x3F9E30DFC0000000, float 0x3FA2157360000000, float 0x3FA555A0A0000000, float 0x3FA8D85080000000, float 0x3FAC9CCA60000000, float 0x3FB0512220000000, float 0x3FB273F0E0000000, float 0x3FB4B65960000000, float 0x3FB717DA20000000, float 0x3FB997E740000000, float 0x3FBC35EA80000000, float 0x3FBEF14280000000, float 0x3FC0E4A1C0000000, float 0x3FC25E9B20000000, float 0x3FC3E62BE0000000, float 0x3FC57AED00000000, float 0x3FC71C7140000000, float 0x3FC8CA4600000000, float 0x3FCA83F280000000, float 0x3FCC48F7E0000000, float 0x3FCE18D1C0000000, float 0x3FCFF2F600000000, float 0x3FD0EB6A40000000, float 0x3FD1E1EC00000000, float 0x3FD2DCB300000000, float 0x3FD3DB6F20000000, float 0x3FD4DDCE00000000, float 0x3FD5E37B00000000, float 0x3FD6EC1F60000000, float 0x3FD7F76220000000, float 0x3FD904E8C0000000, float 0x3FDA1456E0000000, float 0x3FDB254F00000000, float 0x3FDC377280000000, float 0x3FDD4A6180000000, float 0x3FDE5DBBC0000000, float 0x3FDF7120C0000000, float 0x3FE04217C0000000, float 0x3FE0CB43E0000000, float 0x3FE153E480000000, float 0x3FE1DBCA00000000, float 0x3FE262C560000000, float 0x3FE2E8A820000000, float 0x3FE36D44A0000000, float 0x3FE3F06E60000000, float 0x3FE471F9C0000000, float 0x3FE4F1BCC0000000, float 0x3FE56F8E80000000, float 0x3FE5EB47E0000000, float 0x3FE664C320000000, float 0x3FE6DBDCE0000000, float 0x3FE7507320000000, float 0x3FE7C26660000000, float 0x3FE83198A0000000, float 0x3FE89DEEE0000000, float 0x3FE9074FE0000000, float 0x3FE96DA4E0000000, float 0x3FE9D0D9C0000000, float 0x3FEA30DCA0000000, float 0x3FEA8D9E20000000, float 0x3FEAE711C0000000, float 0x3FEB3D2D20000000, float 0x3FEB8FE8A0000000, float 0x3FEBDF3F40000000, float 0x3FEC2B2E60000000, float 0x3FEC73B5E0000000, float 0x3FECB8D820000000, float 0x3FECFA99E0000000, float 0x3FED390220000000, float 0x3FED741A40000000, float 0x3FEDABEDC0000000, float 0x3FEDE08A00000000, float 0x3FEE11FE80000000, float 0x3FEE405CC0000000, float 0x3FEE6BB7A0000000, float 0x3FEE9423E0000000, float 0x3FEEB9B7E0000000, float 0x3FEEDC8AE0000000, float 0x3FEEFCB600000000, float 0x3FEF1A52E0000000, float 0x3FEF357C60000000, float 0x3FEF4E4E60000000, float 0x3FEF64E4E0000000, float 0x3FEF795CE0000000, float 0x3FEF8BD3A0000000, float 0x3FEF9C66A0000000, float 0x3FEFAB3380000000, float 0x3FEFB857A0000000, float 0x3FEFC3F0C0000000, float 0x3FEFCE1BC0000000, float 0x3FEFD6F560000000, float 0x3FEFDE99E0000000, float 0x3FEFE524C0000000, float 0x3FEFEAB0C0000000, float 0x3FEFEF57C0000000, float 0x3FEFF332C0000000, float 0x3FEFF65980000000, float 0x3FEFF8E280000000, float 0x3FEFFAE380000000, float 0x3FEFFC7040000000, float 0x3FEFFD9BA0000000, float 0x3FEFFE76C0000000, float 0x3FEFFF1140000000, float 0x3FEFFF7900000000, float 0x3FEFFFBAC0000000, float 0x3FEFFFE0E0000000, float 0x3FEFFFF4A0000000, float 0x3FEFFFFD00000000, float 0x3FEFFFFFA0000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 32
@ff_celt_window = global float* bitcast (i8* getelementptr (i8, i8* bitcast ([136 x float]* @ff_celt_window_padded to i8*), i64 32) to float*), align 8
@ff_celt_window2 = constant [120 x float] [float 0x3E33721400000000, float 0x3E989AF280000000, float 0x3EC7B89700000000, float 0x3EE6C41C00000000, float 0x3EFF13A600000000, float 0x3F11512BE0000000, float 0x3F20DDFC60000000, float 0x3F2DD94000000000, float 0x3F38937080000000, float 0x3F4321F2E0000000, float 0x3F4C7BEE80000000, float 0x3F547064E0000000, float 0x3F5C7291E0000000, float 0x3F634A2F40000000, float 0x3F69956280000000, float 0x3F70A3DF20000000, float 0x3F75482640000000, float 0x3F7ACFFD20000000, float 0x3F80AA5B60000000, float 0x3F84782A00000000, float 0x3F88DEB100000000, float 0x3F8DEB7B00000000, float 0x3F91D60640000000, float 0x3F95170A00000000, float 0x3F98BF99E0000000, float 0x3F9CD65E40000000, float 0x3FA0B0FC80000000, float 0x3FA33467E0000000, float 0x3FA5F88920000000, float 0x3FA90059C0000000, float 0x3FAC4E9E00000000, float 0x3FAFE5F160000000, float 0x3FB1E45D00000000, float 0x3FB3FC8BE0000000, float 0x3FB63C76A0000000, float 0x3FB8A4EA20000000, float 0x3FBB368AE0000000, float 0x3FBDF1BF00000000, float 0x3FC06B7AA0000000, float 0x3FC1F316E0000000, float 0x3FC38FABE0000000, float 0x3FC5411800000000, float 0x3FC7072080000000, float 0x3FC8E16940000000, float 0x3FCACF7CA0000000, float 0x3FCCD0D4A0000000, float 0x3FCEE4C0E0000000, float 0x3FD0854040000000, float 0x3FD1A09CC0000000, float 0x3FD2C3FC40000000, float 0x3FD3EED8A0000000, float 0x3FD5209EE0000000, float 0x3FD658AFC0000000, float 0x3FD7966BE0000000, float 0x3FD8D92320000000, float 0x3FDA201CE0000000, float 0x3FDB6A9C60000000, float 0x3FDCB7E0A0000000, float 0x3FDE072080000000, float 0x3FDF579280000000, float 0x3FE05436C0000000, float 0x3FE0FC6FC0000000, float 0x3FE1A40FA0000000, float 0x3FE24AB1E0000000, float 0x3FE2EFF1A0000000, float 0x3FE3936E80000000, float 0x3FE434CA00000000, float 0x3FE4D3A820000000, float 0x3FE56FB0A0000000, float 0x3FE60893C0000000, float 0x3FE69E01E0000000, float 0x3FE72FB1A0000000, float 0x3FE7BD5FE0000000, float 0x3FE846CFC0000000, float 0x3FE8CBCAE0000000, float 0x3FE94C20E0000000, float 0x3FE9C7A5C0000000, float 0x3FEA3E37E0000000, float 0x3FEAAFBA00000000, float 0x3FEB1C1500000000, float 0x3FEB833A40000000, float 0x3FEBE52160000000, float 0x3FEC41C820000000, float 0x3FEC992EA0000000, float 0x3FECEB63A0000000, float 0x3FED387160000000, float 0x3FED806F20000000, float 0x3FEDC37400000000, float 0x3FEE01A160000000, float 0x3FEE3B16C0000000, float 0x3FEE6FFA00000000, float 0x3FEEA07700000000, float 0x3FEECCB9E0000000, float 0x3FEEF4F0E0000000, float 0x3FEF194C00000000, float 0x3FEF3A0400000000, float 0x3FEF574700000000, float 0x3FEF714FC0000000, float 0x3FEF8852C0000000, float 0x3FEF9C8640000000, float 0x3FEFAE1F00000000, float 0x3FEFBD5780000000, float 0x3FEFCA6000000000, float 0x3FEFD56F40000000, float 0x3FEFDEB740000000, float 0x3FEFE66AA0000000, float 0x3FEFECB540000000, float 0x3FEFF1C760000000, float 0x3FEFF5C8E0000000, float 0x3FEFF8E1A0000000, float 0x3FEFFB3740000000, float 0x3FEFFCEDA0000000, float 0x3FEFFE21E0000000, float 0x3FEFFEF180000000, float 0x3FEFFF75A0000000, float 0x3FEFFFC120000000, float 0x3FEFFFE8E0000000, float 0x3FEFFFF9C0000000, float 0x3FEFFFFF40000000, float 1.000000e+00], align 16
@ff_celt_pvq_u_row = constant [15 x i32*] [i32* getelementptr inbounds ([1272 x i32], [1272 x i32]* @ff_celt_pvq_u, i32 0, i32 0), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 704) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 1404) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 2100) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 2792) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 3480) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4164) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4524) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4712) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4828) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4904) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4960) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 4992) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 5016) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @ff_celt_pvq_u to i8*), i64 5028) to i32*)], align 16

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!268, !269}
!llvm.ident = !{!270}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !3)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opustab.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{}
!3 = !{!4, !13, !17, !24, !28, !32, !36, !37, !39, !43, !46, !50, !55, !60, !62, !63, !66, !67, !71, !72, !76, !77, !81, !85, !89, !90, !91, !95, !96, !97, !98, !101, !106, !110, !111, !114, !121, !123, !126, !129, !133, !136, !139, !140, !141, !144, !145, !148, !150, !154, !155, !156, !157, !163, !166, !169, !173, !176, !179, !182, !183, !185, !188, !192, !193, !194, !195, !196, !198, !202, !203, !206, !212, !214, !215, !218, !221, !224, !228, !232, !236, !237, !238, !242, !243, !250, !253, !255, !259, !264}
!4 = distinct !DIGlobalVariable(name: "ff_opus_default_coupled_streams", scope: !0, file: !5, line: 25, type: !6, isLocal: false, isDefinition: true, variable: [8 x i8]* @ff_opus_default_coupled_streams)
!5 = !DIFile(filename: "libavcodec/opustab.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, align: 8, elements: !11)
!7 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 48, baseType: !10)
!9 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!10 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!11 = !{!12}
!12 = !DISubrange(count: 8)
!13 = distinct !DIGlobalVariable(name: "ff_celt_band_end", scope: !0, file: !5, line: 27, type: !14, isLocal: false, isDefinition: true, variable: [5 x i8]* @ff_celt_band_end)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 40, align: 8, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 5)
!17 = distinct !DIGlobalVariable(name: "ff_silk_model_stereo_s1", scope: !0, file: !5, line: 29, type: !18, isLocal: false, isDefinition: true, variable: [26 x i16]* @ff_silk_model_stereo_s1)
!18 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 416, align: 16, elements: !22)
!19 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 49, baseType: !21)
!21 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!22 = !{!23}
!23 = !DISubrange(count: 26)
!24 = distinct !DIGlobalVariable(name: "ff_silk_model_stereo_s2", scope: !0, file: !5, line: 34, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_silk_model_stereo_s2)
!25 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 64, align: 16, elements: !26)
!26 = !{!27}
!27 = !DISubrange(count: 4)
!28 = distinct !DIGlobalVariable(name: "ff_silk_model_stereo_s3", scope: !0, file: !5, line: 36, type: !29, isLocal: false, isDefinition: true, variable: [6 x i16]* @ff_silk_model_stereo_s3)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 96, align: 16, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 6)
!32 = distinct !DIGlobalVariable(name: "ff_silk_model_mid_only", scope: !0, file: !5, line: 38, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_model_mid_only)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 48, align: 16, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 3)
!36 = distinct !DIGlobalVariable(name: "ff_silk_model_frame_type_inactive", scope: !0, file: !5, line: 40, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_model_frame_type_inactive)
!37 = distinct !DIGlobalVariable(name: "ff_silk_model_frame_type_active", scope: !0, file: !5, line: 42, type: !38, isLocal: false, isDefinition: true, variable: [5 x i16]* @ff_silk_model_frame_type_active)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 80, align: 16, elements: !15)
!39 = distinct !DIGlobalVariable(name: "ff_silk_model_gain_highbits", scope: !0, file: !5, line: 44, type: !40, isLocal: false, isDefinition: true, variable: [3 x [9 x i16]]* @ff_silk_model_gain_highbits)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 432, align: 16, elements: !41)
!41 = !{!35, !42}
!42 = !DISubrange(count: 9)
!43 = distinct !DIGlobalVariable(name: "ff_silk_model_gain_lowbits", scope: !0, file: !5, line: 50, type: !44, isLocal: false, isDefinition: true, variable: [9 x i16]* @ff_silk_model_gain_lowbits)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 144, align: 16, elements: !45)
!45 = !{!42}
!46 = distinct !DIGlobalVariable(name: "ff_silk_model_gain_delta", scope: !0, file: !5, line: 52, type: !47, isLocal: false, isDefinition: true, variable: [42 x i16]* @ff_silk_model_gain_delta)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 672, align: 16, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 42)
!50 = distinct !DIGlobalVariable(name: "ff_silk_model_lsf_s1", scope: !0, file: !5, line: 57, type: !51, isLocal: false, isDefinition: true, variable: [2 x [2 x [33 x i16]]]* @ff_silk_model_lsf_s1)
!51 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 2112, align: 16, elements: !52)
!52 = !{!53, !53, !54}
!53 = !DISubrange(count: 2)
!54 = !DISubrange(count: 33)
!55 = distinct !DIGlobalVariable(name: "ff_silk_model_lsf_s2", scope: !0, file: !5, line: 77, type: !56, isLocal: false, isDefinition: true, variable: [32 x [10 x i16]]* @ff_silk_model_lsf_s2)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 5120, align: 16, elements: !57)
!57 = !{!58, !59}
!58 = !DISubrange(count: 32)
!59 = !DISubrange(count: 10)
!60 = distinct !DIGlobalVariable(name: "ff_silk_model_lsf_s2_ext", scope: !0, file: !5, line: 99, type: !61, isLocal: false, isDefinition: true, variable: [8 x i16]* @ff_silk_model_lsf_s2_ext)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 128, align: 16, elements: !11)
!62 = distinct !DIGlobalVariable(name: "ff_silk_model_lsf_interpolation_offset", scope: !0, file: !5, line: 101, type: !29, isLocal: false, isDefinition: true, variable: [6 x i16]* @ff_silk_model_lsf_interpolation_offset)
!63 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_highbits", scope: !0, file: !5, line: 103, type: !64, isLocal: false, isDefinition: true, variable: [33 x i16]* @ff_silk_model_pitch_highbits)
!64 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 528, align: 16, elements: !65)
!65 = !{!54}
!66 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_lowbits_nb", scope: !0, file: !5, line: 108, type: !38, isLocal: false, isDefinition: true, variable: [5 x i16]* @ff_silk_model_pitch_lowbits_nb)
!67 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_lowbits_mb", scope: !0, file: !5, line: 110, type: !68, isLocal: false, isDefinition: true, variable: [7 x i16]* @ff_silk_model_pitch_lowbits_mb)
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 112, align: 16, elements: !69)
!69 = !{!70}
!70 = !DISubrange(count: 7)
!71 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_lowbits_wb", scope: !0, file: !5, line: 112, type: !44, isLocal: false, isDefinition: true, variable: [9 x i16]* @ff_silk_model_pitch_lowbits_wb)
!72 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_delta", scope: !0, file: !5, line: 114, type: !73, isLocal: false, isDefinition: true, variable: [22 x i16]* @ff_silk_model_pitch_delta)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 352, align: 16, elements: !74)
!74 = !{!75}
!75 = !DISubrange(count: 22)
!76 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_contour_nb10ms", scope: !0, file: !5, line: 119, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_silk_model_pitch_contour_nb10ms)
!77 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_contour_nb20ms", scope: !0, file: !5, line: 121, type: !78, isLocal: false, isDefinition: true, variable: [12 x i16]* @ff_silk_model_pitch_contour_nb20ms)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 192, align: 16, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 12)
!81 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_contour_mbwb10ms", scope: !0, file: !5, line: 125, type: !82, isLocal: false, isDefinition: true, variable: [13 x i16]* @ff_silk_model_pitch_contour_mbwb10ms)
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 208, align: 16, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 13)
!85 = distinct !DIGlobalVariable(name: "ff_silk_model_pitch_contour_mbwb20ms", scope: !0, file: !5, line: 129, type: !86, isLocal: false, isDefinition: true, variable: [35 x i16]* @ff_silk_model_pitch_contour_mbwb20ms)
!86 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 560, align: 16, elements: !87)
!87 = !{!88}
!88 = !DISubrange(count: 35)
!89 = distinct !DIGlobalVariable(name: "ff_silk_model_ltp_filter", scope: !0, file: !5, line: 135, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_silk_model_ltp_filter)
!90 = distinct !DIGlobalVariable(name: "ff_silk_model_ltp_filter0_sel", scope: !0, file: !5, line: 137, type: !44, isLocal: false, isDefinition: true, variable: [9 x i16]* @ff_silk_model_ltp_filter0_sel)
!91 = distinct !DIGlobalVariable(name: "ff_silk_model_ltp_filter1_sel", scope: !0, file: !5, line: 141, type: !92, isLocal: false, isDefinition: true, variable: [17 x i16]* @ff_silk_model_ltp_filter1_sel)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 272, align: 16, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 17)
!95 = distinct !DIGlobalVariable(name: "ff_silk_model_ltp_filter2_sel", scope: !0, file: !5, line: 145, type: !64, isLocal: false, isDefinition: true, variable: [33 x i16]* @ff_silk_model_ltp_filter2_sel)
!96 = distinct !DIGlobalVariable(name: "ff_silk_model_ltp_scale_index", scope: !0, file: !5, line: 150, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_silk_model_ltp_scale_index)
!97 = distinct !DIGlobalVariable(name: "ff_silk_model_lcg_seed", scope: !0, file: !5, line: 152, type: !38, isLocal: false, isDefinition: true, variable: [5 x i16]* @ff_silk_model_lcg_seed)
!98 = distinct !DIGlobalVariable(name: "ff_silk_model_exc_rate", scope: !0, file: !5, line: 154, type: !99, isLocal: false, isDefinition: true, variable: [2 x [10 x i16]]* @ff_silk_model_exc_rate)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 320, align: 16, elements: !100)
!100 = !{!53, !59}
!101 = distinct !DIGlobalVariable(name: "ff_silk_model_pulse_count", scope: !0, file: !5, line: 159, type: !102, isLocal: false, isDefinition: true, variable: [11 x [19 x i16]]* @ff_silk_model_pulse_count)
!102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 3344, align: 16, elements: !103)
!103 = !{!104, !105}
!104 = !DISubrange(count: 11)
!105 = !DISubrange(count: 19)
!106 = distinct !DIGlobalVariable(name: "ff_silk_model_pulse_location", scope: !0, file: !5, line: 184, type: !107, isLocal: false, isDefinition: true, variable: [4 x [168 x i16]]* @ff_silk_model_pulse_location)
!107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 10752, align: 16, elements: !108)
!108 = !{!27, !109}
!109 = !DISubrange(count: 168)
!110 = distinct !DIGlobalVariable(name: "ff_silk_model_excitation_lsb", scope: !0, file: !5, line: 256, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_model_excitation_lsb)
!111 = distinct !DIGlobalVariable(name: "ff_silk_model_excitation_sign", scope: !0, file: !5, line: 258, type: !112, isLocal: false, isDefinition: true, variable: [3 x [2 x [7 x [3 x i16]]]]* @ff_silk_model_excitation_sign)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 2016, align: 16, elements: !113)
!113 = !{!35, !53, !70, !35}
!114 = distinct !DIGlobalVariable(name: "ff_silk_stereo_weights", scope: !0, file: !5, line: 316, type: !115, isLocal: false, isDefinition: true, variable: [16 x i16]* @ff_silk_stereo_weights)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 256, align: 16, elements: !119)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 37, baseType: !118)
!118 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!119 = !{!120}
!120 = !DISubrange(count: 16)
!121 = distinct !DIGlobalVariable(name: "ff_silk_lsf_s2_model_sel_nbmb", scope: !0, file: !5, line: 321, type: !122, isLocal: false, isDefinition: true, variable: [32 x [10 x i8]]* @ff_silk_lsf_s2_model_sel_nbmb)
!122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2560, align: 8, elements: !57)
!123 = distinct !DIGlobalVariable(name: "ff_silk_lsf_s2_model_sel_wb", scope: !0, file: !5, line: 356, type: !124, isLocal: false, isDefinition: true, variable: [32 x [16 x i8]]* @ff_silk_lsf_s2_model_sel_wb)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 4096, align: 8, elements: !125)
!125 = !{!58, !120}
!126 = distinct !DIGlobalVariable(name: "ff_silk_lsf_pred_weights_nbmb", scope: !0, file: !5, line: 391, type: !127, isLocal: false, isDefinition: true, variable: [2 x [9 x i8]]* @ff_silk_lsf_pred_weights_nbmb)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 144, align: 8, elements: !128)
!128 = !{!53, !42}
!129 = distinct !DIGlobalVariable(name: "ff_silk_lsf_pred_weights_wb", scope: !0, file: !5, line: 396, type: !130, isLocal: false, isDefinition: true, variable: [2 x [15 x i8]]* @ff_silk_lsf_pred_weights_wb)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 240, align: 8, elements: !131)
!131 = !{!53, !132}
!132 = !DISubrange(count: 15)
!133 = distinct !DIGlobalVariable(name: "ff_silk_lsf_weight_sel_nbmb", scope: !0, file: !5, line: 401, type: !134, isLocal: false, isDefinition: true, variable: [32 x [9 x i8]]* @ff_silk_lsf_weight_sel_nbmb)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2304, align: 8, elements: !135)
!135 = !{!58, !42}
!136 = distinct !DIGlobalVariable(name: "ff_silk_lsf_weight_sel_wb", scope: !0, file: !5, line: 436, type: !137, isLocal: false, isDefinition: true, variable: [32 x [15 x i8]]* @ff_silk_lsf_weight_sel_wb)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 3840, align: 8, elements: !138)
!138 = !{!58, !132}
!139 = distinct !DIGlobalVariable(name: "ff_silk_lsf_codebook_nbmb", scope: !0, file: !5, line: 471, type: !122, isLocal: false, isDefinition: true, variable: [32 x [10 x i8]]* @ff_silk_lsf_codebook_nbmb)
!140 = distinct !DIGlobalVariable(name: "ff_silk_lsf_codebook_wb", scope: !0, file: !5, line: 506, type: !124, isLocal: false, isDefinition: true, variable: [32 x [16 x i8]]* @ff_silk_lsf_codebook_wb)
!141 = distinct !DIGlobalVariable(name: "ff_silk_lsf_min_spacing_nbmb", scope: !0, file: !5, line: 541, type: !142, isLocal: false, isDefinition: true, variable: [11 x i16]* @ff_silk_lsf_min_spacing_nbmb)
!142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 176, align: 16, elements: !143)
!143 = !{!104}
!144 = distinct !DIGlobalVariable(name: "ff_silk_lsf_min_spacing_wb", scope: !0, file: !5, line: 545, type: !92, isLocal: false, isDefinition: true, variable: [17 x i16]* @ff_silk_lsf_min_spacing_wb)
!145 = distinct !DIGlobalVariable(name: "ff_silk_lsf_ordering_nbmb", scope: !0, file: !5, line: 549, type: !146, isLocal: false, isDefinition: true, variable: [10 x i8]* @ff_silk_lsf_ordering_nbmb)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 80, align: 8, elements: !147)
!147 = !{!59}
!148 = distinct !DIGlobalVariable(name: "ff_silk_lsf_ordering_wb", scope: !0, file: !5, line: 553, type: !149, isLocal: false, isDefinition: true, variable: [16 x i8]* @ff_silk_lsf_ordering_wb)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, align: 8, elements: !119)
!150 = distinct !DIGlobalVariable(name: "ff_silk_cosine", scope: !0, file: !5, line: 557, type: !151, isLocal: false, isDefinition: true, variable: [129 x i16]* @ff_silk_cosine)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 2064, align: 16, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 129)
!154 = distinct !DIGlobalVariable(name: "ff_silk_pitch_scale", scope: !0, file: !5, line: 593, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_pitch_scale)
!155 = distinct !DIGlobalVariable(name: "ff_silk_pitch_min_lag", scope: !0, file: !5, line: 595, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_pitch_min_lag)
!156 = distinct !DIGlobalVariable(name: "ff_silk_pitch_max_lag", scope: !0, file: !5, line: 597, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_pitch_max_lag)
!157 = distinct !DIGlobalVariable(name: "ff_silk_pitch_offset_nb10ms", scope: !0, file: !5, line: 599, type: !158, isLocal: false, isDefinition: true, variable: [3 x [2 x i8]]* @ff_silk_pitch_offset_nb10ms)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 48, align: 8, elements: !162)
!159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 36, baseType: !161)
!161 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!162 = !{!35, !53}
!163 = distinct !DIGlobalVariable(name: "ff_silk_pitch_offset_nb20ms", scope: !0, file: !5, line: 605, type: !164, isLocal: false, isDefinition: true, variable: [11 x [4 x i8]]* @ff_silk_pitch_offset_nb20ms)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 352, align: 8, elements: !165)
!165 = !{!104, !27}
!166 = distinct !DIGlobalVariable(name: "ff_silk_pitch_offset_mbwb10ms", scope: !0, file: !5, line: 619, type: !167, isLocal: false, isDefinition: true, variable: [12 x [2 x i8]]* @ff_silk_pitch_offset_mbwb10ms)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 192, align: 8, elements: !168)
!168 = !{!80, !53}
!169 = distinct !DIGlobalVariable(name: "ff_silk_pitch_offset_mbwb20ms", scope: !0, file: !5, line: 634, type: !170, isLocal: false, isDefinition: true, variable: [34 x [4 x i8]]* @ff_silk_pitch_offset_mbwb20ms)
!170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1088, align: 8, elements: !171)
!171 = !{!172, !27}
!172 = !DISubrange(count: 34)
!173 = distinct !DIGlobalVariable(name: "ff_silk_ltp_filter0_taps", scope: !0, file: !5, line: 671, type: !174, isLocal: false, isDefinition: true, variable: [8 x [5 x i8]]* @ff_silk_ltp_filter0_taps)
!174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 320, align: 8, elements: !175)
!175 = !{!12, !16}
!176 = distinct !DIGlobalVariable(name: "ff_silk_ltp_filter1_taps", scope: !0, file: !5, line: 682, type: !177, isLocal: false, isDefinition: true, variable: [16 x [5 x i8]]* @ff_silk_ltp_filter1_taps)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 640, align: 8, elements: !178)
!178 = !{!120, !16}
!179 = distinct !DIGlobalVariable(name: "ff_silk_ltp_filter2_taps", scope: !0, file: !5, line: 701, type: !180, isLocal: false, isDefinition: true, variable: [32 x [5 x i8]]* @ff_silk_ltp_filter2_taps)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1280, align: 8, elements: !181)
!181 = !{!58, !16}
!182 = distinct !DIGlobalVariable(name: "ff_silk_ltp_scale_factor", scope: !0, file: !5, line: 736, type: !33, isLocal: false, isDefinition: true, variable: [3 x i16]* @ff_silk_ltp_scale_factor)
!183 = distinct !DIGlobalVariable(name: "ff_silk_shell_blocks", scope: !0, file: !5, line: 738, type: !184, isLocal: false, isDefinition: true, variable: [3 x [2 x i8]]* @ff_silk_shell_blocks)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, align: 8, elements: !162)
!185 = distinct !DIGlobalVariable(name: "ff_silk_quant_offset", scope: !0, file: !5, line: 744, type: !186, isLocal: false, isDefinition: true, variable: [2 x [2 x i8]]* @ff_silk_quant_offset)
!186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, align: 8, elements: !187)
!187 = !{!53, !53}
!188 = distinct !DIGlobalVariable(name: "ff_silk_stereo_interp_len", scope: !0, file: !5, line: 749, type: !189, isLocal: false, isDefinition: true, variable: [3 x i32]* @ff_silk_stereo_interp_len)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 96, align: 32, elements: !34)
!190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!191 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!192 = distinct !DIGlobalVariable(name: "ff_celt_model_tapset", scope: !0, file: !5, line: 753, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_celt_model_tapset)
!193 = distinct !DIGlobalVariable(name: "ff_celt_model_spread", scope: !0, file: !5, line: 755, type: !38, isLocal: false, isDefinition: true, variable: [5 x i16]* @ff_celt_model_spread)
!194 = distinct !DIGlobalVariable(name: "ff_celt_model_alloc_trim", scope: !0, file: !5, line: 757, type: !78, isLocal: false, isDefinition: true, variable: [12 x i16]* @ff_celt_model_alloc_trim)
!195 = distinct !DIGlobalVariable(name: "ff_celt_model_energy_small", scope: !0, file: !5, line: 761, type: !25, isLocal: false, isDefinition: true, variable: [4 x i16]* @ff_celt_model_energy_small)
!196 = distinct !DIGlobalVariable(name: "ff_celt_freq_bands", scope: !0, file: !5, line: 763, type: !197, isLocal: false, isDefinition: true, variable: [22 x i8]* @ff_celt_freq_bands)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 176, align: 8, elements: !74)
!198 = distinct !DIGlobalVariable(name: "ff_celt_freq_range", scope: !0, file: !5, line: 767, type: !199, isLocal: false, isDefinition: true, variable: [21 x i8]* @ff_celt_freq_range)
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, align: 8, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 21)
!202 = distinct !DIGlobalVariable(name: "ff_celt_log_freq_range", scope: !0, file: !5, line: 771, type: !199, isLocal: false, isDefinition: true, variable: [21 x i8]* @ff_celt_log_freq_range)
!203 = distinct !DIGlobalVariable(name: "ff_celt_tf_select", scope: !0, file: !5, line: 777, type: !204, isLocal: false, isDefinition: true, variable: [4 x [2 x [2 x [2 x i8]]]]* @ff_celt_tf_select)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 256, align: 8, elements: !205)
!205 = !{!27, !53, !53, !53}
!206 = distinct !DIGlobalVariable(name: "ff_celt_mean_energy", scope: !0, file: !5, line: 787, type: !207, isLocal: false, isDefinition: true, variable: [25 x float]* @ff_celt_mean_energy)
!207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 800, align: 32, elements: !210)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!210 = !{!211}
!211 = !DISubrange(count: 25)
!212 = distinct !DIGlobalVariable(name: "ff_celt_alpha_coef", scope: !0, file: !5, line: 795, type: !213, isLocal: false, isDefinition: true, variable: [4 x float]* @ff_celt_alpha_coef)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 128, align: 32, elements: !26)
!214 = distinct !DIGlobalVariable(name: "ff_celt_beta_coef", scope: !0, file: !5, line: 799, type: !213, isLocal: false, isDefinition: true, variable: [4 x float]* @ff_celt_beta_coef)
!215 = distinct !DIGlobalVariable(name: "ff_celt_coarse_energy_dist", scope: !0, file: !5, line: 803, type: !216, isLocal: false, isDefinition: true, variable: [4 x [2 x [42 x i8]]]* @ff_celt_coarse_energy_dist)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2688, align: 8, elements: !217)
!217 = !{!27, !53, !49}
!218 = distinct !DIGlobalVariable(name: "ff_celt_static_alloc", scope: !0, file: !5, line: 847, type: !219, isLocal: false, isDefinition: true, variable: [11 x [21 x i8]]* @ff_celt_static_alloc)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1848, align: 8, elements: !220)
!220 = !{!104, !201}
!221 = distinct !DIGlobalVariable(name: "ff_celt_static_caps", scope: !0, file: !5, line: 861, type: !222, isLocal: false, isDefinition: true, variable: [4 x [2 x [21 x i8]]]* @ff_celt_static_caps)
!222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1344, align: 8, elements: !223)
!223 = !{!27, !53, !201}
!224 = distinct !DIGlobalVariable(name: "ff_celt_cache_bits", scope: !0, file: !5, line: 885, type: !225, isLocal: false, isDefinition: true, variable: [392 x i8]* @ff_celt_cache_bits)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 3136, align: 8, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 392)
!228 = distinct !DIGlobalVariable(name: "ff_celt_cache_index", scope: !0, file: !5, line: 915, type: !229, isLocal: false, isDefinition: true, variable: [105 x i16]* @ff_celt_cache_index)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 1680, align: 16, elements: !230)
!230 = !{!231}
!231 = !DISubrange(count: 105)
!232 = distinct !DIGlobalVariable(name: "ff_celt_log2_frac", scope: !0, file: !5, line: 925, type: !233, isLocal: false, isDefinition: true, variable: [24 x i8]* @ff_celt_log2_frac)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 192, align: 8, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 24)
!236 = distinct !DIGlobalVariable(name: "ff_celt_bit_interleave", scope: !0, file: !5, line: 929, type: !149, isLocal: false, isDefinition: true, variable: [16 x i8]* @ff_celt_bit_interleave)
!237 = distinct !DIGlobalVariable(name: "ff_celt_bit_deinterleave", scope: !0, file: !5, line: 933, type: !149, isLocal: false, isDefinition: true, variable: [16 x i8]* @ff_celt_bit_deinterleave)
!238 = distinct !DIGlobalVariable(name: "ff_celt_hadamard_order", scope: !0, file: !5, line: 938, type: !239, isLocal: false, isDefinition: true, variable: [46 x i8]* @ff_celt_hadamard_order)
!239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 368, align: 8, elements: !240)
!240 = !{!241}
!241 = !DISubrange(count: 46)
!242 = distinct !DIGlobalVariable(name: "ff_celt_qn_exp2", scope: !0, file: !5, line: 946, type: !61, isLocal: false, isDefinition: true, variable: [8 x i16]* @ff_celt_qn_exp2)
!243 = distinct !DIGlobalVariable(name: "ff_celt_pvq_u", scope: !0, file: !5, line: 950, type: !244, isLocal: false, isDefinition: true, variable: [1272 x i32]* @ff_celt_pvq_u)
!244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 40704, align: 32, elements: !248)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 51, baseType: !247)
!247 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!248 = !{!249}
!249 = !DISubrange(count: 1272)
!250 = distinct !DIGlobalVariable(name: "ff_celt_postfilter_taps", scope: !0, file: !5, line: 1093, type: !251, isLocal: false, isDefinition: true, variable: [3 x [3 x float]]* @ff_celt_postfilter_taps)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 288, align: 32, elements: !252)
!252 = !{!35, !35}
!253 = distinct !DIGlobalVariable(name: "ff_celt_window", scope: !0, file: !5, line: 1130, type: !254, isLocal: false, isDefinition: true, variable: float** @ff_celt_window)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64, align: 64)
!255 = distinct !DIGlobalVariable(name: "ff_celt_window2", scope: !0, file: !5, line: 1133, type: !256, isLocal: false, isDefinition: true, variable: [120 x float]* @ff_celt_window2)
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 3840, align: 32, elements: !257)
!257 = !{!258}
!258 = !DISubrange(count: 120)
!259 = distinct !DIGlobalVariable(name: "ff_celt_pvq_u_row", scope: !0, file: !5, line: 1152, type: !260, isLocal: false, isDefinition: true, variable: [15 x i32*]* @ff_celt_pvq_u_row)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 960, align: 64, elements: !263)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64, align: 64)
!263 = !{!132}
!264 = distinct !DIGlobalVariable(name: "ff_celt_window_padded", scope: !0, file: !5, line: 1099, type: !265, isLocal: true, isDefinition: true, variable: [136 x float]* @ff_celt_window_padded)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 4352, align: 32, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 136)
!268 = !{i32 2, !"Dwarf Version", i32 4}
!269 = !{i32 2, !"Debug Info Version", i32 3}
!270 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
