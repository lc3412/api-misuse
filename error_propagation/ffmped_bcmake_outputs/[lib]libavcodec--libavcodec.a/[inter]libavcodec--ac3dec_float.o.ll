; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_float.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_float.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AC3DecodeContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, [2 x float], i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [7 x i32], i32, [18 x i32], i32, [18 x i8], [18 x i8], i32, [7 x i32], [7 x [18 x i32]], i32, [7 x i8], [7 x i8], i32, i32, i32, i32, [17 x i8], [17 x i8], [7 x i8], [7 x [17 x float]], [7 x [17 x float]], [7 x i32], [7 x [256 x [6 x i32]]], i32, i32, i32, [2 x float*], i32, i32, i32, i32, i32, [2 x float], float, i32, [2 x float], [7 x i32], [7 x i32], i32, i32, [4 x i32], [7 x i32], [7 x [256 x i8]], [6 x [7 x i32]], %struct.AC3BitAllocParameters, i32, [7 x i32], [7 x i32], [7 x [256 x i8]], [7 x [256 x i16]], [7 x [50 x i16]], [7 x [50 x i16]], [7 x i32], [7 x i32], [7 x [8 x i8]], [7 x [8 x i8]], [7 x [8 x i8]], [7 x i32], %struct.AVLFG, [7 x i32], %struct.FFTContext, %struct.FFTContext, %struct.BswapDSPContext, %struct.AVFloatDSPContext*, %struct.AC3DSPContext, %struct.FmtConvertContext, [7 x float*], [7 x float*], [7 x float*], [8 x i8], [7 x [256 x i32]], [16 x i8], [7 x [256 x float]], [16 x [256 x float]], [256 x float], [256 x float], [16 x [256 x float]], [32832 x i8], [16 x [1536 x float]] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AC3BitAllocParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVLFG = type { [64 x i32], i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.AC3DSPContext = type { void (i8*, i32, i32)*, i32 (i16*, i32)*, void (i16*, i32, i32)*, void (i32*, i32, i32)*, void (i32*, float*, i32)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i8*, i32)*, i32 ([16 x i16]*)*, void (i8*, i32*, i32)*, void (i64*, i32*, i32*, i32)*, void (float*, float*, float*, i32)*, i32, i32, void (float**, float**, i32)*, void (i32**, i16**, i32)*, void (i16*, i16*, i16*, i32)* }
%struct.FmtConvertContext = type { void (float*, i32*, float, i32)*, void (float*, i32*, i64)*, void (%struct.FmtConvertContext*, float*, i32*, float*, i32)* }
%struct.AVDownmixInfo = type { i32, double, double, double, double, double }
%struct.AC3HeaderInfo = type { i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i16, i32, i32, i8, i16, i32, i8, i16, i64 }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }
%struct.mant_groups = type { [2 x i32], [2 x i32], i32, i32, i32, i32 }

@.str = private unnamed_addr constant [4 x i8] c"ac3\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"ATSC A/52A (AC-3)\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ac3_decoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([10 x %struct.AVOption], [10 x %struct.AVOption]* bitcast (<{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @options to [10 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_ac3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86019, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @ac3_decoder_class, %struct.AVProfile* null, i8* null, i32 235456, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ac3_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ac3_decode_frame, i32 (%struct.AVCodecContext*)* @ac3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"eac3\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"ATSC A/52B (AC-3, E-AC-3)\00", align 1
@.compoundliteral.4 = internal constant [2 x i32] [i32 8, i32 -1], align 4
@eac3_decoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds (<{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>, <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_eac3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 86056, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.4, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @eac3_decoder_class, %struct.AVProfile* null, i8* null, i32 235456, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ac3_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ac3_decode_frame, i32 (%struct.AVCodecContext*)* @ac3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@ff_ac3_heavy_dynamic_range_tab = common global [256 x float] zeroinitializer, align 16
@.str.5 = private unnamed_addr constant [12 x i8] c"AC3 decoder\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"cons_noisegen\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"enable consistent noise generation\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"drc_scale\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"percentage of dynamic range compression to apply\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"heavy_compr\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"enable heavy dynamic range compression\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"target_level\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"target level in -dBFS (0 not applied)\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"dmix_mode\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Preferred Stereo Downmix Mode\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"ltrt_cmixlev\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"Lt/Rt Center Mix Level\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"ltrt_surmixlev\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Lt/Rt Surround Mix Level\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"loro_cmixlev\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"Lo/Ro Center Mix Level\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"loro_surmixlev\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"Lo/Ro Surround Mix Level\00", align 1
@options = internal constant <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i32 0, i32 0), i32 45156, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 10, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 45084, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 6.000000e+00, i32 10, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i32 0, i32 0), i32 45088, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 10, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0), i32 192, i32 1, %union.anon zeroinitializer, double -3.100000e+01, double 0.000000e+00, i32 10, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 172, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 2.000000e+00, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i32 176, i32 4, { double } { double -1.000000e+00 }, double -1.000000e+00, double 2.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i32 0, i32 0), i32 180, i32 4, { double } { double -1.000000e+00 }, double -1.000000e+00, double 2.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i32 184, i32 4, { double } { double -1.000000e+00 }, double -1.000000e+00, double 2.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i32 0, i32 0), i32 188, i32 4, { double } { double -1.000000e+00 }, double -1.000000e+00, double 2.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@ungroup_3_in_7_bits_tab = internal global [128 x [3 x i8]] zeroinitializer, align 16
@ff_ac3_ungroup_3_in_5_bits_tab = external constant [32 x [3 x i8]], align 16
@b1_mantissas = internal global [32 x [3 x i32]] zeroinitializer, align 16
@b2_mantissas = internal global [128 x [3 x i32]] zeroinitializer, align 16
@b4_mantissas = internal global [128 x [2 x i32]] zeroinitializer, align 16
@b3_mantissas = internal global [8 x i32] zeroinitializer, align 16
@b5_mantissas = internal global [16 x i32] zeroinitializer, align 16
@dynamic_range_tab = internal global [256 x float] zeroinitializer, align 16
@.str.25 = private unnamed_addr constant [18 x i8] c"frame sync error\0A\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"invalid bitstream id\0A\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"invalid sample rate\0A\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"invalid frame size\0A\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"unsupported substream %d: skipping frame\0A\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"invalid frame type\0A\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"incomplete frame\0A\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"frame CRC mismatch\0A\00", align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"Ignoring dependent frame without independent frame.\0A\00", align 1
@gain_levels = internal constant [9 x float] [float 0x3FF6A09E60000000, float 0x3FF306FE00000000, float 1.000000e+00, float 0x3FEAE89FA0000000, float 0x3FE6A09E60000000, float 0x3FE306FE00000000, float 5.000000e-01, float 0.000000e+00, float 0x3FD6A09E60000000], align 16
@.str.34 = private unnamed_addr constant [30 x i8] c"error setting downmix coeffs\0A\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"unable to determine channel mode\0A\00", align 1
@avpriv_ac3_channel_layout_tab = external constant [8 x i16], align 16
@ff_ac3_dec_channel_map = external constant [8 x [2 x [6 x i8]]], align 16
@.str.36 = private unnamed_addr constant [32 x i8] c"error decoding the audio block\0A\00", align 1
@.str.37 = private unnamed_addr constant [42 x i8] c"Ignoring non-compatible dependent frame.\0A\00", align 1
@ff_ac3_channels_tab = external constant [8 x i8], align 1
@ff_eac3_custom_channel_map_locations = external constant [16 x [2 x i64]], align 16
@.str.38 = private unnamed_addr constant [30 x i8] c"Too many channels (%d) coded\0A\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.40 = private unnamed_addr constant [53 x i8] c"ch>=8 || frame->extended_data[ch] == frame->data[ch]\00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"libavcodec/ac3dec.c\00", align 1
@gain_levels_lfe = internal constant [32 x float] [float 0x40094C56E0000000, float 0x40068C0BE0000000, float 0x40041857A0000000, float 0x4001E8E580000000, float 0x3FFFEC96C0000000, float 0x3FFC73D3A0000000, float 0x3FF95BB8C0000000, float 0x3FF699BF60000000, float 0x3FF4248D80000000, float 0x3FF1F3C920000000, float 1.000000e+00, float 0x3FEC8520E0000000, float 0x3FE96B2280000000, float 0x3FE6A77E60000000, float 0x3FE430CCC0000000, float 0x3FE1FEB280000000, float 0x3FE009B960000000, float 0x3FDC967440000000, float 0x3FD97A95C0000000, float 0x3FD6B541A0000000, float 0x3FD43D1020000000, float 0x3FD209A240000000, float 0x3FD01376E0000000, float 0x3FCCA7D680000000, float 0x3FC98A1160000000, float 0x3FC6C31160000000, float 0x3FC4495E20000000, float 0x3FC2149400000000, float 0x3FC01D3AA0000000, float 0x3FBCB93460000000, float 0x3FB99999A0000000, float 0x3FB6D0E560000000], align 16
@.str.42 = private unnamed_addr constant [21 x i8] c"Reserved frame type\0A\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"Additional substreams\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"Reduced sampling rate\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"channel_map: %0X\0A\00", align 1
@ff_ac3_slow_decay_tab = external constant [4 x i8], align 1
@ff_ac3_fast_decay_tab = external constant [4 x i8], align 1
@ff_ac3_slow_gain_tab = external constant [4 x i16], align 2
@ff_ac3_db_per_bit_tab = external constant [4 x i16], align 2
@ff_ac3_floor_tab = external constant [8 x i16], align 16
@ff_eac3_frm_expstr = external constant [32 x [6 x i8]], align 16
@.str.46 = private unnamed_addr constant [17 x i8] c"Block start info\00", align 1
@ac3_default_coeffs = internal constant [8 x [5 x [2 x i8]]] [[5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\04\04", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] c"\06\06", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] c"\08\08", [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\07\02", [2 x i8] c"\06\07", [2 x i8] c"\07\06", [2 x i8] zeroinitializer], [5 x [2 x i8]] [[2 x i8] c"\02\07", [2 x i8] c"\05\05", [2 x i8] c"\07\02", [2 x i8] c"\06\07", [2 x i8] c"\07\06"]], align 16
@.str.47 = private unnamed_addr constant [50 x i8] c"new coupling strategy must be present in block 0\0A\00", align 1
@.str.48 = private unnamed_addr constant [58 x i8] c"Warning: new rematrixing strategy not present in block 0\0A\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"bandwidth code = %d > 60\0A\00", align 1
@.str.50 = private unnamed_addr constant [52 x i8] c"new bit allocation info must be present in block 0\0A\00", align 1
@ff_ac3_fast_gain_tab = external constant [8 x i16], align 16
@.str.51 = private unnamed_addr constant [44 x i8] c"new snr offsets must be present in block 0\0A\00", align 1
@.str.52 = private unnamed_addr constant [51 x i8] c"new coupling leak info must be present in block 0\0A\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"delta bit allocation strategy reserved\0A\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"error in bit allocation\0A\00", align 1
@ff_eac3_hebap_tab = external constant [64 x i8], align 16
@ff_ac3_bap_tab = external constant [64 x i8], align 16
@.str.55 = private unnamed_addr constant [45 x i8] c"invalid spectral extension range (%d >= %d)\0A\00", align 1
@.str.56 = private unnamed_addr constant [54 x i8] c"invalid spectral extension copy start bin (%d >= %d)\0A\00", align 1
@ff_eac3_default_spx_band_struct = external constant [17 x i8], align 16
@.str.57 = private unnamed_addr constant [47 x i8] c"band_struct_size >= start_subband + n_subbands\00", align 1
@.str.58 = private unnamed_addr constant [43 x i8] c"coupling not allowed in mono or dual-mono\0A\00", align 1
@.str.59 = private unnamed_addr constant [18 x i8] c"Enhanced coupling\00", align 1
@.str.60 = private unnamed_addr constant [35 x i8] c"invalid coupling range (%d >= %d)\0A\00", align 1
@ff_eac3_default_cpl_band_struct = external constant [18 x i8], align 16
@.str.61 = private unnamed_addr constant [53 x i8] c"new coupling coordinates must be present in block 0\0A\00", align 1
@.str.62 = private unnamed_addr constant [27 x i8] c"expacc %d is out-of-range\0A\00", align 1
@.str.63 = private unnamed_addr constant [29 x i8] c"exponent %d is out-of-range\0A\00", align 1
@.str.64 = private unnamed_addr constant [33 x i8] c"bap %d is invalid in plain AC-3\0A\00", align 1
@quantization_tab = internal constant [16 x i8] c"\00\03\05\07\0B\0F\05\06\07\08\09\0A\0B\0C\0E\10", align 16
@.str.65 = private unnamed_addr constant [34 x i8] c"GAQ gain group code out-of-range\0A\00", align 1
@ff_eac3_bits_vs_hebap = external constant [20 x i8], align 16
@ff_eac3_mantissa_vq = external constant [8 x [6 x i16]*], align 16
@ff_eac3_gaq_remap_2_4_b = external constant [9 x [2 x i16]], align 16
@ff_eac3_gaq_remap_2_4_a = external constant [9 x [2 x i16]], align 16
@ff_eac3_gaq_remap_1 = external constant [12 x i16], align 16
@ff_ac3_rematrix_band_tab = external constant [5 x i8], align 1
@ff_eac3_apply_spectral_extension.wrapflag = private unnamed_addr constant [17 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@ff_eac3_spx_atten_tab = external constant [32 x [3 x float]], align 16
@.str.66 = private unnamed_addr constant [14 x i8] c"E-AC3 decoder\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ac3_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1851 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1853, metadata !1854), !dbg !1855
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !1856, metadata !1854), !dbg !2262
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2263
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2264
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2264
  %2 = bitcast i8* %1 to %struct.AC3DecodeContext*, !dbg !2263
  store %struct.AC3DecodeContext* %2, %struct.AC3DecodeContext** %s, align 8, !dbg !2262
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2265, metadata !1854), !dbg !2266
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2267
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2268
  %avctx1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 1, !dbg !2269
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 8, !dbg !2270
  call void @ac3_tables_init(), !dbg !2271
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2272
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 108, !dbg !2273
  %call = call i32 @ff_mdct_init(%struct.FFTContext* %imdct_256, i32 8, i32 1, double 1.000000e+00), !dbg !2274
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2275
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 107, !dbg !2276
  %call2 = call i32 @ff_mdct_init(%struct.FFTContext* %imdct_512, i32 9, i32 1, double 1.000000e+00), !dbg !2277
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2278
  %window = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 121, !dbg !2279
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %window, i32 0, i32 0, !dbg !2278
  call void @ff_kbd_window_init(float* %arraydecay, float 5.000000e+00, i32 256), !dbg !2280
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2281
  %bdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 109, !dbg !2282
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !2283
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2284
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 13, !dbg !2285
  %10 = load i32, i32* %flags, align 4, !dbg !2285
  %and = and i32 %10, 8388608, !dbg !2286
  %call3 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and), !dbg !2287
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2288
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 110, !dbg !2289
  store %struct.AVFloatDSPContext* %call3, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2290
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2291
  %fmt_conv = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 112, !dbg !2292
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2293
  call void @ff_fmt_convert_init(%struct.FmtConvertContext* %fmt_conv, %struct.AVCodecContext* %13), !dbg !2294
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2295
  %ac3dsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 111, !dbg !2296
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2297
  %flags4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 13, !dbg !2298
  %16 = load i32, i32* %flags4, align 4, !dbg !2298
  %and5 = and i32 %16, 8388608, !dbg !2299
  call void @ff_ac3dsp_init(%struct.AC3DSPContext* %ac3dsp, i32 %and5), !dbg !2300
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2301
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 105, !dbg !2302
  call void @av_lfg_init(%struct.AVLFG* %dith_state, i32 0), !dbg !2303
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2304
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 84, !dbg !2306
  store i32 8, i32* %sample_fmt, align 8, !dbg !2307
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2308
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 83, !dbg !2310
  %20 = load i32, i32* %channels, align 4, !dbg !2310
  %cmp = icmp sgt i32 %20, 1, !dbg !2311
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2312

land.lhs.true:                                    ; preds = %entry
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2313
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 90, !dbg !2314
  %22 = load i64, i64* %request_channel_layout, align 8, !dbg !2314
  %cmp6 = icmp eq i64 %22, 4, !dbg !2315
  br i1 %cmp6, label %if.then, label %if.else, !dbg !2316

if.then:                                          ; preds = %land.lhs.true
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2318
  %channels7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 83, !dbg !2319
  store i32 1, i32* %channels7, align 4, !dbg !2320
  br label %if.end15, !dbg !2318

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2321
  %channels8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 83, !dbg !2323
  %25 = load i32, i32* %channels8, align 4, !dbg !2323
  %cmp9 = icmp sgt i32 %25, 2, !dbg !2324
  br i1 %cmp9, label %land.lhs.true10, label %if.end, !dbg !2325

land.lhs.true10:                                  ; preds = %if.else
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2326
  %request_channel_layout11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 90, !dbg !2327
  %27 = load i64, i64* %request_channel_layout11, align 8, !dbg !2327
  %cmp12 = icmp eq i64 %27, 3, !dbg !2328
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !2329

if.then13:                                        ; preds = %land.lhs.true10
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2331
  %channels14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 83, !dbg !2332
  store i32 2, i32* %channels14, align 4, !dbg !2333
  br label %if.end, !dbg !2331

if.end:                                           ; preds = %if.then13, %land.lhs.true10, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2334
  %downmixed = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 74, !dbg !2335
  store i32 1, i32* %downmixed, align 32, !dbg !2336
  store i32 0, i32* %i, align 4, !dbg !2337
  br label %for.cond, !dbg !2339

for.cond:                                         ; preds = %for.inc, %if.end15
  %30 = load i32, i32* %i, align 4, !dbg !2340
  %cmp16 = icmp slt i32 %30, 7, !dbg !2343
  br i1 %cmp16, label %for.body, label %for.end, !dbg !2344

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %i, align 4, !dbg !2345
  %idxprom = sext i32 %31 to i64, !dbg !2347
  %32 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2347
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %32, i32 0, i32 119, !dbg !2348
  %arrayidx = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs, i64 0, i64 %idxprom, !dbg !2347
  %arraydecay17 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx, i32 0, i32 0, !dbg !2347
  %33 = load i32, i32* %i, align 4, !dbg !2349
  %idxprom18 = sext i32 %33 to i64, !dbg !2350
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2350
  %xcfptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 114, !dbg !2351
  %arrayidx19 = getelementptr inbounds [7 x float*], [7 x float*]* %xcfptr, i64 0, i64 %idxprom18, !dbg !2350
  store float* %arraydecay17, float** %arrayidx19, align 8, !dbg !2352
  %35 = load i32, i32* %i, align 4, !dbg !2353
  %idxprom20 = sext i32 %35 to i64, !dbg !2354
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2354
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 120, !dbg !2355
  %arrayidx21 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay, i64 0, i64 %idxprom20, !dbg !2354
  %arraydecay22 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx21, i32 0, i32 0, !dbg !2354
  %37 = load i32, i32* %i, align 4, !dbg !2356
  %idxprom23 = sext i32 %37 to i64, !dbg !2357
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2357
  %dlyptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 115, !dbg !2358
  %arrayidx24 = getelementptr inbounds [7 x float*], [7 x float*]* %dlyptr, i64 0, i64 %idxprom23, !dbg !2357
  store float* %arraydecay22, float** %arrayidx24, align 8, !dbg !2359
  br label %for.inc, !dbg !2360

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !2361
  %inc = add nsw i32 %39, 1, !dbg !2361
  store i32 %inc, i32* %i, align 4, !dbg !2361
  br label %for.cond, !dbg !2363, !llvm.loop !2364

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !2366
}

; Function Attrs: nounwind uwtable
define internal i32 @ac3_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2367 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !2368, metadata !1854), !dbg !2373
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %full_buf_size = alloca i32, align 4
  %s = alloca %struct.AC3DecodeContext*, align 8
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %err = alloca i32, align 4
  %offset = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %skip = alloca i32, align 4
  %got_independent_frame = alloca i32, align 4
  %channel_map = alloca i8*, align 8
  %extended_channel_map = alloca [16 x i8], align 16
  %output = alloca [7 x float*], align 16
  %matrix_encoding = alloca i32, align 4
  %downmix_info = alloca %struct.AVDownmixInfo*, align 8
  %cnt = alloca i32, align 4
  %hdr = alloca %struct.AC3HeaderInfo, align 8
  %err360 = alloca i32, align 4
  %ich_layout = alloca i64, align 8
  %channel_map_size = alloca i32, align 4
  %channel_layout449 = alloca i64, align 8
  %extend = alloca i32, align 4
  %index = alloca i32, align 4
  %i520 = alloca i32, align 4
  %index532 = alloca i32, align 4
  %map = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2377, metadata !1854), !dbg !2378
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2379, metadata !1854), !dbg !2380
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2381, metadata !1854), !dbg !2382
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2383, metadata !1854), !dbg !2384
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2385, metadata !1854), !dbg !2386
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2387
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2387
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2386
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2388, metadata !1854), !dbg !2389
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2390
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2391
  %3 = load i8*, i8** %data1, align 8, !dbg !2391
  store i8* %3, i8** %buf, align 8, !dbg !2389
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2392, metadata !1854), !dbg !2393
  call void @llvm.dbg.declare(metadata i32* %full_buf_size, metadata !2394, metadata !1854), !dbg !2395
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2396
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2397
  %5 = load i32, i32* %size, align 8, !dbg !2397
  store i32 %5, i32* %full_buf_size, align 4, !dbg !2395
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !2398, metadata !1854), !dbg !2399
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2400
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2401
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2401
  %8 = bitcast i8* %7 to %struct.AC3DecodeContext*, !dbg !2400
  store %struct.AC3DecodeContext* %8, %struct.AC3DecodeContext** %s, align 8, !dbg !2399
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2402, metadata !1854), !dbg !2403
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2404, metadata !1854), !dbg !2405
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2406, metadata !1854), !dbg !2407
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2408, metadata !1854), !dbg !2409
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2410, metadata !1854), !dbg !2411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2412, metadata !1854), !dbg !2413
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2414, metadata !1854), !dbg !2415
  store i32 0, i32* %skip, align 4, !dbg !2415
  call void @llvm.dbg.declare(metadata i32* %got_independent_frame, metadata !2416, metadata !1854), !dbg !2417
  store i32 0, i32* %got_independent_frame, align 4, !dbg !2417
  call void @llvm.dbg.declare(metadata i8** %channel_map, metadata !2418, metadata !1854), !dbg !2419
  call void @llvm.dbg.declare(metadata [16 x i8]* %extended_channel_map, metadata !2420, metadata !1854), !dbg !2422
  call void @llvm.dbg.declare(metadata [7 x float*]* %output, metadata !2423, metadata !1854), !dbg !2427
  call void @llvm.dbg.declare(metadata i32* %matrix_encoding, metadata !2428, metadata !1854), !dbg !2429
  call void @llvm.dbg.declare(metadata %struct.AVDownmixInfo** %downmix_info, metadata !2430, metadata !1854), !dbg !2441
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2442
  %superframe_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 5, !dbg !2443
  store i32 0, i32* %superframe_size, align 8, !dbg !2444
  %10 = load i32, i32* %full_buf_size, align 4, !dbg !2445
  store i32 %10, i32* %buf_size, align 4, !dbg !2446
  store i32 1, i32* %i, align 4, !dbg !2447
  br label %for.cond, !dbg !2449

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !2450
  %12 = load i32, i32* %buf_size, align 4, !dbg !2453
  %cmp = icmp slt i32 %11, %12, !dbg !2454
  br i1 %cmp, label %for.body, label %for.end, !dbg !2455

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !2456
  %idxprom = sext i32 %13 to i64, !dbg !2459
  %14 = load i8*, i8** %buf, align 8, !dbg !2459
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom, !dbg !2459
  %15 = load i8, i8* %arrayidx, align 1, !dbg !2459
  %conv = zext i8 %15 to i32, !dbg !2459
  %cmp2 = icmp eq i32 %conv, 119, !dbg !2460
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !2461

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !2462
  %idxprom4 = sext i32 %16 to i64, !dbg !2464
  %17 = load i8*, i8** %buf, align 8, !dbg !2464
  %arrayidx5 = getelementptr inbounds i8, i8* %17, i64 %idxprom4, !dbg !2464
  %18 = load i8, i8* %arrayidx5, align 1, !dbg !2464
  %conv6 = zext i8 %18 to i32, !dbg !2464
  %cmp7 = icmp eq i32 %conv6, 11, !dbg !2465
  br i1 %cmp7, label %if.then, label %if.end29, !dbg !2466

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %19 = load i32, i32* %i, align 4, !dbg !2467
  %idxprom9 = sext i32 %19 to i64, !dbg !2470
  %20 = load i8*, i8** %buf, align 8, !dbg !2470
  %arrayidx10 = getelementptr inbounds i8, i8* %20, i64 %idxprom9, !dbg !2470
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !2470
  %conv11 = zext i8 %21 to i32, !dbg !2470
  %22 = load i32, i32* %i, align 4, !dbg !2471
  %sub = sub nsw i32 %22, 1, !dbg !2472
  %idxprom12 = sext i32 %sub to i64, !dbg !2473
  %23 = load i8*, i8** %buf, align 8, !dbg !2473
  %arrayidx13 = getelementptr inbounds i8, i8* %23, i64 %idxprom12, !dbg !2473
  %24 = load i8, i8* %arrayidx13, align 1, !dbg !2473
  %conv14 = zext i8 %24 to i32, !dbg !2473
  %xor = xor i32 %conv11, %conv14, !dbg !2474
  %cmp15 = icmp eq i32 %xor, 124, !dbg !2475
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2476

if.then17:                                        ; preds = %if.then
  %25 = load i32, i32* %i, align 4, !dbg !2477
  %dec = add nsw i32 %25, -1, !dbg !2477
  store i32 %dec, i32* %i, align 4, !dbg !2477
  br label %for.end, !dbg !2479

if.else:                                          ; preds = %if.then
  %26 = load i32, i32* %i, align 4, !dbg !2480
  %idxprom18 = sext i32 %26 to i64, !dbg !2482
  %27 = load i8*, i8** %buf, align 8, !dbg !2482
  %arrayidx19 = getelementptr inbounds i8, i8* %27, i64 %idxprom18, !dbg !2482
  %28 = load i8, i8* %arrayidx19, align 1, !dbg !2482
  %conv20 = zext i8 %28 to i32, !dbg !2482
  %29 = load i32, i32* %i, align 4, !dbg !2483
  %add = add nsw i32 %29, 1, !dbg !2484
  %idxprom21 = sext i32 %add to i64, !dbg !2485
  %30 = load i8*, i8** %buf, align 8, !dbg !2485
  %arrayidx22 = getelementptr inbounds i8, i8* %30, i64 %idxprom21, !dbg !2485
  %31 = load i8, i8* %arrayidx22, align 1, !dbg !2485
  %conv23 = zext i8 %31 to i32, !dbg !2485
  %xor24 = xor i32 %conv20, %conv23, !dbg !2486
  %cmp25 = icmp eq i32 %xor24, 124, !dbg !2487
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !2488

if.then27:                                        ; preds = %if.else
  br label %for.end, !dbg !2489

if.end:                                           ; preds = %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end
  br label %if.end29, !dbg !2491

if.end29:                                         ; preds = %if.end28, %lor.lhs.false
  br label %for.inc, !dbg !2492

for.inc:                                          ; preds = %if.end29
  %32 = load i32, i32* %i, align 4, !dbg !2493
  %add30 = add nsw i32 %32, 2, !dbg !2493
  store i32 %add30, i32* %i, align 4, !dbg !2493
  br label %for.cond, !dbg !2495, !llvm.loop !2496

for.end:                                          ; preds = %if.then27, %if.then17, %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !2498
  %34 = load i32, i32* %buf_size, align 4, !dbg !2500
  %cmp31 = icmp sge i32 %33, %34, !dbg !2501
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !2502

if.then33:                                        ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2503
  br label %return, !dbg !2503

if.end34:                                         ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !2504
  %cmp35 = icmp sgt i32 %35, 10, !dbg !2506
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !2507

if.then37:                                        ; preds = %if.end34
  %36 = load i32, i32* %i, align 4, !dbg !2508
  store i32 %36, i32* %retval, align 4, !dbg !2509
  br label %return, !dbg !2509

if.end38:                                         ; preds = %if.end34
  %37 = load i32, i32* %i, align 4, !dbg !2510
  %38 = load i8*, i8** %buf, align 8, !dbg !2511
  %idx.ext = sext i32 %37 to i64, !dbg !2511
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %idx.ext, !dbg !2511
  store i8* %add.ptr, i8** %buf, align 8, !dbg !2511
  %39 = load i32, i32* %i, align 4, !dbg !2512
  %40 = load i32, i32* %buf_size, align 4, !dbg !2513
  %sub39 = sub nsw i32 %40, %39, !dbg !2513
  store i32 %sub39, i32* %buf_size, align 4, !dbg !2513
  %41 = load i32, i32* %buf_size, align 4, !dbg !2514
  %cmp40 = icmp sge i32 %41, 2, !dbg !2515
  br i1 %cmp40, label %land.lhs.true, label %if.else48, !dbg !2516

land.lhs.true:                                    ; preds = %if.end38
  %42 = load i8*, i8** %buf, align 8, !dbg !2517
  %43 = bitcast i8* %42 to %union.unaligned_16*, !dbg !2518
  %l = bitcast %union.unaligned_16* %43 to i16*, !dbg !2518
  %44 = load i16, i16* %l, align 1, !dbg !2518
  store i16 %44, i16* %x.addr.i, align 2, !dbg !2519
  %45 = load i16, i16* %x.addr.i, align 2, !dbg !2520
  %conv.i = zext i16 %45 to i32, !dbg !2520
  %shr.i = ashr i32 %conv.i, 8, !dbg !2521
  %46 = load i16, i16* %x.addr.i, align 2, !dbg !2522
  %conv1.i = zext i16 %46 to i32, !dbg !2522
  %shl.i = shl i32 %conv1.i, 8, !dbg !2523
  %or.i = or i32 %shr.i, %shl.i, !dbg !2524
  %conv2.i = trunc i32 %or.i to i16, !dbg !2525
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !2526
  %47 = load i16, i16* %x.addr.i, align 2, !dbg !2527
  %conv42 = zext i16 %47 to i32, !dbg !2519
  %cmp43 = icmp eq i32 %conv42, 30475, !dbg !2528
  br i1 %cmp43, label %if.then45, label %if.else48, !dbg !2529

if.then45:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !2530, metadata !1854), !dbg !2532
  %48 = load i32, i32* %buf_size, align 4, !dbg !2533
  %cmp46 = icmp sgt i32 %48, 32768, !dbg !2534
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !2535

cond.true:                                        ; preds = %if.then45
  br label %cond.end, !dbg !2536

cond.false:                                       ; preds = %if.then45
  %49 = load i32, i32* %buf_size, align 4, !dbg !2538
  br label %cond.end, !dbg !2540

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 32768, %cond.true ], [ %49, %cond.false ], !dbg !2541
  %shr = ashr i32 %cond, 1, !dbg !2543
  store i32 %shr, i32* %cnt, align 4, !dbg !2544
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2545
  %bdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 109, !dbg !2546
  %bswap16_buf = getelementptr inbounds %struct.BswapDSPContext, %struct.BswapDSPContext* %bdsp, i32 0, i32 1, !dbg !2547
  %51 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %bswap16_buf, align 8, !dbg !2547
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2548
  %input_buffer = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 124, !dbg !2549
  %arraydecay = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer, i32 0, i32 0, !dbg !2548
  %53 = bitcast i8* %arraydecay to i16*, !dbg !2550
  %54 = load i8*, i8** %buf, align 8, !dbg !2551
  %55 = bitcast i8* %54 to i16*, !dbg !2552
  %56 = load i32, i32* %cnt, align 4, !dbg !2553
  call void %51(i16* %53, i16* %55, i32 %56), !dbg !2545
  br label %if.end58, !dbg !2554

if.else48:                                        ; preds = %land.lhs.true, %if.end38
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2555
  %input_buffer49 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 124, !dbg !2556
  %arraydecay50 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer49, i32 0, i32 0, !dbg !2557
  %58 = load i8*, i8** %buf, align 8, !dbg !2558
  %59 = load i32, i32* %buf_size, align 4, !dbg !2559
  %cmp51 = icmp sgt i32 %59, 32768, !dbg !2560
  br i1 %cmp51, label %cond.true53, label %cond.false54, !dbg !2561

cond.true53:                                      ; preds = %if.else48
  br label %cond.end55, !dbg !2562

cond.false54:                                     ; preds = %if.else48
  %60 = load i32, i32* %buf_size, align 4, !dbg !2563
  br label %cond.end55, !dbg !2565

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond56 = phi i32 [ 32768, %cond.true53 ], [ %60, %cond.false54 ], !dbg !2566
  %conv57 = sext i32 %cond56 to i64, !dbg !2568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay50, i8* %58, i64 %conv57, i32 1, i1 false), !dbg !2569
  br label %if.end58

if.end58:                                         ; preds = %cond.end55, %cond.end
  %61 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2570
  %consistent_noise_generation = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %61, i32 0, i32 85, !dbg !2572
  %62 = load i32, i32* %consistent_noise_generation, align 4, !dbg !2572
  %tobool = icmp ne i32 %62, 0, !dbg !2570
  br i1 %tobool, label %if.then59, label %if.end69, !dbg !2573

if.then59:                                        ; preds = %if.end58
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2574
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 105, !dbg !2575
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2576
  %input_buffer60 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 124, !dbg !2577
  %arraydecay61 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer60, i32 0, i32 0, !dbg !2576
  %65 = load i32, i32* %buf_size, align 4, !dbg !2578
  %cmp62 = icmp sgt i32 %65, 32768, !dbg !2579
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !2580

cond.true64:                                      ; preds = %if.then59
  br label %cond.end66, !dbg !2581

cond.false65:                                     ; preds = %if.then59
  %66 = load i32, i32* %buf_size, align 4, !dbg !2583
  br label %cond.end66, !dbg !2585

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ 32768, %cond.true64 ], [ %66, %cond.false65 ], !dbg !2586
  %call68 = call i32 @av_lfg_init_from_data(%struct.AVLFG* %dith_state, i8* %arraydecay61, i32 %cond67), !dbg !2588
  br label %if.end69, !dbg !2588

if.end69:                                         ; preds = %cond.end66, %if.end58
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2589
  %input_buffer70 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 124, !dbg !2590
  %arraydecay71 = getelementptr inbounds [32832 x i8], [32832 x i8]* %input_buffer70, i32 0, i32 0, !dbg !2589
  store i8* %arraydecay71, i8** %buf, align 8, !dbg !2591
  br label %dependent_frame, !dbg !2592

dependent_frame:                                  ; preds = %if.else400, %if.end69
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2593
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 2, !dbg !2595
  %69 = load i8*, i8** %buf, align 8, !dbg !2596
  %70 = load i32, i32* %buf_size, align 4, !dbg !2597
  %call72 = call i32 @init_get_bits8(%struct.GetBitContext* %gbc, i8* %69, i32 %70), !dbg !2598
  store i32 %call72, i32* %ret, align 4, !dbg !2599
  %cmp73 = icmp slt i32 %call72, 0, !dbg !2600
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !2601

if.then75:                                        ; preds = %dependent_frame
  %71 = load i32, i32* %ret, align 4, !dbg !2602
  store i32 %71, i32* %retval, align 4, !dbg !2603
  br label %return, !dbg !2603

if.end76:                                         ; preds = %dependent_frame
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2604
  %call77 = call i32 @parse_frame_header(%struct.AC3DecodeContext* %72), !dbg !2605
  store i32 %call77, i32* %err, align 4, !dbg !2606
  %73 = load i32, i32* %err, align 4, !dbg !2607
  %tobool78 = icmp ne i32 %73, 0, !dbg !2607
  br i1 %tobool78, label %if.then79, label %if.else90, !dbg !2609

if.then79:                                        ; preds = %if.end76
  %74 = load i32, i32* %err, align 4, !dbg !2610
  switch i32 %74, label %sw.default [
    i32 -16976906, label %sw.bb
    i32 -33754122, label %sw.bb80
    i32 -50531338, label %sw.bb81
    i32 -67308554, label %sw.bb82
    i32 -84085770, label %sw.bb83
    i32 -100862986, label %sw.bb89
    i32 -117640202, label %sw.bb89
  ], !dbg !2612

sw.bb:                                            ; preds = %if.then79
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2613
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !2613
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i32 0, i32 0)), !dbg !2615
  store i32 -1094995529, i32* %retval, align 4, !dbg !2616
  br label %return, !dbg !2616

sw.bb80:                                          ; preds = %if.then79
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2617
  %78 = bitcast %struct.AVCodecContext* %77 to i8*, !dbg !2617
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0)), !dbg !2618
  br label %sw.epilog, !dbg !2619

sw.bb81:                                          ; preds = %if.then79
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2620
  %80 = bitcast %struct.AVCodecContext* %79 to i8*, !dbg !2620
  call void (i8*, i32, i8*, ...) @av_log(i8* %80, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0)), !dbg !2621
  br label %sw.epilog, !dbg !2622

sw.bb82:                                          ; preds = %if.then79
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2623
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !2623
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0)), !dbg !2624
  br label %sw.epilog, !dbg !2625

sw.bb83:                                          ; preds = %if.then79
  %83 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2626
  %substreamid = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %83, i32 0, i32 4, !dbg !2628
  %84 = load i32, i32* %substreamid, align 4, !dbg !2628
  %tobool84 = icmp ne i32 %84, 0, !dbg !2626
  br i1 %tobool84, label %if.then85, label %if.else87, !dbg !2629

if.then85:                                        ; preds = %sw.bb83
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2630
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !2630
  %87 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2632
  %substreamid86 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %87, i32 0, i32 4, !dbg !2633
  %88 = load i32, i32* %substreamid86, align 4, !dbg !2633
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i32 0, i32 0), i32 %88), !dbg !2634
  %89 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2635
  store i32 0, i32* %89, align 4, !dbg !2636
  %90 = load i32, i32* %buf_size, align 4, !dbg !2637
  store i32 %90, i32* %retval, align 4, !dbg !2638
  br label %return, !dbg !2638

if.else87:                                        ; preds = %sw.bb83
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2639
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !2639
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0)), !dbg !2641
  br label %if.end88

if.end88:                                         ; preds = %if.else87
  br label %sw.epilog, !dbg !2642

sw.bb89:                                          ; preds = %if.then79, %if.then79
  br label %sw.epilog, !dbg !2643

sw.default:                                       ; preds = %if.then79
  %93 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2644
  store i32 0, i32* %93, align 4, !dbg !2645
  %94 = load i32, i32* %err, align 4, !dbg !2646
  store i32 %94, i32* %retval, align 4, !dbg !2647
  br label %return, !dbg !2647

sw.epilog:                                        ; preds = %sw.bb89, %if.end88, %sw.bb82, %sw.bb81, %sw.bb80
  br label %if.end113, !dbg !2648

if.else90:                                        ; preds = %if.end76
  %95 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2649
  %frame_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %95, i32 0, i32 6, !dbg !2652
  %96 = load i32, i32* %frame_size, align 4, !dbg !2652
  %97 = load i32, i32* %buf_size, align 4, !dbg !2653
  %cmp91 = icmp sgt i32 %96, %97, !dbg !2654
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !2655

if.then93:                                        ; preds = %if.else90
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2656
  %99 = bitcast %struct.AVCodecContext* %98 to i8*, !dbg !2656
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0)), !dbg !2658
  store i32 -67308554, i32* %err, align 4, !dbg !2659
  br label %if.end112, !dbg !2660

if.else94:                                        ; preds = %if.else90
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2661
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 135, !dbg !2664
  %101 = load i32, i32* %err_recognition, align 8, !dbg !2664
  %and = and i32 %101, 65537, !dbg !2665
  %tobool95 = icmp ne i32 %and, 0, !dbg !2665
  br i1 %tobool95, label %if.then96, label %if.end111, !dbg !2661

if.then96:                                        ; preds = %if.else94
  %call97 = call i32* @av_crc_get_table(i32 1), !dbg !2666
  %102 = load i8*, i8** %buf, align 8, !dbg !2669
  %arrayidx98 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !2669
  %103 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2670
  %frame_size99 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %103, i32 0, i32 6, !dbg !2671
  %104 = load i32, i32* %frame_size99, align 4, !dbg !2671
  %sub100 = sub nsw i32 %104, 2, !dbg !2672
  %conv101 = sext i32 %sub100 to i64, !dbg !2670
  %call102 = call i32 @av_crc(i32* %call97, i32 0, i8* %arrayidx98, i64 %conv101) #9, !dbg !2673
  %tobool103 = icmp ne i32 %call102, 0, !dbg !2675
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !2676

if.then104:                                       ; preds = %if.then96
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2677
  %106 = bitcast %struct.AVCodecContext* %105 to i8*, !dbg !2677
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i32 0, i32 0)), !dbg !2679
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2680
  %err_recognition105 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %107, i32 0, i32 135, !dbg !2682
  %108 = load i32, i32* %err_recognition105, align 8, !dbg !2682
  %and106 = and i32 %108, 8, !dbg !2683
  %tobool107 = icmp ne i32 %and106, 0, !dbg !2683
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !2684

if.then108:                                       ; preds = %if.then104
  store i32 -1094995529, i32* %retval, align 4, !dbg !2685
  br label %return, !dbg !2685

if.end109:                                        ; preds = %if.then104
  store i32 -100862986, i32* %err, align 4, !dbg !2686
  br label %if.end110, !dbg !2687

if.end110:                                        ; preds = %if.end109, %if.then96
  br label %if.end111, !dbg !2688

if.end111:                                        ; preds = %if.end110, %if.else94
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then93
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %sw.epilog
  %109 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2689
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %109, i32 0, i32 3, !dbg !2691
  %110 = load i32, i32* %frame_type, align 16, !dbg !2691
  %cmp114 = icmp eq i32 %110, 1, !dbg !2692
  br i1 %cmp114, label %land.lhs.true116, label %if.end127, !dbg !2693

land.lhs.true116:                                 ; preds = %if.end113
  %111 = load i32, i32* %got_independent_frame, align 4, !dbg !2694
  %tobool117 = icmp ne i32 %111, 0, !dbg !2694
  br i1 %tobool117, label %if.end127, label %if.then118, !dbg !2696

if.then118:                                       ; preds = %land.lhs.true116
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2697
  %113 = bitcast %struct.AVCodecContext* %112 to i8*, !dbg !2697
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33, i32 0, i32 0)), !dbg !2699
  %114 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2700
  store i32 0, i32* %114, align 4, !dbg !2701
  %115 = load i32, i32* %full_buf_size, align 4, !dbg !2702
  %116 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2703
  %frame_size119 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %116, i32 0, i32 6, !dbg !2704
  %117 = load i32, i32* %frame_size119, align 4, !dbg !2704
  %cmp120 = icmp sgt i32 %115, %117, !dbg !2705
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !2706

cond.true122:                                     ; preds = %if.then118
  %118 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2707
  %frame_size123 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %118, i32 0, i32 6, !dbg !2709
  %119 = load i32, i32* %frame_size123, align 4, !dbg !2709
  br label %cond.end125, !dbg !2710

cond.false124:                                    ; preds = %if.then118
  %120 = load i32, i32* %full_buf_size, align 4, !dbg !2711
  br label %cond.end125, !dbg !2713

cond.end125:                                      ; preds = %cond.false124, %cond.true122
  %cond126 = phi i32 [ %119, %cond.true122 ], [ %120, %cond.false124 ], !dbg !2714
  store i32 %cond126, i32* %retval, align 4, !dbg !2716
  br label %return, !dbg !2716

if.end127:                                        ; preds = %land.lhs.true116, %if.end113
  %121 = load i32, i32* %err, align 4, !dbg !2717
  %tobool128 = icmp ne i32 %121, 0, !dbg !2717
  br i1 %tobool128, label %lor.lhs.false129, label %if.then135, !dbg !2719

lor.lhs.false129:                                 ; preds = %if.end127
  %122 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2720
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %122, i32 0, i32 71, !dbg !2722
  %123 = load i32, i32* %channels, align 8, !dbg !2722
  %tobool130 = icmp ne i32 %123, 0, !dbg !2720
  br i1 %tobool130, label %land.lhs.true131, label %if.else187, !dbg !2723

land.lhs.true131:                                 ; preds = %lor.lhs.false129
  %124 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2724
  %out_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %124, i32 0, i32 77, !dbg !2726
  %125 = load i32, i32* %out_channels, align 4, !dbg !2726
  %126 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2727
  %channels132 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %126, i32 0, i32 71, !dbg !2728
  %127 = load i32, i32* %channels132, align 8, !dbg !2728
  %cmp133 = icmp ne i32 %125, %127, !dbg !2729
  br i1 %cmp133, label %if.then135, label %if.else187, !dbg !2730

if.then135:                                       ; preds = %land.lhs.true131, %if.end127
  %128 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2731
  %channels136 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %128, i32 0, i32 71, !dbg !2733
  %129 = load i32, i32* %channels136, align 8, !dbg !2733
  %130 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2734
  %out_channels137 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %130, i32 0, i32 77, !dbg !2735
  store i32 %129, i32* %out_channels137, align 4, !dbg !2736
  %131 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2737
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %131, i32 0, i32 12, !dbg !2738
  %132 = load i32, i32* %channel_mode, align 4, !dbg !2738
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2739
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 75, !dbg !2740
  store i32 %132, i32* %output_mode, align 4, !dbg !2741
  %134 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2742
  %lfe_on = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %134, i32 0, i32 13, !dbg !2744
  %135 = load i32, i32* %lfe_on, align 8, !dbg !2744
  %tobool138 = icmp ne i32 %135, 0, !dbg !2742
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !2745

if.then139:                                       ; preds = %if.then135
  %136 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2746
  %output_mode140 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %136, i32 0, i32 75, !dbg !2747
  %137 = load i32, i32* %output_mode140, align 4, !dbg !2748
  %or = or i32 %137, 8, !dbg !2748
  store i32 %or, i32* %output_mode140, align 4, !dbg !2748
  br label %if.end141, !dbg !2746

if.end141:                                        ; preds = %if.then139, %if.then135
  %138 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2749
  %channels142 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %138, i32 0, i32 71, !dbg !2751
  %139 = load i32, i32* %channels142, align 8, !dbg !2751
  %cmp143 = icmp sgt i32 %139, 1, !dbg !2752
  br i1 %cmp143, label %land.lhs.true145, label %if.else151, !dbg !2753

land.lhs.true145:                                 ; preds = %if.end141
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2754
  %request_channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 90, !dbg !2755
  %141 = load i64, i64* %request_channel_layout, align 8, !dbg !2755
  %cmp146 = icmp eq i64 %141, 4, !dbg !2756
  br i1 %cmp146, label %if.then148, label %if.else151, !dbg !2757

if.then148:                                       ; preds = %land.lhs.true145
  %142 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2759
  %out_channels149 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %142, i32 0, i32 77, !dbg !2761
  store i32 1, i32* %out_channels149, align 4, !dbg !2762
  %143 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2763
  %output_mode150 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %143, i32 0, i32 75, !dbg !2764
  store i32 1, i32* %output_mode150, align 4, !dbg !2765
  br label %if.end163, !dbg !2766

if.else151:                                       ; preds = %land.lhs.true145, %if.end141
  %144 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2767
  %channels152 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %144, i32 0, i32 71, !dbg !2770
  %145 = load i32, i32* %channels152, align 8, !dbg !2770
  %cmp153 = icmp sgt i32 %145, 2, !dbg !2771
  br i1 %cmp153, label %land.lhs.true155, label %if.end162, !dbg !2772

land.lhs.true155:                                 ; preds = %if.else151
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2773
  %request_channel_layout156 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %146, i32 0, i32 90, !dbg !2774
  %147 = load i64, i64* %request_channel_layout156, align 8, !dbg !2774
  %cmp157 = icmp eq i64 %147, 3, !dbg !2775
  br i1 %cmp157, label %if.then159, label %if.end162, !dbg !2776

if.then159:                                       ; preds = %land.lhs.true155
  %148 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2778
  %out_channels160 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %148, i32 0, i32 77, !dbg !2780
  store i32 2, i32* %out_channels160, align 4, !dbg !2781
  %149 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2782
  %output_mode161 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %149, i32 0, i32 75, !dbg !2783
  store i32 2, i32* %output_mode161, align 4, !dbg !2784
  br label %if.end162, !dbg !2785

if.end162:                                        ; preds = %if.then159, %land.lhs.true155, %if.else151
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then148
  %150 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2786
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %150, i32 0, i32 19, !dbg !2787
  %151 = load i32, i32* %center_mix_level, align 4, !dbg !2787
  %idxprom164 = sext i32 %151 to i64, !dbg !2788
  %arrayidx165 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom164, !dbg !2788
  %152 = load float, float* %arrayidx165, align 4, !dbg !2788
  %153 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2789
  %loro_center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %153, i32 0, i32 34, !dbg !2790
  store float %152, float* %loro_center_mix_level, align 8, !dbg !2791
  %154 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2792
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %154, i32 0, i32 21, !dbg !2793
  %155 = load i32, i32* %surround_mix_level, align 4, !dbg !2793
  %idxprom166 = sext i32 %155 to i64, !dbg !2794
  %arrayidx167 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom166, !dbg !2794
  %156 = load float, float* %arrayidx167, align 4, !dbg !2794
  %157 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2795
  %loro_surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %157, i32 0, i32 35, !dbg !2796
  store float %156, float* %loro_surround_mix_level, align 4, !dbg !2797
  %158 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2798
  %ltrt_center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %158, i32 0, i32 32, !dbg !2799
  store float 0x3FE6A09E60000000, float* %ltrt_center_mix_level, align 16, !dbg !2800
  %159 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2801
  %ltrt_surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %159, i32 0, i32 33, !dbg !2802
  store float 0x3FE6A09E60000000, float* %ltrt_surround_mix_level, align 4, !dbg !2803
  %160 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2804
  %channels168 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %160, i32 0, i32 71, !dbg !2806
  %161 = load i32, i32* %channels168, align 8, !dbg !2806
  %162 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2807
  %out_channels169 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %162, i32 0, i32 77, !dbg !2808
  %163 = load i32, i32* %out_channels169, align 4, !dbg !2808
  %cmp170 = icmp ne i32 %161, %163, !dbg !2809
  br i1 %cmp170, label %land.lhs.true172, label %if.end186, !dbg !2810

land.lhs.true172:                                 ; preds = %if.end163
  %164 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2811
  %output_mode173 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %164, i32 0, i32 75, !dbg !2813
  %165 = load i32, i32* %output_mode173, align 4, !dbg !2813
  %and174 = and i32 %165, 8, !dbg !2814
  %tobool175 = icmp ne i32 %and174, 0, !dbg !2814
  br i1 %tobool175, label %land.lhs.true176, label %if.then180, !dbg !2815

land.lhs.true176:                                 ; preds = %land.lhs.true172
  %166 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2816
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %166, i32 0, i32 70, !dbg !2817
  %167 = load i32, i32* %fbw_channels, align 4, !dbg !2817
  %168 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2818
  %out_channels177 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %168, i32 0, i32 77, !dbg !2819
  %169 = load i32, i32* %out_channels177, align 4, !dbg !2819
  %cmp178 = icmp eq i32 %167, %169, !dbg !2820
  br i1 %cmp178, label %if.end186, label %if.then180, !dbg !2821

if.then180:                                       ; preds = %land.lhs.true176, %land.lhs.true172
  %170 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2823
  %call181 = call i32 @set_downmix_coeffs(%struct.AC3DecodeContext* %170), !dbg !2826
  store i32 %call181, i32* %ret, align 4, !dbg !2827
  %cmp182 = icmp slt i32 %call181, 0, !dbg !2828
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !2829

if.then184:                                       ; preds = %if.then180
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2830
  %172 = bitcast %struct.AVCodecContext* %171 to i8*, !dbg !2830
  call void (i8*, i32, i8*, ...) @av_log(i8* %172, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0)), !dbg !2832
  %173 = load i32, i32* %ret, align 4, !dbg !2833
  store i32 %173, i32* %retval, align 4, !dbg !2834
  br label %return, !dbg !2834

if.end185:                                        ; preds = %if.then180
  br label %if.end186, !dbg !2835

if.end186:                                        ; preds = %if.end185, %land.lhs.true176, %if.end163
  br label %if.end192, !dbg !2836

if.else187:                                       ; preds = %land.lhs.true131, %lor.lhs.false129
  %174 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2837
  %channels188 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %174, i32 0, i32 71, !dbg !2840
  %175 = load i32, i32* %channels188, align 8, !dbg !2840
  %tobool189 = icmp ne i32 %175, 0, !dbg !2837
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !2841

if.then190:                                       ; preds = %if.else187
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2842
  %177 = bitcast %struct.AVCodecContext* %176 to i8*, !dbg !2842
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i32 0, i32 0)), !dbg !2844
  store i32 -1094995529, i32* %retval, align 4, !dbg !2845
  br label %return, !dbg !2845

if.end191:                                        ; preds = %if.else187
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end186
  %178 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2846
  %out_channels193 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %178, i32 0, i32 77, !dbg !2847
  %179 = load i32, i32* %out_channels193, align 4, !dbg !2847
  %180 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2848
  %channels194 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %180, i32 0, i32 83, !dbg !2849
  store i32 %179, i32* %channels194, align 4, !dbg !2850
  %181 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2851
  %output_mode195 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %181, i32 0, i32 75, !dbg !2852
  %182 = load i32, i32* %output_mode195, align 4, !dbg !2852
  %and196 = and i32 %182, -9, !dbg !2853
  %idxprom197 = sext i32 %and196 to i64, !dbg !2854
  %arrayidx198 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %idxprom197, !dbg !2854
  %183 = load i16, i16* %arrayidx198, align 2, !dbg !2854
  %conv199 = zext i16 %183 to i64, !dbg !2854
  %184 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2855
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %184, i32 0, i32 89, !dbg !2856
  store i64 %conv199, i64* %channel_layout, align 8, !dbg !2857
  %185 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2858
  %output_mode200 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %185, i32 0, i32 75, !dbg !2860
  %186 = load i32, i32* %output_mode200, align 4, !dbg !2860
  %and201 = and i32 %186, 8, !dbg !2861
  %tobool202 = icmp ne i32 %and201, 0, !dbg !2861
  br i1 %tobool202, label %if.then203, label %if.end206, !dbg !2862

if.then203:                                       ; preds = %if.end192
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2863
  %channel_layout204 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %187, i32 0, i32 89, !dbg !2864
  %188 = load i64, i64* %channel_layout204, align 8, !dbg !2865
  %or205 = or i64 %188, 8, !dbg !2865
  store i64 %or205, i64* %channel_layout204, align 8, !dbg !2865
  br label %if.end206, !dbg !2863

if.end206:                                        ; preds = %if.then203, %if.end192
  %189 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2866
  %bitstream_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %189, i32 0, i32 11, !dbg !2867
  %190 = load i32, i32* %bitstream_mode, align 16, !dbg !2867
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2868
  %audio_service_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 91, !dbg !2869
  store i32 %190, i32* %audio_service_type, align 8, !dbg !2870
  %192 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2871
  %bitstream_mode207 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %192, i32 0, i32 11, !dbg !2873
  %193 = load i32, i32* %bitstream_mode207, align 16, !dbg !2873
  %cmp208 = icmp eq i32 %193, 7, !dbg !2874
  br i1 %cmp208, label %land.lhs.true210, label %if.end216, !dbg !2875

land.lhs.true210:                                 ; preds = %if.end206
  %194 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2876
  %channels211 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %194, i32 0, i32 71, !dbg !2878
  %195 = load i32, i32* %channels211, align 8, !dbg !2878
  %cmp212 = icmp sgt i32 %195, 1, !dbg !2879
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !2880

if.then214:                                       ; preds = %land.lhs.true210
  %196 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2881
  %audio_service_type215 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %196, i32 0, i32 91, !dbg !2882
  store i32 8, i32* %audio_service_type215, align 8, !dbg !2883
  br label %if.end216, !dbg !2881

if.end216:                                        ; preds = %if.then214, %land.lhs.true210, %if.end206
  %197 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2884
  %lfe_on217 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %197, i32 0, i32 13, !dbg !2885
  %198 = load i32, i32* %lfe_on217, align 8, !dbg !2885
  %idxprom218 = sext i32 %198 to i64, !dbg !2886
  %199 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2887
  %output_mode219 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %199, i32 0, i32 75, !dbg !2888
  %200 = load i32, i32* %output_mode219, align 4, !dbg !2888
  %and220 = and i32 %200, -9, !dbg !2889
  %idxprom221 = sext i32 %and220 to i64, !dbg !2886
  %arrayidx222 = getelementptr inbounds [8 x [2 x [6 x i8]]], [8 x [2 x [6 x i8]]]* @ff_ac3_dec_channel_map, i64 0, i64 %idxprom221, !dbg !2886
  %arrayidx223 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %arrayidx222, i64 0, i64 %idxprom218, !dbg !2886
  %arraydecay224 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx223, i32 0, i32 0, !dbg !2886
  store i8* %arraydecay224, i8** %channel_map, align 8, !dbg !2890
  %201 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2891
  %frame_type225 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %201, i32 0, i32 3, !dbg !2892
  %202 = load i32, i32* %frame_type225, align 16, !dbg !2892
  %cmp226 = icmp eq i32 %202, 1, !dbg !2893
  %cond228 = select i1 %cmp226, i32 7, i32 0, !dbg !2891
  store i32 %cond228, i32* %offset, align 4, !dbg !2894
  store i32 0, i32* %ch, align 4, !dbg !2895
  br label %for.cond229, !dbg !2897

for.cond229:                                      ; preds = %for.inc247, %if.end216
  %203 = load i32, i32* %ch, align 4, !dbg !2898
  %cmp230 = icmp slt i32 %203, 7, !dbg !2901
  br i1 %cmp230, label %for.body232, label %for.end248, !dbg !2902

for.body232:                                      ; preds = %for.cond229
  %204 = load i32, i32* %ch, align 4, !dbg !2903
  %205 = load i32, i32* %offset, align 4, !dbg !2905
  %add233 = add nsw i32 %204, %205, !dbg !2906
  %idxprom234 = sext i32 %add233 to i64, !dbg !2907
  %206 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2907
  %output235 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %206, i32 0, i32 123, !dbg !2908
  %arrayidx236 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %output235, i64 0, i64 %idxprom234, !dbg !2907
  %arraydecay237 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx236, i32 0, i32 0, !dbg !2907
  %207 = load i32, i32* %ch, align 4, !dbg !2909
  %idxprom238 = sext i32 %207 to i64, !dbg !2910
  %arrayidx239 = getelementptr inbounds [7 x float*], [7 x float*]* %output, i64 0, i64 %idxprom238, !dbg !2910
  store float* %arraydecay237, float** %arrayidx239, align 8, !dbg !2911
  %208 = load i32, i32* %ch, align 4, !dbg !2912
  %209 = load i32, i32* %offset, align 4, !dbg !2913
  %add240 = add nsw i32 %208, %209, !dbg !2914
  %idxprom241 = sext i32 %add240 to i64, !dbg !2915
  %210 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2915
  %output242 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %210, i32 0, i32 123, !dbg !2916
  %arrayidx243 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %output242, i64 0, i64 %idxprom241, !dbg !2915
  %arraydecay244 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx243, i32 0, i32 0, !dbg !2915
  %211 = load i32, i32* %ch, align 4, !dbg !2917
  %idxprom245 = sext i32 %211 to i64, !dbg !2918
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2918
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 113, !dbg !2919
  %arrayidx246 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr, i64 0, i64 %idxprom245, !dbg !2918
  store float* %arraydecay244, float** %arrayidx246, align 8, !dbg !2920
  br label %for.inc247, !dbg !2921

for.inc247:                                       ; preds = %for.body232
  %213 = load i32, i32* %ch, align 4, !dbg !2922
  %inc = add nsw i32 %213, 1, !dbg !2922
  store i32 %inc, i32* %ch, align 4, !dbg !2922
  br label %for.cond229, !dbg !2924, !llvm.loop !2925

for.end248:                                       ; preds = %for.cond229
  store i32 0, i32* %ch, align 4, !dbg !2927
  br label %for.cond249, !dbg !2929

for.cond249:                                      ; preds = %for.inc268, %for.end248
  %214 = load i32, i32* %ch, align 4, !dbg !2930
  %215 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2933
  %channels250 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %215, i32 0, i32 71, !dbg !2934
  %216 = load i32, i32* %channels250, align 8, !dbg !2934
  %cmp251 = icmp slt i32 %214, %216, !dbg !2935
  br i1 %cmp251, label %for.body253, label %for.end270, !dbg !2936

for.body253:                                      ; preds = %for.cond249
  %217 = load i32, i32* %ch, align 4, !dbg !2937
  %218 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2940
  %out_channels254 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %218, i32 0, i32 77, !dbg !2941
  %219 = load i32, i32* %out_channels254, align 4, !dbg !2941
  %cmp255 = icmp slt i32 %217, %219, !dbg !2942
  br i1 %cmp255, label %if.then257, label %if.end267, !dbg !2943

if.then257:                                       ; preds = %for.body253
  %220 = load i32, i32* %ch, align 4, !dbg !2944
  %221 = load i32, i32* %offset, align 4, !dbg !2945
  %add258 = add nsw i32 %220, %221, !dbg !2946
  %idxprom259 = sext i32 %add258 to i64, !dbg !2947
  %222 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2947
  %output_buffer = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %222, i32 0, i32 125, !dbg !2948
  %arrayidx260 = getelementptr inbounds [16 x [1536 x float]], [16 x [1536 x float]]* %output_buffer, i64 0, i64 %idxprom259, !dbg !2947
  %arraydecay261 = getelementptr inbounds [1536 x float], [1536 x float]* %arrayidx260, i32 0, i32 0, !dbg !2947
  %223 = load i32, i32* %ch, align 4, !dbg !2949
  %idxprom262 = sext i32 %223 to i64, !dbg !2950
  %224 = load i8*, i8** %channel_map, align 8, !dbg !2950
  %arrayidx263 = getelementptr inbounds i8, i8* %224, i64 %idxprom262, !dbg !2950
  %225 = load i8, i8* %arrayidx263, align 1, !dbg !2950
  %idxprom264 = zext i8 %225 to i64, !dbg !2951
  %226 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2951
  %outptr265 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %226, i32 0, i32 113, !dbg !2952
  %arrayidx266 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr265, i64 0, i64 %idxprom264, !dbg !2951
  store float* %arraydecay261, float** %arrayidx266, align 8, !dbg !2953
  br label %if.end267, !dbg !2951

if.end267:                                        ; preds = %if.then257, %for.body253
  br label %for.inc268, !dbg !2954

for.inc268:                                       ; preds = %if.end267
  %227 = load i32, i32* %ch, align 4, !dbg !2955
  %inc269 = add nsw i32 %227, 1, !dbg !2955
  store i32 %inc269, i32* %ch, align 4, !dbg !2955
  br label %for.cond249, !dbg !2957, !llvm.loop !2958

for.end270:                                       ; preds = %for.cond249
  store i32 0, i32* %blk, align 4, !dbg !2960
  br label %for.cond271, !dbg !2962

for.cond271:                                      ; preds = %for.inc338, %for.end270
  %228 = load i32, i32* %blk, align 4, !dbg !2963
  %229 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2966
  %num_blocks = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %229, i32 0, i32 9, !dbg !2967
  %230 = load i32, i32* %num_blocks, align 8, !dbg !2967
  %cmp272 = icmp slt i32 %228, %230, !dbg !2968
  br i1 %cmp272, label %for.body274, label %for.end340, !dbg !2969

for.body274:                                      ; preds = %for.cond271
  %231 = load i32, i32* %err, align 4, !dbg !2970
  %tobool275 = icmp ne i32 %231, 0, !dbg !2970
  br i1 %tobool275, label %if.end280, label %land.lhs.true276, !dbg !2973

land.lhs.true276:                                 ; preds = %for.body274
  %232 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2974
  %233 = load i32, i32* %blk, align 4, !dbg !2976
  %234 = load i32, i32* %offset, align 4, !dbg !2977
  %call277 = call i32 @decode_audio_block(%struct.AC3DecodeContext* %232, i32 %233, i32 %234), !dbg !2978
  %tobool278 = icmp ne i32 %call277, 0, !dbg !2978
  br i1 %tobool278, label %if.then279, label %if.end280, !dbg !2979

if.then279:                                       ; preds = %land.lhs.true276
  %235 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2980
  %236 = bitcast %struct.AVCodecContext* %235 to i8*, !dbg !2980
  call void (i8*, i32, i8*, ...) @av_log(i8* %236, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i32 0, i32 0)), !dbg !2982
  store i32 1, i32* %err, align 4, !dbg !2983
  br label %if.end280, !dbg !2984

if.end280:                                        ; preds = %if.then279, %land.lhs.true276, %for.body274
  %237 = load i32, i32* %err, align 4, !dbg !2985
  %tobool281 = icmp ne i32 %237, 0, !dbg !2985
  br i1 %tobool281, label %if.then282, label %if.end300, !dbg !2987

if.then282:                                       ; preds = %if.end280
  store i32 0, i32* %ch, align 4, !dbg !2988
  br label %for.cond283, !dbg !2990

for.cond283:                                      ; preds = %for.inc297, %if.then282
  %238 = load i32, i32* %ch, align 4, !dbg !2991
  %239 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !2994
  %out_channels284 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %239, i32 0, i32 77, !dbg !2995
  %240 = load i32, i32* %out_channels284, align 4, !dbg !2995
  %cmp285 = icmp slt i32 %238, %240, !dbg !2996
  br i1 %cmp285, label %for.body287, label %for.end299, !dbg !2997

for.body287:                                      ; preds = %for.cond283
  %241 = load i32, i32* %ch, align 4, !dbg !2998
  %242 = load i32, i32* %offset, align 4, !dbg !2999
  %add288 = add nsw i32 %241, %242, !dbg !3000
  %idxprom289 = sext i32 %add288 to i64, !dbg !3001
  %243 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3001
  %output_buffer290 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %243, i32 0, i32 125, !dbg !3002
  %arrayidx291 = getelementptr inbounds [16 x [1536 x float]], [16 x [1536 x float]]* %output_buffer290, i64 0, i64 %idxprom289, !dbg !3001
  %arraydecay292 = getelementptr inbounds [1536 x float], [1536 x float]* %arrayidx291, i32 0, i32 0, !dbg !3001
  %244 = load i32, i32* %blk, align 4, !dbg !3003
  %mul = mul nsw i32 256, %244, !dbg !3004
  %idx.ext293 = sext i32 %mul to i64, !dbg !3005
  %add.ptr294 = getelementptr inbounds float, float* %arraydecay292, i64 %idx.ext293, !dbg !3005
  %245 = bitcast float* %add.ptr294 to i8*, !dbg !3006
  %246 = load i32, i32* %ch, align 4, !dbg !3007
  %idxprom295 = sext i32 %246 to i64, !dbg !3008
  %arrayidx296 = getelementptr inbounds [7 x float*], [7 x float*]* %output, i64 0, i64 %idxprom295, !dbg !3008
  %247 = load float*, float** %arrayidx296, align 8, !dbg !3008
  %248 = bitcast float* %247 to i8*, !dbg !3006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %248, i64 1024, i32 4, i1 false), !dbg !3006
  br label %for.inc297, !dbg !3006

for.inc297:                                       ; preds = %for.body287
  %249 = load i32, i32* %ch, align 4, !dbg !3009
  %inc298 = add nsw i32 %249, 1, !dbg !3009
  store i32 %inc298, i32* %ch, align 4, !dbg !3009
  br label %for.cond283, !dbg !3011, !llvm.loop !3012

for.end299:                                       ; preds = %for.cond283
  br label %if.end300, !dbg !3014

if.end300:                                        ; preds = %for.end299, %if.end280
  store i32 0, i32* %ch, align 4, !dbg !3016
  br label %for.cond301, !dbg !3018

for.cond301:                                      ; preds = %for.inc313, %if.end300
  %250 = load i32, i32* %ch, align 4, !dbg !3019
  %251 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3022
  %out_channels302 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %251, i32 0, i32 77, !dbg !3023
  %252 = load i32, i32* %out_channels302, align 4, !dbg !3023
  %cmp303 = icmp slt i32 %250, %252, !dbg !3024
  br i1 %cmp303, label %for.body305, label %for.end315, !dbg !3025

for.body305:                                      ; preds = %for.cond301
  %253 = load i32, i32* %ch, align 4, !dbg !3026
  %idxprom306 = sext i32 %253 to i64, !dbg !3027
  %254 = load i8*, i8** %channel_map, align 8, !dbg !3027
  %arrayidx307 = getelementptr inbounds i8, i8* %254, i64 %idxprom306, !dbg !3027
  %255 = load i8, i8* %arrayidx307, align 1, !dbg !3027
  %idxprom308 = zext i8 %255 to i64, !dbg !3028
  %256 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3028
  %outptr309 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %256, i32 0, i32 113, !dbg !3029
  %arrayidx310 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr309, i64 0, i64 %idxprom308, !dbg !3028
  %257 = load float*, float** %arrayidx310, align 8, !dbg !3028
  %258 = load i32, i32* %ch, align 4, !dbg !3030
  %idxprom311 = sext i32 %258 to i64, !dbg !3031
  %arrayidx312 = getelementptr inbounds [7 x float*], [7 x float*]* %output, i64 0, i64 %idxprom311, !dbg !3031
  store float* %257, float** %arrayidx312, align 8, !dbg !3032
  br label %for.inc313, !dbg !3031

for.inc313:                                       ; preds = %for.body305
  %259 = load i32, i32* %ch, align 4, !dbg !3033
  %inc314 = add nsw i32 %259, 1, !dbg !3033
  store i32 %inc314, i32* %ch, align 4, !dbg !3033
  br label %for.cond301, !dbg !3035, !llvm.loop !3036

for.end315:                                       ; preds = %for.cond301
  store i32 0, i32* %ch, align 4, !dbg !3038
  br label %for.cond316, !dbg !3040

for.cond316:                                      ; preds = %for.inc335, %for.end315
  %260 = load i32, i32* %ch, align 4, !dbg !3041
  %261 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3044
  %out_channels317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %261, i32 0, i32 77, !dbg !3045
  %262 = load i32, i32* %out_channels317, align 4, !dbg !3045
  %cmp318 = icmp slt i32 %260, %262, !dbg !3046
  br i1 %cmp318, label %for.body320, label %for.end337, !dbg !3047

for.body320:                                      ; preds = %for.cond316
  %263 = load i32, i32* %ch, align 4, !dbg !3048
  %tobool321 = icmp ne i32 %263, 0, !dbg !3048
  br i1 %tobool321, label %lor.lhs.false322, label %if.then327, !dbg !3051

lor.lhs.false322:                                 ; preds = %for.body320
  %264 = load i32, i32* %ch, align 4, !dbg !3052
  %idxprom323 = sext i32 %264 to i64, !dbg !3054
  %265 = load i8*, i8** %channel_map, align 8, !dbg !3054
  %arrayidx324 = getelementptr inbounds i8, i8* %265, i64 %idxprom323, !dbg !3054
  %266 = load i8, i8* %arrayidx324, align 1, !dbg !3054
  %conv325 = zext i8 %266 to i32, !dbg !3054
  %tobool326 = icmp ne i32 %conv325, 0, !dbg !3054
  br i1 %tobool326, label %if.then327, label %if.end334, !dbg !3055

if.then327:                                       ; preds = %lor.lhs.false322, %for.body320
  %267 = load i32, i32* %ch, align 4, !dbg !3056
  %idxprom328 = sext i32 %267 to i64, !dbg !3057
  %268 = load i8*, i8** %channel_map, align 8, !dbg !3057
  %arrayidx329 = getelementptr inbounds i8, i8* %268, i64 %idxprom328, !dbg !3057
  %269 = load i8, i8* %arrayidx329, align 1, !dbg !3057
  %idxprom330 = zext i8 %269 to i64, !dbg !3058
  %270 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3058
  %outptr331 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %270, i32 0, i32 113, !dbg !3059
  %arrayidx332 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr331, i64 0, i64 %idxprom330, !dbg !3058
  %271 = load float*, float** %arrayidx332, align 8, !dbg !3060
  %add.ptr333 = getelementptr inbounds float, float* %271, i64 256, !dbg !3060
  store float* %add.ptr333, float** %arrayidx332, align 8, !dbg !3060
  br label %if.end334, !dbg !3058

if.end334:                                        ; preds = %if.then327, %lor.lhs.false322
  br label %for.inc335, !dbg !3061

for.inc335:                                       ; preds = %if.end334
  %272 = load i32, i32* %ch, align 4, !dbg !3062
  %inc336 = add nsw i32 %272, 1, !dbg !3062
  store i32 %inc336, i32* %ch, align 4, !dbg !3062
  br label %for.cond316, !dbg !3064, !llvm.loop !3065

for.end337:                                       ; preds = %for.cond316
  br label %for.inc338, !dbg !3067

for.inc338:                                       ; preds = %for.end337
  %273 = load i32, i32* %blk, align 4, !dbg !3068
  %inc339 = add nsw i32 %273, 1, !dbg !3068
  store i32 %inc339, i32* %blk, align 4, !dbg !3068
  br label %for.cond271, !dbg !3070, !llvm.loop !3071

for.end340:                                       ; preds = %for.cond271
  store i32 0, i32* %ch, align 4, !dbg !3073
  br label %for.cond341, !dbg !3075

for.cond341:                                      ; preds = %for.inc353, %for.end340
  %274 = load i32, i32* %ch, align 4, !dbg !3076
  %275 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3079
  %out_channels342 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %275, i32 0, i32 77, !dbg !3080
  %276 = load i32, i32* %out_channels342, align 4, !dbg !3080
  %cmp343 = icmp slt i32 %274, %276, !dbg !3081
  br i1 %cmp343, label %for.body345, label %for.end355, !dbg !3082

for.body345:                                      ; preds = %for.cond341
  %277 = load i32, i32* %ch, align 4, !dbg !3083
  %278 = load i32, i32* %offset, align 4, !dbg !3084
  %add346 = add nsw i32 %277, %278, !dbg !3085
  %idxprom347 = sext i32 %add346 to i64, !dbg !3086
  %279 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3086
  %output348 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %279, i32 0, i32 123, !dbg !3087
  %arrayidx349 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %output348, i64 0, i64 %idxprom347, !dbg !3086
  %arraydecay350 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx349, i32 0, i32 0, !dbg !3088
  %280 = bitcast float* %arraydecay350 to i8*, !dbg !3088
  %281 = load i32, i32* %ch, align 4, !dbg !3089
  %idxprom351 = sext i32 %281 to i64, !dbg !3090
  %arrayidx352 = getelementptr inbounds [7 x float*], [7 x float*]* %output, i64 0, i64 %idxprom351, !dbg !3090
  %282 = load float*, float** %arrayidx352, align 8, !dbg !3090
  %283 = bitcast float* %282 to i8*, !dbg !3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %283, i64 1024, i32 4, i1 false), !dbg !3088
  br label %for.inc353, !dbg !3088

for.inc353:                                       ; preds = %for.body345
  %284 = load i32, i32* %ch, align 4, !dbg !3091
  %inc354 = add nsw i32 %284, 1, !dbg !3091
  store i32 %inc354, i32* %ch, align 4, !dbg !3091
  br label %for.cond341, !dbg !3093, !llvm.loop !3094

for.end355:                                       ; preds = %for.cond341
  %285 = load i32, i32* %buf_size, align 4, !dbg !3096
  %286 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3098
  %frame_size356 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %286, i32 0, i32 6, !dbg !3099
  %287 = load i32, i32* %frame_size356, align 4, !dbg !3099
  %cmp357 = icmp sgt i32 %285, %287, !dbg !3100
  br i1 %cmp357, label %if.then359, label %if.end409, !dbg !3101

if.then359:                                       ; preds = %for.end355
  call void @llvm.dbg.declare(metadata %struct.AC3HeaderInfo* %hdr, metadata !3102, metadata !1854), !dbg !3127
  call void @llvm.dbg.declare(metadata i32* %err360, metadata !3128, metadata !1854), !dbg !3129
  %288 = load i32, i32* %buf_size, align 4, !dbg !3130
  %289 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3132
  %frame_size361 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %289, i32 0, i32 6, !dbg !3133
  %290 = load i32, i32* %frame_size361, align 4, !dbg !3133
  %sub362 = sub nsw i32 %288, %290, !dbg !3134
  %cmp363 = icmp sle i32 %sub362, 16, !dbg !3135
  br i1 %cmp363, label %if.then365, label %if.end368, !dbg !3136

if.then365:                                       ; preds = %if.then359
  %291 = load i32, i32* %buf_size, align 4, !dbg !3137
  %292 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3139
  %frame_size366 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %292, i32 0, i32 6, !dbg !3140
  %293 = load i32, i32* %frame_size366, align 4, !dbg !3140
  %sub367 = sub nsw i32 %291, %293, !dbg !3141
  store i32 %sub367, i32* %skip, align 4, !dbg !3142
  br label %skip410, !dbg !3143

if.end368:                                        ; preds = %if.then359
  %294 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3144
  %gbc369 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %294, i32 0, i32 2, !dbg !3146
  %295 = load i8*, i8** %buf, align 8, !dbg !3147
  %296 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3148
  %frame_size370 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %296, i32 0, i32 6, !dbg !3149
  %297 = load i32, i32* %frame_size370, align 4, !dbg !3149
  %idx.ext371 = sext i32 %297 to i64, !dbg !3150
  %add.ptr372 = getelementptr inbounds i8, i8* %295, i64 %idx.ext371, !dbg !3150
  %298 = load i32, i32* %buf_size, align 4, !dbg !3151
  %299 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3152
  %frame_size373 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %299, i32 0, i32 6, !dbg !3153
  %300 = load i32, i32* %frame_size373, align 4, !dbg !3153
  %sub374 = sub nsw i32 %298, %300, !dbg !3154
  %call375 = call i32 @init_get_bits8(%struct.GetBitContext* %gbc369, i8* %add.ptr372, i32 %sub374), !dbg !3155
  store i32 %call375, i32* %ret, align 4, !dbg !3156
  %cmp376 = icmp slt i32 %call375, 0, !dbg !3157
  br i1 %cmp376, label %if.then378, label %if.end379, !dbg !3158

if.then378:                                       ; preds = %if.end368
  %301 = load i32, i32* %ret, align 4, !dbg !3159
  store i32 %301, i32* %retval, align 4, !dbg !3160
  br label %return, !dbg !3160

if.end379:                                        ; preds = %if.end368
  %302 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3161
  %gbc380 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %302, i32 0, i32 2, !dbg !3162
  %call381 = call i32 @ff_ac3_parse_header(%struct.GetBitContext* %gbc380, %struct.AC3HeaderInfo* %hdr), !dbg !3163
  store i32 %call381, i32* %err360, align 4, !dbg !3164
  %303 = load i32, i32* %err360, align 4, !dbg !3165
  %tobool382 = icmp ne i32 %303, 0, !dbg !3165
  br i1 %tobool382, label %if.then383, label %if.end384, !dbg !3167

if.then383:                                       ; preds = %if.end379
  %304 = load i32, i32* %err360, align 4, !dbg !3168
  store i32 %304, i32* %retval, align 4, !dbg !3169
  br label %return, !dbg !3169

if.end384:                                        ; preds = %if.end379
  %frame_type385 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 7, !dbg !3170
  %305 = load i8, i8* %frame_type385, align 1, !dbg !3170
  %conv386 = zext i8 %305 to i32, !dbg !3172
  %cmp387 = icmp eq i32 %conv386, 1, !dbg !3173
  br i1 %cmp387, label %if.then389, label %if.end408, !dbg !3174

if.then389:                                       ; preds = %if.end384
  %num_blocks390 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 12, !dbg !3175
  %306 = load i32, i32* %num_blocks390, align 4, !dbg !3175
  %307 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3178
  %num_blocks391 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %307, i32 0, i32 9, !dbg !3179
  %308 = load i32, i32* %num_blocks391, align 8, !dbg !3179
  %cmp392 = icmp ne i32 %306, %308, !dbg !3180
  br i1 %cmp392, label %if.then399, label %lor.lhs.false394, !dbg !3181

lor.lhs.false394:                                 ; preds = %if.then389
  %309 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3182
  %sample_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %309, i32 0, i32 8, !dbg !3184
  %310 = load i32, i32* %sample_rate, align 4, !dbg !3184
  %sample_rate395 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 15, !dbg !3185
  %311 = load i16, i16* %sample_rate395, align 2, !dbg !3185
  %conv396 = zext i16 %311 to i32, !dbg !3186
  %cmp397 = icmp ne i32 %310, %conv396, !dbg !3187
  br i1 %cmp397, label %if.then399, label %if.else400, !dbg !3188

if.then399:                                       ; preds = %lor.lhs.false394, %if.then389
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3189
  %313 = bitcast %struct.AVCodecContext* %312 to i8*, !dbg !3189
  call void (i8*, i32, i8*, ...) @av_log(i8* %313, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37, i32 0, i32 0)), !dbg !3191
  br label %if.end407, !dbg !3192

if.else400:                                       ; preds = %lor.lhs.false394
  %314 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3193
  %frame_size401 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %314, i32 0, i32 6, !dbg !3195
  %315 = load i32, i32* %frame_size401, align 4, !dbg !3195
  %316 = load i8*, i8** %buf, align 8, !dbg !3196
  %idx.ext402 = sext i32 %315 to i64, !dbg !3196
  %add.ptr403 = getelementptr inbounds i8, i8* %316, i64 %idx.ext402, !dbg !3196
  store i8* %add.ptr403, i8** %buf, align 8, !dbg !3196
  %317 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3197
  %frame_size404 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %317, i32 0, i32 6, !dbg !3198
  %318 = load i32, i32* %frame_size404, align 4, !dbg !3198
  %319 = load i32, i32* %buf_size, align 4, !dbg !3199
  %sub405 = sub nsw i32 %319, %318, !dbg !3199
  store i32 %sub405, i32* %buf_size, align 4, !dbg !3199
  %320 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3200
  %output_mode406 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %320, i32 0, i32 75, !dbg !3201
  %321 = load i32, i32* %output_mode406, align 4, !dbg !3201
  %322 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3202
  %prev_output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %322, i32 0, i32 76, !dbg !3203
  store i32 %321, i32* %prev_output_mode, align 8, !dbg !3204
  %323 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3205
  %bit_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %323, i32 0, i32 7, !dbg !3206
  %324 = load i32, i32* %bit_rate, align 32, !dbg !3206
  %325 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3207
  %prev_bit_rate = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %325, i32 0, i32 78, !dbg !3208
  store i32 %324, i32* %prev_bit_rate, align 16, !dbg !3209
  store i32 1, i32* %got_independent_frame, align 4, !dbg !3210
  br label %dependent_frame, !dbg !3211

if.end407:                                        ; preds = %if.then399
  br label %if.end408, !dbg !3212

if.end408:                                        ; preds = %if.end407, %if.end384
  br label %if.end409, !dbg !3213

if.end409:                                        ; preds = %if.end408, %for.end355
  br label %skip410, !dbg !3214

skip410:                                          ; preds = %if.end409, %if.then365
  %326 = load i32, i32* %err, align 4, !dbg !3216
  %tobool411 = icmp ne i32 %326, 0, !dbg !3216
  %cond412 = select i1 %tobool411, i32 1, i32 0, !dbg !3216
  %327 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3217
  %decode_error_flags = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %327, i32 0, i32 40, !dbg !3218
  store i32 %cond412, i32* %decode_error_flags, align 8, !dbg !3219
  %328 = load i32, i32* %err, align 4, !dbg !3220
  %tobool413 = icmp ne i32 %328, 0, !dbg !3220
  br i1 %tobool413, label %if.end422, label %if.then414, !dbg !3222

if.then414:                                       ; preds = %skip410
  %329 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3223
  %sample_rate415 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %329, i32 0, i32 8, !dbg !3225
  %330 = load i32, i32* %sample_rate415, align 4, !dbg !3225
  %331 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3226
  %sample_rate416 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %331, i32 0, i32 82, !dbg !3227
  store i32 %330, i32* %sample_rate416, align 8, !dbg !3228
  %332 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3229
  %bit_rate417 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %332, i32 0, i32 7, !dbg !3230
  %333 = load i32, i32* %bit_rate417, align 32, !dbg !3230
  %334 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3231
  %prev_bit_rate418 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %334, i32 0, i32 78, !dbg !3232
  %335 = load i32, i32* %prev_bit_rate418, align 16, !dbg !3232
  %add419 = add nsw i32 %333, %335, !dbg !3233
  %conv420 = sext i32 %add419 to i64, !dbg !3229
  %336 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3234
  %bit_rate421 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %336, i32 0, i32 9, !dbg !3235
  store i64 %conv420, i64* %bit_rate421, align 8, !dbg !3236
  br label %if.end422, !dbg !3237

if.end422:                                        ; preds = %if.then414, %skip410
  store i32 0, i32* %ch, align 4, !dbg !3238
  br label %for.cond423, !dbg !3240

for.cond423:                                      ; preds = %for.inc430, %if.end422
  %337 = load i32, i32* %ch, align 4, !dbg !3241
  %cmp424 = icmp slt i32 %337, 16, !dbg !3244
  br i1 %cmp424, label %for.body426, label %for.end432, !dbg !3245

for.body426:                                      ; preds = %for.cond423
  %338 = load i32, i32* %ch, align 4, !dbg !3246
  %conv427 = trunc i32 %338 to i8, !dbg !3246
  %339 = load i32, i32* %ch, align 4, !dbg !3247
  %idxprom428 = sext i32 %339 to i64, !dbg !3248
  %arrayidx429 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom428, !dbg !3248
  store i8 %conv427, i8* %arrayidx429, align 1, !dbg !3249
  br label %for.inc430, !dbg !3248

for.inc430:                                       ; preds = %for.body426
  %340 = load i32, i32* %ch, align 4, !dbg !3250
  %inc431 = add nsw i32 %340, 1, !dbg !3250
  store i32 %inc431, i32* %ch, align 4, !dbg !3250
  br label %for.cond423, !dbg !3252, !llvm.loop !3253

for.end432:                                       ; preds = %for.cond423
  %341 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3255
  %frame_type433 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %341, i32 0, i32 3, !dbg !3257
  %342 = load i32, i32* %frame_type433, align 16, !dbg !3257
  %cmp434 = icmp eq i32 %342, 1, !dbg !3258
  br i1 %cmp434, label %if.then436, label %if.end561, !dbg !3259

if.then436:                                       ; preds = %for.end432
  call void @llvm.dbg.declare(metadata i64* %ich_layout, metadata !3260, metadata !1854), !dbg !3262
  %343 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3263
  %prev_output_mode437 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %343, i32 0, i32 76, !dbg !3264
  %344 = load i32, i32* %prev_output_mode437, align 8, !dbg !3264
  %and438 = and i32 %344, -9, !dbg !3265
  %idxprom439 = sext i32 %and438 to i64, !dbg !3266
  %arrayidx440 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %idxprom439, !dbg !3266
  %345 = load i16, i16* %arrayidx440, align 2, !dbg !3266
  %conv441 = zext i16 %345 to i64, !dbg !3266
  store i64 %conv441, i64* %ich_layout, align 8, !dbg !3262
  call void @llvm.dbg.declare(metadata i32* %channel_map_size, metadata !3267, metadata !1854), !dbg !3268
  %346 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3269
  %output_mode442 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %346, i32 0, i32 75, !dbg !3270
  %347 = load i32, i32* %output_mode442, align 4, !dbg !3270
  %and443 = and i32 %347, -9, !dbg !3271
  %idxprom444 = sext i32 %and443 to i64, !dbg !3272
  %arrayidx445 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_ac3_channels_tab, i64 0, i64 %idxprom444, !dbg !3272
  %348 = load i8, i8* %arrayidx445, align 1, !dbg !3272
  %conv446 = zext i8 %348 to i32, !dbg !3272
  %349 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3273
  %lfe_on447 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %349, i32 0, i32 13, !dbg !3274
  %350 = load i32, i32* %lfe_on447, align 8, !dbg !3274
  %add448 = add nsw i32 %conv446, %350, !dbg !3275
  store i32 %add448, i32* %channel_map_size, align 4, !dbg !3268
  call void @llvm.dbg.declare(metadata i64* %channel_layout449, metadata !3276, metadata !1854), !dbg !3277
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !3278, metadata !1854), !dbg !3279
  store i32 0, i32* %extend, align 4, !dbg !3279
  %351 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3280
  %prev_output_mode450 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %351, i32 0, i32 76, !dbg !3282
  %352 = load i32, i32* %prev_output_mode450, align 8, !dbg !3282
  %and451 = and i32 %352, 8, !dbg !3283
  %tobool452 = icmp ne i32 %and451, 0, !dbg !3283
  br i1 %tobool452, label %if.then453, label %if.end455, !dbg !3284

if.then453:                                       ; preds = %if.then436
  %353 = load i64, i64* %ich_layout, align 8, !dbg !3285
  %or454 = or i64 %353, 8, !dbg !3285
  store i64 %or454, i64* %ich_layout, align 8, !dbg !3285
  br label %if.end455, !dbg !3286

if.end455:                                        ; preds = %if.then453, %if.then436
  %354 = load i64, i64* %ich_layout, align 8, !dbg !3287
  store i64 %354, i64* %channel_layout449, align 8, !dbg !3288
  store i32 0, i32* %ch, align 4, !dbg !3289
  br label %for.cond456, !dbg !3291

for.cond456:                                      ; preds = %for.inc471, %if.end455
  %355 = load i32, i32* %ch, align 4, !dbg !3292
  %cmp457 = icmp slt i32 %355, 16, !dbg !3295
  br i1 %cmp457, label %for.body459, label %for.end473, !dbg !3296

for.body459:                                      ; preds = %for.cond456
  %356 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3297
  %channel_map460 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %356, i32 0, i32 17, !dbg !3300
  %357 = load i32, i32* %channel_map460, align 4, !dbg !3300
  %358 = load i32, i32* %ch, align 4, !dbg !3301
  %sub461 = sub nsw i32 16, %358, !dbg !3302
  %sub462 = sub nsw i32 %sub461, 1, !dbg !3303
  %shl = shl i32 1, %sub462, !dbg !3304
  %and463 = and i32 %357, %shl, !dbg !3305
  %tobool464 = icmp ne i32 %and463, 0, !dbg !3305
  br i1 %tobool464, label %if.then465, label %if.end470, !dbg !3306

if.then465:                                       ; preds = %for.body459
  %359 = load i32, i32* %ch, align 4, !dbg !3307
  %idxprom466 = sext i32 %359 to i64, !dbg !3309
  %arrayidx467 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom466, !dbg !3309
  %arrayidx468 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx467, i64 0, i64 1, !dbg !3309
  %360 = load i64, i64* %arrayidx468, align 8, !dbg !3309
  %361 = load i64, i64* %channel_layout449, align 8, !dbg !3310
  %or469 = or i64 %361, %360, !dbg !3310
  store i64 %or469, i64* %channel_layout449, align 8, !dbg !3310
  br label %if.end470, !dbg !3311

if.end470:                                        ; preds = %if.then465, %for.body459
  br label %for.inc471, !dbg !3312

for.inc471:                                       ; preds = %if.end470
  %362 = load i32, i32* %ch, align 4, !dbg !3313
  %inc472 = add nsw i32 %362, 1, !dbg !3313
  store i32 %inc472, i32* %ch, align 4, !dbg !3313
  br label %for.cond456, !dbg !3315, !llvm.loop !3316

for.end473:                                       ; preds = %for.cond456
  %363 = load i64, i64* %channel_layout449, align 8, !dbg !3318
  %call474 = call i32 @av_get_channel_layout_nb_channels(i64 %363), !dbg !3320
  %cmp475 = icmp sgt i32 %call474, 16, !dbg !3321
  br i1 %cmp475, label %if.then477, label %if.end479, !dbg !3322

if.then477:                                       ; preds = %for.end473
  %364 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3323
  %365 = bitcast %struct.AVCodecContext* %364 to i8*, !dbg !3323
  %366 = load i64, i64* %channel_layout449, align 8, !dbg !3325
  %call478 = call i32 @av_get_channel_layout_nb_channels(i64 %366), !dbg !3326
  call void (i8*, i32, i8*, ...) @av_log(i8* %365, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i32 %call478), !dbg !3327
  store i32 -1094995529, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

if.end479:                                        ; preds = %for.end473
  %367 = load i64, i64* %channel_layout449, align 8, !dbg !3329
  %368 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3330
  %channel_layout480 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %368, i32 0, i32 89, !dbg !3331
  store i64 %367, i64* %channel_layout480, align 8, !dbg !3332
  %369 = load i64, i64* %channel_layout449, align 8, !dbg !3333
  %call481 = call i32 @av_get_channel_layout_nb_channels(i64 %369), !dbg !3334
  %370 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3335
  %channels482 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %370, i32 0, i32 83, !dbg !3336
  store i32 %call481, i32* %channels482, align 4, !dbg !3337
  store i32 0, i32* %ch, align 4, !dbg !3338
  br label %for.cond483, !dbg !3340

for.cond483:                                      ; preds = %for.inc558, %if.end479
  %371 = load i32, i32* %ch, align 4, !dbg !3341
  %cmp484 = icmp slt i32 %371, 16, !dbg !3344
  br i1 %cmp484, label %for.body486, label %for.end560, !dbg !3345

for.body486:                                      ; preds = %for.cond483
  %372 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3346
  %channel_map487 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %372, i32 0, i32 17, !dbg !3349
  %373 = load i32, i32* %channel_map487, align 4, !dbg !3349
  %374 = load i32, i32* %ch, align 4, !dbg !3350
  %sub488 = sub nsw i32 16, %374, !dbg !3351
  %sub489 = sub nsw i32 %sub488, 1, !dbg !3352
  %shl490 = shl i32 1, %sub489, !dbg !3353
  %and491 = and i32 %373, %shl490, !dbg !3354
  %tobool492 = icmp ne i32 %and491, 0, !dbg !3354
  br i1 %tobool492, label %if.then493, label %if.end557, !dbg !3355

if.then493:                                       ; preds = %for.body486
  %375 = load i32, i32* %ch, align 4, !dbg !3356
  %idxprom494 = sext i32 %375 to i64, !dbg !3359
  %arrayidx495 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom494, !dbg !3359
  %arrayidx496 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx495, i64 0, i64 0, !dbg !3359
  %376 = load i64, i64* %arrayidx496, align 16, !dbg !3359
  %tobool497 = icmp ne i64 %376, 0, !dbg !3359
  br i1 %tobool497, label %if.then498, label %if.else519, !dbg !3360

if.then498:                                       ; preds = %if.then493
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3361, metadata !1854), !dbg !3363
  %377 = load i64, i64* %channel_layout449, align 8, !dbg !3364
  %378 = load i32, i32* %ch, align 4, !dbg !3365
  %idxprom499 = sext i32 %378 to i64, !dbg !3366
  %arrayidx500 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom499, !dbg !3366
  %arrayidx501 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx500, i64 0, i64 1, !dbg !3366
  %379 = load i64, i64* %arrayidx501, align 8, !dbg !3366
  %call502 = call i32 @av_get_channel_layout_channel_index(i64 %377, i64 %379), !dbg !3367
  store i32 %call502, i32* %index, align 4, !dbg !3363
  %380 = load i32, i32* %index, align 4, !dbg !3368
  %cmp503 = icmp slt i32 %380, 0, !dbg !3370
  br i1 %cmp503, label %if.then505, label %if.end506, !dbg !3371

if.then505:                                       ; preds = %if.then498
  store i32 -1094995529, i32* %retval, align 4, !dbg !3372
  br label %return, !dbg !3372

if.end506:                                        ; preds = %if.then498
  %381 = load i32, i32* %extend, align 4, !dbg !3373
  %382 = load i32, i32* %channel_map_size, align 4, !dbg !3375
  %cmp507 = icmp sge i32 %381, %382, !dbg !3376
  br i1 %cmp507, label %if.then509, label %if.end510, !dbg !3377

if.then509:                                       ; preds = %if.end506
  store i32 -1094995529, i32* %retval, align 4, !dbg !3378
  br label %return, !dbg !3378

if.end510:                                        ; preds = %if.end506
  %383 = load i32, i32* %offset, align 4, !dbg !3379
  %384 = load i32, i32* %extend, align 4, !dbg !3380
  %inc511 = add nsw i32 %384, 1, !dbg !3380
  store i32 %inc511, i32* %extend, align 4, !dbg !3380
  %idxprom512 = sext i32 %384 to i64, !dbg !3381
  %385 = load i8*, i8** %channel_map, align 8, !dbg !3381
  %arrayidx513 = getelementptr inbounds i8, i8* %385, i64 %idxprom512, !dbg !3381
  %386 = load i8, i8* %arrayidx513, align 1, !dbg !3381
  %conv514 = zext i8 %386 to i32, !dbg !3381
  %add515 = add nsw i32 %383, %conv514, !dbg !3382
  %conv516 = trunc i32 %add515 to i8, !dbg !3379
  %387 = load i32, i32* %index, align 4, !dbg !3383
  %idxprom517 = sext i32 %387 to i64, !dbg !3384
  %arrayidx518 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom517, !dbg !3384
  store i8 %conv516, i8* %arrayidx518, align 1, !dbg !3385
  br label %if.end556, !dbg !3386

if.else519:                                       ; preds = %if.then493
  call void @llvm.dbg.declare(metadata i32* %i520, metadata !3387, metadata !1854), !dbg !3389
  store i32 0, i32* %i520, align 4, !dbg !3390
  br label %for.cond521, !dbg !3392

for.cond521:                                      ; preds = %for.inc553, %if.else519
  %388 = load i32, i32* %i520, align 4, !dbg !3393
  %cmp522 = icmp slt i32 %388, 64, !dbg !3396
  br i1 %cmp522, label %for.body524, label %for.end555, !dbg !3397

for.body524:                                      ; preds = %for.cond521
  %389 = load i32, i32* %i520, align 4, !dbg !3398
  %sh_prom = zext i32 %389 to i64, !dbg !3401
  %shl525 = shl i64 1, %sh_prom, !dbg !3401
  %390 = load i32, i32* %ch, align 4, !dbg !3402
  %idxprom526 = sext i32 %390 to i64, !dbg !3403
  %arrayidx527 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom526, !dbg !3403
  %arrayidx528 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx527, i64 0, i64 1, !dbg !3403
  %391 = load i64, i64* %arrayidx528, align 8, !dbg !3403
  %and529 = and i64 %shl525, %391, !dbg !3404
  %tobool530 = icmp ne i64 %and529, 0, !dbg !3404
  br i1 %tobool530, label %if.then531, label %if.end552, !dbg !3405

if.then531:                                       ; preds = %for.body524
  call void @llvm.dbg.declare(metadata i32* %index532, metadata !3406, metadata !1854), !dbg !3408
  %392 = load i64, i64* %channel_layout449, align 8, !dbg !3409
  %393 = load i32, i32* %i520, align 4, !dbg !3410
  %sh_prom533 = zext i32 %393 to i64, !dbg !3411
  %shl534 = shl i64 1, %sh_prom533, !dbg !3411
  %call535 = call i32 @av_get_channel_layout_channel_index(i64 %392, i64 %shl534), !dbg !3412
  store i32 %call535, i32* %index532, align 4, !dbg !3408
  %394 = load i32, i32* %index532, align 4, !dbg !3413
  %cmp536 = icmp slt i32 %394, 0, !dbg !3415
  br i1 %cmp536, label %if.then538, label %if.end539, !dbg !3416

if.then538:                                       ; preds = %if.then531
  store i32 -1094995529, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

if.end539:                                        ; preds = %if.then531
  %395 = load i32, i32* %extend, align 4, !dbg !3418
  %396 = load i32, i32* %channel_map_size, align 4, !dbg !3420
  %cmp540 = icmp sge i32 %395, %396, !dbg !3421
  br i1 %cmp540, label %if.then542, label %if.end543, !dbg !3422

if.then542:                                       ; preds = %if.end539
  store i32 -1094995529, i32* %retval, align 4, !dbg !3423
  br label %return, !dbg !3423

if.end543:                                        ; preds = %if.end539
  %397 = load i32, i32* %offset, align 4, !dbg !3424
  %398 = load i32, i32* %extend, align 4, !dbg !3425
  %inc544 = add nsw i32 %398, 1, !dbg !3425
  store i32 %inc544, i32* %extend, align 4, !dbg !3425
  %idxprom545 = sext i32 %398 to i64, !dbg !3426
  %399 = load i8*, i8** %channel_map, align 8, !dbg !3426
  %arrayidx546 = getelementptr inbounds i8, i8* %399, i64 %idxprom545, !dbg !3426
  %400 = load i8, i8* %arrayidx546, align 1, !dbg !3426
  %conv547 = zext i8 %400 to i32, !dbg !3426
  %add548 = add nsw i32 %397, %conv547, !dbg !3427
  %conv549 = trunc i32 %add548 to i8, !dbg !3424
  %401 = load i32, i32* %index532, align 4, !dbg !3428
  %idxprom550 = sext i32 %401 to i64, !dbg !3429
  %arrayidx551 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom550, !dbg !3429
  store i8 %conv549, i8* %arrayidx551, align 1, !dbg !3430
  br label %if.end552, !dbg !3431

if.end552:                                        ; preds = %if.end543, %for.body524
  br label %for.inc553, !dbg !3432

for.inc553:                                       ; preds = %if.end552
  %402 = load i32, i32* %i520, align 4, !dbg !3433
  %inc554 = add nsw i32 %402, 1, !dbg !3433
  store i32 %inc554, i32* %i520, align 4, !dbg !3433
  br label %for.cond521, !dbg !3435, !llvm.loop !3436

for.end555:                                       ; preds = %for.cond521
  br label %if.end556

if.end556:                                        ; preds = %for.end555, %if.end510
  br label %if.end557, !dbg !3438

if.end557:                                        ; preds = %if.end556, %for.body486
  br label %for.inc558, !dbg !3439

for.inc558:                                       ; preds = %if.end557
  %403 = load i32, i32* %ch, align 4, !dbg !3440
  %inc559 = add nsw i32 %403, 1, !dbg !3440
  store i32 %inc559, i32* %ch, align 4, !dbg !3440
  br label %for.cond483, !dbg !3442, !llvm.loop !3443

for.end560:                                       ; preds = %for.cond483
  br label %if.end561, !dbg !3445

if.end561:                                        ; preds = %for.end560, %for.end432
  %404 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3446
  %num_blocks562 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %404, i32 0, i32 9, !dbg !3447
  %405 = load i32, i32* %num_blocks562, align 8, !dbg !3447
  %mul563 = mul nsw i32 %405, 256, !dbg !3448
  %406 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3449
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %406, i32 0, i32 5, !dbg !3450
  store i32 %mul563, i32* %nb_samples, align 8, !dbg !3451
  %407 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3452
  %408 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3454
  %call564 = call i32 @ff_get_buffer(%struct.AVCodecContext* %407, %struct.AVFrame* %408, i32 0), !dbg !3455
  store i32 %call564, i32* %ret, align 4, !dbg !3456
  %cmp565 = icmp slt i32 %call564, 0, !dbg !3457
  br i1 %cmp565, label %if.then567, label %if.end568, !dbg !3458

if.then567:                                       ; preds = %if.end561
  %409 = load i32, i32* %ret, align 4, !dbg !3459
  store i32 %409, i32* %retval, align 4, !dbg !3460
  br label %return, !dbg !3460

if.end568:                                        ; preds = %if.end561
  store i32 0, i32* %ch, align 4, !dbg !3461
  br label %for.cond569, !dbg !3463

for.cond569:                                      ; preds = %for.inc600, %if.end568
  %410 = load i32, i32* %ch, align 4, !dbg !3464
  %411 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3467
  %channels570 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %411, i32 0, i32 83, !dbg !3468
  %412 = load i32, i32* %channels570, align 4, !dbg !3468
  %cmp571 = icmp slt i32 %410, %412, !dbg !3469
  br i1 %cmp571, label %for.body573, label %for.end602, !dbg !3470

for.body573:                                      ; preds = %for.cond569
  call void @llvm.dbg.declare(metadata i32* %map, metadata !3471, metadata !1854), !dbg !3473
  %413 = load i32, i32* %ch, align 4, !dbg !3474
  %idxprom574 = sext i32 %413 to i64, !dbg !3475
  %arrayidx575 = getelementptr inbounds [16 x i8], [16 x i8]* %extended_channel_map, i64 0, i64 %idxprom574, !dbg !3475
  %414 = load i8, i8* %arrayidx575, align 1, !dbg !3475
  %conv576 = zext i8 %414 to i32, !dbg !3475
  store i32 %conv576, i32* %map, align 4, !dbg !3473
  br label %do.body, !dbg !3476, !llvm.loop !3477

do.body:                                          ; preds = %for.body573
  %415 = load i32, i32* %ch, align 4, !dbg !3478
  %cmp577 = icmp sge i32 %415, 8, !dbg !3482
  br i1 %cmp577, label %if.end588, label %lor.lhs.false579, !dbg !3483

lor.lhs.false579:                                 ; preds = %do.body
  %416 = load i32, i32* %ch, align 4, !dbg !3484
  %idxprom580 = sext i32 %416 to i64, !dbg !3486
  %417 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3486
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %417, i32 0, i32 2, !dbg !3487
  %418 = load i8**, i8*** %extended_data, align 8, !dbg !3487
  %arrayidx581 = getelementptr inbounds i8*, i8** %418, i64 %idxprom580, !dbg !3486
  %419 = load i8*, i8** %arrayidx581, align 8, !dbg !3486
  %420 = load i32, i32* %ch, align 4, !dbg !3488
  %idxprom582 = sext i32 %420 to i64, !dbg !3489
  %421 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3489
  %data583 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %421, i32 0, i32 0, !dbg !3490
  %arrayidx584 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data583, i64 0, i64 %idxprom582, !dbg !3489
  %422 = load i8*, i8** %arrayidx584, align 8, !dbg !3489
  %cmp585 = icmp eq i8* %419, %422, !dbg !3491
  br i1 %cmp585, label %if.end588, label %if.then587, !dbg !3492

if.then587:                                       ; preds = %lor.lhs.false579
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i32 0, i32 0), i32 1758), !dbg !3493
  call void @abort() #10, !dbg !3496
  unreachable, !dbg !3498

if.end588:                                        ; preds = %lor.lhs.false579, %do.body
  br label %do.end, !dbg !3499

do.end:                                           ; preds = %if.end588
  %423 = load i32, i32* %ch, align 4, !dbg !3501
  %idxprom589 = sext i32 %423 to i64, !dbg !3502
  %424 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3502
  %extended_data590 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %424, i32 0, i32 2, !dbg !3503
  %425 = load i8**, i8*** %extended_data590, align 8, !dbg !3503
  %arrayidx591 = getelementptr inbounds i8*, i8** %425, i64 %idxprom589, !dbg !3502
  %426 = load i8*, i8** %arrayidx591, align 8, !dbg !3502
  %427 = bitcast i8* %426 to float*, !dbg !3504
  %428 = bitcast float* %427 to i8*, !dbg !3504
  %429 = load i32, i32* %map, align 4, !dbg !3505
  %idxprom592 = sext i32 %429 to i64, !dbg !3506
  %430 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3506
  %output_buffer593 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %430, i32 0, i32 125, !dbg !3507
  %arrayidx594 = getelementptr inbounds [16 x [1536 x float]], [16 x [1536 x float]]* %output_buffer593, i64 0, i64 %idxprom592, !dbg !3506
  %arraydecay595 = getelementptr inbounds [1536 x float], [1536 x float]* %arrayidx594, i32 0, i32 0, !dbg !3504
  %431 = bitcast float* %arraydecay595 to i8*, !dbg !3504
  %432 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3508
  %num_blocks596 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %432, i32 0, i32 9, !dbg !3509
  %433 = load i32, i32* %num_blocks596, align 8, !dbg !3509
  %mul597 = mul nsw i32 %433, 256, !dbg !3510
  %conv598 = sext i32 %mul597 to i64, !dbg !3508
  %mul599 = mul i64 %conv598, 4, !dbg !3511
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %431, i64 %mul599, i32 4, i1 false), !dbg !3504
  br label %for.inc600, !dbg !3512

for.inc600:                                       ; preds = %do.end
  %434 = load i32, i32* %ch, align 4, !dbg !3513
  %inc601 = add nsw i32 %434, 1, !dbg !3513
  store i32 %inc601, i32* %ch, align 4, !dbg !3513
  br label %for.cond569, !dbg !3515, !llvm.loop !3516

for.end602:                                       ; preds = %for.cond569
  store i32 0, i32* %matrix_encoding, align 4, !dbg !3518
  %435 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3519
  %channel_mode603 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %435, i32 0, i32 12, !dbg !3521
  %436 = load i32, i32* %channel_mode603, align 4, !dbg !3521
  %cmp604 = icmp eq i32 %436, 2, !dbg !3522
  br i1 %cmp604, label %land.lhs.true606, label %if.else622, !dbg !3523

land.lhs.true606:                                 ; preds = %for.end602
  %437 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3524
  %channel_mode607 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %437, i32 0, i32 12, !dbg !3525
  %438 = load i32, i32* %channel_mode607, align 4, !dbg !3525
  %439 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3526
  %output_mode608 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %439, i32 0, i32 75, !dbg !3527
  %440 = load i32, i32* %output_mode608, align 4, !dbg !3527
  %and609 = and i32 %440, -9, !dbg !3528
  %cmp610 = icmp eq i32 %438, %and609, !dbg !3529
  br i1 %cmp610, label %if.then612, label %if.else622, !dbg !3530

if.then612:                                       ; preds = %land.lhs.true606
  %441 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3532
  %dolby_surround_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %441, i32 0, i32 28, !dbg !3535
  %442 = load i32, i32* %dolby_surround_mode, align 32, !dbg !3535
  %cmp613 = icmp eq i32 %442, 2, !dbg !3536
  br i1 %cmp613, label %if.then615, label %if.else616, !dbg !3537

if.then615:                                       ; preds = %if.then612
  store i32 1, i32* %matrix_encoding, align 4, !dbg !3538
  br label %if.end621, !dbg !3539

if.else616:                                       ; preds = %if.then612
  %443 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3540
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %443, i32 0, i32 30, !dbg !3542
  %444 = load i32, i32* %dolby_headphone_mode, align 8, !dbg !3542
  %cmp617 = icmp eq i32 %444, 2, !dbg !3543
  br i1 %cmp617, label %if.then619, label %if.end620, !dbg !3544

if.then619:                                       ; preds = %if.else616
  store i32 6, i32* %matrix_encoding, align 4, !dbg !3545
  br label %if.end620, !dbg !3546

if.end620:                                        ; preds = %if.then619, %if.else616
  br label %if.end621

if.end621:                                        ; preds = %if.end620, %if.then615
  br label %if.end638, !dbg !3547

if.else622:                                       ; preds = %land.lhs.true606, %for.end602
  %445 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3548
  %channel_mode623 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %445, i32 0, i32 12, !dbg !3551
  %446 = load i32, i32* %channel_mode623, align 4, !dbg !3551
  %cmp624 = icmp sge i32 %446, 6, !dbg !3552
  br i1 %cmp624, label %land.lhs.true626, label %if.end637, !dbg !3553

land.lhs.true626:                                 ; preds = %if.else622
  %447 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3554
  %channel_mode627 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %447, i32 0, i32 12, !dbg !3555
  %448 = load i32, i32* %channel_mode627, align 4, !dbg !3555
  %449 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3556
  %output_mode628 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %449, i32 0, i32 75, !dbg !3557
  %450 = load i32, i32* %output_mode628, align 4, !dbg !3557
  %and629 = and i32 %450, -9, !dbg !3558
  %cmp630 = icmp eq i32 %448, %and629, !dbg !3559
  br i1 %cmp630, label %if.then632, label %if.end637, !dbg !3560

if.then632:                                       ; preds = %land.lhs.true626
  %451 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3562
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %451, i32 0, i32 29, !dbg !3564
  %452 = load i32, i32* %dolby_surround_ex_mode, align 4, !dbg !3564
  switch i32 %452, label %sw.default635 [
    i32 2, label %sw.bb633
    i32 3, label %sw.bb634
  ], !dbg !3565

sw.bb633:                                         ; preds = %if.then632
  store i32 5, i32* %matrix_encoding, align 4, !dbg !3566
  br label %sw.epilog636, !dbg !3568

sw.bb634:                                         ; preds = %if.then632
  store i32 4, i32* %matrix_encoding, align 4, !dbg !3569
  br label %sw.epilog636, !dbg !3570

sw.default635:                                    ; preds = %if.then632
  br label %sw.epilog636, !dbg !3571

sw.epilog636:                                     ; preds = %sw.default635, %sw.bb634, %sw.bb633
  br label %if.end637, !dbg !3572

if.end637:                                        ; preds = %sw.epilog636, %land.lhs.true626, %if.else622
  br label %if.end638

if.end638:                                        ; preds = %if.end637, %if.end621
  %453 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3573
  %454 = load i32, i32* %matrix_encoding, align 4, !dbg !3575
  %call639 = call i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame* %453, i32 %454), !dbg !3576
  store i32 %call639, i32* %ret, align 4, !dbg !3577
  %cmp640 = icmp slt i32 %call639, 0, !dbg !3578
  br i1 %cmp640, label %if.then642, label %if.end643, !dbg !3579

if.then642:                                       ; preds = %if.end638
  %455 = load i32, i32* %ret, align 4, !dbg !3580
  store i32 %455, i32* %retval, align 4, !dbg !3581
  br label %return, !dbg !3581

if.end643:                                        ; preds = %if.end638
  %456 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3582
  %call644 = call %struct.AVDownmixInfo* @av_downmix_info_update_side_data(%struct.AVFrame* %456), !dbg !3584
  store %struct.AVDownmixInfo* %call644, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3585
  %tobool645 = icmp ne %struct.AVDownmixInfo* %call644, null, !dbg !3585
  br i1 %tobool645, label %if.then646, label %if.else682, !dbg !3586

if.then646:                                       ; preds = %if.end643
  %457 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3587
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %457, i32 0, i32 18, !dbg !3589
  %458 = load i32, i32* %preferred_downmix, align 8, !dbg !3589
  switch i32 %458, label %sw.default652 [
    i32 1, label %sw.bb647
    i32 2, label %sw.bb648
    i32 3, label %sw.bb650
  ], !dbg !3590

sw.bb647:                                         ; preds = %if.then646
  %459 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3591
  %preferred_downmix_type = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %459, i32 0, i32 0, !dbg !3593
  store i32 2, i32* %preferred_downmix_type, align 8, !dbg !3594
  br label %sw.epilog654, !dbg !3595

sw.bb648:                                         ; preds = %if.then646
  %460 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3596
  %preferred_downmix_type649 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %460, i32 0, i32 0, !dbg !3597
  store i32 1, i32* %preferred_downmix_type649, align 8, !dbg !3598
  br label %sw.epilog654, !dbg !3599

sw.bb650:                                         ; preds = %if.then646
  %461 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3600
  %preferred_downmix_type651 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %461, i32 0, i32 0, !dbg !3601
  store i32 3, i32* %preferred_downmix_type651, align 8, !dbg !3602
  br label %sw.epilog654, !dbg !3603

sw.default652:                                    ; preds = %if.then646
  %462 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3604
  %preferred_downmix_type653 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %462, i32 0, i32 0, !dbg !3605
  store i32 0, i32* %preferred_downmix_type653, align 8, !dbg !3606
  br label %sw.epilog654, !dbg !3607

sw.epilog654:                                     ; preds = %sw.default652, %sw.bb650, %sw.bb648, %sw.bb647
  %463 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3608
  %center_mix_level655 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %463, i32 0, i32 19, !dbg !3609
  %464 = load i32, i32* %center_mix_level655, align 4, !dbg !3609
  %idxprom656 = sext i32 %464 to i64, !dbg !3610
  %arrayidx657 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom656, !dbg !3610
  %465 = load float, float* %arrayidx657, align 4, !dbg !3610
  %conv658 = fpext float %465 to double, !dbg !3610
  %466 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3611
  %center_mix_level659 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %466, i32 0, i32 1, !dbg !3612
  store double %conv658, double* %center_mix_level659, align 8, !dbg !3613
  %467 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3614
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %467, i32 0, i32 20, !dbg !3615
  %468 = load i32, i32* %center_mix_level_ltrt, align 32, !dbg !3615
  %idxprom660 = sext i32 %468 to i64, !dbg !3616
  %arrayidx661 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom660, !dbg !3616
  %469 = load float, float* %arrayidx661, align 4, !dbg !3616
  %conv662 = fpext float %469 to double, !dbg !3616
  %470 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3617
  %center_mix_level_ltrt663 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %470, i32 0, i32 2, !dbg !3618
  store double %conv662, double* %center_mix_level_ltrt663, align 8, !dbg !3619
  %471 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3620
  %surround_mix_level664 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %471, i32 0, i32 21, !dbg !3621
  %472 = load i32, i32* %surround_mix_level664, align 4, !dbg !3621
  %idxprom665 = sext i32 %472 to i64, !dbg !3622
  %arrayidx666 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom665, !dbg !3622
  %473 = load float, float* %arrayidx666, align 4, !dbg !3622
  %conv667 = fpext float %473 to double, !dbg !3622
  %474 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3623
  %surround_mix_level668 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %474, i32 0, i32 3, !dbg !3624
  store double %conv667, double* %surround_mix_level668, align 8, !dbg !3625
  %475 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3626
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %475, i32 0, i32 22, !dbg !3627
  %476 = load i32, i32* %surround_mix_level_ltrt, align 8, !dbg !3627
  %idxprom669 = sext i32 %476 to i64, !dbg !3628
  %arrayidx670 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom669, !dbg !3628
  %477 = load float, float* %arrayidx670, align 4, !dbg !3628
  %conv671 = fpext float %477 to double, !dbg !3628
  %478 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3629
  %surround_mix_level_ltrt672 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %478, i32 0, i32 4, !dbg !3630
  store double %conv671, double* %surround_mix_level_ltrt672, align 8, !dbg !3631
  %479 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3632
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %479, i32 0, i32 23, !dbg !3634
  %480 = load i32, i32* %lfe_mix_level_exists, align 4, !dbg !3634
  %tobool673 = icmp ne i32 %480, 0, !dbg !3632
  br i1 %tobool673, label %if.then674, label %if.else679, !dbg !3635

if.then674:                                       ; preds = %sw.epilog654
  %481 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3636
  %lfe_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %481, i32 0, i32 24, !dbg !3637
  %482 = load i32, i32* %lfe_mix_level, align 16, !dbg !3637
  %idxprom675 = sext i32 %482 to i64, !dbg !3638
  %arrayidx676 = getelementptr inbounds [32 x float], [32 x float]* @gain_levels_lfe, i64 0, i64 %idxprom675, !dbg !3638
  %483 = load float, float* %arrayidx676, align 4, !dbg !3638
  %conv677 = fpext float %483 to double, !dbg !3638
  %484 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3639
  %lfe_mix_level678 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %484, i32 0, i32 5, !dbg !3640
  store double %conv677, double* %lfe_mix_level678, align 8, !dbg !3641
  br label %if.end681, !dbg !3639

if.else679:                                       ; preds = %sw.epilog654
  %485 = load %struct.AVDownmixInfo*, %struct.AVDownmixInfo** %downmix_info, align 8, !dbg !3642
  %lfe_mix_level680 = getelementptr inbounds %struct.AVDownmixInfo, %struct.AVDownmixInfo* %485, i32 0, i32 5, !dbg !3643
  store double 0.000000e+00, double* %lfe_mix_level680, align 8, !dbg !3644
  br label %if.end681

if.end681:                                        ; preds = %if.else679, %if.then674
  br label %if.end683, !dbg !3645

if.else682:                                       ; preds = %if.end643
  store i32 -12, i32* %retval, align 4, !dbg !3646
  br label %return, !dbg !3646

if.end683:                                        ; preds = %if.end681
  %486 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3647
  store i32 1, i32* %486, align 4, !dbg !3648
  %487 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3649
  %superframe_size684 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %487, i32 0, i32 5, !dbg !3651
  %488 = load i32, i32* %superframe_size684, align 8, !dbg !3651
  %tobool685 = icmp ne i32 %488, 0, !dbg !3649
  br i1 %tobool685, label %if.end697, label %if.then686, !dbg !3652

if.then686:                                       ; preds = %if.end683
  %489 = load i32, i32* %full_buf_size, align 4, !dbg !3653
  %490 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3654
  %frame_size687 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %490, i32 0, i32 6, !dbg !3655
  %491 = load i32, i32* %frame_size687, align 4, !dbg !3655
  %492 = load i32, i32* %skip, align 4, !dbg !3656
  %add688 = add nsw i32 %491, %492, !dbg !3657
  %cmp689 = icmp sgt i32 %489, %add688, !dbg !3658
  br i1 %cmp689, label %cond.true691, label %cond.false694, !dbg !3659

cond.true691:                                     ; preds = %if.then686
  %493 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3660
  %frame_size692 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %493, i32 0, i32 6, !dbg !3662
  %494 = load i32, i32* %frame_size692, align 4, !dbg !3662
  %495 = load i32, i32* %skip, align 4, !dbg !3663
  %add693 = add nsw i32 %494, %495, !dbg !3664
  br label %cond.end695, !dbg !3665

cond.false694:                                    ; preds = %if.then686
  %496 = load i32, i32* %full_buf_size, align 4, !dbg !3666
  br label %cond.end695, !dbg !3668

cond.end695:                                      ; preds = %cond.false694, %cond.true691
  %cond696 = phi i32 [ %add693, %cond.true691 ], [ %496, %cond.false694 ], !dbg !3669
  store i32 %cond696, i32* %retval, align 4, !dbg !3671
  br label %return, !dbg !3671

if.end697:                                        ; preds = %if.end683
  %497 = load i32, i32* %full_buf_size, align 4, !dbg !3672
  %498 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3673
  %superframe_size698 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %498, i32 0, i32 5, !dbg !3674
  %499 = load i32, i32* %superframe_size698, align 8, !dbg !3674
  %500 = load i32, i32* %skip, align 4, !dbg !3675
  %add699 = add nsw i32 %499, %500, !dbg !3676
  %cmp700 = icmp sgt i32 %497, %add699, !dbg !3677
  br i1 %cmp700, label %cond.true702, label %cond.false705, !dbg !3678

cond.true702:                                     ; preds = %if.end697
  %501 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3679
  %superframe_size703 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %501, i32 0, i32 5, !dbg !3680
  %502 = load i32, i32* %superframe_size703, align 8, !dbg !3680
  %503 = load i32, i32* %skip, align 4, !dbg !3681
  %add704 = add nsw i32 %502, %503, !dbg !3682
  br label %cond.end706, !dbg !3683

cond.false705:                                    ; preds = %if.end697
  %504 = load i32, i32* %full_buf_size, align 4, !dbg !3684
  br label %cond.end706, !dbg !3686

cond.end706:                                      ; preds = %cond.false705, %cond.true702
  %cond707 = phi i32 [ %add704, %cond.true702 ], [ %504, %cond.false705 ], !dbg !3687
  store i32 %cond707, i32* %retval, align 4, !dbg !3689
  br label %return, !dbg !3689

return:                                           ; preds = %cond.end706, %cond.end695, %if.else682, %if.then642, %if.then567, %if.then542, %if.then538, %if.then509, %if.then505, %if.then477, %if.then383, %if.then378, %if.then190, %if.then184, %cond.end125, %if.then108, %sw.default, %if.then85, %sw.bb, %if.then75, %if.then37, %if.then33
  %505 = load i32, i32* %retval, align 4, !dbg !3690
  ret i32 %505, !dbg !3690
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ac3_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3691 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AC3DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3692, metadata !1854), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s, metadata !3694, metadata !1854), !dbg !3695
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3696
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3697
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3697
  %2 = bitcast i8* %1 to %struct.AC3DecodeContext*, !dbg !3696
  store %struct.AC3DecodeContext* %2, %struct.AC3DecodeContext** %s, align 8, !dbg !3695
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3698
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 107, !dbg !3699
  call void @ff_mdct_end(%struct.FFTContext* %imdct_512), !dbg !3700
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3701
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 108, !dbg !3702
  call void @ff_mdct_end(%struct.FFTContext* %imdct_256), !dbg !3703
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3704
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 110, !dbg !3705
  %6 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !3706
  call void @av_freep(i8* %6), !dbg !3707
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s, align 8, !dbg !3708
  %downmix_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 73, !dbg !3709
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs, i64 0, i64 0, !dbg !3708
  %8 = bitcast float** %arrayidx to i8*, !dbg !3710
  call void @av_freep(i8* %8), !dbg !3711
  ret i32 0, !dbg !3712
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @ac3_tables_init() #0 !dbg !3713 {
entry:
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %v122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3716, metadata !1854), !dbg !3717
  store i32 0, i32* %i, align 4, !dbg !3718
  br label %for.cond, !dbg !3720

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3721
  %cmp = icmp slt i32 %0, 128, !dbg !3724
  br i1 %cmp, label %for.body, label %for.end, !dbg !3725

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3726
  %div = sdiv i32 %1, 25, !dbg !3728
  %conv = trunc i32 %div to i8, !dbg !3726
  %2 = load i32, i32* %i, align 4, !dbg !3729
  %idxprom = sext i32 %2 to i64, !dbg !3730
  %arrayidx = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom, !dbg !3730
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !3730
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !3731
  %3 = load i32, i32* %i, align 4, !dbg !3732
  %rem = srem i32 %3, 25, !dbg !3733
  %div2 = sdiv i32 %rem, 5, !dbg !3734
  %conv3 = trunc i32 %div2 to i8, !dbg !3735
  %4 = load i32, i32* %i, align 4, !dbg !3736
  %idxprom4 = sext i32 %4 to i64, !dbg !3737
  %arrayidx5 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom4, !dbg !3737
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx5, i64 0, i64 1, !dbg !3737
  store i8 %conv3, i8* %arrayidx6, align 1, !dbg !3738
  %5 = load i32, i32* %i, align 4, !dbg !3739
  %rem7 = srem i32 %5, 25, !dbg !3740
  %rem8 = srem i32 %rem7, 5, !dbg !3741
  %conv9 = trunc i32 %rem8 to i8, !dbg !3742
  %6 = load i32, i32* %i, align 4, !dbg !3743
  %idxprom10 = sext i32 %6 to i64, !dbg !3744
  %arrayidx11 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom10, !dbg !3744
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx11, i64 0, i64 2, !dbg !3744
  store i8 %conv9, i8* %arrayidx12, align 1, !dbg !3745
  br label %for.inc, !dbg !3746

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !3747
  %inc = add nsw i32 %7, 1, !dbg !3747
  store i32 %inc, i32* %i, align 4, !dbg !3747
  br label %for.cond, !dbg !3749, !llvm.loop !3750

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3752
  br label %for.cond13, !dbg !3754

for.cond13:                                       ; preds = %for.inc40, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !3755
  %cmp14 = icmp slt i32 %8, 32, !dbg !3758
  br i1 %cmp14, label %for.body16, label %for.end42, !dbg !3759

for.body16:                                       ; preds = %for.cond13
  %9 = load i32, i32* %i, align 4, !dbg !3760
  %idxprom17 = sext i32 %9 to i64, !dbg !3762
  %arrayidx18 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom17, !dbg !3762
  %arrayidx19 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx18, i64 0, i64 0, !dbg !3762
  %10 = load i8, i8* %arrayidx19, align 1, !dbg !3762
  %conv20 = zext i8 %10 to i32, !dbg !3762
  %call = call i32 @symmetric_dequant(i32 %conv20, i32 3), !dbg !3763
  %11 = load i32, i32* %i, align 4, !dbg !3764
  %idxprom21 = sext i32 %11 to i64, !dbg !3765
  %arrayidx22 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom21, !dbg !3765
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx22, i64 0, i64 0, !dbg !3765
  store i32 %call, i32* %arrayidx23, align 4, !dbg !3766
  %12 = load i32, i32* %i, align 4, !dbg !3767
  %idxprom24 = sext i32 %12 to i64, !dbg !3768
  %arrayidx25 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom24, !dbg !3768
  %arrayidx26 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx25, i64 0, i64 1, !dbg !3768
  %13 = load i8, i8* %arrayidx26, align 1, !dbg !3768
  %conv27 = zext i8 %13 to i32, !dbg !3768
  %call28 = call i32 @symmetric_dequant(i32 %conv27, i32 3), !dbg !3769
  %14 = load i32, i32* %i, align 4, !dbg !3770
  %idxprom29 = sext i32 %14 to i64, !dbg !3771
  %arrayidx30 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom29, !dbg !3771
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx30, i64 0, i64 1, !dbg !3771
  store i32 %call28, i32* %arrayidx31, align 4, !dbg !3772
  %15 = load i32, i32* %i, align 4, !dbg !3773
  %idxprom32 = sext i32 %15 to i64, !dbg !3774
  %arrayidx33 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom32, !dbg !3774
  %arrayidx34 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx33, i64 0, i64 2, !dbg !3774
  %16 = load i8, i8* %arrayidx34, align 1, !dbg !3774
  %conv35 = zext i8 %16 to i32, !dbg !3774
  %call36 = call i32 @symmetric_dequant(i32 %conv35, i32 3), !dbg !3775
  %17 = load i32, i32* %i, align 4, !dbg !3776
  %idxprom37 = sext i32 %17 to i64, !dbg !3777
  %arrayidx38 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom37, !dbg !3777
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx38, i64 0, i64 2, !dbg !3777
  store i32 %call36, i32* %arrayidx39, align 4, !dbg !3778
  br label %for.inc40, !dbg !3779

for.inc40:                                        ; preds = %for.body16
  %18 = load i32, i32* %i, align 4, !dbg !3780
  %inc41 = add nsw i32 %18, 1, !dbg !3780
  store i32 %inc41, i32* %i, align 4, !dbg !3780
  br label %for.cond13, !dbg !3782, !llvm.loop !3783

for.end42:                                        ; preds = %for.cond13
  store i32 0, i32* %i, align 4, !dbg !3785
  br label %for.cond43, !dbg !3787

for.cond43:                                       ; preds = %for.inc81, %for.end42
  %19 = load i32, i32* %i, align 4, !dbg !3788
  %cmp44 = icmp slt i32 %19, 128, !dbg !3791
  br i1 %cmp44, label %for.body46, label %for.end83, !dbg !3792

for.body46:                                       ; preds = %for.cond43
  %20 = load i32, i32* %i, align 4, !dbg !3793
  %idxprom47 = sext i32 %20 to i64, !dbg !3795
  %arrayidx48 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom47, !dbg !3795
  %arrayidx49 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx48, i64 0, i64 0, !dbg !3795
  %21 = load i8, i8* %arrayidx49, align 1, !dbg !3795
  %conv50 = zext i8 %21 to i32, !dbg !3795
  %call51 = call i32 @symmetric_dequant(i32 %conv50, i32 5), !dbg !3796
  %22 = load i32, i32* %i, align 4, !dbg !3797
  %idxprom52 = sext i32 %22 to i64, !dbg !3798
  %arrayidx53 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom52, !dbg !3798
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx53, i64 0, i64 0, !dbg !3798
  store i32 %call51, i32* %arrayidx54, align 4, !dbg !3799
  %23 = load i32, i32* %i, align 4, !dbg !3800
  %idxprom55 = sext i32 %23 to i64, !dbg !3801
  %arrayidx56 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom55, !dbg !3801
  %arrayidx57 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx56, i64 0, i64 1, !dbg !3801
  %24 = load i8, i8* %arrayidx57, align 1, !dbg !3801
  %conv58 = zext i8 %24 to i32, !dbg !3801
  %call59 = call i32 @symmetric_dequant(i32 %conv58, i32 5), !dbg !3802
  %25 = load i32, i32* %i, align 4, !dbg !3803
  %idxprom60 = sext i32 %25 to i64, !dbg !3804
  %arrayidx61 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom60, !dbg !3804
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx61, i64 0, i64 1, !dbg !3804
  store i32 %call59, i32* %arrayidx62, align 4, !dbg !3805
  %26 = load i32, i32* %i, align 4, !dbg !3806
  %idxprom63 = sext i32 %26 to i64, !dbg !3807
  %arrayidx64 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom63, !dbg !3807
  %arrayidx65 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx64, i64 0, i64 2, !dbg !3807
  %27 = load i8, i8* %arrayidx65, align 1, !dbg !3807
  %conv66 = zext i8 %27 to i32, !dbg !3807
  %call67 = call i32 @symmetric_dequant(i32 %conv66, i32 5), !dbg !3808
  %28 = load i32, i32* %i, align 4, !dbg !3809
  %idxprom68 = sext i32 %28 to i64, !dbg !3810
  %arrayidx69 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom68, !dbg !3810
  %arrayidx70 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx69, i64 0, i64 2, !dbg !3810
  store i32 %call67, i32* %arrayidx70, align 4, !dbg !3811
  %29 = load i32, i32* %i, align 4, !dbg !3812
  %div71 = sdiv i32 %29, 11, !dbg !3813
  %call72 = call i32 @symmetric_dequant(i32 %div71, i32 11), !dbg !3814
  %30 = load i32, i32* %i, align 4, !dbg !3815
  %idxprom73 = sext i32 %30 to i64, !dbg !3816
  %arrayidx74 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom73, !dbg !3816
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx74, i64 0, i64 0, !dbg !3816
  store i32 %call72, i32* %arrayidx75, align 8, !dbg !3817
  %31 = load i32, i32* %i, align 4, !dbg !3818
  %rem76 = srem i32 %31, 11, !dbg !3819
  %call77 = call i32 @symmetric_dequant(i32 %rem76, i32 11), !dbg !3820
  %32 = load i32, i32* %i, align 4, !dbg !3821
  %idxprom78 = sext i32 %32 to i64, !dbg !3822
  %arrayidx79 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom78, !dbg !3822
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx79, i64 0, i64 1, !dbg !3822
  store i32 %call77, i32* %arrayidx80, align 4, !dbg !3823
  br label %for.inc81, !dbg !3824

for.inc81:                                        ; preds = %for.body46
  %33 = load i32, i32* %i, align 4, !dbg !3825
  %inc82 = add nsw i32 %33, 1, !dbg !3825
  store i32 %inc82, i32* %i, align 4, !dbg !3825
  br label %for.cond43, !dbg !3827, !llvm.loop !3828

for.end83:                                        ; preds = %for.cond43
  store i32 0, i32* %i, align 4, !dbg !3830
  br label %for.cond84, !dbg !3832

for.cond84:                                       ; preds = %for.inc91, %for.end83
  %34 = load i32, i32* %i, align 4, !dbg !3833
  %cmp85 = icmp slt i32 %34, 7, !dbg !3836
  br i1 %cmp85, label %for.body87, label %for.end93, !dbg !3837

for.body87:                                       ; preds = %for.cond84
  %35 = load i32, i32* %i, align 4, !dbg !3838
  %call88 = call i32 @symmetric_dequant(i32 %35, i32 7), !dbg !3840
  %36 = load i32, i32* %i, align 4, !dbg !3841
  %idxprom89 = sext i32 %36 to i64, !dbg !3842
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* @b3_mantissas, i64 0, i64 %idxprom89, !dbg !3842
  store i32 %call88, i32* %arrayidx90, align 4, !dbg !3843
  br label %for.inc91, !dbg !3844

for.inc91:                                        ; preds = %for.body87
  %37 = load i32, i32* %i, align 4, !dbg !3845
  %inc92 = add nsw i32 %37, 1, !dbg !3845
  store i32 %inc92, i32* %i, align 4, !dbg !3845
  br label %for.cond84, !dbg !3847, !llvm.loop !3848

for.end93:                                        ; preds = %for.cond84
  store i32 0, i32* %i, align 4, !dbg !3850
  br label %for.cond94, !dbg !3852

for.cond94:                                       ; preds = %for.inc101, %for.end93
  %38 = load i32, i32* %i, align 4, !dbg !3853
  %cmp95 = icmp slt i32 %38, 15, !dbg !3856
  br i1 %cmp95, label %for.body97, label %for.end103, !dbg !3857

for.body97:                                       ; preds = %for.cond94
  %39 = load i32, i32* %i, align 4, !dbg !3858
  %call98 = call i32 @symmetric_dequant(i32 %39, i32 15), !dbg !3860
  %40 = load i32, i32* %i, align 4, !dbg !3861
  %idxprom99 = sext i32 %40 to i64, !dbg !3862
  %arrayidx100 = getelementptr inbounds [16 x i32], [16 x i32]* @b5_mantissas, i64 0, i64 %idxprom99, !dbg !3862
  store i32 %call98, i32* %arrayidx100, align 4, !dbg !3863
  br label %for.inc101, !dbg !3864

for.inc101:                                       ; preds = %for.body97
  %41 = load i32, i32* %i, align 4, !dbg !3865
  %inc102 = add nsw i32 %41, 1, !dbg !3865
  store i32 %inc102, i32* %i, align 4, !dbg !3865
  br label %for.cond94, !dbg !3867, !llvm.loop !3868

for.end103:                                       ; preds = %for.cond94
  store i32 0, i32* %i, align 4, !dbg !3870
  br label %for.cond104, !dbg !3872

for.cond104:                                      ; preds = %for.inc115, %for.end103
  %42 = load i32, i32* %i, align 4, !dbg !3873
  %cmp105 = icmp slt i32 %42, 256, !dbg !3876
  br i1 %cmp105, label %for.body107, label %for.end117, !dbg !3877

for.body107:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3878, metadata !1854), !dbg !3880
  %43 = load i32, i32* %i, align 4, !dbg !3881
  %shr = ashr i32 %43, 5, !dbg !3882
  %44 = load i32, i32* %i, align 4, !dbg !3883
  %shr108 = ashr i32 %44, 7, !dbg !3884
  %shl = shl i32 %shr108, 3, !dbg !3885
  %sub = sub nsw i32 %shr, %shl, !dbg !3886
  %sub109 = sub nsw i32 %sub, 5, !dbg !3887
  store i32 %sub109, i32* %v, align 4, !dbg !3880
  %45 = load i32, i32* %v, align 4, !dbg !3888
  %conv110 = sitofp i32 %45 to float, !dbg !3888
  %call111 = call float @powf(float 2.000000e+00, float %conv110) #11, !dbg !3889
  %46 = load i32, i32* %i, align 4, !dbg !3890
  %and = and i32 %46, 31, !dbg !3891
  %or = or i32 %and, 32, !dbg !3892
  %conv112 = sitofp i32 %or to float, !dbg !3893
  %mul = fmul float %call111, %conv112, !dbg !3894
  %47 = load i32, i32* %i, align 4, !dbg !3895
  %idxprom113 = sext i32 %47 to i64, !dbg !3896
  %arrayidx114 = getelementptr inbounds [256 x float], [256 x float]* @dynamic_range_tab, i64 0, i64 %idxprom113, !dbg !3896
  store float %mul, float* %arrayidx114, align 4, !dbg !3897
  br label %for.inc115, !dbg !3898

for.inc115:                                       ; preds = %for.body107
  %48 = load i32, i32* %i, align 4, !dbg !3899
  %inc116 = add nsw i32 %48, 1, !dbg !3899
  store i32 %inc116, i32* %i, align 4, !dbg !3899
  br label %for.cond104, !dbg !3901, !llvm.loop !3902

for.end117:                                       ; preds = %for.cond104
  store i32 0, i32* %i, align 4, !dbg !3904
  br label %for.cond118, !dbg !3906

for.cond118:                                      ; preds = %for.inc136, %for.end117
  %49 = load i32, i32* %i, align 4, !dbg !3907
  %cmp119 = icmp slt i32 %49, 256, !dbg !3910
  br i1 %cmp119, label %for.body121, label %for.end138, !dbg !3911

for.body121:                                      ; preds = %for.cond118
  call void @llvm.dbg.declare(metadata i32* %v122, metadata !3912, metadata !1854), !dbg !3914
  %50 = load i32, i32* %i, align 4, !dbg !3915
  %shr123 = ashr i32 %50, 4, !dbg !3916
  %51 = load i32, i32* %i, align 4, !dbg !3917
  %shr124 = ashr i32 %51, 7, !dbg !3918
  %shl125 = shl i32 %shr124, 4, !dbg !3919
  %sub126 = sub nsw i32 %shr123, %shl125, !dbg !3920
  %sub127 = sub nsw i32 %sub126, 4, !dbg !3921
  store i32 %sub127, i32* %v122, align 4, !dbg !3914
  %52 = load i32, i32* %v122, align 4, !dbg !3922
  %conv128 = sitofp i32 %52 to float, !dbg !3922
  %call129 = call float @powf(float 2.000000e+00, float %conv128) #11, !dbg !3923
  %53 = load i32, i32* %i, align 4, !dbg !3924
  %and130 = and i32 %53, 15, !dbg !3925
  %or131 = or i32 %and130, 16, !dbg !3926
  %conv132 = sitofp i32 %or131 to float, !dbg !3927
  %mul133 = fmul float %call129, %conv132, !dbg !3928
  %54 = load i32, i32* %i, align 4, !dbg !3929
  %idxprom134 = sext i32 %54 to i64, !dbg !3930
  %arrayidx135 = getelementptr inbounds [256 x float], [256 x float]* @ff_ac3_heavy_dynamic_range_tab, i64 0, i64 %idxprom134, !dbg !3930
  store float %mul133, float* %arrayidx135, align 4, !dbg !3931
  br label %for.inc136, !dbg !3932

for.inc136:                                       ; preds = %for.body121
  %55 = load i32, i32* %i, align 4, !dbg !3933
  %inc137 = add nsw i32 %55, 1, !dbg !3933
  store i32 %inc137, i32* %i, align 4, !dbg !3933
  br label %for.cond118, !dbg !3935, !llvm.loop !3936

for.end138:                                       ; preds = %for.cond118
  ret void, !dbg !3938
}

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #2

declare void @ff_kbd_window_init(float*, float, i32) #2

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #2

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #2

declare void @ff_fmt_convert_init(%struct.FmtConvertContext*, %struct.AVCodecContext*) #2

declare void @ff_ac3dsp_init(%struct.AC3DSPContext*, i32) #2

declare void @av_lfg_init(%struct.AVLFG*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @symmetric_dequant(i32 %code, i32 %levels) #4 !dbg !3939 {
entry:
  %code.addr = alloca i32, align 4
  %levels.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3942, metadata !1854), !dbg !3943
  store i32 %levels, i32* %levels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %levels.addr, metadata !3944, metadata !1854), !dbg !3945
  %0 = load i32, i32* %code.addr, align 4, !dbg !3946
  %1 = load i32, i32* %levels.addr, align 4, !dbg !3947
  %shr = ashr i32 %1, 1, !dbg !3948
  %sub = sub nsw i32 %0, %shr, !dbg !3949
  %mul = mul nsw i32 %sub, 16777216, !dbg !3950
  %2 = load i32, i32* %levels.addr, align 4, !dbg !3951
  %div = sdiv i32 %mul, %2, !dbg !3952
  ret i32 %div, !dbg !3953
}

; Function Attrs: nounwind
declare float @powf(float, float) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

declare i32 @av_lfg_init_from_data(%struct.AVLFG*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !3954 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3958, metadata !1854), !dbg !3959
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3960, metadata !1854), !dbg !3961
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !3962, metadata !1854), !dbg !3963
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !3964
  %cmp = icmp sgt i32 %0, 268435455, !dbg !3966
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3967

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !3968
  %cmp1 = icmp slt i32 %1, 0, !dbg !3970
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3971

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !3972
  br label %if.end, !dbg !3973

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3974
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3975
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !3976
  %mul = mul nsw i32 %4, 8, !dbg !3977
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !3978
  ret i32 %call, !dbg !3979
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_frame_header(%struct.AC3DecodeContext* %s) #1 !dbg !3980 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %hdr = alloca %struct.AC3HeaderInfo, align 8
  %err = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !3983, metadata !1854), !dbg !3984
  call void @llvm.dbg.declare(metadata %struct.AC3HeaderInfo* %hdr, metadata !3985, metadata !1854), !dbg !3986
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3987, metadata !1854), !dbg !3988
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !3989
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !3990
  %call = call i32 @ff_ac3_parse_header(%struct.GetBitContext* %gbc, %struct.AC3HeaderInfo* %hdr), !dbg !3991
  store i32 %call, i32* %err, align 4, !dbg !3992
  %1 = load i32, i32* %err, align 4, !dbg !3993
  %tobool = icmp ne i32 %1, 0, !dbg !3993
  br i1 %tobool, label %if.then, label %if.end, !dbg !3995

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !3996
  store i32 %2, i32* %retval, align 4, !dbg !3997
  br label %return, !dbg !3997

if.end:                                           ; preds = %entry
  %sr_code = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 2, !dbg !3998
  %3 = load i8, i8* %sr_code, align 4, !dbg !3998
  %conv = zext i8 %3 to i32, !dbg !3999
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4000
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 91, !dbg !4001
  %sr_code1 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 0, !dbg !4002
  store i32 %conv, i32* %sr_code1, align 32, !dbg !4003
  %bitstream_id = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 3, !dbg !4004
  %5 = load i8, i8* %bitstream_id, align 1, !dbg !4004
  %conv2 = zext i8 %5 to i32, !dbg !4005
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4006
  %bitstream_id3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 10, !dbg !4007
  store i32 %conv2, i32* %bitstream_id3, align 4, !dbg !4008
  %bitstream_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 4, !dbg !4009
  %7 = load i8, i8* %bitstream_mode, align 2, !dbg !4009
  %conv4 = zext i8 %7 to i32, !dbg !4010
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4011
  %bitstream_mode5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 11, !dbg !4012
  store i32 %conv4, i32* %bitstream_mode5, align 16, !dbg !4013
  %channel_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 5, !dbg !4014
  %9 = load i8, i8* %channel_mode, align 1, !dbg !4014
  %conv6 = zext i8 %9 to i32, !dbg !4015
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4016
  %channel_mode7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 12, !dbg !4017
  store i32 %conv6, i32* %channel_mode7, align 4, !dbg !4018
  %lfe_on = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 6, !dbg !4019
  %11 = load i8, i8* %lfe_on, align 8, !dbg !4019
  %conv8 = zext i8 %11 to i32, !dbg !4020
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4021
  %lfe_on9 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 13, !dbg !4022
  store i32 %conv8, i32* %lfe_on9, align 8, !dbg !4023
  %sr_shift = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 14, !dbg !4024
  %13 = load i8, i8* %sr_shift, align 4, !dbg !4024
  %conv10 = zext i8 %13 to i32, !dbg !4025
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4026
  %bit_alloc_params11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 91, !dbg !4027
  %sr_shift12 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params11, i32 0, i32 1, !dbg !4028
  store i32 %conv10, i32* %sr_shift12, align 4, !dbg !4029
  %sample_rate = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 15, !dbg !4030
  %15 = load i16, i16* %sample_rate, align 2, !dbg !4030
  %conv13 = zext i16 %15 to i32, !dbg !4031
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4032
  %sample_rate14 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 8, !dbg !4033
  store i32 %conv13, i32* %sample_rate14, align 4, !dbg !4034
  %bit_rate = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 16, !dbg !4035
  %17 = load i32, i32* %bit_rate, align 8, !dbg !4035
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4036
  %bit_rate15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 7, !dbg !4037
  store i32 %17, i32* %bit_rate15, align 32, !dbg !4038
  %channels = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 17, !dbg !4039
  %19 = load i8, i8* %channels, align 4, !dbg !4039
  %conv16 = zext i8 %19 to i32, !dbg !4040
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4041
  %channels17 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 71, !dbg !4042
  store i32 %conv16, i32* %channels17, align 8, !dbg !4043
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4044
  %channels18 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 71, !dbg !4045
  %22 = load i32, i32* %channels18, align 8, !dbg !4045
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4046
  %lfe_on19 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 13, !dbg !4047
  %24 = load i32, i32* %lfe_on19, align 8, !dbg !4047
  %sub = sub nsw i32 %22, %24, !dbg !4048
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4049
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 70, !dbg !4050
  store i32 %sub, i32* %fbw_channels, align 4, !dbg !4051
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4052
  %fbw_channels20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 70, !dbg !4053
  %27 = load i32, i32* %fbw_channels20, align 4, !dbg !4053
  %add = add nsw i32 %27, 1, !dbg !4054
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4055
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 72, !dbg !4056
  store i32 %add, i32* %lfe_ch, align 4, !dbg !4057
  %frame_size = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 18, !dbg !4058
  %29 = load i16, i16* %frame_size, align 2, !dbg !4058
  %conv21 = zext i16 %29 to i32, !dbg !4059
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4060
  %frame_size22 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 6, !dbg !4061
  store i32 %conv21, i32* %frame_size22, align 4, !dbg !4062
  %frame_size23 = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 18, !dbg !4063
  %31 = load i16, i16* %frame_size23, align 2, !dbg !4063
  %conv24 = zext i16 %31 to i32, !dbg !4064
  %32 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4065
  %superframe_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %32, i32 0, i32 5, !dbg !4066
  %33 = load i32, i32* %superframe_size, align 8, !dbg !4067
  %add25 = add nsw i32 %33, %conv24, !dbg !4067
  store i32 %add25, i32* %superframe_size, align 8, !dbg !4067
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4068
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 18, !dbg !4069
  store i32 0, i32* %preferred_downmix, align 8, !dbg !4070
  %center_mix_level = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 9, !dbg !4071
  %35 = load i32, i32* %center_mix_level, align 8, !dbg !4071
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4072
  %center_mix_level26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 19, !dbg !4073
  store i32 %35, i32* %center_mix_level26, align 4, !dbg !4074
  %37 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4075
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %37, i32 0, i32 20, !dbg !4076
  store i32 4, i32* %center_mix_level_ltrt, align 32, !dbg !4077
  %surround_mix_level = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 10, !dbg !4078
  %38 = load i32, i32* %surround_mix_level, align 4, !dbg !4078
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4079
  %surround_mix_level27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 21, !dbg !4080
  store i32 %38, i32* %surround_mix_level27, align 4, !dbg !4081
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4082
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 22, !dbg !4083
  store i32 4, i32* %surround_mix_level_ltrt, align 8, !dbg !4084
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4085
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 23, !dbg !4086
  store i32 0, i32* %lfe_mix_level_exists, align 4, !dbg !4087
  %num_blocks = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 12, !dbg !4088
  %42 = load i32, i32* %num_blocks, align 4, !dbg !4088
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4089
  %num_blocks28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 9, !dbg !4090
  store i32 %42, i32* %num_blocks28, align 8, !dbg !4091
  %frame_type = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 7, !dbg !4092
  %44 = load i8, i8* %frame_type, align 1, !dbg !4092
  %conv29 = zext i8 %44 to i32, !dbg !4093
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4094
  %frame_type30 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 3, !dbg !4095
  store i32 %conv29, i32* %frame_type30, align 16, !dbg !4096
  %substreamid = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 8, !dbg !4097
  %46 = load i32, i32* %substreamid, align 4, !dbg !4097
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4098
  %substreamid31 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 4, !dbg !4099
  store i32 %46, i32* %substreamid31, align 4, !dbg !4100
  %dolby_surround_mode = getelementptr inbounds %struct.AC3HeaderInfo, %struct.AC3HeaderInfo* %hdr, i32 0, i32 13, !dbg !4101
  %48 = load i32, i32* %dolby_surround_mode, align 8, !dbg !4101
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4102
  %dolby_surround_mode32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 28, !dbg !4103
  store i32 %48, i32* %dolby_surround_mode32, align 32, !dbg !4104
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4105
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 29, !dbg !4106
  store i32 0, i32* %dolby_surround_ex_mode, align 4, !dbg !4107
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4108
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 30, !dbg !4109
  store i32 0, i32* %dolby_headphone_mode, align 8, !dbg !4110
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4111
  %lfe_on33 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 13, !dbg !4113
  %53 = load i32, i32* %lfe_on33, align 8, !dbg !4113
  %tobool34 = icmp ne i32 %53, 0, !dbg !4111
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !4114

if.then35:                                        ; preds = %if.end
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4115
  %lfe_ch36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 72, !dbg !4117
  %55 = load i32, i32* %lfe_ch36, align 4, !dbg !4117
  %idxprom = sext i32 %55 to i64, !dbg !4118
  %56 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4118
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %56, i32 0, i32 83, !dbg !4119
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom, !dbg !4118
  store i32 0, i32* %arrayidx, align 4, !dbg !4120
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4121
  %lfe_ch37 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 72, !dbg !4122
  %58 = load i32, i32* %lfe_ch37, align 4, !dbg !4122
  %idxprom38 = sext i32 %58 to i64, !dbg !4123
  %59 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4123
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %59, i32 0, i32 84, !dbg !4124
  %arrayidx39 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom38, !dbg !4123
  store i32 7, i32* %arrayidx39, align 4, !dbg !4125
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4126
  %lfe_ch40 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 72, !dbg !4127
  %61 = load i32, i32* %lfe_ch40, align 4, !dbg !4127
  %idxprom41 = sext i32 %61 to i64, !dbg !4128
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4128
  %num_exp_groups = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 88, !dbg !4129
  %arrayidx42 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups, i64 0, i64 %idxprom41, !dbg !4128
  store i32 2, i32* %arrayidx42, align 4, !dbg !4130
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4131
  %lfe_ch43 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 72, !dbg !4132
  %64 = load i32, i32* %lfe_ch43, align 4, !dbg !4132
  %idxprom44 = sext i32 %64 to i64, !dbg !4133
  %65 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4133
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %65, i32 0, i32 47, !dbg !4134
  %arrayidx45 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom44, !dbg !4133
  store i32 0, i32* %arrayidx45, align 4, !dbg !4135
  br label %if.end46, !dbg !4136

if.end46:                                         ; preds = %if.then35, %if.end
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4137
  %bitstream_id47 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 10, !dbg !4139
  %67 = load i32, i32* %bitstream_id47, align 4, !dbg !4139
  %cmp = icmp sle i32 %67, 10, !dbg !4140
  br i1 %cmp, label %if.then49, label %if.else, !dbg !4141

if.then49:                                        ; preds = %if.end46
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4142
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 25, !dbg !4144
  store i32 0, i32* %eac3, align 4, !dbg !4145
  %69 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4146
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %69, i32 0, i32 38, !dbg !4147
  store i32 2, i32* %snr_offset_strategy, align 4, !dbg !4148
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4149
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 39, !dbg !4150
  store i32 1, i32* %block_switch_syntax, align 16, !dbg !4151
  %71 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4152
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %71, i32 0, i32 40, !dbg !4153
  store i32 1, i32* %dither_flag_syntax, align 4, !dbg !4154
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4155
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 41, !dbg !4156
  store i32 1, i32* %bit_allocation_syntax, align 8, !dbg !4157
  %73 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4158
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %73, i32 0, i32 42, !dbg !4159
  store i32 0, i32* %fast_gain_syntax, align 4, !dbg !4160
  %74 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4161
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %74, i32 0, i32 92, !dbg !4162
  store i32 0, i32* %first_cpl_leak, align 4, !dbg !4163
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4164
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 43, !dbg !4165
  store i32 1, i32* %dba_syntax, align 32, !dbg !4166
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4167
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 44, !dbg !4168
  store i32 1, i32* %skip_syntax, align 4, !dbg !4169
  %77 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4170
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %77, i32 0, i32 68, !dbg !4171
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i32 0, i32 0, !dbg !4172
  %78 = bitcast i32* %arraydecay to i8*, !dbg !4172
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 28, i32 8, i1 false), !dbg !4172
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4173
  %call50 = call i32 @ac3_parse_header(%struct.AC3DecodeContext* %79), !dbg !4174
  store i32 %call50, i32* %retval, align 4, !dbg !4175
  br label %return, !dbg !4175

if.else:                                          ; preds = %if.end46
  %80 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4176
  %eac351 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %80, i32 0, i32 25, !dbg !4179
  store i32 1, i32* %eac351, align 4, !dbg !4180
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4181
  %call52 = call i32 @ff_eac3_parse_header(%struct.AC3DecodeContext* %81), !dbg !4182
  store i32 %call52, i32* %retval, align 4, !dbg !4183
  br label %return, !dbg !4183

return:                                           ; preds = %if.else, %if.then49, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !4184
  ret i32 %82, !dbg !4184
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #7

declare i32* @av_crc_get_table(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @set_downmix_coeffs(%struct.AC3DecodeContext* %s) #1 !dbg !4185 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  %cmix = alloca float, align 4
  %smix = alloca float, align 4
  %norm0 = alloca float, align 4
  %norm1 = alloca float, align 4
  %downmix_coeffs = alloca [2 x [7 x float]], align 16
  %nf = alloca i32, align 4
  %nf69 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !4186, metadata !1854), !dbg !4187
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4188, metadata !1854), !dbg !4189
  call void @llvm.dbg.declare(metadata float* %cmix, metadata !4190, metadata !1854), !dbg !4191
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4192
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 19, !dbg !4193
  %1 = load i32, i32* %center_mix_level, align 4, !dbg !4193
  %idxprom = sext i32 %1 to i64, !dbg !4194
  %arrayidx = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom, !dbg !4194
  %2 = load float, float* %arrayidx, align 4, !dbg !4194
  store float %2, float* %cmix, align 4, !dbg !4191
  call void @llvm.dbg.declare(metadata float* %smix, metadata !4195, metadata !1854), !dbg !4196
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4197
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 21, !dbg !4198
  %4 = load i32, i32* %surround_mix_level, align 4, !dbg !4198
  %idxprom1 = sext i32 %4 to i64, !dbg !4199
  %arrayidx2 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom1, !dbg !4199
  %5 = load float, float* %arrayidx2, align 4, !dbg !4199
  store float %5, float* %smix, align 4, !dbg !4196
  call void @llvm.dbg.declare(metadata float* %norm0, metadata !4200, metadata !1854), !dbg !4201
  call void @llvm.dbg.declare(metadata float* %norm1, metadata !4202, metadata !1854), !dbg !4203
  call void @llvm.dbg.declare(metadata [2 x [7 x float]]* %downmix_coeffs, metadata !4204, metadata !1854), !dbg !4207
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4208
  %downmix_coeffs3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 73, !dbg !4210
  %arrayidx4 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs3, i64 0, i64 0, !dbg !4208
  %7 = load float*, float** %arrayidx4, align 16, !dbg !4208
  %tobool = icmp ne float* %7, null, !dbg !4208
  br i1 %tobool, label %if.end15, label %if.then, !dbg !4211

if.then:                                          ; preds = %entry
  %call = call i8* @av_malloc_array(i64 14, i64 4), !dbg !4212
  %8 = bitcast i8* %call to float*, !dbg !4212
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4214
  %downmix_coeffs5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 73, !dbg !4215
  %arrayidx6 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs5, i64 0, i64 0, !dbg !4214
  store float* %8, float** %arrayidx6, align 16, !dbg !4216
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4217
  %downmix_coeffs7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 73, !dbg !4219
  %arrayidx8 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs7, i64 0, i64 0, !dbg !4217
  %11 = load float*, float** %arrayidx8, align 16, !dbg !4217
  %tobool9 = icmp ne float* %11, null, !dbg !4217
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !4220

if.then10:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

if.end:                                           ; preds = %if.then
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4222
  %downmix_coeffs11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 73, !dbg !4223
  %arrayidx12 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs11, i64 0, i64 0, !dbg !4222
  %13 = load float*, float** %arrayidx12, align 16, !dbg !4222
  %add.ptr = getelementptr inbounds float, float* %13, i64 7, !dbg !4224
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4225
  %downmix_coeffs13 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 73, !dbg !4226
  %arrayidx14 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs13, i64 0, i64 1, !dbg !4225
  store float* %add.ptr, float** %arrayidx14, align 8, !dbg !4227
  br label %if.end15, !dbg !4228

if.end15:                                         ; preds = %if.end, %entry
  store i32 0, i32* %i, align 4, !dbg !4229
  br label %for.cond, !dbg !4231

for.cond:                                         ; preds = %for.inc, %if.end15
  %15 = load i32, i32* %i, align 4, !dbg !4232
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4235
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 70, !dbg !4236
  %17 = load i32, i32* %fbw_channels, align 4, !dbg !4236
  %cmp = icmp slt i32 %15, %17, !dbg !4237
  br i1 %cmp, label %for.body, label %for.end, !dbg !4238

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !4239
  %idxprom16 = sext i32 %18 to i64, !dbg !4241
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4242
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 12, !dbg !4243
  %20 = load i32, i32* %channel_mode, align 4, !dbg !4243
  %idxprom17 = sext i32 %20 to i64, !dbg !4241
  %arrayidx18 = getelementptr inbounds [8 x [5 x [2 x i8]]], [8 x [5 x [2 x i8]]]* @ac3_default_coeffs, i64 0, i64 %idxprom17, !dbg !4241
  %arrayidx19 = getelementptr inbounds [5 x [2 x i8]], [5 x [2 x i8]]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !4241
  %arrayidx20 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx19, i64 0, i64 0, !dbg !4241
  %21 = load i8, i8* %arrayidx20, align 2, !dbg !4241
  %idxprom21 = zext i8 %21 to i64, !dbg !4244
  %arrayidx22 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom21, !dbg !4244
  %22 = load float, float* %arrayidx22, align 4, !dbg !4244
  %23 = load i32, i32* %i, align 4, !dbg !4245
  %idxprom23 = sext i32 %23 to i64, !dbg !4246
  %arrayidx24 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4246
  %arrayidx25 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx24, i64 0, i64 %idxprom23, !dbg !4246
  store float %22, float* %arrayidx25, align 4, !dbg !4247
  %24 = load i32, i32* %i, align 4, !dbg !4248
  %idxprom26 = sext i32 %24 to i64, !dbg !4249
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4250
  %channel_mode27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 12, !dbg !4251
  %26 = load i32, i32* %channel_mode27, align 4, !dbg !4251
  %idxprom28 = sext i32 %26 to i64, !dbg !4249
  %arrayidx29 = getelementptr inbounds [8 x [5 x [2 x i8]]], [8 x [5 x [2 x i8]]]* @ac3_default_coeffs, i64 0, i64 %idxprom28, !dbg !4249
  %arrayidx30 = getelementptr inbounds [5 x [2 x i8]], [5 x [2 x i8]]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !4249
  %arrayidx31 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx30, i64 0, i64 1, !dbg !4249
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !4249
  %idxprom32 = zext i8 %27 to i64, !dbg !4252
  %arrayidx33 = getelementptr inbounds [9 x float], [9 x float]* @gain_levels, i64 0, i64 %idxprom32, !dbg !4252
  %28 = load float, float* %arrayidx33, align 4, !dbg !4252
  %29 = load i32, i32* %i, align 4, !dbg !4253
  %idxprom34 = sext i32 %29 to i64, !dbg !4254
  %arrayidx35 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4254
  %arrayidx36 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx35, i64 0, i64 %idxprom34, !dbg !4254
  store float %28, float* %arrayidx36, align 4, !dbg !4255
  br label %for.inc, !dbg !4256

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !4257
  %inc = add nsw i32 %30, 1, !dbg !4257
  store i32 %inc, i32* %i, align 4, !dbg !4257
  br label %for.cond, !dbg !4259, !llvm.loop !4260

for.end:                                          ; preds = %for.cond
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4262
  %channel_mode37 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 12, !dbg !4264
  %32 = load i32, i32* %channel_mode37, align 4, !dbg !4264
  %cmp38 = icmp sgt i32 %32, 1, !dbg !4265
  br i1 %cmp38, label %land.lhs.true, label %if.end46, !dbg !4266

land.lhs.true:                                    ; preds = %for.end
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4267
  %channel_mode39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 12, !dbg !4269
  %34 = load i32, i32* %channel_mode39, align 4, !dbg !4269
  %and = and i32 %34, 1, !dbg !4270
  %tobool40 = icmp ne i32 %and, 0, !dbg !4270
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !4271

if.then41:                                        ; preds = %land.lhs.true
  %35 = load float, float* %cmix, align 4, !dbg !4272
  %arrayidx42 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4274
  %arrayidx43 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx42, i64 0, i64 1, !dbg !4274
  store float %35, float* %arrayidx43, align 4, !dbg !4275
  %arrayidx44 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4276
  %arrayidx45 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx44, i64 0, i64 1, !dbg !4276
  store float %35, float* %arrayidx45, align 4, !dbg !4277
  br label %if.end46, !dbg !4278

if.end46:                                         ; preds = %if.then41, %land.lhs.true, %for.end
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4279
  %channel_mode47 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 12, !dbg !4281
  %37 = load i32, i32* %channel_mode47, align 4, !dbg !4281
  %cmp48 = icmp eq i32 %37, 4, !dbg !4282
  br i1 %cmp48, label %if.then51, label %lor.lhs.false, !dbg !4283

lor.lhs.false:                                    ; preds = %if.end46
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4284
  %channel_mode49 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 12, !dbg !4286
  %39 = load i32, i32* %channel_mode49, align 4, !dbg !4286
  %cmp50 = icmp eq i32 %39, 5, !dbg !4287
  br i1 %cmp50, label %if.then51, label %if.end60, !dbg !4288

if.then51:                                        ; preds = %lor.lhs.false, %if.end46
  call void @llvm.dbg.declare(metadata i32* %nf, metadata !4289, metadata !1854), !dbg !4291
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4292
  %channel_mode52 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 12, !dbg !4293
  %41 = load i32, i32* %channel_mode52, align 4, !dbg !4293
  %sub = sub nsw i32 %41, 2, !dbg !4294
  store i32 %sub, i32* %nf, align 4, !dbg !4291
  %42 = load float, float* %smix, align 4, !dbg !4295
  %conv = fpext float %42 to double, !dbg !4295
  %mul = fmul double %conv, 0x3FE6A09E667F3BCD, !dbg !4296
  %conv53 = fptrunc double %mul to float, !dbg !4295
  %43 = load i32, i32* %nf, align 4, !dbg !4297
  %idxprom54 = sext i32 %43 to i64, !dbg !4298
  %arrayidx55 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4298
  %arrayidx56 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx55, i64 0, i64 %idxprom54, !dbg !4298
  store float %conv53, float* %arrayidx56, align 4, !dbg !4299
  %44 = load i32, i32* %nf, align 4, !dbg !4300
  %idxprom57 = sext i32 %44 to i64, !dbg !4301
  %arrayidx58 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4301
  %arrayidx59 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx58, i64 0, i64 %idxprom57, !dbg !4301
  store float %conv53, float* %arrayidx59, align 4, !dbg !4302
  br label %if.end60, !dbg !4303

if.end60:                                         ; preds = %if.then51, %lor.lhs.false
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4304
  %channel_mode61 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 12, !dbg !4306
  %46 = load i32, i32* %channel_mode61, align 4, !dbg !4306
  %cmp62 = icmp eq i32 %46, 6, !dbg !4307
  br i1 %cmp62, label %if.then68, label %lor.lhs.false64, !dbg !4308

lor.lhs.false64:                                  ; preds = %if.end60
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4309
  %channel_mode65 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 12, !dbg !4311
  %48 = load i32, i32* %channel_mode65, align 4, !dbg !4311
  %cmp66 = icmp eq i32 %48, 7, !dbg !4312
  br i1 %cmp66, label %if.then68, label %if.end78, !dbg !4313

if.then68:                                        ; preds = %lor.lhs.false64, %if.end60
  call void @llvm.dbg.declare(metadata i32* %nf69, metadata !4314, metadata !1854), !dbg !4316
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4317
  %channel_mode70 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 12, !dbg !4318
  %50 = load i32, i32* %channel_mode70, align 4, !dbg !4318
  %sub71 = sub nsw i32 %50, 4, !dbg !4319
  store i32 %sub71, i32* %nf69, align 4, !dbg !4316
  %51 = load float, float* %smix, align 4, !dbg !4320
  %52 = load i32, i32* %nf69, align 4, !dbg !4321
  %add = add nsw i32 %52, 1, !dbg !4322
  %idxprom72 = sext i32 %add to i64, !dbg !4323
  %arrayidx73 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4323
  %arrayidx74 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx73, i64 0, i64 %idxprom72, !dbg !4323
  store float %51, float* %arrayidx74, align 4, !dbg !4324
  %53 = load i32, i32* %nf69, align 4, !dbg !4325
  %idxprom75 = sext i32 %53 to i64, !dbg !4326
  %arrayidx76 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4326
  %arrayidx77 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx76, i64 0, i64 %idxprom75, !dbg !4326
  store float %51, float* %arrayidx77, align 4, !dbg !4327
  br label %if.end78, !dbg !4328

if.end78:                                         ; preds = %if.then68, %lor.lhs.false64
  store float 0.000000e+00, float* %norm1, align 4, !dbg !4329
  store float 0.000000e+00, float* %norm0, align 4, !dbg !4330
  store i32 0, i32* %i, align 4, !dbg !4331
  br label %for.cond79, !dbg !4333

for.cond79:                                       ; preds = %for.inc92, %if.end78
  %54 = load i32, i32* %i, align 4, !dbg !4334
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4337
  %fbw_channels80 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 70, !dbg !4338
  %56 = load i32, i32* %fbw_channels80, align 4, !dbg !4338
  %cmp81 = icmp slt i32 %54, %56, !dbg !4339
  br i1 %cmp81, label %for.body83, label %for.end94, !dbg !4340

for.body83:                                       ; preds = %for.cond79
  %57 = load i32, i32* %i, align 4, !dbg !4341
  %idxprom84 = sext i32 %57 to i64, !dbg !4343
  %arrayidx85 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4343
  %arrayidx86 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx85, i64 0, i64 %idxprom84, !dbg !4343
  %58 = load float, float* %arrayidx86, align 4, !dbg !4343
  %59 = load float, float* %norm0, align 4, !dbg !4344
  %add87 = fadd float %59, %58, !dbg !4344
  store float %add87, float* %norm0, align 4, !dbg !4344
  %60 = load i32, i32* %i, align 4, !dbg !4345
  %idxprom88 = sext i32 %60 to i64, !dbg !4346
  %arrayidx89 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4346
  %arrayidx90 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx89, i64 0, i64 %idxprom88, !dbg !4346
  %61 = load float, float* %arrayidx90, align 4, !dbg !4346
  %62 = load float, float* %norm1, align 4, !dbg !4347
  %add91 = fadd float %62, %61, !dbg !4347
  store float %add91, float* %norm1, align 4, !dbg !4347
  br label %for.inc92, !dbg !4348

for.inc92:                                        ; preds = %for.body83
  %63 = load i32, i32* %i, align 4, !dbg !4349
  %inc93 = add nsw i32 %63, 1, !dbg !4349
  store i32 %inc93, i32* %i, align 4, !dbg !4349
  br label %for.cond79, !dbg !4351, !llvm.loop !4352

for.end94:                                        ; preds = %for.cond79
  %64 = load float, float* %norm0, align 4, !dbg !4354
  %div = fdiv float 1.000000e+00, %64, !dbg !4355
  store float %div, float* %norm0, align 4, !dbg !4356
  %65 = load float, float* %norm1, align 4, !dbg !4357
  %div95 = fdiv float 1.000000e+00, %65, !dbg !4358
  store float %div95, float* %norm1, align 4, !dbg !4359
  store i32 0, i32* %i, align 4, !dbg !4360
  br label %for.cond96, !dbg !4362

for.cond96:                                       ; preds = %for.inc109, %for.end94
  %66 = load i32, i32* %i, align 4, !dbg !4363
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4366
  %fbw_channels97 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 70, !dbg !4367
  %68 = load i32, i32* %fbw_channels97, align 4, !dbg !4367
  %cmp98 = icmp slt i32 %66, %68, !dbg !4368
  br i1 %cmp98, label %for.body100, label %for.end111, !dbg !4369

for.body100:                                      ; preds = %for.cond96
  %69 = load float, float* %norm0, align 4, !dbg !4370
  %70 = load i32, i32* %i, align 4, !dbg !4372
  %idxprom101 = sext i32 %70 to i64, !dbg !4373
  %arrayidx102 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4373
  %arrayidx103 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx102, i64 0, i64 %idxprom101, !dbg !4373
  %71 = load float, float* %arrayidx103, align 4, !dbg !4374
  %mul104 = fmul float %71, %69, !dbg !4374
  store float %mul104, float* %arrayidx103, align 4, !dbg !4374
  %72 = load float, float* %norm1, align 4, !dbg !4375
  %73 = load i32, i32* %i, align 4, !dbg !4376
  %idxprom105 = sext i32 %73 to i64, !dbg !4377
  %arrayidx106 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4377
  %arrayidx107 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx106, i64 0, i64 %idxprom105, !dbg !4377
  %74 = load float, float* %arrayidx107, align 4, !dbg !4378
  %mul108 = fmul float %74, %72, !dbg !4378
  store float %mul108, float* %arrayidx107, align 4, !dbg !4378
  br label %for.inc109, !dbg !4379

for.inc109:                                       ; preds = %for.body100
  %75 = load i32, i32* %i, align 4, !dbg !4380
  %inc110 = add nsw i32 %75, 1, !dbg !4380
  store i32 %inc110, i32* %i, align 4, !dbg !4380
  br label %for.cond96, !dbg !4382, !llvm.loop !4383

for.end111:                                       ; preds = %for.cond96
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4385
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 75, !dbg !4387
  %77 = load i32, i32* %output_mode, align 4, !dbg !4387
  %cmp112 = icmp eq i32 %77, 1, !dbg !4388
  br i1 %cmp112, label %if.then114, label %if.end136, !dbg !4389

if.then114:                                       ; preds = %for.end111
  store i32 0, i32* %i, align 4, !dbg !4390
  br label %for.cond115, !dbg !4393

for.cond115:                                      ; preds = %for.inc133, %if.then114
  %78 = load i32, i32* %i, align 4, !dbg !4394
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4397
  %fbw_channels116 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %79, i32 0, i32 70, !dbg !4398
  %80 = load i32, i32* %fbw_channels116, align 4, !dbg !4398
  %cmp117 = icmp slt i32 %78, %80, !dbg !4399
  br i1 %cmp117, label %for.body119, label %for.end135, !dbg !4400

for.body119:                                      ; preds = %for.cond115
  %81 = load i32, i32* %i, align 4, !dbg !4401
  %idxprom120 = sext i32 %81 to i64, !dbg !4402
  %arrayidx121 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4402
  %arrayidx122 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx121, i64 0, i64 %idxprom120, !dbg !4402
  %82 = load float, float* %arrayidx122, align 4, !dbg !4402
  %83 = load i32, i32* %i, align 4, !dbg !4403
  %idxprom123 = sext i32 %83 to i64, !dbg !4404
  %arrayidx124 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4404
  %arrayidx125 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx124, i64 0, i64 %idxprom123, !dbg !4404
  %84 = load float, float* %arrayidx125, align 4, !dbg !4404
  %add126 = fadd float %82, %84, !dbg !4405
  %conv127 = fpext float %add126 to double, !dbg !4406
  %mul128 = fmul double %conv127, 0x3FE6A09E667F3BCD, !dbg !4407
  %conv129 = fptrunc double %mul128 to float, !dbg !4406
  %85 = load i32, i32* %i, align 4, !dbg !4408
  %idxprom130 = sext i32 %85 to i64, !dbg !4409
  %arrayidx131 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4409
  %arrayidx132 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx131, i64 0, i64 %idxprom130, !dbg !4409
  store float %conv129, float* %arrayidx132, align 4, !dbg !4410
  br label %for.inc133, !dbg !4409

for.inc133:                                       ; preds = %for.body119
  %86 = load i32, i32* %i, align 4, !dbg !4411
  %inc134 = add nsw i32 %86, 1, !dbg !4411
  store i32 %inc134, i32* %i, align 4, !dbg !4411
  br label %for.cond115, !dbg !4413, !llvm.loop !4414

for.end135:                                       ; preds = %for.cond115
  br label %if.end136, !dbg !4416

if.end136:                                        ; preds = %for.end135, %for.end111
  store i32 0, i32* %i, align 4, !dbg !4417
  br label %for.cond137, !dbg !4419

for.cond137:                                      ; preds = %for.inc156, %if.end136
  %87 = load i32, i32* %i, align 4, !dbg !4420
  %88 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4423
  %fbw_channels138 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %88, i32 0, i32 70, !dbg !4424
  %89 = load i32, i32* %fbw_channels138, align 4, !dbg !4424
  %cmp139 = icmp slt i32 %87, %89, !dbg !4425
  br i1 %cmp139, label %for.body141, label %for.end158, !dbg !4426

for.body141:                                      ; preds = %for.cond137
  %90 = load i32, i32* %i, align 4, !dbg !4427
  %idxprom142 = sext i32 %90 to i64, !dbg !4429
  %arrayidx143 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 0, !dbg !4429
  %arrayidx144 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx143, i64 0, i64 %idxprom142, !dbg !4429
  %91 = load float, float* %arrayidx144, align 4, !dbg !4429
  %92 = load i32, i32* %i, align 4, !dbg !4430
  %idxprom145 = sext i32 %92 to i64, !dbg !4431
  %93 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4431
  %downmix_coeffs146 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %93, i32 0, i32 73, !dbg !4432
  %arrayidx147 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs146, i64 0, i64 0, !dbg !4431
  %94 = load float*, float** %arrayidx147, align 16, !dbg !4431
  %arrayidx148 = getelementptr inbounds float, float* %94, i64 %idxprom145, !dbg !4431
  store float %91, float* %arrayidx148, align 4, !dbg !4433
  %95 = load i32, i32* %i, align 4, !dbg !4434
  %idxprom149 = sext i32 %95 to i64, !dbg !4435
  %arrayidx150 = getelementptr inbounds [2 x [7 x float]], [2 x [7 x float]]* %downmix_coeffs, i64 0, i64 1, !dbg !4435
  %arrayidx151 = getelementptr inbounds [7 x float], [7 x float]* %arrayidx150, i64 0, i64 %idxprom149, !dbg !4435
  %96 = load float, float* %arrayidx151, align 4, !dbg !4435
  %97 = load i32, i32* %i, align 4, !dbg !4436
  %idxprom152 = sext i32 %97 to i64, !dbg !4437
  %98 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4437
  %downmix_coeffs153 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %98, i32 0, i32 73, !dbg !4438
  %arrayidx154 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs153, i64 0, i64 1, !dbg !4437
  %99 = load float*, float** %arrayidx154, align 8, !dbg !4437
  %arrayidx155 = getelementptr inbounds float, float* %99, i64 %idxprom152, !dbg !4437
  store float %96, float* %arrayidx155, align 4, !dbg !4439
  br label %for.inc156, !dbg !4440

for.inc156:                                       ; preds = %for.body141
  %100 = load i32, i32* %i, align 4, !dbg !4441
  %inc157 = add nsw i32 %100, 1, !dbg !4441
  store i32 %inc157, i32* %i, align 4, !dbg !4441
  br label %for.cond137, !dbg !4443, !llvm.loop !4444

for.end158:                                       ; preds = %for.cond137
  store i32 0, i32* %retval, align 4, !dbg !4446
  br label %return, !dbg !4446

return:                                           ; preds = %for.end158, %if.then10
  %101 = load i32, i32* %retval, align 4, !dbg !4447
  ret i32 %101, !dbg !4447
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_audio_block(%struct.AC3DecodeContext* %s, i32 %blk, i32 %offset) #1 !dbg !4448 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %fbw_channels = alloca i32, align 4
  %channel_mode = alloca i32, align 4
  %i = alloca i32, align 4
  %bnd = alloca i32, align 4
  %seg = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %different_transforms = alloca i32, align 4
  %downmix_output = alloca i32, align 4
  %cpl_in_use = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %bit_alloc_stages = alloca [7 x i8], align 1
  %range_bits = alloca i32, align 4
  %range = alloca float, align 4
  %group_size = alloca i32, align 4
  %prev = alloca i32, align 4
  %bandwidth_code = alloca i32, align 4
  %snr = alloca i32, align 4
  %csnr = alloca i32, align 4
  %prev515 = alloca i32, align 4
  %prev576 = alloca i32, align 4
  %fl = alloca i32, align 4
  %sl = alloca i32, align 4
  %bap_tab = alloca i8*, align 8
  %skipl = alloca i32, align 4
  %audio_channel = alloca i32, align 4
  %gain = alloca float, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !4451, metadata !1854), !dbg !4452
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !4453, metadata !1854), !dbg !4454
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4455, metadata !1854), !dbg !4456
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !4457, metadata !1854), !dbg !4458
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4459
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 70, !dbg !4460
  %1 = load i32, i32* %fbw_channels1, align 4, !dbg !4460
  store i32 %1, i32* %fbw_channels, align 4, !dbg !4458
  call void @llvm.dbg.declare(metadata i32* %channel_mode, metadata !4461, metadata !1854), !dbg !4462
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4463
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 12, !dbg !4464
  %3 = load i32, i32* %channel_mode2, align 4, !dbg !4464
  store i32 %3, i32* %channel_mode, align 4, !dbg !4462
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4465, metadata !1854), !dbg !4466
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !4467, metadata !1854), !dbg !4468
  call void @llvm.dbg.declare(metadata i32* %seg, metadata !4469, metadata !1854), !dbg !4470
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4471, metadata !1854), !dbg !4472
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4473, metadata !1854), !dbg !4474
  call void @llvm.dbg.declare(metadata i32* %different_transforms, metadata !4475, metadata !1854), !dbg !4476
  call void @llvm.dbg.declare(metadata i32* %downmix_output, metadata !4477, metadata !1854), !dbg !4478
  call void @llvm.dbg.declare(metadata i32* %cpl_in_use, metadata !4479, metadata !1854), !dbg !4480
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !4481, metadata !1854), !dbg !4482
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4483
  %gbc3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 2, !dbg !4484
  store %struct.GetBitContext* %gbc3, %struct.GetBitContext** %gbc, align 8, !dbg !4482
  call void @llvm.dbg.declare(metadata [7 x i8]* %bit_alloc_stages, metadata !4485, metadata !1854), !dbg !4486
  %5 = bitcast [7 x i8]* %bit_alloc_stages to i8*, !dbg !4486
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 7, i32 1, i1 false), !dbg !4486
  store i32 0, i32* %different_transforms, align 4, !dbg !4487
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4488
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 39, !dbg !4490
  %7 = load i32, i32* %block_switch_syntax, align 16, !dbg !4490
  %tobool = icmp ne i32 %7, 0, !dbg !4488
  br i1 %tobool, label %if.then, label %if.end12, !dbg !4491

if.then:                                          ; preds = %entry
  store i32 1, i32* %ch, align 4, !dbg !4492
  br label %for.cond, !dbg !4495

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %ch, align 4, !dbg !4496
  %9 = load i32, i32* %fbw_channels, align 4, !dbg !4499
  %cmp = icmp sle i32 %8, %9, !dbg !4500
  br i1 %cmp, label %for.body, label %for.end, !dbg !4501

for.body:                                         ; preds = %for.cond
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4502
  %call = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !4504
  %11 = load i32, i32* %ch, align 4, !dbg !4505
  %idxprom = sext i32 %11 to i64, !dbg !4506
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4506
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 106, !dbg !4507
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i64 0, i64 %idxprom, !dbg !4506
  store i32 %call, i32* %arrayidx, align 4, !dbg !4508
  %13 = load i32, i32* %ch, align 4, !dbg !4509
  %cmp4 = icmp sgt i32 %13, 1, !dbg !4511
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !4512

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32, i32* %ch, align 4, !dbg !4513
  %idxprom5 = sext i32 %14 to i64, !dbg !4515
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4515
  %block_switch6 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 106, !dbg !4516
  %arrayidx7 = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch6, i64 0, i64 %idxprom5, !dbg !4515
  %16 = load i32, i32* %arrayidx7, align 4, !dbg !4515
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4517
  %block_switch8 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 106, !dbg !4518
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch8, i64 0, i64 1, !dbg !4517
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !4517
  %cmp10 = icmp ne i32 %16, %18, !dbg !4519
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !4520

if.then11:                                        ; preds = %land.lhs.true
  store i32 1, i32* %different_transforms, align 4, !dbg !4521
  br label %if.end, !dbg !4522

if.end:                                           ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4523

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %ch, align 4, !dbg !4524
  %inc = add nsw i32 %19, 1, !dbg !4524
  store i32 %inc, i32* %ch, align 4, !dbg !4524
  br label %for.cond, !dbg !4526, !llvm.loop !4527

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !4529

if.end12:                                         ; preds = %for.end, %entry
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4530
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 40, !dbg !4532
  %21 = load i32, i32* %dither_flag_syntax, align 4, !dbg !4532
  %tobool13 = icmp ne i32 %21, 0, !dbg !4530
  br i1 %tobool13, label %if.then14, label %if.end24, !dbg !4533

if.then14:                                        ; preds = %if.end12
  store i32 1, i32* %ch, align 4, !dbg !4534
  br label %for.cond15, !dbg !4537

for.cond15:                                       ; preds = %for.inc21, %if.then14
  %22 = load i32, i32* %ch, align 4, !dbg !4538
  %23 = load i32, i32* %fbw_channels, align 4, !dbg !4541
  %cmp16 = icmp sle i32 %22, %23, !dbg !4542
  br i1 %cmp16, label %for.body17, label %for.end23, !dbg !4543

for.body17:                                       ; preds = %for.cond15
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4544
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %24), !dbg !4546
  %25 = load i32, i32* %ch, align 4, !dbg !4547
  %idxprom19 = sext i32 %25 to i64, !dbg !4548
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4548
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 104, !dbg !4549
  %arrayidx20 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom19, !dbg !4548
  store i32 %call18, i32* %arrayidx20, align 4, !dbg !4550
  br label %for.inc21, !dbg !4551

for.inc21:                                        ; preds = %for.body17
  %27 = load i32, i32* %ch, align 4, !dbg !4552
  %inc22 = add nsw i32 %27, 1, !dbg !4552
  store i32 %inc22, i32* %ch, align 4, !dbg !4552
  br label %for.cond15, !dbg !4554, !llvm.loop !4555

for.end23:                                        ; preds = %for.cond15
  br label %if.end24, !dbg !4557

if.end24:                                         ; preds = %for.end23, %if.end12
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4558
  %channel_mode25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 12, !dbg !4559
  %29 = load i32, i32* %channel_mode25, align 4, !dbg !4559
  %tobool26 = icmp ne i32 %29, 0, !dbg !4560
  %lnot = xor i1 %tobool26, true, !dbg !4560
  %lnot.ext = zext i1 %lnot to i32, !dbg !4560
  store i32 %lnot.ext, i32* %i, align 4, !dbg !4561
  br label %do.body, !dbg !4562, !llvm.loop !4563

do.body:                                          ; preds = %do.cond, %if.end24
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4564
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !4567
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4567
  br i1 %tobool28, label %if.then29, label %if.else45, !dbg !4568

if.then29:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %range_bits, metadata !4569, metadata !1854), !dbg !4571
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4572
  %call30 = call i32 @get_bits(%struct.GetBitContext* %31, i32 8), !dbg !4573
  store i32 %call30, i32* %range_bits, align 4, !dbg !4571
  call void @llvm.dbg.declare(metadata float* %range, metadata !4574, metadata !1854), !dbg !4575
  %32 = load i32, i32* %range_bits, align 4, !dbg !4576
  %idxprom31 = sext i32 %32 to i64, !dbg !4577
  %arrayidx32 = getelementptr inbounds [256 x float], [256 x float]* @dynamic_range_tab, i64 0, i64 %idxprom31, !dbg !4577
  %33 = load float, float* %arrayidx32, align 4, !dbg !4577
  store float %33, float* %range, align 4, !dbg !4575
  %34 = load i32, i32* %range_bits, align 4, !dbg !4578
  %cmp33 = icmp sle i32 %34, 127, !dbg !4580
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !4581

lor.lhs.false:                                    ; preds = %if.then29
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4582
  %drc_scale = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 80, !dbg !4584
  %36 = load float, float* %drc_scale, align 4, !dbg !4584
  %conv = fpext float %36 to double, !dbg !4582
  %cmp34 = fcmp ole double %conv, 1.000000e+00, !dbg !4585
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !4586

if.then36:                                        ; preds = %lor.lhs.false, %if.then29
  %37 = load float, float* %range, align 4, !dbg !4587
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4588
  %drc_scale37 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 80, !dbg !4589
  %39 = load float, float* %drc_scale37, align 4, !dbg !4589
  %call38 = call float @powf(float %37, float %39) #11, !dbg !4590
  %40 = load i32, i32* %i, align 4, !dbg !4591
  %idxprom39 = sext i32 %40 to i64, !dbg !4592
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4592
  %dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 79, !dbg !4593
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %dynamic_range, i64 0, i64 %idxprom39, !dbg !4592
  store float %call38, float* %arrayidx40, align 4, !dbg !4594
  br label %if.end44, !dbg !4592

if.else:                                          ; preds = %lor.lhs.false
  %42 = load float, float* %range, align 4, !dbg !4595
  %43 = load i32, i32* %i, align 4, !dbg !4596
  %idxprom41 = sext i32 %43 to i64, !dbg !4597
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4597
  %dynamic_range42 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 79, !dbg !4598
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %dynamic_range42, i64 0, i64 %idxprom41, !dbg !4597
  store float %42, float* %arrayidx43, align 4, !dbg !4599
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then36
  br label %if.end53, !dbg !4600

if.else45:                                        ; preds = %do.body
  %45 = load i32, i32* %blk.addr, align 4, !dbg !4601
  %cmp46 = icmp eq i32 %45, 0, !dbg !4604
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !4601

if.then48:                                        ; preds = %if.else45
  %46 = load i32, i32* %i, align 4, !dbg !4605
  %idxprom49 = sext i32 %46 to i64, !dbg !4607
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4607
  %dynamic_range50 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 79, !dbg !4608
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %dynamic_range50, i64 0, i64 %idxprom49, !dbg !4607
  store float 1.000000e+00, float* %arrayidx51, align 4, !dbg !4609
  br label %if.end52, !dbg !4610

if.end52:                                         ; preds = %if.then48, %if.else45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end44
  br label %do.cond, !dbg !4611

do.cond:                                          ; preds = %if.end53
  %48 = load i32, i32* %i, align 4, !dbg !4612
  %dec = add nsw i32 %48, -1, !dbg !4612
  store i32 %dec, i32* %i, align 4, !dbg !4612
  %tobool54 = icmp ne i32 %48, 0, !dbg !4614
  br i1 %tobool54, label %do.body, label %do.end, !dbg !4614, !llvm.loop !4563

do.end:                                           ; preds = %do.cond
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4615
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 25, !dbg !4617
  %50 = load i32, i32* %eac3, align 4, !dbg !4617
  %tobool55 = icmp ne i32 %50, 0, !dbg !4615
  br i1 %tobool55, label %land.lhs.true56, label %if.end72, !dbg !4618

land.lhs.true56:                                  ; preds = %do.end
  %51 = load i32, i32* %blk.addr, align 4, !dbg !4619
  %tobool57 = icmp ne i32 %51, 0, !dbg !4619
  br i1 %tobool57, label %lor.lhs.false58, label %if.then61, !dbg !4621

lor.lhs.false58:                                  ; preds = %land.lhs.true56
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4622
  %call59 = call i32 @get_bits1(%struct.GetBitContext* %52), !dbg !4624
  %tobool60 = icmp ne i32 %call59, 0, !dbg !4624
  br i1 %tobool60, label %if.then61, label %if.end72, !dbg !4625

if.then61:                                        ; preds = %lor.lhs.false58, %land.lhs.true56
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4626
  %call62 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !4628
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4629
  %spx_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 56, !dbg !4630
  store i32 %call62, i32* %spx_in_use, align 32, !dbg !4631
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4632
  %spx_in_use63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 56, !dbg !4634
  %56 = load i32, i32* %spx_in_use63, align 32, !dbg !4634
  %tobool64 = icmp ne i32 %56, 0, !dbg !4632
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !4635

if.then65:                                        ; preds = %if.then61
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4636
  %58 = load i32, i32* %blk.addr, align 4, !dbg !4639
  %call66 = call i32 @spx_strategy(%struct.AC3DecodeContext* %57, i32 %58), !dbg !4640
  store i32 %call66, i32* %ret, align 4, !dbg !4641
  %cmp67 = icmp slt i32 %call66, 0, !dbg !4642
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !4643

if.then69:                                        ; preds = %if.then65
  %59 = load i32, i32* %ret, align 4, !dbg !4644
  store i32 %59, i32* %retval, align 4, !dbg !4645
  br label %return, !dbg !4645

if.end70:                                         ; preds = %if.then65
  br label %if.end71, !dbg !4646

if.end71:                                         ; preds = %if.end70, %if.then61
  br label %if.end72, !dbg !4647

if.end72:                                         ; preds = %if.end71, %lor.lhs.false58, %do.end
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4648
  %eac373 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 25, !dbg !4650
  %61 = load i32, i32* %eac373, align 4, !dbg !4650
  %tobool74 = icmp ne i32 %61, 0, !dbg !4648
  br i1 %tobool74, label %lor.lhs.false75, label %if.then78, !dbg !4651

lor.lhs.false75:                                  ; preds = %if.end72
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4652
  %spx_in_use76 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 56, !dbg !4654
  %63 = load i32, i32* %spx_in_use76, align 32, !dbg !4654
  %tobool77 = icmp ne i32 %63, 0, !dbg !4652
  br i1 %tobool77, label %if.end91, label %if.then78, !dbg !4655

if.then78:                                        ; preds = %lor.lhs.false75, %if.end72
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4656
  %spx_in_use79 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 56, !dbg !4658
  store i32 0, i32* %spx_in_use79, align 32, !dbg !4659
  store i32 1, i32* %ch, align 4, !dbg !4660
  br label %for.cond80, !dbg !4662

for.cond80:                                       ; preds = %for.inc88, %if.then78
  %65 = load i32, i32* %ch, align 4, !dbg !4663
  %66 = load i32, i32* %fbw_channels, align 4, !dbg !4666
  %cmp81 = icmp sle i32 %65, %66, !dbg !4667
  br i1 %cmp81, label %for.body83, label %for.end90, !dbg !4668

for.body83:                                       ; preds = %for.cond80
  %67 = load i32, i32* %ch, align 4, !dbg !4669
  %idxprom84 = sext i32 %67 to i64, !dbg !4671
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4671
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 57, !dbg !4672
  %arrayidx85 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom84, !dbg !4671
  store i8 0, i8* %arrayidx85, align 1, !dbg !4673
  %69 = load i32, i32* %ch, align 4, !dbg !4674
  %idxprom86 = sext i32 %69 to i64, !dbg !4675
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4675
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 65, !dbg !4676
  %arrayidx87 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom86, !dbg !4675
  store i8 1, i8* %arrayidx87, align 1, !dbg !4677
  br label %for.inc88, !dbg !4678

for.inc88:                                        ; preds = %for.body83
  %71 = load i32, i32* %ch, align 4, !dbg !4679
  %inc89 = add nsw i32 %71, 1, !dbg !4679
  store i32 %inc89, i32* %ch, align 4, !dbg !4679
  br label %for.cond80, !dbg !4681, !llvm.loop !4682

for.end90:                                        ; preds = %for.cond80
  br label %if.end91, !dbg !4684

if.end91:                                         ; preds = %for.end90, %lor.lhs.false75
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4685
  %spx_in_use92 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 56, !dbg !4687
  %73 = load i32, i32* %spx_in_use92, align 32, !dbg !4687
  %tobool93 = icmp ne i32 %73, 0, !dbg !4685
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !4688

if.then94:                                        ; preds = %if.end91
  %74 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4689
  call void @spx_coordinates(%struct.AC3DecodeContext* %74), !dbg !4690
  br label %if.end95, !dbg !4690

if.end95:                                         ; preds = %if.then94, %if.end91
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4691
  %eac396 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 25, !dbg !4693
  %76 = load i32, i32* %eac396, align 4, !dbg !4693
  %tobool97 = icmp ne i32 %76, 0, !dbg !4691
  br i1 %tobool97, label %cond.true, label %cond.false, !dbg !4694

cond.true:                                        ; preds = %if.end95
  %77 = load i32, i32* %blk.addr, align 4, !dbg !4695
  %idxprom98 = sext i32 %77 to i64, !dbg !4697
  %78 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4697
  %cpl_strategy_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %78, i32 0, i32 46, !dbg !4698
  %arrayidx99 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists, i64 0, i64 %idxprom98, !dbg !4697
  %79 = load i32, i32* %arrayidx99, align 4, !dbg !4697
  %tobool100 = icmp ne i32 %79, 0, !dbg !4697
  br i1 %tobool100, label %if.then103, label %if.else109, !dbg !4699

cond.false:                                       ; preds = %if.end95
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4700
  %call101 = call i32 @get_bits1(%struct.GetBitContext* %80), !dbg !4702
  %tobool102 = icmp ne i32 %call101, 0, !dbg !4702
  br i1 %tobool102, label %if.then103, label %if.else109, !dbg !4703

if.then103:                                       ; preds = %cond.false, %cond.true
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4704
  %82 = load i32, i32* %blk.addr, align 4, !dbg !4707
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i32 0, i32 0, !dbg !4708
  %call104 = call i32 @coupling_strategy(%struct.AC3DecodeContext* %81, i32 %82, i8* %arraydecay), !dbg !4709
  store i32 %call104, i32* %ret, align 4, !dbg !4710
  %cmp105 = icmp slt i32 %call104, 0, !dbg !4711
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !4712

if.then107:                                       ; preds = %if.then103
  %83 = load i32, i32* %ret, align 4, !dbg !4713
  store i32 %83, i32* %retval, align 4, !dbg !4714
  br label %return, !dbg !4714

if.end108:                                        ; preds = %if.then103
  br label %if.end124, !dbg !4715

if.else109:                                       ; preds = %cond.false, %cond.true
  %84 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4716
  %eac3110 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %84, i32 0, i32 25, !dbg !4719
  %85 = load i32, i32* %eac3110, align 4, !dbg !4719
  %tobool111 = icmp ne i32 %85, 0, !dbg !4716
  br i1 %tobool111, label %if.end123, label %if.then112, !dbg !4720

if.then112:                                       ; preds = %if.else109
  %86 = load i32, i32* %blk.addr, align 4, !dbg !4721
  %tobool113 = icmp ne i32 %86, 0, !dbg !4721
  br i1 %tobool113, label %if.else115, label %if.then114, !dbg !4724

if.then114:                                       ; preds = %if.then112
  %87 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4725
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %87, i32 0, i32 1, !dbg !4727
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4727
  %89 = bitcast %struct.AVCodecContext* %88 to i8*, !dbg !4725
  call void (i8*, i32, i8*, ...) @av_log(i8* %89, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.47, i32 0, i32 0)), !dbg !4728
  store i32 -1094995529, i32* %retval, align 4, !dbg !4729
  br label %return, !dbg !4729

if.else115:                                       ; preds = %if.then112
  %90 = load i32, i32* %blk.addr, align 4, !dbg !4730
  %sub = sub nsw i32 %90, 1, !dbg !4732
  %idxprom116 = sext i32 %sub to i64, !dbg !4733
  %91 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4733
  %cpl_in_use117 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %91, i32 0, i32 45, !dbg !4734
  %arrayidx118 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use117, i64 0, i64 %idxprom116, !dbg !4733
  %92 = load i32, i32* %arrayidx118, align 4, !dbg !4733
  %93 = load i32, i32* %blk.addr, align 4, !dbg !4735
  %idxprom119 = sext i32 %93 to i64, !dbg !4736
  %94 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4736
  %cpl_in_use120 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %94, i32 0, i32 45, !dbg !4737
  %arrayidx121 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use120, i64 0, i64 %idxprom119, !dbg !4736
  store i32 %92, i32* %arrayidx121, align 4, !dbg !4738
  br label %if.end122

if.end122:                                        ; preds = %if.else115
  br label %if.end123, !dbg !4739

if.end123:                                        ; preds = %if.end122, %if.else109
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end108
  %95 = load i32, i32* %blk.addr, align 4, !dbg !4740
  %idxprom125 = sext i32 %95 to i64, !dbg !4741
  %96 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4741
  %cpl_in_use126 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %96, i32 0, i32 45, !dbg !4742
  %arrayidx127 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use126, i64 0, i64 %idxprom125, !dbg !4741
  %97 = load i32, i32* %arrayidx127, align 4, !dbg !4741
  store i32 %97, i32* %cpl_in_use, align 4, !dbg !4743
  %98 = load i32, i32* %cpl_in_use, align 4, !dbg !4744
  %tobool128 = icmp ne i32 %98, 0, !dbg !4744
  br i1 %tobool128, label %if.then129, label %if.end135, !dbg !4746

if.then129:                                       ; preds = %if.end124
  %99 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4747
  %100 = load i32, i32* %blk.addr, align 4, !dbg !4750
  %call130 = call i32 @coupling_coordinates(%struct.AC3DecodeContext* %99, i32 %100), !dbg !4751
  store i32 %call130, i32* %ret, align 4, !dbg !4752
  %cmp131 = icmp slt i32 %call130, 0, !dbg !4753
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !4754

if.then133:                                       ; preds = %if.then129
  %101 = load i32, i32* %ret, align 4, !dbg !4755
  store i32 %101, i32* %retval, align 4, !dbg !4756
  br label %return, !dbg !4756

if.end134:                                        ; preds = %if.then129
  br label %if.end135, !dbg !4757

if.end135:                                        ; preds = %if.end134, %if.end124
  %102 = load i32, i32* %channel_mode, align 4, !dbg !4758
  %cmp136 = icmp eq i32 %102, 2, !dbg !4760
  br i1 %cmp136, label %if.then138, label %if.end188, !dbg !4761

if.then138:                                       ; preds = %if.end135
  %103 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4762
  %eac3139 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %103, i32 0, i32 25, !dbg !4765
  %104 = load i32, i32* %eac3139, align 4, !dbg !4765
  %tobool140 = icmp ne i32 %104, 0, !dbg !4762
  br i1 %tobool140, label %land.lhs.true141, label %lor.lhs.false143, !dbg !4766

land.lhs.true141:                                 ; preds = %if.then138
  %105 = load i32, i32* %blk.addr, align 4, !dbg !4767
  %tobool142 = icmp ne i32 %105, 0, !dbg !4767
  br i1 %tobool142, label %lor.lhs.false143, label %if.then146, !dbg !4769

lor.lhs.false143:                                 ; preds = %land.lhs.true141, %if.then138
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4770
  %call144 = call i32 @get_bits1(%struct.GetBitContext* %106), !dbg !4772
  %tobool145 = icmp ne i32 %call144, 0, !dbg !4772
  br i1 %tobool145, label %if.then146, label %if.else181, !dbg !4773

if.then146:                                       ; preds = %lor.lhs.false143, %land.lhs.true141
  %107 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4774
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %107, i32 0, i32 86, !dbg !4776
  store i32 4, i32* %num_rematrixing_bands, align 8, !dbg !4777
  %108 = load i32, i32* %cpl_in_use, align 4, !dbg !4778
  %tobool147 = icmp ne i32 %108, 0, !dbg !4778
  br i1 %tobool147, label %land.lhs.true148, label %if.else159, !dbg !4780

land.lhs.true148:                                 ; preds = %if.then146
  %109 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4781
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %109, i32 0, i32 83, !dbg !4783
  %arrayidx149 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !4781
  %110 = load i32, i32* %arrayidx149, align 4, !dbg !4781
  %cmp150 = icmp sle i32 %110, 61, !dbg !4784
  br i1 %cmp150, label %if.then152, label %if.else159, !dbg !4785

if.then152:                                       ; preds = %land.lhs.true148
  %111 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4786
  %start_freq153 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %111, i32 0, i32 83, !dbg !4788
  %arrayidx154 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq153, i64 0, i64 0, !dbg !4786
  %112 = load i32, i32* %arrayidx154, align 4, !dbg !4786
  %cmp155 = icmp eq i32 %112, 37, !dbg !4789
  %conv156 = zext i1 %cmp155 to i32, !dbg !4789
  %add = add nsw i32 1, %conv156, !dbg !4790
  %113 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4791
  %num_rematrixing_bands157 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %113, i32 0, i32 86, !dbg !4792
  %114 = load i32, i32* %num_rematrixing_bands157, align 8, !dbg !4793
  %sub158 = sub nsw i32 %114, %add, !dbg !4793
  store i32 %sub158, i32* %num_rematrixing_bands157, align 8, !dbg !4793
  br label %if.end169, !dbg !4794

if.else159:                                       ; preds = %land.lhs.true148, %if.then146
  %115 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4795
  %spx_in_use160 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %115, i32 0, i32 56, !dbg !4798
  %116 = load i32, i32* %spx_in_use160, align 32, !dbg !4798
  %tobool161 = icmp ne i32 %116, 0, !dbg !4795
  br i1 %tobool161, label %land.lhs.true162, label %if.end168, !dbg !4799

land.lhs.true162:                                 ; preds = %if.else159
  %117 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4800
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %117, i32 0, i32 59, !dbg !4802
  %118 = load i32, i32* %spx_src_start_freq, align 4, !dbg !4802
  %cmp163 = icmp sle i32 %118, 61, !dbg !4803
  br i1 %cmp163, label %if.then165, label %if.end168, !dbg !4804

if.then165:                                       ; preds = %land.lhs.true162
  %119 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4805
  %num_rematrixing_bands166 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %119, i32 0, i32 86, !dbg !4807
  %120 = load i32, i32* %num_rematrixing_bands166, align 8, !dbg !4808
  %dec167 = add nsw i32 %120, -1, !dbg !4808
  store i32 %dec167, i32* %num_rematrixing_bands166, align 8, !dbg !4808
  br label %if.end168, !dbg !4809

if.end168:                                        ; preds = %if.then165, %land.lhs.true162, %if.else159
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.then152
  store i32 0, i32* %bnd, align 4, !dbg !4810
  br label %for.cond170, !dbg !4812

for.cond170:                                      ; preds = %for.inc178, %if.end169
  %121 = load i32, i32* %bnd, align 4, !dbg !4813
  %122 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4816
  %num_rematrixing_bands171 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %122, i32 0, i32 86, !dbg !4817
  %123 = load i32, i32* %num_rematrixing_bands171, align 8, !dbg !4817
  %cmp172 = icmp slt i32 %121, %123, !dbg !4818
  br i1 %cmp172, label %for.body174, label %for.end180, !dbg !4819

for.body174:                                      ; preds = %for.cond170
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4820
  %call175 = call i32 @get_bits1(%struct.GetBitContext* %124), !dbg !4821
  %125 = load i32, i32* %bnd, align 4, !dbg !4822
  %idxprom176 = sext i32 %125 to i64, !dbg !4823
  %126 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4823
  %rematrixing_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %126, i32 0, i32 87, !dbg !4824
  %arrayidx177 = getelementptr inbounds [4 x i32], [4 x i32]* %rematrixing_flags, i64 0, i64 %idxprom176, !dbg !4823
  store i32 %call175, i32* %arrayidx177, align 4, !dbg !4825
  br label %for.inc178, !dbg !4823

for.inc178:                                       ; preds = %for.body174
  %127 = load i32, i32* %bnd, align 4, !dbg !4826
  %inc179 = add nsw i32 %127, 1, !dbg !4826
  store i32 %inc179, i32* %bnd, align 4, !dbg !4826
  br label %for.cond170, !dbg !4828, !llvm.loop !4829

for.end180:                                       ; preds = %for.cond170
  br label %if.end187, !dbg !4831

if.else181:                                       ; preds = %lor.lhs.false143
  %128 = load i32, i32* %blk.addr, align 4, !dbg !4832
  %tobool182 = icmp ne i32 %128, 0, !dbg !4832
  br i1 %tobool182, label %if.end186, label %if.then183, !dbg !4835

if.then183:                                       ; preds = %if.else181
  %129 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4836
  %avctx184 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %129, i32 0, i32 1, !dbg !4838
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx184, align 8, !dbg !4838
  %131 = bitcast %struct.AVCodecContext* %130 to i8*, !dbg !4836
  call void (i8*, i32, i8*, ...) @av_log(i8* %131, i32 24, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.48, i32 0, i32 0)), !dbg !4839
  %132 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4840
  %num_rematrixing_bands185 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %132, i32 0, i32 86, !dbg !4841
  store i32 0, i32* %num_rematrixing_bands185, align 8, !dbg !4842
  br label %if.end186, !dbg !4843

if.end186:                                        ; preds = %if.then183, %if.else181
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %for.end180
  br label %if.end188, !dbg !4844

if.end188:                                        ; preds = %if.end187, %if.end135
  %133 = load i32, i32* %cpl_in_use, align 4, !dbg !4845
  %tobool189 = icmp ne i32 %133, 0, !dbg !4847
  %lnot190 = xor i1 %tobool189, true, !dbg !4847
  %lnot.ext191 = zext i1 %lnot190 to i32, !dbg !4847
  store i32 %lnot.ext191, i32* %ch, align 4, !dbg !4848
  br label %for.cond192, !dbg !4849

for.cond192:                                      ; preds = %for.inc219, %if.end188
  %134 = load i32, i32* %ch, align 4, !dbg !4850
  %135 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4853
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %135, i32 0, i32 71, !dbg !4854
  %136 = load i32, i32* %channels, align 8, !dbg !4854
  %cmp193 = icmp sle i32 %134, %136, !dbg !4855
  br i1 %cmp193, label %for.body195, label %for.end221, !dbg !4856

for.body195:                                      ; preds = %for.cond192
  %137 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4857
  %eac3196 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %137, i32 0, i32 25, !dbg !4860
  %138 = load i32, i32* %eac3196, align 4, !dbg !4860
  %tobool197 = icmp ne i32 %138, 0, !dbg !4857
  br i1 %tobool197, label %if.end207, label %if.then198, !dbg !4861

if.then198:                                       ; preds = %for.body195
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4862
  %140 = load i32, i32* %ch, align 4, !dbg !4863
  %141 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4864
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %141, i32 0, i32 72, !dbg !4865
  %142 = load i32, i32* %lfe_ch, align 4, !dbg !4865
  %cmp199 = icmp eq i32 %140, %142, !dbg !4866
  %conv200 = zext i1 %cmp199 to i32, !dbg !4866
  %sub201 = sub nsw i32 2, %conv200, !dbg !4867
  %call202 = call i32 @get_bits(%struct.GetBitContext* %139, i32 %sub201), !dbg !4868
  %143 = load i32, i32* %ch, align 4, !dbg !4869
  %idxprom203 = sext i32 %143 to i64, !dbg !4870
  %144 = load i32, i32* %blk.addr, align 4, !dbg !4871
  %idxprom204 = sext i32 %144 to i64, !dbg !4870
  %145 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4870
  %exp_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %145, i32 0, i32 90, !dbg !4872
  %arrayidx205 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy, i64 0, i64 %idxprom204, !dbg !4870
  %arrayidx206 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx205, i64 0, i64 %idxprom203, !dbg !4870
  store i32 %call202, i32* %arrayidx206, align 4, !dbg !4873
  br label %if.end207, !dbg !4870

if.end207:                                        ; preds = %if.then198, %for.body195
  %146 = load i32, i32* %ch, align 4, !dbg !4874
  %idxprom208 = sext i32 %146 to i64, !dbg !4876
  %147 = load i32, i32* %blk.addr, align 4, !dbg !4877
  %idxprom209 = sext i32 %147 to i64, !dbg !4876
  %148 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4876
  %exp_strategy210 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %148, i32 0, i32 90, !dbg !4878
  %arrayidx211 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy210, i64 0, i64 %idxprom209, !dbg !4876
  %arrayidx212 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx211, i64 0, i64 %idxprom208, !dbg !4876
  %149 = load i32, i32* %arrayidx212, align 4, !dbg !4876
  %cmp213 = icmp ne i32 %149, 0, !dbg !4879
  br i1 %cmp213, label %if.then215, label %if.end218, !dbg !4880

if.then215:                                       ; preds = %if.end207
  %150 = load i32, i32* %ch, align 4, !dbg !4881
  %idxprom216 = sext i32 %150 to i64, !dbg !4882
  %arrayidx217 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom216, !dbg !4882
  store i8 3, i8* %arrayidx217, align 1, !dbg !4883
  br label %if.end218, !dbg !4882

if.end218:                                        ; preds = %if.then215, %if.end207
  br label %for.inc219, !dbg !4884

for.inc219:                                       ; preds = %if.end218
  %151 = load i32, i32* %ch, align 4, !dbg !4885
  %inc220 = add nsw i32 %151, 1, !dbg !4885
  store i32 %inc220, i32* %ch, align 4, !dbg !4885
  br label %for.cond192, !dbg !4887, !llvm.loop !4888

for.end221:                                       ; preds = %for.cond192
  store i32 1, i32* %ch, align 4, !dbg !4890
  br label %for.cond222, !dbg !4892

for.cond222:                                      ; preds = %for.inc296, %for.end221
  %152 = load i32, i32* %ch, align 4, !dbg !4893
  %153 = load i32, i32* %fbw_channels, align 4, !dbg !4896
  %cmp223 = icmp sle i32 %152, %153, !dbg !4897
  br i1 %cmp223, label %for.body225, label %for.end298, !dbg !4898

for.body225:                                      ; preds = %for.cond222
  %154 = load i32, i32* %ch, align 4, !dbg !4899
  %idxprom226 = sext i32 %154 to i64, !dbg !4901
  %155 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4901
  %start_freq227 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %155, i32 0, i32 83, !dbg !4902
  %arrayidx228 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq227, i64 0, i64 %idxprom226, !dbg !4901
  store i32 0, i32* %arrayidx228, align 4, !dbg !4903
  %156 = load i32, i32* %ch, align 4, !dbg !4904
  %idxprom229 = sext i32 %156 to i64, !dbg !4906
  %157 = load i32, i32* %blk.addr, align 4, !dbg !4907
  %idxprom230 = sext i32 %157 to i64, !dbg !4906
  %158 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4906
  %exp_strategy231 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %158, i32 0, i32 90, !dbg !4908
  %arrayidx232 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy231, i64 0, i64 %idxprom230, !dbg !4906
  %arrayidx233 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx232, i64 0, i64 %idxprom229, !dbg !4906
  %159 = load i32, i32* %arrayidx233, align 4, !dbg !4906
  %cmp234 = icmp ne i32 %159, 0, !dbg !4909
  br i1 %cmp234, label %if.then236, label %if.end295, !dbg !4910

if.then236:                                       ; preds = %for.body225
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !4911, metadata !1854), !dbg !4913
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !4914, metadata !1854), !dbg !4915
  %160 = load i32, i32* %ch, align 4, !dbg !4916
  %idxprom237 = sext i32 %160 to i64, !dbg !4917
  %161 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4917
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %161, i32 0, i32 84, !dbg !4918
  %arrayidx238 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom237, !dbg !4917
  %162 = load i32, i32* %arrayidx238, align 4, !dbg !4917
  store i32 %162, i32* %prev, align 4, !dbg !4915
  %163 = load i32, i32* %ch, align 4, !dbg !4919
  %idxprom239 = sext i32 %163 to i64, !dbg !4921
  %164 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4921
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %164, i32 0, i32 47, !dbg !4922
  %arrayidx240 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom239, !dbg !4921
  %165 = load i32, i32* %arrayidx240, align 4, !dbg !4921
  %tobool241 = icmp ne i32 %165, 0, !dbg !4921
  br i1 %tobool241, label %if.then242, label %if.else248, !dbg !4923

if.then242:                                       ; preds = %if.then236
  %166 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4924
  %start_freq243 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %166, i32 0, i32 83, !dbg !4925
  %arrayidx244 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq243, i64 0, i64 0, !dbg !4924
  %167 = load i32, i32* %arrayidx244, align 4, !dbg !4924
  %168 = load i32, i32* %ch, align 4, !dbg !4926
  %idxprom245 = sext i32 %168 to i64, !dbg !4927
  %169 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4927
  %end_freq246 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %169, i32 0, i32 84, !dbg !4928
  %arrayidx247 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq246, i64 0, i64 %idxprom245, !dbg !4927
  store i32 %167, i32* %arrayidx247, align 4, !dbg !4929
  br label %if.end270, !dbg !4927

if.else248:                                       ; preds = %if.then236
  %170 = load i32, i32* %ch, align 4, !dbg !4930
  %idxprom249 = sext i32 %170 to i64, !dbg !4932
  %171 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4932
  %channel_uses_spx250 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %171, i32 0, i32 57, !dbg !4933
  %arrayidx251 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx250, i64 0, i64 %idxprom249, !dbg !4932
  %172 = load i8, i8* %arrayidx251, align 1, !dbg !4932
  %tobool252 = icmp ne i8 %172, 0, !dbg !4932
  br i1 %tobool252, label %if.then253, label %if.else258, !dbg !4934

if.then253:                                       ; preds = %if.else248
  %173 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4935
  %spx_src_start_freq254 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %173, i32 0, i32 59, !dbg !4936
  %174 = load i32, i32* %spx_src_start_freq254, align 4, !dbg !4936
  %175 = load i32, i32* %ch, align 4, !dbg !4937
  %idxprom255 = sext i32 %175 to i64, !dbg !4938
  %176 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4938
  %end_freq256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %176, i32 0, i32 84, !dbg !4939
  %arrayidx257 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq256, i64 0, i64 %idxprom255, !dbg !4938
  store i32 %174, i32* %arrayidx257, align 4, !dbg !4940
  br label %if.end269, !dbg !4938

if.else258:                                       ; preds = %if.else248
  call void @llvm.dbg.declare(metadata i32* %bandwidth_code, metadata !4941, metadata !1854), !dbg !4943
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !4944
  %call259 = call i32 @get_bits(%struct.GetBitContext* %177, i32 6), !dbg !4945
  store i32 %call259, i32* %bandwidth_code, align 4, !dbg !4943
  %178 = load i32, i32* %bandwidth_code, align 4, !dbg !4946
  %cmp260 = icmp sgt i32 %178, 60, !dbg !4948
  br i1 %cmp260, label %if.then262, label %if.end264, !dbg !4949

if.then262:                                       ; preds = %if.else258
  %179 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4950
  %avctx263 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %179, i32 0, i32 1, !dbg !4952
  %180 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx263, align 8, !dbg !4952
  %181 = bitcast %struct.AVCodecContext* %180 to i8*, !dbg !4950
  %182 = load i32, i32* %bandwidth_code, align 4, !dbg !4953
  call void (i8*, i32, i8*, ...) @av_log(i8* %181, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i32 %182), !dbg !4954
  store i32 -1094995529, i32* %retval, align 4, !dbg !4955
  br label %return, !dbg !4955

if.end264:                                        ; preds = %if.else258
  %183 = load i32, i32* %bandwidth_code, align 4, !dbg !4956
  %mul = mul nsw i32 %183, 3, !dbg !4957
  %add265 = add nsw i32 %mul, 73, !dbg !4958
  %184 = load i32, i32* %ch, align 4, !dbg !4959
  %idxprom266 = sext i32 %184 to i64, !dbg !4960
  %185 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4960
  %end_freq267 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %185, i32 0, i32 84, !dbg !4961
  %arrayidx268 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq267, i64 0, i64 %idxprom266, !dbg !4960
  store i32 %add265, i32* %arrayidx268, align 4, !dbg !4962
  br label %if.end269

if.end269:                                        ; preds = %if.end264, %if.then253
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then242
  %186 = load i32, i32* %ch, align 4, !dbg !4963
  %idxprom271 = sext i32 %186 to i64, !dbg !4964
  %187 = load i32, i32* %blk.addr, align 4, !dbg !4965
  %idxprom272 = sext i32 %187 to i64, !dbg !4964
  %188 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4964
  %exp_strategy273 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %188, i32 0, i32 90, !dbg !4966
  %arrayidx274 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy273, i64 0, i64 %idxprom272, !dbg !4964
  %arrayidx275 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx274, i64 0, i64 %idxprom271, !dbg !4964
  %189 = load i32, i32* %arrayidx275, align 4, !dbg !4964
  %sub276 = sub nsw i32 %189, 1, !dbg !4967
  %shl = shl i32 3, %sub276, !dbg !4968
  store i32 %shl, i32* %group_size, align 4, !dbg !4969
  %190 = load i32, i32* %ch, align 4, !dbg !4970
  %idxprom277 = sext i32 %190 to i64, !dbg !4971
  %191 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4971
  %end_freq278 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %191, i32 0, i32 84, !dbg !4972
  %arrayidx279 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq278, i64 0, i64 %idxprom277, !dbg !4971
  %192 = load i32, i32* %arrayidx279, align 4, !dbg !4971
  %193 = load i32, i32* %group_size, align 4, !dbg !4973
  %add280 = add nsw i32 %192, %193, !dbg !4974
  %sub281 = sub nsw i32 %add280, 4, !dbg !4975
  %194 = load i32, i32* %group_size, align 4, !dbg !4976
  %div = sdiv i32 %sub281, %194, !dbg !4977
  %195 = load i32, i32* %ch, align 4, !dbg !4978
  %idxprom282 = sext i32 %195 to i64, !dbg !4979
  %196 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4979
  %num_exp_groups = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %196, i32 0, i32 88, !dbg !4980
  %arrayidx283 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups, i64 0, i64 %idxprom282, !dbg !4979
  store i32 %div, i32* %arrayidx283, align 4, !dbg !4981
  %197 = load i32, i32* %blk.addr, align 4, !dbg !4982
  %cmp284 = icmp sgt i32 %197, 0, !dbg !4984
  br i1 %cmp284, label %land.lhs.true286, label %if.end294, !dbg !4985

land.lhs.true286:                                 ; preds = %if.end270
  %198 = load i32, i32* %ch, align 4, !dbg !4986
  %idxprom287 = sext i32 %198 to i64, !dbg !4988
  %199 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !4988
  %end_freq288 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %199, i32 0, i32 84, !dbg !4989
  %arrayidx289 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq288, i64 0, i64 %idxprom287, !dbg !4988
  %200 = load i32, i32* %arrayidx289, align 4, !dbg !4988
  %201 = load i32, i32* %prev, align 4, !dbg !4990
  %cmp290 = icmp ne i32 %200, %201, !dbg !4991
  br i1 %cmp290, label %if.then292, label %if.end294, !dbg !4992

if.then292:                                       ; preds = %land.lhs.true286
  %arraydecay293 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i32 0, i32 0, !dbg !4993
  call void @llvm.memset.p0i8.i64(i8* %arraydecay293, i8 3, i64 7, i32 1, i1 false), !dbg !4993
  br label %if.end294, !dbg !4993

if.end294:                                        ; preds = %if.then292, %land.lhs.true286, %if.end270
  br label %if.end295, !dbg !4994

if.end295:                                        ; preds = %if.end294, %for.body225
  br label %for.inc296, !dbg !4995

for.inc296:                                       ; preds = %if.end295
  %202 = load i32, i32* %ch, align 4, !dbg !4996
  %inc297 = add nsw i32 %202, 1, !dbg !4996
  store i32 %inc297, i32* %ch, align 4, !dbg !4996
  br label %for.cond222, !dbg !4998, !llvm.loop !4999

for.end298:                                       ; preds = %for.cond222
  %203 = load i32, i32* %cpl_in_use, align 4, !dbg !5001
  %tobool299 = icmp ne i32 %203, 0, !dbg !5001
  br i1 %tobool299, label %land.lhs.true300, label %if.end322, !dbg !5003

land.lhs.true300:                                 ; preds = %for.end298
  %204 = load i32, i32* %blk.addr, align 4, !dbg !5004
  %idxprom301 = sext i32 %204 to i64, !dbg !5006
  %205 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5006
  %exp_strategy302 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %205, i32 0, i32 90, !dbg !5007
  %arrayidx303 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy302, i64 0, i64 %idxprom301, !dbg !5006
  %arrayidx304 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx303, i64 0, i64 0, !dbg !5006
  %206 = load i32, i32* %arrayidx304, align 4, !dbg !5006
  %cmp305 = icmp ne i32 %206, 0, !dbg !5008
  br i1 %cmp305, label %if.then307, label %if.end322, !dbg !5009

if.then307:                                       ; preds = %land.lhs.true300
  %207 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5010
  %end_freq308 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %207, i32 0, i32 84, !dbg !5012
  %arrayidx309 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq308, i64 0, i64 0, !dbg !5010
  %208 = load i32, i32* %arrayidx309, align 8, !dbg !5010
  %209 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5013
  %start_freq310 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %209, i32 0, i32 83, !dbg !5014
  %arrayidx311 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq310, i64 0, i64 0, !dbg !5013
  %210 = load i32, i32* %arrayidx311, align 4, !dbg !5013
  %sub312 = sub nsw i32 %208, %210, !dbg !5015
  %211 = load i32, i32* %blk.addr, align 4, !dbg !5016
  %idxprom313 = sext i32 %211 to i64, !dbg !5017
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5017
  %exp_strategy314 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 90, !dbg !5018
  %arrayidx315 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy314, i64 0, i64 %idxprom313, !dbg !5017
  %arrayidx316 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx315, i64 0, i64 0, !dbg !5017
  %213 = load i32, i32* %arrayidx316, align 4, !dbg !5017
  %sub317 = sub nsw i32 %213, 1, !dbg !5019
  %shl318 = shl i32 3, %sub317, !dbg !5020
  %div319 = sdiv i32 %sub312, %shl318, !dbg !5021
  %214 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5022
  %num_exp_groups320 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %214, i32 0, i32 88, !dbg !5023
  %arrayidx321 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups320, i64 0, i64 0, !dbg !5022
  store i32 %div319, i32* %arrayidx321, align 4, !dbg !5024
  br label %if.end322, !dbg !5025

if.end322:                                        ; preds = %if.then307, %land.lhs.true300, %for.end298
  %215 = load i32, i32* %cpl_in_use, align 4, !dbg !5026
  %tobool323 = icmp ne i32 %215, 0, !dbg !5028
  %lnot324 = xor i1 %tobool323, true, !dbg !5028
  %lnot.ext325 = zext i1 %lnot324 to i32, !dbg !5028
  store i32 %lnot.ext325, i32* %ch, align 4, !dbg !5029
  br label %for.cond326, !dbg !5030

for.cond326:                                      ; preds = %for.inc387, %if.end322
  %216 = load i32, i32* %ch, align 4, !dbg !5031
  %217 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5034
  %channels327 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %217, i32 0, i32 71, !dbg !5035
  %218 = load i32, i32* %channels327, align 8, !dbg !5035
  %cmp328 = icmp sle i32 %216, %218, !dbg !5036
  br i1 %cmp328, label %for.body330, label %for.end389, !dbg !5037

for.body330:                                      ; preds = %for.cond326
  %219 = load i32, i32* %ch, align 4, !dbg !5038
  %idxprom331 = sext i32 %219 to i64, !dbg !5041
  %220 = load i32, i32* %blk.addr, align 4, !dbg !5042
  %idxprom332 = sext i32 %220 to i64, !dbg !5041
  %221 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5041
  %exp_strategy333 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %221, i32 0, i32 90, !dbg !5043
  %arrayidx334 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy333, i64 0, i64 %idxprom332, !dbg !5041
  %arrayidx335 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx334, i64 0, i64 %idxprom331, !dbg !5041
  %222 = load i32, i32* %arrayidx335, align 4, !dbg !5041
  %cmp336 = icmp ne i32 %222, 0, !dbg !5044
  br i1 %cmp336, label %if.then338, label %if.end386, !dbg !5045

if.then338:                                       ; preds = %for.body330
  %223 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5046
  %call339 = call i32 @get_bits(%struct.GetBitContext* %223, i32 4), !dbg !5048
  %224 = load i32, i32* %ch, align 4, !dbg !5049
  %tobool340 = icmp ne i32 %224, 0, !dbg !5050
  %lnot341 = xor i1 %tobool340, true, !dbg !5050
  %lnot.ext342 = zext i1 %lnot341 to i32, !dbg !5050
  %shl343 = shl i32 %call339, %lnot.ext342, !dbg !5051
  %conv344 = trunc i32 %shl343 to i8, !dbg !5048
  %225 = load i32, i32* %ch, align 4, !dbg !5052
  %idxprom345 = sext i32 %225 to i64, !dbg !5053
  %226 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5053
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %226, i32 0, i32 89, !dbg !5054
  %arrayidx346 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom345, !dbg !5053
  %arrayidx347 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx346, i64 0, i64 0, !dbg !5053
  store i8 %conv344, i8* %arrayidx347, align 8, !dbg !5055
  %227 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5056
  %228 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5058
  %229 = load i32, i32* %ch, align 4, !dbg !5059
  %idxprom348 = sext i32 %229 to i64, !dbg !5060
  %230 = load i32, i32* %blk.addr, align 4, !dbg !5061
  %idxprom349 = sext i32 %230 to i64, !dbg !5060
  %231 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5060
  %exp_strategy350 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %231, i32 0, i32 90, !dbg !5062
  %arrayidx351 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy350, i64 0, i64 %idxprom349, !dbg !5060
  %arrayidx352 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx351, i64 0, i64 %idxprom348, !dbg !5060
  %232 = load i32, i32* %arrayidx352, align 4, !dbg !5060
  %233 = load i32, i32* %ch, align 4, !dbg !5063
  %idxprom353 = sext i32 %233 to i64, !dbg !5064
  %234 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5064
  %num_exp_groups354 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %234, i32 0, i32 88, !dbg !5065
  %arrayidx355 = getelementptr inbounds [7 x i32], [7 x i32]* %num_exp_groups354, i64 0, i64 %idxprom353, !dbg !5064
  %235 = load i32, i32* %arrayidx355, align 4, !dbg !5064
  %236 = load i32, i32* %ch, align 4, !dbg !5066
  %idxprom356 = sext i32 %236 to i64, !dbg !5067
  %237 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5067
  %dexps357 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %237, i32 0, i32 89, !dbg !5068
  %arrayidx358 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps357, i64 0, i64 %idxprom356, !dbg !5067
  %arrayidx359 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx358, i64 0, i64 0, !dbg !5067
  %238 = load i8, i8* %arrayidx359, align 8, !dbg !5067
  %239 = load i32, i32* %ch, align 4, !dbg !5069
  %idxprom360 = sext i32 %239 to i64, !dbg !5070
  %240 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5070
  %start_freq361 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %240, i32 0, i32 83, !dbg !5071
  %arrayidx362 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq361, i64 0, i64 %idxprom360, !dbg !5070
  %241 = load i32, i32* %arrayidx362, align 4, !dbg !5070
  %242 = load i32, i32* %ch, align 4, !dbg !5072
  %tobool363 = icmp ne i32 %242, 0, !dbg !5073
  %lnot364 = xor i1 %tobool363, true, !dbg !5073
  %lnot366 = xor i1 %lnot364, true, !dbg !5074
  %lnot.ext367 = zext i1 %lnot366 to i32, !dbg !5074
  %add368 = add nsw i32 %241, %lnot.ext367, !dbg !5075
  %idxprom369 = sext i32 %add368 to i64, !dbg !5076
  %243 = load i32, i32* %ch, align 4, !dbg !5077
  %idxprom370 = sext i32 %243 to i64, !dbg !5076
  %244 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5076
  %dexps371 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %244, i32 0, i32 89, !dbg !5078
  %arrayidx372 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps371, i64 0, i64 %idxprom370, !dbg !5076
  %arrayidx373 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx372, i64 0, i64 %idxprom369, !dbg !5076
  %call374 = call i32 @decode_exponents(%struct.AC3DecodeContext* %227, %struct.GetBitContext* %228, i32 %232, i32 %235, i8 zeroext %238, i8* %arrayidx373), !dbg !5079
  %tobool375 = icmp ne i32 %call374, 0, !dbg !5079
  br i1 %tobool375, label %if.then376, label %if.end377, !dbg !5080

if.then376:                                       ; preds = %if.then338
  store i32 -1094995529, i32* %retval, align 4, !dbg !5081
  br label %return, !dbg !5081

if.end377:                                        ; preds = %if.then338
  %245 = load i32, i32* %ch, align 4, !dbg !5083
  %cmp378 = icmp ne i32 %245, 0, !dbg !5085
  br i1 %cmp378, label %land.lhs.true380, label %if.end385, !dbg !5086

land.lhs.true380:                                 ; preds = %if.end377
  %246 = load i32, i32* %ch, align 4, !dbg !5087
  %247 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5089
  %lfe_ch381 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %247, i32 0, i32 72, !dbg !5090
  %248 = load i32, i32* %lfe_ch381, align 4, !dbg !5090
  %cmp382 = icmp ne i32 %246, %248, !dbg !5091
  br i1 %cmp382, label %if.then384, label %if.end385, !dbg !5092

if.then384:                                       ; preds = %land.lhs.true380
  %249 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5093
  call void @skip_bits(%struct.GetBitContext* %249, i32 2), !dbg !5094
  br label %if.end385, !dbg !5094

if.end385:                                        ; preds = %if.then384, %land.lhs.true380, %if.end377
  br label %if.end386, !dbg !5095

if.end386:                                        ; preds = %if.end385, %for.body330
  br label %for.inc387, !dbg !5096

for.inc387:                                       ; preds = %if.end386
  %250 = load i32, i32* %ch, align 4, !dbg !5097
  %inc388 = add nsw i32 %250, 1, !dbg !5097
  store i32 %inc388, i32* %ch, align 4, !dbg !5097
  br label %for.cond326, !dbg !5099, !llvm.loop !5100

for.end389:                                       ; preds = %for.cond326
  %251 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5102
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %251, i32 0, i32 41, !dbg !5104
  %252 = load i32, i32* %bit_allocation_syntax, align 8, !dbg !5104
  %tobool390 = icmp ne i32 %252, 0, !dbg !5102
  br i1 %tobool390, label %if.then391, label %if.end453, !dbg !5105

if.then391:                                       ; preds = %for.end389
  %253 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5106
  %call392 = call i32 @get_bits1(%struct.GetBitContext* %253), !dbg !5109
  %tobool393 = icmp ne i32 %call392, 0, !dbg !5109
  br i1 %tobool393, label %if.then394, label %if.else447, !dbg !5110

if.then394:                                       ; preds = %if.then391
  %254 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5111
  %call395 = call i32 @get_bits(%struct.GetBitContext* %254, i32 2), !dbg !5113
  %idxprom396 = zext i32 %call395 to i64, !dbg !5114
  %arrayidx397 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_slow_decay_tab, i64 0, i64 %idxprom396, !dbg !5114
  %255 = load i8, i8* %arrayidx397, align 1, !dbg !5114
  %conv398 = zext i8 %255 to i32, !dbg !5114
  %256 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5115
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %256, i32 0, i32 91, !dbg !5116
  %sr_shift = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 1, !dbg !5117
  %257 = load i32, i32* %sr_shift, align 4, !dbg !5117
  %shr = ashr i32 %conv398, %257, !dbg !5118
  %258 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5119
  %bit_alloc_params399 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %258, i32 0, i32 91, !dbg !5120
  %slow_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params399, i32 0, i32 3, !dbg !5121
  store i32 %shr, i32* %slow_decay, align 4, !dbg !5122
  %259 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5123
  %call400 = call i32 @get_bits(%struct.GetBitContext* %259, i32 2), !dbg !5124
  %idxprom401 = zext i32 %call400 to i64, !dbg !5125
  %arrayidx402 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_ac3_fast_decay_tab, i64 0, i64 %idxprom401, !dbg !5125
  %260 = load i8, i8* %arrayidx402, align 1, !dbg !5125
  %conv403 = zext i8 %260 to i32, !dbg !5125
  %261 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5126
  %bit_alloc_params404 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %261, i32 0, i32 91, !dbg !5127
  %sr_shift405 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params404, i32 0, i32 1, !dbg !5128
  %262 = load i32, i32* %sr_shift405, align 4, !dbg !5128
  %shr406 = ashr i32 %conv403, %262, !dbg !5129
  %263 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5130
  %bit_alloc_params407 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %263, i32 0, i32 91, !dbg !5131
  %fast_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params407, i32 0, i32 4, !dbg !5132
  store i32 %shr406, i32* %fast_decay, align 16, !dbg !5133
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5134
  %call408 = call i32 @get_bits(%struct.GetBitContext* %264, i32 2), !dbg !5135
  %idxprom409 = zext i32 %call408 to i64, !dbg !5136
  %arrayidx410 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_slow_gain_tab, i64 0, i64 %idxprom409, !dbg !5136
  %265 = load i16, i16* %arrayidx410, align 2, !dbg !5136
  %conv411 = zext i16 %265 to i32, !dbg !5136
  %266 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5137
  %bit_alloc_params412 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %266, i32 0, i32 91, !dbg !5138
  %slow_gain = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params412, i32 0, i32 2, !dbg !5139
  store i32 %conv411, i32* %slow_gain, align 8, !dbg !5140
  %267 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5141
  %call413 = call i32 @get_bits(%struct.GetBitContext* %267, i32 2), !dbg !5142
  %idxprom414 = zext i32 %call413 to i64, !dbg !5143
  %arrayidx415 = getelementptr inbounds [4 x i16], [4 x i16]* @ff_ac3_db_per_bit_tab, i64 0, i64 %idxprom414, !dbg !5143
  %268 = load i16, i16* %arrayidx415, align 2, !dbg !5143
  %conv416 = zext i16 %268 to i32, !dbg !5143
  %269 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5144
  %bit_alloc_params417 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %269, i32 0, i32 91, !dbg !5145
  %db_per_bit = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params417, i32 0, i32 5, !dbg !5146
  store i32 %conv416, i32* %db_per_bit, align 4, !dbg !5147
  %270 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5148
  %call418 = call i32 @get_bits(%struct.GetBitContext* %270, i32 3), !dbg !5149
  %idxprom419 = zext i32 %call418 to i64, !dbg !5150
  %arrayidx420 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_floor_tab, i64 0, i64 %idxprom419, !dbg !5150
  %271 = load i16, i16* %arrayidx420, align 2, !dbg !5150
  %conv421 = sext i16 %271 to i32, !dbg !5150
  %272 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5151
  %bit_alloc_params422 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %272, i32 0, i32 91, !dbg !5152
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params422, i32 0, i32 6, !dbg !5153
  store i32 %conv421, i32* %floor, align 8, !dbg !5154
  %273 = load i32, i32* %cpl_in_use, align 4, !dbg !5155
  %tobool423 = icmp ne i32 %273, 0, !dbg !5157
  %lnot424 = xor i1 %tobool423, true, !dbg !5157
  %lnot.ext425 = zext i1 %lnot424 to i32, !dbg !5157
  store i32 %lnot.ext425, i32* %ch, align 4, !dbg !5158
  br label %for.cond426, !dbg !5159

for.cond426:                                      ; preds = %for.inc444, %if.then394
  %274 = load i32, i32* %ch, align 4, !dbg !5160
  %275 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5163
  %channels427 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %275, i32 0, i32 71, !dbg !5164
  %276 = load i32, i32* %channels427, align 8, !dbg !5164
  %cmp428 = icmp sle i32 %274, %276, !dbg !5165
  br i1 %cmp428, label %for.body430, label %for.end446, !dbg !5166

for.body430:                                      ; preds = %for.cond426
  %277 = load i32, i32* %ch, align 4, !dbg !5167
  %idxprom431 = sext i32 %277 to i64, !dbg !5168
  %arrayidx432 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom431, !dbg !5168
  %278 = load i8, i8* %arrayidx432, align 1, !dbg !5168
  %conv433 = zext i8 %278 to i32, !dbg !5169
  %cmp434 = icmp sgt i32 %conv433, 2, !dbg !5170
  br i1 %cmp434, label %cond.true436, label %cond.false440, !dbg !5169

cond.true436:                                     ; preds = %for.body430
  %279 = load i32, i32* %ch, align 4, !dbg !5171
  %idxprom437 = sext i32 %279 to i64, !dbg !5172
  %arrayidx438 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom437, !dbg !5172
  %280 = load i8, i8* %arrayidx438, align 1, !dbg !5172
  %conv439 = zext i8 %280 to i32, !dbg !5173
  br label %cond.end, !dbg !5174

cond.false440:                                    ; preds = %for.body430
  br label %cond.end, !dbg !5175

cond.end:                                         ; preds = %cond.false440, %cond.true436
  %cond = phi i32 [ %conv439, %cond.true436 ], [ 2, %cond.false440 ], !dbg !5177
  %conv441 = trunc i32 %cond to i8, !dbg !5179
  %281 = load i32, i32* %ch, align 4, !dbg !5180
  %idxprom442 = sext i32 %281 to i64, !dbg !5181
  %arrayidx443 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom442, !dbg !5181
  store i8 %conv441, i8* %arrayidx443, align 1, !dbg !5182
  br label %for.inc444, !dbg !5181

for.inc444:                                       ; preds = %cond.end
  %282 = load i32, i32* %ch, align 4, !dbg !5183
  %inc445 = add nsw i32 %282, 1, !dbg !5183
  store i32 %inc445, i32* %ch, align 4, !dbg !5183
  br label %for.cond426, !dbg !5184, !llvm.loop !5185

for.end446:                                       ; preds = %for.cond426
  br label %if.end452, !dbg !5187

if.else447:                                       ; preds = %if.then391
  %283 = load i32, i32* %blk.addr, align 4, !dbg !5188
  %tobool448 = icmp ne i32 %283, 0, !dbg !5188
  br i1 %tobool448, label %if.end451, label %if.then449, !dbg !5191

if.then449:                                       ; preds = %if.else447
  %284 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5192
  %avctx450 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %284, i32 0, i32 1, !dbg !5194
  %285 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx450, align 8, !dbg !5194
  %286 = bitcast %struct.AVCodecContext* %285 to i8*, !dbg !5192
  call void (i8*, i32, i8*, ...) @av_log(i8* %286, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.50, i32 0, i32 0)), !dbg !5195
  store i32 -1094995529, i32* %retval, align 4, !dbg !5196
  br label %return, !dbg !5196

if.end451:                                        ; preds = %if.else447
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %for.end446
  br label %if.end453, !dbg !5197

if.end453:                                        ; preds = %if.end452, %for.end389
  %287 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5198
  %eac3454 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %287, i32 0, i32 25, !dbg !5200
  %288 = load i32, i32* %eac3454, align 4, !dbg !5200
  %tobool455 = icmp ne i32 %288, 0, !dbg !5198
  br i1 %tobool455, label %lor.lhs.false456, label %if.then458, !dbg !5201

lor.lhs.false456:                                 ; preds = %if.end453
  %289 = load i32, i32* %blk.addr, align 4, !dbg !5202
  %tobool457 = icmp ne i32 %289, 0, !dbg !5202
  br i1 %tobool457, label %if.end562, label %if.then458, !dbg !5204

if.then458:                                       ; preds = %lor.lhs.false456, %if.end453
  %290 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5205
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %290, i32 0, i32 38, !dbg !5208
  %291 = load i32, i32* %snr_offset_strategy, align 4, !dbg !5208
  %tobool459 = icmp ne i32 %291, 0, !dbg !5205
  br i1 %tobool459, label %land.lhs.true460, label %if.else553, !dbg !5209

land.lhs.true460:                                 ; preds = %if.then458
  %292 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5210
  %call461 = call i32 @get_bits1(%struct.GetBitContext* %292), !dbg !5212
  %tobool462 = icmp ne i32 %call461, 0, !dbg !5212
  br i1 %tobool462, label %if.then463, label %if.else553, !dbg !5213

if.then463:                                       ; preds = %land.lhs.true460
  call void @llvm.dbg.declare(metadata i32* %snr, metadata !5214, metadata !1854), !dbg !5216
  store i32 0, i32* %snr, align 4, !dbg !5216
  call void @llvm.dbg.declare(metadata i32* %csnr, metadata !5217, metadata !1854), !dbg !5218
  %293 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5219
  %call464 = call i32 @get_bits(%struct.GetBitContext* %293, i32 6), !dbg !5220
  %sub465 = sub i32 %call464, 15, !dbg !5221
  %shl466 = shl i32 %sub465, 4, !dbg !5222
  store i32 %shl466, i32* %csnr, align 4, !dbg !5223
  %294 = load i32, i32* %cpl_in_use, align 4, !dbg !5224
  %tobool467 = icmp ne i32 %294, 0, !dbg !5226
  %lnot468 = xor i1 %tobool467, true, !dbg !5226
  %lnot.ext469 = zext i1 %lnot468 to i32, !dbg !5226
  store i32 %lnot.ext469, i32* %ch, align 4, !dbg !5227
  store i32 %lnot.ext469, i32* %i, align 4, !dbg !5228
  br label %for.cond470, !dbg !5229

for.cond470:                                      ; preds = %for.inc550, %if.then463
  %295 = load i32, i32* %ch, align 4, !dbg !5230
  %296 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5233
  %channels471 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %296, i32 0, i32 71, !dbg !5234
  %297 = load i32, i32* %channels471, align 8, !dbg !5234
  %cmp472 = icmp sle i32 %295, %297, !dbg !5235
  br i1 %cmp472, label %for.body474, label %for.end552, !dbg !5236

for.body474:                                      ; preds = %for.cond470
  %298 = load i32, i32* %ch, align 4, !dbg !5237
  %299 = load i32, i32* %i, align 4, !dbg !5240
  %cmp475 = icmp eq i32 %298, %299, !dbg !5241
  br i1 %cmp475, label %if.then481, label %lor.lhs.false477, !dbg !5242

lor.lhs.false477:                                 ; preds = %for.body474
  %300 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5243
  %snr_offset_strategy478 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %300, i32 0, i32 38, !dbg !5245
  %301 = load i32, i32* %snr_offset_strategy478, align 4, !dbg !5245
  %cmp479 = icmp eq i32 %301, 2, !dbg !5246
  br i1 %cmp479, label %if.then481, label %if.end485, !dbg !5247

if.then481:                                       ; preds = %lor.lhs.false477, %for.body474
  %302 = load i32, i32* %csnr, align 4, !dbg !5248
  %303 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5249
  %call482 = call i32 @get_bits(%struct.GetBitContext* %303, i32 4), !dbg !5250
  %add483 = add i32 %302, %call482, !dbg !5251
  %shl484 = shl i32 %add483, 2, !dbg !5252
  store i32 %shl484, i32* %snr, align 4, !dbg !5253
  br label %if.end485, !dbg !5254

if.end485:                                        ; preds = %if.then481, %lor.lhs.false477
  %304 = load i32, i32* %blk.addr, align 4, !dbg !5255
  %tobool486 = icmp ne i32 %304, 0, !dbg !5255
  br i1 %tobool486, label %land.lhs.true487, label %if.end508, !dbg !5257

land.lhs.true487:                                 ; preds = %if.end485
  %305 = load i32, i32* %ch, align 4, !dbg !5258
  %idxprom488 = sext i32 %305 to i64, !dbg !5260
  %306 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5260
  %snr_offset = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %306, i32 0, i32 93, !dbg !5261
  %arrayidx489 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset, i64 0, i64 %idxprom488, !dbg !5260
  %307 = load i32, i32* %arrayidx489, align 4, !dbg !5260
  %308 = load i32, i32* %snr, align 4, !dbg !5262
  %cmp490 = icmp ne i32 %307, %308, !dbg !5263
  br i1 %cmp490, label %if.then492, label %if.end508, !dbg !5264

if.then492:                                       ; preds = %land.lhs.true487
  %309 = load i32, i32* %ch, align 4, !dbg !5265
  %idxprom493 = sext i32 %309 to i64, !dbg !5267
  %arrayidx494 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom493, !dbg !5267
  %310 = load i8, i8* %arrayidx494, align 1, !dbg !5267
  %conv495 = zext i8 %310 to i32, !dbg !5268
  %cmp496 = icmp sgt i32 %conv495, 1, !dbg !5269
  br i1 %cmp496, label %cond.true498, label %cond.false502, !dbg !5268

cond.true498:                                     ; preds = %if.then492
  %311 = load i32, i32* %ch, align 4, !dbg !5270
  %idxprom499 = sext i32 %311 to i64, !dbg !5272
  %arrayidx500 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom499, !dbg !5272
  %312 = load i8, i8* %arrayidx500, align 1, !dbg !5272
  %conv501 = zext i8 %312 to i32, !dbg !5273
  br label %cond.end503, !dbg !5274

cond.false502:                                    ; preds = %if.then492
  br label %cond.end503, !dbg !5275

cond.end503:                                      ; preds = %cond.false502, %cond.true498
  %cond504 = phi i32 [ %conv501, %cond.true498 ], [ 1, %cond.false502 ], !dbg !5277
  %conv505 = trunc i32 %cond504 to i8, !dbg !5279
  %313 = load i32, i32* %ch, align 4, !dbg !5280
  %idxprom506 = sext i32 %313 to i64, !dbg !5281
  %arrayidx507 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom506, !dbg !5281
  store i8 %conv505, i8* %arrayidx507, align 1, !dbg !5282
  br label %if.end508, !dbg !5283

if.end508:                                        ; preds = %cond.end503, %land.lhs.true487, %if.end485
  %314 = load i32, i32* %snr, align 4, !dbg !5284
  %315 = load i32, i32* %ch, align 4, !dbg !5285
  %idxprom509 = sext i32 %315 to i64, !dbg !5286
  %316 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5286
  %snr_offset510 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %316, i32 0, i32 93, !dbg !5287
  %arrayidx511 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset510, i64 0, i64 %idxprom509, !dbg !5286
  store i32 %314, i32* %arrayidx511, align 4, !dbg !5288
  %317 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5289
  %eac3512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %317, i32 0, i32 25, !dbg !5291
  %318 = load i32, i32* %eac3512, align 4, !dbg !5291
  %tobool513 = icmp ne i32 %318, 0, !dbg !5289
  br i1 %tobool513, label %if.end549, label %if.then514, !dbg !5292

if.then514:                                       ; preds = %if.end508
  call void @llvm.dbg.declare(metadata i32* %prev515, metadata !5293, metadata !1854), !dbg !5295
  %319 = load i32, i32* %ch, align 4, !dbg !5296
  %idxprom516 = sext i32 %319 to i64, !dbg !5297
  %320 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5297
  %fast_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %320, i32 0, i32 94, !dbg !5298
  %arrayidx517 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain, i64 0, i64 %idxprom516, !dbg !5297
  %321 = load i32, i32* %arrayidx517, align 4, !dbg !5297
  store i32 %321, i32* %prev515, align 4, !dbg !5295
  %322 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5299
  %call518 = call i32 @get_bits(%struct.GetBitContext* %322, i32 3), !dbg !5300
  %idxprom519 = zext i32 %call518 to i64, !dbg !5301
  %arrayidx520 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 %idxprom519, !dbg !5301
  %323 = load i16, i16* %arrayidx520, align 2, !dbg !5301
  %conv521 = zext i16 %323 to i32, !dbg !5301
  %324 = load i32, i32* %ch, align 4, !dbg !5302
  %idxprom522 = sext i32 %324 to i64, !dbg !5303
  %325 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5303
  %fast_gain523 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %325, i32 0, i32 94, !dbg !5304
  %arrayidx524 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain523, i64 0, i64 %idxprom522, !dbg !5303
  store i32 %conv521, i32* %arrayidx524, align 4, !dbg !5305
  %326 = load i32, i32* %blk.addr, align 4, !dbg !5306
  %tobool525 = icmp ne i32 %326, 0, !dbg !5306
  br i1 %tobool525, label %land.lhs.true526, label %if.end548, !dbg !5308

land.lhs.true526:                                 ; preds = %if.then514
  %327 = load i32, i32* %prev515, align 4, !dbg !5309
  %328 = load i32, i32* %ch, align 4, !dbg !5311
  %idxprom527 = sext i32 %328 to i64, !dbg !5312
  %329 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5312
  %fast_gain528 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %329, i32 0, i32 94, !dbg !5313
  %arrayidx529 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain528, i64 0, i64 %idxprom527, !dbg !5312
  %330 = load i32, i32* %arrayidx529, align 4, !dbg !5312
  %cmp530 = icmp ne i32 %327, %330, !dbg !5314
  br i1 %cmp530, label %if.then532, label %if.end548, !dbg !5315

if.then532:                                       ; preds = %land.lhs.true526
  %331 = load i32, i32* %ch, align 4, !dbg !5316
  %idxprom533 = sext i32 %331 to i64, !dbg !5317
  %arrayidx534 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom533, !dbg !5317
  %332 = load i8, i8* %arrayidx534, align 1, !dbg !5317
  %conv535 = zext i8 %332 to i32, !dbg !5318
  %cmp536 = icmp sgt i32 %conv535, 2, !dbg !5319
  br i1 %cmp536, label %cond.true538, label %cond.false542, !dbg !5318

cond.true538:                                     ; preds = %if.then532
  %333 = load i32, i32* %ch, align 4, !dbg !5320
  %idxprom539 = sext i32 %333 to i64, !dbg !5321
  %arrayidx540 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom539, !dbg !5321
  %334 = load i8, i8* %arrayidx540, align 1, !dbg !5321
  %conv541 = zext i8 %334 to i32, !dbg !5322
  br label %cond.end543, !dbg !5323

cond.false542:                                    ; preds = %if.then532
  br label %cond.end543, !dbg !5324

cond.end543:                                      ; preds = %cond.false542, %cond.true538
  %cond544 = phi i32 [ %conv541, %cond.true538 ], [ 2, %cond.false542 ], !dbg !5326
  %conv545 = trunc i32 %cond544 to i8, !dbg !5328
  %335 = load i32, i32* %ch, align 4, !dbg !5329
  %idxprom546 = sext i32 %335 to i64, !dbg !5330
  %arrayidx547 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom546, !dbg !5330
  store i8 %conv545, i8* %arrayidx547, align 1, !dbg !5331
  br label %if.end548, !dbg !5330

if.end548:                                        ; preds = %cond.end543, %land.lhs.true526, %if.then514
  br label %if.end549, !dbg !5332

if.end549:                                        ; preds = %if.end548, %if.end508
  br label %for.inc550, !dbg !5333

for.inc550:                                       ; preds = %if.end549
  %336 = load i32, i32* %ch, align 4, !dbg !5334
  %inc551 = add nsw i32 %336, 1, !dbg !5334
  store i32 %inc551, i32* %ch, align 4, !dbg !5334
  br label %for.cond470, !dbg !5336, !llvm.loop !5337

for.end552:                                       ; preds = %for.cond470
  br label %if.end561, !dbg !5339

if.else553:                                       ; preds = %land.lhs.true460, %if.then458
  %337 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5340
  %eac3554 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %337, i32 0, i32 25, !dbg !5343
  %338 = load i32, i32* %eac3554, align 4, !dbg !5343
  %tobool555 = icmp ne i32 %338, 0, !dbg !5340
  br i1 %tobool555, label %if.end560, label %land.lhs.true556, !dbg !5344

land.lhs.true556:                                 ; preds = %if.else553
  %339 = load i32, i32* %blk.addr, align 4, !dbg !5345
  %tobool557 = icmp ne i32 %339, 0, !dbg !5345
  br i1 %tobool557, label %if.end560, label %if.then558, !dbg !5347

if.then558:                                       ; preds = %land.lhs.true556
  %340 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5348
  %avctx559 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %340, i32 0, i32 1, !dbg !5350
  %341 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx559, align 8, !dbg !5350
  %342 = bitcast %struct.AVCodecContext* %341 to i8*, !dbg !5348
  call void (i8*, i32, i8*, ...) @av_log(i8* %342, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i32 0, i32 0)), !dbg !5351
  store i32 -1094995529, i32* %retval, align 4, !dbg !5352
  br label %return, !dbg !5352

if.end560:                                        ; preds = %land.lhs.true556, %if.else553
  br label %if.end561

if.end561:                                        ; preds = %if.end560, %for.end552
  br label %if.end562, !dbg !5353

if.end562:                                        ; preds = %if.end561, %lor.lhs.false456
  %343 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5354
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %343, i32 0, i32 42, !dbg !5356
  %344 = load i32, i32* %fast_gain_syntax, align 4, !dbg !5356
  %tobool563 = icmp ne i32 %344, 0, !dbg !5354
  br i1 %tobool563, label %land.lhs.true564, label %if.else614, !dbg !5357

land.lhs.true564:                                 ; preds = %if.end562
  %345 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5358
  %call565 = call i32 @get_bits1(%struct.GetBitContext* %345), !dbg !5360
  %tobool566 = icmp ne i32 %call565, 0, !dbg !5360
  br i1 %tobool566, label %if.then567, label %if.else614, !dbg !5361

if.then567:                                       ; preds = %land.lhs.true564
  %346 = load i32, i32* %cpl_in_use, align 4, !dbg !5362
  %tobool568 = icmp ne i32 %346, 0, !dbg !5365
  %lnot569 = xor i1 %tobool568, true, !dbg !5365
  %lnot.ext570 = zext i1 %lnot569 to i32, !dbg !5365
  store i32 %lnot.ext570, i32* %ch, align 4, !dbg !5366
  br label %for.cond571, !dbg !5367

for.cond571:                                      ; preds = %for.inc611, %if.then567
  %347 = load i32, i32* %ch, align 4, !dbg !5368
  %348 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5371
  %channels572 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %348, i32 0, i32 71, !dbg !5372
  %349 = load i32, i32* %channels572, align 8, !dbg !5372
  %cmp573 = icmp sle i32 %347, %349, !dbg !5373
  br i1 %cmp573, label %for.body575, label %for.end613, !dbg !5374

for.body575:                                      ; preds = %for.cond571
  call void @llvm.dbg.declare(metadata i32* %prev576, metadata !5375, metadata !1854), !dbg !5377
  %350 = load i32, i32* %ch, align 4, !dbg !5378
  %idxprom577 = sext i32 %350 to i64, !dbg !5379
  %351 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5379
  %fast_gain578 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %351, i32 0, i32 94, !dbg !5380
  %arrayidx579 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain578, i64 0, i64 %idxprom577, !dbg !5379
  %352 = load i32, i32* %arrayidx579, align 4, !dbg !5379
  store i32 %352, i32* %prev576, align 4, !dbg !5377
  %353 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5381
  %call580 = call i32 @get_bits(%struct.GetBitContext* %353, i32 3), !dbg !5382
  %idxprom581 = zext i32 %call580 to i64, !dbg !5383
  %arrayidx582 = getelementptr inbounds [8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 %idxprom581, !dbg !5383
  %354 = load i16, i16* %arrayidx582, align 2, !dbg !5383
  %conv583 = zext i16 %354 to i32, !dbg !5383
  %355 = load i32, i32* %ch, align 4, !dbg !5384
  %idxprom584 = sext i32 %355 to i64, !dbg !5385
  %356 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5385
  %fast_gain585 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %356, i32 0, i32 94, !dbg !5386
  %arrayidx586 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain585, i64 0, i64 %idxprom584, !dbg !5385
  store i32 %conv583, i32* %arrayidx586, align 4, !dbg !5387
  %357 = load i32, i32* %blk.addr, align 4, !dbg !5388
  %tobool587 = icmp ne i32 %357, 0, !dbg !5388
  br i1 %tobool587, label %land.lhs.true588, label %if.end610, !dbg !5390

land.lhs.true588:                                 ; preds = %for.body575
  %358 = load i32, i32* %prev576, align 4, !dbg !5391
  %359 = load i32, i32* %ch, align 4, !dbg !5393
  %idxprom589 = sext i32 %359 to i64, !dbg !5394
  %360 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5394
  %fast_gain590 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %360, i32 0, i32 94, !dbg !5395
  %arrayidx591 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain590, i64 0, i64 %idxprom589, !dbg !5394
  %361 = load i32, i32* %arrayidx591, align 4, !dbg !5394
  %cmp592 = icmp ne i32 %358, %361, !dbg !5396
  br i1 %cmp592, label %if.then594, label %if.end610, !dbg !5397

if.then594:                                       ; preds = %land.lhs.true588
  %362 = load i32, i32* %ch, align 4, !dbg !5398
  %idxprom595 = sext i32 %362 to i64, !dbg !5399
  %arrayidx596 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom595, !dbg !5399
  %363 = load i8, i8* %arrayidx596, align 1, !dbg !5399
  %conv597 = zext i8 %363 to i32, !dbg !5400
  %cmp598 = icmp sgt i32 %conv597, 2, !dbg !5401
  br i1 %cmp598, label %cond.true600, label %cond.false604, !dbg !5400

cond.true600:                                     ; preds = %if.then594
  %364 = load i32, i32* %ch, align 4, !dbg !5402
  %idxprom601 = sext i32 %364 to i64, !dbg !5403
  %arrayidx602 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom601, !dbg !5403
  %365 = load i8, i8* %arrayidx602, align 1, !dbg !5403
  %conv603 = zext i8 %365 to i32, !dbg !5404
  br label %cond.end605, !dbg !5405

cond.false604:                                    ; preds = %if.then594
  br label %cond.end605, !dbg !5406

cond.end605:                                      ; preds = %cond.false604, %cond.true600
  %cond606 = phi i32 [ %conv603, %cond.true600 ], [ 2, %cond.false604 ], !dbg !5408
  %conv607 = trunc i32 %cond606 to i8, !dbg !5410
  %366 = load i32, i32* %ch, align 4, !dbg !5411
  %idxprom608 = sext i32 %366 to i64, !dbg !5412
  %arrayidx609 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom608, !dbg !5412
  store i8 %conv607, i8* %arrayidx609, align 1, !dbg !5413
  br label %if.end610, !dbg !5412

if.end610:                                        ; preds = %cond.end605, %land.lhs.true588, %for.body575
  br label %for.inc611, !dbg !5414

for.inc611:                                       ; preds = %if.end610
  %367 = load i32, i32* %ch, align 4, !dbg !5415
  %inc612 = add nsw i32 %367, 1, !dbg !5415
  store i32 %inc612, i32* %ch, align 4, !dbg !5415
  br label %for.cond571, !dbg !5417, !llvm.loop !5418

for.end613:                                       ; preds = %for.cond571
  br label %if.end636, !dbg !5420

if.else614:                                       ; preds = %land.lhs.true564, %if.end562
  %368 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5421
  %eac3615 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %368, i32 0, i32 25, !dbg !5424
  %369 = load i32, i32* %eac3615, align 4, !dbg !5424
  %tobool616 = icmp ne i32 %369, 0, !dbg !5421
  br i1 %tobool616, label %land.lhs.true617, label %if.end635, !dbg !5425

land.lhs.true617:                                 ; preds = %if.else614
  %370 = load i32, i32* %blk.addr, align 4, !dbg !5426
  %tobool618 = icmp ne i32 %370, 0, !dbg !5426
  br i1 %tobool618, label %if.end635, label %if.then619, !dbg !5428

if.then619:                                       ; preds = %land.lhs.true617
  %371 = load i32, i32* %cpl_in_use, align 4, !dbg !5429
  %tobool620 = icmp ne i32 %371, 0, !dbg !5432
  %lnot621 = xor i1 %tobool620, true, !dbg !5432
  %lnot.ext622 = zext i1 %lnot621 to i32, !dbg !5432
  store i32 %lnot.ext622, i32* %ch, align 4, !dbg !5433
  br label %for.cond623, !dbg !5434

for.cond623:                                      ; preds = %for.inc632, %if.then619
  %372 = load i32, i32* %ch, align 4, !dbg !5435
  %373 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5438
  %channels624 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %373, i32 0, i32 71, !dbg !5439
  %374 = load i32, i32* %channels624, align 8, !dbg !5439
  %cmp625 = icmp sle i32 %372, %374, !dbg !5440
  br i1 %cmp625, label %for.body627, label %for.end634, !dbg !5441

for.body627:                                      ; preds = %for.cond623
  %375 = load i16, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @ff_ac3_fast_gain_tab, i64 0, i64 4), align 8, !dbg !5442
  %conv628 = zext i16 %375 to i32, !dbg !5442
  %376 = load i32, i32* %ch, align 4, !dbg !5443
  %idxprom629 = sext i32 %376 to i64, !dbg !5444
  %377 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5444
  %fast_gain630 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %377, i32 0, i32 94, !dbg !5445
  %arrayidx631 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain630, i64 0, i64 %idxprom629, !dbg !5444
  store i32 %conv628, i32* %arrayidx631, align 4, !dbg !5446
  br label %for.inc632, !dbg !5444

for.inc632:                                       ; preds = %for.body627
  %378 = load i32, i32* %ch, align 4, !dbg !5447
  %inc633 = add nsw i32 %378, 1, !dbg !5447
  store i32 %inc633, i32* %ch, align 4, !dbg !5447
  br label %for.cond623, !dbg !5449, !llvm.loop !5450

for.end634:                                       ; preds = %for.cond623
  br label %if.end635, !dbg !5452

if.end635:                                        ; preds = %for.end634, %land.lhs.true617, %if.else614
  br label %if.end636

if.end636:                                        ; preds = %if.end635, %for.end613
  %379 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5453
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %379, i32 0, i32 3, !dbg !5455
  %380 = load i32, i32* %frame_type, align 16, !dbg !5455
  %cmp637 = icmp eq i32 %380, 0, !dbg !5456
  br i1 %cmp637, label %land.lhs.true639, label %if.end643, !dbg !5457

land.lhs.true639:                                 ; preds = %if.end636
  %381 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5458
  %call640 = call i32 @get_bits1(%struct.GetBitContext* %381), !dbg !5460
  %tobool641 = icmp ne i32 %call640, 0, !dbg !5460
  br i1 %tobool641, label %if.then642, label %if.end643, !dbg !5461

if.then642:                                       ; preds = %land.lhs.true639
  %382 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5462
  call void @skip_bits(%struct.GetBitContext* %382, i32 10), !dbg !5464
  br label %if.end643, !dbg !5465

if.end643:                                        ; preds = %if.then642, %land.lhs.true639, %if.end636
  %383 = load i32, i32* %cpl_in_use, align 4, !dbg !5466
  %tobool644 = icmp ne i32 %383, 0, !dbg !5466
  br i1 %tobool644, label %if.then645, label %if.end690, !dbg !5468

if.then645:                                       ; preds = %if.end643
  %384 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5469
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %384, i32 0, i32 92, !dbg !5472
  %385 = load i32, i32* %first_cpl_leak, align 4, !dbg !5472
  %tobool646 = icmp ne i32 %385, 0, !dbg !5469
  br i1 %tobool646, label %if.then650, label %lor.lhs.false647, !dbg !5473

lor.lhs.false647:                                 ; preds = %if.then645
  %386 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5474
  %call648 = call i32 @get_bits1(%struct.GetBitContext* %386), !dbg !5476
  %tobool649 = icmp ne i32 %call648, 0, !dbg !5476
  br i1 %tobool649, label %if.then650, label %if.else680, !dbg !5477

if.then650:                                       ; preds = %lor.lhs.false647, %if.then645
  call void @llvm.dbg.declare(metadata i32* %fl, metadata !5478, metadata !1854), !dbg !5480
  %387 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5481
  %call651 = call i32 @get_bits(%struct.GetBitContext* %387, i32 3), !dbg !5482
  store i32 %call651, i32* %fl, align 4, !dbg !5480
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !5483, metadata !1854), !dbg !5484
  %388 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5485
  %call652 = call i32 @get_bits(%struct.GetBitContext* %388, i32 3), !dbg !5486
  store i32 %call652, i32* %sl, align 4, !dbg !5484
  %389 = load i32, i32* %blk.addr, align 4, !dbg !5487
  %tobool653 = icmp ne i32 %389, 0, !dbg !5487
  br i1 %tobool653, label %land.lhs.true654, label %if.end675, !dbg !5489

land.lhs.true654:                                 ; preds = %if.then650
  %390 = load i32, i32* %fl, align 4, !dbg !5490
  %391 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5492
  %bit_alloc_params655 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %391, i32 0, i32 91, !dbg !5493
  %cpl_fast_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params655, i32 0, i32 7, !dbg !5494
  %392 = load i32, i32* %cpl_fast_leak, align 4, !dbg !5494
  %cmp656 = icmp ne i32 %390, %392, !dbg !5495
  br i1 %cmp656, label %if.then662, label %lor.lhs.false658, !dbg !5496

lor.lhs.false658:                                 ; preds = %land.lhs.true654
  %393 = load i32, i32* %sl, align 4, !dbg !5497
  %394 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5498
  %bit_alloc_params659 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %394, i32 0, i32 91, !dbg !5499
  %cpl_slow_leak = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params659, i32 0, i32 8, !dbg !5500
  %395 = load i32, i32* %cpl_slow_leak, align 32, !dbg !5500
  %cmp660 = icmp ne i32 %393, %395, !dbg !5501
  br i1 %cmp660, label %if.then662, label %if.end675, !dbg !5502

if.then662:                                       ; preds = %lor.lhs.false658, %land.lhs.true654
  %arrayidx663 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5504
  %396 = load i8, i8* %arrayidx663, align 1, !dbg !5504
  %conv664 = zext i8 %396 to i32, !dbg !5506
  %cmp665 = icmp sgt i32 %conv664, 2, !dbg !5507
  br i1 %cmp665, label %cond.true667, label %cond.false670, !dbg !5506

cond.true667:                                     ; preds = %if.then662
  %arrayidx668 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5508
  %397 = load i8, i8* %arrayidx668, align 1, !dbg !5508
  %conv669 = zext i8 %397 to i32, !dbg !5510
  br label %cond.end671, !dbg !5511

cond.false670:                                    ; preds = %if.then662
  br label %cond.end671, !dbg !5512

cond.end671:                                      ; preds = %cond.false670, %cond.true667
  %cond672 = phi i32 [ %conv669, %cond.true667 ], [ 2, %cond.false670 ], !dbg !5514
  %conv673 = trunc i32 %cond672 to i8, !dbg !5516
  %arrayidx674 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 0, !dbg !5517
  store i8 %conv673, i8* %arrayidx674, align 1, !dbg !5518
  br label %if.end675, !dbg !5519

if.end675:                                        ; preds = %cond.end671, %lor.lhs.false658, %if.then650
  %398 = load i32, i32* %fl, align 4, !dbg !5520
  %399 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5521
  %bit_alloc_params676 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %399, i32 0, i32 91, !dbg !5522
  %cpl_fast_leak677 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params676, i32 0, i32 7, !dbg !5523
  store i32 %398, i32* %cpl_fast_leak677, align 4, !dbg !5524
  %400 = load i32, i32* %sl, align 4, !dbg !5525
  %401 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5526
  %bit_alloc_params678 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %401, i32 0, i32 91, !dbg !5527
  %cpl_slow_leak679 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params678, i32 0, i32 8, !dbg !5528
  store i32 %400, i32* %cpl_slow_leak679, align 32, !dbg !5529
  br label %if.end688, !dbg !5530

if.else680:                                       ; preds = %lor.lhs.false647
  %402 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5531
  %eac3681 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %402, i32 0, i32 25, !dbg !5534
  %403 = load i32, i32* %eac3681, align 4, !dbg !5534
  %tobool682 = icmp ne i32 %403, 0, !dbg !5531
  br i1 %tobool682, label %if.end687, label %land.lhs.true683, !dbg !5535

land.lhs.true683:                                 ; preds = %if.else680
  %404 = load i32, i32* %blk.addr, align 4, !dbg !5536
  %tobool684 = icmp ne i32 %404, 0, !dbg !5536
  br i1 %tobool684, label %if.end687, label %if.then685, !dbg !5538

if.then685:                                       ; preds = %land.lhs.true683
  %405 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5539
  %avctx686 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %405, i32 0, i32 1, !dbg !5541
  %406 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx686, align 8, !dbg !5541
  %407 = bitcast %struct.AVCodecContext* %406 to i8*, !dbg !5539
  call void (i8*, i32, i8*, ...) @av_log(i8* %407, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i32 0, i32 0)), !dbg !5542
  store i32 -1094995529, i32* %retval, align 4, !dbg !5543
  br label %return, !dbg !5543

if.end687:                                        ; preds = %land.lhs.true683, %if.else680
  br label %if.end688

if.end688:                                        ; preds = %if.end687, %if.end675
  %408 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5544
  %first_cpl_leak689 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %408, i32 0, i32 92, !dbg !5545
  store i32 0, i32* %first_cpl_leak689, align 4, !dbg !5546
  br label %if.end690, !dbg !5547

if.end690:                                        ; preds = %if.end688, %if.end643
  %409 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5548
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %409, i32 0, i32 43, !dbg !5550
  %410 = load i32, i32* %dba_syntax, align 32, !dbg !5550
  %tobool691 = icmp ne i32 %410, 0, !dbg !5548
  br i1 %tobool691, label %land.lhs.true692, label %if.else796, !dbg !5551

land.lhs.true692:                                 ; preds = %if.end690
  %411 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5552
  %call693 = call i32 @get_bits1(%struct.GetBitContext* %411), !dbg !5554
  %tobool694 = icmp ne i32 %call693, 0, !dbg !5554
  br i1 %tobool694, label %if.then695, label %if.else796, !dbg !5555

if.then695:                                       ; preds = %land.lhs.true692
  %412 = load i32, i32* %cpl_in_use, align 4, !dbg !5556
  %tobool696 = icmp ne i32 %412, 0, !dbg !5559
  %lnot697 = xor i1 %tobool696, true, !dbg !5559
  %lnot.ext698 = zext i1 %lnot697 to i32, !dbg !5559
  store i32 %lnot.ext698, i32* %ch, align 4, !dbg !5560
  br label %for.cond699, !dbg !5561

for.cond699:                                      ; preds = %for.inc729, %if.then695
  %413 = load i32, i32* %ch, align 4, !dbg !5562
  %414 = load i32, i32* %fbw_channels, align 4, !dbg !5565
  %cmp700 = icmp sle i32 %413, %414, !dbg !5566
  br i1 %cmp700, label %for.body702, label %for.end731, !dbg !5567

for.body702:                                      ; preds = %for.cond699
  %415 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5568
  %call703 = call i32 @get_bits(%struct.GetBitContext* %415, i32 2), !dbg !5570
  %416 = load i32, i32* %ch, align 4, !dbg !5571
  %idxprom704 = sext i32 %416 to i64, !dbg !5572
  %417 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5572
  %dba_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %417, i32 0, i32 99, !dbg !5573
  %arrayidx705 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode, i64 0, i64 %idxprom704, !dbg !5572
  store i32 %call703, i32* %arrayidx705, align 4, !dbg !5574
  %418 = load i32, i32* %ch, align 4, !dbg !5575
  %idxprom706 = sext i32 %418 to i64, !dbg !5577
  %419 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5577
  %dba_mode707 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %419, i32 0, i32 99, !dbg !5578
  %arrayidx708 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode707, i64 0, i64 %idxprom706, !dbg !5577
  %420 = load i32, i32* %arrayidx708, align 4, !dbg !5577
  %cmp709 = icmp eq i32 %420, 3, !dbg !5579
  br i1 %cmp709, label %if.then711, label %if.end713, !dbg !5580

if.then711:                                       ; preds = %for.body702
  %421 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5581
  %avctx712 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %421, i32 0, i32 1, !dbg !5583
  %422 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx712, align 8, !dbg !5583
  %423 = bitcast %struct.AVCodecContext* %422 to i8*, !dbg !5581
  call void (i8*, i32, i8*, ...) @av_log(i8* %423, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53, i32 0, i32 0)), !dbg !5584
  store i32 -1094995529, i32* %retval, align 4, !dbg !5585
  br label %return, !dbg !5585

if.end713:                                        ; preds = %for.body702
  %424 = load i32, i32* %ch, align 4, !dbg !5586
  %idxprom714 = sext i32 %424 to i64, !dbg !5587
  %arrayidx715 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom714, !dbg !5587
  %425 = load i8, i8* %arrayidx715, align 1, !dbg !5587
  %conv716 = zext i8 %425 to i32, !dbg !5588
  %cmp717 = icmp sgt i32 %conv716, 2, !dbg !5589
  br i1 %cmp717, label %cond.true719, label %cond.false723, !dbg !5588

cond.true719:                                     ; preds = %if.end713
  %426 = load i32, i32* %ch, align 4, !dbg !5590
  %idxprom720 = sext i32 %426 to i64, !dbg !5592
  %arrayidx721 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom720, !dbg !5592
  %427 = load i8, i8* %arrayidx721, align 1, !dbg !5592
  %conv722 = zext i8 %427 to i32, !dbg !5593
  br label %cond.end724, !dbg !5594

cond.false723:                                    ; preds = %if.end713
  br label %cond.end724, !dbg !5595

cond.end724:                                      ; preds = %cond.false723, %cond.true719
  %cond725 = phi i32 [ %conv722, %cond.true719 ], [ 2, %cond.false723 ], !dbg !5597
  %conv726 = trunc i32 %cond725 to i8, !dbg !5599
  %428 = load i32, i32* %ch, align 4, !dbg !5600
  %idxprom727 = sext i32 %428 to i64, !dbg !5601
  %arrayidx728 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom727, !dbg !5601
  store i8 %conv726, i8* %arrayidx728, align 1, !dbg !5602
  br label %for.inc729, !dbg !5603

for.inc729:                                       ; preds = %cond.end724
  %429 = load i32, i32* %ch, align 4, !dbg !5604
  %inc730 = add nsw i32 %429, 1, !dbg !5604
  store i32 %inc730, i32* %ch, align 4, !dbg !5604
  br label %for.cond699, !dbg !5606, !llvm.loop !5607

for.end731:                                       ; preds = %for.cond699
  %430 = load i32, i32* %cpl_in_use, align 4, !dbg !5609
  %tobool732 = icmp ne i32 %430, 0, !dbg !5611
  %lnot733 = xor i1 %tobool732, true, !dbg !5611
  %lnot.ext734 = zext i1 %lnot733 to i32, !dbg !5611
  store i32 %lnot.ext734, i32* %ch, align 4, !dbg !5612
  br label %for.cond735, !dbg !5613

for.cond735:                                      ; preds = %for.inc793, %for.end731
  %431 = load i32, i32* %ch, align 4, !dbg !5614
  %432 = load i32, i32* %fbw_channels, align 4, !dbg !5617
  %cmp736 = icmp sle i32 %431, %432, !dbg !5618
  br i1 %cmp736, label %for.body738, label %for.end795, !dbg !5619

for.body738:                                      ; preds = %for.cond735
  %433 = load i32, i32* %ch, align 4, !dbg !5620
  %idxprom739 = sext i32 %433 to i64, !dbg !5623
  %434 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5623
  %dba_mode740 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %434, i32 0, i32 99, !dbg !5624
  %arrayidx741 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode740, i64 0, i64 %idxprom739, !dbg !5623
  %435 = load i32, i32* %arrayidx741, align 4, !dbg !5623
  %cmp742 = icmp eq i32 %435, 1, !dbg !5625
  br i1 %cmp742, label %if.then744, label %if.end792, !dbg !5626

if.then744:                                       ; preds = %for.body738
  %436 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5627
  %call745 = call i32 @get_bits(%struct.GetBitContext* %436, i32 3), !dbg !5629
  %add746 = add i32 %call745, 1, !dbg !5630
  %437 = load i32, i32* %ch, align 4, !dbg !5631
  %idxprom747 = sext i32 %437 to i64, !dbg !5632
  %438 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5632
  %dba_nsegs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %438, i32 0, i32 100, !dbg !5633
  %arrayidx748 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs, i64 0, i64 %idxprom747, !dbg !5632
  store i32 %add746, i32* %arrayidx748, align 4, !dbg !5634
  store i32 0, i32* %seg, align 4, !dbg !5635
  br label %for.cond749, !dbg !5637

for.cond749:                                      ; preds = %for.inc774, %if.then744
  %439 = load i32, i32* %seg, align 4, !dbg !5638
  %440 = load i32, i32* %ch, align 4, !dbg !5641
  %idxprom750 = sext i32 %440 to i64, !dbg !5642
  %441 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5642
  %dba_nsegs751 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %441, i32 0, i32 100, !dbg !5643
  %arrayidx752 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs751, i64 0, i64 %idxprom750, !dbg !5642
  %442 = load i32, i32* %arrayidx752, align 4, !dbg !5642
  %cmp753 = icmp slt i32 %439, %442, !dbg !5644
  br i1 %cmp753, label %for.body755, label %for.end776, !dbg !5645

for.body755:                                      ; preds = %for.cond749
  %443 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5646
  %call756 = call i32 @get_bits(%struct.GetBitContext* %443, i32 5), !dbg !5648
  %conv757 = trunc i32 %call756 to i8, !dbg !5648
  %444 = load i32, i32* %seg, align 4, !dbg !5649
  %idxprom758 = sext i32 %444 to i64, !dbg !5650
  %445 = load i32, i32* %ch, align 4, !dbg !5651
  %idxprom759 = sext i32 %445 to i64, !dbg !5650
  %446 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5650
  %dba_offsets = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %446, i32 0, i32 101, !dbg !5652
  %arrayidx760 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_offsets, i64 0, i64 %idxprom759, !dbg !5650
  %arrayidx761 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx760, i64 0, i64 %idxprom758, !dbg !5650
  store i8 %conv757, i8* %arrayidx761, align 1, !dbg !5653
  %447 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5654
  %call762 = call i32 @get_bits(%struct.GetBitContext* %447, i32 4), !dbg !5655
  %conv763 = trunc i32 %call762 to i8, !dbg !5655
  %448 = load i32, i32* %seg, align 4, !dbg !5656
  %idxprom764 = sext i32 %448 to i64, !dbg !5657
  %449 = load i32, i32* %ch, align 4, !dbg !5658
  %idxprom765 = sext i32 %449 to i64, !dbg !5657
  %450 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5657
  %dba_lengths = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %450, i32 0, i32 102, !dbg !5659
  %arrayidx766 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_lengths, i64 0, i64 %idxprom765, !dbg !5657
  %arrayidx767 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx766, i64 0, i64 %idxprom764, !dbg !5657
  store i8 %conv763, i8* %arrayidx767, align 1, !dbg !5660
  %451 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5661
  %call768 = call i32 @get_bits(%struct.GetBitContext* %451, i32 3), !dbg !5662
  %conv769 = trunc i32 %call768 to i8, !dbg !5662
  %452 = load i32, i32* %seg, align 4, !dbg !5663
  %idxprom770 = sext i32 %452 to i64, !dbg !5664
  %453 = load i32, i32* %ch, align 4, !dbg !5665
  %idxprom771 = sext i32 %453 to i64, !dbg !5664
  %454 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5664
  %dba_values = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %454, i32 0, i32 103, !dbg !5666
  %arrayidx772 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_values, i64 0, i64 %idxprom771, !dbg !5664
  %arrayidx773 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx772, i64 0, i64 %idxprom770, !dbg !5664
  store i8 %conv769, i8* %arrayidx773, align 1, !dbg !5667
  br label %for.inc774, !dbg !5668

for.inc774:                                       ; preds = %for.body755
  %455 = load i32, i32* %seg, align 4, !dbg !5669
  %inc775 = add nsw i32 %455, 1, !dbg !5669
  store i32 %inc775, i32* %seg, align 4, !dbg !5669
  br label %for.cond749, !dbg !5671, !llvm.loop !5672

for.end776:                                       ; preds = %for.cond749
  %456 = load i32, i32* %ch, align 4, !dbg !5674
  %idxprom777 = sext i32 %456 to i64, !dbg !5675
  %arrayidx778 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom777, !dbg !5675
  %457 = load i8, i8* %arrayidx778, align 1, !dbg !5675
  %conv779 = zext i8 %457 to i32, !dbg !5676
  %cmp780 = icmp sgt i32 %conv779, 2, !dbg !5677
  br i1 %cmp780, label %cond.true782, label %cond.false786, !dbg !5676

cond.true782:                                     ; preds = %for.end776
  %458 = load i32, i32* %ch, align 4, !dbg !5678
  %idxprom783 = sext i32 %458 to i64, !dbg !5680
  %arrayidx784 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom783, !dbg !5680
  %459 = load i8, i8* %arrayidx784, align 1, !dbg !5680
  %conv785 = zext i8 %459 to i32, !dbg !5681
  br label %cond.end787, !dbg !5682

cond.false786:                                    ; preds = %for.end776
  br label %cond.end787, !dbg !5683

cond.end787:                                      ; preds = %cond.false786, %cond.true782
  %cond788 = phi i32 [ %conv785, %cond.true782 ], [ 2, %cond.false786 ], !dbg !5685
  %conv789 = trunc i32 %cond788 to i8, !dbg !5687
  %460 = load i32, i32* %ch, align 4, !dbg !5688
  %idxprom790 = sext i32 %460 to i64, !dbg !5689
  %arrayidx791 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom790, !dbg !5689
  store i8 %conv789, i8* %arrayidx791, align 1, !dbg !5690
  br label %if.end792, !dbg !5691

if.end792:                                        ; preds = %cond.end787, %for.body738
  br label %for.inc793, !dbg !5692

for.inc793:                                       ; preds = %if.end792
  %461 = load i32, i32* %ch, align 4, !dbg !5693
  %inc794 = add nsw i32 %461, 1, !dbg !5693
  store i32 %inc794, i32* %ch, align 4, !dbg !5693
  br label %for.cond735, !dbg !5695, !llvm.loop !5696

for.end795:                                       ; preds = %for.cond735
  br label %if.end812, !dbg !5698

if.else796:                                       ; preds = %land.lhs.true692, %if.end690
  %462 = load i32, i32* %blk.addr, align 4, !dbg !5699
  %cmp797 = icmp eq i32 %462, 0, !dbg !5702
  br i1 %cmp797, label %if.then799, label %if.end811, !dbg !5699

if.then799:                                       ; preds = %if.else796
  store i32 0, i32* %ch, align 4, !dbg !5703
  br label %for.cond800, !dbg !5706

for.cond800:                                      ; preds = %for.inc808, %if.then799
  %463 = load i32, i32* %ch, align 4, !dbg !5707
  %464 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5710
  %channels801 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %464, i32 0, i32 71, !dbg !5711
  %465 = load i32, i32* %channels801, align 8, !dbg !5711
  %cmp802 = icmp sle i32 %463, %465, !dbg !5712
  br i1 %cmp802, label %for.body804, label %for.end810, !dbg !5713

for.body804:                                      ; preds = %for.cond800
  %466 = load i32, i32* %ch, align 4, !dbg !5714
  %idxprom805 = sext i32 %466 to i64, !dbg !5716
  %467 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5716
  %dba_mode806 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %467, i32 0, i32 99, !dbg !5717
  %arrayidx807 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode806, i64 0, i64 %idxprom805, !dbg !5716
  store i32 2, i32* %arrayidx807, align 4, !dbg !5718
  br label %for.inc808, !dbg !5719

for.inc808:                                       ; preds = %for.body804
  %468 = load i32, i32* %ch, align 4, !dbg !5720
  %inc809 = add nsw i32 %468, 1, !dbg !5720
  store i32 %inc809, i32* %ch, align 4, !dbg !5720
  br label %for.cond800, !dbg !5722, !llvm.loop !5723

for.end810:                                       ; preds = %for.cond800
  br label %if.end811, !dbg !5725

if.end811:                                        ; preds = %for.end810, %if.else796
  br label %if.end812

if.end812:                                        ; preds = %if.end811, %for.end795
  %469 = load i32, i32* %cpl_in_use, align 4, !dbg !5726
  %tobool813 = icmp ne i32 %469, 0, !dbg !5728
  %lnot814 = xor i1 %tobool813, true, !dbg !5728
  %lnot.ext815 = zext i1 %lnot814 to i32, !dbg !5728
  store i32 %lnot.ext815, i32* %ch, align 4, !dbg !5729
  br label %for.cond816, !dbg !5730

for.cond816:                                      ; preds = %for.inc927, %if.end812
  %470 = load i32, i32* %ch, align 4, !dbg !5731
  %471 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5734
  %channels817 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %471, i32 0, i32 71, !dbg !5735
  %472 = load i32, i32* %channels817, align 8, !dbg !5735
  %cmp818 = icmp sle i32 %470, %472, !dbg !5736
  br i1 %cmp818, label %for.body820, label %for.end929, !dbg !5737

for.body820:                                      ; preds = %for.cond816
  %473 = load i32, i32* %ch, align 4, !dbg !5738
  %idxprom821 = sext i32 %473 to i64, !dbg !5741
  %arrayidx822 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom821, !dbg !5741
  %474 = load i8, i8* %arrayidx822, align 1, !dbg !5741
  %conv823 = zext i8 %474 to i32, !dbg !5741
  %cmp824 = icmp sgt i32 %conv823, 2, !dbg !5742
  br i1 %cmp824, label %if.then826, label %if.end843, !dbg !5743

if.then826:                                       ; preds = %for.body820
  %475 = load i32, i32* %ch, align 4, !dbg !5744
  %idxprom827 = sext i32 %475 to i64, !dbg !5746
  %476 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5746
  %dexps828 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %476, i32 0, i32 89, !dbg !5747
  %arrayidx829 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps828, i64 0, i64 %idxprom827, !dbg !5746
  %arraydecay830 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx829, i32 0, i32 0, !dbg !5746
  %477 = load i32, i32* %ch, align 4, !dbg !5748
  %idxprom831 = sext i32 %477 to i64, !dbg !5749
  %478 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5749
  %start_freq832 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %478, i32 0, i32 83, !dbg !5750
  %arrayidx833 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq832, i64 0, i64 %idxprom831, !dbg !5749
  %479 = load i32, i32* %arrayidx833, align 4, !dbg !5749
  %480 = load i32, i32* %ch, align 4, !dbg !5751
  %idxprom834 = sext i32 %480 to i64, !dbg !5752
  %481 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5752
  %end_freq835 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %481, i32 0, i32 84, !dbg !5753
  %arrayidx836 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq835, i64 0, i64 %idxprom834, !dbg !5752
  %482 = load i32, i32* %arrayidx836, align 4, !dbg !5752
  %483 = load i32, i32* %ch, align 4, !dbg !5754
  %idxprom837 = sext i32 %483 to i64, !dbg !5755
  %484 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5755
  %psd = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %484, i32 0, i32 96, !dbg !5756
  %arrayidx838 = getelementptr inbounds [7 x [256 x i16]], [7 x [256 x i16]]* %psd, i64 0, i64 %idxprom837, !dbg !5755
  %arraydecay839 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx838, i32 0, i32 0, !dbg !5755
  %485 = load i32, i32* %ch, align 4, !dbg !5757
  %idxprom840 = sext i32 %485 to i64, !dbg !5758
  %486 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5758
  %band_psd = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %486, i32 0, i32 97, !dbg !5759
  %arrayidx841 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %band_psd, i64 0, i64 %idxprom840, !dbg !5758
  %arraydecay842 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx841, i32 0, i32 0, !dbg !5758
  call void @ff_ac3_bit_alloc_calc_psd(i8* %arraydecay830, i32 %479, i32 %482, i16* %arraydecay839, i16* %arraydecay842), !dbg !5760
  br label %if.end843, !dbg !5761

if.end843:                                        ; preds = %if.then826, %for.body820
  %487 = load i32, i32* %ch, align 4, !dbg !5762
  %idxprom844 = sext i32 %487 to i64, !dbg !5764
  %arrayidx845 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom844, !dbg !5764
  %488 = load i8, i8* %arrayidx845, align 1, !dbg !5764
  %conv846 = zext i8 %488 to i32, !dbg !5764
  %cmp847 = icmp sgt i32 %conv846, 1, !dbg !5765
  br i1 %cmp847, label %if.then849, label %if.end893, !dbg !5766

if.then849:                                       ; preds = %if.end843
  %489 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5767
  %bit_alloc_params850 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %489, i32 0, i32 91, !dbg !5770
  %490 = load i32, i32* %ch, align 4, !dbg !5771
  %idxprom851 = sext i32 %490 to i64, !dbg !5772
  %491 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5772
  %band_psd852 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %491, i32 0, i32 97, !dbg !5773
  %arrayidx853 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %band_psd852, i64 0, i64 %idxprom851, !dbg !5772
  %arraydecay854 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx853, i32 0, i32 0, !dbg !5772
  %492 = load i32, i32* %ch, align 4, !dbg !5774
  %idxprom855 = sext i32 %492 to i64, !dbg !5775
  %493 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5775
  %start_freq856 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %493, i32 0, i32 83, !dbg !5776
  %arrayidx857 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq856, i64 0, i64 %idxprom855, !dbg !5775
  %494 = load i32, i32* %arrayidx857, align 4, !dbg !5775
  %495 = load i32, i32* %ch, align 4, !dbg !5777
  %idxprom858 = sext i32 %495 to i64, !dbg !5778
  %496 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5778
  %end_freq859 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %496, i32 0, i32 84, !dbg !5779
  %arrayidx860 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq859, i64 0, i64 %idxprom858, !dbg !5778
  %497 = load i32, i32* %arrayidx860, align 4, !dbg !5778
  %498 = load i32, i32* %ch, align 4, !dbg !5780
  %idxprom861 = sext i32 %498 to i64, !dbg !5781
  %499 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5781
  %fast_gain862 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %499, i32 0, i32 94, !dbg !5782
  %arrayidx863 = getelementptr inbounds [7 x i32], [7 x i32]* %fast_gain862, i64 0, i64 %idxprom861, !dbg !5781
  %500 = load i32, i32* %arrayidx863, align 4, !dbg !5781
  %501 = load i32, i32* %ch, align 4, !dbg !5783
  %502 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5784
  %lfe_ch864 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %502, i32 0, i32 72, !dbg !5785
  %503 = load i32, i32* %lfe_ch864, align 4, !dbg !5785
  %cmp865 = icmp eq i32 %501, %503, !dbg !5786
  %conv866 = zext i1 %cmp865 to i32, !dbg !5786
  %504 = load i32, i32* %ch, align 4, !dbg !5787
  %idxprom867 = sext i32 %504 to i64, !dbg !5788
  %505 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5788
  %dba_mode868 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %505, i32 0, i32 99, !dbg !5789
  %arrayidx869 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_mode868, i64 0, i64 %idxprom867, !dbg !5788
  %506 = load i32, i32* %arrayidx869, align 4, !dbg !5788
  %507 = load i32, i32* %ch, align 4, !dbg !5790
  %idxprom870 = sext i32 %507 to i64, !dbg !5791
  %508 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5791
  %dba_nsegs871 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %508, i32 0, i32 100, !dbg !5792
  %arrayidx872 = getelementptr inbounds [7 x i32], [7 x i32]* %dba_nsegs871, i64 0, i64 %idxprom870, !dbg !5791
  %509 = load i32, i32* %arrayidx872, align 4, !dbg !5791
  %510 = load i32, i32* %ch, align 4, !dbg !5793
  %idxprom873 = sext i32 %510 to i64, !dbg !5794
  %511 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5794
  %dba_offsets874 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %511, i32 0, i32 101, !dbg !5795
  %arrayidx875 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_offsets874, i64 0, i64 %idxprom873, !dbg !5794
  %arraydecay876 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx875, i32 0, i32 0, !dbg !5794
  %512 = load i32, i32* %ch, align 4, !dbg !5796
  %idxprom877 = sext i32 %512 to i64, !dbg !5797
  %513 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5797
  %dba_lengths878 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %513, i32 0, i32 102, !dbg !5798
  %arrayidx879 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_lengths878, i64 0, i64 %idxprom877, !dbg !5797
  %arraydecay880 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx879, i32 0, i32 0, !dbg !5797
  %514 = load i32, i32* %ch, align 4, !dbg !5799
  %idxprom881 = sext i32 %514 to i64, !dbg !5800
  %515 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5800
  %dba_values882 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %515, i32 0, i32 103, !dbg !5801
  %arrayidx883 = getelementptr inbounds [7 x [8 x i8]], [7 x [8 x i8]]* %dba_values882, i64 0, i64 %idxprom881, !dbg !5800
  %arraydecay884 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx883, i32 0, i32 0, !dbg !5800
  %516 = load i32, i32* %ch, align 4, !dbg !5802
  %idxprom885 = sext i32 %516 to i64, !dbg !5803
  %517 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5803
  %mask = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %517, i32 0, i32 98, !dbg !5804
  %arrayidx886 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %mask, i64 0, i64 %idxprom885, !dbg !5803
  %arraydecay887 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx886, i32 0, i32 0, !dbg !5803
  %call888 = call i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters* %bit_alloc_params850, i16* %arraydecay854, i32 %494, i32 %497, i32 %500, i32 %conv866, i32 %506, i32 %509, i8* %arraydecay876, i8* %arraydecay880, i8* %arraydecay884, i16* %arraydecay887), !dbg !5805
  %tobool889 = icmp ne i32 %call888, 0, !dbg !5805
  br i1 %tobool889, label %if.then890, label %if.end892, !dbg !5806

if.then890:                                       ; preds = %if.then849
  %518 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5807
  %avctx891 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %518, i32 0, i32 1, !dbg !5809
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx891, align 8, !dbg !5809
  %520 = bitcast %struct.AVCodecContext* %519 to i8*, !dbg !5807
  call void (i8*, i32, i8*, ...) @av_log(i8* %520, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0)), !dbg !5810
  store i32 -1094995529, i32* %retval, align 4, !dbg !5811
  br label %return, !dbg !5811

if.end892:                                        ; preds = %if.then849
  br label %if.end893, !dbg !5812

if.end893:                                        ; preds = %if.end892, %if.end843
  %521 = load i32, i32* %ch, align 4, !dbg !5813
  %idxprom894 = sext i32 %521 to i64, !dbg !5815
  %arrayidx895 = getelementptr inbounds [7 x i8], [7 x i8]* %bit_alloc_stages, i64 0, i64 %idxprom894, !dbg !5815
  %522 = load i8, i8* %arrayidx895, align 1, !dbg !5815
  %conv896 = zext i8 %522 to i32, !dbg !5815
  %cmp897 = icmp sgt i32 %conv896, 0, !dbg !5816
  br i1 %cmp897, label %if.then899, label %if.end926, !dbg !5817

if.then899:                                       ; preds = %if.end893
  call void @llvm.dbg.declare(metadata i8** %bap_tab, metadata !5818, metadata !1854), !dbg !5820
  %523 = load i32, i32* %ch, align 4, !dbg !5821
  %idxprom900 = sext i32 %523 to i64, !dbg !5822
  %524 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5822
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %524, i32 0, i32 68, !dbg !5823
  %arrayidx901 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 %idxprom900, !dbg !5822
  %525 = load i32, i32* %arrayidx901, align 4, !dbg !5822
  %tobool902 = icmp ne i32 %525, 0, !dbg !5822
  %cond903 = select i1 %tobool902, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_eac3_hebap_tab, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_ac3_bap_tab, i32 0, i32 0), !dbg !5822
  store i8* %cond903, i8** %bap_tab, align 8, !dbg !5820
  %526 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5824
  %ac3dsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %526, i32 0, i32 111, !dbg !5825
  %bit_alloc_calc_bap = getelementptr inbounds %struct.AC3DSPContext, %struct.AC3DSPContext* %ac3dsp, i32 0, i32 5, !dbg !5826
  %527 = load void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)*, void (i16*, i16*, i32, i32, i32, i32, i8*, i8*)** %bit_alloc_calc_bap, align 8, !dbg !5826
  %528 = load i32, i32* %ch, align 4, !dbg !5827
  %idxprom904 = sext i32 %528 to i64, !dbg !5828
  %529 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5828
  %mask905 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %529, i32 0, i32 98, !dbg !5829
  %arrayidx906 = getelementptr inbounds [7 x [50 x i16]], [7 x [50 x i16]]* %mask905, i64 0, i64 %idxprom904, !dbg !5828
  %arraydecay907 = getelementptr inbounds [50 x i16], [50 x i16]* %arrayidx906, i32 0, i32 0, !dbg !5828
  %530 = load i32, i32* %ch, align 4, !dbg !5830
  %idxprom908 = sext i32 %530 to i64, !dbg !5831
  %531 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5831
  %psd909 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %531, i32 0, i32 96, !dbg !5832
  %arrayidx910 = getelementptr inbounds [7 x [256 x i16]], [7 x [256 x i16]]* %psd909, i64 0, i64 %idxprom908, !dbg !5831
  %arraydecay911 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx910, i32 0, i32 0, !dbg !5831
  %532 = load i32, i32* %ch, align 4, !dbg !5833
  %idxprom912 = sext i32 %532 to i64, !dbg !5834
  %533 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5834
  %start_freq913 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %533, i32 0, i32 83, !dbg !5835
  %arrayidx914 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq913, i64 0, i64 %idxprom912, !dbg !5834
  %534 = load i32, i32* %arrayidx914, align 4, !dbg !5834
  %535 = load i32, i32* %ch, align 4, !dbg !5836
  %idxprom915 = sext i32 %535 to i64, !dbg !5837
  %536 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5837
  %end_freq916 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %536, i32 0, i32 84, !dbg !5838
  %arrayidx917 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq916, i64 0, i64 %idxprom915, !dbg !5837
  %537 = load i32, i32* %arrayidx917, align 4, !dbg !5837
  %538 = load i32, i32* %ch, align 4, !dbg !5839
  %idxprom918 = sext i32 %538 to i64, !dbg !5840
  %539 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5840
  %snr_offset919 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %539, i32 0, i32 93, !dbg !5841
  %arrayidx920 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset919, i64 0, i64 %idxprom918, !dbg !5840
  %540 = load i32, i32* %arrayidx920, align 4, !dbg !5840
  %541 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5842
  %bit_alloc_params921 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %541, i32 0, i32 91, !dbg !5843
  %floor922 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params921, i32 0, i32 6, !dbg !5844
  %542 = load i32, i32* %floor922, align 8, !dbg !5844
  %543 = load i8*, i8** %bap_tab, align 8, !dbg !5845
  %544 = load i32, i32* %ch, align 4, !dbg !5846
  %idxprom923 = sext i32 %544 to i64, !dbg !5847
  %545 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5847
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %545, i32 0, i32 95, !dbg !5848
  %arrayidx924 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom923, !dbg !5847
  %arraydecay925 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx924, i32 0, i32 0, !dbg !5847
  call void %527(i16* %arraydecay907, i16* %arraydecay911, i32 %534, i32 %537, i32 %540, i32 %542, i8* %543, i8* %arraydecay925), !dbg !5824
  br label %if.end926, !dbg !5849

if.end926:                                        ; preds = %if.then899, %if.end893
  br label %for.inc927, !dbg !5850

for.inc927:                                       ; preds = %if.end926
  %546 = load i32, i32* %ch, align 4, !dbg !5851
  %inc928 = add nsw i32 %546, 1, !dbg !5851
  store i32 %inc928, i32* %ch, align 4, !dbg !5851
  br label %for.cond816, !dbg !5853, !llvm.loop !5854

for.end929:                                       ; preds = %for.cond816
  %547 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5856
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %547, i32 0, i32 44, !dbg !5858
  %548 = load i32, i32* %skip_syntax, align 4, !dbg !5858
  %tobool930 = icmp ne i32 %548, 0, !dbg !5856
  br i1 %tobool930, label %land.lhs.true931, label %if.end937, !dbg !5859

land.lhs.true931:                                 ; preds = %for.end929
  %549 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5860
  %call932 = call i32 @get_bits1(%struct.GetBitContext* %549), !dbg !5862
  %tobool933 = icmp ne i32 %call932, 0, !dbg !5862
  br i1 %tobool933, label %if.then934, label %if.end937, !dbg !5863

if.then934:                                       ; preds = %land.lhs.true931
  call void @llvm.dbg.declare(metadata i32* %skipl, metadata !5864, metadata !1854), !dbg !5866
  %550 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5867
  %call935 = call i32 @get_bits(%struct.GetBitContext* %550, i32 9), !dbg !5868
  store i32 %call935, i32* %skipl, align 4, !dbg !5866
  %551 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !5869
  %552 = load i32, i32* %skipl, align 4, !dbg !5870
  %mul936 = mul nsw i32 8, %552, !dbg !5871
  call void @skip_bits_long(%struct.GetBitContext* %551, i32 %mul936), !dbg !5872
  br label %if.end937, !dbg !5873

if.end937:                                        ; preds = %if.then934, %land.lhs.true931, %for.end929
  %553 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5874
  %554 = load i32, i32* %blk.addr, align 4, !dbg !5875
  call void @decode_transform_coeffs(%struct.AC3DecodeContext* %553, i32 %554), !dbg !5876
  %555 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5877
  %channel_mode938 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %555, i32 0, i32 12, !dbg !5879
  %556 = load i32, i32* %channel_mode938, align 4, !dbg !5879
  %cmp939 = icmp eq i32 %556, 2, !dbg !5880
  br i1 %cmp939, label %if.then941, label %if.end942, !dbg !5881

if.then941:                                       ; preds = %if.end937
  %557 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5882
  call void @do_rematrixing(%struct.AC3DecodeContext* %557), !dbg !5883
  br label %if.end942, !dbg !5883

if.end942:                                        ; preds = %if.then941, %if.end937
  store i32 1, i32* %ch, align 4, !dbg !5884
  br label %for.cond943, !dbg !5886

for.cond943:                                      ; preds = %for.inc986, %if.end942
  %558 = load i32, i32* %ch, align 4, !dbg !5887
  %559 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5890
  %channels944 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %559, i32 0, i32 71, !dbg !5891
  %560 = load i32, i32* %channels944, align 8, !dbg !5891
  %cmp945 = icmp sle i32 %558, %560, !dbg !5892
  br i1 %cmp945, label %for.body947, label %for.end988, !dbg !5893

for.body947:                                      ; preds = %for.cond943
  call void @llvm.dbg.declare(metadata i32* %audio_channel, metadata !5894, metadata !1854), !dbg !5896
  store i32 0, i32* %audio_channel, align 4, !dbg !5896
  call void @llvm.dbg.declare(metadata float* %gain, metadata !5897, metadata !1854), !dbg !5898
  %561 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5899
  %channel_mode948 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %561, i32 0, i32 12, !dbg !5901
  %562 = load i32, i32* %channel_mode948, align 4, !dbg !5901
  %cmp949 = icmp eq i32 %562, 0, !dbg !5902
  br i1 %cmp949, label %land.lhs.true951, label %if.end956, !dbg !5903

land.lhs.true951:                                 ; preds = %for.body947
  %563 = load i32, i32* %ch, align 4, !dbg !5904
  %cmp952 = icmp sle i32 %563, 2, !dbg !5906
  br i1 %cmp952, label %if.then954, label %if.end956, !dbg !5907

if.then954:                                       ; preds = %land.lhs.true951
  %564 = load i32, i32* %ch, align 4, !dbg !5908
  %sub955 = sub nsw i32 2, %564, !dbg !5909
  store i32 %sub955, i32* %audio_channel, align 4, !dbg !5910
  br label %if.end956, !dbg !5911

if.end956:                                        ; preds = %if.then954, %land.lhs.true951, %for.body947
  %565 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5912
  %heavy_compression = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %565, i32 0, i32 81, !dbg !5914
  %566 = load i32, i32* %heavy_compression, align 32, !dbg !5914
  %tobool957 = icmp ne i32 %566, 0, !dbg !5912
  br i1 %tobool957, label %land.lhs.true958, label %if.else965, !dbg !5915

land.lhs.true958:                                 ; preds = %if.end956
  %567 = load i32, i32* %audio_channel, align 4, !dbg !5916
  %idxprom959 = sext i32 %567 to i64, !dbg !5918
  %568 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5918
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %568, i32 0, i32 15, !dbg !5919
  %arrayidx960 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom959, !dbg !5918
  %569 = load i32, i32* %arrayidx960, align 4, !dbg !5918
  %tobool961 = icmp ne i32 %569, 0, !dbg !5918
  br i1 %tobool961, label %if.then962, label %if.else965, !dbg !5920

if.then962:                                       ; preds = %land.lhs.true958
  %570 = load i32, i32* %audio_channel, align 4, !dbg !5921
  %idxprom963 = sext i32 %570 to i64, !dbg !5922
  %571 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5922
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %571, i32 0, i32 82, !dbg !5923
  %arrayidx964 = getelementptr inbounds [2 x float], [2 x float]* %heavy_dynamic_range, i64 0, i64 %idxprom963, !dbg !5922
  %572 = load float, float* %arrayidx964, align 4, !dbg !5922
  store float %572, float* %gain, align 4, !dbg !5924
  br label %if.end969, !dbg !5925

if.else965:                                       ; preds = %land.lhs.true958, %if.end956
  %573 = load i32, i32* %audio_channel, align 4, !dbg !5926
  %idxprom966 = sext i32 %573 to i64, !dbg !5927
  %574 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5927
  %dynamic_range967 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %574, i32 0, i32 79, !dbg !5928
  %arrayidx968 = getelementptr inbounds [2 x float], [2 x float]* %dynamic_range967, i64 0, i64 %idxprom966, !dbg !5927
  %575 = load float, float* %arrayidx968, align 4, !dbg !5927
  store float %575, float* %gain, align 4, !dbg !5929
  br label %if.end969

if.end969:                                        ; preds = %if.else965, %if.then962
  %576 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5930
  %target_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %576, i32 0, i32 36, !dbg !5932
  %577 = load i32, i32* %target_level, align 32, !dbg !5932
  %cmp970 = icmp ne i32 %577, 0, !dbg !5933
  br i1 %cmp970, label %if.then972, label %if.end976, !dbg !5934

if.then972:                                       ; preds = %if.end969
  %578 = load float, float* %gain, align 4, !dbg !5935
  %579 = load i32, i32* %audio_channel, align 4, !dbg !5936
  %idxprom973 = sext i32 %579 to i64, !dbg !5937
  %580 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5937
  %level_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %580, i32 0, i32 37, !dbg !5938
  %arrayidx974 = getelementptr inbounds [2 x float], [2 x float]* %level_gain, i64 0, i64 %idxprom973, !dbg !5937
  %581 = load float, float* %arrayidx974, align 4, !dbg !5937
  %mul975 = fmul float %578, %581, !dbg !5939
  store float %mul975, float* %gain, align 4, !dbg !5940
  br label %if.end976, !dbg !5941

if.end976:                                        ; preds = %if.then972, %if.end969
  %582 = load float, float* %gain, align 4, !dbg !5942
  %conv977 = fpext float %582 to double, !dbg !5942
  %mul978 = fmul double %conv977, 0x3E90000000000000, !dbg !5942
  %conv979 = fptrunc double %mul978 to float, !dbg !5942
  store float %conv979, float* %gain, align 4, !dbg !5942
  %583 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5943
  %fmt_conv = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %583, i32 0, i32 112, !dbg !5944
  %int32_to_float_fmul_scalar = getelementptr inbounds %struct.FmtConvertContext, %struct.FmtConvertContext* %fmt_conv, i32 0, i32 0, !dbg !5945
  %584 = load void (float*, i32*, float, i32)*, void (float*, i32*, float, i32)** %int32_to_float_fmul_scalar, align 8, !dbg !5945
  %585 = load i32, i32* %ch, align 4, !dbg !5946
  %idxprom980 = sext i32 %585 to i64, !dbg !5947
  %586 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5947
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %586, i32 0, i32 119, !dbg !5948
  %arrayidx981 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs, i64 0, i64 %idxprom980, !dbg !5947
  %arraydecay982 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx981, i32 0, i32 0, !dbg !5947
  %587 = load i32, i32* %ch, align 4, !dbg !5949
  %idxprom983 = sext i32 %587 to i64, !dbg !5950
  %588 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5950
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %588, i32 0, i32 117, !dbg !5951
  %arrayidx984 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom983, !dbg !5950
  %arraydecay985 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx984, i32 0, i32 0, !dbg !5950
  %589 = load float, float* %gain, align 4, !dbg !5952
  call void %584(float* %arraydecay982, i32* %arraydecay985, float %589, i32 256), !dbg !5943
  br label %for.inc986, !dbg !5953

for.inc986:                                       ; preds = %if.end976
  %590 = load i32, i32* %ch, align 4, !dbg !5954
  %inc987 = add nsw i32 %590, 1, !dbg !5954
  store i32 %inc987, i32* %ch, align 4, !dbg !5954
  br label %for.cond943, !dbg !5956, !llvm.loop !5957

for.end988:                                       ; preds = %for.cond943
  %591 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5959
  %spx_in_use989 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %591, i32 0, i32 56, !dbg !5961
  %592 = load i32, i32* %spx_in_use989, align 32, !dbg !5961
  %tobool990 = icmp ne i32 %592, 0, !dbg !5959
  br i1 %tobool990, label %if.then991, label %if.end992, !dbg !5962

if.then991:                                       ; preds = %for.end988
  %593 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5963
  call void @ff_eac3_apply_spectral_extension(%struct.AC3DecodeContext* %593), !dbg !5965
  br label %if.end992, !dbg !5966

if.end992:                                        ; preds = %if.then991, %for.end988
  %594 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5967
  %channels993 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %594, i32 0, i32 71, !dbg !5968
  %595 = load i32, i32* %channels993, align 8, !dbg !5968
  %596 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5969
  %out_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %596, i32 0, i32 77, !dbg !5970
  %597 = load i32, i32* %out_channels, align 4, !dbg !5970
  %cmp994 = icmp ne i32 %595, %597, !dbg !5971
  br i1 %cmp994, label %land.rhs, label %land.end1004, !dbg !5972

land.rhs:                                         ; preds = %if.end992
  %598 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5973
  %output_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %598, i32 0, i32 75, !dbg !5974
  %599 = load i32, i32* %output_mode, align 4, !dbg !5974
  %and = and i32 %599, 8, !dbg !5975
  %tobool996 = icmp ne i32 %and, 0, !dbg !5975
  br i1 %tobool996, label %land.rhs997, label %land.end, !dbg !5976

land.rhs997:                                      ; preds = %land.rhs
  %600 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5977
  %fbw_channels998 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %600, i32 0, i32 70, !dbg !5978
  %601 = load i32, i32* %fbw_channels998, align 4, !dbg !5978
  %602 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5979
  %out_channels999 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %602, i32 0, i32 77, !dbg !5980
  %603 = load i32, i32* %out_channels999, align 4, !dbg !5980
  %cmp1000 = icmp eq i32 %601, %603, !dbg !5981
  br label %land.end

land.end:                                         ; preds = %land.rhs997, %land.rhs
  %604 = phi i1 [ false, %land.rhs ], [ %cmp1000, %land.rhs997 ]
  %lnot1002 = xor i1 %604, true, !dbg !5982
  br label %land.end1004

land.end1004:                                     ; preds = %land.end, %if.end992
  %605 = phi i1 [ false, %if.end992 ], [ %lnot1002, %land.end ]
  %land.ext = zext i1 %605 to i32, !dbg !5983
  store i32 %land.ext, i32* %downmix_output, align 4, !dbg !5984
  %606 = load i32, i32* %different_transforms, align 4, !dbg !5985
  %tobool1005 = icmp ne i32 %606, 0, !dbg !5985
  br i1 %tobool1005, label %if.then1006, label %if.else1020, !dbg !5987

if.then1006:                                      ; preds = %land.end1004
  %607 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5988
  %downmixed = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %607, i32 0, i32 74, !dbg !5991
  %608 = load i32, i32* %downmixed, align 32, !dbg !5991
  %tobool1007 = icmp ne i32 %608, 0, !dbg !5988
  br i1 %tobool1007, label %if.then1008, label %if.end1010, !dbg !5992

if.then1008:                                      ; preds = %if.then1006
  %609 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5993
  %downmixed1009 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %609, i32 0, i32 74, !dbg !5995
  store i32 0, i32* %downmixed1009, align 32, !dbg !5996
  %610 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !5997
  call void @ac3_upmix_delay(%struct.AC3DecodeContext* %610), !dbg !5998
  br label %if.end1010, !dbg !5999

if.end1010:                                       ; preds = %if.then1008, %if.then1006
  %611 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6000
  %612 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6001
  %channels1011 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %612, i32 0, i32 71, !dbg !6002
  %613 = load i32, i32* %channels1011, align 8, !dbg !6002
  %614 = load i32, i32* %offset.addr, align 4, !dbg !6003
  call void @do_imdct(%struct.AC3DecodeContext* %611, i32 %613, i32 %614), !dbg !6004
  %615 = load i32, i32* %downmix_output, align 4, !dbg !6005
  %tobool1012 = icmp ne i32 %615, 0, !dbg !6005
  br i1 %tobool1012, label %if.then1013, label %if.end1019, !dbg !6007

if.then1013:                                      ; preds = %if.end1010
  %616 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6008
  %ac3dsp1014 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %616, i32 0, i32 111, !dbg !6010
  %617 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6011
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %617, i32 0, i32 113, !dbg !6012
  %arraydecay1015 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr, i32 0, i32 0, !dbg !6011
  %618 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6013
  %downmix_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %618, i32 0, i32 73, !dbg !6014
  %arraydecay1016 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs, i32 0, i32 0, !dbg !6013
  %619 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6015
  %out_channels1017 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %619, i32 0, i32 77, !dbg !6016
  %620 = load i32, i32* %out_channels1017, align 4, !dbg !6016
  %621 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6017
  %fbw_channels1018 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %621, i32 0, i32 70, !dbg !6018
  %622 = load i32, i32* %fbw_channels1018, align 4, !dbg !6018
  call void @ff_ac3dsp_downmix(%struct.AC3DSPContext* %ac3dsp1014, float** %arraydecay1015, float** %arraydecay1016, i32 %620, i32 %622, i32 256), !dbg !6019
  br label %if.end1019, !dbg !6020

if.end1019:                                       ; preds = %if.then1013, %if.end1010
  br label %if.end1044, !dbg !6021

if.else1020:                                      ; preds = %land.end1004
  %623 = load i32, i32* %downmix_output, align 4, !dbg !6022
  %tobool1021 = icmp ne i32 %623, 0, !dbg !6022
  br i1 %tobool1021, label %if.then1022, label %if.end1029, !dbg !6025

if.then1022:                                      ; preds = %if.else1020
  %624 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6026
  %ac3dsp1023 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %624, i32 0, i32 111, !dbg !6028
  %625 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6029
  %xcfptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %625, i32 0, i32 114, !dbg !6030
  %arraydecay1024 = getelementptr inbounds [7 x float*], [7 x float*]* %xcfptr, i32 0, i32 0, !dbg !6029
  %add.ptr = getelementptr inbounds float*, float** %arraydecay1024, i64 1, !dbg !6031
  %626 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6032
  %downmix_coeffs1025 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %626, i32 0, i32 73, !dbg !6033
  %arraydecay1026 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs1025, i32 0, i32 0, !dbg !6032
  %627 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6034
  %out_channels1027 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %627, i32 0, i32 77, !dbg !6035
  %628 = load i32, i32* %out_channels1027, align 4, !dbg !6035
  %629 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6036
  %fbw_channels1028 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %629, i32 0, i32 70, !dbg !6037
  %630 = load i32, i32* %fbw_channels1028, align 4, !dbg !6037
  call void @ff_ac3dsp_downmix(%struct.AC3DSPContext* %ac3dsp1023, float** %add.ptr, float** %arraydecay1026, i32 %628, i32 %630, i32 256), !dbg !6038
  br label %if.end1029, !dbg !6039

if.end1029:                                       ; preds = %if.then1022, %if.else1020
  %631 = load i32, i32* %downmix_output, align 4, !dbg !6040
  %tobool1030 = icmp ne i32 %631, 0, !dbg !6040
  br i1 %tobool1030, label %land.lhs.true1031, label %if.end1042, !dbg !6042

land.lhs.true1031:                                ; preds = %if.end1029
  %632 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6043
  %downmixed1032 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %632, i32 0, i32 74, !dbg !6045
  %633 = load i32, i32* %downmixed1032, align 32, !dbg !6045
  %tobool1033 = icmp ne i32 %633, 0, !dbg !6043
  br i1 %tobool1033, label %if.end1042, label %if.then1034, !dbg !6046

if.then1034:                                      ; preds = %land.lhs.true1031
  %634 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6047
  %downmixed1035 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %634, i32 0, i32 74, !dbg !6049
  store i32 1, i32* %downmixed1035, align 32, !dbg !6050
  %635 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6051
  %ac3dsp1036 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %635, i32 0, i32 111, !dbg !6052
  %636 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6053
  %dlyptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %636, i32 0, i32 115, !dbg !6054
  %arraydecay1037 = getelementptr inbounds [7 x float*], [7 x float*]* %dlyptr, i32 0, i32 0, !dbg !6053
  %637 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6055
  %downmix_coeffs1038 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %637, i32 0, i32 73, !dbg !6056
  %arraydecay1039 = getelementptr inbounds [2 x float*], [2 x float*]* %downmix_coeffs1038, i32 0, i32 0, !dbg !6055
  %638 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6057
  %out_channels1040 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %638, i32 0, i32 77, !dbg !6058
  %639 = load i32, i32* %out_channels1040, align 4, !dbg !6058
  %640 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6059
  %fbw_channels1041 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %640, i32 0, i32 70, !dbg !6060
  %641 = load i32, i32* %fbw_channels1041, align 4, !dbg !6060
  call void @ff_ac3dsp_downmix(%struct.AC3DSPContext* %ac3dsp1036, float** %arraydecay1037, float** %arraydecay1039, i32 %639, i32 %641, i32 128), !dbg !6061
  br label %if.end1042, !dbg !6062

if.end1042:                                       ; preds = %if.then1034, %land.lhs.true1031, %if.end1029
  %642 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6063
  %643 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6064
  %out_channels1043 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %643, i32 0, i32 77, !dbg !6065
  %644 = load i32, i32* %out_channels1043, align 4, !dbg !6065
  %645 = load i32, i32* %offset.addr, align 4, !dbg !6066
  call void @do_imdct(%struct.AC3DecodeContext* %642, i32 %644, i32 %645), !dbg !6067
  br label %if.end1044

if.end1044:                                       ; preds = %if.end1042, %if.end1019
  store i32 0, i32* %retval, align 4, !dbg !6068
  br label %return, !dbg !6068

return:                                           ; preds = %if.end1044, %if.then890, %if.then711, %if.then685, %if.then558, %if.then449, %if.then376, %if.then262, %if.then133, %if.then114, %if.then107, %if.then69
  %646 = load i32, i32* %retval, align 4, !dbg !6069
  ret i32 %646, !dbg !6069
}

declare i32 @ff_ac3_parse_header(%struct.GetBitContext*, %struct.AC3HeaderInfo*) #2

declare i32 @av_get_channel_layout_nb_channels(i64) #2

declare i32 @av_get_channel_layout_channel_index(i64, i64) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

; Function Attrs: noreturn nounwind
declare void @abort() #8

declare i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame*, i32) #2

declare %struct.AVDownmixInfo* @av_downmix_info_update_side_data(%struct.AVFrame*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !6070 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6071, metadata !1854), !dbg !6072
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6073, metadata !1854), !dbg !6074
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !6075, metadata !1854), !dbg !6076
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !6077, metadata !1854), !dbg !6078
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6079, metadata !1854), !dbg !6080
  store i32 0, i32* %ret, align 4, !dbg !6080
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !6081
  %cmp = icmp sge i32 %0, 2147483135, !dbg !6083
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6084

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !6085
  %cmp1 = icmp slt i32 %1, 0, !dbg !6087
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !6088

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !6089
  %tobool = icmp ne i8* %2, null, !dbg !6089
  br i1 %tobool, label %if.end, label %if.then, !dbg !6091

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !6092
  store i8* null, i8** %buffer.addr, align 8, !dbg !6094
  store i32 -1094995529, i32* %ret, align 4, !dbg !6095
  br label %if.end, !dbg !6096

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !6097
  %add = add nsw i32 %3, 7, !dbg !6098
  %shr = ashr i32 %add, 3, !dbg !6099
  store i32 %shr, i32* %buffer_size, align 4, !dbg !6100
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !6101
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6102
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !6103
  store i8* %4, i8** %buffer3, align 8, !dbg !6104
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !6105
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6106
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !6107
  store i32 %6, i32* %size_in_bits, align 4, !dbg !6108
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !6109
  %add4 = add nsw i32 %8, 8, !dbg !6110
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6111
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !6112
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !6113
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !6114
  %11 = load i32, i32* %buffer_size, align 4, !dbg !6115
  %idx.ext = sext i32 %11 to i64, !dbg !6116
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !6116
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6117
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !6118
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !6119
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6120
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !6121
  store i32 0, i32* %index, align 8, !dbg !6122
  %14 = load i32, i32* %ret, align 4, !dbg !6123
  ret i32 %14, !dbg !6124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i32 @ac3_parse_header(%struct.AC3DecodeContext* %s) #1 !dbg !6125 {
entry:
  %retval.i113 = alloca i32, align 4
  %a.addr.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i114, metadata !6126, metadata !1854), !dbg !6131
  %amin.addr.i115 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i115, metadata !6138, metadata !1854), !dbg !6139
  %amax.addr.i116 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i116, metadata !6140, metadata !1854), !dbg !6141
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6126, metadata !1854), !dbg !6142
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6138, metadata !1854), !dbg !6144
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6140, metadata !1854), !dbg !6145
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %gbc = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !6146, metadata !1854), !dbg !6147
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !6148, metadata !1854), !dbg !6149
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6150
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !6151
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !6149
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6152, metadata !1854), !dbg !6153
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6154
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 12, !dbg !6155
  %2 = load i32, i32* %channel_mode, align 4, !dbg !6155
  %tobool = icmp ne i32 %2, 0, !dbg !6156
  %lnot = xor i1 %tobool, true, !dbg !6156
  %lnot.ext = zext i1 %lnot to i32, !dbg !6156
  store i32 %lnot.ext, i32* %i, align 4, !dbg !6157
  br label %do.body, !dbg !6158, !llvm.loop !6159

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6160
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 5), !dbg !6162
  %sub = sub i32 0, %call, !dbg !6163
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6164
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 12, !dbg !6165
  %5 = load i32, i32* %channel_mode2, align 4, !dbg !6165
  %tobool3 = icmp ne i32 %5, 0, !dbg !6166
  %lnot4 = xor i1 %tobool3, true, !dbg !6166
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6166
  %6 = load i32, i32* %i, align 4, !dbg !6167
  %sub6 = sub nsw i32 %lnot.ext5, %6, !dbg !6168
  %idxprom = sext i32 %sub6 to i64, !dbg !6169
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6169
  %dialog_normalization = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 14, !dbg !6170
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization, i64 0, i64 %idxprom, !dbg !6169
  store i32 %sub, i32* %arrayidx, align 4, !dbg !6171
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6172
  %channel_mode7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 12, !dbg !6174
  %9 = load i32, i32* %channel_mode7, align 4, !dbg !6174
  %tobool8 = icmp ne i32 %9, 0, !dbg !6175
  %lnot9 = xor i1 %tobool8, true, !dbg !6175
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6175
  %10 = load i32, i32* %i, align 4, !dbg !6176
  %sub11 = sub nsw i32 %lnot.ext10, %10, !dbg !6177
  %idxprom12 = sext i32 %sub11 to i64, !dbg !6178
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6178
  %dialog_normalization13 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 14, !dbg !6179
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization13, i64 0, i64 %idxprom12, !dbg !6178
  %12 = load i32, i32* %arrayidx14, align 4, !dbg !6178
  %cmp = icmp eq i32 %12, 0, !dbg !6180
  br i1 %cmp, label %if.then, label %if.end, !dbg !6181

if.then:                                          ; preds = %do.body
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6182
  %channel_mode15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 12, !dbg !6184
  %14 = load i32, i32* %channel_mode15, align 4, !dbg !6184
  %tobool16 = icmp ne i32 %14, 0, !dbg !6185
  %lnot17 = xor i1 %tobool16, true, !dbg !6185
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6185
  %15 = load i32, i32* %i, align 4, !dbg !6186
  %sub19 = sub nsw i32 %lnot.ext18, %15, !dbg !6187
  %idxprom20 = sext i32 %sub19 to i64, !dbg !6188
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6188
  %dialog_normalization21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 14, !dbg !6189
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization21, i64 0, i64 %idxprom20, !dbg !6188
  store i32 -31, i32* %arrayidx22, align 4, !dbg !6190
  br label %if.end, !dbg !6191

if.end:                                           ; preds = %if.then, %do.body
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6192
  %target_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 36, !dbg !6194
  %18 = load i32, i32* %target_level, align 32, !dbg !6194
  %cmp23 = icmp ne i32 %18, 0, !dbg !6195
  br i1 %cmp23, label %if.then24, label %if.end43, !dbg !6196

if.then24:                                        ; preds = %if.end
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6197
  %target_level25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 36, !dbg !6199
  %20 = load i32, i32* %target_level25, align 32, !dbg !6199
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6200
  %channel_mode26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 12, !dbg !6201
  %22 = load i32, i32* %channel_mode26, align 4, !dbg !6201
  %tobool27 = icmp ne i32 %22, 0, !dbg !6202
  %lnot28 = xor i1 %tobool27, true, !dbg !6202
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !6202
  %23 = load i32, i32* %i, align 4, !dbg !6203
  %sub30 = sub nsw i32 %lnot.ext29, %23, !dbg !6204
  %idxprom31 = sext i32 %sub30 to i64, !dbg !6205
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6205
  %dialog_normalization32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 14, !dbg !6206
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization32, i64 0, i64 %idxprom31, !dbg !6205
  %25 = load i32, i32* %arrayidx33, align 4, !dbg !6205
  %sub34 = sub nsw i32 %20, %25, !dbg !6207
  %conv = sitofp i32 %sub34 to float, !dbg !6208
  %div = fdiv float %conv, 6.000000e+00, !dbg !6209
  %call35 = call float @powf(float 2.000000e+00, float %div) #11, !dbg !6210
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6211
  %channel_mode36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 12, !dbg !6212
  %27 = load i32, i32* %channel_mode36, align 4, !dbg !6212
  %tobool37 = icmp ne i32 %27, 0, !dbg !6213
  %lnot38 = xor i1 %tobool37, true, !dbg !6213
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !6213
  %28 = load i32, i32* %i, align 4, !dbg !6214
  %sub40 = sub nsw i32 %lnot.ext39, %28, !dbg !6215
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6216
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6216
  %level_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 37, !dbg !6217
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %level_gain, i64 0, i64 %idxprom41, !dbg !6216
  store float %call35, float* %arrayidx42, align 4, !dbg !6218
  br label %if.end43, !dbg !6219

if.end43:                                         ; preds = %if.then24, %if.end
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6220
  %call44 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !6222
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6223
  %channel_mode45 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 12, !dbg !6224
  %32 = load i32, i32* %channel_mode45, align 4, !dbg !6224
  %tobool46 = icmp ne i32 %32, 0, !dbg !6225
  %lnot47 = xor i1 %tobool46, true, !dbg !6225
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !6225
  %33 = load i32, i32* %i, align 4, !dbg !6226
  %sub49 = sub nsw i32 %lnot.ext48, %33, !dbg !6227
  %idxprom50 = sext i32 %sub49 to i64, !dbg !6228
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6228
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 15, !dbg !6229
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom50, !dbg !6228
  store i32 %call44, i32* %arrayidx51, align 4, !dbg !6230
  %tobool52 = icmp ne i32 %call44, 0, !dbg !6230
  br i1 %tobool52, label %if.then53, label %if.end64, !dbg !6231

if.then53:                                        ; preds = %if.end43
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6232
  %call54 = call i32 @get_bits(%struct.GetBitContext* %35, i32 8), !dbg !6234
  %idxprom55 = zext i32 %call54 to i64, !dbg !6235
  %arrayidx56 = getelementptr inbounds [256 x float], [256 x float]* @ff_ac3_heavy_dynamic_range_tab, i64 0, i64 %idxprom55, !dbg !6235
  %36 = load float, float* %arrayidx56, align 4, !dbg !6235
  %37 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6236
  %channel_mode57 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %37, i32 0, i32 12, !dbg !6237
  %38 = load i32, i32* %channel_mode57, align 4, !dbg !6237
  %tobool58 = icmp ne i32 %38, 0, !dbg !6238
  %lnot59 = xor i1 %tobool58, true, !dbg !6238
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !6238
  %39 = load i32, i32* %i, align 4, !dbg !6239
  %sub61 = sub nsw i32 %lnot.ext60, %39, !dbg !6240
  %idxprom62 = sext i32 %sub61 to i64, !dbg !6241
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6241
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 82, !dbg !6242
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %heavy_dynamic_range, i64 0, i64 %idxprom62, !dbg !6241
  store float %36, float* %arrayidx63, align 4, !dbg !6243
  br label %if.end64, !dbg !6244

if.end64:                                         ; preds = %if.then53, %if.end43
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6245
  %call65 = call i32 @get_bits1(%struct.GetBitContext* %41), !dbg !6247
  %tobool66 = icmp ne i32 %call65, 0, !dbg !6247
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !6248

if.then67:                                        ; preds = %if.end64
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6249
  call void @skip_bits(%struct.GetBitContext* %42, i32 8), !dbg !6250
  br label %if.end68, !dbg !6250

if.end68:                                         ; preds = %if.then67, %if.end64
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6251
  %call69 = call i32 @get_bits1(%struct.GetBitContext* %43), !dbg !6253
  %tobool70 = icmp ne i32 %call69, 0, !dbg !6253
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !6254

if.then71:                                        ; preds = %if.end68
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6255
  call void @skip_bits(%struct.GetBitContext* %44, i32 7), !dbg !6256
  br label %if.end72, !dbg !6256

if.end72:                                         ; preds = %if.then71, %if.end68
  br label %do.cond, !dbg !6257

do.cond:                                          ; preds = %if.end72
  %45 = load i32, i32* %i, align 4, !dbg !6258
  %dec = add nsw i32 %45, -1, !dbg !6258
  store i32 %dec, i32* %i, align 4, !dbg !6258
  %tobool73 = icmp ne i32 %45, 0, !dbg !6260
  br i1 %tobool73, label %do.body, label %do.end, !dbg !6260, !llvm.loop !6159

do.end:                                           ; preds = %do.cond
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6261
  call void @skip_bits(%struct.GetBitContext* %46, i32 2), !dbg !6262
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6263
  %bitstream_id = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 10, !dbg !6264
  %48 = load i32, i32* %bitstream_id, align 4, !dbg !6264
  %cmp74 = icmp ne i32 %48, 6, !dbg !6265
  br i1 %cmp74, label %if.then76, label %if.else, !dbg !6266

if.then76:                                        ; preds = %do.end
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6267
  %call77 = call i32 @get_bits1(%struct.GetBitContext* %49), !dbg !6270
  %tobool78 = icmp ne i32 %call77, 0, !dbg !6270
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !6271

if.then79:                                        ; preds = %if.then76
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6272
  call void @skip_bits(%struct.GetBitContext* %50, i32 14), !dbg !6273
  br label %if.end80, !dbg !6273

if.end80:                                         ; preds = %if.then79, %if.then76
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6274
  %call81 = call i32 @get_bits1(%struct.GetBitContext* %51), !dbg !6276
  %tobool82 = icmp ne i32 %call81, 0, !dbg !6276
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !6277

if.then83:                                        ; preds = %if.end80
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6278
  call void @skip_bits(%struct.GetBitContext* %52, i32 14), !dbg !6279
  br label %if.end84, !dbg !6279

if.end84:                                         ; preds = %if.then83, %if.end80
  br label %if.end102, !dbg !6280

if.else:                                          ; preds = %do.end
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6281
  %call85 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !6282
  %tobool86 = icmp ne i32 %call85, 0, !dbg !6282
  br i1 %tobool86, label %if.then87, label %if.end95, !dbg !6283

if.then87:                                        ; preds = %if.else
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6284
  %call88 = call i32 @get_bits(%struct.GetBitContext* %54, i32 2), !dbg !6285
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6286
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 18, !dbg !6287
  store i32 %call88, i32* %preferred_downmix, align 8, !dbg !6288
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6289
  %call89 = call i32 @get_bits(%struct.GetBitContext* %56, i32 3), !dbg !6290
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6291
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 20, !dbg !6292
  store i32 %call89, i32* %center_mix_level_ltrt, align 32, !dbg !6293
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6294
  %call90 = call i32 @get_bits(%struct.GetBitContext* %58, i32 3), !dbg !6295
  store i32 %call90, i32* %a.addr.i, align 4, !dbg !6296
  store i32 3, i32* %amin.addr.i, align 4, !dbg !6296
  store i32 7, i32* %amax.addr.i, align 4, !dbg !6296
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !6297
  %60 = load i32, i32* %amin.addr.i, align 4, !dbg !6299
  %cmp.i = icmp slt i32 %59, %60, !dbg !6300
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6301

if.then.i:                                        ; preds = %if.then87
  %61 = load i32, i32* %amin.addr.i, align 4, !dbg !6302
  store i32 %61, i32* %retval.i, align 4, !dbg !6304
  br label %av_clip_c.exit, !dbg !6304

if.else.i:                                        ; preds = %if.then87
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !6305
  %63 = load i32, i32* %amax.addr.i, align 4, !dbg !6307
  %cmp1.i = icmp sgt i32 %62, %63, !dbg !6308
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6309

if.then2.i:                                       ; preds = %if.else.i
  %64 = load i32, i32* %amax.addr.i, align 4, !dbg !6310
  store i32 %64, i32* %retval.i, align 4, !dbg !6312
  br label %av_clip_c.exit, !dbg !6312

if.else3.i:                                       ; preds = %if.else.i
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !6313
  store i32 %65, i32* %retval.i, align 4, !dbg !6314
  br label %av_clip_c.exit, !dbg !6314

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %66 = load i32, i32* %retval.i, align 4, !dbg !6315
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6316
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 22, !dbg !6317
  store i32 %66, i32* %surround_mix_level_ltrt, align 8, !dbg !6318
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6319
  %call92 = call i32 @get_bits(%struct.GetBitContext* %68, i32 3), !dbg !6320
  %69 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6321
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %69, i32 0, i32 19, !dbg !6322
  store i32 %call92, i32* %center_mix_level, align 4, !dbg !6323
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6324
  %call93 = call i32 @get_bits(%struct.GetBitContext* %70, i32 3), !dbg !6325
  store i32 %call93, i32* %a.addr.i114, align 4, !dbg !6326
  store i32 3, i32* %amin.addr.i115, align 4, !dbg !6326
  store i32 7, i32* %amax.addr.i116, align 4, !dbg !6326
  %71 = load i32, i32* %a.addr.i114, align 4, !dbg !6327
  %72 = load i32, i32* %amin.addr.i115, align 4, !dbg !6328
  %cmp.i117 = icmp slt i32 %71, %72, !dbg !6329
  br i1 %cmp.i117, label %if.then.i118, label %if.else.i120, !dbg !6330

if.then.i118:                                     ; preds = %av_clip_c.exit
  %73 = load i32, i32* %amin.addr.i115, align 4, !dbg !6331
  store i32 %73, i32* %retval.i113, align 4, !dbg !6332
  br label %av_clip_c.exit123, !dbg !6332

if.else.i120:                                     ; preds = %av_clip_c.exit
  %74 = load i32, i32* %a.addr.i114, align 4, !dbg !6333
  %75 = load i32, i32* %amax.addr.i116, align 4, !dbg !6334
  %cmp1.i119 = icmp sgt i32 %74, %75, !dbg !6335
  br i1 %cmp1.i119, label %if.then2.i121, label %if.else3.i122, !dbg !6336

if.then2.i121:                                    ; preds = %if.else.i120
  %76 = load i32, i32* %amax.addr.i116, align 4, !dbg !6337
  store i32 %76, i32* %retval.i113, align 4, !dbg !6338
  br label %av_clip_c.exit123, !dbg !6338

if.else3.i122:                                    ; preds = %if.else.i120
  %77 = load i32, i32* %a.addr.i114, align 4, !dbg !6339
  store i32 %77, i32* %retval.i113, align 4, !dbg !6340
  br label %av_clip_c.exit123, !dbg !6340

av_clip_c.exit123:                                ; preds = %if.then.i118, %if.then2.i121, %if.else3.i122
  %78 = load i32, i32* %retval.i113, align 4, !dbg !6341
  %79 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6342
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %79, i32 0, i32 21, !dbg !6343
  store i32 %78, i32* %surround_mix_level, align 4, !dbg !6344
  br label %if.end95, !dbg !6345

if.end95:                                         ; preds = %av_clip_c.exit123, %if.else
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6346
  %call96 = call i32 @get_bits1(%struct.GetBitContext* %80), !dbg !6348
  %tobool97 = icmp ne i32 %call96, 0, !dbg !6348
  br i1 %tobool97, label %if.then98, label %if.end101, !dbg !6349

if.then98:                                        ; preds = %if.end95
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6350
  %call99 = call i32 @get_bits(%struct.GetBitContext* %81, i32 2), !dbg !6352
  %82 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6353
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %82, i32 0, i32 29, !dbg !6354
  store i32 %call99, i32* %dolby_surround_ex_mode, align 4, !dbg !6355
  %83 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6356
  %call100 = call i32 @get_bits(%struct.GetBitContext* %83, i32 2), !dbg !6357
  %84 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6358
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %84, i32 0, i32 30, !dbg !6359
  store i32 %call100, i32* %dolby_headphone_mode, align 8, !dbg !6360
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6361
  call void @skip_bits(%struct.GetBitContext* %85, i32 10), !dbg !6362
  br label %if.end101, !dbg !6363

if.end101:                                        ; preds = %if.then98, %if.end95
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end84
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6364
  %call103 = call i32 @get_bits1(%struct.GetBitContext* %86), !dbg !6366
  %tobool104 = icmp ne i32 %call103, 0, !dbg !6366
  br i1 %tobool104, label %if.then105, label %if.end112, !dbg !6367

if.then105:                                       ; preds = %if.end102
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6368
  %call106 = call i32 @get_bits(%struct.GetBitContext* %87, i32 6), !dbg !6370
  store i32 %call106, i32* %i, align 4, !dbg !6371
  br label %do.body107, !dbg !6372, !llvm.loop !6373

do.body107:                                       ; preds = %do.cond108, %if.then105
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6374
  call void @skip_bits(%struct.GetBitContext* %88, i32 8), !dbg !6376
  br label %do.cond108, !dbg !6377

do.cond108:                                       ; preds = %do.body107
  %89 = load i32, i32* %i, align 4, !dbg !6378
  %dec109 = add nsw i32 %89, -1, !dbg !6378
  store i32 %dec109, i32* %i, align 4, !dbg !6378
  %tobool110 = icmp ne i32 %89, 0, !dbg !6380
  br i1 %tobool110, label %do.body107, label %do.end111, !dbg !6380, !llvm.loop !6373

do.end111:                                        ; preds = %do.cond108
  br label %if.end112, !dbg !6381

if.end112:                                        ; preds = %do.end111, %if.end102
  ret i32 0, !dbg !6382
}

; Function Attrs: nounwind uwtable
define internal i32 @ff_eac3_parse_header(%struct.AC3DecodeContext* %s) #1 !dbg !6383 {
entry:
  %retval.i569 = alloca i32, align 4
  %a.addr.i570 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i570, metadata !6126, metadata !1854), !dbg !6384
  %amin.addr.i571 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i571, metadata !6138, metadata !1854), !dbg !6393
  %amax.addr.i572 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i572, metadata !6140, metadata !1854), !dbg !6394
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6126, metadata !1854), !dbg !6395
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6138, metadata !1854), !dbg !6397
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6140, metadata !1854), !dbg !6398
  %x.addr.i3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i3.i, metadata !6399, metadata !1854), !dbg !6403
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !6399, metadata !1854), !dbg !6415
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6417, metadata !1854), !dbg !6418
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %i = alloca i32, align 4
  %blk = alloca i32, align 4
  %ch = alloca i32, align 4
  %ac3_exponent_strategy = alloca i32, align 4
  %parse_aht_info = alloca i32, align 4
  %parse_spx_atten_data = alloca i32, align 4
  %parse_transient_proc_info = alloca i32, align 4
  %num_cpl_blocks = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %channel_layout = alloca i64, align 8
  %channel_map = alloca i32, align 4
  %mix_data_size = alloca i32, align 4
  %addbsil = alloca i32, align 4
  %frmchexpstr = alloca i32, align 4
  %use_aht = alloca i32, align 4
  %csnroffst = alloca i32, align 4
  %snroffst = alloca i32, align 4
  %block_start_bits = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !6419, metadata !1854), !dbg !6420
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6421, metadata !1854), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !6423, metadata !1854), !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6425, metadata !1854), !dbg !6426
  call void @llvm.dbg.declare(metadata i32* %ac3_exponent_strategy, metadata !6427, metadata !1854), !dbg !6428
  call void @llvm.dbg.declare(metadata i32* %parse_aht_info, metadata !6429, metadata !1854), !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %parse_spx_atten_data, metadata !6431, metadata !1854), !dbg !6432
  call void @llvm.dbg.declare(metadata i32* %parse_transient_proc_info, metadata !6433, metadata !1854), !dbg !6434
  call void @llvm.dbg.declare(metadata i32* %num_cpl_blocks, metadata !6435, metadata !1854), !dbg !6436
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !6437, metadata !1854), !dbg !6438
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6439
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !6440
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !6438
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6441
  %frame_type = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 3, !dbg !6443
  %2 = load i32, i32* %frame_type, align 16, !dbg !6443
  %cmp = icmp eq i32 %2, 3, !dbg !6444
  br i1 %cmp, label %if.then, label %if.end, !dbg !6445

if.then:                                          ; preds = %entry
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6446
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 1, !dbg !6448
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6448
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !6446
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0)), !dbg !6449
  store i32 -84085770, i32* %retval, align 4, !dbg !6450
  br label %return, !dbg !6450

if.end:                                           ; preds = %entry
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6451
  %substreamid = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 4, !dbg !6453
  %7 = load i32, i32* %substreamid, align 4, !dbg !6453
  %tobool = icmp ne i32 %7, 0, !dbg !6451
  br i1 %tobool, label %if.then2, label %if.end8, !dbg !6454

if.then2:                                         ; preds = %if.end
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6455
  %eac3_subsbtreamid_found = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 27, !dbg !6458
  %9 = load i32, i32* %eac3_subsbtreamid_found, align 4, !dbg !6458
  %tobool3 = icmp ne i32 %9, 0, !dbg !6455
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !6459

if.then4:                                         ; preds = %if.then2
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6460
  %eac3_subsbtreamid_found5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 27, !dbg !6462
  store i32 1, i32* %eac3_subsbtreamid_found5, align 4, !dbg !6463
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6464
  %avctx6 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 1, !dbg !6465
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !6465
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !6464
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0)), !dbg !6466
  br label %if.end7, !dbg !6467

if.end7:                                          ; preds = %if.then4, %if.then2
  store i32 -84085770, i32* %retval, align 4, !dbg !6468
  br label %return, !dbg !6468

if.end8:                                          ; preds = %if.end
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6469
  %bit_alloc_params = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 91, !dbg !6471
  %sr_code = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params, i32 0, i32 0, !dbg !6472
  %15 = load i32, i32* %sr_code, align 32, !dbg !6472
  %cmp9 = icmp eq i32 %15, 3, !dbg !6473
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6474

if.then10:                                        ; preds = %if.end8
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6475
  %avctx11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 1, !dbg !6477
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 8, !dbg !6477
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !6475
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0)), !dbg !6478
  store i32 -1163346256, i32* %retval, align 4, !dbg !6479
  br label %return, !dbg !6479

if.end12:                                         ; preds = %if.end8
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6480
  call void @skip_bits(%struct.GetBitContext* %19, i32 5), !dbg !6481
  store i32 0, i32* %i, align 4, !dbg !6482
  br label %for.cond, !dbg !6484

for.cond:                                         ; preds = %for.inc, %if.end12
  %20 = load i32, i32* %i, align 4, !dbg !6485
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6488
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 12, !dbg !6489
  %22 = load i32, i32* %channel_mode, align 4, !dbg !6489
  %tobool13 = icmp ne i32 %22, 0, !dbg !6488
  %cond = select i1 %tobool13, i32 1, i32 2, !dbg !6488
  %cmp14 = icmp slt i32 %20, %cond, !dbg !6490
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6491

for.body:                                         ; preds = %for.cond
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6492
  %call = call i32 @get_bits(%struct.GetBitContext* %23, i32 5), !dbg !6494
  %sub = sub i32 0, %call, !dbg !6495
  %24 = load i32, i32* %i, align 4, !dbg !6496
  %idxprom = sext i32 %24 to i64, !dbg !6497
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6497
  %dialog_normalization = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 14, !dbg !6498
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization, i64 0, i64 %idxprom, !dbg !6497
  store i32 %sub, i32* %arrayidx, align 4, !dbg !6499
  %26 = load i32, i32* %i, align 4, !dbg !6500
  %idxprom15 = sext i32 %26 to i64, !dbg !6502
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6502
  %dialog_normalization16 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 14, !dbg !6503
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization16, i64 0, i64 %idxprom15, !dbg !6502
  %28 = load i32, i32* %arrayidx17, align 4, !dbg !6502
  %cmp18 = icmp eq i32 %28, 0, !dbg !6504
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !6505

if.then19:                                        ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !6506
  %idxprom20 = sext i32 %29 to i64, !dbg !6508
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6508
  %dialog_normalization21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 14, !dbg !6509
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization21, i64 0, i64 %idxprom20, !dbg !6508
  store i32 -31, i32* %arrayidx22, align 4, !dbg !6510
  br label %if.end23, !dbg !6511

if.end23:                                         ; preds = %if.then19, %for.body
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6512
  %target_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 36, !dbg !6514
  %32 = load i32, i32* %target_level, align 32, !dbg !6514
  %cmp24 = icmp ne i32 %32, 0, !dbg !6515
  br i1 %cmp24, label %if.then25, label %if.end34, !dbg !6516

if.then25:                                        ; preds = %if.end23
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6517
  %target_level26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 36, !dbg !6519
  %34 = load i32, i32* %target_level26, align 32, !dbg !6519
  %35 = load i32, i32* %i, align 4, !dbg !6520
  %idxprom27 = sext i32 %35 to i64, !dbg !6521
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6521
  %dialog_normalization28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 14, !dbg !6522
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %dialog_normalization28, i64 0, i64 %idxprom27, !dbg !6521
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !6521
  %sub30 = sub nsw i32 %34, %37, !dbg !6523
  %conv = sitofp i32 %sub30 to float, !dbg !6524
  %div = fdiv float %conv, 6.000000e+00, !dbg !6525
  %call31 = call float @powf(float 2.000000e+00, float %div) #11, !dbg !6526
  %38 = load i32, i32* %i, align 4, !dbg !6527
  %idxprom32 = sext i32 %38 to i64, !dbg !6528
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6528
  %level_gain = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 37, !dbg !6529
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %level_gain, i64 0, i64 %idxprom32, !dbg !6528
  store float %call31, float* %arrayidx33, align 4, !dbg !6530
  br label %if.end34, !dbg !6531

if.end34:                                         ; preds = %if.then25, %if.end23
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6532
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !6533
  %41 = load i32, i32* %i, align 4, !dbg !6534
  %idxprom36 = sext i32 %41 to i64, !dbg !6535
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6535
  %compression_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 15, !dbg !6536
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists, i64 0, i64 %idxprom36, !dbg !6535
  store i32 %call35, i32* %arrayidx37, align 4, !dbg !6537
  %43 = load i32, i32* %i, align 4, !dbg !6538
  %idxprom38 = sext i32 %43 to i64, !dbg !6540
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6540
  %compression_exists39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 15, !dbg !6541
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %compression_exists39, i64 0, i64 %idxprom38, !dbg !6540
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !6540
  %tobool41 = icmp ne i32 %45, 0, !dbg !6540
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !6542

if.then42:                                        ; preds = %if.end34
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6543
  %call43 = call i32 @get_bits(%struct.GetBitContext* %46, i32 8), !dbg !6545
  %idxprom44 = zext i32 %call43 to i64, !dbg !6546
  %arrayidx45 = getelementptr inbounds [256 x float], [256 x float]* @ff_ac3_heavy_dynamic_range_tab, i64 0, i64 %idxprom44, !dbg !6546
  %47 = load float, float* %arrayidx45, align 4, !dbg !6546
  %48 = load i32, i32* %i, align 4, !dbg !6547
  %idxprom46 = sext i32 %48 to i64, !dbg !6548
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6548
  %heavy_dynamic_range = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 82, !dbg !6549
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %heavy_dynamic_range, i64 0, i64 %idxprom46, !dbg !6548
  store float %47, float* %arrayidx47, align 4, !dbg !6550
  br label %if.end48, !dbg !6551

if.end48:                                         ; preds = %if.then42, %if.end34
  br label %for.inc, !dbg !6552

for.inc:                                          ; preds = %if.end48
  %50 = load i32, i32* %i, align 4, !dbg !6553
  %inc = add nsw i32 %50, 1, !dbg !6553
  store i32 %inc, i32* %i, align 4, !dbg !6553
  br label %for.cond, !dbg !6555, !llvm.loop !6556

for.end:                                          ; preds = %for.cond
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6558
  %frame_type49 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 3, !dbg !6559
  %52 = load i32, i32* %frame_type49, align 16, !dbg !6559
  %cmp50 = icmp eq i32 %52, 1, !dbg !6560
  br i1 %cmp50, label %if.then52, label %if.end80, !dbg !6561

if.then52:                                        ; preds = %for.end
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6562
  %call53 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !6563
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6563
  br i1 %tobool54, label %if.then55, label %if.end79, !dbg !6564

if.then55:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i64* %channel_layout, metadata !6565, metadata !1854), !dbg !6566
  store i64 0, i64* %channel_layout, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata i32* %channel_map, metadata !6567, metadata !1854), !dbg !6568
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6569
  %call56 = call i32 @get_bits(%struct.GetBitContext* %54, i32 16), !dbg !6570
  store i32 %call56, i32* %channel_map, align 4, !dbg !6568
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6571
  %avctx57 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 1, !dbg !6572
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx57, align 8, !dbg !6572
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !6571
  %58 = load i32, i32* %channel_map, align 4, !dbg !6573
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i32 %58), !dbg !6574
  store i32 0, i32* %i, align 4, !dbg !6575
  br label %for.cond58, !dbg !6577

for.cond58:                                       ; preds = %for.inc70, %if.then55
  %59 = load i32, i32* %i, align 4, !dbg !6578
  %cmp59 = icmp slt i32 %59, 16, !dbg !6581
  br i1 %cmp59, label %for.body61, label %for.end72, !dbg !6582

for.body61:                                       ; preds = %for.cond58
  %60 = load i32, i32* %channel_map, align 4, !dbg !6583
  %61 = load i32, i32* %i, align 4, !dbg !6585
  %sub62 = sub nsw i32 16, %61, !dbg !6586
  %sub63 = sub nsw i32 %sub62, 1, !dbg !6587
  %shl = shl i32 1, %sub63, !dbg !6588
  %and = and i32 %60, %shl, !dbg !6589
  %tobool64 = icmp ne i32 %and, 0, !dbg !6589
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !6590

if.then65:                                        ; preds = %for.body61
  %62 = load i32, i32* %i, align 4, !dbg !6591
  %idxprom66 = sext i32 %62 to i64, !dbg !6592
  %arrayidx67 = getelementptr inbounds [16 x [2 x i64]], [16 x [2 x i64]]* @ff_eac3_custom_channel_map_locations, i64 0, i64 %idxprom66, !dbg !6592
  %arrayidx68 = getelementptr inbounds [2 x i64], [2 x i64]* %arrayidx67, i64 0, i64 1, !dbg !6592
  %63 = load i64, i64* %arrayidx68, align 8, !dbg !6592
  %64 = load i64, i64* %channel_layout, align 8, !dbg !6593
  %or = or i64 %64, %63, !dbg !6593
  store i64 %or, i64* %channel_layout, align 8, !dbg !6593
  br label %if.end69, !dbg !6594

if.end69:                                         ; preds = %if.then65, %for.body61
  br label %for.inc70, !dbg !6595

for.inc70:                                        ; preds = %if.end69
  %65 = load i32, i32* %i, align 4, !dbg !6597
  %inc71 = add nsw i32 %65, 1, !dbg !6597
  store i32 %inc71, i32* %i, align 4, !dbg !6597
  br label %for.cond58, !dbg !6599, !llvm.loop !6600

for.end72:                                        ; preds = %for.cond58
  %66 = load i64, i64* %channel_layout, align 8, !dbg !6602
  store i64 %66, i64* %x.addr.i, align 8, !dbg !6603
  %67 = load i64, i64* %x.addr.i, align 8, !dbg !6604
  %conv.i = trunc i64 %67 to i32, !dbg !6605
  store i32 %conv.i, i32* %x.addr.i.i, align 4, !dbg !6606
  %68 = load i32, i32* %x.addr.i.i, align 4, !dbg !6607
  %shr.i.i = lshr i32 %68, 1, !dbg !6608
  %and.i.i = and i32 %shr.i.i, 1431655765, !dbg !6609
  %69 = load i32, i32* %x.addr.i.i, align 4, !dbg !6610
  %sub.i.i = sub i32 %69, %and.i.i, !dbg !6610
  store i32 %sub.i.i, i32* %x.addr.i.i, align 4, !dbg !6610
  %70 = load i32, i32* %x.addr.i.i, align 4, !dbg !6611
  %and1.i.i = and i32 %70, 858993459, !dbg !6612
  %71 = load i32, i32* %x.addr.i.i, align 4, !dbg !6613
  %shr2.i.i = lshr i32 %71, 2, !dbg !6614
  %and3.i.i = and i32 %shr2.i.i, 858993459, !dbg !6615
  %add.i.i = add i32 %and1.i.i, %and3.i.i, !dbg !6616
  store i32 %add.i.i, i32* %x.addr.i.i, align 4, !dbg !6617
  %72 = load i32, i32* %x.addr.i.i, align 4, !dbg !6618
  %73 = load i32, i32* %x.addr.i.i, align 4, !dbg !6619
  %shr4.i.i = lshr i32 %73, 4, !dbg !6620
  %add5.i.i = add i32 %72, %shr4.i.i, !dbg !6621
  %and6.i.i = and i32 %add5.i.i, 252645135, !dbg !6622
  store i32 %and6.i.i, i32* %x.addr.i.i, align 4, !dbg !6623
  %74 = load i32, i32* %x.addr.i.i, align 4, !dbg !6624
  %shr7.i.i = lshr i32 %74, 8, !dbg !6625
  %75 = load i32, i32* %x.addr.i.i, align 4, !dbg !6626
  %add8.i.i = add i32 %75, %shr7.i.i, !dbg !6626
  store i32 %add8.i.i, i32* %x.addr.i.i, align 4, !dbg !6626
  %76 = load i32, i32* %x.addr.i.i, align 4, !dbg !6627
  %77 = load i32, i32* %x.addr.i.i, align 4, !dbg !6628
  %shr9.i.i = lshr i32 %77, 16, !dbg !6629
  %add10.i.i = add i32 %76, %shr9.i.i, !dbg !6630
  %and11.i.i = and i32 %add10.i.i, 63, !dbg !6631
  %78 = load i64, i64* %x.addr.i, align 8, !dbg !6632
  %shr.i = lshr i64 %78, 32, !dbg !6633
  %conv1.i = trunc i64 %shr.i to i32, !dbg !6634
  store i32 %conv1.i, i32* %x.addr.i3.i, align 4, !dbg !6635
  %79 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6636
  %shr.i4.i = lshr i32 %79, 1, !dbg !6637
  %and.i5.i = and i32 %shr.i4.i, 1431655765, !dbg !6638
  %80 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6639
  %sub.i6.i = sub i32 %80, %and.i5.i, !dbg !6639
  store i32 %sub.i6.i, i32* %x.addr.i3.i, align 4, !dbg !6639
  %81 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6640
  %and1.i7.i = and i32 %81, 858993459, !dbg !6641
  %82 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6642
  %shr2.i8.i = lshr i32 %82, 2, !dbg !6643
  %and3.i9.i = and i32 %shr2.i8.i, 858993459, !dbg !6644
  %add.i10.i = add i32 %and1.i7.i, %and3.i9.i, !dbg !6645
  store i32 %add.i10.i, i32* %x.addr.i3.i, align 4, !dbg !6646
  %83 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6647
  %84 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6648
  %shr4.i11.i = lshr i32 %84, 4, !dbg !6649
  %add5.i12.i = add i32 %83, %shr4.i11.i, !dbg !6650
  %and6.i13.i = and i32 %add5.i12.i, 252645135, !dbg !6651
  store i32 %and6.i13.i, i32* %x.addr.i3.i, align 4, !dbg !6652
  %85 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6653
  %shr7.i14.i = lshr i32 %85, 8, !dbg !6654
  %86 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6655
  %add8.i15.i = add i32 %86, %shr7.i14.i, !dbg !6655
  store i32 %add8.i15.i, i32* %x.addr.i3.i, align 4, !dbg !6655
  %87 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6656
  %88 = load i32, i32* %x.addr.i3.i, align 4, !dbg !6657
  %shr9.i16.i = lshr i32 %88, 16, !dbg !6658
  %add10.i17.i = add i32 %87, %shr9.i16.i, !dbg !6659
  %and11.i18.i = and i32 %add10.i17.i, 63, !dbg !6660
  %add.i = add nsw i32 %and11.i.i, %and11.i18.i, !dbg !6661
  %cmp74 = icmp sgt i32 %add.i, 16, !dbg !6662
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !6663

if.then76:                                        ; preds = %for.end72
  store i32 -1094995529, i32* %retval, align 4, !dbg !6664
  br label %return, !dbg !6664

if.end77:                                         ; preds = %for.end72
  %89 = load i32, i32* %channel_map, align 4, !dbg !6666
  %90 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6667
  %channel_map78 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %90, i32 0, i32 17, !dbg !6668
  store i32 %89, i32* %channel_map78, align 4, !dbg !6669
  br label %if.end79, !dbg !6670

if.end79:                                         ; preds = %if.end77, %if.then52
  br label %if.end80, !dbg !6671

if.end80:                                         ; preds = %if.end79, %for.end
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6672
  %call81 = call i32 @get_bits1(%struct.GetBitContext* %91), !dbg !6673
  %tobool82 = icmp ne i32 %call81, 0, !dbg !6673
  br i1 %tobool82, label %if.then83, label %if.end177, !dbg !6674

if.then83:                                        ; preds = %if.end80
  %92 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6675
  %channel_mode84 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %92, i32 0, i32 12, !dbg !6676
  %93 = load i32, i32* %channel_mode84, align 4, !dbg !6676
  %cmp85 = icmp sgt i32 %93, 2, !dbg !6677
  br i1 %cmp85, label %if.then87, label %if.end105, !dbg !6678

if.then87:                                        ; preds = %if.then83
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6679
  %call88 = call i32 @get_bits(%struct.GetBitContext* %94, i32 2), !dbg !6680
  %95 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6681
  %preferred_downmix = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %95, i32 0, i32 18, !dbg !6682
  store i32 %call88, i32* %preferred_downmix, align 8, !dbg !6683
  %96 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6684
  %channel_mode89 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %96, i32 0, i32 12, !dbg !6686
  %97 = load i32, i32* %channel_mode89, align 4, !dbg !6686
  %and90 = and i32 %97, 1, !dbg !6687
  %tobool91 = icmp ne i32 %and90, 0, !dbg !6687
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !6688

if.then92:                                        ; preds = %if.then87
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6689
  %call93 = call i32 @get_bits(%struct.GetBitContext* %98, i32 3), !dbg !6691
  %99 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6692
  %center_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %99, i32 0, i32 20, !dbg !6693
  store i32 %call93, i32* %center_mix_level_ltrt, align 32, !dbg !6694
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6695
  %call94 = call i32 @get_bits(%struct.GetBitContext* %100, i32 3), !dbg !6696
  %101 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6697
  %center_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %101, i32 0, i32 19, !dbg !6698
  store i32 %call94, i32* %center_mix_level, align 4, !dbg !6699
  br label %if.end95, !dbg !6700

if.end95:                                         ; preds = %if.then92, %if.then87
  %102 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6701
  %channel_mode96 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %102, i32 0, i32 12, !dbg !6702
  %103 = load i32, i32* %channel_mode96, align 4, !dbg !6702
  %and97 = and i32 %103, 4, !dbg !6703
  %tobool98 = icmp ne i32 %and97, 0, !dbg !6703
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !6704

if.then99:                                        ; preds = %if.end95
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6705
  %call100 = call i32 @get_bits(%struct.GetBitContext* %104, i32 3), !dbg !6706
  store i32 %call100, i32* %a.addr.i, align 4, !dbg !6707
  store i32 3, i32* %amin.addr.i, align 4, !dbg !6707
  store i32 7, i32* %amax.addr.i, align 4, !dbg !6707
  %105 = load i32, i32* %a.addr.i, align 4, !dbg !6708
  %106 = load i32, i32* %amin.addr.i, align 4, !dbg !6709
  %cmp.i = icmp slt i32 %105, %106, !dbg !6710
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6711

if.then.i:                                        ; preds = %if.then99
  %107 = load i32, i32* %amin.addr.i, align 4, !dbg !6712
  store i32 %107, i32* %retval.i, align 4, !dbg !6713
  br label %av_clip_c.exit, !dbg !6713

if.else.i:                                        ; preds = %if.then99
  %108 = load i32, i32* %a.addr.i, align 4, !dbg !6714
  %109 = load i32, i32* %amax.addr.i, align 4, !dbg !6715
  %cmp1.i = icmp sgt i32 %108, %109, !dbg !6716
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6717

if.then2.i:                                       ; preds = %if.else.i
  %110 = load i32, i32* %amax.addr.i, align 4, !dbg !6718
  store i32 %110, i32* %retval.i, align 4, !dbg !6719
  br label %av_clip_c.exit, !dbg !6719

if.else3.i:                                       ; preds = %if.else.i
  %111 = load i32, i32* %a.addr.i, align 4, !dbg !6720
  store i32 %111, i32* %retval.i, align 4, !dbg !6721
  br label %av_clip_c.exit, !dbg !6721

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %112 = load i32, i32* %retval.i, align 4, !dbg !6722
  %113 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6723
  %surround_mix_level_ltrt = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %113, i32 0, i32 22, !dbg !6724
  store i32 %112, i32* %surround_mix_level_ltrt, align 8, !dbg !6725
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6726
  %call102 = call i32 @get_bits(%struct.GetBitContext* %114, i32 3), !dbg !6727
  store i32 %call102, i32* %a.addr.i570, align 4, !dbg !6728
  store i32 3, i32* %amin.addr.i571, align 4, !dbg !6728
  store i32 7, i32* %amax.addr.i572, align 4, !dbg !6728
  %115 = load i32, i32* %a.addr.i570, align 4, !dbg !6729
  %116 = load i32, i32* %amin.addr.i571, align 4, !dbg !6730
  %cmp.i573 = icmp slt i32 %115, %116, !dbg !6731
  br i1 %cmp.i573, label %if.then.i574, label %if.else.i576, !dbg !6732

if.then.i574:                                     ; preds = %av_clip_c.exit
  %117 = load i32, i32* %amin.addr.i571, align 4, !dbg !6733
  store i32 %117, i32* %retval.i569, align 4, !dbg !6734
  br label %av_clip_c.exit579, !dbg !6734

if.else.i576:                                     ; preds = %av_clip_c.exit
  %118 = load i32, i32* %a.addr.i570, align 4, !dbg !6735
  %119 = load i32, i32* %amax.addr.i572, align 4, !dbg !6736
  %cmp1.i575 = icmp sgt i32 %118, %119, !dbg !6737
  br i1 %cmp1.i575, label %if.then2.i577, label %if.else3.i578, !dbg !6738

if.then2.i577:                                    ; preds = %if.else.i576
  %120 = load i32, i32* %amax.addr.i572, align 4, !dbg !6739
  store i32 %120, i32* %retval.i569, align 4, !dbg !6740
  br label %av_clip_c.exit579, !dbg !6740

if.else3.i578:                                    ; preds = %if.else.i576
  %121 = load i32, i32* %a.addr.i570, align 4, !dbg !6741
  store i32 %121, i32* %retval.i569, align 4, !dbg !6742
  br label %av_clip_c.exit579, !dbg !6742

av_clip_c.exit579:                                ; preds = %if.then.i574, %if.then2.i577, %if.else3.i578
  %122 = load i32, i32* %retval.i569, align 4, !dbg !6743
  %123 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6744
  %surround_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %123, i32 0, i32 21, !dbg !6745
  store i32 %122, i32* %surround_mix_level, align 4, !dbg !6746
  br label %if.end104, !dbg !6747

if.end104:                                        ; preds = %av_clip_c.exit579, %if.end95
  br label %if.end105, !dbg !6748

if.end105:                                        ; preds = %if.end104, %if.then83
  %124 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6749
  %lfe_on = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %124, i32 0, i32 13, !dbg !6751
  %125 = load i32, i32* %lfe_on, align 8, !dbg !6751
  %tobool106 = icmp ne i32 %125, 0, !dbg !6749
  br i1 %tobool106, label %land.lhs.true, label %if.end111, !dbg !6752

land.lhs.true:                                    ; preds = %if.end105
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6753
  %call107 = call i32 @get_bits1(%struct.GetBitContext* %126), !dbg !6755
  %127 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6756
  %lfe_mix_level_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %127, i32 0, i32 23, !dbg !6757
  store i32 %call107, i32* %lfe_mix_level_exists, align 4, !dbg !6758
  %tobool108 = icmp ne i32 %call107, 0, !dbg !6758
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !6759

if.then109:                                       ; preds = %land.lhs.true
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6760
  %call110 = call i32 @get_bits(%struct.GetBitContext* %128, i32 5), !dbg !6762
  %129 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6763
  %lfe_mix_level = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %129, i32 0, i32 24, !dbg !6764
  store i32 %call110, i32* %lfe_mix_level, align 16, !dbg !6765
  br label %if.end111, !dbg !6766

if.end111:                                        ; preds = %if.then109, %land.lhs.true, %if.end105
  %130 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6767
  %frame_type112 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %130, i32 0, i32 3, !dbg !6769
  %131 = load i32, i32* %frame_type112, align 16, !dbg !6769
  %cmp113 = icmp eq i32 %131, 0, !dbg !6770
  br i1 %cmp113, label %if.then115, label %if.end176, !dbg !6771

if.then115:                                       ; preds = %if.end111
  store i32 0, i32* %i, align 4, !dbg !6772
  br label %for.cond116, !dbg !6775

for.cond116:                                      ; preds = %for.inc127, %if.then115
  %132 = load i32, i32* %i, align 4, !dbg !6776
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6779
  %channel_mode117 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 12, !dbg !6780
  %134 = load i32, i32* %channel_mode117, align 4, !dbg !6780
  %tobool118 = icmp ne i32 %134, 0, !dbg !6779
  %cond119 = select i1 %tobool118, i32 1, i32 2, !dbg !6779
  %cmp120 = icmp slt i32 %132, %cond119, !dbg !6781
  br i1 %cmp120, label %for.body122, label %for.end129, !dbg !6782

for.body122:                                      ; preds = %for.cond116
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6783
  %call123 = call i32 @get_bits1(%struct.GetBitContext* %135), !dbg !6786
  %tobool124 = icmp ne i32 %call123, 0, !dbg !6786
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !6787

if.then125:                                       ; preds = %for.body122
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6788
  call void @skip_bits(%struct.GetBitContext* %136, i32 6), !dbg !6790
  br label %if.end126, !dbg !6791

if.end126:                                        ; preds = %if.then125, %for.body122
  br label %for.inc127, !dbg !6792

for.inc127:                                       ; preds = %if.end126
  %137 = load i32, i32* %i, align 4, !dbg !6793
  %inc128 = add nsw i32 %137, 1, !dbg !6793
  store i32 %inc128, i32* %i, align 4, !dbg !6793
  br label %for.cond116, !dbg !6795, !llvm.loop !6796

for.end129:                                       ; preds = %for.cond116
  %138 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6798
  %call130 = call i32 @get_bits1(%struct.GetBitContext* %138), !dbg !6800
  %tobool131 = icmp ne i32 %call130, 0, !dbg !6800
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6801

if.then132:                                       ; preds = %for.end129
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6802
  call void @skip_bits(%struct.GetBitContext* %139, i32 6), !dbg !6804
  br label %if.end133, !dbg !6805

if.end133:                                        ; preds = %if.then132, %for.end129
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6806
  %call134 = call i32 @get_bits(%struct.GetBitContext* %140, i32 2), !dbg !6807
  switch i32 %call134, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb135
    i32 3, label %sw.bb136
  ], !dbg !6808

sw.bb:                                            ; preds = %if.end133
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6809
  call void @skip_bits(%struct.GetBitContext* %141, i32 5), !dbg !6811
  br label %sw.epilog, !dbg !6812

sw.bb135:                                         ; preds = %if.end133
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6813
  call void @skip_bits(%struct.GetBitContext* %142, i32 12), !dbg !6814
  br label %sw.epilog, !dbg !6815

sw.bb136:                                         ; preds = %if.end133
  call void @llvm.dbg.declare(metadata i32* %mix_data_size, metadata !6816, metadata !1854), !dbg !6818
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6819
  %call137 = call i32 @get_bits(%struct.GetBitContext* %143, i32 5), !dbg !6820
  %add = add i32 %call137, 2, !dbg !6821
  %shl138 = shl i32 %add, 3, !dbg !6822
  store i32 %shl138, i32* %mix_data_size, align 4, !dbg !6818
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6823
  %145 = load i32, i32* %mix_data_size, align 4, !dbg !6824
  call void @skip_bits_long(%struct.GetBitContext* %144, i32 %145), !dbg !6825
  br label %sw.epilog, !dbg !6826

sw.epilog:                                        ; preds = %if.end133, %sw.bb136, %sw.bb135, %sw.bb
  %146 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6827
  %channel_mode139 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %146, i32 0, i32 12, !dbg !6829
  %147 = load i32, i32* %channel_mode139, align 4, !dbg !6829
  %cmp140 = icmp slt i32 %147, 2, !dbg !6830
  br i1 %cmp140, label %if.then142, label %if.end157, !dbg !6831

if.then142:                                       ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !6832
  br label %for.cond143, !dbg !6835

for.cond143:                                      ; preds = %for.inc154, %if.then142
  %148 = load i32, i32* %i, align 4, !dbg !6836
  %149 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6839
  %channel_mode144 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %149, i32 0, i32 12, !dbg !6840
  %150 = load i32, i32* %channel_mode144, align 4, !dbg !6840
  %tobool145 = icmp ne i32 %150, 0, !dbg !6839
  %cond146 = select i1 %tobool145, i32 1, i32 2, !dbg !6839
  %cmp147 = icmp slt i32 %148, %cond146, !dbg !6841
  br i1 %cmp147, label %for.body149, label %for.end156, !dbg !6842

for.body149:                                      ; preds = %for.cond143
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6843
  %call150 = call i32 @get_bits1(%struct.GetBitContext* %151), !dbg !6846
  %tobool151 = icmp ne i32 %call150, 0, !dbg !6846
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !6847

if.then152:                                       ; preds = %for.body149
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6848
  call void @skip_bits(%struct.GetBitContext* %152, i32 8), !dbg !6850
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6851
  call void @skip_bits(%struct.GetBitContext* %153, i32 6), !dbg !6852
  br label %if.end153, !dbg !6853

if.end153:                                        ; preds = %if.then152, %for.body149
  br label %for.inc154, !dbg !6854

for.inc154:                                       ; preds = %if.end153
  %154 = load i32, i32* %i, align 4, !dbg !6855
  %inc155 = add nsw i32 %154, 1, !dbg !6855
  store i32 %inc155, i32* %i, align 4, !dbg !6855
  br label %for.cond143, !dbg !6857, !llvm.loop !6858

for.end156:                                       ; preds = %for.cond143
  br label %if.end157, !dbg !6860

if.end157:                                        ; preds = %for.end156, %sw.epilog
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6861
  %call158 = call i32 @get_bits1(%struct.GetBitContext* %155), !dbg !6863
  %tobool159 = icmp ne i32 %call158, 0, !dbg !6863
  br i1 %tobool159, label %if.then160, label %if.end175, !dbg !6864

if.then160:                                       ; preds = %if.end157
  store i32 0, i32* %blk, align 4, !dbg !6865
  br label %for.cond161, !dbg !6868

for.cond161:                                      ; preds = %for.inc172, %if.then160
  %156 = load i32, i32* %blk, align 4, !dbg !6869
  %157 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6872
  %num_blocks = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %157, i32 0, i32 9, !dbg !6873
  %158 = load i32, i32* %num_blocks, align 8, !dbg !6873
  %cmp162 = icmp slt i32 %156, %158, !dbg !6874
  br i1 %cmp162, label %for.body164, label %for.end174, !dbg !6875

for.body164:                                      ; preds = %for.cond161
  %159 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6876
  %num_blocks165 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %159, i32 0, i32 9, !dbg !6879
  %160 = load i32, i32* %num_blocks165, align 8, !dbg !6879
  %cmp166 = icmp eq i32 %160, 1, !dbg !6880
  br i1 %cmp166, label %if.then170, label %lor.lhs.false, !dbg !6881

lor.lhs.false:                                    ; preds = %for.body164
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6882
  %call168 = call i32 @get_bits1(%struct.GetBitContext* %161), !dbg !6884
  %tobool169 = icmp ne i32 %call168, 0, !dbg !6884
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !6885

if.then170:                                       ; preds = %lor.lhs.false, %for.body164
  %162 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6886
  call void @skip_bits(%struct.GetBitContext* %162, i32 5), !dbg !6888
  br label %if.end171, !dbg !6889

if.end171:                                        ; preds = %if.then170, %lor.lhs.false
  br label %for.inc172, !dbg !6890

for.inc172:                                       ; preds = %if.end171
  %163 = load i32, i32* %blk, align 4, !dbg !6891
  %inc173 = add nsw i32 %163, 1, !dbg !6891
  store i32 %inc173, i32* %blk, align 4, !dbg !6891
  br label %for.cond161, !dbg !6893, !llvm.loop !6894

for.end174:                                       ; preds = %for.cond161
  br label %if.end175, !dbg !6896

if.end175:                                        ; preds = %for.end174, %if.end157
  br label %if.end176, !dbg !6897

if.end176:                                        ; preds = %if.end175, %if.end111
  br label %if.end177, !dbg !6898

if.end177:                                        ; preds = %if.end176, %if.end80
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6899
  %call178 = call i32 @get_bits1(%struct.GetBitContext* %164), !dbg !6901
  %tobool179 = icmp ne i32 %call178, 0, !dbg !6901
  br i1 %tobool179, label %if.then180, label %if.end215, !dbg !6902

if.then180:                                       ; preds = %if.end177
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6903
  %call181 = call i32 @get_bits(%struct.GetBitContext* %165, i32 3), !dbg !6905
  %166 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6906
  %bitstream_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %166, i32 0, i32 11, !dbg !6907
  store i32 %call181, i32* %bitstream_mode, align 16, !dbg !6908
  %167 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6909
  call void @skip_bits(%struct.GetBitContext* %167, i32 2), !dbg !6910
  %168 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6911
  %channel_mode182 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %168, i32 0, i32 12, !dbg !6913
  %169 = load i32, i32* %channel_mode182, align 4, !dbg !6913
  %cmp183 = icmp eq i32 %169, 2, !dbg !6914
  br i1 %cmp183, label %if.then185, label %if.end188, !dbg !6915

if.then185:                                       ; preds = %if.then180
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6916
  %call186 = call i32 @get_bits(%struct.GetBitContext* %170, i32 2), !dbg !6918
  %171 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6919
  %dolby_surround_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %171, i32 0, i32 28, !dbg !6920
  store i32 %call186, i32* %dolby_surround_mode, align 32, !dbg !6921
  %172 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6922
  %call187 = call i32 @get_bits(%struct.GetBitContext* %172, i32 2), !dbg !6923
  %173 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6924
  %dolby_headphone_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %173, i32 0, i32 30, !dbg !6925
  store i32 %call187, i32* %dolby_headphone_mode, align 8, !dbg !6926
  br label %if.end188, !dbg !6927

if.end188:                                        ; preds = %if.then185, %if.then180
  %174 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6928
  %channel_mode189 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %174, i32 0, i32 12, !dbg !6930
  %175 = load i32, i32* %channel_mode189, align 4, !dbg !6930
  %cmp190 = icmp sge i32 %175, 6, !dbg !6931
  br i1 %cmp190, label %if.then192, label %if.end194, !dbg !6932

if.then192:                                       ; preds = %if.end188
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6933
  %call193 = call i32 @get_bits(%struct.GetBitContext* %176, i32 2), !dbg !6935
  %177 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6936
  %dolby_surround_ex_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %177, i32 0, i32 29, !dbg !6937
  store i32 %call193, i32* %dolby_surround_ex_mode, align 4, !dbg !6938
  br label %if.end194, !dbg !6939

if.end194:                                        ; preds = %if.then192, %if.end188
  store i32 0, i32* %i, align 4, !dbg !6940
  br label %for.cond195, !dbg !6942

for.cond195:                                      ; preds = %for.inc206, %if.end194
  %178 = load i32, i32* %i, align 4, !dbg !6943
  %179 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6946
  %channel_mode196 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %179, i32 0, i32 12, !dbg !6947
  %180 = load i32, i32* %channel_mode196, align 4, !dbg !6947
  %tobool197 = icmp ne i32 %180, 0, !dbg !6946
  %cond198 = select i1 %tobool197, i32 1, i32 2, !dbg !6946
  %cmp199 = icmp slt i32 %178, %cond198, !dbg !6948
  br i1 %cmp199, label %for.body201, label %for.end208, !dbg !6949

for.body201:                                      ; preds = %for.cond195
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6950
  %call202 = call i32 @get_bits1(%struct.GetBitContext* %181), !dbg !6953
  %tobool203 = icmp ne i32 %call202, 0, !dbg !6953
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !6954

if.then204:                                       ; preds = %for.body201
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6955
  call void @skip_bits(%struct.GetBitContext* %182, i32 8), !dbg !6957
  br label %if.end205, !dbg !6958

if.end205:                                        ; preds = %if.then204, %for.body201
  br label %for.inc206, !dbg !6959

for.inc206:                                       ; preds = %if.end205
  %183 = load i32, i32* %i, align 4, !dbg !6960
  %inc207 = add nsw i32 %183, 1, !dbg !6960
  store i32 %inc207, i32* %i, align 4, !dbg !6960
  br label %for.cond195, !dbg !6962, !llvm.loop !6963

for.end208:                                       ; preds = %for.cond195
  %184 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6965
  %bit_alloc_params209 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %184, i32 0, i32 91, !dbg !6967
  %sr_code210 = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params209, i32 0, i32 0, !dbg !6968
  %185 = load i32, i32* %sr_code210, align 32, !dbg !6968
  %cmp211 = icmp ne i32 %185, 3, !dbg !6969
  br i1 %cmp211, label %if.then213, label %if.end214, !dbg !6970

if.then213:                                       ; preds = %for.end208
  %186 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6971
  call void @skip_bits1(%struct.GetBitContext* %186), !dbg !6973
  br label %if.end214, !dbg !6974

if.end214:                                        ; preds = %if.then213, %for.end208
  br label %if.end215, !dbg !6975

if.end215:                                        ; preds = %if.end214, %if.end177
  %187 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6976
  %frame_type216 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %187, i32 0, i32 3, !dbg !6978
  %188 = load i32, i32* %frame_type216, align 16, !dbg !6978
  %cmp217 = icmp eq i32 %188, 0, !dbg !6979
  br i1 %cmp217, label %land.lhs.true219, label %if.end224, !dbg !6980

land.lhs.true219:                                 ; preds = %if.end215
  %189 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6981
  %num_blocks220 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %189, i32 0, i32 9, !dbg !6983
  %190 = load i32, i32* %num_blocks220, align 8, !dbg !6983
  %cmp221 = icmp ne i32 %190, 6, !dbg !6984
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !6985

if.then223:                                       ; preds = %land.lhs.true219
  %191 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6986
  call void @skip_bits1(%struct.GetBitContext* %191), !dbg !6988
  br label %if.end224, !dbg !6989

if.end224:                                        ; preds = %if.then223, %land.lhs.true219, %if.end215
  %192 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6990
  %frame_type225 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %192, i32 0, i32 3, !dbg !6992
  %193 = load i32, i32* %frame_type225, align 16, !dbg !6992
  %cmp226 = icmp eq i32 %193, 2, !dbg !6993
  br i1 %cmp226, label %land.lhs.true228, label %if.end236, !dbg !6994

land.lhs.true228:                                 ; preds = %if.end224
  %194 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !6995
  %num_blocks229 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %194, i32 0, i32 9, !dbg !6996
  %195 = load i32, i32* %num_blocks229, align 8, !dbg !6996
  %cmp230 = icmp eq i32 %195, 6, !dbg !6997
  br i1 %cmp230, label %if.then235, label %lor.lhs.false232, !dbg !6998

lor.lhs.false232:                                 ; preds = %land.lhs.true228
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !6999
  %call233 = call i32 @get_bits1(%struct.GetBitContext* %196), !dbg !7001
  %tobool234 = icmp ne i32 %call233, 0, !dbg !7001
  br i1 %tobool234, label %if.then235, label %if.end236, !dbg !7002

if.then235:                                       ; preds = %lor.lhs.false232, %land.lhs.true228
  %197 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7004
  call void @skip_bits(%struct.GetBitContext* %197, i32 6), !dbg !7006
  br label %if.end236, !dbg !7007

if.end236:                                        ; preds = %if.then235, %lor.lhs.false232, %if.end224
  %198 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7008
  %call237 = call i32 @get_bits1(%struct.GetBitContext* %198), !dbg !7010
  %tobool238 = icmp ne i32 %call237, 0, !dbg !7010
  br i1 %tobool238, label %if.then239, label %if.end249, !dbg !7011

if.then239:                                       ; preds = %if.end236
  call void @llvm.dbg.declare(metadata i32* %addbsil, metadata !7012, metadata !1854), !dbg !7014
  %199 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7015
  %call240 = call i32 @get_bits(%struct.GetBitContext* %199, i32 6), !dbg !7016
  store i32 %call240, i32* %addbsil, align 4, !dbg !7014
  store i32 0, i32* %i, align 4, !dbg !7017
  br label %for.cond241, !dbg !7019

for.cond241:                                      ; preds = %for.inc246, %if.then239
  %200 = load i32, i32* %i, align 4, !dbg !7020
  %201 = load i32, i32* %addbsil, align 4, !dbg !7023
  %add242 = add nsw i32 %201, 1, !dbg !7024
  %cmp243 = icmp slt i32 %200, %add242, !dbg !7025
  br i1 %cmp243, label %for.body245, label %for.end248, !dbg !7026

for.body245:                                      ; preds = %for.cond241
  %202 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7027
  call void @skip_bits(%struct.GetBitContext* %202, i32 8), !dbg !7029
  br label %for.inc246, !dbg !7030

for.inc246:                                       ; preds = %for.body245
  %203 = load i32, i32* %i, align 4, !dbg !7031
  %inc247 = add nsw i32 %203, 1, !dbg !7031
  store i32 %inc247, i32* %i, align 4, !dbg !7031
  br label %for.cond241, !dbg !7033, !llvm.loop !7034

for.end248:                                       ; preds = %for.cond241
  br label %if.end249, !dbg !7036

if.end249:                                        ; preds = %for.end248, %if.end236
  %204 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7037
  %num_blocks250 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %204, i32 0, i32 9, !dbg !7039
  %205 = load i32, i32* %num_blocks250, align 8, !dbg !7039
  %cmp251 = icmp eq i32 %205, 6, !dbg !7040
  br i1 %cmp251, label %if.then253, label %if.else, !dbg !7041

if.then253:                                       ; preds = %if.end249
  %206 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7042
  %call254 = call i32 @get_bits1(%struct.GetBitContext* %206), !dbg !7044
  store i32 %call254, i32* %ac3_exponent_strategy, align 4, !dbg !7045
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7046
  %call255 = call i32 @get_bits1(%struct.GetBitContext* %207), !dbg !7047
  store i32 %call255, i32* %parse_aht_info, align 4, !dbg !7048
  br label %if.end256, !dbg !7049

if.else:                                          ; preds = %if.end249
  store i32 1, i32* %ac3_exponent_strategy, align 4, !dbg !7050
  store i32 0, i32* %parse_aht_info, align 4, !dbg !7052
  br label %if.end256

if.end256:                                        ; preds = %if.else, %if.then253
  %208 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7053
  %call257 = call i32 @get_bits(%struct.GetBitContext* %208, i32 2), !dbg !7054
  %209 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7055
  %snr_offset_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %209, i32 0, i32 38, !dbg !7056
  store i32 %call257, i32* %snr_offset_strategy, align 4, !dbg !7057
  %210 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7058
  %call258 = call i32 @get_bits1(%struct.GetBitContext* %210), !dbg !7059
  store i32 %call258, i32* %parse_transient_proc_info, align 4, !dbg !7060
  %211 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7061
  %call259 = call i32 @get_bits1(%struct.GetBitContext* %211), !dbg !7062
  %212 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7063
  %block_switch_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %212, i32 0, i32 39, !dbg !7064
  store i32 %call259, i32* %block_switch_syntax, align 16, !dbg !7065
  %213 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7066
  %block_switch_syntax260 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %213, i32 0, i32 39, !dbg !7068
  %214 = load i32, i32* %block_switch_syntax260, align 16, !dbg !7068
  %tobool261 = icmp ne i32 %214, 0, !dbg !7066
  br i1 %tobool261, label %if.end263, label %if.then262, !dbg !7069

if.then262:                                       ; preds = %if.end256
  %215 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7070
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %215, i32 0, i32 106, !dbg !7071
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i32 0, i32 0, !dbg !7072
  %216 = bitcast i32* %arraydecay to i8*, !dbg !7072
  call void @llvm.memset.p0i8.i64(i8* %216, i8 0, i64 28, i32 8, i1 false), !dbg !7072
  br label %if.end263, !dbg !7072

if.end263:                                        ; preds = %if.then262, %if.end256
  %217 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7073
  %call264 = call i32 @get_bits1(%struct.GetBitContext* %217), !dbg !7074
  %218 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7075
  %dither_flag_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %218, i32 0, i32 40, !dbg !7076
  store i32 %call264, i32* %dither_flag_syntax, align 4, !dbg !7077
  %219 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7078
  %dither_flag_syntax265 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %219, i32 0, i32 40, !dbg !7080
  %220 = load i32, i32* %dither_flag_syntax265, align 4, !dbg !7080
  %tobool266 = icmp ne i32 %220, 0, !dbg !7078
  br i1 %tobool266, label %if.end277, label %if.then267, !dbg !7081

if.then267:                                       ; preds = %if.end263
  store i32 1, i32* %ch, align 4, !dbg !7082
  br label %for.cond268, !dbg !7085

for.cond268:                                      ; preds = %for.inc274, %if.then267
  %221 = load i32, i32* %ch, align 4, !dbg !7086
  %222 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7089
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %222, i32 0, i32 70, !dbg !7090
  %223 = load i32, i32* %fbw_channels, align 4, !dbg !7090
  %cmp269 = icmp sle i32 %221, %223, !dbg !7091
  br i1 %cmp269, label %for.body271, label %for.end276, !dbg !7092

for.body271:                                      ; preds = %for.cond268
  %224 = load i32, i32* %ch, align 4, !dbg !7093
  %idxprom272 = sext i32 %224 to i64, !dbg !7094
  %225 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7094
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %225, i32 0, i32 104, !dbg !7095
  %arrayidx273 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom272, !dbg !7094
  store i32 1, i32* %arrayidx273, align 4, !dbg !7096
  br label %for.inc274, !dbg !7094

for.inc274:                                       ; preds = %for.body271
  %226 = load i32, i32* %ch, align 4, !dbg !7097
  %inc275 = add nsw i32 %226, 1, !dbg !7097
  store i32 %inc275, i32* %ch, align 4, !dbg !7097
  br label %for.cond268, !dbg !7099, !llvm.loop !7100

for.end276:                                       ; preds = %for.cond268
  br label %if.end277, !dbg !7102

if.end277:                                        ; preds = %for.end276, %if.end263
  %227 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7103
  %lfe_ch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %227, i32 0, i32 72, !dbg !7104
  %228 = load i32, i32* %lfe_ch, align 4, !dbg !7104
  %idxprom278 = sext i32 %228 to i64, !dbg !7105
  %229 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7105
  %dither_flag279 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %229, i32 0, i32 104, !dbg !7106
  %arrayidx280 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag279, i64 0, i64 %idxprom278, !dbg !7105
  store i32 0, i32* %arrayidx280, align 4, !dbg !7107
  %230 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7108
  %dither_flag281 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %230, i32 0, i32 104, !dbg !7109
  %arrayidx282 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag281, i64 0, i64 0, !dbg !7108
  store i32 0, i32* %arrayidx282, align 8, !dbg !7110
  %231 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7111
  %call283 = call i32 @get_bits1(%struct.GetBitContext* %231), !dbg !7112
  %232 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7113
  %bit_allocation_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %232, i32 0, i32 41, !dbg !7114
  store i32 %call283, i32* %bit_allocation_syntax, align 8, !dbg !7115
  %233 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7116
  %bit_allocation_syntax284 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %233, i32 0, i32 41, !dbg !7118
  %234 = load i32, i32* %bit_allocation_syntax284, align 8, !dbg !7118
  %tobool285 = icmp ne i32 %234, 0, !dbg !7116
  br i1 %tobool285, label %if.end297, label %if.then286, !dbg !7119

if.then286:                                       ; preds = %if.end277
  %235 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ff_ac3_slow_decay_tab, i64 0, i64 2), align 1, !dbg !7120
  %conv287 = zext i8 %235 to i32, !dbg !7120
  %236 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7122
  %bit_alloc_params288 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %236, i32 0, i32 91, !dbg !7123
  %slow_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params288, i32 0, i32 3, !dbg !7124
  store i32 %conv287, i32* %slow_decay, align 4, !dbg !7125
  %237 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ff_ac3_fast_decay_tab, i64 0, i64 1), align 1, !dbg !7126
  %conv289 = zext i8 %237 to i32, !dbg !7126
  %238 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7127
  %bit_alloc_params290 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %238, i32 0, i32 91, !dbg !7128
  %fast_decay = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params290, i32 0, i32 4, !dbg !7129
  store i32 %conv289, i32* %fast_decay, align 16, !dbg !7130
  %239 = load i16, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @ff_ac3_slow_gain_tab, i64 0, i64 1), align 2, !dbg !7131
  %conv291 = zext i16 %239 to i32, !dbg !7131
  %240 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7132
  %bit_alloc_params292 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %240, i32 0, i32 91, !dbg !7133
  %slow_gain = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params292, i32 0, i32 2, !dbg !7134
  store i32 %conv291, i32* %slow_gain, align 8, !dbg !7135
  %241 = load i16, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @ff_ac3_db_per_bit_tab, i64 0, i64 2), align 2, !dbg !7136
  %conv293 = zext i16 %241 to i32, !dbg !7136
  %242 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7137
  %bit_alloc_params294 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %242, i32 0, i32 91, !dbg !7138
  %db_per_bit = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params294, i32 0, i32 5, !dbg !7139
  store i32 %conv293, i32* %db_per_bit, align 4, !dbg !7140
  %243 = load i16, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @ff_ac3_floor_tab, i64 0, i64 7), align 2, !dbg !7141
  %conv295 = sext i16 %243 to i32, !dbg !7141
  %244 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7142
  %bit_alloc_params296 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %244, i32 0, i32 91, !dbg !7143
  %floor = getelementptr inbounds %struct.AC3BitAllocParameters, %struct.AC3BitAllocParameters* %bit_alloc_params296, i32 0, i32 6, !dbg !7144
  store i32 %conv295, i32* %floor, align 8, !dbg !7145
  br label %if.end297, !dbg !7146

if.end297:                                        ; preds = %if.then286, %if.end277
  %245 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7147
  %call298 = call i32 @get_bits1(%struct.GetBitContext* %245), !dbg !7148
  %246 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7149
  %fast_gain_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %246, i32 0, i32 42, !dbg !7150
  store i32 %call298, i32* %fast_gain_syntax, align 4, !dbg !7151
  %247 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7152
  %call299 = call i32 @get_bits1(%struct.GetBitContext* %247), !dbg !7153
  %248 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7154
  %dba_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %248, i32 0, i32 43, !dbg !7155
  store i32 %call299, i32* %dba_syntax, align 32, !dbg !7156
  %249 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7157
  %call300 = call i32 @get_bits1(%struct.GetBitContext* %249), !dbg !7158
  %250 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7159
  %skip_syntax = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %250, i32 0, i32 44, !dbg !7160
  store i32 %call300, i32* %skip_syntax, align 4, !dbg !7161
  %251 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7162
  %call301 = call i32 @get_bits1(%struct.GetBitContext* %251), !dbg !7163
  store i32 %call301, i32* %parse_spx_atten_data, align 4, !dbg !7164
  store i32 0, i32* %num_cpl_blocks, align 4, !dbg !7165
  %252 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7166
  %channel_mode302 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %252, i32 0, i32 12, !dbg !7168
  %253 = load i32, i32* %channel_mode302, align 4, !dbg !7168
  %cmp303 = icmp sgt i32 %253, 1, !dbg !7169
  br i1 %cmp303, label %if.then305, label %if.else340, !dbg !7170

if.then305:                                       ; preds = %if.end297
  store i32 0, i32* %blk, align 4, !dbg !7171
  br label %for.cond306, !dbg !7174

for.cond306:                                      ; preds = %for.inc337, %if.then305
  %254 = load i32, i32* %blk, align 4, !dbg !7175
  %255 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7178
  %num_blocks307 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %255, i32 0, i32 9, !dbg !7179
  %256 = load i32, i32* %num_blocks307, align 8, !dbg !7179
  %cmp308 = icmp slt i32 %254, %256, !dbg !7180
  br i1 %cmp308, label %for.body310, label %for.end339, !dbg !7181

for.body310:                                      ; preds = %for.cond306
  %257 = load i32, i32* %blk, align 4, !dbg !7182
  %tobool311 = icmp ne i32 %257, 0, !dbg !7182
  br i1 %tobool311, label %lor.rhs, label %lor.end, !dbg !7184

lor.rhs:                                          ; preds = %for.body310
  %258 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7185
  %call312 = call i32 @get_bits1(%struct.GetBitContext* %258), !dbg !7187
  %tobool313 = icmp ne i32 %call312, 0, !dbg !7188
  br label %lor.end, !dbg !7188

lor.end:                                          ; preds = %lor.rhs, %for.body310
  %259 = phi i1 [ true, %for.body310 ], [ %tobool313, %lor.rhs ]
  %lor.ext = zext i1 %259 to i32, !dbg !7189
  %260 = load i32, i32* %blk, align 4, !dbg !7191
  %idxprom314 = sext i32 %260 to i64, !dbg !7192
  %261 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7192
  %cpl_strategy_exists = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %261, i32 0, i32 46, !dbg !7193
  %arrayidx315 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists, i64 0, i64 %idxprom314, !dbg !7192
  store i32 %lor.ext, i32* %arrayidx315, align 4, !dbg !7194
  %262 = load i32, i32* %blk, align 4, !dbg !7195
  %idxprom316 = sext i32 %262 to i64, !dbg !7197
  %263 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7197
  %cpl_strategy_exists317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %263, i32 0, i32 46, !dbg !7198
  %arrayidx318 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists317, i64 0, i64 %idxprom316, !dbg !7197
  %264 = load i32, i32* %arrayidx318, align 4, !dbg !7197
  %tobool319 = icmp ne i32 %264, 0, !dbg !7197
  br i1 %tobool319, label %if.then320, label %if.else324, !dbg !7199

if.then320:                                       ; preds = %lor.end
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7200
  %call321 = call i32 @get_bits1(%struct.GetBitContext* %265), !dbg !7202
  %266 = load i32, i32* %blk, align 4, !dbg !7203
  %idxprom322 = sext i32 %266 to i64, !dbg !7204
  %267 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7204
  %cpl_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %267, i32 0, i32 45, !dbg !7205
  %arrayidx323 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use, i64 0, i64 %idxprom322, !dbg !7204
  store i32 %call321, i32* %arrayidx323, align 4, !dbg !7206
  br label %if.end332, !dbg !7207

if.else324:                                       ; preds = %lor.end
  %268 = load i32, i32* %blk, align 4, !dbg !7208
  %sub325 = sub nsw i32 %268, 1, !dbg !7210
  %idxprom326 = sext i32 %sub325 to i64, !dbg !7211
  %269 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7211
  %cpl_in_use327 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %269, i32 0, i32 45, !dbg !7212
  %arrayidx328 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use327, i64 0, i64 %idxprom326, !dbg !7211
  %270 = load i32, i32* %arrayidx328, align 4, !dbg !7211
  %271 = load i32, i32* %blk, align 4, !dbg !7213
  %idxprom329 = sext i32 %271 to i64, !dbg !7214
  %272 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7214
  %cpl_in_use330 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %272, i32 0, i32 45, !dbg !7215
  %arrayidx331 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use330, i64 0, i64 %idxprom329, !dbg !7214
  store i32 %270, i32* %arrayidx331, align 4, !dbg !7216
  br label %if.end332

if.end332:                                        ; preds = %if.else324, %if.then320
  %273 = load i32, i32* %blk, align 4, !dbg !7217
  %idxprom333 = sext i32 %273 to i64, !dbg !7218
  %274 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7218
  %cpl_in_use334 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %274, i32 0, i32 45, !dbg !7219
  %arrayidx335 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use334, i64 0, i64 %idxprom333, !dbg !7218
  %275 = load i32, i32* %arrayidx335, align 4, !dbg !7218
  %276 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7220
  %add336 = add nsw i32 %276, %275, !dbg !7220
  store i32 %add336, i32* %num_cpl_blocks, align 4, !dbg !7220
  br label %for.inc337, !dbg !7221

for.inc337:                                       ; preds = %if.end332
  %277 = load i32, i32* %blk, align 4, !dbg !7222
  %inc338 = add nsw i32 %277, 1, !dbg !7222
  store i32 %inc338, i32* %blk, align 4, !dbg !7222
  br label %for.cond306, !dbg !7224, !llvm.loop !7225

for.end339:                                       ; preds = %for.cond306
  br label %if.end343, !dbg !7227

if.else340:                                       ; preds = %if.end297
  %278 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7228
  %cpl_in_use341 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %278, i32 0, i32 45, !dbg !7230
  %arraydecay342 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use341, i32 0, i32 0, !dbg !7231
  %279 = bitcast i32* %arraydecay342 to i8*, !dbg !7231
  call void @llvm.memset.p0i8.i64(i8* %279, i8 0, i64 24, i32 8, i1 false), !dbg !7231
  br label %if.end343

if.end343:                                        ; preds = %if.else340, %for.end339
  %280 = load i32, i32* %ac3_exponent_strategy, align 4, !dbg !7232
  %tobool344 = icmp ne i32 %280, 0, !dbg !7232
  br i1 %tobool344, label %if.then345, label %if.else371, !dbg !7234

if.then345:                                       ; preds = %if.end343
  store i32 0, i32* %blk, align 4, !dbg !7235
  br label %for.cond346, !dbg !7238

for.cond346:                                      ; preds = %for.inc368, %if.then345
  %281 = load i32, i32* %blk, align 4, !dbg !7239
  %282 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7242
  %num_blocks347 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %282, i32 0, i32 9, !dbg !7243
  %283 = load i32, i32* %num_blocks347, align 8, !dbg !7243
  %cmp348 = icmp slt i32 %281, %283, !dbg !7244
  br i1 %cmp348, label %for.body350, label %for.end370, !dbg !7245

for.body350:                                      ; preds = %for.cond346
  %284 = load i32, i32* %blk, align 4, !dbg !7246
  %idxprom351 = sext i32 %284 to i64, !dbg !7249
  %285 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7249
  %cpl_in_use352 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %285, i32 0, i32 45, !dbg !7250
  %arrayidx353 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use352, i64 0, i64 %idxprom351, !dbg !7249
  %286 = load i32, i32* %arrayidx353, align 4, !dbg !7249
  %tobool354 = icmp ne i32 %286, 0, !dbg !7251
  %lnot = xor i1 %tobool354, true, !dbg !7251
  %lnot.ext = zext i1 %lnot to i32, !dbg !7251
  store i32 %lnot.ext, i32* %ch, align 4, !dbg !7252
  br label %for.cond355, !dbg !7253

for.cond355:                                      ; preds = %for.inc365, %for.body350
  %287 = load i32, i32* %ch, align 4, !dbg !7254
  %288 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7257
  %fbw_channels356 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %288, i32 0, i32 70, !dbg !7258
  %289 = load i32, i32* %fbw_channels356, align 4, !dbg !7258
  %cmp357 = icmp sle i32 %287, %289, !dbg !7259
  br i1 %cmp357, label %for.body359, label %for.end367, !dbg !7260

for.body359:                                      ; preds = %for.cond355
  %290 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7261
  %call360 = call i32 @get_bits(%struct.GetBitContext* %290, i32 2), !dbg !7263
  %291 = load i32, i32* %ch, align 4, !dbg !7264
  %idxprom361 = sext i32 %291 to i64, !dbg !7265
  %292 = load i32, i32* %blk, align 4, !dbg !7266
  %idxprom362 = sext i32 %292 to i64, !dbg !7265
  %293 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7265
  %exp_strategy = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %293, i32 0, i32 90, !dbg !7267
  %arrayidx363 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy, i64 0, i64 %idxprom362, !dbg !7265
  %arrayidx364 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx363, i64 0, i64 %idxprom361, !dbg !7265
  store i32 %call360, i32* %arrayidx364, align 4, !dbg !7268
  br label %for.inc365, !dbg !7269

for.inc365:                                       ; preds = %for.body359
  %294 = load i32, i32* %ch, align 4, !dbg !7270
  %inc366 = add nsw i32 %294, 1, !dbg !7270
  store i32 %inc366, i32* %ch, align 4, !dbg !7270
  br label %for.cond355, !dbg !7272, !llvm.loop !7273

for.end367:                                       ; preds = %for.cond355
  br label %for.inc368, !dbg !7275

for.inc368:                                       ; preds = %for.end367
  %295 = load i32, i32* %blk, align 4, !dbg !7276
  %inc369 = add nsw i32 %295, 1, !dbg !7276
  store i32 %inc369, i32* %blk, align 4, !dbg !7276
  br label %for.cond346, !dbg !7278, !llvm.loop !7279

for.end370:                                       ; preds = %for.cond346
  br label %if.end404, !dbg !7281

if.else371:                                       ; preds = %if.end343
  %296 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7282
  %channel_mode372 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %296, i32 0, i32 12, !dbg !7285
  %297 = load i32, i32* %channel_mode372, align 4, !dbg !7285
  %cmp373 = icmp sgt i32 %297, 1, !dbg !7286
  br i1 %cmp373, label %land.rhs, label %land.end, !dbg !7287

land.rhs:                                         ; preds = %if.else371
  %298 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7288
  %tobool375 = icmp ne i32 %298, 0, !dbg !7290
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else371
  %299 = phi i1 [ false, %if.else371 ], [ %tobool375, %land.rhs ]
  %lnot376 = xor i1 %299, true, !dbg !7291
  %lnot.ext377 = zext i1 %lnot376 to i32, !dbg !7291
  store i32 %lnot.ext377, i32* %ch, align 4, !dbg !7293
  br label %for.cond378, !dbg !7294

for.cond378:                                      ; preds = %for.inc401, %land.end
  %300 = load i32, i32* %ch, align 4, !dbg !7295
  %301 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7298
  %fbw_channels379 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %301, i32 0, i32 70, !dbg !7299
  %302 = load i32, i32* %fbw_channels379, align 4, !dbg !7299
  %cmp380 = icmp sle i32 %300, %302, !dbg !7300
  br i1 %cmp380, label %for.body382, label %for.end403, !dbg !7301

for.body382:                                      ; preds = %for.cond378
  call void @llvm.dbg.declare(metadata i32* %frmchexpstr, metadata !7302, metadata !1854), !dbg !7304
  %303 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7305
  %call383 = call i32 @get_bits(%struct.GetBitContext* %303, i32 5), !dbg !7306
  store i32 %call383, i32* %frmchexpstr, align 4, !dbg !7304
  store i32 0, i32* %blk, align 4, !dbg !7307
  br label %for.cond384, !dbg !7309

for.cond384:                                      ; preds = %for.inc398, %for.body382
  %304 = load i32, i32* %blk, align 4, !dbg !7310
  %cmp385 = icmp slt i32 %304, 6, !dbg !7313
  br i1 %cmp385, label %for.body387, label %for.end400, !dbg !7314

for.body387:                                      ; preds = %for.cond384
  %305 = load i32, i32* %blk, align 4, !dbg !7315
  %idxprom388 = sext i32 %305 to i64, !dbg !7317
  %306 = load i32, i32* %frmchexpstr, align 4, !dbg !7318
  %idxprom389 = sext i32 %306 to i64, !dbg !7317
  %arrayidx390 = getelementptr inbounds [32 x [6 x i8]], [32 x [6 x i8]]* @ff_eac3_frm_expstr, i64 0, i64 %idxprom389, !dbg !7317
  %arrayidx391 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx390, i64 0, i64 %idxprom388, !dbg !7317
  %307 = load i8, i8* %arrayidx391, align 1, !dbg !7317
  %conv392 = zext i8 %307 to i32, !dbg !7317
  %308 = load i32, i32* %ch, align 4, !dbg !7319
  %idxprom393 = sext i32 %308 to i64, !dbg !7320
  %309 = load i32, i32* %blk, align 4, !dbg !7321
  %idxprom394 = sext i32 %309 to i64, !dbg !7320
  %310 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7320
  %exp_strategy395 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %310, i32 0, i32 90, !dbg !7322
  %arrayidx396 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy395, i64 0, i64 %idxprom394, !dbg !7320
  %arrayidx397 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx396, i64 0, i64 %idxprom393, !dbg !7320
  store i32 %conv392, i32* %arrayidx397, align 4, !dbg !7323
  br label %for.inc398, !dbg !7324

for.inc398:                                       ; preds = %for.body387
  %311 = load i32, i32* %blk, align 4, !dbg !7325
  %inc399 = add nsw i32 %311, 1, !dbg !7325
  store i32 %inc399, i32* %blk, align 4, !dbg !7325
  br label %for.cond384, !dbg !7327, !llvm.loop !7328

for.end400:                                       ; preds = %for.cond384
  br label %for.inc401, !dbg !7330

for.inc401:                                       ; preds = %for.end400
  %312 = load i32, i32* %ch, align 4, !dbg !7331
  %inc402 = add nsw i32 %312, 1, !dbg !7331
  store i32 %inc402, i32* %ch, align 4, !dbg !7331
  br label %for.cond378, !dbg !7333, !llvm.loop !7334

for.end403:                                       ; preds = %for.cond378
  br label %if.end404

if.end404:                                        ; preds = %for.end403, %for.end370
  %313 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7336
  %lfe_on405 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %313, i32 0, i32 13, !dbg !7338
  %314 = load i32, i32* %lfe_on405, align 8, !dbg !7338
  %tobool406 = icmp ne i32 %314, 0, !dbg !7336
  br i1 %tobool406, label %if.then407, label %if.end423, !dbg !7339

if.then407:                                       ; preds = %if.end404
  store i32 0, i32* %blk, align 4, !dbg !7340
  br label %for.cond408, !dbg !7343

for.cond408:                                      ; preds = %for.inc420, %if.then407
  %315 = load i32, i32* %blk, align 4, !dbg !7344
  %316 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7347
  %num_blocks409 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %316, i32 0, i32 9, !dbg !7348
  %317 = load i32, i32* %num_blocks409, align 8, !dbg !7348
  %cmp410 = icmp slt i32 %315, %317, !dbg !7349
  br i1 %cmp410, label %for.body412, label %for.end422, !dbg !7350

for.body412:                                      ; preds = %for.cond408
  %318 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7351
  %call413 = call i32 @get_bits1(%struct.GetBitContext* %318), !dbg !7353
  %319 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7354
  %lfe_ch414 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %319, i32 0, i32 72, !dbg !7355
  %320 = load i32, i32* %lfe_ch414, align 4, !dbg !7355
  %idxprom415 = sext i32 %320 to i64, !dbg !7356
  %321 = load i32, i32* %blk, align 4, !dbg !7357
  %idxprom416 = sext i32 %321 to i64, !dbg !7356
  %322 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7356
  %exp_strategy417 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %322, i32 0, i32 90, !dbg !7358
  %arrayidx418 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy417, i64 0, i64 %idxprom416, !dbg !7356
  %arrayidx419 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx418, i64 0, i64 %idxprom415, !dbg !7356
  store i32 %call413, i32* %arrayidx419, align 4, !dbg !7359
  br label %for.inc420, !dbg !7360

for.inc420:                                       ; preds = %for.body412
  %323 = load i32, i32* %blk, align 4, !dbg !7361
  %inc421 = add nsw i32 %323, 1, !dbg !7361
  store i32 %inc421, i32* %blk, align 4, !dbg !7361
  br label %for.cond408, !dbg !7363, !llvm.loop !7364

for.end422:                                       ; preds = %for.cond408
  br label %if.end423, !dbg !7366

if.end423:                                        ; preds = %for.end422, %if.end404
  %324 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7367
  %frame_type424 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %324, i32 0, i32 3, !dbg !7369
  %325 = load i32, i32* %frame_type424, align 16, !dbg !7369
  %cmp425 = icmp eq i32 %325, 0, !dbg !7370
  br i1 %cmp425, label %land.lhs.true427, label %if.end436, !dbg !7371

land.lhs.true427:                                 ; preds = %if.end423
  %326 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7372
  %num_blocks428 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %326, i32 0, i32 9, !dbg !7373
  %327 = load i32, i32* %num_blocks428, align 8, !dbg !7373
  %cmp429 = icmp eq i32 %327, 6, !dbg !7374
  br i1 %cmp429, label %if.then434, label %lor.lhs.false431, !dbg !7375

lor.lhs.false431:                                 ; preds = %land.lhs.true427
  %328 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7376
  %call432 = call i32 @get_bits1(%struct.GetBitContext* %328), !dbg !7378
  %tobool433 = icmp ne i32 %call432, 0, !dbg !7378
  br i1 %tobool433, label %if.then434, label %if.end436, !dbg !7379

if.then434:                                       ; preds = %lor.lhs.false431, %land.lhs.true427
  %329 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7380
  %330 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7382
  %fbw_channels435 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %330, i32 0, i32 70, !dbg !7383
  %331 = load i32, i32* %fbw_channels435, align 4, !dbg !7383
  %mul = mul nsw i32 5, %331, !dbg !7384
  call void @skip_bits(%struct.GetBitContext* %329, i32 %mul), !dbg !7385
  br label %if.end436, !dbg !7386

if.end436:                                        ; preds = %if.then434, %lor.lhs.false431, %if.end423
  %332 = load i32, i32* %parse_aht_info, align 4, !dbg !7387
  %tobool437 = icmp ne i32 %332, 0, !dbg !7387
  br i1 %tobool437, label %if.then438, label %if.else480, !dbg !7389

if.then438:                                       ; preds = %if.end436
  %333 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7390
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %333, i32 0, i32 68, !dbg !7392
  %arrayidx439 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 0, !dbg !7390
  store i32 0, i32* %arrayidx439, align 8, !dbg !7393
  %334 = load i32, i32* %num_cpl_blocks, align 4, !dbg !7394
  %cmp440 = icmp ne i32 %334, 6, !dbg !7396
  %conv441 = zext i1 %cmp440 to i32, !dbg !7396
  store i32 %conv441, i32* %ch, align 4, !dbg !7397
  br label %for.cond442, !dbg !7398

for.cond442:                                      ; preds = %for.inc477, %if.then438
  %335 = load i32, i32* %ch, align 4, !dbg !7399
  %336 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7402
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %336, i32 0, i32 71, !dbg !7403
  %337 = load i32, i32* %channels, align 8, !dbg !7403
  %cmp443 = icmp sle i32 %335, %337, !dbg !7404
  br i1 %cmp443, label %for.body445, label %for.end479, !dbg !7405

for.body445:                                      ; preds = %for.cond442
  call void @llvm.dbg.declare(metadata i32* %use_aht, metadata !7406, metadata !1854), !dbg !7408
  store i32 1, i32* %use_aht, align 4, !dbg !7408
  store i32 1, i32* %blk, align 4, !dbg !7409
  br label %for.cond446, !dbg !7411

for.cond446:                                      ; preds = %for.inc466, %for.body445
  %338 = load i32, i32* %blk, align 4, !dbg !7412
  %cmp447 = icmp slt i32 %338, 6, !dbg !7415
  br i1 %cmp447, label %for.body449, label %for.end468, !dbg !7416

for.body449:                                      ; preds = %for.cond446
  %339 = load i32, i32* %ch, align 4, !dbg !7417
  %idxprom450 = sext i32 %339 to i64, !dbg !7420
  %340 = load i32, i32* %blk, align 4, !dbg !7421
  %idxprom451 = sext i32 %340 to i64, !dbg !7420
  %341 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7420
  %exp_strategy452 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %341, i32 0, i32 90, !dbg !7422
  %arrayidx453 = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* %exp_strategy452, i64 0, i64 %idxprom451, !dbg !7420
  %arrayidx454 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx453, i64 0, i64 %idxprom450, !dbg !7420
  %342 = load i32, i32* %arrayidx454, align 4, !dbg !7420
  %cmp455 = icmp ne i32 %342, 0, !dbg !7423
  br i1 %cmp455, label %if.then464, label %lor.lhs.false457, !dbg !7424

lor.lhs.false457:                                 ; preds = %for.body449
  %343 = load i32, i32* %ch, align 4, !dbg !7425
  %tobool458 = icmp ne i32 %343, 0, !dbg !7425
  br i1 %tobool458, label %if.end465, label %land.lhs.true459, !dbg !7426

land.lhs.true459:                                 ; preds = %lor.lhs.false457
  %344 = load i32, i32* %blk, align 4, !dbg !7427
  %idxprom460 = sext i32 %344 to i64, !dbg !7429
  %345 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7429
  %cpl_strategy_exists461 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %345, i32 0, i32 46, !dbg !7430
  %arrayidx462 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_strategy_exists461, i64 0, i64 %idxprom460, !dbg !7429
  %346 = load i32, i32* %arrayidx462, align 4, !dbg !7429
  %tobool463 = icmp ne i32 %346, 0, !dbg !7429
  br i1 %tobool463, label %if.then464, label %if.end465, !dbg !7431

if.then464:                                       ; preds = %land.lhs.true459, %for.body449
  store i32 0, i32* %use_aht, align 4, !dbg !7433
  br label %for.end468, !dbg !7435

if.end465:                                        ; preds = %land.lhs.true459, %lor.lhs.false457
  br label %for.inc466, !dbg !7436

for.inc466:                                       ; preds = %if.end465
  %347 = load i32, i32* %blk, align 4, !dbg !7437
  %inc467 = add nsw i32 %347, 1, !dbg !7437
  store i32 %inc467, i32* %blk, align 4, !dbg !7437
  br label %for.cond446, !dbg !7439, !llvm.loop !7440

for.end468:                                       ; preds = %if.then464, %for.cond446
  %348 = load i32, i32* %use_aht, align 4, !dbg !7442
  %tobool469 = icmp ne i32 %348, 0, !dbg !7442
  br i1 %tobool469, label %land.rhs470, label %land.end473, !dbg !7443

land.rhs470:                                      ; preds = %for.end468
  %349 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7444
  %call471 = call i32 @get_bits1(%struct.GetBitContext* %349), !dbg !7446
  %tobool472 = icmp ne i32 %call471, 0, !dbg !7447
  br label %land.end473

land.end473:                                      ; preds = %land.rhs470, %for.end468
  %350 = phi i1 [ false, %for.end468 ], [ %tobool472, %land.rhs470 ]
  %land.ext = zext i1 %350 to i32, !dbg !7448
  %351 = load i32, i32* %ch, align 4, !dbg !7450
  %idxprom474 = sext i32 %351 to i64, !dbg !7451
  %352 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7451
  %channel_uses_aht475 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %352, i32 0, i32 68, !dbg !7452
  %arrayidx476 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht475, i64 0, i64 %idxprom474, !dbg !7451
  store i32 %land.ext, i32* %arrayidx476, align 4, !dbg !7453
  br label %for.inc477, !dbg !7454

for.inc477:                                       ; preds = %land.end473
  %353 = load i32, i32* %ch, align 4, !dbg !7455
  %inc478 = add nsw i32 %353, 1, !dbg !7455
  store i32 %inc478, i32* %ch, align 4, !dbg !7455
  br label %for.cond442, !dbg !7457, !llvm.loop !7458

for.end479:                                       ; preds = %for.cond442
  br label %if.end483, !dbg !7460

if.else480:                                       ; preds = %if.end436
  %354 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7461
  %channel_uses_aht481 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %354, i32 0, i32 68, !dbg !7463
  %arraydecay482 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht481, i32 0, i32 0, !dbg !7464
  %355 = bitcast i32* %arraydecay482 to i8*, !dbg !7464
  call void @llvm.memset.p0i8.i64(i8* %355, i8 0, i64 28, i32 8, i1 false), !dbg !7464
  br label %if.end483

if.end483:                                        ; preds = %if.else480, %for.end479
  %356 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7465
  %snr_offset_strategy484 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %356, i32 0, i32 38, !dbg !7467
  %357 = load i32, i32* %snr_offset_strategy484, align 4, !dbg !7467
  %tobool485 = icmp ne i32 %357, 0, !dbg !7465
  br i1 %tobool485, label %if.end503, label %if.then486, !dbg !7468

if.then486:                                       ; preds = %if.end483
  call void @llvm.dbg.declare(metadata i32* %csnroffst, metadata !7469, metadata !1854), !dbg !7471
  %358 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7472
  %call487 = call i32 @get_bits(%struct.GetBitContext* %358, i32 6), !dbg !7473
  %sub488 = sub i32 %call487, 15, !dbg !7474
  %shl489 = shl i32 %sub488, 4, !dbg !7475
  store i32 %shl489, i32* %csnroffst, align 4, !dbg !7471
  call void @llvm.dbg.declare(metadata i32* %snroffst, metadata !7476, metadata !1854), !dbg !7477
  %359 = load i32, i32* %csnroffst, align 4, !dbg !7478
  %360 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7479
  %call490 = call i32 @get_bits(%struct.GetBitContext* %360, i32 4), !dbg !7480
  %add491 = add i32 %359, %call490, !dbg !7481
  %shl492 = shl i32 %add491, 2, !dbg !7482
  store i32 %shl492, i32* %snroffst, align 4, !dbg !7477
  store i32 0, i32* %ch, align 4, !dbg !7483
  br label %for.cond493, !dbg !7485

for.cond493:                                      ; preds = %for.inc500, %if.then486
  %361 = load i32, i32* %ch, align 4, !dbg !7486
  %362 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7489
  %channels494 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %362, i32 0, i32 71, !dbg !7490
  %363 = load i32, i32* %channels494, align 8, !dbg !7490
  %cmp495 = icmp sle i32 %361, %363, !dbg !7491
  br i1 %cmp495, label %for.body497, label %for.end502, !dbg !7492

for.body497:                                      ; preds = %for.cond493
  %364 = load i32, i32* %snroffst, align 4, !dbg !7493
  %365 = load i32, i32* %ch, align 4, !dbg !7494
  %idxprom498 = sext i32 %365 to i64, !dbg !7495
  %366 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7495
  %snr_offset = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %366, i32 0, i32 93, !dbg !7496
  %arrayidx499 = getelementptr inbounds [7 x i32], [7 x i32]* %snr_offset, i64 0, i64 %idxprom498, !dbg !7495
  store i32 %364, i32* %arrayidx499, align 4, !dbg !7497
  br label %for.inc500, !dbg !7495

for.inc500:                                       ; preds = %for.body497
  %367 = load i32, i32* %ch, align 4, !dbg !7498
  %inc501 = add nsw i32 %367, 1, !dbg !7498
  store i32 %inc501, i32* %ch, align 4, !dbg !7498
  br label %for.cond493, !dbg !7500, !llvm.loop !7501

for.end502:                                       ; preds = %for.cond493
  br label %if.end503, !dbg !7503

if.end503:                                        ; preds = %for.end502, %if.end483
  %368 = load i32, i32* %parse_transient_proc_info, align 4, !dbg !7504
  %tobool504 = icmp ne i32 %368, 0, !dbg !7504
  br i1 %tobool504, label %if.then505, label %if.end518, !dbg !7506

if.then505:                                       ; preds = %if.end503
  store i32 1, i32* %ch, align 4, !dbg !7507
  br label %for.cond506, !dbg !7510

for.cond506:                                      ; preds = %for.inc515, %if.then505
  %369 = load i32, i32* %ch, align 4, !dbg !7511
  %370 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7514
  %fbw_channels507 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %370, i32 0, i32 70, !dbg !7515
  %371 = load i32, i32* %fbw_channels507, align 4, !dbg !7515
  %cmp508 = icmp sle i32 %369, %371, !dbg !7516
  br i1 %cmp508, label %for.body510, label %for.end517, !dbg !7517

for.body510:                                      ; preds = %for.cond506
  %372 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7518
  %call511 = call i32 @get_bits1(%struct.GetBitContext* %372), !dbg !7521
  %tobool512 = icmp ne i32 %call511, 0, !dbg !7521
  br i1 %tobool512, label %if.then513, label %if.end514, !dbg !7522

if.then513:                                       ; preds = %for.body510
  %373 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7523
  call void @skip_bits(%struct.GetBitContext* %373, i32 10), !dbg !7525
  %374 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7526
  call void @skip_bits(%struct.GetBitContext* %374, i32 8), !dbg !7527
  br label %if.end514, !dbg !7528

if.end514:                                        ; preds = %if.then513, %for.body510
  br label %for.inc515, !dbg !7529

for.inc515:                                       ; preds = %if.end514
  %375 = load i32, i32* %ch, align 4, !dbg !7530
  %inc516 = add nsw i32 %375, 1, !dbg !7530
  store i32 %inc516, i32* %ch, align 4, !dbg !7530
  br label %for.cond506, !dbg !7532, !llvm.loop !7533

for.end517:                                       ; preds = %for.cond506
  br label %if.end518, !dbg !7535

if.end518:                                        ; preds = %for.end517, %if.end503
  store i32 1, i32* %ch, align 4, !dbg !7536
  br label %for.cond519, !dbg !7538

for.cond519:                                      ; preds = %for.inc538, %if.end518
  %376 = load i32, i32* %ch, align 4, !dbg !7539
  %377 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7542
  %fbw_channels520 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %377, i32 0, i32 70, !dbg !7543
  %378 = load i32, i32* %fbw_channels520, align 4, !dbg !7543
  %cmp521 = icmp sle i32 %376, %378, !dbg !7544
  br i1 %cmp521, label %for.body523, label %for.end540, !dbg !7545

for.body523:                                      ; preds = %for.cond519
  %379 = load i32, i32* %parse_spx_atten_data, align 4, !dbg !7546
  %tobool524 = icmp ne i32 %379, 0, !dbg !7546
  br i1 %tobool524, label %land.lhs.true525, label %if.else533, !dbg !7549

land.lhs.true525:                                 ; preds = %for.body523
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7550
  %call526 = call i32 @get_bits1(%struct.GetBitContext* %380), !dbg !7552
  %tobool527 = icmp ne i32 %call526, 0, !dbg !7552
  br i1 %tobool527, label %if.then528, label %if.else533, !dbg !7553

if.then528:                                       ; preds = %land.lhs.true525
  %381 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7554
  %call529 = call i32 @get_bits(%struct.GetBitContext* %381, i32 5), !dbg !7556
  %conv530 = trunc i32 %call529 to i8, !dbg !7556
  %382 = load i32, i32* %ch, align 4, !dbg !7557
  %idxprom531 = sext i32 %382 to i64, !dbg !7558
  %383 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7558
  %spx_atten_code = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %383, i32 0, i32 58, !dbg !7559
  %arrayidx532 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code, i64 0, i64 %idxprom531, !dbg !7558
  store i8 %conv530, i8* %arrayidx532, align 1, !dbg !7560
  br label %if.end537, !dbg !7561

if.else533:                                       ; preds = %land.lhs.true525, %for.body523
  %384 = load i32, i32* %ch, align 4, !dbg !7562
  %idxprom534 = sext i32 %384 to i64, !dbg !7564
  %385 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7564
  %spx_atten_code535 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %385, i32 0, i32 58, !dbg !7565
  %arrayidx536 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code535, i64 0, i64 %idxprom534, !dbg !7564
  store i8 -1, i8* %arrayidx536, align 1, !dbg !7566
  br label %if.end537

if.end537:                                        ; preds = %if.else533, %if.then528
  br label %for.inc538, !dbg !7567

for.inc538:                                       ; preds = %if.end537
  %386 = load i32, i32* %ch, align 4, !dbg !7568
  %inc539 = add nsw i32 %386, 1, !dbg !7568
  store i32 %inc539, i32* %ch, align 4, !dbg !7568
  br label %for.cond519, !dbg !7570, !llvm.loop !7571

for.end540:                                       ; preds = %for.cond519
  %387 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7573
  %num_blocks541 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %387, i32 0, i32 9, !dbg !7575
  %388 = load i32, i32* %num_blocks541, align 8, !dbg !7575
  %cmp542 = icmp sgt i32 %388, 1, !dbg !7576
  br i1 %cmp542, label %land.lhs.true544, label %if.end556, !dbg !7577

land.lhs.true544:                                 ; preds = %for.end540
  %389 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7578
  %call545 = call i32 @get_bits1(%struct.GetBitContext* %389), !dbg !7580
  %tobool546 = icmp ne i32 %call545, 0, !dbg !7580
  br i1 %tobool546, label %if.then547, label %if.end556, !dbg !7581

if.then547:                                       ; preds = %land.lhs.true544
  call void @llvm.dbg.declare(metadata i32* %block_start_bits, metadata !7582, metadata !1854), !dbg !7584
  %390 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7585
  %num_blocks548 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %390, i32 0, i32 9, !dbg !7586
  %391 = load i32, i32* %num_blocks548, align 8, !dbg !7586
  %sub549 = sub nsw i32 %391, 1, !dbg !7587
  %392 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7588
  %frame_size = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %392, i32 0, i32 6, !dbg !7589
  %393 = load i32, i32* %frame_size, align 4, !dbg !7589
  %sub550 = sub nsw i32 %393, 2, !dbg !7590
  %or551 = or i32 %sub550, 1, !dbg !7591
  %394 = call i32 @llvm.ctlz.i32(i32 %or551, i1 true), !dbg !7592
  %sub552 = sub nsw i32 31, %394, !dbg !7593
  %add553 = add nsw i32 4, %sub552, !dbg !7594
  %mul554 = mul nsw i32 %sub549, %add553, !dbg !7595
  store i32 %mul554, i32* %block_start_bits, align 4, !dbg !7584
  %395 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !7596
  %396 = load i32, i32* %block_start_bits, align 4, !dbg !7597
  call void @skip_bits_long(%struct.GetBitContext* %395, i32 %396), !dbg !7598
  %397 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7599
  %avctx555 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %397, i32 0, i32 1, !dbg !7600
  %398 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx555, align 8, !dbg !7600
  %399 = bitcast %struct.AVCodecContext* %398 to i8*, !dbg !7599
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %399, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i32 0, i32 0)), !dbg !7601
  br label %if.end556, !dbg !7602

if.end556:                                        ; preds = %if.then547, %land.lhs.true544, %for.end540
  store i32 1, i32* %ch, align 4, !dbg !7603
  br label %for.cond557, !dbg !7605

for.cond557:                                      ; preds = %for.inc566, %if.end556
  %400 = load i32, i32* %ch, align 4, !dbg !7606
  %401 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7609
  %fbw_channels558 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %401, i32 0, i32 70, !dbg !7610
  %402 = load i32, i32* %fbw_channels558, align 4, !dbg !7610
  %cmp559 = icmp sle i32 %400, %402, !dbg !7611
  br i1 %cmp559, label %for.body561, label %for.end568, !dbg !7612

for.body561:                                      ; preds = %for.cond557
  %403 = load i32, i32* %ch, align 4, !dbg !7613
  %idxprom562 = sext i32 %403 to i64, !dbg !7615
  %404 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7615
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %404, i32 0, i32 65, !dbg !7616
  %arrayidx563 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom562, !dbg !7615
  store i8 1, i8* %arrayidx563, align 1, !dbg !7617
  %405 = load i32, i32* %ch, align 4, !dbg !7618
  %idxprom564 = sext i32 %405 to i64, !dbg !7619
  %406 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7619
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %406, i32 0, i32 54, !dbg !7620
  %arrayidx565 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom564, !dbg !7619
  store i32 1, i32* %arrayidx565, align 4, !dbg !7621
  br label %for.inc566, !dbg !7622

for.inc566:                                       ; preds = %for.body561
  %407 = load i32, i32* %ch, align 4, !dbg !7623
  %inc567 = add nsw i32 %407, 1, !dbg !7623
  store i32 %inc567, i32* %ch, align 4, !dbg !7623
  br label %for.cond557, !dbg !7625, !llvm.loop !7626

for.end568:                                       ; preds = %for.cond557
  %408 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7628
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %408, i32 0, i32 92, !dbg !7629
  store i32 1, i32* %first_cpl_leak, align 4, !dbg !7630
  store i32 0, i32* %retval, align 4, !dbg !7631
  br label %return, !dbg !7631

return:                                           ; preds = %for.end568, %if.then76, %if.then10, %if.end7, %if.then
  %409 = load i32, i32* %retval, align 4, !dbg !7632
  ret i32 %409, !dbg !7632
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7633 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7636, metadata !1854), !dbg !7640
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7642, metadata !1854), !dbg !7643
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7644, metadata !1854), !dbg !7645
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7646, metadata !1854), !dbg !7647
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7648, metadata !1854), !dbg !7649
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7650
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7651
  %1 = load i32, i32* %index, align 8, !dbg !7651
  store i32 %1, i32* %re_index, align 4, !dbg !7649
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7652, metadata !1854), !dbg !7653
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7654, metadata !1854), !dbg !7655
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7656
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7657
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7657
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7655
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7658
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7659
  %5 = load i8*, i8** %buffer, align 8, !dbg !7659
  %6 = load i32, i32* %re_index, align 4, !dbg !7660
  %shr = lshr i32 %6, 3, !dbg !7661
  %idx.ext = zext i32 %shr to i64, !dbg !7662
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7662
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7663
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7663
  %8 = load i32, i32* %l, align 1, !dbg !7663
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7664
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7665
  %shl.i = shl i32 %9, 8, !dbg !7666
  %and.i = and i32 %shl.i, 65280, !dbg !7667
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7668
  %shr.i = lshr i32 %10, 8, !dbg !7669
  %and1.i = and i32 %shr.i, 255, !dbg !7670
  %or.i = or i32 %and.i, %and1.i, !dbg !7671
  %shl2.i = shl i32 %or.i, 16, !dbg !7672
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7673
  %shr3.i = lshr i32 %11, 16, !dbg !7674
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7675
  %and5.i = and i32 %shl4.i, 65280, !dbg !7676
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7677
  %shr6.i = lshr i32 %12, 16, !dbg !7678
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7679
  %and8.i = and i32 %shr7.i, 255, !dbg !7680
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7681
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7682
  %13 = load i32, i32* %re_index, align 4, !dbg !7683
  %and = and i32 %13, 7, !dbg !7684
  %shl = shl i32 %or10.i, %and, !dbg !7685
  store i32 %shl, i32* %re_cache, align 4, !dbg !7686
  %14 = load i32, i32* %re_cache, align 4, !dbg !7687
  %15 = load i32, i32* %n.addr, align 4, !dbg !7688
  %conv = trunc i32 %15 to i8, !dbg !7688
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7689
  store i32 %call4, i32* %tmp, align 4, !dbg !7690
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7691
  %17 = load i32, i32* %re_index, align 4, !dbg !7692
  %18 = load i32, i32* %n.addr, align 4, !dbg !7693
  %add = add i32 %17, %18, !dbg !7694
  %cmp = icmp ugt i32 %16, %add, !dbg !7695
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7696

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7697
  %20 = load i32, i32* %n.addr, align 4, !dbg !7699
  %add6 = add i32 %19, %20, !dbg !7700
  br label %cond.end, !dbg !7701

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7702
  br label %cond.end, !dbg !7704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7705
  store i32 %cond, i32* %re_index, align 4, !dbg !7707
  %22 = load i32, i32* %re_index, align 4, !dbg !7708
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7709
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7710
  store i32 %22, i32* %index7, align 8, !dbg !7711
  %24 = load i32, i32* %tmp, align 4, !dbg !7712
  ret i32 %24, !dbg !7713
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !7714 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7717, metadata !1854), !dbg !7718
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7719, metadata !1854), !dbg !7720
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7721
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7722
  %1 = load i32, i32* %index1, align 8, !dbg !7722
  store i32 %1, i32* %index, align 4, !dbg !7720
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7723, metadata !1854), !dbg !7724
  %2 = load i32, i32* %index, align 4, !dbg !7725
  %shr = lshr i32 %2, 3, !dbg !7726
  %idxprom = zext i32 %shr to i64, !dbg !7727
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7727
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !7728
  %4 = load i8*, i8** %buffer, align 8, !dbg !7728
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7727
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7727
  store i8 %5, i8* %result, align 1, !dbg !7724
  %6 = load i32, i32* %index, align 4, !dbg !7729
  %and = and i32 %6, 7, !dbg !7730
  %7 = load i8, i8* %result, align 1, !dbg !7731
  %conv = zext i8 %7 to i32, !dbg !7731
  %shl = shl i32 %conv, %and, !dbg !7731
  %conv2 = trunc i32 %shl to i8, !dbg !7731
  store i8 %conv2, i8* %result, align 1, !dbg !7731
  %8 = load i8, i8* %result, align 1, !dbg !7732
  %conv3 = zext i8 %8 to i32, !dbg !7732
  %shr4 = ashr i32 %conv3, 7, !dbg !7732
  %conv5 = trunc i32 %shr4 to i8, !dbg !7732
  store i8 %conv5, i8* %result, align 1, !dbg !7732
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7733
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !7735
  %10 = load i32, i32* %index6, align 8, !dbg !7735
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7736
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !7737
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7737
  %cmp = icmp slt i32 %10, %12, !dbg !7738
  br i1 %cmp, label %if.then, label %if.end, !dbg !7739

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !7740
  %inc = add i32 %13, 1, !dbg !7740
  store i32 %inc, i32* %index, align 4, !dbg !7740
  br label %if.end, !dbg !7741

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !7742
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7743
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7744
  store i32 %14, i32* %index8, align 8, !dbg !7745
  %16 = load i8, i8* %result, align 1, !dbg !7746
  %conv9 = zext i8 %16 to i32, !dbg !7746
  ret i32 %conv9, !dbg !7747
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7748 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7751, metadata !1854), !dbg !7752
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7753, metadata !1854), !dbg !7754
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7755, metadata !1854), !dbg !7756
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7757
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7758
  %1 = load i32, i32* %index, align 8, !dbg !7758
  store i32 %1, i32* %re_index, align 4, !dbg !7756
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7759, metadata !1854), !dbg !7760
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7761, metadata !1854), !dbg !7762
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7763
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7764
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7764
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7762
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !7765
  %5 = load i32, i32* %re_index, align 4, !dbg !7766
  %6 = load i32, i32* %n.addr, align 4, !dbg !7767
  %add = add i32 %5, %6, !dbg !7768
  %cmp = icmp ugt i32 %4, %add, !dbg !7769
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7770

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !7771
  %8 = load i32, i32* %n.addr, align 4, !dbg !7773
  %add1 = add i32 %7, %8, !dbg !7774
  br label %cond.end, !dbg !7775

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !7776
  br label %cond.end, !dbg !7778

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !7779
  store i32 %cond, i32* %re_index, align 4, !dbg !7781
  %10 = load i32, i32* %re_index, align 4, !dbg !7782
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7783
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !7784
  store i32 %10, i32* %index2, align 8, !dbg !7785
  ret void, !dbg !7786
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !7787 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7791, metadata !1854), !dbg !7792
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7793, metadata !1854), !dbg !7794
  %0 = load i32, i32* %a.addr, align 4, !dbg !7795
  %1 = load i8, i8* %s.addr, align 1, !dbg !7796
  %conv = sext i8 %1 to i32, !dbg !7796
  %sub = sub nsw i32 0, %conv, !dbg !7797
  %conv1 = trunc i32 %sub to i8, !dbg !7798
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !7795, !srcloc !7799
  store i32 %2, i32* %a.addr, align 4, !dbg !7795
  %3 = load i32, i32* %a.addr, align 4, !dbg !7800
  ret i32 %3, !dbg !7801
}

declare void @avpriv_request_sample(i8*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7802 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6126, metadata !1854), !dbg !7803
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6138, metadata !1854), !dbg !7805
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6140, metadata !1854), !dbg !7806
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7807, metadata !1854), !dbg !7808
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7809, metadata !1854), !dbg !7810
  %0 = load i32, i32* %n.addr, align 4, !dbg !7811
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7812
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !7813
  %2 = load i32, i32* %index, align 8, !dbg !7813
  %sub = sub nsw i32 0, %2, !dbg !7814
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7815
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !7816
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7816
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7817
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !7818
  %6 = load i32, i32* %index1, align 8, !dbg !7818
  %sub2 = sub nsw i32 %4, %6, !dbg !7819
  store i32 %0, i32* %a.addr.i, align 4, !dbg !7820
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !7820
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !7820
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !7821
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !7822
  %cmp.i = icmp slt i32 %7, %8, !dbg !7823
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7824

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !7825
  store i32 %9, i32* %retval.i, align 4, !dbg !7826
  br label %av_clip_c.exit, !dbg !7826

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !7827
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !7828
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !7829
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7830

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !7831
  store i32 %12, i32* %retval.i, align 4, !dbg !7832
  br label %av_clip_c.exit, !dbg !7832

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !7833
  store i32 %13, i32* %retval.i, align 4, !dbg !7834
  br label %av_clip_c.exit, !dbg !7834

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !7835
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7836
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7837
  %16 = load i32, i32* %index3, align 8, !dbg !7838
  %add = add nsw i32 %16, %14, !dbg !7838
  store i32 %add, i32* %index3, align 8, !dbg !7838
  ret void, !dbg !7839
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #4 !dbg !7840 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7843, metadata !1854), !dbg !7844
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7845
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !7846
  ret void, !dbg !7847
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

declare i8* @av_malloc_array(i64, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @spx_strategy(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !7848 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %dst_start_freq = alloca i32, align 4
  %dst_end_freq = alloca i32, align 4
  %src_start_freq = alloca i32, align 4
  %start_subband = alloca i32, align 4
  %end_subband = alloca i32, align 4
  %ch = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !7851, metadata !1854), !dbg !7852
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !7853, metadata !1854), !dbg !7854
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !7855, metadata !1854), !dbg !7856
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7857
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !7858
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !7856
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !7859, metadata !1854), !dbg !7860
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7861
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !7862
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !7862
  store i32 %2, i32* %fbw_channels, align 4, !dbg !7860
  call void @llvm.dbg.declare(metadata i32* %dst_start_freq, metadata !7863, metadata !1854), !dbg !7864
  call void @llvm.dbg.declare(metadata i32* %dst_end_freq, metadata !7865, metadata !1854), !dbg !7866
  call void @llvm.dbg.declare(metadata i32* %src_start_freq, metadata !7867, metadata !1854), !dbg !7868
  call void @llvm.dbg.declare(metadata i32* %start_subband, metadata !7869, metadata !1854), !dbg !7870
  call void @llvm.dbg.declare(metadata i32* %end_subband, metadata !7871, metadata !1854), !dbg !7872
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7873, metadata !1854), !dbg !7874
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7875
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 12, !dbg !7877
  %4 = load i32, i32* %channel_mode, align 4, !dbg !7877
  %cmp = icmp eq i32 %4, 1, !dbg !7878
  br i1 %cmp, label %if.then, label %if.else, !dbg !7879

if.then:                                          ; preds = %entry
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7880
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 57, !dbg !7882
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 1, !dbg !7880
  store i8 1, i8* %arrayidx, align 1, !dbg !7883
  br label %if.end, !dbg !7884

if.else:                                          ; preds = %entry
  store i32 1, i32* %ch, align 4, !dbg !7885
  br label %for.cond, !dbg !7888

for.cond:                                         ; preds = %for.inc, %if.else
  %6 = load i32, i32* %ch, align 4, !dbg !7889
  %7 = load i32, i32* %fbw_channels, align 4, !dbg !7892
  %cmp2 = icmp sle i32 %6, %7, !dbg !7893
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7894

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7895
  %call = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !7896
  %conv = trunc i32 %call to i8, !dbg !7896
  %9 = load i32, i32* %ch, align 4, !dbg !7897
  %idxprom = sext i32 %9 to i64, !dbg !7898
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7898
  %channel_uses_spx3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 57, !dbg !7899
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx3, i64 0, i64 %idxprom, !dbg !7898
  store i8 %conv, i8* %arrayidx4, align 1, !dbg !7900
  br label %for.inc, !dbg !7898

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %ch, align 4, !dbg !7901
  %inc = add nsw i32 %11, 1, !dbg !7901
  store i32 %inc, i32* %ch, align 4, !dbg !7901
  br label %for.cond, !dbg !7903, !llvm.loop !7904

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7906
  %call5 = call i32 @get_bits(%struct.GetBitContext* %12, i32 2), !dbg !7907
  store i32 %call5, i32* %dst_start_freq, align 4, !dbg !7908
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7909
  %call6 = call i32 @get_bits(%struct.GetBitContext* %13, i32 3), !dbg !7910
  %add = add i32 %call6, 2, !dbg !7911
  store i32 %add, i32* %start_subband, align 4, !dbg !7912
  %14 = load i32, i32* %start_subband, align 4, !dbg !7913
  %cmp7 = icmp sgt i32 %14, 7, !dbg !7915
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !7916

if.then9:                                         ; preds = %if.end
  %15 = load i32, i32* %start_subband, align 4, !dbg !7917
  %sub = sub nsw i32 %15, 7, !dbg !7918
  %16 = load i32, i32* %start_subband, align 4, !dbg !7919
  %add10 = add nsw i32 %16, %sub, !dbg !7919
  store i32 %add10, i32* %start_subband, align 4, !dbg !7919
  br label %if.end11, !dbg !7920

if.end11:                                         ; preds = %if.then9, %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7921
  %call12 = call i32 @get_bits(%struct.GetBitContext* %17, i32 3), !dbg !7922
  %add13 = add i32 %call12, 5, !dbg !7923
  store i32 %add13, i32* %end_subband, align 4, !dbg !7924
  %18 = load i32, i32* %end_subband, align 4, !dbg !7925
  %cmp14 = icmp sgt i32 %18, 7, !dbg !7927
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !7928

if.then16:                                        ; preds = %if.end11
  %19 = load i32, i32* %end_subband, align 4, !dbg !7929
  %sub17 = sub nsw i32 %19, 7, !dbg !7930
  %20 = load i32, i32* %end_subband, align 4, !dbg !7931
  %add18 = add nsw i32 %20, %sub17, !dbg !7931
  store i32 %add18, i32* %end_subband, align 4, !dbg !7931
  br label %if.end19, !dbg !7932

if.end19:                                         ; preds = %if.then16, %if.end11
  %21 = load i32, i32* %dst_start_freq, align 4, !dbg !7933
  %mul = mul nsw i32 %21, 12, !dbg !7934
  %add20 = add nsw i32 %mul, 25, !dbg !7935
  store i32 %add20, i32* %dst_start_freq, align 4, !dbg !7936
  %22 = load i32, i32* %start_subband, align 4, !dbg !7937
  %mul21 = mul nsw i32 %22, 12, !dbg !7938
  %add22 = add nsw i32 %mul21, 25, !dbg !7939
  store i32 %add22, i32* %src_start_freq, align 4, !dbg !7940
  %23 = load i32, i32* %end_subband, align 4, !dbg !7941
  %mul23 = mul nsw i32 %23, 12, !dbg !7942
  %add24 = add nsw i32 %mul23, 25, !dbg !7943
  store i32 %add24, i32* %dst_end_freq, align 4, !dbg !7944
  %24 = load i32, i32* %start_subband, align 4, !dbg !7945
  %25 = load i32, i32* %end_subband, align 4, !dbg !7947
  %cmp25 = icmp sge i32 %24, %25, !dbg !7948
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7949

if.then27:                                        ; preds = %if.end19
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7950
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 1, !dbg !7952
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7952
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !7950
  %29 = load i32, i32* %start_subband, align 4, !dbg !7953
  %30 = load i32, i32* %end_subband, align 4, !dbg !7954
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.55, i32 0, i32 0), i32 %29, i32 %30), !dbg !7955
  store i32 -1094995529, i32* %retval, align 4, !dbg !7956
  br label %return, !dbg !7956

if.end28:                                         ; preds = %if.end19
  %31 = load i32, i32* %dst_start_freq, align 4, !dbg !7957
  %32 = load i32, i32* %src_start_freq, align 4, !dbg !7959
  %cmp29 = icmp sge i32 %31, %32, !dbg !7960
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !7961

if.then31:                                        ; preds = %if.end28
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7962
  %avctx32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 1, !dbg !7964
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx32, align 8, !dbg !7964
  %35 = bitcast %struct.AVCodecContext* %34 to i8*, !dbg !7962
  %36 = load i32, i32* %dst_start_freq, align 4, !dbg !7965
  %37 = load i32, i32* %src_start_freq, align 4, !dbg !7966
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.56, i32 0, i32 0), i32 %36, i32 %37), !dbg !7967
  store i32 -1094995529, i32* %retval, align 4, !dbg !7968
  br label %return, !dbg !7968

if.end33:                                         ; preds = %if.end28
  %38 = load i32, i32* %dst_start_freq, align 4, !dbg !7969
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7970
  %spx_dst_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 61, !dbg !7971
  store i32 %38, i32* %spx_dst_start_freq, align 4, !dbg !7972
  %40 = load i32, i32* %src_start_freq, align 4, !dbg !7973
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7974
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 59, !dbg !7975
  store i32 %40, i32* %spx_src_start_freq, align 4, !dbg !7976
  %42 = load i32, i32* %dst_end_freq, align 4, !dbg !7977
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7979
  %spx_dst_end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 60, !dbg !7980
  store i32 %42, i32* %spx_dst_end_freq, align 8, !dbg !7981
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !7982
  %45 = load i32, i32* %blk.addr, align 4, !dbg !7983
  %46 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7984
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %46, i32 0, i32 25, !dbg !7985
  %47 = load i32, i32* %eac3, align 4, !dbg !7985
  %48 = load i32, i32* %start_subband, align 4, !dbg !7986
  %49 = load i32, i32* %end_subband, align 4, !dbg !7987
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7988
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 62, !dbg !7989
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7990
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 64, !dbg !7991
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i32 0, i32 0, !dbg !7990
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !7992
  %spx_band_struct = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 63, !dbg !7993
  %arraydecay34 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_struct, i32 0, i32 0, !dbg !7992
  call void @decode_band_structure(%struct.GetBitContext* %44, i32 %45, i32 %47, i32 0, i32 %48, i32 %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @ff_eac3_default_spx_band_struct, i32 0, i32 0), i32* %num_spx_bands, i8* %arraydecay, i8* %arraydecay34, i32 17), !dbg !7994
  store i32 0, i32* %retval, align 4, !dbg !7995
  br label %return, !dbg !7995

return:                                           ; preds = %if.end33, %if.then31, %if.then27
  %53 = load i32, i32* %retval, align 4, !dbg !7996
  ret i32 %53, !dbg !7996
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @spx_coordinates(%struct.AC3DecodeContext* %s) #4 !dbg !7997 {
entry:
  %a.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i, metadata !8000, metadata !1854), !dbg !8005
  %amin.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i, metadata !8017, metadata !1854), !dbg !8018
  %amax.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i, metadata !8019, metadata !1854), !dbg !8020
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %ch = alloca i32, align 4
  %bnd = alloca i32, align 4
  %spx_blend = alloca float, align 4
  %bin = alloca i32, align 4
  %master_spx_coord = alloca i32, align 4
  %bandsize = alloca i32, align 4
  %spx_coord_exp = alloca i32, align 4
  %spx_coord_mant = alloca i32, align 4
  %nratio = alloca float, align 4
  %sblend = alloca float, align 4
  %nblend = alloca float, align 4
  %spx_coord = alloca float, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8021, metadata !1854), !dbg !8022
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !8023, metadata !1854), !dbg !8024
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8025
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !8026
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !8027, metadata !1854), !dbg !8028
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8029
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !8030
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !8030
  store i32 %2, i32* %fbw_channels, align 4, !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8031, metadata !1854), !dbg !8032
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8033, metadata !1854), !dbg !8034
  store i32 1, i32* %ch, align 4, !dbg !8035
  br label %for.cond, !dbg !8036

for.cond:                                         ; preds = %for.inc56, %entry
  %3 = load i32, i32* %ch, align 4, !dbg !8037
  %4 = load i32, i32* %fbw_channels, align 4, !dbg !8039
  %cmp = icmp sle i32 %3, %4, !dbg !8040
  br i1 %cmp, label %for.body, label %for.end58, !dbg !8041

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %ch, align 4, !dbg !8042
  %idxprom = sext i32 %5 to i64, !dbg !8043
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8043
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 57, !dbg !8044
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom, !dbg !8043
  %7 = load i8, i8* %arrayidx, align 1, !dbg !8043
  %tobool = icmp ne i8 %7, 0, !dbg !8043
  br i1 %tobool, label %if.then, label %if.else51, !dbg !8045

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %ch, align 4, !dbg !8046
  %idxprom2 = sext i32 %8 to i64, !dbg !8047
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8047
  %first_spx_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 65, !dbg !8048
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords, i64 0, i64 %idxprom2, !dbg !8047
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !8047
  %conv = zext i8 %10 to i32, !dbg !8047
  %tobool4 = icmp ne i32 %conv, 0, !dbg !8047
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !8049

lor.lhs.false:                                    ; preds = %if.then
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8050
  %call = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !8052
  %tobool5 = icmp ne i32 %call, 0, !dbg !8052
  br i1 %tobool5, label %if.then6, label %if.end50, !dbg !8053

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata float* %spx_blend, metadata !8054, metadata !1854), !dbg !8055
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !8056, metadata !1854), !dbg !8057
  call void @llvm.dbg.declare(metadata i32* %master_spx_coord, metadata !8058, metadata !1854), !dbg !8059
  %12 = load i32, i32* %ch, align 4, !dbg !8060
  %idxprom7 = sext i32 %12 to i64, !dbg !8061
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8061
  %first_spx_coords8 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 65, !dbg !8062
  %arrayidx9 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords8, i64 0, i64 %idxprom7, !dbg !8061
  store i8 0, i8* %arrayidx9, align 1, !dbg !8063
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8064
  %call10 = call i32 @get_bits(%struct.GetBitContext* %14, i32 5), !dbg !8065
  %conv11 = uitofp i32 %call10 to float, !dbg !8066
  %mul = fmul float %conv11, 3.125000e-02, !dbg !8067
  store float %mul, float* %spx_blend, align 4, !dbg !8068
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8069
  %call12 = call i32 @get_bits(%struct.GetBitContext* %15, i32 2), !dbg !8070
  %mul13 = mul i32 %call12, 3, !dbg !8071
  store i32 %mul13, i32* %master_spx_coord, align 4, !dbg !8072
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8073
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 59, !dbg !8074
  %17 = load i32, i32* %spx_src_start_freq, align 4, !dbg !8074
  store i32 %17, i32* %bin, align 4, !dbg !8075
  store i32 0, i32* %bnd, align 4, !dbg !8076
  br label %for.cond14, !dbg !8077

for.cond14:                                       ; preds = %for.inc, %if.then6
  %18 = load i32, i32* %bnd, align 4, !dbg !8078
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8080
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 62, !dbg !8081
  %20 = load i32, i32* %num_spx_bands, align 32, !dbg !8081
  %cmp15 = icmp slt i32 %18, %20, !dbg !8082
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !8083

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %bandsize, metadata !8084, metadata !1854), !dbg !8085
  %21 = load i32, i32* %bnd, align 4, !dbg !8086
  %idxprom18 = sext i32 %21 to i64, !dbg !8087
  %22 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8087
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %22, i32 0, i32 64, !dbg !8088
  %arrayidx19 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i64 0, i64 %idxprom18, !dbg !8087
  %23 = load i8, i8* %arrayidx19, align 1, !dbg !8087
  %conv20 = zext i8 %23 to i32, !dbg !8087
  store i32 %conv20, i32* %bandsize, align 4, !dbg !8085
  call void @llvm.dbg.declare(metadata i32* %spx_coord_exp, metadata !8089, metadata !1854), !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %spx_coord_mant, metadata !8091, metadata !1854), !dbg !8092
  call void @llvm.dbg.declare(metadata float* %nratio, metadata !8093, metadata !1854), !dbg !8094
  call void @llvm.dbg.declare(metadata float* %sblend, metadata !8095, metadata !1854), !dbg !8096
  call void @llvm.dbg.declare(metadata float* %nblend, metadata !8097, metadata !1854), !dbg !8098
  call void @llvm.dbg.declare(metadata float* %spx_coord, metadata !8099, metadata !1854), !dbg !8100
  %24 = load i32, i32* %bin, align 4, !dbg !8101
  %25 = load i32, i32* %bandsize, align 4, !dbg !8102
  %shr = ashr i32 %25, 1, !dbg !8103
  %add = add nsw i32 %24, %shr, !dbg !8104
  %conv21 = sitofp i32 %add to float, !dbg !8105
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8106
  %spx_dst_end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 60, !dbg !8107
  %27 = load i32, i32* %spx_dst_end_freq, align 8, !dbg !8107
  %conv22 = sitofp i32 %27 to float, !dbg !8106
  %div = fdiv float %conv21, %conv22, !dbg !8108
  %28 = load float, float* %spx_blend, align 4, !dbg !8109
  %sub = fsub float %div, %28, !dbg !8110
  store float %sub, float* %nratio, align 4, !dbg !8111
  %29 = load float, float* %nratio, align 4, !dbg !8112
  store float %29, float* %a.addr.i, align 4, !dbg !8113
  store float 0.000000e+00, float* %amin.addr.i, align 4, !dbg !8113
  store float 1.000000e+00, float* %amax.addr.i, align 4, !dbg !8113
  %30 = load float, float* %a.addr.i, align 4, !dbg !8114
  %31 = load float, float* %amin.addr.i, align 4, !dbg !8115
  %32 = load float, float* %amax.addr.i, align 4, !dbg !8116
  %33 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %31, float %32, float %30) #9, !dbg !8114, !srcloc !8117
  store float %33, float* %a.addr.i, align 4, !dbg !8114
  %34 = load float, float* %a.addr.i, align 4, !dbg !8118
  store float %34, float* %nratio, align 4, !dbg !8119
  %35 = load float, float* %nratio, align 4, !dbg !8120
  %mul24 = fmul float 3.000000e+00, %35, !dbg !8121
  %call25 = call float @sqrtf(float %mul24) #11, !dbg !8122
  store float %call25, float* %nblend, align 4, !dbg !8123
  %36 = load float, float* %nratio, align 4, !dbg !8124
  %sub26 = fsub float 1.000000e+00, %36, !dbg !8125
  %call27 = call float @sqrtf(float %sub26) #11, !dbg !8126
  store float %call27, float* %sblend, align 4, !dbg !8127
  %37 = load i32, i32* %bandsize, align 4, !dbg !8128
  %38 = load i32, i32* %bin, align 4, !dbg !8129
  %add28 = add nsw i32 %38, %37, !dbg !8129
  store i32 %add28, i32* %bin, align 4, !dbg !8129
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8130
  %call29 = call i32 @get_bits(%struct.GetBitContext* %39, i32 4), !dbg !8131
  store i32 %call29, i32* %spx_coord_exp, align 4, !dbg !8132
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8133
  %call30 = call i32 @get_bits(%struct.GetBitContext* %40, i32 2), !dbg !8134
  store i32 %call30, i32* %spx_coord_mant, align 4, !dbg !8135
  %41 = load i32, i32* %spx_coord_exp, align 4, !dbg !8136
  %cmp31 = icmp eq i32 %41, 15, !dbg !8138
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !8139

if.then33:                                        ; preds = %for.body17
  %42 = load i32, i32* %spx_coord_mant, align 4, !dbg !8140
  %shl = shl i32 %42, 1, !dbg !8140
  store i32 %shl, i32* %spx_coord_mant, align 4, !dbg !8140
  br label %if.end, !dbg !8142

if.else:                                          ; preds = %for.body17
  %43 = load i32, i32* %spx_coord_mant, align 4, !dbg !8143
  %add34 = add nsw i32 %43, 4, !dbg !8143
  store i32 %add34, i32* %spx_coord_mant, align 4, !dbg !8143
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then33
  %44 = load i32, i32* %spx_coord_exp, align 4, !dbg !8144
  %sub35 = sub nsw i32 25, %44, !dbg !8145
  %45 = load i32, i32* %master_spx_coord, align 4, !dbg !8146
  %sub36 = sub nsw i32 %sub35, %45, !dbg !8147
  %46 = load i32, i32* %spx_coord_mant, align 4, !dbg !8148
  %shl37 = shl i32 %46, %sub36, !dbg !8148
  store i32 %shl37, i32* %spx_coord_mant, align 4, !dbg !8148
  %47 = load i32, i32* %spx_coord_mant, align 4, !dbg !8149
  %conv38 = sitofp i32 %47 to float, !dbg !8149
  %mul39 = fmul float %conv38, 0x3E80000000000000, !dbg !8150
  store float %mul39, float* %spx_coord, align 4, !dbg !8151
  %48 = load float, float* %nblend, align 4, !dbg !8152
  %49 = load float, float* %spx_coord, align 4, !dbg !8153
  %mul40 = fmul float %48, %49, !dbg !8154
  %50 = load i32, i32* %bnd, align 4, !dbg !8155
  %idxprom41 = sext i32 %50 to i64, !dbg !8156
  %51 = load i32, i32* %ch, align 4, !dbg !8157
  %idxprom42 = sext i32 %51 to i64, !dbg !8156
  %52 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8156
  %spx_noise_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %52, i32 0, i32 66, !dbg !8158
  %arrayidx43 = getelementptr inbounds [7 x [17 x float]], [7 x [17 x float]]* %spx_noise_blend, i64 0, i64 %idxprom42, !dbg !8156
  %arrayidx44 = getelementptr inbounds [17 x float], [17 x float]* %arrayidx43, i64 0, i64 %idxprom41, !dbg !8156
  store float %mul40, float* %arrayidx44, align 4, !dbg !8159
  %53 = load float, float* %sblend, align 4, !dbg !8160
  %54 = load float, float* %spx_coord, align 4, !dbg !8161
  %mul45 = fmul float %53, %54, !dbg !8162
  %55 = load i32, i32* %bnd, align 4, !dbg !8163
  %idxprom46 = sext i32 %55 to i64, !dbg !8164
  %56 = load i32, i32* %ch, align 4, !dbg !8165
  %idxprom47 = sext i32 %56 to i64, !dbg !8164
  %57 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8164
  %spx_signal_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %57, i32 0, i32 67, !dbg !8166
  %arrayidx48 = getelementptr inbounds [7 x [17 x float]], [7 x [17 x float]]* %spx_signal_blend, i64 0, i64 %idxprom47, !dbg !8164
  %arrayidx49 = getelementptr inbounds [17 x float], [17 x float]* %arrayidx48, i64 0, i64 %idxprom46, !dbg !8164
  store float %mul45, float* %arrayidx49, align 4, !dbg !8167
  br label %for.inc, !dbg !8168

for.inc:                                          ; preds = %if.end
  %58 = load i32, i32* %bnd, align 4, !dbg !8169
  %inc = add nsw i32 %58, 1, !dbg !8169
  store i32 %inc, i32* %bnd, align 4, !dbg !8169
  br label %for.cond14, !dbg !8171, !llvm.loop !8172

for.end:                                          ; preds = %for.cond14
  br label %if.end50, !dbg !8174

if.end50:                                         ; preds = %for.end, %lor.lhs.false
  br label %if.end55, !dbg !8175

if.else51:                                        ; preds = %for.body
  %59 = load i32, i32* %ch, align 4, !dbg !8176
  %idxprom52 = sext i32 %59 to i64, !dbg !8178
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8178
  %first_spx_coords53 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 65, !dbg !8179
  %arrayidx54 = getelementptr inbounds [7 x i8], [7 x i8]* %first_spx_coords53, i64 0, i64 %idxprom52, !dbg !8178
  store i8 1, i8* %arrayidx54, align 1, !dbg !8180
  br label %if.end55

if.end55:                                         ; preds = %if.else51, %if.end50
  br label %for.inc56, !dbg !8181

for.inc56:                                        ; preds = %if.end55
  %61 = load i32, i32* %ch, align 4, !dbg !8182
  %inc57 = add nsw i32 %61, 1, !dbg !8182
  store i32 %inc57, i32* %ch, align 4, !dbg !8182
  br label %for.cond, !dbg !8184, !llvm.loop !8185

for.end58:                                        ; preds = %for.cond
  ret void, !dbg !8187
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coupling_strategy(%struct.AC3DecodeContext* %s, i32 %blk, i8* %bit_alloc_stages) #4 !dbg !8188 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bit_alloc_stages.addr = alloca i8*, align 8
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %channel_mode = alloca i32, align 4
  %ch = alloca i32, align 4
  %cpl_start_subband = alloca i32, align 4
  %cpl_end_subband = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8191, metadata !1854), !dbg !8192
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8193, metadata !1854), !dbg !8194
  store i8* %bit_alloc_stages, i8** %bit_alloc_stages.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bit_alloc_stages.addr, metadata !8195, metadata !1854), !dbg !8196
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !8197, metadata !1854), !dbg !8198
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8199
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !8200
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !8198
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !8201, metadata !1854), !dbg !8202
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8203
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !8204
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !8204
  store i32 %2, i32* %fbw_channels, align 4, !dbg !8202
  call void @llvm.dbg.declare(metadata i32* %channel_mode, metadata !8205, metadata !1854), !dbg !8206
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8207
  %channel_mode2 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 12, !dbg !8208
  %4 = load i32, i32* %channel_mode2, align 4, !dbg !8208
  store i32 %4, i32* %channel_mode, align 4, !dbg !8206
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8209, metadata !1854), !dbg !8210
  %5 = load i8*, i8** %bit_alloc_stages.addr, align 8, !dbg !8211
  call void @llvm.memset.p0i8.i64(i8* %5, i8 3, i64 7, i32 1, i1 false), !dbg !8212
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8213
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 25, !dbg !8215
  %7 = load i32, i32* %eac3, align 4, !dbg !8215
  %tobool = icmp ne i32 %7, 0, !dbg !8213
  br i1 %tobool, label %if.end, label %if.then, !dbg !8216

if.then:                                          ; preds = %entry
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8217
  %call = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !8218
  %9 = load i32, i32* %blk.addr, align 4, !dbg !8219
  %idxprom = sext i32 %9 to i64, !dbg !8220
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8220
  %cpl_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 45, !dbg !8221
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use, i64 0, i64 %idxprom, !dbg !8220
  store i32 %call, i32* %arrayidx, align 4, !dbg !8222
  br label %if.end, !dbg !8220

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %blk.addr, align 4, !dbg !8223
  %idxprom3 = sext i32 %11 to i64, !dbg !8225
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8225
  %cpl_in_use4 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 45, !dbg !8226
  %arrayidx5 = getelementptr inbounds [6 x i32], [6 x i32]* %cpl_in_use4, i64 0, i64 %idxprom3, !dbg !8225
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !8225
  %tobool6 = icmp ne i32 %13, 0, !dbg !8225
  br i1 %tobool6, label %if.then7, label %if.else50, !dbg !8227

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cpl_start_subband, metadata !8228, metadata !1854), !dbg !8230
  call void @llvm.dbg.declare(metadata i32* %cpl_end_subband, metadata !8231, metadata !1854), !dbg !8232
  %14 = load i32, i32* %channel_mode, align 4, !dbg !8233
  %cmp = icmp slt i32 %14, 2, !dbg !8235
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !8236

if.then8:                                         ; preds = %if.then7
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8237
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 1, !dbg !8239
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8239
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !8237
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58, i32 0, i32 0)), !dbg !8240
  store i32 -1094995529, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

if.end9:                                          ; preds = %if.then7
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8242
  %eac310 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 25, !dbg !8244
  %19 = load i32, i32* %eac310, align 4, !dbg !8244
  %tobool11 = icmp ne i32 %19, 0, !dbg !8242
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !8245

land.lhs.true:                                    ; preds = %if.end9
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8246
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %20), !dbg !8248
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8248
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8249

if.then14:                                        ; preds = %land.lhs.true
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8250
  %avctx15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 1, !dbg !8252
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx15, align 8, !dbg !8252
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !8250
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59, i32 0, i32 0)), !dbg !8253
  store i32 -1163346256, i32* %retval, align 4, !dbg !8254
  br label %return, !dbg !8254

if.end16:                                         ; preds = %land.lhs.true, %if.end9
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8255
  %eac317 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 25, !dbg !8257
  %25 = load i32, i32* %eac317, align 4, !dbg !8257
  %tobool18 = icmp ne i32 %25, 0, !dbg !8255
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !8258

land.lhs.true19:                                  ; preds = %if.end16
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8259
  %channel_mode20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 12, !dbg !8261
  %27 = load i32, i32* %channel_mode20, align 4, !dbg !8261
  %cmp21 = icmp eq i32 %27, 2, !dbg !8262
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !8263

if.then22:                                        ; preds = %land.lhs.true19
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8264
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 47, !dbg !8266
  %arrayidx23 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 1, !dbg !8264
  store i32 1, i32* %arrayidx23, align 4, !dbg !8267
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8268
  %channel_in_cpl24 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 47, !dbg !8269
  %arrayidx25 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl24, i64 0, i64 2, !dbg !8268
  store i32 1, i32* %arrayidx25, align 8, !dbg !8270
  br label %if.end31, !dbg !8271

if.else:                                          ; preds = %land.lhs.true19, %if.end16
  store i32 1, i32* %ch, align 4, !dbg !8272
  br label %for.cond, !dbg !8275

for.cond:                                         ; preds = %for.inc, %if.else
  %30 = load i32, i32* %ch, align 4, !dbg !8276
  %31 = load i32, i32* %fbw_channels, align 4, !dbg !8279
  %cmp26 = icmp sle i32 %30, %31, !dbg !8280
  br i1 %cmp26, label %for.body, label %for.end, !dbg !8281

for.body:                                         ; preds = %for.cond
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8282
  %call27 = call i32 @get_bits1(%struct.GetBitContext* %32), !dbg !8283
  %33 = load i32, i32* %ch, align 4, !dbg !8284
  %idxprom28 = sext i32 %33 to i64, !dbg !8285
  %34 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8285
  %channel_in_cpl29 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %34, i32 0, i32 47, !dbg !8286
  %arrayidx30 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl29, i64 0, i64 %idxprom28, !dbg !8285
  store i32 %call27, i32* %arrayidx30, align 4, !dbg !8287
  br label %for.inc, !dbg !8285

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %ch, align 4, !dbg !8288
  %inc = add nsw i32 %35, 1, !dbg !8288
  store i32 %inc, i32* %ch, align 4, !dbg !8288
  br label %for.cond, !dbg !8290, !llvm.loop !8291

for.end:                                          ; preds = %for.cond
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then22
  %36 = load i32, i32* %channel_mode, align 4, !dbg !8293
  %cmp32 = icmp eq i32 %36, 2, !dbg !8295
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !8296

if.then33:                                        ; preds = %if.end31
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8297
  %call34 = call i32 @get_bits1(%struct.GetBitContext* %37), !dbg !8298
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8299
  %phase_flags_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 48, !dbg !8300
  store i32 %call34, i32* %phase_flags_in_use, align 4, !dbg !8301
  br label %if.end35, !dbg !8299

if.end35:                                         ; preds = %if.then33, %if.end31
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8302
  %call36 = call i32 @get_bits(%struct.GetBitContext* %39, i32 4), !dbg !8303
  store i32 %call36, i32* %cpl_start_subband, align 4, !dbg !8304
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8305
  %spx_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 56, !dbg !8306
  %41 = load i32, i32* %spx_in_use, align 32, !dbg !8306
  %tobool37 = icmp ne i32 %41, 0, !dbg !8305
  br i1 %tobool37, label %cond.true, label %cond.false, !dbg !8305

cond.true:                                        ; preds = %if.end35
  %42 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8307
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %42, i32 0, i32 59, !dbg !8309
  %43 = load i32, i32* %spx_src_start_freq, align 4, !dbg !8309
  %sub = sub nsw i32 %43, 37, !dbg !8310
  %div = sdiv i32 %sub, 12, !dbg !8311
  br label %cond.end, !dbg !8312

cond.false:                                       ; preds = %if.end35
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8313
  %call38 = call i32 @get_bits(%struct.GetBitContext* %44, i32 4), !dbg !8314
  %add = add i32 %call38, 3, !dbg !8315
  br label %cond.end, !dbg !8316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %add, %cond.false ], !dbg !8318
  store i32 %cond, i32* %cpl_end_subband, align 4, !dbg !8320
  %45 = load i32, i32* %cpl_start_subband, align 4, !dbg !8321
  %46 = load i32, i32* %cpl_end_subband, align 4, !dbg !8323
  %cmp39 = icmp sge i32 %45, %46, !dbg !8324
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !8325

if.then40:                                        ; preds = %cond.end
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8326
  %avctx41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 1, !dbg !8328
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx41, align 8, !dbg !8328
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !8326
  %50 = load i32, i32* %cpl_start_subband, align 4, !dbg !8329
  %51 = load i32, i32* %cpl_end_subband, align 4, !dbg !8330
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.60, i32 0, i32 0), i32 %50, i32 %51), !dbg !8331
  store i32 -1094995529, i32* %retval, align 4, !dbg !8332
  br label %return, !dbg !8332

if.end42:                                         ; preds = %cond.end
  %52 = load i32, i32* %cpl_start_subband, align 4, !dbg !8333
  %mul = mul nsw i32 %52, 12, !dbg !8334
  %add43 = add nsw i32 %mul, 37, !dbg !8335
  %53 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8336
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %53, i32 0, i32 83, !dbg !8337
  %arrayidx44 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !8336
  store i32 %add43, i32* %arrayidx44, align 4, !dbg !8338
  %54 = load i32, i32* %cpl_end_subband, align 4, !dbg !8339
  %mul45 = mul nsw i32 %54, 12, !dbg !8340
  %add46 = add nsw i32 %mul45, 37, !dbg !8341
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8342
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 84, !dbg !8343
  %arrayidx47 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !8342
  store i32 %add46, i32* %arrayidx47, align 8, !dbg !8344
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8345
  %57 = load i32, i32* %blk.addr, align 4, !dbg !8346
  %58 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8347
  %eac348 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %58, i32 0, i32 25, !dbg !8348
  %59 = load i32, i32* %eac348, align 4, !dbg !8348
  %60 = load i32, i32* %cpl_start_subband, align 4, !dbg !8349
  %61 = load i32, i32* %cpl_end_subband, align 4, !dbg !8350
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8351
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 50, !dbg !8352
  %63 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8353
  %cpl_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %63, i32 0, i32 52, !dbg !8354
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_sizes, i32 0, i32 0, !dbg !8353
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8355
  %cpl_band_struct = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 51, !dbg !8356
  %arraydecay49 = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_struct, i32 0, i32 0, !dbg !8355
  call void @decode_band_structure(%struct.GetBitContext* %56, i32 %57, i32 %59, i32 0, i32 %60, i32 %61, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @ff_eac3_default_cpl_band_struct, i32 0, i32 0), i32* %num_cpl_bands, i8* %arraydecay, i8* %arraydecay49, i32 18), !dbg !8357
  br label %if.end64, !dbg !8358

if.else50:                                        ; preds = %if.end
  store i32 1, i32* %ch, align 4, !dbg !8359
  br label %for.cond51, !dbg !8362

for.cond51:                                       ; preds = %for.inc59, %if.else50
  %65 = load i32, i32* %ch, align 4, !dbg !8363
  %66 = load i32, i32* %fbw_channels, align 4, !dbg !8366
  %cmp52 = icmp sle i32 %65, %66, !dbg !8367
  br i1 %cmp52, label %for.body53, label %for.end61, !dbg !8368

for.body53:                                       ; preds = %for.cond51
  %67 = load i32, i32* %ch, align 4, !dbg !8369
  %idxprom54 = sext i32 %67 to i64, !dbg !8371
  %68 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8371
  %channel_in_cpl55 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %68, i32 0, i32 47, !dbg !8372
  %arrayidx56 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl55, i64 0, i64 %idxprom54, !dbg !8371
  store i32 0, i32* %arrayidx56, align 4, !dbg !8373
  %69 = load i32, i32* %ch, align 4, !dbg !8374
  %idxprom57 = sext i32 %69 to i64, !dbg !8375
  %70 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8375
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %70, i32 0, i32 54, !dbg !8376
  %arrayidx58 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom57, !dbg !8375
  store i32 1, i32* %arrayidx58, align 4, !dbg !8377
  br label %for.inc59, !dbg !8378

for.inc59:                                        ; preds = %for.body53
  %71 = load i32, i32* %ch, align 4, !dbg !8379
  %inc60 = add nsw i32 %71, 1, !dbg !8379
  store i32 %inc60, i32* %ch, align 4, !dbg !8379
  br label %for.cond51, !dbg !8381, !llvm.loop !8382

for.end61:                                        ; preds = %for.cond51
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8384
  %eac362 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 25, !dbg !8385
  %73 = load i32, i32* %eac362, align 4, !dbg !8385
  %74 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8386
  %first_cpl_leak = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %74, i32 0, i32 92, !dbg !8387
  store i32 %73, i32* %first_cpl_leak, align 4, !dbg !8388
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8389
  %phase_flags_in_use63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 48, !dbg !8390
  store i32 0, i32* %phase_flags_in_use63, align 4, !dbg !8391
  br label %if.end64

if.end64:                                         ; preds = %for.end61, %if.end42
  store i32 0, i32* %retval, align 4, !dbg !8392
  br label %return, !dbg !8392

return:                                           ; preds = %if.end64, %if.then40, %if.then14, %if.then8
  %76 = load i32, i32* %retval, align 4, !dbg !8393
  ret i32 %76, !dbg !8393
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coupling_coordinates(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !8394 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %bc = alloca %struct.GetBitContext*, align 8
  %fbw_channels = alloca i32, align 4
  %ch = alloca i32, align 4
  %bnd = alloca i32, align 4
  %cpl_coords_exist = alloca i32, align 4
  %master_cpl_coord = alloca i32, align 4
  %cpl_coord_exp = alloca i32, align 4
  %cpl_coord_mant = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8395, metadata !1854), !dbg !8396
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8397, metadata !1854), !dbg !8398
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %bc, metadata !8399, metadata !1854), !dbg !8400
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8401
  %gbc = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !8402
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %bc, align 8, !dbg !8400
  call void @llvm.dbg.declare(metadata i32* %fbw_channels, metadata !8403, metadata !1854), !dbg !8404
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8405
  %fbw_channels1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !8406
  %2 = load i32, i32* %fbw_channels1, align 4, !dbg !8406
  store i32 %2, i32* %fbw_channels, align 4, !dbg !8404
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8407, metadata !1854), !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8409, metadata !1854), !dbg !8410
  call void @llvm.dbg.declare(metadata i32* %cpl_coords_exist, metadata !8411, metadata !1854), !dbg !8412
  store i32 0, i32* %cpl_coords_exist, align 4, !dbg !8412
  store i32 1, i32* %ch, align 4, !dbg !8413
  br label %for.cond, !dbg !8415

for.cond:                                         ; preds = %for.inc45, %entry
  %3 = load i32, i32* %ch, align 4, !dbg !8416
  %4 = load i32, i32* %fbw_channels, align 4, !dbg !8419
  %cmp = icmp sle i32 %3, %4, !dbg !8420
  br i1 %cmp, label %for.body, label %for.end47, !dbg !8421

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %ch, align 4, !dbg !8422
  %idxprom = sext i32 %5 to i64, !dbg !8425
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8425
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 47, !dbg !8426
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom, !dbg !8425
  %7 = load i32, i32* %arrayidx, align 4, !dbg !8425
  %tobool = icmp ne i32 %7, 0, !dbg !8425
  br i1 %tobool, label %if.then, label %if.else40, !dbg !8427

if.then:                                          ; preds = %for.body
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8428
  %eac3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 25, !dbg !8431
  %9 = load i32, i32* %eac3, align 4, !dbg !8431
  %tobool2 = icmp ne i32 %9, 0, !dbg !8428
  br i1 %tobool2, label %land.lhs.true, label %lor.lhs.false, !dbg !8432

land.lhs.true:                                    ; preds = %if.then
  %10 = load i32, i32* %ch, align 4, !dbg !8433
  %idxprom3 = sext i32 %10 to i64, !dbg !8435
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8435
  %first_cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 54, !dbg !8436
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords, i64 0, i64 %idxprom3, !dbg !8435
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !8435
  %tobool5 = icmp ne i32 %12, 0, !dbg !8435
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !8437

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8438
  %call = call i32 @get_bits1(%struct.GetBitContext* %13), !dbg !8440
  %tobool6 = icmp ne i32 %call, 0, !dbg !8440
  br i1 %tobool6, label %if.then7, label %if.else35, !dbg !8441

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %master_cpl_coord, metadata !8442, metadata !1854), !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %cpl_coord_exp, metadata !8445, metadata !1854), !dbg !8446
  call void @llvm.dbg.declare(metadata i32* %cpl_coord_mant, metadata !8447, metadata !1854), !dbg !8448
  %14 = load i32, i32* %ch, align 4, !dbg !8449
  %idxprom8 = sext i32 %14 to i64, !dbg !8450
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8450
  %first_cpl_coords9 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 54, !dbg !8451
  %arrayidx10 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords9, i64 0, i64 %idxprom8, !dbg !8450
  store i32 0, i32* %arrayidx10, align 4, !dbg !8452
  store i32 1, i32* %cpl_coords_exist, align 4, !dbg !8453
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8454
  %call11 = call i32 @get_bits(%struct.GetBitContext* %16, i32 2), !dbg !8455
  %mul = mul i32 3, %call11, !dbg !8456
  store i32 %mul, i32* %master_cpl_coord, align 4, !dbg !8457
  store i32 0, i32* %bnd, align 4, !dbg !8458
  br label %for.cond12, !dbg !8460

for.cond12:                                       ; preds = %for.inc, %if.then7
  %17 = load i32, i32* %bnd, align 4, !dbg !8461
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8464
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 50, !dbg !8465
  %19 = load i32, i32* %num_cpl_bands, align 32, !dbg !8465
  %cmp13 = icmp slt i32 %17, %19, !dbg !8466
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !8467

for.body14:                                       ; preds = %for.cond12
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8468
  %call15 = call i32 @get_bits(%struct.GetBitContext* %20, i32 4), !dbg !8470
  store i32 %call15, i32* %cpl_coord_exp, align 4, !dbg !8471
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8472
  %call16 = call i32 @get_bits(%struct.GetBitContext* %21, i32 4), !dbg !8473
  store i32 %call16, i32* %cpl_coord_mant, align 4, !dbg !8474
  %22 = load i32, i32* %cpl_coord_exp, align 4, !dbg !8475
  %cmp17 = icmp eq i32 %22, 15, !dbg !8477
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !8478

if.then18:                                        ; preds = %for.body14
  %23 = load i32, i32* %cpl_coord_mant, align 4, !dbg !8479
  %shl = shl i32 %23, 22, !dbg !8480
  %24 = load i32, i32* %bnd, align 4, !dbg !8481
  %idxprom19 = sext i32 %24 to i64, !dbg !8482
  %25 = load i32, i32* %ch, align 4, !dbg !8483
  %idxprom20 = sext i32 %25 to i64, !dbg !8482
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8482
  %cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 55, !dbg !8484
  %arrayidx21 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords, i64 0, i64 %idxprom20, !dbg !8482
  %arrayidx22 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !8482
  store i32 %shl, i32* %arrayidx22, align 4, !dbg !8485
  br label %if.end, !dbg !8482

if.else:                                          ; preds = %for.body14
  %27 = load i32, i32* %cpl_coord_mant, align 4, !dbg !8486
  %add = add nsw i32 %27, 16, !dbg !8487
  %shl23 = shl i32 %add, 21, !dbg !8488
  %28 = load i32, i32* %bnd, align 4, !dbg !8489
  %idxprom24 = sext i32 %28 to i64, !dbg !8490
  %29 = load i32, i32* %ch, align 4, !dbg !8491
  %idxprom25 = sext i32 %29 to i64, !dbg !8490
  %30 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8490
  %cpl_coords26 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %30, i32 0, i32 55, !dbg !8492
  %arrayidx27 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords26, i64 0, i64 %idxprom25, !dbg !8490
  %arrayidx28 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !8490
  store i32 %shl23, i32* %arrayidx28, align 4, !dbg !8493
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %31 = load i32, i32* %cpl_coord_exp, align 4, !dbg !8494
  %32 = load i32, i32* %master_cpl_coord, align 4, !dbg !8495
  %add29 = add nsw i32 %31, %32, !dbg !8496
  %33 = load i32, i32* %bnd, align 4, !dbg !8497
  %idxprom30 = sext i32 %33 to i64, !dbg !8498
  %34 = load i32, i32* %ch, align 4, !dbg !8499
  %idxprom31 = sext i32 %34 to i64, !dbg !8498
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8498
  %cpl_coords32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 55, !dbg !8500
  %arrayidx33 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords32, i64 0, i64 %idxprom31, !dbg !8498
  %arrayidx34 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !8498
  %36 = load i32, i32* %arrayidx34, align 4, !dbg !8501
  %shr = ashr i32 %36, %add29, !dbg !8501
  store i32 %shr, i32* %arrayidx34, align 4, !dbg !8501
  br label %for.inc, !dbg !8502

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %bnd, align 4, !dbg !8503
  %inc = add nsw i32 %37, 1, !dbg !8503
  store i32 %inc, i32* %bnd, align 4, !dbg !8503
  br label %for.cond12, !dbg !8505, !llvm.loop !8506

for.end:                                          ; preds = %for.cond12
  br label %if.end39, !dbg !8508

if.else35:                                        ; preds = %lor.lhs.false
  %38 = load i32, i32* %blk.addr, align 4, !dbg !8509
  %tobool36 = icmp ne i32 %38, 0, !dbg !8509
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !8512

if.then37:                                        ; preds = %if.else35
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8513
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 1, !dbg !8515
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8515
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !8513
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.61, i32 0, i32 0)), !dbg !8516
  store i32 -1094995529, i32* %retval, align 4, !dbg !8517
  br label %return, !dbg !8517

if.end38:                                         ; preds = %if.else35
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %for.end
  br label %if.end44, !dbg !8518

if.else40:                                        ; preds = %for.body
  %42 = load i32, i32* %ch, align 4, !dbg !8519
  %idxprom41 = sext i32 %42 to i64, !dbg !8521
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8521
  %first_cpl_coords42 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 54, !dbg !8522
  %arrayidx43 = getelementptr inbounds [7 x i32], [7 x i32]* %first_cpl_coords42, i64 0, i64 %idxprom41, !dbg !8521
  store i32 1, i32* %arrayidx43, align 4, !dbg !8523
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %if.end39
  br label %for.inc45, !dbg !8524

for.inc45:                                        ; preds = %if.end44
  %44 = load i32, i32* %ch, align 4, !dbg !8525
  %inc46 = add nsw i32 %44, 1, !dbg !8525
  store i32 %inc46, i32* %ch, align 4, !dbg !8525
  br label %for.cond, !dbg !8527, !llvm.loop !8528

for.end47:                                        ; preds = %for.cond
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8530
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 12, !dbg !8532
  %46 = load i32, i32* %channel_mode, align 4, !dbg !8532
  %cmp48 = icmp eq i32 %46, 2, !dbg !8533
  br i1 %cmp48, label %land.lhs.true49, label %if.end63, !dbg !8534

land.lhs.true49:                                  ; preds = %for.end47
  %47 = load i32, i32* %cpl_coords_exist, align 4, !dbg !8535
  %tobool50 = icmp ne i32 %47, 0, !dbg !8535
  br i1 %tobool50, label %if.then51, label %if.end63, !dbg !8537

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %bnd, align 4, !dbg !8538
  br label %for.cond52, !dbg !8541

for.cond52:                                       ; preds = %for.inc60, %if.then51
  %48 = load i32, i32* %bnd, align 4, !dbg !8542
  %49 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8545
  %num_cpl_bands53 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %49, i32 0, i32 50, !dbg !8546
  %50 = load i32, i32* %num_cpl_bands53, align 32, !dbg !8546
  %cmp54 = icmp slt i32 %48, %50, !dbg !8547
  br i1 %cmp54, label %for.body55, label %for.end62, !dbg !8548

for.body55:                                       ; preds = %for.cond52
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8549
  %phase_flags_in_use = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 48, !dbg !8551
  %52 = load i32, i32* %phase_flags_in_use, align 4, !dbg !8551
  %tobool56 = icmp ne i32 %52, 0, !dbg !8549
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !8549

cond.true:                                        ; preds = %for.body55
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %bc, align 8, !dbg !8552
  %call57 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !8554
  br label %cond.end, !dbg !8555

cond.false:                                       ; preds = %for.body55
  br label %cond.end, !dbg !8556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call57, %cond.true ], [ 0, %cond.false ], !dbg !8558
  %54 = load i32, i32* %bnd, align 4, !dbg !8560
  %idxprom58 = sext i32 %54 to i64, !dbg !8561
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8561
  %phase_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 49, !dbg !8562
  %arrayidx59 = getelementptr inbounds [18 x i32], [18 x i32]* %phase_flags, i64 0, i64 %idxprom58, !dbg !8561
  store i32 %cond, i32* %arrayidx59, align 4, !dbg !8563
  br label %for.inc60, !dbg !8564

for.inc60:                                        ; preds = %cond.end
  %56 = load i32, i32* %bnd, align 4, !dbg !8565
  %inc61 = add nsw i32 %56, 1, !dbg !8565
  store i32 %inc61, i32* %bnd, align 4, !dbg !8565
  br label %for.cond52, !dbg !8567, !llvm.loop !8568

for.end62:                                        ; preds = %for.cond52
  br label %if.end63, !dbg !8570

if.end63:                                         ; preds = %for.end62, %land.lhs.true49, %for.end47
  store i32 0, i32* %retval, align 4, !dbg !8571
  br label %return, !dbg !8571

return:                                           ; preds = %if.end63, %if.then37
  %57 = load i32, i32* %retval, align 4, !dbg !8572
  ret i32 %57, !dbg !8572
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_exponents(%struct.AC3DecodeContext* %s, %struct.GetBitContext* %gbc, i32 %exp_strategy, i32 %ngrps, i8 zeroext %absexp, i8* %dexps) #1 !dbg !8573 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %exp_strategy.addr = alloca i32, align 4
  %ngrps.addr = alloca i32, align 4
  %absexp.addr = alloca i8, align 1
  %dexps.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %grp = alloca i32, align 4
  %group_size = alloca i32, align 4
  %dexp = alloca [256 x i32], align 16
  %expacc = alloca i32, align 4
  %prevexp = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8576, metadata !1854), !dbg !8577
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !8578, metadata !1854), !dbg !8579
  store i32 %exp_strategy, i32* %exp_strategy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exp_strategy.addr, metadata !8580, metadata !1854), !dbg !8581
  store i32 %ngrps, i32* %ngrps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ngrps.addr, metadata !8582, metadata !1854), !dbg !8583
  store i8 %absexp, i8* %absexp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %absexp.addr, metadata !8584, metadata !1854), !dbg !8585
  store i8* %dexps, i8** %dexps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dexps.addr, metadata !8586, metadata !1854), !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8588, metadata !1854), !dbg !8589
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8590, metadata !1854), !dbg !8591
  call void @llvm.dbg.declare(metadata i32* %grp, metadata !8592, metadata !1854), !dbg !8593
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !8594, metadata !1854), !dbg !8595
  call void @llvm.dbg.declare(metadata [256 x i32]* %dexp, metadata !8596, metadata !1854), !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %expacc, metadata !8599, metadata !1854), !dbg !8600
  call void @llvm.dbg.declare(metadata i32* %prevexp, metadata !8601, metadata !1854), !dbg !8602
  %0 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8603
  %1 = load i32, i32* %exp_strategy.addr, align 4, !dbg !8604
  %cmp = icmp eq i32 %1, 3, !dbg !8605
  %conv = zext i1 %cmp to i32, !dbg !8605
  %add = add nsw i32 %0, %conv, !dbg !8606
  store i32 %add, i32* %group_size, align 4, !dbg !8607
  store i32 0, i32* %grp, align 4, !dbg !8608
  store i32 0, i32* %i, align 4, !dbg !8610
  br label %for.cond, !dbg !8611

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %grp, align 4, !dbg !8612
  %3 = load i32, i32* %ngrps.addr, align 4, !dbg !8615
  %cmp1 = icmp slt i32 %2, %3, !dbg !8616
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8617

for.body:                                         ; preds = %for.cond
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !8618
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 7), !dbg !8620
  store i32 %call, i32* %expacc, align 4, !dbg !8621
  %5 = load i32, i32* %expacc, align 4, !dbg !8622
  %cmp3 = icmp sge i32 %5, 125, !dbg !8624
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8625

if.then:                                          ; preds = %for.body
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8626
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 1, !dbg !8628
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8628
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !8626
  %9 = load i32, i32* %expacc, align 4, !dbg !8629
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i32 0, i32 0), i32 %9), !dbg !8630
  store i32 -1094995529, i32* %retval, align 4, !dbg !8631
  br label %return, !dbg !8631

if.end:                                           ; preds = %for.body
  %10 = load i32, i32* %expacc, align 4, !dbg !8632
  %idxprom = sext i32 %10 to i64, !dbg !8633
  %arrayidx = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom, !dbg !8633
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx, i64 0, i64 0, !dbg !8633
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !8633
  %conv6 = zext i8 %11 to i32, !dbg !8633
  %12 = load i32, i32* %i, align 4, !dbg !8634
  %inc = add nsw i32 %12, 1, !dbg !8634
  store i32 %inc, i32* %i, align 4, !dbg !8634
  %idxprom7 = sext i32 %12 to i64, !dbg !8635
  %arrayidx8 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom7, !dbg !8635
  store i32 %conv6, i32* %arrayidx8, align 4, !dbg !8636
  %13 = load i32, i32* %expacc, align 4, !dbg !8637
  %idxprom9 = sext i32 %13 to i64, !dbg !8638
  %arrayidx10 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom9, !dbg !8638
  %arrayidx11 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx10, i64 0, i64 1, !dbg !8638
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !8638
  %conv12 = zext i8 %14 to i32, !dbg !8638
  %15 = load i32, i32* %i, align 4, !dbg !8639
  %inc13 = add nsw i32 %15, 1, !dbg !8639
  store i32 %inc13, i32* %i, align 4, !dbg !8639
  %idxprom14 = sext i32 %15 to i64, !dbg !8640
  %arrayidx15 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom14, !dbg !8640
  store i32 %conv12, i32* %arrayidx15, align 4, !dbg !8641
  %16 = load i32, i32* %expacc, align 4, !dbg !8642
  %idxprom16 = sext i32 %16 to i64, !dbg !8643
  %arrayidx17 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab, i64 0, i64 %idxprom16, !dbg !8643
  %arrayidx18 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx17, i64 0, i64 2, !dbg !8643
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !8643
  %conv19 = zext i8 %17 to i32, !dbg !8643
  %18 = load i32, i32* %i, align 4, !dbg !8644
  %inc20 = add nsw i32 %18, 1, !dbg !8644
  store i32 %inc20, i32* %i, align 4, !dbg !8644
  %idxprom21 = sext i32 %18 to i64, !dbg !8645
  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom21, !dbg !8645
  store i32 %conv19, i32* %arrayidx22, align 4, !dbg !8646
  br label %for.inc, !dbg !8647

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %grp, align 4, !dbg !8648
  %inc23 = add nsw i32 %19, 1, !dbg !8648
  store i32 %inc23, i32* %grp, align 4, !dbg !8648
  br label %for.cond, !dbg !8650, !llvm.loop !8651

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %absexp.addr, align 1, !dbg !8653
  %conv24 = zext i8 %20 to i32, !dbg !8653
  store i32 %conv24, i32* %prevexp, align 4, !dbg !8654
  store i32 0, i32* %i, align 4, !dbg !8655
  store i32 0, i32* %j, align 4, !dbg !8657
  br label %for.cond25, !dbg !8658

for.cond25:                                       ; preds = %for.inc55, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !8659
  %22 = load i32, i32* %ngrps.addr, align 4, !dbg !8662
  %mul = mul nsw i32 %22, 3, !dbg !8663
  %cmp26 = icmp slt i32 %21, %mul, !dbg !8664
  br i1 %cmp26, label %for.body28, label %for.end57, !dbg !8665

for.body28:                                       ; preds = %for.cond25
  %23 = load i32, i32* %i, align 4, !dbg !8666
  %idxprom29 = sext i32 %23 to i64, !dbg !8668
  %arrayidx30 = getelementptr inbounds [256 x i32], [256 x i32]* %dexp, i64 0, i64 %idxprom29, !dbg !8668
  %24 = load i32, i32* %arrayidx30, align 4, !dbg !8668
  %sub = sub nsw i32 %24, 2, !dbg !8669
  %25 = load i32, i32* %prevexp, align 4, !dbg !8670
  %add31 = add nsw i32 %25, %sub, !dbg !8670
  store i32 %add31, i32* %prevexp, align 4, !dbg !8670
  %26 = load i32, i32* %prevexp, align 4, !dbg !8671
  %cmp32 = icmp ugt i32 %26, 24, !dbg !8673
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !8674

if.then34:                                        ; preds = %for.body28
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8675
  %avctx35 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 1, !dbg !8677
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx35, align 8, !dbg !8677
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !8675
  %30 = load i32, i32* %prevexp, align 4, !dbg !8678
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i32 0, i32 0), i32 %30), !dbg !8679
  store i32 -1094995529, i32* %retval, align 4, !dbg !8680
  br label %return, !dbg !8680

if.end36:                                         ; preds = %for.body28
  %31 = load i32, i32* %group_size, align 4, !dbg !8681
  switch i32 %31, label %sw.epilog [
    i32 4, label %sw.bb
    i32 2, label %sw.bb45
    i32 1, label %sw.bb50
  ], !dbg !8682

sw.bb:                                            ; preds = %if.end36
  %32 = load i32, i32* %prevexp, align 4, !dbg !8683
  %conv37 = trunc i32 %32 to i8, !dbg !8683
  %33 = load i32, i32* %j, align 4, !dbg !8685
  %inc38 = add nsw i32 %33, 1, !dbg !8685
  store i32 %inc38, i32* %j, align 4, !dbg !8685
  %idxprom39 = sext i32 %33 to i64, !dbg !8686
  %34 = load i8*, i8** %dexps.addr, align 8, !dbg !8686
  %arrayidx40 = getelementptr inbounds i8, i8* %34, i64 %idxprom39, !dbg !8686
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !8687
  %35 = load i32, i32* %prevexp, align 4, !dbg !8688
  %conv41 = trunc i32 %35 to i8, !dbg !8688
  %36 = load i32, i32* %j, align 4, !dbg !8689
  %inc42 = add nsw i32 %36, 1, !dbg !8689
  store i32 %inc42, i32* %j, align 4, !dbg !8689
  %idxprom43 = sext i32 %36 to i64, !dbg !8690
  %37 = load i8*, i8** %dexps.addr, align 8, !dbg !8690
  %arrayidx44 = getelementptr inbounds i8, i8* %37, i64 %idxprom43, !dbg !8690
  store i8 %conv41, i8* %arrayidx44, align 1, !dbg !8691
  br label %sw.bb45, !dbg !8690

sw.bb45:                                          ; preds = %if.end36, %sw.bb
  %38 = load i32, i32* %prevexp, align 4, !dbg !8692
  %conv46 = trunc i32 %38 to i8, !dbg !8692
  %39 = load i32, i32* %j, align 4, !dbg !8693
  %inc47 = add nsw i32 %39, 1, !dbg !8693
  store i32 %inc47, i32* %j, align 4, !dbg !8693
  %idxprom48 = sext i32 %39 to i64, !dbg !8694
  %40 = load i8*, i8** %dexps.addr, align 8, !dbg !8694
  %arrayidx49 = getelementptr inbounds i8, i8* %40, i64 %idxprom48, !dbg !8694
  store i8 %conv46, i8* %arrayidx49, align 1, !dbg !8695
  br label %sw.bb50, !dbg !8694

sw.bb50:                                          ; preds = %if.end36, %sw.bb45
  %41 = load i32, i32* %prevexp, align 4, !dbg !8696
  %conv51 = trunc i32 %41 to i8, !dbg !8696
  %42 = load i32, i32* %j, align 4, !dbg !8697
  %inc52 = add nsw i32 %42, 1, !dbg !8697
  store i32 %inc52, i32* %j, align 4, !dbg !8697
  %idxprom53 = sext i32 %42 to i64, !dbg !8698
  %43 = load i8*, i8** %dexps.addr, align 8, !dbg !8698
  %arrayidx54 = getelementptr inbounds i8, i8* %43, i64 %idxprom53, !dbg !8698
  store i8 %conv51, i8* %arrayidx54, align 1, !dbg !8699
  br label %sw.epilog, !dbg !8700

sw.epilog:                                        ; preds = %sw.bb50, %if.end36
  br label %for.inc55, !dbg !8701

for.inc55:                                        ; preds = %sw.epilog
  %44 = load i32, i32* %i, align 4, !dbg !8702
  %inc56 = add nsw i32 %44, 1, !dbg !8702
  store i32 %inc56, i32* %i, align 4, !dbg !8702
  br label %for.cond25, !dbg !8704, !llvm.loop !8705

for.end57:                                        ; preds = %for.cond25
  store i32 0, i32* %retval, align 4, !dbg !8707
  br label %return, !dbg !8707

return:                                           ; preds = %for.end57, %if.then34, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !8708
  ret i32 %45, !dbg !8708
}

declare void @ff_ac3_bit_alloc_calc_psd(i8*, i32, i32, i16*, i16*) #2

declare i32 @ff_ac3_bit_alloc_calc_mask(%struct.AC3BitAllocParameters*, i16*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i16*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @decode_transform_coeffs(%struct.AC3DecodeContext* %s, i32 %blk) #4 !dbg !8709 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %end = alloca i32, align 4
  %got_cplchan = alloca i32, align 4
  %m = alloca %struct.mant_groups, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8712, metadata !1854), !dbg !8713
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !8714, metadata !1854), !dbg !8715
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8716, metadata !1854), !dbg !8717
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8718, metadata !1854), !dbg !8719
  call void @llvm.dbg.declare(metadata i32* %got_cplchan, metadata !8720, metadata !1854), !dbg !8721
  store i32 0, i32* %got_cplchan, align 4, !dbg !8721
  call void @llvm.dbg.declare(metadata %struct.mant_groups* %m, metadata !8722, metadata !1854), !dbg !8732
  %b4 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 5, !dbg !8733
  store i32 0, i32* %b4, align 4, !dbg !8734
  %b2 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 4, !dbg !8735
  store i32 0, i32* %b2, align 4, !dbg !8736
  %b1 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %m, i32 0, i32 3, !dbg !8737
  store i32 0, i32* %b1, align 4, !dbg !8738
  store i32 1, i32* %ch, align 4, !dbg !8739
  br label %for.cond, !dbg !8741

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !8742
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8745
  %channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 71, !dbg !8746
  %2 = load i32, i32* %channels, align 8, !dbg !8746
  %cmp = icmp sle i32 %0, %2, !dbg !8747
  br i1 %cmp, label %for.body, label %for.end, !dbg !8748

for.body:                                         ; preds = %for.cond
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8749
  %4 = load i32, i32* %blk.addr, align 4, !dbg !8751
  %5 = load i32, i32* %ch, align 4, !dbg !8752
  call void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %3, i32 %4, i32 %5, %struct.mant_groups* %m), !dbg !8753
  %6 = load i32, i32* %ch, align 4, !dbg !8754
  %idxprom = sext i32 %6 to i64, !dbg !8756
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8756
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 47, !dbg !8757
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom, !dbg !8756
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8756
  %tobool = icmp ne i32 %8, 0, !dbg !8756
  br i1 %tobool, label %if.then, label %if.else, !dbg !8758

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %got_cplchan, align 4, !dbg !8759
  %tobool1 = icmp ne i32 %9, 0, !dbg !8759
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8762

if.then2:                                         ; preds = %if.then
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8763
  %11 = load i32, i32* %blk.addr, align 4, !dbg !8765
  call void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %10, i32 %11, i32 0, %struct.mant_groups* %m), !dbg !8766
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8767
  call void @calc_transform_coeffs_cpl(%struct.AC3DecodeContext* %12), !dbg !8768
  store i32 1, i32* %got_cplchan, align 4, !dbg !8769
  br label %if.end, !dbg !8770

if.end:                                           ; preds = %if.then2, %if.then
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8771
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 84, !dbg !8772
  %arrayidx3 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !8771
  %14 = load i32, i32* %arrayidx3, align 8, !dbg !8771
  store i32 %14, i32* %end, align 4, !dbg !8773
  br label %if.end7, !dbg !8774

if.else:                                          ; preds = %for.body
  %15 = load i32, i32* %ch, align 4, !dbg !8775
  %idxprom4 = sext i32 %15 to i64, !dbg !8777
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8777
  %end_freq5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 84, !dbg !8778
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq5, i64 0, i64 %idxprom4, !dbg !8777
  %17 = load i32, i32* %arrayidx6, align 4, !dbg !8777
  store i32 %17, i32* %end, align 4, !dbg !8779
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end
  br label %do.body, !dbg !8780, !llvm.loop !8781

do.body:                                          ; preds = %do.cond, %if.end7
  %18 = load i32, i32* %end, align 4, !dbg !8782
  %idxprom8 = sext i32 %18 to i64, !dbg !8783
  %19 = load i32, i32* %ch, align 4, !dbg !8784
  %idxprom9 = sext i32 %19 to i64, !dbg !8783
  %20 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8783
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %20, i32 0, i32 117, !dbg !8785
  %arrayidx10 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom9, !dbg !8783
  %arrayidx11 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !8783
  store i32 0, i32* %arrayidx11, align 4, !dbg !8786
  br label %do.cond, !dbg !8783

do.cond:                                          ; preds = %do.body
  %21 = load i32, i32* %end, align 4, !dbg !8787
  %inc = add nsw i32 %21, 1, !dbg !8787
  store i32 %inc, i32* %end, align 4, !dbg !8787
  %cmp12 = icmp slt i32 %inc, 256, !dbg !8788
  br i1 %cmp12, label %do.body, label %do.end, !dbg !8789, !llvm.loop !8781

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !8791

for.inc:                                          ; preds = %do.end
  %22 = load i32, i32* %ch, align 4, !dbg !8792
  %inc13 = add nsw i32 %22, 1, !dbg !8792
  store i32 %inc13, i32* %ch, align 4, !dbg !8792
  br label %for.cond, !dbg !8794, !llvm.loop !8795

for.end:                                          ; preds = %for.cond
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8797
  call void @remove_dithering(%struct.AC3DecodeContext* %23), !dbg !8798
  ret void, !dbg !8799
}

; Function Attrs: nounwind uwtable
define internal void @do_rematrixing(%struct.AC3DecodeContext* %s) #1 !dbg !8800 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bnd = alloca i32, align 4
  %i = alloca i32, align 4
  %end = alloca i32, align 4
  %bndend = alloca i32, align 4
  %tmp0 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8801, metadata !1854), !dbg !8802
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8803, metadata !1854), !dbg !8804
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8805, metadata !1854), !dbg !8806
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8807, metadata !1854), !dbg !8808
  call void @llvm.dbg.declare(metadata i32* %bndend, metadata !8809, metadata !1854), !dbg !8810
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8811
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 84, !dbg !8812
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 1, !dbg !8811
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8811
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8813
  %end_freq1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 84, !dbg !8814
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq1, i64 0, i64 2, !dbg !8813
  %3 = load i32, i32* %arrayidx2, align 8, !dbg !8813
  %cmp = icmp sgt i32 %1, %3, !dbg !8815
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8816

cond.true:                                        ; preds = %entry
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8817
  %end_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 84, !dbg !8819
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq3, i64 0, i64 2, !dbg !8817
  %5 = load i32, i32* %arrayidx4, align 8, !dbg !8817
  br label %cond.end, !dbg !8820

cond.false:                                       ; preds = %entry
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8821
  %end_freq5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 84, !dbg !8823
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq5, i64 0, i64 1, !dbg !8821
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !8821
  br label %cond.end, !dbg !8824

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %7, %cond.false ], !dbg !8825
  store i32 %cond, i32* %end, align 4, !dbg !8827
  store i32 0, i32* %bnd, align 4, !dbg !8828
  br label %for.cond, !dbg !8830

for.cond:                                         ; preds = %for.inc48, %cond.end
  %8 = load i32, i32* %bnd, align 4, !dbg !8831
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8834
  %num_rematrixing_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 86, !dbg !8835
  %10 = load i32, i32* %num_rematrixing_bands, align 8, !dbg !8835
  %cmp7 = icmp slt i32 %8, %10, !dbg !8836
  br i1 %cmp7, label %for.body, label %for.end50, !dbg !8837

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %bnd, align 4, !dbg !8838
  %idxprom = sext i32 %11 to i64, !dbg !8841
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8841
  %rematrixing_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 87, !dbg !8842
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %rematrixing_flags, i64 0, i64 %idxprom, !dbg !8841
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !8841
  %tobool = icmp ne i32 %13, 0, !dbg !8841
  br i1 %tobool, label %if.then, label %if.end, !dbg !8843

if.then:                                          ; preds = %for.body
  %14 = load i32, i32* %end, align 4, !dbg !8844
  %15 = load i32, i32* %bnd, align 4, !dbg !8846
  %add = add nsw i32 %15, 1, !dbg !8847
  %idxprom9 = sext i32 %add to i64, !dbg !8848
  %arrayidx10 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom9, !dbg !8848
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !8848
  %conv = zext i8 %16 to i32, !dbg !8849
  %cmp11 = icmp sgt i32 %14, %conv, !dbg !8850
  br i1 %cmp11, label %cond.true13, label %cond.false18, !dbg !8851

cond.true13:                                      ; preds = %if.then
  %17 = load i32, i32* %bnd, align 4, !dbg !8852
  %add14 = add nsw i32 %17, 1, !dbg !8854
  %idxprom15 = sext i32 %add14 to i64, !dbg !8855
  %arrayidx16 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom15, !dbg !8855
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !8855
  %conv17 = zext i8 %18 to i32, !dbg !8856
  br label %cond.end19, !dbg !8857

cond.false18:                                     ; preds = %if.then
  %19 = load i32, i32* %end, align 4, !dbg !8858
  br label %cond.end19, !dbg !8860

cond.end19:                                       ; preds = %cond.false18, %cond.true13
  %cond20 = phi i32 [ %conv17, %cond.true13 ], [ %19, %cond.false18 ], !dbg !8861
  store i32 %cond20, i32* %bndend, align 4, !dbg !8863
  %20 = load i32, i32* %bnd, align 4, !dbg !8864
  %idxprom21 = sext i32 %20 to i64, !dbg !8866
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* @ff_ac3_rematrix_band_tab, i64 0, i64 %idxprom21, !dbg !8866
  %21 = load i8, i8* %arrayidx22, align 1, !dbg !8866
  %conv23 = zext i8 %21 to i32, !dbg !8866
  store i32 %conv23, i32* %i, align 4, !dbg !8867
  br label %for.cond24, !dbg !8868

for.cond24:                                       ; preds = %for.inc, %cond.end19
  %22 = load i32, i32* %i, align 4, !dbg !8869
  %23 = load i32, i32* %bndend, align 4, !dbg !8872
  %cmp25 = icmp slt i32 %22, %23, !dbg !8873
  br i1 %cmp25, label %for.body27, label %for.end, !dbg !8874

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i32* %tmp0, metadata !8875, metadata !1854), !dbg !8877
  %24 = load i32, i32* %i, align 4, !dbg !8878
  %idxprom28 = sext i32 %24 to i64, !dbg !8879
  %25 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8879
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %25, i32 0, i32 117, !dbg !8880
  %arrayidx29 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 1, !dbg !8879
  %arrayidx30 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx29, i64 0, i64 %idxprom28, !dbg !8879
  %26 = load i32, i32* %arrayidx30, align 4, !dbg !8879
  store i32 %26, i32* %tmp0, align 4, !dbg !8877
  %27 = load i32, i32* %i, align 4, !dbg !8881
  %idxprom31 = sext i32 %27 to i64, !dbg !8882
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8882
  %fixed_coeffs32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 117, !dbg !8883
  %arrayidx33 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs32, i64 0, i64 2, !dbg !8882
  %arrayidx34 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx33, i64 0, i64 %idxprom31, !dbg !8882
  %29 = load i32, i32* %arrayidx34, align 4, !dbg !8882
  %30 = load i32, i32* %i, align 4, !dbg !8884
  %idxprom35 = sext i32 %30 to i64, !dbg !8885
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8885
  %fixed_coeffs36 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 117, !dbg !8886
  %arrayidx37 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs36, i64 0, i64 1, !dbg !8885
  %arrayidx38 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx37, i64 0, i64 %idxprom35, !dbg !8885
  %32 = load i32, i32* %arrayidx38, align 4, !dbg !8887
  %add39 = add nsw i32 %32, %29, !dbg !8887
  store i32 %add39, i32* %arrayidx38, align 4, !dbg !8887
  %33 = load i32, i32* %tmp0, align 4, !dbg !8888
  %34 = load i32, i32* %i, align 4, !dbg !8889
  %idxprom40 = sext i32 %34 to i64, !dbg !8890
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8890
  %fixed_coeffs41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 117, !dbg !8891
  %arrayidx42 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs41, i64 0, i64 2, !dbg !8890
  %arrayidx43 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx42, i64 0, i64 %idxprom40, !dbg !8890
  %36 = load i32, i32* %arrayidx43, align 4, !dbg !8890
  %sub = sub nsw i32 %33, %36, !dbg !8892
  %37 = load i32, i32* %i, align 4, !dbg !8893
  %idxprom44 = sext i32 %37 to i64, !dbg !8894
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8894
  %fixed_coeffs45 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 117, !dbg !8895
  %arrayidx46 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs45, i64 0, i64 2, !dbg !8894
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx46, i64 0, i64 %idxprom44, !dbg !8894
  store i32 %sub, i32* %arrayidx47, align 4, !dbg !8896
  br label %for.inc, !dbg !8897

for.inc:                                          ; preds = %for.body27
  %39 = load i32, i32* %i, align 4, !dbg !8898
  %inc = add nsw i32 %39, 1, !dbg !8898
  store i32 %inc, i32* %i, align 4, !dbg !8898
  br label %for.cond24, !dbg !8900, !llvm.loop !8901

for.end:                                          ; preds = %for.cond24
  br label %if.end, !dbg !8903

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc48, !dbg !8904

for.inc48:                                        ; preds = %if.end
  %40 = load i32, i32* %bnd, align 4, !dbg !8905
  %inc49 = add nsw i32 %40, 1, !dbg !8905
  store i32 %inc49, i32* %bnd, align 4, !dbg !8905
  br label %for.cond, !dbg !8907, !llvm.loop !8908

for.end50:                                        ; preds = %for.cond
  ret void, !dbg !8910
}

; Function Attrs: nounwind uwtable
define internal void @ff_eac3_apply_spectral_extension(%struct.AC3DecodeContext* %s) #1 !dbg !8911 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bin = alloca i32, align 4
  %bnd = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %wrapflag = alloca [17 x i8], align 16
  %num_copy_sections = alloca i8, align 1
  %copy_sizes = alloca [17 x i8], align 16
  %rms_energy = alloca [17 x float], align 16
  %copysize = alloca i32, align 4
  %bandsize = alloca i32, align 4
  %bandsize85 = alloca i32, align 4
  %accum = alloca float, align 4
  %coeff = alloca float, align 4
  %atten_tab = alloca float*, align 8
  %coeffs = alloca float*, align 8
  %nscale = alloca float, align 4
  %sscale = alloca float, align 4
  %noise = alloca float, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !8912, metadata !1854), !dbg !8913
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !8914, metadata !1854), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !8916, metadata !1854), !dbg !8917
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8918, metadata !1854), !dbg !8919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8920, metadata !1854), !dbg !8921
  call void @llvm.dbg.declare(metadata [17 x i8]* %wrapflag, metadata !8922, metadata !1854), !dbg !8923
  %0 = bitcast [17 x i8]* %wrapflag to i8*, !dbg !8923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @ff_eac3_apply_spectral_extension.wrapflag, i32 0, i32 0), i64 17, i32 16, i1 false), !dbg !8923
  call void @llvm.dbg.declare(metadata i8* %num_copy_sections, metadata !8924, metadata !1854), !dbg !8925
  call void @llvm.dbg.declare(metadata [17 x i8]* %copy_sizes, metadata !8926, metadata !1854), !dbg !8927
  call void @llvm.dbg.declare(metadata [17 x float]* %rms_energy, metadata !8928, metadata !1854), !dbg !8930
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8931
  %spx_dst_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 61, !dbg !8932
  %2 = load i32, i32* %spx_dst_start_freq, align 4, !dbg !8932
  store i32 %2, i32* %bin, align 4, !dbg !8933
  store i8 0, i8* %num_copy_sections, align 1, !dbg !8934
  store i32 0, i32* %bnd, align 4, !dbg !8935
  br label %for.cond, !dbg !8937

for.cond:                                         ; preds = %for.inc36, %entry
  %3 = load i32, i32* %bnd, align 4, !dbg !8938
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8941
  %num_spx_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 62, !dbg !8942
  %5 = load i32, i32* %num_spx_bands, align 32, !dbg !8942
  %cmp = icmp slt i32 %3, %5, !dbg !8943
  br i1 %cmp, label %for.body, label %for.end38, !dbg !8944

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %copysize, metadata !8945, metadata !1854), !dbg !8947
  call void @llvm.dbg.declare(metadata i32* %bandsize, metadata !8948, metadata !1854), !dbg !8949
  %6 = load i32, i32* %bnd, align 4, !dbg !8950
  %idxprom = sext i32 %6 to i64, !dbg !8951
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8951
  %spx_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 64, !dbg !8952
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes, i64 0, i64 %idxprom, !dbg !8951
  %8 = load i8, i8* %arrayidx, align 1, !dbg !8951
  %conv = zext i8 %8 to i32, !dbg !8951
  store i32 %conv, i32* %bandsize, align 4, !dbg !8949
  %9 = load i32, i32* %bin, align 4, !dbg !8953
  %10 = load i32, i32* %bandsize, align 4, !dbg !8955
  %add = add nsw i32 %9, %10, !dbg !8956
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8957
  %spx_src_start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 59, !dbg !8958
  %12 = load i32, i32* %spx_src_start_freq, align 4, !dbg !8958
  %cmp1 = icmp sgt i32 %add, %12, !dbg !8959
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8960

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %bin, align 4, !dbg !8961
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8963
  %spx_dst_start_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 61, !dbg !8964
  %15 = load i32, i32* %spx_dst_start_freq3, align 4, !dbg !8964
  %sub = sub nsw i32 %13, %15, !dbg !8965
  %conv4 = trunc i32 %sub to i8, !dbg !8961
  %16 = load i8, i8* %num_copy_sections, align 1, !dbg !8966
  %inc = add i8 %16, 1, !dbg !8966
  store i8 %inc, i8* %num_copy_sections, align 1, !dbg !8966
  %idxprom5 = zext i8 %16 to i64, !dbg !8967
  %arrayidx6 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom5, !dbg !8967
  store i8 %conv4, i8* %arrayidx6, align 1, !dbg !8968
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8969
  %spx_dst_start_freq7 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 61, !dbg !8970
  %18 = load i32, i32* %spx_dst_start_freq7, align 4, !dbg !8970
  store i32 %18, i32* %bin, align 4, !dbg !8971
  %19 = load i32, i32* %bnd, align 4, !dbg !8972
  %idxprom8 = sext i32 %19 to i64, !dbg !8973
  %arrayidx9 = getelementptr inbounds [17 x i8], [17 x i8]* %wrapflag, i64 0, i64 %idxprom8, !dbg !8973
  store i8 1, i8* %arrayidx9, align 1, !dbg !8974
  br label %if.end, !dbg !8975

if.end:                                           ; preds = %if.then, %for.body
  store i32 0, i32* %i, align 4, !dbg !8976
  br label %for.cond10, !dbg !8978

for.cond10:                                       ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !8979
  %21 = load i32, i32* %bandsize, align 4, !dbg !8982
  %cmp11 = icmp slt i32 %20, %21, !dbg !8983
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !8984

for.body13:                                       ; preds = %for.cond10
  %22 = load i32, i32* %bin, align 4, !dbg !8985
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8988
  %spx_src_start_freq14 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 59, !dbg !8989
  %24 = load i32, i32* %spx_src_start_freq14, align 4, !dbg !8989
  %cmp15 = icmp eq i32 %22, %24, !dbg !8990
  br i1 %cmp15, label %if.then17, label %if.end25, !dbg !8991

if.then17:                                        ; preds = %for.body13
  %25 = load i32, i32* %bin, align 4, !dbg !8992
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !8994
  %spx_dst_start_freq18 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 61, !dbg !8995
  %27 = load i32, i32* %spx_dst_start_freq18, align 4, !dbg !8995
  %sub19 = sub nsw i32 %25, %27, !dbg !8996
  %conv20 = trunc i32 %sub19 to i8, !dbg !8992
  %28 = load i8, i8* %num_copy_sections, align 1, !dbg !8997
  %inc21 = add i8 %28, 1, !dbg !8997
  store i8 %inc21, i8* %num_copy_sections, align 1, !dbg !8997
  %idxprom22 = zext i8 %28 to i64, !dbg !8998
  %arrayidx23 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom22, !dbg !8998
  store i8 %conv20, i8* %arrayidx23, align 1, !dbg !8999
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9000
  %spx_dst_start_freq24 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 61, !dbg !9001
  %30 = load i32, i32* %spx_dst_start_freq24, align 4, !dbg !9001
  store i32 %30, i32* %bin, align 4, !dbg !9002
  br label %if.end25, !dbg !9003

if.end25:                                         ; preds = %if.then17, %for.body13
  %31 = load i32, i32* %bandsize, align 4, !dbg !9004
  %32 = load i32, i32* %i, align 4, !dbg !9005
  %sub26 = sub nsw i32 %31, %32, !dbg !9006
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9007
  %spx_src_start_freq27 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 59, !dbg !9008
  %34 = load i32, i32* %spx_src_start_freq27, align 4, !dbg !9008
  %35 = load i32, i32* %bin, align 4, !dbg !9009
  %sub28 = sub nsw i32 %34, %35, !dbg !9010
  %cmp29 = icmp sgt i32 %sub26, %sub28, !dbg !9011
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !9012

cond.true:                                        ; preds = %if.end25
  %36 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9013
  %spx_src_start_freq31 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %36, i32 0, i32 59, !dbg !9015
  %37 = load i32, i32* %spx_src_start_freq31, align 4, !dbg !9015
  %38 = load i32, i32* %bin, align 4, !dbg !9016
  %sub32 = sub nsw i32 %37, %38, !dbg !9017
  br label %cond.end, !dbg !9018

cond.false:                                       ; preds = %if.end25
  %39 = load i32, i32* %bandsize, align 4, !dbg !9019
  %40 = load i32, i32* %i, align 4, !dbg !9021
  %sub33 = sub nsw i32 %39, %40, !dbg !9022
  br label %cond.end, !dbg !9023

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub32, %cond.true ], [ %sub33, %cond.false ], !dbg !9024
  store i32 %cond, i32* %copysize, align 4, !dbg !9026
  %41 = load i32, i32* %copysize, align 4, !dbg !9027
  %42 = load i32, i32* %bin, align 4, !dbg !9028
  %add34 = add nsw i32 %42, %41, !dbg !9028
  store i32 %add34, i32* %bin, align 4, !dbg !9028
  br label %for.inc, !dbg !9029

for.inc:                                          ; preds = %cond.end
  %43 = load i32, i32* %copysize, align 4, !dbg !9030
  %44 = load i32, i32* %i, align 4, !dbg !9032
  %add35 = add nsw i32 %44, %43, !dbg !9032
  store i32 %add35, i32* %i, align 4, !dbg !9032
  br label %for.cond10, !dbg !9033, !llvm.loop !9034

for.end:                                          ; preds = %for.cond10
  br label %for.inc36, !dbg !9036

for.inc36:                                        ; preds = %for.end
  %45 = load i32, i32* %bnd, align 4, !dbg !9037
  %inc37 = add nsw i32 %45, 1, !dbg !9037
  store i32 %inc37, i32* %bnd, align 4, !dbg !9037
  br label %for.cond, !dbg !9039, !llvm.loop !9040

for.end38:                                        ; preds = %for.cond
  %46 = load i32, i32* %bin, align 4, !dbg !9042
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9043
  %spx_dst_start_freq39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 61, !dbg !9044
  %48 = load i32, i32* %spx_dst_start_freq39, align 4, !dbg !9044
  %sub40 = sub nsw i32 %46, %48, !dbg !9045
  %conv41 = trunc i32 %sub40 to i8, !dbg !9042
  %49 = load i8, i8* %num_copy_sections, align 1, !dbg !9046
  %inc42 = add i8 %49, 1, !dbg !9046
  store i8 %inc42, i8* %num_copy_sections, align 1, !dbg !9046
  %idxprom43 = zext i8 %49 to i64, !dbg !9047
  %arrayidx44 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom43, !dbg !9047
  store i8 %conv41, i8* %arrayidx44, align 1, !dbg !9048
  store i32 1, i32* %ch, align 4, !dbg !9049
  br label %for.cond45, !dbg !9051

for.cond45:                                       ; preds = %for.inc211, %for.end38
  %50 = load i32, i32* %ch, align 4, !dbg !9052
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9055
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 70, !dbg !9056
  %52 = load i32, i32* %fbw_channels, align 4, !dbg !9056
  %cmp46 = icmp sle i32 %50, %52, !dbg !9057
  br i1 %cmp46, label %for.body48, label %for.end213, !dbg !9058

for.body48:                                       ; preds = %for.cond45
  %53 = load i32, i32* %ch, align 4, !dbg !9059
  %idxprom49 = sext i32 %53 to i64, !dbg !9062
  %54 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9062
  %channel_uses_spx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %54, i32 0, i32 57, !dbg !9063
  %arrayidx50 = getelementptr inbounds [7 x i8], [7 x i8]* %channel_uses_spx, i64 0, i64 %idxprom49, !dbg !9062
  %55 = load i8, i8* %arrayidx50, align 1, !dbg !9062
  %tobool = icmp ne i8 %55, 0, !dbg !9062
  br i1 %tobool, label %if.end52, label %if.then51, !dbg !9064

if.then51:                                        ; preds = %for.body48
  br label %for.inc211, !dbg !9065

if.end52:                                         ; preds = %for.body48
  %56 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9066
  %spx_src_start_freq53 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %56, i32 0, i32 59, !dbg !9067
  %57 = load i32, i32* %spx_src_start_freq53, align 4, !dbg !9067
  store i32 %57, i32* %bin, align 4, !dbg !9068
  store i32 0, i32* %i, align 4, !dbg !9069
  br label %for.cond54, !dbg !9071

for.cond54:                                       ; preds = %for.inc76, %if.end52
  %58 = load i32, i32* %i, align 4, !dbg !9072
  %59 = load i8, i8* %num_copy_sections, align 1, !dbg !9075
  %conv55 = zext i8 %59 to i32, !dbg !9075
  %cmp56 = icmp slt i32 %58, %conv55, !dbg !9076
  br i1 %cmp56, label %for.body58, label %for.end78, !dbg !9077

for.body58:                                       ; preds = %for.cond54
  %60 = load i32, i32* %bin, align 4, !dbg !9078
  %idxprom59 = sext i32 %60 to i64, !dbg !9080
  %61 = load i32, i32* %ch, align 4, !dbg !9081
  %idxprom60 = sext i32 %61 to i64, !dbg !9080
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9080
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 119, !dbg !9082
  %arrayidx61 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs, i64 0, i64 %idxprom60, !dbg !9080
  %arrayidx62 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx61, i64 0, i64 %idxprom59, !dbg !9080
  %63 = bitcast float* %arrayidx62 to i8*, !dbg !9083
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9084
  %spx_dst_start_freq63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 61, !dbg !9085
  %65 = load i32, i32* %spx_dst_start_freq63, align 4, !dbg !9085
  %idxprom64 = sext i32 %65 to i64, !dbg !9086
  %66 = load i32, i32* %ch, align 4, !dbg !9087
  %idxprom65 = sext i32 %66 to i64, !dbg !9086
  %67 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9086
  %transform_coeffs66 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %67, i32 0, i32 119, !dbg !9088
  %arrayidx67 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs66, i64 0, i64 %idxprom65, !dbg !9086
  %arrayidx68 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx67, i64 0, i64 %idxprom64, !dbg !9086
  %68 = bitcast float* %arrayidx68 to i8*, !dbg !9083
  %69 = load i32, i32* %i, align 4, !dbg !9089
  %idxprom69 = sext i32 %69 to i64, !dbg !9090
  %arrayidx70 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom69, !dbg !9090
  %70 = load i8, i8* %arrayidx70, align 1, !dbg !9090
  %conv71 = zext i8 %70 to i64, !dbg !9090
  %mul = mul i64 %conv71, 4, !dbg !9091
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %68, i64 %mul, i32 4, i1 false), !dbg !9083
  %71 = load i32, i32* %i, align 4, !dbg !9092
  %idxprom72 = sext i32 %71 to i64, !dbg !9093
  %arrayidx73 = getelementptr inbounds [17 x i8], [17 x i8]* %copy_sizes, i64 0, i64 %idxprom72, !dbg !9093
  %72 = load i8, i8* %arrayidx73, align 1, !dbg !9093
  %conv74 = zext i8 %72 to i32, !dbg !9093
  %73 = load i32, i32* %bin, align 4, !dbg !9094
  %add75 = add nsw i32 %73, %conv74, !dbg !9094
  store i32 %add75, i32* %bin, align 4, !dbg !9094
  br label %for.inc76, !dbg !9095

for.inc76:                                        ; preds = %for.body58
  %74 = load i32, i32* %i, align 4, !dbg !9096
  %inc77 = add nsw i32 %74, 1, !dbg !9096
  store i32 %inc77, i32* %i, align 4, !dbg !9096
  br label %for.cond54, !dbg !9098, !llvm.loop !9099

for.end78:                                        ; preds = %for.cond54
  %75 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9101
  %spx_src_start_freq79 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %75, i32 0, i32 59, !dbg !9102
  %76 = load i32, i32* %spx_src_start_freq79, align 4, !dbg !9102
  store i32 %76, i32* %bin, align 4, !dbg !9103
  store i32 0, i32* %bnd, align 4, !dbg !9104
  br label %for.cond80, !dbg !9106

for.cond80:                                       ; preds = %for.inc108, %for.end78
  %77 = load i32, i32* %bnd, align 4, !dbg !9107
  %78 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9110
  %num_spx_bands81 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %78, i32 0, i32 62, !dbg !9111
  %79 = load i32, i32* %num_spx_bands81, align 32, !dbg !9111
  %cmp82 = icmp slt i32 %77, %79, !dbg !9112
  br i1 %cmp82, label %for.body84, label %for.end110, !dbg !9113

for.body84:                                       ; preds = %for.cond80
  call void @llvm.dbg.declare(metadata i32* %bandsize85, metadata !9114, metadata !1854), !dbg !9116
  %80 = load i32, i32* %bnd, align 4, !dbg !9117
  %idxprom86 = sext i32 %80 to i64, !dbg !9118
  %81 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9118
  %spx_band_sizes87 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %81, i32 0, i32 64, !dbg !9119
  %arrayidx88 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes87, i64 0, i64 %idxprom86, !dbg !9118
  %82 = load i8, i8* %arrayidx88, align 1, !dbg !9118
  %conv89 = zext i8 %82 to i32, !dbg !9118
  store i32 %conv89, i32* %bandsize85, align 4, !dbg !9116
  call void @llvm.dbg.declare(metadata float* %accum, metadata !9120, metadata !1854), !dbg !9121
  store float 0.000000e+00, float* %accum, align 4, !dbg !9121
  store i32 0, i32* %i, align 4, !dbg !9122
  br label %for.cond90, !dbg !9124

for.cond90:                                       ; preds = %for.inc102, %for.body84
  %83 = load i32, i32* %i, align 4, !dbg !9125
  %84 = load i32, i32* %bandsize85, align 4, !dbg !9128
  %cmp91 = icmp slt i32 %83, %84, !dbg !9129
  br i1 %cmp91, label %for.body93, label %for.end104, !dbg !9130

for.body93:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata float* %coeff, metadata !9131, metadata !1854), !dbg !9133
  %85 = load i32, i32* %bin, align 4, !dbg !9134
  %inc94 = add nsw i32 %85, 1, !dbg !9134
  store i32 %inc94, i32* %bin, align 4, !dbg !9134
  %idxprom95 = sext i32 %85 to i64, !dbg !9135
  %86 = load i32, i32* %ch, align 4, !dbg !9136
  %idxprom96 = sext i32 %86 to i64, !dbg !9135
  %87 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9135
  %transform_coeffs97 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %87, i32 0, i32 119, !dbg !9137
  %arrayidx98 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs97, i64 0, i64 %idxprom96, !dbg !9135
  %arrayidx99 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx98, i64 0, i64 %idxprom95, !dbg !9135
  %88 = load float, float* %arrayidx99, align 4, !dbg !9135
  store float %88, float* %coeff, align 4, !dbg !9133
  %89 = load float, float* %coeff, align 4, !dbg !9138
  %90 = load float, float* %coeff, align 4, !dbg !9139
  %mul100 = fmul float %89, %90, !dbg !9140
  %91 = load float, float* %accum, align 4, !dbg !9141
  %add101 = fadd float %91, %mul100, !dbg !9141
  store float %add101, float* %accum, align 4, !dbg !9141
  br label %for.inc102, !dbg !9142

for.inc102:                                       ; preds = %for.body93
  %92 = load i32, i32* %i, align 4, !dbg !9143
  %inc103 = add nsw i32 %92, 1, !dbg !9143
  store i32 %inc103, i32* %i, align 4, !dbg !9143
  br label %for.cond90, !dbg !9145, !llvm.loop !9146

for.end104:                                       ; preds = %for.cond90
  %93 = load float, float* %accum, align 4, !dbg !9148
  %94 = load i32, i32* %bandsize85, align 4, !dbg !9149
  %conv105 = sitofp i32 %94 to float, !dbg !9149
  %div = fdiv float %93, %conv105, !dbg !9150
  %call = call float @sqrtf(float %div) #11, !dbg !9151
  %95 = load i32, i32* %bnd, align 4, !dbg !9152
  %idxprom106 = sext i32 %95 to i64, !dbg !9153
  %arrayidx107 = getelementptr inbounds [17 x float], [17 x float]* %rms_energy, i64 0, i64 %idxprom106, !dbg !9153
  store float %call, float* %arrayidx107, align 4, !dbg !9154
  br label %for.inc108, !dbg !9155

for.inc108:                                       ; preds = %for.end104
  %96 = load i32, i32* %bnd, align 4, !dbg !9156
  %inc109 = add nsw i32 %96, 1, !dbg !9156
  store i32 %inc109, i32* %bnd, align 4, !dbg !9156
  br label %for.cond80, !dbg !9158, !llvm.loop !9159

for.end110:                                       ; preds = %for.cond80
  %97 = load i32, i32* %ch, align 4, !dbg !9161
  %idxprom111 = sext i32 %97 to i64, !dbg !9163
  %98 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9163
  %spx_atten_code = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %98, i32 0, i32 58, !dbg !9164
  %arrayidx112 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code, i64 0, i64 %idxprom111, !dbg !9163
  %99 = load i8, i8* %arrayidx112, align 1, !dbg !9163
  %conv113 = sext i8 %99 to i32, !dbg !9163
  %cmp114 = icmp sge i32 %conv113, 0, !dbg !9165
  br i1 %cmp114, label %if.then116, label %if.end162, !dbg !9166

if.then116:                                       ; preds = %for.end110
  call void @llvm.dbg.declare(metadata float** %atten_tab, metadata !9167, metadata !1854), !dbg !9169
  %100 = load i32, i32* %ch, align 4, !dbg !9170
  %idxprom117 = sext i32 %100 to i64, !dbg !9171
  %101 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9171
  %spx_atten_code118 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %101, i32 0, i32 58, !dbg !9172
  %arrayidx119 = getelementptr inbounds [7 x i8], [7 x i8]* %spx_atten_code118, i64 0, i64 %idxprom117, !dbg !9171
  %102 = load i8, i8* %arrayidx119, align 1, !dbg !9171
  %idxprom120 = sext i8 %102 to i64, !dbg !9173
  %arrayidx121 = getelementptr inbounds [32 x [3 x float]], [32 x [3 x float]]* @ff_eac3_spx_atten_tab, i64 0, i64 %idxprom120, !dbg !9173
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx121, i32 0, i32 0, !dbg !9173
  store float* %arraydecay, float** %atten_tab, align 8, !dbg !9169
  %103 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9174
  %spx_src_start_freq122 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %103, i32 0, i32 59, !dbg !9175
  %104 = load i32, i32* %spx_src_start_freq122, align 4, !dbg !9175
  %sub123 = sub nsw i32 %104, 2, !dbg !9176
  store i32 %sub123, i32* %bin, align 4, !dbg !9177
  store i32 0, i32* %bnd, align 4, !dbg !9178
  br label %for.cond124, !dbg !9180

for.cond124:                                      ; preds = %for.inc159, %if.then116
  %105 = load i32, i32* %bnd, align 4, !dbg !9181
  %106 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9184
  %num_spx_bands125 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %106, i32 0, i32 62, !dbg !9185
  %107 = load i32, i32* %num_spx_bands125, align 32, !dbg !9185
  %cmp126 = icmp slt i32 %105, %107, !dbg !9186
  br i1 %cmp126, label %for.body128, label %for.end161, !dbg !9187

for.body128:                                      ; preds = %for.cond124
  %108 = load i32, i32* %bnd, align 4, !dbg !9188
  %idxprom129 = sext i32 %108 to i64, !dbg !9191
  %arrayidx130 = getelementptr inbounds [17 x i8], [17 x i8]* %wrapflag, i64 0, i64 %idxprom129, !dbg !9191
  %109 = load i8, i8* %arrayidx130, align 1, !dbg !9191
  %tobool131 = icmp ne i8 %109, 0, !dbg !9191
  br i1 %tobool131, label %if.then132, label %if.end153, !dbg !9192

if.then132:                                       ; preds = %for.body128
  call void @llvm.dbg.declare(metadata float** %coeffs, metadata !9193, metadata !1854), !dbg !9195
  %110 = load i32, i32* %bin, align 4, !dbg !9196
  %idxprom133 = sext i32 %110 to i64, !dbg !9197
  %111 = load i32, i32* %ch, align 4, !dbg !9198
  %idxprom134 = sext i32 %111 to i64, !dbg !9197
  %112 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9197
  %transform_coeffs135 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %112, i32 0, i32 119, !dbg !9199
  %arrayidx136 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs135, i64 0, i64 %idxprom134, !dbg !9197
  %arrayidx137 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx136, i64 0, i64 %idxprom133, !dbg !9197
  store float* %arrayidx137, float** %coeffs, align 8, !dbg !9195
  %113 = load float*, float** %atten_tab, align 8, !dbg !9200
  %arrayidx138 = getelementptr inbounds float, float* %113, i64 0, !dbg !9200
  %114 = load float, float* %arrayidx138, align 4, !dbg !9200
  %115 = load float*, float** %coeffs, align 8, !dbg !9201
  %arrayidx139 = getelementptr inbounds float, float* %115, i64 0, !dbg !9201
  %116 = load float, float* %arrayidx139, align 4, !dbg !9202
  %mul140 = fmul float %116, %114, !dbg !9202
  store float %mul140, float* %arrayidx139, align 4, !dbg !9202
  %117 = load float*, float** %atten_tab, align 8, !dbg !9203
  %arrayidx141 = getelementptr inbounds float, float* %117, i64 1, !dbg !9203
  %118 = load float, float* %arrayidx141, align 4, !dbg !9203
  %119 = load float*, float** %coeffs, align 8, !dbg !9204
  %arrayidx142 = getelementptr inbounds float, float* %119, i64 1, !dbg !9204
  %120 = load float, float* %arrayidx142, align 4, !dbg !9205
  %mul143 = fmul float %120, %118, !dbg !9205
  store float %mul143, float* %arrayidx142, align 4, !dbg !9205
  %121 = load float*, float** %atten_tab, align 8, !dbg !9206
  %arrayidx144 = getelementptr inbounds float, float* %121, i64 2, !dbg !9206
  %122 = load float, float* %arrayidx144, align 4, !dbg !9206
  %123 = load float*, float** %coeffs, align 8, !dbg !9207
  %arrayidx145 = getelementptr inbounds float, float* %123, i64 2, !dbg !9207
  %124 = load float, float* %arrayidx145, align 4, !dbg !9208
  %mul146 = fmul float %124, %122, !dbg !9208
  store float %mul146, float* %arrayidx145, align 4, !dbg !9208
  %125 = load float*, float** %atten_tab, align 8, !dbg !9209
  %arrayidx147 = getelementptr inbounds float, float* %125, i64 1, !dbg !9209
  %126 = load float, float* %arrayidx147, align 4, !dbg !9209
  %127 = load float*, float** %coeffs, align 8, !dbg !9210
  %arrayidx148 = getelementptr inbounds float, float* %127, i64 3, !dbg !9210
  %128 = load float, float* %arrayidx148, align 4, !dbg !9211
  %mul149 = fmul float %128, %126, !dbg !9211
  store float %mul149, float* %arrayidx148, align 4, !dbg !9211
  %129 = load float*, float** %atten_tab, align 8, !dbg !9212
  %arrayidx150 = getelementptr inbounds float, float* %129, i64 0, !dbg !9212
  %130 = load float, float* %arrayidx150, align 4, !dbg !9212
  %131 = load float*, float** %coeffs, align 8, !dbg !9213
  %arrayidx151 = getelementptr inbounds float, float* %131, i64 4, !dbg !9213
  %132 = load float, float* %arrayidx151, align 4, !dbg !9214
  %mul152 = fmul float %132, %130, !dbg !9214
  store float %mul152, float* %arrayidx151, align 4, !dbg !9214
  br label %if.end153, !dbg !9215

if.end153:                                        ; preds = %if.then132, %for.body128
  %133 = load i32, i32* %bnd, align 4, !dbg !9216
  %idxprom154 = sext i32 %133 to i64, !dbg !9217
  %134 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9217
  %spx_band_sizes155 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %134, i32 0, i32 64, !dbg !9218
  %arrayidx156 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes155, i64 0, i64 %idxprom154, !dbg !9217
  %135 = load i8, i8* %arrayidx156, align 1, !dbg !9217
  %conv157 = zext i8 %135 to i32, !dbg !9217
  %136 = load i32, i32* %bin, align 4, !dbg !9219
  %add158 = add nsw i32 %136, %conv157, !dbg !9219
  store i32 %add158, i32* %bin, align 4, !dbg !9219
  br label %for.inc159, !dbg !9220

for.inc159:                                       ; preds = %if.end153
  %137 = load i32, i32* %bnd, align 4, !dbg !9221
  %inc160 = add nsw i32 %137, 1, !dbg !9221
  store i32 %inc160, i32* %bnd, align 4, !dbg !9221
  br label %for.cond124, !dbg !9223, !llvm.loop !9224

for.end161:                                       ; preds = %for.cond124
  br label %if.end162, !dbg !9226

if.end162:                                        ; preds = %for.end161, %for.end110
  %138 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9227
  %spx_src_start_freq163 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %138, i32 0, i32 59, !dbg !9228
  %139 = load i32, i32* %spx_src_start_freq163, align 4, !dbg !9228
  store i32 %139, i32* %bin, align 4, !dbg !9229
  store i32 0, i32* %bnd, align 4, !dbg !9230
  br label %for.cond164, !dbg !9232

for.cond164:                                      ; preds = %for.inc208, %if.end162
  %140 = load i32, i32* %bnd, align 4, !dbg !9233
  %141 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9236
  %num_spx_bands165 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %141, i32 0, i32 62, !dbg !9237
  %142 = load i32, i32* %num_spx_bands165, align 32, !dbg !9237
  %cmp166 = icmp slt i32 %140, %142, !dbg !9238
  br i1 %cmp166, label %for.body168, label %for.end210, !dbg !9239

for.body168:                                      ; preds = %for.cond164
  call void @llvm.dbg.declare(metadata float* %nscale, metadata !9240, metadata !1854), !dbg !9242
  %143 = load i32, i32* %bnd, align 4, !dbg !9243
  %idxprom169 = sext i32 %143 to i64, !dbg !9244
  %144 = load i32, i32* %ch, align 4, !dbg !9245
  %idxprom170 = sext i32 %144 to i64, !dbg !9244
  %145 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9244
  %spx_noise_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %145, i32 0, i32 66, !dbg !9246
  %arrayidx171 = getelementptr inbounds [7 x [17 x float]], [7 x [17 x float]]* %spx_noise_blend, i64 0, i64 %idxprom170, !dbg !9244
  %arrayidx172 = getelementptr inbounds [17 x float], [17 x float]* %arrayidx171, i64 0, i64 %idxprom169, !dbg !9244
  %146 = load float, float* %arrayidx172, align 4, !dbg !9244
  %147 = load i32, i32* %bnd, align 4, !dbg !9247
  %idxprom173 = sext i32 %147 to i64, !dbg !9248
  %arrayidx174 = getelementptr inbounds [17 x float], [17 x float]* %rms_energy, i64 0, i64 %idxprom173, !dbg !9248
  %148 = load float, float* %arrayidx174, align 4, !dbg !9248
  %mul175 = fmul float %146, %148, !dbg !9249
  %mul176 = fmul float %mul175, 0xBE00000000000000, !dbg !9250
  store float %mul176, float* %nscale, align 4, !dbg !9242
  call void @llvm.dbg.declare(metadata float* %sscale, metadata !9251, metadata !1854), !dbg !9252
  %149 = load i32, i32* %bnd, align 4, !dbg !9253
  %idxprom177 = sext i32 %149 to i64, !dbg !9254
  %150 = load i32, i32* %ch, align 4, !dbg !9255
  %idxprom178 = sext i32 %150 to i64, !dbg !9254
  %151 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9254
  %spx_signal_blend = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %151, i32 0, i32 67, !dbg !9256
  %arrayidx179 = getelementptr inbounds [7 x [17 x float]], [7 x [17 x float]]* %spx_signal_blend, i64 0, i64 %idxprom178, !dbg !9254
  %arrayidx180 = getelementptr inbounds [17 x float], [17 x float]* %arrayidx179, i64 0, i64 %idxprom177, !dbg !9254
  %152 = load float, float* %arrayidx180, align 4, !dbg !9254
  store float %152, float* %sscale, align 4, !dbg !9252
  store i32 0, i32* %i, align 4, !dbg !9257
  br label %for.cond181, !dbg !9259

for.cond181:                                      ; preds = %for.inc205, %for.body168
  %153 = load i32, i32* %i, align 4, !dbg !9260
  %154 = load i32, i32* %bnd, align 4, !dbg !9263
  %idxprom182 = sext i32 %154 to i64, !dbg !9264
  %155 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9264
  %spx_band_sizes183 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %155, i32 0, i32 64, !dbg !9265
  %arrayidx184 = getelementptr inbounds [17 x i8], [17 x i8]* %spx_band_sizes183, i64 0, i64 %idxprom182, !dbg !9264
  %156 = load i8, i8* %arrayidx184, align 1, !dbg !9264
  %conv185 = zext i8 %156 to i32, !dbg !9264
  %cmp186 = icmp slt i32 %153, %conv185, !dbg !9266
  br i1 %cmp186, label %for.body188, label %for.end207, !dbg !9267

for.body188:                                      ; preds = %for.cond181
  call void @llvm.dbg.declare(metadata float* %noise, metadata !9268, metadata !1854), !dbg !9270
  %157 = load float, float* %nscale, align 4, !dbg !9271
  %158 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9272
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %158, i32 0, i32 105, !dbg !9273
  %call189 = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !9274
  %conv190 = sitofp i32 %call189 to float, !dbg !9275
  %mul191 = fmul float %157, %conv190, !dbg !9276
  store float %mul191, float* %noise, align 4, !dbg !9270
  %159 = load float, float* %sscale, align 4, !dbg !9277
  %160 = load i32, i32* %bin, align 4, !dbg !9278
  %idxprom192 = sext i32 %160 to i64, !dbg !9279
  %161 = load i32, i32* %ch, align 4, !dbg !9280
  %idxprom193 = sext i32 %161 to i64, !dbg !9279
  %162 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9279
  %transform_coeffs194 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %162, i32 0, i32 119, !dbg !9281
  %arrayidx195 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs194, i64 0, i64 %idxprom193, !dbg !9279
  %arrayidx196 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx195, i64 0, i64 %idxprom192, !dbg !9279
  %163 = load float, float* %arrayidx196, align 4, !dbg !9282
  %mul197 = fmul float %163, %159, !dbg !9282
  store float %mul197, float* %arrayidx196, align 4, !dbg !9282
  %164 = load float, float* %noise, align 4, !dbg !9283
  %165 = load i32, i32* %bin, align 4, !dbg !9284
  %inc198 = add nsw i32 %165, 1, !dbg !9284
  store i32 %inc198, i32* %bin, align 4, !dbg !9284
  %idxprom199 = sext i32 %165 to i64, !dbg !9285
  %166 = load i32, i32* %ch, align 4, !dbg !9286
  %idxprom200 = sext i32 %166 to i64, !dbg !9285
  %167 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9285
  %transform_coeffs201 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %167, i32 0, i32 119, !dbg !9287
  %arrayidx202 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs201, i64 0, i64 %idxprom200, !dbg !9285
  %arrayidx203 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx202, i64 0, i64 %idxprom199, !dbg !9285
  %168 = load float, float* %arrayidx203, align 4, !dbg !9288
  %add204 = fadd float %168, %164, !dbg !9288
  store float %add204, float* %arrayidx203, align 4, !dbg !9288
  br label %for.inc205, !dbg !9289

for.inc205:                                       ; preds = %for.body188
  %169 = load i32, i32* %i, align 4, !dbg !9290
  %inc206 = add nsw i32 %169, 1, !dbg !9290
  store i32 %inc206, i32* %i, align 4, !dbg !9290
  br label %for.cond181, !dbg !9292, !llvm.loop !9293

for.end207:                                       ; preds = %for.cond181
  br label %for.inc208, !dbg !9295

for.inc208:                                       ; preds = %for.end207
  %170 = load i32, i32* %bnd, align 4, !dbg !9296
  %inc209 = add nsw i32 %170, 1, !dbg !9296
  store i32 %inc209, i32* %bnd, align 4, !dbg !9296
  br label %for.cond164, !dbg !9298, !llvm.loop !9299

for.end210:                                       ; preds = %for.cond164
  br label %for.inc211, !dbg !9301

for.inc211:                                       ; preds = %for.end210, %if.then51
  %171 = load i32, i32* %ch, align 4, !dbg !9302
  %inc212 = add nsw i32 %171, 1, !dbg !9302
  store i32 %inc212, i32* %ch, align 4, !dbg !9302
  br label %for.cond45, !dbg !9304, !llvm.loop !9305

for.end213:                                       ; preds = %for.cond45
  ret void, !dbg !9307
}

; Function Attrs: nounwind uwtable
define internal void @ac3_upmix_delay(%struct.AC3DecodeContext* %s) #1 !dbg !9308 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %channel_data_size = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9309, metadata !1854), !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %channel_data_size, metadata !9311, metadata !1854), !dbg !9312
  store i32 1024, i32* %channel_data_size, align 4, !dbg !9312
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9313
  %channel_mode = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 12, !dbg !9314
  %1 = load i32, i32* %channel_mode, align 4, !dbg !9314
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 6, label %sw.bb4
    i32 4, label %sw.bb9
    i32 7, label %sw.bb14
    i32 5, label %sw.bb19
    i32 3, label %sw.bb24
  ], !dbg !9315

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9316
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %2, i32 0, i32 120, !dbg !9318
  %arrayidx = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay, i64 0, i64 1, !dbg !9316
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %arrayidx, i32 0, i32 0, !dbg !9319
  %3 = bitcast float* %arraydecay to i8*, !dbg !9319
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9320
  %delay1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 120, !dbg !9321
  %arrayidx2 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay1, i64 0, i64 0, !dbg !9320
  %arraydecay3 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx2, i32 0, i32 0, !dbg !9319
  %5 = bitcast float* %arraydecay3 to i8*, !dbg !9319
  %6 = load i32, i32* %channel_data_size, align 4, !dbg !9322
  %conv = sext i32 %6 to i64, !dbg !9322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %5, i64 %conv, i32 32, i1 false), !dbg !9319
  br label %sw.epilog, !dbg !9323

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9324
  %delay5 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 120, !dbg !9325
  %arrayidx6 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay5, i64 0, i64 3, !dbg !9324
  %arraydecay7 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx6, i32 0, i32 0, !dbg !9326
  %8 = bitcast float* %arraydecay7 to i8*, !dbg !9326
  %9 = load i32, i32* %channel_data_size, align 4, !dbg !9327
  %conv8 = sext i32 %9 to i64, !dbg !9327
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %conv8, i32 32, i1 false), !dbg !9326
  br label %sw.bb9, !dbg !9326

sw.bb9:                                           ; preds = %entry, %sw.bb4
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9328
  %delay10 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 120, !dbg !9329
  %arrayidx11 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay10, i64 0, i64 2, !dbg !9328
  %arraydecay12 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx11, i32 0, i32 0, !dbg !9330
  %11 = bitcast float* %arraydecay12 to i8*, !dbg !9330
  %12 = load i32, i32* %channel_data_size, align 4, !dbg !9331
  %conv13 = sext i32 %12 to i64, !dbg !9331
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %conv13, i32 32, i1 false), !dbg !9330
  br label %sw.epilog, !dbg !9332

sw.bb14:                                          ; preds = %entry
  %13 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9333
  %delay15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %13, i32 0, i32 120, !dbg !9334
  %arrayidx16 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay15, i64 0, i64 4, !dbg !9333
  %arraydecay17 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx16, i32 0, i32 0, !dbg !9335
  %14 = bitcast float* %arraydecay17 to i8*, !dbg !9335
  %15 = load i32, i32* %channel_data_size, align 4, !dbg !9336
  %conv18 = sext i32 %15 to i64, !dbg !9336
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %conv18, i32 32, i1 false), !dbg !9335
  br label %sw.bb19, !dbg !9335

sw.bb19:                                          ; preds = %entry, %sw.bb14
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9337
  %delay20 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 120, !dbg !9338
  %arrayidx21 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay20, i64 0, i64 3, !dbg !9337
  %arraydecay22 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx21, i32 0, i32 0, !dbg !9339
  %17 = bitcast float* %arraydecay22 to i8*, !dbg !9339
  %18 = load i32, i32* %channel_data_size, align 4, !dbg !9340
  %conv23 = sext i32 %18 to i64, !dbg !9340
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 %conv23, i32 32, i1 false), !dbg !9339
  br label %sw.bb24, !dbg !9339

sw.bb24:                                          ; preds = %entry, %sw.bb19
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9341
  %delay25 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 120, !dbg !9342
  %arrayidx26 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay25, i64 0, i64 2, !dbg !9341
  %arraydecay27 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx26, i32 0, i32 0, !dbg !9343
  %20 = bitcast float* %arraydecay27 to i8*, !dbg !9343
  %21 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9344
  %delay28 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %21, i32 0, i32 120, !dbg !9345
  %arrayidx29 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay28, i64 0, i64 1, !dbg !9344
  %arraydecay30 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx29, i32 0, i32 0, !dbg !9343
  %22 = bitcast float* %arraydecay30 to i8*, !dbg !9343
  %23 = load i32, i32* %channel_data_size, align 4, !dbg !9346
  %conv31 = sext i32 %23 to i64, !dbg !9346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 %conv31, i32 32, i1 false), !dbg !9343
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9347
  %delay32 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 120, !dbg !9348
  %arrayidx33 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay32, i64 0, i64 1, !dbg !9347
  %arraydecay34 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx33, i32 0, i32 0, !dbg !9349
  %25 = bitcast float* %arraydecay34 to i8*, !dbg !9349
  %26 = load i32, i32* %channel_data_size, align 4, !dbg !9350
  %conv35 = sext i32 %26 to i64, !dbg !9350
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 %conv35, i32 32, i1 false), !dbg !9349
  br label %sw.epilog, !dbg !9351

sw.epilog:                                        ; preds = %entry, %sw.bb24, %sw.bb9, %sw.bb
  ret void, !dbg !9352
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @do_imdct(%struct.AC3DecodeContext* %s, i32 %channels, i32 %offset) #4 !dbg !9353 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %channels.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca float*, align 8
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9356, metadata !1854), !dbg !9357
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !9358, metadata !1854), !dbg !9359
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9360, metadata !1854), !dbg !9361
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9362, metadata !1854), !dbg !9363
  store i32 1, i32* %ch, align 4, !dbg !9364
  br label %for.cond, !dbg !9366

for.cond:                                         ; preds = %for.inc79, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !9367
  %1 = load i32, i32* %channels.addr, align 4, !dbg !9370
  %cmp = icmp sle i32 %0, %1, !dbg !9371
  br i1 %cmp, label %for.body, label %for.end81, !dbg !9372

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch, align 4, !dbg !9373
  %idxprom = sext i32 %2 to i64, !dbg !9376
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9376
  %block_switch = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 106, !dbg !9377
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %block_switch, i64 0, i64 %idxprom, !dbg !9376
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9376
  %tobool = icmp ne i32 %4, 0, !dbg !9376
  br i1 %tobool, label %if.then, label %if.else, !dbg !9378

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9379, metadata !1854), !dbg !9381
  call void @llvm.dbg.declare(metadata float** %x, metadata !9382, metadata !1854), !dbg !9383
  %5 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9384
  %tmp_output = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %5, i32 0, i32 122, !dbg !9385
  %arraydecay = getelementptr inbounds [256 x float], [256 x float]* %tmp_output, i32 0, i32 0, !dbg !9384
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 128, !dbg !9386
  store float* %add.ptr, float** %x, align 8, !dbg !9383
  store i32 0, i32* %i, align 4, !dbg !9387
  br label %for.cond1, !dbg !9389

for.cond1:                                        ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !9390
  %cmp2 = icmp slt i32 %6, 128, !dbg !9393
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !9394

for.body3:                                        ; preds = %for.cond1
  %7 = load i32, i32* %i, align 4, !dbg !9395
  %mul = mul nsw i32 2, %7, !dbg !9396
  %idxprom4 = sext i32 %mul to i64, !dbg !9397
  %8 = load i32, i32* %ch, align 4, !dbg !9398
  %idxprom5 = sext i32 %8 to i64, !dbg !9397
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9397
  %transform_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 119, !dbg !9399
  %arrayidx6 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs, i64 0, i64 %idxprom5, !dbg !9397
  %arrayidx7 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !9397
  %10 = load float, float* %arrayidx7, align 4, !dbg !9397
  %11 = load i32, i32* %i, align 4, !dbg !9400
  %idxprom8 = sext i32 %11 to i64, !dbg !9401
  %12 = load float*, float** %x, align 8, !dbg !9401
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 %idxprom8, !dbg !9401
  store float %10, float* %arrayidx9, align 4, !dbg !9402
  br label %for.inc, !dbg !9401

for.inc:                                          ; preds = %for.body3
  %13 = load i32, i32* %i, align 4, !dbg !9403
  %inc = add nsw i32 %13, 1, !dbg !9403
  store i32 %inc, i32* %i, align 4, !dbg !9403
  br label %for.cond1, !dbg !9405, !llvm.loop !9406

for.end:                                          ; preds = %for.cond1
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9408
  %imdct_256 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 108, !dbg !9409
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_256, i32 0, i32 11, !dbg !9410
  %15 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !9410
  %16 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9411
  %imdct_25610 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %16, i32 0, i32 108, !dbg !9412
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9413
  %tmp_output11 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 122, !dbg !9414
  %arraydecay12 = getelementptr inbounds [256 x float], [256 x float]* %tmp_output11, i32 0, i32 0, !dbg !9413
  %18 = load float*, float** %x, align 8, !dbg !9415
  call void %15(%struct.FFTContext* %imdct_25610, float* %arraydecay12, float* %18), !dbg !9408
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9416
  %fdsp = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 110, !dbg !9417
  %20 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !9417
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %20, i32 0, i32 5, !dbg !9418
  %21 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !9418
  %22 = load i32, i32* %ch, align 4, !dbg !9419
  %sub = sub nsw i32 %22, 1, !dbg !9420
  %idxprom13 = sext i32 %sub to i64, !dbg !9421
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9421
  %outptr = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 113, !dbg !9422
  %arrayidx14 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr, i64 0, i64 %idxprom13, !dbg !9421
  %24 = load float*, float** %arrayidx14, align 8, !dbg !9421
  %25 = load i32, i32* %ch, align 4, !dbg !9423
  %sub15 = sub nsw i32 %25, 1, !dbg !9424
  %26 = load i32, i32* %offset.addr, align 4, !dbg !9425
  %add = add nsw i32 %sub15, %26, !dbg !9426
  %idxprom16 = sext i32 %add to i64, !dbg !9427
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9427
  %delay = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 120, !dbg !9428
  %arrayidx17 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay, i64 0, i64 %idxprom16, !dbg !9427
  %arraydecay18 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx17, i32 0, i32 0, !dbg !9427
  %28 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9429
  %tmp_output19 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %28, i32 0, i32 122, !dbg !9430
  %arraydecay20 = getelementptr inbounds [256 x float], [256 x float]* %tmp_output19, i32 0, i32 0, !dbg !9429
  %29 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9431
  %window = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %29, i32 0, i32 121, !dbg !9432
  %arraydecay21 = getelementptr inbounds [256 x float], [256 x float]* %window, i32 0, i32 0, !dbg !9431
  call void %21(float* %24, float* %arraydecay18, float* %arraydecay20, float* %arraydecay21, i32 128), !dbg !9416
  store i32 0, i32* %i, align 4, !dbg !9433
  br label %for.cond22, !dbg !9435

for.cond22:                                       ; preds = %for.inc34, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !9436
  %cmp23 = icmp slt i32 %30, 128, !dbg !9439
  br i1 %cmp23, label %for.body24, label %for.end36, !dbg !9440

for.body24:                                       ; preds = %for.cond22
  %31 = load i32, i32* %i, align 4, !dbg !9441
  %mul25 = mul nsw i32 2, %31, !dbg !9442
  %add26 = add nsw i32 %mul25, 1, !dbg !9443
  %idxprom27 = sext i32 %add26 to i64, !dbg !9444
  %32 = load i32, i32* %ch, align 4, !dbg !9445
  %idxprom28 = sext i32 %32 to i64, !dbg !9444
  %33 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9444
  %transform_coeffs29 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %33, i32 0, i32 119, !dbg !9446
  %arrayidx30 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs29, i64 0, i64 %idxprom28, !dbg !9444
  %arrayidx31 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx30, i64 0, i64 %idxprom27, !dbg !9444
  %34 = load float, float* %arrayidx31, align 4, !dbg !9444
  %35 = load i32, i32* %i, align 4, !dbg !9447
  %idxprom32 = sext i32 %35 to i64, !dbg !9448
  %36 = load float*, float** %x, align 8, !dbg !9448
  %arrayidx33 = getelementptr inbounds float, float* %36, i64 %idxprom32, !dbg !9448
  store float %34, float* %arrayidx33, align 4, !dbg !9449
  br label %for.inc34, !dbg !9448

for.inc34:                                        ; preds = %for.body24
  %37 = load i32, i32* %i, align 4, !dbg !9450
  %inc35 = add nsw i32 %37, 1, !dbg !9450
  store i32 %inc35, i32* %i, align 4, !dbg !9450
  br label %for.cond22, !dbg !9452, !llvm.loop !9453

for.end36:                                        ; preds = %for.cond22
  %38 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9455
  %imdct_25637 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %38, i32 0, i32 108, !dbg !9456
  %imdct_half38 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_25637, i32 0, i32 11, !dbg !9457
  %39 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half38, align 8, !dbg !9457
  %40 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9458
  %imdct_25639 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %40, i32 0, i32 108, !dbg !9459
  %41 = load i32, i32* %ch, align 4, !dbg !9460
  %sub40 = sub nsw i32 %41, 1, !dbg !9461
  %42 = load i32, i32* %offset.addr, align 4, !dbg !9462
  %add41 = add nsw i32 %sub40, %42, !dbg !9463
  %idxprom42 = sext i32 %add41 to i64, !dbg !9464
  %43 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9464
  %delay43 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %43, i32 0, i32 120, !dbg !9465
  %arrayidx44 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay43, i64 0, i64 %idxprom42, !dbg !9464
  %arraydecay45 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx44, i32 0, i32 0, !dbg !9464
  %44 = load float*, float** %x, align 8, !dbg !9466
  call void %39(%struct.FFTContext* %imdct_25639, float* %arraydecay45, float* %44), !dbg !9455
  br label %if.end, !dbg !9467

if.else:                                          ; preds = %for.body
  %45 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9468
  %imdct_512 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %45, i32 0, i32 107, !dbg !9470
  %imdct_half46 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct_512, i32 0, i32 11, !dbg !9471
  %46 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half46, align 8, !dbg !9471
  %47 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9472
  %imdct_51247 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %47, i32 0, i32 107, !dbg !9473
  %48 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9474
  %tmp_output48 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %48, i32 0, i32 122, !dbg !9475
  %arraydecay49 = getelementptr inbounds [256 x float], [256 x float]* %tmp_output48, i32 0, i32 0, !dbg !9474
  %49 = load i32, i32* %ch, align 4, !dbg !9476
  %idxprom50 = sext i32 %49 to i64, !dbg !9477
  %50 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9477
  %transform_coeffs51 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %50, i32 0, i32 119, !dbg !9478
  %arrayidx52 = getelementptr inbounds [7 x [256 x float]], [7 x [256 x float]]* %transform_coeffs51, i64 0, i64 %idxprom50, !dbg !9477
  %arraydecay53 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx52, i32 0, i32 0, !dbg !9477
  call void %46(%struct.FFTContext* %imdct_51247, float* %arraydecay49, float* %arraydecay53), !dbg !9468
  %51 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9479
  %fdsp54 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %51, i32 0, i32 110, !dbg !9480
  %52 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp54, align 8, !dbg !9480
  %vector_fmul_window55 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %52, i32 0, i32 5, !dbg !9481
  %53 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window55, align 8, !dbg !9481
  %54 = load i32, i32* %ch, align 4, !dbg !9482
  %sub56 = sub nsw i32 %54, 1, !dbg !9483
  %idxprom57 = sext i32 %sub56 to i64, !dbg !9484
  %55 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9484
  %outptr58 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %55, i32 0, i32 113, !dbg !9485
  %arrayidx59 = getelementptr inbounds [7 x float*], [7 x float*]* %outptr58, i64 0, i64 %idxprom57, !dbg !9484
  %56 = load float*, float** %arrayidx59, align 8, !dbg !9484
  %57 = load i32, i32* %ch, align 4, !dbg !9486
  %sub60 = sub nsw i32 %57, 1, !dbg !9487
  %58 = load i32, i32* %offset.addr, align 4, !dbg !9488
  %add61 = add nsw i32 %sub60, %58, !dbg !9489
  %idxprom62 = sext i32 %add61 to i64, !dbg !9490
  %59 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9490
  %delay63 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %59, i32 0, i32 120, !dbg !9491
  %arrayidx64 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay63, i64 0, i64 %idxprom62, !dbg !9490
  %arraydecay65 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx64, i32 0, i32 0, !dbg !9490
  %60 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9492
  %tmp_output66 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %60, i32 0, i32 122, !dbg !9493
  %arraydecay67 = getelementptr inbounds [256 x float], [256 x float]* %tmp_output66, i32 0, i32 0, !dbg !9492
  %61 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9494
  %window68 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %61, i32 0, i32 121, !dbg !9495
  %arraydecay69 = getelementptr inbounds [256 x float], [256 x float]* %window68, i32 0, i32 0, !dbg !9494
  call void %53(float* %56, float* %arraydecay65, float* %arraydecay67, float* %arraydecay69, i32 128), !dbg !9479
  %62 = load i32, i32* %ch, align 4, !dbg !9496
  %sub70 = sub nsw i32 %62, 1, !dbg !9497
  %63 = load i32, i32* %offset.addr, align 4, !dbg !9498
  %add71 = add nsw i32 %sub70, %63, !dbg !9499
  %idxprom72 = sext i32 %add71 to i64, !dbg !9500
  %64 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9500
  %delay73 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %64, i32 0, i32 120, !dbg !9501
  %arrayidx74 = getelementptr inbounds [16 x [256 x float]], [16 x [256 x float]]* %delay73, i64 0, i64 %idxprom72, !dbg !9500
  %arraydecay75 = getelementptr inbounds [256 x float], [256 x float]* %arrayidx74, i32 0, i32 0, !dbg !9502
  %65 = bitcast float* %arraydecay75 to i8*, !dbg !9502
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9503
  %tmp_output76 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 122, !dbg !9504
  %arraydecay77 = getelementptr inbounds [256 x float], [256 x float]* %tmp_output76, i32 0, i32 0, !dbg !9503
  %add.ptr78 = getelementptr inbounds float, float* %arraydecay77, i64 128, !dbg !9505
  %67 = bitcast float* %add.ptr78 to i8*, !dbg !9502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %67, i64 512, i32 4, i1 false), !dbg !9502
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end36
  br label %for.inc79, !dbg !9506

for.inc79:                                        ; preds = %if.end
  %68 = load i32, i32* %ch, align 4, !dbg !9507
  %inc80 = add nsw i32 %68, 1, !dbg !9507
  store i32 %inc80, i32* %ch, align 4, !dbg !9507
  br label %for.cond, !dbg !9509, !llvm.loop !9510

for.end81:                                        ; preds = %for.cond
  ret void, !dbg !9512
}

declare void @ff_ac3dsp_downmix(%struct.AC3DSPContext*, float**, float**, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @decode_band_structure(%struct.GetBitContext* %gbc, i32 %blk, i32 %eac3, i32 %ecpl, i32 %start_subband, i32 %end_subband, i8* %default_band_struct, i32* %num_bands, i8* %band_sizes, i8* %band_struct, i32 %band_struct_size) #1 !dbg !9513 {
entry:
  %gbc.addr = alloca %struct.GetBitContext*, align 8
  %blk.addr = alloca i32, align 4
  %eac3.addr = alloca i32, align 4
  %ecpl.addr = alloca i32, align 4
  %start_subband.addr = alloca i32, align 4
  %end_subband.addr = alloca i32, align 4
  %default_band_struct.addr = alloca i8*, align 8
  %num_bands.addr = alloca i32*, align 8
  %band_sizes.addr = alloca i8*, align 8
  %band_struct.addr = alloca i8*, align 8
  %band_struct_size.addr = alloca i32, align 4
  %subbnd = alloca i32, align 4
  %bnd = alloca i32, align 4
  %n_subbands = alloca i32, align 4
  %n_bands = alloca i32, align 4
  %bnd_sz = alloca [22 x i8], align 16
  %subbnd_size = alloca i32, align 4
  store %struct.GetBitContext* %gbc, %struct.GetBitContext** %gbc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc.addr, metadata !9516, metadata !1854), !dbg !9517
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !9518, metadata !1854), !dbg !9519
  store i32 %eac3, i32* %eac3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eac3.addr, metadata !9520, metadata !1854), !dbg !9521
  store i32 %ecpl, i32* %ecpl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ecpl.addr, metadata !9522, metadata !1854), !dbg !9523
  store i32 %start_subband, i32* %start_subband.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_subband.addr, metadata !9524, metadata !1854), !dbg !9525
  store i32 %end_subband, i32* %end_subband.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_subband.addr, metadata !9526, metadata !1854), !dbg !9527
  store i8* %default_band_struct, i8** %default_band_struct.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %default_band_struct.addr, metadata !9528, metadata !1854), !dbg !9529
  store i32* %num_bands, i32** %num_bands.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_bands.addr, metadata !9530, metadata !1854), !dbg !9531
  store i8* %band_sizes, i8** %band_sizes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %band_sizes.addr, metadata !9532, metadata !1854), !dbg !9533
  store i8* %band_struct, i8** %band_struct.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %band_struct.addr, metadata !9534, metadata !1854), !dbg !9535
  store i32 %band_struct_size, i32* %band_struct_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band_struct_size.addr, metadata !9536, metadata !1854), !dbg !9537
  call void @llvm.dbg.declare(metadata i32* %subbnd, metadata !9538, metadata !1854), !dbg !9539
  call void @llvm.dbg.declare(metadata i32* %bnd, metadata !9540, metadata !1854), !dbg !9541
  call void @llvm.dbg.declare(metadata i32* %n_subbands, metadata !9542, metadata !1854), !dbg !9543
  call void @llvm.dbg.declare(metadata i32* %n_bands, metadata !9544, metadata !1854), !dbg !9545
  store i32 0, i32* %n_bands, align 4, !dbg !9545
  call void @llvm.dbg.declare(metadata [22 x i8]* %bnd_sz, metadata !9546, metadata !1854), !dbg !9550
  %0 = load i32, i32* %end_subband.addr, align 4, !dbg !9551
  %1 = load i32, i32* %start_subband.addr, align 4, !dbg !9552
  %sub = sub nsw i32 %0, %1, !dbg !9553
  store i32 %sub, i32* %n_subbands, align 4, !dbg !9554
  %2 = load i32, i32* %blk.addr, align 4, !dbg !9555
  %tobool = icmp ne i32 %2, 0, !dbg !9555
  br i1 %tobool, label %if.end, label %if.then, !dbg !9557

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %band_struct.addr, align 8, !dbg !9558
  %4 = load i8*, i8** %default_band_struct.addr, align 8, !dbg !9559
  %5 = load i32, i32* %band_struct_size.addr, align 4, !dbg !9560
  %conv = sext i32 %5 to i64, !dbg !9560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 %conv, i32 1, i1 false), !dbg !9561
  br label %if.end, !dbg !9561

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !9562, !llvm.loop !9563

do.body:                                          ; preds = %if.end
  %6 = load i32, i32* %band_struct_size.addr, align 4, !dbg !9564
  %7 = load i32, i32* %start_subband.addr, align 4, !dbg !9568
  %8 = load i32, i32* %n_subbands, align 4, !dbg !9569
  %add = add nsw i32 %7, %8, !dbg !9570
  %cmp = icmp sge i32 %6, %add, !dbg !9571
  br i1 %cmp, label %if.end3, label %if.then2, !dbg !9572

if.then2:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i32 0, i32 0), i32 781), !dbg !9573
  call void @abort() #10, !dbg !9576
  unreachable, !dbg !9578

if.end3:                                          ; preds = %do.body
  br label %do.end, !dbg !9579

do.end:                                           ; preds = %if.end3
  %9 = load i32, i32* %start_subband.addr, align 4, !dbg !9581
  %add4 = add nsw i32 %9, 1, !dbg !9582
  %10 = load i8*, i8** %band_struct.addr, align 8, !dbg !9583
  %idx.ext = sext i32 %add4 to i64, !dbg !9583
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !9583
  store i8* %add.ptr, i8** %band_struct.addr, align 8, !dbg !9583
  %11 = load i32, i32* %eac3.addr, align 4, !dbg !9584
  %tobool5 = icmp ne i32 %11, 0, !dbg !9584
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !9586

lor.lhs.false:                                    ; preds = %do.end
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !9587
  %call = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !9589
  %tobool6 = icmp ne i32 %call, 0, !dbg !9589
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !9590

if.then7:                                         ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %subbnd, align 4, !dbg !9591
  br label %for.cond, !dbg !9594

for.cond:                                         ; preds = %for.inc, %if.then7
  %13 = load i32, i32* %subbnd, align 4, !dbg !9595
  %14 = load i32, i32* %n_subbands, align 4, !dbg !9598
  %sub8 = sub nsw i32 %14, 1, !dbg !9599
  %cmp9 = icmp slt i32 %13, %sub8, !dbg !9600
  br i1 %cmp9, label %for.body, label %for.end, !dbg !9601

for.body:                                         ; preds = %for.cond
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc.addr, align 8, !dbg !9602
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %15), !dbg !9604
  %conv12 = trunc i32 %call11 to i8, !dbg !9604
  %16 = load i32, i32* %subbnd, align 4, !dbg !9605
  %idxprom = sext i32 %16 to i64, !dbg !9606
  %17 = load i8*, i8** %band_struct.addr, align 8, !dbg !9606
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !9606
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !9607
  br label %for.inc, !dbg !9608

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %subbnd, align 4, !dbg !9609
  %inc = add nsw i32 %18, 1, !dbg !9609
  store i32 %inc, i32* %subbnd, align 4, !dbg !9609
  br label %for.cond, !dbg !9611, !llvm.loop !9612

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !9614

if.end13:                                         ; preds = %for.end, %lor.lhs.false
  %19 = load i32*, i32** %num_bands.addr, align 8, !dbg !9615
  %tobool14 = icmp ne i32* %19, null, !dbg !9615
  br i1 %tobool14, label %if.then17, label %lor.lhs.false15, !dbg !9617

lor.lhs.false15:                                  ; preds = %if.end13
  %20 = load i8*, i8** %band_sizes.addr, align 8, !dbg !9618
  %tobool16 = icmp ne i8* %20, null, !dbg !9618
  br i1 %tobool16, label %if.then17, label %if.end47, !dbg !9620

if.then17:                                        ; preds = %lor.lhs.false15, %if.end13
  %21 = load i32, i32* %n_subbands, align 4, !dbg !9621
  store i32 %21, i32* %n_bands, align 4, !dbg !9623
  %22 = load i32, i32* %ecpl.addr, align 4, !dbg !9624
  %tobool18 = icmp ne i32 %22, 0, !dbg !9624
  %cond = select i1 %tobool18, i32 6, i32 12, !dbg !9624
  %conv19 = trunc i32 %cond to i8, !dbg !9624
  %arrayidx20 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 0, !dbg !9625
  store i8 %conv19, i8* %arrayidx20, align 16, !dbg !9626
  store i32 0, i32* %bnd, align 4, !dbg !9627
  store i32 1, i32* %subbnd, align 4, !dbg !9629
  br label %for.cond21, !dbg !9630

for.cond21:                                       ; preds = %for.inc44, %if.then17
  %23 = load i32, i32* %subbnd, align 4, !dbg !9631
  %24 = load i32, i32* %n_subbands, align 4, !dbg !9634
  %cmp22 = icmp slt i32 %23, %24, !dbg !9635
  br i1 %cmp22, label %for.body24, label %for.end46, !dbg !9636

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i32* %subbnd_size, metadata !9637, metadata !1854), !dbg !9639
  %25 = load i32, i32* %ecpl.addr, align 4, !dbg !9640
  %tobool25 = icmp ne i32 %25, 0, !dbg !9640
  br i1 %tobool25, label %land.rhs, label %land.end, !dbg !9641

land.rhs:                                         ; preds = %for.body24
  %26 = load i32, i32* %subbnd, align 4, !dbg !9642
  %cmp26 = icmp slt i32 %26, 4, !dbg !9644
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body24
  %27 = phi i1 [ false, %for.body24 ], [ %cmp26, %land.rhs ]
  %cond28 = select i1 %27, i32 6, i32 12, !dbg !9645
  store i32 %cond28, i32* %subbnd_size, align 4, !dbg !9647
  %28 = load i32, i32* %subbnd, align 4, !dbg !9648
  %sub29 = sub nsw i32 %28, 1, !dbg !9650
  %idxprom30 = sext i32 %sub29 to i64, !dbg !9651
  %29 = load i8*, i8** %band_struct.addr, align 8, !dbg !9651
  %arrayidx31 = getelementptr inbounds i8, i8* %29, i64 %idxprom30, !dbg !9651
  %30 = load i8, i8* %arrayidx31, align 1, !dbg !9651
  %tobool32 = icmp ne i8 %30, 0, !dbg !9651
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !9652

if.then33:                                        ; preds = %land.end
  %31 = load i32, i32* %n_bands, align 4, !dbg !9653
  %dec = add nsw i32 %31, -1, !dbg !9653
  store i32 %dec, i32* %n_bands, align 4, !dbg !9653
  %32 = load i32, i32* %subbnd_size, align 4, !dbg !9655
  %33 = load i32, i32* %bnd, align 4, !dbg !9656
  %idxprom34 = sext i32 %33 to i64, !dbg !9657
  %arrayidx35 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 %idxprom34, !dbg !9657
  %34 = load i8, i8* %arrayidx35, align 1, !dbg !9658
  %conv36 = zext i8 %34 to i32, !dbg !9658
  %add37 = add nsw i32 %conv36, %32, !dbg !9658
  %conv38 = trunc i32 %add37 to i8, !dbg !9658
  store i8 %conv38, i8* %arrayidx35, align 1, !dbg !9658
  br label %if.end43, !dbg !9659

if.else:                                          ; preds = %land.end
  %35 = load i32, i32* %subbnd_size, align 4, !dbg !9660
  %conv39 = trunc i32 %35 to i8, !dbg !9660
  %36 = load i32, i32* %bnd, align 4, !dbg !9662
  %inc40 = add nsw i32 %36, 1, !dbg !9662
  store i32 %inc40, i32* %bnd, align 4, !dbg !9662
  %idxprom41 = sext i32 %inc40 to i64, !dbg !9663
  %arrayidx42 = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i64 0, i64 %idxprom41, !dbg !9663
  store i8 %conv39, i8* %arrayidx42, align 1, !dbg !9664
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then33
  br label %for.inc44, !dbg !9665

for.inc44:                                        ; preds = %if.end43
  %37 = load i32, i32* %subbnd, align 4, !dbg !9666
  %inc45 = add nsw i32 %37, 1, !dbg !9666
  store i32 %inc45, i32* %subbnd, align 4, !dbg !9666
  br label %for.cond21, !dbg !9668, !llvm.loop !9669

for.end46:                                        ; preds = %for.cond21
  br label %if.end47, !dbg !9671

if.end47:                                         ; preds = %for.end46, %lor.lhs.false15
  %38 = load i32*, i32** %num_bands.addr, align 8, !dbg !9672
  %tobool48 = icmp ne i32* %38, null, !dbg !9672
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !9674

if.then49:                                        ; preds = %if.end47
  %39 = load i32, i32* %n_bands, align 4, !dbg !9675
  %40 = load i32*, i32** %num_bands.addr, align 8, !dbg !9676
  store i32 %39, i32* %40, align 4, !dbg !9677
  br label %if.end50, !dbg !9678

if.end50:                                         ; preds = %if.then49, %if.end47
  %41 = load i8*, i8** %band_sizes.addr, align 8, !dbg !9679
  %tobool51 = icmp ne i8* %41, null, !dbg !9679
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9681

if.then52:                                        ; preds = %if.end50
  %42 = load i8*, i8** %band_sizes.addr, align 8, !dbg !9682
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %bnd_sz, i32 0, i32 0, !dbg !9683
  %43 = load i32, i32* %n_bands, align 4, !dbg !9684
  %conv53 = sext i32 %43 to i64, !dbg !9684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %arraydecay, i64 %conv53, i32 1, i1 false), !dbg !9683
  br label %if.end54, !dbg !9683

if.end54:                                         ; preds = %if.then52, %if.end50
  ret void, !dbg !9685
}

; Function Attrs: nounwind
declare float @sqrtf(float) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @decode_transform_coeffs_ch(%struct.AC3DecodeContext* %s, i32 %blk, i32 %ch, %struct.mant_groups* %m) #4 !dbg !9686 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %blk.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %m.addr = alloca %struct.mant_groups*, align 8
  %bin = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9690, metadata !1854), !dbg !9691
  store i32 %blk, i32* %blk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk.addr, metadata !9692, metadata !1854), !dbg !9693
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9694, metadata !1854), !dbg !9695
  store %struct.mant_groups* %m, %struct.mant_groups** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mant_groups** %m.addr, metadata !9696, metadata !1854), !dbg !9697
  %0 = load i32, i32* %ch.addr, align 4, !dbg !9698
  %idxprom = sext i32 %0 to i64, !dbg !9700
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9700
  %channel_uses_aht = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 68, !dbg !9701
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %channel_uses_aht, i64 0, i64 %idxprom, !dbg !9700
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9700
  %tobool = icmp ne i32 %2, 0, !dbg !9700
  br i1 %tobool, label %if.else, label %if.then, !dbg !9702

if.then:                                          ; preds = %entry
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9703
  %4 = load i32, i32* %ch.addr, align 4, !dbg !9705
  %5 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !9706
  call void @ac3_decode_transform_coeffs_ch(%struct.AC3DecodeContext* %3, i32 %4, %struct.mant_groups* %5), !dbg !9707
  br label %if.end21, !dbg !9708

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !9709, metadata !1854), !dbg !9711
  %6 = load i32, i32* %blk.addr, align 4, !dbg !9712
  %tobool1 = icmp ne i32 %6, 0, !dbg !9712
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !9714

if.then2:                                         ; preds = %if.else
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9715
  %8 = load i32, i32* %ch.addr, align 4, !dbg !9716
  call void @ff_eac3_decode_transform_coeffs_aht_ch(%struct.AC3DecodeContext* %7, i32 %8), !dbg !9717
  br label %if.end, !dbg !9717

if.end:                                           ; preds = %if.then2, %if.else
  %9 = load i32, i32* %ch.addr, align 4, !dbg !9718
  %idxprom3 = sext i32 %9 to i64, !dbg !9720
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9720
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 83, !dbg !9721
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom3, !dbg !9720
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !9720
  store i32 %11, i32* %bin, align 4, !dbg !9722
  br label %for.cond, !dbg !9723

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %bin, align 4, !dbg !9724
  %13 = load i32, i32* %ch.addr, align 4, !dbg !9727
  %idxprom5 = sext i32 %13 to i64, !dbg !9728
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9728
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 84, !dbg !9729
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom5, !dbg !9728
  %15 = load i32, i32* %arrayidx6, align 4, !dbg !9728
  %cmp = icmp slt i32 %12, %15, !dbg !9730
  br i1 %cmp, label %for.body, label %for.end, !dbg !9731

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %blk.addr, align 4, !dbg !9732
  %idxprom7 = sext i32 %16 to i64, !dbg !9734
  %17 = load i32, i32* %bin, align 4, !dbg !9735
  %idxprom8 = sext i32 %17 to i64, !dbg !9734
  %18 = load i32, i32* %ch.addr, align 4, !dbg !9736
  %idxprom9 = sext i32 %18 to i64, !dbg !9734
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9734
  %pre_mantissa = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 69, !dbg !9737
  %arrayidx10 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa, i64 0, i64 %idxprom9, !dbg !9734
  %arrayidx11 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !9734
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx11, i64 0, i64 %idxprom7, !dbg !9734
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !9734
  %21 = load i32, i32* %bin, align 4, !dbg !9738
  %idxprom13 = sext i32 %21 to i64, !dbg !9739
  %22 = load i32, i32* %ch.addr, align 4, !dbg !9740
  %idxprom14 = sext i32 %22 to i64, !dbg !9739
  %23 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9739
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %23, i32 0, i32 89, !dbg !9741
  %arrayidx15 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom14, !dbg !9739
  %arrayidx16 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !9739
  %24 = load i8, i8* %arrayidx16, align 1, !dbg !9739
  %conv = sext i8 %24 to i32, !dbg !9739
  %shr = ashr i32 %20, %conv, !dbg !9742
  %25 = load i32, i32* %bin, align 4, !dbg !9743
  %idxprom17 = sext i32 %25 to i64, !dbg !9744
  %26 = load i32, i32* %ch.addr, align 4, !dbg !9745
  %idxprom18 = sext i32 %26 to i64, !dbg !9744
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9744
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 117, !dbg !9746
  %arrayidx19 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom18, !dbg !9744
  %arrayidx20 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !9744
  store i32 %shr, i32* %arrayidx20, align 4, !dbg !9747
  br label %for.inc, !dbg !9748

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %bin, align 4, !dbg !9749
  %inc = add nsw i32 %28, 1, !dbg !9749
  store i32 %inc, i32* %bin, align 4, !dbg !9749
  br label %for.cond, !dbg !9751, !llvm.loop !9752

for.end:                                          ; preds = %for.cond
  br label %if.end21

if.end21:                                         ; preds = %for.end, %if.then
  ret void, !dbg !9754
}

; Function Attrs: nounwind uwtable
define internal void @calc_transform_coeffs_cpl(%struct.AC3DecodeContext* %s) #1 !dbg !9755 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !9756, metadata !1854), !dbg !9759
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !9772, metadata !1854), !dbg !9773
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %bin = alloca i32, align 4
  %band = alloca i32, align 4
  %ch = alloca i32, align 4
  %band_start = alloca i32, align 4
  %band_end = alloca i32, align 4
  %cpl_coord = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9774, metadata !1854), !dbg !9775
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !9776, metadata !1854), !dbg !9777
  call void @llvm.dbg.declare(metadata i32* %band, metadata !9778, metadata !1854), !dbg !9779
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9780, metadata !1854), !dbg !9781
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9782
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 83, !dbg !9783
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !9782
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9782
  store i32 %1, i32* %bin, align 4, !dbg !9784
  store i32 0, i32* %band, align 4, !dbg !9785
  br label %for.cond, !dbg !9786

for.cond:                                         ; preds = %for.inc49, %entry
  %2 = load i32, i32* %band, align 4, !dbg !9787
  %3 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9789
  %num_cpl_bands = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %3, i32 0, i32 50, !dbg !9790
  %4 = load i32, i32* %num_cpl_bands, align 32, !dbg !9790
  %cmp = icmp slt i32 %2, %4, !dbg !9791
  br i1 %cmp, label %for.body, label %for.end51, !dbg !9792

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %band_start, metadata !9793, metadata !1854), !dbg !9794
  %5 = load i32, i32* %bin, align 4, !dbg !9795
  store i32 %5, i32* %band_start, align 4, !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %band_end, metadata !9796, metadata !1854), !dbg !9797
  %6 = load i32, i32* %bin, align 4, !dbg !9798
  %7 = load i32, i32* %band, align 4, !dbg !9799
  %idxprom = sext i32 %7 to i64, !dbg !9800
  %8 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9800
  %cpl_band_sizes = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %8, i32 0, i32 52, !dbg !9801
  %arrayidx1 = getelementptr inbounds [18 x i8], [18 x i8]* %cpl_band_sizes, i64 0, i64 %idxprom, !dbg !9800
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !9800
  %conv = zext i8 %9 to i32, !dbg !9800
  %add = add nsw i32 %6, %conv, !dbg !9802
  store i32 %add, i32* %band_end, align 4, !dbg !9797
  store i32 1, i32* %ch, align 4, !dbg !9803
  br label %for.cond2, !dbg !9804

for.cond2:                                        ; preds = %for.inc46, %for.body
  %10 = load i32, i32* %ch, align 4, !dbg !9805
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9807
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 70, !dbg !9808
  %12 = load i32, i32* %fbw_channels, align 4, !dbg !9808
  %cmp3 = icmp sle i32 %10, %12, !dbg !9809
  br i1 %cmp3, label %for.body5, label %for.end48, !dbg !9810

for.body5:                                        ; preds = %for.cond2
  %13 = load i32, i32* %ch, align 4, !dbg !9811
  %idxprom6 = sext i32 %13 to i64, !dbg !9812
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9812
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 47, !dbg !9813
  %arrayidx7 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom6, !dbg !9812
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !9812
  %tobool = icmp ne i32 %15, 0, !dbg !9812
  br i1 %tobool, label %if.then, label %if.end45, !dbg !9814

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata i32* %cpl_coord, metadata !9815, metadata !1854), !dbg !9816
  %16 = load i32, i32* %band, align 4, !dbg !9817
  %idxprom8 = sext i32 %16 to i64, !dbg !9818
  %17 = load i32, i32* %ch, align 4, !dbg !9819
  %idxprom9 = sext i32 %17 to i64, !dbg !9818
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9818
  %cpl_coords = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 55, !dbg !9820
  %arrayidx10 = getelementptr inbounds [7 x [18 x i32]], [7 x [18 x i32]]* %cpl_coords, i64 0, i64 %idxprom9, !dbg !9818
  %arrayidx11 = getelementptr inbounds [18 x i32], [18 x i32]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !9818
  %19 = load i32, i32* %arrayidx11, align 4, !dbg !9818
  %shl = shl i32 %19, 5, !dbg !9821
  store i32 %shl, i32* %cpl_coord, align 4, !dbg !9816
  %20 = load i32, i32* %band_start, align 4, !dbg !9822
  store i32 %20, i32* %bin, align 4, !dbg !9823
  br label %for.cond12, !dbg !9824

for.cond12:                                       ; preds = %for.inc, %if.then
  %21 = load i32, i32* %bin, align 4, !dbg !9825
  %22 = load i32, i32* %band_end, align 4, !dbg !9827
  %cmp13 = icmp slt i32 %21, %22, !dbg !9828
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !9829

for.body15:                                       ; preds = %for.cond12
  %23 = load i32, i32* %bin, align 4, !dbg !9830
  %idxprom16 = sext i32 %23 to i64, !dbg !9831
  %24 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9831
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %24, i32 0, i32 117, !dbg !9832
  %arrayidx17 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 0, !dbg !9831
  %arrayidx18 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx17, i64 0, i64 %idxprom16, !dbg !9831
  %25 = load i32, i32* %arrayidx18, align 4, !dbg !9831
  %mul = mul nsw i32 %25, 16, !dbg !9833
  %26 = load i32, i32* %cpl_coord, align 4, !dbg !9834
  store i32 %mul, i32* %a.addr.i, align 4, !dbg !9835
  store i32 %26, i32* %b.addr.i, align 4, !dbg !9835
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !9836
  %conv.i = sext i32 %27 to i64, !dbg !9837
  %28 = load i32, i32* %b.addr.i, align 4, !dbg !9838
  %conv1.i = sext i32 %28 to i64, !dbg !9839
  %mul.i = mul nsw i64 %conv.i, %conv1.i, !dbg !9840
  %shr.i = ashr i64 %mul.i, 32, !dbg !9841
  %conv2.i = trunc i64 %shr.i to i32, !dbg !9842
  %29 = load i32, i32* %bin, align 4, !dbg !9843
  %idxprom19 = sext i32 %29 to i64, !dbg !9844
  %30 = load i32, i32* %ch, align 4, !dbg !9845
  %idxprom20 = sext i32 %30 to i64, !dbg !9844
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9844
  %fixed_coeffs21 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 117, !dbg !9846
  %arrayidx22 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs21, i64 0, i64 %idxprom20, !dbg !9844
  %arrayidx23 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !9844
  store i32 %conv2.i, i32* %arrayidx23, align 4, !dbg !9847
  br label %for.inc, !dbg !9848

for.inc:                                          ; preds = %for.body15
  %32 = load i32, i32* %bin, align 4, !dbg !9849
  %inc = add nsw i32 %32, 1, !dbg !9849
  store i32 %inc, i32* %bin, align 4, !dbg !9849
  br label %for.cond12, !dbg !9851, !llvm.loop !9852

for.end:                                          ; preds = %for.cond12
  %33 = load i32, i32* %ch, align 4, !dbg !9854
  %cmp24 = icmp eq i32 %33, 2, !dbg !9856
  br i1 %cmp24, label %land.lhs.true, label %if.end, !dbg !9857

land.lhs.true:                                    ; preds = %for.end
  %34 = load i32, i32* %band, align 4, !dbg !9858
  %idxprom26 = sext i32 %34 to i64, !dbg !9860
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9860
  %phase_flags = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 49, !dbg !9861
  %arrayidx27 = getelementptr inbounds [18 x i32], [18 x i32]* %phase_flags, i64 0, i64 %idxprom26, !dbg !9860
  %36 = load i32, i32* %arrayidx27, align 4, !dbg !9860
  %tobool28 = icmp ne i32 %36, 0, !dbg !9860
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !9862

if.then29:                                        ; preds = %land.lhs.true
  %37 = load i32, i32* %band_start, align 4, !dbg !9863
  store i32 %37, i32* %bin, align 4, !dbg !9866
  br label %for.cond30, !dbg !9867

for.cond30:                                       ; preds = %for.inc42, %if.then29
  %38 = load i32, i32* %bin, align 4, !dbg !9868
  %39 = load i32, i32* %band_end, align 4, !dbg !9871
  %cmp31 = icmp slt i32 %38, %39, !dbg !9872
  br i1 %cmp31, label %for.body33, label %for.end44, !dbg !9873

for.body33:                                       ; preds = %for.cond30
  %40 = load i32, i32* %bin, align 4, !dbg !9874
  %idxprom34 = sext i32 %40 to i64, !dbg !9875
  %41 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9875
  %fixed_coeffs35 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %41, i32 0, i32 117, !dbg !9876
  %arrayidx36 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs35, i64 0, i64 2, !dbg !9875
  %arrayidx37 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx36, i64 0, i64 %idxprom34, !dbg !9875
  %42 = load i32, i32* %arrayidx37, align 4, !dbg !9875
  %sub = sub nsw i32 0, %42, !dbg !9877
  %43 = load i32, i32* %bin, align 4, !dbg !9878
  %idxprom38 = sext i32 %43 to i64, !dbg !9879
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9879
  %fixed_coeffs39 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 117, !dbg !9880
  %arrayidx40 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs39, i64 0, i64 2, !dbg !9879
  %arrayidx41 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx40, i64 0, i64 %idxprom38, !dbg !9879
  store i32 %sub, i32* %arrayidx41, align 4, !dbg !9881
  br label %for.inc42, !dbg !9879

for.inc42:                                        ; preds = %for.body33
  %45 = load i32, i32* %bin, align 4, !dbg !9882
  %inc43 = add nsw i32 %45, 1, !dbg !9882
  store i32 %inc43, i32* %bin, align 4, !dbg !9882
  br label %for.cond30, !dbg !9884, !llvm.loop !9885

for.end44:                                        ; preds = %for.cond30
  br label %if.end, !dbg !9887

if.end:                                           ; preds = %for.end44, %land.lhs.true, %for.end
  br label %if.end45, !dbg !9888

if.end45:                                         ; preds = %if.end, %for.body5
  br label %for.inc46, !dbg !9889

for.inc46:                                        ; preds = %if.end45
  %46 = load i32, i32* %ch, align 4, !dbg !9890
  %inc47 = add nsw i32 %46, 1, !dbg !9890
  store i32 %inc47, i32* %ch, align 4, !dbg !9890
  br label %for.cond2, !dbg !9892, !llvm.loop !9893

for.end48:                                        ; preds = %for.cond2
  %47 = load i32, i32* %band_end, align 4, !dbg !9895
  store i32 %47, i32* %bin, align 4, !dbg !9896
  br label %for.inc49, !dbg !9897

for.inc49:                                        ; preds = %for.end48
  %48 = load i32, i32* %band, align 4, !dbg !9898
  %inc50 = add nsw i32 %48, 1, !dbg !9898
  store i32 %inc50, i32* %band, align 4, !dbg !9898
  br label %for.cond, !dbg !9900, !llvm.loop !9901

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !9903
}

; Function Attrs: nounwind uwtable
define internal void @remove_dithering(%struct.AC3DecodeContext* %s) #1 !dbg !9904 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9905, metadata !1854), !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9907, metadata !1854), !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9909, metadata !1854), !dbg !9910
  store i32 1, i32* %ch, align 4, !dbg !9911
  br label %for.cond, !dbg !9913

for.cond:                                         ; preds = %for.inc19, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !9914
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9917
  %fbw_channels = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 70, !dbg !9918
  %2 = load i32, i32* %fbw_channels, align 4, !dbg !9918
  %cmp = icmp sle i32 %0, %2, !dbg !9919
  br i1 %cmp, label %for.body, label %for.end21, !dbg !9920

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch, align 4, !dbg !9921
  %idxprom = sext i32 %3 to i64, !dbg !9924
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9924
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 104, !dbg !9925
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom, !dbg !9924
  %5 = load i32, i32* %arrayidx, align 4, !dbg !9924
  %tobool = icmp ne i32 %5, 0, !dbg !9924
  br i1 %tobool, label %if.end18, label %land.lhs.true, !dbg !9926

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %ch, align 4, !dbg !9927
  %idxprom1 = sext i32 %6 to i64, !dbg !9929
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9929
  %channel_in_cpl = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 47, !dbg !9930
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %channel_in_cpl, i64 0, i64 %idxprom1, !dbg !9929
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !9929
  %tobool3 = icmp ne i32 %8, 0, !dbg !9929
  br i1 %tobool3, label %if.then, label %if.end18, !dbg !9931

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9932
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 83, !dbg !9935
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 0, !dbg !9932
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !9932
  store i32 %10, i32* %i, align 4, !dbg !9936
  br label %for.cond5, !dbg !9937

for.cond5:                                        ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !9938
  %12 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9941
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %12, i32 0, i32 84, !dbg !9942
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 0, !dbg !9941
  %13 = load i32, i32* %arrayidx6, align 8, !dbg !9941
  %cmp7 = icmp slt i32 %11, %13, !dbg !9943
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !9944

for.body8:                                        ; preds = %for.cond5
  %14 = load i32, i32* %i, align 4, !dbg !9945
  %idxprom9 = sext i32 %14 to i64, !dbg !9948
  %15 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9948
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %15, i32 0, i32 95, !dbg !9949
  %arrayidx10 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 0, !dbg !9948
  %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx10, i64 0, i64 %idxprom9, !dbg !9948
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !9948
  %tobool12 = icmp ne i8 %16, 0, !dbg !9948
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !9950

if.then13:                                        ; preds = %for.body8
  %17 = load i32, i32* %i, align 4, !dbg !9951
  %idxprom14 = sext i32 %17 to i64, !dbg !9952
  %18 = load i32, i32* %ch, align 4, !dbg !9953
  %idxprom15 = sext i32 %18 to i64, !dbg !9952
  %19 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9952
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %19, i32 0, i32 117, !dbg !9954
  %arrayidx16 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom15, !dbg !9952
  %arrayidx17 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !9952
  store i32 0, i32* %arrayidx17, align 4, !dbg !9955
  br label %if.end, !dbg !9952

if.end:                                           ; preds = %if.then13, %for.body8
  br label %for.inc, !dbg !9956

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !9957
  %inc = add nsw i32 %20, 1, !dbg !9957
  store i32 %inc, i32* %i, align 4, !dbg !9957
  br label %for.cond5, !dbg !9959, !llvm.loop !9960

for.end:                                          ; preds = %for.cond5
  br label %if.end18, !dbg !9962

if.end18:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc19, !dbg !9963

for.inc19:                                        ; preds = %if.end18
  %21 = load i32, i32* %ch, align 4, !dbg !9964
  %inc20 = add nsw i32 %21, 1, !dbg !9964
  store i32 %inc20, i32* %ch, align 4, !dbg !9964
  br label %for.cond, !dbg !9966, !llvm.loop !9967

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !9969
}

; Function Attrs: nounwind uwtable
define internal void @ac3_decode_transform_coeffs_ch(%struct.AC3DecodeContext* %s, i32 %ch_index, %struct.mant_groups* %m) #1 !dbg !9970 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch_index.addr = alloca i32, align 4
  %m.addr = alloca %struct.mant_groups*, align 8
  %start_freq = alloca i32, align 4
  %end_freq = alloca i32, align 4
  %baps = alloca i8*, align 8
  %exps = alloca i8*, align 8
  %coeffs = alloca i32*, align 8
  %dither = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %freq = alloca i32, align 4
  %bap17 = alloca i32, align 4
  %mantissa = alloca i32, align 4
  %bits = alloca i32, align 4
  %bits55 = alloca i32, align 4
  %bits81 = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !9973, metadata !1854), !dbg !9974
  store i32 %ch_index, i32* %ch_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_index.addr, metadata !9975, metadata !1854), !dbg !9976
  store %struct.mant_groups* %m, %struct.mant_groups** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mant_groups** %m.addr, metadata !9977, metadata !1854), !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %start_freq, metadata !9979, metadata !1854), !dbg !9980
  %0 = load i32, i32* %ch_index.addr, align 4, !dbg !9981
  %idxprom = sext i32 %0 to i64, !dbg !9982
  %1 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9982
  %start_freq1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %1, i32 0, i32 83, !dbg !9983
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq1, i64 0, i64 %idxprom, !dbg !9982
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9982
  store i32 %2, i32* %start_freq, align 4, !dbg !9980
  call void @llvm.dbg.declare(metadata i32* %end_freq, metadata !9984, metadata !1854), !dbg !9985
  %3 = load i32, i32* %ch_index.addr, align 4, !dbg !9986
  %idxprom2 = sext i32 %3 to i64, !dbg !9987
  %4 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9987
  %end_freq3 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %4, i32 0, i32 84, !dbg !9988
  %arrayidx4 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq3, i64 0, i64 %idxprom2, !dbg !9987
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !9987
  store i32 %5, i32* %end_freq, align 4, !dbg !9985
  call void @llvm.dbg.declare(metadata i8** %baps, metadata !9989, metadata !1854), !dbg !9990
  %6 = load i32, i32* %ch_index.addr, align 4, !dbg !9991
  %idxprom5 = sext i32 %6 to i64, !dbg !9992
  %7 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9992
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %7, i32 0, i32 95, !dbg !9993
  %arrayidx6 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom5, !dbg !9992
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx6, i32 0, i32 0, !dbg !9992
  store i8* %arraydecay, i8** %baps, align 8, !dbg !9990
  call void @llvm.dbg.declare(metadata i8** %exps, metadata !9994, metadata !1854), !dbg !9995
  %8 = load i32, i32* %ch_index.addr, align 4, !dbg !9996
  %idxprom7 = sext i32 %8 to i64, !dbg !9997
  %9 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !9997
  %dexps = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %9, i32 0, i32 89, !dbg !9998
  %arrayidx8 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %dexps, i64 0, i64 %idxprom7, !dbg !9997
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx8, i32 0, i32 0, !dbg !9997
  store i8* %arraydecay9, i8** %exps, align 8, !dbg !9995
  call void @llvm.dbg.declare(metadata i32** %coeffs, metadata !9999, metadata !1854), !dbg !10000
  %10 = load i32, i32* %ch_index.addr, align 4, !dbg !10001
  %idxprom10 = sext i32 %10 to i64, !dbg !10002
  %11 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10002
  %fixed_coeffs = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %11, i32 0, i32 117, !dbg !10003
  %arrayidx11 = getelementptr inbounds [7 x [256 x i32]], [7 x [256 x i32]]* %fixed_coeffs, i64 0, i64 %idxprom10, !dbg !10002
  %arraydecay12 = getelementptr inbounds [256 x i32], [256 x i32]* %arrayidx11, i32 0, i32 0, !dbg !10002
  store i32* %arraydecay12, i32** %coeffs, align 8, !dbg !10000
  call void @llvm.dbg.declare(metadata i32* %dither, metadata !10004, metadata !1854), !dbg !10005
  %12 = load i32, i32* %ch_index.addr, align 4, !dbg !10006
  %cmp = icmp eq i32 %12, 0, !dbg !10007
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10008

lor.rhs:                                          ; preds = %entry
  %13 = load i32, i32* %ch_index.addr, align 4, !dbg !10009
  %idxprom13 = sext i32 %13 to i64, !dbg !10011
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10011
  %dither_flag = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 104, !dbg !10012
  %arrayidx14 = getelementptr inbounds [7 x i32], [7 x i32]* %dither_flag, i64 0, i64 %idxprom13, !dbg !10011
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !10011
  %tobool = icmp ne i32 %15, 0, !dbg !10013
  br label %lor.end, !dbg !10013

lor.end:                                          ; preds = %lor.rhs, %entry
  %16 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32, !dbg !10014
  store i32 %lor.ext, i32* %dither, align 4, !dbg !10016
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !10017, metadata !1854), !dbg !10018
  %17 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10019
  %gbc15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %17, i32 0, i32 2, !dbg !10020
  store %struct.GetBitContext* %gbc15, %struct.GetBitContext** %gbc, align 8, !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !10021, metadata !1854), !dbg !10022
  %18 = load i32, i32* %start_freq, align 4, !dbg !10023
  store i32 %18, i32* %freq, align 4, !dbg !10025
  br label %for.cond, !dbg !10026

for.cond:                                         ; preds = %for.inc, %lor.end
  %19 = load i32, i32* %freq, align 4, !dbg !10027
  %20 = load i32, i32* %end_freq, align 4, !dbg !10030
  %cmp16 = icmp slt i32 %19, %20, !dbg !10031
  br i1 %cmp16, label %for.body, label %for.end, !dbg !10032

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bap17, metadata !10033, metadata !1854), !dbg !10035
  %21 = load i32, i32* %freq, align 4, !dbg !10036
  %idxprom18 = sext i32 %21 to i64, !dbg !10037
  %22 = load i8*, i8** %baps, align 8, !dbg !10037
  %arrayidx19 = getelementptr inbounds i8, i8* %22, i64 %idxprom18, !dbg !10037
  %23 = load i8, i8* %arrayidx19, align 1, !dbg !10037
  %conv = zext i8 %23 to i32, !dbg !10037
  store i32 %conv, i32* %bap17, align 4, !dbg !10035
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !10038, metadata !1854), !dbg !10039
  %24 = load i32, i32* %bap17, align 4, !dbg !10040
  switch i32 %24, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb22
    i32 2, label %sw.bb46
    i32 3, label %sw.bb72
    i32 4, label %sw.bb76
    i32 5, label %sw.bb92
  ], !dbg !10041

sw.bb:                                            ; preds = %for.body
  %25 = load i32, i32* %dither, align 4, !dbg !10042
  %tobool20 = icmp ne i32 %25, 0, !dbg !10042
  br i1 %tobool20, label %if.then, label %if.else, !dbg !10045

if.then:                                          ; preds = %sw.bb
  %26 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10046
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %26, i32 0, i32 105, !dbg !10047
  %call = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !10048
  %shr = lshr i32 %call, 8, !dbg !10049
  %mul = mul i32 %shr, 181, !dbg !10050
  %shr21 = lshr i32 %mul, 8, !dbg !10051
  %sub = sub i32 %shr21, 5931008, !dbg !10052
  store i32 %sub, i32* %mantissa, align 4, !dbg !10053
  br label %if.end, !dbg !10054

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %mantissa, align 4, !dbg !10055
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !10056

sw.bb22:                                          ; preds = %for.body
  %27 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10057
  %b1 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %27, i32 0, i32 3, !dbg !10059
  %28 = load i32, i32* %b1, align 4, !dbg !10059
  %tobool23 = icmp ne i32 %28, 0, !dbg !10057
  br i1 %tobool23, label %if.then24, label %if.else29, !dbg !10060

if.then24:                                        ; preds = %sw.bb22
  %29 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10061
  %b125 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %29, i32 0, i32 3, !dbg !10063
  %30 = load i32, i32* %b125, align 4, !dbg !10064
  %dec = add nsw i32 %30, -1, !dbg !10064
  store i32 %dec, i32* %b125, align 4, !dbg !10064
  %31 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10065
  %b126 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %31, i32 0, i32 3, !dbg !10066
  %32 = load i32, i32* %b126, align 4, !dbg !10066
  %idxprom27 = sext i32 %32 to i64, !dbg !10067
  %33 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10067
  %b1_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %33, i32 0, i32 0, !dbg !10068
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant, i64 0, i64 %idxprom27, !dbg !10067
  %34 = load i32, i32* %arrayidx28, align 4, !dbg !10067
  store i32 %34, i32* %mantissa, align 4, !dbg !10069
  br label %if.end45, !dbg !10070

if.else29:                                        ; preds = %sw.bb22
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !10071, metadata !1854), !dbg !10073
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10074
  %call30 = call i32 @get_bits(%struct.GetBitContext* %35, i32 5), !dbg !10075
  store i32 %call30, i32* %bits, align 4, !dbg !10073
  %36 = load i32, i32* %bits, align 4, !dbg !10076
  %idxprom31 = sext i32 %36 to i64, !dbg !10077
  %arrayidx32 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom31, !dbg !10077
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx32, i64 0, i64 0, !dbg !10077
  %37 = load i32, i32* %arrayidx33, align 4, !dbg !10077
  store i32 %37, i32* %mantissa, align 4, !dbg !10078
  %38 = load i32, i32* %bits, align 4, !dbg !10079
  %idxprom34 = sext i32 %38 to i64, !dbg !10080
  %arrayidx35 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom34, !dbg !10080
  %arrayidx36 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx35, i64 0, i64 1, !dbg !10080
  %39 = load i32, i32* %arrayidx36, align 4, !dbg !10080
  %40 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10081
  %b1_mant37 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %40, i32 0, i32 0, !dbg !10082
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant37, i64 0, i64 1, !dbg !10081
  store i32 %39, i32* %arrayidx38, align 4, !dbg !10083
  %41 = load i32, i32* %bits, align 4, !dbg !10084
  %idxprom39 = sext i32 %41 to i64, !dbg !10085
  %arrayidx40 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]* @b1_mantissas, i64 0, i64 %idxprom39, !dbg !10085
  %arrayidx41 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx40, i64 0, i64 2, !dbg !10085
  %42 = load i32, i32* %arrayidx41, align 4, !dbg !10085
  %43 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10086
  %b1_mant42 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %43, i32 0, i32 0, !dbg !10087
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %b1_mant42, i64 0, i64 0, !dbg !10086
  store i32 %42, i32* %arrayidx43, align 4, !dbg !10088
  %44 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10089
  %b144 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %44, i32 0, i32 3, !dbg !10090
  store i32 2, i32* %b144, align 4, !dbg !10091
  br label %if.end45

if.end45:                                         ; preds = %if.else29, %if.then24
  br label %sw.epilog, !dbg !10092

sw.bb46:                                          ; preds = %for.body
  %45 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10093
  %b2 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %45, i32 0, i32 4, !dbg !10095
  %46 = load i32, i32* %b2, align 4, !dbg !10095
  %tobool47 = icmp ne i32 %46, 0, !dbg !10093
  br i1 %tobool47, label %if.then48, label %if.else54, !dbg !10096

if.then48:                                        ; preds = %sw.bb46
  %47 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10097
  %b249 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %47, i32 0, i32 4, !dbg !10099
  %48 = load i32, i32* %b249, align 4, !dbg !10100
  %dec50 = add nsw i32 %48, -1, !dbg !10100
  store i32 %dec50, i32* %b249, align 4, !dbg !10100
  %49 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10101
  %b251 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %49, i32 0, i32 4, !dbg !10102
  %50 = load i32, i32* %b251, align 4, !dbg !10102
  %idxprom52 = sext i32 %50 to i64, !dbg !10103
  %51 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10103
  %b2_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %51, i32 0, i32 1, !dbg !10104
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant, i64 0, i64 %idxprom52, !dbg !10103
  %52 = load i32, i32* %arrayidx53, align 4, !dbg !10103
  store i32 %52, i32* %mantissa, align 4, !dbg !10105
  br label %if.end71, !dbg !10106

if.else54:                                        ; preds = %sw.bb46
  call void @llvm.dbg.declare(metadata i32* %bits55, metadata !10107, metadata !1854), !dbg !10109
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10110
  %call56 = call i32 @get_bits(%struct.GetBitContext* %53, i32 7), !dbg !10111
  store i32 %call56, i32* %bits55, align 4, !dbg !10109
  %54 = load i32, i32* %bits55, align 4, !dbg !10112
  %idxprom57 = sext i32 %54 to i64, !dbg !10113
  %arrayidx58 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom57, !dbg !10113
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx58, i64 0, i64 0, !dbg !10113
  %55 = load i32, i32* %arrayidx59, align 4, !dbg !10113
  store i32 %55, i32* %mantissa, align 4, !dbg !10114
  %56 = load i32, i32* %bits55, align 4, !dbg !10115
  %idxprom60 = sext i32 %56 to i64, !dbg !10116
  %arrayidx61 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom60, !dbg !10116
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx61, i64 0, i64 1, !dbg !10116
  %57 = load i32, i32* %arrayidx62, align 4, !dbg !10116
  %58 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10117
  %b2_mant63 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %58, i32 0, i32 1, !dbg !10118
  %arrayidx64 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant63, i64 0, i64 1, !dbg !10117
  store i32 %57, i32* %arrayidx64, align 4, !dbg !10119
  %59 = load i32, i32* %bits55, align 4, !dbg !10120
  %idxprom65 = sext i32 %59 to i64, !dbg !10121
  %arrayidx66 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* @b2_mantissas, i64 0, i64 %idxprom65, !dbg !10121
  %arrayidx67 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx66, i64 0, i64 2, !dbg !10121
  %60 = load i32, i32* %arrayidx67, align 4, !dbg !10121
  %61 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10122
  %b2_mant68 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %61, i32 0, i32 1, !dbg !10123
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %b2_mant68, i64 0, i64 0, !dbg !10122
  store i32 %60, i32* %arrayidx69, align 4, !dbg !10124
  %62 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10125
  %b270 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %62, i32 0, i32 4, !dbg !10126
  store i32 2, i32* %b270, align 4, !dbg !10127
  br label %if.end71

if.end71:                                         ; preds = %if.else54, %if.then48
  br label %sw.epilog, !dbg !10128

sw.bb72:                                          ; preds = %for.body
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10129
  %call73 = call i32 @get_bits(%struct.GetBitContext* %63, i32 3), !dbg !10130
  %idxprom74 = zext i32 %call73 to i64, !dbg !10131
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* @b3_mantissas, i64 0, i64 %idxprom74, !dbg !10131
  %64 = load i32, i32* %arrayidx75, align 4, !dbg !10131
  store i32 %64, i32* %mantissa, align 4, !dbg !10132
  br label %sw.epilog, !dbg !10133

sw.bb76:                                          ; preds = %for.body
  %65 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10134
  %b4 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %65, i32 0, i32 5, !dbg !10136
  %66 = load i32, i32* %b4, align 4, !dbg !10136
  %tobool77 = icmp ne i32 %66, 0, !dbg !10134
  br i1 %tobool77, label %if.then78, label %if.else80, !dbg !10137

if.then78:                                        ; preds = %sw.bb76
  %67 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10138
  %b479 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %67, i32 0, i32 5, !dbg !10140
  store i32 0, i32* %b479, align 4, !dbg !10141
  %68 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10142
  %b4_mant = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %68, i32 0, i32 2, !dbg !10143
  %69 = load i32, i32* %b4_mant, align 4, !dbg !10143
  store i32 %69, i32* %mantissa, align 4, !dbg !10144
  br label %if.end91, !dbg !10145

if.else80:                                        ; preds = %sw.bb76
  call void @llvm.dbg.declare(metadata i32* %bits81, metadata !10146, metadata !1854), !dbg !10148
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10149
  %call82 = call i32 @get_bits(%struct.GetBitContext* %70, i32 7), !dbg !10150
  store i32 %call82, i32* %bits81, align 4, !dbg !10148
  %71 = load i32, i32* %bits81, align 4, !dbg !10151
  %idxprom83 = sext i32 %71 to i64, !dbg !10152
  %arrayidx84 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom83, !dbg !10152
  %arrayidx85 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx84, i64 0, i64 0, !dbg !10152
  %72 = load i32, i32* %arrayidx85, align 8, !dbg !10152
  store i32 %72, i32* %mantissa, align 4, !dbg !10153
  %73 = load i32, i32* %bits81, align 4, !dbg !10154
  %idxprom86 = sext i32 %73 to i64, !dbg !10155
  %arrayidx87 = getelementptr inbounds [128 x [2 x i32]], [128 x [2 x i32]]* @b4_mantissas, i64 0, i64 %idxprom86, !dbg !10155
  %arrayidx88 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx87, i64 0, i64 1, !dbg !10155
  %74 = load i32, i32* %arrayidx88, align 4, !dbg !10155
  %75 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10156
  %b4_mant89 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %75, i32 0, i32 2, !dbg !10157
  store i32 %74, i32* %b4_mant89, align 4, !dbg !10158
  %76 = load %struct.mant_groups*, %struct.mant_groups** %m.addr, align 8, !dbg !10159
  %b490 = getelementptr inbounds %struct.mant_groups, %struct.mant_groups* %76, i32 0, i32 5, !dbg !10160
  store i32 1, i32* %b490, align 4, !dbg !10161
  br label %if.end91

if.end91:                                         ; preds = %if.else80, %if.then78
  br label %sw.epilog, !dbg !10162

sw.bb92:                                          ; preds = %for.body
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10163
  %call93 = call i32 @get_bits(%struct.GetBitContext* %77, i32 4), !dbg !10164
  %idxprom94 = zext i32 %call93 to i64, !dbg !10165
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* @b5_mantissas, i64 0, i64 %idxprom94, !dbg !10165
  %78 = load i32, i32* %arrayidx95, align 4, !dbg !10165
  store i32 %78, i32* %mantissa, align 4, !dbg !10166
  br label %sw.epilog, !dbg !10167

sw.default:                                       ; preds = %for.body
  %79 = load i32, i32* %bap17, align 4, !dbg !10168
  %cmp96 = icmp sgt i32 %79, 15, !dbg !10170
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10171

if.then98:                                        ; preds = %sw.default
  %80 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10172
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %80, i32 0, i32 1, !dbg !10174
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10174
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !10172
  %83 = load i32, i32* %bap17, align 4, !dbg !10175
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i32 0, i32 0), i32 %83), !dbg !10176
  store i32 15, i32* %bap17, align 4, !dbg !10177
  br label %if.end99, !dbg !10178

if.end99:                                         ; preds = %if.then98, %sw.default
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10179
  %85 = load i32, i32* %bap17, align 4, !dbg !10180
  %idxprom100 = sext i32 %85 to i64, !dbg !10181
  %arrayidx101 = getelementptr inbounds [16 x i8], [16 x i8]* @quantization_tab, i64 0, i64 %idxprom100, !dbg !10181
  %86 = load i8, i8* %arrayidx101, align 1, !dbg !10181
  %conv102 = zext i8 %86 to i32, !dbg !10181
  %call103 = call i32 @get_sbits(%struct.GetBitContext* %84, i32 %conv102), !dbg !10182
  %87 = load i32, i32* %bap17, align 4, !dbg !10183
  %idxprom104 = sext i32 %87 to i64, !dbg !10184
  %arrayidx105 = getelementptr inbounds [16 x i8], [16 x i8]* @quantization_tab, i64 0, i64 %idxprom104, !dbg !10184
  %88 = load i8, i8* %arrayidx105, align 1, !dbg !10184
  %conv106 = zext i8 %88 to i32, !dbg !10184
  %sub107 = sub nsw i32 24, %conv106, !dbg !10185
  %shl = shl i32 %call103, %sub107, !dbg !10186
  store i32 %shl, i32* %mantissa, align 4, !dbg !10187
  br label %sw.epilog, !dbg !10188

sw.epilog:                                        ; preds = %if.end99, %sw.bb92, %if.end91, %sw.bb72, %if.end71, %if.end45, %if.end
  %89 = load i32, i32* %mantissa, align 4, !dbg !10189
  %90 = load i32, i32* %freq, align 4, !dbg !10190
  %idxprom108 = sext i32 %90 to i64, !dbg !10191
  %91 = load i8*, i8** %exps, align 8, !dbg !10191
  %arrayidx109 = getelementptr inbounds i8, i8* %91, i64 %idxprom108, !dbg !10191
  %92 = load i8, i8* %arrayidx109, align 1, !dbg !10191
  %conv110 = sext i8 %92 to i32, !dbg !10191
  %shr111 = ashr i32 %89, %conv110, !dbg !10192
  %93 = load i32, i32* %freq, align 4, !dbg !10193
  %idxprom112 = sext i32 %93 to i64, !dbg !10194
  %94 = load i32*, i32** %coeffs, align 8, !dbg !10194
  %arrayidx113 = getelementptr inbounds i32, i32* %94, i64 %idxprom112, !dbg !10194
  store i32 %shr111, i32* %arrayidx113, align 4, !dbg !10195
  br label %for.inc, !dbg !10196

for.inc:                                          ; preds = %sw.epilog
  %95 = load i32, i32* %freq, align 4, !dbg !10197
  %inc = add nsw i32 %95, 1, !dbg !10197
  store i32 %inc, i32* %freq, align 4, !dbg !10197
  br label %for.cond, !dbg !10199, !llvm.loop !10200

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10202
}

; Function Attrs: nounwind uwtable
define internal void @ff_eac3_decode_transform_coeffs_aht_ch(%struct.AC3DecodeContext* %s, i32 %ch) #1 !dbg !10203 {
entry:
  %s.addr = alloca %struct.AC3DecodeContext*, align 8
  %ch.addr = alloca i32, align 4
  %bin = alloca i32, align 4
  %blk = alloca i32, align 4
  %gs = alloca i32, align 4
  %end_bap = alloca i32, align 4
  %gaq_mode = alloca i32, align 4
  %gbc = alloca %struct.GetBitContext*, align 8
  %gaq_gain = alloca [256 x i32], align 16
  %gc = alloca i32, align 4
  %group_code = alloca i32, align 4
  %hebap = alloca i32, align 4
  %bits = alloca i32, align 4
  %v = alloca i32, align 4
  %gbits = alloca i32, align 4
  %log_gain = alloca i32, align 4
  %mant = alloca i32, align 4
  %b = alloca i32, align 4
  %mbits = alloca i32, align 4
  store %struct.AC3DecodeContext* %s, %struct.AC3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AC3DecodeContext** %s.addr, metadata !10204, metadata !1854), !dbg !10205
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !10206, metadata !1854), !dbg !10207
  call void @llvm.dbg.declare(metadata i32* %bin, metadata !10208, metadata !1854), !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !10210, metadata !1854), !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %gs, metadata !10212, metadata !1854), !dbg !10213
  call void @llvm.dbg.declare(metadata i32* %end_bap, metadata !10214, metadata !1854), !dbg !10215
  call void @llvm.dbg.declare(metadata i32* %gaq_mode, metadata !10216, metadata !1854), !dbg !10217
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gbc, metadata !10218, metadata !1854), !dbg !10219
  %0 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10220
  %gbc1 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %0, i32 0, i32 2, !dbg !10221
  store %struct.GetBitContext* %gbc1, %struct.GetBitContext** %gbc, align 8, !dbg !10219
  call void @llvm.dbg.declare(metadata [256 x i32]* %gaq_gain, metadata !10222, metadata !1854), !dbg !10223
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10224
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 2), !dbg !10225
  store i32 %call, i32* %gaq_mode, align 4, !dbg !10226
  %2 = load i32, i32* %gaq_mode, align 4, !dbg !10227
  %cmp = icmp slt i32 %2, 2, !dbg !10228
  %cond = select i1 %cmp, i32 12, i32 17, !dbg !10229
  store i32 %cond, i32* %end_bap, align 4, !dbg !10230
  store i32 0, i32* %gs, align 4, !dbg !10231
  %3 = load i32, i32* %gaq_mode, align 4, !dbg !10232
  %cmp2 = icmp eq i32 %3, 1, !dbg !10234
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !10235

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %gaq_mode, align 4, !dbg !10236
  %cmp3 = icmp eq i32 %4, 2, !dbg !10238
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10239

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %ch.addr, align 4, !dbg !10240
  %idxprom = sext i32 %5 to i64, !dbg !10243
  %6 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10243
  %start_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %6, i32 0, i32 83, !dbg !10244
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq, i64 0, i64 %idxprom, !dbg !10243
  %7 = load i32, i32* %arrayidx, align 4, !dbg !10243
  store i32 %7, i32* %bin, align 4, !dbg !10245
  br label %for.cond, !dbg !10246

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %bin, align 4, !dbg !10247
  %9 = load i32, i32* %ch.addr, align 4, !dbg !10250
  %idxprom4 = sext i32 %9 to i64, !dbg !10251
  %10 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10251
  %end_freq = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %10, i32 0, i32 84, !dbg !10252
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq, i64 0, i64 %idxprom4, !dbg !10251
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !10251
  %cmp6 = icmp slt i32 %8, %11, !dbg !10253
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10254

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %bin, align 4, !dbg !10255
  %idxprom7 = sext i32 %12 to i64, !dbg !10258
  %13 = load i32, i32* %ch.addr, align 4, !dbg !10259
  %idxprom8 = sext i32 %13 to i64, !dbg !10258
  %14 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10258
  %bap = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %14, i32 0, i32 95, !dbg !10260
  %arrayidx9 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap, i64 0, i64 %idxprom8, !dbg !10258
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx9, i64 0, i64 %idxprom7, !dbg !10258
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !10258
  %conv = zext i8 %15 to i32, !dbg !10258
  %cmp11 = icmp sgt i32 %conv, 7, !dbg !10261
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !10262

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* %bin, align 4, !dbg !10263
  %idxprom13 = sext i32 %16 to i64, !dbg !10265
  %17 = load i32, i32* %ch.addr, align 4, !dbg !10266
  %idxprom14 = sext i32 %17 to i64, !dbg !10265
  %18 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10265
  %bap15 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %18, i32 0, i32 95, !dbg !10267
  %arrayidx16 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap15, i64 0, i64 %idxprom14, !dbg !10265
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx16, i64 0, i64 %idxprom13, !dbg !10265
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !10265
  %conv18 = zext i8 %19 to i32, !dbg !10265
  %20 = load i32, i32* %end_bap, align 4, !dbg !10268
  %cmp19 = icmp slt i32 %conv18, %20, !dbg !10269
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !10270

if.then21:                                        ; preds = %land.lhs.true
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10271
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %21), !dbg !10272
  %22 = load i32, i32* %gaq_mode, align 4, !dbg !10273
  %sub = sub nsw i32 %22, 1, !dbg !10274
  %shl = shl i32 %call22, %sub, !dbg !10275
  %23 = load i32, i32* %gs, align 4, !dbg !10276
  %inc = add nsw i32 %23, 1, !dbg !10276
  store i32 %inc, i32* %gs, align 4, !dbg !10276
  %idxprom23 = sext i32 %23 to i64, !dbg !10277
  %arrayidx24 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom23, !dbg !10277
  store i32 %shl, i32* %arrayidx24, align 4, !dbg !10278
  br label %if.end, !dbg !10277

if.end:                                           ; preds = %if.then21, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10279

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %bin, align 4, !dbg !10280
  %inc25 = add nsw i32 %24, 1, !dbg !10280
  store i32 %inc25, i32* %bin, align 4, !dbg !10280
  br label %for.cond, !dbg !10282, !llvm.loop !10283

for.end:                                          ; preds = %for.cond
  br label %if.end93, !dbg !10285

if.else:                                          ; preds = %lor.lhs.false
  %25 = load i32, i32* %gaq_mode, align 4, !dbg !10286
  %cmp26 = icmp eq i32 %25, 3, !dbg !10289
  br i1 %cmp26, label %if.then28, label %if.end92, !dbg !10286

if.then28:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %gc, metadata !10290, metadata !1854), !dbg !10292
  store i32 2, i32* %gc, align 4, !dbg !10292
  %26 = load i32, i32* %ch.addr, align 4, !dbg !10293
  %idxprom29 = sext i32 %26 to i64, !dbg !10295
  %27 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10295
  %start_freq30 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %27, i32 0, i32 83, !dbg !10296
  %arrayidx31 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq30, i64 0, i64 %idxprom29, !dbg !10295
  %28 = load i32, i32* %arrayidx31, align 4, !dbg !10295
  store i32 %28, i32* %bin, align 4, !dbg !10297
  br label %for.cond32, !dbg !10298

for.cond32:                                       ; preds = %for.inc89, %if.then28
  %29 = load i32, i32* %bin, align 4, !dbg !10299
  %30 = load i32, i32* %ch.addr, align 4, !dbg !10302
  %idxprom33 = sext i32 %30 to i64, !dbg !10303
  %31 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10303
  %end_freq34 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %31, i32 0, i32 84, !dbg !10304
  %arrayidx35 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq34, i64 0, i64 %idxprom33, !dbg !10303
  %32 = load i32, i32* %arrayidx35, align 4, !dbg !10303
  %cmp36 = icmp slt i32 %29, %32, !dbg !10305
  br i1 %cmp36, label %for.body38, label %for.end91, !dbg !10306

for.body38:                                       ; preds = %for.cond32
  %33 = load i32, i32* %bin, align 4, !dbg !10307
  %idxprom39 = sext i32 %33 to i64, !dbg !10310
  %34 = load i32, i32* %ch.addr, align 4, !dbg !10311
  %idxprom40 = sext i32 %34 to i64, !dbg !10310
  %35 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10310
  %bap41 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %35, i32 0, i32 95, !dbg !10312
  %arrayidx42 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap41, i64 0, i64 %idxprom40, !dbg !10310
  %arrayidx43 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx42, i64 0, i64 %idxprom39, !dbg !10310
  %36 = load i8, i8* %arrayidx43, align 1, !dbg !10310
  %conv44 = zext i8 %36 to i32, !dbg !10310
  %cmp45 = icmp sgt i32 %conv44, 7, !dbg !10313
  br i1 %cmp45, label %land.lhs.true47, label %if.end88, !dbg !10314

land.lhs.true47:                                  ; preds = %for.body38
  %37 = load i32, i32* %bin, align 4, !dbg !10315
  %idxprom48 = sext i32 %37 to i64, !dbg !10317
  %38 = load i32, i32* %ch.addr, align 4, !dbg !10318
  %idxprom49 = sext i32 %38 to i64, !dbg !10317
  %39 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10317
  %bap50 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %39, i32 0, i32 95, !dbg !10319
  %arrayidx51 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap50, i64 0, i64 %idxprom49, !dbg !10317
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !10317
  %40 = load i8, i8* %arrayidx52, align 1, !dbg !10317
  %conv53 = zext i8 %40 to i32, !dbg !10317
  %cmp54 = icmp slt i32 %conv53, 17, !dbg !10320
  br i1 %cmp54, label %if.then56, label %if.end88, !dbg !10321

if.then56:                                        ; preds = %land.lhs.true47
  %41 = load i32, i32* %gc, align 4, !dbg !10322
  %inc57 = add nsw i32 %41, 1, !dbg !10322
  store i32 %inc57, i32* %gc, align 4, !dbg !10322
  %cmp58 = icmp eq i32 %41, 2, !dbg !10325
  br i1 %cmp58, label %if.then60, label %if.end87, !dbg !10326

if.then60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %group_code, metadata !10327, metadata !1854), !dbg !10329
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10330
  %call61 = call i32 @get_bits(%struct.GetBitContext* %42, i32 5), !dbg !10331
  store i32 %call61, i32* %group_code, align 4, !dbg !10329
  %43 = load i32, i32* %group_code, align 4, !dbg !10332
  %cmp62 = icmp sgt i32 %43, 26, !dbg !10334
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !10335

if.then64:                                        ; preds = %if.then60
  %44 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10336
  %avctx = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %44, i32 0, i32 1, !dbg !10338
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !10338
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !10336
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i32 0, i32 0)), !dbg !10339
  store i32 26, i32* %group_code, align 4, !dbg !10340
  br label %if.end65, !dbg !10341

if.end65:                                         ; preds = %if.then64, %if.then60
  %47 = load i32, i32* %group_code, align 4, !dbg !10342
  %idxprom66 = sext i32 %47 to i64, !dbg !10343
  %arrayidx67 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom66, !dbg !10343
  %arrayidx68 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx67, i64 0, i64 0, !dbg !10343
  %48 = load i8, i8* %arrayidx68, align 1, !dbg !10343
  %conv69 = zext i8 %48 to i32, !dbg !10343
  %49 = load i32, i32* %gs, align 4, !dbg !10344
  %inc70 = add nsw i32 %49, 1, !dbg !10344
  store i32 %inc70, i32* %gs, align 4, !dbg !10344
  %idxprom71 = sext i32 %49 to i64, !dbg !10345
  %arrayidx72 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom71, !dbg !10345
  store i32 %conv69, i32* %arrayidx72, align 4, !dbg !10346
  %50 = load i32, i32* %group_code, align 4, !dbg !10347
  %idxprom73 = sext i32 %50 to i64, !dbg !10348
  %arrayidx74 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom73, !dbg !10348
  %arrayidx75 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx74, i64 0, i64 1, !dbg !10348
  %51 = load i8, i8* %arrayidx75, align 1, !dbg !10348
  %conv76 = zext i8 %51 to i32, !dbg !10348
  %52 = load i32, i32* %gs, align 4, !dbg !10349
  %inc77 = add nsw i32 %52, 1, !dbg !10349
  store i32 %inc77, i32* %gs, align 4, !dbg !10349
  %idxprom78 = sext i32 %52 to i64, !dbg !10350
  %arrayidx79 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom78, !dbg !10350
  store i32 %conv76, i32* %arrayidx79, align 4, !dbg !10351
  %53 = load i32, i32* %group_code, align 4, !dbg !10352
  %idxprom80 = sext i32 %53 to i64, !dbg !10353
  %arrayidx81 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* @ff_ac3_ungroup_3_in_5_bits_tab, i64 0, i64 %idxprom80, !dbg !10353
  %arrayidx82 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx81, i64 0, i64 2, !dbg !10353
  %54 = load i8, i8* %arrayidx82, align 1, !dbg !10353
  %conv83 = zext i8 %54 to i32, !dbg !10353
  %55 = load i32, i32* %gs, align 4, !dbg !10354
  %inc84 = add nsw i32 %55, 1, !dbg !10354
  store i32 %inc84, i32* %gs, align 4, !dbg !10354
  %idxprom85 = sext i32 %55 to i64, !dbg !10355
  %arrayidx86 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom85, !dbg !10355
  store i32 %conv83, i32* %arrayidx86, align 4, !dbg !10356
  store i32 0, i32* %gc, align 4, !dbg !10357
  br label %if.end87, !dbg !10358

if.end87:                                         ; preds = %if.end65, %if.then56
  br label %if.end88, !dbg !10359

if.end88:                                         ; preds = %if.end87, %land.lhs.true47, %for.body38
  br label %for.inc89, !dbg !10360

for.inc89:                                        ; preds = %if.end88
  %56 = load i32, i32* %bin, align 4, !dbg !10361
  %inc90 = add nsw i32 %56, 1, !dbg !10361
  store i32 %inc90, i32* %bin, align 4, !dbg !10361
  br label %for.cond32, !dbg !10363, !llvm.loop !10364

for.end91:                                        ; preds = %for.cond32
  br label %if.end92, !dbg !10366

if.end92:                                         ; preds = %for.end91, %if.else
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %for.end
  store i32 0, i32* %gs, align 4, !dbg !10367
  %57 = load i32, i32* %ch.addr, align 4, !dbg !10368
  %idxprom94 = sext i32 %57 to i64, !dbg !10370
  %58 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10370
  %start_freq95 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %58, i32 0, i32 83, !dbg !10371
  %arrayidx96 = getelementptr inbounds [7 x i32], [7 x i32]* %start_freq95, i64 0, i64 %idxprom94, !dbg !10370
  %59 = load i32, i32* %arrayidx96, align 4, !dbg !10370
  store i32 %59, i32* %bin, align 4, !dbg !10372
  br label %for.cond97, !dbg !10373

for.cond97:                                       ; preds = %for.inc250, %if.end93
  %60 = load i32, i32* %bin, align 4, !dbg !10374
  %61 = load i32, i32* %ch.addr, align 4, !dbg !10377
  %idxprom98 = sext i32 %61 to i64, !dbg !10378
  %62 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10378
  %end_freq99 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %62, i32 0, i32 84, !dbg !10379
  %arrayidx100 = getelementptr inbounds [7 x i32], [7 x i32]* %end_freq99, i64 0, i64 %idxprom98, !dbg !10378
  %63 = load i32, i32* %arrayidx100, align 4, !dbg !10378
  %cmp101 = icmp slt i32 %60, %63, !dbg !10380
  br i1 %cmp101, label %for.body103, label %for.end252, !dbg !10381

for.body103:                                      ; preds = %for.cond97
  call void @llvm.dbg.declare(metadata i32* %hebap, metadata !10382, metadata !1854), !dbg !10384
  %64 = load i32, i32* %bin, align 4, !dbg !10385
  %idxprom104 = sext i32 %64 to i64, !dbg !10386
  %65 = load i32, i32* %ch.addr, align 4, !dbg !10387
  %idxprom105 = sext i32 %65 to i64, !dbg !10386
  %66 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10386
  %bap106 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %66, i32 0, i32 95, !dbg !10388
  %arrayidx107 = getelementptr inbounds [7 x [256 x i8]], [7 x [256 x i8]]* %bap106, i64 0, i64 %idxprom105, !dbg !10386
  %arrayidx108 = getelementptr inbounds [256 x i8], [256 x i8]* %arrayidx107, i64 0, i64 %idxprom104, !dbg !10386
  %67 = load i8, i8* %arrayidx108, align 1, !dbg !10386
  %conv109 = zext i8 %67 to i32, !dbg !10386
  store i32 %conv109, i32* %hebap, align 4, !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !10389, metadata !1854), !dbg !10390
  %68 = load i32, i32* %hebap, align 4, !dbg !10391
  %idxprom110 = sext i32 %68 to i64, !dbg !10392
  %arrayidx111 = getelementptr inbounds [20 x i8], [20 x i8]* @ff_eac3_bits_vs_hebap, i64 0, i64 %idxprom110, !dbg !10392
  %69 = load i8, i8* %arrayidx111, align 1, !dbg !10392
  %conv112 = zext i8 %69 to i32, !dbg !10392
  store i32 %conv112, i32* %bits, align 4, !dbg !10390
  %70 = load i32, i32* %hebap, align 4, !dbg !10393
  %tobool = icmp ne i32 %70, 0, !dbg !10393
  br i1 %tobool, label %if.else129, label %if.then113, !dbg !10395

if.then113:                                       ; preds = %for.body103
  store i32 0, i32* %blk, align 4, !dbg !10396
  br label %for.cond114, !dbg !10399

for.cond114:                                      ; preds = %for.inc126, %if.then113
  %71 = load i32, i32* %blk, align 4, !dbg !10400
  %cmp115 = icmp slt i32 %71, 6, !dbg !10403
  br i1 %cmp115, label %for.body117, label %for.end128, !dbg !10404

for.body117:                                      ; preds = %for.cond114
  %72 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10405
  %dith_state = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %72, i32 0, i32 105, !dbg !10407
  %call118 = call i32 @av_lfg_get(%struct.AVLFG* %dith_state), !dbg !10408
  %and = and i32 %call118, 8388607, !dbg !10409
  %sub119 = sub i32 %and, 4194304, !dbg !10410
  %73 = load i32, i32* %blk, align 4, !dbg !10411
  %idxprom120 = sext i32 %73 to i64, !dbg !10412
  %74 = load i32, i32* %bin, align 4, !dbg !10413
  %idxprom121 = sext i32 %74 to i64, !dbg !10412
  %75 = load i32, i32* %ch.addr, align 4, !dbg !10414
  %idxprom122 = sext i32 %75 to i64, !dbg !10412
  %76 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10412
  %pre_mantissa = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %76, i32 0, i32 69, !dbg !10415
  %arrayidx123 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa, i64 0, i64 %idxprom122, !dbg !10412
  %arrayidx124 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx123, i64 0, i64 %idxprom121, !dbg !10412
  %arrayidx125 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx124, i64 0, i64 %idxprom120, !dbg !10412
  store i32 %sub119, i32* %arrayidx125, align 4, !dbg !10416
  br label %for.inc126, !dbg !10417

for.inc126:                                       ; preds = %for.body117
  %77 = load i32, i32* %blk, align 4, !dbg !10418
  %inc127 = add nsw i32 %77, 1, !dbg !10418
  store i32 %inc127, i32* %blk, align 4, !dbg !10418
  br label %for.cond114, !dbg !10420, !llvm.loop !10421

for.end128:                                       ; preds = %for.cond114
  br label %if.end244, !dbg !10423

if.else129:                                       ; preds = %for.body103
  %78 = load i32, i32* %hebap, align 4, !dbg !10424
  %cmp130 = icmp slt i32 %78, 8, !dbg !10427
  br i1 %cmp130, label %if.then132, label %if.else155, !dbg !10424

if.then132:                                       ; preds = %if.else129
  call void @llvm.dbg.declare(metadata i32* %v, metadata !10428, metadata !1854), !dbg !10430
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10431
  %80 = load i32, i32* %bits, align 4, !dbg !10432
  %call133 = call i32 @get_bits(%struct.GetBitContext* %79, i32 %80), !dbg !10433
  store i32 %call133, i32* %v, align 4, !dbg !10430
  store i32 0, i32* %blk, align 4, !dbg !10434
  br label %for.cond134, !dbg !10436

for.cond134:                                      ; preds = %for.inc152, %if.then132
  %81 = load i32, i32* %blk, align 4, !dbg !10437
  %cmp135 = icmp slt i32 %81, 6, !dbg !10440
  br i1 %cmp135, label %for.body137, label %for.end154, !dbg !10441

for.body137:                                      ; preds = %for.cond134
  %82 = load i32, i32* %blk, align 4, !dbg !10442
  %idxprom138 = sext i32 %82 to i64, !dbg !10444
  %83 = load i32, i32* %v, align 4, !dbg !10445
  %idxprom139 = sext i32 %83 to i64, !dbg !10444
  %84 = load i32, i32* %hebap, align 4, !dbg !10446
  %idxprom140 = sext i32 %84 to i64, !dbg !10444
  %arrayidx141 = getelementptr inbounds [8 x [6 x i16]*], [8 x [6 x i16]*]* @ff_eac3_mantissa_vq, i64 0, i64 %idxprom140, !dbg !10444
  %85 = load [6 x i16]*, [6 x i16]** %arrayidx141, align 8, !dbg !10444
  %arrayidx142 = getelementptr inbounds [6 x i16], [6 x i16]* %85, i64 %idxprom139, !dbg !10444
  %arrayidx143 = getelementptr inbounds [6 x i16], [6 x i16]* %arrayidx142, i64 0, i64 %idxprom138, !dbg !10444
  %86 = load i16, i16* %arrayidx143, align 2, !dbg !10444
  %conv144 = sext i16 %86 to i32, !dbg !10444
  %mul = mul nsw i32 %conv144, 256, !dbg !10447
  %87 = load i32, i32* %blk, align 4, !dbg !10448
  %idxprom145 = sext i32 %87 to i64, !dbg !10449
  %88 = load i32, i32* %bin, align 4, !dbg !10450
  %idxprom146 = sext i32 %88 to i64, !dbg !10449
  %89 = load i32, i32* %ch.addr, align 4, !dbg !10451
  %idxprom147 = sext i32 %89 to i64, !dbg !10449
  %90 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10449
  %pre_mantissa148 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %90, i32 0, i32 69, !dbg !10452
  %arrayidx149 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa148, i64 0, i64 %idxprom147, !dbg !10449
  %arrayidx150 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx149, i64 0, i64 %idxprom146, !dbg !10449
  %arrayidx151 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx150, i64 0, i64 %idxprom145, !dbg !10449
  store i32 %mul, i32* %arrayidx151, align 4, !dbg !10453
  br label %for.inc152, !dbg !10454

for.inc152:                                       ; preds = %for.body137
  %91 = load i32, i32* %blk, align 4, !dbg !10455
  %inc153 = add nsw i32 %91, 1, !dbg !10455
  store i32 %inc153, i32* %blk, align 4, !dbg !10455
  br label %for.cond134, !dbg !10457, !llvm.loop !10458

for.end154:                                       ; preds = %for.cond134
  br label %if.end243, !dbg !10460

if.else155:                                       ; preds = %if.else129
  call void @llvm.dbg.declare(metadata i32* %gbits, metadata !10461, metadata !1854), !dbg !10463
  call void @llvm.dbg.declare(metadata i32* %log_gain, metadata !10464, metadata !1854), !dbg !10465
  %92 = load i32, i32* %gaq_mode, align 4, !dbg !10466
  %cmp156 = icmp ne i32 %92, 0, !dbg !10468
  br i1 %cmp156, label %land.lhs.true158, label %if.else165, !dbg !10469

land.lhs.true158:                                 ; preds = %if.else155
  %93 = load i32, i32* %hebap, align 4, !dbg !10470
  %94 = load i32, i32* %end_bap, align 4, !dbg !10472
  %cmp159 = icmp slt i32 %93, %94, !dbg !10473
  br i1 %cmp159, label %if.then161, label %if.else165, !dbg !10474

if.then161:                                       ; preds = %land.lhs.true158
  %95 = load i32, i32* %gs, align 4, !dbg !10475
  %inc162 = add nsw i32 %95, 1, !dbg !10475
  store i32 %inc162, i32* %gs, align 4, !dbg !10475
  %idxprom163 = sext i32 %95 to i64, !dbg !10477
  %arrayidx164 = getelementptr inbounds [256 x i32], [256 x i32]* %gaq_gain, i64 0, i64 %idxprom163, !dbg !10477
  %96 = load i32, i32* %arrayidx164, align 4, !dbg !10477
  store i32 %96, i32* %log_gain, align 4, !dbg !10478
  br label %if.end166, !dbg !10479

if.else165:                                       ; preds = %land.lhs.true158, %if.else155
  store i32 0, i32* %log_gain, align 4, !dbg !10480
  br label %if.end166

if.end166:                                        ; preds = %if.else165, %if.then161
  %97 = load i32, i32* %bits, align 4, !dbg !10482
  %98 = load i32, i32* %log_gain, align 4, !dbg !10483
  %sub167 = sub nsw i32 %97, %98, !dbg !10484
  store i32 %sub167, i32* %gbits, align 4, !dbg !10485
  store i32 0, i32* %blk, align 4, !dbg !10486
  br label %for.cond168, !dbg !10488

for.cond168:                                      ; preds = %for.inc240, %if.end166
  %99 = load i32, i32* %blk, align 4, !dbg !10489
  %cmp169 = icmp slt i32 %99, 6, !dbg !10492
  br i1 %cmp169, label %for.body171, label %for.end242, !dbg !10493

for.body171:                                      ; preds = %for.cond168
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !10494, metadata !1854), !dbg !10496
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10497
  %101 = load i32, i32* %gbits, align 4, !dbg !10498
  %call172 = call i32 @get_sbits(%struct.GetBitContext* %100, i32 %101), !dbg !10499
  store i32 %call172, i32* %mant, align 4, !dbg !10496
  %102 = load i32, i32* %log_gain, align 4, !dbg !10500
  %tobool173 = icmp ne i32 %102, 0, !dbg !10500
  br i1 %tobool173, label %land.lhs.true174, label %if.else215, !dbg !10502

land.lhs.true174:                                 ; preds = %for.body171
  %103 = load i32, i32* %mant, align 4, !dbg !10503
  %104 = load i32, i32* %gbits, align 4, !dbg !10505
  %sub175 = sub nsw i32 %104, 1, !dbg !10506
  %shl176 = shl i32 1, %sub175, !dbg !10507
  %sub177 = sub nsw i32 0, %shl176, !dbg !10508
  %cmp178 = icmp eq i32 %103, %sub177, !dbg !10509
  br i1 %cmp178, label %if.then180, label %if.else215, !dbg !10510

if.then180:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10511, metadata !1854), !dbg !10513
  call void @llvm.dbg.declare(metadata i32* %mbits, metadata !10514, metadata !1854), !dbg !10515
  %105 = load i32, i32* %bits, align 4, !dbg !10516
  %106 = load i32, i32* %log_gain, align 4, !dbg !10517
  %sub181 = sub nsw i32 2, %106, !dbg !10518
  %sub182 = sub nsw i32 %105, %sub181, !dbg !10519
  store i32 %sub182, i32* %mbits, align 4, !dbg !10515
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gbc, align 8, !dbg !10520
  %108 = load i32, i32* %mbits, align 4, !dbg !10521
  %call183 = call i32 @get_sbits(%struct.GetBitContext* %107, i32 %108), !dbg !10522
  store i32 %call183, i32* %mant, align 4, !dbg !10523
  %109 = load i32, i32* %mant, align 4, !dbg !10524
  %110 = load i32, i32* %mbits, align 4, !dbg !10525
  %sub184 = sub nsw i32 %110, 1, !dbg !10526
  %sub185 = sub nsw i32 23, %sub184, !dbg !10527
  %shl186 = shl i32 %109, %sub185, !dbg !10528
  store i32 %shl186, i32* %mant, align 4, !dbg !10529
  %111 = load i32, i32* %mant, align 4, !dbg !10530
  %cmp187 = icmp sge i32 %111, 0, !dbg !10532
  br i1 %cmp187, label %if.then189, label %if.else192, !dbg !10533

if.then189:                                       ; preds = %if.then180
  %112 = load i32, i32* %log_gain, align 4, !dbg !10534
  %sub190 = sub nsw i32 23, %112, !dbg !10535
  %shl191 = shl i32 1, %sub190, !dbg !10536
  store i32 %shl191, i32* %b, align 4, !dbg !10537
  br label %if.end201, !dbg !10538

if.else192:                                       ; preds = %if.then180
  %113 = load i32, i32* %log_gain, align 4, !dbg !10539
  %sub193 = sub nsw i32 %113, 1, !dbg !10540
  %idxprom194 = sext i32 %sub193 to i64, !dbg !10541
  %114 = load i32, i32* %hebap, align 4, !dbg !10542
  %sub195 = sub nsw i32 %114, 8, !dbg !10543
  %idxprom196 = sext i32 %sub195 to i64, !dbg !10541
  %arrayidx197 = getelementptr inbounds [9 x [2 x i16]], [9 x [2 x i16]]* @ff_eac3_gaq_remap_2_4_b, i64 0, i64 %idxprom196, !dbg !10541
  %arrayidx198 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx197, i64 0, i64 %idxprom194, !dbg !10541
  %115 = load i16, i16* %arrayidx198, align 2, !dbg !10541
  %conv199 = sext i16 %115 to i32, !dbg !10541
  %mul200 = mul nsw i32 %conv199, 256, !dbg !10544
  store i32 %mul200, i32* %b, align 4, !dbg !10545
  br label %if.end201

if.end201:                                        ; preds = %if.else192, %if.then189
  %116 = load i32, i32* %log_gain, align 4, !dbg !10546
  %sub202 = sub nsw i32 %116, 1, !dbg !10547
  %idxprom203 = sext i32 %sub202 to i64, !dbg !10548
  %117 = load i32, i32* %hebap, align 4, !dbg !10549
  %sub204 = sub nsw i32 %117, 8, !dbg !10550
  %idxprom205 = sext i32 %sub204 to i64, !dbg !10548
  %arrayidx206 = getelementptr inbounds [9 x [2 x i16]], [9 x [2 x i16]]* @ff_eac3_gaq_remap_2_4_a, i64 0, i64 %idxprom205, !dbg !10548
  %arrayidx207 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx206, i64 0, i64 %idxprom203, !dbg !10548
  %118 = load i16, i16* %arrayidx207, align 2, !dbg !10548
  %conv208 = sext i16 %118 to i64, !dbg !10548
  %119 = load i32, i32* %mant, align 4, !dbg !10551
  %conv209 = sext i32 %119 to i64, !dbg !10552
  %mul210 = mul nsw i64 %conv208, %conv209, !dbg !10553
  %shr = ashr i64 %mul210, 15, !dbg !10554
  %120 = load i32, i32* %b, align 4, !dbg !10555
  %conv211 = sext i32 %120 to i64, !dbg !10555
  %add = add nsw i64 %shr, %conv211, !dbg !10556
  %121 = load i32, i32* %mant, align 4, !dbg !10557
  %conv212 = sext i32 %121 to i64, !dbg !10557
  %add213 = add nsw i64 %conv212, %add, !dbg !10557
  %conv214 = trunc i64 %add213 to i32, !dbg !10557
  store i32 %conv214, i32* %mant, align 4, !dbg !10557
  br label %if.end232, !dbg !10558

if.else215:                                       ; preds = %land.lhs.true174, %for.body171
  %122 = load i32, i32* %bits, align 4, !dbg !10559
  %sub216 = sub nsw i32 24, %122, !dbg !10561
  %shl217 = shl i32 1, %sub216, !dbg !10562
  %123 = load i32, i32* %mant, align 4, !dbg !10563
  %mul218 = mul nsw i32 %123, %shl217, !dbg !10563
  store i32 %mul218, i32* %mant, align 4, !dbg !10563
  %124 = load i32, i32* %log_gain, align 4, !dbg !10564
  %tobool219 = icmp ne i32 %124, 0, !dbg !10564
  br i1 %tobool219, label %if.end231, label %if.then220, !dbg !10566

if.then220:                                       ; preds = %if.else215
  %125 = load i32, i32* %hebap, align 4, !dbg !10567
  %sub221 = sub nsw i32 %125, 8, !dbg !10569
  %idxprom222 = sext i32 %sub221 to i64, !dbg !10570
  %arrayidx223 = getelementptr inbounds [12 x i16], [12 x i16]* @ff_eac3_gaq_remap_1, i64 0, i64 %idxprom222, !dbg !10570
  %126 = load i16, i16* %arrayidx223, align 2, !dbg !10570
  %conv224 = sext i16 %126 to i64, !dbg !10570
  %127 = load i32, i32* %mant, align 4, !dbg !10571
  %conv225 = sext i32 %127 to i64, !dbg !10572
  %mul226 = mul nsw i64 %conv224, %conv225, !dbg !10573
  %shr227 = ashr i64 %mul226, 15, !dbg !10574
  %128 = load i32, i32* %mant, align 4, !dbg !10575
  %conv228 = sext i32 %128 to i64, !dbg !10575
  %add229 = add nsw i64 %conv228, %shr227, !dbg !10575
  %conv230 = trunc i64 %add229 to i32, !dbg !10575
  store i32 %conv230, i32* %mant, align 4, !dbg !10575
  br label %if.end231, !dbg !10576

if.end231:                                        ; preds = %if.then220, %if.else215
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end201
  %129 = load i32, i32* %mant, align 4, !dbg !10577
  %130 = load i32, i32* %blk, align 4, !dbg !10578
  %idxprom233 = sext i32 %130 to i64, !dbg !10579
  %131 = load i32, i32* %bin, align 4, !dbg !10580
  %idxprom234 = sext i32 %131 to i64, !dbg !10579
  %132 = load i32, i32* %ch.addr, align 4, !dbg !10581
  %idxprom235 = sext i32 %132 to i64, !dbg !10579
  %133 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10579
  %pre_mantissa236 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %133, i32 0, i32 69, !dbg !10582
  %arrayidx237 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa236, i64 0, i64 %idxprom235, !dbg !10579
  %arrayidx238 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx237, i64 0, i64 %idxprom234, !dbg !10579
  %arrayidx239 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx238, i64 0, i64 %idxprom233, !dbg !10579
  store i32 %129, i32* %arrayidx239, align 4, !dbg !10583
  br label %for.inc240, !dbg !10584

for.inc240:                                       ; preds = %if.end232
  %134 = load i32, i32* %blk, align 4, !dbg !10585
  %inc241 = add nsw i32 %134, 1, !dbg !10585
  store i32 %inc241, i32* %blk, align 4, !dbg !10585
  br label %for.cond168, !dbg !10587, !llvm.loop !10588

for.end242:                                       ; preds = %for.cond168
  br label %if.end243

if.end243:                                        ; preds = %for.end242, %for.end154
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %for.end128
  %135 = load i32, i32* %bin, align 4, !dbg !10590
  %idxprom245 = sext i32 %135 to i64, !dbg !10591
  %136 = load i32, i32* %ch.addr, align 4, !dbg !10592
  %idxprom246 = sext i32 %136 to i64, !dbg !10591
  %137 = load %struct.AC3DecodeContext*, %struct.AC3DecodeContext** %s.addr, align 8, !dbg !10591
  %pre_mantissa247 = getelementptr inbounds %struct.AC3DecodeContext, %struct.AC3DecodeContext* %137, i32 0, i32 69, !dbg !10593
  %arrayidx248 = getelementptr inbounds [7 x [256 x [6 x i32]]], [7 x [256 x [6 x i32]]]* %pre_mantissa247, i64 0, i64 %idxprom246, !dbg !10591
  %arrayidx249 = getelementptr inbounds [256 x [6 x i32]], [256 x [6 x i32]]* %arrayidx248, i64 0, i64 %idxprom245, !dbg !10591
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx249, i32 0, i32 0, !dbg !10591
  call void @idct6(i32* %arraydecay), !dbg !10594
  br label %for.inc250, !dbg !10595

for.inc250:                                       ; preds = %if.end244
  %138 = load i32, i32* %bin, align 4, !dbg !10596
  %inc251 = add nsw i32 %138, 1, !dbg !10596
  store i32 %inc251, i32* %bin, align 4, !dbg !10596
  br label %for.cond97, !dbg !10598, !llvm.loop !10599

for.end252:                                       ; preds = %for.cond97
  ret void, !dbg !10601
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_lfg_get(%struct.AVLFG* %c) #4 !dbg !10602 {
entry:
  %c.addr = alloca %struct.AVLFG*, align 8
  store %struct.AVLFG* %c, %struct.AVLFG** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVLFG** %c.addr, metadata !10606, metadata !1854), !dbg !10607
  %0 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10608
  %index = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i32 0, i32 1, !dbg !10609
  %1 = load i32, i32* %index, align 4, !dbg !10609
  %sub = sub nsw i32 %1, 24, !dbg !10610
  %and = and i32 %sub, 63, !dbg !10611
  %idxprom = sext i32 %and to i64, !dbg !10612
  %2 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10612
  %state = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %2, i32 0, i32 0, !dbg !10613
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %state, i64 0, i64 %idxprom, !dbg !10612
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10612
  %4 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10614
  %index1 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %4, i32 0, i32 1, !dbg !10615
  %5 = load i32, i32* %index1, align 4, !dbg !10615
  %sub2 = sub nsw i32 %5, 55, !dbg !10616
  %and3 = and i32 %sub2, 63, !dbg !10617
  %idxprom4 = sext i32 %and3 to i64, !dbg !10618
  %6 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10618
  %state5 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %6, i32 0, i32 0, !dbg !10619
  %arrayidx6 = getelementptr inbounds [64 x i32], [64 x i32]* %state5, i64 0, i64 %idxprom4, !dbg !10618
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !10618
  %add = add i32 %3, %7, !dbg !10620
  %8 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10621
  %index7 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %8, i32 0, i32 1, !dbg !10622
  %9 = load i32, i32* %index7, align 4, !dbg !10622
  %and8 = and i32 %9, 63, !dbg !10623
  %idxprom9 = sext i32 %and8 to i64, !dbg !10624
  %10 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10624
  %state10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %10, i32 0, i32 0, !dbg !10625
  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %state10, i64 0, i64 %idxprom9, !dbg !10624
  store i32 %add, i32* %arrayidx11, align 4, !dbg !10626
  %11 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10627
  %index12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %11, i32 0, i32 1, !dbg !10628
  %12 = load i32, i32* %index12, align 4, !dbg !10629
  %inc = add nsw i32 %12, 1, !dbg !10629
  store i32 %inc, i32* %index12, align 4, !dbg !10629
  %and13 = and i32 %12, 63, !dbg !10630
  %idxprom14 = sext i32 %and13 to i64, !dbg !10631
  %13 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !10631
  %state15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %13, i32 0, i32 0, !dbg !10632
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %state15, i64 0, i64 %idxprom14, !dbg !10631
  %14 = load i32, i32* %arrayidx16, align 4, !dbg !10631
  ret i32 %14, !dbg !10633
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !10634 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7636, metadata !1854), !dbg !10637
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !10639, metadata !1854), !dbg !10640
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10641, metadata !1854), !dbg !10642
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10643, metadata !1854), !dbg !10644
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !10645, metadata !1854), !dbg !10646
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !10647
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !10648
  %1 = load i32, i32* %index, align 8, !dbg !10648
  store i32 %1, i32* %re_index, align 4, !dbg !10646
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !10649, metadata !1854), !dbg !10650
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !10651, metadata !1854), !dbg !10652
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !10653
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !10654
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !10654
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !10652
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !10655
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !10656
  %5 = load i8*, i8** %buffer, align 8, !dbg !10656
  %6 = load i32, i32* %re_index, align 4, !dbg !10657
  %shr = lshr i32 %6, 3, !dbg !10658
  %idx.ext = zext i32 %shr to i64, !dbg !10659
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !10659
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !10660
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !10660
  %8 = load i32, i32* %l, align 1, !dbg !10660
  store i32 %8, i32* %x.addr.i, align 4, !dbg !10661
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !10662
  %shl.i = shl i32 %9, 8, !dbg !10663
  %and.i = and i32 %shl.i, 65280, !dbg !10664
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !10665
  %shr.i = lshr i32 %10, 8, !dbg !10666
  %and1.i = and i32 %shr.i, 255, !dbg !10667
  %or.i = or i32 %and.i, %and1.i, !dbg !10668
  %shl2.i = shl i32 %or.i, 16, !dbg !10669
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !10670
  %shr3.i = lshr i32 %11, 16, !dbg !10671
  %shl4.i = shl i32 %shr3.i, 8, !dbg !10672
  %and5.i = and i32 %shl4.i, 65280, !dbg !10673
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !10674
  %shr6.i = lshr i32 %12, 16, !dbg !10675
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !10676
  %and8.i = and i32 %shr7.i, 255, !dbg !10677
  %or9.i = or i32 %and5.i, %and8.i, !dbg !10678
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !10679
  %13 = load i32, i32* %re_index, align 4, !dbg !10680
  %and = and i32 %13, 7, !dbg !10681
  %shl = shl i32 %or10.i, %and, !dbg !10682
  store i32 %shl, i32* %re_cache, align 4, !dbg !10683
  %14 = load i32, i32* %re_cache, align 4, !dbg !10684
  %15 = load i32, i32* %n.addr, align 4, !dbg !10685
  %conv = trunc i32 %15 to i8, !dbg !10685
  %call4 = call i32 @NEG_SSR32(i32 %14, i8 signext %conv), !dbg !10686
  store i32 %call4, i32* %tmp, align 4, !dbg !10687
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !10688
  %17 = load i32, i32* %re_index, align 4, !dbg !10689
  %18 = load i32, i32* %n.addr, align 4, !dbg !10690
  %add = add i32 %17, %18, !dbg !10691
  %cmp = icmp ugt i32 %16, %add, !dbg !10692
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10693

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !10694
  %20 = load i32, i32* %n.addr, align 4, !dbg !10696
  %add6 = add i32 %19, %20, !dbg !10697
  br label %cond.end, !dbg !10698

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !10699
  br label %cond.end, !dbg !10701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !10702
  store i32 %cond, i32* %re_index, align 4, !dbg !10704
  %22 = load i32, i32* %re_index, align 4, !dbg !10705
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !10706
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !10707
  store i32 %22, i32* %index7, align 8, !dbg !10708
  %24 = load i32, i32* %tmp, align 4, !dbg !10709
  ret i32 %24, !dbg !10710
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_SSR32(i32 %a, i8 signext %s) #4 !dbg !10711 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !10714, metadata !1854), !dbg !10715
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !10716, metadata !1854), !dbg !10717
  %0 = load i32, i32* %a.addr, align 4, !dbg !10718
  %1 = load i8, i8* %s.addr, align 1, !dbg !10719
  %conv = sext i8 %1 to i32, !dbg !10719
  %sub = sub nsw i32 0, %conv, !dbg !10720
  %conv1 = trunc i32 %sub to i8, !dbg !10721
  %2 = call i32 asm "sarl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !10718, !srcloc !10722
  store i32 %2, i32* %a.addr, align 4, !dbg !10718
  %3 = load i32, i32* %a.addr, align 4, !dbg !10723
  ret i32 %3, !dbg !10724
}

; Function Attrs: nounwind uwtable
define internal void @idct6(i32* %pre_mant) #1 !dbg !10725 {
entry:
  %pre_mant.addr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %even0 = alloca i32, align 4
  %even1 = alloca i32, align 4
  %even2 = alloca i32, align 4
  %odd0 = alloca i32, align 4
  %odd1 = alloca i32, align 4
  %odd2 = alloca i32, align 4
  store i32* %pre_mant, i32** %pre_mant.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pre_mant.addr, metadata !10728, metadata !1854), !dbg !10729
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10730, metadata !1854), !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %even0, metadata !10732, metadata !1854), !dbg !10733
  call void @llvm.dbg.declare(metadata i32* %even1, metadata !10734, metadata !1854), !dbg !10735
  call void @llvm.dbg.declare(metadata i32* %even2, metadata !10736, metadata !1854), !dbg !10737
  call void @llvm.dbg.declare(metadata i32* %odd0, metadata !10738, metadata !1854), !dbg !10739
  call void @llvm.dbg.declare(metadata i32* %odd1, metadata !10740, metadata !1854), !dbg !10741
  call void @llvm.dbg.declare(metadata i32* %odd2, metadata !10742, metadata !1854), !dbg !10743
  %0 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10744
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 1, !dbg !10744
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10744
  %2 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10745
  %arrayidx7 = getelementptr inbounds i32, i32* %2, i64 3, !dbg !10745
  %3 = load i32, i32* %arrayidx7, align 4, !dbg !10745
  %sub = sub nsw i32 %1, %3, !dbg !10746
  %4 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10747
  %arrayidx8 = getelementptr inbounds i32, i32* %4, i64 5, !dbg !10747
  %5 = load i32, i32* %arrayidx8, align 4, !dbg !10747
  %sub9 = sub nsw i32 %sub, %5, !dbg !10748
  store i32 %sub9, i32* %odd1, align 4, !dbg !10749
  %6 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10750
  %arrayidx10 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !10750
  %7 = load i32, i32* %arrayidx10, align 4, !dbg !10750
  %conv = sext i32 %7 to i64, !dbg !10750
  %mul = mul nsw i64 %conv, 10273905, !dbg !10751
  %shr = ashr i64 %mul, 23, !dbg !10752
  %conv11 = trunc i64 %shr to i32, !dbg !10753
  store i32 %conv11, i32* %even2, align 4, !dbg !10754
  %8 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10755
  %arrayidx12 = getelementptr inbounds i32, i32* %8, i64 4, !dbg !10755
  %9 = load i32, i32* %arrayidx12, align 4, !dbg !10755
  %conv13 = sext i32 %9 to i64, !dbg !10755
  %mul14 = mul nsw i64 %conv13, 11863283, !dbg !10756
  %shr15 = ashr i64 %mul14, 23, !dbg !10757
  %conv16 = trunc i64 %shr15 to i32, !dbg !10758
  store i32 %conv16, i32* %tmp, align 4, !dbg !10759
  %10 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10760
  %arrayidx17 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !10760
  %11 = load i32, i32* %arrayidx17, align 4, !dbg !10760
  %12 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10761
  %arrayidx18 = getelementptr inbounds i32, i32* %12, i64 5, !dbg !10761
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !10761
  %add = add nsw i32 %11, %13, !dbg !10762
  %conv19 = sext i32 %add to i64, !dbg !10763
  %mul20 = mul nsw i64 %conv19, 3070444, !dbg !10764
  %shr21 = ashr i64 %mul20, 23, !dbg !10765
  %conv22 = trunc i64 %shr21 to i32, !dbg !10766
  store i32 %conv22, i32* %odd0, align 4, !dbg !10767
  %14 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10768
  %arrayidx23 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !10768
  %15 = load i32, i32* %arrayidx23, align 4, !dbg !10768
  %16 = load i32, i32* %tmp, align 4, !dbg !10769
  %shr24 = ashr i32 %16, 1, !dbg !10770
  %add25 = add nsw i32 %15, %shr24, !dbg !10771
  store i32 %add25, i32* %even0, align 4, !dbg !10772
  %17 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10773
  %arrayidx26 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !10773
  %18 = load i32, i32* %arrayidx26, align 4, !dbg !10773
  %19 = load i32, i32* %tmp, align 4, !dbg !10774
  %sub27 = sub nsw i32 %18, %19, !dbg !10775
  store i32 %sub27, i32* %even1, align 4, !dbg !10776
  %20 = load i32, i32* %even0, align 4, !dbg !10777
  store i32 %20, i32* %tmp, align 4, !dbg !10778
  %21 = load i32, i32* %tmp, align 4, !dbg !10779
  %22 = load i32, i32* %even2, align 4, !dbg !10780
  %add28 = add nsw i32 %21, %22, !dbg !10781
  store i32 %add28, i32* %even0, align 4, !dbg !10782
  %23 = load i32, i32* %tmp, align 4, !dbg !10783
  %24 = load i32, i32* %even2, align 4, !dbg !10784
  %sub29 = sub nsw i32 %23, %24, !dbg !10785
  store i32 %sub29, i32* %even2, align 4, !dbg !10786
  %25 = load i32, i32* %odd0, align 4, !dbg !10787
  store i32 %25, i32* %tmp, align 4, !dbg !10788
  %26 = load i32, i32* %tmp, align 4, !dbg !10789
  %27 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10790
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 1, !dbg !10790
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !10790
  %add31 = add nsw i32 %26, %28, !dbg !10791
  %29 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10792
  %arrayidx32 = getelementptr inbounds i32, i32* %29, i64 3, !dbg !10792
  %30 = load i32, i32* %arrayidx32, align 4, !dbg !10792
  %add33 = add nsw i32 %add31, %30, !dbg !10793
  store i32 %add33, i32* %odd0, align 4, !dbg !10794
  %31 = load i32, i32* %tmp, align 4, !dbg !10795
  %32 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10796
  %arrayidx34 = getelementptr inbounds i32, i32* %32, i64 5, !dbg !10796
  %33 = load i32, i32* %arrayidx34, align 4, !dbg !10796
  %add35 = add nsw i32 %31, %33, !dbg !10797
  %34 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10798
  %arrayidx36 = getelementptr inbounds i32, i32* %34, i64 3, !dbg !10798
  %35 = load i32, i32* %arrayidx36, align 4, !dbg !10798
  %sub37 = sub nsw i32 %add35, %35, !dbg !10799
  store i32 %sub37, i32* %odd2, align 4, !dbg !10800
  %36 = load i32, i32* %even0, align 4, !dbg !10801
  %37 = load i32, i32* %odd0, align 4, !dbg !10802
  %add38 = add nsw i32 %36, %37, !dbg !10803
  %38 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10804
  %arrayidx39 = getelementptr inbounds i32, i32* %38, i64 0, !dbg !10804
  store i32 %add38, i32* %arrayidx39, align 4, !dbg !10805
  %39 = load i32, i32* %even1, align 4, !dbg !10806
  %40 = load i32, i32* %odd1, align 4, !dbg !10807
  %add40 = add nsw i32 %39, %40, !dbg !10808
  %41 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10809
  %arrayidx41 = getelementptr inbounds i32, i32* %41, i64 1, !dbg !10809
  store i32 %add40, i32* %arrayidx41, align 4, !dbg !10810
  %42 = load i32, i32* %even2, align 4, !dbg !10811
  %43 = load i32, i32* %odd2, align 4, !dbg !10812
  %add42 = add nsw i32 %42, %43, !dbg !10813
  %44 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10814
  %arrayidx43 = getelementptr inbounds i32, i32* %44, i64 2, !dbg !10814
  store i32 %add42, i32* %arrayidx43, align 4, !dbg !10815
  %45 = load i32, i32* %even2, align 4, !dbg !10816
  %46 = load i32, i32* %odd2, align 4, !dbg !10817
  %sub44 = sub nsw i32 %45, %46, !dbg !10818
  %47 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10819
  %arrayidx45 = getelementptr inbounds i32, i32* %47, i64 3, !dbg !10819
  store i32 %sub44, i32* %arrayidx45, align 4, !dbg !10820
  %48 = load i32, i32* %even1, align 4, !dbg !10821
  %49 = load i32, i32* %odd1, align 4, !dbg !10822
  %sub46 = sub nsw i32 %48, %49, !dbg !10823
  %50 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10824
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 4, !dbg !10824
  store i32 %sub46, i32* %arrayidx47, align 4, !dbg !10825
  %51 = load i32, i32* %even0, align 4, !dbg !10826
  %52 = load i32, i32* %odd0, align 4, !dbg !10827
  %sub48 = sub nsw i32 %51, %52, !dbg !10828
  %53 = load i32*, i32** %pre_mant.addr, align 8, !dbg !10829
  %arrayidx49 = getelementptr inbounds i32, i32* %53, i64 5, !dbg !10829
  store i32 %sub48, i32* %arrayidx49, align 4, !dbg !10830
  ret void, !dbg !10831
}

declare void @ff_mdct_end(%struct.FFTContext*) #2

declare void @av_freep(i8*) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1848, !1849}
!llvm.ident = !{!1850}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1014, globals: !1044)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ac3dec_float.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !915, !919, !930, !938, !948, !960, !967, !977, !983, !989, !995, !1001, !1007}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !910, line: 77, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914}
!912 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!914 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !910, line: 83, size: 32, align: 32, elements: !916)
!916 = !{!917, !918}
!917 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!918 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMatrixEncoding", file: !920, line: 114, size: 32, align: 32, elements: !921)
!920 = !DIFile(filename: "./libavutil/channel_layout.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929}
!922 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NONE", value: 0)
!923 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBY", value: 1)
!924 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLII", value: 2)
!925 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIX", value: 3)
!926 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIZ", value: 4)
!927 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYEX", value: 5)
!928 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYHEADPHONE", value: 6)
!929 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NB", value: 7)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDownmixType", file: !931, line: 44, size: 32, align: 32, elements: !932)
!931 = !DIFile(filename: "./libavutil/downmix_info.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!932 = !{!933, !934, !935, !936, !937}
!933 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_UNKNOWN", value: 0)
!934 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_LORO", value: 1)
!935 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_LTRT", value: 2)
!936 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_DPLII", value: 3)
!937 = !DIEnumerator(name: "AV_DOWNMIX_TYPE_NB", value: 4)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 30, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavcodec/aac_ac3_parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!940 = !{!941, !942, !943, !944, !945, !946, !947}
!941 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_SYNC", value: -16976906)
!942 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_BSID", value: -33754122)
!943 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_SAMPLE_RATE", value: -50531338)
!944 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_FRAME_SIZE", value: -67308554)
!945 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_FRAME_TYPE", value: -84085770)
!946 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_CRC", value: -100862986)
!947 = !DIEnumerator(name: "AAC_AC3_PARSE_ERROR_CHANNEL_CFG", value: -117640202)
!948 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !949, line: 49, size: 32, align: 32, elements: !950)
!949 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959}
!951 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!952 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!953 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!954 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!955 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!956 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!957 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!958 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!959 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!960 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 209, size: 32, align: 32, elements: !962)
!961 = !DIFile(filename: "libavcodec/ac3.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!962 = !{!963, !964, !965, !966}
!963 = !DIEnumerator(name: "EAC3_FRAME_TYPE_INDEPENDENT", value: 0)
!964 = !DIEnumerator(name: "EAC3_FRAME_TYPE_DEPENDENT", value: 1)
!965 = !DIEnumerator(name: "EAC3_FRAME_TYPE_AC3_CONVERT", value: 2)
!966 = !DIEnumerator(name: "EAC3_FRAME_TYPE_RESERVED", value: 3)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 123, size: 32, align: 32, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976}
!969 = !DIEnumerator(name: "AC3_CHMODE_DUALMONO", value: 0)
!970 = !DIEnumerator(name: "AC3_CHMODE_MONO", value: 1)
!971 = !DIEnumerator(name: "AC3_CHMODE_STEREO", value: 2)
!972 = !DIEnumerator(name: "AC3_CHMODE_3F", value: 3)
!973 = !DIEnumerator(name: "AC3_CHMODE_2F1R", value: 4)
!974 = !DIEnumerator(name: "AC3_CHMODE_3F1R", value: 5)
!975 = !DIEnumerator(name: "AC3_CHMODE_2F2R", value: 6)
!976 = !DIEnumerator(name: "AC3_CHMODE_3F2R", value: 7)
!977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbySurroundMode", file: !961, line: 135, size: 32, align: 32, elements: !978)
!978 = !{!979, !980, !981, !982}
!979 = !DIEnumerator(name: "AC3_DSURMOD_NOTINDICATED", value: 0)
!980 = !DIEnumerator(name: "AC3_DSURMOD_OFF", value: 1)
!981 = !DIEnumerator(name: "AC3_DSURMOD_ON", value: 2)
!982 = !DIEnumerator(name: "AC3_DSURMOD_RESERVED", value: 3)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbyHeadphoneMode", file: !961, line: 151, size: 32, align: 32, elements: !984)
!984 = !{!985, !986, !987, !988}
!985 = !DIEnumerator(name: "AC3_DHEADPHONMOD_NOTINDICATED", value: 0)
!986 = !DIEnumerator(name: "AC3_DHEADPHONMOD_OFF", value: 1)
!987 = !DIEnumerator(name: "AC3_DHEADPHONMOD_ON", value: 2)
!988 = !DIEnumerator(name: "AC3_DHEADPHONMOD_RESERVED", value: 3)
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3PreferredStereoDownmixMode", file: !961, line: 159, size: 32, align: 32, elements: !990)
!990 = !{!991, !992, !993, !994}
!991 = !DIEnumerator(name: "AC3_DMIXMOD_NOTINDICATED", value: 0)
!992 = !DIEnumerator(name: "AC3_DMIXMOD_LTRT", value: 1)
!993 = !DIEnumerator(name: "AC3_DMIXMOD_LORO", value: 2)
!994 = !DIEnumerator(name: "AC3_DMIXMOD_DPLII", value: 3)
!995 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AC3DolbySurroundEXMode", file: !961, line: 143, size: 32, align: 32, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "AC3_DSUREXMOD_NOTINDICATED", value: 0)
!998 = !DIEnumerator(name: "AC3_DSUREXMOD_OFF", value: 1)
!999 = !DIEnumerator(name: "AC3_DSUREXMOD_ON", value: 2)
!1000 = !DIEnumerator(name: "AC3_DSUREXMOD_PLIIZ", value: 3)
!1001 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !961, line: 115, size: 32, align: 32, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006}
!1003 = !DIEnumerator(name: "DBA_REUSE", value: 0)
!1004 = !DIEnumerator(name: "DBA_NEW", value: 1)
!1005 = !DIEnumerator(name: "DBA_NONE", value: 2)
!1006 = !DIEnumerator(name: "DBA_RESERVED", value: 3)
!1007 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1008, line: 50, size: 32, align: 32, elements: !1009)
!1008 = !DIFile(filename: "libavcodec/eac3dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1009 = !{!1010, !1011, !1012, !1013}
!1010 = !DIEnumerator(name: "EAC3_GAQ_NO", value: 0)
!1011 = !DIEnumerator(name: "EAC3_GAQ_12", value: 1)
!1012 = !DIEnumerator(name: "EAC3_GAQ_14", value: 2)
!1013 = !DIEnumerator(name: "EAC3_GAQ_124", value: 3)
!1014 = !{!1015, !1016, !1017, !1026, !1027, !1029, !1030, !1032, !1033, !1039, !1038, !1041, !1043}
!1015 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1016 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1020, line: 222, size: 16, align: 8, elements: !1021)
!1020 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1019, file: !1020, line: 222, baseType: !1023, size: 16, align: 16)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1024, line: 49, baseType: !1025)
!1024 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1025 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHORTFLOAT", file: !961, line: 97, baseType: !1032)
!1032 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1020, line: 221, size: 32, align: 8, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1035, file: !1020, line: 221, baseType: !1038, size: 32, align: 32)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1024, line: 51, baseType: !1016)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1024, line: 48, baseType: !1040)
!1040 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1024, line: 40, baseType: !1042)
!1042 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1024, line: 38, baseType: !1015)
!1044 = !{!1045, !1799, !1800, !1805, !1806, !1812, !1817, !1821, !1823, !1827, !1828, !1832, !1833, !1838, !1842, !1844, !1847}
!1045 = distinct !DIGlobalVariable(name: "ff_ac3_decoder", scope: !0, file: !1046, line: 56, type: !1047, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_ac3_decoder)
!1046 = !DIFile(filename: "libavcodec/ac3dec_float.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1049)
!1049 = !{!1050, !1054, !1055, !1056, !1057, !1058, !1067, !1070, !1073, !1076, !1081, !1082, !1155, !1163, !1164, !1165, !1167, !1714, !1720, !1728, !1732, !1733, !1770, !1774, !1778, !1779, !1783, !1787, !1788, !1792, !1793, !1794}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1048, file: !14, line: 3475, baseType: !1051, size: 64, align: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1048, file: !14, line: 3480, baseType: !1051, size: 64, align: 64, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1048, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1048, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1048, file: !14, line: 3487, baseType: !1015, size: 32, align: 32, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1048, file: !14, line: 3488, baseType: !1059, size: 64, align: 64, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1062, line: 61, baseType: !1063)
!1062 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1062, line: 58, size: 64, align: 32, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1063, file: !1062, line: 59, baseType: !1015, size: 32, align: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1063, file: !1062, line: 60, baseType: !1015, size: 32, align: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1048, file: !14, line: 3489, baseType: !1068, size: 64, align: 64, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1048, file: !14, line: 3490, baseType: !1071, size: 64, align: 64, offset: 384)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1048, file: !14, line: 3491, baseType: !1074, size: 64, align: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1048, file: !14, line: 3492, baseType: !1077, size: 64, align: 64, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1024, line: 55, baseType: !1080)
!1080 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1048, file: !14, line: 3493, baseType: !1039, size: 8, align: 8, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1048, file: !14, line: 3494, baseType: !1083, size: 64, align: 64, offset: 640)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1087)
!1087 = !{!1088, !1089, !1093, !1114, !1115, !1116, !1117, !1121, !1127, !1129, !1133}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1086, file: !713, line: 72, baseType: !1051, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1086, file: !713, line: 78, baseType: !1090, size: 64, align: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!1051, !1029}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1086, file: !713, line: 85, baseType: !1094, size: 64, align: 64, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1102, !1110, !1111, !1112, !1113}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1096, file: !691, line: 247, baseType: !1051, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1096, file: !691, line: 253, baseType: !1051, size: 64, align: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1096, file: !691, line: 259, baseType: !1015, size: 32, align: 32, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1096, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1096, file: !691, line: 271, baseType: !1103, size: 64, align: 64, offset: 192)
!1103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1096, file: !691, line: 265, size: 64, align: 64, elements: !1104)
!1104 = !{!1105, !1106, !1108, !1109}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1103, file: !691, line: 266, baseType: !1041, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1103, file: !691, line: 267, baseType: !1107, size: 64, align: 64)
!1107 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1103, file: !691, line: 268, baseType: !1051, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1103, file: !691, line: 270, baseType: !1061, size: 64, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1096, file: !691, line: 272, baseType: !1107, size: 64, align: 64, offset: 256)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1096, file: !691, line: 273, baseType: !1107, size: 64, align: 64, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1096, file: !691, line: 275, baseType: !1015, size: 32, align: 32, offset: 384)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1096, file: !691, line: 300, baseType: !1051, size: 64, align: 64, offset: 448)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1086, file: !713, line: 93, baseType: !1015, size: 32, align: 32, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1086, file: !713, line: 99, baseType: !1015, size: 32, align: 32, offset: 224)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1086, file: !713, line: 108, baseType: !1015, size: 32, align: 32, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1086, file: !713, line: 113, baseType: !1118, size: 64, align: 64, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!1029, !1029, !1029}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1086, file: !713, line: 123, baseType: !1122, size: 64, align: 64, offset: 384)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!1125, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1086, file: !713, line: 130, baseType: !1128, size: 32, align: 32, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1086, file: !713, line: 136, baseType: !1130, size: 64, align: 64, offset: 512)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64, align: 64)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!1128, !1029}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1086, file: !713, line: 142, baseType: !1134, size: 64, align: 64, offset: 576)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64, align: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!1015, !1137, !1029, !1051, !1015}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1140)
!1140 = !{!1141, !1153, !1154}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1139, file: !691, line: 360, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151, !1152}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1145, file: !691, line: 307, baseType: !1051, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1145, file: !691, line: 313, baseType: !1107, size: 64, align: 64, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1145, file: !691, line: 313, baseType: !1107, size: 64, align: 64, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1145, file: !691, line: 318, baseType: !1107, size: 64, align: 64, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1145, file: !691, line: 318, baseType: !1107, size: 64, align: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1145, file: !691, line: 323, baseType: !1015, size: 32, align: 32, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1139, file: !691, line: 364, baseType: !1015, size: 32, align: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1139, file: !691, line: 368, baseType: !1015, size: 32, align: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1048, file: !14, line: 3495, baseType: !1156, size: 64, align: 64, offset: 704)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1160)
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1159, file: !14, line: 3402, baseType: !1015, size: 32, align: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1159, file: !14, line: 3403, baseType: !1051, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1048, file: !14, line: 3507, baseType: !1051, size: 64, align: 64, offset: 768)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1048, file: !14, line: 3516, baseType: !1015, size: 32, align: 32, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1048, file: !14, line: 3517, baseType: !1166, size: 64, align: 64, offset: 896)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1048, file: !14, line: 3527, baseType: !1168, size: 64, align: 64, offset: 960)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1015, !1171}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178, !1181, !1182, !1183, !1184, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1464, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1652, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1173, file: !14, line: 1561, baseType: !1083, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1173, file: !14, line: 1562, baseType: !1015, size: 32, align: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1173, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1173, file: !14, line: 1565, baseType: !1179, size: 64, align: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1173, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1173, file: !14, line: 1581, baseType: !1016, size: 32, align: 32, offset: 224)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1173, file: !14, line: 1583, baseType: !1029, size: 64, align: 64, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1173, file: !14, line: 1591, baseType: !1185, size: 64, align: 64, offset: 320)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1187, line: 129, size: 1664, align: 64, elements: !1188)
!1187 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1188 = !{!1189, !1190, !1191, !1192, !1290, !1311, !1312, !1341, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1186, file: !1187, line: 136, baseType: !1015, size: 32, align: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1186, file: !1187, line: 151, baseType: !1015, size: 32, align: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1186, file: !1187, line: 157, baseType: !1015, size: 32, align: 32, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1186, file: !1187, line: 159, baseType: !1193, size: 64, align: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1196)
!1196 = !{!1197, !1202, !1204, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1242, !1244, !1245, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1278, !1279, !1280, !1281, !1282, !1283, !1286, !1287, !1288, !1289}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !744, line: 282, baseType: !1198, size: 512, align: 64)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 512, align: 64, elements: !1200)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1200 = !{!1201}
!1201 = !DISubrange(count: 8)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1195, file: !744, line: 299, baseType: !1203, size: 256, align: 32, offset: 512)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, align: 32, elements: !1200)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1195, file: !744, line: 315, baseType: !1205, size: 64, align: 64, offset: 768)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1195, file: !744, line: 326, baseType: !1015, size: 32, align: 32, offset: 832)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1195, file: !744, line: 326, baseType: !1015, size: 32, align: 32, offset: 864)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1195, file: !744, line: 334, baseType: !1015, size: 32, align: 32, offset: 896)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1195, file: !744, line: 341, baseType: !1015, size: 32, align: 32, offset: 928)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1195, file: !744, line: 346, baseType: !1015, size: 32, align: 32, offset: 960)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1195, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1195, file: !744, line: 356, baseType: !1061, size: 64, align: 32, offset: 1024)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1195, file: !744, line: 361, baseType: !1041, size: 64, align: 64, offset: 1088)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1195, file: !744, line: 369, baseType: !1041, size: 64, align: 64, offset: 1152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1195, file: !744, line: 377, baseType: !1041, size: 64, align: 64, offset: 1216)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1195, file: !744, line: 382, baseType: !1015, size: 32, align: 32, offset: 1280)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1195, file: !744, line: 386, baseType: !1015, size: 32, align: 32, offset: 1312)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1195, file: !744, line: 391, baseType: !1015, size: 32, align: 32, offset: 1344)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1195, file: !744, line: 396, baseType: !1029, size: 64, align: 64, offset: 1408)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1195, file: !744, line: 403, baseType: !1221, size: 512, align: 64, offset: 1472)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1079, size: 512, align: 64, elements: !1200)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1195, file: !744, line: 410, baseType: !1015, size: 32, align: 32, offset: 1984)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1195, file: !744, line: 415, baseType: !1015, size: 32, align: 32, offset: 2016)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1195, file: !744, line: 420, baseType: !1015, size: 32, align: 32, offset: 2048)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1195, file: !744, line: 425, baseType: !1015, size: 32, align: 32, offset: 2080)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1195, file: !744, line: 435, baseType: !1041, size: 64, align: 64, offset: 2112)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1195, file: !744, line: 440, baseType: !1015, size: 32, align: 32, offset: 2176)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1195, file: !744, line: 445, baseType: !1079, size: 64, align: 64, offset: 2240)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1195, file: !744, line: 459, baseType: !1230, size: 512, align: 64, offset: 2304)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1231, size: 512, align: 64, elements: !1200)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1233, line: 94, baseType: !1234)
!1233 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1233, line: 81, size: 192, align: 64, elements: !1235)
!1235 = !{!1236, !1240, !1241}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1234, file: !1233, line: 82, baseType: !1237, size: 64, align: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1233, line: 73, baseType: !1239)
!1239 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1233, line: 73, flags: DIFlagFwdDecl)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1234, file: !1233, line: 89, baseType: !1199, size: 64, align: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1234, file: !1233, line: 93, baseType: !1015, size: 32, align: 32, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1195, file: !744, line: 473, baseType: !1243, size: 64, align: 64, offset: 2816)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1195, file: !744, line: 477, baseType: !1015, size: 32, align: 32, offset: 2880)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1195, file: !744, line: 479, baseType: !1246, size: 64, align: 64, offset: 2944)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1249, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1249, file: !744, line: 203, baseType: !1199, size: 64, align: 64, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1249, file: !744, line: 204, baseType: !1015, size: 32, align: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1249, file: !744, line: 205, baseType: !1255, size: 64, align: 64, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1257, line: 86, baseType: !1258)
!1257 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1257, line: 86, flags: DIFlagFwdDecl)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !744, line: 206, baseType: !1231, size: 64, align: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1195, file: !744, line: 480, baseType: !1015, size: 32, align: 32, offset: 3008)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1195, file: !744, line: 505, baseType: !1015, size: 32, align: 32, offset: 3040)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1195, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1195, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1195, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1195, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1195, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1195, file: !744, line: 532, baseType: !1041, size: 64, align: 64, offset: 3264)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1195, file: !744, line: 539, baseType: !1041, size: 64, align: 64, offset: 3328)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1195, file: !744, line: 547, baseType: !1041, size: 64, align: 64, offset: 3392)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1195, file: !744, line: 554, baseType: !1255, size: 64, align: 64, offset: 3456)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1195, file: !744, line: 563, baseType: !1015, size: 32, align: 32, offset: 3520)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1195, file: !744, line: 572, baseType: !1015, size: 32, align: 32, offset: 3552)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1195, file: !744, line: 581, baseType: !1015, size: 32, align: 32, offset: 3584)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1195, file: !744, line: 588, baseType: !1275, size: 64, align: 64, offset: 3648)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1024, line: 36, baseType: !1277)
!1277 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1195, file: !744, line: 593, baseType: !1015, size: 32, align: 32, offset: 3712)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1195, file: !744, line: 596, baseType: !1015, size: 32, align: 32, offset: 3744)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1195, file: !744, line: 599, baseType: !1231, size: 64, align: 64, offset: 3776)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1195, file: !744, line: 605, baseType: !1231, size: 64, align: 64, offset: 3840)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1195, file: !744, line: 616, baseType: !1231, size: 64, align: 64, offset: 3904)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1195, file: !744, line: 626, baseType: !1284, size: 64, align: 64, offset: 3968)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1285, line: 216, baseType: !1080)
!1285 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1195, file: !744, line: 627, baseType: !1284, size: 64, align: 64, offset: 4032)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1195, file: !744, line: 628, baseType: !1284, size: 64, align: 64, offset: 4096)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1195, file: !744, line: 629, baseType: !1284, size: 64, align: 64, offset: 4160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1195, file: !744, line: 645, baseType: !1231, size: 64, align: 64, offset: 4224)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1186, file: !1187, line: 161, baseType: !1291, size: 64, align: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1187, line: 117, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1187, line: 100, size: 832, align: 64, elements: !1294)
!1294 = !{!1295, !1302, !1303, !1304, !1305, !1306, !1308, !1309, !1310}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1293, file: !1187, line: 105, baseType: !1296, size: 256, align: 64)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1297, size: 256, align: 64, elements: !1300)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1233, line: 238, baseType: !1299)
!1299 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1233, line: 238, flags: DIFlagFwdDecl)
!1300 = !{!1301}
!1301 = !DISubrange(count: 4)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1293, file: !1187, line: 110, baseType: !1015, size: 32, align: 32, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1293, file: !1187, line: 111, baseType: !1015, size: 32, align: 32, offset: 288)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1293, file: !1187, line: 111, baseType: !1015, size: 32, align: 32, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1293, file: !1187, line: 112, baseType: !1203, size: 256, align: 32, offset: 352)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1293, file: !1187, line: 113, baseType: !1307, size: 128, align: 32, offset: 608)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 128, align: 32, elements: !1300)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1293, file: !1187, line: 114, baseType: !1015, size: 32, align: 32, offset: 736)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1293, file: !1187, line: 115, baseType: !1015, size: 32, align: 32, offset: 768)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1293, file: !1187, line: 116, baseType: !1015, size: 32, align: 32, offset: 800)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1186, file: !1187, line: 163, baseType: !1029, size: 64, align: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1186, file: !1187, line: 165, baseType: !1313, size: 128, align: 64, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1187, line: 122, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1187, line: 119, size: 128, align: 64, elements: !1315)
!1315 = !{!1316, !1340}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1314, file: !1187, line: 120, baseType: !1317, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1336, !1337, !1338, !1339}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1319, file: !14, line: 1451, baseType: !1231, size: 64, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1319, file: !14, line: 1461, baseType: !1041, size: 64, align: 64, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1319, file: !14, line: 1467, baseType: !1041, size: 64, align: 64, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1319, file: !14, line: 1468, baseType: !1199, size: 64, align: 64, offset: 192)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1319, file: !14, line: 1469, baseType: !1015, size: 32, align: 32, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1319, file: !14, line: 1470, baseType: !1015, size: 32, align: 32, offset: 288)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1319, file: !14, line: 1474, baseType: !1015, size: 32, align: 32, offset: 320)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1319, file: !14, line: 1479, baseType: !1329, size: 64, align: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1332)
!1332 = !{!1333, !1334, !1335}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1331, file: !14, line: 1412, baseType: !1199, size: 64, align: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1331, file: !14, line: 1413, baseType: !1015, size: 32, align: 32, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1331, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1319, file: !14, line: 1480, baseType: !1015, size: 32, align: 32, offset: 448)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1319, file: !14, line: 1486, baseType: !1041, size: 64, align: 64, offset: 512)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1319, file: !14, line: 1488, baseType: !1041, size: 64, align: 64, offset: 576)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1319, file: !14, line: 1497, baseType: !1041, size: 64, align: 64, offset: 640)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1314, file: !1187, line: 121, baseType: !1193, size: 64, align: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1186, file: !1187, line: 166, baseType: !1342, size: 128, align: 64, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1187, line: 127, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1187, line: 124, size: 128, align: 64, elements: !1344)
!1344 = !{!1345, !1418}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1343, file: !1187, line: 125, baseType: !1346, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1350)
!1350 = !{!1351, !1352, !1376, !1380, !1381, !1415, !1416, !1417}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1349, file: !14, line: 5751, baseType: !1083, size: 64, align: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1349, file: !14, line: 5756, baseType: !1353, size: 64, align: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1356)
!1356 = !{!1357, !1358, !1361, !1362, !1363, !1367, !1371, !1375}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1355, file: !14, line: 5797, baseType: !1051, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1355, file: !14, line: 5804, baseType: !1359, size: 64, align: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1355, file: !14, line: 5815, baseType: !1083, size: 64, align: 64, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1355, file: !14, line: 5825, baseType: !1015, size: 32, align: 32, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1355, file: !14, line: 5826, baseType: !1364, size: 64, align: 64, offset: 256)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64, align: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!1015, !1347}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1355, file: !14, line: 5827, baseType: !1368, size: 64, align: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!1015, !1347, !1317}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1355, file: !14, line: 5828, baseType: !1372, size: 64, align: 64, offset: 384)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64, align: 64)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{null, !1347}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1355, file: !14, line: 5829, baseType: !1372, size: 64, align: 64, offset: 448)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1349, file: !14, line: 5762, baseType: !1377, size: 64, align: 64, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1379)
!1379 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1349, file: !14, line: 5768, baseType: !1029, size: 64, align: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1349, file: !14, line: 5775, baseType: !1382, size: 64, align: 64, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1384, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1384, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1384, file: !14, line: 3948, baseType: !1038, size: 32, align: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1384, file: !14, line: 3958, baseType: !1199, size: 64, align: 64, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1384, file: !14, line: 3962, baseType: !1015, size: 32, align: 32, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1384, file: !14, line: 3968, baseType: !1015, size: 32, align: 32, offset: 224)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1384, file: !14, line: 3973, baseType: !1041, size: 64, align: 64, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1384, file: !14, line: 3986, baseType: !1015, size: 32, align: 32, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1384, file: !14, line: 3999, baseType: !1015, size: 32, align: 32, offset: 352)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1384, file: !14, line: 4004, baseType: !1015, size: 32, align: 32, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1384, file: !14, line: 4005, baseType: !1015, size: 32, align: 32, offset: 416)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1384, file: !14, line: 4010, baseType: !1015, size: 32, align: 32, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1384, file: !14, line: 4011, baseType: !1015, size: 32, align: 32, offset: 480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1384, file: !14, line: 4020, baseType: !1061, size: 64, align: 32, offset: 512)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1384, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1384, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1384, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1384, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1384, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1384, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1384, file: !14, line: 4039, baseType: !1015, size: 32, align: 32, offset: 768)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1384, file: !14, line: 4046, baseType: !1079, size: 64, align: 64, offset: 832)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1384, file: !14, line: 4050, baseType: !1015, size: 32, align: 32, offset: 896)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1384, file: !14, line: 4054, baseType: !1015, size: 32, align: 32, offset: 928)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1384, file: !14, line: 4061, baseType: !1015, size: 32, align: 32, offset: 960)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1384, file: !14, line: 4065, baseType: !1015, size: 32, align: 32, offset: 992)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1384, file: !14, line: 4073, baseType: !1015, size: 32, align: 32, offset: 1024)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1384, file: !14, line: 4080, baseType: !1015, size: 32, align: 32, offset: 1056)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1384, file: !14, line: 4084, baseType: !1015, size: 32, align: 32, offset: 1088)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1349, file: !14, line: 5781, baseType: !1382, size: 64, align: 64, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1349, file: !14, line: 5787, baseType: !1061, size: 64, align: 32, offset: 384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1349, file: !14, line: 5793, baseType: !1061, size: 64, align: 32, offset: 448)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1343, file: !1187, line: 126, baseType: !1015, size: 32, align: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1186, file: !1187, line: 172, baseType: !1317, size: 64, align: 64, offset: 576)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1186, file: !1187, line: 177, baseType: !1199, size: 64, align: 64, offset: 640)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1186, file: !1187, line: 178, baseType: !1016, size: 32, align: 32, offset: 704)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1186, file: !1187, line: 180, baseType: !1029, size: 64, align: 64, offset: 768)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1186, file: !1187, line: 185, baseType: !1015, size: 32, align: 32, offset: 832)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1186, file: !1187, line: 190, baseType: !1029, size: 64, align: 64, offset: 896)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1186, file: !1187, line: 195, baseType: !1015, size: 32, align: 32, offset: 960)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1186, file: !1187, line: 200, baseType: !1317, size: 64, align: 64, offset: 1024)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1186, file: !1187, line: 201, baseType: !1015, size: 32, align: 32, offset: 1088)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1186, file: !1187, line: 202, baseType: !1193, size: 64, align: 64, offset: 1152)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1186, file: !1187, line: 203, baseType: !1015, size: 32, align: 32, offset: 1216)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1186, file: !1187, line: 205, baseType: !1015, size: 32, align: 32, offset: 1248)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1186, file: !1187, line: 206, baseType: !1015, size: 32, align: 32, offset: 1280)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1186, file: !1187, line: 209, baseType: !1284, size: 64, align: 64, offset: 1344)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1186, file: !1187, line: 212, baseType: !1284, size: 64, align: 64, offset: 1408)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1186, file: !1187, line: 213, baseType: !1193, size: 64, align: 64, offset: 1472)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1186, file: !1187, line: 215, baseType: !1015, size: 32, align: 32, offset: 1536)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1186, file: !1187, line: 217, baseType: !1015, size: 32, align: 32, offset: 1568)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1186, file: !1187, line: 220, baseType: !1015, size: 32, align: 32, offset: 1600)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1173, file: !14, line: 1598, baseType: !1029, size: 64, align: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1173, file: !14, line: 1606, baseType: !1041, size: 64, align: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1173, file: !14, line: 1614, baseType: !1015, size: 32, align: 32, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1173, file: !14, line: 1622, baseType: !1015, size: 32, align: 32, offset: 544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1173, file: !14, line: 1628, baseType: !1015, size: 32, align: 32, offset: 576)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !14, line: 1636, baseType: !1015, size: 32, align: 32, offset: 608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1173, file: !14, line: 1643, baseType: !1015, size: 32, align: 32, offset: 640)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1173, file: !14, line: 1657, baseType: !1199, size: 64, align: 64, offset: 704)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1173, file: !14, line: 1658, baseType: !1015, size: 32, align: 32, offset: 768)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1173, file: !14, line: 1679, baseType: !1061, size: 64, align: 32, offset: 800)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1173, file: !14, line: 1688, baseType: !1015, size: 32, align: 32, offset: 864)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1173, file: !14, line: 1712, baseType: !1015, size: 32, align: 32, offset: 896)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1173, file: !14, line: 1729, baseType: !1015, size: 32, align: 32, offset: 928)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1173, file: !14, line: 1729, baseType: !1015, size: 32, align: 32, offset: 960)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1173, file: !14, line: 1744, baseType: !1015, size: 32, align: 32, offset: 992)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1173, file: !14, line: 1744, baseType: !1015, size: 32, align: 32, offset: 1024)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1173, file: !14, line: 1751, baseType: !1015, size: 32, align: 32, offset: 1056)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1173, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1173, file: !14, line: 1791, baseType: !1457, size: 64, align: 64, offset: 1152)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{null, !1460, !1461, !1463, !1015, !1015, !1015}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1194)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1173, file: !14, line: 1808, baseType: !1465, size: 64, align: 64, offset: 1216)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!473, !1460, !1068}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1173, file: !14, line: 1816, baseType: !1015, size: 32, align: 32, offset: 1280)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1173, file: !14, line: 1825, baseType: !1032, size: 32, align: 32, offset: 1312)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1173, file: !14, line: 1830, baseType: !1015, size: 32, align: 32, offset: 1344)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1173, file: !14, line: 1838, baseType: !1032, size: 32, align: 32, offset: 1376)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1173, file: !14, line: 1846, baseType: !1015, size: 32, align: 32, offset: 1408)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1173, file: !14, line: 1851, baseType: !1015, size: 32, align: 32, offset: 1440)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1173, file: !14, line: 1861, baseType: !1032, size: 32, align: 32, offset: 1472)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1173, file: !14, line: 1868, baseType: !1032, size: 32, align: 32, offset: 1504)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1173, file: !14, line: 1875, baseType: !1032, size: 32, align: 32, offset: 1536)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1173, file: !14, line: 1882, baseType: !1032, size: 32, align: 32, offset: 1568)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1173, file: !14, line: 1889, baseType: !1032, size: 32, align: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1173, file: !14, line: 1896, baseType: !1032, size: 32, align: 32, offset: 1632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1173, file: !14, line: 1903, baseType: !1032, size: 32, align: 32, offset: 1664)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1173, file: !14, line: 1910, baseType: !1015, size: 32, align: 32, offset: 1696)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1173, file: !14, line: 1915, baseType: !1015, size: 32, align: 32, offset: 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1173, file: !14, line: 1926, baseType: !1463, size: 64, align: 64, offset: 1792)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1173, file: !14, line: 1935, baseType: !1061, size: 64, align: 32, offset: 1856)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1173, file: !14, line: 1942, baseType: !1015, size: 32, align: 32, offset: 1920)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1173, file: !14, line: 1948, baseType: !1015, size: 32, align: 32, offset: 1952)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1173, file: !14, line: 1954, baseType: !1015, size: 32, align: 32, offset: 1984)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1173, file: !14, line: 1960, baseType: !1015, size: 32, align: 32, offset: 2016)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1173, file: !14, line: 1984, baseType: !1015, size: 32, align: 32, offset: 2048)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1173, file: !14, line: 1991, baseType: !1015, size: 32, align: 32, offset: 2080)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1173, file: !14, line: 1996, baseType: !1015, size: 32, align: 32, offset: 2112)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1173, file: !14, line: 2004, baseType: !1015, size: 32, align: 32, offset: 2144)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1173, file: !14, line: 2011, baseType: !1015, size: 32, align: 32, offset: 2176)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1173, file: !14, line: 2018, baseType: !1015, size: 32, align: 32, offset: 2208)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1173, file: !14, line: 2027, baseType: !1015, size: 32, align: 32, offset: 2240)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1173, file: !14, line: 2034, baseType: !1015, size: 32, align: 32, offset: 2272)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1173, file: !14, line: 2044, baseType: !1015, size: 32, align: 32, offset: 2304)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1173, file: !14, line: 2054, baseType: !1026, size: 64, align: 64, offset: 2368)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1173, file: !14, line: 2061, baseType: !1026, size: 64, align: 64, offset: 2432)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1173, file: !14, line: 2066, baseType: !1015, size: 32, align: 32, offset: 2496)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1173, file: !14, line: 2070, baseType: !1015, size: 32, align: 32, offset: 2528)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1173, file: !14, line: 2078, baseType: !1015, size: 32, align: 32, offset: 2560)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1173, file: !14, line: 2085, baseType: !1015, size: 32, align: 32, offset: 2592)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1173, file: !14, line: 2092, baseType: !1015, size: 32, align: 32, offset: 2624)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1173, file: !14, line: 2099, baseType: !1015, size: 32, align: 32, offset: 2656)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1173, file: !14, line: 2106, baseType: !1015, size: 32, align: 32, offset: 2688)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1173, file: !14, line: 2113, baseType: !1015, size: 32, align: 32, offset: 2720)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1173, file: !14, line: 2120, baseType: !1015, size: 32, align: 32, offset: 2752)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1173, file: !14, line: 2125, baseType: !1015, size: 32, align: 32, offset: 2784)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1173, file: !14, line: 2133, baseType: !1015, size: 32, align: 32, offset: 2816)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1173, file: !14, line: 2140, baseType: !1015, size: 32, align: 32, offset: 2848)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1173, file: !14, line: 2145, baseType: !1015, size: 32, align: 32, offset: 2880)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1173, file: !14, line: 2153, baseType: !1015, size: 32, align: 32, offset: 2912)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1173, file: !14, line: 2158, baseType: !1015, size: 32, align: 32, offset: 2944)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1173, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1173, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1173, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1173, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1173, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1173, file: !14, line: 2203, baseType: !1015, size: 32, align: 32, offset: 3136)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1173, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1173, file: !14, line: 2212, baseType: !1015, size: 32, align: 32, offset: 3200)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1173, file: !14, line: 2213, baseType: !1015, size: 32, align: 32, offset: 3232)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1173, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1173, file: !14, line: 2232, baseType: !1015, size: 32, align: 32, offset: 3296)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1173, file: !14, line: 2243, baseType: !1015, size: 32, align: 32, offset: 3328)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1173, file: !14, line: 2249, baseType: !1015, size: 32, align: 32, offset: 3360)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1173, file: !14, line: 2256, baseType: !1015, size: 32, align: 32, offset: 3392)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1173, file: !14, line: 2263, baseType: !1079, size: 64, align: 64, offset: 3456)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1173, file: !14, line: 2270, baseType: !1079, size: 64, align: 64, offset: 3520)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1173, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1173, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1173, file: !14, line: 2367, baseType: !1534, size: 64, align: 64, offset: 3648)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!1015, !1460, !1193, !1015}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1173, file: !14, line: 2383, baseType: !1015, size: 32, align: 32, offset: 3712)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1173, file: !14, line: 2386, baseType: !1032, size: 32, align: 32, offset: 3744)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1173, file: !14, line: 2387, baseType: !1032, size: 32, align: 32, offset: 3776)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1173, file: !14, line: 2394, baseType: !1015, size: 32, align: 32, offset: 3808)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1173, file: !14, line: 2401, baseType: !1015, size: 32, align: 32, offset: 3840)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1173, file: !14, line: 2408, baseType: !1015, size: 32, align: 32, offset: 3872)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1173, file: !14, line: 2415, baseType: !1015, size: 32, align: 32, offset: 3904)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1173, file: !14, line: 2422, baseType: !1015, size: 32, align: 32, offset: 3936)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1173, file: !14, line: 2423, baseType: !1546, size: 64, align: 64, offset: 3968)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1548, file: !14, line: 827, baseType: !1015, size: 32, align: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1548, file: !14, line: 828, baseType: !1015, size: 32, align: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1548, file: !14, line: 829, baseType: !1015, size: 32, align: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1548, file: !14, line: 830, baseType: !1032, size: 32, align: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1173, file: !14, line: 2430, baseType: !1041, size: 64, align: 64, offset: 4032)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1173, file: !14, line: 2437, baseType: !1041, size: 64, align: 64, offset: 4096)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1173, file: !14, line: 2444, baseType: !1032, size: 32, align: 32, offset: 4160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1173, file: !14, line: 2451, baseType: !1032, size: 32, align: 32, offset: 4192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1173, file: !14, line: 2458, baseType: !1015, size: 32, align: 32, offset: 4224)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1173, file: !14, line: 2469, baseType: !1015, size: 32, align: 32, offset: 4256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1173, file: !14, line: 2475, baseType: !1015, size: 32, align: 32, offset: 4288)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1173, file: !14, line: 2481, baseType: !1015, size: 32, align: 32, offset: 4320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1173, file: !14, line: 2485, baseType: !1015, size: 32, align: 32, offset: 4352)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1173, file: !14, line: 2489, baseType: !1015, size: 32, align: 32, offset: 4384)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1173, file: !14, line: 2493, baseType: !1015, size: 32, align: 32, offset: 4416)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1173, file: !14, line: 2501, baseType: !1015, size: 32, align: 32, offset: 4448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1173, file: !14, line: 2506, baseType: !1015, size: 32, align: 32, offset: 4480)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1173, file: !14, line: 2510, baseType: !1015, size: 32, align: 32, offset: 4512)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1173, file: !14, line: 2514, baseType: !1041, size: 64, align: 64, offset: 4544)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1173, file: !14, line: 2528, baseType: !1570, size: 64, align: 64, offset: 4608)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{null, !1460, !1029, !1015, !1015}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1173, file: !14, line: 2534, baseType: !1015, size: 32, align: 32, offset: 4672)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1173, file: !14, line: 2545, baseType: !1015, size: 32, align: 32, offset: 4704)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1173, file: !14, line: 2547, baseType: !1015, size: 32, align: 32, offset: 4736)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1173, file: !14, line: 2549, baseType: !1015, size: 32, align: 32, offset: 4768)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1173, file: !14, line: 2551, baseType: !1015, size: 32, align: 32, offset: 4800)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1173, file: !14, line: 2553, baseType: !1015, size: 32, align: 32, offset: 4832)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1173, file: !14, line: 2555, baseType: !1015, size: 32, align: 32, offset: 4864)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1173, file: !14, line: 2557, baseType: !1015, size: 32, align: 32, offset: 4896)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1173, file: !14, line: 2559, baseType: !1015, size: 32, align: 32, offset: 4928)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1173, file: !14, line: 2563, baseType: !1015, size: 32, align: 32, offset: 4960)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1173, file: !14, line: 2571, baseType: !1584, size: 64, align: 64, offset: 4992)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1173, file: !14, line: 2579, baseType: !1584, size: 64, align: 64, offset: 5056)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1173, file: !14, line: 2586, baseType: !1015, size: 32, align: 32, offset: 5120)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1173, file: !14, line: 2615, baseType: !1015, size: 32, align: 32, offset: 5152)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1173, file: !14, line: 2627, baseType: !1015, size: 32, align: 32, offset: 5184)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1173, file: !14, line: 2637, baseType: !1015, size: 32, align: 32, offset: 5216)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1173, file: !14, line: 2681, baseType: !1015, size: 32, align: 32, offset: 5248)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1173, file: !14, line: 2709, baseType: !1041, size: 64, align: 64, offset: 5312)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1173, file: !14, line: 2716, baseType: !1593, size: 64, align: 64, offset: 5376)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1606, !1612, !1616, !1617, !1618, !1619, !1625, !1626, !1627, !1628, !1629}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1595, file: !14, line: 3642, baseType: !1051, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1595, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1595, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1595, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1595, file: !14, line: 3669, baseType: !1015, size: 32, align: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1595, file: !14, line: 3682, baseType: !1603, size: 64, align: 64, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1015, !1171, !1193}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1595, file: !14, line: 3698, baseType: !1607, size: 64, align: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1015, !1171, !1610, !1038}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1595, file: !14, line: 3712, baseType: !1613, size: 64, align: 64, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!1015, !1171, !1015, !1610, !1038}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1595, file: !14, line: 3726, baseType: !1607, size: 64, align: 64, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1595, file: !14, line: 3737, baseType: !1168, size: 64, align: 64, offset: 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1595, file: !14, line: 3746, baseType: !1015, size: 32, align: 32, offset: 512)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1595, file: !14, line: 3757, baseType: !1620, size: 64, align: 64, offset: 576)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64, align: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !1623}
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1595, file: !14, line: 3766, baseType: !1168, size: 64, align: 64, offset: 640)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1595, file: !14, line: 3774, baseType: !1168, size: 64, align: 64, offset: 704)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1595, file: !14, line: 3780, baseType: !1015, size: 32, align: 32, offset: 768)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1595, file: !14, line: 3785, baseType: !1015, size: 32, align: 32, offset: 800)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1595, file: !14, line: 3795, baseType: !1630, size: 64, align: 64, offset: 832)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!1015, !1171, !1231}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1173, file: !14, line: 2728, baseType: !1029, size: 64, align: 64, offset: 5440)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1173, file: !14, line: 2735, baseType: !1221, size: 512, align: 64, offset: 5504)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1173, file: !14, line: 2742, baseType: !1015, size: 32, align: 32, offset: 6016)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1173, file: !14, line: 2755, baseType: !1015, size: 32, align: 32, offset: 6048)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1173, file: !14, line: 2776, baseType: !1015, size: 32, align: 32, offset: 6080)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1173, file: !14, line: 2783, baseType: !1015, size: 32, align: 32, offset: 6112)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1173, file: !14, line: 2791, baseType: !1015, size: 32, align: 32, offset: 6144)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1173, file: !14, line: 2802, baseType: !1193, size: 64, align: 64, offset: 6208)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1173, file: !14, line: 2811, baseType: !1015, size: 32, align: 32, offset: 6272)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1173, file: !14, line: 2821, baseType: !1015, size: 32, align: 32, offset: 6304)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1173, file: !14, line: 2830, baseType: !1015, size: 32, align: 32, offset: 6336)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1173, file: !14, line: 2840, baseType: !1015, size: 32, align: 32, offset: 6368)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1173, file: !14, line: 2851, baseType: !1646, size: 64, align: 64, offset: 6400)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!1015, !1460, !1649, !1029, !1463, !1015, !1015}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!1015, !1460, !1029}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1173, file: !14, line: 2871, baseType: !1653, size: 64, align: 64, offset: 6464)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!1015, !1460, !1656, !1029, !1463, !1015}
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!1015, !1460, !1029, !1015, !1015}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1173, file: !14, line: 2878, baseType: !1015, size: 32, align: 32, offset: 6528)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1173, file: !14, line: 2885, baseType: !1015, size: 32, align: 32, offset: 6560)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1173, file: !14, line: 3005, baseType: !1015, size: 32, align: 32, offset: 6592)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1173, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1173, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1173, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1173, file: !14, line: 3037, baseType: !1199, size: 64, align: 64, offset: 6720)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1173, file: !14, line: 3038, baseType: !1015, size: 32, align: 32, offset: 6784)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1173, file: !14, line: 3050, baseType: !1079, size: 64, align: 64, offset: 6848)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1173, file: !14, line: 3065, baseType: !1015, size: 32, align: 32, offset: 6912)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1173, file: !14, line: 3083, baseType: !1015, size: 32, align: 32, offset: 6944)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1173, file: !14, line: 3092, baseType: !1061, size: 64, align: 32, offset: 6976)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1173, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1173, file: !14, line: 3106, baseType: !1061, size: 64, align: 32, offset: 7072)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1173, file: !14, line: 3113, baseType: !1674, size: 64, align: 64, offset: 7168)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684, !1687}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1677, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1677, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1677, file: !14, line: 720, baseType: !1051, size: 64, align: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1677, file: !14, line: 724, baseType: !1051, size: 64, align: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1677, file: !14, line: 728, baseType: !1015, size: 32, align: 32, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1677, file: !14, line: 734, baseType: !1685, size: 64, align: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1677, file: !14, line: 739, baseType: !1688, size: 64, align: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1173, file: !14, line: 3129, baseType: !1041, size: 64, align: 64, offset: 7232)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1173, file: !14, line: 3130, baseType: !1041, size: 64, align: 64, offset: 7296)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1173, file: !14, line: 3131, baseType: !1041, size: 64, align: 64, offset: 7360)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1173, file: !14, line: 3132, baseType: !1041, size: 64, align: 64, offset: 7424)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1173, file: !14, line: 3139, baseType: !1584, size: 64, align: 64, offset: 7488)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1173, file: !14, line: 3147, baseType: !1015, size: 32, align: 32, offset: 7552)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1173, file: !14, line: 3165, baseType: !1015, size: 32, align: 32, offset: 7584)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1173, file: !14, line: 3172, baseType: !1015, size: 32, align: 32, offset: 7616)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1173, file: !14, line: 3180, baseType: !1015, size: 32, align: 32, offset: 7648)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1173, file: !14, line: 3191, baseType: !1026, size: 64, align: 64, offset: 7680)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1173, file: !14, line: 3199, baseType: !1199, size: 64, align: 64, offset: 7744)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1173, file: !14, line: 3207, baseType: !1584, size: 64, align: 64, offset: 7808)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1173, file: !14, line: 3214, baseType: !1016, size: 32, align: 32, offset: 7872)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1173, file: !14, line: 3224, baseType: !1329, size: 64, align: 64, offset: 7936)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1173, file: !14, line: 3225, baseType: !1015, size: 32, align: 32, offset: 8000)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1173, file: !14, line: 3249, baseType: !1231, size: 64, align: 64, offset: 8064)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1173, file: !14, line: 3256, baseType: !1015, size: 32, align: 32, offset: 8128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1173, file: !14, line: 3271, baseType: !1015, size: 32, align: 32, offset: 8160)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1173, file: !14, line: 3279, baseType: !1041, size: 64, align: 64, offset: 8192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1173, file: !14, line: 3301, baseType: !1231, size: 64, align: 64, offset: 8256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1173, file: !14, line: 3310, baseType: !1015, size: 32, align: 32, offset: 8320)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1173, file: !14, line: 3337, baseType: !1015, size: 32, align: 32, offset: 8352)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1173, file: !14, line: 3351, baseType: !1015, size: 32, align: 32, offset: 8384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1173, file: !14, line: 3359, baseType: !1015, size: 32, align: 32, offset: 8416)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1048, file: !14, line: 3535, baseType: !1715, size: 64, align: 64, offset: 1024)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!1015, !1171, !1718}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1048, file: !14, line: 3541, baseType: !1721, size: 64, align: 64, offset: 1088)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64, align: 64)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1187, line: 223, size: 128, align: 64, elements: !1725)
!1725 = !{!1726, !1727}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1724, file: !1187, line: 224, baseType: !1610, size: 64, align: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1724, file: !1187, line: 225, baseType: !1610, size: 64, align: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1048, file: !14, line: 3549, baseType: !1729, size: 64, align: 64, offset: 1152)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{null, !1166}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1048, file: !14, line: 3551, baseType: !1168, size: 64, align: 64, offset: 1216)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1048, file: !14, line: 3552, baseType: !1734, size: 64, align: 64, offset: 1280)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64, align: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!1015, !1171, !1199, !1015, !1737}
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64, align: 64)
!1738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1769}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1739, file: !14, line: 3921, baseType: !1023, size: 16, align: 16)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1739, file: !14, line: 3922, baseType: !1038, size: 32, align: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1739, file: !14, line: 3923, baseType: !1038, size: 32, align: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1739, file: !14, line: 3924, baseType: !1016, size: 32, align: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1739, file: !14, line: 3925, baseType: !1746, size: 64, align: 64, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64, align: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1762, !1764, !1765, !1766, !1767, !1768}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1749, file: !14, line: 3886, baseType: !1015, size: 32, align: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1749, file: !14, line: 3887, baseType: !1015, size: 32, align: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1749, file: !14, line: 3888, baseType: !1015, size: 32, align: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1749, file: !14, line: 3889, baseType: !1015, size: 32, align: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1749, file: !14, line: 3890, baseType: !1015, size: 32, align: 32, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1749, file: !14, line: 3897, baseType: !1757, size: 768, align: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1758, file: !14, line: 3855, baseType: !1198, size: 512, align: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1758, file: !14, line: 3857, baseType: !1203, size: 256, align: 32, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1749, file: !14, line: 3903, baseType: !1763, size: 256, align: 64, offset: 960)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 256, align: 64, elements: !1300)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1749, file: !14, line: 3904, baseType: !1307, size: 128, align: 32, offset: 1216)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1749, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1749, file: !14, line: 3908, baseType: !1584, size: 64, align: 64, offset: 1408)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1749, file: !14, line: 3915, baseType: !1584, size: 64, align: 64, offset: 1472)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1749, file: !14, line: 3917, baseType: !1015, size: 32, align: 32, offset: 1536)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1739, file: !14, line: 3926, baseType: !1041, size: 64, align: 64, offset: 192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1048, file: !14, line: 3564, baseType: !1771, size: 64, align: 64, offset: 1344)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64, align: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!1015, !1171, !1317, !1461, !1463}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1048, file: !14, line: 3566, baseType: !1775, size: 64, align: 64, offset: 1408)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64, align: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!1015, !1171, !1029, !1463, !1317}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1048, file: !14, line: 3567, baseType: !1168, size: 64, align: 64, offset: 1472)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1048, file: !14, line: 3576, baseType: !1780, size: 64, align: 64, offset: 1536)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!1015, !1171, !1461}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1048, file: !14, line: 3577, baseType: !1784, size: 64, align: 64, offset: 1600)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64, align: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!1015, !1171, !1317}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1048, file: !14, line: 3584, baseType: !1603, size: 64, align: 64, offset: 1664)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1048, file: !14, line: 3589, baseType: !1789, size: 64, align: 64, offset: 1728)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64, align: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{null, !1171}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1048, file: !14, line: 3594, baseType: !1015, size: 32, align: 32, offset: 1792)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1048, file: !14, line: 3600, baseType: !1051, size: 64, align: 64, offset: 1856)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1048, file: !14, line: 3609, baseType: !1795, size: 64, align: 64, offset: 1920)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64, align: 64)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1799 = distinct !DIGlobalVariable(name: "ff_eac3_decoder", scope: !0, file: !1046, line: 79, type: !1047, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_eac3_decoder)
!1800 = distinct !DIGlobalVariable(name: "ff_ac3_heavy_dynamic_range_tab", scope: !0, file: !1801, line: 69, type: !1802, isLocal: false, isDefinition: true, variable: [256 x float]* @ff_ac3_heavy_dynamic_range_tab)
!1801 = !DIFile(filename: "libavcodec/ac3dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 8192, align: 32, elements: !1803)
!1803 = !{!1804}
!1804 = !DISubrange(count: 256)
!1805 = distinct !DIGlobalVariable(name: "ac3_decoder_class", scope: !0, file: !1046, line: 49, type: !1084, isLocal: true, isDefinition: true, variable: %struct.AVClass* @ac3_decoder_class)
!1806 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !1046, line: 34, type: !1807, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @options)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 5120, align: 64, elements: !1810)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1096)
!1810 = !{!1811}
!1811 = !DISubrange(count: 10)
!1812 = distinct !DIGlobalVariable(name: "ungroup_3_in_7_bits_tab", scope: !0, file: !1801, line: 48, type: !1813, isLocal: true, isDefinition: true, variable: [128 x [3 x i8]]* @ungroup_3_in_7_bits_tab)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 3072, align: 8, elements: !1814)
!1814 = !{!1815, !1816}
!1815 = !DISubrange(count: 128)
!1816 = !DISubrange(count: 3)
!1817 = distinct !DIGlobalVariable(name: "b1_mantissas", scope: !0, file: !1801, line: 51, type: !1818, isLocal: true, isDefinition: true, variable: [32 x [3 x i32]]* @b1_mantissas)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 3072, align: 32, elements: !1819)
!1819 = !{!1820, !1816}
!1820 = !DISubrange(count: 32)
!1821 = distinct !DIGlobalVariable(name: "b2_mantissas", scope: !0, file: !1801, line: 52, type: !1822, isLocal: true, isDefinition: true, variable: [128 x [3 x i32]]* @b2_mantissas)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 12288, align: 32, elements: !1814)
!1823 = distinct !DIGlobalVariable(name: "b4_mantissas", scope: !0, file: !1801, line: 54, type: !1824, isLocal: true, isDefinition: true, variable: [128 x [2 x i32]]* @b4_mantissas)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8192, align: 32, elements: !1825)
!1825 = !{!1815, !1826}
!1826 = !DISubrange(count: 2)
!1827 = distinct !DIGlobalVariable(name: "b3_mantissas", scope: !0, file: !1801, line: 53, type: !1203, isLocal: true, isDefinition: true, variable: [8 x i32]* @b3_mantissas)
!1828 = distinct !DIGlobalVariable(name: "b5_mantissas", scope: !0, file: !1801, line: 55, type: !1829, isLocal: true, isDefinition: true, variable: [16 x i32]* @b5_mantissas)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 512, align: 32, elements: !1830)
!1830 = !{!1831}
!1831 = !DISubrange(count: 16)
!1832 = distinct !DIGlobalVariable(name: "dynamic_range_tab", scope: !0, file: !1801, line: 68, type: !1802, isLocal: true, isDefinition: true, variable: [256 x float]* @dynamic_range_tab)
!1833 = distinct !DIGlobalVariable(name: "gain_levels", scope: !0, file: !1801, line: 73, type: !1834, isLocal: true, isDefinition: true, variable: [9 x float]* @gain_levels)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 288, align: 32, elements: !1836)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1836 = !{!1837}
!1837 = !DISubrange(count: 9)
!1838 = distinct !DIGlobalVariable(name: "ac3_default_coeffs", scope: !0, file: !1801, line: 98, type: !1839, isLocal: true, isDefinition: true, variable: [8 x [5 x [2 x i8]]]* @ac3_default_coeffs)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1611, size: 640, align: 8, elements: !1840)
!1840 = !{!1201, !1841, !1826}
!1841 = !DISubrange(count: 5)
!1842 = distinct !DIGlobalVariable(name: "quantization_tab", scope: !0, file: !1801, line: 61, type: !1843, isLocal: true, isDefinition: true, variable: [16 x i8]* @quantization_tab)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1611, size: 128, align: 8, elements: !1830)
!1844 = distinct !DIGlobalVariable(name: "gain_levels_lfe", scope: !0, file: !1801, line: 86, type: !1845, isLocal: true, isDefinition: true, variable: [32 x float]* @gain_levels_lfe)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 1024, align: 32, elements: !1846)
!1846 = !{!1820}
!1847 = distinct !DIGlobalVariable(name: "eac3_decoder_class", scope: !0, file: !1046, line: 72, type: !1084, isLocal: true, isDefinition: true, variable: %struct.AVClass* @eac3_decoder_class)
!1848 = !{i32 2, !"Dwarf Version", i32 4}
!1849 = !{i32 2, !"Debug Info Version", i32 3}
!1850 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1851 = distinct !DISubprogram(name: "ac3_decode_init", scope: !1801, file: !1801, line: 184, type: !1169, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!1852 = !{}
!1853 = !DILocalVariable(name: "avctx", arg: 1, scope: !1851, file: !1801, line: 184, type: !1171)
!1854 = !DIExpression()
!1855 = !DILocation(line: 184, column: 66, scope: !1851)
!1856 = !DILocalVariable(name: "s", scope: !1851, file: !1801, line: 186, type: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3DecodeContext", file: !1859, line: 252, baseType: !1860)
!1859 = !DIFile(filename: "libavcodec/ac3dec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3DecodeContext", file: !1859, line: 70, size: 1883648, align: 256, elements: !1861)
!1861 = !{!1862, !1864, !1865, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1924, !1925, !1929, !1930, !1934, !1935, !1937, !1938, !1939, !1940, !1943, !1944, !1946, !1948, !1949, !1950, !1951, !1952, !1956, !1957, !1958, !1962, !1963, !1964, !1967, !1968, !1969, !1970, !1972, !1973, !1974, !1975, !1976, !1977, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1991, !1994, !2007, !2008, !2009, !2010, !2012, !2016, !2020, !2021, !2022, !2023, !2026, !2027, !2028, !2029, !2039, !2040, !2085, !2086, !2101, !2145, !2217, !2236, !2238, !2241, !2242, !2244, !2246, !2249, !2251, !2252, !2254, !2258}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1860, file: !1859, line: 71, baseType: !1863, size: 64, align: 64)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1860, file: !1859, line: 72, baseType: !1171, size: 64, align: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "gbc", scope: !1860, file: !1859, line: 73, baseType: !1866, size: 256, align: 64, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1867, line: 70, baseType: !1868)
!1867 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1867, line: 61, size: 256, align: 64, elements: !1869)
!1869 = !{!1870, !1871, !1872, !1873, !1874}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1868, file: !1867, line: 62, baseType: !1610, size: 64, align: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1868, file: !1867, line: 62, baseType: !1610, size: 64, align: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1868, file: !1867, line: 67, baseType: !1015, size: 32, align: 32, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1868, file: !1867, line: 68, baseType: !1015, size: 32, align: 32, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1868, file: !1867, line: 69, baseType: !1015, size: 32, align: 32, offset: 192)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !1860, file: !1859, line: 77, baseType: !1015, size: 32, align: 32, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "substreamid", scope: !1860, file: !1859, line: 78, baseType: !1015, size: 32, align: 32, offset: 416)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "superframe_size", scope: !1860, file: !1859, line: 79, baseType: !1015, size: 32, align: 32, offset: 448)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1860, file: !1859, line: 80, baseType: !1015, size: 32, align: 32, offset: 480)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1860, file: !1859, line: 81, baseType: !1015, size: 32, align: 32, offset: 512)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1860, file: !1859, line: 82, baseType: !1015, size: 32, align: 32, offset: 544)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1860, file: !1859, line: 83, baseType: !1015, size: 32, align: 32, offset: 576)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_id", scope: !1860, file: !1859, line: 84, baseType: !1015, size: 32, align: 32, offset: 608)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !1860, file: !1859, line: 85, baseType: !1015, size: 32, align: 32, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "channel_mode", scope: !1860, file: !1859, line: 86, baseType: !1015, size: 32, align: 32, offset: 672)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_on", scope: !1860, file: !1859, line: 87, baseType: !1015, size: 32, align: 32, offset: 704)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "dialog_normalization", scope: !1860, file: !1859, line: 88, baseType: !1887, size: 64, align: 32, offset: 736)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 64, align: 32, elements: !1888)
!1888 = !{!1826}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "compression_exists", scope: !1860, file: !1859, line: 89, baseType: !1887, size: 64, align: 32, offset: 800)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "compression_gain", scope: !1860, file: !1859, line: 90, baseType: !1887, size: 64, align: 32, offset: 864)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !1860, file: !1859, line: 91, baseType: !1015, size: 32, align: 32, offset: 928)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_downmix", scope: !1860, file: !1859, line: 92, baseType: !1015, size: 32, align: 32, offset: 960)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !1860, file: !1859, line: 93, baseType: !1015, size: 32, align: 32, offset: 992)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level_ltrt", scope: !1860, file: !1859, line: 94, baseType: !1015, size: 32, align: 32, offset: 1024)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !1860, file: !1859, line: 95, baseType: !1015, size: 32, align: 32, offset: 1056)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level_ltrt", scope: !1860, file: !1859, line: 96, baseType: !1015, size: 32, align: 32, offset: 1088)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level_exists", scope: !1860, file: !1859, line: 97, baseType: !1015, size: 32, align: 32, offset: 1120)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level", scope: !1860, file: !1859, line: 98, baseType: !1015, size: 32, align: 32, offset: 1152)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "eac3", scope: !1860, file: !1859, line: 99, baseType: !1015, size: 32, align: 32, offset: 1184)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_frame_dependent_found", scope: !1860, file: !1859, line: 100, baseType: !1015, size: 32, align: 32, offset: 1216)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "eac3_subsbtreamid_found", scope: !1860, file: !1859, line: 101, baseType: !1015, size: 32, align: 32, offset: 1248)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_mode", scope: !1860, file: !1859, line: 102, baseType: !1015, size: 32, align: 32, offset: 1280)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_ex_mode", scope: !1860, file: !1859, line: 103, baseType: !1015, size: 32, align: 32, offset: 1312)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_headphone_mode", scope: !1860, file: !1859, line: 104, baseType: !1015, size: 32, align: 32, offset: 1344)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_stereo_downmix", scope: !1860, file: !1859, line: 107, baseType: !1015, size: 32, align: 32, offset: 1376)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_center_mix_level", scope: !1860, file: !1859, line: 108, baseType: !1032, size: 32, align: 32, offset: 1408)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ltrt_surround_mix_level", scope: !1860, file: !1859, line: 109, baseType: !1032, size: 32, align: 32, offset: 1440)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "loro_center_mix_level", scope: !1860, file: !1859, line: 110, baseType: !1032, size: 32, align: 32, offset: 1472)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "loro_surround_mix_level", scope: !1860, file: !1859, line: 111, baseType: !1032, size: 32, align: 32, offset: 1504)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "target_level", scope: !1860, file: !1859, line: 112, baseType: !1015, size: 32, align: 32, offset: 1536)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "level_gain", scope: !1860, file: !1859, line: 113, baseType: !1912, size: 64, align: 32, offset: 1568)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 64, align: 32, elements: !1888)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "snr_offset_strategy", scope: !1860, file: !1859, line: 116, baseType: !1015, size: 32, align: 32, offset: 1632)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "block_switch_syntax", scope: !1860, file: !1859, line: 117, baseType: !1015, size: 32, align: 32, offset: 1664)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "dither_flag_syntax", scope: !1860, file: !1859, line: 118, baseType: !1015, size: 32, align: 32, offset: 1696)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation_syntax", scope: !1860, file: !1859, line: 119, baseType: !1015, size: 32, align: 32, offset: 1728)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "fast_gain_syntax", scope: !1860, file: !1859, line: 120, baseType: !1015, size: 32, align: 32, offset: 1760)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "dba_syntax", scope: !1860, file: !1859, line: 121, baseType: !1015, size: 32, align: 32, offset: 1792)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "skip_syntax", scope: !1860, file: !1859, line: 122, baseType: !1015, size: 32, align: 32, offset: 1824)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_in_use", scope: !1860, file: !1859, line: 126, baseType: !1921, size: 192, align: 32, offset: 1856)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 192, align: 32, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 6)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_strategy_exists", scope: !1860, file: !1859, line: 127, baseType: !1921, size: 192, align: 32, offset: 2048)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "channel_in_cpl", scope: !1860, file: !1859, line: 128, baseType: !1926, size: 224, align: 32, offset: 2240)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 224, align: 32, elements: !1927)
!1927 = !{!1928}
!1928 = !DISubrange(count: 7)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "phase_flags_in_use", scope: !1860, file: !1859, line: 129, baseType: !1015, size: 32, align: 32, offset: 2464)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "phase_flags", scope: !1860, file: !1859, line: 130, baseType: !1931, size: 576, align: 32, offset: 2496)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 576, align: 32, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 18)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "num_cpl_bands", scope: !1860, file: !1859, line: 131, baseType: !1015, size: 32, align: 32, offset: 3072)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_band_struct", scope: !1860, file: !1859, line: 132, baseType: !1936, size: 144, align: 8, offset: 3104)
!1936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 144, align: 8, elements: !1932)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_band_sizes", scope: !1860, file: !1859, line: 133, baseType: !1936, size: 144, align: 8, offset: 3248)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "firstchincpl", scope: !1860, file: !1859, line: 134, baseType: !1015, size: 32, align: 32, offset: 3392)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "first_cpl_coords", scope: !1860, file: !1859, line: 135, baseType: !1926, size: 224, align: 32, offset: 3424)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_coords", scope: !1860, file: !1859, line: 136, baseType: !1941, size: 4032, align: 32, offset: 3648)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 4032, align: 32, elements: !1942)
!1942 = !{!1928, !1933}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "spx_in_use", scope: !1860, file: !1859, line: 141, baseType: !1015, size: 32, align: 32, offset: 7680)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "channel_uses_spx", scope: !1860, file: !1859, line: 142, baseType: !1945, size: 56, align: 8, offset: 7712)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 56, align: 8, elements: !1927)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "spx_atten_code", scope: !1860, file: !1859, line: 143, baseType: !1947, size: 56, align: 8, offset: 7768)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 56, align: 8, elements: !1927)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "spx_src_start_freq", scope: !1860, file: !1859, line: 144, baseType: !1015, size: 32, align: 32, offset: 7840)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "spx_dst_end_freq", scope: !1860, file: !1859, line: 145, baseType: !1015, size: 32, align: 32, offset: 7872)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "spx_dst_start_freq", scope: !1860, file: !1859, line: 146, baseType: !1015, size: 32, align: 32, offset: 7904)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "num_spx_bands", scope: !1860, file: !1859, line: 148, baseType: !1015, size: 32, align: 32, offset: 7936)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "spx_band_struct", scope: !1860, file: !1859, line: 149, baseType: !1953, size: 136, align: 8, offset: 7968)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 136, align: 8, elements: !1954)
!1954 = !{!1955}
!1955 = !DISubrange(count: 17)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "spx_band_sizes", scope: !1860, file: !1859, line: 150, baseType: !1953, size: 136, align: 8, offset: 8104)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "first_spx_coords", scope: !1860, file: !1859, line: 151, baseType: !1945, size: 56, align: 8, offset: 8240)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "spx_noise_blend", scope: !1860, file: !1859, line: 152, baseType: !1959, size: 3808, align: 32, offset: 8320)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 3808, align: 32, elements: !1961)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !961, line: 96, baseType: !1032)
!1961 = !{!1928, !1955}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "spx_signal_blend", scope: !1860, file: !1859, line: 153, baseType: !1959, size: 3808, align: 32, offset: 12128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "channel_uses_aht", scope: !1860, file: !1859, line: 157, baseType: !1926, size: 224, align: 32, offset: 15936)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pre_mantissa", scope: !1860, file: !1859, line: 158, baseType: !1965, size: 344064, align: 32, offset: 16160)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 344064, align: 32, elements: !1966)
!1966 = !{!1928, !1804, !1923}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "fbw_channels", scope: !1860, file: !1859, line: 162, baseType: !1015, size: 32, align: 32, offset: 360224)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1860, file: !1859, line: 163, baseType: !1015, size: 32, align: 32, offset: 360256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_ch", scope: !1860, file: !1859, line: 164, baseType: !1015, size: 32, align: 32, offset: 360288)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "downmix_coeffs", scope: !1860, file: !1859, line: 165, baseType: !1971, size: 128, align: 64, offset: 360320)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 128, align: 64, elements: !1888)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "downmixed", scope: !1860, file: !1859, line: 166, baseType: !1015, size: 32, align: 32, offset: 360448)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "output_mode", scope: !1860, file: !1859, line: 167, baseType: !1015, size: 32, align: 32, offset: 360480)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "prev_output_mode", scope: !1860, file: !1859, line: 168, baseType: !1015, size: 32, align: 32, offset: 360512)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "out_channels", scope: !1860, file: !1859, line: 169, baseType: !1015, size: 32, align: 32, offset: 360544)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bit_rate", scope: !1860, file: !1859, line: 170, baseType: !1015, size: 32, align: 32, offset: 360576)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_range", scope: !1860, file: !1859, line: 174, baseType: !1978, size: 64, align: 32, offset: 360608)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 64, align: 32, elements: !1888)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "drc_scale", scope: !1860, file: !1859, line: 175, baseType: !1960, size: 32, align: 32, offset: 360672)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "heavy_compression", scope: !1860, file: !1859, line: 176, baseType: !1015, size: 32, align: 32, offset: 360704)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "heavy_dynamic_range", scope: !1860, file: !1859, line: 177, baseType: !1978, size: 64, align: 32, offset: 360736)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "start_freq", scope: !1860, file: !1859, line: 181, baseType: !1926, size: 224, align: 32, offset: 360800)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "end_freq", scope: !1860, file: !1859, line: 182, baseType: !1926, size: 224, align: 32, offset: 361024)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "consistent_noise_generation", scope: !1860, file: !1859, line: 186, baseType: !1015, size: 32, align: 32, offset: 361248)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "num_rematrixing_bands", scope: !1860, file: !1859, line: 190, baseType: !1015, size: 32, align: 32, offset: 361280)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rematrixing_flags", scope: !1860, file: !1859, line: 191, baseType: !1307, size: 128, align: 32, offset: 361312)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "num_exp_groups", scope: !1860, file: !1859, line: 195, baseType: !1926, size: 224, align: 32, offset: 361440)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "dexps", scope: !1860, file: !1859, line: 196, baseType: !1989, size: 14336, align: 8, offset: 361664)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 14336, align: 8, elements: !1990)
!1990 = !{!1928, !1804}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "exp_strategy", scope: !1860, file: !1859, line: 197, baseType: !1992, size: 1344, align: 32, offset: 376000)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1344, align: 32, elements: !1993)
!1993 = !{!1923, !1928}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc_params", scope: !1860, file: !1859, line: 201, baseType: !1995, size: 288, align: 32, offset: 377344)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3BitAllocParameters", file: !961, line: 171, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3BitAllocParameters", file: !961, line: 166, size: 288, align: 32, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !1996, file: !961, line: 167, baseType: !1015, size: 32, align: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sr_shift", scope: !1996, file: !961, line: 168, baseType: !1015, size: 32, align: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "slow_gain", scope: !1996, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "slow_decay", scope: !1996, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 96)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "fast_decay", scope: !1996, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "db_per_bit", scope: !1996, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 160)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "floor", scope: !1996, file: !961, line: 169, baseType: !1015, size: 32, align: 32, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_fast_leak", scope: !1996, file: !961, line: 170, baseType: !1015, size: 32, align: 32, offset: 224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "cpl_slow_leak", scope: !1996, file: !961, line: 170, baseType: !1015, size: 32, align: 32, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "first_cpl_leak", scope: !1860, file: !1859, line: 202, baseType: !1015, size: 32, align: 32, offset: 377632)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "snr_offset", scope: !1860, file: !1859, line: 203, baseType: !1926, size: 224, align: 32, offset: 377664)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "fast_gain", scope: !1860, file: !1859, line: 204, baseType: !1926, size: 224, align: 32, offset: 377888)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "bap", scope: !1860, file: !1859, line: 205, baseType: !2011, size: 14336, align: 8, offset: 378112)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 14336, align: 8, elements: !1990)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "psd", scope: !1860, file: !1859, line: 206, baseType: !2013, size: 28672, align: 16, offset: 392448)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 28672, align: 16, elements: !1990)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1024, line: 37, baseType: !2015)
!2015 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "band_psd", scope: !1860, file: !1859, line: 207, baseType: !2017, size: 5600, align: 16, offset: 421120)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 5600, align: 16, elements: !2018)
!2018 = !{!1928, !2019}
!2019 = !DISubrange(count: 50)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1860, file: !1859, line: 208, baseType: !2017, size: 5600, align: 16, offset: 426720)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "dba_mode", scope: !1860, file: !1859, line: 209, baseType: !1926, size: 224, align: 32, offset: 432320)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "dba_nsegs", scope: !1860, file: !1859, line: 210, baseType: !1926, size: 224, align: 32, offset: 432544)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "dba_offsets", scope: !1860, file: !1859, line: 211, baseType: !2024, size: 448, align: 8, offset: 432768)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 448, align: 8, elements: !2025)
!2025 = !{!1928, !1201}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "dba_lengths", scope: !1860, file: !1859, line: 212, baseType: !2024, size: 448, align: 8, offset: 433216)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dba_values", scope: !1860, file: !1859, line: 213, baseType: !2024, size: 448, align: 8, offset: 433664)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "dither_flag", scope: !1860, file: !1859, line: 217, baseType: !1926, size: 224, align: 32, offset: 434112)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "dith_state", scope: !1860, file: !1859, line: 218, baseType: !2030, size: 2080, align: 32, offset: 434336)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !2031, line: 30, baseType: !2032)
!2031 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !2031, line: 27, size: 2080, align: 32, elements: !2033)
!2033 = !{!2034, !2038}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2032, file: !2031, line: 28, baseType: !2035, size: 2048, align: 32)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1016, size: 2048, align: 32, elements: !2036)
!2036 = !{!2037}
!2037 = !DISubrange(count: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2032, file: !2031, line: 29, baseType: !1015, size: 32, align: 32, offset: 2048)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "block_switch", scope: !1860, file: !1859, line: 222, baseType: !1926, size: 224, align: 32, offset: 436416)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_512", scope: !1860, file: !1859, line: 223, baseType: !2041, size: 896, align: 64, offset: 436672)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !2042, line: 41, baseType: !2043)
!2042 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !910, line: 88, size: 896, align: 64, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048, !2056, !2057, !2058, !2060, !2061, !2066, !2067, !2073, !2074, !2075, !2081, !2082, !2083}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2043, file: !910, line: 89, baseType: !1015, size: 32, align: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2043, file: !910, line: 90, baseType: !1015, size: 32, align: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2043, file: !910, line: 91, baseType: !1026, size: 64, align: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2043, file: !910, line: 92, baseType: !2049, size: 64, align: 64, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64, align: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !2042, line: 39, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !2042, line: 37, size: 64, align: 32, elements: !2052)
!2052 = !{!2053, !2055}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2051, file: !2042, line: 38, baseType: !2054, size: 32, align: 32)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !2042, line: 35, baseType: !1032)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2051, file: !2042, line: 38, baseType: !2054, size: 32, align: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2043, file: !910, line: 93, baseType: !1015, size: 32, align: 32, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2043, file: !910, line: 94, baseType: !1015, size: 32, align: 32, offset: 224)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2043, file: !910, line: 96, baseType: !2059, size: 64, align: 64, offset: 256)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64, align: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2043, file: !910, line: 97, baseType: !2059, size: 64, align: 64, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2043, file: !910, line: 101, baseType: !2062, size: 64, align: 64, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64, align: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{null, !2065, !2049}
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2043, file: !910, line: 106, baseType: !2062, size: 64, align: 64, offset: 448)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2043, file: !910, line: 107, baseType: !2068, size: 64, align: 64, offset: 512)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64, align: 64)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{null, !2065, !2059, !2071}
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64, align: 64)
!2072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2043, file: !910, line: 108, baseType: !2068, size: 64, align: 64, offset: 576)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2043, file: !910, line: 109, baseType: !2068, size: 64, align: 64, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2043, file: !910, line: 110, baseType: !2076, size: 64, align: 64, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64, align: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !2065, !2079, !2071}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64, align: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !910, line: 43, baseType: !1032)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2043, file: !910, line: 111, baseType: !909, size: 32, align: 32, offset: 768)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2043, file: !910, line: 112, baseType: !915, size: 32, align: 32, offset: 800)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2043, file: !910, line: 113, baseType: !2084, size: 64, align: 64, offset: 832)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_256", scope: !1860, file: !1859, line: 224, baseType: !2041, size: 896, align: 64, offset: 437568)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1860, file: !1859, line: 228, baseType: !2087, size: 128, align: 64, offset: 438464)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !2088, line: 27, baseType: !2089)
!2088 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !2088, line: 24, size: 128, align: 64, elements: !2090)
!2090 = !{!2091, !2097}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !2089, file: !2088, line: 25, baseType: !2092, size: 64, align: 64)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64, align: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null, !2084, !2095, !1015}
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !2089, file: !2088, line: 26, baseType: !2098, size: 64, align: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64, align: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !1026, !1027, !1015}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1860, file: !1859, line: 232, baseType: !2102, size: 64, align: 64, offset: 438592)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64, align: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !2104, line: 192, baseType: !2105)
!2104 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !2104, line: 24, size: 704, align: 64, elements: !2106)
!2106 = !{!2107, !2113, !2117, !2124, !2125, !2126, !2130, !2131, !2132, !2137, !2141}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !2105, file: !2104, line: 38, baseType: !2108, size: 64, align: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64, align: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !2111, !2112, !2112, !1015}
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64, align: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !2105, file: !2104, line: 54, baseType: !2114, size: 64, align: 64, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64, align: 64)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{null, !2111, !2112, !1032, !1015}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !2105, file: !2104, line: 70, baseType: !2118, size: 64, align: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64, align: 64)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{null, !2121, !2122, !1107, !1015}
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64, align: 64)
!2123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !2105, file: !2104, line: 85, baseType: !2114, size: 64, align: 64, offset: 192)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !2105, file: !2104, line: 100, baseType: !2118, size: 64, align: 64, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !2105, file: !2104, line: 119, baseType: !2127, size: 64, align: 64, offset: 320)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64, align: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !2111, !2112, !2112, !2112, !1015}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !2105, file: !2104, line: 137, baseType: !2127, size: 64, align: 64, offset: 384)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !2105, file: !2104, line: 154, baseType: !2108, size: 64, align: 64, offset: 448)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !2105, file: !2104, line: 164, baseType: !2133, size: 64, align: 64, offset: 512)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64, align: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{null, !2136, !2136, !1015}
!2136 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2111)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !2105, file: !2104, line: 175, baseType: !2138, size: 64, align: 64, offset: 576)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64, align: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!1032, !2112, !2112, !1015}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !2105, file: !2104, line: 190, baseType: !2142, size: 64, align: 64, offset: 640)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64, align: 64)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{null, !2121, !2122, !2122, !1015}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ac3dsp", scope: !1860, file: !1859, line: 234, baseType: !2146, size: 960, align: 64, offset: 438656)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3DSPContext", file: !2147, line: 153, baseType: !2148)
!2147 = !DIFile(filename: "libavcodec/ac3dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3DSPContext", file: !2147, line: 33, size: 960, align: 64, elements: !2149)
!2149 = !{!2150, !2154, !2160, !2165, !2170, !2174, !2178, !2182, !2188, !2192, !2199, !2200, !2201, !2202, !2207, !2213}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_exponent_min", scope: !2148, file: !2147, line: 43, baseType: !2151, size: 64, align: 64)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64, align: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !1199, !1015, !1015}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_max_msb_abs_int16", scope: !2148, file: !2147, line: 54, baseType: !2155, size: 64, align: 64, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64, align: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!1015, !2158, !1015}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64, align: 64)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_lshift_int16", scope: !2148, file: !2147, line: 65, baseType: !2161, size: 64, align: 64, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64, align: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !2164, !1016, !1016}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ac3_rshift_int32", scope: !2148, file: !2147, line: 76, baseType: !2166, size: 64, align: 64, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64, align: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !2169, !1016, !1016}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "float_to_fixed24", scope: !2148, file: !2147, line: 89, baseType: !2171, size: 64, align: 64, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64, align: 64)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{null, !2169, !2112, !1016}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "bit_alloc_calc_bap", scope: !2148, file: !2147, line: 106, baseType: !2175, size: 64, align: 64, offset: 320)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64, align: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{null, !2164, !2164, !1015, !1015, !1015, !1015, !1610, !1199}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "update_bap_counts", scope: !2148, file: !2147, line: 117, baseType: !2179, size: 64, align: 64, offset: 384)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64, align: 64)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !1026, !1199, !1015}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "compute_mantissa_size", scope: !2148, file: !2147, line: 125, baseType: !2183, size: 64, align: 64, offset: 448)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64, align: 64)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!1015, !2186}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64, align: 64)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 256, align: 16, elements: !1830)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "extract_exponents", scope: !2148, file: !2147, line: 127, baseType: !2189, size: 64, align: 64, offset: 512)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64, align: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !1199, !2169, !1015}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_int32", scope: !2148, file: !2147, line: 129, baseType: !2193, size: 64, align: 64, offset: 576)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64, align: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{null, !2196, !2197, !2197, !1015}
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64, align: 64)
!2198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square_butterfly_float", scope: !2148, file: !2147, line: 132, baseType: !2108, size: 64, align: 64, offset: 640)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "out_channels", scope: !2148, file: !2147, line: 135, baseType: !1015, size: 32, align: 32, offset: 704)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "in_channels", scope: !2148, file: !2147, line: 136, baseType: !1015, size: 32, align: 32, offset: 736)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "downmix", scope: !2148, file: !2147, line: 137, baseType: !2203, size: 64, align: 64, offset: 768)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64, align: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{null, !2206, !2206, !1015}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64, align: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "downmix_fixed", scope: !2148, file: !2147, line: 138, baseType: !2208, size: 64, align: 64, offset: 832)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64, align: 64)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{null, !2211, !2212, !1015}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64, align: 64)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64, align: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_int16", scope: !2148, file: !2147, line: 151, baseType: !2214, size: 64, align: 64, offset: 896)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64, align: 64)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{null, !2164, !2158, !2158, !1016}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fmt_conv", scope: !1860, file: !1859, line: 235, baseType: !2218, size: 192, align: 64, offset: 439616)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "FmtConvertContext", file: !2219, line: 67, baseType: !2220)
!2219 = !DIFile(filename: "libavcodec/fmtconvert.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FmtConvertContext", file: !2219, line: 28, size: 192, align: 64, elements: !2221)
!2221 = !{!2222, !2226, !2231}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float_fmul_scalar", scope: !2220, file: !2219, line: 38, baseType: !2223, size: 64, align: 64)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64, align: 64)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{null, !2111, !2197, !1032, !1015}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float", scope: !2220, file: !2219, line: 49, baseType: !2227, size: 64, align: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64, align: 64)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{null, !2111, !2197, !2230}
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1024, line: 119, baseType: !1042)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "int32_to_float_fmul_array8", scope: !2220, file: !2219, line: 63, baseType: !2232, size: 64, align: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64, align: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{null, !2235, !2111, !2197, !2112, !1015}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64, align: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "outptr", scope: !1860, file: !1859, line: 238, baseType: !2237, size: 448, align: 64, offset: 439808)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 448, align: 64, elements: !1927)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "xcfptr", scope: !1860, file: !1859, line: 239, baseType: !2239, size: 448, align: 64, offset: 440256)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 448, align: 64, elements: !1927)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64, align: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "dlyptr", scope: !1860, file: !1859, line: 240, baseType: !2239, size: 448, align: 64, offset: 440704)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_coeffs", scope: !1860, file: !1859, line: 243, baseType: !2243, size: 57344, align: 32, offset: 441216)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 57344, align: 32, elements: !1990)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "transform_coeffs", scope: !1860, file: !1859, line: 244, baseType: !2245, size: 57344, align: 32, offset: 498688)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 57344, align: 32, elements: !1990)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1860, file: !1859, line: 245, baseType: !2247, size: 131072, align: 32, offset: 556032)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 131072, align: 32, elements: !2248)
!2248 = !{!1831, !1804}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1860, file: !1859, line: 246, baseType: !2250, size: 8192, align: 32, offset: 687104)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 8192, align: 32, elements: !1803)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_output", scope: !1860, file: !1859, line: 247, baseType: !2250, size: 8192, align: 32, offset: 695296)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1860, file: !1859, line: 248, baseType: !2253, size: 131072, align: 32, offset: 703488)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 131072, align: 32, elements: !2248)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "input_buffer", scope: !1860, file: !1859, line: 249, baseType: !2255, size: 262656, align: 8, offset: 834560)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 262656, align: 8, elements: !2256)
!2256 = !{!2257}
!2257 = !DISubrange(count: 32832)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "output_buffer", scope: !1860, file: !1859, line: 250, baseType: !2259, size: 786432, align: 32, offset: 1097216)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 786432, align: 32, elements: !2260)
!2260 = !{!1831, !2261}
!2261 = !DISubrange(count: 1536)
!2262 = !DILocation(line: 186, column: 23, scope: !1851)
!2263 = !DILocation(line: 186, column: 27, scope: !1851)
!2264 = !DILocation(line: 186, column: 34, scope: !1851)
!2265 = !DILocalVariable(name: "i", scope: !1851, file: !1801, line: 187, type: !1015)
!2266 = !DILocation(line: 187, column: 9, scope: !1851)
!2267 = !DILocation(line: 189, column: 16, scope: !1851)
!2268 = !DILocation(line: 189, column: 5, scope: !1851)
!2269 = !DILocation(line: 189, column: 8, scope: !1851)
!2270 = !DILocation(line: 189, column: 14, scope: !1851)
!2271 = !DILocation(line: 191, column: 5, scope: !1851)
!2272 = !DILocation(line: 192, column: 19, scope: !1851)
!2273 = !DILocation(line: 192, column: 22, scope: !1851)
!2274 = !DILocation(line: 192, column: 5, scope: !1851)
!2275 = !DILocation(line: 193, column: 19, scope: !1851)
!2276 = !DILocation(line: 193, column: 22, scope: !1851)
!2277 = !DILocation(line: 193, column: 5, scope: !1851)
!2278 = !DILocation(line: 194, column: 24, scope: !1851)
!2279 = !DILocation(line: 194, column: 27, scope: !1851)
!2280 = !DILocation(line: 194, column: 5, scope: !1851)
!2281 = !DILocation(line: 195, column: 23, scope: !1851)
!2282 = !DILocation(line: 195, column: 26, scope: !1851)
!2283 = !DILocation(line: 195, column: 5, scope: !1851)
!2284 = !DILocation(line: 200, column: 38, scope: !1851)
!2285 = !DILocation(line: 200, column: 45, scope: !1851)
!2286 = !DILocation(line: 200, column: 51, scope: !1851)
!2287 = !DILocation(line: 200, column: 15, scope: !1851)
!2288 = !DILocation(line: 200, column: 5, scope: !1851)
!2289 = !DILocation(line: 200, column: 8, scope: !1851)
!2290 = !DILocation(line: 200, column: 13, scope: !1851)
!2291 = !DILocation(line: 201, column: 26, scope: !1851)
!2292 = !DILocation(line: 201, column: 29, scope: !1851)
!2293 = !DILocation(line: 201, column: 39, scope: !1851)
!2294 = !DILocation(line: 201, column: 5, scope: !1851)
!2295 = !DILocation(line: 204, column: 21, scope: !1851)
!2296 = !DILocation(line: 204, column: 24, scope: !1851)
!2297 = !DILocation(line: 204, column: 32, scope: !1851)
!2298 = !DILocation(line: 204, column: 39, scope: !1851)
!2299 = !DILocation(line: 204, column: 45, scope: !1851)
!2300 = !DILocation(line: 204, column: 5, scope: !1851)
!2301 = !DILocation(line: 205, column: 18, scope: !1851)
!2302 = !DILocation(line: 205, column: 21, scope: !1851)
!2303 = !DILocation(line: 205, column: 5, scope: !1851)
!2304 = !DILocation(line: 210, column: 9, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !1851, file: !1801, line: 207, column: 9)
!2306 = !DILocation(line: 210, column: 16, scope: !2305)
!2307 = !DILocation(line: 210, column: 27, scope: !2305)
!2308 = !DILocation(line: 213, column: 9, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !1851, file: !1801, line: 213, column: 9)
!2310 = !DILocation(line: 213, column: 16, scope: !2309)
!2311 = !DILocation(line: 213, column: 25, scope: !2309)
!2312 = !DILocation(line: 213, column: 29, scope: !2309)
!2313 = !DILocation(line: 214, column: 9, scope: !2309)
!2314 = !DILocation(line: 214, column: 16, scope: !2309)
!2315 = !DILocation(line: 214, column: 39, scope: !2309)
!2316 = !DILocation(line: 213, column: 9, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !1851, file: !1801, discriminator: 1)
!2318 = !DILocation(line: 215, column: 9, scope: !2309)
!2319 = !DILocation(line: 215, column: 16, scope: !2309)
!2320 = !DILocation(line: 215, column: 25, scope: !2309)
!2321 = !DILocation(line: 216, column: 14, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2309, file: !1801, line: 216, column: 14)
!2323 = !DILocation(line: 216, column: 21, scope: !2322)
!2324 = !DILocation(line: 216, column: 30, scope: !2322)
!2325 = !DILocation(line: 216, column: 34, scope: !2322)
!2326 = !DILocation(line: 217, column: 14, scope: !2322)
!2327 = !DILocation(line: 217, column: 21, scope: !2322)
!2328 = !DILocation(line: 217, column: 44, scope: !2322)
!2329 = !DILocation(line: 216, column: 14, scope: !2330)
!2330 = !DILexicalBlockFile(scope: !2309, file: !1801, discriminator: 1)
!2331 = !DILocation(line: 218, column: 9, scope: !2322)
!2332 = !DILocation(line: 218, column: 16, scope: !2322)
!2333 = !DILocation(line: 218, column: 25, scope: !2322)
!2334 = !DILocation(line: 219, column: 5, scope: !1851)
!2335 = !DILocation(line: 219, column: 8, scope: !1851)
!2336 = !DILocation(line: 219, column: 18, scope: !1851)
!2337 = !DILocation(line: 221, column: 12, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !1851, file: !1801, line: 221, column: 5)
!2339 = !DILocation(line: 221, column: 10, scope: !2338)
!2340 = !DILocation(line: 221, column: 17, scope: !2341)
!2341 = !DILexicalBlockFile(scope: !2342, file: !1801, discriminator: 1)
!2342 = distinct !DILexicalBlock(scope: !2338, file: !1801, line: 221, column: 5)
!2343 = !DILocation(line: 221, column: 19, scope: !2341)
!2344 = !DILocation(line: 221, column: 5, scope: !2341)
!2345 = !DILocation(line: 222, column: 44, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2342, file: !1801, line: 221, column: 29)
!2347 = !DILocation(line: 222, column: 24, scope: !2346)
!2348 = !DILocation(line: 222, column: 27, scope: !2346)
!2349 = !DILocation(line: 222, column: 19, scope: !2346)
!2350 = !DILocation(line: 222, column: 9, scope: !2346)
!2351 = !DILocation(line: 222, column: 12, scope: !2346)
!2352 = !DILocation(line: 222, column: 22, scope: !2346)
!2353 = !DILocation(line: 223, column: 33, scope: !2346)
!2354 = !DILocation(line: 223, column: 24, scope: !2346)
!2355 = !DILocation(line: 223, column: 27, scope: !2346)
!2356 = !DILocation(line: 223, column: 19, scope: !2346)
!2357 = !DILocation(line: 223, column: 9, scope: !2346)
!2358 = !DILocation(line: 223, column: 12, scope: !2346)
!2359 = !DILocation(line: 223, column: 22, scope: !2346)
!2360 = !DILocation(line: 224, column: 5, scope: !2346)
!2361 = !DILocation(line: 221, column: 25, scope: !2362)
!2362 = !DILexicalBlockFile(scope: !2342, file: !1801, discriminator: 2)
!2363 = !DILocation(line: 221, column: 5, scope: !2362)
!2364 = distinct !{!2364, !2365}
!2365 = !DILocation(line: 221, column: 5, scope: !1851)
!2366 = !DILocation(line: 226, column: 5, scope: !1851)
!2367 = distinct !DISubprogram(name: "ac3_decode_frame", scope: !1801, file: !1801, line: 1462, type: !1776, isLocal: true, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!2368 = !DILocalVariable(name: "x", arg: 1, scope: !2369, file: !2370, line: 58, type: !1023)
!2369 = distinct !DISubprogram(name: "av_bswap16", scope: !2370, file: !2370, line: 58, type: !2371, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!2370 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!1023, !1023}
!2373 = !DILocation(line: 58, column: 98, scope: !2369, inlinedAt: !2374)
!2374 = distinct !DILocation(line: 1500, column: 26, scope: !2375)
!2375 = !DILexicalBlockFile(scope: !2376, file: !1801, discriminator: 1)
!2376 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1500, column: 9)
!2377 = !DILocalVariable(name: "avctx", arg: 1, scope: !2367, file: !1801, line: 1462, type: !1171)
!2378 = !DILocation(line: 1462, column: 46, scope: !2367)
!2379 = !DILocalVariable(name: "data", arg: 2, scope: !2367, file: !1801, line: 1462, type: !1029)
!2380 = !DILocation(line: 1462, column: 59, scope: !2367)
!2381 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2367, file: !1801, line: 1463, type: !1463)
!2382 = !DILocation(line: 1463, column: 34, scope: !2367)
!2383 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2367, file: !1801, line: 1463, type: !1317)
!2384 = !DILocation(line: 1463, column: 59, scope: !2367)
!2385 = !DILocalVariable(name: "frame", scope: !2367, file: !1801, line: 1465, type: !1193)
!2386 = !DILocation(line: 1465, column: 14, scope: !2367)
!2387 = !DILocation(line: 1465, column: 22, scope: !2367)
!2388 = !DILocalVariable(name: "buf", scope: !2367, file: !1801, line: 1466, type: !1610)
!2389 = !DILocation(line: 1466, column: 20, scope: !2367)
!2390 = !DILocation(line: 1466, column: 26, scope: !2367)
!2391 = !DILocation(line: 1466, column: 33, scope: !2367)
!2392 = !DILocalVariable(name: "buf_size", scope: !2367, file: !1801, line: 1467, type: !1015)
!2393 = !DILocation(line: 1467, column: 9, scope: !2367)
!2394 = !DILocalVariable(name: "full_buf_size", scope: !2367, file: !1801, line: 1467, type: !1015)
!2395 = !DILocation(line: 1467, column: 19, scope: !2367)
!2396 = !DILocation(line: 1467, column: 35, scope: !2367)
!2397 = !DILocation(line: 1467, column: 42, scope: !2367)
!2398 = !DILocalVariable(name: "s", scope: !2367, file: !1801, line: 1468, type: !1857)
!2399 = !DILocation(line: 1468, column: 23, scope: !2367)
!2400 = !DILocation(line: 1468, column: 27, scope: !2367)
!2401 = !DILocation(line: 1468, column: 34, scope: !2367)
!2402 = !DILocalVariable(name: "blk", scope: !2367, file: !1801, line: 1469, type: !1015)
!2403 = !DILocation(line: 1469, column: 9, scope: !2367)
!2404 = !DILocalVariable(name: "ch", scope: !2367, file: !1801, line: 1469, type: !1015)
!2405 = !DILocation(line: 1469, column: 14, scope: !2367)
!2406 = !DILocalVariable(name: "err", scope: !2367, file: !1801, line: 1469, type: !1015)
!2407 = !DILocation(line: 1469, column: 18, scope: !2367)
!2408 = !DILocalVariable(name: "offset", scope: !2367, file: !1801, line: 1469, type: !1015)
!2409 = !DILocation(line: 1469, column: 23, scope: !2367)
!2410 = !DILocalVariable(name: "ret", scope: !2367, file: !1801, line: 1469, type: !1015)
!2411 = !DILocation(line: 1469, column: 31, scope: !2367)
!2412 = !DILocalVariable(name: "i", scope: !2367, file: !1801, line: 1470, type: !1015)
!2413 = !DILocation(line: 1470, column: 9, scope: !2367)
!2414 = !DILocalVariable(name: "skip", scope: !2367, file: !1801, line: 1471, type: !1015)
!2415 = !DILocation(line: 1471, column: 9, scope: !2367)
!2416 = !DILocalVariable(name: "got_independent_frame", scope: !2367, file: !1801, line: 1471, type: !1015)
!2417 = !DILocation(line: 1471, column: 19, scope: !2367)
!2418 = !DILocalVariable(name: "channel_map", scope: !2367, file: !1801, line: 1472, type: !1610)
!2419 = !DILocation(line: 1472, column: 20, scope: !2367)
!2420 = !DILocalVariable(name: "extended_channel_map", scope: !2367, file: !1801, line: 1473, type: !2421)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, align: 8, elements: !1830)
!2422 = !DILocation(line: 1473, column: 13, scope: !2367)
!2423 = !DILocalVariable(name: "output", scope: !2367, file: !1801, line: 1474, type: !2424)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2425, size: 448, align: 64, elements: !1927)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64, align: 64)
!2426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!2427 = !DILocation(line: 1474, column: 23, scope: !2367)
!2428 = !DILocalVariable(name: "matrix_encoding", scope: !2367, file: !1801, line: 1475, type: !919)
!2429 = !DILocation(line: 1475, column: 27, scope: !2367)
!2430 = !DILocalVariable(name: "downmix_info", scope: !2367, file: !1801, line: 1476, type: !2431)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64, align: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDownmixInfo", file: !931, line: 93, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDownmixInfo", file: !931, line: 58, size: 384, align: 64, elements: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_downmix_type", scope: !2433, file: !931, line: 62, baseType: !930, size: 32, align: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !2433, file: !931, line: 68, baseType: !1107, size: 64, align: 64, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level_ltrt", scope: !2433, file: !931, line: 74, baseType: !1107, size: 64, align: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !2433, file: !931, line: 80, baseType: !1107, size: 64, align: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level_ltrt", scope: !2433, file: !931, line: 86, baseType: !1107, size: 64, align: 64, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level", scope: !2433, file: !931, line: 92, baseType: !1107, size: 64, align: 64, offset: 320)
!2441 = !DILocation(line: 1476, column: 20, scope: !2367)
!2442 = !DILocation(line: 1478, column: 5, scope: !2367)
!2443 = !DILocation(line: 1478, column: 8, scope: !2367)
!2444 = !DILocation(line: 1478, column: 24, scope: !2367)
!2445 = !DILocation(line: 1480, column: 16, scope: !2367)
!2446 = !DILocation(line: 1480, column: 14, scope: !2367)
!2447 = !DILocation(line: 1481, column: 12, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1481, column: 5)
!2449 = !DILocation(line: 1481, column: 10, scope: !2448)
!2450 = !DILocation(line: 1481, column: 17, scope: !2451)
!2451 = !DILexicalBlockFile(scope: !2452, file: !1801, discriminator: 1)
!2452 = distinct !DILexicalBlock(scope: !2448, file: !1801, line: 1481, column: 5)
!2453 = !DILocation(line: 1481, column: 21, scope: !2451)
!2454 = !DILocation(line: 1481, column: 19, scope: !2451)
!2455 = !DILocation(line: 1481, column: 5, scope: !2451)
!2456 = !DILocation(line: 1482, column: 17, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !1801, line: 1482, column: 13)
!2458 = distinct !DILexicalBlock(scope: !2452, file: !1801, line: 1481, column: 39)
!2459 = !DILocation(line: 1482, column: 13, scope: !2457)
!2460 = !DILocation(line: 1482, column: 20, scope: !2457)
!2461 = !DILocation(line: 1482, column: 28, scope: !2457)
!2462 = !DILocation(line: 1482, column: 35, scope: !2463)
!2463 = !DILexicalBlockFile(scope: !2457, file: !1801, discriminator: 1)
!2464 = !DILocation(line: 1482, column: 31, scope: !2463)
!2465 = !DILocation(line: 1482, column: 38, scope: !2463)
!2466 = !DILocation(line: 1482, column: 13, scope: !2463)
!2467 = !DILocation(line: 1483, column: 22, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !1801, line: 1483, column: 17)
!2469 = distinct !DILexicalBlock(scope: !2457, file: !1801, line: 1482, column: 47)
!2470 = !DILocation(line: 1483, column: 18, scope: !2468)
!2471 = !DILocation(line: 1483, column: 31, scope: !2468)
!2472 = !DILocation(line: 1483, column: 32, scope: !2468)
!2473 = !DILocation(line: 1483, column: 27, scope: !2468)
!2474 = !DILocation(line: 1483, column: 25, scope: !2468)
!2475 = !DILocation(line: 1483, column: 37, scope: !2468)
!2476 = !DILocation(line: 1483, column: 17, scope: !2469)
!2477 = !DILocation(line: 1484, column: 18, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2468, file: !1801, line: 1483, column: 55)
!2479 = !DILocation(line: 1485, column: 17, scope: !2478)
!2480 = !DILocation(line: 1486, column: 29, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2468, file: !1801, line: 1486, column: 24)
!2482 = !DILocation(line: 1486, column: 25, scope: !2481)
!2483 = !DILocation(line: 1486, column: 38, scope: !2481)
!2484 = !DILocation(line: 1486, column: 39, scope: !2481)
!2485 = !DILocation(line: 1486, column: 34, scope: !2481)
!2486 = !DILocation(line: 1486, column: 32, scope: !2481)
!2487 = !DILocation(line: 1486, column: 44, scope: !2481)
!2488 = !DILocation(line: 1486, column: 24, scope: !2468)
!2489 = !DILocation(line: 1487, column: 17, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2481, file: !1801, line: 1486, column: 62)
!2491 = !DILocation(line: 1489, column: 9, scope: !2469)
!2492 = !DILocation(line: 1490, column: 5, scope: !2458)
!2493 = !DILocation(line: 1481, column: 33, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !2452, file: !1801, discriminator: 2)
!2495 = !DILocation(line: 1481, column: 5, scope: !2494)
!2496 = distinct !{!2496, !2497}
!2497 = !DILocation(line: 1481, column: 5, scope: !2367)
!2498 = !DILocation(line: 1491, column: 9, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1491, column: 9)
!2500 = !DILocation(line: 1491, column: 14, scope: !2499)
!2501 = !DILocation(line: 1491, column: 11, scope: !2499)
!2502 = !DILocation(line: 1491, column: 9, scope: !2367)
!2503 = !DILocation(line: 1492, column: 9, scope: !2499)
!2504 = !DILocation(line: 1493, column: 9, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1493, column: 9)
!2506 = !DILocation(line: 1493, column: 11, scope: !2505)
!2507 = !DILocation(line: 1493, column: 9, scope: !2367)
!2508 = !DILocation(line: 1494, column: 16, scope: !2505)
!2509 = !DILocation(line: 1494, column: 9, scope: !2505)
!2510 = !DILocation(line: 1495, column: 12, scope: !2367)
!2511 = !DILocation(line: 1495, column: 9, scope: !2367)
!2512 = !DILocation(line: 1496, column: 17, scope: !2367)
!2513 = !DILocation(line: 1496, column: 14, scope: !2367)
!2514 = !DILocation(line: 1500, column: 9, scope: !2376)
!2515 = !DILocation(line: 1500, column: 18, scope: !2376)
!2516 = !DILocation(line: 1500, column: 23, scope: !2376)
!2517 = !DILocation(line: 1500, column: 69, scope: !2375)
!2518 = !DILocation(line: 1500, column: 76, scope: !2375)
!2519 = !DILocation(line: 1500, column: 26, scope: !2375)
!2520 = !DILocation(line: 60, column: 9, scope: !2369, inlinedAt: !2374)
!2521 = !DILocation(line: 60, column: 10, scope: !2369, inlinedAt: !2374)
!2522 = !DILocation(line: 60, column: 18, scope: !2369, inlinedAt: !2374)
!2523 = !DILocation(line: 60, column: 19, scope: !2369, inlinedAt: !2374)
!2524 = !DILocation(line: 60, column: 15, scope: !2369, inlinedAt: !2374)
!2525 = !DILocation(line: 60, column: 8, scope: !2369, inlinedAt: !2374)
!2526 = !DILocation(line: 60, column: 6, scope: !2369, inlinedAt: !2374)
!2527 = !DILocation(line: 61, column: 12, scope: !2369, inlinedAt: !2374)
!2528 = !DILocation(line: 1500, column: 80, scope: !2375)
!2529 = !DILocation(line: 1500, column: 9, scope: !2375)
!2530 = !DILocalVariable(name: "cnt", scope: !2531, file: !1801, line: 1502, type: !1015)
!2531 = distinct !DILexicalBlock(scope: !2376, file: !1801, line: 1500, column: 91)
!2532 = !DILocation(line: 1502, column: 13, scope: !2531)
!2533 = !DILocation(line: 1502, column: 21, scope: !2531)
!2534 = !DILocation(line: 1502, column: 31, scope: !2531)
!2535 = !DILocation(line: 1502, column: 20, scope: !2531)
!2536 = !DILocation(line: 1502, column: 20, scope: !2537)
!2537 = !DILexicalBlockFile(scope: !2531, file: !1801, discriminator: 1)
!2538 = !DILocation(line: 1502, column: 54, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !2531, file: !1801, discriminator: 2)
!2540 = !DILocation(line: 1502, column: 20, scope: !2539)
!2541 = !DILocation(line: 1502, column: 20, scope: !2542)
!2542 = !DILexicalBlockFile(scope: !2531, file: !1801, discriminator: 3)
!2543 = !DILocation(line: 1502, column: 65, scope: !2542)
!2544 = !DILocation(line: 1502, column: 13, scope: !2542)
!2545 = !DILocation(line: 1503, column: 9, scope: !2531)
!2546 = !DILocation(line: 1503, column: 12, scope: !2531)
!2547 = !DILocation(line: 1503, column: 17, scope: !2531)
!2548 = !DILocation(line: 1503, column: 42, scope: !2531)
!2549 = !DILocation(line: 1503, column: 45, scope: !2531)
!2550 = !DILocation(line: 1503, column: 29, scope: !2531)
!2551 = !DILocation(line: 1504, column: 48, scope: !2531)
!2552 = !DILocation(line: 1504, column: 29, scope: !2531)
!2553 = !DILocation(line: 1504, column: 53, scope: !2531)
!2554 = !DILocation(line: 1505, column: 5, scope: !2531)
!2555 = !DILocation(line: 1506, column: 16, scope: !2376)
!2556 = !DILocation(line: 1506, column: 19, scope: !2376)
!2557 = !DILocation(line: 1506, column: 9, scope: !2376)
!2558 = !DILocation(line: 1506, column: 33, scope: !2376)
!2559 = !DILocation(line: 1506, column: 40, scope: !2376)
!2560 = !DILocation(line: 1506, column: 50, scope: !2376)
!2561 = !DILocation(line: 1506, column: 39, scope: !2376)
!2562 = !DILocation(line: 1506, column: 39, scope: !2375)
!2563 = !DILocation(line: 1506, column: 73, scope: !2564)
!2564 = !DILexicalBlockFile(scope: !2376, file: !1801, discriminator: 2)
!2565 = !DILocation(line: 1506, column: 39, scope: !2564)
!2566 = !DILocation(line: 1506, column: 39, scope: !2567)
!2567 = !DILexicalBlockFile(scope: !2376, file: !1801, discriminator: 3)
!2568 = !DILocation(line: 1506, column: 38, scope: !2567)
!2569 = !DILocation(line: 1506, column: 9, scope: !2567)
!2570 = !DILocation(line: 1511, column: 9, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1511, column: 9)
!2572 = !DILocation(line: 1511, column: 12, scope: !2571)
!2573 = !DILocation(line: 1511, column: 9, scope: !2367)
!2574 = !DILocation(line: 1512, column: 32, scope: !2571)
!2575 = !DILocation(line: 1512, column: 35, scope: !2571)
!2576 = !DILocation(line: 1512, column: 47, scope: !2571)
!2577 = !DILocation(line: 1512, column: 50, scope: !2571)
!2578 = !DILocation(line: 1512, column: 66, scope: !2571)
!2579 = !DILocation(line: 1512, column: 76, scope: !2571)
!2580 = !DILocation(line: 1512, column: 65, scope: !2571)
!2581 = !DILocation(line: 1512, column: 65, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2571, file: !1801, discriminator: 1)
!2583 = !DILocation(line: 1512, column: 99, scope: !2584)
!2584 = !DILexicalBlockFile(scope: !2571, file: !1801, discriminator: 2)
!2585 = !DILocation(line: 1512, column: 65, scope: !2584)
!2586 = !DILocation(line: 1512, column: 65, scope: !2587)
!2587 = !DILexicalBlockFile(scope: !2571, file: !1801, discriminator: 3)
!2588 = !DILocation(line: 1512, column: 9, scope: !2587)
!2589 = !DILocation(line: 1514, column: 11, scope: !2367)
!2590 = !DILocation(line: 1514, column: 14, scope: !2367)
!2591 = !DILocation(line: 1514, column: 9, scope: !2367)
!2592 = !DILocation(line: 1514, column: 5, scope: !2367)
!2593 = !DILocation(line: 1517, column: 32, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1517, column: 9)
!2595 = !DILocation(line: 1517, column: 35, scope: !2594)
!2596 = !DILocation(line: 1517, column: 40, scope: !2594)
!2597 = !DILocation(line: 1517, column: 45, scope: !2594)
!2598 = !DILocation(line: 1517, column: 16, scope: !2594)
!2599 = !DILocation(line: 1517, column: 14, scope: !2594)
!2600 = !DILocation(line: 1517, column: 56, scope: !2594)
!2601 = !DILocation(line: 1517, column: 9, scope: !2367)
!2602 = !DILocation(line: 1518, column: 16, scope: !2594)
!2603 = !DILocation(line: 1518, column: 9, scope: !2594)
!2604 = !DILocation(line: 1521, column: 30, scope: !2367)
!2605 = !DILocation(line: 1521, column: 11, scope: !2367)
!2606 = !DILocation(line: 1521, column: 9, scope: !2367)
!2607 = !DILocation(line: 1523, column: 9, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1523, column: 9)
!2609 = !DILocation(line: 1523, column: 9, scope: !2367)
!2610 = !DILocation(line: 1524, column: 17, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2608, file: !1801, line: 1523, column: 14)
!2612 = !DILocation(line: 1524, column: 9, scope: !2611)
!2613 = !DILocation(line: 1526, column: 20, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2611, file: !1801, line: 1524, column: 22)
!2615 = !DILocation(line: 1526, column: 13, scope: !2614)
!2616 = !DILocation(line: 1527, column: 13, scope: !2614)
!2617 = !DILocation(line: 1529, column: 20, scope: !2614)
!2618 = !DILocation(line: 1529, column: 13, scope: !2614)
!2619 = !DILocation(line: 1530, column: 13, scope: !2614)
!2620 = !DILocation(line: 1532, column: 20, scope: !2614)
!2621 = !DILocation(line: 1532, column: 13, scope: !2614)
!2622 = !DILocation(line: 1533, column: 13, scope: !2614)
!2623 = !DILocation(line: 1535, column: 20, scope: !2614)
!2624 = !DILocation(line: 1535, column: 13, scope: !2614)
!2625 = !DILocation(line: 1536, column: 13, scope: !2614)
!2626 = !DILocation(line: 1540, column: 17, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2614, file: !1801, line: 1540, column: 17)
!2628 = !DILocation(line: 1540, column: 20, scope: !2627)
!2629 = !DILocation(line: 1540, column: 17, scope: !2614)
!2630 = !DILocation(line: 1541, column: 24, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2627, file: !1801, line: 1540, column: 33)
!2632 = !DILocation(line: 1543, column: 24, scope: !2631)
!2633 = !DILocation(line: 1543, column: 27, scope: !2631)
!2634 = !DILocation(line: 1541, column: 17, scope: !2631)
!2635 = !DILocation(line: 1544, column: 18, scope: !2631)
!2636 = !DILocation(line: 1544, column: 32, scope: !2631)
!2637 = !DILocation(line: 1545, column: 24, scope: !2631)
!2638 = !DILocation(line: 1545, column: 17, scope: !2631)
!2639 = !DILocation(line: 1547, column: 24, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2627, file: !1801, line: 1546, column: 20)
!2641 = !DILocation(line: 1547, column: 17, scope: !2640)
!2642 = !DILocation(line: 1549, column: 13, scope: !2614)
!2643 = !DILocation(line: 1552, column: 13, scope: !2614)
!2644 = !DILocation(line: 1554, column: 14, scope: !2614)
!2645 = !DILocation(line: 1554, column: 28, scope: !2614)
!2646 = !DILocation(line: 1555, column: 20, scope: !2614)
!2647 = !DILocation(line: 1555, column: 13, scope: !2614)
!2648 = !DILocation(line: 1557, column: 5, scope: !2611)
!2649 = !DILocation(line: 1559, column: 13, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !1801, line: 1559, column: 13)
!2651 = distinct !DILexicalBlock(scope: !2608, file: !1801, line: 1557, column: 12)
!2652 = !DILocation(line: 1559, column: 16, scope: !2650)
!2653 = !DILocation(line: 1559, column: 29, scope: !2650)
!2654 = !DILocation(line: 1559, column: 27, scope: !2650)
!2655 = !DILocation(line: 1559, column: 13, scope: !2651)
!2656 = !DILocation(line: 1560, column: 20, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2650, file: !1801, line: 1559, column: 39)
!2658 = !DILocation(line: 1560, column: 13, scope: !2657)
!2659 = !DILocation(line: 1561, column: 17, scope: !2657)
!2660 = !DILocation(line: 1562, column: 9, scope: !2657)
!2661 = !DILocation(line: 1562, column: 20, scope: !2662)
!2662 = !DILexicalBlockFile(scope: !2663, file: !1801, discriminator: 1)
!2663 = distinct !DILexicalBlock(scope: !2650, file: !1801, line: 1562, column: 20)
!2664 = !DILocation(line: 1562, column: 27, scope: !2662)
!2665 = !DILocation(line: 1562, column: 43, scope: !2662)
!2666 = !DILocation(line: 1564, column: 24, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !1801, line: 1564, column: 17)
!2668 = distinct !DILexicalBlock(scope: !2663, file: !1801, line: 1562, column: 63)
!2669 = !DILocation(line: 1564, column: 62, scope: !2667)
!2670 = !DILocation(line: 1565, column: 24, scope: !2667)
!2671 = !DILocation(line: 1565, column: 27, scope: !2667)
!2672 = !DILocation(line: 1565, column: 38, scope: !2667)
!2673 = !DILocation(line: 1564, column: 17, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !2667, file: !1801, discriminator: 1)
!2675 = !DILocation(line: 1564, column: 17, scope: !2667)
!2676 = !DILocation(line: 1564, column: 17, scope: !2668)
!2677 = !DILocation(line: 1566, column: 24, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2667, file: !1801, line: 1565, column: 44)
!2679 = !DILocation(line: 1566, column: 17, scope: !2678)
!2680 = !DILocation(line: 1567, column: 21, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2678, file: !1801, line: 1567, column: 21)
!2682 = !DILocation(line: 1567, column: 28, scope: !2681)
!2683 = !DILocation(line: 1567, column: 44, scope: !2681)
!2684 = !DILocation(line: 1567, column: 21, scope: !2678)
!2685 = !DILocation(line: 1568, column: 21, scope: !2681)
!2686 = !DILocation(line: 1569, column: 21, scope: !2678)
!2687 = !DILocation(line: 1570, column: 13, scope: !2678)
!2688 = !DILocation(line: 1571, column: 9, scope: !2668)
!2689 = !DILocation(line: 1574, column: 9, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1574, column: 9)
!2691 = !DILocation(line: 1574, column: 12, scope: !2690)
!2692 = !DILocation(line: 1574, column: 23, scope: !2690)
!2693 = !DILocation(line: 1574, column: 52, scope: !2690)
!2694 = !DILocation(line: 1574, column: 56, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2690, file: !1801, discriminator: 1)
!2696 = !DILocation(line: 1574, column: 9, scope: !2695)
!2697 = !DILocation(line: 1575, column: 16, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2690, file: !1801, line: 1574, column: 79)
!2699 = !DILocation(line: 1575, column: 9, scope: !2698)
!2700 = !DILocation(line: 1576, column: 10, scope: !2698)
!2701 = !DILocation(line: 1576, column: 24, scope: !2698)
!2702 = !DILocation(line: 1577, column: 18, scope: !2698)
!2703 = !DILocation(line: 1577, column: 36, scope: !2698)
!2704 = !DILocation(line: 1577, column: 39, scope: !2698)
!2705 = !DILocation(line: 1577, column: 33, scope: !2698)
!2706 = !DILocation(line: 1577, column: 17, scope: !2698)
!2707 = !DILocation(line: 1577, column: 54, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2698, file: !1801, discriminator: 1)
!2709 = !DILocation(line: 1577, column: 57, scope: !2708)
!2710 = !DILocation(line: 1577, column: 17, scope: !2708)
!2711 = !DILocation(line: 1577, column: 72, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2698, file: !1801, discriminator: 2)
!2713 = !DILocation(line: 1577, column: 17, scope: !2712)
!2714 = !DILocation(line: 1577, column: 17, scope: !2715)
!2715 = !DILexicalBlockFile(scope: !2698, file: !1801, discriminator: 3)
!2716 = !DILocation(line: 1577, column: 9, scope: !2715)
!2717 = !DILocation(line: 1581, column: 10, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1581, column: 9)
!2719 = !DILocation(line: 1581, column: 14, scope: !2718)
!2720 = !DILocation(line: 1581, column: 18, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2718, file: !1801, discriminator: 1)
!2722 = !DILocation(line: 1581, column: 21, scope: !2721)
!2723 = !DILocation(line: 1581, column: 30, scope: !2721)
!2724 = !DILocation(line: 1581, column: 33, scope: !2725)
!2725 = !DILexicalBlockFile(scope: !2718, file: !1801, discriminator: 2)
!2726 = !DILocation(line: 1581, column: 36, scope: !2725)
!2727 = !DILocation(line: 1581, column: 52, scope: !2725)
!2728 = !DILocation(line: 1581, column: 55, scope: !2725)
!2729 = !DILocation(line: 1581, column: 49, scope: !2725)
!2730 = !DILocation(line: 1581, column: 9, scope: !2725)
!2731 = !DILocation(line: 1582, column: 27, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2718, file: !1801, line: 1581, column: 66)
!2733 = !DILocation(line: 1582, column: 30, scope: !2732)
!2734 = !DILocation(line: 1582, column: 9, scope: !2732)
!2735 = !DILocation(line: 1582, column: 12, scope: !2732)
!2736 = !DILocation(line: 1582, column: 25, scope: !2732)
!2737 = !DILocation(line: 1583, column: 26, scope: !2732)
!2738 = !DILocation(line: 1583, column: 29, scope: !2732)
!2739 = !DILocation(line: 1583, column: 9, scope: !2732)
!2740 = !DILocation(line: 1583, column: 12, scope: !2732)
!2741 = !DILocation(line: 1583, column: 24, scope: !2732)
!2742 = !DILocation(line: 1584, column: 13, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2732, file: !1801, line: 1584, column: 13)
!2744 = !DILocation(line: 1584, column: 16, scope: !2743)
!2745 = !DILocation(line: 1584, column: 13, scope: !2732)
!2746 = !DILocation(line: 1585, column: 13, scope: !2743)
!2747 = !DILocation(line: 1585, column: 16, scope: !2743)
!2748 = !DILocation(line: 1585, column: 28, scope: !2743)
!2749 = !DILocation(line: 1586, column: 13, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2732, file: !1801, line: 1586, column: 13)
!2751 = !DILocation(line: 1586, column: 16, scope: !2750)
!2752 = !DILocation(line: 1586, column: 25, scope: !2750)
!2753 = !DILocation(line: 1586, column: 29, scope: !2750)
!2754 = !DILocation(line: 1587, column: 13, scope: !2750)
!2755 = !DILocation(line: 1587, column: 20, scope: !2750)
!2756 = !DILocation(line: 1587, column: 43, scope: !2750)
!2757 = !DILocation(line: 1586, column: 13, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !2732, file: !1801, discriminator: 1)
!2759 = !DILocation(line: 1588, column: 13, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2750, file: !1801, line: 1587, column: 60)
!2761 = !DILocation(line: 1588, column: 16, scope: !2760)
!2762 = !DILocation(line: 1588, column: 29, scope: !2760)
!2763 = !DILocation(line: 1589, column: 13, scope: !2760)
!2764 = !DILocation(line: 1589, column: 16, scope: !2760)
!2765 = !DILocation(line: 1589, column: 28, scope: !2760)
!2766 = !DILocation(line: 1590, column: 9, scope: !2760)
!2767 = !DILocation(line: 1590, column: 20, scope: !2768)
!2768 = !DILexicalBlockFile(scope: !2769, file: !1801, discriminator: 1)
!2769 = distinct !DILexicalBlock(scope: !2750, file: !1801, line: 1590, column: 20)
!2770 = !DILocation(line: 1590, column: 23, scope: !2768)
!2771 = !DILocation(line: 1590, column: 32, scope: !2768)
!2772 = !DILocation(line: 1590, column: 36, scope: !2768)
!2773 = !DILocation(line: 1591, column: 20, scope: !2769)
!2774 = !DILocation(line: 1591, column: 27, scope: !2769)
!2775 = !DILocation(line: 1591, column: 50, scope: !2769)
!2776 = !DILocation(line: 1590, column: 20, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !2750, file: !1801, discriminator: 2)
!2778 = !DILocation(line: 1592, column: 13, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2769, file: !1801, line: 1591, column: 78)
!2780 = !DILocation(line: 1592, column: 16, scope: !2779)
!2781 = !DILocation(line: 1592, column: 29, scope: !2779)
!2782 = !DILocation(line: 1593, column: 13, scope: !2779)
!2783 = !DILocation(line: 1593, column: 16, scope: !2779)
!2784 = !DILocation(line: 1593, column: 28, scope: !2779)
!2785 = !DILocation(line: 1594, column: 9, scope: !2779)
!2786 = !DILocation(line: 1596, column: 48, scope: !2732)
!2787 = !DILocation(line: 1596, column: 52, scope: !2732)
!2788 = !DILocation(line: 1596, column: 36, scope: !2732)
!2789 = !DILocation(line: 1596, column: 9, scope: !2732)
!2790 = !DILocation(line: 1596, column: 12, scope: !2732)
!2791 = !DILocation(line: 1596, column: 34, scope: !2732)
!2792 = !DILocation(line: 1597, column: 50, scope: !2732)
!2793 = !DILocation(line: 1597, column: 53, scope: !2732)
!2794 = !DILocation(line: 1597, column: 38, scope: !2732)
!2795 = !DILocation(line: 1597, column: 9, scope: !2732)
!2796 = !DILocation(line: 1597, column: 12, scope: !2732)
!2797 = !DILocation(line: 1597, column: 36, scope: !2732)
!2798 = !DILocation(line: 1598, column: 9, scope: !2732)
!2799 = !DILocation(line: 1598, column: 12, scope: !2732)
!2800 = !DILocation(line: 1598, column: 34, scope: !2732)
!2801 = !DILocation(line: 1599, column: 9, scope: !2732)
!2802 = !DILocation(line: 1599, column: 12, scope: !2732)
!2803 = !DILocation(line: 1599, column: 36, scope: !2732)
!2804 = !DILocation(line: 1601, column: 13, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2732, file: !1801, line: 1601, column: 13)
!2806 = !DILocation(line: 1601, column: 16, scope: !2805)
!2807 = !DILocation(line: 1601, column: 28, scope: !2805)
!2808 = !DILocation(line: 1601, column: 31, scope: !2805)
!2809 = !DILocation(line: 1601, column: 25, scope: !2805)
!2810 = !DILocation(line: 1601, column: 44, scope: !2805)
!2811 = !DILocation(line: 1601, column: 50, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !2805, file: !1801, discriminator: 1)
!2813 = !DILocation(line: 1601, column: 53, scope: !2812)
!2814 = !DILocation(line: 1601, column: 65, scope: !2812)
!2815 = !DILocation(line: 1601, column: 70, scope: !2812)
!2816 = !DILocation(line: 1602, column: 17, scope: !2805)
!2817 = !DILocation(line: 1602, column: 20, scope: !2805)
!2818 = !DILocation(line: 1602, column: 36, scope: !2805)
!2819 = !DILocation(line: 1602, column: 39, scope: !2805)
!2820 = !DILocation(line: 1602, column: 33, scope: !2805)
!2821 = !DILocation(line: 1601, column: 13, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !2732, file: !1801, discriminator: 2)
!2823 = !DILocation(line: 1603, column: 43, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2825, file: !1801, line: 1603, column: 17)
!2825 = distinct !DILexicalBlock(scope: !2805, file: !1801, line: 1602, column: 54)
!2826 = !DILocation(line: 1603, column: 24, scope: !2824)
!2827 = !DILocation(line: 1603, column: 22, scope: !2824)
!2828 = !DILocation(line: 1603, column: 47, scope: !2824)
!2829 = !DILocation(line: 1603, column: 17, scope: !2825)
!2830 = !DILocation(line: 1604, column: 24, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2824, file: !1801, line: 1603, column: 52)
!2832 = !DILocation(line: 1604, column: 17, scope: !2831)
!2833 = !DILocation(line: 1605, column: 24, scope: !2831)
!2834 = !DILocation(line: 1605, column: 17, scope: !2831)
!2835 = !DILocation(line: 1607, column: 9, scope: !2825)
!2836 = !DILocation(line: 1608, column: 5, scope: !2732)
!2837 = !DILocation(line: 1608, column: 17, scope: !2838)
!2838 = !DILexicalBlockFile(scope: !2839, file: !1801, discriminator: 1)
!2839 = distinct !DILexicalBlock(scope: !2718, file: !1801, line: 1608, column: 16)
!2840 = !DILocation(line: 1608, column: 20, scope: !2838)
!2841 = !DILocation(line: 1608, column: 16, scope: !2838)
!2842 = !DILocation(line: 1609, column: 16, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !1801, line: 1608, column: 30)
!2844 = !DILocation(line: 1609, column: 9, scope: !2843)
!2845 = !DILocation(line: 1610, column: 9, scope: !2843)
!2846 = !DILocation(line: 1612, column: 23, scope: !2367)
!2847 = !DILocation(line: 1612, column: 26, scope: !2367)
!2848 = !DILocation(line: 1612, column: 5, scope: !2367)
!2849 = !DILocation(line: 1612, column: 12, scope: !2367)
!2850 = !DILocation(line: 1612, column: 21, scope: !2367)
!2851 = !DILocation(line: 1613, column: 59, scope: !2367)
!2852 = !DILocation(line: 1613, column: 62, scope: !2367)
!2853 = !DILocation(line: 1613, column: 74, scope: !2367)
!2854 = !DILocation(line: 1613, column: 29, scope: !2367)
!2855 = !DILocation(line: 1613, column: 5, scope: !2367)
!2856 = !DILocation(line: 1613, column: 12, scope: !2367)
!2857 = !DILocation(line: 1613, column: 27, scope: !2367)
!2858 = !DILocation(line: 1614, column: 9, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1614, column: 9)
!2860 = !DILocation(line: 1614, column: 12, scope: !2859)
!2861 = !DILocation(line: 1614, column: 24, scope: !2859)
!2862 = !DILocation(line: 1614, column: 9, scope: !2367)
!2863 = !DILocation(line: 1615, column: 9, scope: !2859)
!2864 = !DILocation(line: 1615, column: 16, scope: !2859)
!2865 = !DILocation(line: 1615, column: 31, scope: !2859)
!2866 = !DILocation(line: 1618, column: 33, scope: !2367)
!2867 = !DILocation(line: 1618, column: 36, scope: !2367)
!2868 = !DILocation(line: 1618, column: 5, scope: !2367)
!2869 = !DILocation(line: 1618, column: 12, scope: !2367)
!2870 = !DILocation(line: 1618, column: 31, scope: !2367)
!2871 = !DILocation(line: 1619, column: 9, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1619, column: 9)
!2873 = !DILocation(line: 1619, column: 12, scope: !2872)
!2874 = !DILocation(line: 1619, column: 27, scope: !2872)
!2875 = !DILocation(line: 1619, column: 34, scope: !2872)
!2876 = !DILocation(line: 1619, column: 37, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2872, file: !1801, discriminator: 1)
!2878 = !DILocation(line: 1619, column: 40, scope: !2877)
!2879 = !DILocation(line: 1619, column: 49, scope: !2877)
!2880 = !DILocation(line: 1619, column: 9, scope: !2877)
!2881 = !DILocation(line: 1620, column: 9, scope: !2872)
!2882 = !DILocation(line: 1620, column: 16, scope: !2872)
!2883 = !DILocation(line: 1620, column: 35, scope: !2872)
!2884 = !DILocation(line: 1623, column: 63, scope: !2367)
!2885 = !DILocation(line: 1623, column: 66, scope: !2367)
!2886 = !DILocation(line: 1623, column: 19, scope: !2367)
!2887 = !DILocation(line: 1623, column: 42, scope: !2367)
!2888 = !DILocation(line: 1623, column: 45, scope: !2367)
!2889 = !DILocation(line: 1623, column: 57, scope: !2367)
!2890 = !DILocation(line: 1623, column: 17, scope: !2367)
!2891 = !DILocation(line: 1624, column: 14, scope: !2367)
!2892 = !DILocation(line: 1624, column: 17, scope: !2367)
!2893 = !DILocation(line: 1624, column: 28, scope: !2367)
!2894 = !DILocation(line: 1624, column: 12, scope: !2367)
!2895 = !DILocation(line: 1625, column: 13, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1625, column: 5)
!2897 = !DILocation(line: 1625, column: 10, scope: !2896)
!2898 = !DILocation(line: 1625, column: 18, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !1801, discriminator: 1)
!2900 = distinct !DILexicalBlock(scope: !2896, file: !1801, line: 1625, column: 5)
!2901 = !DILocation(line: 1625, column: 21, scope: !2899)
!2902 = !DILocation(line: 1625, column: 5, scope: !2899)
!2903 = !DILocation(line: 1626, column: 32, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2900, file: !1801, line: 1625, column: 32)
!2905 = !DILocation(line: 1626, column: 37, scope: !2904)
!2906 = !DILocation(line: 1626, column: 35, scope: !2904)
!2907 = !DILocation(line: 1626, column: 22, scope: !2904)
!2908 = !DILocation(line: 1626, column: 25, scope: !2904)
!2909 = !DILocation(line: 1626, column: 16, scope: !2904)
!2910 = !DILocation(line: 1626, column: 9, scope: !2904)
!2911 = !DILocation(line: 1626, column: 20, scope: !2904)
!2912 = !DILocation(line: 1627, column: 35, scope: !2904)
!2913 = !DILocation(line: 1627, column: 40, scope: !2904)
!2914 = !DILocation(line: 1627, column: 38, scope: !2904)
!2915 = !DILocation(line: 1627, column: 25, scope: !2904)
!2916 = !DILocation(line: 1627, column: 28, scope: !2904)
!2917 = !DILocation(line: 1627, column: 19, scope: !2904)
!2918 = !DILocation(line: 1627, column: 9, scope: !2904)
!2919 = !DILocation(line: 1627, column: 12, scope: !2904)
!2920 = !DILocation(line: 1627, column: 23, scope: !2904)
!2921 = !DILocation(line: 1628, column: 5, scope: !2904)
!2922 = !DILocation(line: 1625, column: 28, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2900, file: !1801, discriminator: 2)
!2924 = !DILocation(line: 1625, column: 5, scope: !2923)
!2925 = distinct !{!2925, !2926}
!2926 = !DILocation(line: 1625, column: 5, scope: !2367)
!2927 = !DILocation(line: 1629, column: 13, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1629, column: 5)
!2929 = !DILocation(line: 1629, column: 10, scope: !2928)
!2930 = !DILocation(line: 1629, column: 18, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !2932, file: !1801, discriminator: 1)
!2932 = distinct !DILexicalBlock(scope: !2928, file: !1801, line: 1629, column: 5)
!2933 = !DILocation(line: 1629, column: 23, scope: !2931)
!2934 = !DILocation(line: 1629, column: 26, scope: !2931)
!2935 = !DILocation(line: 1629, column: 21, scope: !2931)
!2936 = !DILocation(line: 1629, column: 5, scope: !2931)
!2937 = !DILocation(line: 1630, column: 13, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2939, file: !1801, line: 1630, column: 13)
!2939 = distinct !DILexicalBlock(scope: !2932, file: !1801, line: 1629, column: 42)
!2940 = !DILocation(line: 1630, column: 18, scope: !2938)
!2941 = !DILocation(line: 1630, column: 21, scope: !2938)
!2942 = !DILocation(line: 1630, column: 16, scope: !2938)
!2943 = !DILocation(line: 1630, column: 13, scope: !2939)
!2944 = !DILocation(line: 1631, column: 59, scope: !2938)
!2945 = !DILocation(line: 1631, column: 64, scope: !2938)
!2946 = !DILocation(line: 1631, column: 62, scope: !2938)
!2947 = !DILocation(line: 1631, column: 42, scope: !2938)
!2948 = !DILocation(line: 1631, column: 45, scope: !2938)
!2949 = !DILocation(line: 1631, column: 35, scope: !2938)
!2950 = !DILocation(line: 1631, column: 23, scope: !2938)
!2951 = !DILocation(line: 1631, column: 13, scope: !2938)
!2952 = !DILocation(line: 1631, column: 16, scope: !2938)
!2953 = !DILocation(line: 1631, column: 40, scope: !2938)
!2954 = !DILocation(line: 1632, column: 5, scope: !2939)
!2955 = !DILocation(line: 1629, column: 38, scope: !2956)
!2956 = !DILexicalBlockFile(scope: !2932, file: !1801, discriminator: 2)
!2957 = !DILocation(line: 1629, column: 5, scope: !2956)
!2958 = distinct !{!2958, !2959}
!2959 = !DILocation(line: 1629, column: 5, scope: !2367)
!2960 = !DILocation(line: 1633, column: 14, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1633, column: 5)
!2962 = !DILocation(line: 1633, column: 10, scope: !2961)
!2963 = !DILocation(line: 1633, column: 19, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2965, file: !1801, discriminator: 1)
!2965 = distinct !DILexicalBlock(scope: !2961, file: !1801, line: 1633, column: 5)
!2966 = !DILocation(line: 1633, column: 25, scope: !2964)
!2967 = !DILocation(line: 1633, column: 28, scope: !2964)
!2968 = !DILocation(line: 1633, column: 23, scope: !2964)
!2969 = !DILocation(line: 1633, column: 5, scope: !2964)
!2970 = !DILocation(line: 1634, column: 14, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2972, file: !1801, line: 1634, column: 13)
!2972 = distinct !DILexicalBlock(scope: !2965, file: !1801, line: 1633, column: 47)
!2973 = !DILocation(line: 1634, column: 18, scope: !2971)
!2974 = !DILocation(line: 1634, column: 40, scope: !2975)
!2975 = !DILexicalBlockFile(scope: !2971, file: !1801, discriminator: 1)
!2976 = !DILocation(line: 1634, column: 43, scope: !2975)
!2977 = !DILocation(line: 1634, column: 48, scope: !2975)
!2978 = !DILocation(line: 1634, column: 21, scope: !2975)
!2979 = !DILocation(line: 1634, column: 13, scope: !2975)
!2980 = !DILocation(line: 1635, column: 20, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2971, file: !1801, line: 1634, column: 57)
!2982 = !DILocation(line: 1635, column: 13, scope: !2981)
!2983 = !DILocation(line: 1636, column: 17, scope: !2981)
!2984 = !DILocation(line: 1637, column: 9, scope: !2981)
!2985 = !DILocation(line: 1638, column: 13, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2972, file: !1801, line: 1638, column: 13)
!2987 = !DILocation(line: 1638, column: 13, scope: !2972)
!2988 = !DILocation(line: 1639, column: 21, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2986, file: !1801, line: 1639, column: 13)
!2990 = !DILocation(line: 1639, column: 18, scope: !2989)
!2991 = !DILocation(line: 1639, column: 26, scope: !2992)
!2992 = !DILexicalBlockFile(scope: !2993, file: !1801, discriminator: 1)
!2993 = distinct !DILexicalBlock(scope: !2989, file: !1801, line: 1639, column: 13)
!2994 = !DILocation(line: 1639, column: 31, scope: !2992)
!2995 = !DILocation(line: 1639, column: 34, scope: !2992)
!2996 = !DILocation(line: 1639, column: 29, scope: !2992)
!2997 = !DILocation(line: 1639, column: 13, scope: !2992)
!2998 = !DILocation(line: 1640, column: 41, scope: !2993)
!2999 = !DILocation(line: 1640, column: 46, scope: !2993)
!3000 = !DILocation(line: 1640, column: 44, scope: !2993)
!3001 = !DILocation(line: 1640, column: 24, scope: !2993)
!3002 = !DILocation(line: 1640, column: 27, scope: !2993)
!3003 = !DILocation(line: 1640, column: 60, scope: !2993)
!3004 = !DILocation(line: 1640, column: 59, scope: !2993)
!3005 = !DILocation(line: 1640, column: 54, scope: !2993)
!3006 = !DILocation(line: 1640, column: 17, scope: !2993)
!3007 = !DILocation(line: 1640, column: 72, scope: !2993)
!3008 = !DILocation(line: 1640, column: 65, scope: !2993)
!3009 = !DILocation(line: 1639, column: 50, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !2993, file: !1801, discriminator: 2)
!3011 = !DILocation(line: 1639, column: 13, scope: !3010)
!3012 = distinct !{!3012, !3013}
!3013 = !DILocation(line: 1639, column: 13, scope: !2986)
!3014 = !DILocation(line: 1640, column: 99, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !2989, file: !1801, discriminator: 1)
!3016 = !DILocation(line: 1641, column: 17, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !2972, file: !1801, line: 1641, column: 9)
!3018 = !DILocation(line: 1641, column: 14, scope: !3017)
!3019 = !DILocation(line: 1641, column: 22, scope: !3020)
!3020 = !DILexicalBlockFile(scope: !3021, file: !1801, discriminator: 1)
!3021 = distinct !DILexicalBlock(scope: !3017, file: !1801, line: 1641, column: 9)
!3022 = !DILocation(line: 1641, column: 27, scope: !3020)
!3023 = !DILocation(line: 1641, column: 30, scope: !3020)
!3024 = !DILocation(line: 1641, column: 25, scope: !3020)
!3025 = !DILocation(line: 1641, column: 9, scope: !3020)
!3026 = !DILocation(line: 1642, column: 48, scope: !3021)
!3027 = !DILocation(line: 1642, column: 36, scope: !3021)
!3028 = !DILocation(line: 1642, column: 26, scope: !3021)
!3029 = !DILocation(line: 1642, column: 29, scope: !3021)
!3030 = !DILocation(line: 1642, column: 20, scope: !3021)
!3031 = !DILocation(line: 1642, column: 13, scope: !3021)
!3032 = !DILocation(line: 1642, column: 24, scope: !3021)
!3033 = !DILocation(line: 1641, column: 46, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !3021, file: !1801, discriminator: 2)
!3035 = !DILocation(line: 1641, column: 9, scope: !3034)
!3036 = distinct !{!3036, !3037}
!3037 = !DILocation(line: 1641, column: 9, scope: !2972)
!3038 = !DILocation(line: 1643, column: 17, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !2972, file: !1801, line: 1643, column: 9)
!3040 = !DILocation(line: 1643, column: 14, scope: !3039)
!3041 = !DILocation(line: 1643, column: 22, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !3043, file: !1801, discriminator: 1)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !1801, line: 1643, column: 9)
!3044 = !DILocation(line: 1643, column: 27, scope: !3042)
!3045 = !DILocation(line: 1643, column: 30, scope: !3042)
!3046 = !DILocation(line: 1643, column: 25, scope: !3042)
!3047 = !DILocation(line: 1643, column: 9, scope: !3042)
!3048 = !DILocation(line: 1644, column: 18, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !1801, line: 1644, column: 17)
!3050 = distinct !DILexicalBlock(scope: !3043, file: !1801, line: 1643, column: 50)
!3051 = !DILocation(line: 1644, column: 21, scope: !3049)
!3052 = !DILocation(line: 1644, column: 36, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3049, file: !1801, discriminator: 1)
!3054 = !DILocation(line: 1644, column: 24, scope: !3053)
!3055 = !DILocation(line: 1644, column: 17, scope: !3053)
!3056 = !DILocation(line: 1645, column: 39, scope: !3049)
!3057 = !DILocation(line: 1645, column: 27, scope: !3049)
!3058 = !DILocation(line: 1645, column: 17, scope: !3049)
!3059 = !DILocation(line: 1645, column: 20, scope: !3049)
!3060 = !DILocation(line: 1645, column: 44, scope: !3049)
!3061 = !DILocation(line: 1646, column: 9, scope: !3050)
!3062 = !DILocation(line: 1643, column: 46, scope: !3063)
!3063 = !DILexicalBlockFile(scope: !3043, file: !1801, discriminator: 2)
!3064 = !DILocation(line: 1643, column: 9, scope: !3063)
!3065 = distinct !{!3065, !3066}
!3066 = !DILocation(line: 1643, column: 9, scope: !2972)
!3067 = !DILocation(line: 1647, column: 5, scope: !2972)
!3068 = !DILocation(line: 1633, column: 43, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !2965, file: !1801, discriminator: 2)
!3070 = !DILocation(line: 1633, column: 5, scope: !3069)
!3071 = distinct !{!3071, !3072}
!3072 = !DILocation(line: 1633, column: 5, scope: !2367)
!3073 = !DILocation(line: 1650, column: 13, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1650, column: 5)
!3075 = !DILocation(line: 1650, column: 10, scope: !3074)
!3076 = !DILocation(line: 1650, column: 18, scope: !3077)
!3077 = !DILexicalBlockFile(scope: !3078, file: !1801, discriminator: 1)
!3078 = distinct !DILexicalBlock(scope: !3074, file: !1801, line: 1650, column: 5)
!3079 = !DILocation(line: 1650, column: 23, scope: !3077)
!3080 = !DILocation(line: 1650, column: 26, scope: !3077)
!3081 = !DILocation(line: 1650, column: 21, scope: !3077)
!3082 = !DILocation(line: 1650, column: 5, scope: !3077)
!3083 = !DILocation(line: 1651, column: 26, scope: !3078)
!3084 = !DILocation(line: 1651, column: 31, scope: !3078)
!3085 = !DILocation(line: 1651, column: 29, scope: !3078)
!3086 = !DILocation(line: 1651, column: 16, scope: !3078)
!3087 = !DILocation(line: 1651, column: 19, scope: !3078)
!3088 = !DILocation(line: 1651, column: 9, scope: !3078)
!3089 = !DILocation(line: 1651, column: 47, scope: !3078)
!3090 = !DILocation(line: 1651, column: 40, scope: !3078)
!3091 = !DILocation(line: 1650, column: 42, scope: !3092)
!3092 = !DILexicalBlockFile(scope: !3078, file: !1801, discriminator: 2)
!3093 = !DILocation(line: 1650, column: 5, scope: !3092)
!3094 = distinct !{!3094, !3095}
!3095 = !DILocation(line: 1650, column: 5, scope: !2367)
!3096 = !DILocation(line: 1654, column: 9, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1654, column: 9)
!3098 = !DILocation(line: 1654, column: 20, scope: !3097)
!3099 = !DILocation(line: 1654, column: 23, scope: !3097)
!3100 = !DILocation(line: 1654, column: 18, scope: !3097)
!3101 = !DILocation(line: 1654, column: 9, scope: !2367)
!3102 = !DILocalVariable(name: "hdr", scope: !3103, file: !1801, line: 1655, type: !3104)
!3103 = distinct !DILexicalBlock(scope: !3097, file: !1801, line: 1654, column: 35)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "AC3HeaderInfo", file: !961, line: 207, baseType: !3105)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AC3HeaderInfo", file: !961, line: 177, size: 448, align: 64, elements: !3106)
!3106 = !{!3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "sync_word", scope: !3105, file: !961, line: 181, baseType: !1023, size: 16, align: 16)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "crc1", scope: !3105, file: !961, line: 182, baseType: !1023, size: 16, align: 16, offset: 16)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "sr_code", scope: !3105, file: !961, line: 183, baseType: !1039, size: 8, align: 8, offset: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_id", scope: !3105, file: !961, line: 184, baseType: !1039, size: 8, align: 8, offset: 40)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_mode", scope: !3105, file: !961, line: 185, baseType: !1039, size: 8, align: 8, offset: 48)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "channel_mode", scope: !3105, file: !961, line: 186, baseType: !1039, size: 8, align: 8, offset: 56)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_on", scope: !3105, file: !961, line: 187, baseType: !1039, size: 8, align: 8, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !3105, file: !961, line: 188, baseType: !1039, size: 8, align: 8, offset: 72)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "substreamid", scope: !3105, file: !961, line: 189, baseType: !1015, size: 32, align: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "center_mix_level", scope: !3105, file: !961, line: 190, baseType: !1015, size: 32, align: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "surround_mix_level", scope: !3105, file: !961, line: 191, baseType: !1015, size: 32, align: 32, offset: 160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !3105, file: !961, line: 192, baseType: !1023, size: 16, align: 16, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !3105, file: !961, line: 193, baseType: !1015, size: 32, align: 32, offset: 224)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "dolby_surround_mode", scope: !3105, file: !961, line: 194, baseType: !1015, size: 32, align: 32, offset: 256)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "sr_shift", scope: !3105, file: !961, line: 200, baseType: !1039, size: 8, align: 8, offset: 288)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !3105, file: !961, line: 201, baseType: !1023, size: 16, align: 16, offset: 304)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !3105, file: !961, line: 202, baseType: !1038, size: 32, align: 32, offset: 320)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3105, file: !961, line: 203, baseType: !1039, size: 8, align: 8, offset: 352)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !3105, file: !961, line: 204, baseType: !1023, size: 16, align: 16, offset: 368)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !3105, file: !961, line: 205, baseType: !1079, size: 64, align: 64, offset: 384)
!3127 = !DILocation(line: 1655, column: 23, scope: !3103)
!3128 = !DILocalVariable(name: "err", scope: !3103, file: !1801, line: 1656, type: !1015)
!3129 = !DILocation(line: 1656, column: 13, scope: !3103)
!3130 = !DILocation(line: 1658, column: 13, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3103, file: !1801, line: 1658, column: 13)
!3132 = !DILocation(line: 1658, column: 24, scope: !3131)
!3133 = !DILocation(line: 1658, column: 27, scope: !3131)
!3134 = !DILocation(line: 1658, column: 22, scope: !3131)
!3135 = !DILocation(line: 1658, column: 38, scope: !3131)
!3136 = !DILocation(line: 1658, column: 13, scope: !3103)
!3137 = !DILocation(line: 1659, column: 20, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3131, file: !1801, line: 1658, column: 45)
!3139 = !DILocation(line: 1659, column: 31, scope: !3138)
!3140 = !DILocation(line: 1659, column: 34, scope: !3138)
!3141 = !DILocation(line: 1659, column: 29, scope: !3138)
!3142 = !DILocation(line: 1659, column: 18, scope: !3138)
!3143 = !DILocation(line: 1660, column: 13, scope: !3138)
!3144 = !DILocation(line: 1663, column: 36, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3103, file: !1801, line: 1663, column: 13)
!3146 = !DILocation(line: 1663, column: 39, scope: !3145)
!3147 = !DILocation(line: 1663, column: 44, scope: !3145)
!3148 = !DILocation(line: 1663, column: 50, scope: !3145)
!3149 = !DILocation(line: 1663, column: 53, scope: !3145)
!3150 = !DILocation(line: 1663, column: 48, scope: !3145)
!3151 = !DILocation(line: 1663, column: 65, scope: !3145)
!3152 = !DILocation(line: 1663, column: 76, scope: !3145)
!3153 = !DILocation(line: 1663, column: 79, scope: !3145)
!3154 = !DILocation(line: 1663, column: 74, scope: !3145)
!3155 = !DILocation(line: 1663, column: 20, scope: !3145)
!3156 = !DILocation(line: 1663, column: 18, scope: !3145)
!3157 = !DILocation(line: 1663, column: 92, scope: !3145)
!3158 = !DILocation(line: 1663, column: 13, scope: !3103)
!3159 = !DILocation(line: 1664, column: 20, scope: !3145)
!3160 = !DILocation(line: 1664, column: 13, scope: !3145)
!3161 = !DILocation(line: 1666, column: 36, scope: !3103)
!3162 = !DILocation(line: 1666, column: 39, scope: !3103)
!3163 = !DILocation(line: 1666, column: 15, scope: !3103)
!3164 = !DILocation(line: 1666, column: 13, scope: !3103)
!3165 = !DILocation(line: 1667, column: 13, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3103, file: !1801, line: 1667, column: 13)
!3167 = !DILocation(line: 1667, column: 13, scope: !3103)
!3168 = !DILocation(line: 1668, column: 20, scope: !3166)
!3169 = !DILocation(line: 1668, column: 13, scope: !3166)
!3170 = !DILocation(line: 1670, column: 17, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3103, file: !1801, line: 1670, column: 13)
!3172 = !DILocation(line: 1670, column: 13, scope: !3171)
!3173 = !DILocation(line: 1670, column: 28, scope: !3171)
!3174 = !DILocation(line: 1670, column: 13, scope: !3103)
!3175 = !DILocation(line: 1671, column: 21, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3177, file: !1801, line: 1671, column: 17)
!3177 = distinct !DILexicalBlock(scope: !3171, file: !1801, line: 1670, column: 58)
!3178 = !DILocation(line: 1671, column: 35, scope: !3176)
!3179 = !DILocation(line: 1671, column: 38, scope: !3176)
!3180 = !DILocation(line: 1671, column: 32, scope: !3176)
!3181 = !DILocation(line: 1671, column: 49, scope: !3176)
!3182 = !DILocation(line: 1671, column: 52, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3176, file: !1801, discriminator: 1)
!3184 = !DILocation(line: 1671, column: 55, scope: !3183)
!3185 = !DILocation(line: 1671, column: 74, scope: !3183)
!3186 = !DILocation(line: 1671, column: 70, scope: !3183)
!3187 = !DILocation(line: 1671, column: 67, scope: !3183)
!3188 = !DILocation(line: 1671, column: 17, scope: !3183)
!3189 = !DILocation(line: 1672, column: 24, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3176, file: !1801, line: 1671, column: 87)
!3191 = !DILocation(line: 1672, column: 17, scope: !3190)
!3192 = !DILocation(line: 1673, column: 13, scope: !3190)
!3193 = !DILocation(line: 1674, column: 24, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3176, file: !1801, line: 1673, column: 20)
!3195 = !DILocation(line: 1674, column: 27, scope: !3194)
!3196 = !DILocation(line: 1674, column: 21, scope: !3194)
!3197 = !DILocation(line: 1675, column: 29, scope: !3194)
!3198 = !DILocation(line: 1675, column: 32, scope: !3194)
!3199 = !DILocation(line: 1675, column: 26, scope: !3194)
!3200 = !DILocation(line: 1676, column: 39, scope: !3194)
!3201 = !DILocation(line: 1676, column: 42, scope: !3194)
!3202 = !DILocation(line: 1676, column: 17, scope: !3194)
!3203 = !DILocation(line: 1676, column: 20, scope: !3194)
!3204 = !DILocation(line: 1676, column: 37, scope: !3194)
!3205 = !DILocation(line: 1677, column: 36, scope: !3194)
!3206 = !DILocation(line: 1677, column: 39, scope: !3194)
!3207 = !DILocation(line: 1677, column: 17, scope: !3194)
!3208 = !DILocation(line: 1677, column: 20, scope: !3194)
!3209 = !DILocation(line: 1677, column: 34, scope: !3194)
!3210 = !DILocation(line: 1678, column: 39, scope: !3194)
!3211 = !DILocation(line: 1679, column: 17, scope: !3194)
!3212 = !DILocation(line: 1681, column: 9, scope: !3177)
!3213 = !DILocation(line: 1682, column: 5, scope: !3103)
!3214 = !DILocation(line: 1654, column: 23, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3097, file: !1801, discriminator: 1)
!3216 = !DILocation(line: 1685, column: 33, scope: !2367)
!3217 = !DILocation(line: 1685, column: 5, scope: !2367)
!3218 = !DILocation(line: 1685, column: 12, scope: !2367)
!3219 = !DILocation(line: 1685, column: 31, scope: !2367)
!3220 = !DILocation(line: 1688, column: 10, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1688, column: 9)
!3222 = !DILocation(line: 1688, column: 9, scope: !2367)
!3223 = !DILocation(line: 1689, column: 30, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3221, file: !1801, line: 1688, column: 15)
!3225 = !DILocation(line: 1689, column: 33, scope: !3224)
!3226 = !DILocation(line: 1689, column: 9, scope: !3224)
!3227 = !DILocation(line: 1689, column: 16, scope: !3224)
!3228 = !DILocation(line: 1689, column: 28, scope: !3224)
!3229 = !DILocation(line: 1690, column: 27, scope: !3224)
!3230 = !DILocation(line: 1690, column: 30, scope: !3224)
!3231 = !DILocation(line: 1690, column: 41, scope: !3224)
!3232 = !DILocation(line: 1690, column: 44, scope: !3224)
!3233 = !DILocation(line: 1690, column: 39, scope: !3224)
!3234 = !DILocation(line: 1690, column: 9, scope: !3224)
!3235 = !DILocation(line: 1690, column: 16, scope: !3224)
!3236 = !DILocation(line: 1690, column: 25, scope: !3224)
!3237 = !DILocation(line: 1691, column: 5, scope: !3224)
!3238 = !DILocation(line: 1693, column: 13, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1693, column: 5)
!3240 = !DILocation(line: 1693, column: 10, scope: !3239)
!3241 = !DILocation(line: 1693, column: 18, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3243, file: !1801, discriminator: 1)
!3243 = distinct !DILexicalBlock(scope: !3239, file: !1801, line: 1693, column: 5)
!3244 = !DILocation(line: 1693, column: 21, scope: !3242)
!3245 = !DILocation(line: 1693, column: 5, scope: !3242)
!3246 = !DILocation(line: 1694, column: 36, scope: !3243)
!3247 = !DILocation(line: 1694, column: 30, scope: !3243)
!3248 = !DILocation(line: 1694, column: 9, scope: !3243)
!3249 = !DILocation(line: 1694, column: 34, scope: !3243)
!3250 = !DILocation(line: 1693, column: 29, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3243, file: !1801, discriminator: 2)
!3252 = !DILocation(line: 1693, column: 5, scope: !3251)
!3253 = distinct !{!3253, !3254}
!3254 = !DILocation(line: 1693, column: 5, scope: !2367)
!3255 = !DILocation(line: 1696, column: 9, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1696, column: 9)
!3257 = !DILocation(line: 1696, column: 12, scope: !3256)
!3258 = !DILocation(line: 1696, column: 23, scope: !3256)
!3259 = !DILocation(line: 1696, column: 9, scope: !2367)
!3260 = !DILocalVariable(name: "ich_layout", scope: !3261, file: !1801, line: 1697, type: !1079)
!3261 = distinct !DILexicalBlock(scope: !3256, file: !1801, line: 1696, column: 53)
!3262 = !DILocation(line: 1697, column: 18, scope: !3261)
!3263 = !DILocation(line: 1697, column: 61, scope: !3261)
!3264 = !DILocation(line: 1697, column: 64, scope: !3261)
!3265 = !DILocation(line: 1697, column: 81, scope: !3261)
!3266 = !DILocation(line: 1697, column: 31, scope: !3261)
!3267 = !DILocalVariable(name: "channel_map_size", scope: !3261, file: !1801, line: 1698, type: !1015)
!3268 = !DILocation(line: 1698, column: 13, scope: !3261)
!3269 = !DILocation(line: 1698, column: 52, scope: !3261)
!3270 = !DILocation(line: 1698, column: 55, scope: !3261)
!3271 = !DILocation(line: 1698, column: 67, scope: !3261)
!3272 = !DILocation(line: 1698, column: 32, scope: !3261)
!3273 = !DILocation(line: 1698, column: 75, scope: !3261)
!3274 = !DILocation(line: 1698, column: 78, scope: !3261)
!3275 = !DILocation(line: 1698, column: 73, scope: !3261)
!3276 = !DILocalVariable(name: "channel_layout", scope: !3261, file: !1801, line: 1699, type: !1079)
!3277 = !DILocation(line: 1699, column: 18, scope: !3261)
!3278 = !DILocalVariable(name: "extend", scope: !3261, file: !1801, line: 1700, type: !1015)
!3279 = !DILocation(line: 1700, column: 13, scope: !3261)
!3280 = !DILocation(line: 1702, column: 13, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3261, file: !1801, line: 1702, column: 13)
!3282 = !DILocation(line: 1702, column: 16, scope: !3281)
!3283 = !DILocation(line: 1702, column: 33, scope: !3281)
!3284 = !DILocation(line: 1702, column: 13, scope: !3261)
!3285 = !DILocation(line: 1703, column: 24, scope: !3281)
!3286 = !DILocation(line: 1703, column: 13, scope: !3281)
!3287 = !DILocation(line: 1705, column: 26, scope: !3261)
!3288 = !DILocation(line: 1705, column: 24, scope: !3261)
!3289 = !DILocation(line: 1706, column: 17, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3261, file: !1801, line: 1706, column: 9)
!3291 = !DILocation(line: 1706, column: 14, scope: !3290)
!3292 = !DILocation(line: 1706, column: 22, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3294, file: !1801, discriminator: 1)
!3294 = distinct !DILexicalBlock(scope: !3290, file: !1801, line: 1706, column: 9)
!3295 = !DILocation(line: 1706, column: 25, scope: !3293)
!3296 = !DILocation(line: 1706, column: 9, scope: !3293)
!3297 = !DILocation(line: 1707, column: 17, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !1801, line: 1707, column: 17)
!3299 = distinct !DILexicalBlock(scope: !3294, file: !1801, line: 1706, column: 37)
!3300 = !DILocation(line: 1707, column: 20, scope: !3298)
!3301 = !DILocation(line: 1707, column: 46, scope: !3298)
!3302 = !DILocation(line: 1707, column: 44, scope: !3298)
!3303 = !DILocation(line: 1707, column: 49, scope: !3298)
!3304 = !DILocation(line: 1707, column: 37, scope: !3298)
!3305 = !DILocation(line: 1707, column: 32, scope: !3298)
!3306 = !DILocation(line: 1707, column: 17, scope: !3299)
!3307 = !DILocation(line: 1708, column: 72, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3298, file: !1801, line: 1707, column: 56)
!3309 = !DILocation(line: 1708, column: 35, scope: !3308)
!3310 = !DILocation(line: 1708, column: 32, scope: !3308)
!3311 = !DILocation(line: 1709, column: 13, scope: !3308)
!3312 = !DILocation(line: 1710, column: 9, scope: !3299)
!3313 = !DILocation(line: 1706, column: 33, scope: !3314)
!3314 = !DILexicalBlockFile(scope: !3294, file: !1801, discriminator: 2)
!3315 = !DILocation(line: 1706, column: 9, scope: !3314)
!3316 = distinct !{!3316, !3317}
!3317 = !DILocation(line: 1706, column: 9, scope: !3261)
!3318 = !DILocation(line: 1711, column: 47, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3261, file: !1801, line: 1711, column: 13)
!3320 = !DILocation(line: 1711, column: 13, scope: !3319)
!3321 = !DILocation(line: 1711, column: 63, scope: !3319)
!3322 = !DILocation(line: 1711, column: 13, scope: !3261)
!3323 = !DILocation(line: 1712, column: 20, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3319, file: !1801, line: 1711, column: 69)
!3325 = !DILocation(line: 1713, column: 54, scope: !3324)
!3326 = !DILocation(line: 1713, column: 20, scope: !3324)
!3327 = !DILocation(line: 1712, column: 13, scope: !3324)
!3328 = !DILocation(line: 1714, column: 13, scope: !3324)
!3329 = !DILocation(line: 1717, column: 33, scope: !3261)
!3330 = !DILocation(line: 1717, column: 9, scope: !3261)
!3331 = !DILocation(line: 1717, column: 16, scope: !3261)
!3332 = !DILocation(line: 1717, column: 31, scope: !3261)
!3333 = !DILocation(line: 1718, column: 61, scope: !3261)
!3334 = !DILocation(line: 1718, column: 27, scope: !3261)
!3335 = !DILocation(line: 1718, column: 9, scope: !3261)
!3336 = !DILocation(line: 1718, column: 16, scope: !3261)
!3337 = !DILocation(line: 1718, column: 25, scope: !3261)
!3338 = !DILocation(line: 1720, column: 17, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3261, file: !1801, line: 1720, column: 9)
!3340 = !DILocation(line: 1720, column: 14, scope: !3339)
!3341 = !DILocation(line: 1720, column: 22, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3343, file: !1801, discriminator: 1)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !1801, line: 1720, column: 9)
!3344 = !DILocation(line: 1720, column: 25, scope: !3342)
!3345 = !DILocation(line: 1720, column: 9, scope: !3342)
!3346 = !DILocation(line: 1721, column: 17, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !1801, line: 1721, column: 17)
!3348 = distinct !DILexicalBlock(scope: !3343, file: !1801, line: 1720, column: 37)
!3349 = !DILocation(line: 1721, column: 20, scope: !3347)
!3350 = !DILocation(line: 1721, column: 46, scope: !3347)
!3351 = !DILocation(line: 1721, column: 44, scope: !3347)
!3352 = !DILocation(line: 1721, column: 49, scope: !3347)
!3353 = !DILocation(line: 1721, column: 37, scope: !3347)
!3354 = !DILocation(line: 1721, column: 32, scope: !3347)
!3355 = !DILocation(line: 1721, column: 17, scope: !3348)
!3356 = !DILocation(line: 1722, column: 58, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !1801, line: 1722, column: 21)
!3358 = distinct !DILexicalBlock(scope: !3347, file: !1801, line: 1721, column: 56)
!3359 = !DILocation(line: 1722, column: 21, scope: !3357)
!3360 = !DILocation(line: 1722, column: 21, scope: !3358)
!3361 = !DILocalVariable(name: "index", scope: !3362, file: !1801, line: 1723, type: !1015)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !1801, line: 1722, column: 66)
!3363 = !DILocation(line: 1723, column: 25, scope: !3362)
!3364 = !DILocation(line: 1723, column: 69, scope: !3362)
!3365 = !DILocation(line: 1724, column: 106, scope: !3362)
!3366 = !DILocation(line: 1724, column: 69, scope: !3362)
!3367 = !DILocation(line: 1723, column: 33, scope: !3362)
!3368 = !DILocation(line: 1725, column: 25, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3362, file: !1801, line: 1725, column: 25)
!3370 = !DILocation(line: 1725, column: 31, scope: !3369)
!3371 = !DILocation(line: 1725, column: 25, scope: !3362)
!3372 = !DILocation(line: 1726, column: 25, scope: !3369)
!3373 = !DILocation(line: 1727, column: 25, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3362, file: !1801, line: 1727, column: 25)
!3375 = !DILocation(line: 1727, column: 35, scope: !3374)
!3376 = !DILocation(line: 1727, column: 32, scope: !3374)
!3377 = !DILocation(line: 1727, column: 25, scope: !3362)
!3378 = !DILocation(line: 1728, column: 25, scope: !3374)
!3379 = !DILocation(line: 1730, column: 51, scope: !3362)
!3380 = !DILocation(line: 1730, column: 78, scope: !3362)
!3381 = !DILocation(line: 1730, column: 60, scope: !3362)
!3382 = !DILocation(line: 1730, column: 58, scope: !3362)
!3383 = !DILocation(line: 1730, column: 42, scope: !3362)
!3384 = !DILocation(line: 1730, column: 21, scope: !3362)
!3385 = !DILocation(line: 1730, column: 49, scope: !3362)
!3386 = !DILocation(line: 1731, column: 17, scope: !3362)
!3387 = !DILocalVariable(name: "i", scope: !3388, file: !1801, line: 1732, type: !1015)
!3388 = distinct !DILexicalBlock(scope: !3357, file: !1801, line: 1731, column: 24)
!3389 = !DILocation(line: 1732, column: 25, scope: !3388)
!3390 = !DILocation(line: 1734, column: 28, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !1801, line: 1734, column: 21)
!3392 = !DILocation(line: 1734, column: 26, scope: !3391)
!3393 = !DILocation(line: 1734, column: 33, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3395, file: !1801, discriminator: 1)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !1801, line: 1734, column: 21)
!3396 = !DILocation(line: 1734, column: 35, scope: !3394)
!3397 = !DILocation(line: 1734, column: 21, scope: !3394)
!3398 = !DILocation(line: 1735, column: 38, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !1801, line: 1735, column: 29)
!3400 = distinct !DILexicalBlock(scope: !3395, file: !1801, line: 1734, column: 46)
!3401 = !DILocation(line: 1735, column: 35, scope: !3399)
!3402 = !DILocation(line: 1735, column: 80, scope: !3399)
!3403 = !DILocation(line: 1735, column: 43, scope: !3399)
!3404 = !DILocation(line: 1735, column: 41, scope: !3399)
!3405 = !DILocation(line: 1735, column: 29, scope: !3400)
!3406 = !DILocalVariable(name: "index", scope: !3407, file: !1801, line: 1736, type: !1015)
!3407 = distinct !DILexicalBlock(scope: !3399, file: !1801, line: 1735, column: 88)
!3408 = !DILocation(line: 1736, column: 33, scope: !3407)
!3409 = !DILocation(line: 1736, column: 77, scope: !3407)
!3410 = !DILocation(line: 1737, column: 85, scope: !3407)
!3411 = !DILocation(line: 1737, column: 82, scope: !3407)
!3412 = !DILocation(line: 1736, column: 41, scope: !3407)
!3413 = !DILocation(line: 1738, column: 33, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3407, file: !1801, line: 1738, column: 33)
!3415 = !DILocation(line: 1738, column: 39, scope: !3414)
!3416 = !DILocation(line: 1738, column: 33, scope: !3407)
!3417 = !DILocation(line: 1739, column: 33, scope: !3414)
!3418 = !DILocation(line: 1740, column: 33, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3407, file: !1801, line: 1740, column: 33)
!3420 = !DILocation(line: 1740, column: 43, scope: !3419)
!3421 = !DILocation(line: 1740, column: 40, scope: !3419)
!3422 = !DILocation(line: 1740, column: 33, scope: !3407)
!3423 = !DILocation(line: 1741, column: 33, scope: !3419)
!3424 = !DILocation(line: 1743, column: 59, scope: !3407)
!3425 = !DILocation(line: 1743, column: 86, scope: !3407)
!3426 = !DILocation(line: 1743, column: 68, scope: !3407)
!3427 = !DILocation(line: 1743, column: 66, scope: !3407)
!3428 = !DILocation(line: 1743, column: 50, scope: !3407)
!3429 = !DILocation(line: 1743, column: 29, scope: !3407)
!3430 = !DILocation(line: 1743, column: 57, scope: !3407)
!3431 = !DILocation(line: 1744, column: 25, scope: !3407)
!3432 = !DILocation(line: 1745, column: 21, scope: !3400)
!3433 = !DILocation(line: 1734, column: 42, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3395, file: !1801, discriminator: 2)
!3435 = !DILocation(line: 1734, column: 21, scope: !3434)
!3436 = distinct !{!3436, !3437}
!3437 = !DILocation(line: 1734, column: 21, scope: !3388)
!3438 = !DILocation(line: 1747, column: 13, scope: !3358)
!3439 = !DILocation(line: 1748, column: 9, scope: !3348)
!3440 = !DILocation(line: 1720, column: 33, scope: !3441)
!3441 = !DILexicalBlockFile(scope: !3343, file: !1801, discriminator: 2)
!3442 = !DILocation(line: 1720, column: 9, scope: !3441)
!3443 = distinct !{!3443, !3444}
!3444 = !DILocation(line: 1720, column: 9, scope: !3261)
!3445 = !DILocation(line: 1749, column: 5, scope: !3261)
!3446 = !DILocation(line: 1752, column: 25, scope: !2367)
!3447 = !DILocation(line: 1752, column: 28, scope: !2367)
!3448 = !DILocation(line: 1752, column: 39, scope: !2367)
!3449 = !DILocation(line: 1752, column: 5, scope: !2367)
!3450 = !DILocation(line: 1752, column: 12, scope: !2367)
!3451 = !DILocation(line: 1752, column: 23, scope: !2367)
!3452 = !DILocation(line: 1753, column: 30, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1753, column: 9)
!3454 = !DILocation(line: 1753, column: 37, scope: !3453)
!3455 = !DILocation(line: 1753, column: 16, scope: !3453)
!3456 = !DILocation(line: 1753, column: 14, scope: !3453)
!3457 = !DILocation(line: 1753, column: 48, scope: !3453)
!3458 = !DILocation(line: 1753, column: 9, scope: !2367)
!3459 = !DILocation(line: 1754, column: 16, scope: !3453)
!3460 = !DILocation(line: 1754, column: 9, scope: !3453)
!3461 = !DILocation(line: 1756, column: 13, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1756, column: 5)
!3463 = !DILocation(line: 1756, column: 10, scope: !3462)
!3464 = !DILocation(line: 1756, column: 18, scope: !3465)
!3465 = !DILexicalBlockFile(scope: !3466, file: !1801, discriminator: 1)
!3466 = distinct !DILexicalBlock(scope: !3462, file: !1801, line: 1756, column: 5)
!3467 = !DILocation(line: 1756, column: 23, scope: !3465)
!3468 = !DILocation(line: 1756, column: 30, scope: !3465)
!3469 = !DILocation(line: 1756, column: 21, scope: !3465)
!3470 = !DILocation(line: 1756, column: 5, scope: !3465)
!3471 = !DILocalVariable(name: "map", scope: !3472, file: !1801, line: 1757, type: !1015)
!3472 = distinct !DILexicalBlock(scope: !3466, file: !1801, line: 1756, column: 46)
!3473 = !DILocation(line: 1757, column: 13, scope: !3472)
!3474 = !DILocation(line: 1757, column: 40, scope: !3472)
!3475 = !DILocation(line: 1757, column: 19, scope: !3472)
!3476 = !DILocation(line: 1758, column: 9, scope: !3472)
!3477 = distinct !{!3477, !3476}
!3478 = !DILocation(line: 1758, column: 20, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3480, file: !1801, discriminator: 1)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !1801, line: 1758, column: 18)
!3481 = distinct !DILexicalBlock(scope: !3472, file: !1801, line: 1758, column: 12)
!3482 = !DILocation(line: 1758, column: 22, scope: !3479)
!3483 = !DILocation(line: 1758, column: 26, scope: !3479)
!3484 = !DILocation(line: 1758, column: 50, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3480, file: !1801, discriminator: 2)
!3486 = !DILocation(line: 1758, column: 29, scope: !3485)
!3487 = !DILocation(line: 1758, column: 36, scope: !3485)
!3488 = !DILocation(line: 1758, column: 69, scope: !3485)
!3489 = !DILocation(line: 1758, column: 57, scope: !3485)
!3490 = !DILocation(line: 1758, column: 64, scope: !3485)
!3491 = !DILocation(line: 1758, column: 54, scope: !3485)
!3492 = !DILocation(line: 1758, column: 18, scope: !3485)
!3493 = !DILocation(line: 1758, column: 77, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3495, file: !1801, discriminator: 3)
!3495 = distinct !DILexicalBlock(scope: !3480, file: !1801, line: 1758, column: 75)
!3496 = !DILocation(line: 1758, column: 133, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3494, file: !1801, discriminator: 5)
!3498 = !DILocation(line: 1758, column: 133, scope: !3494)
!3499 = !DILocation(line: 1758, column: 144, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3481, file: !1801, discriminator: 4)
!3501 = !DILocation(line: 1759, column: 51, scope: !3472)
!3502 = !DILocation(line: 1759, column: 30, scope: !3472)
!3503 = !DILocation(line: 1759, column: 37, scope: !3472)
!3504 = !DILocation(line: 1759, column: 9, scope: !3472)
!3505 = !DILocation(line: 1760, column: 33, scope: !3472)
!3506 = !DILocation(line: 1760, column: 16, scope: !3472)
!3507 = !DILocation(line: 1760, column: 19, scope: !3472)
!3508 = !DILocation(line: 1761, column: 16, scope: !3472)
!3509 = !DILocation(line: 1761, column: 19, scope: !3472)
!3510 = !DILocation(line: 1761, column: 30, scope: !3472)
!3511 = !DILocation(line: 1761, column: 36, scope: !3472)
!3512 = !DILocation(line: 1762, column: 5, scope: !3472)
!3513 = !DILocation(line: 1756, column: 42, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !3466, file: !1801, discriminator: 2)
!3515 = !DILocation(line: 1756, column: 5, scope: !3514)
!3516 = distinct !{!3516, !3517}
!3517 = !DILocation(line: 1756, column: 5, scope: !2367)
!3518 = !DILocation(line: 1770, column: 21, scope: !2367)
!3519 = !DILocation(line: 1771, column: 9, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1771, column: 9)
!3521 = !DILocation(line: 1771, column: 12, scope: !3520)
!3522 = !DILocation(line: 1771, column: 25, scope: !3520)
!3523 = !DILocation(line: 1771, column: 46, scope: !3520)
!3524 = !DILocation(line: 1772, column: 9, scope: !3520)
!3525 = !DILocation(line: 1772, column: 12, scope: !3520)
!3526 = !DILocation(line: 1772, column: 29, scope: !3520)
!3527 = !DILocation(line: 1772, column: 32, scope: !3520)
!3528 = !DILocation(line: 1772, column: 44, scope: !3520)
!3529 = !DILocation(line: 1772, column: 25, scope: !3520)
!3530 = !DILocation(line: 1771, column: 9, scope: !3531)
!3531 = !DILexicalBlockFile(scope: !2367, file: !1801, discriminator: 1)
!3532 = !DILocation(line: 1773, column: 13, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !1801, line: 1773, column: 13)
!3534 = distinct !DILexicalBlock(scope: !3520, file: !1801, line: 1772, column: 51)
!3535 = !DILocation(line: 1773, column: 16, scope: !3533)
!3536 = !DILocation(line: 1773, column: 36, scope: !3533)
!3537 = !DILocation(line: 1773, column: 13, scope: !3534)
!3538 = !DILocation(line: 1774, column: 29, scope: !3533)
!3539 = !DILocation(line: 1774, column: 13, scope: !3533)
!3540 = !DILocation(line: 1775, column: 18, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3533, file: !1801, line: 1775, column: 18)
!3542 = !DILocation(line: 1775, column: 21, scope: !3541)
!3543 = !DILocation(line: 1775, column: 42, scope: !3541)
!3544 = !DILocation(line: 1775, column: 18, scope: !3533)
!3545 = !DILocation(line: 1776, column: 29, scope: !3541)
!3546 = !DILocation(line: 1776, column: 13, scope: !3541)
!3547 = !DILocation(line: 1777, column: 5, scope: !3534)
!3548 = !DILocation(line: 1777, column: 16, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3550, file: !1801, discriminator: 1)
!3550 = distinct !DILexicalBlock(scope: !3520, file: !1801, line: 1777, column: 16)
!3551 = !DILocation(line: 1777, column: 19, scope: !3549)
!3552 = !DILocation(line: 1777, column: 32, scope: !3549)
!3553 = !DILocation(line: 1777, column: 51, scope: !3549)
!3554 = !DILocation(line: 1778, column: 16, scope: !3550)
!3555 = !DILocation(line: 1778, column: 19, scope: !3550)
!3556 = !DILocation(line: 1778, column: 36, scope: !3550)
!3557 = !DILocation(line: 1778, column: 39, scope: !3550)
!3558 = !DILocation(line: 1778, column: 51, scope: !3550)
!3559 = !DILocation(line: 1778, column: 32, scope: !3550)
!3560 = !DILocation(line: 1777, column: 16, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3520, file: !1801, discriminator: 2)
!3562 = !DILocation(line: 1779, column: 17, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3550, file: !1801, line: 1778, column: 58)
!3564 = !DILocation(line: 1779, column: 20, scope: !3563)
!3565 = !DILocation(line: 1779, column: 9, scope: !3563)
!3566 = !DILocation(line: 1781, column: 29, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3563, file: !1801, line: 1779, column: 44)
!3568 = !DILocation(line: 1782, column: 13, scope: !3567)
!3569 = !DILocation(line: 1784, column: 29, scope: !3567)
!3570 = !DILocation(line: 1785, column: 13, scope: !3567)
!3571 = !DILocation(line: 1787, column: 13, scope: !3567)
!3572 = !DILocation(line: 1789, column: 5, scope: !3563)
!3573 = !DILocation(line: 1790, column: 52, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1790, column: 9)
!3575 = !DILocation(line: 1790, column: 59, scope: !3574)
!3576 = !DILocation(line: 1790, column: 16, scope: !3574)
!3577 = !DILocation(line: 1790, column: 14, scope: !3574)
!3578 = !DILocation(line: 1790, column: 77, scope: !3574)
!3579 = !DILocation(line: 1790, column: 9, scope: !2367)
!3580 = !DILocation(line: 1791, column: 16, scope: !3574)
!3581 = !DILocation(line: 1791, column: 9, scope: !3574)
!3582 = !DILocation(line: 1794, column: 58, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1794, column: 9)
!3584 = !DILocation(line: 1794, column: 25, scope: !3583)
!3585 = !DILocation(line: 1794, column: 23, scope: !3583)
!3586 = !DILocation(line: 1794, column: 9, scope: !2367)
!3587 = !DILocation(line: 1795, column: 17, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3583, file: !1801, line: 1794, column: 67)
!3589 = !DILocation(line: 1795, column: 20, scope: !3588)
!3590 = !DILocation(line: 1795, column: 9, scope: !3588)
!3591 = !DILocation(line: 1797, column: 13, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !1801, line: 1795, column: 39)
!3593 = !DILocation(line: 1797, column: 27, scope: !3592)
!3594 = !DILocation(line: 1797, column: 50, scope: !3592)
!3595 = !DILocation(line: 1798, column: 13, scope: !3592)
!3596 = !DILocation(line: 1800, column: 13, scope: !3592)
!3597 = !DILocation(line: 1800, column: 27, scope: !3592)
!3598 = !DILocation(line: 1800, column: 50, scope: !3592)
!3599 = !DILocation(line: 1801, column: 13, scope: !3592)
!3600 = !DILocation(line: 1803, column: 13, scope: !3592)
!3601 = !DILocation(line: 1803, column: 27, scope: !3592)
!3602 = !DILocation(line: 1803, column: 50, scope: !3592)
!3603 = !DILocation(line: 1804, column: 13, scope: !3592)
!3604 = !DILocation(line: 1806, column: 13, scope: !3592)
!3605 = !DILocation(line: 1806, column: 27, scope: !3592)
!3606 = !DILocation(line: 1806, column: 50, scope: !3592)
!3607 = !DILocation(line: 1807, column: 13, scope: !3592)
!3608 = !DILocation(line: 1809, column: 54, scope: !3588)
!3609 = !DILocation(line: 1809, column: 58, scope: !3588)
!3610 = !DILocation(line: 1809, column: 42, scope: !3588)
!3611 = !DILocation(line: 1809, column: 9, scope: !3588)
!3612 = !DILocation(line: 1809, column: 23, scope: !3588)
!3613 = !DILocation(line: 1809, column: 40, scope: !3588)
!3614 = !DILocation(line: 1810, column: 59, scope: !3588)
!3615 = !DILocation(line: 1810, column: 63, scope: !3588)
!3616 = !DILocation(line: 1810, column: 47, scope: !3588)
!3617 = !DILocation(line: 1810, column: 9, scope: !3588)
!3618 = !DILocation(line: 1810, column: 23, scope: !3588)
!3619 = !DILocation(line: 1810, column: 45, scope: !3588)
!3620 = !DILocation(line: 1811, column: 56, scope: !3588)
!3621 = !DILocation(line: 1811, column: 60, scope: !3588)
!3622 = !DILocation(line: 1811, column: 44, scope: !3588)
!3623 = !DILocation(line: 1811, column: 9, scope: !3588)
!3624 = !DILocation(line: 1811, column: 23, scope: !3588)
!3625 = !DILocation(line: 1811, column: 42, scope: !3588)
!3626 = !DILocation(line: 1812, column: 61, scope: !3588)
!3627 = !DILocation(line: 1812, column: 64, scope: !3588)
!3628 = !DILocation(line: 1812, column: 49, scope: !3588)
!3629 = !DILocation(line: 1812, column: 9, scope: !3588)
!3630 = !DILocation(line: 1812, column: 23, scope: !3588)
!3631 = !DILocation(line: 1812, column: 47, scope: !3588)
!3632 = !DILocation(line: 1813, column: 13, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3588, file: !1801, line: 1813, column: 13)
!3634 = !DILocation(line: 1813, column: 16, scope: !3633)
!3635 = !DILocation(line: 1813, column: 13, scope: !3588)
!3636 = !DILocation(line: 1814, column: 59, scope: !3633)
!3637 = !DILocation(line: 1814, column: 62, scope: !3633)
!3638 = !DILocation(line: 1814, column: 43, scope: !3633)
!3639 = !DILocation(line: 1814, column: 13, scope: !3633)
!3640 = !DILocation(line: 1814, column: 27, scope: !3633)
!3641 = !DILocation(line: 1814, column: 41, scope: !3633)
!3642 = !DILocation(line: 1816, column: 13, scope: !3633)
!3643 = !DILocation(line: 1816, column: 27, scope: !3633)
!3644 = !DILocation(line: 1816, column: 41, scope: !3633)
!3645 = !DILocation(line: 1817, column: 5, scope: !3588)
!3646 = !DILocation(line: 1818, column: 9, scope: !3583)
!3647 = !DILocation(line: 1820, column: 6, scope: !2367)
!3648 = !DILocation(line: 1820, column: 20, scope: !2367)
!3649 = !DILocation(line: 1822, column: 10, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !2367, file: !1801, line: 1822, column: 9)
!3651 = !DILocation(line: 1822, column: 13, scope: !3650)
!3652 = !DILocation(line: 1822, column: 9, scope: !2367)
!3653 = !DILocation(line: 1823, column: 18, scope: !3650)
!3654 = !DILocation(line: 1823, column: 36, scope: !3650)
!3655 = !DILocation(line: 1823, column: 39, scope: !3650)
!3656 = !DILocation(line: 1823, column: 52, scope: !3650)
!3657 = !DILocation(line: 1823, column: 50, scope: !3650)
!3658 = !DILocation(line: 1823, column: 33, scope: !3650)
!3659 = !DILocation(line: 1823, column: 17, scope: !3650)
!3660 = !DILocation(line: 1823, column: 61, scope: !3661)
!3661 = !DILexicalBlockFile(scope: !3650, file: !1801, discriminator: 1)
!3662 = !DILocation(line: 1823, column: 64, scope: !3661)
!3663 = !DILocation(line: 1823, column: 77, scope: !3661)
!3664 = !DILocation(line: 1823, column: 75, scope: !3661)
!3665 = !DILocation(line: 1823, column: 17, scope: !3661)
!3666 = !DILocation(line: 1823, column: 86, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !3650, file: !1801, discriminator: 2)
!3668 = !DILocation(line: 1823, column: 17, scope: !3667)
!3669 = !DILocation(line: 1823, column: 17, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3650, file: !1801, discriminator: 3)
!3671 = !DILocation(line: 1823, column: 9, scope: !3670)
!3672 = !DILocation(line: 1825, column: 14, scope: !2367)
!3673 = !DILocation(line: 1825, column: 32, scope: !2367)
!3674 = !DILocation(line: 1825, column: 35, scope: !2367)
!3675 = !DILocation(line: 1825, column: 53, scope: !2367)
!3676 = !DILocation(line: 1825, column: 51, scope: !2367)
!3677 = !DILocation(line: 1825, column: 29, scope: !2367)
!3678 = !DILocation(line: 1825, column: 13, scope: !2367)
!3679 = !DILocation(line: 1825, column: 62, scope: !3531)
!3680 = !DILocation(line: 1825, column: 65, scope: !3531)
!3681 = !DILocation(line: 1825, column: 83, scope: !3531)
!3682 = !DILocation(line: 1825, column: 81, scope: !3531)
!3683 = !DILocation(line: 1825, column: 13, scope: !3531)
!3684 = !DILocation(line: 1825, column: 92, scope: !3685)
!3685 = !DILexicalBlockFile(scope: !2367, file: !1801, discriminator: 2)
!3686 = !DILocation(line: 1825, column: 13, scope: !3685)
!3687 = !DILocation(line: 1825, column: 13, scope: !3688)
!3688 = !DILexicalBlockFile(scope: !2367, file: !1801, discriminator: 3)
!3689 = !DILocation(line: 1825, column: 5, scope: !3688)
!3690 = !DILocation(line: 1826, column: 1, scope: !2367)
!3691 = distinct !DISubprogram(name: "ac3_decode_end", scope: !1801, file: !1801, line: 1831, type: !1169, isLocal: true, isDefinition: true, scopeLine: 1832, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!3692 = !DILocalVariable(name: "avctx", arg: 1, scope: !3691, file: !1801, line: 1831, type: !1171)
!3693 = !DILocation(line: 1831, column: 65, scope: !3691)
!3694 = !DILocalVariable(name: "s", scope: !3691, file: !1801, line: 1833, type: !1857)
!3695 = !DILocation(line: 1833, column: 23, scope: !3691)
!3696 = !DILocation(line: 1833, column: 27, scope: !3691)
!3697 = !DILocation(line: 1833, column: 34, scope: !3691)
!3698 = !DILocation(line: 1834, column: 18, scope: !3691)
!3699 = !DILocation(line: 1834, column: 21, scope: !3691)
!3700 = !DILocation(line: 1834, column: 5, scope: !3691)
!3701 = !DILocation(line: 1835, column: 18, scope: !3691)
!3702 = !DILocation(line: 1835, column: 21, scope: !3691)
!3703 = !DILocation(line: 1835, column: 5, scope: !3691)
!3704 = !DILocation(line: 1836, column: 15, scope: !3691)
!3705 = !DILocation(line: 1836, column: 18, scope: !3691)
!3706 = !DILocation(line: 1836, column: 14, scope: !3691)
!3707 = !DILocation(line: 1836, column: 5, scope: !3691)
!3708 = !DILocation(line: 1837, column: 15, scope: !3691)
!3709 = !DILocation(line: 1837, column: 18, scope: !3691)
!3710 = !DILocation(line: 1837, column: 14, scope: !3691)
!3711 = !DILocation(line: 1837, column: 5, scope: !3691)
!3712 = !DILocation(line: 1839, column: 5, scope: !3691)
!3713 = distinct !DISubprogram(name: "ac3_tables_init", scope: !1801, file: !1801, line: 123, type: !3714, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{null}
!3716 = !DILocalVariable(name: "i", scope: !3713, file: !1801, line: 125, type: !1015)
!3717 = !DILocation(line: 125, column: 9, scope: !3713)
!3718 = !DILocation(line: 129, column: 12, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 129, column: 5)
!3720 = !DILocation(line: 129, column: 10, scope: !3719)
!3721 = !DILocation(line: 129, column: 17, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !3723, file: !1801, discriminator: 1)
!3723 = distinct !DILexicalBlock(scope: !3719, file: !1801, line: 129, column: 5)
!3724 = !DILocation(line: 129, column: 19, scope: !3722)
!3725 = !DILocation(line: 129, column: 5, scope: !3722)
!3726 = !DILocation(line: 130, column: 41, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3723, file: !1801, line: 129, column: 31)
!3728 = !DILocation(line: 130, column: 43, scope: !3727)
!3729 = !DILocation(line: 130, column: 33, scope: !3727)
!3730 = !DILocation(line: 130, column: 9, scope: !3727)
!3731 = !DILocation(line: 130, column: 39, scope: !3727)
!3732 = !DILocation(line: 131, column: 42, scope: !3727)
!3733 = !DILocation(line: 131, column: 44, scope: !3727)
!3734 = !DILocation(line: 131, column: 50, scope: !3727)
!3735 = !DILocation(line: 131, column: 41, scope: !3727)
!3736 = !DILocation(line: 131, column: 33, scope: !3727)
!3737 = !DILocation(line: 131, column: 9, scope: !3727)
!3738 = !DILocation(line: 131, column: 39, scope: !3727)
!3739 = !DILocation(line: 132, column: 42, scope: !3727)
!3740 = !DILocation(line: 132, column: 44, scope: !3727)
!3741 = !DILocation(line: 132, column: 50, scope: !3727)
!3742 = !DILocation(line: 132, column: 41, scope: !3727)
!3743 = !DILocation(line: 132, column: 33, scope: !3727)
!3744 = !DILocation(line: 132, column: 9, scope: !3727)
!3745 = !DILocation(line: 132, column: 39, scope: !3727)
!3746 = !DILocation(line: 133, column: 5, scope: !3727)
!3747 = !DILocation(line: 129, column: 27, scope: !3748)
!3748 = !DILexicalBlockFile(scope: !3723, file: !1801, discriminator: 2)
!3749 = !DILocation(line: 129, column: 5, scope: !3748)
!3750 = distinct !{!3750, !3751}
!3751 = !DILocation(line: 129, column: 5, scope: !3713)
!3752 = !DILocation(line: 137, column: 12, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 137, column: 5)
!3754 = !DILocation(line: 137, column: 10, scope: !3753)
!3755 = !DILocation(line: 137, column: 17, scope: !3756)
!3756 = !DILexicalBlockFile(scope: !3757, file: !1801, discriminator: 1)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !1801, line: 137, column: 5)
!3758 = !DILocation(line: 137, column: 19, scope: !3756)
!3759 = !DILocation(line: 137, column: 5, scope: !3756)
!3760 = !DILocation(line: 139, column: 79, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !1801, line: 137, column: 30)
!3762 = !DILocation(line: 139, column: 48, scope: !3761)
!3763 = !DILocation(line: 139, column: 30, scope: !3761)
!3764 = !DILocation(line: 139, column: 22, scope: !3761)
!3765 = !DILocation(line: 139, column: 9, scope: !3761)
!3766 = !DILocation(line: 139, column: 28, scope: !3761)
!3767 = !DILocation(line: 140, column: 79, scope: !3761)
!3768 = !DILocation(line: 140, column: 48, scope: !3761)
!3769 = !DILocation(line: 140, column: 30, scope: !3761)
!3770 = !DILocation(line: 140, column: 22, scope: !3761)
!3771 = !DILocation(line: 140, column: 9, scope: !3761)
!3772 = !DILocation(line: 140, column: 28, scope: !3761)
!3773 = !DILocation(line: 141, column: 79, scope: !3761)
!3774 = !DILocation(line: 141, column: 48, scope: !3761)
!3775 = !DILocation(line: 141, column: 30, scope: !3761)
!3776 = !DILocation(line: 141, column: 22, scope: !3761)
!3777 = !DILocation(line: 141, column: 9, scope: !3761)
!3778 = !DILocation(line: 141, column: 28, scope: !3761)
!3779 = !DILocation(line: 142, column: 5, scope: !3761)
!3780 = !DILocation(line: 137, column: 26, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3757, file: !1801, discriminator: 2)
!3782 = !DILocation(line: 137, column: 5, scope: !3781)
!3783 = distinct !{!3783, !3784}
!3784 = !DILocation(line: 137, column: 5, scope: !3713)
!3785 = !DILocation(line: 143, column: 12, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 143, column: 5)
!3787 = !DILocation(line: 143, column: 10, scope: !3786)
!3788 = !DILocation(line: 143, column: 17, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3790, file: !1801, discriminator: 1)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !1801, line: 143, column: 5)
!3791 = !DILocation(line: 143, column: 19, scope: !3789)
!3792 = !DILocation(line: 143, column: 5, scope: !3789)
!3793 = !DILocation(line: 145, column: 72, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !1801, line: 143, column: 31)
!3795 = !DILocation(line: 145, column: 48, scope: !3794)
!3796 = !DILocation(line: 145, column: 30, scope: !3794)
!3797 = !DILocation(line: 145, column: 22, scope: !3794)
!3798 = !DILocation(line: 145, column: 9, scope: !3794)
!3799 = !DILocation(line: 145, column: 28, scope: !3794)
!3800 = !DILocation(line: 146, column: 72, scope: !3794)
!3801 = !DILocation(line: 146, column: 48, scope: !3794)
!3802 = !DILocation(line: 146, column: 30, scope: !3794)
!3803 = !DILocation(line: 146, column: 22, scope: !3794)
!3804 = !DILocation(line: 146, column: 9, scope: !3794)
!3805 = !DILocation(line: 146, column: 28, scope: !3794)
!3806 = !DILocation(line: 147, column: 72, scope: !3794)
!3807 = !DILocation(line: 147, column: 48, scope: !3794)
!3808 = !DILocation(line: 147, column: 30, scope: !3794)
!3809 = !DILocation(line: 147, column: 22, scope: !3794)
!3810 = !DILocation(line: 147, column: 9, scope: !3794)
!3811 = !DILocation(line: 147, column: 28, scope: !3794)
!3812 = !DILocation(line: 150, column: 48, scope: !3794)
!3813 = !DILocation(line: 150, column: 50, scope: !3794)
!3814 = !DILocation(line: 150, column: 30, scope: !3794)
!3815 = !DILocation(line: 150, column: 22, scope: !3794)
!3816 = !DILocation(line: 150, column: 9, scope: !3794)
!3817 = !DILocation(line: 150, column: 28, scope: !3794)
!3818 = !DILocation(line: 151, column: 48, scope: !3794)
!3819 = !DILocation(line: 151, column: 50, scope: !3794)
!3820 = !DILocation(line: 151, column: 30, scope: !3794)
!3821 = !DILocation(line: 151, column: 22, scope: !3794)
!3822 = !DILocation(line: 151, column: 9, scope: !3794)
!3823 = !DILocation(line: 151, column: 28, scope: !3794)
!3824 = !DILocation(line: 152, column: 5, scope: !3794)
!3825 = !DILocation(line: 143, column: 27, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !3790, file: !1801, discriminator: 2)
!3827 = !DILocation(line: 143, column: 5, scope: !3826)
!3828 = distinct !{!3828, !3829}
!3829 = !DILocation(line: 143, column: 5, scope: !3713)
!3830 = !DILocation(line: 155, column: 12, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 155, column: 5)
!3832 = !DILocation(line: 155, column: 10, scope: !3831)
!3833 = !DILocation(line: 155, column: 17, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3835, file: !1801, discriminator: 1)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !1801, line: 155, column: 5)
!3836 = !DILocation(line: 155, column: 19, scope: !3834)
!3837 = !DILocation(line: 155, column: 5, scope: !3834)
!3838 = !DILocation(line: 157, column: 45, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !1801, line: 155, column: 29)
!3840 = !DILocation(line: 157, column: 27, scope: !3839)
!3841 = !DILocation(line: 157, column: 22, scope: !3839)
!3842 = !DILocation(line: 157, column: 9, scope: !3839)
!3843 = !DILocation(line: 157, column: 25, scope: !3839)
!3844 = !DILocation(line: 158, column: 5, scope: !3839)
!3845 = !DILocation(line: 155, column: 25, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3835, file: !1801, discriminator: 2)
!3847 = !DILocation(line: 155, column: 5, scope: !3846)
!3848 = distinct !{!3848, !3849}
!3849 = !DILocation(line: 155, column: 5, scope: !3713)
!3850 = !DILocation(line: 159, column: 12, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 159, column: 5)
!3852 = !DILocation(line: 159, column: 10, scope: !3851)
!3853 = !DILocation(line: 159, column: 17, scope: !3854)
!3854 = !DILexicalBlockFile(scope: !3855, file: !1801, discriminator: 1)
!3855 = distinct !DILexicalBlock(scope: !3851, file: !1801, line: 159, column: 5)
!3856 = !DILocation(line: 159, column: 19, scope: !3854)
!3857 = !DILocation(line: 159, column: 5, scope: !3854)
!3858 = !DILocation(line: 161, column: 45, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3855, file: !1801, line: 159, column: 30)
!3860 = !DILocation(line: 161, column: 27, scope: !3859)
!3861 = !DILocation(line: 161, column: 22, scope: !3859)
!3862 = !DILocation(line: 161, column: 9, scope: !3859)
!3863 = !DILocation(line: 161, column: 25, scope: !3859)
!3864 = !DILocation(line: 162, column: 5, scope: !3859)
!3865 = !DILocation(line: 159, column: 26, scope: !3866)
!3866 = !DILexicalBlockFile(scope: !3855, file: !1801, discriminator: 2)
!3867 = !DILocation(line: 159, column: 5, scope: !3866)
!3868 = distinct !{!3868, !3869}
!3869 = !DILocation(line: 159, column: 5, scope: !3713)
!3870 = !DILocation(line: 167, column: 12, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 167, column: 5)
!3872 = !DILocation(line: 167, column: 10, scope: !3871)
!3873 = !DILocation(line: 167, column: 17, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !3875, file: !1801, discriminator: 1)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !1801, line: 167, column: 5)
!3876 = !DILocation(line: 167, column: 19, scope: !3874)
!3877 = !DILocation(line: 167, column: 5, scope: !3874)
!3878 = !DILocalVariable(name: "v", scope: !3879, file: !1801, line: 168, type: !1015)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !1801, line: 167, column: 31)
!3880 = !DILocation(line: 168, column: 13, scope: !3879)
!3881 = !DILocation(line: 168, column: 18, scope: !3879)
!3882 = !DILocation(line: 168, column: 20, scope: !3879)
!3883 = !DILocation(line: 168, column: 30, scope: !3879)
!3884 = !DILocation(line: 168, column: 32, scope: !3879)
!3885 = !DILocation(line: 168, column: 38, scope: !3879)
!3886 = !DILocation(line: 168, column: 26, scope: !3879)
!3887 = !DILocation(line: 168, column: 44, scope: !3879)
!3888 = !DILocation(line: 169, column: 43, scope: !3879)
!3889 = !DILocation(line: 169, column: 32, scope: !3879)
!3890 = !DILocation(line: 169, column: 50, scope: !3879)
!3891 = !DILocation(line: 169, column: 52, scope: !3879)
!3892 = !DILocation(line: 169, column: 60, scope: !3879)
!3893 = !DILocation(line: 169, column: 48, scope: !3879)
!3894 = !DILocation(line: 169, column: 46, scope: !3879)
!3895 = !DILocation(line: 169, column: 27, scope: !3879)
!3896 = !DILocation(line: 169, column: 9, scope: !3879)
!3897 = !DILocation(line: 169, column: 30, scope: !3879)
!3898 = !DILocation(line: 170, column: 5, scope: !3879)
!3899 = !DILocation(line: 167, column: 27, scope: !3900)
!3900 = !DILexicalBlockFile(scope: !3875, file: !1801, discriminator: 2)
!3901 = !DILocation(line: 167, column: 5, scope: !3900)
!3902 = distinct !{!3902, !3903}
!3903 = !DILocation(line: 167, column: 5, scope: !3713)
!3904 = !DILocation(line: 174, column: 12, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3713, file: !1801, line: 174, column: 5)
!3906 = !DILocation(line: 174, column: 10, scope: !3905)
!3907 = !DILocation(line: 174, column: 17, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3909, file: !1801, discriminator: 1)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !1801, line: 174, column: 5)
!3910 = !DILocation(line: 174, column: 19, scope: !3908)
!3911 = !DILocation(line: 174, column: 5, scope: !3908)
!3912 = !DILocalVariable(name: "v", scope: !3913, file: !1801, line: 175, type: !1015)
!3913 = distinct !DILexicalBlock(scope: !3909, file: !1801, line: 174, column: 31)
!3914 = !DILocation(line: 175, column: 13, scope: !3913)
!3915 = !DILocation(line: 175, column: 18, scope: !3913)
!3916 = !DILocation(line: 175, column: 20, scope: !3913)
!3917 = !DILocation(line: 175, column: 30, scope: !3913)
!3918 = !DILocation(line: 175, column: 32, scope: !3913)
!3919 = !DILocation(line: 175, column: 38, scope: !3913)
!3920 = !DILocation(line: 175, column: 26, scope: !3913)
!3921 = !DILocation(line: 175, column: 44, scope: !3913)
!3922 = !DILocation(line: 176, column: 56, scope: !3913)
!3923 = !DILocation(line: 176, column: 45, scope: !3913)
!3924 = !DILocation(line: 176, column: 63, scope: !3913)
!3925 = !DILocation(line: 176, column: 65, scope: !3913)
!3926 = !DILocation(line: 176, column: 72, scope: !3913)
!3927 = !DILocation(line: 176, column: 61, scope: !3913)
!3928 = !DILocation(line: 176, column: 59, scope: !3913)
!3929 = !DILocation(line: 176, column: 40, scope: !3913)
!3930 = !DILocation(line: 176, column: 9, scope: !3913)
!3931 = !DILocation(line: 176, column: 43, scope: !3913)
!3932 = !DILocation(line: 177, column: 5, scope: !3913)
!3933 = !DILocation(line: 174, column: 27, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3909, file: !1801, discriminator: 2)
!3935 = !DILocation(line: 174, column: 5, scope: !3934)
!3936 = distinct !{!3936, !3937}
!3937 = !DILocation(line: 174, column: 5, scope: !3713)
!3938 = !DILocation(line: 179, column: 1, scope: !3713)
!3939 = distinct !DISubprogram(name: "symmetric_dequant", scope: !1801, file: !1801, line: 115, type: !3940, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!1015, !1015, !1015}
!3942 = !DILocalVariable(name: "code", arg: 1, scope: !3939, file: !1801, line: 115, type: !1015)
!3943 = !DILocation(line: 115, column: 23, scope: !3939)
!3944 = !DILocalVariable(name: "levels", arg: 2, scope: !3939, file: !1801, line: 115, type: !1015)
!3945 = !DILocation(line: 115, column: 33, scope: !3939)
!3946 = !DILocation(line: 117, column: 14, scope: !3939)
!3947 = !DILocation(line: 117, column: 22, scope: !3939)
!3948 = !DILocation(line: 117, column: 29, scope: !3939)
!3949 = !DILocation(line: 117, column: 19, scope: !3939)
!3950 = !DILocation(line: 117, column: 36, scope: !3939)
!3951 = !DILocation(line: 117, column: 51, scope: !3939)
!3952 = !DILocation(line: 117, column: 49, scope: !3939)
!3953 = !DILocation(line: 117, column: 5, scope: !3939)
!3954 = distinct !DISubprogram(name: "init_get_bits8", scope: !1867, file: !1867, line: 650, type: !3955, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!1015, !3957, !1610, !1015}
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64, align: 64)
!3958 = !DILocalVariable(name: "s", arg: 1, scope: !3954, file: !1867, line: 650, type: !3957)
!3959 = !DILocation(line: 650, column: 49, scope: !3954)
!3960 = !DILocalVariable(name: "buffer", arg: 2, scope: !3954, file: !1867, line: 650, type: !1610)
!3961 = !DILocation(line: 650, column: 67, scope: !3954)
!3962 = !DILocalVariable(name: "byte_size", arg: 3, scope: !3954, file: !1867, line: 651, type: !1015)
!3963 = !DILocation(line: 651, column: 38, scope: !3954)
!3964 = !DILocation(line: 653, column: 9, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3954, file: !1867, line: 653, column: 9)
!3966 = !DILocation(line: 653, column: 19, scope: !3965)
!3967 = !DILocation(line: 653, column: 36, scope: !3965)
!3968 = !DILocation(line: 653, column: 39, scope: !3969)
!3969 = !DILexicalBlockFile(scope: !3965, file: !1867, discriminator: 1)
!3970 = !DILocation(line: 653, column: 49, scope: !3969)
!3971 = !DILocation(line: 653, column: 9, scope: !3969)
!3972 = !DILocation(line: 654, column: 19, scope: !3965)
!3973 = !DILocation(line: 654, column: 9, scope: !3965)
!3974 = !DILocation(line: 655, column: 26, scope: !3954)
!3975 = !DILocation(line: 655, column: 29, scope: !3954)
!3976 = !DILocation(line: 655, column: 37, scope: !3954)
!3977 = !DILocation(line: 655, column: 47, scope: !3954)
!3978 = !DILocation(line: 655, column: 12, scope: !3954)
!3979 = !DILocation(line: 655, column: 5, scope: !3954)
!3980 = distinct !DISubprogram(name: "parse_frame_header", scope: !1801, file: !1801, line: 298, type: !3981, isLocal: true, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!1015, !1857}
!3983 = !DILocalVariable(name: "s", arg: 1, scope: !3980, file: !1801, line: 298, type: !1857)
!3984 = !DILocation(line: 298, column: 49, scope: !3980)
!3985 = !DILocalVariable(name: "hdr", scope: !3980, file: !1801, line: 300, type: !3104)
!3986 = !DILocation(line: 300, column: 19, scope: !3980)
!3987 = !DILocalVariable(name: "err", scope: !3980, file: !1801, line: 301, type: !1015)
!3988 = !DILocation(line: 301, column: 9, scope: !3980)
!3989 = !DILocation(line: 303, column: 32, scope: !3980)
!3990 = !DILocation(line: 303, column: 35, scope: !3980)
!3991 = !DILocation(line: 303, column: 11, scope: !3980)
!3992 = !DILocation(line: 303, column: 9, scope: !3980)
!3993 = !DILocation(line: 304, column: 9, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3980, file: !1801, line: 304, column: 9)
!3995 = !DILocation(line: 304, column: 9, scope: !3980)
!3996 = !DILocation(line: 305, column: 16, scope: !3994)
!3997 = !DILocation(line: 305, column: 9, scope: !3994)
!3998 = !DILocation(line: 308, column: 39, scope: !3980)
!3999 = !DILocation(line: 308, column: 35, scope: !3980)
!4000 = !DILocation(line: 308, column: 5, scope: !3980)
!4001 = !DILocation(line: 308, column: 8, scope: !3980)
!4002 = !DILocation(line: 308, column: 25, scope: !3980)
!4003 = !DILocation(line: 308, column: 33, scope: !3980)
!4004 = !DILocation(line: 309, column: 27, scope: !3980)
!4005 = !DILocation(line: 309, column: 23, scope: !3980)
!4006 = !DILocation(line: 309, column: 5, scope: !3980)
!4007 = !DILocation(line: 309, column: 8, scope: !3980)
!4008 = !DILocation(line: 309, column: 21, scope: !3980)
!4009 = !DILocation(line: 310, column: 29, scope: !3980)
!4010 = !DILocation(line: 310, column: 25, scope: !3980)
!4011 = !DILocation(line: 310, column: 5, scope: !3980)
!4012 = !DILocation(line: 310, column: 8, scope: !3980)
!4013 = !DILocation(line: 310, column: 23, scope: !3980)
!4014 = !DILocation(line: 311, column: 27, scope: !3980)
!4015 = !DILocation(line: 311, column: 23, scope: !3980)
!4016 = !DILocation(line: 311, column: 5, scope: !3980)
!4017 = !DILocation(line: 311, column: 8, scope: !3980)
!4018 = !DILocation(line: 311, column: 21, scope: !3980)
!4019 = !DILocation(line: 312, column: 21, scope: !3980)
!4020 = !DILocation(line: 312, column: 17, scope: !3980)
!4021 = !DILocation(line: 312, column: 5, scope: !3980)
!4022 = !DILocation(line: 312, column: 8, scope: !3980)
!4023 = !DILocation(line: 312, column: 15, scope: !3980)
!4024 = !DILocation(line: 313, column: 40, scope: !3980)
!4025 = !DILocation(line: 313, column: 36, scope: !3980)
!4026 = !DILocation(line: 313, column: 5, scope: !3980)
!4027 = !DILocation(line: 313, column: 8, scope: !3980)
!4028 = !DILocation(line: 313, column: 25, scope: !3980)
!4029 = !DILocation(line: 313, column: 34, scope: !3980)
!4030 = !DILocation(line: 314, column: 26, scope: !3980)
!4031 = !DILocation(line: 314, column: 22, scope: !3980)
!4032 = !DILocation(line: 314, column: 5, scope: !3980)
!4033 = !DILocation(line: 314, column: 8, scope: !3980)
!4034 = !DILocation(line: 314, column: 20, scope: !3980)
!4035 = !DILocation(line: 315, column: 23, scope: !3980)
!4036 = !DILocation(line: 315, column: 5, scope: !3980)
!4037 = !DILocation(line: 315, column: 8, scope: !3980)
!4038 = !DILocation(line: 315, column: 17, scope: !3980)
!4039 = !DILocation(line: 316, column: 23, scope: !3980)
!4040 = !DILocation(line: 316, column: 19, scope: !3980)
!4041 = !DILocation(line: 316, column: 5, scope: !3980)
!4042 = !DILocation(line: 316, column: 8, scope: !3980)
!4043 = !DILocation(line: 316, column: 17, scope: !3980)
!4044 = !DILocation(line: 317, column: 23, scope: !3980)
!4045 = !DILocation(line: 317, column: 26, scope: !3980)
!4046 = !DILocation(line: 317, column: 37, scope: !3980)
!4047 = !DILocation(line: 317, column: 40, scope: !3980)
!4048 = !DILocation(line: 317, column: 35, scope: !3980)
!4049 = !DILocation(line: 317, column: 5, scope: !3980)
!4050 = !DILocation(line: 317, column: 8, scope: !3980)
!4051 = !DILocation(line: 317, column: 21, scope: !3980)
!4052 = !DILocation(line: 318, column: 17, scope: !3980)
!4053 = !DILocation(line: 318, column: 20, scope: !3980)
!4054 = !DILocation(line: 318, column: 33, scope: !3980)
!4055 = !DILocation(line: 318, column: 5, scope: !3980)
!4056 = !DILocation(line: 318, column: 8, scope: !3980)
!4057 = !DILocation(line: 318, column: 15, scope: !3980)
!4058 = !DILocation(line: 319, column: 25, scope: !3980)
!4059 = !DILocation(line: 319, column: 21, scope: !3980)
!4060 = !DILocation(line: 319, column: 5, scope: !3980)
!4061 = !DILocation(line: 319, column: 8, scope: !3980)
!4062 = !DILocation(line: 319, column: 19, scope: !3980)
!4063 = !DILocation(line: 320, column: 31, scope: !3980)
!4064 = !DILocation(line: 320, column: 27, scope: !3980)
!4065 = !DILocation(line: 320, column: 5, scope: !3980)
!4066 = !DILocation(line: 320, column: 8, scope: !3980)
!4067 = !DILocation(line: 320, column: 24, scope: !3980)
!4068 = !DILocation(line: 321, column: 5, scope: !3980)
!4069 = !DILocation(line: 321, column: 8, scope: !3980)
!4070 = !DILocation(line: 321, column: 26, scope: !3980)
!4071 = !DILocation(line: 322, column: 31, scope: !3980)
!4072 = !DILocation(line: 322, column: 5, scope: !3980)
!4073 = !DILocation(line: 322, column: 8, scope: !3980)
!4074 = !DILocation(line: 322, column: 25, scope: !3980)
!4075 = !DILocation(line: 323, column: 5, scope: !3980)
!4076 = !DILocation(line: 323, column: 8, scope: !3980)
!4077 = !DILocation(line: 323, column: 30, scope: !3980)
!4078 = !DILocation(line: 324, column: 33, scope: !3980)
!4079 = !DILocation(line: 324, column: 5, scope: !3980)
!4080 = !DILocation(line: 324, column: 8, scope: !3980)
!4081 = !DILocation(line: 324, column: 27, scope: !3980)
!4082 = !DILocation(line: 325, column: 5, scope: !3980)
!4083 = !DILocation(line: 325, column: 8, scope: !3980)
!4084 = !DILocation(line: 325, column: 32, scope: !3980)
!4085 = !DILocation(line: 326, column: 5, scope: !3980)
!4086 = !DILocation(line: 326, column: 8, scope: !3980)
!4087 = !DILocation(line: 326, column: 29, scope: !3980)
!4088 = !DILocation(line: 327, column: 25, scope: !3980)
!4089 = !DILocation(line: 327, column: 5, scope: !3980)
!4090 = !DILocation(line: 327, column: 8, scope: !3980)
!4091 = !DILocation(line: 327, column: 19, scope: !3980)
!4092 = !DILocation(line: 328, column: 25, scope: !3980)
!4093 = !DILocation(line: 328, column: 21, scope: !3980)
!4094 = !DILocation(line: 328, column: 5, scope: !3980)
!4095 = !DILocation(line: 328, column: 8, scope: !3980)
!4096 = !DILocation(line: 328, column: 19, scope: !3980)
!4097 = !DILocation(line: 329, column: 26, scope: !3980)
!4098 = !DILocation(line: 329, column: 5, scope: !3980)
!4099 = !DILocation(line: 329, column: 8, scope: !3980)
!4100 = !DILocation(line: 329, column: 20, scope: !3980)
!4101 = !DILocation(line: 330, column: 34, scope: !3980)
!4102 = !DILocation(line: 330, column: 5, scope: !3980)
!4103 = !DILocation(line: 330, column: 8, scope: !3980)
!4104 = !DILocation(line: 330, column: 28, scope: !3980)
!4105 = !DILocation(line: 331, column: 5, scope: !3980)
!4106 = !DILocation(line: 331, column: 8, scope: !3980)
!4107 = !DILocation(line: 331, column: 31, scope: !3980)
!4108 = !DILocation(line: 332, column: 5, scope: !3980)
!4109 = !DILocation(line: 332, column: 8, scope: !3980)
!4110 = !DILocation(line: 332, column: 29, scope: !3980)
!4111 = !DILocation(line: 334, column: 9, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !3980, file: !1801, line: 334, column: 9)
!4113 = !DILocation(line: 334, column: 12, scope: !4112)
!4114 = !DILocation(line: 334, column: 9, scope: !3980)
!4115 = !DILocation(line: 335, column: 23, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4112, file: !1801, line: 334, column: 20)
!4117 = !DILocation(line: 335, column: 26, scope: !4116)
!4118 = !DILocation(line: 335, column: 9, scope: !4116)
!4119 = !DILocation(line: 335, column: 12, scope: !4116)
!4120 = !DILocation(line: 335, column: 34, scope: !4116)
!4121 = !DILocation(line: 336, column: 21, scope: !4116)
!4122 = !DILocation(line: 336, column: 24, scope: !4116)
!4123 = !DILocation(line: 336, column: 9, scope: !4116)
!4124 = !DILocation(line: 336, column: 12, scope: !4116)
!4125 = !DILocation(line: 336, column: 32, scope: !4116)
!4126 = !DILocation(line: 337, column: 27, scope: !4116)
!4127 = !DILocation(line: 337, column: 30, scope: !4116)
!4128 = !DILocation(line: 337, column: 9, scope: !4116)
!4129 = !DILocation(line: 337, column: 12, scope: !4116)
!4130 = !DILocation(line: 337, column: 38, scope: !4116)
!4131 = !DILocation(line: 338, column: 27, scope: !4116)
!4132 = !DILocation(line: 338, column: 30, scope: !4116)
!4133 = !DILocation(line: 338, column: 9, scope: !4116)
!4134 = !DILocation(line: 338, column: 12, scope: !4116)
!4135 = !DILocation(line: 338, column: 38, scope: !4116)
!4136 = !DILocation(line: 339, column: 5, scope: !4116)
!4137 = !DILocation(line: 341, column: 9, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !3980, file: !1801, line: 341, column: 9)
!4139 = !DILocation(line: 341, column: 12, scope: !4138)
!4140 = !DILocation(line: 341, column: 25, scope: !4138)
!4141 = !DILocation(line: 341, column: 9, scope: !3980)
!4142 = !DILocation(line: 342, column: 9, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4138, file: !1801, line: 341, column: 32)
!4144 = !DILocation(line: 342, column: 12, scope: !4143)
!4145 = !DILocation(line: 342, column: 17, scope: !4143)
!4146 = !DILocation(line: 343, column: 9, scope: !4143)
!4147 = !DILocation(line: 343, column: 12, scope: !4143)
!4148 = !DILocation(line: 343, column: 32, scope: !4143)
!4149 = !DILocation(line: 344, column: 9, scope: !4143)
!4150 = !DILocation(line: 344, column: 12, scope: !4143)
!4151 = !DILocation(line: 344, column: 32, scope: !4143)
!4152 = !DILocation(line: 345, column: 9, scope: !4143)
!4153 = !DILocation(line: 345, column: 12, scope: !4143)
!4154 = !DILocation(line: 345, column: 31, scope: !4143)
!4155 = !DILocation(line: 346, column: 9, scope: !4143)
!4156 = !DILocation(line: 346, column: 12, scope: !4143)
!4157 = !DILocation(line: 346, column: 34, scope: !4143)
!4158 = !DILocation(line: 347, column: 9, scope: !4143)
!4159 = !DILocation(line: 347, column: 12, scope: !4143)
!4160 = !DILocation(line: 347, column: 29, scope: !4143)
!4161 = !DILocation(line: 348, column: 9, scope: !4143)
!4162 = !DILocation(line: 348, column: 12, scope: !4143)
!4163 = !DILocation(line: 348, column: 27, scope: !4143)
!4164 = !DILocation(line: 349, column: 9, scope: !4143)
!4165 = !DILocation(line: 349, column: 12, scope: !4143)
!4166 = !DILocation(line: 349, column: 23, scope: !4143)
!4167 = !DILocation(line: 350, column: 9, scope: !4143)
!4168 = !DILocation(line: 350, column: 12, scope: !4143)
!4169 = !DILocation(line: 350, column: 24, scope: !4143)
!4170 = !DILocation(line: 351, column: 16, scope: !4143)
!4171 = !DILocation(line: 351, column: 19, scope: !4143)
!4172 = !DILocation(line: 351, column: 9, scope: !4143)
!4173 = !DILocation(line: 352, column: 33, scope: !4143)
!4174 = !DILocation(line: 352, column: 16, scope: !4143)
!4175 = !DILocation(line: 352, column: 9, scope: !4143)
!4176 = !DILocation(line: 354, column: 9, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !1801, line: 353, column: 19)
!4178 = distinct !DILexicalBlock(scope: !4138, file: !1801, line: 353, column: 16)
!4179 = !DILocation(line: 354, column: 12, scope: !4177)
!4180 = !DILocation(line: 354, column: 17, scope: !4177)
!4181 = !DILocation(line: 355, column: 37, scope: !4177)
!4182 = !DILocation(line: 355, column: 16, scope: !4177)
!4183 = !DILocation(line: 355, column: 9, scope: !4177)
!4184 = !DILocation(line: 360, column: 1, scope: !3980)
!4185 = distinct !DISubprogram(name: "set_downmix_coeffs", scope: !1801, file: !1801, line: 366, type: !3981, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!4186 = !DILocalVariable(name: "s", arg: 1, scope: !4185, file: !1801, line: 366, type: !1857)
!4187 = !DILocation(line: 366, column: 49, scope: !4185)
!4188 = !DILocalVariable(name: "i", scope: !4185, file: !1801, line: 368, type: !1015)
!4189 = !DILocation(line: 368, column: 9, scope: !4185)
!4190 = !DILocalVariable(name: "cmix", scope: !4185, file: !1801, line: 369, type: !1032)
!4191 = !DILocation(line: 369, column: 11, scope: !4185)
!4192 = !DILocation(line: 369, column: 30, scope: !4185)
!4193 = !DILocation(line: 369, column: 34, scope: !4185)
!4194 = !DILocation(line: 369, column: 18, scope: !4185)
!4195 = !DILocalVariable(name: "smix", scope: !4185, file: !1801, line: 370, type: !1032)
!4196 = !DILocation(line: 370, column: 11, scope: !4185)
!4197 = !DILocation(line: 370, column: 30, scope: !4185)
!4198 = !DILocation(line: 370, column: 33, scope: !4185)
!4199 = !DILocation(line: 370, column: 18, scope: !4185)
!4200 = !DILocalVariable(name: "norm0", scope: !4185, file: !1801, line: 371, type: !1032)
!4201 = !DILocation(line: 371, column: 11, scope: !4185)
!4202 = !DILocalVariable(name: "norm1", scope: !4185, file: !1801, line: 371, type: !1032)
!4203 = !DILocation(line: 371, column: 18, scope: !4185)
!4204 = !DILocalVariable(name: "downmix_coeffs", scope: !4185, file: !1801, line: 372, type: !4205)
!4205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 448, align: 32, elements: !4206)
!4206 = !{!1826, !1928}
!4207 = !DILocation(line: 372, column: 11, scope: !4185)
!4208 = !DILocation(line: 374, column: 10, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 374, column: 9)
!4210 = !DILocation(line: 374, column: 13, scope: !4209)
!4211 = !DILocation(line: 374, column: 9, scope: !4185)
!4212 = !DILocation(line: 375, column: 32, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !1801, line: 374, column: 32)
!4214 = !DILocation(line: 375, column: 9, scope: !4213)
!4215 = !DILocation(line: 375, column: 12, scope: !4213)
!4216 = !DILocation(line: 375, column: 30, scope: !4213)
!4217 = !DILocation(line: 377, column: 14, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !1801, line: 377, column: 13)
!4219 = !DILocation(line: 377, column: 17, scope: !4218)
!4220 = !DILocation(line: 377, column: 13, scope: !4213)
!4221 = !DILocation(line: 378, column: 13, scope: !4218)
!4222 = !DILocation(line: 379, column: 32, scope: !4213)
!4223 = !DILocation(line: 379, column: 35, scope: !4213)
!4224 = !DILocation(line: 379, column: 53, scope: !4213)
!4225 = !DILocation(line: 379, column: 9, scope: !4213)
!4226 = !DILocation(line: 379, column: 12, scope: !4213)
!4227 = !DILocation(line: 379, column: 30, scope: !4213)
!4228 = !DILocation(line: 380, column: 5, scope: !4213)
!4229 = !DILocation(line: 382, column: 12, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 382, column: 5)
!4231 = !DILocation(line: 382, column: 10, scope: !4230)
!4232 = !DILocation(line: 382, column: 17, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !4234, file: !1801, discriminator: 1)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !1801, line: 382, column: 5)
!4235 = !DILocation(line: 382, column: 21, scope: !4233)
!4236 = !DILocation(line: 382, column: 24, scope: !4233)
!4237 = !DILocation(line: 382, column: 19, scope: !4233)
!4238 = !DILocation(line: 382, column: 5, scope: !4233)
!4239 = !DILocation(line: 383, column: 80, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4234, file: !1801, line: 382, column: 43)
!4241 = !DILocation(line: 383, column: 44, scope: !4240)
!4242 = !DILocation(line: 383, column: 63, scope: !4240)
!4243 = !DILocation(line: 383, column: 66, scope: !4240)
!4244 = !DILocation(line: 383, column: 32, scope: !4240)
!4245 = !DILocation(line: 383, column: 27, scope: !4240)
!4246 = !DILocation(line: 383, column: 9, scope: !4240)
!4247 = !DILocation(line: 383, column: 30, scope: !4240)
!4248 = !DILocation(line: 384, column: 80, scope: !4240)
!4249 = !DILocation(line: 384, column: 44, scope: !4240)
!4250 = !DILocation(line: 384, column: 63, scope: !4240)
!4251 = !DILocation(line: 384, column: 66, scope: !4240)
!4252 = !DILocation(line: 384, column: 32, scope: !4240)
!4253 = !DILocation(line: 384, column: 27, scope: !4240)
!4254 = !DILocation(line: 384, column: 9, scope: !4240)
!4255 = !DILocation(line: 384, column: 30, scope: !4240)
!4256 = !DILocation(line: 385, column: 5, scope: !4240)
!4257 = !DILocation(line: 382, column: 39, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4234, file: !1801, discriminator: 2)
!4259 = !DILocation(line: 382, column: 5, scope: !4258)
!4260 = distinct !{!4260, !4261}
!4261 = !DILocation(line: 382, column: 5, scope: !4185)
!4262 = !DILocation(line: 386, column: 9, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 386, column: 9)
!4264 = !DILocation(line: 386, column: 12, scope: !4263)
!4265 = !DILocation(line: 386, column: 25, scope: !4263)
!4266 = !DILocation(line: 386, column: 29, scope: !4263)
!4267 = !DILocation(line: 386, column: 32, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !4263, file: !1801, discriminator: 1)
!4269 = !DILocation(line: 386, column: 35, scope: !4268)
!4270 = !DILocation(line: 386, column: 48, scope: !4268)
!4271 = !DILocation(line: 386, column: 9, scope: !4268)
!4272 = !DILocation(line: 387, column: 55, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4263, file: !1801, line: 386, column: 53)
!4274 = !DILocation(line: 387, column: 32, scope: !4273)
!4275 = !DILocation(line: 387, column: 53, scope: !4273)
!4276 = !DILocation(line: 387, column: 9, scope: !4273)
!4277 = !DILocation(line: 387, column: 30, scope: !4273)
!4278 = !DILocation(line: 388, column: 5, scope: !4273)
!4279 = !DILocation(line: 389, column: 9, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 389, column: 9)
!4281 = !DILocation(line: 389, column: 12, scope: !4280)
!4282 = !DILocation(line: 389, column: 25, scope: !4280)
!4283 = !DILocation(line: 389, column: 44, scope: !4280)
!4284 = !DILocation(line: 389, column: 47, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4280, file: !1801, discriminator: 1)
!4286 = !DILocation(line: 389, column: 50, scope: !4285)
!4287 = !DILocation(line: 389, column: 63, scope: !4285)
!4288 = !DILocation(line: 389, column: 9, scope: !4285)
!4289 = !DILocalVariable(name: "nf", scope: !4290, file: !1801, line: 390, type: !1015)
!4290 = distinct !DILexicalBlock(scope: !4280, file: !1801, line: 389, column: 83)
!4291 = !DILocation(line: 390, column: 13, scope: !4290)
!4292 = !DILocation(line: 390, column: 18, scope: !4290)
!4293 = !DILocation(line: 390, column: 21, scope: !4290)
!4294 = !DILocation(line: 390, column: 34, scope: !4290)
!4295 = !DILocation(line: 391, column: 57, scope: !4290)
!4296 = !DILocation(line: 391, column: 62, scope: !4290)
!4297 = !DILocation(line: 391, column: 51, scope: !4290)
!4298 = !DILocation(line: 391, column: 33, scope: !4290)
!4299 = !DILocation(line: 391, column: 55, scope: !4290)
!4300 = !DILocation(line: 391, column: 27, scope: !4290)
!4301 = !DILocation(line: 391, column: 9, scope: !4290)
!4302 = !DILocation(line: 391, column: 31, scope: !4290)
!4303 = !DILocation(line: 392, column: 5, scope: !4290)
!4304 = !DILocation(line: 393, column: 9, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 393, column: 9)
!4306 = !DILocation(line: 393, column: 12, scope: !4305)
!4307 = !DILocation(line: 393, column: 25, scope: !4305)
!4308 = !DILocation(line: 393, column: 44, scope: !4305)
!4309 = !DILocation(line: 393, column: 47, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4305, file: !1801, discriminator: 1)
!4311 = !DILocation(line: 393, column: 50, scope: !4310)
!4312 = !DILocation(line: 393, column: 63, scope: !4310)
!4313 = !DILocation(line: 393, column: 9, scope: !4310)
!4314 = !DILocalVariable(name: "nf", scope: !4315, file: !1801, line: 394, type: !1015)
!4315 = distinct !DILexicalBlock(scope: !4305, file: !1801, line: 393, column: 83)
!4316 = !DILocation(line: 394, column: 13, scope: !4315)
!4317 = !DILocation(line: 394, column: 18, scope: !4315)
!4318 = !DILocation(line: 394, column: 21, scope: !4315)
!4319 = !DILocation(line: 394, column: 34, scope: !4315)
!4320 = !DILocation(line: 395, column: 59, scope: !4315)
!4321 = !DILocation(line: 395, column: 51, scope: !4315)
!4322 = !DILocation(line: 395, column: 53, scope: !4315)
!4323 = !DILocation(line: 395, column: 33, scope: !4315)
!4324 = !DILocation(line: 395, column: 57, scope: !4315)
!4325 = !DILocation(line: 395, column: 27, scope: !4315)
!4326 = !DILocation(line: 395, column: 9, scope: !4315)
!4327 = !DILocation(line: 395, column: 31, scope: !4315)
!4328 = !DILocation(line: 396, column: 5, scope: !4315)
!4329 = !DILocation(line: 399, column: 19, scope: !4185)
!4330 = !DILocation(line: 399, column: 11, scope: !4185)
!4331 = !DILocation(line: 400, column: 12, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 400, column: 5)
!4333 = !DILocation(line: 400, column: 10, scope: !4332)
!4334 = !DILocation(line: 400, column: 17, scope: !4335)
!4335 = !DILexicalBlockFile(scope: !4336, file: !1801, discriminator: 1)
!4336 = distinct !DILexicalBlock(scope: !4332, file: !1801, line: 400, column: 5)
!4337 = !DILocation(line: 400, column: 21, scope: !4335)
!4338 = !DILocation(line: 400, column: 24, scope: !4335)
!4339 = !DILocation(line: 400, column: 19, scope: !4335)
!4340 = !DILocation(line: 400, column: 5, scope: !4335)
!4341 = !DILocation(line: 401, column: 36, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4336, file: !1801, line: 400, column: 43)
!4343 = !DILocation(line: 401, column: 18, scope: !4342)
!4344 = !DILocation(line: 401, column: 15, scope: !4342)
!4345 = !DILocation(line: 402, column: 36, scope: !4342)
!4346 = !DILocation(line: 402, column: 18, scope: !4342)
!4347 = !DILocation(line: 402, column: 15, scope: !4342)
!4348 = !DILocation(line: 403, column: 5, scope: !4342)
!4349 = !DILocation(line: 400, column: 39, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4336, file: !1801, discriminator: 2)
!4351 = !DILocation(line: 400, column: 5, scope: !4350)
!4352 = distinct !{!4352, !4353}
!4353 = !DILocation(line: 400, column: 5, scope: !4185)
!4354 = !DILocation(line: 404, column: 20, scope: !4185)
!4355 = !DILocation(line: 404, column: 18, scope: !4185)
!4356 = !DILocation(line: 404, column: 11, scope: !4185)
!4357 = !DILocation(line: 405, column: 20, scope: !4185)
!4358 = !DILocation(line: 405, column: 18, scope: !4185)
!4359 = !DILocation(line: 405, column: 11, scope: !4185)
!4360 = !DILocation(line: 406, column: 12, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 406, column: 5)
!4362 = !DILocation(line: 406, column: 10, scope: !4361)
!4363 = !DILocation(line: 406, column: 17, scope: !4364)
!4364 = !DILexicalBlockFile(scope: !4365, file: !1801, discriminator: 1)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !1801, line: 406, column: 5)
!4366 = !DILocation(line: 406, column: 21, scope: !4364)
!4367 = !DILocation(line: 406, column: 24, scope: !4364)
!4368 = !DILocation(line: 406, column: 19, scope: !4364)
!4369 = !DILocation(line: 406, column: 5, scope: !4364)
!4370 = !DILocation(line: 407, column: 33, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4365, file: !1801, line: 406, column: 43)
!4372 = !DILocation(line: 407, column: 27, scope: !4371)
!4373 = !DILocation(line: 407, column: 9, scope: !4371)
!4374 = !DILocation(line: 407, column: 30, scope: !4371)
!4375 = !DILocation(line: 408, column: 33, scope: !4371)
!4376 = !DILocation(line: 408, column: 27, scope: !4371)
!4377 = !DILocation(line: 408, column: 9, scope: !4371)
!4378 = !DILocation(line: 408, column: 30, scope: !4371)
!4379 = !DILocation(line: 409, column: 5, scope: !4371)
!4380 = !DILocation(line: 406, column: 39, scope: !4381)
!4381 = !DILexicalBlockFile(scope: !4365, file: !1801, discriminator: 2)
!4382 = !DILocation(line: 406, column: 5, scope: !4381)
!4383 = distinct !{!4383, !4384}
!4384 = !DILocation(line: 406, column: 5, scope: !4185)
!4385 = !DILocation(line: 411, column: 9, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 411, column: 9)
!4387 = !DILocation(line: 411, column: 12, scope: !4386)
!4388 = !DILocation(line: 411, column: 24, scope: !4386)
!4389 = !DILocation(line: 411, column: 9, scope: !4185)
!4390 = !DILocation(line: 412, column: 16, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !1801, line: 412, column: 9)
!4392 = distinct !DILexicalBlock(scope: !4386, file: !1801, line: 411, column: 44)
!4393 = !DILocation(line: 412, column: 14, scope: !4391)
!4394 = !DILocation(line: 412, column: 21, scope: !4395)
!4395 = !DILexicalBlockFile(scope: !4396, file: !1801, discriminator: 1)
!4396 = distinct !DILexicalBlock(scope: !4391, file: !1801, line: 412, column: 9)
!4397 = !DILocation(line: 412, column: 25, scope: !4395)
!4398 = !DILocation(line: 412, column: 28, scope: !4395)
!4399 = !DILocation(line: 412, column: 23, scope: !4395)
!4400 = !DILocation(line: 412, column: 9, scope: !4395)
!4401 = !DILocation(line: 413, column: 55, scope: !4396)
!4402 = !DILocation(line: 413, column: 37, scope: !4396)
!4403 = !DILocation(line: 414, column: 55, scope: !4396)
!4404 = !DILocation(line: 414, column: 37, scope: !4396)
!4405 = !DILocation(line: 413, column: 58, scope: !4396)
!4406 = !DILocation(line: 413, column: 36, scope: !4396)
!4407 = !DILocation(line: 414, column: 59, scope: !4396)
!4408 = !DILocation(line: 413, column: 31, scope: !4396)
!4409 = !DILocation(line: 413, column: 13, scope: !4396)
!4410 = !DILocation(line: 413, column: 34, scope: !4396)
!4411 = !DILocation(line: 412, column: 43, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !4396, file: !1801, discriminator: 2)
!4413 = !DILocation(line: 412, column: 9, scope: !4412)
!4414 = distinct !{!4414, !4415}
!4415 = !DILocation(line: 412, column: 9, scope: !4392)
!4416 = !DILocation(line: 415, column: 5, scope: !4392)
!4417 = !DILocation(line: 416, column: 12, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4185, file: !1801, line: 416, column: 5)
!4419 = !DILocation(line: 416, column: 10, scope: !4418)
!4420 = !DILocation(line: 416, column: 17, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !4422, file: !1801, discriminator: 1)
!4422 = distinct !DILexicalBlock(scope: !4418, file: !1801, line: 416, column: 5)
!4423 = !DILocation(line: 416, column: 21, scope: !4421)
!4424 = !DILocation(line: 416, column: 24, scope: !4421)
!4425 = !DILocation(line: 416, column: 19, scope: !4421)
!4426 = !DILocation(line: 416, column: 5, scope: !4421)
!4427 = !DILocation(line: 417, column: 62, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4422, file: !1801, line: 416, column: 43)
!4429 = !DILocation(line: 417, column: 44, scope: !4428)
!4430 = !DILocation(line: 417, column: 30, scope: !4428)
!4431 = !DILocation(line: 417, column: 9, scope: !4428)
!4432 = !DILocation(line: 417, column: 12, scope: !4428)
!4433 = !DILocation(line: 417, column: 33, scope: !4428)
!4434 = !DILocation(line: 418, column: 62, scope: !4428)
!4435 = !DILocation(line: 418, column: 44, scope: !4428)
!4436 = !DILocation(line: 418, column: 30, scope: !4428)
!4437 = !DILocation(line: 418, column: 9, scope: !4428)
!4438 = !DILocation(line: 418, column: 12, scope: !4428)
!4439 = !DILocation(line: 418, column: 33, scope: !4428)
!4440 = !DILocation(line: 419, column: 5, scope: !4428)
!4441 = !DILocation(line: 416, column: 39, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !4422, file: !1801, discriminator: 2)
!4443 = !DILocation(line: 416, column: 5, scope: !4442)
!4444 = distinct !{!4444, !4445}
!4445 = !DILocation(line: 416, column: 5, scope: !4185)
!4446 = !DILocation(line: 421, column: 5, scope: !4185)
!4447 = !DILocation(line: 422, column: 1, scope: !4185)
!4448 = distinct !DISubprogram(name: "decode_audio_block", scope: !1801, file: !1801, line: 1067, type: !4449, isLocal: true, isDefinition: true, scopeLine: 1068, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!1015, !1857, !1015, !1015}
!4451 = !DILocalVariable(name: "s", arg: 1, scope: !4448, file: !1801, line: 1067, type: !1857)
!4452 = !DILocation(line: 1067, column: 49, scope: !4448)
!4453 = !DILocalVariable(name: "blk", arg: 2, scope: !4448, file: !1801, line: 1067, type: !1015)
!4454 = !DILocation(line: 1067, column: 56, scope: !4448)
!4455 = !DILocalVariable(name: "offset", arg: 3, scope: !4448, file: !1801, line: 1067, type: !1015)
!4456 = !DILocation(line: 1067, column: 65, scope: !4448)
!4457 = !DILocalVariable(name: "fbw_channels", scope: !4448, file: !1801, line: 1069, type: !1015)
!4458 = !DILocation(line: 1069, column: 9, scope: !4448)
!4459 = !DILocation(line: 1069, column: 24, scope: !4448)
!4460 = !DILocation(line: 1069, column: 27, scope: !4448)
!4461 = !DILocalVariable(name: "channel_mode", scope: !4448, file: !1801, line: 1070, type: !1015)
!4462 = !DILocation(line: 1070, column: 9, scope: !4448)
!4463 = !DILocation(line: 1070, column: 24, scope: !4448)
!4464 = !DILocation(line: 1070, column: 27, scope: !4448)
!4465 = !DILocalVariable(name: "i", scope: !4448, file: !1801, line: 1071, type: !1015)
!4466 = !DILocation(line: 1071, column: 9, scope: !4448)
!4467 = !DILocalVariable(name: "bnd", scope: !4448, file: !1801, line: 1071, type: !1015)
!4468 = !DILocation(line: 1071, column: 12, scope: !4448)
!4469 = !DILocalVariable(name: "seg", scope: !4448, file: !1801, line: 1071, type: !1015)
!4470 = !DILocation(line: 1071, column: 17, scope: !4448)
!4471 = !DILocalVariable(name: "ch", scope: !4448, file: !1801, line: 1071, type: !1015)
!4472 = !DILocation(line: 1071, column: 22, scope: !4448)
!4473 = !DILocalVariable(name: "ret", scope: !4448, file: !1801, line: 1071, type: !1015)
!4474 = !DILocation(line: 1071, column: 26, scope: !4448)
!4475 = !DILocalVariable(name: "different_transforms", scope: !4448, file: !1801, line: 1072, type: !1015)
!4476 = !DILocation(line: 1072, column: 9, scope: !4448)
!4477 = !DILocalVariable(name: "downmix_output", scope: !4448, file: !1801, line: 1073, type: !1015)
!4478 = !DILocation(line: 1073, column: 9, scope: !4448)
!4479 = !DILocalVariable(name: "cpl_in_use", scope: !4448, file: !1801, line: 1074, type: !1015)
!4480 = !DILocation(line: 1074, column: 9, scope: !4448)
!4481 = !DILocalVariable(name: "gbc", scope: !4448, file: !1801, line: 1075, type: !3957)
!4482 = !DILocation(line: 1075, column: 20, scope: !4448)
!4483 = !DILocation(line: 1075, column: 27, scope: !4448)
!4484 = !DILocation(line: 1075, column: 30, scope: !4448)
!4485 = !DILocalVariable(name: "bit_alloc_stages", scope: !4448, file: !1801, line: 1076, type: !1945)
!4486 = !DILocation(line: 1076, column: 13, scope: !4448)
!4487 = !DILocation(line: 1079, column: 26, scope: !4448)
!4488 = !DILocation(line: 1080, column: 9, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1080, column: 9)
!4490 = !DILocation(line: 1080, column: 12, scope: !4489)
!4491 = !DILocation(line: 1080, column: 9, scope: !4448)
!4492 = !DILocation(line: 1081, column: 17, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !1801, line: 1081, column: 9)
!4494 = distinct !DILexicalBlock(scope: !4489, file: !1801, line: 1080, column: 33)
!4495 = !DILocation(line: 1081, column: 14, scope: !4493)
!4496 = !DILocation(line: 1081, column: 22, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !4498, file: !1801, discriminator: 1)
!4498 = distinct !DILexicalBlock(scope: !4493, file: !1801, line: 1081, column: 9)
!4499 = !DILocation(line: 1081, column: 28, scope: !4497)
!4500 = !DILocation(line: 1081, column: 25, scope: !4497)
!4501 = !DILocation(line: 1081, column: 9, scope: !4497)
!4502 = !DILocation(line: 1082, column: 45, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4498, file: !1801, line: 1081, column: 48)
!4504 = !DILocation(line: 1082, column: 35, scope: !4503)
!4505 = !DILocation(line: 1082, column: 29, scope: !4503)
!4506 = !DILocation(line: 1082, column: 13, scope: !4503)
!4507 = !DILocation(line: 1082, column: 16, scope: !4503)
!4508 = !DILocation(line: 1082, column: 33, scope: !4503)
!4509 = !DILocation(line: 1083, column: 17, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4503, file: !1801, line: 1083, column: 17)
!4511 = !DILocation(line: 1083, column: 20, scope: !4510)
!4512 = !DILocation(line: 1083, column: 24, scope: !4510)
!4513 = !DILocation(line: 1083, column: 43, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !4510, file: !1801, discriminator: 1)
!4515 = !DILocation(line: 1083, column: 27, scope: !4514)
!4516 = !DILocation(line: 1083, column: 30, scope: !4514)
!4517 = !DILocation(line: 1083, column: 50, scope: !4514)
!4518 = !DILocation(line: 1083, column: 53, scope: !4514)
!4519 = !DILocation(line: 1083, column: 47, scope: !4514)
!4520 = !DILocation(line: 1083, column: 17, scope: !4514)
!4521 = !DILocation(line: 1084, column: 38, scope: !4510)
!4522 = !DILocation(line: 1084, column: 17, scope: !4510)
!4523 = !DILocation(line: 1085, column: 9, scope: !4503)
!4524 = !DILocation(line: 1081, column: 44, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !4498, file: !1801, discriminator: 2)
!4526 = !DILocation(line: 1081, column: 9, scope: !4525)
!4527 = distinct !{!4527, !4528}
!4528 = !DILocation(line: 1081, column: 9, scope: !4494)
!4529 = !DILocation(line: 1086, column: 5, scope: !4494)
!4530 = !DILocation(line: 1089, column: 9, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1089, column: 9)
!4532 = !DILocation(line: 1089, column: 12, scope: !4531)
!4533 = !DILocation(line: 1089, column: 9, scope: !4448)
!4534 = !DILocation(line: 1090, column: 17, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !1801, line: 1090, column: 9)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !1801, line: 1089, column: 32)
!4537 = !DILocation(line: 1090, column: 14, scope: !4535)
!4538 = !DILocation(line: 1090, column: 22, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !4540, file: !1801, discriminator: 1)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !1801, line: 1090, column: 9)
!4541 = !DILocation(line: 1090, column: 28, scope: !4539)
!4542 = !DILocation(line: 1090, column: 25, scope: !4539)
!4543 = !DILocation(line: 1090, column: 9, scope: !4539)
!4544 = !DILocation(line: 1091, column: 44, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4540, file: !1801, line: 1090, column: 48)
!4546 = !DILocation(line: 1091, column: 34, scope: !4545)
!4547 = !DILocation(line: 1091, column: 28, scope: !4545)
!4548 = !DILocation(line: 1091, column: 13, scope: !4545)
!4549 = !DILocation(line: 1091, column: 16, scope: !4545)
!4550 = !DILocation(line: 1091, column: 32, scope: !4545)
!4551 = !DILocation(line: 1092, column: 9, scope: !4545)
!4552 = !DILocation(line: 1090, column: 44, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4540, file: !1801, discriminator: 2)
!4554 = !DILocation(line: 1090, column: 9, scope: !4553)
!4555 = distinct !{!4555, !4556}
!4556 = !DILocation(line: 1090, column: 9, scope: !4536)
!4557 = !DILocation(line: 1093, column: 5, scope: !4536)
!4558 = !DILocation(line: 1096, column: 10, scope: !4448)
!4559 = !DILocation(line: 1096, column: 13, scope: !4448)
!4560 = !DILocation(line: 1096, column: 9, scope: !4448)
!4561 = !DILocation(line: 1096, column: 7, scope: !4448)
!4562 = !DILocation(line: 1097, column: 5, scope: !4448)
!4563 = distinct !{!4563, !4562}
!4564 = !DILocation(line: 1098, column: 23, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !1801, line: 1098, column: 13)
!4566 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1097, column: 8)
!4567 = !DILocation(line: 1098, column: 13, scope: !4565)
!4568 = !DILocation(line: 1098, column: 13, scope: !4566)
!4569 = !DILocalVariable(name: "range_bits", scope: !4570, file: !1801, line: 1101, type: !1015)
!4570 = distinct !DILexicalBlock(scope: !4565, file: !1801, line: 1098, column: 29)
!4571 = !DILocation(line: 1101, column: 17, scope: !4570)
!4572 = !DILocation(line: 1101, column: 39, scope: !4570)
!4573 = !DILocation(line: 1101, column: 30, scope: !4570)
!4574 = !DILocalVariable(name: "range", scope: !4570, file: !1801, line: 1102, type: !1960)
!4575 = !DILocation(line: 1102, column: 22, scope: !4570)
!4576 = !DILocation(line: 1102, column: 50, scope: !4570)
!4577 = !DILocation(line: 1102, column: 31, scope: !4570)
!4578 = !DILocation(line: 1103, column: 17, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4570, file: !1801, line: 1103, column: 17)
!4580 = !DILocation(line: 1103, column: 28, scope: !4579)
!4581 = !DILocation(line: 1103, column: 35, scope: !4579)
!4582 = !DILocation(line: 1103, column: 38, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4579, file: !1801, discriminator: 1)
!4584 = !DILocation(line: 1103, column: 41, scope: !4583)
!4585 = !DILocation(line: 1103, column: 51, scope: !4583)
!4586 = !DILocation(line: 1103, column: 17, scope: !4583)
!4587 = !DILocation(line: 1104, column: 45, scope: !4579)
!4588 = !DILocation(line: 1104, column: 52, scope: !4579)
!4589 = !DILocation(line: 1104, column: 55, scope: !4579)
!4590 = !DILocation(line: 1104, column: 40, scope: !4579)
!4591 = !DILocation(line: 1104, column: 34, scope: !4579)
!4592 = !DILocation(line: 1104, column: 17, scope: !4579)
!4593 = !DILocation(line: 1104, column: 20, scope: !4579)
!4594 = !DILocation(line: 1104, column: 37, scope: !4579)
!4595 = !DILocation(line: 1106, column: 39, scope: !4579)
!4596 = !DILocation(line: 1106, column: 34, scope: !4579)
!4597 = !DILocation(line: 1106, column: 17, scope: !4579)
!4598 = !DILocation(line: 1106, column: 20, scope: !4579)
!4599 = !DILocation(line: 1106, column: 37, scope: !4579)
!4600 = !DILocation(line: 1107, column: 9, scope: !4570)
!4601 = !DILocation(line: 1107, column: 20, scope: !4602)
!4602 = !DILexicalBlockFile(scope: !4603, file: !1801, discriminator: 1)
!4603 = distinct !DILexicalBlock(scope: !4565, file: !1801, line: 1107, column: 20)
!4604 = !DILocation(line: 1107, column: 24, scope: !4602)
!4605 = !DILocation(line: 1108, column: 30, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !1801, line: 1107, column: 30)
!4607 = !DILocation(line: 1108, column: 13, scope: !4606)
!4608 = !DILocation(line: 1108, column: 16, scope: !4606)
!4609 = !DILocation(line: 1108, column: 33, scope: !4606)
!4610 = !DILocation(line: 1109, column: 9, scope: !4606)
!4611 = !DILocation(line: 1110, column: 5, scope: !4566)
!4612 = !DILocation(line: 1110, column: 15, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !4448, file: !1801, discriminator: 1)
!4614 = !DILocation(line: 1110, column: 5, scope: !4613)
!4615 = !DILocation(line: 1113, column: 9, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1113, column: 9)
!4617 = !DILocation(line: 1113, column: 12, scope: !4616)
!4618 = !DILocation(line: 1113, column: 17, scope: !4616)
!4619 = !DILocation(line: 1113, column: 22, scope: !4620)
!4620 = !DILexicalBlockFile(scope: !4616, file: !1801, discriminator: 1)
!4621 = !DILocation(line: 1113, column: 26, scope: !4620)
!4622 = !DILocation(line: 1113, column: 39, scope: !4623)
!4623 = !DILexicalBlockFile(scope: !4616, file: !1801, discriminator: 2)
!4624 = !DILocation(line: 1113, column: 29, scope: !4623)
!4625 = !DILocation(line: 1113, column: 9, scope: !4623)
!4626 = !DILocation(line: 1114, column: 35, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4616, file: !1801, line: 1113, column: 46)
!4628 = !DILocation(line: 1114, column: 25, scope: !4627)
!4629 = !DILocation(line: 1114, column: 9, scope: !4627)
!4630 = !DILocation(line: 1114, column: 12, scope: !4627)
!4631 = !DILocation(line: 1114, column: 23, scope: !4627)
!4632 = !DILocation(line: 1115, column: 13, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4627, file: !1801, line: 1115, column: 13)
!4634 = !DILocation(line: 1115, column: 16, scope: !4633)
!4635 = !DILocation(line: 1115, column: 13, scope: !4627)
!4636 = !DILocation(line: 1116, column: 37, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !1801, line: 1116, column: 17)
!4638 = distinct !DILexicalBlock(scope: !4633, file: !1801, line: 1115, column: 28)
!4639 = !DILocation(line: 1116, column: 40, scope: !4637)
!4640 = !DILocation(line: 1116, column: 24, scope: !4637)
!4641 = !DILocation(line: 1116, column: 22, scope: !4637)
!4642 = !DILocation(line: 1116, column: 46, scope: !4637)
!4643 = !DILocation(line: 1116, column: 17, scope: !4638)
!4644 = !DILocation(line: 1117, column: 24, scope: !4637)
!4645 = !DILocation(line: 1117, column: 17, scope: !4637)
!4646 = !DILocation(line: 1118, column: 9, scope: !4638)
!4647 = !DILocation(line: 1119, column: 5, scope: !4627)
!4648 = !DILocation(line: 1120, column: 10, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1120, column: 9)
!4650 = !DILocation(line: 1120, column: 13, scope: !4649)
!4651 = !DILocation(line: 1120, column: 18, scope: !4649)
!4652 = !DILocation(line: 1120, column: 22, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4649, file: !1801, discriminator: 1)
!4654 = !DILocation(line: 1120, column: 25, scope: !4653)
!4655 = !DILocation(line: 1120, column: 9, scope: !4653)
!4656 = !DILocation(line: 1121, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4649, file: !1801, line: 1120, column: 37)
!4658 = !DILocation(line: 1121, column: 12, scope: !4657)
!4659 = !DILocation(line: 1121, column: 23, scope: !4657)
!4660 = !DILocation(line: 1122, column: 17, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !1801, line: 1122, column: 9)
!4662 = !DILocation(line: 1122, column: 14, scope: !4661)
!4663 = !DILocation(line: 1122, column: 22, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4665, file: !1801, discriminator: 1)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !1801, line: 1122, column: 9)
!4666 = !DILocation(line: 1122, column: 28, scope: !4664)
!4667 = !DILocation(line: 1122, column: 25, scope: !4664)
!4668 = !DILocation(line: 1122, column: 9, scope: !4664)
!4669 = !DILocation(line: 1123, column: 33, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4665, file: !1801, line: 1122, column: 48)
!4671 = !DILocation(line: 1123, column: 13, scope: !4670)
!4672 = !DILocation(line: 1123, column: 16, scope: !4670)
!4673 = !DILocation(line: 1123, column: 37, scope: !4670)
!4674 = !DILocation(line: 1124, column: 33, scope: !4670)
!4675 = !DILocation(line: 1124, column: 13, scope: !4670)
!4676 = !DILocation(line: 1124, column: 16, scope: !4670)
!4677 = !DILocation(line: 1124, column: 37, scope: !4670)
!4678 = !DILocation(line: 1125, column: 9, scope: !4670)
!4679 = !DILocation(line: 1122, column: 44, scope: !4680)
!4680 = !DILexicalBlockFile(scope: !4665, file: !1801, discriminator: 2)
!4681 = !DILocation(line: 1122, column: 9, scope: !4680)
!4682 = distinct !{!4682, !4683}
!4683 = !DILocation(line: 1122, column: 9, scope: !4657)
!4684 = !DILocation(line: 1126, column: 5, scope: !4657)
!4685 = !DILocation(line: 1129, column: 9, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1129, column: 9)
!4687 = !DILocation(line: 1129, column: 12, scope: !4686)
!4688 = !DILocation(line: 1129, column: 9, scope: !4448)
!4689 = !DILocation(line: 1130, column: 25, scope: !4686)
!4690 = !DILocation(line: 1130, column: 9, scope: !4686)
!4691 = !DILocation(line: 1133, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1133, column: 9)
!4693 = !DILocation(line: 1133, column: 12, scope: !4692)
!4694 = !DILocation(line: 1133, column: 9, scope: !4448)
!4695 = !DILocation(line: 1133, column: 42, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4692, file: !1801, discriminator: 1)
!4697 = !DILocation(line: 1133, column: 19, scope: !4696)
!4698 = !DILocation(line: 1133, column: 22, scope: !4696)
!4699 = !DILocation(line: 1133, column: 9, scope: !4696)
!4700 = !DILocation(line: 1133, column: 59, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4692, file: !1801, discriminator: 2)
!4702 = !DILocation(line: 1133, column: 49, scope: !4701)
!4703 = !DILocation(line: 1133, column: 9, scope: !4701)
!4704 = !DILocation(line: 1134, column: 38, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !1801, line: 1134, column: 13)
!4706 = distinct !DILexicalBlock(scope: !4692, file: !1801, line: 1133, column: 65)
!4707 = !DILocation(line: 1134, column: 41, scope: !4705)
!4708 = !DILocation(line: 1134, column: 46, scope: !4705)
!4709 = !DILocation(line: 1134, column: 20, scope: !4705)
!4710 = !DILocation(line: 1134, column: 18, scope: !4705)
!4711 = !DILocation(line: 1134, column: 65, scope: !4705)
!4712 = !DILocation(line: 1134, column: 13, scope: !4706)
!4713 = !DILocation(line: 1135, column: 20, scope: !4705)
!4714 = !DILocation(line: 1135, column: 13, scope: !4705)
!4715 = !DILocation(line: 1136, column: 5, scope: !4706)
!4716 = !DILocation(line: 1136, column: 17, scope: !4717)
!4717 = !DILexicalBlockFile(scope: !4718, file: !1801, discriminator: 1)
!4718 = distinct !DILexicalBlock(scope: !4692, file: !1801, line: 1136, column: 16)
!4719 = !DILocation(line: 1136, column: 20, scope: !4717)
!4720 = !DILocation(line: 1136, column: 16, scope: !4717)
!4721 = !DILocation(line: 1137, column: 14, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !1801, line: 1137, column: 13)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !1801, line: 1136, column: 26)
!4724 = !DILocation(line: 1137, column: 13, scope: !4723)
!4725 = !DILocation(line: 1138, column: 20, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !1801, line: 1137, column: 19)
!4727 = !DILocation(line: 1138, column: 23, scope: !4726)
!4728 = !DILocation(line: 1138, column: 13, scope: !4726)
!4729 = !DILocation(line: 1140, column: 13, scope: !4726)
!4730 = !DILocation(line: 1142, column: 48, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4722, file: !1801, line: 1141, column: 16)
!4732 = !DILocation(line: 1142, column: 51, scope: !4731)
!4733 = !DILocation(line: 1142, column: 34, scope: !4731)
!4734 = !DILocation(line: 1142, column: 37, scope: !4731)
!4735 = !DILocation(line: 1142, column: 27, scope: !4731)
!4736 = !DILocation(line: 1142, column: 13, scope: !4731)
!4737 = !DILocation(line: 1142, column: 16, scope: !4731)
!4738 = !DILocation(line: 1142, column: 32, scope: !4731)
!4739 = !DILocation(line: 1144, column: 5, scope: !4723)
!4740 = !DILocation(line: 1145, column: 32, scope: !4448)
!4741 = !DILocation(line: 1145, column: 18, scope: !4448)
!4742 = !DILocation(line: 1145, column: 21, scope: !4448)
!4743 = !DILocation(line: 1145, column: 16, scope: !4448)
!4744 = !DILocation(line: 1148, column: 9, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1148, column: 9)
!4746 = !DILocation(line: 1148, column: 9, scope: !4448)
!4747 = !DILocation(line: 1149, column: 41, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !1801, line: 1149, column: 13)
!4749 = distinct !DILexicalBlock(scope: !4745, file: !1801, line: 1148, column: 21)
!4750 = !DILocation(line: 1149, column: 44, scope: !4748)
!4751 = !DILocation(line: 1149, column: 20, scope: !4748)
!4752 = !DILocation(line: 1149, column: 18, scope: !4748)
!4753 = !DILocation(line: 1149, column: 50, scope: !4748)
!4754 = !DILocation(line: 1149, column: 13, scope: !4749)
!4755 = !DILocation(line: 1150, column: 20, scope: !4748)
!4756 = !DILocation(line: 1150, column: 13, scope: !4748)
!4757 = !DILocation(line: 1151, column: 5, scope: !4749)
!4758 = !DILocation(line: 1154, column: 9, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1154, column: 9)
!4760 = !DILocation(line: 1154, column: 22, scope: !4759)
!4761 = !DILocation(line: 1154, column: 9, scope: !4448)
!4762 = !DILocation(line: 1155, column: 14, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !1801, line: 1155, column: 13)
!4764 = distinct !DILexicalBlock(scope: !4759, file: !1801, line: 1154, column: 44)
!4765 = !DILocation(line: 1155, column: 17, scope: !4763)
!4766 = !DILocation(line: 1155, column: 22, scope: !4763)
!4767 = !DILocation(line: 1155, column: 26, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !4763, file: !1801, discriminator: 1)
!4769 = !DILocation(line: 1155, column: 31, scope: !4768)
!4770 = !DILocation(line: 1155, column: 44, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4763, file: !1801, discriminator: 2)
!4772 = !DILocation(line: 1155, column: 34, scope: !4771)
!4773 = !DILocation(line: 1155, column: 13, scope: !4771)
!4774 = !DILocation(line: 1156, column: 13, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4763, file: !1801, line: 1155, column: 50)
!4776 = !DILocation(line: 1156, column: 16, scope: !4775)
!4777 = !DILocation(line: 1156, column: 38, scope: !4775)
!4778 = !DILocation(line: 1157, column: 17, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !1801, line: 1157, column: 17)
!4780 = !DILocation(line: 1157, column: 28, scope: !4779)
!4781 = !DILocation(line: 1157, column: 31, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4779, file: !1801, discriminator: 1)
!4783 = !DILocation(line: 1157, column: 34, scope: !4782)
!4784 = !DILocation(line: 1157, column: 48, scope: !4782)
!4785 = !DILocation(line: 1157, column: 17, scope: !4782)
!4786 = !DILocation(line: 1158, column: 50, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4779, file: !1801, line: 1157, column: 55)
!4788 = !DILocation(line: 1158, column: 53, scope: !4787)
!4789 = !DILocation(line: 1158, column: 67, scope: !4787)
!4790 = !DILocation(line: 1158, column: 47, scope: !4787)
!4791 = !DILocation(line: 1158, column: 17, scope: !4787)
!4792 = !DILocation(line: 1158, column: 20, scope: !4787)
!4793 = !DILocation(line: 1158, column: 42, scope: !4787)
!4794 = !DILocation(line: 1159, column: 13, scope: !4787)
!4795 = !DILocation(line: 1159, column: 24, scope: !4796)
!4796 = !DILexicalBlockFile(scope: !4797, file: !1801, discriminator: 1)
!4797 = distinct !DILexicalBlock(scope: !4779, file: !1801, line: 1159, column: 24)
!4798 = !DILocation(line: 1159, column: 27, scope: !4796)
!4799 = !DILocation(line: 1159, column: 38, scope: !4796)
!4800 = !DILocation(line: 1159, column: 41, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !4797, file: !1801, discriminator: 2)
!4802 = !DILocation(line: 1159, column: 44, scope: !4801)
!4803 = !DILocation(line: 1159, column: 63, scope: !4801)
!4804 = !DILocation(line: 1159, column: 24, scope: !4801)
!4805 = !DILocation(line: 1160, column: 17, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4797, file: !1801, line: 1159, column: 70)
!4807 = !DILocation(line: 1160, column: 20, scope: !4806)
!4808 = !DILocation(line: 1160, column: 41, scope: !4806)
!4809 = !DILocation(line: 1161, column: 13, scope: !4806)
!4810 = !DILocation(line: 1162, column: 22, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4775, file: !1801, line: 1162, column: 13)
!4812 = !DILocation(line: 1162, column: 18, scope: !4811)
!4813 = !DILocation(line: 1162, column: 27, scope: !4814)
!4814 = !DILexicalBlockFile(scope: !4815, file: !1801, discriminator: 1)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !1801, line: 1162, column: 13)
!4816 = !DILocation(line: 1162, column: 33, scope: !4814)
!4817 = !DILocation(line: 1162, column: 36, scope: !4814)
!4818 = !DILocation(line: 1162, column: 31, scope: !4814)
!4819 = !DILocation(line: 1162, column: 13, scope: !4814)
!4820 = !DILocation(line: 1163, column: 55, scope: !4815)
!4821 = !DILocation(line: 1163, column: 45, scope: !4815)
!4822 = !DILocation(line: 1163, column: 38, scope: !4815)
!4823 = !DILocation(line: 1163, column: 17, scope: !4815)
!4824 = !DILocation(line: 1163, column: 20, scope: !4815)
!4825 = !DILocation(line: 1163, column: 43, scope: !4815)
!4826 = !DILocation(line: 1162, column: 62, scope: !4827)
!4827 = !DILexicalBlockFile(scope: !4815, file: !1801, discriminator: 2)
!4828 = !DILocation(line: 1162, column: 13, scope: !4827)
!4829 = distinct !{!4829, !4830}
!4830 = !DILocation(line: 1162, column: 13, scope: !4775)
!4831 = !DILocation(line: 1164, column: 9, scope: !4775)
!4832 = !DILocation(line: 1164, column: 21, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4834, file: !1801, discriminator: 1)
!4834 = distinct !DILexicalBlock(scope: !4763, file: !1801, line: 1164, column: 20)
!4835 = !DILocation(line: 1164, column: 20, scope: !4833)
!4836 = !DILocation(line: 1165, column: 20, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !1801, line: 1164, column: 26)
!4838 = !DILocation(line: 1165, column: 23, scope: !4837)
!4839 = !DILocation(line: 1165, column: 13, scope: !4837)
!4840 = !DILocation(line: 1167, column: 13, scope: !4837)
!4841 = !DILocation(line: 1167, column: 16, scope: !4837)
!4842 = !DILocation(line: 1167, column: 38, scope: !4837)
!4843 = !DILocation(line: 1168, column: 9, scope: !4837)
!4844 = !DILocation(line: 1169, column: 5, scope: !4764)
!4845 = !DILocation(line: 1172, column: 16, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1172, column: 5)
!4847 = !DILocation(line: 1172, column: 15, scope: !4846)
!4848 = !DILocation(line: 1172, column: 13, scope: !4846)
!4849 = !DILocation(line: 1172, column: 10, scope: !4846)
!4850 = !DILocation(line: 1172, column: 28, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4852, file: !1801, discriminator: 1)
!4852 = distinct !DILexicalBlock(scope: !4846, file: !1801, line: 1172, column: 5)
!4853 = !DILocation(line: 1172, column: 34, scope: !4851)
!4854 = !DILocation(line: 1172, column: 37, scope: !4851)
!4855 = !DILocation(line: 1172, column: 31, scope: !4851)
!4856 = !DILocation(line: 1172, column: 5, scope: !4851)
!4857 = !DILocation(line: 1173, column: 14, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !1801, line: 1173, column: 13)
!4859 = distinct !DILexicalBlock(scope: !4852, file: !1801, line: 1172, column: 53)
!4860 = !DILocation(line: 1173, column: 17, scope: !4858)
!4861 = !DILocation(line: 1173, column: 13, scope: !4859)
!4862 = !DILocation(line: 1174, column: 49, scope: !4858)
!4863 = !DILocation(line: 1174, column: 59, scope: !4858)
!4864 = !DILocation(line: 1174, column: 65, scope: !4858)
!4865 = !DILocation(line: 1174, column: 68, scope: !4858)
!4866 = !DILocation(line: 1174, column: 62, scope: !4858)
!4867 = !DILocation(line: 1174, column: 56, scope: !4858)
!4868 = !DILocation(line: 1174, column: 40, scope: !4858)
!4869 = !DILocation(line: 1174, column: 34, scope: !4858)
!4870 = !DILocation(line: 1174, column: 13, scope: !4858)
!4871 = !DILocation(line: 1174, column: 29, scope: !4858)
!4872 = !DILocation(line: 1174, column: 16, scope: !4858)
!4873 = !DILocation(line: 1174, column: 38, scope: !4858)
!4874 = !DILocation(line: 1175, column: 34, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4859, file: !1801, line: 1175, column: 13)
!4876 = !DILocation(line: 1175, column: 13, scope: !4875)
!4877 = !DILocation(line: 1175, column: 29, scope: !4875)
!4878 = !DILocation(line: 1175, column: 16, scope: !4875)
!4879 = !DILocation(line: 1175, column: 38, scope: !4875)
!4880 = !DILocation(line: 1175, column: 13, scope: !4859)
!4881 = !DILocation(line: 1176, column: 30, scope: !4875)
!4882 = !DILocation(line: 1176, column: 13, scope: !4875)
!4883 = !DILocation(line: 1176, column: 34, scope: !4875)
!4884 = !DILocation(line: 1177, column: 5, scope: !4859)
!4885 = !DILocation(line: 1172, column: 49, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4852, file: !1801, discriminator: 2)
!4887 = !DILocation(line: 1172, column: 5, scope: !4886)
!4888 = distinct !{!4888, !4889}
!4889 = !DILocation(line: 1172, column: 5, scope: !4448)
!4890 = !DILocation(line: 1180, column: 13, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1180, column: 5)
!4892 = !DILocation(line: 1180, column: 10, scope: !4891)
!4893 = !DILocation(line: 1180, column: 18, scope: !4894)
!4894 = !DILexicalBlockFile(scope: !4895, file: !1801, discriminator: 1)
!4895 = distinct !DILexicalBlock(scope: !4891, file: !1801, line: 1180, column: 5)
!4896 = !DILocation(line: 1180, column: 24, scope: !4894)
!4897 = !DILocation(line: 1180, column: 21, scope: !4894)
!4898 = !DILocation(line: 1180, column: 5, scope: !4894)
!4899 = !DILocation(line: 1181, column: 23, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !1801, line: 1180, column: 44)
!4901 = !DILocation(line: 1181, column: 9, scope: !4900)
!4902 = !DILocation(line: 1181, column: 12, scope: !4900)
!4903 = !DILocation(line: 1181, column: 27, scope: !4900)
!4904 = !DILocation(line: 1182, column: 34, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4900, file: !1801, line: 1182, column: 13)
!4906 = !DILocation(line: 1182, column: 13, scope: !4905)
!4907 = !DILocation(line: 1182, column: 29, scope: !4905)
!4908 = !DILocation(line: 1182, column: 16, scope: !4905)
!4909 = !DILocation(line: 1182, column: 38, scope: !4905)
!4910 = !DILocation(line: 1182, column: 13, scope: !4900)
!4911 = !DILocalVariable(name: "group_size", scope: !4912, file: !1801, line: 1183, type: !1015)
!4912 = distinct !DILexicalBlock(scope: !4905, file: !1801, line: 1182, column: 44)
!4913 = !DILocation(line: 1183, column: 17, scope: !4912)
!4914 = !DILocalVariable(name: "prev", scope: !4912, file: !1801, line: 1184, type: !1015)
!4915 = !DILocation(line: 1184, column: 17, scope: !4912)
!4916 = !DILocation(line: 1184, column: 36, scope: !4912)
!4917 = !DILocation(line: 1184, column: 24, scope: !4912)
!4918 = !DILocation(line: 1184, column: 27, scope: !4912)
!4919 = !DILocation(line: 1185, column: 35, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4912, file: !1801, line: 1185, column: 17)
!4921 = !DILocation(line: 1185, column: 17, scope: !4920)
!4922 = !DILocation(line: 1185, column: 20, scope: !4920)
!4923 = !DILocation(line: 1185, column: 17, scope: !4912)
!4924 = !DILocation(line: 1186, column: 35, scope: !4920)
!4925 = !DILocation(line: 1186, column: 38, scope: !4920)
!4926 = !DILocation(line: 1186, column: 29, scope: !4920)
!4927 = !DILocation(line: 1186, column: 17, scope: !4920)
!4928 = !DILocation(line: 1186, column: 20, scope: !4920)
!4929 = !DILocation(line: 1186, column: 33, scope: !4920)
!4930 = !DILocation(line: 1187, column: 42, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4920, file: !1801, line: 1187, column: 22)
!4932 = !DILocation(line: 1187, column: 22, scope: !4931)
!4933 = !DILocation(line: 1187, column: 25, scope: !4931)
!4934 = !DILocation(line: 1187, column: 22, scope: !4920)
!4935 = !DILocation(line: 1188, column: 35, scope: !4931)
!4936 = !DILocation(line: 1188, column: 38, scope: !4931)
!4937 = !DILocation(line: 1188, column: 29, scope: !4931)
!4938 = !DILocation(line: 1188, column: 17, scope: !4931)
!4939 = !DILocation(line: 1188, column: 20, scope: !4931)
!4940 = !DILocation(line: 1188, column: 33, scope: !4931)
!4941 = !DILocalVariable(name: "bandwidth_code", scope: !4942, file: !1801, line: 1190, type: !1015)
!4942 = distinct !DILexicalBlock(scope: !4931, file: !1801, line: 1189, column: 18)
!4943 = !DILocation(line: 1190, column: 21, scope: !4942)
!4944 = !DILocation(line: 1190, column: 47, scope: !4942)
!4945 = !DILocation(line: 1190, column: 38, scope: !4942)
!4946 = !DILocation(line: 1191, column: 21, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !1801, line: 1191, column: 21)
!4948 = !DILocation(line: 1191, column: 36, scope: !4947)
!4949 = !DILocation(line: 1191, column: 21, scope: !4942)
!4950 = !DILocation(line: 1192, column: 28, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4947, file: !1801, line: 1191, column: 42)
!4952 = !DILocation(line: 1192, column: 31, scope: !4951)
!4953 = !DILocation(line: 1192, column: 72, scope: !4951)
!4954 = !DILocation(line: 1192, column: 21, scope: !4951)
!4955 = !DILocation(line: 1193, column: 21, scope: !4951)
!4956 = !DILocation(line: 1195, column: 35, scope: !4942)
!4957 = !DILocation(line: 1195, column: 50, scope: !4942)
!4958 = !DILocation(line: 1195, column: 54, scope: !4942)
!4959 = !DILocation(line: 1195, column: 29, scope: !4942)
!4960 = !DILocation(line: 1195, column: 17, scope: !4942)
!4961 = !DILocation(line: 1195, column: 20, scope: !4942)
!4962 = !DILocation(line: 1195, column: 33, scope: !4942)
!4963 = !DILocation(line: 1197, column: 53, scope: !4912)
!4964 = !DILocation(line: 1197, column: 32, scope: !4912)
!4965 = !DILocation(line: 1197, column: 48, scope: !4912)
!4966 = !DILocation(line: 1197, column: 35, scope: !4912)
!4967 = !DILocation(line: 1197, column: 57, scope: !4912)
!4968 = !DILocation(line: 1197, column: 28, scope: !4912)
!4969 = !DILocation(line: 1197, column: 24, scope: !4912)
!4970 = !DILocation(line: 1198, column: 50, scope: !4912)
!4971 = !DILocation(line: 1198, column: 38, scope: !4912)
!4972 = !DILocation(line: 1198, column: 41, scope: !4912)
!4973 = !DILocation(line: 1198, column: 56, scope: !4912)
!4974 = !DILocation(line: 1198, column: 54, scope: !4912)
!4975 = !DILocation(line: 1198, column: 66, scope: !4912)
!4976 = !DILocation(line: 1198, column: 72, scope: !4912)
!4977 = !DILocation(line: 1198, column: 70, scope: !4912)
!4978 = !DILocation(line: 1198, column: 31, scope: !4912)
!4979 = !DILocation(line: 1198, column: 13, scope: !4912)
!4980 = !DILocation(line: 1198, column: 16, scope: !4912)
!4981 = !DILocation(line: 1198, column: 35, scope: !4912)
!4982 = !DILocation(line: 1199, column: 17, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4912, file: !1801, line: 1199, column: 17)
!4984 = !DILocation(line: 1199, column: 21, scope: !4983)
!4985 = !DILocation(line: 1199, column: 25, scope: !4983)
!4986 = !DILocation(line: 1199, column: 40, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4983, file: !1801, discriminator: 1)
!4988 = !DILocation(line: 1199, column: 28, scope: !4987)
!4989 = !DILocation(line: 1199, column: 31, scope: !4987)
!4990 = !DILocation(line: 1199, column: 47, scope: !4987)
!4991 = !DILocation(line: 1199, column: 44, scope: !4987)
!4992 = !DILocation(line: 1199, column: 17, scope: !4987)
!4993 = !DILocation(line: 1200, column: 17, scope: !4983)
!4994 = !DILocation(line: 1201, column: 9, scope: !4912)
!4995 = !DILocation(line: 1202, column: 5, scope: !4900)
!4996 = !DILocation(line: 1180, column: 40, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4895, file: !1801, discriminator: 2)
!4998 = !DILocation(line: 1180, column: 5, scope: !4997)
!4999 = distinct !{!4999, !5000}
!5000 = !DILocation(line: 1180, column: 5, scope: !4448)
!5001 = !DILocation(line: 1203, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1203, column: 9)
!5003 = !DILocation(line: 1203, column: 20, scope: !5002)
!5004 = !DILocation(line: 1203, column: 39, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !5002, file: !1801, discriminator: 1)
!5006 = !DILocation(line: 1203, column: 23, scope: !5005)
!5007 = !DILocation(line: 1203, column: 26, scope: !5005)
!5008 = !DILocation(line: 1203, column: 47, scope: !5005)
!5009 = !DILocation(line: 1203, column: 9, scope: !5005)
!5010 = !DILocation(line: 1204, column: 33, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5002, file: !1801, line: 1203, column: 53)
!5012 = !DILocation(line: 1204, column: 36, scope: !5011)
!5013 = !DILocation(line: 1204, column: 50, scope: !5011)
!5014 = !DILocation(line: 1204, column: 53, scope: !5011)
!5015 = !DILocation(line: 1204, column: 48, scope: !5011)
!5016 = !DILocation(line: 1205, column: 60, scope: !5011)
!5017 = !DILocation(line: 1205, column: 44, scope: !5011)
!5018 = !DILocation(line: 1205, column: 47, scope: !5011)
!5019 = !DILocation(line: 1205, column: 68, scope: !5011)
!5020 = !DILocation(line: 1205, column: 40, scope: !5011)
!5021 = !DILocation(line: 1204, column: 68, scope: !5011)
!5022 = !DILocation(line: 1204, column: 9, scope: !5011)
!5023 = !DILocation(line: 1204, column: 12, scope: !5011)
!5024 = !DILocation(line: 1204, column: 30, scope: !5011)
!5025 = !DILocation(line: 1206, column: 5, scope: !5011)
!5026 = !DILocation(line: 1209, column: 16, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1209, column: 5)
!5028 = !DILocation(line: 1209, column: 15, scope: !5027)
!5029 = !DILocation(line: 1209, column: 13, scope: !5027)
!5030 = !DILocation(line: 1209, column: 10, scope: !5027)
!5031 = !DILocation(line: 1209, column: 28, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5033, file: !1801, discriminator: 1)
!5033 = distinct !DILexicalBlock(scope: !5027, file: !1801, line: 1209, column: 5)
!5034 = !DILocation(line: 1209, column: 34, scope: !5032)
!5035 = !DILocation(line: 1209, column: 37, scope: !5032)
!5036 = !DILocation(line: 1209, column: 31, scope: !5032)
!5037 = !DILocation(line: 1209, column: 5, scope: !5032)
!5038 = !DILocation(line: 1210, column: 34, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !1801, line: 1210, column: 13)
!5040 = distinct !DILexicalBlock(scope: !5033, file: !1801, line: 1209, column: 53)
!5041 = !DILocation(line: 1210, column: 13, scope: !5039)
!5042 = !DILocation(line: 1210, column: 29, scope: !5039)
!5043 = !DILocation(line: 1210, column: 16, scope: !5039)
!5044 = !DILocation(line: 1210, column: 38, scope: !5039)
!5045 = !DILocation(line: 1210, column: 13, scope: !5040)
!5046 = !DILocation(line: 1211, column: 40, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5039, file: !1801, line: 1210, column: 44)
!5048 = !DILocation(line: 1211, column: 31, scope: !5047)
!5049 = !DILocation(line: 1211, column: 52, scope: !5047)
!5050 = !DILocation(line: 1211, column: 51, scope: !5047)
!5051 = !DILocation(line: 1211, column: 48, scope: !5047)
!5052 = !DILocation(line: 1211, column: 22, scope: !5047)
!5053 = !DILocation(line: 1211, column: 13, scope: !5047)
!5054 = !DILocation(line: 1211, column: 16, scope: !5047)
!5055 = !DILocation(line: 1211, column: 29, scope: !5047)
!5056 = !DILocation(line: 1212, column: 34, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5047, file: !1801, line: 1212, column: 17)
!5058 = !DILocation(line: 1212, column: 37, scope: !5057)
!5059 = !DILocation(line: 1212, column: 63, scope: !5057)
!5060 = !DILocation(line: 1212, column: 42, scope: !5057)
!5061 = !DILocation(line: 1212, column: 58, scope: !5057)
!5062 = !DILocation(line: 1212, column: 45, scope: !5057)
!5063 = !DILocation(line: 1213, column: 52, scope: !5057)
!5064 = !DILocation(line: 1213, column: 34, scope: !5057)
!5065 = !DILocation(line: 1213, column: 37, scope: !5057)
!5066 = !DILocation(line: 1213, column: 66, scope: !5057)
!5067 = !DILocation(line: 1213, column: 57, scope: !5057)
!5068 = !DILocation(line: 1213, column: 60, scope: !5057)
!5069 = !DILocation(line: 1214, column: 62, scope: !5057)
!5070 = !DILocation(line: 1214, column: 48, scope: !5057)
!5071 = !DILocation(line: 1214, column: 51, scope: !5057)
!5072 = !DILocation(line: 1214, column: 68, scope: !5057)
!5073 = !DILocation(line: 1214, column: 67, scope: !5057)
!5074 = !DILocation(line: 1214, column: 66, scope: !5057)
!5075 = !DILocation(line: 1214, column: 65, scope: !5057)
!5076 = !DILocation(line: 1214, column: 35, scope: !5057)
!5077 = !DILocation(line: 1214, column: 44, scope: !5057)
!5078 = !DILocation(line: 1214, column: 38, scope: !5057)
!5079 = !DILocation(line: 1212, column: 17, scope: !5057)
!5080 = !DILocation(line: 1212, column: 17, scope: !5047)
!5081 = !DILocation(line: 1215, column: 17, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5057, file: !1801, line: 1214, column: 74)
!5083 = !DILocation(line: 1217, column: 17, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5047, file: !1801, line: 1217, column: 17)
!5085 = !DILocation(line: 1217, column: 20, scope: !5084)
!5086 = !DILocation(line: 1217, column: 25, scope: !5084)
!5087 = !DILocation(line: 1217, column: 28, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !5084, file: !1801, discriminator: 1)
!5089 = !DILocation(line: 1217, column: 34, scope: !5088)
!5090 = !DILocation(line: 1217, column: 37, scope: !5088)
!5091 = !DILocation(line: 1217, column: 31, scope: !5088)
!5092 = !DILocation(line: 1217, column: 17, scope: !5088)
!5093 = !DILocation(line: 1218, column: 27, scope: !5084)
!5094 = !DILocation(line: 1218, column: 17, scope: !5084)
!5095 = !DILocation(line: 1219, column: 9, scope: !5047)
!5096 = !DILocation(line: 1220, column: 5, scope: !5040)
!5097 = !DILocation(line: 1209, column: 49, scope: !5098)
!5098 = !DILexicalBlockFile(scope: !5033, file: !1801, discriminator: 2)
!5099 = !DILocation(line: 1209, column: 5, scope: !5098)
!5100 = distinct !{!5100, !5101}
!5101 = !DILocation(line: 1209, column: 5, scope: !4448)
!5102 = !DILocation(line: 1223, column: 9, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1223, column: 9)
!5104 = !DILocation(line: 1223, column: 12, scope: !5103)
!5105 = !DILocation(line: 1223, column: 9, scope: !4448)
!5106 = !DILocation(line: 1224, column: 23, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !1801, line: 1224, column: 13)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !1801, line: 1223, column: 35)
!5109 = !DILocation(line: 1224, column: 13, scope: !5107)
!5110 = !DILocation(line: 1224, column: 13, scope: !5108)
!5111 = !DILocation(line: 1225, column: 77, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5107, file: !1801, line: 1224, column: 29)
!5113 = !DILocation(line: 1225, column: 68, scope: !5112)
!5114 = !DILocation(line: 1225, column: 46, scope: !5112)
!5115 = !DILocation(line: 1225, column: 89, scope: !5112)
!5116 = !DILocation(line: 1225, column: 92, scope: !5112)
!5117 = !DILocation(line: 1225, column: 109, scope: !5112)
!5118 = !DILocation(line: 1225, column: 86, scope: !5112)
!5119 = !DILocation(line: 1225, column: 13, scope: !5112)
!5120 = !DILocation(line: 1225, column: 16, scope: !5112)
!5121 = !DILocation(line: 1225, column: 33, scope: !5112)
!5122 = !DILocation(line: 1225, column: 44, scope: !5112)
!5123 = !DILocation(line: 1226, column: 77, scope: !5112)
!5124 = !DILocation(line: 1226, column: 68, scope: !5112)
!5125 = !DILocation(line: 1226, column: 46, scope: !5112)
!5126 = !DILocation(line: 1226, column: 89, scope: !5112)
!5127 = !DILocation(line: 1226, column: 92, scope: !5112)
!5128 = !DILocation(line: 1226, column: 109, scope: !5112)
!5129 = !DILocation(line: 1226, column: 86, scope: !5112)
!5130 = !DILocation(line: 1226, column: 13, scope: !5112)
!5131 = !DILocation(line: 1226, column: 16, scope: !5112)
!5132 = !DILocation(line: 1226, column: 33, scope: !5112)
!5133 = !DILocation(line: 1226, column: 44, scope: !5112)
!5134 = !DILocation(line: 1227, column: 75, scope: !5112)
!5135 = !DILocation(line: 1227, column: 66, scope: !5112)
!5136 = !DILocation(line: 1227, column: 45, scope: !5112)
!5137 = !DILocation(line: 1227, column: 13, scope: !5112)
!5138 = !DILocation(line: 1227, column: 16, scope: !5112)
!5139 = !DILocation(line: 1227, column: 33, scope: !5112)
!5140 = !DILocation(line: 1227, column: 43, scope: !5112)
!5141 = !DILocation(line: 1228, column: 77, scope: !5112)
!5142 = !DILocation(line: 1228, column: 68, scope: !5112)
!5143 = !DILocation(line: 1228, column: 46, scope: !5112)
!5144 = !DILocation(line: 1228, column: 13, scope: !5112)
!5145 = !DILocation(line: 1228, column: 16, scope: !5112)
!5146 = !DILocation(line: 1228, column: 33, scope: !5112)
!5147 = !DILocation(line: 1228, column: 44, scope: !5112)
!5148 = !DILocation(line: 1229, column: 67, scope: !5112)
!5149 = !DILocation(line: 1229, column: 58, scope: !5112)
!5150 = !DILocation(line: 1229, column: 41, scope: !5112)
!5151 = !DILocation(line: 1229, column: 13, scope: !5112)
!5152 = !DILocation(line: 1229, column: 16, scope: !5112)
!5153 = !DILocation(line: 1229, column: 33, scope: !5112)
!5154 = !DILocation(line: 1229, column: 39, scope: !5112)
!5155 = !DILocation(line: 1230, column: 24, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5112, file: !1801, line: 1230, column: 13)
!5157 = !DILocation(line: 1230, column: 23, scope: !5156)
!5158 = !DILocation(line: 1230, column: 21, scope: !5156)
!5159 = !DILocation(line: 1230, column: 18, scope: !5156)
!5160 = !DILocation(line: 1230, column: 36, scope: !5161)
!5161 = !DILexicalBlockFile(scope: !5162, file: !1801, discriminator: 1)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !1801, line: 1230, column: 13)
!5163 = !DILocation(line: 1230, column: 42, scope: !5161)
!5164 = !DILocation(line: 1230, column: 45, scope: !5161)
!5165 = !DILocation(line: 1230, column: 39, scope: !5161)
!5166 = !DILocation(line: 1230, column: 13, scope: !5161)
!5167 = !DILocation(line: 1231, column: 59, scope: !5162)
!5168 = !DILocation(line: 1231, column: 42, scope: !5162)
!5169 = !DILocation(line: 1231, column: 41, scope: !5162)
!5170 = !DILocation(line: 1231, column: 64, scope: !5162)
!5171 = !DILocation(line: 1231, column: 90, scope: !5161)
!5172 = !DILocation(line: 1231, column: 73, scope: !5161)
!5173 = !DILocation(line: 1231, column: 72, scope: !5161)
!5174 = !DILocation(line: 1231, column: 41, scope: !5161)
!5175 = !DILocation(line: 1231, column: 41, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !5162, file: !1801, discriminator: 2)
!5177 = !DILocation(line: 1231, column: 41, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !5162, file: !1801, discriminator: 3)
!5179 = !DILocation(line: 1231, column: 40, scope: !5178)
!5180 = !DILocation(line: 1231, column: 34, scope: !5178)
!5181 = !DILocation(line: 1231, column: 17, scope: !5178)
!5182 = !DILocation(line: 1231, column: 38, scope: !5178)
!5183 = !DILocation(line: 1230, column: 57, scope: !5176)
!5184 = !DILocation(line: 1230, column: 13, scope: !5176)
!5185 = distinct !{!5185, !5186}
!5186 = !DILocation(line: 1230, column: 13, scope: !5112)
!5187 = !DILocation(line: 1232, column: 9, scope: !5112)
!5188 = !DILocation(line: 1232, column: 21, scope: !5189)
!5189 = !DILexicalBlockFile(scope: !5190, file: !1801, discriminator: 1)
!5190 = distinct !DILexicalBlock(scope: !5107, file: !1801, line: 1232, column: 20)
!5191 = !DILocation(line: 1232, column: 20, scope: !5189)
!5192 = !DILocation(line: 1233, column: 20, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !1801, line: 1232, column: 26)
!5194 = !DILocation(line: 1233, column: 23, scope: !5193)
!5195 = !DILocation(line: 1233, column: 13, scope: !5193)
!5196 = !DILocation(line: 1235, column: 13, scope: !5193)
!5197 = !DILocation(line: 1237, column: 5, scope: !5108)
!5198 = !DILocation(line: 1240, column: 10, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1240, column: 9)
!5200 = !DILocation(line: 1240, column: 13, scope: !5199)
!5201 = !DILocation(line: 1240, column: 18, scope: !5199)
!5202 = !DILocation(line: 1240, column: 22, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5199, file: !1801, discriminator: 1)
!5204 = !DILocation(line: 1240, column: 9, scope: !5203)
!5205 = !DILocation(line: 1241, column: 13, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !1801, line: 1241, column: 13)
!5207 = distinct !DILexicalBlock(scope: !5199, file: !1801, line: 1240, column: 27)
!5208 = !DILocation(line: 1241, column: 16, scope: !5206)
!5209 = !DILocation(line: 1241, column: 36, scope: !5206)
!5210 = !DILocation(line: 1241, column: 49, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !5206, file: !1801, discriminator: 1)
!5212 = !DILocation(line: 1241, column: 39, scope: !5211)
!5213 = !DILocation(line: 1241, column: 13, scope: !5211)
!5214 = !DILocalVariable(name: "snr", scope: !5215, file: !1801, line: 1242, type: !1015)
!5215 = distinct !DILexicalBlock(scope: !5206, file: !1801, line: 1241, column: 55)
!5216 = !DILocation(line: 1242, column: 17, scope: !5215)
!5217 = !DILocalVariable(name: "csnr", scope: !5215, file: !1801, line: 1243, type: !1015)
!5218 = !DILocation(line: 1243, column: 17, scope: !5215)
!5219 = !DILocation(line: 1244, column: 30, scope: !5215)
!5220 = !DILocation(line: 1244, column: 21, scope: !5215)
!5221 = !DILocation(line: 1244, column: 38, scope: !5215)
!5222 = !DILocation(line: 1244, column: 44, scope: !5215)
!5223 = !DILocation(line: 1244, column: 18, scope: !5215)
!5224 = !DILocation(line: 1245, column: 28, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5215, file: !1801, line: 1245, column: 13)
!5226 = !DILocation(line: 1245, column: 27, scope: !5225)
!5227 = !DILocation(line: 1245, column: 25, scope: !5225)
!5228 = !DILocation(line: 1245, column: 20, scope: !5225)
!5229 = !DILocation(line: 1245, column: 18, scope: !5225)
!5230 = !DILocation(line: 1245, column: 40, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5232, file: !1801, discriminator: 1)
!5232 = distinct !DILexicalBlock(scope: !5225, file: !1801, line: 1245, column: 13)
!5233 = !DILocation(line: 1245, column: 46, scope: !5231)
!5234 = !DILocation(line: 1245, column: 49, scope: !5231)
!5235 = !DILocation(line: 1245, column: 43, scope: !5231)
!5236 = !DILocation(line: 1245, column: 13, scope: !5231)
!5237 = !DILocation(line: 1247, column: 21, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !1801, line: 1247, column: 21)
!5239 = distinct !DILexicalBlock(scope: !5232, file: !1801, line: 1245, column: 65)
!5240 = !DILocation(line: 1247, column: 27, scope: !5238)
!5241 = !DILocation(line: 1247, column: 24, scope: !5238)
!5242 = !DILocation(line: 1247, column: 29, scope: !5238)
!5243 = !DILocation(line: 1247, column: 32, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !5238, file: !1801, discriminator: 1)
!5245 = !DILocation(line: 1247, column: 35, scope: !5244)
!5246 = !DILocation(line: 1247, column: 55, scope: !5244)
!5247 = !DILocation(line: 1247, column: 21, scope: !5244)
!5248 = !DILocation(line: 1248, column: 28, scope: !5238)
!5249 = !DILocation(line: 1248, column: 44, scope: !5238)
!5250 = !DILocation(line: 1248, column: 35, scope: !5238)
!5251 = !DILocation(line: 1248, column: 33, scope: !5238)
!5252 = !DILocation(line: 1248, column: 53, scope: !5238)
!5253 = !DILocation(line: 1248, column: 25, scope: !5238)
!5254 = !DILocation(line: 1248, column: 21, scope: !5238)
!5255 = !DILocation(line: 1250, column: 21, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5239, file: !1801, line: 1250, column: 21)
!5257 = !DILocation(line: 1250, column: 25, scope: !5256)
!5258 = !DILocation(line: 1250, column: 42, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5256, file: !1801, discriminator: 1)
!5260 = !DILocation(line: 1250, column: 28, scope: !5259)
!5261 = !DILocation(line: 1250, column: 31, scope: !5259)
!5262 = !DILocation(line: 1250, column: 49, scope: !5259)
!5263 = !DILocation(line: 1250, column: 46, scope: !5259)
!5264 = !DILocation(line: 1250, column: 21, scope: !5259)
!5265 = !DILocation(line: 1251, column: 63, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5256, file: !1801, line: 1250, column: 54)
!5267 = !DILocation(line: 1251, column: 46, scope: !5266)
!5268 = !DILocation(line: 1251, column: 45, scope: !5266)
!5269 = !DILocation(line: 1251, column: 68, scope: !5266)
!5270 = !DILocation(line: 1251, column: 94, scope: !5271)
!5271 = !DILexicalBlockFile(scope: !5266, file: !1801, discriminator: 1)
!5272 = !DILocation(line: 1251, column: 77, scope: !5271)
!5273 = !DILocation(line: 1251, column: 76, scope: !5271)
!5274 = !DILocation(line: 1251, column: 45, scope: !5271)
!5275 = !DILocation(line: 1251, column: 45, scope: !5276)
!5276 = !DILexicalBlockFile(scope: !5266, file: !1801, discriminator: 2)
!5277 = !DILocation(line: 1251, column: 45, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5266, file: !1801, discriminator: 3)
!5279 = !DILocation(line: 1251, column: 44, scope: !5278)
!5280 = !DILocation(line: 1251, column: 38, scope: !5278)
!5281 = !DILocation(line: 1251, column: 21, scope: !5278)
!5282 = !DILocation(line: 1251, column: 42, scope: !5278)
!5283 = !DILocation(line: 1252, column: 17, scope: !5266)
!5284 = !DILocation(line: 1253, column: 37, scope: !5239)
!5285 = !DILocation(line: 1253, column: 31, scope: !5239)
!5286 = !DILocation(line: 1253, column: 17, scope: !5239)
!5287 = !DILocation(line: 1253, column: 20, scope: !5239)
!5288 = !DILocation(line: 1253, column: 35, scope: !5239)
!5289 = !DILocation(line: 1256, column: 22, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5239, file: !1801, line: 1256, column: 21)
!5291 = !DILocation(line: 1256, column: 25, scope: !5290)
!5292 = !DILocation(line: 1256, column: 21, scope: !5239)
!5293 = !DILocalVariable(name: "prev", scope: !5294, file: !1801, line: 1257, type: !1015)
!5294 = distinct !DILexicalBlock(scope: !5290, file: !1801, line: 1256, column: 31)
!5295 = !DILocation(line: 1257, column: 25, scope: !5294)
!5296 = !DILocation(line: 1257, column: 45, scope: !5294)
!5297 = !DILocation(line: 1257, column: 32, scope: !5294)
!5298 = !DILocation(line: 1257, column: 35, scope: !5294)
!5299 = !DILocation(line: 1258, column: 70, scope: !5294)
!5300 = !DILocation(line: 1258, column: 61, scope: !5294)
!5301 = !DILocation(line: 1258, column: 40, scope: !5294)
!5302 = !DILocation(line: 1258, column: 34, scope: !5294)
!5303 = !DILocation(line: 1258, column: 21, scope: !5294)
!5304 = !DILocation(line: 1258, column: 24, scope: !5294)
!5305 = !DILocation(line: 1258, column: 38, scope: !5294)
!5306 = !DILocation(line: 1260, column: 25, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5294, file: !1801, line: 1260, column: 25)
!5308 = !DILocation(line: 1260, column: 29, scope: !5307)
!5309 = !DILocation(line: 1260, column: 32, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !5307, file: !1801, discriminator: 1)
!5311 = !DILocation(line: 1260, column: 53, scope: !5310)
!5312 = !DILocation(line: 1260, column: 40, scope: !5310)
!5313 = !DILocation(line: 1260, column: 43, scope: !5310)
!5314 = !DILocation(line: 1260, column: 37, scope: !5310)
!5315 = !DILocation(line: 1260, column: 25, scope: !5310)
!5316 = !DILocation(line: 1261, column: 67, scope: !5307)
!5317 = !DILocation(line: 1261, column: 50, scope: !5307)
!5318 = !DILocation(line: 1261, column: 49, scope: !5307)
!5319 = !DILocation(line: 1261, column: 72, scope: !5307)
!5320 = !DILocation(line: 1261, column: 98, scope: !5310)
!5321 = !DILocation(line: 1261, column: 81, scope: !5310)
!5322 = !DILocation(line: 1261, column: 80, scope: !5310)
!5323 = !DILocation(line: 1261, column: 49, scope: !5310)
!5324 = !DILocation(line: 1261, column: 49, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !5307, file: !1801, discriminator: 2)
!5326 = !DILocation(line: 1261, column: 49, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !5307, file: !1801, discriminator: 3)
!5328 = !DILocation(line: 1261, column: 48, scope: !5327)
!5329 = !DILocation(line: 1261, column: 42, scope: !5327)
!5330 = !DILocation(line: 1261, column: 25, scope: !5327)
!5331 = !DILocation(line: 1261, column: 46, scope: !5327)
!5332 = !DILocation(line: 1262, column: 17, scope: !5294)
!5333 = !DILocation(line: 1263, column: 13, scope: !5239)
!5334 = !DILocation(line: 1245, column: 61, scope: !5335)
!5335 = !DILexicalBlockFile(scope: !5232, file: !1801, discriminator: 2)
!5336 = !DILocation(line: 1245, column: 13, scope: !5335)
!5337 = distinct !{!5337, !5338}
!5338 = !DILocation(line: 1245, column: 13, scope: !5215)
!5339 = !DILocation(line: 1264, column: 9, scope: !5215)
!5340 = !DILocation(line: 1264, column: 21, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5342, file: !1801, discriminator: 1)
!5342 = distinct !DILexicalBlock(scope: !5206, file: !1801, line: 1264, column: 20)
!5343 = !DILocation(line: 1264, column: 24, scope: !5341)
!5344 = !DILocation(line: 1264, column: 29, scope: !5341)
!5345 = !DILocation(line: 1264, column: 33, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !5342, file: !1801, discriminator: 2)
!5347 = !DILocation(line: 1264, column: 20, scope: !5346)
!5348 = !DILocation(line: 1265, column: 20, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5342, file: !1801, line: 1264, column: 38)
!5350 = !DILocation(line: 1265, column: 23, scope: !5349)
!5351 = !DILocation(line: 1265, column: 13, scope: !5349)
!5352 = !DILocation(line: 1266, column: 13, scope: !5349)
!5353 = !DILocation(line: 1268, column: 5, scope: !5207)
!5354 = !DILocation(line: 1271, column: 9, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1271, column: 9)
!5356 = !DILocation(line: 1271, column: 12, scope: !5355)
!5357 = !DILocation(line: 1271, column: 29, scope: !5355)
!5358 = !DILocation(line: 1271, column: 42, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5355, file: !1801, discriminator: 1)
!5360 = !DILocation(line: 1271, column: 32, scope: !5359)
!5361 = !DILocation(line: 1271, column: 9, scope: !5359)
!5362 = !DILocation(line: 1272, column: 20, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !1801, line: 1272, column: 9)
!5364 = distinct !DILexicalBlock(scope: !5355, file: !1801, line: 1271, column: 48)
!5365 = !DILocation(line: 1272, column: 19, scope: !5363)
!5366 = !DILocation(line: 1272, column: 17, scope: !5363)
!5367 = !DILocation(line: 1272, column: 14, scope: !5363)
!5368 = !DILocation(line: 1272, column: 32, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5370, file: !1801, discriminator: 1)
!5370 = distinct !DILexicalBlock(scope: !5363, file: !1801, line: 1272, column: 9)
!5371 = !DILocation(line: 1272, column: 38, scope: !5369)
!5372 = !DILocation(line: 1272, column: 41, scope: !5369)
!5373 = !DILocation(line: 1272, column: 35, scope: !5369)
!5374 = !DILocation(line: 1272, column: 9, scope: !5369)
!5375 = !DILocalVariable(name: "prev", scope: !5376, file: !1801, line: 1273, type: !1015)
!5376 = distinct !DILexicalBlock(scope: !5370, file: !1801, line: 1272, column: 57)
!5377 = !DILocation(line: 1273, column: 17, scope: !5376)
!5378 = !DILocation(line: 1273, column: 37, scope: !5376)
!5379 = !DILocation(line: 1273, column: 24, scope: !5376)
!5380 = !DILocation(line: 1273, column: 27, scope: !5376)
!5381 = !DILocation(line: 1274, column: 62, scope: !5376)
!5382 = !DILocation(line: 1274, column: 53, scope: !5376)
!5383 = !DILocation(line: 1274, column: 32, scope: !5376)
!5384 = !DILocation(line: 1274, column: 26, scope: !5376)
!5385 = !DILocation(line: 1274, column: 13, scope: !5376)
!5386 = !DILocation(line: 1274, column: 16, scope: !5376)
!5387 = !DILocation(line: 1274, column: 30, scope: !5376)
!5388 = !DILocation(line: 1276, column: 17, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5376, file: !1801, line: 1276, column: 17)
!5390 = !DILocation(line: 1276, column: 21, scope: !5389)
!5391 = !DILocation(line: 1276, column: 24, scope: !5392)
!5392 = !DILexicalBlockFile(scope: !5389, file: !1801, discriminator: 1)
!5393 = !DILocation(line: 1276, column: 45, scope: !5392)
!5394 = !DILocation(line: 1276, column: 32, scope: !5392)
!5395 = !DILocation(line: 1276, column: 35, scope: !5392)
!5396 = !DILocation(line: 1276, column: 29, scope: !5392)
!5397 = !DILocation(line: 1276, column: 17, scope: !5392)
!5398 = !DILocation(line: 1277, column: 59, scope: !5389)
!5399 = !DILocation(line: 1277, column: 42, scope: !5389)
!5400 = !DILocation(line: 1277, column: 41, scope: !5389)
!5401 = !DILocation(line: 1277, column: 64, scope: !5389)
!5402 = !DILocation(line: 1277, column: 90, scope: !5392)
!5403 = !DILocation(line: 1277, column: 73, scope: !5392)
!5404 = !DILocation(line: 1277, column: 72, scope: !5392)
!5405 = !DILocation(line: 1277, column: 41, scope: !5392)
!5406 = !DILocation(line: 1277, column: 41, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5389, file: !1801, discriminator: 2)
!5408 = !DILocation(line: 1277, column: 41, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5389, file: !1801, discriminator: 3)
!5410 = !DILocation(line: 1277, column: 40, scope: !5409)
!5411 = !DILocation(line: 1277, column: 34, scope: !5409)
!5412 = !DILocation(line: 1277, column: 17, scope: !5409)
!5413 = !DILocation(line: 1277, column: 38, scope: !5409)
!5414 = !DILocation(line: 1278, column: 9, scope: !5376)
!5415 = !DILocation(line: 1272, column: 53, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5370, file: !1801, discriminator: 2)
!5417 = !DILocation(line: 1272, column: 9, scope: !5416)
!5418 = distinct !{!5418, !5419}
!5419 = !DILocation(line: 1272, column: 9, scope: !5364)
!5420 = !DILocation(line: 1279, column: 5, scope: !5364)
!5421 = !DILocation(line: 1279, column: 16, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5423, file: !1801, discriminator: 1)
!5423 = distinct !DILexicalBlock(scope: !5355, file: !1801, line: 1279, column: 16)
!5424 = !DILocation(line: 1279, column: 19, scope: !5422)
!5425 = !DILocation(line: 1279, column: 24, scope: !5422)
!5426 = !DILocation(line: 1279, column: 28, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !5423, file: !1801, discriminator: 2)
!5428 = !DILocation(line: 1279, column: 16, scope: !5427)
!5429 = !DILocation(line: 1280, column: 20, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !1801, line: 1280, column: 9)
!5431 = distinct !DILexicalBlock(scope: !5423, file: !1801, line: 1279, column: 33)
!5432 = !DILocation(line: 1280, column: 19, scope: !5430)
!5433 = !DILocation(line: 1280, column: 17, scope: !5430)
!5434 = !DILocation(line: 1280, column: 14, scope: !5430)
!5435 = !DILocation(line: 1280, column: 32, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5437, file: !1801, discriminator: 1)
!5437 = distinct !DILexicalBlock(scope: !5430, file: !1801, line: 1280, column: 9)
!5438 = !DILocation(line: 1280, column: 38, scope: !5436)
!5439 = !DILocation(line: 1280, column: 41, scope: !5436)
!5440 = !DILocation(line: 1280, column: 35, scope: !5436)
!5441 = !DILocation(line: 1280, column: 9, scope: !5436)
!5442 = !DILocation(line: 1281, column: 32, scope: !5437)
!5443 = !DILocation(line: 1281, column: 26, scope: !5437)
!5444 = !DILocation(line: 1281, column: 13, scope: !5437)
!5445 = !DILocation(line: 1281, column: 16, scope: !5437)
!5446 = !DILocation(line: 1281, column: 30, scope: !5437)
!5447 = !DILocation(line: 1280, column: 53, scope: !5448)
!5448 = !DILexicalBlockFile(scope: !5437, file: !1801, discriminator: 2)
!5449 = !DILocation(line: 1280, column: 9, scope: !5448)
!5450 = distinct !{!5450, !5451}
!5451 = !DILocation(line: 1280, column: 9, scope: !5431)
!5452 = !DILocation(line: 1282, column: 5, scope: !5431)
!5453 = !DILocation(line: 1285, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1285, column: 9)
!5455 = !DILocation(line: 1285, column: 12, scope: !5454)
!5456 = !DILocation(line: 1285, column: 23, scope: !5454)
!5457 = !DILocation(line: 1285, column: 54, scope: !5454)
!5458 = !DILocation(line: 1285, column: 67, scope: !5459)
!5459 = !DILexicalBlockFile(scope: !5454, file: !1801, discriminator: 1)
!5460 = !DILocation(line: 1285, column: 57, scope: !5459)
!5461 = !DILocation(line: 1285, column: 9, scope: !5459)
!5462 = !DILocation(line: 1286, column: 19, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5454, file: !1801, line: 1285, column: 73)
!5464 = !DILocation(line: 1286, column: 9, scope: !5463)
!5465 = !DILocation(line: 1287, column: 5, scope: !5463)
!5466 = !DILocation(line: 1290, column: 9, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1290, column: 9)
!5468 = !DILocation(line: 1290, column: 9, scope: !4448)
!5469 = !DILocation(line: 1291, column: 13, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !1801, line: 1291, column: 13)
!5471 = distinct !DILexicalBlock(scope: !5467, file: !1801, line: 1290, column: 21)
!5472 = !DILocation(line: 1291, column: 16, scope: !5470)
!5473 = !DILocation(line: 1291, column: 31, scope: !5470)
!5474 = !DILocation(line: 1291, column: 44, scope: !5475)
!5475 = !DILexicalBlockFile(scope: !5470, file: !1801, discriminator: 1)
!5476 = !DILocation(line: 1291, column: 34, scope: !5475)
!5477 = !DILocation(line: 1291, column: 13, scope: !5475)
!5478 = !DILocalVariable(name: "fl", scope: !5479, file: !1801, line: 1292, type: !1015)
!5479 = distinct !DILexicalBlock(scope: !5470, file: !1801, line: 1291, column: 50)
!5480 = !DILocation(line: 1292, column: 17, scope: !5479)
!5481 = !DILocation(line: 1292, column: 31, scope: !5479)
!5482 = !DILocation(line: 1292, column: 22, scope: !5479)
!5483 = !DILocalVariable(name: "sl", scope: !5479, file: !1801, line: 1293, type: !1015)
!5484 = !DILocation(line: 1293, column: 17, scope: !5479)
!5485 = !DILocation(line: 1293, column: 31, scope: !5479)
!5486 = !DILocation(line: 1293, column: 22, scope: !5479)
!5487 = !DILocation(line: 1296, column: 17, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5479, file: !1801, line: 1296, column: 17)
!5489 = !DILocation(line: 1296, column: 21, scope: !5488)
!5490 = !DILocation(line: 1296, column: 25, scope: !5491)
!5491 = !DILexicalBlockFile(scope: !5488, file: !1801, discriminator: 1)
!5492 = !DILocation(line: 1296, column: 31, scope: !5491)
!5493 = !DILocation(line: 1296, column: 34, scope: !5491)
!5494 = !DILocation(line: 1296, column: 51, scope: !5491)
!5495 = !DILocation(line: 1296, column: 28, scope: !5491)
!5496 = !DILocation(line: 1296, column: 65, scope: !5491)
!5497 = !DILocation(line: 1297, column: 17, scope: !5488)
!5498 = !DILocation(line: 1297, column: 23, scope: !5488)
!5499 = !DILocation(line: 1297, column: 26, scope: !5488)
!5500 = !DILocation(line: 1297, column: 43, scope: !5488)
!5501 = !DILocation(line: 1297, column: 20, scope: !5488)
!5502 = !DILocation(line: 1296, column: 17, scope: !5503)
!5503 = !DILexicalBlockFile(scope: !5479, file: !1801, discriminator: 2)
!5504 = !DILocation(line: 1298, column: 41, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5488, file: !1801, line: 1297, column: 59)
!5506 = !DILocation(line: 1298, column: 40, scope: !5505)
!5507 = !DILocation(line: 1298, column: 62, scope: !5505)
!5508 = !DILocation(line: 1298, column: 71, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5505, file: !1801, discriminator: 1)
!5510 = !DILocation(line: 1298, column: 70, scope: !5509)
!5511 = !DILocation(line: 1298, column: 40, scope: !5509)
!5512 = !DILocation(line: 1298, column: 40, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5505, file: !1801, discriminator: 2)
!5514 = !DILocation(line: 1298, column: 40, scope: !5515)
!5515 = !DILexicalBlockFile(scope: !5505, file: !1801, discriminator: 3)
!5516 = !DILocation(line: 1298, column: 39, scope: !5515)
!5517 = !DILocation(line: 1298, column: 17, scope: !5515)
!5518 = !DILocation(line: 1298, column: 37, scope: !5515)
!5519 = !DILocation(line: 1299, column: 13, scope: !5505)
!5520 = !DILocation(line: 1300, column: 49, scope: !5479)
!5521 = !DILocation(line: 1300, column: 13, scope: !5479)
!5522 = !DILocation(line: 1300, column: 16, scope: !5479)
!5523 = !DILocation(line: 1300, column: 33, scope: !5479)
!5524 = !DILocation(line: 1300, column: 47, scope: !5479)
!5525 = !DILocation(line: 1301, column: 49, scope: !5479)
!5526 = !DILocation(line: 1301, column: 13, scope: !5479)
!5527 = !DILocation(line: 1301, column: 16, scope: !5479)
!5528 = !DILocation(line: 1301, column: 33, scope: !5479)
!5529 = !DILocation(line: 1301, column: 47, scope: !5479)
!5530 = !DILocation(line: 1302, column: 9, scope: !5479)
!5531 = !DILocation(line: 1302, column: 21, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !5533, file: !1801, discriminator: 1)
!5533 = distinct !DILexicalBlock(scope: !5470, file: !1801, line: 1302, column: 20)
!5534 = !DILocation(line: 1302, column: 24, scope: !5532)
!5535 = !DILocation(line: 1302, column: 29, scope: !5532)
!5536 = !DILocation(line: 1302, column: 33, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5533, file: !1801, discriminator: 2)
!5538 = !DILocation(line: 1302, column: 20, scope: !5537)
!5539 = !DILocation(line: 1303, column: 20, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5533, file: !1801, line: 1302, column: 38)
!5541 = !DILocation(line: 1303, column: 23, scope: !5540)
!5542 = !DILocation(line: 1303, column: 13, scope: !5540)
!5543 = !DILocation(line: 1305, column: 13, scope: !5540)
!5544 = !DILocation(line: 1307, column: 9, scope: !5471)
!5545 = !DILocation(line: 1307, column: 12, scope: !5471)
!5546 = !DILocation(line: 1307, column: 27, scope: !5471)
!5547 = !DILocation(line: 1308, column: 5, scope: !5471)
!5548 = !DILocation(line: 1311, column: 9, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1311, column: 9)
!5550 = !DILocation(line: 1311, column: 12, scope: !5549)
!5551 = !DILocation(line: 1311, column: 23, scope: !5549)
!5552 = !DILocation(line: 1311, column: 36, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5549, file: !1801, discriminator: 1)
!5554 = !DILocation(line: 1311, column: 26, scope: !5553)
!5555 = !DILocation(line: 1311, column: 9, scope: !5553)
!5556 = !DILocation(line: 1313, column: 20, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !1801, line: 1313, column: 9)
!5558 = distinct !DILexicalBlock(scope: !5549, file: !1801, line: 1311, column: 42)
!5559 = !DILocation(line: 1313, column: 19, scope: !5557)
!5560 = !DILocation(line: 1313, column: 17, scope: !5557)
!5561 = !DILocation(line: 1313, column: 14, scope: !5557)
!5562 = !DILocation(line: 1313, column: 32, scope: !5563)
!5563 = !DILexicalBlockFile(scope: !5564, file: !1801, discriminator: 1)
!5564 = distinct !DILexicalBlock(scope: !5557, file: !1801, line: 1313, column: 9)
!5565 = !DILocation(line: 1313, column: 38, scope: !5563)
!5566 = !DILocation(line: 1313, column: 35, scope: !5563)
!5567 = !DILocation(line: 1313, column: 9, scope: !5563)
!5568 = !DILocation(line: 1314, column: 40, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !1801, line: 1313, column: 58)
!5570 = !DILocation(line: 1314, column: 31, scope: !5569)
!5571 = !DILocation(line: 1314, column: 25, scope: !5569)
!5572 = !DILocation(line: 1314, column: 13, scope: !5569)
!5573 = !DILocation(line: 1314, column: 16, scope: !5569)
!5574 = !DILocation(line: 1314, column: 29, scope: !5569)
!5575 = !DILocation(line: 1315, column: 29, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5569, file: !1801, line: 1315, column: 17)
!5577 = !DILocation(line: 1315, column: 17, scope: !5576)
!5578 = !DILocation(line: 1315, column: 20, scope: !5576)
!5579 = !DILocation(line: 1315, column: 33, scope: !5576)
!5580 = !DILocation(line: 1315, column: 17, scope: !5569)
!5581 = !DILocation(line: 1316, column: 24, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5576, file: !1801, line: 1315, column: 50)
!5583 = !DILocation(line: 1316, column: 27, scope: !5582)
!5584 = !DILocation(line: 1316, column: 17, scope: !5582)
!5585 = !DILocation(line: 1317, column: 17, scope: !5582)
!5586 = !DILocation(line: 1319, column: 55, scope: !5569)
!5587 = !DILocation(line: 1319, column: 38, scope: !5569)
!5588 = !DILocation(line: 1319, column: 37, scope: !5569)
!5589 = !DILocation(line: 1319, column: 60, scope: !5569)
!5590 = !DILocation(line: 1319, column: 86, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !5569, file: !1801, discriminator: 1)
!5592 = !DILocation(line: 1319, column: 69, scope: !5591)
!5593 = !DILocation(line: 1319, column: 68, scope: !5591)
!5594 = !DILocation(line: 1319, column: 37, scope: !5591)
!5595 = !DILocation(line: 1319, column: 37, scope: !5596)
!5596 = !DILexicalBlockFile(scope: !5569, file: !1801, discriminator: 2)
!5597 = !DILocation(line: 1319, column: 37, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5569, file: !1801, discriminator: 3)
!5599 = !DILocation(line: 1319, column: 36, scope: !5598)
!5600 = !DILocation(line: 1319, column: 30, scope: !5598)
!5601 = !DILocation(line: 1319, column: 13, scope: !5598)
!5602 = !DILocation(line: 1319, column: 34, scope: !5598)
!5603 = !DILocation(line: 1320, column: 9, scope: !5569)
!5604 = !DILocation(line: 1313, column: 54, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !5564, file: !1801, discriminator: 2)
!5606 = !DILocation(line: 1313, column: 9, scope: !5605)
!5607 = distinct !{!5607, !5608}
!5608 = !DILocation(line: 1313, column: 9, scope: !5558)
!5609 = !DILocation(line: 1322, column: 20, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5558, file: !1801, line: 1322, column: 9)
!5611 = !DILocation(line: 1322, column: 19, scope: !5610)
!5612 = !DILocation(line: 1322, column: 17, scope: !5610)
!5613 = !DILocation(line: 1322, column: 14, scope: !5610)
!5614 = !DILocation(line: 1322, column: 32, scope: !5615)
!5615 = !DILexicalBlockFile(scope: !5616, file: !1801, discriminator: 1)
!5616 = distinct !DILexicalBlock(scope: !5610, file: !1801, line: 1322, column: 9)
!5617 = !DILocation(line: 1322, column: 38, scope: !5615)
!5618 = !DILocation(line: 1322, column: 35, scope: !5615)
!5619 = !DILocation(line: 1322, column: 9, scope: !5615)
!5620 = !DILocation(line: 1323, column: 29, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !1801, line: 1323, column: 17)
!5622 = distinct !DILexicalBlock(scope: !5616, file: !1801, line: 1322, column: 58)
!5623 = !DILocation(line: 1323, column: 17, scope: !5621)
!5624 = !DILocation(line: 1323, column: 20, scope: !5621)
!5625 = !DILocation(line: 1323, column: 33, scope: !5621)
!5626 = !DILocation(line: 1323, column: 17, scope: !5622)
!5627 = !DILocation(line: 1324, column: 45, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5621, file: !1801, line: 1323, column: 45)
!5629 = !DILocation(line: 1324, column: 36, scope: !5628)
!5630 = !DILocation(line: 1324, column: 53, scope: !5628)
!5631 = !DILocation(line: 1324, column: 30, scope: !5628)
!5632 = !DILocation(line: 1324, column: 17, scope: !5628)
!5633 = !DILocation(line: 1324, column: 20, scope: !5628)
!5634 = !DILocation(line: 1324, column: 34, scope: !5628)
!5635 = !DILocation(line: 1325, column: 26, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5628, file: !1801, line: 1325, column: 17)
!5637 = !DILocation(line: 1325, column: 22, scope: !5636)
!5638 = !DILocation(line: 1325, column: 31, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !5640, file: !1801, discriminator: 1)
!5640 = distinct !DILexicalBlock(scope: !5636, file: !1801, line: 1325, column: 17)
!5641 = !DILocation(line: 1325, column: 50, scope: !5639)
!5642 = !DILocation(line: 1325, column: 37, scope: !5639)
!5643 = !DILocation(line: 1325, column: 40, scope: !5639)
!5644 = !DILocation(line: 1325, column: 35, scope: !5639)
!5645 = !DILocation(line: 1325, column: 17, scope: !5639)
!5646 = !DILocation(line: 1326, column: 56, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5640, file: !1801, line: 1325, column: 62)
!5648 = !DILocation(line: 1326, column: 47, scope: !5647)
!5649 = !DILocation(line: 1326, column: 40, scope: !5647)
!5650 = !DILocation(line: 1326, column: 21, scope: !5647)
!5651 = !DILocation(line: 1326, column: 36, scope: !5647)
!5652 = !DILocation(line: 1326, column: 24, scope: !5647)
!5653 = !DILocation(line: 1326, column: 45, scope: !5647)
!5654 = !DILocation(line: 1327, column: 56, scope: !5647)
!5655 = !DILocation(line: 1327, column: 47, scope: !5647)
!5656 = !DILocation(line: 1327, column: 40, scope: !5647)
!5657 = !DILocation(line: 1327, column: 21, scope: !5647)
!5658 = !DILocation(line: 1327, column: 36, scope: !5647)
!5659 = !DILocation(line: 1327, column: 24, scope: !5647)
!5660 = !DILocation(line: 1327, column: 45, scope: !5647)
!5661 = !DILocation(line: 1328, column: 55, scope: !5647)
!5662 = !DILocation(line: 1328, column: 46, scope: !5647)
!5663 = !DILocation(line: 1328, column: 39, scope: !5647)
!5664 = !DILocation(line: 1328, column: 21, scope: !5647)
!5665 = !DILocation(line: 1328, column: 35, scope: !5647)
!5666 = !DILocation(line: 1328, column: 24, scope: !5647)
!5667 = !DILocation(line: 1328, column: 44, scope: !5647)
!5668 = !DILocation(line: 1329, column: 17, scope: !5647)
!5669 = !DILocation(line: 1325, column: 58, scope: !5670)
!5670 = !DILexicalBlockFile(scope: !5640, file: !1801, discriminator: 2)
!5671 = !DILocation(line: 1325, column: 17, scope: !5670)
!5672 = distinct !{!5672, !5673}
!5673 = !DILocation(line: 1325, column: 17, scope: !5628)
!5674 = !DILocation(line: 1331, column: 59, scope: !5628)
!5675 = !DILocation(line: 1331, column: 42, scope: !5628)
!5676 = !DILocation(line: 1331, column: 41, scope: !5628)
!5677 = !DILocation(line: 1331, column: 64, scope: !5628)
!5678 = !DILocation(line: 1331, column: 90, scope: !5679)
!5679 = !DILexicalBlockFile(scope: !5628, file: !1801, discriminator: 1)
!5680 = !DILocation(line: 1331, column: 73, scope: !5679)
!5681 = !DILocation(line: 1331, column: 72, scope: !5679)
!5682 = !DILocation(line: 1331, column: 41, scope: !5679)
!5683 = !DILocation(line: 1331, column: 41, scope: !5684)
!5684 = !DILexicalBlockFile(scope: !5628, file: !1801, discriminator: 2)
!5685 = !DILocation(line: 1331, column: 41, scope: !5686)
!5686 = !DILexicalBlockFile(scope: !5628, file: !1801, discriminator: 3)
!5687 = !DILocation(line: 1331, column: 40, scope: !5686)
!5688 = !DILocation(line: 1331, column: 34, scope: !5686)
!5689 = !DILocation(line: 1331, column: 17, scope: !5686)
!5690 = !DILocation(line: 1331, column: 38, scope: !5686)
!5691 = !DILocation(line: 1332, column: 13, scope: !5628)
!5692 = !DILocation(line: 1333, column: 9, scope: !5622)
!5693 = !DILocation(line: 1322, column: 54, scope: !5694)
!5694 = !DILexicalBlockFile(scope: !5616, file: !1801, discriminator: 2)
!5695 = !DILocation(line: 1322, column: 9, scope: !5694)
!5696 = distinct !{!5696, !5697}
!5697 = !DILocation(line: 1322, column: 9, scope: !5558)
!5698 = !DILocation(line: 1334, column: 5, scope: !5558)
!5699 = !DILocation(line: 1334, column: 16, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !5701, file: !1801, discriminator: 1)
!5701 = distinct !DILexicalBlock(scope: !5549, file: !1801, line: 1334, column: 16)
!5702 = !DILocation(line: 1334, column: 20, scope: !5700)
!5703 = !DILocation(line: 1335, column: 17, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !1801, line: 1335, column: 9)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !1801, line: 1334, column: 26)
!5706 = !DILocation(line: 1335, column: 14, scope: !5704)
!5707 = !DILocation(line: 1335, column: 22, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !5709, file: !1801, discriminator: 1)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !1801, line: 1335, column: 9)
!5710 = !DILocation(line: 1335, column: 28, scope: !5708)
!5711 = !DILocation(line: 1335, column: 31, scope: !5708)
!5712 = !DILocation(line: 1335, column: 25, scope: !5708)
!5713 = !DILocation(line: 1335, column: 9, scope: !5708)
!5714 = !DILocation(line: 1336, column: 25, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5709, file: !1801, line: 1335, column: 47)
!5716 = !DILocation(line: 1336, column: 13, scope: !5715)
!5717 = !DILocation(line: 1336, column: 16, scope: !5715)
!5718 = !DILocation(line: 1336, column: 29, scope: !5715)
!5719 = !DILocation(line: 1337, column: 9, scope: !5715)
!5720 = !DILocation(line: 1335, column: 43, scope: !5721)
!5721 = !DILexicalBlockFile(scope: !5709, file: !1801, discriminator: 2)
!5722 = !DILocation(line: 1335, column: 9, scope: !5721)
!5723 = distinct !{!5723, !5724}
!5724 = !DILocation(line: 1335, column: 9, scope: !5705)
!5725 = !DILocation(line: 1338, column: 5, scope: !5705)
!5726 = !DILocation(line: 1341, column: 16, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1341, column: 5)
!5728 = !DILocation(line: 1341, column: 15, scope: !5727)
!5729 = !DILocation(line: 1341, column: 13, scope: !5727)
!5730 = !DILocation(line: 1341, column: 10, scope: !5727)
!5731 = !DILocation(line: 1341, column: 28, scope: !5732)
!5732 = !DILexicalBlockFile(scope: !5733, file: !1801, discriminator: 1)
!5733 = distinct !DILexicalBlock(scope: !5727, file: !1801, line: 1341, column: 5)
!5734 = !DILocation(line: 1341, column: 34, scope: !5732)
!5735 = !DILocation(line: 1341, column: 37, scope: !5732)
!5736 = !DILocation(line: 1341, column: 31, scope: !5732)
!5737 = !DILocation(line: 1341, column: 5, scope: !5732)
!5738 = !DILocation(line: 1342, column: 30, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !1801, line: 1342, column: 13)
!5740 = distinct !DILexicalBlock(scope: !5733, file: !1801, line: 1341, column: 53)
!5741 = !DILocation(line: 1342, column: 13, scope: !5739)
!5742 = !DILocation(line: 1342, column: 34, scope: !5739)
!5743 = !DILocation(line: 1342, column: 13, scope: !5740)
!5744 = !DILocation(line: 1344, column: 48, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5739, file: !1801, line: 1342, column: 39)
!5746 = !DILocation(line: 1344, column: 39, scope: !5745)
!5747 = !DILocation(line: 1344, column: 42, scope: !5745)
!5748 = !DILocation(line: 1345, column: 53, scope: !5745)
!5749 = !DILocation(line: 1345, column: 39, scope: !5745)
!5750 = !DILocation(line: 1345, column: 42, scope: !5745)
!5751 = !DILocation(line: 1345, column: 70, scope: !5745)
!5752 = !DILocation(line: 1345, column: 58, scope: !5745)
!5753 = !DILocation(line: 1345, column: 61, scope: !5745)
!5754 = !DILocation(line: 1346, column: 46, scope: !5745)
!5755 = !DILocation(line: 1346, column: 39, scope: !5745)
!5756 = !DILocation(line: 1346, column: 42, scope: !5745)
!5757 = !DILocation(line: 1346, column: 63, scope: !5745)
!5758 = !DILocation(line: 1346, column: 51, scope: !5745)
!5759 = !DILocation(line: 1346, column: 54, scope: !5745)
!5760 = !DILocation(line: 1344, column: 13, scope: !5745)
!5761 = !DILocation(line: 1347, column: 9, scope: !5745)
!5762 = !DILocation(line: 1348, column: 30, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5740, file: !1801, line: 1348, column: 13)
!5764 = !DILocation(line: 1348, column: 13, scope: !5763)
!5765 = !DILocation(line: 1348, column: 34, scope: !5763)
!5766 = !DILocation(line: 1348, column: 13, scope: !5740)
!5767 = !DILocation(line: 1351, column: 45, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !1801, line: 1351, column: 17)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !1801, line: 1348, column: 39)
!5770 = !DILocation(line: 1351, column: 48, scope: !5768)
!5771 = !DILocation(line: 1351, column: 78, scope: !5768)
!5772 = !DILocation(line: 1351, column: 66, scope: !5768)
!5773 = !DILocation(line: 1351, column: 69, scope: !5768)
!5774 = !DILocation(line: 1352, column: 58, scope: !5768)
!5775 = !DILocation(line: 1352, column: 44, scope: !5768)
!5776 = !DILocation(line: 1352, column: 47, scope: !5768)
!5777 = !DILocation(line: 1352, column: 75, scope: !5768)
!5778 = !DILocation(line: 1352, column: 63, scope: !5768)
!5779 = !DILocation(line: 1352, column: 66, scope: !5768)
!5780 = !DILocation(line: 1353, column: 57, scope: !5768)
!5781 = !DILocation(line: 1353, column: 44, scope: !5768)
!5782 = !DILocation(line: 1353, column: 47, scope: !5768)
!5783 = !DILocation(line: 1353, column: 63, scope: !5768)
!5784 = !DILocation(line: 1353, column: 69, scope: !5768)
!5785 = !DILocation(line: 1353, column: 72, scope: !5768)
!5786 = !DILocation(line: 1353, column: 66, scope: !5768)
!5787 = !DILocation(line: 1354, column: 56, scope: !5768)
!5788 = !DILocation(line: 1354, column: 44, scope: !5768)
!5789 = !DILocation(line: 1354, column: 47, scope: !5768)
!5790 = !DILocation(line: 1354, column: 74, scope: !5768)
!5791 = !DILocation(line: 1354, column: 61, scope: !5768)
!5792 = !DILocation(line: 1354, column: 64, scope: !5768)
!5793 = !DILocation(line: 1355, column: 59, scope: !5768)
!5794 = !DILocation(line: 1355, column: 44, scope: !5768)
!5795 = !DILocation(line: 1355, column: 47, scope: !5768)
!5796 = !DILocation(line: 1355, column: 79, scope: !5768)
!5797 = !DILocation(line: 1355, column: 64, scope: !5768)
!5798 = !DILocation(line: 1355, column: 67, scope: !5768)
!5799 = !DILocation(line: 1356, column: 58, scope: !5768)
!5800 = !DILocation(line: 1356, column: 44, scope: !5768)
!5801 = !DILocation(line: 1356, column: 47, scope: !5768)
!5802 = !DILocation(line: 1356, column: 71, scope: !5768)
!5803 = !DILocation(line: 1356, column: 63, scope: !5768)
!5804 = !DILocation(line: 1356, column: 66, scope: !5768)
!5805 = !DILocation(line: 1351, column: 17, scope: !5768)
!5806 = !DILocation(line: 1351, column: 17, scope: !5769)
!5807 = !DILocation(line: 1357, column: 24, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5768, file: !1801, line: 1356, column: 77)
!5809 = !DILocation(line: 1357, column: 27, scope: !5808)
!5810 = !DILocation(line: 1357, column: 17, scope: !5808)
!5811 = !DILocation(line: 1358, column: 17, scope: !5808)
!5812 = !DILocation(line: 1360, column: 9, scope: !5769)
!5813 = !DILocation(line: 1361, column: 30, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5740, file: !1801, line: 1361, column: 13)
!5815 = !DILocation(line: 1361, column: 13, scope: !5814)
!5816 = !DILocation(line: 1361, column: 34, scope: !5814)
!5817 = !DILocation(line: 1361, column: 13, scope: !5740)
!5818 = !DILocalVariable(name: "bap_tab", scope: !5819, file: !1801, line: 1363, type: !1610)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !1801, line: 1361, column: 39)
!5820 = !DILocation(line: 1363, column: 28, scope: !5819)
!5821 = !DILocation(line: 1363, column: 58, scope: !5819)
!5822 = !DILocation(line: 1363, column: 38, scope: !5819)
!5823 = !DILocation(line: 1363, column: 41, scope: !5819)
!5824 = !DILocation(line: 1365, column: 13, scope: !5819)
!5825 = !DILocation(line: 1365, column: 16, scope: !5819)
!5826 = !DILocation(line: 1365, column: 23, scope: !5819)
!5827 = !DILocation(line: 1365, column: 50, scope: !5819)
!5828 = !DILocation(line: 1365, column: 42, scope: !5819)
!5829 = !DILocation(line: 1365, column: 45, scope: !5819)
!5830 = !DILocation(line: 1365, column: 62, scope: !5819)
!5831 = !DILocation(line: 1365, column: 55, scope: !5819)
!5832 = !DILocation(line: 1365, column: 58, scope: !5819)
!5833 = !DILocation(line: 1366, column: 53, scope: !5819)
!5834 = !DILocation(line: 1366, column: 39, scope: !5819)
!5835 = !DILocation(line: 1366, column: 42, scope: !5819)
!5836 = !DILocation(line: 1366, column: 70, scope: !5819)
!5837 = !DILocation(line: 1366, column: 58, scope: !5819)
!5838 = !DILocation(line: 1366, column: 61, scope: !5819)
!5839 = !DILocation(line: 1367, column: 53, scope: !5819)
!5840 = !DILocation(line: 1367, column: 39, scope: !5819)
!5841 = !DILocation(line: 1367, column: 42, scope: !5819)
!5842 = !DILocation(line: 1368, column: 39, scope: !5819)
!5843 = !DILocation(line: 1368, column: 42, scope: !5819)
!5844 = !DILocation(line: 1368, column: 59, scope: !5819)
!5845 = !DILocation(line: 1369, column: 39, scope: !5819)
!5846 = !DILocation(line: 1369, column: 55, scope: !5819)
!5847 = !DILocation(line: 1369, column: 48, scope: !5819)
!5848 = !DILocation(line: 1369, column: 51, scope: !5819)
!5849 = !DILocation(line: 1370, column: 9, scope: !5819)
!5850 = !DILocation(line: 1371, column: 5, scope: !5740)
!5851 = !DILocation(line: 1341, column: 49, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5733, file: !1801, discriminator: 2)
!5853 = !DILocation(line: 1341, column: 5, scope: !5852)
!5854 = distinct !{!5854, !5855}
!5855 = !DILocation(line: 1341, column: 5, scope: !4448)
!5856 = !DILocation(line: 1374, column: 9, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1374, column: 9)
!5858 = !DILocation(line: 1374, column: 12, scope: !5857)
!5859 = !DILocation(line: 1374, column: 24, scope: !5857)
!5860 = !DILocation(line: 1374, column: 37, scope: !5861)
!5861 = !DILexicalBlockFile(scope: !5857, file: !1801, discriminator: 1)
!5862 = !DILocation(line: 1374, column: 27, scope: !5861)
!5863 = !DILocation(line: 1374, column: 9, scope: !5861)
!5864 = !DILocalVariable(name: "skipl", scope: !5865, file: !1801, line: 1375, type: !1015)
!5865 = distinct !DILexicalBlock(scope: !5857, file: !1801, line: 1374, column: 43)
!5866 = !DILocation(line: 1375, column: 13, scope: !5865)
!5867 = !DILocation(line: 1375, column: 30, scope: !5865)
!5868 = !DILocation(line: 1375, column: 21, scope: !5865)
!5869 = !DILocation(line: 1376, column: 24, scope: !5865)
!5870 = !DILocation(line: 1376, column: 33, scope: !5865)
!5871 = !DILocation(line: 1376, column: 31, scope: !5865)
!5872 = !DILocation(line: 1376, column: 9, scope: !5865)
!5873 = !DILocation(line: 1377, column: 5, scope: !5865)
!5874 = !DILocation(line: 1381, column: 29, scope: !4448)
!5875 = !DILocation(line: 1381, column: 32, scope: !4448)
!5876 = !DILocation(line: 1381, column: 5, scope: !4448)
!5877 = !DILocation(line: 1386, column: 9, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1386, column: 9)
!5879 = !DILocation(line: 1386, column: 12, scope: !5878)
!5880 = !DILocation(line: 1386, column: 25, scope: !5878)
!5881 = !DILocation(line: 1386, column: 9, scope: !4448)
!5882 = !DILocation(line: 1387, column: 24, scope: !5878)
!5883 = !DILocation(line: 1387, column: 9, scope: !5878)
!5884 = !DILocation(line: 1390, column: 13, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1390, column: 5)
!5886 = !DILocation(line: 1390, column: 10, scope: !5885)
!5887 = !DILocation(line: 1390, column: 18, scope: !5888)
!5888 = !DILexicalBlockFile(scope: !5889, file: !1801, discriminator: 1)
!5889 = distinct !DILexicalBlock(scope: !5885, file: !1801, line: 1390, column: 5)
!5890 = !DILocation(line: 1390, column: 24, scope: !5888)
!5891 = !DILocation(line: 1390, column: 27, scope: !5888)
!5892 = !DILocation(line: 1390, column: 21, scope: !5888)
!5893 = !DILocation(line: 1390, column: 5, scope: !5888)
!5894 = !DILocalVariable(name: "audio_channel", scope: !5895, file: !1801, line: 1391, type: !1015)
!5895 = distinct !DILexicalBlock(scope: !5889, file: !1801, line: 1390, column: 43)
!5896 = !DILocation(line: 1391, column: 13, scope: !5895)
!5897 = !DILocalVariable(name: "gain", scope: !5895, file: !1801, line: 1392, type: !1960)
!5898 = !DILocation(line: 1392, column: 18, scope: !5895)
!5899 = !DILocation(line: 1393, column: 13, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !1801, line: 1393, column: 13)
!5901 = !DILocation(line: 1393, column: 16, scope: !5900)
!5902 = !DILocation(line: 1393, column: 29, scope: !5900)
!5903 = !DILocation(line: 1393, column: 52, scope: !5900)
!5904 = !DILocation(line: 1393, column: 55, scope: !5905)
!5905 = !DILexicalBlockFile(scope: !5900, file: !1801, discriminator: 1)
!5906 = !DILocation(line: 1393, column: 58, scope: !5905)
!5907 = !DILocation(line: 1393, column: 13, scope: !5905)
!5908 = !DILocation(line: 1394, column: 31, scope: !5900)
!5909 = !DILocation(line: 1394, column: 30, scope: !5900)
!5910 = !DILocation(line: 1394, column: 27, scope: !5900)
!5911 = !DILocation(line: 1394, column: 13, scope: !5900)
!5912 = !DILocation(line: 1395, column: 13, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5895, file: !1801, line: 1395, column: 13)
!5914 = !DILocation(line: 1395, column: 16, scope: !5913)
!5915 = !DILocation(line: 1395, column: 34, scope: !5913)
!5916 = !DILocation(line: 1395, column: 59, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !5913, file: !1801, discriminator: 1)
!5918 = !DILocation(line: 1395, column: 37, scope: !5917)
!5919 = !DILocation(line: 1395, column: 40, scope: !5917)
!5920 = !DILocation(line: 1395, column: 13, scope: !5917)
!5921 = !DILocation(line: 1396, column: 43, scope: !5913)
!5922 = !DILocation(line: 1396, column: 20, scope: !5913)
!5923 = !DILocation(line: 1396, column: 23, scope: !5913)
!5924 = !DILocation(line: 1396, column: 18, scope: !5913)
!5925 = !DILocation(line: 1396, column: 13, scope: !5913)
!5926 = !DILocation(line: 1398, column: 37, scope: !5913)
!5927 = !DILocation(line: 1398, column: 20, scope: !5913)
!5928 = !DILocation(line: 1398, column: 23, scope: !5913)
!5929 = !DILocation(line: 1398, column: 18, scope: !5913)
!5930 = !DILocation(line: 1403, column: 13, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5895, file: !1801, line: 1403, column: 13)
!5932 = !DILocation(line: 1403, column: 16, scope: !5931)
!5933 = !DILocation(line: 1403, column: 29, scope: !5931)
!5934 = !DILocation(line: 1403, column: 13, scope: !5895)
!5935 = !DILocation(line: 1404, column: 18, scope: !5931)
!5936 = !DILocation(line: 1404, column: 39, scope: !5931)
!5937 = !DILocation(line: 1404, column: 25, scope: !5931)
!5938 = !DILocation(line: 1404, column: 28, scope: !5931)
!5939 = !DILocation(line: 1404, column: 23, scope: !5931)
!5940 = !DILocation(line: 1404, column: 16, scope: !5931)
!5941 = !DILocation(line: 1404, column: 11, scope: !5931)
!5942 = !DILocation(line: 1405, column: 14, scope: !5895)
!5943 = !DILocation(line: 1406, column: 9, scope: !5895)
!5944 = !DILocation(line: 1406, column: 12, scope: !5895)
!5945 = !DILocation(line: 1406, column: 21, scope: !5895)
!5946 = !DILocation(line: 1406, column: 68, scope: !5895)
!5947 = !DILocation(line: 1406, column: 48, scope: !5895)
!5948 = !DILocation(line: 1406, column: 51, scope: !5895)
!5949 = !DILocation(line: 1407, column: 64, scope: !5895)
!5950 = !DILocation(line: 1407, column: 48, scope: !5895)
!5951 = !DILocation(line: 1407, column: 51, scope: !5895)
!5952 = !DILocation(line: 1407, column: 69, scope: !5895)
!5953 = !DILocation(line: 1409, column: 5, scope: !5895)
!5954 = !DILocation(line: 1390, column: 39, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5889, file: !1801, discriminator: 2)
!5956 = !DILocation(line: 1390, column: 5, scope: !5955)
!5957 = distinct !{!5957, !5958}
!5958 = !DILocation(line: 1390, column: 5, scope: !4448)
!5959 = !DILocation(line: 1412, column: 14, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1412, column: 9)
!5961 = !DILocation(line: 1412, column: 17, scope: !5960)
!5962 = !DILocation(line: 1412, column: 9, scope: !4448)
!5963 = !DILocation(line: 1413, column: 42, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5960, file: !1801, line: 1412, column: 29)
!5965 = !DILocation(line: 1413, column: 9, scope: !5964)
!5966 = !DILocation(line: 1414, column: 5, scope: !5964)
!5967 = !DILocation(line: 1419, column: 22, scope: !4448)
!5968 = !DILocation(line: 1419, column: 25, scope: !4448)
!5969 = !DILocation(line: 1419, column: 37, scope: !4448)
!5970 = !DILocation(line: 1419, column: 40, scope: !4448)
!5971 = !DILocation(line: 1419, column: 34, scope: !4448)
!5972 = !DILocation(line: 1419, column: 53, scope: !4448)
!5973 = !DILocation(line: 1420, column: 25, scope: !4448)
!5974 = !DILocation(line: 1420, column: 28, scope: !4448)
!5975 = !DILocation(line: 1420, column: 40, scope: !4448)
!5976 = !DILocation(line: 1420, column: 45, scope: !4448)
!5977 = !DILocation(line: 1421, column: 22, scope: !4448)
!5978 = !DILocation(line: 1421, column: 25, scope: !4448)
!5979 = !DILocation(line: 1421, column: 41, scope: !4448)
!5980 = !DILocation(line: 1421, column: 44, scope: !4448)
!5981 = !DILocation(line: 1421, column: 38, scope: !4448)
!5982 = !DILocation(line: 1420, column: 22, scope: !4613)
!5983 = !DILocation(line: 1419, column: 53, scope: !4613)
!5984 = !DILocation(line: 1419, column: 20, scope: !4613)
!5985 = !DILocation(line: 1422, column: 9, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !4448, file: !1801, line: 1422, column: 9)
!5987 = !DILocation(line: 1422, column: 9, scope: !4448)
!5988 = !DILocation(line: 1425, column: 13, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !1801, line: 1425, column: 13)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !1801, line: 1422, column: 31)
!5991 = !DILocation(line: 1425, column: 16, scope: !5989)
!5992 = !DILocation(line: 1425, column: 13, scope: !5990)
!5993 = !DILocation(line: 1426, column: 13, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5989, file: !1801, line: 1425, column: 27)
!5995 = !DILocation(line: 1426, column: 16, scope: !5994)
!5996 = !DILocation(line: 1426, column: 26, scope: !5994)
!5997 = !DILocation(line: 1427, column: 29, scope: !5994)
!5998 = !DILocation(line: 1427, column: 13, scope: !5994)
!5999 = !DILocation(line: 1428, column: 9, scope: !5994)
!6000 = !DILocation(line: 1430, column: 18, scope: !5990)
!6001 = !DILocation(line: 1430, column: 21, scope: !5990)
!6002 = !DILocation(line: 1430, column: 24, scope: !5990)
!6003 = !DILocation(line: 1430, column: 34, scope: !5990)
!6004 = !DILocation(line: 1430, column: 9, scope: !5990)
!6005 = !DILocation(line: 1432, column: 13, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5990, file: !1801, line: 1432, column: 13)
!6007 = !DILocation(line: 1432, column: 13, scope: !5990)
!6008 = !DILocation(line: 1437, column: 32, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6006, file: !1801, line: 1432, column: 29)
!6010 = !DILocation(line: 1437, column: 35, scope: !6009)
!6011 = !DILocation(line: 1437, column: 43, scope: !6009)
!6012 = !DILocation(line: 1437, column: 46, scope: !6009)
!6013 = !DILocation(line: 1437, column: 54, scope: !6009)
!6014 = !DILocation(line: 1437, column: 57, scope: !6009)
!6015 = !DILocation(line: 1438, column: 31, scope: !6009)
!6016 = !DILocation(line: 1438, column: 34, scope: !6009)
!6017 = !DILocation(line: 1438, column: 48, scope: !6009)
!6018 = !DILocation(line: 1438, column: 51, scope: !6009)
!6019 = !DILocation(line: 1437, column: 13, scope: !6009)
!6020 = !DILocation(line: 1440, column: 9, scope: !6009)
!6021 = !DILocation(line: 1441, column: 5, scope: !5990)
!6022 = !DILocation(line: 1442, column: 13, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !1801, line: 1442, column: 13)
!6024 = distinct !DILexicalBlock(scope: !5986, file: !1801, line: 1441, column: 12)
!6025 = !DILocation(line: 1442, column: 13, scope: !6024)
!6026 = !DILocation(line: 1443, column: 32, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6023, file: !1801, line: 1442, column: 29)
!6028 = !DILocation(line: 1443, column: 35, scope: !6027)
!6029 = !DILocation(line: 1443, column: 43, scope: !6027)
!6030 = !DILocation(line: 1443, column: 46, scope: !6027)
!6031 = !DILocation(line: 1443, column: 53, scope: !6027)
!6032 = !DILocation(line: 1443, column: 58, scope: !6027)
!6033 = !DILocation(line: 1443, column: 61, scope: !6027)
!6034 = !DILocation(line: 1444, column: 43, scope: !6027)
!6035 = !DILocation(line: 1444, column: 46, scope: !6027)
!6036 = !DILocation(line: 1444, column: 60, scope: !6027)
!6037 = !DILocation(line: 1444, column: 63, scope: !6027)
!6038 = !DILocation(line: 1443, column: 13, scope: !6027)
!6039 = !DILocation(line: 1445, column: 9, scope: !6027)
!6040 = !DILocation(line: 1447, column: 13, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6024, file: !1801, line: 1447, column: 13)
!6042 = !DILocation(line: 1447, column: 28, scope: !6041)
!6043 = !DILocation(line: 1447, column: 32, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6041, file: !1801, discriminator: 1)
!6045 = !DILocation(line: 1447, column: 35, scope: !6044)
!6046 = !DILocation(line: 1447, column: 13, scope: !6044)
!6047 = !DILocation(line: 1448, column: 13, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6041, file: !1801, line: 1447, column: 46)
!6049 = !DILocation(line: 1448, column: 16, scope: !6048)
!6050 = !DILocation(line: 1448, column: 26, scope: !6048)
!6051 = !DILocation(line: 1449, column: 32, scope: !6048)
!6052 = !DILocation(line: 1449, column: 35, scope: !6048)
!6053 = !DILocation(line: 1449, column: 43, scope: !6048)
!6054 = !DILocation(line: 1449, column: 46, scope: !6048)
!6055 = !DILocation(line: 1449, column: 54, scope: !6048)
!6056 = !DILocation(line: 1449, column: 57, scope: !6048)
!6057 = !DILocation(line: 1450, column: 43, scope: !6048)
!6058 = !DILocation(line: 1450, column: 46, scope: !6048)
!6059 = !DILocation(line: 1450, column: 60, scope: !6048)
!6060 = !DILocation(line: 1450, column: 63, scope: !6048)
!6061 = !DILocation(line: 1449, column: 13, scope: !6048)
!6062 = !DILocation(line: 1451, column: 9, scope: !6048)
!6063 = !DILocation(line: 1453, column: 18, scope: !6024)
!6064 = !DILocation(line: 1453, column: 21, scope: !6024)
!6065 = !DILocation(line: 1453, column: 24, scope: !6024)
!6066 = !DILocation(line: 1453, column: 38, scope: !6024)
!6067 = !DILocation(line: 1453, column: 9, scope: !6024)
!6068 = !DILocation(line: 1456, column: 5, scope: !4448)
!6069 = !DILocation(line: 1457, column: 1, scope: !4448)
!6070 = distinct !DISubprogram(name: "init_get_bits", scope: !1867, file: !1867, line: 615, type: !3955, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6071 = !DILocalVariable(name: "s", arg: 1, scope: !6070, file: !1867, line: 615, type: !3957)
!6072 = !DILocation(line: 615, column: 48, scope: !6070)
!6073 = !DILocalVariable(name: "buffer", arg: 2, scope: !6070, file: !1867, line: 615, type: !1610)
!6074 = !DILocation(line: 615, column: 66, scope: !6070)
!6075 = !DILocalVariable(name: "bit_size", arg: 3, scope: !6070, file: !1867, line: 616, type: !1015)
!6076 = !DILocation(line: 616, column: 37, scope: !6070)
!6077 = !DILocalVariable(name: "buffer_size", scope: !6070, file: !1867, line: 618, type: !1015)
!6078 = !DILocation(line: 618, column: 9, scope: !6070)
!6079 = !DILocalVariable(name: "ret", scope: !6070, file: !1867, line: 619, type: !1015)
!6080 = !DILocation(line: 619, column: 9, scope: !6070)
!6081 = !DILocation(line: 621, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6070, file: !1867, line: 621, column: 9)
!6083 = !DILocation(line: 621, column: 18, scope: !6082)
!6084 = !DILocation(line: 621, column: 64, scope: !6082)
!6085 = !DILocation(line: 621, column: 67, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !6082, file: !1867, discriminator: 1)
!6087 = !DILocation(line: 621, column: 76, scope: !6086)
!6088 = !DILocation(line: 621, column: 80, scope: !6086)
!6089 = !DILocation(line: 621, column: 84, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !6082, file: !1867, discriminator: 2)
!6091 = !DILocation(line: 621, column: 9, scope: !6090)
!6092 = !DILocation(line: 622, column: 18, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6082, file: !1867, line: 621, column: 92)
!6094 = !DILocation(line: 623, column: 16, scope: !6093)
!6095 = !DILocation(line: 624, column: 13, scope: !6093)
!6096 = !DILocation(line: 625, column: 5, scope: !6093)
!6097 = !DILocation(line: 627, column: 20, scope: !6070)
!6098 = !DILocation(line: 627, column: 29, scope: !6070)
!6099 = !DILocation(line: 627, column: 34, scope: !6070)
!6100 = !DILocation(line: 627, column: 17, scope: !6070)
!6101 = !DILocation(line: 629, column: 17, scope: !6070)
!6102 = !DILocation(line: 629, column: 5, scope: !6070)
!6103 = !DILocation(line: 629, column: 8, scope: !6070)
!6104 = !DILocation(line: 629, column: 15, scope: !6070)
!6105 = !DILocation(line: 630, column: 23, scope: !6070)
!6106 = !DILocation(line: 630, column: 5, scope: !6070)
!6107 = !DILocation(line: 630, column: 8, scope: !6070)
!6108 = !DILocation(line: 630, column: 21, scope: !6070)
!6109 = !DILocation(line: 631, column: 29, scope: !6070)
!6110 = !DILocation(line: 631, column: 38, scope: !6070)
!6111 = !DILocation(line: 631, column: 5, scope: !6070)
!6112 = !DILocation(line: 631, column: 8, scope: !6070)
!6113 = !DILocation(line: 631, column: 27, scope: !6070)
!6114 = !DILocation(line: 632, column: 21, scope: !6070)
!6115 = !DILocation(line: 632, column: 30, scope: !6070)
!6116 = !DILocation(line: 632, column: 28, scope: !6070)
!6117 = !DILocation(line: 632, column: 5, scope: !6070)
!6118 = !DILocation(line: 632, column: 8, scope: !6070)
!6119 = !DILocation(line: 632, column: 19, scope: !6070)
!6120 = !DILocation(line: 633, column: 5, scope: !6070)
!6121 = !DILocation(line: 633, column: 8, scope: !6070)
!6122 = !DILocation(line: 633, column: 14, scope: !6070)
!6123 = !DILocation(line: 639, column: 12, scope: !6070)
!6124 = !DILocation(line: 639, column: 5, scope: !6070)
!6125 = distinct !DISubprogram(name: "ac3_parse_header", scope: !1801, file: !1801, line: 234, type: !3981, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6126 = !DILocalVariable(name: "a", arg: 1, scope: !6127, file: !6128, line: 127, type: !1015)
!6127 = distinct !DISubprogram(name: "av_clip_c", scope: !6128, file: !6128, line: 127, type: !6129, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6128 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!1015, !1015, !1015, !1015}
!6131 = !DILocation(line: 127, column: 87, scope: !6127, inlinedAt: !6132)
!6132 = distinct !DILocation(line: 275, column: 37, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6134, file: !1801, discriminator: 1)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !1801, line: 270, column: 29)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !1801, line: 270, column: 13)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !1801, line: 269, column: 12)
!6137 = distinct !DILexicalBlock(scope: !6125, file: !1801, line: 264, column: 9)
!6138 = !DILocalVariable(name: "amin", arg: 2, scope: !6127, file: !6128, line: 127, type: !1015)
!6139 = !DILocation(line: 127, column: 94, scope: !6127, inlinedAt: !6132)
!6140 = !DILocalVariable(name: "amax", arg: 3, scope: !6127, file: !6128, line: 127, type: !1015)
!6141 = !DILocation(line: 127, column: 104, scope: !6127, inlinedAt: !6132)
!6142 = !DILocation(line: 127, column: 87, scope: !6127, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 273, column: 42, scope: !6133)
!6144 = !DILocation(line: 127, column: 94, scope: !6127, inlinedAt: !6143)
!6145 = !DILocation(line: 127, column: 104, scope: !6127, inlinedAt: !6143)
!6146 = !DILocalVariable(name: "s", arg: 1, scope: !6125, file: !1801, line: 234, type: !1857)
!6147 = !DILocation(line: 234, column: 47, scope: !6125)
!6148 = !DILocalVariable(name: "gbc", scope: !6125, file: !1801, line: 236, type: !3957)
!6149 = !DILocation(line: 236, column: 20, scope: !6125)
!6150 = !DILocation(line: 236, column: 27, scope: !6125)
!6151 = !DILocation(line: 236, column: 30, scope: !6125)
!6152 = !DILocalVariable(name: "i", scope: !6125, file: !1801, line: 237, type: !1015)
!6153 = !DILocation(line: 237, column: 9, scope: !6125)
!6154 = !DILocation(line: 240, column: 10, scope: !6125)
!6155 = !DILocation(line: 240, column: 13, scope: !6125)
!6156 = !DILocation(line: 240, column: 9, scope: !6125)
!6157 = !DILocation(line: 240, column: 7, scope: !6125)
!6158 = !DILocation(line: 241, column: 5, scope: !6125)
!6159 = distinct !{!6159, !6158}
!6160 = !DILocation(line: 242, column: 67, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6125, file: !1801, line: 241, column: 8)
!6162 = !DILocation(line: 242, column: 58, scope: !6161)
!6163 = !DILocation(line: 242, column: 57, scope: !6161)
!6164 = !DILocation(line: 242, column: 35, scope: !6161)
!6165 = !DILocation(line: 242, column: 38, scope: !6161)
!6166 = !DILocation(line: 242, column: 34, scope: !6161)
!6167 = !DILocation(line: 242, column: 52, scope: !6161)
!6168 = !DILocation(line: 242, column: 51, scope: !6161)
!6169 = !DILocation(line: 242, column: 9, scope: !6161)
!6170 = !DILocation(line: 242, column: 12, scope: !6161)
!6171 = !DILocation(line: 242, column: 55, scope: !6161)
!6172 = !DILocation(line: 243, column: 39, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6161, file: !1801, line: 243, column: 13)
!6174 = !DILocation(line: 243, column: 42, scope: !6173)
!6175 = !DILocation(line: 243, column: 38, scope: !6173)
!6176 = !DILocation(line: 243, column: 56, scope: !6173)
!6177 = !DILocation(line: 243, column: 55, scope: !6173)
!6178 = !DILocation(line: 243, column: 13, scope: !6173)
!6179 = !DILocation(line: 243, column: 16, scope: !6173)
!6180 = !DILocation(line: 243, column: 59, scope: !6173)
!6181 = !DILocation(line: 243, column: 13, scope: !6161)
!6182 = !DILocation(line: 244, column: 39, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6173, file: !1801, line: 243, column: 65)
!6184 = !DILocation(line: 244, column: 42, scope: !6183)
!6185 = !DILocation(line: 244, column: 38, scope: !6183)
!6186 = !DILocation(line: 244, column: 56, scope: !6183)
!6187 = !DILocation(line: 244, column: 55, scope: !6183)
!6188 = !DILocation(line: 244, column: 13, scope: !6183)
!6189 = !DILocation(line: 244, column: 16, scope: !6183)
!6190 = !DILocation(line: 244, column: 59, scope: !6183)
!6191 = !DILocation(line: 245, column: 9, scope: !6183)
!6192 = !DILocation(line: 246, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6161, file: !1801, line: 246, column: 13)
!6194 = !DILocation(line: 246, column: 16, scope: !6193)
!6195 = !DILocation(line: 246, column: 29, scope: !6193)
!6196 = !DILocation(line: 246, column: 13, scope: !6161)
!6197 = !DILocation(line: 248, column: 25, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !1801, line: 246, column: 35)
!6199 = !DILocation(line: 248, column: 28, scope: !6198)
!6200 = !DILocation(line: 249, column: 43, scope: !6198)
!6201 = !DILocation(line: 249, column: 46, scope: !6198)
!6202 = !DILocation(line: 249, column: 42, scope: !6198)
!6203 = !DILocation(line: 249, column: 60, scope: !6198)
!6204 = !DILocation(line: 249, column: 59, scope: !6198)
!6205 = !DILocation(line: 249, column: 17, scope: !6198)
!6206 = !DILocation(line: 249, column: 20, scope: !6198)
!6207 = !DILocation(line: 248, column: 41, scope: !6198)
!6208 = !DILocation(line: 248, column: 17, scope: !6198)
!6209 = !DILocation(line: 249, column: 63, scope: !6198)
!6210 = !DILocation(line: 247, column: 51, scope: !6198)
!6211 = !DILocation(line: 247, column: 29, scope: !6198)
!6212 = !DILocation(line: 247, column: 32, scope: !6198)
!6213 = !DILocation(line: 247, column: 28, scope: !6198)
!6214 = !DILocation(line: 247, column: 46, scope: !6198)
!6215 = !DILocation(line: 247, column: 45, scope: !6198)
!6216 = !DILocation(line: 247, column: 13, scope: !6198)
!6217 = !DILocation(line: 247, column: 16, scope: !6198)
!6218 = !DILocation(line: 247, column: 49, scope: !6198)
!6219 = !DILocation(line: 250, column: 9, scope: !6198)
!6220 = !DILocation(line: 251, column: 69, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6161, file: !1801, line: 251, column: 13)
!6222 = !DILocation(line: 251, column: 59, scope: !6221)
!6223 = !DILocation(line: 251, column: 37, scope: !6221)
!6224 = !DILocation(line: 251, column: 40, scope: !6221)
!6225 = !DILocation(line: 251, column: 36, scope: !6221)
!6226 = !DILocation(line: 251, column: 54, scope: !6221)
!6227 = !DILocation(line: 251, column: 53, scope: !6221)
!6228 = !DILocation(line: 251, column: 13, scope: !6221)
!6229 = !DILocation(line: 251, column: 16, scope: !6221)
!6230 = !DILocation(line: 251, column: 57, scope: !6221)
!6231 = !DILocation(line: 251, column: 13, scope: !6161)
!6232 = !DILocation(line: 253, column: 59, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6221, file: !1801, line: 251, column: 75)
!6234 = !DILocation(line: 253, column: 50, scope: !6233)
!6235 = !DILocation(line: 253, column: 18, scope: !6233)
!6236 = !DILocation(line: 252, column: 38, scope: !6233)
!6237 = !DILocation(line: 252, column: 41, scope: !6233)
!6238 = !DILocation(line: 252, column: 37, scope: !6233)
!6239 = !DILocation(line: 252, column: 55, scope: !6233)
!6240 = !DILocation(line: 252, column: 54, scope: !6233)
!6241 = !DILocation(line: 252, column: 13, scope: !6233)
!6242 = !DILocation(line: 252, column: 16, scope: !6233)
!6243 = !DILocation(line: 252, column: 58, scope: !6233)
!6244 = !DILocation(line: 254, column: 9, scope: !6233)
!6245 = !DILocation(line: 255, column: 23, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6161, file: !1801, line: 255, column: 13)
!6247 = !DILocation(line: 255, column: 13, scope: !6246)
!6248 = !DILocation(line: 255, column: 13, scope: !6161)
!6249 = !DILocation(line: 256, column: 23, scope: !6246)
!6250 = !DILocation(line: 256, column: 13, scope: !6246)
!6251 = !DILocation(line: 257, column: 23, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6161, file: !1801, line: 257, column: 13)
!6253 = !DILocation(line: 257, column: 13, scope: !6252)
!6254 = !DILocation(line: 257, column: 13, scope: !6161)
!6255 = !DILocation(line: 258, column: 23, scope: !6252)
!6256 = !DILocation(line: 258, column: 13, scope: !6252)
!6257 = !DILocation(line: 259, column: 5, scope: !6161)
!6258 = !DILocation(line: 259, column: 15, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !6125, file: !1801, discriminator: 1)
!6260 = !DILocation(line: 259, column: 5, scope: !6259)
!6261 = !DILocation(line: 261, column: 15, scope: !6125)
!6262 = !DILocation(line: 261, column: 5, scope: !6125)
!6263 = !DILocation(line: 264, column: 9, scope: !6137)
!6264 = !DILocation(line: 264, column: 12, scope: !6137)
!6265 = !DILocation(line: 264, column: 25, scope: !6137)
!6266 = !DILocation(line: 264, column: 9, scope: !6125)
!6267 = !DILocation(line: 265, column: 23, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !1801, line: 265, column: 13)
!6269 = distinct !DILexicalBlock(scope: !6137, file: !1801, line: 264, column: 31)
!6270 = !DILocation(line: 265, column: 13, scope: !6268)
!6271 = !DILocation(line: 265, column: 13, scope: !6269)
!6272 = !DILocation(line: 266, column: 23, scope: !6268)
!6273 = !DILocation(line: 266, column: 13, scope: !6268)
!6274 = !DILocation(line: 267, column: 23, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6269, file: !1801, line: 267, column: 13)
!6276 = !DILocation(line: 267, column: 13, scope: !6275)
!6277 = !DILocation(line: 267, column: 13, scope: !6269)
!6278 = !DILocation(line: 268, column: 23, scope: !6275)
!6279 = !DILocation(line: 268, column: 13, scope: !6275)
!6280 = !DILocation(line: 269, column: 5, scope: !6269)
!6281 = !DILocation(line: 270, column: 23, scope: !6135)
!6282 = !DILocation(line: 270, column: 13, scope: !6135)
!6283 = !DILocation(line: 270, column: 13, scope: !6136)
!6284 = !DILocation(line: 271, column: 45, scope: !6134)
!6285 = !DILocation(line: 271, column: 36, scope: !6134)
!6286 = !DILocation(line: 271, column: 13, scope: !6134)
!6287 = !DILocation(line: 271, column: 16, scope: !6134)
!6288 = !DILocation(line: 271, column: 34, scope: !6134)
!6289 = !DILocation(line: 272, column: 49, scope: !6134)
!6290 = !DILocation(line: 272, column: 40, scope: !6134)
!6291 = !DILocation(line: 272, column: 13, scope: !6134)
!6292 = !DILocation(line: 272, column: 16, scope: !6134)
!6293 = !DILocation(line: 272, column: 38, scope: !6134)
!6294 = !DILocation(line: 273, column: 61, scope: !6134)
!6295 = !DILocation(line: 273, column: 52, scope: !6134)
!6296 = !DILocation(line: 273, column: 42, scope: !6133)
!6297 = !DILocation(line: 132, column: 9, scope: !6298, inlinedAt: !6143)
!6298 = distinct !DILexicalBlock(scope: !6127, file: !6128, line: 132, column: 9)
!6299 = !DILocation(line: 132, column: 13, scope: !6298, inlinedAt: !6143)
!6300 = !DILocation(line: 132, column: 11, scope: !6298, inlinedAt: !6143)
!6301 = !DILocation(line: 132, column: 9, scope: !6127, inlinedAt: !6143)
!6302 = !DILocation(line: 132, column: 26, scope: !6303, inlinedAt: !6143)
!6303 = !DILexicalBlockFile(scope: !6298, file: !6128, discriminator: 1)
!6304 = !DILocation(line: 132, column: 19, scope: !6303, inlinedAt: !6143)
!6305 = !DILocation(line: 133, column: 14, scope: !6306, inlinedAt: !6143)
!6306 = distinct !DILexicalBlock(scope: !6298, file: !6128, line: 133, column: 14)
!6307 = !DILocation(line: 133, column: 18, scope: !6306, inlinedAt: !6143)
!6308 = !DILocation(line: 133, column: 16, scope: !6306, inlinedAt: !6143)
!6309 = !DILocation(line: 133, column: 14, scope: !6298, inlinedAt: !6143)
!6310 = !DILocation(line: 133, column: 31, scope: !6311, inlinedAt: !6143)
!6311 = !DILexicalBlockFile(scope: !6306, file: !6128, discriminator: 1)
!6312 = !DILocation(line: 133, column: 24, scope: !6311, inlinedAt: !6143)
!6313 = !DILocation(line: 134, column: 17, scope: !6306, inlinedAt: !6143)
!6314 = !DILocation(line: 134, column: 10, scope: !6306, inlinedAt: !6143)
!6315 = !DILocation(line: 135, column: 1, scope: !6127, inlinedAt: !6143)
!6316 = !DILocation(line: 273, column: 13, scope: !6134)
!6317 = !DILocation(line: 273, column: 16, scope: !6134)
!6318 = !DILocation(line: 273, column: 40, scope: !6134)
!6319 = !DILocation(line: 274, column: 44, scope: !6134)
!6320 = !DILocation(line: 274, column: 35, scope: !6134)
!6321 = !DILocation(line: 274, column: 13, scope: !6134)
!6322 = !DILocation(line: 274, column: 16, scope: !6134)
!6323 = !DILocation(line: 274, column: 33, scope: !6134)
!6324 = !DILocation(line: 275, column: 56, scope: !6134)
!6325 = !DILocation(line: 275, column: 47, scope: !6134)
!6326 = !DILocation(line: 275, column: 37, scope: !6133)
!6327 = !DILocation(line: 132, column: 9, scope: !6298, inlinedAt: !6132)
!6328 = !DILocation(line: 132, column: 13, scope: !6298, inlinedAt: !6132)
!6329 = !DILocation(line: 132, column: 11, scope: !6298, inlinedAt: !6132)
!6330 = !DILocation(line: 132, column: 9, scope: !6127, inlinedAt: !6132)
!6331 = !DILocation(line: 132, column: 26, scope: !6303, inlinedAt: !6132)
!6332 = !DILocation(line: 132, column: 19, scope: !6303, inlinedAt: !6132)
!6333 = !DILocation(line: 133, column: 14, scope: !6306, inlinedAt: !6132)
!6334 = !DILocation(line: 133, column: 18, scope: !6306, inlinedAt: !6132)
!6335 = !DILocation(line: 133, column: 16, scope: !6306, inlinedAt: !6132)
!6336 = !DILocation(line: 133, column: 14, scope: !6298, inlinedAt: !6132)
!6337 = !DILocation(line: 133, column: 31, scope: !6311, inlinedAt: !6132)
!6338 = !DILocation(line: 133, column: 24, scope: !6311, inlinedAt: !6132)
!6339 = !DILocation(line: 134, column: 17, scope: !6306, inlinedAt: !6132)
!6340 = !DILocation(line: 134, column: 10, scope: !6306, inlinedAt: !6132)
!6341 = !DILocation(line: 135, column: 1, scope: !6127, inlinedAt: !6132)
!6342 = !DILocation(line: 275, column: 13, scope: !6134)
!6343 = !DILocation(line: 275, column: 16, scope: !6134)
!6344 = !DILocation(line: 275, column: 35, scope: !6134)
!6345 = !DILocation(line: 276, column: 9, scope: !6134)
!6346 = !DILocation(line: 277, column: 23, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6136, file: !1801, line: 277, column: 13)
!6348 = !DILocation(line: 277, column: 13, scope: !6347)
!6349 = !DILocation(line: 277, column: 13, scope: !6136)
!6350 = !DILocation(line: 278, column: 50, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6347, file: !1801, line: 277, column: 29)
!6352 = !DILocation(line: 278, column: 41, scope: !6351)
!6353 = !DILocation(line: 278, column: 13, scope: !6351)
!6354 = !DILocation(line: 278, column: 16, scope: !6351)
!6355 = !DILocation(line: 278, column: 39, scope: !6351)
!6356 = !DILocation(line: 279, column: 48, scope: !6351)
!6357 = !DILocation(line: 279, column: 39, scope: !6351)
!6358 = !DILocation(line: 279, column: 13, scope: !6351)
!6359 = !DILocation(line: 279, column: 16, scope: !6351)
!6360 = !DILocation(line: 279, column: 37, scope: !6351)
!6361 = !DILocation(line: 280, column: 23, scope: !6351)
!6362 = !DILocation(line: 280, column: 13, scope: !6351)
!6363 = !DILocation(line: 281, column: 9, scope: !6351)
!6364 = !DILocation(line: 285, column: 19, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6125, file: !1801, line: 285, column: 9)
!6366 = !DILocation(line: 285, column: 9, scope: !6365)
!6367 = !DILocation(line: 285, column: 9, scope: !6125)
!6368 = !DILocation(line: 286, column: 22, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !1801, line: 285, column: 25)
!6370 = !DILocation(line: 286, column: 13, scope: !6369)
!6371 = !DILocation(line: 286, column: 11, scope: !6369)
!6372 = !DILocation(line: 287, column: 9, scope: !6369)
!6373 = distinct !{!6373, !6372}
!6374 = !DILocation(line: 288, column: 23, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6369, file: !1801, line: 287, column: 12)
!6376 = !DILocation(line: 288, column: 13, scope: !6375)
!6377 = !DILocation(line: 289, column: 9, scope: !6375)
!6378 = !DILocation(line: 289, column: 19, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6369, file: !1801, discriminator: 1)
!6380 = !DILocation(line: 289, column: 9, scope: !6379)
!6381 = !DILocation(line: 290, column: 5, scope: !6369)
!6382 = !DILocation(line: 292, column: 5, scope: !6125)
!6383 = distinct !DISubprogram(name: "ff_eac3_parse_header", scope: !1008, file: !1008, line: 289, type: !3981, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6384 = !DILocation(line: 127, column: 87, scope: !6127, inlinedAt: !6385)
!6385 = distinct !DILocation(line: 374, column: 41, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !6387, file: !1008, discriminator: 1)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !1008, line: 371, column: 38)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !1008, line: 371, column: 17)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !1008, line: 364, column: 50)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !1008, line: 364, column: 13)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !1008, line: 362, column: 25)
!6392 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 362, column: 9)
!6393 = !DILocation(line: 127, column: 94, scope: !6127, inlinedAt: !6385)
!6394 = !DILocation(line: 127, column: 104, scope: !6127, inlinedAt: !6385)
!6395 = !DILocation(line: 127, column: 87, scope: !6127, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 373, column: 46, scope: !6386)
!6397 = !DILocation(line: 127, column: 94, scope: !6127, inlinedAt: !6396)
!6398 = !DILocation(line: 127, column: 104, scope: !6127, inlinedAt: !6396)
!6399 = !DILocalVariable(name: "x", arg: 1, scope: !6400, file: !6128, line: 342, type: !1038)
!6400 = distinct !DISubprogram(name: "av_popcount_c", scope: !6128, file: !6128, line: 342, type: !6401, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6401 = !DISubroutineType(types: !6402)
!6402 = !{!1015, !1038}
!6403 = !DILocation(line: 342, column: 96, scope: !6400, inlinedAt: !6404)
!6404 = distinct !DILocation(line: 358, column: 41, scope: !6405, inlinedAt: !6409)
!6405 = !DILexicalBlockFile(scope: !6406, file: !6128, discriminator: 1)
!6406 = distinct !DISubprogram(name: "av_popcount64_c", scope: !6128, file: !6128, line: 356, type: !6407, isLocal: true, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!1015, !1079}
!6409 = distinct !DILocation(line: 354, column: 17, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !1008, line: 354, column: 17)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !1008, line: 345, column: 29)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !1008, line: 345, column: 13)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !1008, line: 344, column: 53)
!6414 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 344, column: 9)
!6415 = !DILocation(line: 342, column: 96, scope: !6400, inlinedAt: !6416)
!6416 = distinct !DILocation(line: 358, column: 12, scope: !6406, inlinedAt: !6409)
!6417 = !DILocalVariable(name: "x", arg: 1, scope: !6406, file: !6128, line: 356, type: !1079)
!6418 = !DILocation(line: 356, column: 98, scope: !6406, inlinedAt: !6409)
!6419 = !DILocalVariable(name: "s", arg: 1, scope: !6383, file: !1008, line: 289, type: !1857)
!6420 = !DILocation(line: 289, column: 51, scope: !6383)
!6421 = !DILocalVariable(name: "i", scope: !6383, file: !1008, line: 291, type: !1015)
!6422 = !DILocation(line: 291, column: 9, scope: !6383)
!6423 = !DILocalVariable(name: "blk", scope: !6383, file: !1008, line: 291, type: !1015)
!6424 = !DILocation(line: 291, column: 12, scope: !6383)
!6425 = !DILocalVariable(name: "ch", scope: !6383, file: !1008, line: 291, type: !1015)
!6426 = !DILocation(line: 291, column: 17, scope: !6383)
!6427 = !DILocalVariable(name: "ac3_exponent_strategy", scope: !6383, file: !1008, line: 292, type: !1015)
!6428 = !DILocation(line: 292, column: 9, scope: !6383)
!6429 = !DILocalVariable(name: "parse_aht_info", scope: !6383, file: !1008, line: 292, type: !1015)
!6430 = !DILocation(line: 292, column: 32, scope: !6383)
!6431 = !DILocalVariable(name: "parse_spx_atten_data", scope: !6383, file: !1008, line: 292, type: !1015)
!6432 = !DILocation(line: 292, column: 48, scope: !6383)
!6433 = !DILocalVariable(name: "parse_transient_proc_info", scope: !6383, file: !1008, line: 293, type: !1015)
!6434 = !DILocation(line: 293, column: 9, scope: !6383)
!6435 = !DILocalVariable(name: "num_cpl_blocks", scope: !6383, file: !1008, line: 294, type: !1015)
!6436 = !DILocation(line: 294, column: 9, scope: !6383)
!6437 = !DILocalVariable(name: "gbc", scope: !6383, file: !1008, line: 295, type: !3957)
!6438 = !DILocation(line: 295, column: 20, scope: !6383)
!6439 = !DILocation(line: 295, column: 27, scope: !6383)
!6440 = !DILocation(line: 295, column: 30, scope: !6383)
!6441 = !DILocation(line: 300, column: 9, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 300, column: 9)
!6443 = !DILocation(line: 300, column: 12, scope: !6442)
!6444 = !DILocation(line: 300, column: 23, scope: !6442)
!6445 = !DILocation(line: 300, column: 9, scope: !6383)
!6446 = !DILocation(line: 301, column: 16, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !1008, line: 300, column: 52)
!6448 = !DILocation(line: 301, column: 19, scope: !6447)
!6449 = !DILocation(line: 301, column: 9, scope: !6447)
!6450 = !DILocation(line: 302, column: 9, scope: !6447)
!6451 = !DILocation(line: 308, column: 9, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 308, column: 9)
!6453 = !DILocation(line: 308, column: 12, scope: !6452)
!6454 = !DILocation(line: 308, column: 9, scope: !6383)
!6455 = !DILocation(line: 310, column: 14, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !1008, line: 310, column: 13)
!6457 = distinct !DILexicalBlock(scope: !6452, file: !1008, line: 308, column: 25)
!6458 = !DILocation(line: 310, column: 17, scope: !6456)
!6459 = !DILocation(line: 310, column: 13, scope: !6457)
!6460 = !DILocation(line: 311, column: 13, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6456, file: !1008, line: 310, column: 42)
!6462 = !DILocation(line: 311, column: 16, scope: !6461)
!6463 = !DILocation(line: 311, column: 40, scope: !6461)
!6464 = !DILocation(line: 312, column: 35, scope: !6461)
!6465 = !DILocation(line: 312, column: 38, scope: !6461)
!6466 = !DILocation(line: 312, column: 13, scope: !6461)
!6467 = !DILocation(line: 313, column: 9, scope: !6461)
!6468 = !DILocation(line: 314, column: 9, scope: !6457)
!6469 = !DILocation(line: 317, column: 9, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 317, column: 9)
!6471 = !DILocation(line: 317, column: 12, scope: !6470)
!6472 = !DILocation(line: 317, column: 29, scope: !6470)
!6473 = !DILocation(line: 317, column: 37, scope: !6470)
!6474 = !DILocation(line: 317, column: 9, scope: !6383)
!6475 = !DILocation(line: 322, column: 31, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6470, file: !1008, line: 317, column: 43)
!6477 = !DILocation(line: 322, column: 34, scope: !6476)
!6478 = !DILocation(line: 322, column: 9, scope: !6476)
!6479 = !DILocation(line: 323, column: 9, scope: !6476)
!6480 = !DILocation(line: 325, column: 15, scope: !6383)
!6481 = !DILocation(line: 325, column: 5, scope: !6383)
!6482 = !DILocation(line: 328, column: 12, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 328, column: 5)
!6484 = !DILocation(line: 328, column: 10, scope: !6483)
!6485 = !DILocation(line: 328, column: 17, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !6487, file: !1008, discriminator: 1)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !1008, line: 328, column: 5)
!6488 = !DILocation(line: 328, column: 22, scope: !6486)
!6489 = !DILocation(line: 328, column: 25, scope: !6486)
!6490 = !DILocation(line: 328, column: 19, scope: !6486)
!6491 = !DILocation(line: 328, column: 5, scope: !6486)
!6492 = !DILocation(line: 329, column: 48, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6487, file: !1008, line: 328, column: 53)
!6494 = !DILocation(line: 329, column: 39, scope: !6493)
!6495 = !DILocation(line: 329, column: 38, scope: !6493)
!6496 = !DILocation(line: 329, column: 33, scope: !6493)
!6497 = !DILocation(line: 329, column: 9, scope: !6493)
!6498 = !DILocation(line: 329, column: 12, scope: !6493)
!6499 = !DILocation(line: 329, column: 36, scope: !6493)
!6500 = !DILocation(line: 330, column: 37, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6493, file: !1008, line: 330, column: 13)
!6502 = !DILocation(line: 330, column: 13, scope: !6501)
!6503 = !DILocation(line: 330, column: 16, scope: !6501)
!6504 = !DILocation(line: 330, column: 40, scope: !6501)
!6505 = !DILocation(line: 330, column: 13, scope: !6493)
!6506 = !DILocation(line: 331, column: 37, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6501, file: !1008, line: 330, column: 46)
!6508 = !DILocation(line: 331, column: 13, scope: !6507)
!6509 = !DILocation(line: 331, column: 16, scope: !6507)
!6510 = !DILocation(line: 331, column: 40, scope: !6507)
!6511 = !DILocation(line: 332, column: 9, scope: !6507)
!6512 = !DILocation(line: 333, column: 13, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6493, file: !1008, line: 333, column: 13)
!6514 = !DILocation(line: 333, column: 16, scope: !6513)
!6515 = !DILocation(line: 333, column: 29, scope: !6513)
!6516 = !DILocation(line: 333, column: 13, scope: !6493)
!6517 = !DILocation(line: 335, column: 25, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6513, file: !1008, line: 333, column: 35)
!6519 = !DILocation(line: 335, column: 28, scope: !6518)
!6520 = !DILocation(line: 335, column: 67, scope: !6518)
!6521 = !DILocation(line: 335, column: 43, scope: !6518)
!6522 = !DILocation(line: 335, column: 46, scope: !6518)
!6523 = !DILocation(line: 335, column: 41, scope: !6518)
!6524 = !DILocation(line: 335, column: 17, scope: !6518)
!6525 = !DILocation(line: 335, column: 70, scope: !6518)
!6526 = !DILocation(line: 334, column: 32, scope: !6518)
!6527 = !DILocation(line: 334, column: 27, scope: !6518)
!6528 = !DILocation(line: 334, column: 13, scope: !6518)
!6529 = !DILocation(line: 334, column: 16, scope: !6518)
!6530 = !DILocation(line: 334, column: 30, scope: !6518)
!6531 = !DILocation(line: 336, column: 9, scope: !6518)
!6532 = !DILocation(line: 337, column: 46, scope: !6493)
!6533 = !DILocation(line: 337, column: 36, scope: !6493)
!6534 = !DILocation(line: 337, column: 31, scope: !6493)
!6535 = !DILocation(line: 337, column: 9, scope: !6493)
!6536 = !DILocation(line: 337, column: 12, scope: !6493)
!6537 = !DILocation(line: 337, column: 34, scope: !6493)
!6538 = !DILocation(line: 338, column: 35, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6493, file: !1008, line: 338, column: 13)
!6540 = !DILocation(line: 338, column: 13, scope: !6539)
!6541 = !DILocation(line: 338, column: 16, scope: !6539)
!6542 = !DILocation(line: 338, column: 13, scope: !6493)
!6543 = !DILocation(line: 339, column: 83, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6539, file: !1008, line: 338, column: 39)
!6545 = !DILocation(line: 339, column: 74, scope: !6544)
!6546 = !DILocation(line: 339, column: 42, scope: !6544)
!6547 = !DILocation(line: 339, column: 36, scope: !6544)
!6548 = !DILocation(line: 339, column: 13, scope: !6544)
!6549 = !DILocation(line: 339, column: 16, scope: !6544)
!6550 = !DILocation(line: 339, column: 39, scope: !6544)
!6551 = !DILocation(line: 340, column: 9, scope: !6544)
!6552 = !DILocation(line: 341, column: 5, scope: !6493)
!6553 = !DILocation(line: 328, column: 49, scope: !6554)
!6554 = !DILexicalBlockFile(scope: !6487, file: !1008, discriminator: 2)
!6555 = !DILocation(line: 328, column: 5, scope: !6554)
!6556 = distinct !{!6556, !6557}
!6557 = !DILocation(line: 328, column: 5, scope: !6383)
!6558 = !DILocation(line: 344, column: 9, scope: !6414)
!6559 = !DILocation(line: 344, column: 12, scope: !6414)
!6560 = !DILocation(line: 344, column: 23, scope: !6414)
!6561 = !DILocation(line: 344, column: 9, scope: !6383)
!6562 = !DILocation(line: 345, column: 23, scope: !6412)
!6563 = !DILocation(line: 345, column: 13, scope: !6412)
!6564 = !DILocation(line: 345, column: 13, scope: !6413)
!6565 = !DILocalVariable(name: "channel_layout", scope: !6411, file: !1008, line: 346, type: !1041)
!6566 = !DILocation(line: 346, column: 21, scope: !6411)
!6567 = !DILocalVariable(name: "channel_map", scope: !6411, file: !1008, line: 347, type: !1015)
!6568 = !DILocation(line: 347, column: 17, scope: !6411)
!6569 = !DILocation(line: 347, column: 40, scope: !6411)
!6570 = !DILocation(line: 347, column: 31, scope: !6411)
!6571 = !DILocation(line: 348, column: 20, scope: !6411)
!6572 = !DILocation(line: 348, column: 23, scope: !6411)
!6573 = !DILocation(line: 348, column: 56, scope: !6411)
!6574 = !DILocation(line: 348, column: 13, scope: !6411)
!6575 = !DILocation(line: 350, column: 20, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6411, file: !1008, line: 350, column: 13)
!6577 = !DILocation(line: 350, column: 18, scope: !6576)
!6578 = !DILocation(line: 350, column: 25, scope: !6579)
!6579 = !DILexicalBlockFile(scope: !6580, file: !1008, discriminator: 1)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !1008, line: 350, column: 13)
!6581 = !DILocation(line: 350, column: 27, scope: !6579)
!6582 = !DILocation(line: 350, column: 13, scope: !6579)
!6583 = !DILocation(line: 351, column: 21, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6580, file: !1008, line: 351, column: 21)
!6585 = !DILocation(line: 351, column: 47, scope: !6584)
!6586 = !DILocation(line: 351, column: 45, scope: !6584)
!6587 = !DILocation(line: 351, column: 49, scope: !6584)
!6588 = !DILocation(line: 351, column: 38, scope: !6584)
!6589 = !DILocation(line: 351, column: 33, scope: !6584)
!6590 = !DILocation(line: 351, column: 21, scope: !6580)
!6591 = !DILocation(line: 352, column: 76, scope: !6584)
!6592 = !DILocation(line: 352, column: 39, scope: !6584)
!6593 = !DILocation(line: 352, column: 36, scope: !6584)
!6594 = !DILocation(line: 352, column: 21, scope: !6584)
!6595 = !DILocation(line: 351, column: 53, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6584, file: !1008, discriminator: 1)
!6597 = !DILocation(line: 350, column: 34, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !6580, file: !1008, discriminator: 2)
!6599 = !DILocation(line: 350, column: 13, scope: !6598)
!6600 = distinct !{!6600, !6601}
!6601 = !DILocation(line: 350, column: 13, scope: !6411)
!6602 = !DILocation(line: 354, column: 33, scope: !6410)
!6603 = !DILocation(line: 354, column: 17, scope: !6410)
!6604 = !DILocation(line: 358, column: 36, scope: !6406, inlinedAt: !6409)
!6605 = !DILocation(line: 358, column: 26, scope: !6406, inlinedAt: !6409)
!6606 = !DILocation(line: 358, column: 12, scope: !6406, inlinedAt: !6409)
!6607 = !DILocation(line: 344, column: 11, scope: !6400, inlinedAt: !6416)
!6608 = !DILocation(line: 344, column: 13, scope: !6400, inlinedAt: !6416)
!6609 = !DILocation(line: 344, column: 19, scope: !6400, inlinedAt: !6416)
!6610 = !DILocation(line: 344, column: 7, scope: !6400, inlinedAt: !6416)
!6611 = !DILocation(line: 345, column: 10, scope: !6400, inlinedAt: !6416)
!6612 = !DILocation(line: 345, column: 12, scope: !6400, inlinedAt: !6416)
!6613 = !DILocation(line: 345, column: 30, scope: !6400, inlinedAt: !6416)
!6614 = !DILocation(line: 345, column: 32, scope: !6400, inlinedAt: !6416)
!6615 = !DILocation(line: 345, column: 38, scope: !6400, inlinedAt: !6416)
!6616 = !DILocation(line: 345, column: 26, scope: !6400, inlinedAt: !6416)
!6617 = !DILocation(line: 345, column: 7, scope: !6400, inlinedAt: !6416)
!6618 = !DILocation(line: 346, column: 10, scope: !6400, inlinedAt: !6416)
!6619 = !DILocation(line: 346, column: 15, scope: !6400, inlinedAt: !6416)
!6620 = !DILocation(line: 346, column: 17, scope: !6400, inlinedAt: !6416)
!6621 = !DILocation(line: 346, column: 12, scope: !6400, inlinedAt: !6416)
!6622 = !DILocation(line: 346, column: 24, scope: !6400, inlinedAt: !6416)
!6623 = !DILocation(line: 346, column: 7, scope: !6400, inlinedAt: !6416)
!6624 = !DILocation(line: 347, column: 10, scope: !6400, inlinedAt: !6416)
!6625 = !DILocation(line: 347, column: 12, scope: !6400, inlinedAt: !6416)
!6626 = !DILocation(line: 347, column: 7, scope: !6400, inlinedAt: !6416)
!6627 = !DILocation(line: 348, column: 13, scope: !6400, inlinedAt: !6416)
!6628 = !DILocation(line: 348, column: 18, scope: !6400, inlinedAt: !6416)
!6629 = !DILocation(line: 348, column: 20, scope: !6400, inlinedAt: !6416)
!6630 = !DILocation(line: 348, column: 15, scope: !6400, inlinedAt: !6416)
!6631 = !DILocation(line: 348, column: 28, scope: !6400, inlinedAt: !6416)
!6632 = !DILocation(line: 358, column: 66, scope: !6406, inlinedAt: !6409)
!6633 = !DILocation(line: 358, column: 68, scope: !6406, inlinedAt: !6409)
!6634 = !DILocation(line: 358, column: 55, scope: !6406, inlinedAt: !6409)
!6635 = !DILocation(line: 358, column: 41, scope: !6405, inlinedAt: !6409)
!6636 = !DILocation(line: 344, column: 11, scope: !6400, inlinedAt: !6404)
!6637 = !DILocation(line: 344, column: 13, scope: !6400, inlinedAt: !6404)
!6638 = !DILocation(line: 344, column: 19, scope: !6400, inlinedAt: !6404)
!6639 = !DILocation(line: 344, column: 7, scope: !6400, inlinedAt: !6404)
!6640 = !DILocation(line: 345, column: 10, scope: !6400, inlinedAt: !6404)
!6641 = !DILocation(line: 345, column: 12, scope: !6400, inlinedAt: !6404)
!6642 = !DILocation(line: 345, column: 30, scope: !6400, inlinedAt: !6404)
!6643 = !DILocation(line: 345, column: 32, scope: !6400, inlinedAt: !6404)
!6644 = !DILocation(line: 345, column: 38, scope: !6400, inlinedAt: !6404)
!6645 = !DILocation(line: 345, column: 26, scope: !6400, inlinedAt: !6404)
!6646 = !DILocation(line: 345, column: 7, scope: !6400, inlinedAt: !6404)
!6647 = !DILocation(line: 346, column: 10, scope: !6400, inlinedAt: !6404)
!6648 = !DILocation(line: 346, column: 15, scope: !6400, inlinedAt: !6404)
!6649 = !DILocation(line: 346, column: 17, scope: !6400, inlinedAt: !6404)
!6650 = !DILocation(line: 346, column: 12, scope: !6400, inlinedAt: !6404)
!6651 = !DILocation(line: 346, column: 24, scope: !6400, inlinedAt: !6404)
!6652 = !DILocation(line: 346, column: 7, scope: !6400, inlinedAt: !6404)
!6653 = !DILocation(line: 347, column: 10, scope: !6400, inlinedAt: !6404)
!6654 = !DILocation(line: 347, column: 12, scope: !6400, inlinedAt: !6404)
!6655 = !DILocation(line: 347, column: 7, scope: !6400, inlinedAt: !6404)
!6656 = !DILocation(line: 348, column: 13, scope: !6400, inlinedAt: !6404)
!6657 = !DILocation(line: 348, column: 18, scope: !6400, inlinedAt: !6404)
!6658 = !DILocation(line: 348, column: 20, scope: !6400, inlinedAt: !6404)
!6659 = !DILocation(line: 348, column: 15, scope: !6400, inlinedAt: !6404)
!6660 = !DILocation(line: 348, column: 28, scope: !6400, inlinedAt: !6404)
!6661 = !DILocation(line: 358, column: 39, scope: !6406, inlinedAt: !6409)
!6662 = !DILocation(line: 354, column: 49, scope: !6410)
!6663 = !DILocation(line: 354, column: 17, scope: !6411)
!6664 = !DILocation(line: 355, column: 17, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6410, file: !1008, line: 354, column: 55)
!6666 = !DILocation(line: 357, column: 30, scope: !6411)
!6667 = !DILocation(line: 357, column: 13, scope: !6411)
!6668 = !DILocation(line: 357, column: 16, scope: !6411)
!6669 = !DILocation(line: 357, column: 28, scope: !6411)
!6670 = !DILocation(line: 358, column: 9, scope: !6411)
!6671 = !DILocation(line: 359, column: 5, scope: !6413)
!6672 = !DILocation(line: 362, column: 19, scope: !6392)
!6673 = !DILocation(line: 362, column: 9, scope: !6392)
!6674 = !DILocation(line: 362, column: 9, scope: !6383)
!6675 = !DILocation(line: 364, column: 13, scope: !6390)
!6676 = !DILocation(line: 364, column: 16, scope: !6390)
!6677 = !DILocation(line: 364, column: 29, scope: !6390)
!6678 = !DILocation(line: 364, column: 13, scope: !6391)
!6679 = !DILocation(line: 365, column: 45, scope: !6389)
!6680 = !DILocation(line: 365, column: 36, scope: !6389)
!6681 = !DILocation(line: 365, column: 13, scope: !6389)
!6682 = !DILocation(line: 365, column: 16, scope: !6389)
!6683 = !DILocation(line: 365, column: 34, scope: !6389)
!6684 = !DILocation(line: 366, column: 17, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6389, file: !1008, line: 366, column: 17)
!6686 = !DILocation(line: 366, column: 20, scope: !6685)
!6687 = !DILocation(line: 366, column: 33, scope: !6685)
!6688 = !DILocation(line: 366, column: 17, scope: !6389)
!6689 = !DILocation(line: 368, column: 53, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6685, file: !1008, line: 366, column: 38)
!6691 = !DILocation(line: 368, column: 44, scope: !6690)
!6692 = !DILocation(line: 368, column: 17, scope: !6690)
!6693 = !DILocation(line: 368, column: 20, scope: !6690)
!6694 = !DILocation(line: 368, column: 42, scope: !6690)
!6695 = !DILocation(line: 369, column: 48, scope: !6690)
!6696 = !DILocation(line: 369, column: 39, scope: !6690)
!6697 = !DILocation(line: 369, column: 17, scope: !6690)
!6698 = !DILocation(line: 369, column: 20, scope: !6690)
!6699 = !DILocation(line: 369, column: 37, scope: !6690)
!6700 = !DILocation(line: 370, column: 13, scope: !6690)
!6701 = !DILocation(line: 371, column: 17, scope: !6388)
!6702 = !DILocation(line: 371, column: 20, scope: !6388)
!6703 = !DILocation(line: 371, column: 33, scope: !6388)
!6704 = !DILocation(line: 371, column: 17, scope: !6389)
!6705 = !DILocation(line: 373, column: 65, scope: !6387)
!6706 = !DILocation(line: 373, column: 56, scope: !6387)
!6707 = !DILocation(line: 373, column: 46, scope: !6386)
!6708 = !DILocation(line: 132, column: 9, scope: !6298, inlinedAt: !6396)
!6709 = !DILocation(line: 132, column: 13, scope: !6298, inlinedAt: !6396)
!6710 = !DILocation(line: 132, column: 11, scope: !6298, inlinedAt: !6396)
!6711 = !DILocation(line: 132, column: 9, scope: !6127, inlinedAt: !6396)
!6712 = !DILocation(line: 132, column: 26, scope: !6303, inlinedAt: !6396)
!6713 = !DILocation(line: 132, column: 19, scope: !6303, inlinedAt: !6396)
!6714 = !DILocation(line: 133, column: 14, scope: !6306, inlinedAt: !6396)
!6715 = !DILocation(line: 133, column: 18, scope: !6306, inlinedAt: !6396)
!6716 = !DILocation(line: 133, column: 16, scope: !6306, inlinedAt: !6396)
!6717 = !DILocation(line: 133, column: 14, scope: !6298, inlinedAt: !6396)
!6718 = !DILocation(line: 133, column: 31, scope: !6311, inlinedAt: !6396)
!6719 = !DILocation(line: 133, column: 24, scope: !6311, inlinedAt: !6396)
!6720 = !DILocation(line: 134, column: 17, scope: !6306, inlinedAt: !6396)
!6721 = !DILocation(line: 134, column: 10, scope: !6306, inlinedAt: !6396)
!6722 = !DILocation(line: 135, column: 1, scope: !6127, inlinedAt: !6396)
!6723 = !DILocation(line: 373, column: 17, scope: !6387)
!6724 = !DILocation(line: 373, column: 20, scope: !6387)
!6725 = !DILocation(line: 373, column: 44, scope: !6387)
!6726 = !DILocation(line: 374, column: 60, scope: !6387)
!6727 = !DILocation(line: 374, column: 51, scope: !6387)
!6728 = !DILocation(line: 374, column: 41, scope: !6386)
!6729 = !DILocation(line: 132, column: 9, scope: !6298, inlinedAt: !6385)
!6730 = !DILocation(line: 132, column: 13, scope: !6298, inlinedAt: !6385)
!6731 = !DILocation(line: 132, column: 11, scope: !6298, inlinedAt: !6385)
!6732 = !DILocation(line: 132, column: 9, scope: !6127, inlinedAt: !6385)
!6733 = !DILocation(line: 132, column: 26, scope: !6303, inlinedAt: !6385)
!6734 = !DILocation(line: 132, column: 19, scope: !6303, inlinedAt: !6385)
!6735 = !DILocation(line: 133, column: 14, scope: !6306, inlinedAt: !6385)
!6736 = !DILocation(line: 133, column: 18, scope: !6306, inlinedAt: !6385)
!6737 = !DILocation(line: 133, column: 16, scope: !6306, inlinedAt: !6385)
!6738 = !DILocation(line: 133, column: 14, scope: !6298, inlinedAt: !6385)
!6739 = !DILocation(line: 133, column: 31, scope: !6311, inlinedAt: !6385)
!6740 = !DILocation(line: 133, column: 24, scope: !6311, inlinedAt: !6385)
!6741 = !DILocation(line: 134, column: 17, scope: !6306, inlinedAt: !6385)
!6742 = !DILocation(line: 134, column: 10, scope: !6306, inlinedAt: !6385)
!6743 = !DILocation(line: 135, column: 1, scope: !6127, inlinedAt: !6385)
!6744 = !DILocation(line: 374, column: 17, scope: !6387)
!6745 = !DILocation(line: 374, column: 20, scope: !6387)
!6746 = !DILocation(line: 374, column: 39, scope: !6387)
!6747 = !DILocation(line: 375, column: 13, scope: !6387)
!6748 = !DILocation(line: 376, column: 9, scope: !6389)
!6749 = !DILocation(line: 379, column: 13, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6391, file: !1008, line: 379, column: 13)
!6751 = !DILocation(line: 379, column: 16, scope: !6750)
!6752 = !DILocation(line: 379, column: 23, scope: !6750)
!6753 = !DILocation(line: 379, column: 63, scope: !6754)
!6754 = !DILexicalBlockFile(scope: !6750, file: !1008, discriminator: 1)
!6755 = !DILocation(line: 379, column: 53, scope: !6754)
!6756 = !DILocation(line: 379, column: 27, scope: !6754)
!6757 = !DILocation(line: 379, column: 30, scope: !6754)
!6758 = !DILocation(line: 379, column: 51, scope: !6754)
!6759 = !DILocation(line: 379, column: 13, scope: !6754)
!6760 = !DILocation(line: 380, column: 41, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6750, file: !1008, line: 379, column: 70)
!6762 = !DILocation(line: 380, column: 32, scope: !6761)
!6763 = !DILocation(line: 380, column: 13, scope: !6761)
!6764 = !DILocation(line: 380, column: 16, scope: !6761)
!6765 = !DILocation(line: 380, column: 30, scope: !6761)
!6766 = !DILocation(line: 381, column: 9, scope: !6761)
!6767 = !DILocation(line: 384, column: 13, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6391, file: !1008, line: 384, column: 13)
!6769 = !DILocation(line: 384, column: 16, scope: !6768)
!6770 = !DILocation(line: 384, column: 27, scope: !6768)
!6771 = !DILocation(line: 384, column: 13, scope: !6391)
!6772 = !DILocation(line: 385, column: 20, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 385, column: 13)
!6774 = distinct !DILexicalBlock(scope: !6768, file: !1008, line: 384, column: 59)
!6775 = !DILocation(line: 385, column: 18, scope: !6773)
!6776 = !DILocation(line: 385, column: 25, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6778, file: !1008, discriminator: 1)
!6778 = distinct !DILexicalBlock(scope: !6773, file: !1008, line: 385, column: 13)
!6779 = !DILocation(line: 385, column: 30, scope: !6777)
!6780 = !DILocation(line: 385, column: 33, scope: !6777)
!6781 = !DILocation(line: 385, column: 27, scope: !6777)
!6782 = !DILocation(line: 385, column: 13, scope: !6777)
!6783 = !DILocation(line: 387, column: 31, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !1008, line: 387, column: 21)
!6785 = distinct !DILexicalBlock(scope: !6778, file: !1008, line: 385, column: 61)
!6786 = !DILocation(line: 387, column: 21, scope: !6784)
!6787 = !DILocation(line: 387, column: 21, scope: !6785)
!6788 = !DILocation(line: 388, column: 31, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6784, file: !1008, line: 387, column: 37)
!6790 = !DILocation(line: 388, column: 21, scope: !6789)
!6791 = !DILocation(line: 389, column: 17, scope: !6789)
!6792 = !DILocation(line: 390, column: 13, scope: !6785)
!6793 = !DILocation(line: 385, column: 57, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !6778, file: !1008, discriminator: 2)
!6795 = !DILocation(line: 385, column: 13, scope: !6794)
!6796 = distinct !{!6796, !6797}
!6797 = !DILocation(line: 385, column: 13, scope: !6774)
!6798 = !DILocation(line: 391, column: 27, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 391, column: 17)
!6800 = !DILocation(line: 391, column: 17, scope: !6799)
!6801 = !DILocation(line: 391, column: 17, scope: !6774)
!6802 = !DILocation(line: 392, column: 27, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !1008, line: 391, column: 33)
!6804 = !DILocation(line: 392, column: 17, scope: !6803)
!6805 = !DILocation(line: 393, column: 13, scope: !6803)
!6806 = !DILocation(line: 395, column: 29, scope: !6774)
!6807 = !DILocation(line: 395, column: 20, scope: !6774)
!6808 = !DILocation(line: 395, column: 13, scope: !6774)
!6809 = !DILocation(line: 396, column: 35, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 395, column: 38)
!6811 = !DILocation(line: 396, column: 25, scope: !6810)
!6812 = !DILocation(line: 396, column: 44, scope: !6810)
!6813 = !DILocation(line: 397, column: 35, scope: !6810)
!6814 = !DILocation(line: 397, column: 25, scope: !6810)
!6815 = !DILocation(line: 397, column: 45, scope: !6810)
!6816 = !DILocalVariable(name: "mix_data_size", scope: !6817, file: !1008, line: 399, type: !1015)
!6817 = distinct !DILexicalBlock(scope: !6810, file: !1008, line: 398, column: 25)
!6818 = !DILocation(line: 399, column: 25, scope: !6817)
!6819 = !DILocation(line: 399, column: 51, scope: !6817)
!6820 = !DILocation(line: 399, column: 42, scope: !6817)
!6821 = !DILocation(line: 399, column: 59, scope: !6817)
!6822 = !DILocation(line: 399, column: 64, scope: !6817)
!6823 = !DILocation(line: 400, column: 36, scope: !6817)
!6824 = !DILocation(line: 400, column: 41, scope: !6817)
!6825 = !DILocation(line: 400, column: 21, scope: !6817)
!6826 = !DILocation(line: 401, column: 21, scope: !6817)
!6827 = !DILocation(line: 405, column: 17, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 405, column: 17)
!6829 = !DILocation(line: 405, column: 20, scope: !6828)
!6830 = !DILocation(line: 405, column: 33, scope: !6828)
!6831 = !DILocation(line: 405, column: 17, scope: !6774)
!6832 = !DILocation(line: 406, column: 24, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !1008, line: 406, column: 17)
!6834 = distinct !DILexicalBlock(scope: !6828, file: !1008, line: 405, column: 54)
!6835 = !DILocation(line: 406, column: 22, scope: !6833)
!6836 = !DILocation(line: 406, column: 29, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6838, file: !1008, discriminator: 1)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !1008, line: 406, column: 17)
!6839 = !DILocation(line: 406, column: 34, scope: !6837)
!6840 = !DILocation(line: 406, column: 37, scope: !6837)
!6841 = !DILocation(line: 406, column: 31, scope: !6837)
!6842 = !DILocation(line: 406, column: 17, scope: !6837)
!6843 = !DILocation(line: 407, column: 35, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !1008, line: 407, column: 25)
!6845 = distinct !DILexicalBlock(scope: !6838, file: !1008, line: 406, column: 65)
!6846 = !DILocation(line: 407, column: 25, scope: !6844)
!6847 = !DILocation(line: 407, column: 25, scope: !6845)
!6848 = !DILocation(line: 411, column: 35, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !1008, line: 407, column: 41)
!6850 = !DILocation(line: 411, column: 25, scope: !6849)
!6851 = !DILocation(line: 412, column: 35, scope: !6849)
!6852 = !DILocation(line: 412, column: 25, scope: !6849)
!6853 = !DILocation(line: 413, column: 21, scope: !6849)
!6854 = !DILocation(line: 414, column: 17, scope: !6845)
!6855 = !DILocation(line: 406, column: 61, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6838, file: !1008, discriminator: 2)
!6857 = !DILocation(line: 406, column: 17, scope: !6856)
!6858 = distinct !{!6858, !6859}
!6859 = !DILocation(line: 406, column: 17, scope: !6834)
!6860 = !DILocation(line: 415, column: 13, scope: !6834)
!6861 = !DILocation(line: 417, column: 27, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6774, file: !1008, line: 417, column: 17)
!6863 = !DILocation(line: 417, column: 17, scope: !6862)
!6864 = !DILocation(line: 417, column: 17, scope: !6774)
!6865 = !DILocation(line: 418, column: 26, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !1008, line: 418, column: 17)
!6867 = distinct !DILexicalBlock(scope: !6862, file: !1008, line: 417, column: 33)
!6868 = !DILocation(line: 418, column: 22, scope: !6866)
!6869 = !DILocation(line: 418, column: 31, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6871, file: !1008, discriminator: 1)
!6871 = distinct !DILexicalBlock(scope: !6866, file: !1008, line: 418, column: 17)
!6872 = !DILocation(line: 418, column: 37, scope: !6870)
!6873 = !DILocation(line: 418, column: 40, scope: !6870)
!6874 = !DILocation(line: 418, column: 35, scope: !6870)
!6875 = !DILocation(line: 418, column: 17, scope: !6870)
!6876 = !DILocation(line: 419, column: 25, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !1008, line: 419, column: 25)
!6878 = distinct !DILexicalBlock(scope: !6871, file: !1008, line: 418, column: 59)
!6879 = !DILocation(line: 419, column: 28, scope: !6877)
!6880 = !DILocation(line: 419, column: 39, scope: !6877)
!6881 = !DILocation(line: 419, column: 44, scope: !6877)
!6882 = !DILocation(line: 419, column: 57, scope: !6883)
!6883 = !DILexicalBlockFile(scope: !6877, file: !1008, discriminator: 1)
!6884 = !DILocation(line: 419, column: 47, scope: !6883)
!6885 = !DILocation(line: 419, column: 25, scope: !6883)
!6886 = !DILocation(line: 420, column: 35, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6877, file: !1008, line: 419, column: 63)
!6888 = !DILocation(line: 420, column: 25, scope: !6887)
!6889 = !DILocation(line: 421, column: 21, scope: !6887)
!6890 = !DILocation(line: 422, column: 17, scope: !6878)
!6891 = !DILocation(line: 418, column: 55, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6871, file: !1008, discriminator: 2)
!6893 = !DILocation(line: 418, column: 17, scope: !6892)
!6894 = distinct !{!6894, !6895}
!6895 = !DILocation(line: 418, column: 17, scope: !6867)
!6896 = !DILocation(line: 423, column: 13, scope: !6867)
!6897 = !DILocation(line: 424, column: 9, scope: !6774)
!6898 = !DILocation(line: 425, column: 5, scope: !6391)
!6899 = !DILocation(line: 428, column: 19, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 428, column: 9)
!6901 = !DILocation(line: 428, column: 9, scope: !6900)
!6902 = !DILocation(line: 428, column: 9, scope: !6383)
!6903 = !DILocation(line: 429, column: 38, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !1008, line: 428, column: 25)
!6905 = !DILocation(line: 429, column: 29, scope: !6904)
!6906 = !DILocation(line: 429, column: 9, scope: !6904)
!6907 = !DILocation(line: 429, column: 12, scope: !6904)
!6908 = !DILocation(line: 429, column: 27, scope: !6904)
!6909 = !DILocation(line: 430, column: 19, scope: !6904)
!6910 = !DILocation(line: 430, column: 9, scope: !6904)
!6911 = !DILocation(line: 431, column: 13, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6904, file: !1008, line: 431, column: 13)
!6913 = !DILocation(line: 431, column: 16, scope: !6912)
!6914 = !DILocation(line: 431, column: 29, scope: !6912)
!6915 = !DILocation(line: 431, column: 13, scope: !6904)
!6916 = !DILocation(line: 432, column: 47, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6912, file: !1008, line: 431, column: 51)
!6918 = !DILocation(line: 432, column: 38, scope: !6917)
!6919 = !DILocation(line: 432, column: 13, scope: !6917)
!6920 = !DILocation(line: 432, column: 16, scope: !6917)
!6921 = !DILocation(line: 432, column: 36, scope: !6917)
!6922 = !DILocation(line: 433, column: 48, scope: !6917)
!6923 = !DILocation(line: 433, column: 39, scope: !6917)
!6924 = !DILocation(line: 433, column: 13, scope: !6917)
!6925 = !DILocation(line: 433, column: 16, scope: !6917)
!6926 = !DILocation(line: 433, column: 37, scope: !6917)
!6927 = !DILocation(line: 434, column: 9, scope: !6917)
!6928 = !DILocation(line: 435, column: 13, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6904, file: !1008, line: 435, column: 13)
!6930 = !DILocation(line: 435, column: 16, scope: !6929)
!6931 = !DILocation(line: 435, column: 29, scope: !6929)
!6932 = !DILocation(line: 435, column: 13, scope: !6904)
!6933 = !DILocation(line: 436, column: 50, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !1008, line: 435, column: 49)
!6935 = !DILocation(line: 436, column: 41, scope: !6934)
!6936 = !DILocation(line: 436, column: 13, scope: !6934)
!6937 = !DILocation(line: 436, column: 16, scope: !6934)
!6938 = !DILocation(line: 436, column: 39, scope: !6934)
!6939 = !DILocation(line: 437, column: 9, scope: !6934)
!6940 = !DILocation(line: 438, column: 16, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6904, file: !1008, line: 438, column: 9)
!6942 = !DILocation(line: 438, column: 14, scope: !6941)
!6943 = !DILocation(line: 438, column: 21, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6945, file: !1008, discriminator: 1)
!6945 = distinct !DILexicalBlock(scope: !6941, file: !1008, line: 438, column: 9)
!6946 = !DILocation(line: 438, column: 26, scope: !6944)
!6947 = !DILocation(line: 438, column: 29, scope: !6944)
!6948 = !DILocation(line: 438, column: 23, scope: !6944)
!6949 = !DILocation(line: 438, column: 9, scope: !6944)
!6950 = !DILocation(line: 439, column: 27, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !1008, line: 439, column: 17)
!6952 = distinct !DILexicalBlock(scope: !6945, file: !1008, line: 438, column: 57)
!6953 = !DILocation(line: 439, column: 17, scope: !6951)
!6954 = !DILocation(line: 439, column: 17, scope: !6952)
!6955 = !DILocation(line: 440, column: 27, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6951, file: !1008, line: 439, column: 33)
!6957 = !DILocation(line: 440, column: 17, scope: !6956)
!6958 = !DILocation(line: 441, column: 13, scope: !6956)
!6959 = !DILocation(line: 442, column: 9, scope: !6952)
!6960 = !DILocation(line: 438, column: 53, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6945, file: !1008, discriminator: 2)
!6962 = !DILocation(line: 438, column: 9, scope: !6961)
!6963 = distinct !{!6963, !6964}
!6964 = !DILocation(line: 438, column: 9, scope: !6904)
!6965 = !DILocation(line: 443, column: 13, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6904, file: !1008, line: 443, column: 13)
!6967 = !DILocation(line: 443, column: 16, scope: !6966)
!6968 = !DILocation(line: 443, column: 33, scope: !6966)
!6969 = !DILocation(line: 443, column: 41, scope: !6966)
!6970 = !DILocation(line: 443, column: 13, scope: !6904)
!6971 = !DILocation(line: 444, column: 24, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !1008, line: 443, column: 47)
!6973 = !DILocation(line: 444, column: 13, scope: !6972)
!6974 = !DILocation(line: 445, column: 9, scope: !6972)
!6975 = !DILocation(line: 446, column: 5, scope: !6904)
!6976 = !DILocation(line: 452, column: 9, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 452, column: 9)
!6978 = !DILocation(line: 452, column: 12, scope: !6977)
!6979 = !DILocation(line: 452, column: 23, scope: !6977)
!6980 = !DILocation(line: 452, column: 54, scope: !6977)
!6981 = !DILocation(line: 452, column: 57, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !6977, file: !1008, discriminator: 1)
!6983 = !DILocation(line: 452, column: 60, scope: !6982)
!6984 = !DILocation(line: 452, column: 71, scope: !6982)
!6985 = !DILocation(line: 452, column: 9, scope: !6982)
!6986 = !DILocation(line: 453, column: 20, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6977, file: !1008, line: 452, column: 77)
!6988 = !DILocation(line: 453, column: 9, scope: !6987)
!6989 = !DILocation(line: 454, column: 5, scope: !6987)
!6990 = !DILocation(line: 457, column: 9, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 457, column: 9)
!6992 = !DILocation(line: 457, column: 12, scope: !6991)
!6993 = !DILocation(line: 457, column: 23, scope: !6991)
!6994 = !DILocation(line: 457, column: 54, scope: !6991)
!6995 = !DILocation(line: 458, column: 14, scope: !6991)
!6996 = !DILocation(line: 458, column: 17, scope: !6991)
!6997 = !DILocation(line: 458, column: 28, scope: !6991)
!6998 = !DILocation(line: 458, column: 33, scope: !6991)
!6999 = !DILocation(line: 458, column: 46, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !6991, file: !1008, discriminator: 1)
!7001 = !DILocation(line: 458, column: 36, scope: !7000)
!7002 = !DILocation(line: 457, column: 9, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !6383, file: !1008, discriminator: 1)
!7004 = !DILocation(line: 459, column: 19, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6991, file: !1008, line: 458, column: 53)
!7006 = !DILocation(line: 459, column: 9, scope: !7005)
!7007 = !DILocation(line: 460, column: 5, scope: !7005)
!7008 = !DILocation(line: 463, column: 19, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 463, column: 9)
!7010 = !DILocation(line: 463, column: 9, scope: !7009)
!7011 = !DILocation(line: 463, column: 9, scope: !6383)
!7012 = !DILocalVariable(name: "addbsil", scope: !7013, file: !1008, line: 464, type: !1015)
!7013 = distinct !DILexicalBlock(scope: !7009, file: !1008, line: 463, column: 25)
!7014 = !DILocation(line: 464, column: 13, scope: !7013)
!7015 = !DILocation(line: 464, column: 32, scope: !7013)
!7016 = !DILocation(line: 464, column: 23, scope: !7013)
!7017 = !DILocation(line: 465, column: 16, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !1008, line: 465, column: 9)
!7019 = !DILocation(line: 465, column: 14, scope: !7018)
!7020 = !DILocation(line: 465, column: 21, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !7022, file: !1008, discriminator: 1)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !1008, line: 465, column: 9)
!7023 = !DILocation(line: 465, column: 25, scope: !7021)
!7024 = !DILocation(line: 465, column: 33, scope: !7021)
!7025 = !DILocation(line: 465, column: 23, scope: !7021)
!7026 = !DILocation(line: 465, column: 9, scope: !7021)
!7027 = !DILocation(line: 466, column: 23, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7022, file: !1008, line: 465, column: 43)
!7029 = !DILocation(line: 466, column: 13, scope: !7028)
!7030 = !DILocation(line: 467, column: 9, scope: !7028)
!7031 = !DILocation(line: 465, column: 39, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !7022, file: !1008, discriminator: 2)
!7033 = !DILocation(line: 465, column: 9, scope: !7032)
!7034 = distinct !{!7034, !7035}
!7035 = !DILocation(line: 465, column: 9, scope: !7013)
!7036 = !DILocation(line: 468, column: 5, scope: !7013)
!7037 = !DILocation(line: 472, column: 9, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 472, column: 9)
!7039 = !DILocation(line: 472, column: 12, scope: !7038)
!7040 = !DILocation(line: 472, column: 23, scope: !7038)
!7041 = !DILocation(line: 472, column: 9, scope: !6383)
!7042 = !DILocation(line: 473, column: 43, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7038, file: !1008, line: 472, column: 29)
!7044 = !DILocation(line: 473, column: 33, scope: !7043)
!7045 = !DILocation(line: 473, column: 31, scope: !7043)
!7046 = !DILocation(line: 474, column: 36, scope: !7043)
!7047 = !DILocation(line: 474, column: 26, scope: !7043)
!7048 = !DILocation(line: 474, column: 24, scope: !7043)
!7049 = !DILocation(line: 475, column: 5, scope: !7043)
!7050 = !DILocation(line: 478, column: 31, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7038, file: !1008, line: 475, column: 12)
!7052 = !DILocation(line: 479, column: 24, scope: !7051)
!7053 = !DILocation(line: 482, column: 39, scope: !6383)
!7054 = !DILocation(line: 482, column: 30, scope: !6383)
!7055 = !DILocation(line: 482, column: 5, scope: !6383)
!7056 = !DILocation(line: 482, column: 8, scope: !6383)
!7057 = !DILocation(line: 482, column: 28, scope: !6383)
!7058 = !DILocation(line: 483, column: 43, scope: !6383)
!7059 = !DILocation(line: 483, column: 33, scope: !6383)
!7060 = !DILocation(line: 483, column: 31, scope: !6383)
!7061 = !DILocation(line: 485, column: 40, scope: !6383)
!7062 = !DILocation(line: 485, column: 30, scope: !6383)
!7063 = !DILocation(line: 485, column: 5, scope: !6383)
!7064 = !DILocation(line: 485, column: 8, scope: !6383)
!7065 = !DILocation(line: 485, column: 28, scope: !6383)
!7066 = !DILocation(line: 486, column: 10, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 486, column: 9)
!7068 = !DILocation(line: 486, column: 13, scope: !7067)
!7069 = !DILocation(line: 486, column: 9, scope: !6383)
!7070 = !DILocation(line: 487, column: 16, scope: !7067)
!7071 = !DILocation(line: 487, column: 19, scope: !7067)
!7072 = !DILocation(line: 487, column: 9, scope: !7067)
!7073 = !DILocation(line: 489, column: 39, scope: !6383)
!7074 = !DILocation(line: 489, column: 29, scope: !6383)
!7075 = !DILocation(line: 489, column: 5, scope: !6383)
!7076 = !DILocation(line: 489, column: 8, scope: !6383)
!7077 = !DILocation(line: 489, column: 27, scope: !6383)
!7078 = !DILocation(line: 490, column: 10, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 490, column: 9)
!7080 = !DILocation(line: 490, column: 13, scope: !7079)
!7081 = !DILocation(line: 490, column: 9, scope: !6383)
!7082 = !DILocation(line: 491, column: 17, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !1008, line: 491, column: 9)
!7084 = distinct !DILexicalBlock(scope: !7079, file: !1008, line: 490, column: 33)
!7085 = !DILocation(line: 491, column: 14, scope: !7083)
!7086 = !DILocation(line: 491, column: 22, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !7088, file: !1008, discriminator: 1)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !1008, line: 491, column: 9)
!7089 = !DILocation(line: 491, column: 28, scope: !7087)
!7090 = !DILocation(line: 491, column: 31, scope: !7087)
!7091 = !DILocation(line: 491, column: 25, scope: !7087)
!7092 = !DILocation(line: 491, column: 9, scope: !7087)
!7093 = !DILocation(line: 492, column: 28, scope: !7088)
!7094 = !DILocation(line: 492, column: 13, scope: !7088)
!7095 = !DILocation(line: 492, column: 16, scope: !7088)
!7096 = !DILocation(line: 492, column: 32, scope: !7088)
!7097 = !DILocation(line: 491, column: 47, scope: !7098)
!7098 = !DILexicalBlockFile(scope: !7088, file: !1008, discriminator: 2)
!7099 = !DILocation(line: 491, column: 9, scope: !7098)
!7100 = distinct !{!7100, !7101}
!7101 = !DILocation(line: 491, column: 9, scope: !7084)
!7102 = !DILocation(line: 493, column: 5, scope: !7084)
!7103 = !DILocation(line: 494, column: 40, scope: !6383)
!7104 = !DILocation(line: 494, column: 43, scope: !6383)
!7105 = !DILocation(line: 494, column: 25, scope: !6383)
!7106 = !DILocation(line: 494, column: 28, scope: !6383)
!7107 = !DILocation(line: 494, column: 51, scope: !6383)
!7108 = !DILocation(line: 494, column: 5, scope: !6383)
!7109 = !DILocation(line: 494, column: 8, scope: !6383)
!7110 = !DILocation(line: 494, column: 23, scope: !6383)
!7111 = !DILocation(line: 496, column: 42, scope: !6383)
!7112 = !DILocation(line: 496, column: 32, scope: !6383)
!7113 = !DILocation(line: 496, column: 5, scope: !6383)
!7114 = !DILocation(line: 496, column: 8, scope: !6383)
!7115 = !DILocation(line: 496, column: 30, scope: !6383)
!7116 = !DILocation(line: 497, column: 10, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 497, column: 9)
!7118 = !DILocation(line: 497, column: 13, scope: !7117)
!7119 = !DILocation(line: 497, column: 9, scope: !6383)
!7120 = !DILocation(line: 499, column: 42, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7117, file: !1008, line: 497, column: 36)
!7122 = !DILocation(line: 499, column: 9, scope: !7121)
!7123 = !DILocation(line: 499, column: 12, scope: !7121)
!7124 = !DILocation(line: 499, column: 29, scope: !7121)
!7125 = !DILocation(line: 499, column: 40, scope: !7121)
!7126 = !DILocation(line: 500, column: 42, scope: !7121)
!7127 = !DILocation(line: 500, column: 9, scope: !7121)
!7128 = !DILocation(line: 500, column: 12, scope: !7121)
!7129 = !DILocation(line: 500, column: 29, scope: !7121)
!7130 = !DILocation(line: 500, column: 40, scope: !7121)
!7131 = !DILocation(line: 501, column: 41, scope: !7121)
!7132 = !DILocation(line: 501, column: 9, scope: !7121)
!7133 = !DILocation(line: 501, column: 12, scope: !7121)
!7134 = !DILocation(line: 501, column: 29, scope: !7121)
!7135 = !DILocation(line: 501, column: 39, scope: !7121)
!7136 = !DILocation(line: 502, column: 42, scope: !7121)
!7137 = !DILocation(line: 502, column: 9, scope: !7121)
!7138 = !DILocation(line: 502, column: 12, scope: !7121)
!7139 = !DILocation(line: 502, column: 29, scope: !7121)
!7140 = !DILocation(line: 502, column: 40, scope: !7121)
!7141 = !DILocation(line: 503, column: 37, scope: !7121)
!7142 = !DILocation(line: 503, column: 9, scope: !7121)
!7143 = !DILocation(line: 503, column: 12, scope: !7121)
!7144 = !DILocation(line: 503, column: 29, scope: !7121)
!7145 = !DILocation(line: 503, column: 35, scope: !7121)
!7146 = !DILocation(line: 504, column: 5, scope: !7121)
!7147 = !DILocation(line: 506, column: 37, scope: !6383)
!7148 = !DILocation(line: 506, column: 27, scope: !6383)
!7149 = !DILocation(line: 506, column: 5, scope: !6383)
!7150 = !DILocation(line: 506, column: 8, scope: !6383)
!7151 = !DILocation(line: 506, column: 25, scope: !6383)
!7152 = !DILocation(line: 507, column: 31, scope: !6383)
!7153 = !DILocation(line: 507, column: 21, scope: !6383)
!7154 = !DILocation(line: 507, column: 5, scope: !6383)
!7155 = !DILocation(line: 507, column: 8, scope: !6383)
!7156 = !DILocation(line: 507, column: 19, scope: !6383)
!7157 = !DILocation(line: 508, column: 32, scope: !6383)
!7158 = !DILocation(line: 508, column: 22, scope: !6383)
!7159 = !DILocation(line: 508, column: 5, scope: !6383)
!7160 = !DILocation(line: 508, column: 8, scope: !6383)
!7161 = !DILocation(line: 508, column: 20, scope: !6383)
!7162 = !DILocation(line: 509, column: 38, scope: !6383)
!7163 = !DILocation(line: 509, column: 28, scope: !6383)
!7164 = !DILocation(line: 509, column: 26, scope: !6383)
!7165 = !DILocation(line: 512, column: 20, scope: !6383)
!7166 = !DILocation(line: 513, column: 9, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 513, column: 9)
!7168 = !DILocation(line: 513, column: 12, scope: !7167)
!7169 = !DILocation(line: 513, column: 25, scope: !7167)
!7170 = !DILocation(line: 513, column: 9, scope: !6383)
!7171 = !DILocation(line: 514, column: 18, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !1008, line: 514, column: 9)
!7173 = distinct !DILexicalBlock(scope: !7167, file: !1008, line: 513, column: 30)
!7174 = !DILocation(line: 514, column: 14, scope: !7172)
!7175 = !DILocation(line: 514, column: 23, scope: !7176)
!7176 = !DILexicalBlockFile(scope: !7177, file: !1008, discriminator: 1)
!7177 = distinct !DILexicalBlock(scope: !7172, file: !1008, line: 514, column: 9)
!7178 = !DILocation(line: 514, column: 29, scope: !7176)
!7179 = !DILocation(line: 514, column: 32, scope: !7176)
!7180 = !DILocation(line: 514, column: 27, scope: !7176)
!7181 = !DILocation(line: 514, column: 9, scope: !7176)
!7182 = !DILocation(line: 515, column: 45, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !1008, line: 514, column: 51)
!7184 = !DILocation(line: 515, column: 49, scope: !7183)
!7185 = !DILocation(line: 515, column: 62, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7183, file: !1008, discriminator: 1)
!7187 = !DILocation(line: 515, column: 52, scope: !7186)
!7188 = !DILocation(line: 515, column: 49, scope: !7186)
!7189 = !DILocation(line: 515, column: 49, scope: !7190)
!7190 = !DILexicalBlockFile(scope: !7183, file: !1008, discriminator: 2)
!7191 = !DILocation(line: 515, column: 36, scope: !7190)
!7192 = !DILocation(line: 515, column: 13, scope: !7190)
!7193 = !DILocation(line: 515, column: 16, scope: !7190)
!7194 = !DILocation(line: 515, column: 41, scope: !7190)
!7195 = !DILocation(line: 516, column: 40, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7183, file: !1008, line: 516, column: 17)
!7197 = !DILocation(line: 516, column: 17, scope: !7196)
!7198 = !DILocation(line: 516, column: 20, scope: !7196)
!7199 = !DILocation(line: 516, column: 17, scope: !7183)
!7200 = !DILocation(line: 517, column: 48, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !1008, line: 516, column: 46)
!7202 = !DILocation(line: 517, column: 38, scope: !7201)
!7203 = !DILocation(line: 517, column: 31, scope: !7201)
!7204 = !DILocation(line: 517, column: 17, scope: !7201)
!7205 = !DILocation(line: 517, column: 20, scope: !7201)
!7206 = !DILocation(line: 517, column: 36, scope: !7201)
!7207 = !DILocation(line: 518, column: 13, scope: !7201)
!7208 = !DILocation(line: 519, column: 52, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7196, file: !1008, line: 518, column: 20)
!7210 = !DILocation(line: 519, column: 55, scope: !7209)
!7211 = !DILocation(line: 519, column: 38, scope: !7209)
!7212 = !DILocation(line: 519, column: 41, scope: !7209)
!7213 = !DILocation(line: 519, column: 31, scope: !7209)
!7214 = !DILocation(line: 519, column: 17, scope: !7209)
!7215 = !DILocation(line: 519, column: 20, scope: !7209)
!7216 = !DILocation(line: 519, column: 36, scope: !7209)
!7217 = !DILocation(line: 521, column: 45, scope: !7183)
!7218 = !DILocation(line: 521, column: 31, scope: !7183)
!7219 = !DILocation(line: 521, column: 34, scope: !7183)
!7220 = !DILocation(line: 521, column: 28, scope: !7183)
!7221 = !DILocation(line: 522, column: 9, scope: !7183)
!7222 = !DILocation(line: 514, column: 47, scope: !7223)
!7223 = !DILexicalBlockFile(scope: !7177, file: !1008, discriminator: 2)
!7224 = !DILocation(line: 514, column: 9, scope: !7223)
!7225 = distinct !{!7225, !7226}
!7226 = !DILocation(line: 514, column: 9, scope: !7173)
!7227 = !DILocation(line: 523, column: 5, scope: !7173)
!7228 = !DILocation(line: 524, column: 16, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7167, file: !1008, line: 523, column: 12)
!7230 = !DILocation(line: 524, column: 19, scope: !7229)
!7231 = !DILocation(line: 524, column: 9, scope: !7229)
!7232 = !DILocation(line: 528, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 528, column: 9)
!7234 = !DILocation(line: 528, column: 9, scope: !6383)
!7235 = !DILocation(line: 530, column: 18, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !1008, line: 530, column: 9)
!7237 = distinct !DILexicalBlock(scope: !7233, file: !1008, line: 528, column: 32)
!7238 = !DILocation(line: 530, column: 14, scope: !7236)
!7239 = !DILocation(line: 530, column: 23, scope: !7240)
!7240 = !DILexicalBlockFile(scope: !7241, file: !1008, discriminator: 1)
!7241 = distinct !DILexicalBlock(scope: !7236, file: !1008, line: 530, column: 9)
!7242 = !DILocation(line: 530, column: 29, scope: !7240)
!7243 = !DILocation(line: 530, column: 32, scope: !7240)
!7244 = !DILocation(line: 530, column: 27, scope: !7240)
!7245 = !DILocation(line: 530, column: 9, scope: !7240)
!7246 = !DILocation(line: 531, column: 38, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !1008, line: 531, column: 13)
!7248 = distinct !DILexicalBlock(scope: !7241, file: !1008, line: 530, column: 51)
!7249 = !DILocation(line: 531, column: 24, scope: !7247)
!7250 = !DILocation(line: 531, column: 27, scope: !7247)
!7251 = !DILocation(line: 531, column: 23, scope: !7247)
!7252 = !DILocation(line: 531, column: 21, scope: !7247)
!7253 = !DILocation(line: 531, column: 18, scope: !7247)
!7254 = !DILocation(line: 531, column: 44, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !7256, file: !1008, discriminator: 1)
!7256 = distinct !DILexicalBlock(scope: !7247, file: !1008, line: 531, column: 13)
!7257 = !DILocation(line: 531, column: 50, scope: !7255)
!7258 = !DILocation(line: 531, column: 53, scope: !7255)
!7259 = !DILocation(line: 531, column: 47, scope: !7255)
!7260 = !DILocation(line: 531, column: 13, scope: !7255)
!7261 = !DILocation(line: 532, column: 53, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7256, file: !1008, line: 531, column: 73)
!7263 = !DILocation(line: 532, column: 44, scope: !7262)
!7264 = !DILocation(line: 532, column: 38, scope: !7262)
!7265 = !DILocation(line: 532, column: 17, scope: !7262)
!7266 = !DILocation(line: 532, column: 33, scope: !7262)
!7267 = !DILocation(line: 532, column: 20, scope: !7262)
!7268 = !DILocation(line: 532, column: 42, scope: !7262)
!7269 = !DILocation(line: 533, column: 13, scope: !7262)
!7270 = !DILocation(line: 531, column: 69, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7256, file: !1008, discriminator: 2)
!7272 = !DILocation(line: 531, column: 13, scope: !7271)
!7273 = distinct !{!7273, !7274}
!7274 = !DILocation(line: 531, column: 13, scope: !7248)
!7275 = !DILocation(line: 534, column: 9, scope: !7248)
!7276 = !DILocation(line: 530, column: 47, scope: !7277)
!7277 = !DILexicalBlockFile(scope: !7241, file: !1008, discriminator: 2)
!7278 = !DILocation(line: 530, column: 9, scope: !7277)
!7279 = distinct !{!7279, !7280}
!7280 = !DILocation(line: 530, column: 9, scope: !7237)
!7281 = !DILocation(line: 535, column: 5, scope: !7237)
!7282 = !DILocation(line: 537, column: 22, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !1008, line: 537, column: 9)
!7284 = distinct !DILexicalBlock(scope: !7233, file: !1008, line: 535, column: 12)
!7285 = !DILocation(line: 537, column: 25, scope: !7283)
!7286 = !DILocation(line: 537, column: 38, scope: !7283)
!7287 = !DILocation(line: 537, column: 43, scope: !7283)
!7288 = !DILocation(line: 537, column: 46, scope: !7289)
!7289 = !DILexicalBlockFile(scope: !7283, file: !1008, discriminator: 1)
!7290 = !DILocation(line: 537, column: 43, scope: !7289)
!7291 = !DILocation(line: 537, column: 19, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7283, file: !1008, discriminator: 2)
!7293 = !DILocation(line: 537, column: 17, scope: !7292)
!7294 = !DILocation(line: 537, column: 14, scope: !7292)
!7295 = !DILocation(line: 537, column: 63, scope: !7296)
!7296 = !DILexicalBlockFile(scope: !7297, file: !1008, discriminator: 3)
!7297 = distinct !DILexicalBlock(scope: !7283, file: !1008, line: 537, column: 9)
!7298 = !DILocation(line: 537, column: 69, scope: !7296)
!7299 = !DILocation(line: 537, column: 72, scope: !7296)
!7300 = !DILocation(line: 537, column: 66, scope: !7296)
!7301 = !DILocation(line: 537, column: 9, scope: !7296)
!7302 = !DILocalVariable(name: "frmchexpstr", scope: !7303, file: !1008, line: 538, type: !1015)
!7303 = distinct !DILexicalBlock(scope: !7297, file: !1008, line: 537, column: 92)
!7304 = !DILocation(line: 538, column: 17, scope: !7303)
!7305 = !DILocation(line: 538, column: 40, scope: !7303)
!7306 = !DILocation(line: 538, column: 31, scope: !7303)
!7307 = !DILocation(line: 539, column: 22, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7303, file: !1008, line: 539, column: 13)
!7309 = !DILocation(line: 539, column: 18, scope: !7308)
!7310 = !DILocation(line: 539, column: 27, scope: !7311)
!7311 = !DILexicalBlockFile(scope: !7312, file: !1008, discriminator: 1)
!7312 = distinct !DILexicalBlock(scope: !7308, file: !1008, line: 539, column: 13)
!7313 = !DILocation(line: 539, column: 31, scope: !7311)
!7314 = !DILocation(line: 539, column: 13, scope: !7311)
!7315 = !DILocation(line: 540, column: 76, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7312, file: !1008, line: 539, column: 43)
!7317 = !DILocation(line: 540, column: 44, scope: !7316)
!7318 = !DILocation(line: 540, column: 63, scope: !7316)
!7319 = !DILocation(line: 540, column: 38, scope: !7316)
!7320 = !DILocation(line: 540, column: 17, scope: !7316)
!7321 = !DILocation(line: 540, column: 33, scope: !7316)
!7322 = !DILocation(line: 540, column: 20, scope: !7316)
!7323 = !DILocation(line: 540, column: 42, scope: !7316)
!7324 = !DILocation(line: 541, column: 13, scope: !7316)
!7325 = !DILocation(line: 539, column: 39, scope: !7326)
!7326 = !DILexicalBlockFile(scope: !7312, file: !1008, discriminator: 2)
!7327 = !DILocation(line: 539, column: 13, scope: !7326)
!7328 = distinct !{!7328, !7329}
!7329 = !DILocation(line: 539, column: 13, scope: !7303)
!7330 = !DILocation(line: 542, column: 9, scope: !7303)
!7331 = !DILocation(line: 537, column: 88, scope: !7332)
!7332 = !DILexicalBlockFile(scope: !7297, file: !1008, discriminator: 4)
!7333 = !DILocation(line: 537, column: 9, scope: !7332)
!7334 = distinct !{!7334, !7335}
!7335 = !DILocation(line: 537, column: 9, scope: !7284)
!7336 = !DILocation(line: 545, column: 9, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 545, column: 9)
!7338 = !DILocation(line: 545, column: 12, scope: !7337)
!7339 = !DILocation(line: 545, column: 9, scope: !6383)
!7340 = !DILocation(line: 546, column: 18, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !1008, line: 546, column: 9)
!7342 = distinct !DILexicalBlock(scope: !7337, file: !1008, line: 545, column: 20)
!7343 = !DILocation(line: 546, column: 14, scope: !7341)
!7344 = !DILocation(line: 546, column: 23, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !7346, file: !1008, discriminator: 1)
!7346 = distinct !DILexicalBlock(scope: !7341, file: !1008, line: 546, column: 9)
!7347 = !DILocation(line: 546, column: 29, scope: !7345)
!7348 = !DILocation(line: 546, column: 32, scope: !7345)
!7349 = !DILocation(line: 546, column: 27, scope: !7345)
!7350 = !DILocation(line: 546, column: 9, scope: !7345)
!7351 = !DILocation(line: 547, column: 57, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7346, file: !1008, line: 546, column: 51)
!7353 = !DILocation(line: 547, column: 47, scope: !7352)
!7354 = !DILocation(line: 547, column: 34, scope: !7352)
!7355 = !DILocation(line: 547, column: 37, scope: !7352)
!7356 = !DILocation(line: 547, column: 13, scope: !7352)
!7357 = !DILocation(line: 547, column: 29, scope: !7352)
!7358 = !DILocation(line: 547, column: 16, scope: !7352)
!7359 = !DILocation(line: 547, column: 45, scope: !7352)
!7360 = !DILocation(line: 548, column: 9, scope: !7352)
!7361 = !DILocation(line: 546, column: 47, scope: !7362)
!7362 = !DILexicalBlockFile(scope: !7346, file: !1008, discriminator: 2)
!7363 = !DILocation(line: 546, column: 9, scope: !7362)
!7364 = distinct !{!7364, !7365}
!7365 = !DILocation(line: 546, column: 9, scope: !7342)
!7366 = !DILocation(line: 549, column: 5, scope: !7342)
!7367 = !DILocation(line: 551, column: 9, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 551, column: 9)
!7369 = !DILocation(line: 551, column: 12, scope: !7368)
!7370 = !DILocation(line: 551, column: 23, scope: !7368)
!7371 = !DILocation(line: 551, column: 54, scope: !7368)
!7372 = !DILocation(line: 552, column: 14, scope: !7368)
!7373 = !DILocation(line: 552, column: 17, scope: !7368)
!7374 = !DILocation(line: 552, column: 28, scope: !7368)
!7375 = !DILocation(line: 552, column: 33, scope: !7368)
!7376 = !DILocation(line: 552, column: 46, scope: !7377)
!7377 = !DILexicalBlockFile(scope: !7368, file: !1008, discriminator: 1)
!7378 = !DILocation(line: 552, column: 36, scope: !7377)
!7379 = !DILocation(line: 551, column: 9, scope: !7003)
!7380 = !DILocation(line: 553, column: 19, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7368, file: !1008, line: 552, column: 53)
!7382 = !DILocation(line: 553, column: 28, scope: !7381)
!7383 = !DILocation(line: 553, column: 31, scope: !7381)
!7384 = !DILocation(line: 553, column: 26, scope: !7381)
!7385 = !DILocation(line: 553, column: 9, scope: !7381)
!7386 = !DILocation(line: 554, column: 5, scope: !7381)
!7387 = !DILocation(line: 557, column: 9, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 557, column: 9)
!7389 = !DILocation(line: 557, column: 9, scope: !6383)
!7390 = !DILocation(line: 562, column: 9, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7388, file: !1008, line: 557, column: 25)
!7392 = !DILocation(line: 562, column: 12, scope: !7391)
!7393 = !DILocation(line: 562, column: 31, scope: !7391)
!7394 = !DILocation(line: 563, column: 20, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !1008, line: 563, column: 9)
!7396 = !DILocation(line: 563, column: 35, scope: !7395)
!7397 = !DILocation(line: 563, column: 17, scope: !7395)
!7398 = !DILocation(line: 563, column: 14, scope: !7395)
!7399 = !DILocation(line: 563, column: 42, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !7401, file: !1008, discriminator: 1)
!7401 = distinct !DILexicalBlock(scope: !7395, file: !1008, line: 563, column: 9)
!7402 = !DILocation(line: 563, column: 48, scope: !7400)
!7403 = !DILocation(line: 563, column: 51, scope: !7400)
!7404 = !DILocation(line: 563, column: 45, scope: !7400)
!7405 = !DILocation(line: 563, column: 9, scope: !7400)
!7406 = !DILocalVariable(name: "use_aht", scope: !7407, file: !1008, line: 564, type: !1015)
!7407 = distinct !DILexicalBlock(scope: !7401, file: !1008, line: 563, column: 67)
!7408 = !DILocation(line: 564, column: 17, scope: !7407)
!7409 = !DILocation(line: 565, column: 22, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !1008, line: 565, column: 13)
!7411 = !DILocation(line: 565, column: 18, scope: !7410)
!7412 = !DILocation(line: 565, column: 27, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !7414, file: !1008, discriminator: 1)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !1008, line: 565, column: 13)
!7415 = !DILocation(line: 565, column: 31, scope: !7413)
!7416 = !DILocation(line: 565, column: 13, scope: !7413)
!7417 = !DILocation(line: 566, column: 43, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !1008, line: 566, column: 21)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !1008, line: 565, column: 43)
!7420 = !DILocation(line: 566, column: 22, scope: !7418)
!7421 = !DILocation(line: 566, column: 38, scope: !7418)
!7422 = !DILocation(line: 566, column: 25, scope: !7418)
!7423 = !DILocation(line: 566, column: 47, scope: !7418)
!7424 = !DILocation(line: 566, column: 53, scope: !7418)
!7425 = !DILocation(line: 567, column: 27, scope: !7418)
!7426 = !DILocation(line: 567, column: 30, scope: !7418)
!7427 = !DILocation(line: 567, column: 56, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !7418, file: !1008, discriminator: 1)
!7429 = !DILocation(line: 567, column: 33, scope: !7428)
!7430 = !DILocation(line: 567, column: 36, scope: !7428)
!7431 = !DILocation(line: 566, column: 21, scope: !7432)
!7432 = !DILexicalBlockFile(scope: !7419, file: !1008, discriminator: 1)
!7433 = !DILocation(line: 568, column: 29, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7418, file: !1008, line: 567, column: 63)
!7435 = !DILocation(line: 569, column: 21, scope: !7434)
!7436 = !DILocation(line: 571, column: 13, scope: !7419)
!7437 = !DILocation(line: 565, column: 39, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7414, file: !1008, discriminator: 2)
!7439 = !DILocation(line: 565, column: 13, scope: !7438)
!7440 = distinct !{!7440, !7441}
!7441 = !DILocation(line: 565, column: 13, scope: !7407)
!7442 = !DILocation(line: 572, column: 39, scope: !7407)
!7443 = !DILocation(line: 572, column: 47, scope: !7407)
!7444 = !DILocation(line: 572, column: 60, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7407, file: !1008, discriminator: 1)
!7446 = !DILocation(line: 572, column: 50, scope: !7445)
!7447 = !DILocation(line: 572, column: 47, scope: !7445)
!7448 = !DILocation(line: 572, column: 47, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7407, file: !1008, discriminator: 2)
!7450 = !DILocation(line: 572, column: 33, scope: !7449)
!7451 = !DILocation(line: 572, column: 13, scope: !7449)
!7452 = !DILocation(line: 572, column: 16, scope: !7449)
!7453 = !DILocation(line: 572, column: 37, scope: !7449)
!7454 = !DILocation(line: 573, column: 9, scope: !7407)
!7455 = !DILocation(line: 563, column: 63, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7401, file: !1008, discriminator: 2)
!7457 = !DILocation(line: 563, column: 9, scope: !7456)
!7458 = distinct !{!7458, !7459}
!7459 = !DILocation(line: 563, column: 9, scope: !7391)
!7460 = !DILocation(line: 574, column: 5, scope: !7391)
!7461 = !DILocation(line: 575, column: 16, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7388, file: !1008, line: 574, column: 12)
!7463 = !DILocation(line: 575, column: 19, scope: !7462)
!7464 = !DILocation(line: 575, column: 9, scope: !7462)
!7465 = !DILocation(line: 579, column: 10, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 579, column: 9)
!7467 = !DILocation(line: 579, column: 13, scope: !7466)
!7468 = !DILocation(line: 579, column: 9, scope: !6383)
!7469 = !DILocalVariable(name: "csnroffst", scope: !7470, file: !1008, line: 580, type: !1015)
!7470 = distinct !DILexicalBlock(scope: !7466, file: !1008, line: 579, column: 34)
!7471 = !DILocation(line: 580, column: 13, scope: !7470)
!7472 = !DILocation(line: 580, column: 35, scope: !7470)
!7473 = !DILocation(line: 580, column: 26, scope: !7470)
!7474 = !DILocation(line: 580, column: 43, scope: !7470)
!7475 = !DILocation(line: 580, column: 49, scope: !7470)
!7476 = !DILocalVariable(name: "snroffst", scope: !7470, file: !1008, line: 581, type: !1015)
!7477 = !DILocation(line: 581, column: 13, scope: !7470)
!7478 = !DILocation(line: 581, column: 25, scope: !7470)
!7479 = !DILocation(line: 581, column: 46, scope: !7470)
!7480 = !DILocation(line: 581, column: 37, scope: !7470)
!7481 = !DILocation(line: 581, column: 35, scope: !7470)
!7482 = !DILocation(line: 581, column: 55, scope: !7470)
!7483 = !DILocation(line: 582, column: 17, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7470, file: !1008, line: 582, column: 9)
!7485 = !DILocation(line: 582, column: 14, scope: !7484)
!7486 = !DILocation(line: 582, column: 22, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7488, file: !1008, discriminator: 1)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !1008, line: 582, column: 9)
!7489 = !DILocation(line: 582, column: 28, scope: !7487)
!7490 = !DILocation(line: 582, column: 31, scope: !7487)
!7491 = !DILocation(line: 582, column: 25, scope: !7487)
!7492 = !DILocation(line: 582, column: 9, scope: !7487)
!7493 = !DILocation(line: 583, column: 33, scope: !7488)
!7494 = !DILocation(line: 583, column: 27, scope: !7488)
!7495 = !DILocation(line: 583, column: 13, scope: !7488)
!7496 = !DILocation(line: 583, column: 16, scope: !7488)
!7497 = !DILocation(line: 583, column: 31, scope: !7488)
!7498 = !DILocation(line: 582, column: 43, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !7488, file: !1008, discriminator: 2)
!7500 = !DILocation(line: 582, column: 9, scope: !7499)
!7501 = distinct !{!7501, !7502}
!7502 = !DILocation(line: 582, column: 9, scope: !7470)
!7503 = !DILocation(line: 584, column: 5, scope: !7470)
!7504 = !DILocation(line: 587, column: 9, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 587, column: 9)
!7506 = !DILocation(line: 587, column: 9, scope: !6383)
!7507 = !DILocation(line: 588, column: 17, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !1008, line: 588, column: 9)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !1008, line: 587, column: 36)
!7510 = !DILocation(line: 588, column: 14, scope: !7508)
!7511 = !DILocation(line: 588, column: 22, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !7513, file: !1008, discriminator: 1)
!7513 = distinct !DILexicalBlock(scope: !7508, file: !1008, line: 588, column: 9)
!7514 = !DILocation(line: 588, column: 28, scope: !7512)
!7515 = !DILocation(line: 588, column: 31, scope: !7512)
!7516 = !DILocation(line: 588, column: 25, scope: !7512)
!7517 = !DILocation(line: 588, column: 9, scope: !7512)
!7518 = !DILocation(line: 589, column: 27, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !1008, line: 589, column: 17)
!7520 = distinct !DILexicalBlock(scope: !7513, file: !1008, line: 588, column: 51)
!7521 = !DILocation(line: 589, column: 17, scope: !7519)
!7522 = !DILocation(line: 589, column: 17, scope: !7520)
!7523 = !DILocation(line: 590, column: 27, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7519, file: !1008, line: 589, column: 33)
!7525 = !DILocation(line: 590, column: 17, scope: !7524)
!7526 = !DILocation(line: 591, column: 27, scope: !7524)
!7527 = !DILocation(line: 591, column: 17, scope: !7524)
!7528 = !DILocation(line: 592, column: 13, scope: !7524)
!7529 = !DILocation(line: 593, column: 9, scope: !7520)
!7530 = !DILocation(line: 588, column: 47, scope: !7531)
!7531 = !DILexicalBlockFile(scope: !7513, file: !1008, discriminator: 2)
!7532 = !DILocation(line: 588, column: 9, scope: !7531)
!7533 = distinct !{!7533, !7534}
!7534 = !DILocation(line: 588, column: 9, scope: !7509)
!7535 = !DILocation(line: 594, column: 5, scope: !7509)
!7536 = !DILocation(line: 597, column: 13, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 597, column: 5)
!7538 = !DILocation(line: 597, column: 10, scope: !7537)
!7539 = !DILocation(line: 597, column: 18, scope: !7540)
!7540 = !DILexicalBlockFile(scope: !7541, file: !1008, discriminator: 1)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !1008, line: 597, column: 5)
!7542 = !DILocation(line: 597, column: 24, scope: !7540)
!7543 = !DILocation(line: 597, column: 27, scope: !7540)
!7544 = !DILocation(line: 597, column: 21, scope: !7540)
!7545 = !DILocation(line: 597, column: 5, scope: !7540)
!7546 = !DILocation(line: 598, column: 13, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !1008, line: 598, column: 13)
!7548 = distinct !DILexicalBlock(scope: !7541, file: !1008, line: 597, column: 47)
!7549 = !DILocation(line: 598, column: 34, scope: !7547)
!7550 = !DILocation(line: 598, column: 47, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !7547, file: !1008, discriminator: 1)
!7552 = !DILocation(line: 598, column: 37, scope: !7551)
!7553 = !DILocation(line: 598, column: 13, scope: !7551)
!7554 = !DILocation(line: 599, column: 46, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7547, file: !1008, line: 598, column: 53)
!7556 = !DILocation(line: 599, column: 37, scope: !7555)
!7557 = !DILocation(line: 599, column: 31, scope: !7555)
!7558 = !DILocation(line: 599, column: 13, scope: !7555)
!7559 = !DILocation(line: 599, column: 16, scope: !7555)
!7560 = !DILocation(line: 599, column: 35, scope: !7555)
!7561 = !DILocation(line: 600, column: 9, scope: !7555)
!7562 = !DILocation(line: 601, column: 31, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7547, file: !1008, line: 600, column: 16)
!7564 = !DILocation(line: 601, column: 13, scope: !7563)
!7565 = !DILocation(line: 601, column: 16, scope: !7563)
!7566 = !DILocation(line: 601, column: 35, scope: !7563)
!7567 = !DILocation(line: 603, column: 5, scope: !7548)
!7568 = !DILocation(line: 597, column: 43, scope: !7569)
!7569 = !DILexicalBlockFile(scope: !7541, file: !1008, discriminator: 2)
!7570 = !DILocation(line: 597, column: 5, scope: !7569)
!7571 = distinct !{!7571, !7572}
!7572 = !DILocation(line: 597, column: 5, scope: !6383)
!7573 = !DILocation(line: 606, column: 9, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 606, column: 9)
!7575 = !DILocation(line: 606, column: 12, scope: !7574)
!7576 = !DILocation(line: 606, column: 23, scope: !7574)
!7577 = !DILocation(line: 606, column: 27, scope: !7574)
!7578 = !DILocation(line: 606, column: 40, scope: !7579)
!7579 = !DILexicalBlockFile(scope: !7574, file: !1008, discriminator: 1)
!7580 = !DILocation(line: 606, column: 30, scope: !7579)
!7581 = !DILocation(line: 606, column: 9, scope: !7579)
!7582 = !DILocalVariable(name: "block_start_bits", scope: !7583, file: !1008, line: 611, type: !1015)
!7583 = distinct !DILexicalBlock(scope: !7574, file: !1008, line: 606, column: 46)
!7584 = !DILocation(line: 611, column: 13, scope: !7583)
!7585 = !DILocation(line: 611, column: 33, scope: !7583)
!7586 = !DILocation(line: 611, column: 36, scope: !7583)
!7587 = !DILocation(line: 611, column: 46, scope: !7583)
!7588 = !DILocation(line: 611, column: 78, scope: !7583)
!7589 = !DILocation(line: 611, column: 81, scope: !7583)
!7590 = !DILocation(line: 611, column: 91, scope: !7583)
!7591 = !DILocation(line: 611, column: 94, scope: !7583)
!7592 = !DILocation(line: 611, column: 63, scope: !7583)
!7593 = !DILocation(line: 611, column: 61, scope: !7583)
!7594 = !DILocation(line: 611, column: 55, scope: !7583)
!7595 = !DILocation(line: 611, column: 50, scope: !7583)
!7596 = !DILocation(line: 612, column: 24, scope: !7583)
!7597 = !DILocation(line: 612, column: 29, scope: !7583)
!7598 = !DILocation(line: 612, column: 9, scope: !7583)
!7599 = !DILocation(line: 613, column: 31, scope: !7583)
!7600 = !DILocation(line: 613, column: 34, scope: !7583)
!7601 = !DILocation(line: 613, column: 9, scope: !7583)
!7602 = !DILocation(line: 614, column: 5, scope: !7583)
!7603 = !DILocation(line: 617, column: 13, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !6383, file: !1008, line: 617, column: 5)
!7605 = !DILocation(line: 617, column: 10, scope: !7604)
!7606 = !DILocation(line: 617, column: 18, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7608, file: !1008, discriminator: 1)
!7608 = distinct !DILexicalBlock(scope: !7604, file: !1008, line: 617, column: 5)
!7609 = !DILocation(line: 617, column: 24, scope: !7607)
!7610 = !DILocation(line: 617, column: 27, scope: !7607)
!7611 = !DILocation(line: 617, column: 21, scope: !7607)
!7612 = !DILocation(line: 617, column: 5, scope: !7607)
!7613 = !DILocation(line: 618, column: 29, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7608, file: !1008, line: 617, column: 47)
!7615 = !DILocation(line: 618, column: 9, scope: !7614)
!7616 = !DILocation(line: 618, column: 12, scope: !7614)
!7617 = !DILocation(line: 618, column: 33, scope: !7614)
!7618 = !DILocation(line: 619, column: 29, scope: !7614)
!7619 = !DILocation(line: 619, column: 9, scope: !7614)
!7620 = !DILocation(line: 619, column: 12, scope: !7614)
!7621 = !DILocation(line: 619, column: 33, scope: !7614)
!7622 = !DILocation(line: 620, column: 5, scope: !7614)
!7623 = !DILocation(line: 617, column: 43, scope: !7624)
!7624 = !DILexicalBlockFile(scope: !7608, file: !1008, discriminator: 2)
!7625 = !DILocation(line: 617, column: 5, scope: !7624)
!7626 = distinct !{!7626, !7627}
!7627 = !DILocation(line: 617, column: 5, scope: !6383)
!7628 = !DILocation(line: 621, column: 5, scope: !6383)
!7629 = !DILocation(line: 621, column: 8, scope: !6383)
!7630 = !DILocation(line: 621, column: 23, scope: !6383)
!7631 = !DILocation(line: 623, column: 5, scope: !6383)
!7632 = !DILocation(line: 624, column: 1, scope: !6383)
!7633 = distinct !DISubprogram(name: "get_bits", scope: !1867, file: !1867, line: 381, type: !7634, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!1016, !3957, !1015}
!7636 = !DILocalVariable(name: "x", arg: 1, scope: !7637, file: !2370, line: 66, type: !1038)
!7637 = distinct !DISubprogram(name: "av_bswap32", scope: !2370, file: !2370, line: 66, type: !7638, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!1038, !1038}
!7640 = !DILocation(line: 66, column: 98, scope: !7637, inlinedAt: !7641)
!7641 = distinct !DILocation(line: 401, column: 16, scope: !7633)
!7642 = !DILocalVariable(name: "s", arg: 1, scope: !7633, file: !1867, line: 381, type: !3957)
!7643 = !DILocation(line: 381, column: 52, scope: !7633)
!7644 = !DILocalVariable(name: "n", arg: 2, scope: !7633, file: !1867, line: 381, type: !1015)
!7645 = !DILocation(line: 381, column: 59, scope: !7633)
!7646 = !DILocalVariable(name: "tmp", scope: !7633, file: !1867, line: 383, type: !1015)
!7647 = !DILocation(line: 383, column: 18, scope: !7633)
!7648 = !DILocalVariable(name: "re_index", scope: !7633, file: !1867, line: 399, type: !1016)
!7649 = !DILocation(line: 399, column: 18, scope: !7633)
!7650 = !DILocation(line: 399, column: 30, scope: !7633)
!7651 = !DILocation(line: 399, column: 34, scope: !7633)
!7652 = !DILocalVariable(name: "re_cache", scope: !7633, file: !1867, line: 399, type: !1016)
!7653 = !DILocation(line: 399, column: 78, scope: !7633)
!7654 = !DILocalVariable(name: "re_size_plus8", scope: !7633, file: !1867, line: 399, type: !1016)
!7655 = !DILocation(line: 399, column: 101, scope: !7633)
!7656 = !DILocation(line: 399, column: 118, scope: !7633)
!7657 = !DILocation(line: 399, column: 122, scope: !7633)
!7658 = !DILocation(line: 401, column: 60, scope: !7633)
!7659 = !DILocation(line: 401, column: 64, scope: !7633)
!7660 = !DILocation(line: 401, column: 74, scope: !7633)
!7661 = !DILocation(line: 401, column: 83, scope: !7633)
!7662 = !DILocation(line: 401, column: 71, scope: !7633)
!7663 = !DILocation(line: 401, column: 92, scope: !7633)
!7664 = !DILocation(line: 401, column: 16, scope: !7633)
!7665 = !DILocation(line: 68, column: 16, scope: !7637, inlinedAt: !7641)
!7666 = !DILocation(line: 68, column: 19, scope: !7637, inlinedAt: !7641)
!7667 = !DILocation(line: 68, column: 24, scope: !7637, inlinedAt: !7641)
!7668 = !DILocation(line: 68, column: 38, scope: !7637, inlinedAt: !7641)
!7669 = !DILocation(line: 68, column: 41, scope: !7637, inlinedAt: !7641)
!7670 = !DILocation(line: 68, column: 46, scope: !7637, inlinedAt: !7641)
!7671 = !DILocation(line: 68, column: 34, scope: !7637, inlinedAt: !7641)
!7672 = !DILocation(line: 68, column: 57, scope: !7637, inlinedAt: !7641)
!7673 = !DILocation(line: 68, column: 69, scope: !7637, inlinedAt: !7641)
!7674 = !DILocation(line: 68, column: 72, scope: !7637, inlinedAt: !7641)
!7675 = !DILocation(line: 68, column: 79, scope: !7637, inlinedAt: !7641)
!7676 = !DILocation(line: 68, column: 84, scope: !7637, inlinedAt: !7641)
!7677 = !DILocation(line: 68, column: 99, scope: !7637, inlinedAt: !7641)
!7678 = !DILocation(line: 68, column: 102, scope: !7637, inlinedAt: !7641)
!7679 = !DILocation(line: 68, column: 109, scope: !7637, inlinedAt: !7641)
!7680 = !DILocation(line: 68, column: 114, scope: !7637, inlinedAt: !7641)
!7681 = !DILocation(line: 68, column: 94, scope: !7637, inlinedAt: !7641)
!7682 = !DILocation(line: 68, column: 63, scope: !7637, inlinedAt: !7641)
!7683 = !DILocation(line: 401, column: 100, scope: !7633)
!7684 = !DILocation(line: 401, column: 109, scope: !7633)
!7685 = !DILocation(line: 401, column: 96, scope: !7633)
!7686 = !DILocation(line: 401, column: 14, scope: !7633)
!7687 = !DILocation(line: 402, column: 21, scope: !7633)
!7688 = !DILocation(line: 402, column: 31, scope: !7633)
!7689 = !DILocation(line: 402, column: 11, scope: !7633)
!7690 = !DILocation(line: 402, column: 9, scope: !7633)
!7691 = !DILocation(line: 403, column: 18, scope: !7633)
!7692 = !DILocation(line: 403, column: 36, scope: !7633)
!7693 = !DILocation(line: 403, column: 48, scope: !7633)
!7694 = !DILocation(line: 403, column: 45, scope: !7633)
!7695 = !DILocation(line: 403, column: 33, scope: !7633)
!7696 = !DILocation(line: 403, column: 17, scope: !7633)
!7697 = !DILocation(line: 403, column: 55, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !7633, file: !1867, discriminator: 1)
!7699 = !DILocation(line: 403, column: 67, scope: !7698)
!7700 = !DILocation(line: 403, column: 64, scope: !7698)
!7701 = !DILocation(line: 403, column: 17, scope: !7698)
!7702 = !DILocation(line: 403, column: 74, scope: !7703)
!7703 = !DILexicalBlockFile(scope: !7633, file: !1867, discriminator: 2)
!7704 = !DILocation(line: 403, column: 17, scope: !7703)
!7705 = !DILocation(line: 403, column: 17, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7633, file: !1867, discriminator: 3)
!7707 = !DILocation(line: 403, column: 14, scope: !7706)
!7708 = !DILocation(line: 404, column: 18, scope: !7633)
!7709 = !DILocation(line: 404, column: 6, scope: !7633)
!7710 = !DILocation(line: 404, column: 10, scope: !7633)
!7711 = !DILocation(line: 404, column: 16, scope: !7633)
!7712 = !DILocation(line: 406, column: 12, scope: !7633)
!7713 = !DILocation(line: 406, column: 5, scope: !7633)
!7714 = distinct !DISubprogram(name: "get_bits1", scope: !1867, file: !1867, line: 487, type: !7715, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{!1016, !3957}
!7717 = !DILocalVariable(name: "s", arg: 1, scope: !7714, file: !1867, line: 487, type: !3957)
!7718 = !DILocation(line: 487, column: 53, scope: !7714)
!7719 = !DILocalVariable(name: "index", scope: !7714, file: !1867, line: 499, type: !1016)
!7720 = !DILocation(line: 499, column: 18, scope: !7714)
!7721 = !DILocation(line: 499, column: 26, scope: !7714)
!7722 = !DILocation(line: 499, column: 29, scope: !7714)
!7723 = !DILocalVariable(name: "result", scope: !7714, file: !1867, line: 500, type: !1039)
!7724 = !DILocation(line: 500, column: 13, scope: !7714)
!7725 = !DILocation(line: 500, column: 32, scope: !7714)
!7726 = !DILocation(line: 500, column: 38, scope: !7714)
!7727 = !DILocation(line: 500, column: 22, scope: !7714)
!7728 = !DILocation(line: 500, column: 25, scope: !7714)
!7729 = !DILocation(line: 505, column: 16, scope: !7714)
!7730 = !DILocation(line: 505, column: 22, scope: !7714)
!7731 = !DILocation(line: 505, column: 12, scope: !7714)
!7732 = !DILocation(line: 506, column: 12, scope: !7714)
!7733 = !DILocation(line: 509, column: 9, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7714, file: !1867, line: 509, column: 9)
!7735 = !DILocation(line: 509, column: 12, scope: !7734)
!7736 = !DILocation(line: 509, column: 20, scope: !7734)
!7737 = !DILocation(line: 509, column: 23, scope: !7734)
!7738 = !DILocation(line: 509, column: 18, scope: !7734)
!7739 = !DILocation(line: 509, column: 9, scope: !7714)
!7740 = !DILocation(line: 511, column: 14, scope: !7734)
!7741 = !DILocation(line: 511, column: 9, scope: !7734)
!7742 = !DILocation(line: 512, column: 16, scope: !7714)
!7743 = !DILocation(line: 512, column: 5, scope: !7714)
!7744 = !DILocation(line: 512, column: 8, scope: !7714)
!7745 = !DILocation(line: 512, column: 14, scope: !7714)
!7746 = !DILocation(line: 514, column: 12, scope: !7714)
!7747 = !DILocation(line: 514, column: 5, scope: !7714)
!7748 = distinct !DISubprogram(name: "skip_bits", scope: !1867, file: !1867, line: 460, type: !7749, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{null, !3957, !1015}
!7751 = !DILocalVariable(name: "s", arg: 1, scope: !7748, file: !1867, line: 460, type: !3957)
!7752 = !DILocation(line: 460, column: 45, scope: !7748)
!7753 = !DILocalVariable(name: "n", arg: 2, scope: !7748, file: !1867, line: 460, type: !1015)
!7754 = !DILocation(line: 460, column: 52, scope: !7748)
!7755 = !DILocalVariable(name: "re_index", scope: !7748, file: !1867, line: 481, type: !1016)
!7756 = !DILocation(line: 481, column: 18, scope: !7748)
!7757 = !DILocation(line: 481, column: 30, scope: !7748)
!7758 = !DILocation(line: 481, column: 34, scope: !7748)
!7759 = !DILocalVariable(name: "re_cache", scope: !7748, file: !1867, line: 481, type: !1016)
!7760 = !DILocation(line: 481, column: 78, scope: !7748)
!7761 = !DILocalVariable(name: "re_size_plus8", scope: !7748, file: !1867, line: 481, type: !1016)
!7762 = !DILocation(line: 481, column: 101, scope: !7748)
!7763 = !DILocation(line: 481, column: 118, scope: !7748)
!7764 = !DILocation(line: 481, column: 122, scope: !7748)
!7765 = !DILocation(line: 482, column: 18, scope: !7748)
!7766 = !DILocation(line: 482, column: 36, scope: !7748)
!7767 = !DILocation(line: 482, column: 48, scope: !7748)
!7768 = !DILocation(line: 482, column: 45, scope: !7748)
!7769 = !DILocation(line: 482, column: 33, scope: !7748)
!7770 = !DILocation(line: 482, column: 17, scope: !7748)
!7771 = !DILocation(line: 482, column: 55, scope: !7772)
!7772 = !DILexicalBlockFile(scope: !7748, file: !1867, discriminator: 1)
!7773 = !DILocation(line: 482, column: 67, scope: !7772)
!7774 = !DILocation(line: 482, column: 64, scope: !7772)
!7775 = !DILocation(line: 482, column: 17, scope: !7772)
!7776 = !DILocation(line: 482, column: 74, scope: !7777)
!7777 = !DILexicalBlockFile(scope: !7748, file: !1867, discriminator: 2)
!7778 = !DILocation(line: 482, column: 17, scope: !7777)
!7779 = !DILocation(line: 482, column: 17, scope: !7780)
!7780 = !DILexicalBlockFile(scope: !7748, file: !1867, discriminator: 3)
!7781 = !DILocation(line: 482, column: 14, scope: !7780)
!7782 = !DILocation(line: 483, column: 18, scope: !7748)
!7783 = !DILocation(line: 483, column: 6, scope: !7748)
!7784 = !DILocation(line: 483, column: 10, scope: !7748)
!7785 = !DILocation(line: 483, column: 16, scope: !7748)
!7786 = !DILocation(line: 485, column: 1, scope: !7748)
!7787 = distinct !DISubprogram(name: "NEG_USR32", scope: !7788, file: !7788, line: 124, type: !7789, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7788 = !DIFile(filename: "./libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!1038, !1038, !1276}
!7791 = !DILocalVariable(name: "a", arg: 1, scope: !7787, file: !7788, line: 124, type: !1038)
!7792 = !DILocation(line: 124, column: 43, scope: !7787)
!7793 = !DILocalVariable(name: "s", arg: 2, scope: !7787, file: !7788, line: 124, type: !1276)
!7794 = !DILocation(line: 124, column: 53, scope: !7787)
!7795 = !DILocation(line: 125, column: 5, scope: !7787)
!7796 = !DILocation(line: 127, column: 29, scope: !7787)
!7797 = !DILocation(line: 127, column: 28, scope: !7787)
!7798 = !DILocation(line: 127, column: 18, scope: !7787)
!7799 = !{i32 110569, i32 110583}
!7800 = !DILocation(line: 129, column: 12, scope: !7787)
!7801 = !DILocation(line: 129, column: 5, scope: !7787)
!7802 = distinct !DISubprogram(name: "skip_bits_long", scope: !1867, file: !1867, line: 293, type: !7749, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7803 = !DILocation(line: 127, column: 87, scope: !6127, inlinedAt: !7804)
!7804 = distinct !DILocation(line: 301, column: 17, scope: !7802)
!7805 = !DILocation(line: 127, column: 94, scope: !6127, inlinedAt: !7804)
!7806 = !DILocation(line: 127, column: 104, scope: !6127, inlinedAt: !7804)
!7807 = !DILocalVariable(name: "s", arg: 1, scope: !7802, file: !1867, line: 293, type: !3957)
!7808 = !DILocation(line: 293, column: 50, scope: !7802)
!7809 = !DILocalVariable(name: "n", arg: 2, scope: !7802, file: !1867, line: 293, type: !1015)
!7810 = !DILocation(line: 293, column: 57, scope: !7802)
!7811 = !DILocation(line: 301, column: 27, scope: !7802)
!7812 = !DILocation(line: 301, column: 31, scope: !7802)
!7813 = !DILocation(line: 301, column: 34, scope: !7802)
!7814 = !DILocation(line: 301, column: 30, scope: !7802)
!7815 = !DILocation(line: 301, column: 41, scope: !7802)
!7816 = !DILocation(line: 301, column: 44, scope: !7802)
!7817 = !DILocation(line: 301, column: 65, scope: !7802)
!7818 = !DILocation(line: 301, column: 68, scope: !7802)
!7819 = !DILocation(line: 301, column: 63, scope: !7802)
!7820 = !DILocation(line: 301, column: 17, scope: !7802)
!7821 = !DILocation(line: 132, column: 9, scope: !6298, inlinedAt: !7804)
!7822 = !DILocation(line: 132, column: 13, scope: !6298, inlinedAt: !7804)
!7823 = !DILocation(line: 132, column: 11, scope: !6298, inlinedAt: !7804)
!7824 = !DILocation(line: 132, column: 9, scope: !6127, inlinedAt: !7804)
!7825 = !DILocation(line: 132, column: 26, scope: !6303, inlinedAt: !7804)
!7826 = !DILocation(line: 132, column: 19, scope: !6303, inlinedAt: !7804)
!7827 = !DILocation(line: 133, column: 14, scope: !6306, inlinedAt: !7804)
!7828 = !DILocation(line: 133, column: 18, scope: !6306, inlinedAt: !7804)
!7829 = !DILocation(line: 133, column: 16, scope: !6306, inlinedAt: !7804)
!7830 = !DILocation(line: 133, column: 14, scope: !6298, inlinedAt: !7804)
!7831 = !DILocation(line: 133, column: 31, scope: !6311, inlinedAt: !7804)
!7832 = !DILocation(line: 133, column: 24, scope: !6311, inlinedAt: !7804)
!7833 = !DILocation(line: 134, column: 17, scope: !6306, inlinedAt: !7804)
!7834 = !DILocation(line: 134, column: 10, scope: !6306, inlinedAt: !7804)
!7835 = !DILocation(line: 135, column: 1, scope: !6127, inlinedAt: !7804)
!7836 = !DILocation(line: 301, column: 5, scope: !7802)
!7837 = !DILocation(line: 301, column: 8, scope: !7802)
!7838 = !DILocation(line: 301, column: 14, scope: !7802)
!7839 = !DILocation(line: 304, column: 1, scope: !7802)
!7840 = distinct !DISubprogram(name: "skip_bits1", scope: !1867, file: !1867, line: 523, type: !7841, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7841 = !DISubroutineType(types: !7842)
!7842 = !{null, !3957}
!7843 = !DILocalVariable(name: "s", arg: 1, scope: !7840, file: !1867, line: 523, type: !3957)
!7844 = !DILocation(line: 523, column: 46, scope: !7840)
!7845 = !DILocation(line: 525, column: 15, scope: !7840)
!7846 = !DILocation(line: 525, column: 5, scope: !7840)
!7847 = !DILocation(line: 526, column: 1, scope: !7840)
!7848 = distinct !DISubprogram(name: "spx_strategy", scope: !1801, file: !1801, line: 816, type: !7849, isLocal: true, isDefinition: true, scopeLine: 817, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!1015, !1857, !1015}
!7851 = !DILocalVariable(name: "s", arg: 1, scope: !7848, file: !1801, line: 816, type: !1857)
!7852 = !DILocation(line: 816, column: 50, scope: !7848)
!7853 = !DILocalVariable(name: "blk", arg: 2, scope: !7848, file: !1801, line: 816, type: !1015)
!7854 = !DILocation(line: 816, column: 57, scope: !7848)
!7855 = !DILocalVariable(name: "bc", scope: !7848, file: !1801, line: 818, type: !3957)
!7856 = !DILocation(line: 818, column: 20, scope: !7848)
!7857 = !DILocation(line: 818, column: 26, scope: !7848)
!7858 = !DILocation(line: 818, column: 29, scope: !7848)
!7859 = !DILocalVariable(name: "fbw_channels", scope: !7848, file: !1801, line: 819, type: !1015)
!7860 = !DILocation(line: 819, column: 9, scope: !7848)
!7861 = !DILocation(line: 819, column: 24, scope: !7848)
!7862 = !DILocation(line: 819, column: 27, scope: !7848)
!7863 = !DILocalVariable(name: "dst_start_freq", scope: !7848, file: !1801, line: 820, type: !1015)
!7864 = !DILocation(line: 820, column: 9, scope: !7848)
!7865 = !DILocalVariable(name: "dst_end_freq", scope: !7848, file: !1801, line: 820, type: !1015)
!7866 = !DILocation(line: 820, column: 25, scope: !7848)
!7867 = !DILocalVariable(name: "src_start_freq", scope: !7848, file: !1801, line: 820, type: !1015)
!7868 = !DILocation(line: 820, column: 39, scope: !7848)
!7869 = !DILocalVariable(name: "start_subband", scope: !7848, file: !1801, line: 821, type: !1015)
!7870 = !DILocation(line: 821, column: 9, scope: !7848)
!7871 = !DILocalVariable(name: "end_subband", scope: !7848, file: !1801, line: 821, type: !1015)
!7872 = !DILocation(line: 821, column: 24, scope: !7848)
!7873 = !DILocalVariable(name: "ch", scope: !7848, file: !1801, line: 821, type: !1015)
!7874 = !DILocation(line: 821, column: 37, scope: !7848)
!7875 = !DILocation(line: 824, column: 9, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 824, column: 9)
!7877 = !DILocation(line: 824, column: 12, scope: !7876)
!7878 = !DILocation(line: 824, column: 25, scope: !7876)
!7879 = !DILocation(line: 824, column: 9, scope: !7848)
!7880 = !DILocation(line: 825, column: 9, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7876, file: !1801, line: 824, column: 45)
!7882 = !DILocation(line: 825, column: 12, scope: !7881)
!7883 = !DILocation(line: 825, column: 32, scope: !7881)
!7884 = !DILocation(line: 826, column: 5, scope: !7881)
!7885 = !DILocation(line: 827, column: 17, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !1801, line: 827, column: 9)
!7887 = distinct !DILexicalBlock(scope: !7876, file: !1801, line: 826, column: 12)
!7888 = !DILocation(line: 827, column: 14, scope: !7886)
!7889 = !DILocation(line: 827, column: 22, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7891, file: !1801, discriminator: 1)
!7891 = distinct !DILexicalBlock(scope: !7886, file: !1801, line: 827, column: 9)
!7892 = !DILocation(line: 827, column: 28, scope: !7890)
!7893 = !DILocation(line: 827, column: 25, scope: !7890)
!7894 = !DILocation(line: 827, column: 9, scope: !7890)
!7895 = !DILocation(line: 828, column: 49, scope: !7891)
!7896 = !DILocation(line: 828, column: 39, scope: !7891)
!7897 = !DILocation(line: 828, column: 33, scope: !7891)
!7898 = !DILocation(line: 828, column: 13, scope: !7891)
!7899 = !DILocation(line: 828, column: 16, scope: !7891)
!7900 = !DILocation(line: 828, column: 37, scope: !7891)
!7901 = !DILocation(line: 827, column: 44, scope: !7902)
!7902 = !DILexicalBlockFile(scope: !7891, file: !1801, discriminator: 2)
!7903 = !DILocation(line: 827, column: 9, scope: !7902)
!7904 = distinct !{!7904, !7905}
!7905 = !DILocation(line: 827, column: 9, scope: !7887)
!7906 = !DILocation(line: 833, column: 31, scope: !7848)
!7907 = !DILocation(line: 833, column: 22, scope: !7848)
!7908 = !DILocation(line: 833, column: 20, scope: !7848)
!7909 = !DILocation(line: 834, column: 30, scope: !7848)
!7910 = !DILocation(line: 834, column: 21, scope: !7848)
!7911 = !DILocation(line: 834, column: 37, scope: !7848)
!7912 = !DILocation(line: 834, column: 19, scope: !7848)
!7913 = !DILocation(line: 835, column: 9, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 835, column: 9)
!7915 = !DILocation(line: 835, column: 23, scope: !7914)
!7916 = !DILocation(line: 835, column: 9, scope: !7848)
!7917 = !DILocation(line: 836, column: 26, scope: !7914)
!7918 = !DILocation(line: 836, column: 40, scope: !7914)
!7919 = !DILocation(line: 836, column: 23, scope: !7914)
!7920 = !DILocation(line: 836, column: 9, scope: !7914)
!7921 = !DILocation(line: 837, column: 28, scope: !7848)
!7922 = !DILocation(line: 837, column: 19, scope: !7848)
!7923 = !DILocation(line: 837, column: 35, scope: !7848)
!7924 = !DILocation(line: 837, column: 17, scope: !7848)
!7925 = !DILocation(line: 841, column: 9, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 841, column: 9)
!7927 = !DILocation(line: 841, column: 21, scope: !7926)
!7928 = !DILocation(line: 841, column: 9, scope: !7848)
!7929 = !DILocation(line: 842, column: 24, scope: !7926)
!7930 = !DILocation(line: 842, column: 36, scope: !7926)
!7931 = !DILocation(line: 842, column: 21, scope: !7926)
!7932 = !DILocation(line: 842, column: 9, scope: !7926)
!7933 = !DILocation(line: 843, column: 22, scope: !7848)
!7934 = !DILocation(line: 843, column: 37, scope: !7848)
!7935 = !DILocation(line: 843, column: 42, scope: !7848)
!7936 = !DILocation(line: 843, column: 20, scope: !7848)
!7937 = !DILocation(line: 844, column: 22, scope: !7848)
!7938 = !DILocation(line: 844, column: 36, scope: !7848)
!7939 = !DILocation(line: 844, column: 41, scope: !7848)
!7940 = !DILocation(line: 844, column: 20, scope: !7848)
!7941 = !DILocation(line: 845, column: 20, scope: !7848)
!7942 = !DILocation(line: 845, column: 32, scope: !7848)
!7943 = !DILocation(line: 845, column: 37, scope: !7848)
!7944 = !DILocation(line: 845, column: 18, scope: !7848)
!7945 = !DILocation(line: 848, column: 9, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 848, column: 9)
!7947 = !DILocation(line: 848, column: 26, scope: !7946)
!7948 = !DILocation(line: 848, column: 23, scope: !7946)
!7949 = !DILocation(line: 848, column: 9, scope: !7848)
!7950 = !DILocation(line: 849, column: 16, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7946, file: !1801, line: 848, column: 39)
!7952 = !DILocation(line: 849, column: 19, scope: !7951)
!7953 = !DILocation(line: 850, column: 38, scope: !7951)
!7954 = !DILocation(line: 850, column: 53, scope: !7951)
!7955 = !DILocation(line: 849, column: 9, scope: !7951)
!7956 = !DILocation(line: 851, column: 9, scope: !7951)
!7957 = !DILocation(line: 853, column: 9, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 853, column: 9)
!7959 = !DILocation(line: 853, column: 27, scope: !7958)
!7960 = !DILocation(line: 853, column: 24, scope: !7958)
!7961 = !DILocation(line: 853, column: 9, scope: !7848)
!7962 = !DILocation(line: 854, column: 16, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7958, file: !1801, line: 853, column: 43)
!7964 = !DILocation(line: 854, column: 19, scope: !7963)
!7965 = !DILocation(line: 855, column: 47, scope: !7963)
!7966 = !DILocation(line: 855, column: 63, scope: !7963)
!7967 = !DILocation(line: 854, column: 9, scope: !7963)
!7968 = !DILocation(line: 856, column: 9, scope: !7963)
!7969 = !DILocation(line: 859, column: 29, scope: !7848)
!7970 = !DILocation(line: 859, column: 5, scope: !7848)
!7971 = !DILocation(line: 859, column: 8, scope: !7848)
!7972 = !DILocation(line: 859, column: 27, scope: !7848)
!7973 = !DILocation(line: 860, column: 29, scope: !7848)
!7974 = !DILocation(line: 860, column: 5, scope: !7848)
!7975 = !DILocation(line: 860, column: 8, scope: !7848)
!7976 = !DILocation(line: 860, column: 27, scope: !7848)
!7977 = !DILocation(line: 862, column: 31, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7848, file: !1801, line: 861, column: 9)
!7979 = !DILocation(line: 862, column: 9, scope: !7978)
!7980 = !DILocation(line: 862, column: 12, scope: !7978)
!7981 = !DILocation(line: 862, column: 29, scope: !7978)
!7982 = !DILocation(line: 864, column: 27, scope: !7848)
!7983 = !DILocation(line: 864, column: 31, scope: !7848)
!7984 = !DILocation(line: 864, column: 36, scope: !7848)
!7985 = !DILocation(line: 864, column: 39, scope: !7848)
!7986 = !DILocation(line: 865, column: 27, scope: !7848)
!7987 = !DILocation(line: 865, column: 42, scope: !7848)
!7988 = !DILocation(line: 867, column: 28, scope: !7848)
!7989 = !DILocation(line: 867, column: 31, scope: !7848)
!7990 = !DILocation(line: 868, column: 27, scope: !7848)
!7991 = !DILocation(line: 868, column: 30, scope: !7848)
!7992 = !DILocation(line: 869, column: 27, scope: !7848)
!7993 = !DILocation(line: 869, column: 30, scope: !7848)
!7994 = !DILocation(line: 864, column: 5, scope: !7848)
!7995 = !DILocation(line: 870, column: 5, scope: !7848)
!7996 = !DILocation(line: 871, column: 1, scope: !7848)
!7997 = distinct !DISubprogram(name: "spx_coordinates", scope: !1801, file: !1801, line: 873, type: !7998, isLocal: true, isDefinition: true, scopeLine: 874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!7998 = !DISubroutineType(types: !7999)
!7999 = !{null, !1857}
!8000 = !DILocalVariable(name: "a", arg: 1, scope: !8001, file: !8002, line: 124, type: !1032)
!8001 = distinct !DISubprogram(name: "av_clipf_sse", scope: !8002, file: !8002, line: 124, type: !8003, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8002 = !DIFile(filename: "./libavutil/x86/intmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!1032, !1032, !1032, !1032}
!8005 = !DILocation(line: 124, column: 94, scope: !8001, inlinedAt: !8006)
!8006 = distinct !DILocation(line: 918, column: 30, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !1801, line: 890, column: 62)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !1801, line: 890, column: 17)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !1801, line: 890, column: 17)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !1801, line: 881, column: 59)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !1801, line: 881, column: 17)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !1801, line: 880, column: 38)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !1801, line: 880, column: 13)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !1801, line: 879, column: 44)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !1801, line: 879, column: 5)
!8016 = distinct !DILexicalBlock(scope: !7997, file: !1801, line: 879, column: 5)
!8017 = !DILocalVariable(name: "amin", arg: 2, scope: !8001, file: !8002, line: 124, type: !1032)
!8018 = !DILocation(line: 124, column: 103, scope: !8001, inlinedAt: !8006)
!8019 = !DILocalVariable(name: "amax", arg: 3, scope: !8001, file: !8002, line: 124, type: !1032)
!8020 = !DILocation(line: 124, column: 115, scope: !8001, inlinedAt: !8006)
!8021 = !DILocalVariable(name: "s", arg: 1, scope: !7997, file: !1801, line: 873, type: !1857)
!8022 = !DILocation(line: 873, column: 54, scope: !7997)
!8023 = !DILocalVariable(name: "bc", scope: !7997, file: !1801, line: 875, type: !3957)
!8024 = !DILocation(line: 875, column: 20, scope: !7997)
!8025 = !DILocation(line: 875, column: 26, scope: !7997)
!8026 = !DILocation(line: 875, column: 29, scope: !7997)
!8027 = !DILocalVariable(name: "fbw_channels", scope: !7997, file: !1801, line: 876, type: !1015)
!8028 = !DILocation(line: 876, column: 9, scope: !7997)
!8029 = !DILocation(line: 876, column: 24, scope: !7997)
!8030 = !DILocation(line: 876, column: 27, scope: !7997)
!8031 = !DILocalVariable(name: "ch", scope: !7997, file: !1801, line: 877, type: !1015)
!8032 = !DILocation(line: 877, column: 9, scope: !7997)
!8033 = !DILocalVariable(name: "bnd", scope: !7997, file: !1801, line: 877, type: !1015)
!8034 = !DILocation(line: 877, column: 13, scope: !7997)
!8035 = !DILocation(line: 879, column: 13, scope: !8016)
!8036 = !DILocation(line: 879, column: 10, scope: !8016)
!8037 = !DILocation(line: 879, column: 18, scope: !8038)
!8038 = !DILexicalBlockFile(scope: !8015, file: !1801, discriminator: 1)
!8039 = !DILocation(line: 879, column: 24, scope: !8038)
!8040 = !DILocation(line: 879, column: 21, scope: !8038)
!8041 = !DILocation(line: 879, column: 5, scope: !8038)
!8042 = !DILocation(line: 880, column: 33, scope: !8013)
!8043 = !DILocation(line: 880, column: 13, scope: !8013)
!8044 = !DILocation(line: 880, column: 16, scope: !8013)
!8045 = !DILocation(line: 880, column: 13, scope: !8014)
!8046 = !DILocation(line: 881, column: 37, scope: !8011)
!8047 = !DILocation(line: 881, column: 17, scope: !8011)
!8048 = !DILocation(line: 881, column: 20, scope: !8011)
!8049 = !DILocation(line: 881, column: 41, scope: !8011)
!8050 = !DILocation(line: 881, column: 54, scope: !8051)
!8051 = !DILexicalBlockFile(scope: !8011, file: !1801, discriminator: 1)
!8052 = !DILocation(line: 881, column: 44, scope: !8051)
!8053 = !DILocation(line: 881, column: 17, scope: !8051)
!8054 = !DILocalVariable(name: "spx_blend", scope: !8010, file: !1801, line: 882, type: !1960)
!8055 = !DILocation(line: 882, column: 26, scope: !8010)
!8056 = !DILocalVariable(name: "bin", scope: !8010, file: !1801, line: 883, type: !1015)
!8057 = !DILocation(line: 883, column: 21, scope: !8010)
!8058 = !DILocalVariable(name: "master_spx_coord", scope: !8010, file: !1801, line: 883, type: !1015)
!8059 = !DILocation(line: 883, column: 26, scope: !8010)
!8060 = !DILocation(line: 885, column: 37, scope: !8010)
!8061 = !DILocation(line: 885, column: 17, scope: !8010)
!8062 = !DILocation(line: 885, column: 20, scope: !8010)
!8063 = !DILocation(line: 885, column: 41, scope: !8010)
!8064 = !DILocation(line: 886, column: 39, scope: !8010)
!8065 = !DILocation(line: 886, column: 30, scope: !8010)
!8066 = !DILocation(line: 886, column: 29, scope: !8010)
!8067 = !DILocation(line: 886, column: 46, scope: !8010)
!8068 = !DILocation(line: 886, column: 27, scope: !8010)
!8069 = !DILocation(line: 887, column: 45, scope: !8010)
!8070 = !DILocation(line: 887, column: 36, scope: !8010)
!8071 = !DILocation(line: 887, column: 52, scope: !8010)
!8072 = !DILocation(line: 887, column: 34, scope: !8010)
!8073 = !DILocation(line: 889, column: 23, scope: !8010)
!8074 = !DILocation(line: 889, column: 26, scope: !8010)
!8075 = !DILocation(line: 889, column: 21, scope: !8010)
!8076 = !DILocation(line: 890, column: 26, scope: !8009)
!8077 = !DILocation(line: 890, column: 22, scope: !8009)
!8078 = !DILocation(line: 890, column: 31, scope: !8079)
!8079 = !DILexicalBlockFile(scope: !8008, file: !1801, discriminator: 1)
!8080 = !DILocation(line: 890, column: 37, scope: !8079)
!8081 = !DILocation(line: 890, column: 40, scope: !8079)
!8082 = !DILocation(line: 890, column: 35, scope: !8079)
!8083 = !DILocation(line: 890, column: 17, scope: !8079)
!8084 = !DILocalVariable(name: "bandsize", scope: !8007, file: !1801, line: 891, type: !1015)
!8085 = !DILocation(line: 891, column: 25, scope: !8007)
!8086 = !DILocation(line: 891, column: 54, scope: !8007)
!8087 = !DILocation(line: 891, column: 36, scope: !8007)
!8088 = !DILocation(line: 891, column: 39, scope: !8007)
!8089 = !DILocalVariable(name: "spx_coord_exp", scope: !8007, file: !1801, line: 892, type: !1015)
!8090 = !DILocation(line: 892, column: 25, scope: !8007)
!8091 = !DILocalVariable(name: "spx_coord_mant", scope: !8007, file: !1801, line: 892, type: !1015)
!8092 = !DILocation(line: 892, column: 40, scope: !8007)
!8093 = !DILocalVariable(name: "nratio", scope: !8007, file: !1801, line: 893, type: !1960)
!8094 = !DILocation(line: 893, column: 30, scope: !8007)
!8095 = !DILocalVariable(name: "sblend", scope: !8007, file: !1801, line: 893, type: !1960)
!8096 = !DILocation(line: 893, column: 38, scope: !8007)
!8097 = !DILocalVariable(name: "nblend", scope: !8007, file: !1801, line: 893, type: !1960)
!8098 = !DILocation(line: 893, column: 46, scope: !8007)
!8099 = !DILocalVariable(name: "spx_coord", scope: !8007, file: !1801, line: 914, type: !1032)
!8100 = !DILocation(line: 914, column: 27, scope: !8007)
!8101 = !DILocation(line: 917, column: 40, scope: !8007)
!8102 = !DILocation(line: 917, column: 47, scope: !8007)
!8103 = !DILocation(line: 917, column: 56, scope: !8007)
!8104 = !DILocation(line: 917, column: 44, scope: !8007)
!8105 = !DILocation(line: 917, column: 31, scope: !8007)
!8106 = !DILocation(line: 917, column: 66, scope: !8007)
!8107 = !DILocation(line: 917, column: 69, scope: !8007)
!8108 = !DILocation(line: 917, column: 64, scope: !8007)
!8109 = !DILocation(line: 917, column: 89, scope: !8007)
!8110 = !DILocation(line: 917, column: 87, scope: !8007)
!8111 = !DILocation(line: 917, column: 28, scope: !8007)
!8112 = !DILocation(line: 918, column: 43, scope: !8007)
!8113 = !DILocation(line: 918, column: 30, scope: !8007)
!8114 = !DILocation(line: 129, column: 5, scope: !8001, inlinedAt: !8006)
!8115 = !DILocation(line: 131, column: 32, scope: !8001, inlinedAt: !8006)
!8116 = !DILocation(line: 131, column: 44, scope: !8001, inlinedAt: !8006)
!8117 = !{i32 80893, i32 80909, i32 80942}
!8118 = !DILocation(line: 132, column: 12, scope: !8001, inlinedAt: !8006)
!8119 = !DILocation(line: 918, column: 28, scope: !8007)
!8120 = !DILocation(line: 919, column: 43, scope: !8007)
!8121 = !DILocation(line: 919, column: 41, scope: !8007)
!8122 = !DILocation(line: 919, column: 30, scope: !8007)
!8123 = !DILocation(line: 919, column: 28, scope: !8007)
!8124 = !DILocation(line: 921, column: 43, scope: !8007)
!8125 = !DILocation(line: 921, column: 41, scope: !8007)
!8126 = !DILocation(line: 921, column: 30, scope: !8007)
!8127 = !DILocation(line: 921, column: 28, scope: !8007)
!8128 = !DILocation(line: 923, column: 28, scope: !8007)
!8129 = !DILocation(line: 923, column: 25, scope: !8007)
!8130 = !DILocation(line: 926, column: 46, scope: !8007)
!8131 = !DILocation(line: 926, column: 37, scope: !8007)
!8132 = !DILocation(line: 926, column: 35, scope: !8007)
!8133 = !DILocation(line: 927, column: 47, scope: !8007)
!8134 = !DILocation(line: 927, column: 38, scope: !8007)
!8135 = !DILocation(line: 927, column: 36, scope: !8007)
!8136 = !DILocation(line: 928, column: 25, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8007, file: !1801, line: 928, column: 25)
!8138 = !DILocation(line: 928, column: 39, scope: !8137)
!8139 = !DILocation(line: 928, column: 25, scope: !8007)
!8140 = !DILocation(line: 928, column: 61, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !8137, file: !1801, discriminator: 1)
!8142 = !DILocation(line: 928, column: 46, scope: !8141)
!8143 = !DILocation(line: 929, column: 41, scope: !8137)
!8144 = !DILocation(line: 930, column: 46, scope: !8007)
!8145 = !DILocation(line: 930, column: 44, scope: !8007)
!8146 = !DILocation(line: 930, column: 62, scope: !8007)
!8147 = !DILocation(line: 930, column: 60, scope: !8007)
!8148 = !DILocation(line: 930, column: 36, scope: !8007)
!8149 = !DILocation(line: 939, column: 33, scope: !8007)
!8150 = !DILocation(line: 939, column: 48, scope: !8007)
!8151 = !DILocation(line: 939, column: 31, scope: !8007)
!8152 = !DILocation(line: 940, column: 52, scope: !8007)
!8153 = !DILocation(line: 940, column: 61, scope: !8007)
!8154 = !DILocation(line: 940, column: 59, scope: !8007)
!8155 = !DILocation(line: 940, column: 45, scope: !8007)
!8156 = !DILocation(line: 940, column: 21, scope: !8007)
!8157 = !DILocation(line: 940, column: 41, scope: !8007)
!8158 = !DILocation(line: 940, column: 24, scope: !8007)
!8159 = !DILocation(line: 940, column: 50, scope: !8007)
!8160 = !DILocation(line: 941, column: 52, scope: !8007)
!8161 = !DILocation(line: 941, column: 61, scope: !8007)
!8162 = !DILocation(line: 941, column: 59, scope: !8007)
!8163 = !DILocation(line: 941, column: 45, scope: !8007)
!8164 = !DILocation(line: 941, column: 21, scope: !8007)
!8165 = !DILocation(line: 941, column: 41, scope: !8007)
!8166 = !DILocation(line: 941, column: 24, scope: !8007)
!8167 = !DILocation(line: 941, column: 50, scope: !8007)
!8168 = !DILocation(line: 943, column: 17, scope: !8007)
!8169 = !DILocation(line: 890, column: 58, scope: !8170)
!8170 = !DILexicalBlockFile(scope: !8008, file: !1801, discriminator: 2)
!8171 = !DILocation(line: 890, column: 17, scope: !8170)
!8172 = distinct !{!8172, !8173}
!8173 = !DILocation(line: 890, column: 17, scope: !8010)
!8174 = !DILocation(line: 944, column: 13, scope: !8010)
!8175 = !DILocation(line: 945, column: 9, scope: !8012)
!8176 = !DILocation(line: 946, column: 33, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8013, file: !1801, line: 945, column: 16)
!8178 = !DILocation(line: 946, column: 13, scope: !8177)
!8179 = !DILocation(line: 946, column: 16, scope: !8177)
!8180 = !DILocation(line: 946, column: 37, scope: !8177)
!8181 = !DILocation(line: 948, column: 5, scope: !8014)
!8182 = !DILocation(line: 879, column: 40, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !8015, file: !1801, discriminator: 2)
!8184 = !DILocation(line: 879, column: 5, scope: !8183)
!8185 = distinct !{!8185, !8186}
!8186 = !DILocation(line: 879, column: 5, scope: !7997)
!8187 = !DILocation(line: 949, column: 1, scope: !7997)
!8188 = distinct !DISubprogram(name: "coupling_strategy", scope: !1801, file: !1801, line: 951, type: !8189, isLocal: true, isDefinition: true, scopeLine: 953, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!1015, !1857, !1015, !1199}
!8191 = !DILocalVariable(name: "s", arg: 1, scope: !8188, file: !1801, line: 951, type: !1857)
!8192 = !DILocation(line: 951, column: 55, scope: !8188)
!8193 = !DILocalVariable(name: "blk", arg: 2, scope: !8188, file: !1801, line: 951, type: !1015)
!8194 = !DILocation(line: 951, column: 62, scope: !8188)
!8195 = !DILocalVariable(name: "bit_alloc_stages", arg: 3, scope: !8188, file: !1801, line: 952, type: !1199)
!8196 = !DILocation(line: 952, column: 46, scope: !8188)
!8197 = !DILocalVariable(name: "bc", scope: !8188, file: !1801, line: 954, type: !3957)
!8198 = !DILocation(line: 954, column: 20, scope: !8188)
!8199 = !DILocation(line: 954, column: 26, scope: !8188)
!8200 = !DILocation(line: 954, column: 29, scope: !8188)
!8201 = !DILocalVariable(name: "fbw_channels", scope: !8188, file: !1801, line: 955, type: !1015)
!8202 = !DILocation(line: 955, column: 9, scope: !8188)
!8203 = !DILocation(line: 955, column: 24, scope: !8188)
!8204 = !DILocation(line: 955, column: 27, scope: !8188)
!8205 = !DILocalVariable(name: "channel_mode", scope: !8188, file: !1801, line: 956, type: !1015)
!8206 = !DILocation(line: 956, column: 9, scope: !8188)
!8207 = !DILocation(line: 956, column: 24, scope: !8188)
!8208 = !DILocation(line: 956, column: 27, scope: !8188)
!8209 = !DILocalVariable(name: "ch", scope: !8188, file: !1801, line: 957, type: !1015)
!8210 = !DILocation(line: 957, column: 9, scope: !8188)
!8211 = !DILocation(line: 959, column: 12, scope: !8188)
!8212 = !DILocation(line: 959, column: 5, scope: !8188)
!8213 = !DILocation(line: 960, column: 10, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8188, file: !1801, line: 960, column: 9)
!8215 = !DILocation(line: 960, column: 13, scope: !8214)
!8216 = !DILocation(line: 960, column: 9, scope: !8188)
!8217 = !DILocation(line: 961, column: 40, scope: !8214)
!8218 = !DILocation(line: 961, column: 30, scope: !8214)
!8219 = !DILocation(line: 961, column: 23, scope: !8214)
!8220 = !DILocation(line: 961, column: 9, scope: !8214)
!8221 = !DILocation(line: 961, column: 12, scope: !8214)
!8222 = !DILocation(line: 961, column: 28, scope: !8214)
!8223 = !DILocation(line: 962, column: 23, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8188, file: !1801, line: 962, column: 9)
!8225 = !DILocation(line: 962, column: 9, scope: !8224)
!8226 = !DILocation(line: 962, column: 12, scope: !8224)
!8227 = !DILocation(line: 962, column: 9, scope: !8188)
!8228 = !DILocalVariable(name: "cpl_start_subband", scope: !8229, file: !1801, line: 964, type: !1015)
!8229 = distinct !DILexicalBlock(scope: !8224, file: !1801, line: 962, column: 29)
!8230 = !DILocation(line: 964, column: 13, scope: !8229)
!8231 = !DILocalVariable(name: "cpl_end_subband", scope: !8229, file: !1801, line: 964, type: !1015)
!8232 = !DILocation(line: 964, column: 32, scope: !8229)
!8233 = !DILocation(line: 966, column: 13, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8229, file: !1801, line: 966, column: 13)
!8235 = !DILocation(line: 966, column: 26, scope: !8234)
!8236 = !DILocation(line: 966, column: 13, scope: !8229)
!8237 = !DILocation(line: 967, column: 20, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !1801, line: 966, column: 47)
!8239 = !DILocation(line: 967, column: 23, scope: !8238)
!8240 = !DILocation(line: 967, column: 13, scope: !8238)
!8241 = !DILocation(line: 968, column: 13, scope: !8238)
!8242 = !DILocation(line: 972, column: 13, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8229, file: !1801, line: 972, column: 13)
!8244 = !DILocation(line: 972, column: 16, scope: !8243)
!8245 = !DILocation(line: 972, column: 21, scope: !8243)
!8246 = !DILocation(line: 972, column: 34, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8243, file: !1801, discriminator: 1)
!8248 = !DILocation(line: 972, column: 24, scope: !8247)
!8249 = !DILocation(line: 972, column: 13, scope: !8247)
!8250 = !DILocation(line: 974, column: 35, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8243, file: !1801, line: 972, column: 39)
!8252 = !DILocation(line: 974, column: 38, scope: !8251)
!8253 = !DILocation(line: 974, column: 13, scope: !8251)
!8254 = !DILocation(line: 975, column: 13, scope: !8251)
!8255 = !DILocation(line: 979, column: 13, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8229, file: !1801, line: 979, column: 13)
!8257 = !DILocation(line: 979, column: 16, scope: !8256)
!8258 = !DILocation(line: 979, column: 21, scope: !8256)
!8259 = !DILocation(line: 979, column: 24, scope: !8260)
!8260 = !DILexicalBlockFile(scope: !8256, file: !1801, discriminator: 1)
!8261 = !DILocation(line: 979, column: 27, scope: !8260)
!8262 = !DILocation(line: 979, column: 40, scope: !8260)
!8263 = !DILocation(line: 979, column: 13, scope: !8260)
!8264 = !DILocation(line: 980, column: 13, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8256, file: !1801, line: 979, column: 62)
!8266 = !DILocation(line: 980, column: 16, scope: !8265)
!8267 = !DILocation(line: 980, column: 34, scope: !8265)
!8268 = !DILocation(line: 981, column: 13, scope: !8265)
!8269 = !DILocation(line: 981, column: 16, scope: !8265)
!8270 = !DILocation(line: 981, column: 34, scope: !8265)
!8271 = !DILocation(line: 982, column: 9, scope: !8265)
!8272 = !DILocation(line: 983, column: 21, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !1801, line: 983, column: 13)
!8274 = distinct !DILexicalBlock(scope: !8256, file: !1801, line: 982, column: 16)
!8275 = !DILocation(line: 983, column: 18, scope: !8273)
!8276 = !DILocation(line: 983, column: 26, scope: !8277)
!8277 = !DILexicalBlockFile(scope: !8278, file: !1801, discriminator: 1)
!8278 = distinct !DILexicalBlock(scope: !8273, file: !1801, line: 983, column: 13)
!8279 = !DILocation(line: 983, column: 32, scope: !8277)
!8280 = !DILocation(line: 983, column: 29, scope: !8277)
!8281 = !DILocation(line: 983, column: 13, scope: !8277)
!8282 = !DILocation(line: 984, column: 51, scope: !8278)
!8283 = !DILocation(line: 984, column: 41, scope: !8278)
!8284 = !DILocation(line: 984, column: 35, scope: !8278)
!8285 = !DILocation(line: 984, column: 17, scope: !8278)
!8286 = !DILocation(line: 984, column: 20, scope: !8278)
!8287 = !DILocation(line: 984, column: 39, scope: !8278)
!8288 = !DILocation(line: 983, column: 48, scope: !8289)
!8289 = !DILexicalBlockFile(scope: !8278, file: !1801, discriminator: 2)
!8290 = !DILocation(line: 983, column: 13, scope: !8289)
!8291 = distinct !{!8291, !8292}
!8292 = !DILocation(line: 983, column: 13, scope: !8274)
!8293 = !DILocation(line: 988, column: 13, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8229, file: !1801, line: 988, column: 13)
!8295 = !DILocation(line: 988, column: 26, scope: !8294)
!8296 = !DILocation(line: 988, column: 13, scope: !8229)
!8297 = !DILocation(line: 989, column: 47, scope: !8294)
!8298 = !DILocation(line: 989, column: 37, scope: !8294)
!8299 = !DILocation(line: 989, column: 13, scope: !8294)
!8300 = !DILocation(line: 989, column: 16, scope: !8294)
!8301 = !DILocation(line: 989, column: 35, scope: !8294)
!8302 = !DILocation(line: 992, column: 38, scope: !8229)
!8303 = !DILocation(line: 992, column: 29, scope: !8229)
!8304 = !DILocation(line: 992, column: 27, scope: !8229)
!8305 = !DILocation(line: 993, column: 27, scope: !8229)
!8306 = !DILocation(line: 993, column: 30, scope: !8229)
!8307 = !DILocation(line: 993, column: 44, scope: !8308)
!8308 = !DILexicalBlockFile(scope: !8229, file: !1801, discriminator: 1)
!8309 = !DILocation(line: 993, column: 47, scope: !8308)
!8310 = !DILocation(line: 993, column: 66, scope: !8308)
!8311 = !DILocation(line: 993, column: 72, scope: !8308)
!8312 = !DILocation(line: 993, column: 27, scope: !8308)
!8313 = !DILocation(line: 994, column: 52, scope: !8229)
!8314 = !DILocation(line: 994, column: 43, scope: !8229)
!8315 = !DILocation(line: 994, column: 59, scope: !8229)
!8316 = !DILocation(line: 993, column: 27, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8229, file: !1801, discriminator: 2)
!8318 = !DILocation(line: 993, column: 27, scope: !8319)
!8319 = !DILexicalBlockFile(scope: !8229, file: !1801, discriminator: 3)
!8320 = !DILocation(line: 993, column: 25, scope: !8319)
!8321 = !DILocation(line: 995, column: 13, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8229, file: !1801, line: 995, column: 13)
!8323 = !DILocation(line: 995, column: 34, scope: !8322)
!8324 = !DILocation(line: 995, column: 31, scope: !8322)
!8325 = !DILocation(line: 995, column: 13, scope: !8229)
!8326 = !DILocation(line: 996, column: 20, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8322, file: !1801, line: 995, column: 51)
!8328 = !DILocation(line: 996, column: 23, scope: !8327)
!8329 = !DILocation(line: 997, column: 20, scope: !8327)
!8330 = !DILocation(line: 997, column: 39, scope: !8327)
!8331 = !DILocation(line: 996, column: 13, scope: !8327)
!8332 = !DILocation(line: 998, column: 13, scope: !8327)
!8333 = !DILocation(line: 1000, column: 28, scope: !8229)
!8334 = !DILocation(line: 1000, column: 46, scope: !8229)
!8335 = !DILocation(line: 1000, column: 51, scope: !8229)
!8336 = !DILocation(line: 1000, column: 9, scope: !8229)
!8337 = !DILocation(line: 1000, column: 12, scope: !8229)
!8338 = !DILocation(line: 1000, column: 26, scope: !8229)
!8339 = !DILocation(line: 1001, column: 26, scope: !8229)
!8340 = !DILocation(line: 1001, column: 42, scope: !8229)
!8341 = !DILocation(line: 1001, column: 47, scope: !8229)
!8342 = !DILocation(line: 1001, column: 9, scope: !8229)
!8343 = !DILocation(line: 1001, column: 12, scope: !8229)
!8344 = !DILocation(line: 1001, column: 24, scope: !8229)
!8345 = !DILocation(line: 1003, column: 31, scope: !8229)
!8346 = !DILocation(line: 1003, column: 35, scope: !8229)
!8347 = !DILocation(line: 1003, column: 40, scope: !8229)
!8348 = !DILocation(line: 1003, column: 43, scope: !8229)
!8349 = !DILocation(line: 1003, column: 52, scope: !8229)
!8350 = !DILocation(line: 1004, column: 31, scope: !8229)
!8351 = !DILocation(line: 1006, column: 32, scope: !8229)
!8352 = !DILocation(line: 1006, column: 35, scope: !8229)
!8353 = !DILocation(line: 1006, column: 50, scope: !8229)
!8354 = !DILocation(line: 1006, column: 53, scope: !8229)
!8355 = !DILocation(line: 1007, column: 31, scope: !8229)
!8356 = !DILocation(line: 1007, column: 34, scope: !8229)
!8357 = !DILocation(line: 1003, column: 9, scope: !8229)
!8358 = !DILocation(line: 1008, column: 5, scope: !8229)
!8359 = !DILocation(line: 1010, column: 17, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !1801, line: 1010, column: 9)
!8361 = distinct !DILexicalBlock(scope: !8224, file: !1801, line: 1008, column: 12)
!8362 = !DILocation(line: 1010, column: 14, scope: !8360)
!8363 = !DILocation(line: 1010, column: 22, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !8365, file: !1801, discriminator: 1)
!8365 = distinct !DILexicalBlock(scope: !8360, file: !1801, line: 1010, column: 9)
!8366 = !DILocation(line: 1010, column: 28, scope: !8364)
!8367 = !DILocation(line: 1010, column: 25, scope: !8364)
!8368 = !DILocation(line: 1010, column: 9, scope: !8364)
!8369 = !DILocation(line: 1011, column: 31, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8365, file: !1801, line: 1010, column: 48)
!8371 = !DILocation(line: 1011, column: 13, scope: !8370)
!8372 = !DILocation(line: 1011, column: 16, scope: !8370)
!8373 = !DILocation(line: 1011, column: 35, scope: !8370)
!8374 = !DILocation(line: 1012, column: 33, scope: !8370)
!8375 = !DILocation(line: 1012, column: 13, scope: !8370)
!8376 = !DILocation(line: 1012, column: 16, scope: !8370)
!8377 = !DILocation(line: 1012, column: 37, scope: !8370)
!8378 = !DILocation(line: 1013, column: 9, scope: !8370)
!8379 = !DILocation(line: 1010, column: 44, scope: !8380)
!8380 = !DILexicalBlockFile(scope: !8365, file: !1801, discriminator: 2)
!8381 = !DILocation(line: 1010, column: 9, scope: !8380)
!8382 = distinct !{!8382, !8383}
!8383 = !DILocation(line: 1010, column: 9, scope: !8361)
!8384 = !DILocation(line: 1014, column: 29, scope: !8361)
!8385 = !DILocation(line: 1014, column: 32, scope: !8361)
!8386 = !DILocation(line: 1014, column: 9, scope: !8361)
!8387 = !DILocation(line: 1014, column: 12, scope: !8361)
!8388 = !DILocation(line: 1014, column: 27, scope: !8361)
!8389 = !DILocation(line: 1015, column: 9, scope: !8361)
!8390 = !DILocation(line: 1015, column: 12, scope: !8361)
!8391 = !DILocation(line: 1015, column: 31, scope: !8361)
!8392 = !DILocation(line: 1018, column: 5, scope: !8188)
!8393 = !DILocation(line: 1019, column: 1, scope: !8188)
!8394 = distinct !DISubprogram(name: "coupling_coordinates", scope: !1801, file: !1801, line: 1021, type: !7849, isLocal: true, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8395 = !DILocalVariable(name: "s", arg: 1, scope: !8394, file: !1801, line: 1021, type: !1857)
!8396 = !DILocation(line: 1021, column: 58, scope: !8394)
!8397 = !DILocalVariable(name: "blk", arg: 2, scope: !8394, file: !1801, line: 1021, type: !1015)
!8398 = !DILocation(line: 1021, column: 65, scope: !8394)
!8399 = !DILocalVariable(name: "bc", scope: !8394, file: !1801, line: 1023, type: !3957)
!8400 = !DILocation(line: 1023, column: 20, scope: !8394)
!8401 = !DILocation(line: 1023, column: 26, scope: !8394)
!8402 = !DILocation(line: 1023, column: 29, scope: !8394)
!8403 = !DILocalVariable(name: "fbw_channels", scope: !8394, file: !1801, line: 1024, type: !1015)
!8404 = !DILocation(line: 1024, column: 9, scope: !8394)
!8405 = !DILocation(line: 1024, column: 24, scope: !8394)
!8406 = !DILocation(line: 1024, column: 27, scope: !8394)
!8407 = !DILocalVariable(name: "ch", scope: !8394, file: !1801, line: 1025, type: !1015)
!8408 = !DILocation(line: 1025, column: 9, scope: !8394)
!8409 = !DILocalVariable(name: "bnd", scope: !8394, file: !1801, line: 1025, type: !1015)
!8410 = !DILocation(line: 1025, column: 13, scope: !8394)
!8411 = !DILocalVariable(name: "cpl_coords_exist", scope: !8394, file: !1801, line: 1026, type: !1015)
!8412 = !DILocation(line: 1026, column: 9, scope: !8394)
!8413 = !DILocation(line: 1028, column: 13, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8394, file: !1801, line: 1028, column: 5)
!8415 = !DILocation(line: 1028, column: 10, scope: !8414)
!8416 = !DILocation(line: 1028, column: 18, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8418, file: !1801, discriminator: 1)
!8418 = distinct !DILexicalBlock(scope: !8414, file: !1801, line: 1028, column: 5)
!8419 = !DILocation(line: 1028, column: 24, scope: !8417)
!8420 = !DILocation(line: 1028, column: 21, scope: !8417)
!8421 = !DILocation(line: 1028, column: 5, scope: !8417)
!8422 = !DILocation(line: 1029, column: 31, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !1801, line: 1029, column: 13)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !1801, line: 1028, column: 44)
!8425 = !DILocation(line: 1029, column: 13, scope: !8423)
!8426 = !DILocation(line: 1029, column: 16, scope: !8423)
!8427 = !DILocation(line: 1029, column: 13, scope: !8424)
!8428 = !DILocation(line: 1030, column: 18, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !1801, line: 1030, column: 17)
!8430 = distinct !DILexicalBlock(scope: !8423, file: !1801, line: 1029, column: 36)
!8431 = !DILocation(line: 1030, column: 21, scope: !8429)
!8432 = !DILocation(line: 1030, column: 26, scope: !8429)
!8433 = !DILocation(line: 1030, column: 49, scope: !8434)
!8434 = !DILexicalBlockFile(scope: !8429, file: !1801, discriminator: 1)
!8435 = !DILocation(line: 1030, column: 29, scope: !8434)
!8436 = !DILocation(line: 1030, column: 32, scope: !8434)
!8437 = !DILocation(line: 1030, column: 54, scope: !8434)
!8438 = !DILocation(line: 1030, column: 67, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8429, file: !1801, discriminator: 2)
!8440 = !DILocation(line: 1030, column: 57, scope: !8439)
!8441 = !DILocation(line: 1030, column: 17, scope: !8439)
!8442 = !DILocalVariable(name: "master_cpl_coord", scope: !8443, file: !1801, line: 1031, type: !1015)
!8443 = distinct !DILexicalBlock(scope: !8429, file: !1801, line: 1030, column: 72)
!8444 = !DILocation(line: 1031, column: 21, scope: !8443)
!8445 = !DILocalVariable(name: "cpl_coord_exp", scope: !8443, file: !1801, line: 1031, type: !1015)
!8446 = !DILocation(line: 1031, column: 39, scope: !8443)
!8447 = !DILocalVariable(name: "cpl_coord_mant", scope: !8443, file: !1801, line: 1031, type: !1015)
!8448 = !DILocation(line: 1031, column: 54, scope: !8443)
!8449 = !DILocation(line: 1032, column: 37, scope: !8443)
!8450 = !DILocation(line: 1032, column: 17, scope: !8443)
!8451 = !DILocation(line: 1032, column: 20, scope: !8443)
!8452 = !DILocation(line: 1032, column: 41, scope: !8443)
!8453 = !DILocation(line: 1033, column: 34, scope: !8443)
!8454 = !DILocation(line: 1034, column: 49, scope: !8443)
!8455 = !DILocation(line: 1034, column: 40, scope: !8443)
!8456 = !DILocation(line: 1034, column: 38, scope: !8443)
!8457 = !DILocation(line: 1034, column: 34, scope: !8443)
!8458 = !DILocation(line: 1035, column: 26, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8443, file: !1801, line: 1035, column: 17)
!8460 = !DILocation(line: 1035, column: 22, scope: !8459)
!8461 = !DILocation(line: 1035, column: 31, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !8463, file: !1801, discriminator: 1)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !1801, line: 1035, column: 17)
!8464 = !DILocation(line: 1035, column: 37, scope: !8462)
!8465 = !DILocation(line: 1035, column: 40, scope: !8462)
!8466 = !DILocation(line: 1035, column: 35, scope: !8462)
!8467 = !DILocation(line: 1035, column: 17, scope: !8462)
!8468 = !DILocation(line: 1036, column: 46, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8463, file: !1801, line: 1035, column: 62)
!8470 = !DILocation(line: 1036, column: 37, scope: !8469)
!8471 = !DILocation(line: 1036, column: 35, scope: !8469)
!8472 = !DILocation(line: 1037, column: 47, scope: !8469)
!8473 = !DILocation(line: 1037, column: 38, scope: !8469)
!8474 = !DILocation(line: 1037, column: 36, scope: !8469)
!8475 = !DILocation(line: 1038, column: 25, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8469, file: !1801, line: 1038, column: 25)
!8477 = !DILocation(line: 1038, column: 39, scope: !8476)
!8478 = !DILocation(line: 1038, column: 25, scope: !8469)
!8479 = !DILocation(line: 1039, column: 50, scope: !8476)
!8480 = !DILocation(line: 1039, column: 65, scope: !8476)
!8481 = !DILocation(line: 1039, column: 43, scope: !8476)
!8482 = !DILocation(line: 1039, column: 25, scope: !8476)
!8483 = !DILocation(line: 1039, column: 39, scope: !8476)
!8484 = !DILocation(line: 1039, column: 28, scope: !8476)
!8485 = !DILocation(line: 1039, column: 48, scope: !8476)
!8486 = !DILocation(line: 1041, column: 51, scope: !8476)
!8487 = !DILocation(line: 1041, column: 66, scope: !8476)
!8488 = !DILocation(line: 1041, column: 72, scope: !8476)
!8489 = !DILocation(line: 1041, column: 43, scope: !8476)
!8490 = !DILocation(line: 1041, column: 25, scope: !8476)
!8491 = !DILocation(line: 1041, column: 39, scope: !8476)
!8492 = !DILocation(line: 1041, column: 28, scope: !8476)
!8493 = !DILocation(line: 1041, column: 48, scope: !8476)
!8494 = !DILocation(line: 1042, column: 49, scope: !8469)
!8495 = !DILocation(line: 1042, column: 65, scope: !8469)
!8496 = !DILocation(line: 1042, column: 63, scope: !8469)
!8497 = !DILocation(line: 1042, column: 39, scope: !8469)
!8498 = !DILocation(line: 1042, column: 21, scope: !8469)
!8499 = !DILocation(line: 1042, column: 35, scope: !8469)
!8500 = !DILocation(line: 1042, column: 24, scope: !8469)
!8501 = !DILocation(line: 1042, column: 44, scope: !8469)
!8502 = !DILocation(line: 1043, column: 17, scope: !8469)
!8503 = !DILocation(line: 1035, column: 58, scope: !8504)
!8504 = !DILexicalBlockFile(scope: !8463, file: !1801, discriminator: 2)
!8505 = !DILocation(line: 1035, column: 17, scope: !8504)
!8506 = distinct !{!8506, !8507}
!8507 = !DILocation(line: 1035, column: 17, scope: !8443)
!8508 = !DILocation(line: 1044, column: 13, scope: !8443)
!8509 = !DILocation(line: 1044, column: 25, scope: !8510)
!8510 = !DILexicalBlockFile(scope: !8511, file: !1801, discriminator: 1)
!8511 = distinct !DILexicalBlock(scope: !8429, file: !1801, line: 1044, column: 24)
!8512 = !DILocation(line: 1044, column: 24, scope: !8510)
!8513 = !DILocation(line: 1045, column: 24, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8511, file: !1801, line: 1044, column: 30)
!8515 = !DILocation(line: 1045, column: 27, scope: !8514)
!8516 = !DILocation(line: 1045, column: 17, scope: !8514)
!8517 = !DILocation(line: 1047, column: 17, scope: !8514)
!8518 = !DILocation(line: 1049, column: 9, scope: !8430)
!8519 = !DILocation(line: 1051, column: 33, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8423, file: !1801, line: 1049, column: 16)
!8521 = !DILocation(line: 1051, column: 13, scope: !8520)
!8522 = !DILocation(line: 1051, column: 16, scope: !8520)
!8523 = !DILocation(line: 1051, column: 37, scope: !8520)
!8524 = !DILocation(line: 1053, column: 5, scope: !8424)
!8525 = !DILocation(line: 1028, column: 40, scope: !8526)
!8526 = !DILexicalBlockFile(scope: !8418, file: !1801, discriminator: 2)
!8527 = !DILocation(line: 1028, column: 5, scope: !8526)
!8528 = distinct !{!8528, !8529}
!8529 = !DILocation(line: 1028, column: 5, scope: !8394)
!8530 = !DILocation(line: 1055, column: 9, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8394, file: !1801, line: 1055, column: 9)
!8532 = !DILocation(line: 1055, column: 12, scope: !8531)
!8533 = !DILocation(line: 1055, column: 25, scope: !8531)
!8534 = !DILocation(line: 1055, column: 46, scope: !8531)
!8535 = !DILocation(line: 1055, column: 49, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !8531, file: !1801, discriminator: 1)
!8537 = !DILocation(line: 1055, column: 9, scope: !8536)
!8538 = !DILocation(line: 1056, column: 18, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !1801, line: 1056, column: 9)
!8540 = distinct !DILexicalBlock(scope: !8531, file: !1801, line: 1055, column: 67)
!8541 = !DILocation(line: 1056, column: 14, scope: !8539)
!8542 = !DILocation(line: 1056, column: 23, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !8544, file: !1801, discriminator: 1)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !1801, line: 1056, column: 9)
!8545 = !DILocation(line: 1056, column: 29, scope: !8543)
!8546 = !DILocation(line: 1056, column: 32, scope: !8543)
!8547 = !DILocation(line: 1056, column: 27, scope: !8543)
!8548 = !DILocation(line: 1056, column: 9, scope: !8543)
!8549 = !DILocation(line: 1057, column: 35, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8544, file: !1801, line: 1056, column: 54)
!8551 = !DILocation(line: 1057, column: 38, scope: !8550)
!8552 = !DILocation(line: 1057, column: 69, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !8550, file: !1801, discriminator: 1)
!8554 = !DILocation(line: 1057, column: 59, scope: !8553)
!8555 = !DILocation(line: 1057, column: 35, scope: !8553)
!8556 = !DILocation(line: 1057, column: 35, scope: !8557)
!8557 = !DILexicalBlockFile(scope: !8550, file: !1801, discriminator: 2)
!8558 = !DILocation(line: 1057, column: 35, scope: !8559)
!8559 = !DILexicalBlockFile(scope: !8550, file: !1801, discriminator: 3)
!8560 = !DILocation(line: 1057, column: 28, scope: !8559)
!8561 = !DILocation(line: 1057, column: 13, scope: !8559)
!8562 = !DILocation(line: 1057, column: 16, scope: !8559)
!8563 = !DILocation(line: 1057, column: 33, scope: !8559)
!8564 = !DILocation(line: 1058, column: 9, scope: !8550)
!8565 = !DILocation(line: 1056, column: 50, scope: !8566)
!8566 = !DILexicalBlockFile(scope: !8544, file: !1801, discriminator: 2)
!8567 = !DILocation(line: 1056, column: 9, scope: !8566)
!8568 = distinct !{!8568, !8569}
!8569 = !DILocation(line: 1056, column: 9, scope: !8540)
!8570 = !DILocation(line: 1059, column: 5, scope: !8540)
!8571 = !DILocation(line: 1061, column: 5, scope: !8394)
!8572 = !DILocation(line: 1062, column: 1, scope: !8394)
!8573 = distinct !DISubprogram(name: "decode_exponents", scope: !1801, file: !1801, line: 428, type: !8574, isLocal: true, isDefinition: true, scopeLine: 431, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8574 = !DISubroutineType(types: !8575)
!8575 = !{!1015, !1857, !3957, !1015, !1015, !1039, !1275}
!8576 = !DILocalVariable(name: "s", arg: 1, scope: !8573, file: !1801, line: 428, type: !1857)
!8577 = !DILocation(line: 428, column: 47, scope: !8573)
!8578 = !DILocalVariable(name: "gbc", arg: 2, scope: !8573, file: !1801, line: 429, type: !3957)
!8579 = !DILocation(line: 429, column: 44, scope: !8573)
!8580 = !DILocalVariable(name: "exp_strategy", arg: 3, scope: !8573, file: !1801, line: 429, type: !1015)
!8581 = !DILocation(line: 429, column: 53, scope: !8573)
!8582 = !DILocalVariable(name: "ngrps", arg: 4, scope: !8573, file: !1801, line: 429, type: !1015)
!8583 = !DILocation(line: 429, column: 71, scope: !8573)
!8584 = !DILocalVariable(name: "absexp", arg: 5, scope: !8573, file: !1801, line: 430, type: !1039)
!8585 = !DILocation(line: 430, column: 37, scope: !8573)
!8586 = !DILocalVariable(name: "dexps", arg: 6, scope: !8573, file: !1801, line: 430, type: !1275)
!8587 = !DILocation(line: 430, column: 53, scope: !8573)
!8588 = !DILocalVariable(name: "i", scope: !8573, file: !1801, line: 432, type: !1015)
!8589 = !DILocation(line: 432, column: 9, scope: !8573)
!8590 = !DILocalVariable(name: "j", scope: !8573, file: !1801, line: 432, type: !1015)
!8591 = !DILocation(line: 432, column: 12, scope: !8573)
!8592 = !DILocalVariable(name: "grp", scope: !8573, file: !1801, line: 432, type: !1015)
!8593 = !DILocation(line: 432, column: 15, scope: !8573)
!8594 = !DILocalVariable(name: "group_size", scope: !8573, file: !1801, line: 432, type: !1015)
!8595 = !DILocation(line: 432, column: 20, scope: !8573)
!8596 = !DILocalVariable(name: "dexp", scope: !8573, file: !1801, line: 433, type: !8597)
!8597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8192, align: 32, elements: !1803)
!8598 = !DILocation(line: 433, column: 9, scope: !8573)
!8599 = !DILocalVariable(name: "expacc", scope: !8573, file: !1801, line: 434, type: !1015)
!8600 = !DILocation(line: 434, column: 9, scope: !8573)
!8601 = !DILocalVariable(name: "prevexp", scope: !8573, file: !1801, line: 434, type: !1015)
!8602 = !DILocation(line: 434, column: 17, scope: !8573)
!8603 = !DILocation(line: 437, column: 18, scope: !8573)
!8604 = !DILocation(line: 437, column: 34, scope: !8573)
!8605 = !DILocation(line: 437, column: 47, scope: !8573)
!8606 = !DILocation(line: 437, column: 31, scope: !8573)
!8607 = !DILocation(line: 437, column: 16, scope: !8573)
!8608 = !DILocation(line: 438, column: 14, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8573, file: !1801, line: 438, column: 5)
!8610 = !DILocation(line: 438, column: 21, scope: !8609)
!8611 = !DILocation(line: 438, column: 10, scope: !8609)
!8612 = !DILocation(line: 438, column: 26, scope: !8613)
!8613 = !DILexicalBlockFile(scope: !8614, file: !1801, discriminator: 1)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !1801, line: 438, column: 5)
!8615 = !DILocation(line: 438, column: 32, scope: !8613)
!8616 = !DILocation(line: 438, column: 30, scope: !8613)
!8617 = !DILocation(line: 438, column: 5, scope: !8613)
!8618 = !DILocation(line: 439, column: 27, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8614, file: !1801, line: 438, column: 46)
!8620 = !DILocation(line: 439, column: 18, scope: !8619)
!8621 = !DILocation(line: 439, column: 16, scope: !8619)
!8622 = !DILocation(line: 440, column: 13, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8619, file: !1801, line: 440, column: 13)
!8624 = !DILocation(line: 440, column: 20, scope: !8623)
!8625 = !DILocation(line: 440, column: 13, scope: !8619)
!8626 = !DILocation(line: 441, column: 20, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8623, file: !1801, line: 440, column: 28)
!8628 = !DILocation(line: 441, column: 23, scope: !8627)
!8629 = !DILocation(line: 441, column: 65, scope: !8627)
!8630 = !DILocation(line: 441, column: 13, scope: !8627)
!8631 = !DILocation(line: 442, column: 13, scope: !8627)
!8632 = !DILocation(line: 444, column: 45, scope: !8619)
!8633 = !DILocation(line: 444, column: 21, scope: !8619)
!8634 = !DILocation(line: 444, column: 15, scope: !8619)
!8635 = !DILocation(line: 444, column: 9, scope: !8619)
!8636 = !DILocation(line: 444, column: 19, scope: !8619)
!8637 = !DILocation(line: 445, column: 45, scope: !8619)
!8638 = !DILocation(line: 445, column: 21, scope: !8619)
!8639 = !DILocation(line: 445, column: 15, scope: !8619)
!8640 = !DILocation(line: 445, column: 9, scope: !8619)
!8641 = !DILocation(line: 445, column: 19, scope: !8619)
!8642 = !DILocation(line: 446, column: 45, scope: !8619)
!8643 = !DILocation(line: 446, column: 21, scope: !8619)
!8644 = !DILocation(line: 446, column: 15, scope: !8619)
!8645 = !DILocation(line: 446, column: 9, scope: !8619)
!8646 = !DILocation(line: 446, column: 19, scope: !8619)
!8647 = !DILocation(line: 447, column: 5, scope: !8619)
!8648 = !DILocation(line: 438, column: 42, scope: !8649)
!8649 = !DILexicalBlockFile(scope: !8614, file: !1801, discriminator: 2)
!8650 = !DILocation(line: 438, column: 5, scope: !8649)
!8651 = distinct !{!8651, !8652}
!8652 = !DILocation(line: 438, column: 5, scope: !8573)
!8653 = !DILocation(line: 450, column: 15, scope: !8573)
!8654 = !DILocation(line: 450, column: 13, scope: !8573)
!8655 = !DILocation(line: 451, column: 12, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8573, file: !1801, line: 451, column: 5)
!8657 = !DILocation(line: 451, column: 19, scope: !8656)
!8658 = !DILocation(line: 451, column: 10, scope: !8656)
!8659 = !DILocation(line: 451, column: 24, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !8661, file: !1801, discriminator: 1)
!8661 = distinct !DILexicalBlock(scope: !8656, file: !1801, line: 451, column: 5)
!8662 = !DILocation(line: 451, column: 28, scope: !8660)
!8663 = !DILocation(line: 451, column: 34, scope: !8660)
!8664 = !DILocation(line: 451, column: 26, scope: !8660)
!8665 = !DILocation(line: 451, column: 5, scope: !8660)
!8666 = !DILocation(line: 452, column: 25, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8661, file: !1801, line: 451, column: 44)
!8668 = !DILocation(line: 452, column: 20, scope: !8667)
!8669 = !DILocation(line: 452, column: 28, scope: !8667)
!8670 = !DILocation(line: 452, column: 17, scope: !8667)
!8671 = !DILocation(line: 453, column: 13, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8667, file: !1801, line: 453, column: 13)
!8673 = !DILocation(line: 453, column: 21, scope: !8672)
!8674 = !DILocation(line: 453, column: 13, scope: !8667)
!8675 = !DILocation(line: 454, column: 20, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !1801, line: 453, column: 28)
!8677 = !DILocation(line: 454, column: 23, scope: !8676)
!8678 = !DILocation(line: 454, column: 67, scope: !8676)
!8679 = !DILocation(line: 454, column: 13, scope: !8676)
!8680 = !DILocation(line: 455, column: 13, scope: !8676)
!8681 = !DILocation(line: 457, column: 17, scope: !8667)
!8682 = !DILocation(line: 457, column: 9, scope: !8667)
!8683 = !DILocation(line: 458, column: 30, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8667, file: !1801, line: 457, column: 29)
!8685 = !DILocation(line: 458, column: 24, scope: !8684)
!8686 = !DILocation(line: 458, column: 17, scope: !8684)
!8687 = !DILocation(line: 458, column: 28, scope: !8684)
!8688 = !DILocation(line: 459, column: 30, scope: !8684)
!8689 = !DILocation(line: 459, column: 24, scope: !8684)
!8690 = !DILocation(line: 459, column: 17, scope: !8684)
!8691 = !DILocation(line: 459, column: 28, scope: !8684)
!8692 = !DILocation(line: 460, column: 30, scope: !8684)
!8693 = !DILocation(line: 460, column: 24, scope: !8684)
!8694 = !DILocation(line: 460, column: 17, scope: !8684)
!8695 = !DILocation(line: 460, column: 28, scope: !8684)
!8696 = !DILocation(line: 461, column: 30, scope: !8684)
!8697 = !DILocation(line: 461, column: 24, scope: !8684)
!8698 = !DILocation(line: 461, column: 17, scope: !8684)
!8699 = !DILocation(line: 461, column: 28, scope: !8684)
!8700 = !DILocation(line: 462, column: 9, scope: !8684)
!8701 = !DILocation(line: 463, column: 5, scope: !8667)
!8702 = !DILocation(line: 451, column: 40, scope: !8703)
!8703 = !DILexicalBlockFile(scope: !8661, file: !1801, discriminator: 2)
!8704 = !DILocation(line: 451, column: 5, scope: !8703)
!8705 = distinct !{!8705, !8706}
!8706 = !DILocation(line: 451, column: 5, scope: !8573)
!8707 = !DILocation(line: 464, column: 5, scope: !8573)
!8708 = !DILocation(line: 465, column: 1, scope: !8573)
!8709 = distinct !DISubprogram(name: "decode_transform_coeffs", scope: !1801, file: !1801, line: 627, type: !8710, isLocal: true, isDefinition: true, scopeLine: 628, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{null, !1857, !1015}
!8712 = !DILocalVariable(name: "s", arg: 1, scope: !8709, file: !1801, line: 627, type: !1857)
!8713 = !DILocation(line: 627, column: 62, scope: !8709)
!8714 = !DILocalVariable(name: "blk", arg: 2, scope: !8709, file: !1801, line: 627, type: !1015)
!8715 = !DILocation(line: 627, column: 69, scope: !8709)
!8716 = !DILocalVariable(name: "ch", scope: !8709, file: !1801, line: 629, type: !1015)
!8717 = !DILocation(line: 629, column: 9, scope: !8709)
!8718 = !DILocalVariable(name: "end", scope: !8709, file: !1801, line: 629, type: !1015)
!8719 = !DILocation(line: 629, column: 13, scope: !8709)
!8720 = !DILocalVariable(name: "got_cplchan", scope: !8709, file: !1801, line: 630, type: !1015)
!8721 = !DILocation(line: 630, column: 9, scope: !8709)
!8722 = !DILocalVariable(name: "m", scope: !8709, file: !1801, line: 631, type: !8723)
!8723 = !DIDerivedType(tag: DW_TAG_typedef, name: "mant_groups", file: !1801, line: 507, baseType: !8724)
!8724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mant_groups", file: !1801, line: 500, size: 256, align: 32, elements: !8725)
!8725 = !{!8726, !8727, !8728, !8729, !8730, !8731}
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "b1_mant", scope: !8724, file: !1801, line: 501, baseType: !1887, size: 64, align: 32)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "b2_mant", scope: !8724, file: !1801, line: 502, baseType: !1887, size: 64, align: 32, offset: 64)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "b4_mant", scope: !8724, file: !1801, line: 503, baseType: !1015, size: 32, align: 32, offset: 128)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "b1", scope: !8724, file: !1801, line: 504, baseType: !1015, size: 32, align: 32, offset: 160)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "b2", scope: !8724, file: !1801, line: 505, baseType: !1015, size: 32, align: 32, offset: 192)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "b4", scope: !8724, file: !1801, line: 506, baseType: !1015, size: 32, align: 32, offset: 224)
!8732 = !DILocation(line: 631, column: 17, scope: !8709)
!8733 = !DILocation(line: 633, column: 21, scope: !8709)
!8734 = !DILocation(line: 633, column: 24, scope: !8709)
!8735 = !DILocation(line: 633, column: 14, scope: !8709)
!8736 = !DILocation(line: 633, column: 17, scope: !8709)
!8737 = !DILocation(line: 633, column: 7, scope: !8709)
!8738 = !DILocation(line: 633, column: 10, scope: !8709)
!8739 = !DILocation(line: 635, column: 13, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8709, file: !1801, line: 635, column: 5)
!8741 = !DILocation(line: 635, column: 10, scope: !8740)
!8742 = !DILocation(line: 635, column: 18, scope: !8743)
!8743 = !DILexicalBlockFile(scope: !8744, file: !1801, discriminator: 1)
!8744 = distinct !DILexicalBlock(scope: !8740, file: !1801, line: 635, column: 5)
!8745 = !DILocation(line: 635, column: 24, scope: !8743)
!8746 = !DILocation(line: 635, column: 27, scope: !8743)
!8747 = !DILocation(line: 635, column: 21, scope: !8743)
!8748 = !DILocation(line: 635, column: 5, scope: !8743)
!8749 = !DILocation(line: 637, column: 36, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8744, file: !1801, line: 635, column: 43)
!8751 = !DILocation(line: 637, column: 39, scope: !8750)
!8752 = !DILocation(line: 637, column: 44, scope: !8750)
!8753 = !DILocation(line: 637, column: 9, scope: !8750)
!8754 = !DILocation(line: 640, column: 31, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8750, file: !1801, line: 640, column: 13)
!8756 = !DILocation(line: 640, column: 13, scope: !8755)
!8757 = !DILocation(line: 640, column: 16, scope: !8755)
!8758 = !DILocation(line: 640, column: 13, scope: !8750)
!8759 = !DILocation(line: 641, column: 18, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !1801, line: 641, column: 17)
!8761 = distinct !DILexicalBlock(scope: !8755, file: !1801, line: 640, column: 36)
!8762 = !DILocation(line: 641, column: 17, scope: !8761)
!8763 = !DILocation(line: 642, column: 44, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8760, file: !1801, line: 641, column: 31)
!8765 = !DILocation(line: 642, column: 47, scope: !8764)
!8766 = !DILocation(line: 642, column: 17, scope: !8764)
!8767 = !DILocation(line: 643, column: 43, scope: !8764)
!8768 = !DILocation(line: 643, column: 17, scope: !8764)
!8769 = !DILocation(line: 644, column: 29, scope: !8764)
!8770 = !DILocation(line: 645, column: 13, scope: !8764)
!8771 = !DILocation(line: 646, column: 19, scope: !8761)
!8772 = !DILocation(line: 646, column: 22, scope: !8761)
!8773 = !DILocation(line: 646, column: 17, scope: !8761)
!8774 = !DILocation(line: 647, column: 9, scope: !8761)
!8775 = !DILocation(line: 648, column: 31, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8755, file: !1801, line: 647, column: 16)
!8777 = !DILocation(line: 648, column: 19, scope: !8776)
!8778 = !DILocation(line: 648, column: 22, scope: !8776)
!8779 = !DILocation(line: 648, column: 17, scope: !8776)
!8780 = !DILocation(line: 650, column: 9, scope: !8750)
!8781 = distinct !{!8781, !8780}
!8782 = !DILocation(line: 651, column: 33, scope: !8750)
!8783 = !DILocation(line: 651, column: 13, scope: !8750)
!8784 = !DILocation(line: 651, column: 29, scope: !8750)
!8785 = !DILocation(line: 651, column: 16, scope: !8750)
!8786 = !DILocation(line: 651, column: 38, scope: !8750)
!8787 = !DILocation(line: 652, column: 16, scope: !8750)
!8788 = !DILocation(line: 652, column: 22, scope: !8750)
!8789 = !DILocation(line: 651, column: 13, scope: !8790)
!8790 = !DILexicalBlockFile(scope: !8750, file: !1801, discriminator: 1)
!8791 = !DILocation(line: 653, column: 5, scope: !8750)
!8792 = !DILocation(line: 635, column: 39, scope: !8793)
!8793 = !DILexicalBlockFile(scope: !8744, file: !1801, discriminator: 2)
!8794 = !DILocation(line: 635, column: 5, scope: !8793)
!8795 = distinct !{!8795, !8796}
!8796 = !DILocation(line: 635, column: 5, scope: !8709)
!8797 = !DILocation(line: 656, column: 22, scope: !8709)
!8798 = !DILocation(line: 656, column: 5, scope: !8709)
!8799 = !DILocation(line: 657, column: 1, scope: !8709)
!8800 = distinct !DISubprogram(name: "do_rematrixing", scope: !1801, file: !1801, line: 663, type: !7998, isLocal: true, isDefinition: true, scopeLine: 664, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8801 = !DILocalVariable(name: "s", arg: 1, scope: !8800, file: !1801, line: 663, type: !1857)
!8802 = !DILocation(line: 663, column: 46, scope: !8800)
!8803 = !DILocalVariable(name: "bnd", scope: !8800, file: !1801, line: 665, type: !1015)
!8804 = !DILocation(line: 665, column: 9, scope: !8800)
!8805 = !DILocalVariable(name: "i", scope: !8800, file: !1801, line: 665, type: !1015)
!8806 = !DILocation(line: 665, column: 14, scope: !8800)
!8807 = !DILocalVariable(name: "end", scope: !8800, file: !1801, line: 666, type: !1015)
!8808 = !DILocation(line: 666, column: 9, scope: !8800)
!8809 = !DILocalVariable(name: "bndend", scope: !8800, file: !1801, line: 666, type: !1015)
!8810 = !DILocation(line: 666, column: 14, scope: !8800)
!8811 = !DILocation(line: 668, column: 13, scope: !8800)
!8812 = !DILocation(line: 668, column: 16, scope: !8800)
!8813 = !DILocation(line: 668, column: 32, scope: !8800)
!8814 = !DILocation(line: 668, column: 35, scope: !8800)
!8815 = !DILocation(line: 668, column: 29, scope: !8800)
!8816 = !DILocation(line: 668, column: 12, scope: !8800)
!8817 = !DILocation(line: 668, column: 51, scope: !8818)
!8818 = !DILexicalBlockFile(scope: !8800, file: !1801, discriminator: 1)
!8819 = !DILocation(line: 668, column: 54, scope: !8818)
!8820 = !DILocation(line: 668, column: 12, scope: !8818)
!8821 = !DILocation(line: 668, column: 70, scope: !8822)
!8822 = !DILexicalBlockFile(scope: !8800, file: !1801, discriminator: 2)
!8823 = !DILocation(line: 668, column: 73, scope: !8822)
!8824 = !DILocation(line: 668, column: 12, scope: !8822)
!8825 = !DILocation(line: 668, column: 12, scope: !8826)
!8826 = !DILexicalBlockFile(scope: !8800, file: !1801, discriminator: 3)
!8827 = !DILocation(line: 668, column: 9, scope: !8826)
!8828 = !DILocation(line: 670, column: 14, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8800, file: !1801, line: 670, column: 5)
!8830 = !DILocation(line: 670, column: 10, scope: !8829)
!8831 = !DILocation(line: 670, column: 19, scope: !8832)
!8832 = !DILexicalBlockFile(scope: !8833, file: !1801, discriminator: 1)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !1801, line: 670, column: 5)
!8834 = !DILocation(line: 670, column: 25, scope: !8832)
!8835 = !DILocation(line: 670, column: 28, scope: !8832)
!8836 = !DILocation(line: 670, column: 23, scope: !8832)
!8837 = !DILocation(line: 670, column: 5, scope: !8832)
!8838 = !DILocation(line: 671, column: 34, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !1801, line: 671, column: 13)
!8840 = distinct !DILexicalBlock(scope: !8833, file: !1801, line: 670, column: 58)
!8841 = !DILocation(line: 671, column: 13, scope: !8839)
!8842 = !DILocation(line: 671, column: 16, scope: !8839)
!8843 = !DILocation(line: 671, column: 13, scope: !8840)
!8844 = !DILocation(line: 672, column: 24, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8839, file: !1801, line: 671, column: 40)
!8846 = !DILocation(line: 672, column: 57, scope: !8845)
!8847 = !DILocation(line: 672, column: 61, scope: !8845)
!8848 = !DILocation(line: 672, column: 32, scope: !8845)
!8849 = !DILocation(line: 672, column: 31, scope: !8845)
!8850 = !DILocation(line: 672, column: 29, scope: !8845)
!8851 = !DILocation(line: 672, column: 23, scope: !8845)
!8852 = !DILocation(line: 672, column: 95, scope: !8853)
!8853 = !DILexicalBlockFile(scope: !8845, file: !1801, discriminator: 1)
!8854 = !DILocation(line: 672, column: 99, scope: !8853)
!8855 = !DILocation(line: 672, column: 70, scope: !8853)
!8856 = !DILocation(line: 672, column: 69, scope: !8853)
!8857 = !DILocation(line: 672, column: 23, scope: !8853)
!8858 = !DILocation(line: 672, column: 108, scope: !8859)
!8859 = !DILexicalBlockFile(scope: !8845, file: !1801, discriminator: 2)
!8860 = !DILocation(line: 672, column: 23, scope: !8859)
!8861 = !DILocation(line: 672, column: 23, scope: !8862)
!8862 = !DILexicalBlockFile(scope: !8845, file: !1801, discriminator: 3)
!8863 = !DILocation(line: 672, column: 20, scope: !8862)
!8864 = !DILocation(line: 673, column: 47, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8845, file: !1801, line: 673, column: 13)
!8866 = !DILocation(line: 673, column: 22, scope: !8865)
!8867 = !DILocation(line: 673, column: 20, scope: !8865)
!8868 = !DILocation(line: 673, column: 18, scope: !8865)
!8869 = !DILocation(line: 673, column: 53, scope: !8870)
!8870 = !DILexicalBlockFile(scope: !8871, file: !1801, discriminator: 1)
!8871 = distinct !DILexicalBlock(scope: !8865, file: !1801, line: 673, column: 13)
!8872 = !DILocation(line: 673, column: 57, scope: !8870)
!8873 = !DILocation(line: 673, column: 55, scope: !8870)
!8874 = !DILocation(line: 673, column: 13, scope: !8870)
!8875 = !DILocalVariable(name: "tmp0", scope: !8876, file: !1801, line: 674, type: !1015)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !1801, line: 673, column: 70)
!8877 = !DILocation(line: 674, column: 21, scope: !8876)
!8878 = !DILocation(line: 674, column: 47, scope: !8876)
!8879 = !DILocation(line: 674, column: 28, scope: !8876)
!8880 = !DILocation(line: 674, column: 31, scope: !8876)
!8881 = !DILocation(line: 675, column: 61, scope: !8876)
!8882 = !DILocation(line: 675, column: 42, scope: !8876)
!8883 = !DILocation(line: 675, column: 45, scope: !8876)
!8884 = !DILocation(line: 675, column: 36, scope: !8876)
!8885 = !DILocation(line: 675, column: 17, scope: !8876)
!8886 = !DILocation(line: 675, column: 20, scope: !8876)
!8887 = !DILocation(line: 675, column: 39, scope: !8876)
!8888 = !DILocation(line: 676, column: 41, scope: !8876)
!8889 = !DILocation(line: 676, column: 67, scope: !8876)
!8890 = !DILocation(line: 676, column: 48, scope: !8876)
!8891 = !DILocation(line: 676, column: 51, scope: !8876)
!8892 = !DILocation(line: 676, column: 46, scope: !8876)
!8893 = !DILocation(line: 676, column: 36, scope: !8876)
!8894 = !DILocation(line: 676, column: 17, scope: !8876)
!8895 = !DILocation(line: 676, column: 20, scope: !8876)
!8896 = !DILocation(line: 676, column: 39, scope: !8876)
!8897 = !DILocation(line: 677, column: 13, scope: !8876)
!8898 = !DILocation(line: 673, column: 66, scope: !8899)
!8899 = !DILexicalBlockFile(scope: !8871, file: !1801, discriminator: 2)
!8900 = !DILocation(line: 673, column: 13, scope: !8899)
!8901 = distinct !{!8901, !8902}
!8902 = !DILocation(line: 673, column: 13, scope: !8845)
!8903 = !DILocation(line: 678, column: 9, scope: !8845)
!8904 = !DILocation(line: 679, column: 5, scope: !8840)
!8905 = !DILocation(line: 670, column: 54, scope: !8906)
!8906 = !DILexicalBlockFile(scope: !8833, file: !1801, discriminator: 2)
!8907 = !DILocation(line: 670, column: 5, scope: !8906)
!8908 = distinct !{!8908, !8909}
!8909 = !DILocation(line: 670, column: 5, scope: !8800)
!8910 = !DILocation(line: 680, column: 1, scope: !8800)
!8911 = distinct !DISubprogram(name: "ff_eac3_apply_spectral_extension", scope: !1008, file: !1008, line: 59, type: !7998, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!8912 = !DILocalVariable(name: "s", arg: 1, scope: !8911, file: !1008, line: 59, type: !1857)
!8913 = !DILocation(line: 59, column: 64, scope: !8911)
!8914 = !DILocalVariable(name: "bin", scope: !8911, file: !1008, line: 61, type: !1015)
!8915 = !DILocation(line: 61, column: 9, scope: !8911)
!8916 = !DILocalVariable(name: "bnd", scope: !8911, file: !1008, line: 61, type: !1015)
!8917 = !DILocation(line: 61, column: 14, scope: !8911)
!8918 = !DILocalVariable(name: "ch", scope: !8911, file: !1008, line: 61, type: !1015)
!8919 = !DILocation(line: 61, column: 19, scope: !8911)
!8920 = !DILocalVariable(name: "i", scope: !8911, file: !1008, line: 61, type: !1015)
!8921 = !DILocation(line: 61, column: 23, scope: !8911)
!8922 = !DILocalVariable(name: "wrapflag", scope: !8911, file: !1008, line: 62, type: !1953)
!8923 = !DILocation(line: 62, column: 13, scope: !8911)
!8924 = !DILocalVariable(name: "num_copy_sections", scope: !8911, file: !1008, line: 62, type: !1039)
!8925 = !DILocation(line: 62, column: 34, scope: !8911)
!8926 = !DILocalVariable(name: "copy_sizes", scope: !8911, file: !1008, line: 62, type: !1953)
!8927 = !DILocation(line: 62, column: 53, scope: !8911)
!8928 = !DILocalVariable(name: "rms_energy", scope: !8911, file: !1008, line: 63, type: !8929)
!8929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 544, align: 32, elements: !1954)
!8930 = !DILocation(line: 63, column: 11, scope: !8911)
!8931 = !DILocation(line: 67, column: 11, scope: !8911)
!8932 = !DILocation(line: 67, column: 14, scope: !8911)
!8933 = !DILocation(line: 67, column: 9, scope: !8911)
!8934 = !DILocation(line: 68, column: 23, scope: !8911)
!8935 = !DILocation(line: 69, column: 14, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8911, file: !1008, line: 69, column: 5)
!8937 = !DILocation(line: 69, column: 10, scope: !8936)
!8938 = !DILocation(line: 69, column: 19, scope: !8939)
!8939 = !DILexicalBlockFile(scope: !8940, file: !1008, discriminator: 1)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !1008, line: 69, column: 5)
!8941 = !DILocation(line: 69, column: 25, scope: !8939)
!8942 = !DILocation(line: 69, column: 28, scope: !8939)
!8943 = !DILocation(line: 69, column: 23, scope: !8939)
!8944 = !DILocation(line: 69, column: 5, scope: !8939)
!8945 = !DILocalVariable(name: "copysize", scope: !8946, file: !1008, line: 70, type: !1015)
!8946 = distinct !DILexicalBlock(scope: !8940, file: !1008, line: 69, column: 50)
!8947 = !DILocation(line: 70, column: 13, scope: !8946)
!8948 = !DILocalVariable(name: "bandsize", scope: !8946, file: !1008, line: 71, type: !1015)
!8949 = !DILocation(line: 71, column: 13, scope: !8946)
!8950 = !DILocation(line: 71, column: 42, scope: !8946)
!8951 = !DILocation(line: 71, column: 24, scope: !8946)
!8952 = !DILocation(line: 71, column: 27, scope: !8946)
!8953 = !DILocation(line: 72, column: 13, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8946, file: !1008, line: 72, column: 13)
!8955 = !DILocation(line: 72, column: 19, scope: !8954)
!8956 = !DILocation(line: 72, column: 17, scope: !8954)
!8957 = !DILocation(line: 72, column: 30, scope: !8954)
!8958 = !DILocation(line: 72, column: 33, scope: !8954)
!8959 = !DILocation(line: 72, column: 28, scope: !8954)
!8960 = !DILocation(line: 72, column: 13, scope: !8946)
!8961 = !DILocation(line: 73, column: 47, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8954, file: !1008, line: 72, column: 53)
!8963 = !DILocation(line: 73, column: 53, scope: !8962)
!8964 = !DILocation(line: 73, column: 56, scope: !8962)
!8965 = !DILocation(line: 73, column: 51, scope: !8962)
!8966 = !DILocation(line: 73, column: 41, scope: !8962)
!8967 = !DILocation(line: 73, column: 13, scope: !8962)
!8968 = !DILocation(line: 73, column: 45, scope: !8962)
!8969 = !DILocation(line: 74, column: 19, scope: !8962)
!8970 = !DILocation(line: 74, column: 22, scope: !8962)
!8971 = !DILocation(line: 74, column: 17, scope: !8962)
!8972 = !DILocation(line: 75, column: 22, scope: !8962)
!8973 = !DILocation(line: 75, column: 13, scope: !8962)
!8974 = !DILocation(line: 75, column: 27, scope: !8962)
!8975 = !DILocation(line: 76, column: 9, scope: !8962)
!8976 = !DILocation(line: 77, column: 16, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8946, file: !1008, line: 77, column: 9)
!8978 = !DILocation(line: 77, column: 14, scope: !8977)
!8979 = !DILocation(line: 77, column: 21, scope: !8980)
!8980 = !DILexicalBlockFile(scope: !8981, file: !1008, discriminator: 1)
!8981 = distinct !DILexicalBlock(scope: !8977, file: !1008, line: 77, column: 9)
!8982 = !DILocation(line: 77, column: 25, scope: !8980)
!8983 = !DILocation(line: 77, column: 23, scope: !8980)
!8984 = !DILocation(line: 77, column: 9, scope: !8980)
!8985 = !DILocation(line: 78, column: 17, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !1008, line: 78, column: 17)
!8987 = distinct !DILexicalBlock(scope: !8981, file: !1008, line: 77, column: 50)
!8988 = !DILocation(line: 78, column: 24, scope: !8986)
!8989 = !DILocation(line: 78, column: 27, scope: !8986)
!8990 = !DILocation(line: 78, column: 21, scope: !8986)
!8991 = !DILocation(line: 78, column: 17, scope: !8987)
!8992 = !DILocation(line: 79, column: 51, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8986, file: !1008, line: 78, column: 47)
!8994 = !DILocation(line: 79, column: 57, scope: !8993)
!8995 = !DILocation(line: 79, column: 60, scope: !8993)
!8996 = !DILocation(line: 79, column: 55, scope: !8993)
!8997 = !DILocation(line: 79, column: 45, scope: !8993)
!8998 = !DILocation(line: 79, column: 17, scope: !8993)
!8999 = !DILocation(line: 79, column: 49, scope: !8993)
!9000 = !DILocation(line: 80, column: 23, scope: !8993)
!9001 = !DILocation(line: 80, column: 26, scope: !8993)
!9002 = !DILocation(line: 80, column: 21, scope: !8993)
!9003 = !DILocation(line: 81, column: 13, scope: !8993)
!9004 = !DILocation(line: 82, column: 26, scope: !8987)
!9005 = !DILocation(line: 82, column: 37, scope: !8987)
!9006 = !DILocation(line: 82, column: 35, scope: !8987)
!9007 = !DILocation(line: 82, column: 43, scope: !8987)
!9008 = !DILocation(line: 82, column: 46, scope: !8987)
!9009 = !DILocation(line: 82, column: 67, scope: !8987)
!9010 = !DILocation(line: 82, column: 65, scope: !8987)
!9011 = !DILocation(line: 82, column: 40, scope: !8987)
!9012 = !DILocation(line: 82, column: 25, scope: !8987)
!9013 = !DILocation(line: 82, column: 75, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !8987, file: !1008, discriminator: 1)
!9015 = !DILocation(line: 82, column: 78, scope: !9014)
!9016 = !DILocation(line: 82, column: 99, scope: !9014)
!9017 = !DILocation(line: 82, column: 97, scope: !9014)
!9018 = !DILocation(line: 82, column: 25, scope: !9014)
!9019 = !DILocation(line: 82, column: 107, scope: !9020)
!9020 = !DILexicalBlockFile(scope: !8987, file: !1008, discriminator: 2)
!9021 = !DILocation(line: 82, column: 118, scope: !9020)
!9022 = !DILocation(line: 82, column: 116, scope: !9020)
!9023 = !DILocation(line: 82, column: 25, scope: !9020)
!9024 = !DILocation(line: 82, column: 25, scope: !9025)
!9025 = !DILexicalBlockFile(scope: !8987, file: !1008, discriminator: 3)
!9026 = !DILocation(line: 82, column: 22, scope: !9025)
!9027 = !DILocation(line: 83, column: 20, scope: !8987)
!9028 = !DILocation(line: 83, column: 17, scope: !8987)
!9029 = !DILocation(line: 84, column: 9, scope: !8987)
!9030 = !DILocation(line: 77, column: 40, scope: !9031)
!9031 = !DILexicalBlockFile(scope: !8981, file: !1008, discriminator: 2)
!9032 = !DILocation(line: 77, column: 37, scope: !9031)
!9033 = !DILocation(line: 77, column: 9, scope: !9031)
!9034 = distinct !{!9034, !9035}
!9035 = !DILocation(line: 77, column: 9, scope: !8946)
!9036 = !DILocation(line: 85, column: 5, scope: !8946)
!9037 = !DILocation(line: 69, column: 46, scope: !9038)
!9038 = !DILexicalBlockFile(scope: !8940, file: !1008, discriminator: 2)
!9039 = !DILocation(line: 69, column: 5, scope: !9038)
!9040 = distinct !{!9040, !9041}
!9041 = !DILocation(line: 69, column: 5, scope: !8911)
!9042 = !DILocation(line: 86, column: 39, scope: !8911)
!9043 = !DILocation(line: 86, column: 45, scope: !8911)
!9044 = !DILocation(line: 86, column: 48, scope: !8911)
!9045 = !DILocation(line: 86, column: 43, scope: !8911)
!9046 = !DILocation(line: 86, column: 33, scope: !8911)
!9047 = !DILocation(line: 86, column: 5, scope: !8911)
!9048 = !DILocation(line: 86, column: 37, scope: !8911)
!9049 = !DILocation(line: 88, column: 13, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8911, file: !1008, line: 88, column: 5)
!9051 = !DILocation(line: 88, column: 10, scope: !9050)
!9052 = !DILocation(line: 88, column: 18, scope: !9053)
!9053 = !DILexicalBlockFile(scope: !9054, file: !1008, discriminator: 1)
!9054 = distinct !DILexicalBlock(scope: !9050, file: !1008, line: 88, column: 5)
!9055 = !DILocation(line: 88, column: 24, scope: !9053)
!9056 = !DILocation(line: 88, column: 27, scope: !9053)
!9057 = !DILocation(line: 88, column: 21, scope: !9053)
!9058 = !DILocation(line: 88, column: 5, scope: !9053)
!9059 = !DILocation(line: 89, column: 34, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !1008, line: 89, column: 13)
!9061 = distinct !DILexicalBlock(scope: !9054, file: !1008, line: 88, column: 47)
!9062 = !DILocation(line: 89, column: 14, scope: !9060)
!9063 = !DILocation(line: 89, column: 17, scope: !9060)
!9064 = !DILocation(line: 89, column: 13, scope: !9061)
!9065 = !DILocation(line: 90, column: 13, scope: !9060)
!9066 = !DILocation(line: 93, column: 15, scope: !9061)
!9067 = !DILocation(line: 93, column: 18, scope: !9061)
!9068 = !DILocation(line: 93, column: 13, scope: !9061)
!9069 = !DILocation(line: 94, column: 16, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9061, file: !1008, line: 94, column: 9)
!9071 = !DILocation(line: 94, column: 14, scope: !9070)
!9072 = !DILocation(line: 94, column: 21, scope: !9073)
!9073 = !DILexicalBlockFile(scope: !9074, file: !1008, discriminator: 1)
!9074 = distinct !DILexicalBlock(scope: !9070, file: !1008, line: 94, column: 9)
!9075 = !DILocation(line: 94, column: 25, scope: !9073)
!9076 = !DILocation(line: 94, column: 23, scope: !9073)
!9077 = !DILocation(line: 94, column: 9, scope: !9073)
!9078 = !DILocation(line: 95, column: 45, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9074, file: !1008, line: 94, column: 49)
!9080 = !DILocation(line: 95, column: 21, scope: !9079)
!9081 = !DILocation(line: 95, column: 41, scope: !9079)
!9082 = !DILocation(line: 95, column: 24, scope: !9079)
!9083 = !DILocation(line: 95, column: 13, scope: !9079)
!9084 = !DILocation(line: 96, column: 45, scope: !9079)
!9085 = !DILocation(line: 96, column: 48, scope: !9079)
!9086 = !DILocation(line: 96, column: 21, scope: !9079)
!9087 = !DILocation(line: 96, column: 41, scope: !9079)
!9088 = !DILocation(line: 96, column: 24, scope: !9079)
!9089 = !DILocation(line: 97, column: 31, scope: !9079)
!9090 = !DILocation(line: 97, column: 20, scope: !9079)
!9091 = !DILocation(line: 97, column: 33, scope: !9079)
!9092 = !DILocation(line: 98, column: 31, scope: !9079)
!9093 = !DILocation(line: 98, column: 20, scope: !9079)
!9094 = !DILocation(line: 98, column: 17, scope: !9079)
!9095 = !DILocation(line: 99, column: 9, scope: !9079)
!9096 = !DILocation(line: 94, column: 45, scope: !9097)
!9097 = !DILexicalBlockFile(scope: !9074, file: !1008, discriminator: 2)
!9098 = !DILocation(line: 94, column: 9, scope: !9097)
!9099 = distinct !{!9099, !9100}
!9100 = !DILocation(line: 94, column: 9, scope: !9061)
!9101 = !DILocation(line: 102, column: 15, scope: !9061)
!9102 = !DILocation(line: 102, column: 18, scope: !9061)
!9103 = !DILocation(line: 102, column: 13, scope: !9061)
!9104 = !DILocation(line: 103, column: 18, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9061, file: !1008, line: 103, column: 9)
!9106 = !DILocation(line: 103, column: 14, scope: !9105)
!9107 = !DILocation(line: 103, column: 23, scope: !9108)
!9108 = !DILexicalBlockFile(scope: !9109, file: !1008, discriminator: 1)
!9109 = distinct !DILexicalBlock(scope: !9105, file: !1008, line: 103, column: 9)
!9110 = !DILocation(line: 103, column: 29, scope: !9108)
!9111 = !DILocation(line: 103, column: 32, scope: !9108)
!9112 = !DILocation(line: 103, column: 27, scope: !9108)
!9113 = !DILocation(line: 103, column: 9, scope: !9108)
!9114 = !DILocalVariable(name: "bandsize", scope: !9115, file: !1008, line: 104, type: !1015)
!9115 = distinct !DILexicalBlock(scope: !9109, file: !1008, line: 103, column: 54)
!9116 = !DILocation(line: 104, column: 17, scope: !9115)
!9117 = !DILocation(line: 104, column: 46, scope: !9115)
!9118 = !DILocation(line: 104, column: 28, scope: !9115)
!9119 = !DILocation(line: 104, column: 31, scope: !9115)
!9120 = !DILocalVariable(name: "accum", scope: !9115, file: !1008, line: 105, type: !1032)
!9121 = !DILocation(line: 105, column: 19, scope: !9115)
!9122 = !DILocation(line: 106, column: 20, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9115, file: !1008, line: 106, column: 13)
!9124 = !DILocation(line: 106, column: 18, scope: !9123)
!9125 = !DILocation(line: 106, column: 25, scope: !9126)
!9126 = !DILexicalBlockFile(scope: !9127, file: !1008, discriminator: 1)
!9127 = distinct !DILexicalBlock(scope: !9123, file: !1008, line: 106, column: 13)
!9128 = !DILocation(line: 106, column: 29, scope: !9126)
!9129 = !DILocation(line: 106, column: 27, scope: !9126)
!9130 = !DILocation(line: 106, column: 13, scope: !9126)
!9131 = !DILocalVariable(name: "coeff", scope: !9132, file: !1008, line: 107, type: !1032)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !1008, line: 106, column: 44)
!9133 = !DILocation(line: 107, column: 23, scope: !9132)
!9134 = !DILocation(line: 107, column: 58, scope: !9132)
!9135 = !DILocation(line: 107, column: 31, scope: !9132)
!9136 = !DILocation(line: 107, column: 51, scope: !9132)
!9137 = !DILocation(line: 107, column: 34, scope: !9132)
!9138 = !DILocation(line: 108, column: 26, scope: !9132)
!9139 = !DILocation(line: 108, column: 34, scope: !9132)
!9140 = !DILocation(line: 108, column: 32, scope: !9132)
!9141 = !DILocation(line: 108, column: 23, scope: !9132)
!9142 = !DILocation(line: 109, column: 13, scope: !9132)
!9143 = !DILocation(line: 106, column: 40, scope: !9144)
!9144 = !DILexicalBlockFile(scope: !9127, file: !1008, discriminator: 2)
!9145 = !DILocation(line: 106, column: 13, scope: !9144)
!9146 = distinct !{!9146, !9147}
!9147 = !DILocation(line: 106, column: 13, scope: !9115)
!9148 = !DILocation(line: 110, column: 37, scope: !9115)
!9149 = !DILocation(line: 110, column: 45, scope: !9115)
!9150 = !DILocation(line: 110, column: 43, scope: !9115)
!9151 = !DILocation(line: 110, column: 31, scope: !9115)
!9152 = !DILocation(line: 110, column: 24, scope: !9115)
!9153 = !DILocation(line: 110, column: 13, scope: !9115)
!9154 = !DILocation(line: 110, column: 29, scope: !9115)
!9155 = !DILocation(line: 111, column: 9, scope: !9115)
!9156 = !DILocation(line: 103, column: 50, scope: !9157)
!9157 = !DILexicalBlockFile(scope: !9109, file: !1008, discriminator: 2)
!9158 = !DILocation(line: 103, column: 9, scope: !9157)
!9159 = distinct !{!9159, !9160}
!9160 = !DILocation(line: 103, column: 9, scope: !9061)
!9161 = !DILocation(line: 115, column: 31, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9061, file: !1008, line: 115, column: 13)
!9163 = !DILocation(line: 115, column: 13, scope: !9162)
!9164 = !DILocation(line: 115, column: 16, scope: !9162)
!9165 = !DILocation(line: 115, column: 35, scope: !9162)
!9166 = !DILocation(line: 115, column: 13, scope: !9061)
!9167 = !DILocalVariable(name: "atten_tab", scope: !9168, file: !1008, line: 116, type: !2112)
!9168 = distinct !DILexicalBlock(scope: !9162, file: !1008, line: 115, column: 41)
!9169 = !DILocation(line: 116, column: 26, scope: !9168)
!9170 = !DILocation(line: 116, column: 78, scope: !9168)
!9171 = !DILocation(line: 116, column: 60, scope: !9168)
!9172 = !DILocation(line: 116, column: 63, scope: !9168)
!9173 = !DILocation(line: 116, column: 38, scope: !9168)
!9174 = !DILocation(line: 117, column: 19, scope: !9168)
!9175 = !DILocation(line: 117, column: 22, scope: !9168)
!9176 = !DILocation(line: 117, column: 41, scope: !9168)
!9177 = !DILocation(line: 117, column: 17, scope: !9168)
!9178 = !DILocation(line: 118, column: 22, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9168, file: !1008, line: 118, column: 13)
!9180 = !DILocation(line: 118, column: 18, scope: !9179)
!9181 = !DILocation(line: 118, column: 27, scope: !9182)
!9182 = !DILexicalBlockFile(scope: !9183, file: !1008, discriminator: 1)
!9183 = distinct !DILexicalBlock(scope: !9179, file: !1008, line: 118, column: 13)
!9184 = !DILocation(line: 118, column: 33, scope: !9182)
!9185 = !DILocation(line: 118, column: 36, scope: !9182)
!9186 = !DILocation(line: 118, column: 31, scope: !9182)
!9187 = !DILocation(line: 118, column: 13, scope: !9182)
!9188 = !DILocation(line: 119, column: 30, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !1008, line: 119, column: 21)
!9190 = distinct !DILexicalBlock(scope: !9183, file: !1008, line: 118, column: 58)
!9191 = !DILocation(line: 119, column: 21, scope: !9189)
!9192 = !DILocation(line: 119, column: 21, scope: !9190)
!9193 = !DILocalVariable(name: "coeffs", scope: !9194, file: !1008, line: 120, type: !2240)
!9194 = distinct !DILexicalBlock(scope: !9189, file: !1008, line: 119, column: 36)
!9195 = !DILocation(line: 120, column: 31, scope: !9194)
!9196 = !DILocation(line: 120, column: 65, scope: !9194)
!9197 = !DILocation(line: 120, column: 41, scope: !9194)
!9198 = !DILocation(line: 120, column: 61, scope: !9194)
!9199 = !DILocation(line: 120, column: 44, scope: !9194)
!9200 = !DILocation(line: 121, column: 34, scope: !9194)
!9201 = !DILocation(line: 121, column: 21, scope: !9194)
!9202 = !DILocation(line: 121, column: 31, scope: !9194)
!9203 = !DILocation(line: 122, column: 34, scope: !9194)
!9204 = !DILocation(line: 122, column: 21, scope: !9194)
!9205 = !DILocation(line: 122, column: 31, scope: !9194)
!9206 = !DILocation(line: 123, column: 34, scope: !9194)
!9207 = !DILocation(line: 123, column: 21, scope: !9194)
!9208 = !DILocation(line: 123, column: 31, scope: !9194)
!9209 = !DILocation(line: 124, column: 34, scope: !9194)
!9210 = !DILocation(line: 124, column: 21, scope: !9194)
!9211 = !DILocation(line: 124, column: 31, scope: !9194)
!9212 = !DILocation(line: 125, column: 34, scope: !9194)
!9213 = !DILocation(line: 125, column: 21, scope: !9194)
!9214 = !DILocation(line: 125, column: 31, scope: !9194)
!9215 = !DILocation(line: 126, column: 17, scope: !9194)
!9216 = !DILocation(line: 127, column: 42, scope: !9190)
!9217 = !DILocation(line: 127, column: 24, scope: !9190)
!9218 = !DILocation(line: 127, column: 27, scope: !9190)
!9219 = !DILocation(line: 127, column: 21, scope: !9190)
!9220 = !DILocation(line: 128, column: 13, scope: !9190)
!9221 = !DILocation(line: 118, column: 54, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9183, file: !1008, discriminator: 2)
!9223 = !DILocation(line: 118, column: 13, scope: !9222)
!9224 = distinct !{!9224, !9225}
!9225 = !DILocation(line: 118, column: 13, scope: !9168)
!9226 = !DILocation(line: 129, column: 9, scope: !9168)
!9227 = !DILocation(line: 134, column: 15, scope: !9061)
!9228 = !DILocation(line: 134, column: 18, scope: !9061)
!9229 = !DILocation(line: 134, column: 13, scope: !9061)
!9230 = !DILocation(line: 135, column: 18, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9061, file: !1008, line: 135, column: 9)
!9232 = !DILocation(line: 135, column: 14, scope: !9231)
!9233 = !DILocation(line: 135, column: 23, scope: !9234)
!9234 = !DILexicalBlockFile(scope: !9235, file: !1008, discriminator: 1)
!9235 = distinct !DILexicalBlock(scope: !9231, file: !1008, line: 135, column: 9)
!9236 = !DILocation(line: 135, column: 29, scope: !9234)
!9237 = !DILocation(line: 135, column: 32, scope: !9234)
!9238 = !DILocation(line: 135, column: 27, scope: !9234)
!9239 = !DILocation(line: 135, column: 9, scope: !9234)
!9240 = !DILocalVariable(name: "nscale", scope: !9241, file: !1008, line: 136, type: !1032)
!9241 = distinct !DILexicalBlock(scope: !9235, file: !1008, line: 135, column: 54)
!9242 = !DILocation(line: 136, column: 19, scope: !9241)
!9243 = !DILocation(line: 136, column: 51, scope: !9241)
!9244 = !DILocation(line: 136, column: 28, scope: !9241)
!9245 = !DILocation(line: 136, column: 47, scope: !9241)
!9246 = !DILocation(line: 136, column: 31, scope: !9241)
!9247 = !DILocation(line: 136, column: 69, scope: !9241)
!9248 = !DILocation(line: 136, column: 58, scope: !9241)
!9249 = !DILocation(line: 136, column: 56, scope: !9241)
!9250 = !DILocation(line: 136, column: 74, scope: !9241)
!9251 = !DILocalVariable(name: "sscale", scope: !9241, file: !1008, line: 137, type: !1032)
!9252 = !DILocation(line: 137, column: 19, scope: !9241)
!9253 = !DILocation(line: 137, column: 52, scope: !9241)
!9254 = !DILocation(line: 137, column: 28, scope: !9241)
!9255 = !DILocation(line: 137, column: 48, scope: !9241)
!9256 = !DILocation(line: 137, column: 31, scope: !9241)
!9257 = !DILocation(line: 143, column: 20, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9241, file: !1008, line: 143, column: 13)
!9259 = !DILocation(line: 143, column: 18, scope: !9258)
!9260 = !DILocation(line: 143, column: 25, scope: !9261)
!9261 = !DILexicalBlockFile(scope: !9262, file: !1008, discriminator: 1)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !1008, line: 143, column: 13)
!9263 = !DILocation(line: 143, column: 47, scope: !9261)
!9264 = !DILocation(line: 143, column: 29, scope: !9261)
!9265 = !DILocation(line: 143, column: 32, scope: !9261)
!9266 = !DILocation(line: 143, column: 27, scope: !9261)
!9267 = !DILocation(line: 143, column: 13, scope: !9261)
!9268 = !DILocalVariable(name: "noise", scope: !9269, file: !1008, line: 144, type: !1032)
!9269 = distinct !DILexicalBlock(scope: !9262, file: !1008, line: 143, column: 58)
!9270 = !DILocation(line: 144, column: 23, scope: !9269)
!9271 = !DILocation(line: 144, column: 31, scope: !9269)
!9272 = !DILocation(line: 144, column: 61, scope: !9269)
!9273 = !DILocation(line: 144, column: 64, scope: !9269)
!9274 = !DILocation(line: 144, column: 49, scope: !9269)
!9275 = !DILocation(line: 144, column: 40, scope: !9269)
!9276 = !DILocation(line: 144, column: 38, scope: !9269)
!9277 = !DILocation(line: 145, column: 49, scope: !9269)
!9278 = !DILocation(line: 145, column: 41, scope: !9269)
!9279 = !DILocation(line: 145, column: 17, scope: !9269)
!9280 = !DILocation(line: 145, column: 37, scope: !9269)
!9281 = !DILocation(line: 145, column: 20, scope: !9269)
!9282 = !DILocation(line: 145, column: 46, scope: !9269)
!9283 = !DILocation(line: 146, column: 51, scope: !9269)
!9284 = !DILocation(line: 146, column: 44, scope: !9269)
!9285 = !DILocation(line: 146, column: 17, scope: !9269)
!9286 = !DILocation(line: 146, column: 37, scope: !9269)
!9287 = !DILocation(line: 146, column: 20, scope: !9269)
!9288 = !DILocation(line: 146, column: 48, scope: !9269)
!9289 = !DILocation(line: 147, column: 13, scope: !9269)
!9290 = !DILocation(line: 143, column: 54, scope: !9291)
!9291 = !DILexicalBlockFile(scope: !9262, file: !1008, discriminator: 2)
!9292 = !DILocation(line: 143, column: 13, scope: !9291)
!9293 = distinct !{!9293, !9294}
!9294 = !DILocation(line: 143, column: 13, scope: !9241)
!9295 = !DILocation(line: 148, column: 9, scope: !9241)
!9296 = !DILocation(line: 135, column: 50, scope: !9297)
!9297 = !DILexicalBlockFile(scope: !9235, file: !1008, discriminator: 2)
!9298 = !DILocation(line: 135, column: 9, scope: !9297)
!9299 = distinct !{!9299, !9300}
!9300 = !DILocation(line: 135, column: 9, scope: !9061)
!9301 = !DILocation(line: 149, column: 5, scope: !9061)
!9302 = !DILocation(line: 88, column: 43, scope: !9303)
!9303 = !DILexicalBlockFile(scope: !9054, file: !1008, discriminator: 2)
!9304 = !DILocation(line: 88, column: 5, scope: !9303)
!9305 = distinct !{!9305, !9306}
!9306 = !DILocation(line: 88, column: 5, scope: !8911)
!9307 = !DILocation(line: 150, column: 1, scope: !8911)
!9308 = distinct !DISubprogram(name: "ac3_upmix_delay", scope: !1801, file: !1801, line: 725, type: !7998, isLocal: true, isDefinition: true, scopeLine: 726, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9309 = !DILocalVariable(name: "s", arg: 1, scope: !9308, file: !1801, line: 725, type: !1857)
!9310 = !DILocation(line: 725, column: 47, scope: !9308)
!9311 = !DILocalVariable(name: "channel_data_size", scope: !9308, file: !1801, line: 727, type: !1015)
!9312 = !DILocation(line: 727, column: 9, scope: !9308)
!9313 = !DILocation(line: 728, column: 13, scope: !9308)
!9314 = !DILocation(line: 728, column: 16, scope: !9308)
!9315 = !DILocation(line: 728, column: 5, scope: !9308)
!9316 = !DILocation(line: 732, column: 16, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9308, file: !1801, line: 728, column: 30)
!9318 = !DILocation(line: 732, column: 19, scope: !9317)
!9319 = !DILocation(line: 732, column: 9, scope: !9317)
!9320 = !DILocation(line: 732, column: 29, scope: !9317)
!9321 = !DILocation(line: 732, column: 32, scope: !9317)
!9322 = !DILocation(line: 732, column: 42, scope: !9317)
!9323 = !DILocation(line: 733, column: 9, scope: !9317)
!9324 = !DILocation(line: 735, column: 16, scope: !9317)
!9325 = !DILocation(line: 735, column: 19, scope: !9317)
!9326 = !DILocation(line: 735, column: 9, scope: !9317)
!9327 = !DILocation(line: 735, column: 32, scope: !9317)
!9328 = !DILocation(line: 737, column: 16, scope: !9317)
!9329 = !DILocation(line: 737, column: 19, scope: !9317)
!9330 = !DILocation(line: 737, column: 9, scope: !9317)
!9331 = !DILocation(line: 737, column: 32, scope: !9317)
!9332 = !DILocation(line: 738, column: 9, scope: !9317)
!9333 = !DILocation(line: 740, column: 16, scope: !9317)
!9334 = !DILocation(line: 740, column: 19, scope: !9317)
!9335 = !DILocation(line: 740, column: 9, scope: !9317)
!9336 = !DILocation(line: 740, column: 32, scope: !9317)
!9337 = !DILocation(line: 742, column: 16, scope: !9317)
!9338 = !DILocation(line: 742, column: 19, scope: !9317)
!9339 = !DILocation(line: 742, column: 9, scope: !9317)
!9340 = !DILocation(line: 742, column: 32, scope: !9317)
!9341 = !DILocation(line: 744, column: 16, scope: !9317)
!9342 = !DILocation(line: 744, column: 19, scope: !9317)
!9343 = !DILocation(line: 744, column: 9, scope: !9317)
!9344 = !DILocation(line: 744, column: 29, scope: !9317)
!9345 = !DILocation(line: 744, column: 32, scope: !9317)
!9346 = !DILocation(line: 744, column: 42, scope: !9317)
!9347 = !DILocation(line: 745, column: 16, scope: !9317)
!9348 = !DILocation(line: 745, column: 19, scope: !9317)
!9349 = !DILocation(line: 745, column: 9, scope: !9317)
!9350 = !DILocation(line: 745, column: 32, scope: !9317)
!9351 = !DILocation(line: 746, column: 9, scope: !9317)
!9352 = !DILocation(line: 748, column: 1, scope: !9308)
!9353 = distinct !DISubprogram(name: "do_imdct", scope: !1801, file: !1801, line: 687, type: !9354, isLocal: true, isDefinition: true, scopeLine: 688, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9354 = !DISubroutineType(types: !9355)
!9355 = !{null, !1857, !1015, !1015}
!9356 = !DILocalVariable(name: "s", arg: 1, scope: !9353, file: !1801, line: 687, type: !1857)
!9357 = !DILocation(line: 687, column: 47, scope: !9353)
!9358 = !DILocalVariable(name: "channels", arg: 2, scope: !9353, file: !1801, line: 687, type: !1015)
!9359 = !DILocation(line: 687, column: 54, scope: !9353)
!9360 = !DILocalVariable(name: "offset", arg: 3, scope: !9353, file: !1801, line: 687, type: !1015)
!9361 = !DILocation(line: 687, column: 68, scope: !9353)
!9362 = !DILocalVariable(name: "ch", scope: !9353, file: !1801, line: 689, type: !1015)
!9363 = !DILocation(line: 689, column: 9, scope: !9353)
!9364 = !DILocation(line: 691, column: 13, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9353, file: !1801, line: 691, column: 5)
!9366 = !DILocation(line: 691, column: 10, scope: !9365)
!9367 = !DILocation(line: 691, column: 18, scope: !9368)
!9368 = !DILexicalBlockFile(scope: !9369, file: !1801, discriminator: 1)
!9369 = distinct !DILexicalBlock(scope: !9365, file: !1801, line: 691, column: 5)
!9370 = !DILocation(line: 691, column: 24, scope: !9368)
!9371 = !DILocation(line: 691, column: 21, scope: !9368)
!9372 = !DILocation(line: 691, column: 5, scope: !9368)
!9373 = !DILocation(line: 692, column: 29, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !1801, line: 692, column: 13)
!9375 = distinct !DILexicalBlock(scope: !9369, file: !1801, line: 691, column: 40)
!9376 = !DILocation(line: 692, column: 13, scope: !9374)
!9377 = !DILocation(line: 692, column: 16, scope: !9374)
!9378 = !DILocation(line: 692, column: 13, scope: !9375)
!9379 = !DILocalVariable(name: "i", scope: !9380, file: !1801, line: 693, type: !1015)
!9380 = distinct !DILexicalBlock(scope: !9374, file: !1801, line: 692, column: 34)
!9381 = !DILocation(line: 693, column: 17, scope: !9380)
!9382 = !DILocalVariable(name: "x", scope: !9380, file: !1801, line: 694, type: !2059)
!9383 = !DILocation(line: 694, column: 24, scope: !9380)
!9384 = !DILocation(line: 694, column: 28, scope: !9380)
!9385 = !DILocation(line: 694, column: 31, scope: !9380)
!9386 = !DILocation(line: 694, column: 42, scope: !9380)
!9387 = !DILocation(line: 695, column: 20, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9380, file: !1801, line: 695, column: 13)
!9389 = !DILocation(line: 695, column: 18, scope: !9388)
!9390 = !DILocation(line: 695, column: 25, scope: !9391)
!9391 = !DILexicalBlockFile(scope: !9392, file: !1801, discriminator: 1)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !1801, line: 695, column: 13)
!9393 = !DILocation(line: 695, column: 27, scope: !9391)
!9394 = !DILocation(line: 695, column: 13, scope: !9391)
!9395 = !DILocation(line: 696, column: 52, scope: !9392)
!9396 = !DILocation(line: 696, column: 50, scope: !9392)
!9397 = !DILocation(line: 696, column: 24, scope: !9392)
!9398 = !DILocation(line: 696, column: 44, scope: !9392)
!9399 = !DILocation(line: 696, column: 27, scope: !9392)
!9400 = !DILocation(line: 696, column: 19, scope: !9392)
!9401 = !DILocation(line: 696, column: 17, scope: !9392)
!9402 = !DILocation(line: 696, column: 22, scope: !9392)
!9403 = !DILocation(line: 695, column: 35, scope: !9404)
!9404 = !DILexicalBlockFile(scope: !9392, file: !1801, discriminator: 2)
!9405 = !DILocation(line: 695, column: 13, scope: !9404)
!9406 = distinct !{!9406, !9407}
!9407 = !DILocation(line: 695, column: 13, scope: !9380)
!9408 = !DILocation(line: 697, column: 13, scope: !9380)
!9409 = !DILocation(line: 697, column: 16, scope: !9380)
!9410 = !DILocation(line: 697, column: 26, scope: !9380)
!9411 = !DILocation(line: 697, column: 38, scope: !9380)
!9412 = !DILocation(line: 697, column: 41, scope: !9380)
!9413 = !DILocation(line: 697, column: 52, scope: !9380)
!9414 = !DILocation(line: 697, column: 55, scope: !9380)
!9415 = !DILocation(line: 697, column: 67, scope: !9380)
!9416 = !DILocation(line: 702, column: 13, scope: !9380)
!9417 = !DILocation(line: 702, column: 16, scope: !9380)
!9418 = !DILocation(line: 702, column: 22, scope: !9380)
!9419 = !DILocation(line: 702, column: 51, scope: !9380)
!9420 = !DILocation(line: 702, column: 54, scope: !9380)
!9421 = !DILocation(line: 702, column: 41, scope: !9380)
!9422 = !DILocation(line: 702, column: 44, scope: !9380)
!9423 = !DILocation(line: 702, column: 69, scope: !9380)
!9424 = !DILocation(line: 702, column: 72, scope: !9380)
!9425 = !DILocation(line: 702, column: 78, scope: !9380)
!9426 = !DILocation(line: 702, column: 76, scope: !9380)
!9427 = !DILocation(line: 702, column: 60, scope: !9380)
!9428 = !DILocation(line: 702, column: 63, scope: !9380)
!9429 = !DILocation(line: 703, column: 40, scope: !9380)
!9430 = !DILocation(line: 703, column: 43, scope: !9380)
!9431 = !DILocation(line: 703, column: 55, scope: !9380)
!9432 = !DILocation(line: 703, column: 58, scope: !9380)
!9433 = !DILocation(line: 705, column: 20, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9380, file: !1801, line: 705, column: 13)
!9435 = !DILocation(line: 705, column: 18, scope: !9434)
!9436 = !DILocation(line: 705, column: 25, scope: !9437)
!9437 = !DILexicalBlockFile(scope: !9438, file: !1801, discriminator: 1)
!9438 = distinct !DILexicalBlock(scope: !9434, file: !1801, line: 705, column: 13)
!9439 = !DILocation(line: 705, column: 27, scope: !9437)
!9440 = !DILocation(line: 705, column: 13, scope: !9437)
!9441 = !DILocation(line: 706, column: 52, scope: !9438)
!9442 = !DILocation(line: 706, column: 50, scope: !9438)
!9443 = !DILocation(line: 706, column: 54, scope: !9438)
!9444 = !DILocation(line: 706, column: 24, scope: !9438)
!9445 = !DILocation(line: 706, column: 44, scope: !9438)
!9446 = !DILocation(line: 706, column: 27, scope: !9438)
!9447 = !DILocation(line: 706, column: 19, scope: !9438)
!9448 = !DILocation(line: 706, column: 17, scope: !9438)
!9449 = !DILocation(line: 706, column: 22, scope: !9438)
!9450 = !DILocation(line: 705, column: 35, scope: !9451)
!9451 = !DILexicalBlockFile(scope: !9438, file: !1801, discriminator: 2)
!9452 = !DILocation(line: 705, column: 13, scope: !9451)
!9453 = distinct !{!9453, !9454}
!9454 = !DILocation(line: 705, column: 13, scope: !9380)
!9455 = !DILocation(line: 707, column: 13, scope: !9380)
!9456 = !DILocation(line: 707, column: 16, scope: !9380)
!9457 = !DILocation(line: 707, column: 26, scope: !9380)
!9458 = !DILocation(line: 707, column: 38, scope: !9380)
!9459 = !DILocation(line: 707, column: 41, scope: !9380)
!9460 = !DILocation(line: 707, column: 61, scope: !9380)
!9461 = !DILocation(line: 707, column: 64, scope: !9380)
!9462 = !DILocation(line: 707, column: 70, scope: !9380)
!9463 = !DILocation(line: 707, column: 68, scope: !9380)
!9464 = !DILocation(line: 707, column: 52, scope: !9380)
!9465 = !DILocation(line: 707, column: 55, scope: !9380)
!9466 = !DILocation(line: 707, column: 79, scope: !9380)
!9467 = !DILocation(line: 708, column: 9, scope: !9380)
!9468 = !DILocation(line: 709, column: 13, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9374, file: !1801, line: 708, column: 16)
!9470 = !DILocation(line: 709, column: 16, scope: !9469)
!9471 = !DILocation(line: 709, column: 26, scope: !9469)
!9472 = !DILocation(line: 709, column: 38, scope: !9469)
!9473 = !DILocation(line: 709, column: 41, scope: !9469)
!9474 = !DILocation(line: 709, column: 52, scope: !9469)
!9475 = !DILocation(line: 709, column: 55, scope: !9469)
!9476 = !DILocation(line: 709, column: 87, scope: !9469)
!9477 = !DILocation(line: 709, column: 67, scope: !9469)
!9478 = !DILocation(line: 709, column: 70, scope: !9469)
!9479 = !DILocation(line: 714, column: 13, scope: !9469)
!9480 = !DILocation(line: 714, column: 16, scope: !9469)
!9481 = !DILocation(line: 714, column: 22, scope: !9469)
!9482 = !DILocation(line: 714, column: 51, scope: !9469)
!9483 = !DILocation(line: 714, column: 54, scope: !9469)
!9484 = !DILocation(line: 714, column: 41, scope: !9469)
!9485 = !DILocation(line: 714, column: 44, scope: !9469)
!9486 = !DILocation(line: 714, column: 69, scope: !9469)
!9487 = !DILocation(line: 714, column: 72, scope: !9469)
!9488 = !DILocation(line: 714, column: 78, scope: !9469)
!9489 = !DILocation(line: 714, column: 76, scope: !9469)
!9490 = !DILocation(line: 714, column: 60, scope: !9469)
!9491 = !DILocation(line: 714, column: 63, scope: !9469)
!9492 = !DILocation(line: 715, column: 40, scope: !9469)
!9493 = !DILocation(line: 715, column: 43, scope: !9469)
!9494 = !DILocation(line: 715, column: 55, scope: !9469)
!9495 = !DILocation(line: 715, column: 58, scope: !9469)
!9496 = !DILocation(line: 717, column: 29, scope: !9469)
!9497 = !DILocation(line: 717, column: 32, scope: !9469)
!9498 = !DILocation(line: 717, column: 38, scope: !9469)
!9499 = !DILocation(line: 717, column: 36, scope: !9469)
!9500 = !DILocation(line: 717, column: 20, scope: !9469)
!9501 = !DILocation(line: 717, column: 23, scope: !9469)
!9502 = !DILocation(line: 717, column: 13, scope: !9469)
!9503 = !DILocation(line: 717, column: 47, scope: !9469)
!9504 = !DILocation(line: 717, column: 50, scope: !9469)
!9505 = !DILocation(line: 717, column: 61, scope: !9469)
!9506 = !DILocation(line: 719, column: 5, scope: !9375)
!9507 = !DILocation(line: 691, column: 36, scope: !9508)
!9508 = !DILexicalBlockFile(scope: !9369, file: !1801, discriminator: 2)
!9509 = !DILocation(line: 691, column: 5, scope: !9508)
!9510 = distinct !{!9510, !9511}
!9511 = !DILocation(line: 691, column: 5, scope: !9353)
!9512 = !DILocation(line: 720, column: 1, scope: !9353)
!9513 = distinct !DISubprogram(name: "decode_band_structure", scope: !1801, file: !1801, line: 767, type: !9514, isLocal: true, isDefinition: true, scopeLine: 772, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{null, !3957, !1015, !1015, !1015, !1015, !1015, !1610, !1463, !1199, !1199, !1015}
!9516 = !DILocalVariable(name: "gbc", arg: 1, scope: !9513, file: !1801, line: 767, type: !3957)
!9517 = !DILocation(line: 767, column: 50, scope: !9513)
!9518 = !DILocalVariable(name: "blk", arg: 2, scope: !9513, file: !1801, line: 767, type: !1015)
!9519 = !DILocation(line: 767, column: 59, scope: !9513)
!9520 = !DILocalVariable(name: "eac3", arg: 3, scope: !9513, file: !1801, line: 767, type: !1015)
!9521 = !DILocation(line: 767, column: 68, scope: !9513)
!9522 = !DILocalVariable(name: "ecpl", arg: 4, scope: !9513, file: !1801, line: 768, type: !1015)
!9523 = !DILocation(line: 768, column: 39, scope: !9513)
!9524 = !DILocalVariable(name: "start_subband", arg: 5, scope: !9513, file: !1801, line: 768, type: !1015)
!9525 = !DILocation(line: 768, column: 49, scope: !9513)
!9526 = !DILocalVariable(name: "end_subband", arg: 6, scope: !9513, file: !1801, line: 768, type: !1015)
!9527 = !DILocation(line: 768, column: 68, scope: !9513)
!9528 = !DILocalVariable(name: "default_band_struct", arg: 7, scope: !9513, file: !1801, line: 769, type: !1610)
!9529 = !DILocation(line: 769, column: 50, scope: !9513)
!9530 = !DILocalVariable(name: "num_bands", arg: 8, scope: !9513, file: !1801, line: 770, type: !1463)
!9531 = !DILocation(line: 770, column: 40, scope: !9513)
!9532 = !DILocalVariable(name: "band_sizes", arg: 9, scope: !9513, file: !1801, line: 770, type: !1199)
!9533 = !DILocation(line: 770, column: 60, scope: !9513)
!9534 = !DILocalVariable(name: "band_struct", arg: 10, scope: !9513, file: !1801, line: 771, type: !1199)
!9535 = !DILocation(line: 771, column: 44, scope: !9513)
!9536 = !DILocalVariable(name: "band_struct_size", arg: 11, scope: !9513, file: !1801, line: 771, type: !1015)
!9537 = !DILocation(line: 771, column: 61, scope: !9513)
!9538 = !DILocalVariable(name: "subbnd", scope: !9513, file: !1801, line: 773, type: !1015)
!9539 = !DILocation(line: 773, column: 9, scope: !9513)
!9540 = !DILocalVariable(name: "bnd", scope: !9513, file: !1801, line: 773, type: !1015)
!9541 = !DILocation(line: 773, column: 17, scope: !9513)
!9542 = !DILocalVariable(name: "n_subbands", scope: !9513, file: !1801, line: 773, type: !1015)
!9543 = !DILocation(line: 773, column: 22, scope: !9513)
!9544 = !DILocalVariable(name: "n_bands", scope: !9513, file: !1801, line: 773, type: !1015)
!9545 = !DILocation(line: 773, column: 34, scope: !9513)
!9546 = !DILocalVariable(name: "bnd_sz", scope: !9513, file: !1801, line: 774, type: !9547)
!9547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 176, align: 8, elements: !9548)
!9548 = !{!9549}
!9549 = !DISubrange(count: 22)
!9550 = !DILocation(line: 774, column: 13, scope: !9513)
!9551 = !DILocation(line: 776, column: 18, scope: !9513)
!9552 = !DILocation(line: 776, column: 32, scope: !9513)
!9553 = !DILocation(line: 776, column: 30, scope: !9513)
!9554 = !DILocation(line: 776, column: 16, scope: !9513)
!9555 = !DILocation(line: 778, column: 10, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 778, column: 9)
!9557 = !DILocation(line: 778, column: 9, scope: !9513)
!9558 = !DILocation(line: 779, column: 16, scope: !9556)
!9559 = !DILocation(line: 779, column: 29, scope: !9556)
!9560 = !DILocation(line: 779, column: 50, scope: !9556)
!9561 = !DILocation(line: 779, column: 9, scope: !9556)
!9562 = !DILocation(line: 781, column: 5, scope: !9513)
!9563 = distinct !{!9563, !9562}
!9564 = !DILocation(line: 781, column: 16, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9566, file: !1801, discriminator: 1)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !1801, line: 781, column: 14)
!9567 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 781, column: 8)
!9568 = !DILocation(line: 781, column: 36, scope: !9565)
!9569 = !DILocation(line: 781, column: 52, scope: !9565)
!9570 = !DILocation(line: 781, column: 50, scope: !9565)
!9571 = !DILocation(line: 781, column: 33, scope: !9565)
!9572 = !DILocation(line: 781, column: 14, scope: !9565)
!9573 = !DILocation(line: 781, column: 67, scope: !9574)
!9574 = !DILexicalBlockFile(scope: !9575, file: !1801, discriminator: 2)
!9575 = distinct !DILexicalBlock(scope: !9566, file: !1801, line: 781, column: 65)
!9576 = !DILocation(line: 781, column: 122, scope: !9577)
!9577 = !DILexicalBlockFile(scope: !9574, file: !1801, discriminator: 4)
!9578 = !DILocation(line: 781, column: 122, scope: !9574)
!9579 = !DILocation(line: 781, column: 133, scope: !9580)
!9580 = !DILexicalBlockFile(scope: !9567, file: !1801, discriminator: 3)
!9581 = !DILocation(line: 783, column: 20, scope: !9513)
!9582 = !DILocation(line: 783, column: 34, scope: !9513)
!9583 = !DILocation(line: 783, column: 17, scope: !9513)
!9584 = !DILocation(line: 786, column: 10, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 786, column: 9)
!9586 = !DILocation(line: 786, column: 15, scope: !9585)
!9587 = !DILocation(line: 786, column: 28, scope: !9588)
!9588 = !DILexicalBlockFile(scope: !9585, file: !1801, discriminator: 1)
!9589 = !DILocation(line: 786, column: 18, scope: !9588)
!9590 = !DILocation(line: 786, column: 9, scope: !9588)
!9591 = !DILocation(line: 787, column: 21, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1801, line: 787, column: 9)
!9593 = distinct !DILexicalBlock(scope: !9585, file: !1801, line: 786, column: 34)
!9594 = !DILocation(line: 787, column: 14, scope: !9592)
!9595 = !DILocation(line: 787, column: 26, scope: !9596)
!9596 = !DILexicalBlockFile(scope: !9597, file: !1801, discriminator: 1)
!9597 = distinct !DILexicalBlock(scope: !9592, file: !1801, line: 787, column: 9)
!9598 = !DILocation(line: 787, column: 35, scope: !9596)
!9599 = !DILocation(line: 787, column: 46, scope: !9596)
!9600 = !DILocation(line: 787, column: 33, scope: !9596)
!9601 = !DILocation(line: 787, column: 9, scope: !9596)
!9602 = !DILocation(line: 788, column: 45, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !1801, line: 787, column: 61)
!9604 = !DILocation(line: 788, column: 35, scope: !9603)
!9605 = !DILocation(line: 788, column: 25, scope: !9603)
!9606 = !DILocation(line: 788, column: 13, scope: !9603)
!9607 = !DILocation(line: 788, column: 33, scope: !9603)
!9608 = !DILocation(line: 789, column: 9, scope: !9603)
!9609 = !DILocation(line: 787, column: 57, scope: !9610)
!9610 = !DILexicalBlockFile(scope: !9597, file: !1801, discriminator: 2)
!9611 = !DILocation(line: 787, column: 9, scope: !9610)
!9612 = distinct !{!9612, !9613}
!9613 = !DILocation(line: 787, column: 9, scope: !9593)
!9614 = !DILocation(line: 790, column: 5, scope: !9593)
!9615 = !DILocation(line: 795, column: 9, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 795, column: 9)
!9617 = !DILocation(line: 795, column: 19, scope: !9616)
!9618 = !DILocation(line: 795, column: 22, scope: !9619)
!9619 = !DILexicalBlockFile(scope: !9616, file: !1801, discriminator: 1)
!9620 = !DILocation(line: 795, column: 9, scope: !9619)
!9621 = !DILocation(line: 796, column: 19, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !1801, line: 795, column: 35)
!9623 = !DILocation(line: 796, column: 17, scope: !9622)
!9624 = !DILocation(line: 797, column: 21, scope: !9622)
!9625 = !DILocation(line: 797, column: 9, scope: !9622)
!9626 = !DILocation(line: 797, column: 19, scope: !9622)
!9627 = !DILocation(line: 798, column: 18, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9622, file: !1801, line: 798, column: 9)
!9629 = !DILocation(line: 798, column: 30, scope: !9628)
!9630 = !DILocation(line: 798, column: 14, scope: !9628)
!9631 = !DILocation(line: 798, column: 35, scope: !9632)
!9632 = !DILexicalBlockFile(scope: !9633, file: !1801, discriminator: 1)
!9633 = distinct !DILexicalBlock(scope: !9628, file: !1801, line: 798, column: 9)
!9634 = !DILocation(line: 798, column: 44, scope: !9632)
!9635 = !DILocation(line: 798, column: 42, scope: !9632)
!9636 = !DILocation(line: 798, column: 9, scope: !9632)
!9637 = !DILocalVariable(name: "subbnd_size", scope: !9638, file: !1801, line: 799, type: !1015)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !1801, line: 798, column: 66)
!9639 = !DILocation(line: 799, column: 17, scope: !9638)
!9640 = !DILocation(line: 799, column: 32, scope: !9638)
!9641 = !DILocation(line: 799, column: 37, scope: !9638)
!9642 = !DILocation(line: 799, column: 40, scope: !9643)
!9643 = !DILexicalBlockFile(scope: !9638, file: !1801, discriminator: 1)
!9644 = !DILocation(line: 799, column: 47, scope: !9643)
!9645 = !DILocation(line: 799, column: 31, scope: !9646)
!9646 = !DILexicalBlockFile(scope: !9638, file: !1801, discriminator: 2)
!9647 = !DILocation(line: 799, column: 17, scope: !9646)
!9648 = !DILocation(line: 800, column: 29, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9638, file: !1801, line: 800, column: 17)
!9650 = !DILocation(line: 800, column: 36, scope: !9649)
!9651 = !DILocation(line: 800, column: 17, scope: !9649)
!9652 = !DILocation(line: 800, column: 17, scope: !9638)
!9653 = !DILocation(line: 801, column: 24, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9649, file: !1801, line: 800, column: 42)
!9655 = !DILocation(line: 802, column: 32, scope: !9654)
!9656 = !DILocation(line: 802, column: 24, scope: !9654)
!9657 = !DILocation(line: 802, column: 17, scope: !9654)
!9658 = !DILocation(line: 802, column: 29, scope: !9654)
!9659 = !DILocation(line: 803, column: 13, scope: !9654)
!9660 = !DILocation(line: 804, column: 33, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9649, file: !1801, line: 803, column: 20)
!9662 = !DILocation(line: 804, column: 24, scope: !9661)
!9663 = !DILocation(line: 804, column: 17, scope: !9661)
!9664 = !DILocation(line: 804, column: 31, scope: !9661)
!9665 = !DILocation(line: 806, column: 9, scope: !9638)
!9666 = !DILocation(line: 798, column: 62, scope: !9667)
!9667 = !DILexicalBlockFile(scope: !9633, file: !1801, discriminator: 2)
!9668 = !DILocation(line: 798, column: 9, scope: !9667)
!9669 = distinct !{!9669, !9670}
!9670 = !DILocation(line: 798, column: 9, scope: !9622)
!9671 = !DILocation(line: 807, column: 5, scope: !9622)
!9672 = !DILocation(line: 810, column: 9, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 810, column: 9)
!9674 = !DILocation(line: 810, column: 9, scope: !9513)
!9675 = !DILocation(line: 811, column: 22, scope: !9673)
!9676 = !DILocation(line: 811, column: 10, scope: !9673)
!9677 = !DILocation(line: 811, column: 20, scope: !9673)
!9678 = !DILocation(line: 811, column: 9, scope: !9673)
!9679 = !DILocation(line: 812, column: 9, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9513, file: !1801, line: 812, column: 9)
!9681 = !DILocation(line: 812, column: 9, scope: !9513)
!9682 = !DILocation(line: 813, column: 16, scope: !9680)
!9683 = !DILocation(line: 813, column: 9, scope: !9680)
!9684 = !DILocation(line: 813, column: 36, scope: !9680)
!9685 = !DILocation(line: 814, column: 1, scope: !9513)
!9686 = distinct !DISubprogram(name: "decode_transform_coeffs_ch", scope: !1801, file: !1801, line: 607, type: !9687, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9687 = !DISubroutineType(types: !9688)
!9688 = !{null, !1857, !1015, !1015, !9689}
!9689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8723, size: 64, align: 64)
!9690 = !DILocalVariable(name: "s", arg: 1, scope: !9686, file: !1801, line: 607, type: !1857)
!9691 = !DILocation(line: 607, column: 65, scope: !9686)
!9692 = !DILocalVariable(name: "blk", arg: 2, scope: !9686, file: !1801, line: 607, type: !1015)
!9693 = !DILocation(line: 607, column: 72, scope: !9686)
!9694 = !DILocalVariable(name: "ch", arg: 3, scope: !9686, file: !1801, line: 608, type: !1015)
!9695 = !DILocation(line: 608, column: 51, scope: !9686)
!9696 = !DILocalVariable(name: "m", arg: 4, scope: !9686, file: !1801, line: 608, type: !9689)
!9697 = !DILocation(line: 608, column: 68, scope: !9686)
!9698 = !DILocation(line: 610, column: 30, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9686, file: !1801, line: 610, column: 9)
!9700 = !DILocation(line: 610, column: 10, scope: !9699)
!9701 = !DILocation(line: 610, column: 13, scope: !9699)
!9702 = !DILocation(line: 610, column: 9, scope: !9686)
!9703 = !DILocation(line: 611, column: 40, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9699, file: !1801, line: 610, column: 35)
!9705 = !DILocation(line: 611, column: 43, scope: !9704)
!9706 = !DILocation(line: 611, column: 47, scope: !9704)
!9707 = !DILocation(line: 611, column: 9, scope: !9704)
!9708 = !DILocation(line: 612, column: 5, scope: !9704)
!9709 = !DILocalVariable(name: "bin", scope: !9710, file: !1801, line: 615, type: !1015)
!9710 = distinct !DILexicalBlock(scope: !9699, file: !1801, line: 612, column: 12)
!9711 = !DILocation(line: 615, column: 13, scope: !9710)
!9712 = !DILocation(line: 616, column: 19, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9710, file: !1801, line: 616, column: 13)
!9714 = !DILocation(line: 616, column: 13, scope: !9710)
!9715 = !DILocation(line: 617, column: 52, scope: !9713)
!9716 = !DILocation(line: 617, column: 55, scope: !9713)
!9717 = !DILocation(line: 617, column: 13, scope: !9713)
!9718 = !DILocation(line: 618, column: 34, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9710, file: !1801, line: 618, column: 9)
!9720 = !DILocation(line: 618, column: 20, scope: !9719)
!9721 = !DILocation(line: 618, column: 23, scope: !9719)
!9722 = !DILocation(line: 618, column: 18, scope: !9719)
!9723 = !DILocation(line: 618, column: 14, scope: !9719)
!9724 = !DILocation(line: 618, column: 39, scope: !9725)
!9725 = !DILexicalBlockFile(scope: !9726, file: !1801, discriminator: 1)
!9726 = distinct !DILexicalBlock(scope: !9719, file: !1801, line: 618, column: 9)
!9727 = !DILocation(line: 618, column: 57, scope: !9725)
!9728 = !DILocation(line: 618, column: 45, scope: !9725)
!9729 = !DILocation(line: 618, column: 48, scope: !9725)
!9730 = !DILocation(line: 618, column: 43, scope: !9725)
!9731 = !DILocation(line: 618, column: 9, scope: !9725)
!9732 = !DILocation(line: 619, column: 65, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9726, file: !1801, line: 618, column: 69)
!9734 = !DILocation(line: 619, column: 40, scope: !9733)
!9735 = !DILocation(line: 619, column: 60, scope: !9733)
!9736 = !DILocation(line: 619, column: 56, scope: !9733)
!9737 = !DILocation(line: 619, column: 43, scope: !9733)
!9738 = !DILocation(line: 619, column: 86, scope: !9733)
!9739 = !DILocation(line: 619, column: 73, scope: !9733)
!9740 = !DILocation(line: 619, column: 82, scope: !9733)
!9741 = !DILocation(line: 619, column: 76, scope: !9733)
!9742 = !DILocation(line: 619, column: 70, scope: !9733)
!9743 = !DILocation(line: 619, column: 33, scope: !9733)
!9744 = !DILocation(line: 619, column: 13, scope: !9733)
!9745 = !DILocation(line: 619, column: 29, scope: !9733)
!9746 = !DILocation(line: 619, column: 16, scope: !9733)
!9747 = !DILocation(line: 619, column: 38, scope: !9733)
!9748 = !DILocation(line: 620, column: 9, scope: !9733)
!9749 = !DILocation(line: 618, column: 65, scope: !9750)
!9750 = !DILexicalBlockFile(scope: !9726, file: !1801, discriminator: 2)
!9751 = !DILocation(line: 618, column: 9, scope: !9750)
!9752 = distinct !{!9752, !9753}
!9753 = !DILocation(line: 618, column: 9, scope: !9710)
!9754 = !DILocation(line: 622, column: 1, scope: !9686)
!9755 = distinct !DISubprogram(name: "calc_transform_coeffs_cpl", scope: !1801, file: !1801, line: 472, type: !7998, isLocal: true, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9756 = !DILocalVariable(name: "a", arg: 1, scope: !9757, file: !9758, line: 62, type: !1015)
!9757 = distinct !DISubprogram(name: "MULH", scope: !9758, file: !9758, line: 62, type: !3940, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9758 = !DIFile(filename: "./libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9759 = !DILocation(line: 62, column: 59, scope: !9757, inlinedAt: !9760)
!9760 = distinct !DILocation(line: 485, column: 25, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9762, file: !1801, line: 483, column: 63)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !1801, line: 483, column: 17)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !1801, line: 483, column: 17)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1801, line: 481, column: 40)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !1801, line: 481, column: 17)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !1801, line: 480, column: 51)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !1801, line: 480, column: 9)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1801, line: 480, column: 9)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !1801, line: 477, column: 53)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !1801, line: 477, column: 5)
!9771 = distinct !DILexicalBlock(scope: !9755, file: !1801, line: 477, column: 5)
!9772 = !DILocalVariable(name: "b", arg: 2, scope: !9757, file: !9758, line: 62, type: !1015)
!9773 = !DILocation(line: 62, column: 66, scope: !9757, inlinedAt: !9760)
!9774 = !DILocalVariable(name: "s", arg: 1, scope: !9755, file: !1801, line: 472, type: !1857)
!9775 = !DILocation(line: 472, column: 57, scope: !9755)
!9776 = !DILocalVariable(name: "bin", scope: !9755, file: !1801, line: 474, type: !1015)
!9777 = !DILocation(line: 474, column: 9, scope: !9755)
!9778 = !DILocalVariable(name: "band", scope: !9755, file: !1801, line: 474, type: !1015)
!9779 = !DILocation(line: 474, column: 14, scope: !9755)
!9780 = !DILocalVariable(name: "ch", scope: !9755, file: !1801, line: 474, type: !1015)
!9781 = !DILocation(line: 474, column: 20, scope: !9755)
!9782 = !DILocation(line: 476, column: 11, scope: !9755)
!9783 = !DILocation(line: 476, column: 14, scope: !9755)
!9784 = !DILocation(line: 476, column: 9, scope: !9755)
!9785 = !DILocation(line: 477, column: 15, scope: !9771)
!9786 = !DILocation(line: 477, column: 10, scope: !9771)
!9787 = !DILocation(line: 477, column: 20, scope: !9788)
!9788 = !DILexicalBlockFile(scope: !9770, file: !1801, discriminator: 1)
!9789 = !DILocation(line: 477, column: 27, scope: !9788)
!9790 = !DILocation(line: 477, column: 30, scope: !9788)
!9791 = !DILocation(line: 477, column: 25, scope: !9788)
!9792 = !DILocation(line: 477, column: 5, scope: !9788)
!9793 = !DILocalVariable(name: "band_start", scope: !9769, file: !1801, line: 478, type: !1015)
!9794 = !DILocation(line: 478, column: 13, scope: !9769)
!9795 = !DILocation(line: 478, column: 26, scope: !9769)
!9796 = !DILocalVariable(name: "band_end", scope: !9769, file: !1801, line: 479, type: !1015)
!9797 = !DILocation(line: 479, column: 13, scope: !9769)
!9798 = !DILocation(line: 479, column: 24, scope: !9769)
!9799 = !DILocation(line: 479, column: 48, scope: !9769)
!9800 = !DILocation(line: 479, column: 30, scope: !9769)
!9801 = !DILocation(line: 479, column: 33, scope: !9769)
!9802 = !DILocation(line: 479, column: 28, scope: !9769)
!9803 = !DILocation(line: 480, column: 17, scope: !9768)
!9804 = !DILocation(line: 480, column: 14, scope: !9768)
!9805 = !DILocation(line: 480, column: 22, scope: !9806)
!9806 = !DILexicalBlockFile(scope: !9767, file: !1801, discriminator: 1)
!9807 = !DILocation(line: 480, column: 28, scope: !9806)
!9808 = !DILocation(line: 480, column: 31, scope: !9806)
!9809 = !DILocation(line: 480, column: 25, scope: !9806)
!9810 = !DILocation(line: 480, column: 9, scope: !9806)
!9811 = !DILocation(line: 481, column: 35, scope: !9765)
!9812 = !DILocation(line: 481, column: 17, scope: !9765)
!9813 = !DILocation(line: 481, column: 20, scope: !9765)
!9814 = !DILocation(line: 481, column: 17, scope: !9766)
!9815 = !DILocalVariable(name: "cpl_coord", scope: !9764, file: !1801, line: 482, type: !1015)
!9816 = !DILocation(line: 482, column: 21, scope: !9764)
!9817 = !DILocation(line: 482, column: 51, scope: !9764)
!9818 = !DILocation(line: 482, column: 33, scope: !9764)
!9819 = !DILocation(line: 482, column: 47, scope: !9764)
!9820 = !DILocation(line: 482, column: 36, scope: !9764)
!9821 = !DILocation(line: 482, column: 57, scope: !9764)
!9822 = !DILocation(line: 483, column: 28, scope: !9763)
!9823 = !DILocation(line: 483, column: 26, scope: !9763)
!9824 = !DILocation(line: 483, column: 22, scope: !9763)
!9825 = !DILocation(line: 483, column: 40, scope: !9826)
!9826 = !DILexicalBlockFile(scope: !9762, file: !1801, discriminator: 1)
!9827 = !DILocation(line: 483, column: 46, scope: !9826)
!9828 = !DILocation(line: 483, column: 44, scope: !9826)
!9829 = !DILocation(line: 483, column: 17, scope: !9826)
!9830 = !DILocation(line: 485, column: 49, scope: !9761)
!9831 = !DILocation(line: 485, column: 30, scope: !9761)
!9832 = !DILocation(line: 485, column: 33, scope: !9761)
!9833 = !DILocation(line: 485, column: 54, scope: !9761)
!9834 = !DILocation(line: 485, column: 66, scope: !9761)
!9835 = !DILocation(line: 485, column: 25, scope: !9761)
!9836 = !DILocation(line: 63, column: 23, scope: !9757, inlinedAt: !9760)
!9837 = !DILocation(line: 63, column: 13, scope: !9757, inlinedAt: !9760)
!9838 = !DILocation(line: 63, column: 38, scope: !9757, inlinedAt: !9760)
!9839 = !DILocation(line: 63, column: 28, scope: !9757, inlinedAt: !9760)
!9840 = !DILocation(line: 63, column: 26, scope: !9757, inlinedAt: !9760)
!9841 = !DILocation(line: 63, column: 42, scope: !9757, inlinedAt: !9760)
!9842 = !DILocation(line: 63, column: 12, scope: !9757, inlinedAt: !9760)
!9843 = !DILocation(line: 484, column: 41, scope: !9761)
!9844 = !DILocation(line: 484, column: 21, scope: !9761)
!9845 = !DILocation(line: 484, column: 37, scope: !9761)
!9846 = !DILocation(line: 484, column: 24, scope: !9761)
!9847 = !DILocation(line: 484, column: 46, scope: !9761)
!9848 = !DILocation(line: 486, column: 17, scope: !9761)
!9849 = !DILocation(line: 483, column: 59, scope: !9850)
!9850 = !DILexicalBlockFile(scope: !9762, file: !1801, discriminator: 2)
!9851 = !DILocation(line: 483, column: 17, scope: !9850)
!9852 = distinct !{!9852, !9853}
!9853 = !DILocation(line: 483, column: 17, scope: !9764)
!9854 = !DILocation(line: 487, column: 21, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9764, file: !1801, line: 487, column: 21)
!9856 = !DILocation(line: 487, column: 24, scope: !9855)
!9857 = !DILocation(line: 487, column: 29, scope: !9855)
!9858 = !DILocation(line: 487, column: 47, scope: !9859)
!9859 = !DILexicalBlockFile(scope: !9855, file: !1801, discriminator: 1)
!9860 = !DILocation(line: 487, column: 32, scope: !9859)
!9861 = !DILocation(line: 487, column: 35, scope: !9859)
!9862 = !DILocation(line: 487, column: 21, scope: !9859)
!9863 = !DILocation(line: 488, column: 32, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !1801, line: 488, column: 21)
!9865 = distinct !DILexicalBlock(scope: !9855, file: !1801, line: 487, column: 54)
!9866 = !DILocation(line: 488, column: 30, scope: !9864)
!9867 = !DILocation(line: 488, column: 26, scope: !9864)
!9868 = !DILocation(line: 488, column: 44, scope: !9869)
!9869 = !DILexicalBlockFile(scope: !9870, file: !1801, discriminator: 1)
!9870 = distinct !DILexicalBlock(scope: !9864, file: !1801, line: 488, column: 21)
!9871 = !DILocation(line: 488, column: 50, scope: !9869)
!9872 = !DILocation(line: 488, column: 48, scope: !9869)
!9873 = !DILocation(line: 488, column: 21, scope: !9869)
!9874 = !DILocation(line: 489, column: 71, scope: !9870)
!9875 = !DILocation(line: 489, column: 52, scope: !9870)
!9876 = !DILocation(line: 489, column: 55, scope: !9870)
!9877 = !DILocation(line: 489, column: 51, scope: !9870)
!9878 = !DILocation(line: 489, column: 44, scope: !9870)
!9879 = !DILocation(line: 489, column: 25, scope: !9870)
!9880 = !DILocation(line: 489, column: 28, scope: !9870)
!9881 = !DILocation(line: 489, column: 49, scope: !9870)
!9882 = !DILocation(line: 488, column: 63, scope: !9883)
!9883 = !DILexicalBlockFile(scope: !9870, file: !1801, discriminator: 2)
!9884 = !DILocation(line: 488, column: 21, scope: !9883)
!9885 = distinct !{!9885, !9886}
!9886 = !DILocation(line: 488, column: 21, scope: !9865)
!9887 = !DILocation(line: 490, column: 17, scope: !9865)
!9888 = !DILocation(line: 491, column: 13, scope: !9764)
!9889 = !DILocation(line: 492, column: 9, scope: !9766)
!9890 = !DILocation(line: 480, column: 47, scope: !9891)
!9891 = !DILexicalBlockFile(scope: !9767, file: !1801, discriminator: 2)
!9892 = !DILocation(line: 480, column: 9, scope: !9891)
!9893 = distinct !{!9893, !9894}
!9894 = !DILocation(line: 480, column: 9, scope: !9769)
!9895 = !DILocation(line: 493, column: 15, scope: !9769)
!9896 = !DILocation(line: 493, column: 13, scope: !9769)
!9897 = !DILocation(line: 494, column: 5, scope: !9769)
!9898 = !DILocation(line: 477, column: 49, scope: !9899)
!9899 = !DILexicalBlockFile(scope: !9770, file: !1801, discriminator: 2)
!9900 = !DILocation(line: 477, column: 5, scope: !9899)
!9901 = distinct !{!9901, !9902}
!9902 = !DILocation(line: 477, column: 5, scope: !9755)
!9903 = !DILocation(line: 495, column: 1, scope: !9755)
!9904 = distinct !DISubprogram(name: "remove_dithering", scope: !1801, file: !1801, line: 594, type: !7998, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9905 = !DILocalVariable(name: "s", arg: 1, scope: !9904, file: !1801, line: 594, type: !1857)
!9906 = !DILocation(line: 594, column: 48, scope: !9904)
!9907 = !DILocalVariable(name: "ch", scope: !9904, file: !1801, line: 595, type: !1015)
!9908 = !DILocation(line: 595, column: 9, scope: !9904)
!9909 = !DILocalVariable(name: "i", scope: !9904, file: !1801, line: 595, type: !1015)
!9910 = !DILocation(line: 595, column: 13, scope: !9904)
!9911 = !DILocation(line: 597, column: 13, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9904, file: !1801, line: 597, column: 5)
!9913 = !DILocation(line: 597, column: 10, scope: !9912)
!9914 = !DILocation(line: 597, column: 18, scope: !9915)
!9915 = !DILexicalBlockFile(scope: !9916, file: !1801, discriminator: 1)
!9916 = distinct !DILexicalBlock(scope: !9912, file: !1801, line: 597, column: 5)
!9917 = !DILocation(line: 597, column: 24, scope: !9915)
!9918 = !DILocation(line: 597, column: 27, scope: !9915)
!9919 = !DILocation(line: 597, column: 21, scope: !9915)
!9920 = !DILocation(line: 597, column: 5, scope: !9915)
!9921 = !DILocation(line: 598, column: 29, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !1801, line: 598, column: 13)
!9923 = distinct !DILexicalBlock(scope: !9916, file: !1801, line: 597, column: 47)
!9924 = !DILocation(line: 598, column: 14, scope: !9922)
!9925 = !DILocation(line: 598, column: 17, scope: !9922)
!9926 = !DILocation(line: 598, column: 33, scope: !9922)
!9927 = !DILocation(line: 598, column: 54, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !9922, file: !1801, discriminator: 1)
!9929 = !DILocation(line: 598, column: 36, scope: !9928)
!9930 = !DILocation(line: 598, column: 39, scope: !9928)
!9931 = !DILocation(line: 598, column: 13, scope: !9928)
!9932 = !DILocation(line: 599, column: 22, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !1801, line: 599, column: 13)
!9934 = distinct !DILexicalBlock(scope: !9922, file: !1801, line: 598, column: 59)
!9935 = !DILocation(line: 599, column: 25, scope: !9933)
!9936 = !DILocation(line: 599, column: 20, scope: !9933)
!9937 = !DILocation(line: 599, column: 18, scope: !9933)
!9938 = !DILocation(line: 599, column: 40, scope: !9939)
!9939 = !DILexicalBlockFile(scope: !9940, file: !1801, discriminator: 1)
!9940 = distinct !DILexicalBlock(scope: !9933, file: !1801, line: 599, column: 13)
!9941 = !DILocation(line: 599, column: 44, scope: !9939)
!9942 = !DILocation(line: 599, column: 47, scope: !9939)
!9943 = !DILocation(line: 599, column: 42, scope: !9939)
!9944 = !DILocation(line: 599, column: 13, scope: !9939)
!9945 = !DILocation(line: 600, column: 32, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !1801, line: 600, column: 21)
!9947 = distinct !DILexicalBlock(scope: !9940, file: !1801, line: 599, column: 65)
!9948 = !DILocation(line: 600, column: 22, scope: !9946)
!9949 = !DILocation(line: 600, column: 25, scope: !9946)
!9950 = !DILocation(line: 600, column: 21, scope: !9947)
!9951 = !DILocation(line: 601, column: 41, scope: !9946)
!9952 = !DILocation(line: 601, column: 21, scope: !9946)
!9953 = !DILocation(line: 601, column: 37, scope: !9946)
!9954 = !DILocation(line: 601, column: 24, scope: !9946)
!9955 = !DILocation(line: 601, column: 44, scope: !9946)
!9956 = !DILocation(line: 602, column: 13, scope: !9947)
!9957 = !DILocation(line: 599, column: 61, scope: !9958)
!9958 = !DILexicalBlockFile(scope: !9940, file: !1801, discriminator: 2)
!9959 = !DILocation(line: 599, column: 13, scope: !9958)
!9960 = distinct !{!9960, !9961}
!9961 = !DILocation(line: 599, column: 13, scope: !9934)
!9962 = !DILocation(line: 603, column: 9, scope: !9934)
!9963 = !DILocation(line: 604, column: 5, scope: !9923)
!9964 = !DILocation(line: 597, column: 43, scope: !9965)
!9965 = !DILexicalBlockFile(scope: !9916, file: !1801, discriminator: 2)
!9966 = !DILocation(line: 597, column: 5, scope: !9965)
!9967 = distinct !{!9967, !9968}
!9968 = !DILocation(line: 597, column: 5, scope: !9904)
!9969 = !DILocation(line: 605, column: 1, scope: !9904)
!9970 = distinct !DISubprogram(name: "ac3_decode_transform_coeffs_ch", scope: !1801, file: !1801, line: 513, type: !9971, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{null, !1857, !1015, !9689}
!9973 = !DILocalVariable(name: "s", arg: 1, scope: !9970, file: !1801, line: 513, type: !1857)
!9974 = !DILocation(line: 513, column: 62, scope: !9970)
!9975 = !DILocalVariable(name: "ch_index", arg: 2, scope: !9970, file: !1801, line: 513, type: !1015)
!9976 = !DILocation(line: 513, column: 69, scope: !9970)
!9977 = !DILocalVariable(name: "m", arg: 3, scope: !9970, file: !1801, line: 513, type: !9689)
!9978 = !DILocation(line: 513, column: 92, scope: !9970)
!9979 = !DILocalVariable(name: "start_freq", scope: !9970, file: !1801, line: 515, type: !1015)
!9980 = !DILocation(line: 515, column: 9, scope: !9970)
!9981 = !DILocation(line: 515, column: 36, scope: !9970)
!9982 = !DILocation(line: 515, column: 22, scope: !9970)
!9983 = !DILocation(line: 515, column: 25, scope: !9970)
!9984 = !DILocalVariable(name: "end_freq", scope: !9970, file: !1801, line: 516, type: !1015)
!9985 = !DILocation(line: 516, column: 9, scope: !9970)
!9986 = !DILocation(line: 516, column: 32, scope: !9970)
!9987 = !DILocation(line: 516, column: 20, scope: !9970)
!9988 = !DILocation(line: 516, column: 23, scope: !9970)
!9989 = !DILocalVariable(name: "baps", scope: !9970, file: !1801, line: 517, type: !1199)
!9990 = !DILocation(line: 517, column: 14, scope: !9970)
!9991 = !DILocation(line: 517, column: 28, scope: !9970)
!9992 = !DILocation(line: 517, column: 21, scope: !9970)
!9993 = !DILocation(line: 517, column: 24, scope: !9970)
!9994 = !DILocalVariable(name: "exps", scope: !9970, file: !1801, line: 518, type: !1275)
!9995 = !DILocation(line: 518, column: 13, scope: !9970)
!9996 = !DILocation(line: 518, column: 29, scope: !9970)
!9997 = !DILocation(line: 518, column: 20, scope: !9970)
!9998 = !DILocation(line: 518, column: 23, scope: !9970)
!9999 = !DILocalVariable(name: "coeffs", scope: !9970, file: !1801, line: 519, type: !2169)
!10000 = !DILocation(line: 519, column: 14, scope: !9970)
!10001 = !DILocation(line: 519, column: 39, scope: !9970)
!10002 = !DILocation(line: 519, column: 23, scope: !9970)
!10003 = !DILocation(line: 519, column: 26, scope: !9970)
!10004 = !DILocalVariable(name: "dither", scope: !9970, file: !1801, line: 520, type: !1015)
!10005 = !DILocation(line: 520, column: 9, scope: !9970)
!10006 = !DILocation(line: 520, column: 19, scope: !9970)
!10007 = !DILocation(line: 520, column: 28, scope: !9970)
!10008 = !DILocation(line: 520, column: 34, scope: !9970)
!10009 = !DILocation(line: 520, column: 52, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !9970, file: !1801, discriminator: 1)
!10011 = !DILocation(line: 520, column: 37, scope: !10010)
!10012 = !DILocation(line: 520, column: 40, scope: !10010)
!10013 = !DILocation(line: 520, column: 34, scope: !10010)
!10014 = !DILocation(line: 520, column: 34, scope: !10015)
!10015 = !DILexicalBlockFile(scope: !9970, file: !1801, discriminator: 2)
!10016 = !DILocation(line: 520, column: 9, scope: !10015)
!10017 = !DILocalVariable(name: "gbc", scope: !9970, file: !1801, line: 521, type: !3957)
!10018 = !DILocation(line: 521, column: 20, scope: !9970)
!10019 = !DILocation(line: 521, column: 27, scope: !9970)
!10020 = !DILocation(line: 521, column: 30, scope: !9970)
!10021 = !DILocalVariable(name: "freq", scope: !9970, file: !1801, line: 522, type: !1015)
!10022 = !DILocation(line: 522, column: 9, scope: !9970)
!10023 = !DILocation(line: 524, column: 17, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9970, file: !1801, line: 524, column: 5)
!10025 = !DILocation(line: 524, column: 15, scope: !10024)
!10026 = !DILocation(line: 524, column: 10, scope: !10024)
!10027 = !DILocation(line: 524, column: 29, scope: !10028)
!10028 = !DILexicalBlockFile(scope: !10029, file: !1801, discriminator: 1)
!10029 = distinct !DILexicalBlock(scope: !10024, file: !1801, line: 524, column: 5)
!10030 = !DILocation(line: 524, column: 36, scope: !10028)
!10031 = !DILocation(line: 524, column: 34, scope: !10028)
!10032 = !DILocation(line: 524, column: 5, scope: !10028)
!10033 = !DILocalVariable(name: "bap", scope: !10034, file: !1801, line: 525, type: !1015)
!10034 = distinct !DILexicalBlock(scope: !10029, file: !1801, line: 524, column: 54)
!10035 = !DILocation(line: 525, column: 13, scope: !10034)
!10036 = !DILocation(line: 525, column: 24, scope: !10034)
!10037 = !DILocation(line: 525, column: 19, scope: !10034)
!10038 = !DILocalVariable(name: "mantissa", scope: !10034, file: !1801, line: 526, type: !1015)
!10039 = !DILocation(line: 526, column: 13, scope: !10034)
!10040 = !DILocation(line: 527, column: 17, scope: !10034)
!10041 = !DILocation(line: 527, column: 9, scope: !10034)
!10042 = !DILocation(line: 530, column: 17, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !1801, line: 530, column: 17)
!10044 = distinct !DILexicalBlock(scope: !10034, file: !1801, line: 527, column: 22)
!10045 = !DILocation(line: 530, column: 17, scope: !10044)
!10046 = !DILocation(line: 531, column: 43, scope: !10043)
!10047 = !DILocation(line: 531, column: 46, scope: !10043)
!10048 = !DILocation(line: 531, column: 31, scope: !10043)
!10049 = !DILocation(line: 531, column: 57, scope: !10043)
!10050 = !DILocation(line: 531, column: 61, scope: !10043)
!10051 = !DILocation(line: 531, column: 66, scope: !10043)
!10052 = !DILocation(line: 531, column: 71, scope: !10043)
!10053 = !DILocation(line: 531, column: 26, scope: !10043)
!10054 = !DILocation(line: 531, column: 17, scope: !10043)
!10055 = !DILocation(line: 533, column: 26, scope: !10043)
!10056 = !DILocation(line: 534, column: 13, scope: !10044)
!10057 = !DILocation(line: 536, column: 17, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10044, file: !1801, line: 536, column: 17)
!10059 = !DILocation(line: 536, column: 20, scope: !10058)
!10060 = !DILocation(line: 536, column: 17, scope: !10044)
!10061 = !DILocation(line: 537, column: 17, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10058, file: !1801, line: 536, column: 24)
!10063 = !DILocation(line: 537, column: 20, scope: !10062)
!10064 = !DILocation(line: 537, column: 22, scope: !10062)
!10065 = !DILocation(line: 538, column: 39, scope: !10062)
!10066 = !DILocation(line: 538, column: 42, scope: !10062)
!10067 = !DILocation(line: 538, column: 28, scope: !10062)
!10068 = !DILocation(line: 538, column: 31, scope: !10062)
!10069 = !DILocation(line: 538, column: 26, scope: !10062)
!10070 = !DILocation(line: 539, column: 13, scope: !10062)
!10071 = !DILocalVariable(name: "bits", scope: !10072, file: !1801, line: 540, type: !1015)
!10072 = distinct !DILexicalBlock(scope: !10058, file: !1801, line: 539, column: 20)
!10073 = !DILocation(line: 540, column: 21, scope: !10072)
!10074 = !DILocation(line: 540, column: 37, scope: !10072)
!10075 = !DILocation(line: 540, column: 28, scope: !10072)
!10076 = !DILocation(line: 541, column: 41, scope: !10072)
!10077 = !DILocation(line: 541, column: 28, scope: !10072)
!10078 = !DILocation(line: 541, column: 26, scope: !10072)
!10079 = !DILocation(line: 542, column: 46, scope: !10072)
!10080 = !DILocation(line: 542, column: 33, scope: !10072)
!10081 = !DILocation(line: 542, column: 17, scope: !10072)
!10082 = !DILocation(line: 542, column: 20, scope: !10072)
!10083 = !DILocation(line: 542, column: 31, scope: !10072)
!10084 = !DILocation(line: 543, column: 46, scope: !10072)
!10085 = !DILocation(line: 543, column: 33, scope: !10072)
!10086 = !DILocation(line: 543, column: 17, scope: !10072)
!10087 = !DILocation(line: 543, column: 20, scope: !10072)
!10088 = !DILocation(line: 543, column: 31, scope: !10072)
!10089 = !DILocation(line: 544, column: 17, scope: !10072)
!10090 = !DILocation(line: 544, column: 20, scope: !10072)
!10091 = !DILocation(line: 544, column: 23, scope: !10072)
!10092 = !DILocation(line: 546, column: 13, scope: !10044)
!10093 = !DILocation(line: 548, column: 17, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10044, file: !1801, line: 548, column: 17)
!10095 = !DILocation(line: 548, column: 20, scope: !10094)
!10096 = !DILocation(line: 548, column: 17, scope: !10044)
!10097 = !DILocation(line: 549, column: 17, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10094, file: !1801, line: 548, column: 24)
!10099 = !DILocation(line: 549, column: 20, scope: !10098)
!10100 = !DILocation(line: 549, column: 22, scope: !10098)
!10101 = !DILocation(line: 550, column: 39, scope: !10098)
!10102 = !DILocation(line: 550, column: 42, scope: !10098)
!10103 = !DILocation(line: 550, column: 28, scope: !10098)
!10104 = !DILocation(line: 550, column: 31, scope: !10098)
!10105 = !DILocation(line: 550, column: 26, scope: !10098)
!10106 = !DILocation(line: 551, column: 13, scope: !10098)
!10107 = !DILocalVariable(name: "bits", scope: !10108, file: !1801, line: 552, type: !1015)
!10108 = distinct !DILexicalBlock(scope: !10094, file: !1801, line: 551, column: 20)
!10109 = !DILocation(line: 552, column: 21, scope: !10108)
!10110 = !DILocation(line: 552, column: 37, scope: !10108)
!10111 = !DILocation(line: 552, column: 28, scope: !10108)
!10112 = !DILocation(line: 553, column: 41, scope: !10108)
!10113 = !DILocation(line: 553, column: 28, scope: !10108)
!10114 = !DILocation(line: 553, column: 26, scope: !10108)
!10115 = !DILocation(line: 554, column: 46, scope: !10108)
!10116 = !DILocation(line: 554, column: 33, scope: !10108)
!10117 = !DILocation(line: 554, column: 17, scope: !10108)
!10118 = !DILocation(line: 554, column: 20, scope: !10108)
!10119 = !DILocation(line: 554, column: 31, scope: !10108)
!10120 = !DILocation(line: 555, column: 46, scope: !10108)
!10121 = !DILocation(line: 555, column: 33, scope: !10108)
!10122 = !DILocation(line: 555, column: 17, scope: !10108)
!10123 = !DILocation(line: 555, column: 20, scope: !10108)
!10124 = !DILocation(line: 555, column: 31, scope: !10108)
!10125 = !DILocation(line: 556, column: 17, scope: !10108)
!10126 = !DILocation(line: 556, column: 20, scope: !10108)
!10127 = !DILocation(line: 556, column: 23, scope: !10108)
!10128 = !DILocation(line: 558, column: 13, scope: !10044)
!10129 = !DILocation(line: 560, column: 46, scope: !10044)
!10130 = !DILocation(line: 560, column: 37, scope: !10044)
!10131 = !DILocation(line: 560, column: 24, scope: !10044)
!10132 = !DILocation(line: 560, column: 22, scope: !10044)
!10133 = !DILocation(line: 561, column: 13, scope: !10044)
!10134 = !DILocation(line: 563, column: 17, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10044, file: !1801, line: 563, column: 17)
!10136 = !DILocation(line: 563, column: 20, scope: !10135)
!10137 = !DILocation(line: 563, column: 17, scope: !10044)
!10138 = !DILocation(line: 564, column: 17, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10135, file: !1801, line: 563, column: 24)
!10140 = !DILocation(line: 564, column: 20, scope: !10139)
!10141 = !DILocation(line: 564, column: 23, scope: !10139)
!10142 = !DILocation(line: 565, column: 28, scope: !10139)
!10143 = !DILocation(line: 565, column: 31, scope: !10139)
!10144 = !DILocation(line: 565, column: 26, scope: !10139)
!10145 = !DILocation(line: 566, column: 13, scope: !10139)
!10146 = !DILocalVariable(name: "bits", scope: !10147, file: !1801, line: 567, type: !1015)
!10147 = distinct !DILexicalBlock(scope: !10135, file: !1801, line: 566, column: 20)
!10148 = !DILocation(line: 567, column: 21, scope: !10147)
!10149 = !DILocation(line: 567, column: 37, scope: !10147)
!10150 = !DILocation(line: 567, column: 28, scope: !10147)
!10151 = !DILocation(line: 568, column: 41, scope: !10147)
!10152 = !DILocation(line: 568, column: 28, scope: !10147)
!10153 = !DILocation(line: 568, column: 26, scope: !10147)
!10154 = !DILocation(line: 569, column: 43, scope: !10147)
!10155 = !DILocation(line: 569, column: 30, scope: !10147)
!10156 = !DILocation(line: 569, column: 17, scope: !10147)
!10157 = !DILocation(line: 569, column: 20, scope: !10147)
!10158 = !DILocation(line: 569, column: 28, scope: !10147)
!10159 = !DILocation(line: 570, column: 17, scope: !10147)
!10160 = !DILocation(line: 570, column: 20, scope: !10147)
!10161 = !DILocation(line: 570, column: 23, scope: !10147)
!10162 = !DILocation(line: 572, column: 13, scope: !10044)
!10163 = !DILocation(line: 574, column: 46, scope: !10044)
!10164 = !DILocation(line: 574, column: 37, scope: !10044)
!10165 = !DILocation(line: 574, column: 24, scope: !10044)
!10166 = !DILocation(line: 574, column: 22, scope: !10044)
!10167 = !DILocation(line: 575, column: 13, scope: !10044)
!10168 = !DILocation(line: 578, column: 17, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10044, file: !1801, line: 578, column: 17)
!10170 = !DILocation(line: 578, column: 21, scope: !10169)
!10171 = !DILocation(line: 578, column: 17, scope: !10044)
!10172 = !DILocation(line: 579, column: 24, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10169, file: !1801, line: 578, column: 27)
!10174 = !DILocation(line: 579, column: 27, scope: !10173)
!10175 = !DILocation(line: 579, column: 75, scope: !10173)
!10176 = !DILocation(line: 579, column: 17, scope: !10173)
!10177 = !DILocation(line: 580, column: 21, scope: !10173)
!10178 = !DILocation(line: 581, column: 13, scope: !10173)
!10179 = !DILocation(line: 582, column: 44, scope: !10044)
!10180 = !DILocation(line: 582, column: 66, scope: !10044)
!10181 = !DILocation(line: 582, column: 49, scope: !10044)
!10182 = !DILocation(line: 582, column: 34, scope: !10044)
!10183 = !DILocation(line: 582, column: 98, scope: !10044)
!10184 = !DILocation(line: 582, column: 81, scope: !10044)
!10185 = !DILocation(line: 582, column: 79, scope: !10044)
!10186 = !DILocation(line: 582, column: 72, scope: !10044)
!10187 = !DILocation(line: 582, column: 22, scope: !10044)
!10188 = !DILocation(line: 583, column: 13, scope: !10044)
!10189 = !DILocation(line: 585, column: 24, scope: !10034)
!10190 = !DILocation(line: 585, column: 41, scope: !10034)
!10191 = !DILocation(line: 585, column: 36, scope: !10034)
!10192 = !DILocation(line: 585, column: 33, scope: !10034)
!10193 = !DILocation(line: 585, column: 16, scope: !10034)
!10194 = !DILocation(line: 585, column: 9, scope: !10034)
!10195 = !DILocation(line: 585, column: 22, scope: !10034)
!10196 = !DILocation(line: 586, column: 5, scope: !10034)
!10197 = !DILocation(line: 524, column: 50, scope: !10198)
!10198 = !DILexicalBlockFile(scope: !10029, file: !1801, discriminator: 2)
!10199 = !DILocation(line: 524, column: 5, scope: !10198)
!10200 = distinct !{!10200, !10201}
!10201 = !DILocation(line: 524, column: 5, scope: !9970)
!10202 = !DILocation(line: 587, column: 1, scope: !9970)
!10203 = distinct !DISubprogram(name: "ff_eac3_decode_transform_coeffs_aht_ch", scope: !1008, file: !1008, line: 196, type: !8710, isLocal: true, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!10204 = !DILocalVariable(name: "s", arg: 1, scope: !10203, file: !1008, line: 196, type: !1857)
!10205 = !DILocation(line: 196, column: 70, scope: !10203)
!10206 = !DILocalVariable(name: "ch", arg: 2, scope: !10203, file: !1008, line: 196, type: !1015)
!10207 = !DILocation(line: 196, column: 77, scope: !10203)
!10208 = !DILocalVariable(name: "bin", scope: !10203, file: !1008, line: 198, type: !1015)
!10209 = !DILocation(line: 198, column: 9, scope: !10203)
!10210 = !DILocalVariable(name: "blk", scope: !10203, file: !1008, line: 198, type: !1015)
!10211 = !DILocation(line: 198, column: 14, scope: !10203)
!10212 = !DILocalVariable(name: "gs", scope: !10203, file: !1008, line: 198, type: !1015)
!10213 = !DILocation(line: 198, column: 19, scope: !10203)
!10214 = !DILocalVariable(name: "end_bap", scope: !10203, file: !1008, line: 199, type: !1015)
!10215 = !DILocation(line: 199, column: 9, scope: !10203)
!10216 = !DILocalVariable(name: "gaq_mode", scope: !10203, file: !1008, line: 199, type: !1015)
!10217 = !DILocation(line: 199, column: 18, scope: !10203)
!10218 = !DILocalVariable(name: "gbc", scope: !10203, file: !1008, line: 200, type: !3957)
!10219 = !DILocation(line: 200, column: 20, scope: !10203)
!10220 = !DILocation(line: 200, column: 27, scope: !10203)
!10221 = !DILocation(line: 200, column: 30, scope: !10203)
!10222 = !DILocalVariable(name: "gaq_gain", scope: !10203, file: !1008, line: 201, type: !8597)
!10223 = !DILocation(line: 201, column: 9, scope: !10203)
!10224 = !DILocation(line: 203, column: 25, scope: !10203)
!10225 = !DILocation(line: 203, column: 16, scope: !10203)
!10226 = !DILocation(line: 203, column: 14, scope: !10203)
!10227 = !DILocation(line: 204, column: 16, scope: !10203)
!10228 = !DILocation(line: 204, column: 25, scope: !10203)
!10229 = !DILocation(line: 204, column: 15, scope: !10203)
!10230 = !DILocation(line: 204, column: 13, scope: !10203)
!10231 = !DILocation(line: 208, column: 8, scope: !10203)
!10232 = !DILocation(line: 209, column: 9, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10203, file: !1008, line: 209, column: 9)
!10234 = !DILocation(line: 209, column: 18, scope: !10233)
!10235 = !DILocation(line: 209, column: 33, scope: !10233)
!10236 = !DILocation(line: 209, column: 36, scope: !10237)
!10237 = !DILexicalBlockFile(scope: !10233, file: !1008, discriminator: 1)
!10238 = !DILocation(line: 209, column: 45, scope: !10237)
!10239 = !DILocation(line: 209, column: 9, scope: !10237)
!10240 = !DILocation(line: 211, column: 34, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !1008, line: 211, column: 9)
!10242 = distinct !DILexicalBlock(scope: !10233, file: !1008, line: 209, column: 61)
!10243 = !DILocation(line: 211, column: 20, scope: !10241)
!10244 = !DILocation(line: 211, column: 23, scope: !10241)
!10245 = !DILocation(line: 211, column: 18, scope: !10241)
!10246 = !DILocation(line: 211, column: 14, scope: !10241)
!10247 = !DILocation(line: 211, column: 39, scope: !10248)
!10248 = !DILexicalBlockFile(scope: !10249, file: !1008, discriminator: 1)
!10249 = distinct !DILexicalBlock(scope: !10241, file: !1008, line: 211, column: 9)
!10250 = !DILocation(line: 211, column: 57, scope: !10248)
!10251 = !DILocation(line: 211, column: 45, scope: !10248)
!10252 = !DILocation(line: 211, column: 48, scope: !10248)
!10253 = !DILocation(line: 211, column: 43, scope: !10248)
!10254 = !DILocation(line: 211, column: 9, scope: !10248)
!10255 = !DILocation(line: 212, column: 28, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10257, file: !1008, line: 212, column: 17)
!10257 = distinct !DILexicalBlock(scope: !10249, file: !1008, line: 211, column: 69)
!10258 = !DILocation(line: 212, column: 17, scope: !10256)
!10259 = !DILocation(line: 212, column: 24, scope: !10256)
!10260 = !DILocation(line: 212, column: 20, scope: !10256)
!10261 = !DILocation(line: 212, column: 33, scope: !10256)
!10262 = !DILocation(line: 212, column: 37, scope: !10256)
!10263 = !DILocation(line: 212, column: 51, scope: !10264)
!10264 = !DILexicalBlockFile(scope: !10256, file: !1008, discriminator: 1)
!10265 = !DILocation(line: 212, column: 40, scope: !10264)
!10266 = !DILocation(line: 212, column: 47, scope: !10264)
!10267 = !DILocation(line: 212, column: 43, scope: !10264)
!10268 = !DILocation(line: 212, column: 58, scope: !10264)
!10269 = !DILocation(line: 212, column: 56, scope: !10264)
!10270 = !DILocation(line: 212, column: 17, scope: !10264)
!10271 = !DILocation(line: 213, column: 44, scope: !10256)
!10272 = !DILocation(line: 213, column: 34, scope: !10256)
!10273 = !DILocation(line: 213, column: 53, scope: !10256)
!10274 = !DILocation(line: 213, column: 61, scope: !10256)
!10275 = !DILocation(line: 213, column: 49, scope: !10256)
!10276 = !DILocation(line: 213, column: 28, scope: !10256)
!10277 = !DILocation(line: 213, column: 17, scope: !10256)
!10278 = !DILocation(line: 213, column: 32, scope: !10256)
!10279 = !DILocation(line: 214, column: 9, scope: !10257)
!10280 = !DILocation(line: 211, column: 65, scope: !10281)
!10281 = !DILexicalBlockFile(scope: !10249, file: !1008, discriminator: 2)
!10282 = !DILocation(line: 211, column: 9, scope: !10281)
!10283 = distinct !{!10283, !10284}
!10284 = !DILocation(line: 211, column: 9, scope: !10242)
!10285 = !DILocation(line: 215, column: 5, scope: !10242)
!10286 = !DILocation(line: 215, column: 16, scope: !10287)
!10287 = !DILexicalBlockFile(scope: !10288, file: !1008, discriminator: 1)
!10288 = distinct !DILexicalBlock(scope: !10233, file: !1008, line: 215, column: 16)
!10289 = !DILocation(line: 215, column: 25, scope: !10287)
!10290 = !DILocalVariable(name: "gc", scope: !10291, file: !1008, line: 217, type: !1015)
!10291 = distinct !DILexicalBlock(scope: !10288, file: !1008, line: 215, column: 42)
!10292 = !DILocation(line: 217, column: 13, scope: !10291)
!10293 = !DILocation(line: 218, column: 34, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10291, file: !1008, line: 218, column: 9)
!10295 = !DILocation(line: 218, column: 20, scope: !10294)
!10296 = !DILocation(line: 218, column: 23, scope: !10294)
!10297 = !DILocation(line: 218, column: 18, scope: !10294)
!10298 = !DILocation(line: 218, column: 14, scope: !10294)
!10299 = !DILocation(line: 218, column: 39, scope: !10300)
!10300 = !DILexicalBlockFile(scope: !10301, file: !1008, discriminator: 1)
!10301 = distinct !DILexicalBlock(scope: !10294, file: !1008, line: 218, column: 9)
!10302 = !DILocation(line: 218, column: 57, scope: !10300)
!10303 = !DILocation(line: 218, column: 45, scope: !10300)
!10304 = !DILocation(line: 218, column: 48, scope: !10300)
!10305 = !DILocation(line: 218, column: 43, scope: !10300)
!10306 = !DILocation(line: 218, column: 9, scope: !10300)
!10307 = !DILocation(line: 219, column: 28, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !1008, line: 219, column: 17)
!10309 = distinct !DILexicalBlock(scope: !10301, file: !1008, line: 218, column: 69)
!10310 = !DILocation(line: 219, column: 17, scope: !10308)
!10311 = !DILocation(line: 219, column: 24, scope: !10308)
!10312 = !DILocation(line: 219, column: 20, scope: !10308)
!10313 = !DILocation(line: 219, column: 33, scope: !10308)
!10314 = !DILocation(line: 219, column: 37, scope: !10308)
!10315 = !DILocation(line: 219, column: 51, scope: !10316)
!10316 = !DILexicalBlockFile(scope: !10308, file: !1008, discriminator: 1)
!10317 = !DILocation(line: 219, column: 40, scope: !10316)
!10318 = !DILocation(line: 219, column: 47, scope: !10316)
!10319 = !DILocation(line: 219, column: 43, scope: !10316)
!10320 = !DILocation(line: 219, column: 56, scope: !10316)
!10321 = !DILocation(line: 219, column: 17, scope: !10316)
!10322 = !DILocation(line: 220, column: 23, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !1008, line: 220, column: 21)
!10324 = distinct !DILexicalBlock(scope: !10308, file: !1008, line: 219, column: 62)
!10325 = !DILocation(line: 220, column: 26, scope: !10323)
!10326 = !DILocation(line: 220, column: 21, scope: !10324)
!10327 = !DILocalVariable(name: "group_code", scope: !10328, file: !1008, line: 221, type: !1015)
!10328 = distinct !DILexicalBlock(scope: !10323, file: !1008, line: 220, column: 32)
!10329 = !DILocation(line: 221, column: 25, scope: !10328)
!10330 = !DILocation(line: 221, column: 47, scope: !10328)
!10331 = !DILocation(line: 221, column: 38, scope: !10328)
!10332 = !DILocation(line: 222, column: 25, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !1008, line: 222, column: 25)
!10334 = !DILocation(line: 222, column: 36, scope: !10333)
!10335 = !DILocation(line: 222, column: 25, scope: !10328)
!10336 = !DILocation(line: 223, column: 32, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10333, file: !1008, line: 222, column: 42)
!10338 = !DILocation(line: 223, column: 35, scope: !10337)
!10339 = !DILocation(line: 223, column: 25, scope: !10337)
!10340 = !DILocation(line: 224, column: 36, scope: !10337)
!10341 = !DILocation(line: 225, column: 21, scope: !10337)
!10342 = !DILocation(line: 226, column: 69, scope: !10328)
!10343 = !DILocation(line: 226, column: 38, scope: !10328)
!10344 = !DILocation(line: 226, column: 32, scope: !10328)
!10345 = !DILocation(line: 226, column: 21, scope: !10328)
!10346 = !DILocation(line: 226, column: 36, scope: !10328)
!10347 = !DILocation(line: 227, column: 69, scope: !10328)
!10348 = !DILocation(line: 227, column: 38, scope: !10328)
!10349 = !DILocation(line: 227, column: 32, scope: !10328)
!10350 = !DILocation(line: 227, column: 21, scope: !10328)
!10351 = !DILocation(line: 227, column: 36, scope: !10328)
!10352 = !DILocation(line: 228, column: 69, scope: !10328)
!10353 = !DILocation(line: 228, column: 38, scope: !10328)
!10354 = !DILocation(line: 228, column: 32, scope: !10328)
!10355 = !DILocation(line: 228, column: 21, scope: !10328)
!10356 = !DILocation(line: 228, column: 36, scope: !10328)
!10357 = !DILocation(line: 229, column: 24, scope: !10328)
!10358 = !DILocation(line: 230, column: 17, scope: !10328)
!10359 = !DILocation(line: 231, column: 13, scope: !10324)
!10360 = !DILocation(line: 232, column: 9, scope: !10309)
!10361 = !DILocation(line: 218, column: 65, scope: !10362)
!10362 = !DILexicalBlockFile(scope: !10301, file: !1008, discriminator: 2)
!10363 = !DILocation(line: 218, column: 9, scope: !10362)
!10364 = distinct !{!10364, !10365}
!10365 = !DILocation(line: 218, column: 9, scope: !10291)
!10366 = !DILocation(line: 233, column: 5, scope: !10291)
!10367 = !DILocation(line: 235, column: 7, scope: !10203)
!10368 = !DILocation(line: 236, column: 30, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10203, file: !1008, line: 236, column: 5)
!10370 = !DILocation(line: 236, column: 16, scope: !10369)
!10371 = !DILocation(line: 236, column: 19, scope: !10369)
!10372 = !DILocation(line: 236, column: 14, scope: !10369)
!10373 = !DILocation(line: 236, column: 10, scope: !10369)
!10374 = !DILocation(line: 236, column: 35, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !10376, file: !1008, discriminator: 1)
!10376 = distinct !DILexicalBlock(scope: !10369, file: !1008, line: 236, column: 5)
!10377 = !DILocation(line: 236, column: 53, scope: !10375)
!10378 = !DILocation(line: 236, column: 41, scope: !10375)
!10379 = !DILocation(line: 236, column: 44, scope: !10375)
!10380 = !DILocation(line: 236, column: 39, scope: !10375)
!10381 = !DILocation(line: 236, column: 5, scope: !10375)
!10382 = !DILocalVariable(name: "hebap", scope: !10383, file: !1008, line: 237, type: !1015)
!10383 = distinct !DILexicalBlock(scope: !10376, file: !1008, line: 236, column: 65)
!10384 = !DILocation(line: 237, column: 13, scope: !10383)
!10385 = !DILocation(line: 237, column: 32, scope: !10383)
!10386 = !DILocation(line: 237, column: 21, scope: !10383)
!10387 = !DILocation(line: 237, column: 28, scope: !10383)
!10388 = !DILocation(line: 237, column: 24, scope: !10383)
!10389 = !DILocalVariable(name: "bits", scope: !10383, file: !1008, line: 238, type: !1015)
!10390 = !DILocation(line: 238, column: 13, scope: !10383)
!10391 = !DILocation(line: 238, column: 42, scope: !10383)
!10392 = !DILocation(line: 238, column: 20, scope: !10383)
!10393 = !DILocation(line: 239, column: 14, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10383, file: !1008, line: 239, column: 13)
!10395 = !DILocation(line: 239, column: 13, scope: !10383)
!10396 = !DILocation(line: 241, column: 22, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10398, file: !1008, line: 241, column: 13)
!10398 = distinct !DILexicalBlock(scope: !10394, file: !1008, line: 239, column: 21)
!10399 = !DILocation(line: 241, column: 18, scope: !10397)
!10400 = !DILocation(line: 241, column: 27, scope: !10401)
!10401 = !DILexicalBlockFile(scope: !10402, file: !1008, discriminator: 1)
!10402 = distinct !DILexicalBlock(scope: !10397, file: !1008, line: 241, column: 13)
!10403 = !DILocation(line: 241, column: 31, scope: !10401)
!10404 = !DILocation(line: 241, column: 13, scope: !10401)
!10405 = !DILocation(line: 242, column: 62, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10402, file: !1008, line: 241, column: 43)
!10407 = !DILocation(line: 242, column: 65, scope: !10406)
!10408 = !DILocation(line: 242, column: 50, scope: !10406)
!10409 = !DILocation(line: 242, column: 77, scope: !10406)
!10410 = !DILocation(line: 242, column: 89, scope: !10406)
!10411 = !DILocation(line: 242, column: 42, scope: !10406)
!10412 = !DILocation(line: 242, column: 17, scope: !10406)
!10413 = !DILocation(line: 242, column: 37, scope: !10406)
!10414 = !DILocation(line: 242, column: 33, scope: !10406)
!10415 = !DILocation(line: 242, column: 20, scope: !10406)
!10416 = !DILocation(line: 242, column: 47, scope: !10406)
!10417 = !DILocation(line: 243, column: 13, scope: !10406)
!10418 = !DILocation(line: 241, column: 39, scope: !10419)
!10419 = !DILexicalBlockFile(scope: !10402, file: !1008, discriminator: 2)
!10420 = !DILocation(line: 241, column: 13, scope: !10419)
!10421 = distinct !{!10421, !10422}
!10422 = !DILocation(line: 241, column: 13, scope: !10398)
!10423 = !DILocation(line: 244, column: 9, scope: !10398)
!10424 = !DILocation(line: 244, column: 20, scope: !10425)
!10425 = !DILexicalBlockFile(scope: !10426, file: !1008, discriminator: 1)
!10426 = distinct !DILexicalBlock(scope: !10394, file: !1008, line: 244, column: 20)
!10427 = !DILocation(line: 244, column: 26, scope: !10425)
!10428 = !DILocalVariable(name: "v", scope: !10429, file: !1008, line: 246, type: !1015)
!10429 = distinct !DILexicalBlock(scope: !10426, file: !1008, line: 244, column: 31)
!10430 = !DILocation(line: 246, column: 17, scope: !10429)
!10431 = !DILocation(line: 246, column: 30, scope: !10429)
!10432 = !DILocation(line: 246, column: 35, scope: !10429)
!10433 = !DILocation(line: 246, column: 21, scope: !10429)
!10434 = !DILocation(line: 247, column: 22, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10429, file: !1008, line: 247, column: 13)
!10436 = !DILocation(line: 247, column: 18, scope: !10435)
!10437 = !DILocation(line: 247, column: 27, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10439, file: !1008, discriminator: 1)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !1008, line: 247, column: 13)
!10440 = !DILocation(line: 247, column: 31, scope: !10438)
!10441 = !DILocation(line: 247, column: 13, scope: !10438)
!10442 = !DILocation(line: 248, column: 79, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !1008, line: 247, column: 43)
!10444 = !DILocation(line: 248, column: 49, scope: !10443)
!10445 = !DILocation(line: 248, column: 76, scope: !10443)
!10446 = !DILocation(line: 248, column: 69, scope: !10443)
!10447 = !DILocation(line: 248, column: 84, scope: !10443)
!10448 = !DILocation(line: 248, column: 42, scope: !10443)
!10449 = !DILocation(line: 248, column: 17, scope: !10443)
!10450 = !DILocation(line: 248, column: 37, scope: !10443)
!10451 = !DILocation(line: 248, column: 33, scope: !10443)
!10452 = !DILocation(line: 248, column: 20, scope: !10443)
!10453 = !DILocation(line: 248, column: 47, scope: !10443)
!10454 = !DILocation(line: 249, column: 13, scope: !10443)
!10455 = !DILocation(line: 247, column: 39, scope: !10456)
!10456 = !DILexicalBlockFile(scope: !10439, file: !1008, discriminator: 2)
!10457 = !DILocation(line: 247, column: 13, scope: !10456)
!10458 = distinct !{!10458, !10459}
!10459 = !DILocation(line: 247, column: 13, scope: !10429)
!10460 = !DILocation(line: 250, column: 9, scope: !10429)
!10461 = !DILocalVariable(name: "gbits", scope: !10462, file: !1008, line: 252, type: !1015)
!10462 = distinct !DILexicalBlock(scope: !10426, file: !1008, line: 250, column: 16)
!10463 = !DILocation(line: 252, column: 17, scope: !10462)
!10464 = !DILocalVariable(name: "log_gain", scope: !10462, file: !1008, line: 252, type: !1015)
!10465 = !DILocation(line: 252, column: 24, scope: !10462)
!10466 = !DILocation(line: 253, column: 17, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10462, file: !1008, line: 253, column: 17)
!10468 = !DILocation(line: 253, column: 26, scope: !10467)
!10469 = !DILocation(line: 253, column: 41, scope: !10467)
!10470 = !DILocation(line: 253, column: 44, scope: !10471)
!10471 = !DILexicalBlockFile(scope: !10467, file: !1008, discriminator: 1)
!10472 = !DILocation(line: 253, column: 52, scope: !10471)
!10473 = !DILocation(line: 253, column: 50, scope: !10471)
!10474 = !DILocation(line: 253, column: 17, scope: !10471)
!10475 = !DILocation(line: 254, column: 39, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10467, file: !1008, line: 253, column: 61)
!10477 = !DILocation(line: 254, column: 28, scope: !10476)
!10478 = !DILocation(line: 254, column: 26, scope: !10476)
!10479 = !DILocation(line: 255, column: 13, scope: !10476)
!10480 = !DILocation(line: 256, column: 26, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10467, file: !1008, line: 255, column: 20)
!10482 = !DILocation(line: 258, column: 21, scope: !10462)
!10483 = !DILocation(line: 258, column: 28, scope: !10462)
!10484 = !DILocation(line: 258, column: 26, scope: !10462)
!10485 = !DILocation(line: 258, column: 19, scope: !10462)
!10486 = !DILocation(line: 260, column: 22, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10462, file: !1008, line: 260, column: 13)
!10488 = !DILocation(line: 260, column: 18, scope: !10487)
!10489 = !DILocation(line: 260, column: 27, scope: !10490)
!10490 = !DILexicalBlockFile(scope: !10491, file: !1008, discriminator: 1)
!10491 = distinct !DILexicalBlock(scope: !10487, file: !1008, line: 260, column: 13)
!10492 = !DILocation(line: 260, column: 31, scope: !10490)
!10493 = !DILocation(line: 260, column: 13, scope: !10490)
!10494 = !DILocalVariable(name: "mant", scope: !10495, file: !1008, line: 261, type: !1015)
!10495 = distinct !DILexicalBlock(scope: !10491, file: !1008, line: 260, column: 43)
!10496 = !DILocation(line: 261, column: 21, scope: !10495)
!10497 = !DILocation(line: 261, column: 38, scope: !10495)
!10498 = !DILocation(line: 261, column: 43, scope: !10495)
!10499 = !DILocation(line: 261, column: 28, scope: !10495)
!10500 = !DILocation(line: 262, column: 21, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10495, file: !1008, line: 262, column: 21)
!10502 = !DILocation(line: 262, column: 30, scope: !10501)
!10503 = !DILocation(line: 262, column: 33, scope: !10504)
!10504 = !DILexicalBlockFile(scope: !10501, file: !1008, discriminator: 1)
!10505 = !DILocation(line: 262, column: 49, scope: !10504)
!10506 = !DILocation(line: 262, column: 54, scope: !10504)
!10507 = !DILocation(line: 262, column: 45, scope: !10504)
!10508 = !DILocation(line: 262, column: 41, scope: !10504)
!10509 = !DILocation(line: 262, column: 38, scope: !10504)
!10510 = !DILocation(line: 262, column: 21, scope: !10504)
!10511 = !DILocalVariable(name: "b", scope: !10512, file: !1008, line: 264, type: !1015)
!10512 = distinct !DILexicalBlock(scope: !10501, file: !1008, line: 262, column: 60)
!10513 = !DILocation(line: 264, column: 25, scope: !10512)
!10514 = !DILocalVariable(name: "mbits", scope: !10512, file: !1008, line: 265, type: !1015)
!10515 = !DILocation(line: 265, column: 25, scope: !10512)
!10516 = !DILocation(line: 265, column: 33, scope: !10512)
!10517 = !DILocation(line: 265, column: 45, scope: !10512)
!10518 = !DILocation(line: 265, column: 43, scope: !10512)
!10519 = !DILocation(line: 265, column: 38, scope: !10512)
!10520 = !DILocation(line: 266, column: 38, scope: !10512)
!10521 = !DILocation(line: 266, column: 43, scope: !10512)
!10522 = !DILocation(line: 266, column: 28, scope: !10512)
!10523 = !DILocation(line: 266, column: 26, scope: !10512)
!10524 = !DILocation(line: 267, column: 39, scope: !10512)
!10525 = !DILocation(line: 267, column: 55, scope: !10512)
!10526 = !DILocation(line: 267, column: 61, scope: !10512)
!10527 = !DILocation(line: 267, column: 52, scope: !10512)
!10528 = !DILocation(line: 267, column: 45, scope: !10512)
!10529 = !DILocation(line: 267, column: 26, scope: !10512)
!10530 = !DILocation(line: 269, column: 25, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10512, file: !1008, line: 269, column: 25)
!10532 = !DILocation(line: 269, column: 30, scope: !10531)
!10533 = !DILocation(line: 269, column: 25, scope: !10512)
!10534 = !DILocation(line: 270, column: 40, scope: !10531)
!10535 = !DILocation(line: 270, column: 38, scope: !10531)
!10536 = !DILocation(line: 270, column: 31, scope: !10531)
!10537 = !DILocation(line: 270, column: 27, scope: !10531)
!10538 = !DILocation(line: 270, column: 25, scope: !10531)
!10539 = !DILocation(line: 272, column: 62, scope: !10531)
!10540 = !DILocation(line: 272, column: 70, scope: !10531)
!10541 = !DILocation(line: 272, column: 29, scope: !10531)
!10542 = !DILocation(line: 272, column: 53, scope: !10531)
!10543 = !DILocation(line: 272, column: 58, scope: !10531)
!10544 = !DILocation(line: 272, column: 74, scope: !10531)
!10545 = !DILocation(line: 272, column: 27, scope: !10531)
!10546 = !DILocation(line: 273, column: 64, scope: !10512)
!10547 = !DILocation(line: 273, column: 72, scope: !10512)
!10548 = !DILocation(line: 273, column: 31, scope: !10512)
!10549 = !DILocation(line: 273, column: 55, scope: !10512)
!10550 = !DILocation(line: 273, column: 60, scope: !10512)
!10551 = !DILocation(line: 273, column: 87, scope: !10512)
!10552 = !DILocation(line: 273, column: 78, scope: !10512)
!10553 = !DILocation(line: 273, column: 76, scope: !10512)
!10554 = !DILocation(line: 273, column: 93, scope: !10512)
!10555 = !DILocation(line: 273, column: 102, scope: !10512)
!10556 = !DILocation(line: 273, column: 100, scope: !10512)
!10557 = !DILocation(line: 273, column: 26, scope: !10512)
!10558 = !DILocation(line: 274, column: 17, scope: !10512)
!10559 = !DILocation(line: 276, column: 40, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10501, file: !1008, line: 274, column: 24)
!10561 = !DILocation(line: 276, column: 38, scope: !10560)
!10562 = !DILocation(line: 276, column: 32, scope: !10560)
!10563 = !DILocation(line: 276, column: 26, scope: !10560)
!10564 = !DILocation(line: 277, column: 26, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10560, file: !1008, line: 277, column: 25)
!10566 = !DILocation(line: 277, column: 25, scope: !10560)
!10567 = !DILocation(line: 279, column: 54, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10565, file: !1008, line: 277, column: 36)
!10569 = !DILocation(line: 279, column: 59, scope: !10568)
!10570 = !DILocation(line: 279, column: 34, scope: !10568)
!10571 = !DILocation(line: 279, column: 74, scope: !10568)
!10572 = !DILocation(line: 279, column: 65, scope: !10568)
!10573 = !DILocation(line: 279, column: 63, scope: !10568)
!10574 = !DILocation(line: 279, column: 80, scope: !10568)
!10575 = !DILocation(line: 279, column: 30, scope: !10568)
!10576 = !DILocation(line: 280, column: 21, scope: !10568)
!10577 = !DILocation(line: 282, column: 49, scope: !10495)
!10578 = !DILocation(line: 282, column: 42, scope: !10495)
!10579 = !DILocation(line: 282, column: 17, scope: !10495)
!10580 = !DILocation(line: 282, column: 37, scope: !10495)
!10581 = !DILocation(line: 282, column: 33, scope: !10495)
!10582 = !DILocation(line: 282, column: 20, scope: !10495)
!10583 = !DILocation(line: 282, column: 47, scope: !10495)
!10584 = !DILocation(line: 283, column: 13, scope: !10495)
!10585 = !DILocation(line: 260, column: 39, scope: !10586)
!10586 = !DILexicalBlockFile(scope: !10491, file: !1008, discriminator: 2)
!10587 = !DILocation(line: 260, column: 13, scope: !10586)
!10588 = distinct !{!10588, !10589}
!10589 = !DILocation(line: 260, column: 13, scope: !10462)
!10590 = !DILocation(line: 285, column: 35, scope: !10383)
!10591 = !DILocation(line: 285, column: 15, scope: !10383)
!10592 = !DILocation(line: 285, column: 31, scope: !10383)
!10593 = !DILocation(line: 285, column: 18, scope: !10383)
!10594 = !DILocation(line: 285, column: 9, scope: !10383)
!10595 = !DILocation(line: 286, column: 5, scope: !10383)
!10596 = !DILocation(line: 236, column: 61, scope: !10597)
!10597 = !DILexicalBlockFile(scope: !10376, file: !1008, discriminator: 2)
!10598 = !DILocation(line: 236, column: 5, scope: !10597)
!10599 = distinct !{!10599, !10600}
!10600 = !DILocation(line: 236, column: 5, scope: !10203)
!10601 = !DILocation(line: 287, column: 1, scope: !10203)
!10602 = distinct !DISubprogram(name: "av_lfg_get", scope: !2031, file: !2031, line: 47, type: !10603, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!10603 = !DISubroutineType(types: !10604)
!10604 = !{!1016, !10605}
!10605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64, align: 64)
!10606 = !DILocalVariable(name: "c", arg: 1, scope: !10602, file: !2031, line: 47, type: !10605)
!10607 = !DILocation(line: 47, column: 46, scope: !10602)
!10608 = !DILocation(line: 48, column: 41, scope: !10602)
!10609 = !DILocation(line: 48, column: 44, scope: !10602)
!10610 = !DILocation(line: 48, column: 49, scope: !10602)
!10611 = !DILocation(line: 48, column: 54, scope: !10602)
!10612 = !DILocation(line: 48, column: 31, scope: !10602)
!10613 = !DILocation(line: 48, column: 34, scope: !10602)
!10614 = !DILocation(line: 48, column: 72, scope: !10602)
!10615 = !DILocation(line: 48, column: 75, scope: !10602)
!10616 = !DILocation(line: 48, column: 80, scope: !10602)
!10617 = !DILocation(line: 48, column: 85, scope: !10602)
!10618 = !DILocation(line: 48, column: 62, scope: !10602)
!10619 = !DILocation(line: 48, column: 65, scope: !10602)
!10620 = !DILocation(line: 48, column: 60, scope: !10602)
!10621 = !DILocation(line: 48, column: 14, scope: !10602)
!10622 = !DILocation(line: 48, column: 17, scope: !10602)
!10623 = !DILocation(line: 48, column: 23, scope: !10602)
!10624 = !DILocation(line: 48, column: 5, scope: !10602)
!10625 = !DILocation(line: 48, column: 8, scope: !10602)
!10626 = !DILocation(line: 48, column: 29, scope: !10602)
!10627 = !DILocation(line: 49, column: 21, scope: !10602)
!10628 = !DILocation(line: 49, column: 24, scope: !10602)
!10629 = !DILocation(line: 49, column: 29, scope: !10602)
!10630 = !DILocation(line: 49, column: 32, scope: !10602)
!10631 = !DILocation(line: 49, column: 12, scope: !10602)
!10632 = !DILocation(line: 49, column: 15, scope: !10602)
!10633 = !DILocation(line: 49, column: 5, scope: !10602)
!10634 = distinct !DISubprogram(name: "get_sbits", scope: !1867, file: !1867, line: 361, type: !10635, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!1015, !3957, !1015}
!10637 = !DILocation(line: 66, column: 98, scope: !7637, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 370, column: 16, scope: !10634)
!10639 = !DILocalVariable(name: "s", arg: 1, scope: !10634, file: !1867, line: 361, type: !3957)
!10640 = !DILocation(line: 361, column: 44, scope: !10634)
!10641 = !DILocalVariable(name: "n", arg: 2, scope: !10634, file: !1867, line: 361, type: !1015)
!10642 = !DILocation(line: 361, column: 51, scope: !10634)
!10643 = !DILocalVariable(name: "tmp", scope: !10634, file: !1867, line: 363, type: !1015)
!10644 = !DILocation(line: 363, column: 18, scope: !10634)
!10645 = !DILocalVariable(name: "re_index", scope: !10634, file: !1867, line: 368, type: !1016)
!10646 = !DILocation(line: 368, column: 18, scope: !10634)
!10647 = !DILocation(line: 368, column: 30, scope: !10634)
!10648 = !DILocation(line: 368, column: 34, scope: !10634)
!10649 = !DILocalVariable(name: "re_cache", scope: !10634, file: !1867, line: 368, type: !1016)
!10650 = !DILocation(line: 368, column: 78, scope: !10634)
!10651 = !DILocalVariable(name: "re_size_plus8", scope: !10634, file: !1867, line: 368, type: !1016)
!10652 = !DILocation(line: 368, column: 101, scope: !10634)
!10653 = !DILocation(line: 368, column: 118, scope: !10634)
!10654 = !DILocation(line: 368, column: 122, scope: !10634)
!10655 = !DILocation(line: 370, column: 60, scope: !10634)
!10656 = !DILocation(line: 370, column: 64, scope: !10634)
!10657 = !DILocation(line: 370, column: 74, scope: !10634)
!10658 = !DILocation(line: 370, column: 83, scope: !10634)
!10659 = !DILocation(line: 370, column: 71, scope: !10634)
!10660 = !DILocation(line: 370, column: 92, scope: !10634)
!10661 = !DILocation(line: 370, column: 16, scope: !10634)
!10662 = !DILocation(line: 68, column: 16, scope: !7637, inlinedAt: !10638)
!10663 = !DILocation(line: 68, column: 19, scope: !7637, inlinedAt: !10638)
!10664 = !DILocation(line: 68, column: 24, scope: !7637, inlinedAt: !10638)
!10665 = !DILocation(line: 68, column: 38, scope: !7637, inlinedAt: !10638)
!10666 = !DILocation(line: 68, column: 41, scope: !7637, inlinedAt: !10638)
!10667 = !DILocation(line: 68, column: 46, scope: !7637, inlinedAt: !10638)
!10668 = !DILocation(line: 68, column: 34, scope: !7637, inlinedAt: !10638)
!10669 = !DILocation(line: 68, column: 57, scope: !7637, inlinedAt: !10638)
!10670 = !DILocation(line: 68, column: 69, scope: !7637, inlinedAt: !10638)
!10671 = !DILocation(line: 68, column: 72, scope: !7637, inlinedAt: !10638)
!10672 = !DILocation(line: 68, column: 79, scope: !7637, inlinedAt: !10638)
!10673 = !DILocation(line: 68, column: 84, scope: !7637, inlinedAt: !10638)
!10674 = !DILocation(line: 68, column: 99, scope: !7637, inlinedAt: !10638)
!10675 = !DILocation(line: 68, column: 102, scope: !7637, inlinedAt: !10638)
!10676 = !DILocation(line: 68, column: 109, scope: !7637, inlinedAt: !10638)
!10677 = !DILocation(line: 68, column: 114, scope: !7637, inlinedAt: !10638)
!10678 = !DILocation(line: 68, column: 94, scope: !7637, inlinedAt: !10638)
!10679 = !DILocation(line: 68, column: 63, scope: !7637, inlinedAt: !10638)
!10680 = !DILocation(line: 370, column: 100, scope: !10634)
!10681 = !DILocation(line: 370, column: 109, scope: !10634)
!10682 = !DILocation(line: 370, column: 96, scope: !10634)
!10683 = !DILocation(line: 370, column: 14, scope: !10634)
!10684 = !DILocation(line: 371, column: 21, scope: !10634)
!10685 = !DILocation(line: 371, column: 31, scope: !10634)
!10686 = !DILocation(line: 371, column: 11, scope: !10634)
!10687 = !DILocation(line: 371, column: 9, scope: !10634)
!10688 = !DILocation(line: 372, column: 18, scope: !10634)
!10689 = !DILocation(line: 372, column: 36, scope: !10634)
!10690 = !DILocation(line: 372, column: 48, scope: !10634)
!10691 = !DILocation(line: 372, column: 45, scope: !10634)
!10692 = !DILocation(line: 372, column: 33, scope: !10634)
!10693 = !DILocation(line: 372, column: 17, scope: !10634)
!10694 = !DILocation(line: 372, column: 55, scope: !10695)
!10695 = !DILexicalBlockFile(scope: !10634, file: !1867, discriminator: 1)
!10696 = !DILocation(line: 372, column: 67, scope: !10695)
!10697 = !DILocation(line: 372, column: 64, scope: !10695)
!10698 = !DILocation(line: 372, column: 17, scope: !10695)
!10699 = !DILocation(line: 372, column: 74, scope: !10700)
!10700 = !DILexicalBlockFile(scope: !10634, file: !1867, discriminator: 2)
!10701 = !DILocation(line: 372, column: 17, scope: !10700)
!10702 = !DILocation(line: 372, column: 17, scope: !10703)
!10703 = !DILexicalBlockFile(scope: !10634, file: !1867, discriminator: 3)
!10704 = !DILocation(line: 372, column: 14, scope: !10703)
!10705 = !DILocation(line: 373, column: 18, scope: !10634)
!10706 = !DILocation(line: 373, column: 6, scope: !10634)
!10707 = !DILocation(line: 373, column: 10, scope: !10634)
!10708 = !DILocation(line: 373, column: 16, scope: !10634)
!10709 = !DILocation(line: 375, column: 12, scope: !10634)
!10710 = !DILocation(line: 375, column: 5, scope: !10634)
!10711 = distinct !DISubprogram(name: "NEG_SSR32", scope: !7788, file: !7788, line: 115, type: !10712, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!1043, !1043, !1276}
!10714 = !DILocalVariable(name: "a", arg: 1, scope: !10711, file: !7788, line: 115, type: !1043)
!10715 = !DILocation(line: 115, column: 42, scope: !10711)
!10716 = !DILocalVariable(name: "s", arg: 2, scope: !10711, file: !7788, line: 115, type: !1276)
!10717 = !DILocation(line: 115, column: 52, scope: !10711)
!10718 = !DILocation(line: 116, column: 5, scope: !10711)
!10719 = !DILocation(line: 118, column: 29, scope: !10711)
!10720 = !DILocation(line: 118, column: 28, scope: !10711)
!10721 = !DILocation(line: 118, column: 18, scope: !10711)
!10722 = !{i32 110405, i32 110419}
!10723 = !DILocation(line: 120, column: 12, scope: !10711)
!10724 = !DILocation(line: 120, column: 5, scope: !10711)
!10725 = distinct !DISubprogram(name: "idct6", scope: !1008, file: !1008, line: 166, type: !10726, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1852)
!10726 = !DISubroutineType(types: !10727)
!10727 = !{null, !1463}
!10728 = !DILocalVariable(name: "pre_mant", arg: 1, scope: !10725, file: !1008, line: 166, type: !1463)
!10729 = !DILocation(line: 166, column: 23, scope: !10725)
!10730 = !DILocalVariable(name: "tmp", scope: !10725, file: !1008, line: 168, type: !1015)
!10731 = !DILocation(line: 168, column: 9, scope: !10725)
!10732 = !DILocalVariable(name: "even0", scope: !10725, file: !1008, line: 169, type: !1015)
!10733 = !DILocation(line: 169, column: 9, scope: !10725)
!10734 = !DILocalVariable(name: "even1", scope: !10725, file: !1008, line: 169, type: !1015)
!10735 = !DILocation(line: 169, column: 16, scope: !10725)
!10736 = !DILocalVariable(name: "even2", scope: !10725, file: !1008, line: 169, type: !1015)
!10737 = !DILocation(line: 169, column: 23, scope: !10725)
!10738 = !DILocalVariable(name: "odd0", scope: !10725, file: !1008, line: 169, type: !1015)
!10739 = !DILocation(line: 169, column: 30, scope: !10725)
!10740 = !DILocalVariable(name: "odd1", scope: !10725, file: !1008, line: 169, type: !1015)
!10741 = !DILocation(line: 169, column: 36, scope: !10725)
!10742 = !DILocalVariable(name: "odd2", scope: !10725, file: !1008, line: 169, type: !1015)
!10743 = !DILocation(line: 169, column: 42, scope: !10725)
!10744 = !DILocation(line: 171, column: 12, scope: !10725)
!10745 = !DILocation(line: 171, column: 26, scope: !10725)
!10746 = !DILocation(line: 171, column: 24, scope: !10725)
!10747 = !DILocation(line: 171, column: 40, scope: !10725)
!10748 = !DILocation(line: 171, column: 38, scope: !10725)
!10749 = !DILocation(line: 171, column: 10, scope: !10725)
!10750 = !DILocation(line: 173, column: 15, scope: !10725)
!10751 = !DILocation(line: 173, column: 27, scope: !10725)
!10752 = !DILocation(line: 173, column: 41, scope: !10725)
!10753 = !DILocation(line: 173, column: 13, scope: !10725)
!10754 = !DILocation(line: 173, column: 11, scope: !10725)
!10755 = !DILocation(line: 174, column: 13, scope: !10725)
!10756 = !DILocation(line: 174, column: 25, scope: !10725)
!10757 = !DILocation(line: 174, column: 39, scope: !10725)
!10758 = !DILocation(line: 174, column: 11, scope: !10725)
!10759 = !DILocation(line: 174, column: 9, scope: !10725)
!10760 = !DILocation(line: 175, column: 14, scope: !10725)
!10761 = !DILocation(line: 175, column: 28, scope: !10725)
!10762 = !DILocation(line: 175, column: 26, scope: !10725)
!10763 = !DILocation(line: 175, column: 13, scope: !10725)
!10764 = !DILocation(line: 175, column: 41, scope: !10725)
!10765 = !DILocation(line: 175, column: 54, scope: !10725)
!10766 = !DILocation(line: 175, column: 12, scope: !10725)
!10767 = !DILocation(line: 175, column: 10, scope: !10725)
!10768 = !DILocation(line: 177, column: 13, scope: !10725)
!10769 = !DILocation(line: 177, column: 28, scope: !10725)
!10770 = !DILocation(line: 177, column: 32, scope: !10725)
!10771 = !DILocation(line: 177, column: 25, scope: !10725)
!10772 = !DILocation(line: 177, column: 11, scope: !10725)
!10773 = !DILocation(line: 178, column: 13, scope: !10725)
!10774 = !DILocation(line: 178, column: 27, scope: !10725)
!10775 = !DILocation(line: 178, column: 25, scope: !10725)
!10776 = !DILocation(line: 178, column: 11, scope: !10725)
!10777 = !DILocation(line: 180, column: 11, scope: !10725)
!10778 = !DILocation(line: 180, column: 9, scope: !10725)
!10779 = !DILocation(line: 181, column: 13, scope: !10725)
!10780 = !DILocation(line: 181, column: 19, scope: !10725)
!10781 = !DILocation(line: 181, column: 17, scope: !10725)
!10782 = !DILocation(line: 181, column: 11, scope: !10725)
!10783 = !DILocation(line: 182, column: 13, scope: !10725)
!10784 = !DILocation(line: 182, column: 19, scope: !10725)
!10785 = !DILocation(line: 182, column: 17, scope: !10725)
!10786 = !DILocation(line: 182, column: 11, scope: !10725)
!10787 = !DILocation(line: 184, column: 11, scope: !10725)
!10788 = !DILocation(line: 184, column: 9, scope: !10725)
!10789 = !DILocation(line: 185, column: 12, scope: !10725)
!10790 = !DILocation(line: 185, column: 18, scope: !10725)
!10791 = !DILocation(line: 185, column: 16, scope: !10725)
!10792 = !DILocation(line: 185, column: 32, scope: !10725)
!10793 = !DILocation(line: 185, column: 30, scope: !10725)
!10794 = !DILocation(line: 185, column: 10, scope: !10725)
!10795 = !DILocation(line: 186, column: 12, scope: !10725)
!10796 = !DILocation(line: 186, column: 18, scope: !10725)
!10797 = !DILocation(line: 186, column: 16, scope: !10725)
!10798 = !DILocation(line: 186, column: 32, scope: !10725)
!10799 = !DILocation(line: 186, column: 30, scope: !10725)
!10800 = !DILocation(line: 186, column: 10, scope: !10725)
!10801 = !DILocation(line: 188, column: 19, scope: !10725)
!10802 = !DILocation(line: 188, column: 27, scope: !10725)
!10803 = !DILocation(line: 188, column: 25, scope: !10725)
!10804 = !DILocation(line: 188, column: 5, scope: !10725)
!10805 = !DILocation(line: 188, column: 17, scope: !10725)
!10806 = !DILocation(line: 189, column: 19, scope: !10725)
!10807 = !DILocation(line: 189, column: 27, scope: !10725)
!10808 = !DILocation(line: 189, column: 25, scope: !10725)
!10809 = !DILocation(line: 189, column: 5, scope: !10725)
!10810 = !DILocation(line: 189, column: 17, scope: !10725)
!10811 = !DILocation(line: 190, column: 19, scope: !10725)
!10812 = !DILocation(line: 190, column: 27, scope: !10725)
!10813 = !DILocation(line: 190, column: 25, scope: !10725)
!10814 = !DILocation(line: 190, column: 5, scope: !10725)
!10815 = !DILocation(line: 190, column: 17, scope: !10725)
!10816 = !DILocation(line: 191, column: 19, scope: !10725)
!10817 = !DILocation(line: 191, column: 27, scope: !10725)
!10818 = !DILocation(line: 191, column: 25, scope: !10725)
!10819 = !DILocation(line: 191, column: 5, scope: !10725)
!10820 = !DILocation(line: 191, column: 17, scope: !10725)
!10821 = !DILocation(line: 192, column: 19, scope: !10725)
!10822 = !DILocation(line: 192, column: 27, scope: !10725)
!10823 = !DILocation(line: 192, column: 25, scope: !10725)
!10824 = !DILocation(line: 192, column: 5, scope: !10725)
!10825 = !DILocation(line: 192, column: 17, scope: !10725)
!10826 = !DILocation(line: 193, column: 19, scope: !10725)
!10827 = !DILocation(line: 193, column: 27, scope: !10725)
!10828 = !DILocation(line: 193, column: 25, scope: !10725)
!10829 = !DILocation(line: 193, column: 5, scope: !10725)
!10830 = !DILocation(line: 193, column: 17, scope: !10725)
!10831 = !DILocation(line: 194, column: 1, scope: !10725)
